{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Use zone-based XP system instead of base XP to avoid conflicts\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n\n      // Use zone XP if available, otherwise fallback to ultra boosted base XP\n      const baseXpReward = enemy.zoneXP || 5000; // Use zone XP system, fallback to 5000 for non-zone enemies\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    const playerDefense = newState.playerStats.defense;\n                    const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 5000; // SAME AS REGULAR KILL XP (5000 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  const impactX = projectile.targetX;\n                  const impactY = projectile.targetY;\n                  const enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    const enemyX = enemy.position.x + 17.5; // Center of enemy\n                    const enemyY = enemy.position.y + 17.5;\n                    const distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      const newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    const enemy = newState.enemies[enemyIndex];\n                    const newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}! (${enemy.health} → ${newHealth})`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      console.log(`🔍 XP DEBUG: Scheduling handleEnemyKill for ${enemy.name} (ID: ${enemy.id})`);\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 NON-FATAL DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    } else {\n                      console.log(`⚠️ XP DEBUG: Enemy ${enemy.name} already dead (health: ${enemy.health}), no XP awarded`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1130,"map":[[13,2,93,0,"Object"],[13,8,93,0],[13,9,93,0,"defineProperty"],[13,23,93,0],[13,24,93,0,"exports"],[13,31,93,0],[14,4,93,0,"enumerable"],[14,14,93,0],[15,4,93,0,"get"],[15,7,93,0],[15,18,93,0,"get"],[15,19,93,0],[16,6,93,0],[16,13,93,0,"useCombat"],[16,22,93,0],[17,4,93,0],[18,2,93,0],[19,2,103,0,"Object"],[19,8,103,0],[19,9,103,0,"defineProperty"],[19,23,103,0],[19,24,103,0,"exports"],[19,31,103,0],[20,4,103,0,"enumerable"],[20,14,103,0],[21,4,103,0,"get"],[21,7,103,0],[21,18,103,0,"get"],[21,19,103,0],[22,6,103,0],[22,13,103,0,"CombatProvider"],[22,27,103,0],[23,4,103,0],[24,2,103,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,91,0],[34,8,91,6,"CombatContext"],[34,21,91,19],[34,37,91,22],[34,41,91,22,"createContext"],[34,47,91,35],[34,48,91,35,"createContext"],[34,61,91,35],[34,63,91,67,"undefined"],[34,72,91,76],[34,73,91,77],[35,2,93,7],[35,8,93,13,"useCombat"],[35,17,93,22],[35,20,93,25,"useCombat"],[35,21,93,25],[35,26,93,50],[36,4,94,2],[36,10,94,8,"context"],[36,17,94,15],[36,20,94,18],[36,24,94,18,"useContext"],[36,30,94,28],[36,31,94,28,"useContext"],[36,41,94,28],[36,43,94,29,"CombatContext"],[36,56,94,42],[36,57,94,43],[37,4,95,2],[37,8,95,6],[37,9,95,7,"context"],[37,16,95,14],[37,18,95,16],[38,6,96,4],[38,12,96,10],[38,16,96,14,"Error"],[38,21,96,19],[38,22,96,20],[38,70,96,68],[38,71,96,69],[39,4,97,2],[40,4,98,2],[40,11,98,9,"context"],[40,18,98,16],[41,2,99,0],[41,3,99,1],[42,2,101,0],[42,6,101,4,"enemyCounter"],[42,18,101,16],[42,21,101,19],[42,22,101,20],[42,23,101,21],[42,24,101,22],[44,2,103,7],[44,8,103,13,"CombatProvider"],[44,22,103,27],[44,25,103,30,"CombatProvider"],[44,26,103,31],[45,4,103,33,"children"],[46,2,103,67],[46,3,103,68],[46,8,103,73],[47,4,104,2],[47,10,104,8,"game"],[47,14,104,12],[47,17,104,15],[47,21,104,15,"useGame"],[47,33,104,22],[47,34,104,22,"useGame"],[47,41,104,22],[47,43,104,23],[47,44,104,24],[48,4,105,2],[48,10,105,8],[49,6,105,10,"currentZone"],[49,17,105,21],[50,6,105,23,"currentZoneLevel"],[50,22,105,39],[51,6,105,41,"recordEnemyKill"],[51,21,105,56],[52,6,105,58,"spawnZoneEnemy"],[53,4,105,73],[53,5,105,74],[53,8,105,77],[53,12,105,77,"useZone"],[53,24,105,84],[53,25,105,84,"useZone"],[53,32,105,84],[53,34,105,85],[53,35,105,86],[55,4,107,2],[56,4,108,2],[56,10,108,8,"initialCombatState"],[56,28,108,39],[56,31,108,42],[57,6,109,4,"isInCombat"],[57,16,109,14],[57,18,109,16],[57,23,109,21],[58,6,110,4,"currentTick"],[58,17,110,15],[58,19,110,17],[58,20,110,18],[59,6,111,4,"enemies"],[59,13,111,11],[59,15,111,13],[59,17,111,15],[60,6,112,4,"abilityManager"],[60,20,112,18],[60,22,112,20],[60,26,112,24,"AbilityManager"],[60,44,112,38],[60,45,112,38,"AbilityManager"],[60,59,112,38],[60,60,112,39],[60,61,112,40],[61,6,113,4,"statusEffects"],[61,19,113,17],[61,21,113,19],[61,25,113,23,"StatusEffectManager"],[61,44,113,42],[61,45,113,42,"StatusEffectManager"],[61,64,113,42],[61,65,113,43],[61,66,113,44],[62,6,114,4,"playerStats"],[62,17,114,15],[62,19,114,17],[63,8,115,6,"attack"],[63,14,115,12],[63,16,115,14],[63,18,115,16],[64,8,115,18],[65,8,116,6,"defense"],[65,15,116,13],[65,17,116,15],[65,18,116,16],[66,8,117,6,"health"],[66,14,117,12],[66,16,117,14],[66,19,117,17],[67,8,118,6,"maxHealth"],[67,17,118,15],[67,19,118,17],[67,22,118,20],[68,8,119,6,"critChance"],[68,18,119,16],[68,20,119,18],[68,21,119,19],[69,8,120,6,"critDamage"],[69,18,120,16],[69,20,120,18],[69,23,120,21],[70,8,121,6,"cooldownReduction"],[70,25,121,23],[70,27,121,25],[71,6,122,4],[72,4,123,2],[72,5,123,3],[73,4,125,2],[73,10,125,8],[73,11,125,9,"combatState"],[73,22,125,20],[73,24,125,22,"setCombatState"],[73,38,125,36],[73,39,125,37],[73,42,125,40],[73,46,125,40,"useState"],[73,52,125,48],[73,53,125,48,"useState"],[73,61,125,48],[73,63,125,62,"initialCombatState"],[73,81,125,80],[73,82,125,81],[75,4,127,2],[76,4,128,2],[76,8,128,2,"useEffect"],[76,14,128,11],[76,15,128,11,"useEffect"],[76,24,128,11],[76,26,128,12],[76,32,128,18],[77,6,129,4],[77,10,129,8,"game"],[77,14,129,12],[77,15,129,13,"gameState"],[77,24,129,22],[77,25,129,23,"abilityData"],[77,36,129,34],[77,40,129,38,"combatState"],[77,51,129,49],[77,52,129,50,"abilityManager"],[77,66,129,64],[77,68,129,66],[78,8,130,6,"console"],[78,15,130,13],[78,16,130,14,"log"],[78,19,130,17],[78,20,130,18],[78,68,130,66],[78,70,130,68,"game"],[78,74,130,72],[78,75,130,73,"gameState"],[78,84,130,82],[78,85,130,83,"abilityData"],[78,96,130,94],[78,97,130,95],[79,8,131,6,"combatState"],[79,19,131,17],[79,20,131,18,"abilityManager"],[79,34,131,32],[79,35,131,33,"restoreFromSaveData"],[79,54,131,52],[79,55,131,53,"game"],[79,59,131,57],[79,60,131,58,"gameState"],[79,69,131,67],[79,70,131,68,"abilityData"],[79,81,131,79],[79,82,131,80],[81,8,133,6],[82,8,134,6,"setCombatState"],[82,22,134,20],[82,23,134,21,"prev"],[82,27,134,25],[82,32,134,30],[83,10,134,32],[83,13,134,35,"prev"],[84,8,134,40],[84,9,134,41],[84,10,134,42],[84,11,134,43],[85,6,135,4],[86,4,136,2],[86,5,136,3],[86,7,136,5],[86,8,136,6,"game"],[86,12,136,10],[86,13,136,11,"gameState"],[86,22,136,20],[86,23,136,21,"abilityData"],[86,34,136,32],[86,36,136,34,"combatState"],[86,47,136,45],[86,48,136,46,"abilityManager"],[86,62,136,60],[86,63,136,61],[86,64,136,62],[88,4,138,2],[89,4,139,2],[89,8,139,2,"useEffect"],[89,14,139,11],[89,15,139,11,"useEffect"],[89,24,139,11],[89,26,139,12],[89,32,139,18],[90,6,140,4],[90,10,140,8,"game"],[90,14,140,12],[90,15,140,13,"gameState"],[90,24,140,22],[90,25,140,23,"ninja"],[90,30,140,28],[90,32,140,30],[91,8,141,6],[91,14,141,12,"effectiveStats"],[91,28,141,26],[91,31,141,29,"game"],[91,35,141,33],[91,36,141,34,"getEffectiveStats"],[91,53,141,51],[91,54,141,52],[91,55,141,53],[92,8,143,6,"setCombatState"],[92,22,143,20],[92,23,143,21,"prev"],[92,27,143,25],[92,31,143,29],[93,10,144,8],[94,10,145,8],[94,14,145,12,"prev"],[94,18,145,16],[94,19,145,17,"playerStats"],[94,30,145,28],[94,31,145,29,"maxHealth"],[94,40,145,38],[94,45,145,43],[94,48,145,46],[94,52,145,50,"prev"],[94,56,145,54],[94,57,145,55,"playerStats"],[94,68,145,66],[94,69,145,67,"attack"],[94,75,145,73],[94,80,145,78],[94,82,145,80],[94,84,145,82],[95,12,146,10,"console"],[95,19,146,17],[95,20,146,18,"log"],[95,23,146,21],[95,24,146,22],[95,60,146,58,"effectiveStats"],[95,74,146,72],[95,75,146,73,"health"],[95,81,146,79],[95,93,146,91,"effectiveStats"],[95,107,146,105],[95,108,146,106,"attack"],[95,114,146,112],[95,127,146,125,"effectiveStats"],[95,141,146,139],[95,142,146,140,"defense"],[95,149,146,147],[95,151,146,149],[95,152,146,150],[96,12,148,10],[96,19,148,17],[97,14,149,12],[97,17,149,15,"prev"],[97,21,149,19],[98,14,150,12,"playerStats"],[98,25,150,23],[98,27,150,25],[99,16,151,14,"attack"],[99,22,151,20],[99,24,151,22,"effectiveStats"],[99,38,151,36],[99,39,151,37,"attack"],[99,45,151,43],[100,16,152,14,"defense"],[100,23,152,21],[100,25,152,23,"effectiveStats"],[100,39,152,37],[100,40,152,38,"defense"],[100,47,152,45],[101,16,153,14,"health"],[101,22,153,20],[101,24,153,22,"effectiveStats"],[101,38,153,36],[101,39,153,37,"health"],[101,45,153,43],[102,16,153,45],[103,16,154,14,"maxHealth"],[103,25,154,23],[103,27,154,25,"effectiveStats"],[103,41,154,39],[103,42,154,40,"health"],[103,48,154,46],[104,16,155,14,"critChance"],[104,26,155,24],[104,28,155,26,"effectiveStats"],[104,42,155,40],[104,43,155,41,"critChance"],[104,53,155,51],[104,57,155,55],[104,58,155,56],[105,16,156,14,"critDamage"],[105,26,156,24],[105,28,156,26,"effectiveStats"],[105,42,156,40],[105,43,156,41,"critDamage"],[105,53,156,51],[105,57,156,55],[105,60,156,58],[106,16,157,14,"cooldownReduction"],[106,33,157,31],[106,35,157,33,"effectiveStats"],[106,49,157,47],[106,50,157,48,"cooldownReduction"],[106,67,157,65],[106,71,157,69],[107,14,158,12],[108,12,159,10],[108,13,159,11],[109,10,160,8],[110,10,161,8],[110,17,161,15,"prev"],[110,21,161,19],[111,8,162,6],[111,9,162,7],[111,10,162,8],[112,6,163,4],[113,4,164,2],[113,5,164,3],[113,7,164,5],[113,8,164,6,"game"],[113,12,164,10],[113,13,164,11,"gameState"],[113,22,164,20],[113,23,164,21,"ninja"],[113,28,164,26],[113,29,164,27],[113,30,164,28],[114,4,166,2],[114,10,166,8],[114,11,166,9,"projectiles"],[114,22,166,20],[114,24,166,22,"setProjectiles"],[114,38,166,36],[114,39,166,37],[114,42,166,40],[114,46,166,40,"useState"],[114,52,166,48],[114,53,166,48,"useState"],[114,61,166,48],[114,63,166,69],[114,65,166,71],[114,66,166,72],[115,4,167,2],[115,10,167,8],[115,11,167,9,"lastExplosionTime"],[115,28,167,26],[115,30,167,28,"setLastExplosionTime"],[115,50,167,48],[115,51,167,49],[115,54,167,52],[115,58,167,52,"useState"],[115,64,167,60],[115,65,167,60,"useState"],[115,73,167,60],[115,75,167,69],[115,76,167,70],[115,77,167,71],[116,4,168,2],[117,4,169,2],[119,4,171,2],[120,4,172,2],[120,10,172,8,"handleEnemyKill"],[120,25,172,23],[120,28,172,26],[120,32,172,26,"useCallback"],[120,38,172,37],[120,39,172,37,"useCallback"],[120,50,172,37],[120,52,172,39,"enemy"],[120,57,172,57],[120,61,172,62],[121,6,173,4,"console"],[121,13,173,11],[121,14,173,12,"log"],[121,17,173,15],[121,18,173,16],[121,61,173,59,"enemy"],[121,66,173,64],[121,67,173,65,"name"],[121,71,173,69],[121,80,173,78,"enemy"],[121,85,173,83],[121,86,173,84,"id"],[121,88,173,86],[121,91,173,89],[121,92,173,90],[122,6,174,4,"console"],[122,13,174,11],[122,14,174,12,"log"],[122,17,174,15],[122,18,174,16],[122,73,174,71],[122,75,174,73,"enemy"],[122,80,174,78],[122,81,174,79,"id"],[122,83,174,81],[122,84,174,82],[124,6,176,4],[125,6,177,4],[125,12,177,10,"xpMultiplier"],[125,24,177,22],[125,27,177,25,"game"],[125,31,177,29],[125,32,177,30,"gameState"],[125,41,177,39],[125,42,177,40,"subscriptionBenefits"],[125,62,177,60],[125,64,177,62,"xp_multiplier"],[125,77,177,75],[125,81,177,79],[125,84,177,82],[126,6,178,4],[126,12,178,10,"dropMultiplier"],[126,26,178,24],[126,29,178,27,"game"],[126,33,178,31],[126,34,178,32,"gameState"],[126,43,178,41],[126,44,178,42,"subscriptionBenefits"],[126,64,178,62],[126,66,178,64,"drop_multiplier"],[126,81,178,79],[126,85,178,83],[126,88,178,86],[128,6,180,4],[129,6,181,4],[129,12,181,10,"baseXpReward"],[129,24,181,22],[129,27,181,25,"enemy"],[129,32,181,30],[129,33,181,31,"zoneXP"],[129,39,181,37],[129,43,181,41],[129,47,181,45],[129,48,181,46],[129,49,181,47],[130,6,182,4],[130,12,182,10,"xpReward"],[130,20,182,18],[130,23,182,21,"Math"],[130,27,182,25],[130,28,182,26,"floor"],[130,33,182,31],[130,34,182,32,"baseXpReward"],[130,46,182,44],[130,49,182,47,"xpMultiplier"],[130,61,182,59],[130,62,182,60],[131,6,183,4],[131,12,183,10,"goldReward"],[131,22,183,20],[131,25,183,23,"Math"],[131,29,183,27],[131,30,183,28,"floor"],[131,35,183,33],[131,36,183,34],[131,41,183,39],[131,44,183,42,"dropMultiplier"],[131,58,183,56],[131,59,183,57],[131,60,183,58],[131,61,183,59],[133,6,185,4,"console"],[133,13,185,11],[133,14,185,12,"log"],[133,17,185,15],[133,18,185,16],[133,48,185,46,"xpReward"],[133,56,185,54],[133,67,185,65,"goldReward"],[133,77,185,75],[133,93,185,91],[133,94,185,92],[134,6,186,4,"console"],[134,13,186,11],[134,14,186,12,"log"],[134,17,186,15],[134,18,186,16],[134,60,186,58,"xpMultiplier"],[134,72,186,70],[134,94,186,92,"dropMultiplier"],[134,108,186,106],[134,110,186,108],[134,111,186,109],[135,6,187,4,"console"],[135,13,187,11],[135,14,187,12,"log"],[135,17,187,15],[135,18,187,16],[135,54,187,52,"baseXpReward"],[135,66,187,64],[135,81,187,79,"xpReward"],[135,89,187,87],[135,91,187,89],[135,92,187,90],[136,6,188,4,"console"],[136,13,188,11],[136,14,188,12,"log"],[136,17,188,15],[136,18,188,16],[136,58,188,56],[136,60,188,58,"JSON"],[136,64,188,62],[136,65,188,63,"stringify"],[136,74,188,72],[136,75,188,73,"game"],[136,79,188,77],[136,80,188,78,"gameState"],[136,89,188,87],[136,90,188,88,"subscriptionBenefits"],[136,110,188,108],[136,111,188,109],[136,112,188,110],[137,6,189,4,"console"],[137,13,189,11],[137,14,189,12,"log"],[137,17,189,15],[137,18,189,16],[137,49,189,47,"Platform"],[137,57,189,55],[137,58,189,55,"default"],[137,65,189,55],[137,66,189,56,"OS"],[137,68,189,58],[137,79,189,69,"Date"],[137,83,189,73],[137,84,189,74,"now"],[137,87,189,77],[137,88,189,78],[137,89,189,79],[137,91,189,81],[137,92,189,82],[139,6,191,4],[140,6,192,4],[141,6,193,4,"setTimeout"],[141,16,193,14],[141,17,193,15],[141,23,193,21],[142,8,194,6,"console"],[142,15,194,13],[142,16,194,14,"log"],[142,19,194,17],[142,20,194,18],[142,78,194,76],[142,79,194,77],[144,8,196,6],[145,8,197,6,"game"],[145,12,197,10],[145,13,197,11,"updateNinja"],[145,24,197,22],[145,25,197,24,"prev"],[145,29,197,28],[145,33,197,33],[146,10,198,8,"console"],[146,17,198,15],[146,18,198,16,"log"],[146,21,198,19],[146,22,198,20],[146,54,198,52,"prev"],[146,58,198,56],[146,59,198,57,"experience"],[146,69,198,67],[146,81,198,79,"prev"],[146,85,198,83],[146,86,198,84,"experience"],[146,96,198,94],[146,99,198,97,"xpReward"],[146,107,198,105],[146,109,198,107],[146,110,198,108],[147,10,199,8,"console"],[147,17,199,15],[147,18,199,16,"log"],[147,21,199,19],[147,22,199,20],[147,56,199,54,"prev"],[147,60,199,58],[147,61,199,59,"gold"],[147,65,199,63],[147,77,199,75,"prev"],[147,81,199,79],[147,82,199,80,"gold"],[147,86,199,84],[147,89,199,87,"goldReward"],[147,99,199,97],[147,101,199,99],[147,102,199,100],[148,10,200,8],[148,17,200,15],[149,12,201,10,"experience"],[149,22,201,20],[149,24,201,22,"prev"],[149,28,201,26],[149,29,201,27,"experience"],[149,39,201,37],[149,42,201,40,"xpReward"],[149,50,201,48],[150,12,202,10,"gold"],[150,16,202,14],[150,18,202,16,"prev"],[150,22,202,20],[150,23,202,21,"gold"],[150,27,202,25],[150,30,202,28,"goldReward"],[151,10,203,8],[151,11,203,9],[152,8,204,6],[152,9,204,7],[152,10,204,8],[154,8,206,6],[155,8,207,6],[155,14,207,12,"zoneEnemy"],[155,23,207,21],[155,26,207,24],[156,10,208,8,"id"],[156,12,208,10],[156,14,208,12,"enemy"],[156,19,208,17],[156,20,208,18,"id"],[156,22,208,20],[157,10,209,8,"typeId"],[157,16,209,14],[157,18,209,16,"enemy"],[157,23,209,21],[157,24,209,22,"zoneTypeId"],[157,34,209,32],[157,38,209,36],[157,48,209,46],[158,10,209,48],[159,10,210,8,"name"],[159,14,210,12],[159,16,210,14,"enemy"],[159,21,210,19],[159,22,210,20,"name"],[159,26,210,24],[160,10,211,8,"icon"],[160,14,211,12],[160,16,211,14],[160,20,211,18],[161,10,211,20],[162,10,212,8,"hp"],[162,12,212,10],[162,14,212,12],[162,15,212,13],[163,10,212,15],[164,10,213,8,"maxHP"],[164,15,213,13],[164,17,213,15,"enemy"],[164,22,213,20],[164,23,213,21,"maxHealth"],[164,32,213,30],[165,10,214,8,"attack"],[165,16,214,14],[165,18,214,16,"enemy"],[165,23,214,21],[165,24,214,22,"stats"],[165,29,214,27],[165,30,214,28,"attack"],[165,36,214,34],[166,10,215,8,"xp"],[166,12,215,10],[166,14,215,12,"enemy"],[166,19,215,17],[166,20,215,18,"zoneXP"],[166,26,215,24],[166,30,215,28],[166,32,215,30],[167,10,215,32],[168,10,216,8,"position"],[168,18,216,16],[168,20,216,18,"enemy"],[168,25,216,23],[168,26,216,24,"position"],[169,8,217,6],[169,9,217,7],[170,8,219,6,"console"],[170,15,219,13],[170,16,219,14,"log"],[170,19,219,17],[170,20,219,18],[170,40,219,38,"zoneEnemy"],[170,49,219,47],[170,50,219,48,"name"],[170,54,219,52],[170,59,219,57,"zoneEnemy"],[170,68,219,66],[170,69,219,67,"typeId"],[170,75,219,73],[170,113,219,111],[170,114,219,112],[171,8,220,6,"recordEnemyKill"],[171,23,220,21],[171,24,220,22,"zoneEnemy"],[171,33,220,31],[171,34,220,32],[172,6,221,4],[172,7,221,5],[172,9,221,7],[172,10,221,8],[172,11,221,9],[172,12,221,10],[172,13,221,11],[173,4,222,2],[173,5,222,3],[173,7,222,5],[173,8,222,6,"game"],[173,12,222,10],[173,13,222,11,"updateNinja"],[173,24,222,22],[173,26,222,24,"recordEnemyKill"],[173,41,222,39],[173,42,222,40],[173,43,222,41],[175,4,224,2],[176,4,225,2],[176,10,225,8,"handleCombatTick"],[176,26,225,24],[176,29,225,27,"React"],[176,34,225,32],[176,35,225,32,"default"],[176,42,225,32],[176,43,225,33,"useCallback"],[176,54,225,44],[176,55,225,45],[176,61,225,51],[177,6,226,4,"console"],[177,13,226,11],[177,14,226,12,"log"],[177,17,226,15],[177,18,226,16],[177,87,226,85],[177,88,226,86],[178,6,227,4,"console"],[178,13,227,11],[178,14,227,12,"log"],[178,17,227,15],[178,18,227,16],[178,65,227,63,"isManualControlActive"],[178,86,227,84],[178,99,227,97,"game"],[178,103,227,101],[178,104,227,102,"gameState"],[178,113,227,111],[178,114,227,112,"isAlive"],[178,121,227,119],[178,123,227,121],[178,124,227,122],[179,6,229,4],[179,10,229,8,"enemiesToKill"],[179,23,229,36],[179,26,229,39],[179,28,229,41],[179,29,229,42],[179,30,229,43],[181,6,231,4,"setCombatState"],[181,20,231,18],[181,21,231,19,"prev"],[181,25,231,23],[181,29,231,27],[182,8,232,6],[182,14,232,12,"newTick"],[182,21,232,19],[182,24,232,22,"combatEngine"],[182,43,232,34],[182,44,232,34,"combatEngine"],[182,56,232,34],[182,57,232,35,"getCurrentTick"],[182,71,232,49],[182,72,232,50],[182,73,232,51],[183,8,233,6],[183,14,233,12,"newState"],[183,22,233,20],[183,25,233,23],[184,10,233,25],[184,13,233,28,"prev"],[184,17,233,32],[185,10,233,34,"currentTick"],[185,21,233,45],[185,23,233,47,"newTick"],[186,8,233,55],[186,9,233,56],[187,8,235,6],[187,12,235,10],[187,13,235,11,"newState"],[187,21,235,19],[187,22,235,20,"isInCombat"],[187,32,235,30],[187,34,235,32],[187,41,235,39,"newState"],[187,49,235,47],[189,8,237,6],[190,8,238,6,"newState"],[190,16,238,14],[190,17,238,15,"abilityManager"],[190,31,238,29],[190,32,238,30,"updateCooldowns"],[190,47,238,45],[190,48,238,46,"newTick"],[190,55,238,53],[190,56,238,54],[192,8,240,6],[193,8,241,6],[193,14,241,12,"effectResults"],[193,27,241,25],[193,30,241,28,"newState"],[193,38,241,36],[193,39,241,37,"statusEffects"],[193,52,241,50],[193,53,241,51,"processTick"],[193,64,241,62],[193,65,241,63,"newTick"],[193,72,241,70],[193,73,241,71],[195,8,243,6],[196,8,244,6,"effectResults"],[196,21,244,19],[196,22,244,20,"forEach"],[196,29,244,27],[196,30,244,28],[196,31,244,29,"results"],[196,38,244,36],[196,40,244,38,"entityId"],[196,48,244,46],[196,53,244,51],[197,10,245,8],[197,16,245,14,"enemyIndex"],[197,26,245,24],[197,29,245,27,"newState"],[197,37,245,35],[197,38,245,36,"enemies"],[197,45,245,43],[197,46,245,44,"findIndex"],[197,55,245,53],[197,56,245,54,"e"],[197,57,245,55],[197,61,245,59,"e"],[197,62,245,60],[197,63,245,61,"id"],[197,65,245,63],[197,70,245,68,"entityId"],[197,78,245,76],[197,79,245,77],[198,10,246,8],[198,14,246,12,"enemyIndex"],[198,24,246,22],[198,28,246,26],[198,29,246,27],[198,31,246,29],[199,12,247,10,"results"],[199,19,247,17],[199,20,247,18,"forEach"],[199,27,247,25],[199,28,247,26,"result"],[199,34,247,32],[199,38,247,36],[200,14,248,12,"newState"],[200,22,248,20],[200,23,248,21,"enemies"],[200,30,248,28],[200,31,248,29,"enemyIndex"],[200,41,248,39],[200,42,248,40],[200,43,248,41,"health"],[200,49,248,47],[200,53,248,51,"result"],[200,59,248,57],[200,60,248,58,"damage"],[200,66,248,64],[201,14,249,12,"newState"],[201,22,249,20],[201,23,249,21,"enemies"],[201,30,249,28],[201,31,249,29,"enemyIndex"],[201,41,249,39],[201,42,249,40],[201,43,249,41,"lastDamaged"],[201,54,249,52],[201,57,249,55,"newTick"],[201,64,249,62],[202,12,250,10],[202,13,250,11],[202,14,250,12],[203,10,251,8],[204,8,252,6],[204,9,252,7],[204,10,252,8],[206,8,254,6],[207,8,255,6],[208,8,256,6],[208,12,256,10,"newState"],[208,20,256,18],[208,21,256,19,"playerStats"],[208,32,256,30],[208,36,256,34,"game"],[208,40,256,38],[208,41,256,39,"gameState"],[208,50,256,48],[208,51,256,49,"ninja"],[208,56,256,54],[208,58,256,56],[209,10,257,8],[209,16,257,14,"effectiveStats"],[209,30,257,28],[209,33,257,31,"game"],[209,37,257,35],[209,38,257,36,"getEffectiveStats"],[209,55,257,53],[209,56,257,54],[209,57,257,55],[211,10,259,8],[212,10,260,8],[212,14,260,12,"newState"],[212,22,260,20],[212,23,260,21,"playerStats"],[212,34,260,32],[212,35,260,33,"attack"],[212,41,260,39],[212,46,260,44,"effectiveStats"],[212,60,260,58],[212,61,260,59,"attack"],[212,67,260,65],[212,71,261,12,"newState"],[212,79,261,20],[212,80,261,21,"playerStats"],[212,91,261,32],[212,92,261,33,"defense"],[212,99,261,40],[212,104,261,45,"effectiveStats"],[212,118,261,59],[212,119,261,60,"defense"],[212,126,261,67],[212,130,262,12,"newState"],[212,138,262,20],[212,139,262,21,"playerStats"],[212,150,262,32],[212,151,262,33,"maxHealth"],[212,160,262,42],[212,165,262,47,"effectiveStats"],[212,179,262,61],[212,180,262,62,"maxHealth"],[212,189,262,71],[212,191,262,73],[213,12,264,10,"console"],[213,19,264,17],[213,20,264,18,"log"],[213,23,264,21],[213,24,264,22],[213,58,264,56,"newState"],[213,66,264,64],[213,67,264,65,"playerStats"],[213,78,264,76],[213,79,264,77,"attack"],[213,85,264,83],[213,91,264,89,"effectiveStats"],[213,105,264,103],[213,106,264,104,"attack"],[213,112,264,110],[213,125,264,123,"newState"],[213,133,264,131],[213,134,264,132,"playerStats"],[213,145,264,143],[213,146,264,144,"defense"],[213,153,264,151],[213,159,264,157,"effectiveStats"],[213,173,264,171],[213,174,264,172,"defense"],[213,181,264,179],[213,192,264,190,"newState"],[213,200,264,198],[213,201,264,199,"playerStats"],[213,212,264,210],[213,213,264,211,"maxHealth"],[213,222,264,220],[213,228,264,226,"effectiveStats"],[213,242,264,240],[213,243,264,241,"maxHealth"],[213,252,264,250],[213,254,264,252],[213,255,264,253],[215,12,266,10],[216,12,267,10],[216,16,267,14,"newHealth"],[216,25,267,23],[216,28,267,26,"newState"],[216,36,267,34],[216,37,267,35,"playerStats"],[216,48,267,46],[216,49,267,47,"health"],[216,55,267,53],[217,12,268,10],[217,16,268,14,"newState"],[217,24,268,22],[217,25,268,23,"playerStats"],[217,36,268,34],[217,37,268,35,"maxHealth"],[217,46,268,44],[217,51,268,49,"effectiveStats"],[217,65,268,63],[217,66,268,64,"maxHealth"],[217,75,268,73],[217,77,268,75],[218,14,269,12],[219,14,270,12],[219,18,270,16,"effectiveStats"],[219,32,270,30],[219,33,270,31,"maxHealth"],[219,42,270,40],[219,45,270,43,"newState"],[219,53,270,51],[219,54,270,52,"playerStats"],[219,65,270,63],[219,66,270,64,"maxHealth"],[219,75,270,73],[219,78,270,76],[219,81,270,79],[219,83,270,81],[220,16,271,14],[221,16,272,14],[221,22,272,20,"healthRatio"],[221,33,272,31],[221,36,272,34,"newState"],[221,44,272,42],[221,45,272,43,"playerStats"],[221,56,272,54],[221,57,272,55,"maxHealth"],[221,66,272,64],[221,69,272,67],[221,70,272,68],[221,73,273,16,"newState"],[221,81,273,24],[221,82,273,25,"playerStats"],[221,93,273,36],[221,94,273,37,"health"],[221,100,273,43],[221,103,273,46,"newState"],[221,111,273,54],[221,112,273,55,"playerStats"],[221,123,273,66],[221,124,273,67,"maxHealth"],[221,133,273,76],[221,136,273,79],[221,137,273,80],[222,16,274,14,"newHealth"],[222,25,274,23],[222,28,274,26,"Math"],[222,32,274,30],[222,33,274,31,"floor"],[222,38,274,36],[222,39,274,37,"effectiveStats"],[222,53,274,51],[222,54,274,52,"maxHealth"],[222,63,274,61],[222,66,274,64,"healthRatio"],[222,77,274,75],[222,78,274,76],[223,14,275,12],[223,15,275,13],[223,21,275,19],[223,25,275,23,"newState"],[223,33,275,31],[223,34,275,32,"playerStats"],[223,45,275,43],[223,46,275,44,"health"],[223,52,275,50],[223,55,275,53,"effectiveStats"],[223,69,275,67],[223,70,275,68,"maxHealth"],[223,79,275,77],[223,81,275,79],[224,16,276,14],[225,16,277,14,"newHealth"],[225,25,277,23],[225,28,277,26,"effectiveStats"],[225,42,277,40],[225,43,277,41,"maxHealth"],[225,52,277,50],[226,14,278,12],[227,14,279,12],[228,12,280,10],[229,12,282,10,"newState"],[229,20,282,18],[229,21,282,19,"playerStats"],[229,32,282,30],[229,35,282,33],[230,14,283,12],[230,17,283,15,"newState"],[230,25,283,23],[230,26,283,24,"playerStats"],[230,37,283,35],[231,14,284,12,"attack"],[231,20,284,18],[231,22,284,20,"effectiveStats"],[231,36,284,34],[231,37,284,35,"attack"],[231,43,284,41],[232,14,285,12,"defense"],[232,21,285,19],[232,23,285,21,"effectiveStats"],[232,37,285,35],[232,38,285,36,"defense"],[232,45,285,43],[233,14,286,12,"maxHealth"],[233,23,286,21],[233,25,286,23,"effectiveStats"],[233,39,286,37],[233,40,286,38,"maxHealth"],[233,49,286,47],[234,14,286,49],[235,14,287,12,"health"],[235,20,287,18],[235,22,287,20,"newHealth"],[235,31,287,29],[236,14,287,31],[237,14,288,12,"critChance"],[237,24,288,22],[237,26,288,24,"effectiveStats"],[237,40,288,38],[237,41,288,39,"critChance"],[237,51,288,49],[237,55,288,53,"newState"],[237,63,288,61],[237,64,288,62,"playerStats"],[237,75,288,73],[237,76,288,74,"critChance"],[237,86,288,84],[238,14,289,12,"critDamage"],[238,24,289,22],[238,26,289,24,"effectiveStats"],[238,40,289,38],[238,41,289,39,"critDamage"],[238,51,289,49],[238,55,289,53,"newState"],[238,63,289,61],[238,64,289,62,"playerStats"],[238,75,289,73],[238,76,289,74,"critDamage"],[238,86,289,84],[239,14,290,12,"cooldownReduction"],[239,31,290,29],[239,33,290,31,"effectiveStats"],[239,47,290,45],[239,48,290,46,"cooldownReduction"],[239,65,290,63],[239,69,290,67,"newState"],[239,77,290,75],[239,78,290,76,"playerStats"],[239,89,290,87],[239,90,290,88,"cooldownReduction"],[240,12,291,10],[240,13,291,11],[241,10,292,8],[243,10,294,8],[244,10,295,8],[244,14,295,12,"game"],[244,18,295,16],[244,19,295,17,"gameState"],[244,28,295,26],[244,29,295,27,"isAlive"],[244,36,295,34],[244,40,296,12,"game"],[244,44,296,16],[244,45,296,17,"gameState"],[244,54,296,26],[244,55,296,27,"ninja"],[244,60,296,32],[244,61,296,33,"health"],[244,67,296,39],[244,72,296,44,"effectiveStats"],[244,86,296,58],[244,87,296,59,"maxHealth"],[244,96,296,68],[244,100,297,12,"newState"],[244,108,297,20],[244,109,297,21,"playerStats"],[244,120,297,32],[244,121,297,33,"health"],[244,127,297,39],[244,130,297,42,"effectiveStats"],[244,144,297,56],[244,145,297,57,"maxHealth"],[244,154,297,66],[244,157,297,69],[244,160,297,72],[244,162,297,74],[245,12,298,10,"console"],[245,19,298,17],[245,20,298,18,"log"],[245,23,298,21],[245,24,298,22],[245,58,298,56,"newState"],[245,66,298,64],[245,67,298,65,"playerStats"],[245,78,298,76],[245,79,298,77,"health"],[245,85,298,83],[245,91,298,89,"game"],[245,95,298,93],[245,96,298,94,"gameState"],[245,105,298,103],[245,106,298,104,"ninja"],[245,111,298,109],[245,112,298,110,"health"],[245,118,298,116],[245,139,298,137],[245,140,298,138],[246,12,299,10,"newState"],[246,20,299,18],[246,21,299,19,"playerStats"],[246,32,299,30],[246,33,299,31,"health"],[246,39,299,37],[246,42,299,40,"game"],[246,46,299,44],[246,47,299,45,"gameState"],[246,56,299,54],[246,57,299,55,"ninja"],[246,62,299,60],[246,63,299,61,"health"],[246,69,299,67],[247,10,300,8],[248,8,301,6],[250,8,303,6],[251,8,304,6,"newState"],[251,16,304,14],[251,17,304,15,"enemies"],[251,24,304,22],[251,25,304,23,"forEach"],[251,32,304,30],[251,33,304,31,"enemy"],[251,38,304,36],[251,42,304,40],[252,10,305,8],[252,14,305,12],[252,15,305,13,"enemy"],[252,20,305,18],[252,21,305,19,"isBoss"],[252,27,305,25],[252,29,305,27],[253,12,305,29],[254,12,306,10],[255,12,307,10],[255,18,307,16,"MOVEMENT_SPEED"],[255,32,307,30],[255,35,307,33],[255,39,307,37],[255,40,307,38],[255,41,307,39],[256,12,308,10],[256,18,308,16,"SCREEN_WIDTH"],[256,30,308,28],[256,33,308,31],[256,36,308,34],[257,12,309,10],[257,18,309,16,"GAME_AREA_HEIGHT"],[257,34,309,32],[257,37,309,35],[257,40,309,38],[257,41,309,39],[257,42,309,40],[258,12,310,10],[258,18,310,16,"ENEMY_SIZE"],[258,28,310,26],[258,31,310,29],[258,33,310,31],[260,12,312,10],[261,12,313,10],[261,18,313,16,"playerX"],[261,25,313,23],[261,28,313,26,"currentNinjaPosition"],[261,48,313,46],[261,49,313,47,"x"],[261,50,313,48],[262,12,314,10],[262,18,314,16,"playerY"],[262,25,314,23],[262,28,314,26,"currentNinjaPosition"],[262,48,314,46],[262,49,314,47,"y"],[262,50,314,48],[264,12,316,10],[265,12,317,10],[265,18,317,16,"deltaX"],[265,24,317,22],[265,27,317,25,"playerX"],[265,34,317,32],[265,37,317,35,"enemy"],[265,42,317,40],[265,43,317,41,"position"],[265,51,317,49],[265,52,317,50,"x"],[265,53,317,51],[266,12,318,10],[266,18,318,16,"deltaY"],[266,24,318,22],[266,27,318,25,"playerY"],[266,34,318,32],[266,37,318,35,"enemy"],[266,42,318,40],[266,43,318,41,"position"],[266,51,318,49],[266,52,318,50,"y"],[266,53,318,51],[267,12,319,10],[267,18,319,16,"distance"],[267,26,319,24],[267,29,319,27,"Math"],[267,33,319,31],[267,34,319,32,"sqrt"],[267,38,319,36],[267,39,319,37,"deltaX"],[267,45,319,43],[267,48,319,46,"deltaX"],[267,54,319,52],[267,57,319,55,"deltaY"],[267,63,319,61],[267,66,319,64,"deltaY"],[267,72,319,70],[267,73,319,71],[269,12,321,10],[270,12,322,10],[270,18,322,16,"ATTACK_RANGE"],[270,30,322,28],[270,33,322,31],[270,35,322,33],[270,36,322,34],[270,37,322,35],[271,12,323,10],[271,18,323,16,"ATTACK_COOLDOWN"],[271,33,323,31],[271,36,323,34],[271,38,323,36],[271,39,323,37],[271,40,323,38],[273,12,325,10],[273,16,325,14,"distance"],[273,24,325,22],[273,28,325,26,"ATTACK_RANGE"],[273,40,325,38],[273,42,325,40],[274,14,326,12],[275,14,327,12],[275,18,327,16],[275,19,327,17,"enemy"],[275,24,327,22],[275,25,327,23,"lastAttackTick"],[275,39,327,37],[275,41,327,39,"enemy"],[275,46,327,44],[275,47,327,45,"lastAttackTick"],[275,61,327,59],[275,64,327,62],[275,65,327,63],[276,14,329,12],[276,18,329,16,"newState"],[276,26,329,24],[276,27,329,25,"currentTick"],[276,38,329,36],[276,41,329,39,"enemy"],[276,46,329,44],[276,47,329,45,"lastAttackTick"],[276,61,329,59],[276,65,329,63,"ATTACK_COOLDOWN"],[276,80,329,78],[276,82,329,80],[277,16,330,14],[278,16,331,14],[278,20,331,18],[278,21,331,19,"game"],[278,25,331,23],[278,26,331,24,"gameState"],[278,35,331,33],[278,36,331,34,"isAlive"],[278,43,331,41],[278,45,331,43],[279,18,332,16,"console"],[279,25,332,23],[279,26,332,24,"log"],[279,29,332,27],[279,30,332,28],[279,49,332,47,"enemy"],[279,54,332,52],[279,55,332,53,"name"],[279,59,332,57],[279,93,332,91],[279,94,332,92],[280,18,333,16],[281,18,334,16,"enemy"],[281,23,334,21],[281,24,334,22,"lastAttackTick"],[281,38,334,36],[281,41,334,39,"newState"],[281,49,334,47],[281,50,334,48,"currentTick"],[281,61,334,59],[282,16,335,14],[282,17,335,15],[282,23,335,21],[283,18,336,16],[284,18,337,16],[284,24,337,22,"isPlayerInvincible"],[284,42,337,40],[284,45,337,43,"game"],[284,49,337,47],[284,50,337,48,"gameState"],[284,59,337,57],[284,60,337,58,"isInvincible"],[284,72,337,70],[284,76,338,41,"game"],[284,80,338,45],[284,81,338,46,"gameState"],[284,90,338,55],[284,91,338,56,"invincibilityEndTime"],[284,111,338,76],[284,115,339,41,"Date"],[284,119,339,45],[284,120,339,46,"now"],[284,123,339,49],[284,124,339,50],[284,125,339,51],[284,128,339,54,"game"],[284,132,339,58],[284,133,339,59,"gameState"],[284,142,339,68],[284,143,339,69,"invincibilityEndTime"],[284,163,339,89],[285,18,341,16],[285,22,341,20,"isPlayerInvincible"],[285,40,341,38],[285,42,341,40],[286,20,342,18,"console"],[286,27,342,25],[286,28,342,26,"log"],[286,31,342,29],[286,32,342,30],[286,51,342,49,"enemy"],[286,56,342,54],[286,57,342,55,"name"],[286,61,342,59],[286,101,342,99],[286,102,342,100],[287,20,343,18],[288,20,344,18,"enemy"],[288,25,344,23],[288,26,344,24,"lastAttackTick"],[288,40,344,38],[288,43,344,41,"newState"],[288,51,344,49],[288,52,344,50,"currentTick"],[288,63,344,61],[289,18,345,16],[289,19,345,17],[289,25,345,23],[290,20,346,16],[291,20,347,16],[291,26,347,22,"baseAttack"],[291,36,347,32],[291,39,347,35,"enemy"],[291,44,347,40],[291,45,347,41,"stats"],[291,50,347,46],[291,51,347,47,"attack"],[291,57,347,53],[291,60,347,56],[291,63,347,59],[291,64,347,60],[291,65,347,61],[292,20,348,16],[292,26,348,22,"attackDamage"],[292,38,348,34],[292,41,348,37,"Math"],[292,45,348,41],[292,46,348,42,"floor"],[292,51,348,47],[292,52,348,48,"baseAttack"],[292,62,348,58],[292,66,348,62],[292,69,348,65],[292,72,348,68,"Math"],[292,76,348,72],[292,77,348,73,"random"],[292,83,348,79],[292,84,348,80],[292,85,348,81],[292,88,348,84],[292,91,348,87],[292,92,348,88],[292,93,348,89],[292,94,348,90],[292,95,348,91],[293,20,349,16],[293,26,349,22,"playerDefense"],[293,39,349,35],[293,42,349,38,"newState"],[293,50,349,46],[293,51,349,47,"playerStats"],[293,62,349,58],[293,63,349,59,"defense"],[293,70,349,66],[294,20,350,16],[294,26,350,22,"finalDamage"],[294,37,350,33],[294,40,350,36,"Math"],[294,44,350,40],[294,45,350,41,"max"],[294,48,350,44],[294,49,350,45],[294,50,350,46],[294,52,350,48,"attackDamage"],[294,64,350,60],[294,67,350,63,"Math"],[294,71,350,67],[294,72,350,68,"floor"],[294,77,350,73],[294,78,350,74,"playerDefense"],[294,91,350,87],[294,94,350,90],[294,97,350,93],[294,98,350,94],[294,99,350,95],[294,100,350,96],[294,101,350,97],[296,20,352,16,"console"],[296,27,352,23],[296,28,352,24,"log"],[296,31,352,27],[296,32,352,28],[296,53,352,49,"enemy"],[296,58,352,54],[296,59,352,55,"name"],[296,63,352,59],[296,86,352,82,"finalDamage"],[296,97,352,93],[296,109,352,105,"attackDamage"],[296,121,352,117],[296,132,352,128,"Math"],[296,136,352,132],[296,137,352,133,"floor"],[296,142,352,138],[296,143,352,139,"playerDefense"],[296,156,352,152],[296,159,352,155],[296,162,352,158],[296,163,352,159],[296,184,352,180],[296,185,352,181],[298,20,354,16],[299,20,355,16],[299,26,355,22,"newPlayerHealth"],[299,41,355,37],[299,44,355,40,"Math"],[299,48,355,44],[299,49,355,45,"max"],[299,52,355,48],[299,53,355,49],[299,54,355,50],[299,56,355,52,"newState"],[299,64,355,60],[299,65,355,61,"playerStats"],[299,76,355,72],[299,77,355,73,"health"],[299,83,355,79],[299,86,355,82,"finalDamage"],[299,97,355,93],[299,98,355,94],[300,20,356,16,"newState"],[300,28,356,24],[300,29,356,25,"playerStats"],[300,40,356,36],[300,41,356,37,"health"],[300,47,356,43],[300,50,356,46,"newPlayerHealth"],[300,65,356,61],[301,20,358,16,"console"],[301,27,358,23],[301,28,358,24,"log"],[301,31,358,27],[301,32,358,28],[301,53,358,49,"newState"],[301,61,358,57],[301,62,358,58,"playerStats"],[301,73,358,69],[301,74,358,70,"health"],[301,80,358,76],[301,84,358,80,"newState"],[301,92,358,88],[301,93,358,89,"playerStats"],[301,104,358,100],[301,105,358,101,"maxHealth"],[301,114,358,110],[301,124,358,120,"finalDamage"],[301,135,358,131],[301,145,358,141],[301,146,358,142],[303,20,360,16],[304,20,361,16,"enemy"],[304,25,361,21],[304,26,361,22,"lastAttackTick"],[304,40,361,36],[304,43,361,39,"newState"],[304,51,361,47],[304,52,361,48,"currentTick"],[304,63,361,59],[306,20,363,16],[307,20,364,16],[307,24,364,20,"newPlayerHealth"],[307,39,364,35],[307,43,364,39],[307,44,364,40],[307,46,364,42],[308,22,365,18,"console"],[308,29,365,25],[308,30,365,26,"log"],[308,33,365,29],[308,34,365,30],[308,84,365,80],[308,85,365,81],[309,22,366,18],[310,22,367,18,"setTimeout"],[310,32,367,28],[310,33,367,29],[310,39,367,35],[311,24,368,20],[312,24,369,20,"game"],[312,28,369,24],[312,29,369,25,"updateGameState"],[312,44,369,40],[312,45,369,41],[313,26,369,43,"isAlive"],[313,33,369,50],[313,35,369,52],[314,24,369,58],[314,25,369,59],[314,26,369,60],[315,22,370,18],[315,23,370,19],[315,25,370,21],[315,28,370,24],[315,29,370,25],[316,20,371,16],[317,18,372,16],[318,16,373,14],[319,14,374,12],[320,12,375,10],[320,13,375,11],[320,19,375,17],[321,14,376,12],[322,14,377,12],[323,14,378,12],[323,18,378,16,"distance"],[323,26,378,24],[323,29,378,27],[323,31,378,29],[323,33,378,31],[324,16,379,14],[325,16,380,14],[325,22,380,20,"normalizedX"],[325,33,380,31],[325,36,380,34,"deltaX"],[325,42,380,40],[325,45,380,43,"distance"],[325,53,380,51],[326,16,381,14],[326,22,381,20,"normalizedY"],[326,33,381,31],[326,36,381,34,"deltaY"],[326,42,381,40],[326,45,381,43,"distance"],[326,53,381,51],[328,16,383,14],[329,16,384,14],[329,22,384,20,"randomFactor"],[329,34,384,32],[329,37,384,35],[329,40,384,38],[329,41,384,39],[329,42,384,40],[330,16,385,14],[330,22,385,20,"finalX"],[330,28,385,26],[330,31,385,29,"normalizedX"],[330,42,385,40],[330,45,385,43],[330,46,385,44,"Math"],[330,50,385,48],[330,51,385,49,"random"],[330,57,385,55],[330,58,385,56],[330,59,385,57],[330,62,385,60],[330,65,385,63],[330,69,385,67,"randomFactor"],[330,81,385,79],[331,16,386,14],[331,22,386,20,"finalY"],[331,28,386,26],[331,31,386,29,"normalizedY"],[331,42,386,40],[331,45,386,43],[331,46,386,44,"Math"],[331,50,386,48],[331,51,386,49,"random"],[331,57,386,55],[331,58,386,56],[331,59,386,57],[331,62,386,60],[331,65,386,63],[331,69,386,67,"randomFactor"],[331,81,386,79],[333,16,388,14],[334,16,389,14],[334,20,389,18,"newX"],[334,24,389,22],[334,27,389,25,"enemy"],[334,32,389,30],[334,33,389,31,"position"],[334,41,389,39],[334,42,389,40,"x"],[334,43,389,41],[334,46,389,45,"finalX"],[334,52,389,51],[334,55,389,54,"MOVEMENT_SPEED"],[334,69,389,69],[335,16,390,14],[335,20,390,18,"newY"],[335,24,390,22],[335,27,390,25,"enemy"],[335,32,390,30],[335,33,390,31,"position"],[335,41,390,39],[335,42,390,40,"y"],[335,43,390,41],[335,46,390,45,"finalY"],[335,52,390,51],[335,55,390,54,"MOVEMENT_SPEED"],[335,69,390,69],[337,16,392,14],[338,16,393,14,"newX"],[338,20,393,18],[338,23,393,21,"Math"],[338,27,393,25],[338,28,393,26,"max"],[338,31,393,29],[338,32,393,30],[338,33,393,31],[338,35,393,33,"Math"],[338,39,393,37],[338,40,393,38,"min"],[338,43,393,41],[338,44,393,42,"SCREEN_WIDTH"],[338,56,393,54],[338,59,393,57,"ENEMY_SIZE"],[338,69,393,67],[338,71,393,69,"newX"],[338,75,393,73],[338,76,393,74],[338,77,393,75],[339,16,394,14,"newY"],[339,20,394,18],[339,23,394,21,"Math"],[339,27,394,25],[339,28,394,26,"max"],[339,31,394,29],[339,32,394,30],[339,33,394,31],[339,35,394,33,"Math"],[339,39,394,37],[339,40,394,38,"min"],[339,43,394,41],[339,44,394,42,"GAME_AREA_HEIGHT"],[339,60,394,58],[339,63,394,61,"ENEMY_SIZE"],[339,73,394,71],[339,75,394,73,"newY"],[339,79,394,77],[339,80,394,78],[339,81,394,79],[341,16,396,14],[342,16,397,14,"enemy"],[342,21,397,19],[342,22,397,20,"position"],[342,30,397,28],[342,31,397,29,"x"],[342,32,397,30],[342,35,397,33,"newX"],[342,39,397,37],[343,16,398,14,"enemy"],[343,21,398,19],[343,22,398,20,"position"],[343,30,398,28],[343,31,398,29,"y"],[343,32,398,30],[343,35,398,33,"newY"],[343,39,398,37],[344,14,399,12],[345,14,400,12],[346,12,401,10],[347,10,402,8],[348,8,403,6],[348,9,403,7],[348,10,403,8],[350,8,405,6],[351,8,406,6],[351,12,406,10,"newState"],[351,20,406,18],[351,21,406,19,"shadowClone"],[351,32,406,30],[351,34,406,32],[352,10,407,8],[353,10,408,8,"newState"],[353,18,408,16],[353,19,408,17,"shadowClone"],[353,30,408,28],[353,31,408,29,"remainingTicks"],[353,45,408,43],[353,47,408,45],[355,10,410,8],[356,10,411,8],[356,16,411,14,"cloneOffset"],[356,27,411,25],[356,30,411,28],[356,32,411,30],[356,33,411,31],[356,34,411,32],[357,10,412,8,"newState"],[357,18,412,16],[357,19,412,17,"shadowClone"],[357,30,412,28],[357,31,412,29,"position"],[357,39,412,37],[357,40,412,38,"x"],[357,41,412,39],[357,44,412,42,"currentNinjaPosition"],[357,64,412,62],[357,65,412,63,"x"],[357,66,412,64],[357,69,412,67,"cloneOffset"],[357,80,412,78],[358,10,413,8,"newState"],[358,18,413,16],[358,19,413,17,"shadowClone"],[358,30,413,28],[358,31,413,29,"position"],[358,39,413,37],[358,40,413,38,"y"],[358,41,413,39],[358,44,413,42,"currentNinjaPosition"],[358,64,413,62],[358,65,413,63,"y"],[358,66,413,64],[358,69,413,67],[358,71,413,69],[360,10,415,8],[361,10,416,8],[361,14,416,12,"newState"],[361,22,416,20],[361,23,416,21,"shadowClone"],[361,34,416,32],[361,35,416,33,"remainingTicks"],[361,49,416,47],[361,53,416,51],[361,54,416,52],[361,56,416,54],[362,12,417,10,"console"],[362,19,417,17],[362,20,417,18,"log"],[362,23,417,21],[362,24,417,22],[362,75,417,73],[362,76,417,74],[363,12,418,10,"newState"],[363,20,418,18],[363,21,418,19,"shadowClone"],[363,32,418,30],[363,35,418,33,"undefined"],[363,44,418,42],[364,10,419,8],[364,11,419,9],[364,17,419,15],[365,12,420,10],[366,12,421,10],[367,12,422,10],[367,18,422,16,"CLONE_ATTACK_INTERVAL"],[367,39,422,37],[367,42,422,40],[367,44,422,42],[368,12,423,10],[368,16,423,14,"newState"],[368,24,423,22],[368,25,423,23,"currentTick"],[368,36,423,34],[368,39,423,37,"CLONE_ATTACK_INTERVAL"],[368,60,423,58],[368,65,423,63],[368,66,423,64],[368,70,423,68,"newState"],[368,78,423,76],[368,79,423,77,"enemies"],[368,86,423,84],[368,87,423,85,"length"],[368,93,423,91],[368,96,423,94],[368,97,423,95],[368,99,423,97],[369,14,424,12,"console"],[369,21,424,19],[369,22,424,20,"log"],[369,25,424,23],[369,26,424,24],[369,83,424,81],[369,84,424,82],[371,14,426,12],[372,14,427,12],[372,20,427,18,"target"],[372,26,427,24],[372,29,427,27,"findClosestEnemyInternal"],[372,53,427,51],[372,54,427,52,"newState"],[372,62,427,60],[372,63,427,61,"enemies"],[372,70,427,68],[372,71,427,69],[373,14,428,12],[373,18,428,16,"target"],[373,24,428,22],[373,26,428,24],[374,16,429,14],[375,16,430,14],[375,22,430,20,"cloneDamage"],[375,33,430,31],[375,36,430,34,"Math"],[375,40,430,38],[375,41,430,39,"floor"],[375,46,430,44],[375,47,430,45,"newState"],[375,55,430,53],[375,56,430,54,"playerStats"],[375,67,430,65],[375,68,430,66,"attack"],[375,74,430,72],[375,77,430,75],[375,80,430,78],[375,81,430,79],[377,16,432,14],[378,16,433,14,"createProjectile"],[378,32,433,30],[378,33,433,31,"target"],[378,39,433,37],[378,41,433,39,"cloneDamage"],[378,52,433,50],[378,54,433,52,"newState"],[378,62,433,60],[378,63,433,61,"shadowClone"],[378,74,433,72],[378,75,433,73,"position"],[378,83,433,81],[378,85,433,83],[379,18,434,16,"id"],[379,20,434,18],[379,22,434,20],[379,43,434,41],[380,18,435,16,"name"],[380,22,435,20],[380,24,435,22],[380,45,435,43],[381,18,436,16,"icon"],[381,22,436,20],[381,24,436,22],[382,16,437,14],[382,17,437,15],[382,18,437,16],[383,14,438,12],[384,12,439,10],[385,10,440,8],[386,8,441,6],[388,8,443,6],[389,8,444,6],[390,8,445,6,"console"],[390,15,445,13],[390,16,445,14,"log"],[390,19,445,17],[390,20,445,18],[390,63,445,61,"isManualControlActive"],[390,84,445,82],[390,97,445,95,"game"],[390,101,445,99],[390,102,445,100,"gameState"],[390,111,445,109],[390,112,445,110,"isAlive"],[390,119,445,117],[390,121,445,119],[390,122,445,120],[391,8,446,6],[391,12,446,10],[391,13,446,11,"isManualControlActive"],[391,34,446,32],[391,38,446,36,"game"],[391,42,446,40],[391,43,446,41,"gameState"],[391,52,446,50],[391,53,446,51,"isAlive"],[391,60,446,58],[391,62,446,60],[392,10,447,8],[392,15,447,13],[392,19,447,17,"i"],[392,20,447,18],[392,23,447,21],[392,24,447,22],[392,26,447,24,"i"],[392,27,447,25],[392,30,447,28],[392,31,447,29],[392,33,447,31,"i"],[392,34,447,32],[392,36,447,34],[392,38,447,36],[393,12,448,10],[393,16,448,14,"newState"],[393,24,448,22],[393,25,448,23,"abilityManager"],[393,39,448,37],[393,40,448,38,"isAbilityReady"],[393,54,448,52],[393,55,448,53,"i"],[393,56,448,54],[393,57,448,55],[393,61,448,59,"newState"],[393,69,448,67],[393,70,448,68,"enemies"],[393,77,448,75],[393,78,448,76,"length"],[393,84,448,82],[393,87,448,85],[393,88,448,86],[393,90,448,88],[394,14,449,12],[394,18,449,16,"newState"],[394,26,449,24],[394,27,449,25,"abilityManager"],[394,41,449,39],[394,42,449,40,"useAbility"],[394,52,449,50],[394,53,449,51,"i"],[394,54,449,52],[394,56,449,54,"newTick"],[394,63,449,61],[394,64,449,62],[394,66,449,64],[395,16,450,14,"console"],[395,23,450,21],[395,24,450,22,"log"],[395,27,450,25],[395,28,450,26],[395,73,450,71,"i"],[395,74,450,72],[395,76,450,74],[395,77,450,75],[396,16,451,14,"castAbility"],[396,27,451,25],[396,28,451,26,"newState"],[396,36,451,34],[396,38,451,36,"i"],[396,39,451,37],[396,40,451,38],[397,14,452,12],[398,12,453,10],[399,10,454,8],[400,8,455,6],[402,8,457,6],[403,8,458,6],[403,14,458,12,"deadEnemies"],[403,25,458,23],[403,28,458,26,"newState"],[403,36,458,34],[403,37,458,35,"enemies"],[403,44,458,42],[403,45,458,43,"filter"],[403,51,458,49],[403,52,458,50,"enemy"],[403,57,458,55],[403,61,458,59,"enemy"],[403,66,458,64],[403,67,458,65,"health"],[403,73,458,71],[403,77,458,75],[403,78,458,76],[403,79,458,77],[404,8,459,6,"enemiesToKill"],[404,21,459,19],[404,24,459,22],[404,25,459,23],[404,28,459,26,"deadEnemies"],[404,39,459,37],[404,40,459,38],[404,41,459,39],[404,42,459,40],[406,8,461,6],[407,8,462,6],[407,12,462,10,"deadEnemies"],[407,23,462,21],[407,24,462,22,"length"],[407,30,462,28],[407,33,462,31],[407,34,462,32],[407,36,462,34],[408,10,463,8,"console"],[408,17,463,15],[408,18,463,16,"log"],[408,21,463,19],[408,22,463,20],[408,49,463,47,"deadEnemies"],[408,60,463,58],[408,61,463,59,"length"],[408,67,463,65],[408,83,463,81],[408,85,463,83,"deadEnemies"],[408,96,463,94],[408,97,463,95,"map"],[408,100,463,98],[408,101,463,99,"e"],[408,102,463,100],[408,106,463,104],[408,109,463,107,"e"],[408,110,463,108],[408,111,463,109,"id"],[408,113,463,111],[408,117,463,115,"e"],[408,118,463,116],[408,119,463,117,"health"],[408,125,463,123],[408,130,463,128],[408,131,463,129],[408,132,463,130],[409,8,464,6],[411,8,466,6],[412,8,467,6],[412,14,467,12,"lowHealthEnemies"],[412,30,467,28],[412,33,467,31,"newState"],[412,41,467,39],[412,42,467,40,"enemies"],[412,49,467,47],[412,50,467,48,"filter"],[412,56,467,54],[412,57,467,55,"enemy"],[412,62,467,60],[412,66,467,64,"enemy"],[412,71,467,69],[412,72,467,70,"health"],[412,78,467,76],[412,82,467,80],[412,84,467,82],[412,88,467,86,"enemy"],[412,93,467,91],[412,94,467,92,"health"],[412,100,467,98],[412,103,467,101],[412,104,467,102],[412,105,467,103],[413,8,468,6],[413,12,468,10,"lowHealthEnemies"],[413,28,468,26],[413,29,468,27,"length"],[413,35,468,33],[413,38,468,36],[413,39,468,37],[413,41,468,39],[414,10,469,8,"console"],[414,17,469,15],[414,18,469,16,"log"],[414,21,469,19],[414,22,469,20],[414,61,469,59],[414,63,469,61,"lowHealthEnemies"],[414,79,469,77],[414,80,469,78,"map"],[414,83,469,81],[414,84,469,82,"e"],[414,85,469,83],[414,89,469,87],[414,92,469,90,"e"],[414,93,469,91],[414,94,469,92,"id"],[414,96,469,94],[414,100,469,98,"e"],[414,101,469,99],[414,102,469,100,"health"],[414,108,469,106],[414,112,469,110,"e"],[414,113,469,111],[414,114,469,112,"maxHealth"],[414,123,469,121],[414,128,469,126],[414,129,469,127],[414,130,469,128],[415,8,470,6],[417,8,472,6],[418,8,473,6],[418,14,473,12,"beforeCount"],[418,25,473,23],[418,28,473,26,"newState"],[418,36,473,34],[418,37,473,35,"enemies"],[418,44,473,42],[418,45,473,43,"length"],[418,51,473,49],[419,8,474,6,"newState"],[419,16,474,14],[419,17,474,15,"enemies"],[419,24,474,22],[419,27,474,25,"newState"],[419,35,474,33],[419,36,474,34,"enemies"],[419,43,474,41],[419,44,474,42,"filter"],[419,50,474,48],[419,51,474,49,"enemy"],[419,56,474,54],[419,60,474,58,"enemy"],[419,65,474,63],[419,66,474,64,"health"],[419,72,474,70],[419,75,474,73],[419,76,474,74],[419,77,474,75],[420,8,475,6],[420,14,475,12,"afterCount"],[420,24,475,22],[420,27,475,25,"newState"],[420,35,475,33],[420,36,475,34,"enemies"],[420,43,475,41],[420,44,475,42,"length"],[420,50,475,48],[421,8,477,6],[421,12,477,10,"beforeCount"],[421,23,477,21],[421,28,477,26,"afterCount"],[421,38,477,36],[421,40,477,38],[422,10,478,8,"console"],[422,17,478,15],[422,18,478,16,"log"],[422,21,478,19],[422,22,478,20],[422,52,478,50,"beforeCount"],[422,63,478,61],[422,66,478,64,"afterCount"],[422,76,478,74],[422,102,478,100],[422,103,478,101],[423,8,479,6],[425,8,481,6],[426,8,482,6],[427,8,483,6],[427,14,483,12,"MAX_ENEMIES"],[427,25,483,23],[427,28,483,26],[427,30,483,28],[427,31,483,29],[427,32,483,30],[428,8,484,6],[428,14,484,12,"MIN_SPAWN_DELAY"],[428,29,484,27],[428,32,484,30],[428,35,484,33],[428,36,484,34],[428,37,484,35],[429,8,485,6],[429,14,485,12,"now"],[429,17,485,15],[429,20,485,18,"Date"],[429,24,485,22],[429,25,485,23,"now"],[429,28,485,26],[429,29,485,27],[429,30,485,28],[430,8,486,6],[430,14,486,12,"hasBoss"],[430,21,486,19],[430,24,486,22,"newState"],[430,32,486,30],[430,33,486,31,"enemies"],[430,40,486,38],[430,41,486,39,"some"],[430,45,486,43],[430,46,486,44,"enemy"],[430,51,486,49],[430,55,486,53,"enemy"],[430,60,486,58],[430,61,486,59,"isBoss"],[430,67,486,65],[430,68,486,66],[432,8,488,6],[433,8,489,6],[433,12,489,10],[433,13,489,11,"newState"],[433,21,489,19],[433,22,489,20,"lastSpawnTime"],[433,35,489,33],[433,37,489,35],[434,10,490,8,"newState"],[434,18,490,16],[434,19,490,17,"lastSpawnTime"],[434,32,490,30],[434,35,490,33,"now"],[434,38,490,36],[435,8,491,6],[436,8,493,6,"console"],[436,15,493,13],[436,16,493,14,"log"],[436,19,493,17],[436,20,493,18],[436,53,493,51,"newState"],[436,61,493,59],[436,62,493,60,"enemies"],[436,69,493,67],[436,70,493,68,"length"],[436,76,493,74],[436,85,493,83,"MAX_ENEMIES"],[436,96,493,94],[436,109,493,107,"hasBoss"],[436,116,493,114],[436,118,493,116],[436,119,493,117],[438,8,495,6],[439,8,496,6],[439,12,496,10],[439,13,496,11,"hasBoss"],[439,20,496,18],[439,24,496,22,"newState"],[439,32,496,30],[439,33,496,31,"enemies"],[439,40,496,38],[439,41,496,39,"length"],[439,47,496,45],[439,50,496,48,"MAX_ENEMIES"],[439,61,496,59],[439,65,496,64,"now"],[439,68,496,67],[439,71,496,70,"newState"],[439,79,496,78],[439,80,496,79,"lastSpawnTime"],[439,93,496,92],[439,97,496,97,"MIN_SPAWN_DELAY"],[439,112,496,112],[439,114,496,114],[440,10,497,8,"console"],[440,17,497,15],[440,18,497,16,"log"],[440,21,497,19],[440,22,497,20],[440,43,497,41,"newState"],[440,51,497,49],[440,52,497,50,"enemies"],[440,59,497,57],[440,60,497,58,"length"],[440,66,497,64],[440,69,497,67],[440,70,497,68],[440,74,497,72,"MAX_ENEMIES"],[440,85,497,83],[440,87,497,85],[440,88,497,86],[441,10,498,8,"spawnTestEnemy"],[441,24,498,22],[441,25,498,23,"newState"],[441,33,498,31],[441,34,498,32],[442,10,499,8,"newState"],[442,18,499,16],[442,19,499,17,"lastSpawnTime"],[442,32,499,30],[442,35,499,33,"now"],[442,38,499,36],[443,8,500,6],[444,8,502,6],[444,15,502,13,"newState"],[444,23,502,21],[445,6,503,4],[445,7,503,5],[445,8,503,6],[447,6,505,4],[448,6,506,4,"console"],[448,13,506,11],[448,14,506,12,"log"],[448,17,506,15],[448,18,506,16],[448,50,506,48,"enemiesToKill"],[448,63,506,61],[448,64,506,62,"length"],[448,70,506,68],[448,101,506,99],[448,102,506,100],[449,6,508,4,"enemiesToKill"],[449,19,508,17],[449,20,508,18,"forEach"],[449,27,508,25],[449,28,508,26],[449,29,508,27,"enemy"],[449,34,508,32],[449,36,508,34,"index"],[449,41,508,39],[449,46,508,44],[450,8,509,6,"console"],[450,15,509,13],[450,16,509,14,"log"],[450,19,509,17],[450,20,509,18],[450,57,509,55,"index"],[450,62,509,60],[450,65,509,63],[450,66,509,64],[450,70,509,68,"enemiesToKill"],[450,83,509,81],[450,84,509,82,"length"],[450,90,509,88],[450,104,509,102,"enemy"],[450,109,509,107],[450,110,509,108,"id"],[450,112,509,110],[450,114,509,112],[450,115,509,113],[451,8,510,6,"handleEnemyKill"],[451,23,510,21],[451,24,510,22,"enemy"],[451,29,510,27],[451,30,510,28],[452,6,511,4],[452,7,511,5],[452,8,511,6],[453,4,512,2],[453,5,512,3],[453,7,512,5],[453,8,512,6,"handleEnemyKill"],[453,23,512,21],[453,24,512,22],[453,25,512,23],[453,26,512,24],[453,27,512,25],[455,4,514,2],[456,4,515,2],[456,10,515,8,"findClosestEnemyInternal"],[456,34,515,32],[456,37,515,36,"enemies"],[456,44,515,58],[456,48,515,83],[457,6,516,4],[457,10,516,8,"enemies"],[457,17,516,15],[457,18,516,16,"length"],[457,24,516,22],[457,29,516,27],[457,30,516,28],[457,32,516,30],[457,39,516,37],[457,43,516,41],[459,6,518,4],[460,6,519,4],[460,12,519,10,"SCREEN_WIDTH"],[460,24,519,22],[460,27,519,25],[460,30,519,28],[461,6,520,4],[461,12,520,10,"GAME_AREA_HEIGHT"],[461,28,520,26],[461,31,520,29],[461,34,520,32],[461,37,520,35],[461,40,520,38],[461,41,520,39],[461,42,520,40],[462,6,521,4],[462,12,521,10,"ninjaX"],[462,18,521,16],[462,21,521,19,"SCREEN_WIDTH"],[462,33,521,31],[462,36,521,34],[462,37,521,35],[463,6,522,4],[463,12,522,10,"ninjaY"],[463,18,522,16],[463,21,522,19,"GAME_AREA_HEIGHT"],[463,37,522,35],[463,40,522,38],[463,41,522,39],[464,6,524,4],[464,10,524,8,"closestEnemy"],[464,22,524,20],[464,25,524,23,"enemies"],[464,32,524,30],[464,33,524,31],[464,34,524,32],[464,35,524,33],[465,6,525,4],[465,10,525,8,"closestDistance"],[465,25,525,23],[465,28,525,26,"Infinity"],[465,36,525,34],[466,6,527,4,"enemies"],[466,13,527,11],[466,14,527,12,"forEach"],[466,21,527,19],[466,22,527,20,"enemy"],[466,27,527,25],[466,31,527,29],[467,8,528,6],[467,14,528,12,"distance"],[467,22,528,20],[467,25,528,23,"Math"],[467,29,528,27],[467,30,528,28,"sqrt"],[467,34,528,32],[467,35,529,8,"Math"],[467,39,529,12],[467,40,529,13,"pow"],[467,43,529,16],[467,44,529,17,"enemy"],[467,49,529,22],[467,50,529,23,"position"],[467,58,529,31],[467,59,529,32,"x"],[467,60,529,33],[467,63,529,36,"ninjaX"],[467,69,529,42],[467,71,529,44],[467,72,529,45],[467,73,529,46],[467,76,530,8,"Math"],[467,80,530,12],[467,81,530,13,"pow"],[467,84,530,16],[467,85,530,17,"enemy"],[467,90,530,22],[467,91,530,23,"position"],[467,99,530,31],[467,100,530,32,"y"],[467,101,530,33],[467,104,530,36,"ninjaY"],[467,110,530,42],[467,112,530,44],[467,113,530,45],[467,114,531,6],[467,115,531,7],[468,8,533,6],[468,12,533,10,"distance"],[468,20,533,18],[468,23,533,21,"closestDistance"],[468,38,533,36],[468,40,533,38],[469,10,534,8,"closestDistance"],[469,25,534,23],[469,28,534,26,"distance"],[469,36,534,34],[470,10,535,8,"closestEnemy"],[470,22,535,20],[470,25,535,23,"enemy"],[470,30,535,28],[471,8,536,6],[472,6,537,4],[472,7,537,5],[472,8,537,6],[473,6,539,4,"console"],[473,13,539,11],[473,14,539,12,"log"],[473,17,539,15],[473,18,539,16],[473,60,539,58,"closestDistance"],[473,75,539,73],[473,76,539,74,"toFixed"],[473,83,539,81],[473,84,539,82],[473,85,539,83],[473,86,539,84],[473,88,539,86],[473,89,539,87],[474,6,540,4],[474,13,540,11,"closestEnemy"],[474,25,540,23],[475,4,541,2],[475,5,541,3],[477,4,543,2],[478,4,544,2],[478,10,544,8,"findClosestEnemy"],[478,26,544,24],[478,29,544,27,"findClosestEnemy"],[478,30,544,27],[478,35,544,53],[479,6,545,4],[479,13,545,11,"findClosestEnemyInternal"],[479,37,545,35],[479,38,545,36,"combatState"],[479,49,545,47],[479,50,545,48,"enemies"],[479,57,545,55],[479,58,545,56],[480,4,546,2],[480,5,546,3],[482,4,548,2],[483,4,549,2],[483,10,549,8],[483,11,549,9,"currentNinjaPosition"],[483,31,549,29],[483,33,549,31,"setCurrentNinjaPosition"],[483,56,549,54],[483,57,549,55],[483,60,549,58],[483,64,549,58,"useState"],[483,70,549,66],[483,71,549,66,"useState"],[483,79,549,66],[483,81,549,91],[484,6,549,93,"x"],[484,7,549,94],[484,9,549,96],[484,10,549,97],[485,6,549,99,"y"],[485,7,549,100],[485,9,549,102],[486,4,549,104],[486,5,549,105],[486,6,549,106],[487,4,550,2],[487,10,550,8],[487,11,550,9,"isManualControlActive"],[487,32,550,30],[487,34,550,32,"setIsManualControlActive"],[487,58,550,56],[487,59,550,57],[487,62,550,60],[487,66,550,60,"useState"],[487,72,550,68],[487,73,550,68,"useState"],[487,81,550,68],[487,83,550,69],[487,88,550,74],[487,89,550,75],[489,4,552,2],[490,4,553,2],[490,10,553,8,"updateNinjaPosition"],[490,29,553,27],[490,32,553,30],[490,36,553,30,"useCallback"],[490,42,553,41],[490,43,553,41,"useCallback"],[490,54,553,41],[490,56,553,43,"newPosition"],[490,67,553,78],[490,71,553,83],[491,6,554,4,"setCurrentNinjaPosition"],[491,29,554,27],[491,30,554,28,"newPosition"],[491,41,554,39],[491,42,554,40],[492,4,555,2],[492,5,555,3],[492,7,555,5],[492,9,555,7],[492,10,555,8],[494,4,557,2],[495,4,558,2],[495,10,558,8,"setManualControlActive"],[495,32,558,30],[495,35,558,33],[495,39,558,33,"useCallback"],[495,45,558,44],[495,46,558,44,"useCallback"],[495,57,558,44],[495,59,558,46,"active"],[495,65,558,61],[495,69,558,66],[496,6,559,4,"setIsManualControlActive"],[496,30,559,28],[496,31,559,29,"active"],[496,37,559,35],[496,38,559,36],[497,6,560,4,"console"],[497,13,560,11],[497,14,560,12,"log"],[497,17,560,15],[497,18,560,16],[497,39,560,37,"active"],[497,45,560,43],[497,48,560,46],[497,59,560,57],[497,62,560,60],[497,75,560,73],[497,88,560,86,"active"],[497,94,560,92],[497,97,560,95],[497,105,560,103],[497,108,560,106],[497,117,560,115],[497,119,560,117],[497,120,560,118],[498,4,561,2],[498,5,561,3],[498,7,561,5],[498,9,561,7],[498,10,561,8],[500,4,563,2],[501,4,564,2],[501,10,564,8,"handleProjectileHit"],[501,29,564,27],[501,32,564,31,"projectile"],[501,42,564,59],[501,46,564,64],[502,6,565,4,"console"],[502,13,565,11],[502,14,565,12,"log"],[502,17,565,15],[502,18,565,16],[502,35,565,33,"projectile"],[502,45,565,43],[502,46,565,44,"id"],[502,48,565,46],[502,62,565,60,"projectile"],[502,72,565,70],[502,73,565,71,"targetEnemyId"],[502,86,565,84],[502,94,565,92,"projectile"],[502,104,565,102],[502,105,565,103,"damage"],[502,111,565,109],[502,120,565,118],[502,121,565,119],[503,6,567,4,"setCombatState"],[503,20,567,18],[503,21,567,19,"prev"],[503,25,567,23],[503,29,567,27],[504,8,568,6],[504,14,568,12,"newState"],[504,22,568,20],[504,25,568,23],[505,10,568,25],[505,13,568,28,"prev"],[506,8,568,33],[506,9,568,34],[508,8,570,6],[509,8,571,6],[509,14,571,12,"enemyIndex"],[509,24,571,22],[509,27,571,25,"newState"],[509,35,571,33],[509,36,571,34,"enemies"],[509,43,571,41],[509,44,571,42,"findIndex"],[509,53,571,51],[509,54,571,52,"e"],[509,55,571,53],[509,59,571,57,"e"],[509,60,571,58],[509,61,571,59,"id"],[509,63,571,61],[509,68,571,66,"projectile"],[509,78,571,76],[509,79,571,77,"targetEnemyId"],[509,92,571,90],[509,93,571,91],[510,8,572,6],[510,12,572,10,"enemyIndex"],[510,22,572,20],[510,26,572,24],[510,27,572,25],[510,29,572,27],[511,10,573,8,"newState"],[511,18,573,16],[511,19,573,17,"enemies"],[511,26,573,24],[511,29,573,27],[511,30,573,28],[511,33,573,31,"newState"],[511,41,573,39],[511,42,573,40,"enemies"],[511,49,573,47],[511,50,573,48],[512,10,574,8,"newState"],[512,18,574,16],[512,19,574,17,"enemies"],[512,26,574,24],[512,27,574,25,"enemyIndex"],[512,37,574,35],[512,38,574,36],[512,41,574,39],[513,12,575,10],[513,15,575,13,"newState"],[513,23,575,21],[513,24,575,22,"enemies"],[513,31,575,29],[513,32,575,30,"enemyIndex"],[513,42,575,40],[513,43,575,41],[514,12,576,10,"health"],[514,18,576,16],[514,20,576,18,"newState"],[514,28,576,26],[514,29,576,27,"enemies"],[514,36,576,34],[514,37,576,35,"enemyIndex"],[514,47,576,45],[514,48,576,46],[514,49,576,47,"health"],[514,55,576,53],[514,58,576,56,"projectile"],[514,68,576,66],[514,69,576,67,"damage"],[514,75,576,73],[515,12,577,10,"lastDamaged"],[515,23,577,21],[515,25,577,23,"combatEngine"],[515,44,577,35],[515,45,577,35,"combatEngine"],[515,57,577,35],[515,58,577,36,"getCurrentTick"],[515,72,577,50],[515,73,577,51],[516,10,578,8],[516,11,578,9],[517,10,580,8,"console"],[517,17,580,15],[517,18,580,16,"log"],[517,21,580,19],[517,22,580,20],[517,34,580,32,"projectile"],[517,44,580,42],[517,45,580,43,"targetEnemyId"],[517,58,580,56],[517,70,580,68,"newState"],[517,78,580,76],[517,79,580,77,"enemies"],[517,86,580,84],[517,87,580,85,"enemyIndex"],[517,97,580,95],[517,98,580,96],[517,99,580,97,"health"],[517,105,580,103],[517,109,580,107,"newState"],[517,117,580,115],[517,118,580,116,"enemies"],[517,125,580,123],[517,126,580,124,"enemyIndex"],[517,136,580,134],[517,137,580,135],[517,138,580,136,"maxHealth"],[517,147,580,145],[517,149,580,147],[517,150,580,148],[518,8,581,6],[519,8,583,6],[519,15,583,13,"newState"],[519,23,583,21],[520,6,584,4],[520,7,584,5],[520,8,584,6],[522,6,586,4],[523,6,587,4,"setProjectiles"],[523,20,587,18],[523,21,587,19,"prev"],[523,25,587,23],[523,29,587,27,"prev"],[523,33,587,31],[523,34,587,32,"filter"],[523,40,587,38],[523,41,587,39,"p"],[523,42,587,40],[523,46,587,44,"p"],[523,47,587,45],[523,48,587,46,"id"],[523,50,587,48],[523,55,587,53,"projectile"],[523,65,587,63],[523,66,587,64,"id"],[523,68,587,66],[523,69,587,67],[523,70,587,68],[524,4,588,2],[524,5,588,3],[526,4,590,2],[527,4,591,2],[527,10,591,8,"castAbility"],[527,21,591,19],[527,24,591,22,"castAbility"],[527,25,591,23,"state"],[527,30,591,41],[527,32,591,43,"slotIndex"],[527,41,591,60],[527,46,591,65],[528,6,592,4],[528,12,592,10,"deck"],[528,16,592,14],[528,19,592,17,"state"],[528,24,592,22],[528,25,592,23,"abilityManager"],[528,39,592,37],[528,40,592,38,"getDeck"],[528,47,592,45],[528,48,592,46],[528,49,592,47],[529,6,593,4],[529,12,593,10,"ability"],[529,19,593,17],[529,22,593,20,"deck"],[529,26,593,24],[529,27,593,25,"slots"],[529,32,593,30],[529,33,593,31,"slotIndex"],[529,42,593,40],[529,43,593,41],[530,6,594,4],[530,10,594,8],[530,11,594,9,"ability"],[530,18,594,16],[530,20,594,18],[531,6,596,4,"console"],[531,13,596,11],[531,14,596,12,"log"],[531,17,596,15],[531,18,596,16],[531,43,596,41,"ability"],[531,50,596,48],[531,51,596,49,"id"],[531,53,596,51],[531,67,596,65,"slotIndex"],[531,76,596,74],[531,78,596,76],[531,79,596,77],[533,6,598,4],[534,6,599,4],[534,10,599,8,"damage"],[534,16,599,14],[534,19,599,17,"ability"],[534,26,599,24],[534,27,599,25,"stats"],[534,32,599,30],[534,33,599,31,"baseDamage"],[534,43,599,41],[536,6,601,4],[537,6,602,4,"deck"],[537,10,602,8],[537,11,602,9,"activeSynergies"],[537,26,602,24],[537,27,602,25,"forEach"],[537,34,602,32],[537,35,602,33,"synergy"],[537,42,602,40],[537,46,602,44],[538,8,603,6],[538,12,603,10,"synergy"],[538,19,603,17],[538,20,603,18,"bonus"],[538,25,603,23],[538,26,603,24,"damageBonus"],[538,37,603,35],[538,41,604,10,"synergy"],[538,48,604,17],[538,49,604,18,"requiredTags"],[538,61,604,30],[538,62,604,31,"some"],[538,66,604,35],[538,67,604,36,"tag"],[538,70,604,39],[538,74,604,43,"ability"],[538,81,604,50],[538,82,604,51,"tags"],[538,86,604,55],[538,87,604,56,"includes"],[538,95,604,64],[538,96,604,65,"tag"],[538,99,604,68],[538,100,604,69],[538,101,604,70],[538,103,604,72],[539,10,605,8,"damage"],[539,16,605,14],[539,20,605,19],[539,21,605,20],[539,24,605,23,"synergy"],[539,31,605,30],[539,32,605,31,"bonus"],[539,37,605,36],[539,38,605,37,"damageBonus"],[539,49,605,48],[539,52,605,51],[539,55,605,55],[540,8,606,6],[541,6,607,4],[541,7,607,5],[541,8,607,6],[543,6,609,4],[544,6,610,4],[544,12,610,10,"isAOE"],[544,17,610,15],[544,20,610,18,"ability"],[544,27,610,25],[544,28,610,26,"effects"],[544,35,610,33],[544,36,610,34,"includes"],[544,44,610,42],[544,45,610,43],[544,50,610,48],[544,51,610,49],[544,55,610,53,"ability"],[544,62,610,60],[544,63,610,61,"stats"],[544,68,610,66],[544,69,610,67,"aoeRadius"],[544,78,610,76],[545,6,611,4,"console"],[545,13,611,11],[545,14,611,12,"log"],[545,17,611,15],[545,18,611,16],[545,39,611,37,"ability"],[545,46,611,44],[545,47,611,45,"name"],[545,51,611,49],[545,66,611,64,"JSON"],[545,70,611,68],[545,71,611,69,"stringify"],[545,80,611,78],[545,81,611,79,"ability"],[545,88,611,86],[545,89,611,87,"effects"],[545,96,611,94],[545,97,611,95],[545,113,611,111,"ability"],[545,120,611,118],[545,121,611,119,"stats"],[545,126,611,124],[545,127,611,125,"aoeRadius"],[545,136,611,134],[545,148,611,146,"isAOE"],[545,153,611,151],[545,155,611,153],[545,156,611,154],[546,6,613,4],[546,10,613,8,"isAOE"],[546,15,613,13],[546,17,613,15],[547,8,614,6,"console"],[547,15,614,13],[547,16,614,14,"log"],[547,19,614,17],[547,20,614,18],[547,39,614,37,"ability"],[547,46,614,44],[547,47,614,45,"name"],[547,51,614,49],[547,67,614,65,"ability"],[547,74,614,72],[547,75,614,73,"stats"],[547,80,614,78],[547,81,614,79,"aoeRadius"],[547,90,614,88],[547,92,614,90],[547,93,614,91],[549,8,616,6],[550,8,617,6],[551,8,618,6],[551,14,618,12,"ninjaX"],[551,20,618,18],[551,23,618,21,"currentNinjaPosition"],[551,43,618,41],[551,44,618,42,"x"],[551,45,618,43],[551,48,618,46],[551,50,618,48],[551,51,618,49],[551,52,618,50],[552,8,619,6],[552,14,619,12,"ninjaY"],[552,20,619,18],[552,23,619,21,"currentNinjaPosition"],[552,43,619,41],[552,44,619,42,"y"],[552,45,619,43],[552,48,619,46],[552,50,619,48],[553,8,620,6],[553,14,620,12,"aoeRadius"],[553,23,620,21],[553,26,620,24,"ability"],[553,33,620,31],[553,34,620,32,"stats"],[553,39,620,37],[553,40,620,38,"aoeRadius"],[553,49,620,47],[554,8,622,6],[554,14,622,12,"enemiesInRange"],[554,28,622,26],[554,31,622,29,"state"],[554,36,622,34],[554,37,622,35,"enemies"],[554,44,622,42],[554,45,622,43,"filter"],[554,51,622,49],[554,52,622,50,"enemy"],[554,57,622,55],[554,61,622,59],[555,10,623,8],[555,16,623,14,"enemyX"],[555,22,623,20],[555,25,623,23,"enemy"],[555,30,623,28],[555,31,623,29,"position"],[555,39,623,37],[555,40,623,38,"x"],[555,41,623,39],[555,44,623,42],[555,48,623,46],[555,49,623,47],[555,50,623,48],[556,10,624,8],[556,16,624,14,"enemyY"],[556,22,624,20],[556,25,624,23,"enemy"],[556,30,624,28],[556,31,624,29,"position"],[556,39,624,37],[556,40,624,38,"y"],[556,41,624,39],[556,44,624,42],[556,48,624,46],[557,10,625,8],[557,16,625,14,"distance"],[557,24,625,22],[557,27,625,25,"Math"],[557,31,625,29],[557,32,625,30,"sqrt"],[557,36,625,34],[557,37,625,35,"Math"],[557,41,625,39],[557,42,625,40,"pow"],[557,45,625,43],[557,46,625,44,"enemyX"],[557,52,625,50],[557,55,625,53,"ninjaX"],[557,61,625,59],[557,63,625,61],[557,64,625,62],[557,65,625,63],[557,68,625,66,"Math"],[557,72,625,70],[557,73,625,71,"pow"],[557,76,625,74],[557,77,625,75,"enemyY"],[557,83,625,81],[557,86,625,84,"ninjaY"],[557,92,625,90],[557,94,625,92],[557,95,625,93],[557,96,625,94],[557,97,625,95],[558,10,626,8],[558,17,626,15,"distance"],[558,25,626,23],[558,29,626,27,"aoeRadius"],[558,38,626,36],[559,8,627,6],[559,9,627,7],[559,10,627,8],[560,8,629,6,"console"],[560,15,629,13],[560,16,629,14,"log"],[560,19,629,17],[560,20,629,18],[560,45,629,43,"enemiesInRange"],[560,59,629,57],[560,60,629,58,"length"],[560,66,629,64],[560,88,629,86,"aoeRadius"],[560,97,629,95],[560,107,629,105],[560,108,629,106],[562,8,631,6],[563,8,632,6,"enemiesInRange"],[563,22,632,20],[563,23,632,21,"forEach"],[563,30,632,28],[563,31,632,29,"enemy"],[563,36,632,34],[563,40,632,38],[564,10,633,8],[564,16,633,14,"damageResult"],[564,28,633,26],[564,31,633,29,"DamageCalculator"],[564,50,633,45],[564,51,633,45,"DamageCalculator"],[564,67,633,45],[564,68,633,46,"calculateDamage"],[564,83,633,61],[564,84,633,62,"damage"],[564,90,633,68],[564,92,633,70,"state"],[564,97,633,75],[564,98,633,76,"playerStats"],[564,109,633,87],[564,111,633,89,"enemy"],[564,116,633,94],[564,117,633,95,"stats"],[564,122,633,100],[564,123,633,101],[565,10,634,8,"createProjectile"],[565,26,634,24],[565,27,634,25,"enemy"],[565,32,634,30],[565,34,634,32,"damageResult"],[565,46,634,44],[565,47,634,45,"damage"],[565,53,634,51],[565,55,634,53,"currentNinjaPosition"],[565,75,634,73],[565,77,634,75],[566,12,635,10,"id"],[566,14,635,12],[566,16,635,14,"ability"],[566,23,635,21],[566,24,635,22,"id"],[566,26,635,24],[567,12,636,10,"name"],[567,16,636,14],[567,18,636,16,"ability"],[567,25,636,23],[567,26,636,24,"name"],[567,30,636,28],[568,12,637,10,"icon"],[568,16,637,14],[568,18,637,16,"ability"],[568,25,637,23],[568,26,637,24,"icon"],[569,10,638,8],[569,11,638,9],[569,12,638,10],[570,10,639,8,"console"],[570,17,639,15],[570,18,639,16,"log"],[570,21,639,19],[570,22,639,20],[570,37,639,35,"enemy"],[570,42,639,40],[570,43,639,41,"name"],[570,47,639,45],[570,55,639,53,"damageResult"],[570,67,639,65],[570,68,639,66,"damage"],[570,74,639,72],[570,83,639,81],[570,84,639,82],[572,10,641,8],[573,10,642,8],[573,14,642,12,"damageResult"],[573,26,642,24],[573,27,642,25,"damage"],[573,33,642,31],[573,37,642,35,"enemy"],[573,42,642,40],[573,43,642,41,"health"],[573,49,642,47],[573,51,642,49],[574,12,643,10,"console"],[574,19,643,17],[574,20,643,18,"log"],[574,23,643,21],[574,24,643,22],[574,67,643,65,"enemy"],[574,72,643,70],[574,73,643,71,"name"],[574,77,643,75],[574,90,643,88,"damageResult"],[574,102,643,100],[574,103,643,101,"damage"],[574,109,643,107],[574,124,643,122,"enemy"],[574,129,643,127],[574,130,643,128,"health"],[574,136,643,134],[574,139,643,137],[574,140,643,138],[575,10,644,8],[576,8,645,6],[576,9,645,7],[576,10,645,8],[577,8,647,6,"console"],[577,15,647,13],[577,16,647,14,"log"],[577,19,647,17],[577,20,647,18],[577,26,647,24,"ability"],[577,33,647,31],[577,34,647,32,"name"],[577,38,647,36],[577,56,647,54,"enemiesInRange"],[577,70,647,68],[577,71,647,69,"length"],[577,77,647,75],[577,93,647,91,"damage"],[577,99,647,97],[577,118,647,116],[577,119,647,117],[578,6,649,4],[578,7,649,5],[578,13,649,11],[579,8,650,6],[580,8,651,6],[580,14,651,12,"target"],[580,20,651,18],[580,23,651,21,"findClosestEnemyInternal"],[580,47,651,45],[580,48,651,46,"state"],[580,53,651,51],[580,54,651,52,"enemies"],[580,61,651,59],[580,62,651,60],[581,8,652,6],[581,12,652,10],[581,13,652,11,"target"],[581,19,652,17],[581,21,652,19],[582,8,654,6],[582,14,654,12,"damageResult"],[582,26,654,24],[582,29,654,27,"DamageCalculator"],[582,48,654,43],[582,49,654,43,"DamageCalculator"],[582,65,654,43],[582,66,654,44,"calculateDamage"],[582,81,654,59],[582,82,654,60,"damage"],[582,88,654,66],[582,90,654,68,"state"],[582,95,654,73],[582,96,654,74,"playerStats"],[582,107,654,85],[582,109,654,87,"target"],[582,115,654,93],[582,116,654,94,"stats"],[582,121,654,99],[582,122,654,100],[584,8,656,6],[585,8,657,6,"console"],[585,15,657,13],[585,16,657,14,"log"],[585,19,657,17],[585,20,657,18],[585,71,657,69,"target"],[585,77,657,75],[585,78,657,76,"name"],[585,82,657,80],[585,91,657,89,"damageResult"],[585,103,657,101],[585,104,657,102,"damage"],[585,110,657,108],[585,119,657,117],[585,120,657,118],[586,8,658,6,"createProjectile"],[586,24,658,22],[586,25,658,23,"target"],[586,31,658,29],[586,33,658,31,"damageResult"],[586,45,658,43],[586,46,658,44,"damage"],[586,52,658,50],[586,54,658,52,"currentNinjaPosition"],[586,74,658,72],[586,76,658,74],[587,10,659,8,"id"],[587,12,659,10],[587,14,659,12,"ability"],[587,21,659,19],[587,22,659,20,"id"],[587,24,659,22],[588,10,660,8,"name"],[588,14,660,12],[588,16,660,14,"ability"],[588,23,660,21],[588,24,660,22,"name"],[588,28,660,26],[589,10,661,8,"icon"],[589,14,661,12],[589,16,661,14,"ability"],[589,23,661,21],[589,24,661,22,"icon"],[590,8,662,6],[590,9,662,7],[590,10,662,8],[591,8,664,6,"console"],[591,15,664,13],[591,16,664,14,"log"],[591,19,664,17],[591,20,664,18],[591,26,664,24,"ability"],[591,33,664,31],[591,34,664,32,"name"],[591,38,664,36],[591,66,664,64,"damageResult"],[591,78,664,76],[591,79,664,77,"damage"],[591,85,664,83],[591,95,664,93,"damageResult"],[591,107,664,105],[591,108,664,106,"isCritical"],[591,118,664,116],[591,121,664,119],[591,131,664,129],[591,134,664,132],[591,136,664,134],[591,138,664,136],[591,139,664,137],[593,8,666,6],[594,8,667,6],[594,12,667,10,"damageResult"],[594,24,667,22],[594,25,667,23,"damage"],[594,31,667,29],[594,35,667,33,"target"],[594,41,667,39],[594,42,667,40,"health"],[594,48,667,46],[594,50,667,48],[595,10,668,8,"console"],[595,17,668,15],[595,18,668,16,"log"],[595,21,668,19],[595,22,668,20],[595,75,668,73,"target"],[595,81,668,79],[595,82,668,80,"name"],[595,86,668,84],[595,99,668,97,"damageResult"],[595,111,668,109],[595,112,668,110,"damage"],[595,118,668,116],[595,133,668,131,"target"],[595,139,668,137],[595,140,668,138,"health"],[595,146,668,144],[595,149,668,147],[595,150,668,148],[596,8,669,6],[597,6,670,4],[599,6,672,4],[600,6,673,4],[600,10,673,8,"ability"],[600,17,673,15],[600,18,673,16,"effects"],[600,25,673,23],[600,26,673,24,"includes"],[600,34,673,32],[600,35,673,33],[600,40,673,38],[600,41,673,39],[600,45,673,43,"ability"],[600,52,673,50],[600,53,673,51,"stats"],[600,58,673,56],[600,59,673,57,"duration"],[600,67,673,65],[600,69,673,67],[601,8,674,6],[601,14,674,12,"targets"],[601,21,674,19],[601,24,674,22,"isAOE"],[601,29,674,27],[601,32,675,8,"state"],[601,37,675,13],[601,38,675,14,"enemies"],[601,45,675,21],[601,46,675,22,"filter"],[601,52,675,28],[601,53,675,29,"enemy"],[601,58,675,34],[601,62,675,38],[602,10,676,10],[602,16,676,16,"ninjaX"],[602,22,676,22],[602,25,676,25,"currentNinjaPosition"],[602,45,676,45],[602,46,676,46,"x"],[602,47,676,47],[602,50,676,50],[602,52,676,52],[603,10,677,10],[603,16,677,16,"ninjaY"],[603,22,677,22],[603,25,677,25,"currentNinjaPosition"],[603,45,677,45],[603,46,677,46,"y"],[603,47,677,47],[603,50,677,50],[603,52,677,52],[604,10,678,10],[604,16,678,16,"enemyX"],[604,22,678,22],[604,25,678,25,"enemy"],[604,30,678,30],[604,31,678,31,"position"],[604,39,678,39],[604,40,678,40,"x"],[604,41,678,41],[604,44,678,44],[604,48,678,48],[605,10,679,10],[605,16,679,16,"enemyY"],[605,22,679,22],[605,25,679,25,"enemy"],[605,30,679,30],[605,31,679,31,"position"],[605,39,679,39],[605,40,679,40,"y"],[605,41,679,41],[605,44,679,44],[605,48,679,48],[606,10,680,10],[606,16,680,16,"distance"],[606,24,680,24],[606,27,680,27,"Math"],[606,31,680,31],[606,32,680,32,"sqrt"],[606,36,680,36],[606,37,680,37,"Math"],[606,41,680,41],[606,42,680,42,"pow"],[606,45,680,45],[606,46,680,46,"enemyX"],[606,52,680,52],[606,55,680,55,"ninjaX"],[606,61,680,61],[606,63,680,63],[606,64,680,64],[606,65,680,65],[606,68,680,68,"Math"],[606,72,680,72],[606,73,680,73,"pow"],[606,76,680,76],[606,77,680,77,"enemyY"],[606,83,680,83],[606,86,680,86,"ninjaY"],[606,92,680,92],[606,94,680,94],[606,95,680,95],[606,96,680,96],[606,97,680,97],[607,10,681,10],[607,17,681,17,"distance"],[607,25,681,25],[607,29,681,29,"ability"],[607,36,681,36],[607,37,681,37,"stats"],[607,42,681,42],[607,43,681,43,"aoeRadius"],[607,52,681,52],[608,8,682,8],[608,9,682,9],[608,10,682,10],[608,13,683,8],[608,14,683,9,"findClosestEnemyInternal"],[608,38,683,33],[608,39,683,34,"state"],[608,44,683,39],[608,45,683,40,"enemies"],[608,52,683,47],[608,53,683,48],[608,54,683,49],[608,55,683,50,"filter"],[608,61,683,56],[608,62,683,57,"Boolean"],[608,69,683,64],[608,70,683,65],[609,8,685,6,"targets"],[609,15,685,13],[609,16,685,14,"forEach"],[609,23,685,21],[609,24,685,22,"target"],[609,30,685,28],[609,34,685,32],[610,10,686,8,"state"],[610,15,686,13],[610,16,686,14,"statusEffects"],[610,29,686,27],[610,30,686,28,"addEffect"],[610,39,686,37],[610,40,686,38,"target"],[610,46,686,44],[610,47,686,45,"id"],[610,49,686,47],[610,51,686,49],[611,12,687,10,"id"],[611,14,687,12],[611,16,687,14],[611,19,687,17,"ability"],[611,26,687,24],[611,27,687,25,"id"],[611,29,687,27],[611,35,687,33],[612,12,688,10,"type"],[612,16,688,14],[612,18,688,16],[612,23,688,21],[613,12,689,10,"remainingTicks"],[613,26,689,24],[613,28,689,26,"Math"],[613,32,689,30],[613,33,689,31,"floor"],[613,38,689,36],[613,39,689,37,"ability"],[613,46,689,44],[613,47,689,45,"stats"],[613,52,689,50],[613,53,689,51,"duration"],[613,61,689,59],[613,64,689,62],[613,66,689,64],[613,67,689,65],[614,12,690,10,"tickInterval"],[614,24,690,22],[614,26,690,24],[614,28,690,26],[615,12,691,10,"lastTick"],[615,20,691,18],[615,22,691,20,"state"],[615,27,691,25],[615,28,691,26,"currentTick"],[615,39,691,37],[616,12,692,10,"value"],[616,17,692,15],[616,19,692,17,"Math"],[616,23,692,21],[616,24,692,22,"floor"],[616,29,692,27],[616,30,692,28,"damage"],[616,36,692,34],[616,39,692,37],[616,42,692,40],[616,43,692,41],[617,12,693,10,"stackable"],[617,21,693,19],[617,23,693,21],[618,10,694,8],[618,11,694,9],[618,12,694,10],[619,8,695,6],[619,9,695,7],[619,10,695,8],[620,6,696,4],[622,6,698,4],[623,6,699,4],[623,10,699,8,"ability"],[623,17,699,15],[623,18,699,16,"effects"],[623,25,699,23],[623,26,699,24,"includes"],[623,34,699,32],[623,35,699,33],[623,41,699,39],[623,42,699,40],[623,46,699,44,"ability"],[623,53,699,51],[623,54,699,52,"id"],[623,56,699,54],[623,61,699,59],[623,75,699,73],[623,77,699,75],[624,8,700,6,"console"],[624,15,700,13],[624,16,700,14,"log"],[624,19,700,17],[624,20,700,18],[624,66,700,64,"ability"],[624,73,700,71],[624,74,700,72,"stats"],[624,79,700,77],[624,80,700,78,"duration"],[624,88,700,86],[624,98,700,96],[624,99,700,97],[626,8,702,6],[627,8,703,6],[627,14,703,12,"cloneX"],[627,20,703,18],[627,23,703,21,"currentNinjaPosition"],[627,43,703,41],[627,44,703,42,"x"],[627,45,703,43],[627,48,703,46],[627,50,703,48],[627,51,703,49],[627,52,703,50],[628,8,704,6],[628,14,704,12,"cloneY"],[628,20,704,18],[628,23,704,21,"currentNinjaPosition"],[628,43,704,41],[628,44,704,42,"y"],[628,45,704,43],[628,48,704,46],[628,50,704,48],[628,51,704,49],[628,52,704,50],[630,8,706,6,"state"],[630,13,706,11],[630,14,706,12,"shadowClone"],[630,25,706,23],[630,28,706,26],[631,10,707,8,"id"],[631,12,707,10],[631,14,707,12],[631,30,707,28,"Date"],[631,34,707,32],[631,35,707,33,"now"],[631,38,707,36],[631,39,707,37],[631,40,707,38],[631,42,707,40],[632,10,708,8,"remainingTicks"],[632,24,708,22],[632,26,708,24,"Math"],[632,30,708,28],[632,31,708,29,"floor"],[632,36,708,34],[632,37,708,35,"ability"],[632,44,708,42],[632,45,708,43,"stats"],[632,50,708,48],[632,51,708,49,"duration"],[632,59,708,57],[632,62,708,60],[632,64,708,62],[632,65,708,63],[633,10,708,65],[634,10,709,8,"position"],[634,18,709,16],[634,20,709,18],[635,12,709,20,"x"],[635,13,709,21],[635,15,709,23,"cloneX"],[635,21,709,29],[636,12,709,31,"y"],[636,13,709,32],[636,15,709,34,"cloneY"],[637,10,709,41],[637,11,709,42],[638,10,710,8,"damageMultiplier"],[638,26,710,24],[638,28,710,26],[638,31,710,29],[638,32,710,31],[639,8,711,6],[639,9,711,7],[640,8,713,6,"console"],[640,15,713,13],[640,16,713,14,"log"],[640,19,713,17],[640,20,713,18],[640,63,713,61,"ability"],[640,70,713,68],[640,71,713,69,"stats"],[640,76,713,74],[640,77,713,75,"duration"],[640,85,713,83],[640,108,713,106],[640,109,713,107],[641,6,714,4],[642,4,715,2],[642,5,715,3],[644,4,717,2],[645,4,718,2],[645,10,718,8,"createProjectile"],[645,26,718,24],[645,29,718,27,"createProjectile"],[645,30,718,28,"targetEnemy"],[645,41,718,52],[645,43,718,54,"damage"],[645,49,718,68],[645,51,718,70,"ninjaPos"],[645,59,718,103],[645,61,718,105,"abilityInfo"],[645,72,718,159],[645,74,718,161,"isAOE"],[645,79,718,176],[645,81,718,178,"aoeRadius"],[645,90,718,196],[645,95,718,201],[646,6,719,4],[646,10,719,8],[646,11,719,9,"targetEnemy"],[646,22,719,20],[646,24,719,22],[647,8,720,6,"console"],[647,15,720,13],[647,16,720,14,"log"],[647,19,720,17],[647,20,720,18],[647,65,720,63],[647,66,720,64],[648,8,721,6],[648,15,721,13],[648,19,721,17],[649,6,722,4],[650,6,724,4],[650,12,724,10,"SCREEN_WIDTH"],[650,24,724,22],[650,27,724,25],[650,30,724,28],[651,6,725,4],[651,12,725,10,"GAME_AREA_HEIGHT"],[651,28,725,26],[651,31,725,29],[651,34,725,32],[651,37,725,35],[651,40,725,38],[651,41,725,39],[651,42,725,40],[652,6,726,4],[652,12,726,10,"NINJA_SIZE"],[652,22,726,20],[652,25,726,23],[652,27,726,25],[654,6,728,4],[655,6,729,4],[655,12,729,10,"ninjaX"],[655,18,729,16],[655,21,729,19,"ninjaPos"],[655,29,729,27],[655,32,729,30,"ninjaPos"],[655,40,729,38],[655,41,729,39,"x"],[655,42,729,40],[655,45,729,43,"NINJA_SIZE"],[655,55,729,53],[655,58,729,56],[655,59,729,57],[655,62,729,60,"SCREEN_WIDTH"],[655,74,729,72],[655,77,729,75],[655,78,729,76],[656,6,730,4],[656,12,730,10,"ninjaY"],[656,18,730,16],[656,21,730,19,"ninjaPos"],[656,29,730,27],[656,32,730,30,"ninjaPos"],[656,40,730,38],[656,41,730,39,"y"],[656,42,730,40],[656,45,730,43,"NINJA_SIZE"],[656,55,730,53],[656,58,730,56],[656,59,730,57],[656,62,730,60,"GAME_AREA_HEIGHT"],[656,78,730,76],[656,81,730,79],[656,82,730,80],[657,6,731,4],[657,12,731,10,"ENEMY_SIZE"],[657,22,731,20],[657,25,731,23],[657,27,731,25],[658,6,733,4],[658,12,733,10,"projectileId"],[658,24,733,22],[658,27,733,25],[658,35,733,33,"Date"],[658,39,733,37],[658,40,733,38,"now"],[658,43,733,41],[658,44,733,42],[658,45,733,43],[658,49,733,47,"Math"],[658,53,733,51],[658,54,733,52,"random"],[658,60,733,58],[658,61,733,59],[658,62,733,60],[658,64,733,62],[659,6,735,4],[659,12,735,10,"projectile"],[659,22,735,38],[659,25,735,41],[660,8,736,6,"id"],[660,10,736,8],[660,12,736,10,"projectileId"],[660,24,736,22],[661,8,737,6,"x"],[661,9,737,7],[661,11,737,9,"ninjaX"],[661,17,737,15],[662,8,738,6,"y"],[662,9,738,7],[662,11,738,9,"ninjaY"],[662,17,738,15],[663,8,739,6,"targetX"],[663,15,739,13],[663,17,739,15,"targetEnemy"],[663,28,739,26],[663,29,739,27,"position"],[663,37,739,35],[663,38,739,36,"x"],[663,39,739,37],[663,42,739,40,"ENEMY_SIZE"],[663,52,739,50],[663,55,739,53],[663,56,739,54],[664,8,740,6,"targetY"],[664,15,740,13],[664,17,740,15,"targetEnemy"],[664,28,740,26],[664,29,740,27,"position"],[664,37,740,35],[664,38,740,36,"y"],[664,39,740,37],[664,42,740,40,"ENEMY_SIZE"],[664,52,740,50],[664,55,740,53],[664,56,740,54],[665,8,741,6,"targetEnemyId"],[665,21,741,19],[665,23,741,21,"targetEnemy"],[665,34,741,32],[665,35,741,33,"id"],[665,37,741,35],[666,8,742,6,"damage"],[666,14,742,12],[666,16,742,14,"damage"],[666,22,742,20],[667,8,743,6,"startTime"],[667,17,743,15],[667,19,743,17,"Date"],[667,23,743,21],[667,24,743,22,"now"],[667,27,743,25],[667,28,743,26],[667,29,743,27],[668,8,744,6,"duration"],[668,16,744,14],[668,18,744,16],[668,21,744,19],[669,8,744,21],[670,8,745,6],[671,8,746,6,"abilityId"],[671,17,746,15],[671,19,746,17,"abilityInfo"],[671,30,746,28],[671,32,746,30,"id"],[671,34,746,32],[671,38,746,36],[671,54,746,52],[672,8,747,6,"abilityName"],[672,19,747,17],[672,21,747,19,"abilityInfo"],[672,32,747,30],[672,34,747,32,"name"],[672,38,747,36],[672,42,747,40],[672,58,747,56],[673,8,748,6,"abilityIcon"],[673,19,748,17],[673,21,748,19,"abilityInfo"],[673,32,748,30],[673,34,748,32,"icon"],[673,38,748,36],[673,42,748,40],[673,46,748,44],[674,8,748,46],[675,8,749,6],[676,8,750,6,"isAOE"],[676,13,750,11],[676,15,750,13,"isAOE"],[676,20,750,18],[676,24,750,22],[676,29,750,27],[677,8,751,6,"aoeRadius"],[677,17,751,15],[677,19,751,17,"aoeRadius"],[677,28,751,26],[677,32,751,30],[678,6,752,4],[678,7,752,5],[679,6,754,4,"console"],[679,13,754,11],[679,14,754,12,"log"],[679,17,754,15],[679,18,754,16],[679,44,754,42,"abilityInfo"],[679,55,754,53],[679,57,754,55,"name"],[679,61,754,59],[679,65,754,63],[679,81,754,79],[679,101,754,99,"projectileId"],[679,113,754,111],[679,128,754,126,"targetEnemy"],[679,139,754,137],[679,140,754,138,"name"],[679,144,754,142],[679,152,754,150,"damage"],[679,158,754,156],[679,167,754,165],[679,168,754,166],[680,6,755,4,"console"],[680,13,755,11],[680,14,755,12,"log"],[680,17,755,15],[680,18,755,16],[680,48,755,46,"isAOE"],[680,53,755,51],[680,68,755,66,"aoeRadius"],[680,77,755,75],[680,89,755,87,"damage"],[680,95,755,93],[680,97,755,95],[680,98,755,96],[681,6,757,4,"console"],[681,13,757,11],[681,14,757,12,"log"],[681,17,757,15],[681,18,757,16],[681,53,757,51,"targetEnemy"],[681,64,757,62],[681,65,757,63,"id"],[681,67,757,65],[681,75,757,73,"damage"],[681,81,757,79],[681,90,757,88],[681,91,757,89],[682,6,758,4,"console"],[682,13,758,11],[682,14,758,12,"log"],[682,17,758,15],[682,18,758,16],[682,53,758,51,"ninjaX"],[682,59,758,57],[682,64,758,62,"ninjaY"],[682,70,758,68],[682,87,758,85,"projectile"],[682,97,758,95],[682,98,758,96,"targetX"],[682,105,758,103],[682,110,758,108,"projectile"],[682,120,758,118],[682,121,758,119,"targetY"],[682,128,758,126],[682,131,758,129],[682,132,758,130],[683,6,760,4,"setProjectiles"],[683,20,760,18],[683,21,760,19,"prev"],[683,25,760,23],[683,29,760,27],[683,30,760,28],[683,33,760,31,"prev"],[683,37,760,35],[683,39,760,37,"projectile"],[683,49,760,47],[683,50,760,48],[683,51,760,49],[685,6,762,4],[686,6,763,4,"setTimeout"],[686,16,763,14],[686,17,763,15],[686,23,763,21],[687,8,764,6,"handleProjectileHit"],[687,27,764,25],[687,28,764,26,"projectile"],[687,38,764,36],[687,39,764,37],[688,6,765,4],[688,7,765,5],[688,9,765,7],[688,12,765,10],[688,13,765,11],[689,6,767,4],[689,13,767,11,"projectile"],[689,23,767,21],[690,4,768,2],[690,5,768,3],[692,4,770,2],[693,4,771,2],[693,10,771,8,"spawnTestEnemy"],[693,24,771,22],[693,27,771,26,"state"],[693,32,771,44],[693,36,771,49],[694,6,772,4,"console"],[694,13,772,11],[694,14,772,12,"log"],[694,17,772,15],[694,18,772,16],[694,83,772,81],[694,84,772,82],[696,6,774,4],[697,6,775,4],[697,12,775,10,"zoneEnemy"],[697,21,775,19],[697,24,775,22,"spawnZoneEnemy"],[697,38,775,36],[697,39,775,37],[697,40,775,38],[698,6,776,4],[698,10,776,8],[698,11,776,9,"zoneEnemy"],[698,20,776,18],[698,22,776,20],[699,8,777,6,"console"],[699,15,777,13],[699,16,777,14,"log"],[699,19,777,17],[699,20,777,18],[699,76,777,74],[699,77,777,75],[700,8,778,6],[701,8,779,6,"spawnBasicTestEnemy"],[701,27,779,25],[701,28,779,26,"state"],[701,33,779,31],[701,34,779,32],[702,8,780,6],[703,6,781,4],[704,6,783,4,"console"],[704,13,783,11],[704,14,783,12,"log"],[704,17,783,15],[704,18,783,16],[704,44,783,42,"zoneEnemy"],[704,53,783,51],[704,54,783,52,"name"],[704,58,783,56],[704,63,783,61,"zoneEnemy"],[704,72,783,70],[704,73,783,71,"typeId"],[704,79,783,77],[704,94,783,92,"currentZone"],[704,105,783,103],[704,107,783,105,"id"],[704,109,783,107],[704,119,783,117,"currentZoneLevel"],[704,135,783,133],[704,137,783,135,"level"],[704,142,783,140],[704,144,783,142],[704,145,783,143],[706,6,785,4],[707,6,786,4],[707,12,786,10,"combatEnemy"],[707,23,786,34],[707,26,786,37],[708,8,787,6,"id"],[708,10,787,8],[708,12,787,10,"zoneEnemy"],[708,21,787,19],[708,22,787,20,"id"],[708,24,787,22],[709,8,788,6,"name"],[709,12,788,10],[709,14,788,12,"zoneEnemy"],[709,23,788,21],[709,24,788,22,"name"],[709,28,788,26],[710,8,789,6,"health"],[710,14,789,12],[710,16,789,14,"zoneEnemy"],[710,25,789,23],[710,26,789,24,"hp"],[710,28,789,26],[711,8,790,6,"maxHealth"],[711,17,790,15],[711,19,790,17,"zoneEnemy"],[711,28,790,26],[711,29,790,27,"maxHP"],[711,34,790,32],[712,8,791,6,"stats"],[712,13,791,11],[712,15,791,13],[713,10,792,8,"attack"],[713,16,792,14],[713,18,792,16,"zoneEnemy"],[713,27,792,25],[713,28,792,26,"attack"],[713,34,792,32],[714,10,793,8,"defense"],[714,17,793,15],[714,19,793,17],[714,21,793,19],[715,10,793,21],[716,10,794,8,"health"],[716,16,794,14],[716,18,794,16,"zoneEnemy"],[716,27,794,25],[716,28,794,26,"hp"],[716,30,794,28],[717,10,795,8,"maxHealth"],[717,19,795,17],[717,21,795,19,"zoneEnemy"],[717,30,795,28],[717,31,795,29,"maxHP"],[717,36,795,34],[718,10,796,8,"critChance"],[718,20,796,18],[718,22,796,20],[718,23,796,21],[719,10,797,8,"critDamage"],[719,20,797,18],[719,22,797,20],[719,25,797,23],[720,10,798,8,"cooldownReduction"],[720,27,798,25],[720,29,798,27],[721,8,799,6],[721,9,799,7],[722,8,800,6,"position"],[722,16,800,14],[722,18,800,16,"zoneEnemy"],[722,27,800,25],[722,28,800,26,"position"],[722,36,800,34],[723,8,801,6,"lastDamaged"],[723,19,801,17],[723,21,801,19],[723,22,801,20],[724,8,802,6],[725,8,803,6,"zoneTypeId"],[725,18,803,16],[725,20,803,18,"zoneEnemy"],[725,29,803,27],[725,30,803,28,"typeId"],[725,36,803,34],[726,8,804,6,"zoneXP"],[726,14,804,12],[726,16,804,14,"zoneEnemy"],[726,25,804,23],[726,26,804,24,"xp"],[727,6,805,4],[727,7,805,5],[728,6,807,4,"console"],[728,13,807,11],[728,14,807,12,"log"],[728,17,807,15],[728,18,807,16],[728,42,807,40,"combatEnemy"],[728,53,807,51],[728,54,807,52,"name"],[728,58,807,56],[728,67,807,65,"combatEnemy"],[728,78,807,76],[728,79,807,77,"health"],[728,85,807,83],[728,100,807,98,"currentZone"],[728,111,807,109],[728,113,807,111,"id"],[728,115,807,113],[728,125,807,123,"currentZoneLevel"],[728,141,807,139],[728,143,807,141,"level"],[728,148,807,146],[728,150,807,148],[728,151,807,149],[729,6,808,4,"state"],[729,11,808,9],[729,12,808,10,"enemies"],[729,19,808,17],[729,20,808,18,"push"],[729,24,808,22],[729,25,808,23,"combatEnemy"],[729,36,808,34],[729,37,808,35],[730,4,809,2],[730,5,809,3],[732,4,811,2],[733,4,812,2],[733,10,812,8,"spawnBasicTestEnemy"],[733,29,812,27],[733,32,812,31,"state"],[733,37,812,49],[733,41,812,54],[734,6,813,4],[734,12,813,10,"SCREEN_WIDTH"],[734,24,813,22],[734,27,813,25],[734,30,813,28],[735,6,814,4],[735,12,814,10,"GAME_AREA_HEIGHT"],[735,28,814,26],[735,31,814,29],[735,34,814,32],[735,37,814,35],[735,40,814,38],[736,6,815,4],[736,12,815,10,"ENEMY_SIZE"],[736,22,815,20],[736,25,815,23],[736,27,815,25],[737,6,817,4],[737,12,817,10,"x"],[737,13,817,11],[737,16,817,14,"Math"],[737,20,817,18],[737,21,817,19,"random"],[737,27,817,25],[737,28,817,26],[737,29,817,27],[737,33,817,31,"SCREEN_WIDTH"],[737,45,817,43],[737,48,817,46,"ENEMY_SIZE"],[737,58,817,56],[737,61,817,59],[737,62,817,60],[737,63,817,61],[737,66,817,64,"ENEMY_SIZE"],[737,76,817,74],[738,6,818,4],[738,12,818,10,"y"],[738,13,818,11],[738,16,818,14,"Math"],[738,20,818,18],[738,21,818,19,"random"],[738,27,818,25],[738,28,818,26],[738,29,818,27],[738,33,818,31,"GAME_AREA_HEIGHT"],[738,49,818,47],[738,52,818,50,"ENEMY_SIZE"],[738,62,818,60],[738,65,818,63],[738,66,818,64],[738,67,818,65],[738,70,818,68,"ENEMY_SIZE"],[738,80,818,78],[739,6,820,4],[739,12,820,10,"enemy"],[739,17,820,28],[739,20,820,31],[740,8,821,6,"id"],[740,10,821,8],[740,12,821,10],[740,30,821,28,"Date"],[740,34,821,32],[740,35,821,33,"now"],[740,38,821,36],[740,39,821,37],[740,40,821,38],[740,44,821,42,"Math"],[740,48,821,46],[740,49,821,47,"random"],[740,55,821,53],[740,56,821,54],[740,57,821,55],[740,59,821,57],[741,8,822,6,"name"],[741,12,822,10],[741,14,822,12],[741,26,822,24,"Math"],[741,30,822,28],[741,31,822,29,"floor"],[741,36,822,34],[741,37,822,35,"Math"],[741,41,822,39],[741,42,822,40,"random"],[741,48,822,46],[741,49,822,47],[741,50,822,48],[741,53,822,51],[741,56,822,54],[741,57,822,55],[741,59,822,57],[742,8,823,6,"health"],[742,14,823,12],[742,16,823,14],[742,18,823,16],[743,8,824,6,"maxHealth"],[743,17,824,15],[743,19,824,17],[743,21,824,19],[744,8,825,6,"stats"],[744,13,825,11],[744,15,825,13],[745,10,826,8,"attack"],[745,16,826,14],[745,18,826,16],[745,20,826,18],[746,10,827,8,"defense"],[746,17,827,15],[746,19,827,17],[746,21,827,19],[747,10,828,8,"health"],[747,16,828,14],[747,18,828,16],[747,20,828,18],[748,10,829,8,"maxHealth"],[748,19,829,17],[748,21,829,19],[748,23,829,21],[749,10,830,8,"critChance"],[749,20,830,18],[749,22,830,20],[749,23,830,21],[750,10,831,8,"critDamage"],[750,20,831,18],[750,22,831,20],[750,25,831,23],[751,10,832,8,"cooldownReduction"],[751,27,832,25],[751,29,832,27],[752,8,833,6],[752,9,833,7],[753,8,834,6,"position"],[753,16,834,14],[753,18,834,16],[754,10,834,18,"x"],[754,11,834,19],[755,10,834,21,"y"],[756,8,834,23],[756,9,834,24],[757,8,835,6,"lastDamaged"],[757,19,835,17],[757,21,835,19],[758,6,836,4],[758,7,836,5],[759,6,838,4,"console"],[759,13,838,11],[759,14,838,12,"log"],[759,17,838,15],[759,18,838,16],[759,42,838,40,"enemy"],[759,47,838,45],[759,48,838,46,"name"],[759,52,838,50],[759,60,838,58,"Math"],[759,64,838,62],[759,65,838,63,"round"],[759,70,838,68],[759,71,838,69,"x"],[759,72,838,70],[759,73,838,71],[759,78,838,76,"Math"],[759,82,838,80],[759,83,838,81,"round"],[759,88,838,86],[759,89,838,87,"y"],[759,90,838,88],[759,91,838,89],[759,94,838,92],[759,95,838,93],[760,6,839,4,"state"],[760,11,839,9],[760,12,839,10,"enemies"],[760,19,839,17],[760,20,839,18,"push"],[760,24,839,22],[760,25,839,23,"enemy"],[760,30,839,28],[760,31,839,29],[761,4,840,2],[761,5,840,3],[763,4,842,2],[764,4,843,2],[764,10,843,8,"startCombat"],[764,21,843,19],[764,24,843,22,"React"],[764,29,843,27],[764,30,843,27,"default"],[764,37,843,27],[764,38,843,28,"useCallback"],[764,49,843,39],[764,50,843,40],[764,56,843,46],[765,6,844,4,"console"],[765,13,844,11],[765,14,844,12,"log"],[765,17,844,15],[765,18,844,16],[765,63,844,61],[765,64,844,62],[766,6,845,4,"setCombatState"],[766,20,845,18],[766,21,845,19,"prev"],[766,25,845,23],[766,30,845,28],[767,8,845,30],[767,11,845,33,"prev"],[767,15,845,37],[768,8,845,39,"isInCombat"],[768,18,845,49],[768,20,845,51],[769,6,845,56],[769,7,845,57],[769,8,845,58],[769,9,845,59],[771,6,847,4],[772,6,848,4,"combatEngine"],[772,25,848,16],[772,26,848,16,"combatEngine"],[772,38,848,16],[772,39,848,17,"addTickCallback"],[772,54,848,32],[772,55,848,33,"handleCombatTick"],[772,71,848,49],[772,72,848,50],[773,6,849,4,"console"],[773,13,849,11],[773,14,849,12,"log"],[773,17,849,15],[773,18,849,16],[773,62,849,60],[773,63,849,61],[775,6,851,4],[776,6,852,4,"combatEngine"],[776,25,852,16],[776,26,852,16,"combatEngine"],[776,38,852,16],[776,39,852,17,"start"],[776,44,852,22],[776,45,852,23],[776,46,852,24],[777,4,853,2],[777,5,853,3],[777,7,853,5],[777,8,853,6,"combatEngine"],[777,27,853,18],[777,28,853,18,"combatEngine"],[777,40,853,18],[777,42,853,20,"handleCombatTick"],[777,58,853,36],[777,59,853,37],[777,60,853,38],[779,4,855,2],[780,4,856,2],[780,10,856,8,"stopCombat"],[780,20,856,18],[780,23,856,21,"React"],[780,28,856,26],[780,29,856,26,"default"],[780,36,856,26],[780,37,856,27,"useCallback"],[780,48,856,38],[780,49,856,39],[780,55,856,45],[781,6,857,4,"setCombatState"],[781,20,857,18],[781,21,857,19,"prev"],[781,25,857,23],[781,30,857,28],[782,8,857,30],[782,11,857,33,"prev"],[782,15,857,37],[783,8,857,39,"isInCombat"],[783,18,857,49],[783,20,857,51],[784,6,857,57],[784,7,857,58],[784,8,857,59],[784,9,857,60],[785,6,858,4,"combatEngine"],[785,25,858,16],[785,26,858,16,"combatEngine"],[785,38,858,16],[785,39,858,17,"removeTickCallback"],[785,57,858,35],[785,58,858,36,"handleCombatTick"],[785,74,858,52],[785,75,858,53],[786,4,859,2],[786,5,859,3],[786,7,859,5],[786,8,859,6,"combatEngine"],[786,27,859,18],[786,28,859,18,"combatEngine"],[786,40,859,18],[786,42,859,20,"handleCombatTick"],[786,58,859,36],[786,59,859,37],[786,60,859,38],[788,4,861,2],[789,4,862,2],[789,10,862,8,"equipAbility"],[789,22,862,20],[789,25,862,23,"equipAbility"],[789,26,862,24,"abilityId"],[789,35,862,41],[789,37,862,43,"slotIndex"],[789,46,862,60],[789,51,862,74],[790,6,863,4],[790,13,863,11,"combatState"],[790,24,863,22],[790,25,863,23,"abilityManager"],[790,39,863,37],[790,40,863,38,"equipAbility"],[790,52,863,50],[790,53,863,51,"abilityId"],[790,62,863,60],[790,64,863,62,"slotIndex"],[790,73,863,71],[790,74,863,72],[791,4,864,2],[791,5,864,3],[792,4,866,2],[792,10,866,8,"getDeck"],[792,17,866,15],[792,20,866,18,"getDeck"],[792,21,866,18],[792,26,866,24],[793,6,867,4],[793,13,867,11,"combatState"],[793,24,867,22],[793,25,867,23,"abilityManager"],[793,39,867,37],[793,40,867,38,"getDeck"],[793,47,867,45],[793,48,867,46],[793,49,867,47],[794,4,868,2],[794,5,868,3],[795,4,870,2],[795,10,870,8,"getAvailableAbilities"],[795,31,870,29],[795,34,870,32,"getAvailableAbilities"],[795,35,870,32],[795,40,870,38],[796,6,871,4],[796,13,871,11,"combatState"],[796,24,871,22],[796,25,871,23,"abilityManager"],[796,39,871,37],[796,40,871,38,"getAvailableAbilities"],[796,61,871,59],[796,62,871,60],[796,63,871,61],[797,4,872,2],[797,5,872,3],[798,4,874,2],[798,10,874,8,"upgradeAbility"],[798,24,874,22],[798,27,874,26,"abilityId"],[798,36,874,43],[798,40,874,57],[799,6,875,4],[799,13,875,11,"combatState"],[799,24,875,22],[799,25,875,23,"abilityManager"],[799,39,875,37],[799,40,875,38,"upgradeAbility"],[799,54,875,52],[799,55,875,53,"abilityId"],[799,64,875,62],[799,65,875,63],[800,4,876,2],[800,5,876,3],[802,4,878,2],[803,4,879,2],[803,10,879,8,"clearAllEnemies"],[803,25,879,23],[803,28,879,26,"clearAllEnemies"],[803,29,879,26],[803,34,879,32],[804,6,880,4,"console"],[804,13,880,11],[804,14,880,12,"log"],[804,17,880,15],[804,18,880,16],[804,67,880,65],[804,68,880,66],[805,6,881,4,"setCombatState"],[805,20,881,18],[805,21,881,19,"prev"],[805,25,881,23],[805,30,881,28],[806,8,882,6],[806,11,882,9,"prev"],[806,15,882,13],[807,8,883,6,"enemies"],[807,15,883,13],[807,17,883,15],[808,6,884,4],[808,7,884,5],[808,8,884,6],[808,9,884,7],[809,4,885,2],[809,5,885,3],[811,4,887,2],[812,4,888,2],[812,10,888,8,"triggerLevelUpExplosion"],[812,33,888,31],[812,36,888,34,"triggerLevelUpExplosion"],[812,37,888,34],[812,42,888,40],[813,6,889,4,"console"],[813,13,889,11],[813,14,889,12,"log"],[813,17,889,15],[813,18,889,16],[813,70,889,68],[813,71,889,69],[814,6,891,4],[814,12,891,10,"explosionTime"],[814,25,891,23],[814,28,891,26,"Date"],[814,32,891,30],[814,33,891,31,"now"],[814,36,891,34],[814,37,891,35],[814,38,891,36],[815,6,892,4,"setLastExplosionTime"],[815,26,892,24],[815,27,892,25,"explosionTime"],[815,40,892,38],[815,41,892,39],[816,6,894,4,"setCombatState"],[816,20,894,18],[816,21,894,19,"prev"],[816,25,894,23],[816,29,894,27],[817,8,895,6],[818,8,896,6],[818,14,896,12,"enemyCount"],[818,24,896,22],[818,27,896,25,"prev"],[818,31,896,29],[818,32,896,30,"enemies"],[818,39,896,37],[818,40,896,38,"length"],[818,46,896,44],[819,8,897,6],[819,14,897,12,"explosionXP"],[819,25,897,23],[819,28,897,26,"enemyCount"],[819,38,897,36],[819,41,897,39],[819,45,897,43],[819,46,897,44],[819,47,897,45],[820,8,898,6],[820,14,898,12,"explosionGold"],[820,27,898,25],[820,30,898,28,"enemyCount"],[820,40,898,38],[820,43,898,41],[820,46,898,44],[820,47,898,45],[820,48,898,46],[822,8,900,6,"console"],[822,15,900,13],[822,16,900,14,"log"],[822,19,900,17],[822,20,900,18],[822,44,900,42,"enemyCount"],[822,54,900,52],[822,76,900,74,"explosionXP"],[822,87,900,85],[822,98,900,96,"explosionGold"],[822,111,900,109],[822,118,900,116],[822,119,900,117],[824,8,902,6],[825,8,903,6],[825,12,903,10,"explosionXP"],[825,23,903,21],[825,26,903,24],[825,27,903,25],[825,29,903,27],[826,10,904,8,"setTimeout"],[826,20,904,18],[826,21,904,19],[826,27,904,25],[827,12,905,10,"game"],[827,16,905,14],[827,17,905,15,"updateNinja"],[827,28,905,26],[827,29,905,28,"ninja"],[827,34,905,33],[827,39,905,39],[828,14,906,12,"experience"],[828,24,906,22],[828,26,906,24,"ninja"],[828,31,906,29],[828,32,906,30,"experience"],[828,42,906,40],[828,45,906,43,"explosionXP"],[828,56,906,54],[829,14,907,12,"gold"],[829,18,907,16],[829,20,907,18,"ninja"],[829,25,907,23],[829,26,907,24,"gold"],[829,30,907,28],[829,33,907,31,"explosionGold"],[830,12,908,10],[830,13,908,11],[830,14,908,12],[830,15,908,13],[831,10,909,8],[831,11,909,9],[831,13,909,11],[831,14,909,12],[831,15,909,13],[831,16,909,14],[831,17,909,15],[832,8,910,6],[834,8,912,6],[835,8,913,6],[836,8,914,6],[836,14,914,12,"damagedEnemies"],[836,28,914,26],[836,31,914,29,"prev"],[836,35,914,33],[836,36,914,34,"enemies"],[836,43,914,41],[836,44,914,42,"map"],[836,47,914,45],[836,48,914,46,"enemy"],[836,53,914,51],[836,58,914,56],[837,10,915,8],[837,13,915,11,"enemy"],[837,18,915,16],[838,10,916,8,"health"],[838,16,916,14],[838,18,916,16],[838,19,916,17],[839,10,916,19],[840,10,917,8,"lastDamaged"],[840,21,917,19],[840,23,917,21,"combatEngine"],[840,42,917,33],[840,43,917,33,"combatEngine"],[840,55,917,33],[840,56,917,34,"getCurrentTick"],[840,70,917,48],[840,71,917,49],[841,8,918,6],[841,9,918,7],[841,10,918,8],[841,11,918,9],[842,8,920,6],[842,15,920,13],[843,10,921,8],[843,13,921,11,"prev"],[843,17,921,15],[844,10,922,8,"enemies"],[844,17,922,15],[844,19,922,17,"damagedEnemies"],[845,8,923,6],[845,9,923,7],[846,6,924,4],[846,7,924,5],[846,8,924,6],[847,4,925,2],[847,5,925,3],[849,4,927,2],[850,4,928,2],[850,10,928,8,"spawnEnemy"],[850,20,928,18],[850,23,928,22,"position"],[850,31,928,57],[850,35,928,75],[851,6,929,4],[851,12,929,10,"SCREEN_WIDTH"],[851,24,929,22],[851,27,929,25],[851,30,929,28],[852,6,930,4],[852,12,930,10,"GAME_AREA_HEIGHT"],[852,28,930,26],[852,31,930,29],[852,34,930,32],[852,37,930,35],[852,40,930,38],[852,41,930,39],[852,42,930,40],[853,6,931,4],[853,12,931,10,"ENEMY_SIZE"],[853,22,931,20],[853,25,931,23],[853,27,931,25],[855,6,933,4],[856,6,934,4],[856,12,934,10,"x"],[856,13,934,11],[856,16,934,14,"position"],[856,24,934,22],[856,26,934,24,"x"],[856,27,934,25],[856,31,934,29,"Math"],[856,35,934,33],[856,36,934,34,"random"],[856,42,934,40],[856,43,934,41],[856,44,934,42],[856,48,934,46,"SCREEN_WIDTH"],[856,60,934,58],[856,63,934,61,"ENEMY_SIZE"],[856,73,934,71],[856,76,934,74],[856,77,934,75],[856,78,934,76],[856,81,934,79,"ENEMY_SIZE"],[856,91,934,89],[857,6,935,4],[857,12,935,10,"y"],[857,13,935,11],[857,16,935,14,"position"],[857,24,935,22],[857,26,935,24,"y"],[857,27,935,25],[857,31,935,29,"Math"],[857,35,935,33],[857,36,935,34,"random"],[857,42,935,40],[857,43,935,41],[857,44,935,42],[857,48,935,46,"GAME_AREA_HEIGHT"],[857,64,935,62],[857,67,935,65,"ENEMY_SIZE"],[857,77,935,75],[857,80,935,78],[857,81,935,79],[857,82,935,80],[857,85,935,83,"ENEMY_SIZE"],[857,95,935,93],[858,6,937,4],[858,12,937,10,"enemy"],[858,17,937,28],[858,20,937,31],[859,8,938,6,"id"],[859,10,938,8],[859,12,938,10],[859,21,938,19],[859,23,938,21,"enemyCounter"],[859,35,938,33],[859,37,938,35],[860,8,939,6,"name"],[860,12,939,10],[860,14,939,12],[860,24,939,22],[861,8,940,6,"health"],[861,14,940,12],[861,16,940,14],[861,19,940,17],[862,8,941,6,"maxHealth"],[862,17,941,15],[862,19,941,17],[862,22,941,20],[863,8,942,6,"stats"],[863,13,942,11],[863,15,942,13],[864,10,943,8,"attack"],[864,16,943,14],[864,18,943,16],[864,20,943,18],[865,10,944,8,"defense"],[865,17,944,15],[865,19,944,17],[865,21,944,19],[866,10,945,8,"health"],[866,16,945,14],[866,18,945,16],[866,21,945,19],[867,10,946,8,"maxHealth"],[867,19,946,17],[867,21,946,19],[867,24,946,22],[868,10,947,8,"critChance"],[868,20,947,18],[868,22,947,20],[868,23,947,21],[869,10,948,8,"critDamage"],[869,20,948,18],[869,22,948,20],[869,25,948,23],[870,10,949,8,"cooldownReduction"],[870,27,949,25],[870,29,949,27],[871,8,950,6],[871,9,950,7],[872,8,951,6,"position"],[872,16,951,14],[872,18,951,16],[873,10,951,18,"x"],[873,11,951,19],[874,10,951,21,"y"],[875,8,951,23],[875,9,951,24],[876,8,952,6,"lastDamaged"],[876,19,952,17],[876,21,952,19],[877,6,953,4],[877,7,953,5],[878,6,955,4,"setCombatState"],[878,20,955,18],[878,21,955,19,"prev"],[878,25,955,23],[878,30,955,28],[879,8,956,6],[879,11,956,9,"prev"],[879,15,956,13],[880,8,957,6,"enemies"],[880,15,957,13],[880,17,957,15],[880,18,957,16],[880,21,957,19,"prev"],[880,25,957,23],[880,26,957,24,"enemies"],[880,33,957,31],[880,35,957,33,"enemy"],[880,40,957,38],[881,6,958,4],[881,7,958,5],[881,8,958,6],[881,9,958,7],[882,6,960,4],[882,13,960,11,"enemy"],[882,18,960,16],[883,4,961,2],[883,5,961,3],[885,4,963,2],[886,4,964,2],[886,10,964,8,"spawnBoss"],[886,19,964,17],[886,22,964,21,"bossEnemy"],[886,31,964,43],[886,35,964,48],[887,6,965,4,"console"],[887,13,965,11],[887,14,965,12,"log"],[887,17,965,15],[887,18,965,16],[887,39,965,37,"bossEnemy"],[887,48,965,46],[887,49,965,47,"name"],[887,53,965,51],[887,90,965,88],[887,91,965,89],[888,6,966,4,"setCombatState"],[888,20,966,18],[888,21,966,19,"prev"],[888,25,966,23],[888,30,966,28],[889,8,967,6],[889,11,967,9,"prev"],[889,15,967,13],[890,8,968,6,"enemies"],[890,15,968,13],[890,17,968,15],[890,18,968,16,"bossEnemy"],[890,27,968,25],[890,28,968,26],[890,29,968,27],[891,6,969,4],[891,7,969,5],[891,8,969,6],[891,9,969,7],[892,4,970,2],[892,5,970,3],[894,4,972,2],[895,4,973,2],[895,10,973,8,"clearSpecificEnemy"],[895,28,973,26],[895,31,973,30,"enemyId"],[895,38,973,45],[895,42,973,50],[896,6,974,4,"setCombatState"],[896,20,974,18],[896,21,974,19,"prev"],[896,25,974,23],[896,30,974,28],[897,8,975,6],[897,11,975,9,"prev"],[897,15,975,13],[898,8,976,6,"enemies"],[898,15,976,13],[898,17,976,15,"prev"],[898,21,976,19],[898,22,976,20,"enemies"],[898,29,976,27],[898,30,976,28,"filter"],[898,36,976,34],[898,37,976,35,"enemy"],[898,42,976,40],[898,46,976,44,"enemy"],[898,51,976,49],[898,52,976,50,"id"],[898,54,976,52],[898,59,976,57,"enemyId"],[898,66,976,64],[899,6,977,4],[899,7,977,5],[899,8,977,6],[899,9,977,7],[900,4,978,2],[900,5,978,3],[902,4,980,2],[903,4,981,2],[903,10,981,8,"useAbilityManually"],[903,28,981,26],[903,31,981,29],[903,35,981,29,"useCallback"],[903,41,981,40],[903,42,981,40,"useCallback"],[903,53,981,40],[903,55,981,42,"slotIndex"],[903,64,981,59],[903,68,981,73],[904,6,982,4,"console"],[904,13,982,11],[904,14,982,12,"log"],[904,17,982,15],[904,18,982,16],[904,64,982,62,"slotIndex"],[904,73,982,71],[904,82,982,80],[904,83,982,81],[905,6,983,4,"console"],[905,13,983,11],[905,14,983,12,"log"],[905,17,983,15],[905,18,983,16],[905,65,983,63,"slotIndex"],[905,74,983,72],[905,76,983,74],[905,77,983,75],[906,6,984,4,"console"],[906,13,984,11],[906,14,984,12,"log"],[906,17,984,15],[906,18,984,16],[906,53,984,51,"slotIndex"],[906,62,984,60],[906,64,984,62],[906,65,984,63],[908,6,986,4],[909,6,987,4],[909,10,987,8],[909,11,987,9,"game"],[909,15,987,13],[909,16,987,14,"gameState"],[909,25,987,23],[909,26,987,24,"isAlive"],[909,33,987,31],[909,35,987,33],[910,8,988,6,"console"],[910,15,988,13],[910,16,988,14,"log"],[910,19,988,17],[910,20,988,18],[910,70,988,68],[910,71,988,69],[911,8,989,6],[911,15,989,13],[911,20,989,18],[912,6,990,4],[914,6,992,4],[915,6,993,4],[915,12,993,10,"isReady"],[915,19,993,17],[915,22,993,20,"combatState"],[915,33,993,31],[915,34,993,32,"abilityManager"],[915,48,993,46],[915,49,993,47,"isAbilityReady"],[915,63,993,61],[915,64,993,62,"slotIndex"],[915,73,993,71],[915,74,993,72],[916,6,994,4],[916,10,994,8],[916,11,994,9,"isReady"],[916,18,994,16],[916,20,994,18],[917,8,995,6,"console"],[917,15,995,13],[917,16,995,14,"log"],[917,19,995,17],[917,20,995,18],[917,41,995,39,"slotIndex"],[917,50,995,48],[917,85,995,83],[917,86,995,84],[918,8,996,6],[918,15,996,13],[918,20,996,18],[919,6,997,4],[921,6,999,4],[922,6,1000,4],[922,10,1000,8,"combatState"],[922,21,1000,19],[922,22,1000,20,"enemies"],[922,29,1000,27],[922,30,1000,28,"length"],[922,36,1000,34],[922,41,1000,39],[922,42,1000,40],[922,44,1000,42],[923,8,1001,6,"console"],[923,15,1001,13],[923,16,1001,14,"log"],[923,19,1001,17],[923,20,1001,18],[923,69,1001,67],[923,70,1001,68],[924,8,1002,6],[924,15,1002,13],[924,20,1002,18],[925,6,1003,4],[927,6,1005,4],[928,6,1006,4],[928,12,1006,10,"currentTick"],[928,23,1006,21],[928,26,1006,24,"combatEngine"],[928,45,1006,36],[928,46,1006,36,"combatEngine"],[928,58,1006,36],[928,59,1006,37,"getCurrentTick"],[928,73,1006,51],[928,74,1006,52],[928,75,1006,53],[929,6,1007,4],[929,12,1007,10,"success"],[929,19,1007,17],[929,22,1007,20,"combatState"],[929,33,1007,31],[929,34,1007,32,"abilityManager"],[929,48,1007,46],[929,49,1007,47,"useAbility"],[929,59,1007,57],[929,60,1007,58,"slotIndex"],[929,69,1007,67],[929,71,1007,69,"currentTick"],[929,82,1007,80],[929,83,1007,81],[930,6,1009,4],[930,10,1009,8,"success"],[930,17,1009,15],[930,19,1009,17],[931,8,1010,6],[932,8,1011,6,"setCombatState"],[932,22,1011,20],[932,23,1011,21,"prev"],[932,27,1011,25],[932,31,1011,29],[933,10,1012,8],[933,16,1012,14,"newState"],[933,24,1012,22],[933,27,1012,25],[934,12,1012,27],[934,15,1012,30,"prev"],[935,10,1012,35],[935,11,1012,36],[936,10,1013,8,"castAbility"],[936,21,1013,19],[936,22,1013,20,"newState"],[936,30,1013,28],[936,32,1013,30,"slotIndex"],[936,41,1013,39],[936,42,1013,40],[937,10,1014,8],[937,17,1014,15,"newState"],[937,25,1014,23],[938,8,1015,6],[938,9,1015,7],[938,10,1015,8],[939,8,1017,6,"console"],[939,15,1017,13],[939,16,1017,14,"log"],[939,19,1017,17],[939,20,1017,18],[939,65,1017,63,"slotIndex"],[939,74,1017,72],[939,76,1017,74],[939,77,1017,75],[940,8,1018,6],[940,15,1018,13],[940,19,1018,17],[941,6,1019,4],[941,7,1019,5],[941,13,1019,11],[942,8,1020,6,"console"],[942,15,1020,13],[942,16,1020,14,"log"],[942,19,1020,17],[942,20,1020,18],[942,61,1020,59,"slotIndex"],[942,70,1020,68],[942,72,1020,70],[942,73,1020,71],[943,8,1021,6],[943,15,1021,13],[943,20,1021,18],[944,6,1022,4],[945,4,1023,2],[945,5,1023,3],[945,7,1023,5],[945,8,1023,6,"combatState"],[945,19,1023,17],[945,20,1023,18,"abilityManager"],[945,34,1023,32],[945,36,1023,34,"combatState"],[945,47,1023,45],[945,48,1023,46,"enemies"],[945,55,1023,53],[945,56,1023,54],[945,57,1023,55],[946,4,1024,2],[946,8,1024,2,"useEffect"],[946,14,1024,11],[946,15,1024,11,"useEffect"],[946,24,1024,11],[946,26,1024,12],[946,32,1024,18],[947,6,1025,4,"combatEngine"],[947,25,1025,16],[947,26,1025,16,"combatEngine"],[947,38,1025,16],[947,39,1025,17,"start"],[947,44,1025,22],[947,45,1025,23],[947,46,1025,24],[949,6,1027,4],[950,6,1028,4],[951,6,1029,4,"console"],[951,13,1029,11],[951,14,1029,12,"log"],[951,17,1029,15],[951,18,1029,16],[951,97,1029,95],[951,98,1029,96],[952,6,1031,4],[952,13,1031,11],[952,19,1031,17],[953,8,1032,6,"combatEngine"],[953,27,1032,18],[953,28,1032,18,"combatEngine"],[953,40,1032,18],[953,41,1032,19,"stop"],[953,45,1032,23],[953,46,1032,24],[953,47,1032,25],[954,6,1033,4],[954,7,1033,5],[955,4,1034,2],[955,5,1034,3],[955,7,1034,5],[955,9,1034,7],[955,10,1034,8],[957,4,1036,2],[958,4,1037,2],[958,8,1037,2,"useEffect"],[958,14,1037,11],[958,15,1037,11,"useEffect"],[958,24,1037,11],[958,26,1037,12],[958,32,1037,18],[959,6,1038,4],[959,12,1038,10,"processProjectileImpacts"],[959,36,1038,34],[959,39,1038,37,"processProjectileImpacts"],[959,40,1038,37],[959,45,1038,43],[960,8,1039,6,"setProjectiles"],[960,22,1039,20],[960,23,1039,21,"currentProjectiles"],[960,41,1039,39],[960,45,1039,43],[961,10,1040,8],[961,17,1040,15,"currentProjectiles"],[961,35,1040,33],[961,36,1040,34,"map"],[961,39,1040,37],[961,40,1040,38,"projectile"],[961,50,1040,48],[961,54,1040,52],[962,12,1041,10],[962,16,1041,14],[962,17,1041,15,"projectile"],[962,27,1041,25],[962,29,1041,27],[962,36,1041,34],[962,40,1041,38],[964,12,1043,10],[965,12,1044,10],[965,18,1044,16,"currentTime"],[965,29,1044,27],[965,32,1044,30,"Date"],[965,36,1044,34],[965,37,1044,35,"now"],[965,40,1044,38],[965,41,1044,39],[965,42,1044,40],[966,12,1045,10],[966,18,1045,16,"startTime"],[966,27,1045,25],[966,30,1045,28,"projectile"],[966,40,1045,38],[966,41,1045,39,"startTime"],[966,50,1045,48],[966,54,1045,52,"currentTime"],[966,65,1045,63],[967,12,1046,10],[967,18,1046,16,"elapsedTime"],[967,29,1046,27],[967,32,1046,30,"currentTime"],[967,43,1046,41],[967,46,1046,44,"startTime"],[967,55,1046,53],[968,12,1047,10],[968,18,1047,16,"progress"],[968,26,1047,24],[968,29,1047,27,"Math"],[968,33,1047,31],[968,34,1047,32,"min"],[968,37,1047,35],[968,38,1047,36,"elapsedTime"],[968,49,1047,47],[968,53,1047,51,"projectile"],[968,63,1047,61],[968,64,1047,62,"duration"],[968,72,1047,70],[968,76,1047,74],[968,79,1047,77],[968,80,1047,78],[968,82,1047,80],[968,83,1047,81],[968,84,1047,82],[970,12,1049,10],[971,12,1050,10],[971,16,1050,14,"progress"],[971,24,1050,22],[971,28,1050,26],[971,29,1050,27],[971,33,1050,31],[971,34,1050,32,"projectile"],[971,44,1050,42],[971,45,1050,43,"hasHit"],[971,51,1050,49],[971,53,1050,51],[972,14,1051,12,"projectile"],[972,24,1051,22],[972,25,1051,23,"hasHit"],[972,31,1051,29],[972,34,1051,32],[972,38,1051,36],[973,14,1053,12,"setCombatState"],[973,28,1053,26],[973,29,1053,27,"prev"],[973,33,1053,31],[973,37,1053,35],[974,16,1054,14],[974,22,1054,20,"newState"],[974,30,1054,28],[974,33,1054,31],[975,18,1054,33],[975,21,1054,36,"prev"],[976,16,1054,41],[976,17,1054,42],[977,16,1056,14],[977,20,1056,18,"projectile"],[977,30,1056,28],[977,31,1056,29,"isAOE"],[977,36,1056,34],[977,40,1056,38,"projectile"],[977,50,1056,48],[977,51,1056,49,"aoeRadius"],[977,60,1056,58],[977,64,1056,62,"projectile"],[977,74,1056,72],[977,75,1056,73,"aoeRadius"],[977,84,1056,82],[977,87,1056,85],[977,88,1056,86],[977,90,1056,88],[978,18,1057,16],[979,18,1058,16,"console"],[979,25,1058,23],[979,26,1058,24,"log"],[979,29,1058,27],[979,30,1058,28],[979,59,1058,57,"projectile"],[979,69,1058,67],[979,70,1058,68,"abilityName"],[979,81,1058,79],[979,97,1058,95,"projectile"],[979,107,1058,105],[979,108,1058,106,"aoeRadius"],[979,117,1058,115],[979,119,1058,117],[979,120,1058,118],[980,18,1060,16],[980,24,1060,22,"impactX"],[980,31,1060,29],[980,34,1060,32,"projectile"],[980,44,1060,42],[980,45,1060,43,"targetX"],[980,52,1060,50],[981,18,1061,16],[981,24,1061,22,"impactY"],[981,31,1061,29],[981,34,1061,32,"projectile"],[981,44,1061,42],[981,45,1061,43,"targetY"],[981,52,1061,50],[982,18,1062,16],[982,24,1062,22,"enemiesKilled"],[982,37,1062,50],[982,40,1062,53],[982,42,1062,55],[984,18,1064,16],[985,18,1065,16,"newState"],[985,26,1065,24],[985,27,1065,25,"enemies"],[985,34,1065,32],[985,37,1065,35,"newState"],[985,45,1065,43],[985,46,1065,44,"enemies"],[985,53,1065,51],[985,54,1065,52,"map"],[985,57,1065,55],[985,58,1065,56,"enemy"],[985,63,1065,61],[985,67,1065,65],[986,20,1066,18],[986,24,1066,22,"enemy"],[986,29,1066,27],[986,30,1066,28,"health"],[986,36,1066,34],[986,40,1066,38],[986,41,1066,39],[986,45,1066,43,"enemy"],[986,50,1066,48],[986,51,1066,49,"markedForDeath"],[986,65,1066,63],[986,67,1066,65],[986,74,1066,72,"enemy"],[986,79,1066,77],[987,20,1068,18],[987,26,1068,24,"enemyX"],[987,32,1068,30],[987,35,1068,33,"enemy"],[987,40,1068,38],[987,41,1068,39,"position"],[987,49,1068,47],[987,50,1068,48,"x"],[987,51,1068,49],[987,54,1068,52],[987,58,1068,56],[987,59,1068,57],[987,60,1068,58],[988,20,1069,18],[988,26,1069,24,"enemyY"],[988,32,1069,30],[988,35,1069,33,"enemy"],[988,40,1069,38],[988,41,1069,39,"position"],[988,49,1069,47],[988,50,1069,48,"y"],[988,51,1069,49],[988,54,1069,52],[988,58,1069,56],[989,20,1070,18],[989,26,1070,24,"distance"],[989,34,1070,32],[989,37,1070,35,"Math"],[989,41,1070,39],[989,42,1070,40,"sqrt"],[989,46,1070,44],[989,47,1070,45,"Math"],[989,51,1070,49],[989,52,1070,50,"pow"],[989,55,1070,53],[989,56,1070,54,"enemyX"],[989,62,1070,60],[989,65,1070,63,"impactX"],[989,72,1070,70],[989,74,1070,72],[989,75,1070,73],[989,76,1070,74],[989,79,1070,77,"Math"],[989,83,1070,81],[989,84,1070,82,"pow"],[989,87,1070,85],[989,88,1070,86,"enemyY"],[989,94,1070,92],[989,97,1070,95,"impactY"],[989,104,1070,102],[989,106,1070,104],[989,107,1070,105],[989,108,1070,106],[989,109,1070,107],[990,20,1072,18,"console"],[990,27,1072,25],[990,28,1072,26,"log"],[990,31,1072,29],[990,32,1072,30],[990,58,1072,56,"enemy"],[990,63,1072,61],[990,64,1072,62,"name"],[990,68,1072,66],[990,76,1072,74,"enemyX"],[990,82,1072,80],[990,87,1072,85,"enemyY"],[990,93,1072,91],[990,109,1072,107,"impactX"],[990,116,1072,114],[990,121,1072,119,"impactY"],[990,128,1072,126],[990,135,1072,133,"distance"],[990,143,1072,141],[990,144,1072,142,"toFixed"],[990,151,1072,149],[990,152,1072,150],[990,153,1072,151],[990,154,1072,152],[990,169,1072,167,"projectile"],[990,179,1072,177],[990,180,1072,178,"aoeRadius"],[990,189,1072,187],[990,194,1072,192],[990,195,1072,193],[991,20,1074,18],[991,24,1074,22,"distance"],[991,32,1074,30],[991,36,1074,34,"projectile"],[991,46,1074,44],[991,47,1074,45,"aoeRadius"],[991,56,1074,54],[991,58,1074,56],[992,22,1075,20],[993,22,1076,20],[993,28,1076,26,"newHealth"],[993,37,1076,35],[993,40,1076,38,"Math"],[993,44,1076,42],[993,45,1076,43,"max"],[993,48,1076,46],[993,49,1076,47],[993,50,1076,48],[993,52,1076,50,"enemy"],[993,57,1076,55],[993,58,1076,56,"health"],[993,64,1076,62],[993,67,1076,65,"projectile"],[993,77,1076,75],[993,78,1076,76,"damage"],[993,84,1076,82],[993,85,1076,83],[994,22,1078,20,"console"],[994,29,1078,27],[994,30,1078,28,"log"],[994,33,1078,31],[994,34,1078,32],[994,52,1078,50,"enemy"],[994,57,1078,55],[994,58,1078,56,"name"],[994,62,1078,60],[994,74,1078,72,"projectile"],[994,84,1078,82],[994,85,1078,83,"damage"],[994,91,1078,89],[994,103,1078,101,"enemy"],[994,108,1078,106],[994,109,1078,107,"health"],[994,115,1078,113],[994,122,1078,120,"newHealth"],[994,131,1078,129],[994,134,1078,132],[994,135,1078,133],[996,22,1080,20],[997,22,1081,20],[997,26,1081,24,"newHealth"],[997,35,1081,33],[997,39,1081,37],[997,40,1081,38],[997,44,1081,42,"enemy"],[997,49,1081,47],[997,50,1081,48,"health"],[997,56,1081,54],[997,59,1081,57],[997,60,1081,58],[997,62,1081,60],[998,24,1082,22,"console"],[998,31,1082,29],[998,32,1082,30,"log"],[998,35,1082,33],[998,36,1082,34],[998,52,1082,50,"enemy"],[998,57,1082,55],[998,58,1082,56,"name"],[998,62,1082,60],[998,76,1082,74,"projectile"],[998,86,1082,84],[998,87,1082,85,"abilityName"],[998,98,1082,96],[998,101,1082,99],[998,102,1082,100],[999,24,1083,22,"enemiesKilled"],[999,37,1083,35],[999,38,1083,36,"push"],[999,42,1083,40],[999,43,1083,41,"enemy"],[999,48,1083,46],[999,49,1083,47],[999,50,1083,48],[999,51,1083,49],[1001,24,1085,22],[1001,31,1085,29],[1002,26,1086,24],[1002,29,1086,27,"enemy"],[1002,34,1086,32],[1003,26,1087,24,"health"],[1003,32,1087,30],[1003,34,1087,32],[1003,35,1087,33],[1004,26,1088,24,"markedForDeath"],[1004,40,1088,38],[1004,42,1088,40],[1004,46,1088,44],[1005,26,1089,24,"lastDamaged"],[1005,37,1089,35],[1005,39,1089,37,"combatEngine"],[1005,58,1089,49],[1005,59,1089,49,"combatEngine"],[1005,71,1089,49],[1005,72,1089,50,"getCurrentTick"],[1005,86,1089,64],[1005,87,1089,65],[1006,24,1090,22],[1006,25,1090,23],[1007,22,1091,20],[1007,23,1091,21],[1007,29,1091,27],[1008,24,1092,22],[1008,31,1092,29],[1009,26,1093,24],[1009,29,1093,27,"enemy"],[1009,34,1093,32],[1010,26,1094,24,"health"],[1010,32,1094,30],[1010,34,1094,32,"newHealth"],[1010,43,1094,41],[1011,26,1095,24,"lastDamaged"],[1011,37,1095,35],[1011,39,1095,37,"combatEngine"],[1011,58,1095,49],[1011,59,1095,49,"combatEngine"],[1011,71,1095,49],[1011,72,1095,50,"getCurrentTick"],[1011,86,1095,64],[1011,87,1095,65],[1012,24,1096,22],[1012,25,1096,23],[1013,22,1097,20],[1014,20,1098,18],[1015,20,1100,18],[1015,27,1100,25,"enemy"],[1015,32,1100,30],[1015,33,1100,31],[1015,34,1100,32],[1016,18,1101,16],[1016,19,1101,17],[1016,20,1101,18],[1018,18,1103,16],[1019,18,1104,16],[1019,22,1104,20,"enemiesKilled"],[1019,35,1104,33],[1019,36,1104,34,"length"],[1019,42,1104,40],[1019,45,1104,43],[1019,46,1104,44],[1019,48,1104,46],[1020,20,1105,18,"console"],[1020,27,1105,25],[1020,28,1105,26,"log"],[1020,31,1105,29],[1020,32,1105,30],[1020,52,1105,50,"enemiesKilled"],[1020,65,1105,63],[1020,66,1105,64,"length"],[1020,72,1105,70],[1020,94,1105,92,"projectile"],[1020,104,1105,102],[1020,105,1105,103,"abilityName"],[1020,116,1105,114],[1020,118,1105,116],[1020,119,1105,117],[1021,20,1106,18,"setTimeout"],[1021,30,1106,28],[1021,31,1106,29],[1021,37,1106,35],[1022,22,1107,20,"enemiesKilled"],[1022,35,1107,33],[1022,36,1107,34,"forEach"],[1022,43,1107,41],[1022,44,1107,42,"enemy"],[1022,49,1107,47],[1022,53,1107,51,"handleEnemyKill"],[1022,68,1107,66],[1022,69,1107,67,"enemy"],[1022,74,1107,72],[1022,75,1107,73],[1022,76,1107,74],[1023,20,1108,18],[1023,21,1108,19],[1023,23,1108,21],[1023,24,1108,22],[1023,25,1108,23],[1024,18,1109,16],[1025,16,1111,14],[1025,17,1111,15],[1025,23,1111,21],[1026,18,1112,16],[1027,18,1113,16],[1027,24,1113,22,"enemyIndex"],[1027,34,1113,32],[1027,37,1113,35,"newState"],[1027,45,1113,43],[1027,46,1113,44,"enemies"],[1027,53,1113,51],[1027,54,1113,52,"findIndex"],[1027,63,1113,61],[1027,64,1113,62,"e"],[1027,65,1113,63],[1027,69,1113,67,"e"],[1027,70,1113,68],[1027,71,1113,69,"id"],[1027,73,1113,71],[1027,78,1113,76,"projectile"],[1027,88,1113,86],[1027,89,1113,87,"targetEnemyId"],[1027,102,1113,100],[1027,103,1113,101],[1028,18,1115,16],[1028,22,1115,20,"enemyIndex"],[1028,32,1115,30],[1028,36,1115,34],[1028,37,1115,35],[1028,41,1115,39,"newState"],[1028,49,1115,47],[1028,50,1115,48,"enemies"],[1028,57,1115,55],[1028,58,1115,56,"enemyIndex"],[1028,68,1115,66],[1028,69,1115,67],[1028,70,1115,68,"health"],[1028,76,1115,74],[1028,79,1115,77],[1028,80,1115,78],[1028,84,1115,82],[1028,85,1115,83,"newState"],[1028,93,1115,91],[1028,94,1115,92,"enemies"],[1028,101,1115,99],[1028,102,1115,100,"enemyIndex"],[1028,112,1115,110],[1028,113,1115,111],[1028,114,1115,112,"markedForDeath"],[1028,128,1115,126],[1028,130,1115,128],[1029,20,1116,18,"newState"],[1029,28,1116,26],[1029,29,1116,27,"enemies"],[1029,36,1116,34],[1029,39,1116,37],[1029,40,1116,38],[1029,43,1116,41,"newState"],[1029,51,1116,49],[1029,52,1116,50,"enemies"],[1029,59,1116,57],[1029,60,1116,58],[1030,20,1117,18],[1030,26,1117,24,"enemy"],[1030,31,1117,29],[1030,34,1117,32,"newState"],[1030,42,1117,40],[1030,43,1117,41,"enemies"],[1030,50,1117,48],[1030,51,1117,49,"enemyIndex"],[1030,61,1117,59],[1030,62,1117,60],[1031,20,1118,18],[1031,26,1118,24,"newHealth"],[1031,35,1118,33],[1031,38,1118,36,"Math"],[1031,42,1118,40],[1031,43,1118,41,"max"],[1031,46,1118,44],[1031,47,1118,45],[1031,48,1118,46],[1031,50,1118,48,"enemy"],[1031,55,1118,53],[1031,56,1118,54,"health"],[1031,62,1118,60],[1031,65,1118,63,"projectile"],[1031,75,1118,73],[1031,76,1118,74,"damage"],[1031,82,1118,80],[1031,83,1118,81],[1032,20,1120,18,"newState"],[1032,28,1120,26],[1032,29,1120,27,"enemies"],[1032,36,1120,34],[1032,37,1120,35,"enemyIndex"],[1032,47,1120,45],[1032,48,1120,46],[1032,51,1120,49],[1033,22,1121,20],[1033,25,1121,23,"enemy"],[1033,30,1121,28],[1034,22,1122,20,"health"],[1034,28,1122,26],[1034,30,1122,28,"newHealth"],[1034,39,1122,37],[1035,22,1123,20,"lastDamaged"],[1035,33,1123,31],[1035,35,1123,33,"combatEngine"],[1035,54,1123,45],[1035,55,1123,45,"combatEngine"],[1035,67,1123,45],[1035,68,1123,46,"getCurrentTick"],[1035,82,1123,60],[1035,83,1123,61],[1036,20,1124,18],[1036,21,1124,19],[1037,20,1126,18,"console"],[1037,27,1126,25],[1037,28,1126,26,"log"],[1037,31,1126,29],[1037,32,1126,30],[1037,60,1126,58,"enemy"],[1037,65,1126,63],[1037,66,1126,64,"name"],[1037,70,1126,68],[1037,82,1126,80,"newHealth"],[1037,91,1126,89],[1037,95,1126,93,"enemy"],[1037,100,1126,98],[1037,101,1126,99,"maxHealth"],[1037,110,1126,108],[1037,112,1126,110],[1037,113,1126,111],[1039,20,1128,18],[1040,20,1129,18],[1040,24,1129,22,"newHealth"],[1040,33,1129,31],[1040,37,1129,35],[1040,38,1129,36],[1040,42,1129,40,"enemy"],[1040,47,1129,45],[1040,48,1129,46,"health"],[1040,54,1129,52],[1040,57,1129,55],[1040,58,1129,56],[1040,60,1129,58],[1041,22,1130,20,"console"],[1041,29,1130,27],[1041,30,1130,28,"log"],[1041,33,1130,31],[1041,34,1130,32],[1041,60,1130,58,"enemy"],[1041,65,1130,63],[1041,66,1130,64,"name"],[1041,70,1130,68],[1041,84,1130,82,"projectile"],[1041,94,1130,92],[1041,95,1130,93,"abilityName"],[1041,106,1130,104],[1041,112,1130,110,"enemy"],[1041,117,1130,115],[1041,118,1130,116,"health"],[1041,124,1130,122],[1041,130,1130,128,"newHealth"],[1041,139,1130,137],[1041,142,1130,140],[1041,143,1130,141],[1043,22,1132,20],[1044,22,1133,20,"newState"],[1044,30,1133,28],[1044,31,1133,29,"enemies"],[1044,38,1133,36],[1044,39,1133,37,"enemyIndex"],[1044,49,1133,47],[1044,50,1133,48],[1044,53,1133,51],[1045,24,1134,22],[1045,27,1134,25,"newState"],[1045,35,1134,33],[1045,36,1134,34,"enemies"],[1045,43,1134,41],[1045,44,1134,42,"enemyIndex"],[1045,54,1134,52],[1045,55,1134,53],[1046,24,1135,22,"health"],[1046,30,1135,28],[1046,32,1135,30],[1046,33,1135,31],[1047,24,1136,22,"markedForDeath"],[1047,38,1136,36],[1047,40,1136,38],[1048,22,1137,20],[1048,23,1137,21],[1050,22,1139,20],[1051,22,1140,20,"console"],[1051,29,1140,27],[1051,30,1140,28,"log"],[1051,33,1140,31],[1051,34,1140,32],[1051,81,1140,79,"enemy"],[1051,86,1140,84],[1051,87,1140,85,"name"],[1051,91,1140,89],[1051,100,1140,98,"enemy"],[1051,105,1140,103],[1051,106,1140,104,"id"],[1051,108,1140,106],[1051,111,1140,109],[1051,112,1140,110],[1052,22,1141,20,"setTimeout"],[1052,32,1141,30],[1052,33,1141,31],[1052,39,1141,37,"handleEnemyKill"],[1052,54,1141,52],[1052,55,1141,53,"enemy"],[1052,60,1141,58],[1052,61,1141,59],[1052,63,1141,61],[1052,64,1141,62],[1052,65,1141,63],[1053,20,1142,18],[1053,21,1142,19],[1053,27,1142,25],[1053,31,1142,29,"enemy"],[1053,36,1142,34],[1053,37,1142,35,"health"],[1053,43,1142,41],[1053,46,1142,44],[1053,47,1142,45],[1053,49,1142,47],[1054,22,1143,20,"console"],[1054,29,1143,27],[1054,30,1143,28,"log"],[1054,33,1143,31],[1054,34,1143,32],[1054,58,1143,56,"enemy"],[1054,63,1143,61],[1054,64,1143,62,"name"],[1054,68,1143,66],[1054,80,1143,78,"projectile"],[1054,90,1143,88],[1054,91,1143,89,"damage"],[1054,97,1143,95],[1054,109,1143,107,"enemy"],[1054,114,1143,112],[1054,115,1143,113,"health"],[1054,121,1143,119],[1054,127,1143,125,"newHealth"],[1054,136,1143,134],[1054,139,1143,137],[1054,140,1143,138],[1055,20,1144,18],[1055,21,1144,19],[1055,27,1144,25],[1056,22,1145,20,"console"],[1056,29,1145,27],[1056,30,1145,28,"log"],[1056,33,1145,31],[1056,34,1145,32],[1056,56,1145,54,"enemy"],[1056,61,1145,59],[1056,62,1145,60,"name"],[1056,66,1145,64],[1056,92,1145,90,"enemy"],[1056,97,1145,95],[1056,98,1145,96,"health"],[1056,104,1145,102],[1056,122,1145,120],[1056,123,1145,121],[1057,20,1146,18],[1058,18,1147,16],[1059,16,1148,14],[1060,16,1150,14],[1060,23,1150,21,"newState"],[1060,31,1150,29],[1061,14,1151,12],[1061,15,1151,13],[1061,16,1151,14],[1062,12,1152,10],[1064,12,1154,10],[1065,12,1155,10],[1065,16,1155,14,"progress"],[1065,24,1155,22],[1065,28,1155,26],[1065,31,1155,29],[1065,33,1155,31],[1066,14,1156,12],[1066,21,1156,19],[1066,25,1156,23],[1067,12,1157,10],[1068,12,1159,10],[1068,19,1159,17,"projectile"],[1068,29,1159,27],[1069,10,1160,8],[1069,11,1160,9],[1069,12,1160,10],[1069,13,1160,11,"filter"],[1069,19,1160,17],[1069,20,1160,18,"Boolean"],[1069,27,1160,25],[1069,28,1160,26],[1070,8,1161,6],[1070,9,1161,7],[1070,10,1161,8],[1071,6,1162,4],[1071,7,1162,5],[1073,6,1164,4],[1074,6,1165,4],[1074,12,1165,10,"impactInterval"],[1074,26,1165,24],[1074,29,1165,27,"setInterval"],[1074,40,1165,38],[1074,41,1165,39,"processProjectileImpacts"],[1074,65,1165,63],[1074,67,1165,65],[1074,69,1165,67],[1074,70,1165,68],[1075,6,1166,4],[1075,13,1166,11],[1075,19,1166,17,"clearInterval"],[1075,32,1166,30],[1075,33,1166,31,"impactInterval"],[1075,47,1166,45],[1075,48,1166,46],[1076,4,1167,2],[1076,5,1167,3],[1076,7,1167,5],[1076,8,1167,6,"handleEnemyKill"],[1076,23,1167,21],[1076,24,1167,22],[1076,25,1167,23],[1078,4,1169,2],[1079,4,1170,2],[1079,10,1170,8,"saveAbilityData"],[1079,25,1170,23],[1079,28,1170,26],[1079,32,1170,26,"useCallback"],[1079,38,1170,37],[1079,39,1170,37,"useCallback"],[1079,50,1170,37],[1079,52,1170,38],[1079,58,1170,44],[1080,6,1171,4],[1080,10,1171,8,"combatState"],[1080,21,1171,19],[1080,22,1171,20,"abilityManager"],[1080,36,1171,34],[1080,38,1171,36],[1081,8,1172,6],[1081,14,1172,12,"abilityData"],[1081,25,1172,23],[1081,28,1172,26,"combatState"],[1081,39,1172,37],[1081,40,1172,38,"abilityManager"],[1081,54,1172,52],[1081,55,1172,53,"getSaveData"],[1081,66,1172,64],[1081,67,1172,65],[1081,68,1172,66],[1082,8,1173,6,"console"],[1082,15,1173,13],[1082,16,1173,14,"log"],[1082,19,1173,17],[1082,20,1173,18],[1082,70,1173,68],[1082,72,1173,70,"abilityData"],[1082,83,1173,81],[1082,84,1173,82],[1083,8,1174,6,"game"],[1083,12,1174,10],[1083,13,1174,11,"updateAbilityData"],[1083,30,1174,28],[1083,31,1174,29,"abilityData"],[1083,42,1174,40],[1083,43,1174,41],[1084,6,1175,4],[1085,4,1176,2],[1085,5,1176,3],[1085,7,1176,5],[1085,8,1176,6,"combatState"],[1085,19,1176,17],[1085,20,1176,18,"abilityManager"],[1085,34,1176,32],[1085,36,1176,34,"game"],[1085,40,1176,38],[1085,41,1176,39,"updateAbilityData"],[1085,58,1176,56],[1085,59,1176,57],[1085,60,1176,58],[1086,4,1178,2],[1086,10,1178,8,"contextValue"],[1086,22,1178,39],[1086,25,1178,42,"React"],[1086,30,1178,47],[1086,31,1178,47,"default"],[1086,38,1178,47],[1086,39,1178,48,"useMemo"],[1086,46,1178,55],[1086,47,1178,56],[1086,54,1178,63],[1087,6,1179,4,"combatState"],[1087,17,1179,15],[1088,6,1180,4,"projectiles"],[1088,17,1180,15],[1089,6,1181,4,"startCombat"],[1089,17,1181,15],[1090,6,1182,4,"stopCombat"],[1090,16,1182,14],[1091,6,1183,4,"equipAbility"],[1091,18,1183,16],[1092,6,1184,4,"handleEnemyKill"],[1092,21,1184,19],[1093,6,1185,4,"getDeck"],[1093,13,1185,11],[1094,6,1186,4,"getAvailableAbilities"],[1094,27,1186,25],[1095,6,1187,4,"upgradeAbility"],[1095,20,1187,18],[1096,6,1188,4,"spawnEnemy"],[1096,16,1188,14],[1097,6,1189,4,"spawnBoss"],[1097,15,1189,13],[1098,6,1190,4,"clearAllEnemies"],[1098,21,1190,19],[1099,6,1191,4,"clearSpecificEnemy"],[1099,24,1191,22],[1100,6,1192,4,"triggerLevelUpExplosion"],[1100,29,1192,27],[1101,6,1193,4,"findClosestEnemy"],[1101,22,1193,20],[1102,6,1194,4,"updateNinjaPosition"],[1102,25,1194,23],[1103,6,1195,4,"setManualControlActive"],[1103,28,1195,26],[1104,6,1196,4,"lastExplosionTime"],[1104,23,1196,21],[1105,6,1197,4,"useAbilityManually"],[1105,24,1197,22],[1106,6,1197,24],[1107,6,1198,4,"saveAbilityData"],[1107,21,1198,19],[1108,6,1198,21],[1109,6,1199,4,"shadowClone"],[1109,17,1199,15],[1109,19,1199,17,"combatState"],[1109,30,1199,28],[1109,31,1199,29,"shadowClone"],[1109,42,1199,40],[1109,43,1199,42],[1110,4,1200,2],[1110,5,1200,3],[1110,6,1200,4],[1110,8,1200,6],[1111,4,1201,4],[1112,4,1202,4],[1113,4,1203,4,"combatState"],[1113,15,1203,15],[1113,17,1204,4,"projectiles"],[1113,28,1204,15],[1113,30,1205,4,"lastExplosionTime"],[1113,47,1205,21],[1114,4,1206,4],[1115,4,1207,4,"combatState"],[1115,15,1207,15],[1115,16,1207,16,"abilityManager"],[1115,30,1207,30],[1115,32,1208,4,"combatState"],[1115,43,1208,15],[1115,44,1208,16,"enemies"],[1115,51,1208,23],[1115,53,1209,4,"combatState"],[1115,64,1209,15],[1115,65,1209,16,"shadowClone"],[1115,76,1209,27],[1116,4,1209,29],[1117,4,1210,4,"useAbilityManually"],[1117,22,1210,22],[1118,4,1210,24],[1119,4,1211,4,"saveAbilityData"],[1119,19,1211,19],[1119,20,1211,21],[1120,4,1211,21],[1120,5,1212,3],[1120,6,1212,4],[1121,4,1214,2],[1121,24,1215,4],[1121,28,1215,4,"_reactJsxDevRuntime"],[1121,47,1215,4],[1121,48,1215,4,"jsxDEV"],[1121,54,1215,4],[1121,56,1215,5,"CombatContext"],[1121,69,1215,18],[1121,70,1215,19,"Provider"],[1121,78,1215,27],[1122,6,1215,28,"value"],[1122,11,1215,33],[1122,13,1215,35,"contextValue"],[1122,25,1215,48],[1123,6,1215,48,"children"],[1123,14,1215,48],[1123,16,1216,7,"children"],[1124,4,1216,15],[1125,6,1216,15,"fileName"],[1125,14,1216,15],[1125,16,1216,15,"_jsxFileName"],[1125,28,1216,15],[1126,6,1216,15,"lineNumber"],[1126,16,1216,15],[1127,6,1216,15,"columnNumber"],[1127,18,1216,15],[1128,4,1216,15],[1128,11,1217,28],[1128,12,1217,29],[1129,2,1219,0],[1129,3,1219,1],[1130,0,1219,2],[1130,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCqB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE4B,4BF;a+CU;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}