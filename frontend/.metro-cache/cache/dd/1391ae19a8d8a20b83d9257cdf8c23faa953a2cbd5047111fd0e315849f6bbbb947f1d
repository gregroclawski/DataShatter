{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: 'üßå',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('üîÑ Combat tick running...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 5x faster and smoother\n            const MOVEMENT_SPEED = 1.5; // 5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            let newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            let newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`üéØ Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`üêâ Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":589,"map":[[13,2,67,0,"Object"],[13,8,67,0],[13,9,67,0,"defineProperty"],[13,23,67,0],[13,24,67,0,"exports"],[13,31,67,0],[14,4,67,0,"enumerable"],[14,14,67,0],[15,4,67,0,"get"],[15,7,67,0],[15,18,67,0,"get"],[15,19,67,0],[16,6,67,0],[16,13,67,0,"useCombat"],[16,22,67,0],[17,4,67,0],[18,2,67,0],[19,2,77,0,"Object"],[19,8,77,0],[19,9,77,0,"defineProperty"],[19,23,77,0],[19,24,77,0,"exports"],[19,31,77,0],[20,4,77,0,"enumerable"],[20,14,77,0],[21,4,77,0,"get"],[21,7,77,0],[21,18,77,0,"get"],[21,19,77,0],[22,6,77,0],[22,13,77,0,"CombatProvider"],[22,27,77,0],[23,4,77,0],[24,2,77,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,3,0],[27,6,3,0,"_engineCombatEngine"],[27,25,3,0],[27,28,3,0,"require"],[27,35,3,0],[27,36,3,0,"_dependencyMap"],[27,50,3,0],[28,2,4,0],[28,6,4,0,"_typesAbilityTypes"],[28,24,4,0],[28,27,4,0,"require"],[28,34,4,0],[28,35,4,0,"_dependencyMap"],[28,49,4,0],[29,2,5,0],[29,6,5,0,"_GameContext"],[29,18,5,0],[29,21,5,0,"require"],[29,28,5,0],[29,29,5,0,"_dependencyMap"],[29,43,5,0],[30,2,6,0],[30,6,6,0,"_ZoneContext"],[30,18,6,0],[30,21,6,0,"require"],[30,28,6,0],[30,29,6,0,"_dependencyMap"],[30,43,6,0],[31,2,6,40],[31,6,6,40,"_reactJsxDevRuntime"],[31,25,6,40],[31,28,6,40,"require"],[31,35,6,40],[31,36,6,40,"_dependencyMap"],[31,50,6,40],[32,2,65,0],[32,8,65,6,"CombatContext"],[32,21,65,19],[32,37,65,22],[32,41,65,22,"createContext"],[32,47,65,35],[32,48,65,35,"createContext"],[32,61,65,35],[32,63,65,67,"undefined"],[32,72,65,76],[32,73,65,77],[33,2,67,7],[33,8,67,13,"useCombat"],[33,17,67,22],[33,20,67,25,"useCombat"],[33,21,67,25],[33,26,67,50],[34,4,68,2],[34,10,68,8,"context"],[34,17,68,15],[34,20,68,18],[34,24,68,18,"useContext"],[34,30,68,28],[34,31,68,28,"useContext"],[34,41,68,28],[34,43,68,29,"CombatContext"],[34,56,68,42],[34,57,68,43],[35,4,69,2],[35,8,69,6],[35,9,69,7,"context"],[35,16,69,14],[35,18,69,16],[36,6,70,4],[36,12,70,10],[36,16,70,14,"Error"],[36,21,70,19],[36,22,70,20],[36,70,70,68],[36,71,70,69],[37,4,71,2],[38,4,72,2],[38,11,72,9,"context"],[38,18,72,16],[39,2,73,0],[39,3,73,1],[40,2,75,0],[40,6,75,4,"enemyCounter"],[40,18,75,16],[40,21,75,19],[40,22,75,20],[40,23,75,21],[40,24,75,22],[42,2,77,7],[42,8,77,13,"CombatProvider"],[42,22,77,27],[42,25,77,30,"CombatProvider"],[42,26,77,31],[43,4,77,33,"children"],[44,2,77,67],[44,3,77,68],[44,8,77,73],[45,4,78,2],[45,10,78,8],[46,6,78,10,"updateNinja"],[47,4,78,22],[47,5,78,23],[47,8,78,26],[47,12,78,26,"useGame"],[47,24,78,33],[47,25,78,33,"useGame"],[47,32,78,33],[47,34,78,34],[47,35,78,35],[48,4,79,2],[48,10,79,8],[49,6,79,10,"recordEnemyKill"],[50,4,79,26],[50,5,79,27],[50,8,79,30],[50,12,79,30,"useZone"],[50,24,79,37],[50,25,79,37,"useZone"],[50,32,79,37],[50,34,79,38],[50,35,79,39],[51,4,81,2],[51,10,81,8],[51,11,81,9,"combatState"],[51,22,81,20],[51,24,81,22,"setCombatState"],[51,38,81,36],[51,39,81,37],[51,42,81,40],[51,46,81,40,"useState"],[51,52,81,48],[51,53,81,48,"useState"],[51,61,81,48],[51,63,81,62],[52,6,82,4,"isInCombat"],[52,16,82,14],[52,18,82,16],[52,23,82,21],[53,6,83,4,"currentTick"],[53,17,83,15],[53,19,83,17],[53,20,83,18],[54,6,84,4,"enemies"],[54,13,84,11],[54,15,84,13],[54,17,84,15],[55,6,85,4,"abilityManager"],[55,20,85,18],[55,22,85,20],[55,26,85,24,"AbilityManager"],[55,44,85,38],[55,45,85,38,"AbilityManager"],[55,59,85,38],[55,60,85,39],[55,61,85,40],[56,6,86,4,"statusEffects"],[56,19,86,17],[56,21,86,19],[56,25,86,23,"StatusEffectManager"],[56,44,86,42],[56,45,86,42,"StatusEffectManager"],[56,64,86,42],[56,65,86,43],[56,66,86,44],[57,6,87,4,"playerStats"],[57,17,87,15],[57,19,87,17],[58,8,88,6,"attack"],[58,14,88,12],[58,16,88,14],[58,18,88,16],[59,8,88,18],[60,8,89,6,"defense"],[60,15,89,13],[60,17,89,15],[60,18,89,16],[61,8,90,6,"health"],[61,14,90,12],[61,16,90,14],[61,19,90,17],[62,8,91,6,"maxHealth"],[62,17,91,15],[62,19,91,17],[62,22,91,20],[63,8,92,6,"critChance"],[63,18,92,16],[63,20,92,18],[63,21,92,19],[64,8,93,6,"critDamage"],[64,18,93,16],[64,20,93,18],[64,23,93,21],[65,8,94,6,"cooldownReduction"],[65,25,94,23],[65,27,94,25],[66,6,95,4],[67,4,96,2],[67,5,96,3],[67,6,96,4],[68,4,98,2],[68,10,98,8],[68,11,98,9,"projectiles"],[68,22,98,20],[68,24,98,22,"setProjectiles"],[68,38,98,36],[68,39,98,37],[68,42,98,40],[68,46,98,40,"useState"],[68,52,98,48],[68,53,98,48,"useState"],[68,61,98,48],[68,63,98,69],[68,65,98,71],[68,66,98,72],[69,4,99,2],[69,10,99,8],[69,11,99,9,"lastExplosionTime"],[69,28,99,26],[69,30,99,28,"setLastExplosionTime"],[69,50,99,48],[69,51,99,49],[69,54,99,52],[69,58,99,52,"useState"],[69,64,99,60],[69,65,99,60,"useState"],[69,73,99,60],[69,75,99,69],[69,76,99,70],[69,77,99,71],[70,4,100,2],[71,4,101,2],[73,4,103,2],[74,4,104,2],[74,10,104,8,"handleEnemyKill"],[74,25,104,23],[74,28,104,26],[74,32,104,26,"useCallback"],[74,38,104,37],[74,39,104,37,"useCallback"],[74,50,104,37],[74,52,104,39,"enemy"],[74,57,104,57],[74,61,104,62],[75,6,105,4,"console"],[75,13,105,11],[75,14,105,12,"log"],[75,17,105,15],[75,18,105,16],[75,46,105,44,"enemy"],[75,51,105,49],[75,52,105,50,"maxHealth"],[75,61,105,59],[75,63,105,61],[75,64,105,62],[77,6,107,4],[78,6,108,4],[78,12,108,10,"xpReward"],[78,20,108,18],[78,23,108,21],[78,25,108,23],[78,26,108,24],[78,27,108,25],[79,6,109,4],[79,12,109,10,"goldReward"],[79,22,109,20],[79,25,109,23],[79,27,109,25],[80,6,111,4,"console"],[80,13,111,11],[80,14,111,12,"log"],[80,17,111,15],[80,18,111,16],[80,33,111,31,"xpReward"],[80,41,111,39],[80,52,111,50,"goldReward"],[80,62,111,60],[80,78,111,76],[80,79,111,77],[82,6,113,4],[83,6,114,4],[84,6,115,4,"setTimeout"],[84,16,115,14],[84,17,115,15],[84,23,115,21],[85,8,116,6],[86,8,117,6,"updateNinja"],[86,19,117,17],[86,20,117,19,"prev"],[86,24,117,23],[86,28,117,28],[87,10,118,8,"console"],[87,17,118,15],[87,18,118,16,"log"],[87,21,118,19],[87,22,118,20],[87,39,118,37,"prev"],[87,43,118,41],[87,44,118,42,"experience"],[87,54,118,52],[87,66,118,64,"prev"],[87,70,118,68],[87,71,118,69,"experience"],[87,81,118,79],[87,84,118,82,"xpReward"],[87,92,118,90],[87,94,118,92],[87,95,118,93],[88,10,119,8],[88,17,119,15],[89,12,120,10,"experience"],[89,22,120,20],[89,24,120,22,"prev"],[89,28,120,26],[89,29,120,27,"experience"],[89,39,120,37],[89,42,120,40,"xpReward"],[89,50,120,48],[90,12,121,10,"gold"],[90,16,121,14],[90,18,121,16,"prev"],[90,22,121,20],[90,23,121,21,"gold"],[90,27,121,25],[90,30,121,28,"goldReward"],[91,10,122,8],[91,11,122,9],[92,8,123,6],[92,9,123,7],[92,10,123,8],[94,8,125,6],[95,8,126,6],[95,14,126,12,"zoneEnemy"],[95,23,126,21],[95,26,126,24],[96,10,127,8,"id"],[96,12,127,10],[96,14,127,12,"enemy"],[96,19,127,17],[96,20,127,18,"id"],[96,22,127,20],[97,10,128,8,"typeId"],[97,16,128,14],[97,18,128,16],[97,28,128,26],[98,10,128,28],[99,10,129,8,"name"],[99,14,129,12],[99,16,129,14,"enemy"],[99,21,129,19],[99,22,129,20,"name"],[99,26,129,24],[100,10,130,8,"icon"],[100,14,130,12],[100,16,130,14],[100,20,130,18],[101,10,130,20],[102,10,131,8,"hp"],[102,12,131,10],[102,14,131,12],[102,15,131,13],[103,10,131,15],[104,10,132,8,"maxHP"],[104,15,132,13],[104,17,132,15,"enemy"],[104,22,132,20],[104,23,132,21,"maxHealth"],[104,32,132,30],[105,10,133,8,"attack"],[105,16,133,14],[105,18,133,16,"enemy"],[105,23,133,21],[105,24,133,22,"stats"],[105,29,133,27],[105,30,133,28,"attack"],[105,36,133,34],[106,10,134,8,"xp"],[106,12,134,10],[106,14,134,12],[106,16,134,14],[107,10,134,16],[108,10,135,8,"position"],[108,18,135,16],[108,20,135,18,"enemy"],[108,25,135,23],[108,26,135,24,"position"],[109,8,136,6],[109,9,136,7],[110,8,137,6,"recordEnemyKill"],[110,23,137,21],[110,24,137,22,"zoneEnemy"],[110,33,137,31],[110,34,137,32],[111,6,138,4],[111,7,138,5],[111,9,138,7],[111,10,138,8],[111,11,138,9],[111,12,138,10],[111,13,138,11],[112,4,139,2],[112,5,139,3],[112,7,139,5],[112,8,139,6,"updateNinja"],[112,19,139,17],[112,21,139,19,"recordEnemyKill"],[112,36,139,34],[112,37,139,35],[112,38,139,36],[114,4,141,2],[115,4,142,2],[115,10,142,8,"handleCombatTick"],[115,26,142,24],[115,29,142,27,"React"],[115,34,142,32],[115,35,142,32,"default"],[115,42,142,32],[115,43,142,33,"useCallback"],[115,54,142,44],[115,55,142,45],[115,61,142,51],[116,6,143,4,"console"],[116,13,143,11],[116,14,143,12,"log"],[116,17,143,15],[116,18,143,16],[116,45,143,43],[116,46,143,44],[117,6,145,4],[117,10,145,8,"enemiesToKill"],[117,23,145,36],[117,26,145,39],[117,28,145,41],[117,29,145,42],[117,30,145,43],[119,6,147,4,"setCombatState"],[119,20,147,18],[119,21,147,19,"prev"],[119,25,147,23],[119,29,147,27],[120,8,148,6],[120,14,148,12,"newTick"],[120,21,148,19],[120,24,148,22,"combatEngine"],[120,43,148,34],[120,44,148,34,"combatEngine"],[120,56,148,34],[120,57,148,35,"getCurrentTick"],[120,71,148,49],[120,72,148,50],[120,73,148,51],[121,8,149,6],[121,14,149,12,"newState"],[121,22,149,20],[121,25,149,23],[122,10,149,25],[122,13,149,28,"prev"],[122,17,149,32],[123,10,149,34,"currentTick"],[123,21,149,45],[123,23,149,47,"newTick"],[124,8,149,55],[124,9,149,56],[125,8,151,6],[125,12,151,10],[125,13,151,11,"newState"],[125,21,151,19],[125,22,151,20,"isInCombat"],[125,32,151,30],[125,34,151,32],[125,41,151,39,"newState"],[125,49,151,47],[127,8,153,6],[128,8,154,6,"newState"],[128,16,154,14],[128,17,154,15,"abilityManager"],[128,31,154,29],[128,32,154,30,"updateCooldowns"],[128,47,154,45],[128,48,154,46,"newTick"],[128,55,154,53],[128,56,154,54],[130,8,156,6],[131,8,157,6],[131,14,157,12,"effectResults"],[131,27,157,25],[131,30,157,28,"newState"],[131,38,157,36],[131,39,157,37,"statusEffects"],[131,52,157,50],[131,53,157,51,"processTick"],[131,64,157,62],[131,65,157,63,"newTick"],[131,72,157,70],[131,73,157,71],[133,8,159,6],[134,8,160,6,"effectResults"],[134,21,160,19],[134,22,160,20,"forEach"],[134,29,160,27],[134,30,160,28],[134,31,160,29,"results"],[134,38,160,36],[134,40,160,38,"entityId"],[134,48,160,46],[134,53,160,51],[135,10,161,8],[135,16,161,14,"enemyIndex"],[135,26,161,24],[135,29,161,27,"newState"],[135,37,161,35],[135,38,161,36,"enemies"],[135,45,161,43],[135,46,161,44,"findIndex"],[135,55,161,53],[135,56,161,54,"e"],[135,57,161,55],[135,61,161,59,"e"],[135,62,161,60],[135,63,161,61,"id"],[135,65,161,63],[135,70,161,68,"entityId"],[135,78,161,76],[135,79,161,77],[136,10,162,8],[136,14,162,12,"enemyIndex"],[136,24,162,22],[136,28,162,26],[136,29,162,27],[136,31,162,29],[137,12,163,10,"results"],[137,19,163,17],[137,20,163,18,"forEach"],[137,27,163,25],[137,28,163,26,"result"],[137,34,163,32],[137,38,163,36],[138,14,164,12,"newState"],[138,22,164,20],[138,23,164,21,"enemies"],[138,30,164,28],[138,31,164,29,"enemyIndex"],[138,41,164,39],[138,42,164,40],[138,43,164,41,"health"],[138,49,164,47],[138,53,164,51,"result"],[138,59,164,57],[138,60,164,58,"damage"],[138,66,164,64],[139,14,165,12,"newState"],[139,22,165,20],[139,23,165,21,"enemies"],[139,30,165,28],[139,31,165,29,"enemyIndex"],[139,41,165,39],[139,42,165,40],[139,43,165,41,"lastDamaged"],[139,54,165,52],[139,57,165,55,"newTick"],[139,64,165,62],[140,12,166,10],[140,13,166,11],[140,14,166,12],[141,10,167,8],[142,8,168,6],[142,9,168,7],[142,10,168,8],[144,8,170,6],[145,8,171,6,"newState"],[145,16,171,14],[145,17,171,15,"enemies"],[145,24,171,22],[145,25,171,23,"forEach"],[145,32,171,30],[145,33,171,31,"enemy"],[145,38,171,36],[145,42,171,40],[146,10,172,8],[146,14,172,12],[146,15,172,13,"enemy"],[146,20,172,18],[146,21,172,19,"isBoss"],[146,27,172,25],[146,29,172,27],[147,12,172,29],[148,12,173,10],[149,12,174,10],[149,18,174,16,"MOVEMENT_SPEED"],[149,32,174,30],[149,35,174,33],[149,38,174,36],[149,39,174,37],[149,40,174,38],[150,12,175,10],[150,18,175,16,"SCREEN_WIDTH"],[150,30,175,28],[150,33,175,31],[150,36,175,34],[151,12,176,10],[151,18,176,16,"GAME_AREA_HEIGHT"],[151,34,176,32],[151,37,176,35],[151,40,176,38],[151,41,176,39],[151,42,176,40],[152,12,177,10],[152,18,177,16,"ENEMY_SIZE"],[152,28,177,26],[152,31,177,29],[152,33,177,31],[154,12,179,10],[155,12,180,10],[155,16,180,14],[155,17,180,15,"enemy"],[155,22,180,20],[155,23,180,21,"movementDirection"],[155,40,180,38],[155,42,180,40],[156,14,181,12],[157,14,182,12,"enemy"],[157,19,182,17],[157,20,182,18,"movementDirection"],[157,37,182,35],[157,40,182,38],[158,16,183,14,"x"],[158,17,183,15],[158,19,183,17],[158,20,183,18,"Math"],[158,24,183,22],[158,25,183,23,"random"],[158,31,183,29],[158,32,183,30],[158,33,183,31],[158,36,183,34],[158,39,183,37],[158,43,183,41],[158,44,183,42],[159,16,183,44],[160,16,184,14,"y"],[160,17,184,15],[160,19,184,17],[160,20,184,18,"Math"],[160,24,184,22],[160,25,184,23,"random"],[160,31,184,29],[160,32,184,30],[160,33,184,31],[160,36,184,34],[160,39,184,37],[160,43,184,41],[161,14,185,12],[161,15,185,13],[162,12,186,10],[164,12,188,10],[165,12,189,10],[165,16,189,14,"newX"],[165,20,189,18],[165,23,189,21,"enemy"],[165,28,189,26],[165,29,189,27,"position"],[165,37,189,35],[165,38,189,36,"x"],[165,39,189,37],[165,42,189,41,"enemy"],[165,47,189,46],[165,48,189,47,"movementDirection"],[165,65,189,64],[165,66,189,65,"x"],[165,67,189,66],[165,70,189,69,"MOVEMENT_SPEED"],[165,84,189,84],[166,12,190,10],[166,16,190,14,"newY"],[166,20,190,18],[166,23,190,21,"enemy"],[166,28,190,26],[166,29,190,27,"position"],[166,37,190,35],[166,38,190,36,"y"],[166,39,190,37],[166,42,190,41,"enemy"],[166,47,190,46],[166,48,190,47,"movementDirection"],[166,65,190,64],[166,66,190,65,"y"],[166,67,190,66],[166,70,190,69,"MOVEMENT_SPEED"],[166,84,190,84],[168,12,192,10],[169,12,193,10],[169,16,193,14,"newX"],[169,20,193,18],[169,24,193,22],[169,25,193,23],[169,29,193,27,"newX"],[169,33,193,31],[169,37,193,35,"SCREEN_WIDTH"],[169,49,193,47],[169,52,193,50,"ENEMY_SIZE"],[169,62,193,60],[169,64,193,62],[170,14,194,12,"enemy"],[170,19,194,17],[170,20,194,18,"movementDirection"],[170,37,194,35],[170,38,194,36,"x"],[170,39,194,37],[170,43,194,41],[170,44,194,42],[170,45,194,43],[171,14,195,12,"newX"],[171,18,195,16],[171,21,195,19,"Math"],[171,25,195,23],[171,26,195,24,"max"],[171,29,195,27],[171,30,195,28],[171,31,195,29],[171,33,195,31,"Math"],[171,37,195,35],[171,38,195,36,"min"],[171,41,195,39],[171,42,195,40,"SCREEN_WIDTH"],[171,54,195,52],[171,57,195,55,"ENEMY_SIZE"],[171,67,195,65],[171,69,195,67,"newX"],[171,73,195,71],[171,74,195,72],[171,75,195,73],[172,12,196,10],[173,12,197,10],[173,16,197,14,"newY"],[173,20,197,18],[173,24,197,22],[173,25,197,23],[173,29,197,27,"newY"],[173,33,197,31],[173,37,197,35,"GAME_AREA_HEIGHT"],[173,53,197,51],[173,56,197,54,"ENEMY_SIZE"],[173,66,197,64],[173,68,197,66],[174,14,198,12,"enemy"],[174,19,198,17],[174,20,198,18,"movementDirection"],[174,37,198,35],[174,38,198,36,"y"],[174,39,198,37],[174,43,198,41],[174,44,198,42],[174,45,198,43],[175,14,199,12,"newY"],[175,18,199,16],[175,21,199,19,"Math"],[175,25,199,23],[175,26,199,24,"max"],[175,29,199,27],[175,30,199,28],[175,31,199,29],[175,33,199,31,"Math"],[175,37,199,35],[175,38,199,36,"min"],[175,41,199,39],[175,42,199,40,"GAME_AREA_HEIGHT"],[175,58,199,56],[175,61,199,59,"ENEMY_SIZE"],[175,71,199,69],[175,73,199,71,"newY"],[175,77,199,75],[175,78,199,76],[175,79,199,77],[176,12,200,10],[178,12,202,10],[179,12,203,10,"enemy"],[179,17,203,15],[179,18,203,16,"position"],[179,26,203,24],[179,27,203,25,"x"],[179,28,203,26],[179,31,203,29,"newX"],[179,35,203,33],[180,12,204,10,"enemy"],[180,17,204,15],[180,18,204,16,"position"],[180,26,204,24],[180,27,204,25,"y"],[180,28,204,26],[180,31,204,29,"newY"],[180,35,204,33],[182,12,206,10],[183,12,207,10],[183,16,207,14,"Math"],[183,20,207,18],[183,21,207,19,"random"],[183,27,207,25],[183,28,207,26],[183,29,207,27],[183,32,207,30],[183,36,207,34],[183,38,207,36],[184,14,207,38],[185,14,208,12,"enemy"],[185,19,208,17],[185,20,208,18,"movementDirection"],[185,37,208,35],[185,40,208,38],[186,16,209,14,"x"],[186,17,209,15],[186,19,209,17],[186,20,209,18,"Math"],[186,24,209,22],[186,25,209,23,"random"],[186,31,209,29],[186,32,209,30],[186,33,209,31],[186,36,209,34],[186,39,209,37],[186,43,209,41],[186,44,209,42],[187,16,210,14,"y"],[187,17,210,15],[187,19,210,17],[187,20,210,18,"Math"],[187,24,210,22],[187,25,210,23,"random"],[187,31,210,29],[187,32,210,30],[187,33,210,31],[187,36,210,34],[187,39,210,37],[187,43,210,41],[188,14,211,12],[188,15,211,13],[189,12,212,10],[190,10,213,8],[191,8,214,6],[191,9,214,7],[191,10,214,8],[193,8,216,6],[194,8,217,6],[194,13,217,11],[194,17,217,15,"i"],[194,18,217,16],[194,21,217,19],[194,22,217,20],[194,24,217,22,"i"],[194,25,217,23],[194,28,217,26],[194,29,217,27],[194,31,217,29,"i"],[194,32,217,30],[194,34,217,32],[194,36,217,34],[195,10,218,8],[195,14,218,12,"newState"],[195,22,218,20],[195,23,218,21,"abilityManager"],[195,37,218,35],[195,38,218,36,"isAbilityReady"],[195,52,218,50],[195,53,218,51,"i"],[195,54,218,52],[195,55,218,53],[195,59,218,57,"newState"],[195,67,218,65],[195,68,218,66,"enemies"],[195,75,218,73],[195,76,218,74,"length"],[195,82,218,80],[195,85,218,83],[195,86,218,84],[195,88,218,86],[196,12,219,10],[196,16,219,14,"newState"],[196,24,219,22],[196,25,219,23,"abilityManager"],[196,39,219,37],[196,40,219,38,"useAbility"],[196,50,219,48],[196,51,219,49,"i"],[196,52,219,50],[196,54,219,52,"newTick"],[196,61,219,59],[196,62,219,60],[196,64,219,62],[197,14,220,12,"castAbility"],[197,25,220,23],[197,26,220,24,"newState"],[197,34,220,32],[197,36,220,34,"i"],[197,37,220,35],[197,38,220,36],[198,12,221,10],[199,10,222,8],[200,8,223,6],[202,8,225,6],[203,8,226,6],[203,14,226,12,"deadEnemies"],[203,25,226,23],[203,28,226,26,"newState"],[203,36,226,34],[203,37,226,35,"enemies"],[203,44,226,42],[203,45,226,43,"filter"],[203,51,226,49],[203,52,226,50,"enemy"],[203,57,226,55],[203,61,226,59,"enemy"],[203,66,226,64],[203,67,226,65,"health"],[203,73,226,71],[203,77,226,75],[203,78,226,76],[203,79,226,77],[204,8,227,6,"enemiesToKill"],[204,21,227,19],[204,24,227,22],[204,25,227,23],[204,28,227,26,"deadEnemies"],[204,39,227,37],[204,40,227,38],[204,41,227,39],[204,42,227,40],[206,8,229,6],[207,8,230,6,"newState"],[207,16,230,14],[207,17,230,15,"enemies"],[207,24,230,22],[207,27,230,25,"newState"],[207,35,230,33],[207,36,230,34,"enemies"],[207,43,230,41],[207,44,230,42,"filter"],[207,50,230,48],[207,51,230,49,"enemy"],[207,56,230,54],[207,60,230,58,"enemy"],[207,65,230,63],[207,66,230,64,"health"],[207,72,230,70],[207,75,230,73],[207,76,230,74],[207,77,230,75],[209,8,232,6],[210,8,233,6],[211,8,234,6],[211,14,234,12,"MAX_ENEMIES"],[211,25,234,23],[211,28,234,26],[211,30,234,28],[212,8,235,6],[212,14,235,12,"MIN_SPAWN_DELAY"],[212,29,235,27],[212,32,235,30],[212,35,235,33],[212,36,235,34],[212,37,235,35],[213,8,236,6],[213,14,236,12,"now"],[213,17,236,15],[213,20,236,18,"Date"],[213,24,236,22],[213,25,236,23,"now"],[213,28,236,26],[213,29,236,27],[213,30,236,28],[214,8,237,6],[214,14,237,12,"hasBoss"],[214,21,237,19],[214,24,237,22,"newState"],[214,32,237,30],[214,33,237,31,"enemies"],[214,40,237,38],[214,41,237,39,"some"],[214,45,237,43],[214,46,237,44,"enemy"],[214,51,237,49],[214,55,237,53,"enemy"],[214,60,237,58],[214,61,237,59,"isBoss"],[214,67,237,65],[214,68,237,66],[216,8,239,6],[217,8,240,6],[217,12,240,10],[217,13,240,11,"newState"],[217,21,240,19],[217,22,240,20,"lastSpawnTime"],[217,35,240,33],[217,37,240,35],[218,10,241,8,"newState"],[218,18,241,16],[218,19,241,17,"lastSpawnTime"],[218,32,241,30],[218,35,241,33,"now"],[218,38,241,36],[219,8,242,6],[220,8,244,6,"console"],[220,15,244,13],[220,16,244,14,"log"],[220,19,244,17],[220,20,244,18],[220,53,244,51,"newState"],[220,61,244,59],[220,62,244,60,"enemies"],[220,69,244,67],[220,70,244,68,"length"],[220,76,244,74],[220,85,244,83,"MAX_ENEMIES"],[220,96,244,94],[220,109,244,107,"hasBoss"],[220,116,244,114],[220,118,244,116],[220,119,244,117],[222,8,246,6],[223,8,247,6],[223,12,247,10],[223,13,247,11,"hasBoss"],[223,20,247,18],[223,24,247,22,"newState"],[223,32,247,30],[223,33,247,31,"enemies"],[223,40,247,38],[223,41,247,39,"length"],[223,47,247,45],[223,50,247,48,"MAX_ENEMIES"],[223,61,247,59],[223,65,247,64,"now"],[223,68,247,67],[223,71,247,70,"newState"],[223,79,247,78],[223,80,247,79,"lastSpawnTime"],[223,93,247,92],[223,97,247,97,"MIN_SPAWN_DELAY"],[223,112,247,112],[223,114,247,114],[224,10,248,8,"console"],[224,17,248,15],[224,18,248,16,"log"],[224,21,248,19],[224,22,248,20],[224,43,248,41,"newState"],[224,51,248,49],[224,52,248,50,"enemies"],[224,59,248,57],[224,60,248,58,"length"],[224,66,248,64],[224,69,248,67],[224,70,248,68],[224,74,248,72,"MAX_ENEMIES"],[224,85,248,83],[224,87,248,85],[224,88,248,86],[225,10,249,8,"spawnTestEnemy"],[225,24,249,22],[225,25,249,23,"newState"],[225,33,249,31],[225,34,249,32],[226,10,250,8,"newState"],[226,18,250,16],[226,19,250,17,"lastSpawnTime"],[226,32,250,30],[226,35,250,33,"now"],[226,38,250,36],[227,8,251,6],[228,8,253,6],[228,15,253,13,"newState"],[228,23,253,21],[229,6,254,4],[229,7,254,5],[229,8,254,6],[231,6,256,4],[232,6,257,4,"enemiesToKill"],[232,19,257,17],[232,20,257,18,"forEach"],[232,27,257,25],[232,28,257,26,"enemy"],[232,33,257,31],[232,37,257,35],[233,8,258,6,"handleEnemyKill"],[233,23,258,21],[233,24,258,22,"enemy"],[233,29,258,27],[233,30,258,28],[234,6,259,4],[234,7,259,5],[234,8,259,6],[235,4,260,2],[235,5,260,3],[235,7,260,5],[235,8,260,6,"handleEnemyKill"],[235,23,260,21],[235,24,260,22],[235,25,260,23],[235,26,260,24],[235,27,260,25],[237,4,262,2],[238,4,263,2],[238,10,263,8,"findClosestEnemyInternal"],[238,34,263,32],[238,37,263,36,"enemies"],[238,44,263,58],[238,48,263,83],[239,6,264,4],[239,10,264,8,"enemies"],[239,17,264,15],[239,18,264,16,"length"],[239,24,264,22],[239,29,264,27],[239,30,264,28],[239,32,264,30],[239,39,264,37],[239,43,264,41],[241,6,266,4],[242,6,267,4],[242,12,267,10,"SCREEN_WIDTH"],[242,24,267,22],[242,27,267,25],[242,30,267,28],[243,6,268,4],[243,12,268,10,"GAME_AREA_HEIGHT"],[243,28,268,26],[243,31,268,29],[243,34,268,32],[243,37,268,35],[243,40,268,38],[243,41,268,39],[243,42,268,40],[244,6,269,4],[244,12,269,10,"ninjaX"],[244,18,269,16],[244,21,269,19,"SCREEN_WIDTH"],[244,33,269,31],[244,36,269,34],[244,37,269,35],[245,6,270,4],[245,12,270,10,"ninjaY"],[245,18,270,16],[245,21,270,19,"GAME_AREA_HEIGHT"],[245,37,270,35],[245,40,270,38],[245,41,270,39],[246,6,272,4],[246,10,272,8,"closestEnemy"],[246,22,272,20],[246,25,272,23,"enemies"],[246,32,272,30],[246,33,272,31],[246,34,272,32],[246,35,272,33],[247,6,273,4],[247,10,273,8,"closestDistance"],[247,25,273,23],[247,28,273,26,"Infinity"],[247,36,273,34],[248,6,275,4,"enemies"],[248,13,275,11],[248,14,275,12,"forEach"],[248,21,275,19],[248,22,275,20,"enemy"],[248,27,275,25],[248,31,275,29],[249,8,276,6],[249,14,276,12,"distance"],[249,22,276,20],[249,25,276,23,"Math"],[249,29,276,27],[249,30,276,28,"sqrt"],[249,34,276,32],[249,35,277,8,"Math"],[249,39,277,12],[249,40,277,13,"pow"],[249,43,277,16],[249,44,277,17,"enemy"],[249,49,277,22],[249,50,277,23,"position"],[249,58,277,31],[249,59,277,32,"x"],[249,60,277,33],[249,63,277,36,"ninjaX"],[249,69,277,42],[249,71,277,44],[249,72,277,45],[249,73,277,46],[249,76,278,8,"Math"],[249,80,278,12],[249,81,278,13,"pow"],[249,84,278,16],[249,85,278,17,"enemy"],[249,90,278,22],[249,91,278,23,"position"],[249,99,278,31],[249,100,278,32,"y"],[249,101,278,33],[249,104,278,36,"ninjaY"],[249,110,278,42],[249,112,278,44],[249,113,278,45],[249,114,279,6],[249,115,279,7],[250,8,281,6],[250,12,281,10,"distance"],[250,20,281,18],[250,23,281,21,"closestDistance"],[250,38,281,36],[250,40,281,38],[251,10,282,8,"closestDistance"],[251,25,282,23],[251,28,282,26,"distance"],[251,36,282,34],[252,10,283,8,"closestEnemy"],[252,22,283,20],[252,25,283,23,"enemy"],[252,30,283,28],[253,8,284,6],[254,6,285,4],[254,7,285,5],[254,8,285,6],[255,6,287,4,"console"],[255,13,287,11],[255,14,287,12,"log"],[255,17,287,15],[255,18,287,16],[255,60,287,58,"closestDistance"],[255,75,287,73],[255,76,287,74,"toFixed"],[255,83,287,81],[255,84,287,82],[255,85,287,83],[255,86,287,84],[255,88,287,86],[255,89,287,87],[256,6,288,4],[256,13,288,11,"closestEnemy"],[256,25,288,23],[257,4,289,2],[257,5,289,3],[259,4,291,2],[260,4,292,2],[260,10,292,8,"findClosestEnemy"],[260,26,292,24],[260,29,292,27,"findClosestEnemy"],[260,30,292,27],[260,35,292,53],[261,6,293,4],[261,13,293,11,"findClosestEnemyInternal"],[261,37,293,35],[261,38,293,36,"combatState"],[261,49,293,47],[261,50,293,48,"enemies"],[261,57,293,55],[261,58,293,56],[262,4,294,2],[262,5,294,3],[264,4,296,2],[265,4,297,2],[265,10,297,8],[265,11,297,9,"currentNinjaPosition"],[265,31,297,29],[265,33,297,31,"setCurrentNinjaPosition"],[265,56,297,54],[265,57,297,55],[265,60,297,58],[265,64,297,58,"useState"],[265,70,297,66],[265,71,297,66,"useState"],[265,79,297,66],[265,81,297,91],[266,6,297,93,"x"],[266,7,297,94],[266,9,297,96],[266,10,297,97],[267,6,297,99,"y"],[267,7,297,100],[267,9,297,102],[268,4,297,104],[268,5,297,105],[268,6,297,106],[270,4,299,2],[271,4,300,2],[271,10,300,8,"updateNinjaPosition"],[271,29,300,27],[271,32,300,30],[271,36,300,30,"useCallback"],[271,42,300,41],[271,43,300,41,"useCallback"],[271,54,300,41],[271,56,300,43,"newPosition"],[271,67,300,78],[271,71,300,83],[272,6,301,4,"setCurrentNinjaPosition"],[272,29,301,27],[272,30,301,28,"newPosition"],[272,41,301,39],[272,42,301,40],[273,4,302,2],[273,5,302,3],[273,7,302,5],[273,9,302,7],[273,10,302,8],[275,4,304,2],[276,4,305,2],[276,10,305,8,"handleProjectileHit"],[276,29,305,27],[276,32,305,31,"projectile"],[276,42,305,59],[276,46,305,64],[277,6,306,4,"console"],[277,13,306,11],[277,14,306,12,"log"],[277,17,306,15],[277,18,306,16],[277,35,306,33,"projectile"],[277,45,306,43],[277,46,306,44,"id"],[277,48,306,46],[277,62,306,60,"projectile"],[277,72,306,70],[277,73,306,71,"targetEnemyId"],[277,86,306,84],[277,94,306,92,"projectile"],[277,104,306,102],[277,105,306,103,"damage"],[277,111,306,109],[277,120,306,118],[277,121,306,119],[278,6,308,4,"setCombatState"],[278,20,308,18],[278,21,308,19,"prev"],[278,25,308,23],[278,29,308,27],[279,8,309,6],[279,14,309,12,"newState"],[279,22,309,20],[279,25,309,23],[280,10,309,25],[280,13,309,28,"prev"],[281,8,309,33],[281,9,309,34],[283,8,311,6],[284,8,312,6],[284,14,312,12,"enemyIndex"],[284,24,312,22],[284,27,312,25,"newState"],[284,35,312,33],[284,36,312,34,"enemies"],[284,43,312,41],[284,44,312,42,"findIndex"],[284,53,312,51],[284,54,312,52,"e"],[284,55,312,53],[284,59,312,57,"e"],[284,60,312,58],[284,61,312,59,"id"],[284,63,312,61],[284,68,312,66,"projectile"],[284,78,312,76],[284,79,312,77,"targetEnemyId"],[284,92,312,90],[284,93,312,91],[285,8,313,6],[285,12,313,10,"enemyIndex"],[285,22,313,20],[285,26,313,24],[285,27,313,25],[285,29,313,27],[286,10,314,8,"newState"],[286,18,314,16],[286,19,314,17,"enemies"],[286,26,314,24],[286,29,314,27],[286,30,314,28],[286,33,314,31,"newState"],[286,41,314,39],[286,42,314,40,"enemies"],[286,49,314,47],[286,50,314,48],[287,10,315,8,"newState"],[287,18,315,16],[287,19,315,17,"enemies"],[287,26,315,24],[287,27,315,25,"enemyIndex"],[287,37,315,35],[287,38,315,36],[287,41,315,39],[288,12,316,10],[288,15,316,13,"newState"],[288,23,316,21],[288,24,316,22,"enemies"],[288,31,316,29],[288,32,316,30,"enemyIndex"],[288,42,316,40],[288,43,316,41],[289,12,317,10,"health"],[289,18,317,16],[289,20,317,18,"newState"],[289,28,317,26],[289,29,317,27,"enemies"],[289,36,317,34],[289,37,317,35,"enemyIndex"],[289,47,317,45],[289,48,317,46],[289,49,317,47,"health"],[289,55,317,53],[289,58,317,56,"projectile"],[289,68,317,66],[289,69,317,67,"damage"],[289,75,317,73],[290,12,318,10,"lastDamaged"],[290,23,318,21],[290,25,318,23,"combatEngine"],[290,44,318,35],[290,45,318,35,"combatEngine"],[290,57,318,35],[290,58,318,36,"getCurrentTick"],[290,72,318,50],[290,73,318,51],[291,10,319,8],[291,11,319,9],[292,10,321,8,"console"],[292,17,321,15],[292,18,321,16,"log"],[292,21,321,19],[292,22,321,20],[292,34,321,32,"projectile"],[292,44,321,42],[292,45,321,43,"targetEnemyId"],[292,58,321,56],[292,70,321,68,"newState"],[292,78,321,76],[292,79,321,77,"enemies"],[292,86,321,84],[292,87,321,85,"enemyIndex"],[292,97,321,95],[292,98,321,96],[292,99,321,97,"health"],[292,105,321,103],[292,109,321,107,"newState"],[292,117,321,115],[292,118,321,116,"enemies"],[292,125,321,123],[292,126,321,124,"enemyIndex"],[292,136,321,134],[292,137,321,135],[292,138,321,136,"maxHealth"],[292,147,321,145],[292,149,321,147],[292,150,321,148],[293,8,322,6],[294,8,324,6],[294,15,324,13,"newState"],[294,23,324,21],[295,6,325,4],[295,7,325,5],[295,8,325,6],[297,6,327,4],[298,6,328,4,"setProjectiles"],[298,20,328,18],[298,21,328,19,"prev"],[298,25,328,23],[298,29,328,27,"prev"],[298,33,328,31],[298,34,328,32,"filter"],[298,40,328,38],[298,41,328,39,"p"],[298,42,328,40],[298,46,328,44,"p"],[298,47,328,45],[298,48,328,46,"id"],[298,50,328,48],[298,55,328,53,"projectile"],[298,65,328,63],[298,66,328,64,"id"],[298,68,328,66],[298,69,328,67],[298,70,328,68],[299,4,329,2],[299,5,329,3],[301,4,331,2],[302,4,332,2],[302,10,332,8,"castAbility"],[302,21,332,19],[302,24,332,22,"castAbility"],[302,25,332,23,"state"],[302,30,332,41],[302,32,332,43,"slotIndex"],[302,41,332,60],[302,46,332,65],[303,6,333,4],[303,12,333,10,"deck"],[303,16,333,14],[303,19,333,17,"state"],[303,24,333,22],[303,25,333,23,"abilityManager"],[303,39,333,37],[303,40,333,38,"getDeck"],[303,47,333,45],[303,48,333,46],[303,49,333,47],[304,6,334,4],[304,12,334,10,"ability"],[304,19,334,17],[304,22,334,20,"deck"],[304,26,334,24],[304,27,334,25,"slots"],[304,32,334,30],[304,33,334,31,"slotIndex"],[304,42,334,40],[304,43,334,41],[305,6,335,4],[305,10,335,8],[305,11,335,9,"ability"],[305,18,335,16],[305,20,335,18],[307,6,337,4],[308,6,338,4],[308,12,338,10,"target"],[308,18,338,16],[308,21,338,19,"findClosestEnemyInternal"],[308,45,338,43],[308,46,338,44,"state"],[308,51,338,49],[308,52,338,50,"enemies"],[308,59,338,57],[308,60,338,58],[309,6,339,4],[309,10,339,8],[309,11,339,9,"target"],[309,17,339,15],[309,19,339,17],[311,6,341,4],[312,6,342,4],[312,10,342,8,"damage"],[312,16,342,14],[312,19,342,17,"ability"],[312,26,342,24],[312,27,342,25,"stats"],[312,32,342,30],[312,33,342,31,"baseDamage"],[312,43,342,41],[314,6,344,4],[315,6,345,4,"deck"],[315,10,345,8],[315,11,345,9,"activeSynergies"],[315,26,345,24],[315,27,345,25,"forEach"],[315,34,345,32],[315,35,345,33,"synergy"],[315,42,345,40],[315,46,345,44],[316,8,346,6],[316,12,346,10,"synergy"],[316,19,346,17],[316,20,346,18,"bonus"],[316,25,346,23],[316,26,346,24,"damageBonus"],[316,37,346,35],[316,41,347,10,"synergy"],[316,48,347,17],[316,49,347,18,"requiredTags"],[316,61,347,30],[316,62,347,31,"some"],[316,66,347,35],[316,67,347,36,"tag"],[316,70,347,39],[316,74,347,43,"ability"],[316,81,347,50],[316,82,347,51,"tags"],[316,86,347,55],[316,87,347,56,"includes"],[316,95,347,64],[316,96,347,65,"tag"],[316,99,347,68],[316,100,347,69],[316,101,347,70],[316,103,347,72],[317,10,348,8,"damage"],[317,16,348,14],[317,20,348,19],[317,21,348,20],[317,24,348,23,"synergy"],[317,31,348,30],[317,32,348,31,"bonus"],[317,37,348,36],[317,38,348,37,"damageBonus"],[317,49,348,48],[317,52,348,51],[317,55,348,55],[318,8,349,6],[319,6,350,4],[319,7,350,5],[319,8,350,6],[321,6,352,4],[322,6,353,4],[322,12,353,10,"damageResult"],[322,24,353,22],[322,27,353,25,"DamageCalculator"],[322,46,353,41],[322,47,353,41,"DamageCalculator"],[322,63,353,41],[322,64,353,42,"calculateDamage"],[322,79,353,57],[322,80,353,58,"damage"],[322,86,353,64],[322,88,353,66,"state"],[322,93,353,71],[322,94,353,72,"playerStats"],[322,105,353,83],[322,107,353,85,"target"],[322,113,353,91],[322,114,353,92,"stats"],[322,119,353,97],[322,120,353,98],[324,6,355,4],[325,6,356,4,"createProjectile"],[325,22,356,20],[325,23,356,21,"target"],[325,29,356,27],[325,31,356,29,"damageResult"],[325,43,356,41],[325,44,356,42,"damage"],[325,50,356,48],[325,52,356,50,"currentNinjaPosition"],[325,72,356,70],[325,73,356,71],[327,6,358,4],[328,6,359,4],[328,10,359,8,"ability"],[328,17,359,15],[328,18,359,16,"effects"],[328,25,359,23],[328,26,359,24,"includes"],[328,34,359,32],[328,35,359,33],[328,40,359,38],[328,41,359,39],[328,45,359,43,"ability"],[328,52,359,50],[328,53,359,51,"stats"],[328,58,359,56],[328,59,359,57,"duration"],[328,67,359,65],[328,69,359,67],[329,8,360,6,"state"],[329,13,360,11],[329,14,360,12,"statusEffects"],[329,27,360,25],[329,28,360,26,"addEffect"],[329,37,360,35],[329,38,360,36,"target"],[329,44,360,42],[329,45,360,43,"id"],[329,47,360,45],[329,49,360,47],[330,10,361,8,"id"],[330,12,361,10],[330,14,361,12],[330,17,361,15,"ability"],[330,24,361,22],[330,25,361,23,"id"],[330,27,361,25],[330,33,361,31],[331,10,362,8,"type"],[331,14,362,12],[331,16,362,14],[331,21,362,19],[332,10,363,8,"remainingTicks"],[332,24,363,22],[332,26,363,24,"Math"],[332,30,363,28],[332,31,363,29,"floor"],[332,36,363,34],[332,37,363,35,"ability"],[332,44,363,42],[332,45,363,43,"stats"],[332,50,363,48],[332,51,363,49,"duration"],[332,59,363,57],[332,62,363,60],[332,64,363,62],[332,65,363,63],[333,10,363,65],[334,10,364,8,"tickInterval"],[334,22,364,20],[334,24,364,22],[334,26,364,24],[335,10,364,26],[336,10,365,8,"lastTick"],[336,18,365,16],[336,20,365,18,"state"],[336,25,365,23],[336,26,365,24,"currentTick"],[336,37,365,35],[337,10,366,8,"value"],[337,15,366,13],[337,17,366,15,"Math"],[337,21,366,19],[337,22,366,20,"floor"],[337,27,366,25],[337,28,366,26,"damage"],[337,34,366,32],[337,37,366,35],[337,40,366,38],[337,41,366,39],[338,10,366,41],[339,10,367,8,"stackable"],[339,19,367,17],[339,21,367,19],[340,8,368,6],[340,9,368,7],[340,10,368,8],[341,6,369,4],[342,6,371,4,"console"],[342,13,371,11],[342,14,371,12,"log"],[342,17,371,15],[342,18,371,16],[342,24,371,22,"ability"],[342,31,371,29],[342,32,371,30,"name"],[342,36,371,34],[342,69,371,67,"damageResult"],[342,81,371,79],[342,82,371,80,"damage"],[342,88,371,86],[342,98,371,96,"damageResult"],[342,110,371,108],[342,111,371,109,"isCritical"],[342,121,371,119],[342,124,371,122],[342,134,371,132],[342,137,371,135],[342,139,371,137],[342,141,371,139],[342,142,371,140],[343,4,372,2],[343,5,372,3],[345,4,374,2],[346,4,375,2],[346,10,375,8,"createProjectile"],[346,26,375,24],[346,29,375,27,"createProjectile"],[346,30,375,28,"targetEnemy"],[346,41,375,52],[346,43,375,54,"damage"],[346,49,375,68],[346,51,375,70,"ninjaPos"],[346,59,375,103],[346,64,375,108],[347,6,376,4],[347,12,376,10,"SCREEN_WIDTH"],[347,24,376,22],[347,27,376,25],[347,30,376,28],[348,6,377,4],[348,12,377,10,"GAME_AREA_HEIGHT"],[348,28,377,26],[348,31,377,29],[348,34,377,32],[348,37,377,35],[348,40,377,38],[348,41,377,39],[348,42,377,40],[349,6,378,4],[349,12,378,10,"NINJA_SIZE"],[349,22,378,20],[349,25,378,23],[349,27,378,25],[351,6,380,4],[352,6,381,4],[352,12,381,10,"ninjaX"],[352,18,381,16],[352,21,381,19,"ninjaPos"],[352,29,381,27],[352,32,381,30,"ninjaPos"],[352,40,381,38],[352,41,381,39,"x"],[352,42,381,40],[352,45,381,43,"NINJA_SIZE"],[352,55,381,53],[352,58,381,56],[352,59,381,57],[352,62,381,60,"SCREEN_WIDTH"],[352,74,381,72],[352,77,381,75],[352,78,381,76],[353,6,382,4],[353,12,382,10,"ninjaY"],[353,18,382,16],[353,21,382,19,"ninjaPos"],[353,29,382,27],[353,32,382,30,"ninjaPos"],[353,40,382,38],[353,41,382,39,"y"],[353,42,382,40],[353,45,382,43,"NINJA_SIZE"],[353,55,382,53],[353,58,382,56],[353,59,382,57],[353,62,382,60,"GAME_AREA_HEIGHT"],[353,78,382,76],[353,81,382,79],[353,82,382,80],[354,6,383,4],[354,12,383,10,"ENEMY_SIZE"],[354,22,383,20],[354,25,383,23],[354,27,383,25],[355,6,385,4],[355,12,385,10,"projectile"],[355,22,385,38],[355,25,385,41],[356,8,386,6,"id"],[356,10,386,8],[356,12,386,10],[356,20,386,18,"Date"],[356,24,386,22],[356,25,386,23,"now"],[356,28,386,26],[356,29,386,27],[356,30,386,28],[356,34,386,32,"Math"],[356,38,386,36],[356,39,386,37,"random"],[356,45,386,43],[356,46,386,44],[356,47,386,45],[356,49,386,47],[357,8,387,6,"x"],[357,9,387,7],[357,11,387,9,"ninjaX"],[357,17,387,15],[358,8,388,6,"y"],[358,9,388,7],[358,11,388,9,"ninjaY"],[358,17,388,15],[359,8,389,6,"targetX"],[359,15,389,13],[359,17,389,15,"targetEnemy"],[359,28,389,26],[359,29,389,27,"position"],[359,37,389,35],[359,38,389,36,"x"],[359,39,389,37],[359,42,389,40,"ENEMY_SIZE"],[359,52,389,50],[359,55,389,53],[359,56,389,54],[360,8,390,6,"targetY"],[360,15,390,13],[360,17,390,15,"targetEnemy"],[360,28,390,26],[360,29,390,27,"position"],[360,37,390,35],[360,38,390,36,"y"],[360,39,390,37],[360,42,390,40,"ENEMY_SIZE"],[360,52,390,50],[360,55,390,53],[360,56,390,54],[361,8,391,6,"targetEnemyId"],[361,21,391,19],[361,23,391,21,"targetEnemy"],[361,34,391,32],[361,35,391,33,"id"],[361,37,391,35],[362,8,392,6,"damage"],[362,14,392,12],[362,16,392,14,"damage"],[362,22,392,20],[363,8,393,6,"startTime"],[363,17,393,15],[363,19,393,17,"Date"],[363,23,393,21],[363,24,393,22,"now"],[363,27,393,25],[363,28,393,26],[363,29,393,27],[364,8,394,6,"duration"],[364,16,394,14],[364,18,394,16],[364,21,394,19],[364,22,394,21],[365,6,395,4],[365,7,395,5],[366,6,397,4,"console"],[366,13,397,11],[366,14,397,12,"log"],[366,17,397,15],[366,18,397,16],[366,53,397,51,"targetEnemy"],[366,64,397,62],[366,65,397,63,"id"],[366,67,397,65],[366,75,397,73,"damage"],[366,81,397,79],[366,90,397,88],[366,91,397,89],[367,6,398,4,"console"],[367,13,398,11],[367,14,398,12,"log"],[367,17,398,15],[367,18,398,16],[367,53,398,51,"ninjaX"],[367,59,398,57],[367,64,398,62,"ninjaY"],[367,70,398,68],[367,87,398,85,"projectile"],[367,97,398,95],[367,98,398,96,"targetX"],[367,105,398,103],[367,110,398,108,"projectile"],[367,120,398,118],[367,121,398,119,"targetY"],[367,128,398,126],[367,131,398,129],[367,132,398,130],[368,6,400,4,"setProjectiles"],[368,20,400,18],[368,21,400,19,"prev"],[368,25,400,23],[368,29,400,27],[368,30,400,28],[368,33,400,31,"prev"],[368,37,400,35],[368,39,400,37,"projectile"],[368,49,400,47],[368,50,400,48],[368,51,400,49],[370,6,402,4],[371,6,403,4,"setTimeout"],[371,16,403,14],[371,17,403,15],[371,23,403,21],[372,8,404,6,"handleProjectileHit"],[372,27,404,25],[372,28,404,26,"projectile"],[372,38,404,36],[372,39,404,37],[373,6,405,4],[373,7,405,5],[373,9,405,7],[373,12,405,10],[373,13,405,11],[374,4,406,2],[374,5,406,3],[376,4,408,2],[377,4,409,2],[377,10,409,8,"spawnTestEnemy"],[377,24,409,22],[377,27,409,26,"state"],[377,32,409,44],[377,36,409,49],[378,6,410,4],[379,6,411,4],[379,12,411,10,"SCREEN_WIDTH"],[379,24,411,22],[379,27,411,25],[379,30,411,28],[379,31,411,29],[379,32,411,30],[380,6,412,4],[380,12,412,10,"GAME_AREA_HEIGHT"],[380,28,412,26],[380,31,412,29],[380,34,412,32],[380,37,412,35],[380,40,412,38],[380,41,412,39],[380,42,412,40],[381,6,413,4],[381,12,413,10,"ENEMY_SIZE"],[381,22,413,20],[381,25,413,23],[381,27,413,25],[383,6,415,4],[384,6,416,4],[384,12,416,10,"x"],[384,13,416,11],[384,16,416,14,"Math"],[384,20,416,18],[384,21,416,19,"random"],[384,27,416,25],[384,28,416,26],[384,29,416,27],[384,33,416,31,"SCREEN_WIDTH"],[384,45,416,43],[384,48,416,46,"ENEMY_SIZE"],[384,58,416,56],[384,61,416,59],[384,62,416,60],[384,63,416,61],[384,66,416,64,"ENEMY_SIZE"],[384,76,416,74],[384,77,416,75],[384,78,416,76],[385,6,417,4],[385,12,417,10,"y"],[385,13,417,11],[385,16,417,14,"Math"],[385,20,417,18],[385,21,417,19,"random"],[385,27,417,25],[385,28,417,26],[385,29,417,27],[385,33,417,31,"GAME_AREA_HEIGHT"],[385,49,417,47],[385,52,417,50,"ENEMY_SIZE"],[385,62,417,60],[385,65,417,63],[385,66,417,64],[385,67,417,65],[385,70,417,68,"ENEMY_SIZE"],[385,80,417,78],[385,81,417,79],[385,82,417,80],[387,6,419,4],[387,12,419,10,"enemy"],[387,17,419,28],[387,20,419,31],[388,8,420,6,"id"],[388,10,420,8],[388,12,420,10],[388,21,420,19],[388,23,420,21,"enemyCounter"],[388,35,420,33],[388,37,420,35],[389,8,421,6,"name"],[389,12,421,10],[389,14,421,12],[389,24,421,22],[390,8,422,6,"health"],[390,14,422,12],[390,16,422,14],[390,19,422,17],[391,8,423,6,"maxHealth"],[391,17,423,15],[391,19,423,17],[391,22,423,20],[392,8,424,6,"stats"],[392,13,424,11],[392,15,424,13],[393,10,425,8,"attack"],[393,16,425,14],[393,18,425,16],[393,20,425,18],[394,10,426,8,"defense"],[394,17,426,15],[394,19,426,17],[394,21,426,19],[395,10,427,8,"health"],[395,16,427,14],[395,18,427,16],[395,21,427,19],[396,10,428,8,"maxHealth"],[396,19,428,17],[396,21,428,19],[396,24,428,22],[397,10,429,8,"critChance"],[397,20,429,18],[397,22,429,20],[397,23,429,21],[398,10,430,8,"critDamage"],[398,20,430,18],[398,22,430,20],[398,25,430,23],[399,10,431,8,"cooldownReduction"],[399,27,431,25],[399,29,431,27],[400,8,432,6],[400,9,432,7],[401,8,433,6,"position"],[401,16,433,14],[401,18,433,16],[402,10,433,18,"x"],[402,11,433,19],[403,10,433,21,"y"],[404,8,433,23],[404,9,433,24],[405,8,434,6,"lastDamaged"],[405,19,434,17],[405,21,434,19],[406,6,435,4],[406,7,435,5],[407,6,437,4,"state"],[407,11,437,9],[407,12,437,10,"enemies"],[407,19,437,17],[407,20,437,18,"push"],[407,24,437,22],[407,25,437,23,"enemy"],[407,30,437,28],[407,31,437,29],[408,4,438,2],[408,5,438,3],[410,4,440,2],[411,4,441,2],[411,10,441,8,"startCombat"],[411,21,441,19],[411,24,441,22,"React"],[411,29,441,27],[411,30,441,27,"default"],[411,37,441,27],[411,38,441,28,"useCallback"],[411,49,441,39],[411,50,441,40],[411,56,441,46],[412,6,442,4,"console"],[412,13,442,11],[412,14,442,12,"log"],[412,17,442,15],[412,18,442,16],[412,63,442,61],[412,64,442,62],[413,6,443,4,"setCombatState"],[413,20,443,18],[413,21,443,19,"prev"],[413,25,443,23],[413,30,443,28],[414,8,443,30],[414,11,443,33,"prev"],[414,15,443,37],[415,8,443,39,"isInCombat"],[415,18,443,49],[415,20,443,51],[416,6,443,56],[416,7,443,57],[416,8,443,58],[416,9,443,59],[418,6,445,4],[419,6,446,4,"combatEngine"],[419,25,446,16],[419,26,446,16,"combatEngine"],[419,38,446,16],[419,39,446,17,"addTickCallback"],[419,54,446,32],[419,55,446,33,"handleCombatTick"],[419,71,446,49],[419,72,446,50],[420,6,447,4,"console"],[420,13,447,11],[420,14,447,12,"log"],[420,17,447,15],[420,18,447,16],[420,62,447,60],[420,63,447,61],[422,6,449,4],[423,6,450,4,"combatEngine"],[423,25,450,16],[423,26,450,16,"combatEngine"],[423,38,450,16],[423,39,450,17,"start"],[423,44,450,22],[423,45,450,23],[423,46,450,24],[424,4,451,2],[424,5,451,3],[424,7,451,5],[424,8,451,6,"combatEngine"],[424,27,451,18],[424,28,451,18,"combatEngine"],[424,40,451,18],[424,42,451,20,"handleCombatTick"],[424,58,451,36],[424,59,451,37],[424,60,451,38],[426,4,453,2],[427,4,454,2],[427,10,454,8,"stopCombat"],[427,20,454,18],[427,23,454,21,"React"],[427,28,454,26],[427,29,454,26,"default"],[427,36,454,26],[427,37,454,27,"useCallback"],[427,48,454,38],[427,49,454,39],[427,55,454,45],[428,6,455,4,"setCombatState"],[428,20,455,18],[428,21,455,19,"prev"],[428,25,455,23],[428,30,455,28],[429,8,455,30],[429,11,455,33,"prev"],[429,15,455,37],[430,8,455,39,"isInCombat"],[430,18,455,49],[430,20,455,51],[431,6,455,57],[431,7,455,58],[431,8,455,59],[431,9,455,60],[432,6,456,4,"combatEngine"],[432,25,456,16],[432,26,456,16,"combatEngine"],[432,38,456,16],[432,39,456,17,"removeTickCallback"],[432,57,456,35],[432,58,456,36,"handleCombatTick"],[432,74,456,52],[432,75,456,53],[433,4,457,2],[433,5,457,3],[433,7,457,5],[433,8,457,6,"combatEngine"],[433,27,457,18],[433,28,457,18,"combatEngine"],[433,40,457,18],[433,42,457,20,"handleCombatTick"],[433,58,457,36],[433,59,457,37],[433,60,457,38],[435,4,459,2],[436,4,460,2],[436,10,460,8,"equipAbility"],[436,22,460,20],[436,25,460,23,"equipAbility"],[436,26,460,24,"abilityId"],[436,35,460,41],[436,37,460,43,"slotIndex"],[436,46,460,60],[436,51,460,74],[437,6,461,4],[437,13,461,11,"combatState"],[437,24,461,22],[437,25,461,23,"abilityManager"],[437,39,461,37],[437,40,461,38,"equipAbility"],[437,52,461,50],[437,53,461,51,"abilityId"],[437,62,461,60],[437,64,461,62,"slotIndex"],[437,73,461,71],[437,74,461,72],[438,4,462,2],[438,5,462,3],[439,4,464,2],[439,10,464,8,"getDeck"],[439,17,464,15],[439,20,464,18,"getDeck"],[439,21,464,18],[439,26,464,24],[440,6,465,4],[440,13,465,11,"combatState"],[440,24,465,22],[440,25,465,23,"abilityManager"],[440,39,465,37],[440,40,465,38,"getDeck"],[440,47,465,45],[440,48,465,46],[440,49,465,47],[441,4,466,2],[441,5,466,3],[442,4,468,2],[442,10,468,8,"getAvailableAbilities"],[442,31,468,29],[442,34,468,32,"getAvailableAbilities"],[442,35,468,32],[442,40,468,38],[443,6,469,4],[443,13,469,11,"combatState"],[443,24,469,22],[443,25,469,23,"abilityManager"],[443,39,469,37],[443,40,469,38,"getAvailableAbilities"],[443,61,469,59],[443,62,469,60],[443,63,469,61],[444,4,470,2],[444,5,470,3],[445,4,472,2],[445,10,472,8,"upgradeAbility"],[445,24,472,22],[445,27,472,26,"abilityId"],[445,36,472,43],[445,40,472,57],[446,6,473,4],[446,13,473,11,"combatState"],[446,24,473,22],[446,25,473,23,"abilityManager"],[446,39,473,37],[446,40,473,38,"upgradeAbility"],[446,54,473,52],[446,55,473,53,"abilityId"],[446,64,473,62],[446,65,473,63],[447,4,474,2],[447,5,474,3],[449,4,476,2],[450,4,477,2],[450,10,477,8,"clearAllEnemies"],[450,25,477,23],[450,28,477,26,"clearAllEnemies"],[450,29,477,26],[450,34,477,32],[451,6,478,4,"console"],[451,13,478,11],[451,14,478,12,"log"],[451,17,478,15],[451,18,478,16],[451,67,478,65],[451,68,478,66],[452,6,479,4,"setCombatState"],[452,20,479,18],[452,21,479,19,"prev"],[452,25,479,23],[452,30,479,28],[453,8,480,6],[453,11,480,9,"prev"],[453,15,480,13],[454,8,481,6,"enemies"],[454,15,481,13],[454,17,481,15],[455,6,482,4],[455,7,482,5],[455,8,482,6],[455,9,482,7],[456,4,483,2],[456,5,483,3],[458,4,485,2],[459,4,486,2],[459,10,486,8,"triggerLevelUpExplosion"],[459,33,486,31],[459,36,486,34,"triggerLevelUpExplosion"],[459,37,486,34],[459,42,486,40],[460,6,487,4,"console"],[460,13,487,11],[460,14,487,12,"log"],[460,17,487,15],[460,18,487,16],[460,70,487,68],[460,71,487,69],[461,6,489,4],[461,12,489,10,"explosionTime"],[461,25,489,23],[461,28,489,26,"Date"],[461,32,489,30],[461,33,489,31,"now"],[461,36,489,34],[461,37,489,35],[461,38,489,36],[462,6,490,4,"setLastExplosionTime"],[462,26,490,24],[462,27,490,25,"explosionTime"],[462,40,490,38],[462,41,490,39],[463,6,492,4,"setCombatState"],[463,20,492,18],[463,21,492,19,"prev"],[463,25,492,23],[463,29,492,27],[464,8,493,6],[465,8,494,6],[465,14,494,12,"enemyCount"],[465,24,494,22],[465,27,494,25,"prev"],[465,31,494,29],[465,32,494,30,"enemies"],[465,39,494,37],[465,40,494,38,"length"],[465,46,494,44],[466,8,495,6],[466,14,495,12,"explosionXP"],[466,25,495,23],[466,28,495,26,"enemyCount"],[466,38,495,36],[466,41,495,39],[466,43,495,41],[466,44,495,42],[466,45,495,43],[467,8,496,6],[467,14,496,12,"explosionGold"],[467,27,496,25],[467,30,496,28,"enemyCount"],[467,40,496,38],[467,43,496,41],[467,44,496,42],[467,45,496,43],[467,46,496,44],[469,8,498,6,"console"],[469,15,498,13],[469,16,498,14,"log"],[469,19,498,17],[469,20,498,18],[469,44,498,42,"enemyCount"],[469,54,498,52],[469,76,498,74,"explosionXP"],[469,87,498,85],[469,98,498,96,"explosionGold"],[469,111,498,109],[469,118,498,116],[469,119,498,117],[471,8,500,6],[472,8,501,6],[472,12,501,10,"explosionXP"],[472,23,501,21],[472,26,501,24],[472,27,501,25],[472,29,501,27],[473,10,502,8,"setTimeout"],[473,20,502,18],[473,21,502,19],[473,27,502,25],[474,12,503,10,"updateNinja"],[474,23,503,21],[474,24,503,23,"ninja"],[474,29,503,28],[474,34,503,34],[475,14,504,12,"experience"],[475,24,504,22],[475,26,504,24,"ninja"],[475,31,504,29],[475,32,504,30,"experience"],[475,42,504,40],[475,45,504,43,"explosionXP"],[475,56,504,54],[476,14,505,12,"gold"],[476,18,505,16],[476,20,505,18,"ninja"],[476,25,505,23],[476,26,505,24,"gold"],[476,30,505,28],[476,33,505,31,"explosionGold"],[477,12,506,10],[477,13,506,11],[477,14,506,12],[477,15,506,13],[478,10,507,8],[478,11,507,9],[478,13,507,11],[478,14,507,12],[478,15,507,13],[478,16,507,14],[478,17,507,15],[479,8,508,6],[481,8,510,6],[482,8,511,6],[483,8,512,6],[483,14,512,12,"damagedEnemies"],[483,28,512,26],[483,31,512,29,"prev"],[483,35,512,33],[483,36,512,34,"enemies"],[483,43,512,41],[483,44,512,42,"map"],[483,47,512,45],[483,48,512,46,"enemy"],[483,53,512,51],[483,58,512,56],[484,10,513,8],[484,13,513,11,"enemy"],[484,18,513,16],[485,10,514,8,"health"],[485,16,514,14],[485,18,514,16],[485,19,514,17],[486,10,514,19],[487,10,515,8,"lastDamaged"],[487,21,515,19],[487,23,515,21,"combatEngine"],[487,42,515,33],[487,43,515,33,"combatEngine"],[487,55,515,33],[487,56,515,34,"getCurrentTick"],[487,70,515,48],[487,71,515,49],[488,8,516,6],[488,9,516,7],[488,10,516,8],[488,11,516,9],[489,8,518,6],[489,15,518,13],[490,10,519,8],[490,13,519,11,"prev"],[490,17,519,15],[491,10,520,8,"enemies"],[491,17,520,15],[491,19,520,17,"damagedEnemies"],[492,8,521,6],[492,9,521,7],[493,6,522,4],[493,7,522,5],[493,8,522,6],[494,4,523,2],[494,5,523,3],[496,4,525,2],[497,4,526,2],[497,10,526,8,"spawnEnemy"],[497,20,526,18],[497,23,526,22,"position"],[497,31,526,57],[497,35,526,75],[498,6,527,4],[498,12,527,10,"SCREEN_WIDTH"],[498,24,527,22],[498,27,527,25],[498,30,527,28],[499,6,528,4],[499,12,528,10,"GAME_AREA_HEIGHT"],[499,28,528,26],[499,31,528,29],[499,34,528,32],[499,37,528,35],[499,40,528,38],[499,41,528,39],[499,42,528,40],[500,6,529,4],[500,12,529,10,"ENEMY_SIZE"],[500,22,529,20],[500,25,529,23],[500,27,529,25],[502,6,531,4],[503,6,532,4],[503,12,532,10,"x"],[503,13,532,11],[503,16,532,14,"position"],[503,24,532,22],[503,26,532,24,"x"],[503,27,532,25],[503,31,532,29,"Math"],[503,35,532,33],[503,36,532,34,"random"],[503,42,532,40],[503,43,532,41],[503,44,532,42],[503,48,532,46,"SCREEN_WIDTH"],[503,60,532,58],[503,63,532,61,"ENEMY_SIZE"],[503,73,532,71],[503,76,532,74],[503,77,532,75],[503,78,532,76],[503,81,532,79,"ENEMY_SIZE"],[503,91,532,89],[504,6,533,4],[504,12,533,10,"y"],[504,13,533,11],[504,16,533,14,"position"],[504,24,533,22],[504,26,533,24,"y"],[504,27,533,25],[504,31,533,29,"Math"],[504,35,533,33],[504,36,533,34,"random"],[504,42,533,40],[504,43,533,41],[504,44,533,42],[504,48,533,46,"GAME_AREA_HEIGHT"],[504,64,533,62],[504,67,533,65,"ENEMY_SIZE"],[504,77,533,75],[504,80,533,78],[504,81,533,79],[504,82,533,80],[504,85,533,83,"ENEMY_SIZE"],[504,95,533,93],[505,6,535,4],[505,12,535,10,"enemy"],[505,17,535,28],[505,20,535,31],[506,8,536,6,"id"],[506,10,536,8],[506,12,536,10],[506,21,536,19],[506,23,536,21,"enemyCounter"],[506,35,536,33],[506,37,536,35],[507,8,537,6,"name"],[507,12,537,10],[507,14,537,12],[507,24,537,22],[508,8,538,6,"health"],[508,14,538,12],[508,16,538,14],[508,19,538,17],[509,8,539,6,"maxHealth"],[509,17,539,15],[509,19,539,17],[509,22,539,20],[510,8,540,6,"stats"],[510,13,540,11],[510,15,540,13],[511,10,541,8,"attack"],[511,16,541,14],[511,18,541,16],[511,20,541,18],[512,10,542,8,"defense"],[512,17,542,15],[512,19,542,17],[512,21,542,19],[513,10,543,8,"health"],[513,16,543,14],[513,18,543,16],[513,21,543,19],[514,10,544,8,"maxHealth"],[514,19,544,17],[514,21,544,19],[514,24,544,22],[515,10,545,8,"critChance"],[515,20,545,18],[515,22,545,20],[515,23,545,21],[516,10,546,8,"critDamage"],[516,20,546,18],[516,22,546,20],[516,25,546,23],[517,10,547,8,"cooldownReduction"],[517,27,547,25],[517,29,547,27],[518,8,548,6],[518,9,548,7],[519,8,549,6,"position"],[519,16,549,14],[519,18,549,16],[520,10,549,18,"x"],[520,11,549,19],[521,10,549,21,"y"],[522,8,549,23],[522,9,549,24],[523,8,550,6,"lastDamaged"],[523,19,550,17],[523,21,550,19],[524,6,551,4],[524,7,551,5],[525,6,553,4,"setCombatState"],[525,20,553,18],[525,21,553,19,"prev"],[525,25,553,23],[525,30,553,28],[526,8,554,6],[526,11,554,9,"prev"],[526,15,554,13],[527,8,555,6,"enemies"],[527,15,555,13],[527,17,555,15],[527,18,555,16],[527,21,555,19,"prev"],[527,25,555,23],[527,26,555,24,"enemies"],[527,33,555,31],[527,35,555,33,"enemy"],[527,40,555,38],[528,6,556,4],[528,7,556,5],[528,8,556,6],[528,9,556,7],[529,6,558,4],[529,13,558,11,"enemy"],[529,18,558,16],[530,4,559,2],[530,5,559,3],[532,4,561,2],[533,4,562,2],[533,10,562,8,"spawnBoss"],[533,19,562,17],[533,22,562,21,"bossEnemy"],[533,31,562,43],[533,35,562,48],[534,6,563,4,"console"],[534,13,563,11],[534,14,563,12,"log"],[534,17,563,15],[534,18,563,16],[534,39,563,37,"bossEnemy"],[534,48,563,46],[534,49,563,47,"name"],[534,53,563,51],[534,90,563,88],[534,91,563,89],[535,6,564,4,"setCombatState"],[535,20,564,18],[535,21,564,19,"prev"],[535,25,564,23],[535,30,564,28],[536,8,565,6],[536,11,565,9,"prev"],[536,15,565,13],[537,8,566,6,"enemies"],[537,15,566,13],[537,17,566,15],[537,18,566,16,"bossEnemy"],[537,27,566,25],[537,28,566,26],[537,29,566,27],[538,6,567,4],[538,7,567,5],[538,8,567,6],[538,9,567,7],[539,4,568,2],[539,5,568,3],[541,4,570,2],[542,4,571,2],[542,10,571,8,"clearSpecificEnemy"],[542,28,571,26],[542,31,571,30,"enemyId"],[542,38,571,45],[542,42,571,50],[543,6,572,4,"setCombatState"],[543,20,572,18],[543,21,572,19,"prev"],[543,25,572,23],[543,30,572,28],[544,8,573,6],[544,11,573,9,"prev"],[544,15,573,13],[545,8,574,6,"enemies"],[545,15,574,13],[545,17,574,15,"prev"],[545,21,574,19],[545,22,574,20,"enemies"],[545,29,574,27],[545,30,574,28,"filter"],[545,36,574,34],[545,37,574,35,"enemy"],[545,42,574,40],[545,46,574,44,"enemy"],[545,51,574,49],[545,52,574,50,"id"],[545,54,574,52],[545,59,574,57,"enemyId"],[545,66,574,64],[546,6,575,4],[546,7,575,5],[546,8,575,6],[546,9,575,7],[547,4,576,2],[547,5,576,3],[548,4,577,2],[548,8,577,2,"useEffect"],[548,14,577,11],[548,15,577,11,"useEffect"],[548,24,577,11],[548,26,577,12],[548,32,577,18],[549,6,578,4,"combatEngine"],[549,25,578,16],[549,26,578,16,"combatEngine"],[549,38,578,16],[549,39,578,17,"start"],[549,44,578,22],[549,45,578,23],[549,46,578,24],[551,6,580,4],[552,6,581,4,"combatState"],[552,17,581,15],[552,18,581,16,"abilityManager"],[552,32,581,30],[552,33,581,31,"equipAbility"],[552,45,581,43],[552,46,581,44],[552,62,581,60],[552,64,581,62],[552,65,581,63],[552,66,581,64],[553,6,582,4,"combatState"],[553,17,582,15],[553,18,582,16,"abilityManager"],[553,32,582,30],[553,33,582,31,"equipAbility"],[553,45,582,43],[553,46,582,44],[553,61,582,59],[553,63,582,61],[553,64,582,62],[553,65,582,63],[554,6,584,4],[554,13,584,11],[554,19,584,17],[555,8,585,6,"combatEngine"],[555,27,585,18],[555,28,585,18,"combatEngine"],[555,40,585,18],[555,41,585,19,"stop"],[555,45,585,23],[555,46,585,24],[555,47,585,25],[556,6,586,4],[556,7,586,5],[557,4,587,2],[557,5,587,3],[557,7,587,5],[557,9,587,7],[557,10,587,8],[558,4,589,2],[558,10,589,8,"contextValue"],[558,22,589,39],[558,25,589,42,"React"],[558,30,589,47],[558,31,589,47,"default"],[558,38,589,47],[558,39,589,48,"useMemo"],[558,46,589,55],[558,47,589,56],[558,54,589,63],[559,6,590,4,"combatState"],[559,17,590,15],[560,6,591,4,"projectiles"],[560,17,591,15],[561,6,592,4,"startCombat"],[561,17,592,15],[562,6,593,4,"stopCombat"],[562,16,593,14],[563,6,594,4,"equipAbility"],[563,18,594,16],[564,6,595,4,"handleEnemyKill"],[564,21,595,19],[565,6,596,4,"getDeck"],[565,13,596,11],[566,6,597,4,"getAvailableAbilities"],[566,27,597,25],[567,6,598,4,"upgradeAbility"],[567,20,598,18],[568,6,599,4,"spawnEnemy"],[568,16,599,14],[569,6,600,4,"spawnBoss"],[569,15,600,13],[570,6,601,4,"clearAllEnemies"],[570,21,601,19],[571,6,602,4,"clearSpecificEnemy"],[571,24,602,22],[572,6,603,4,"triggerLevelUpExplosion"],[572,29,603,27],[573,6,604,4,"findClosestEnemy"],[573,22,604,20],[574,6,605,4,"updateNinjaPosition"],[574,25,605,23],[575,6,606,4,"lastExplosionTime"],[576,4,607,2],[576,5,607,3],[576,6,607,4],[576,8,607,6],[577,4,608,4],[578,4,609,4],[579,4,610,4,"combatState"],[579,15,610,15],[579,17,611,4,"projectiles"],[579,28,611,15],[579,30,612,4,"lastExplosionTime"],[579,47,612,21],[579,48,613,3],[579,49,613,4],[580,4,615,2],[580,24,616,4],[580,28,616,4,"_reactJsxDevRuntime"],[580,47,616,4],[580,48,616,4,"jsxDEV"],[580,54,616,4],[580,56,616,5,"CombatContext"],[580,69,616,18],[580,70,616,19,"Provider"],[580,78,616,27],[581,6,616,28,"value"],[581,11,616,33],[581,13,616,35,"contextValue"],[581,25,616,48],[582,6,616,48,"children"],[582,14,616,48],[582,16,617,7,"children"],[583,4,617,15],[584,6,617,15,"fileName"],[584,14,617,15],[584,16,617,15,"_jsxFileName"],[584,28,617,15],[585,6,617,15,"lineNumber"],[585,16,617,15],[586,6,617,15,"columnNumber"],[586,18,617,15],[587,4,617,15],[587,11,618,28],[587,12,618,29],[588,2,620,0],[588,3,620,1],[589,0,620,2],[589,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBM;GhBE;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}