{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const game = (0, _GameContext.useGame)();\n    const {\n      currentZone,\n      currentZoneLevel,\n      recordEnemyKill,\n      spawnZoneEnemy\n    } = (0, _ZoneContext.useZone)();\n\n    // Define initialCombatState before using it\n    const initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    const [combatState, setCombatState] = (0, _react.useState)(initialCombatState);\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        const effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      const baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      const xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      const dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      const xpReward = Math.floor(baseXpReward * xpMultiplier);\n      const goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${Platform.default.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        const zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    const handleCombatTick = React.default.useCallback(() => {\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      let enemiesToKill = []; // Track enemies to kill outside of setState\n\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          const effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            let newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                const healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            const MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            const SCREEN_WIDTH = 390;\n            const GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            const ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            const playerX = currentNinjaPosition.x;\n            const playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            const deltaX = playerX - enemy.position.x;\n            const deltaY = playerY - enemy.position.y;\n            const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            const ATTACK_RANGE = 50; // Enemy attack range\n            const ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is invincible\n                const isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                if (isPlayerInvincible) {\n                  console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                  // Update enemy attack cooldown even if blocked\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                  const baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                  const attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                  const playerDefense = newState.playerStats.defense;\n                  const finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                  console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                  // Apply damage to player\n                  const newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                  newState.playerStats.health = newPlayerHealth;\n                  console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                  // Update enemy attack cooldown\n                  enemy.lastAttackTick = newState.currentTick;\n\n                  // Handle player death if health reaches 0\n                  if (newPlayerHealth <= 0) {\n                    console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                    // Set player as dead and trigger revival modal\n                    setTimeout(() => {\n                      // Set isAlive to false to trigger revival system\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }, 100);\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                const normalizedX = deltaX / distance;\n                const normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                const randomFactor = 0.2; // 20% randomness\n                const finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                const finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                let newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                let newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades) - DUPLICATE REMOVED\n        // This duplicate sync block has been removed to prevent conflicts with the main sync above\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          const cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            const CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              const target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                const cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (let i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        const lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        const beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        const afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        const MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      });\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    const [currentNinjaPosition, setCurrentNinjaPosition] = (0, _react.useState)({\n      x: 0,\n      y: 0\n    });\n    const [isManualControlActive, setIsManualControlActive] = (0, _react.useState)(false);\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    const updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    const setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      const isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        const ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        const ninjaY = currentNinjaPosition.y + 20;\n        const aoeRadius = ability.stats.aoeRadius;\n        const enemiesInRange = state.enemies.filter(enemy => {\n          const enemyX = enemy.position.x + 17.5; // Center of enemy\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        const target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        const targets = isAOE ? state.enemies.filter(enemy => {\n          const ninjaX = currentNinjaPosition.x + 20;\n          const ninjaY = currentNinjaPosition.y + 20;\n          const enemyX = enemy.position.x + 17.5;\n          const enemyY = enemy.position.y + 17.5;\n          const distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        const cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        const cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectileId = `proj_${Date.now()}_${Math.random()}`;\n      const projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    const spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      const zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      const combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    const spawnBasicTestEnemy = state => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140;\n      const ENEMY_SIZE = 35;\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    const stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        const explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    const useAbilityManually = (0, _react.useCallback)(slotIndex => {\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      const isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      const currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      const success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          const newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, [combatState.abilityManager, combatState.enemies]);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      const processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            const currentTime = Date.now();\n            const startTime = projectile.startTime || currentTime;\n            const elapsedTime = currentTime - startTime;\n            const progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                const newState = {\n                  ...prev\n                };\n                const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  const enemy = newState.enemies[enemyIndex];\n                  const newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      const impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    const saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        const abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    const contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":1028,"map":[[13,2,90,0,"Object"],[13,8,90,0],[13,9,90,0,"defineProperty"],[13,23,90,0],[13,24,90,0,"exports"],[13,31,90,0],[14,4,90,0,"enumerable"],[14,14,90,0],[15,4,90,0,"get"],[15,7,90,0],[15,18,90,0,"get"],[15,19,90,0],[16,6,90,0],[16,13,90,0,"useCombat"],[16,22,90,0],[17,4,90,0],[18,2,90,0],[19,2,100,0,"Object"],[19,8,100,0],[19,9,100,0,"defineProperty"],[19,23,100,0],[19,24,100,0,"exports"],[19,31,100,0],[20,4,100,0,"enumerable"],[20,14,100,0],[21,4,100,0,"get"],[21,7,100,0],[21,18,100,0,"get"],[21,19,100,0],[22,6,100,0],[22,13,100,0,"CombatProvider"],[22,27,100,0],[23,4,100,0],[24,2,100,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,1,110],[27,6,1,110,"_reactNativeWebDistExportsPlatform"],[27,40,1,110],[27,43,1,110,"require"],[27,50,1,110],[27,51,1,110,"_dependencyMap"],[27,65,1,110],[28,2,1,110],[28,6,1,110,"Platform"],[28,14,1,110],[28,17,1,110,"_interopDefault"],[28,32,1,110],[28,33,1,110,"_reactNativeWebDistExportsPlatform"],[28,67,1,110],[29,2,3,0],[29,6,3,0,"_engineCombatEngine"],[29,25,3,0],[29,28,3,0,"require"],[29,35,3,0],[29,36,3,0,"_dependencyMap"],[29,50,3,0],[30,2,4,0],[30,6,4,0,"_typesAbilityTypes"],[30,24,4,0],[30,27,4,0,"require"],[30,34,4,0],[30,35,4,0,"_dependencyMap"],[30,49,4,0],[31,2,5,0],[31,6,5,0,"_GameContext"],[31,18,5,0],[31,21,5,0,"require"],[31,28,5,0],[31,29,5,0,"_dependencyMap"],[31,43,5,0],[32,2,6,0],[32,6,6,0,"_ZoneContext"],[32,18,6,0],[32,21,6,0,"require"],[32,28,6,0],[32,29,6,0,"_dependencyMap"],[32,43,6,0],[33,2,6,40],[33,6,6,40,"_reactJsxDevRuntime"],[33,25,6,40],[33,28,6,40,"require"],[33,35,6,40],[33,36,6,40,"_dependencyMap"],[33,50,6,40],[34,2,88,0],[34,8,88,6,"CombatContext"],[34,21,88,19],[34,37,88,22],[34,41,88,22,"createContext"],[34,47,88,35],[34,48,88,35,"createContext"],[34,61,88,35],[34,63,88,67,"undefined"],[34,72,88,76],[34,73,88,77],[35,2,90,7],[35,8,90,13,"useCombat"],[35,17,90,22],[35,20,90,25,"useCombat"],[35,21,90,25],[35,26,90,50],[36,4,91,2],[36,10,91,8,"context"],[36,17,91,15],[36,20,91,18],[36,24,91,18,"useContext"],[36,30,91,28],[36,31,91,28,"useContext"],[36,41,91,28],[36,43,91,29,"CombatContext"],[36,56,91,42],[36,57,91,43],[37,4,92,2],[37,8,92,6],[37,9,92,7,"context"],[37,16,92,14],[37,18,92,16],[38,6,93,4],[38,12,93,10],[38,16,93,14,"Error"],[38,21,93,19],[38,22,93,20],[38,70,93,68],[38,71,93,69],[39,4,94,2],[40,4,95,2],[40,11,95,9,"context"],[40,18,95,16],[41,2,96,0],[41,3,96,1],[42,2,98,0],[42,6,98,4,"enemyCounter"],[42,18,98,16],[42,21,98,19],[42,22,98,20],[42,23,98,21],[42,24,98,22],[44,2,100,7],[44,8,100,13,"CombatProvider"],[44,22,100,27],[44,25,100,30,"CombatProvider"],[44,26,100,31],[45,4,100,33,"children"],[46,2,100,67],[46,3,100,68],[46,8,100,73],[47,4,101,2],[47,10,101,8,"game"],[47,14,101,12],[47,17,101,15],[47,21,101,15,"useGame"],[47,33,101,22],[47,34,101,22,"useGame"],[47,41,101,22],[47,43,101,23],[47,44,101,24],[48,4,102,2],[48,10,102,8],[49,6,102,10,"currentZone"],[49,17,102,21],[50,6,102,23,"currentZoneLevel"],[50,22,102,39],[51,6,102,41,"recordEnemyKill"],[51,21,102,56],[52,6,102,58,"spawnZoneEnemy"],[53,4,102,73],[53,5,102,74],[53,8,102,77],[53,12,102,77,"useZone"],[53,24,102,84],[53,25,102,84,"useZone"],[53,32,102,84],[53,34,102,85],[53,35,102,86],[55,4,104,2],[56,4,105,2],[56,10,105,8,"initialCombatState"],[56,28,105,39],[56,31,105,42],[57,6,106,4,"isInCombat"],[57,16,106,14],[57,18,106,16],[57,23,106,21],[58,6,107,4,"currentTick"],[58,17,107,15],[58,19,107,17],[58,20,107,18],[59,6,108,4,"enemies"],[59,13,108,11],[59,15,108,13],[59,17,108,15],[60,6,109,4,"abilityManager"],[60,20,109,18],[60,22,109,20],[60,26,109,24,"AbilityManager"],[60,44,109,38],[60,45,109,38,"AbilityManager"],[60,59,109,38],[60,60,109,39],[60,61,109,40],[61,6,110,4,"statusEffects"],[61,19,110,17],[61,21,110,19],[61,25,110,23,"StatusEffectManager"],[61,44,110,42],[61,45,110,42,"StatusEffectManager"],[61,64,110,42],[61,65,110,43],[61,66,110,44],[62,6,111,4,"playerStats"],[62,17,111,15],[62,19,111,17],[63,8,112,6,"attack"],[63,14,112,12],[63,16,112,14],[63,18,112,16],[64,8,112,18],[65,8,113,6,"defense"],[65,15,113,13],[65,17,113,15],[65,18,113,16],[66,8,114,6,"health"],[66,14,114,12],[66,16,114,14],[66,19,114,17],[67,8,115,6,"maxHealth"],[67,17,115,15],[67,19,115,17],[67,22,115,20],[68,8,116,6,"critChance"],[68,18,116,16],[68,20,116,18],[68,21,116,19],[69,8,117,6,"critDamage"],[69,18,117,16],[69,20,117,18],[69,23,117,21],[70,8,118,6,"cooldownReduction"],[70,25,118,23],[70,27,118,25],[71,6,119,4],[72,4,120,2],[72,5,120,3],[73,4,122,2],[73,10,122,8],[73,11,122,9,"combatState"],[73,22,122,20],[73,24,122,22,"setCombatState"],[73,38,122,36],[73,39,122,37],[73,42,122,40],[73,46,122,40,"useState"],[73,52,122,48],[73,53,122,48,"useState"],[73,61,122,48],[73,63,122,62,"initialCombatState"],[73,81,122,80],[73,82,122,81],[75,4,124,2],[76,4,125,2],[76,8,125,2,"useEffect"],[76,14,125,11],[76,15,125,11,"useEffect"],[76,24,125,11],[76,26,125,12],[76,32,125,18],[77,6,126,4],[77,10,126,8,"game"],[77,14,126,12],[77,15,126,13,"gameState"],[77,24,126,22],[77,25,126,23,"abilityData"],[77,36,126,34],[77,40,126,38,"combatState"],[77,51,126,49],[77,52,126,50,"abilityManager"],[77,66,126,64],[77,68,126,66],[78,8,127,6,"console"],[78,15,127,13],[78,16,127,14,"log"],[78,19,127,17],[78,20,127,18],[78,68,127,66],[78,70,127,68,"game"],[78,74,127,72],[78,75,127,73,"gameState"],[78,84,127,82],[78,85,127,83,"abilityData"],[78,96,127,94],[78,97,127,95],[79,8,128,6,"combatState"],[79,19,128,17],[79,20,128,18,"abilityManager"],[79,34,128,32],[79,35,128,33,"restoreFromSaveData"],[79,54,128,52],[79,55,128,53,"game"],[79,59,128,57],[79,60,128,58,"gameState"],[79,69,128,67],[79,70,128,68,"abilityData"],[79,81,128,79],[79,82,128,80],[81,8,130,6],[82,8,131,6,"setCombatState"],[82,22,131,20],[82,23,131,21,"prev"],[82,27,131,25],[82,32,131,30],[83,10,131,32],[83,13,131,35,"prev"],[84,8,131,40],[84,9,131,41],[84,10,131,42],[84,11,131,43],[85,6,132,4],[86,4,133,2],[86,5,133,3],[86,7,133,5],[86,8,133,6,"game"],[86,12,133,10],[86,13,133,11,"gameState"],[86,22,133,20],[86,23,133,21,"abilityData"],[86,34,133,32],[86,36,133,34,"combatState"],[86,47,133,45],[86,48,133,46,"abilityManager"],[86,62,133,60],[86,63,133,61],[86,64,133,62],[88,4,135,2],[89,4,136,2],[89,8,136,2,"useEffect"],[89,14,136,11],[89,15,136,11,"useEffect"],[89,24,136,11],[89,26,136,12],[89,32,136,18],[90,6,137,4],[90,10,137,8,"game"],[90,14,137,12],[90,15,137,13,"gameState"],[90,24,137,22],[90,25,137,23,"ninja"],[90,30,137,28],[90,32,137,30],[91,8,138,6],[91,14,138,12,"effectiveStats"],[91,28,138,26],[91,31,138,29,"game"],[91,35,138,33],[91,36,138,34,"getEffectiveStats"],[91,53,138,51],[91,54,138,52],[91,55,138,53],[92,8,140,6,"setCombatState"],[92,22,140,20],[92,23,140,21,"prev"],[92,27,140,25],[92,31,140,29],[93,10,141,8],[94,10,142,8],[94,14,142,12,"prev"],[94,18,142,16],[94,19,142,17,"playerStats"],[94,30,142,28],[94,31,142,29,"maxHealth"],[94,40,142,38],[94,45,142,43],[94,48,142,46],[94,52,142,50,"prev"],[94,56,142,54],[94,57,142,55,"playerStats"],[94,68,142,66],[94,69,142,67,"attack"],[94,75,142,73],[94,80,142,78],[94,82,142,80],[94,84,142,82],[95,12,143,10,"console"],[95,19,143,17],[95,20,143,18,"log"],[95,23,143,21],[95,24,143,22],[95,60,143,58,"effectiveStats"],[95,74,143,72],[95,75,143,73,"health"],[95,81,143,79],[95,93,143,91,"effectiveStats"],[95,107,143,105],[95,108,143,106,"attack"],[95,114,143,112],[95,127,143,125,"effectiveStats"],[95,141,143,139],[95,142,143,140,"defense"],[95,149,143,147],[95,151,143,149],[95,152,143,150],[96,12,145,10],[96,19,145,17],[97,14,146,12],[97,17,146,15,"prev"],[97,21,146,19],[98,14,147,12,"playerStats"],[98,25,147,23],[98,27,147,25],[99,16,148,14,"attack"],[99,22,148,20],[99,24,148,22,"effectiveStats"],[99,38,148,36],[99,39,148,37,"attack"],[99,45,148,43],[100,16,149,14,"defense"],[100,23,149,21],[100,25,149,23,"effectiveStats"],[100,39,149,37],[100,40,149,38,"defense"],[100,47,149,45],[101,16,150,14,"health"],[101,22,150,20],[101,24,150,22,"effectiveStats"],[101,38,150,36],[101,39,150,37,"health"],[101,45,150,43],[102,16,150,45],[103,16,151,14,"maxHealth"],[103,25,151,23],[103,27,151,25,"effectiveStats"],[103,41,151,39],[103,42,151,40,"health"],[103,48,151,46],[104,16,152,14,"critChance"],[104,26,152,24],[104,28,152,26,"effectiveStats"],[104,42,152,40],[104,43,152,41,"critChance"],[104,53,152,51],[104,57,152,55],[104,58,152,56],[105,16,153,14,"critDamage"],[105,26,153,24],[105,28,153,26,"effectiveStats"],[105,42,153,40],[105,43,153,41,"critDamage"],[105,53,153,51],[105,57,153,55],[105,60,153,58],[106,16,154,14,"cooldownReduction"],[106,33,154,31],[106,35,154,33,"effectiveStats"],[106,49,154,47],[106,50,154,48,"cooldownReduction"],[106,67,154,65],[106,71,154,69],[107,14,155,12],[108,12,156,10],[108,13,156,11],[109,10,157,8],[110,10,158,8],[110,17,158,15,"prev"],[110,21,158,19],[111,8,159,6],[111,9,159,7],[111,10,159,8],[112,6,160,4],[113,4,161,2],[113,5,161,3],[113,7,161,5],[113,8,161,6,"game"],[113,12,161,10],[113,13,161,11,"gameState"],[113,22,161,20],[113,23,161,21,"ninja"],[113,28,161,26],[113,29,161,27],[113,30,161,28],[114,4,163,2],[114,10,163,8],[114,11,163,9,"projectiles"],[114,22,163,20],[114,24,163,22,"setProjectiles"],[114,38,163,36],[114,39,163,37],[114,42,163,40],[114,46,163,40,"useState"],[114,52,163,48],[114,53,163,48,"useState"],[114,61,163,48],[114,63,163,69],[114,65,163,71],[114,66,163,72],[115,4,164,2],[115,10,164,8],[115,11,164,9,"lastExplosionTime"],[115,28,164,26],[115,30,164,28,"setLastExplosionTime"],[115,50,164,48],[115,51,164,49],[115,54,164,52],[115,58,164,52,"useState"],[115,64,164,60],[115,65,164,60,"useState"],[115,73,164,60],[115,75,164,69],[115,76,164,70],[115,77,164,71],[116,4,165,2],[117,4,166,2],[119,4,168,2],[120,4,169,2],[120,10,169,8,"handleEnemyKill"],[120,25,169,23],[120,28,169,26],[120,32,169,26,"useCallback"],[120,38,169,37],[120,39,169,37,"useCallback"],[120,50,169,37],[120,52,169,39,"enemy"],[120,57,169,57],[120,61,169,62],[121,6,170,4,"console"],[121,13,170,11],[121,14,170,12,"log"],[121,17,170,15],[121,18,170,16],[121,73,170,71],[121,75,170,73,"enemy"],[121,80,170,78],[121,81,170,79,"id"],[121,83,170,81],[121,84,170,82],[123,6,172,4],[124,6,173,4],[124,12,173,10,"baseXpReward"],[124,24,173,22],[124,27,173,25],[124,30,173,28],[124,31,173,29],[124,32,173,30],[125,6,174,4],[125,12,174,10,"xpMultiplier"],[125,24,174,22],[125,27,174,25,"game"],[125,31,174,29],[125,32,174,30,"gameState"],[125,41,174,39],[125,42,174,40,"subscriptionBenefits"],[125,62,174,60],[125,64,174,62,"xp_multiplier"],[125,77,174,75],[125,81,174,79],[125,84,174,82],[126,6,175,4],[126,12,175,10,"dropMultiplier"],[126,26,175,24],[126,29,175,27,"game"],[126,33,175,31],[126,34,175,32,"gameState"],[126,43,175,41],[126,44,175,42,"subscriptionBenefits"],[126,64,175,62],[126,66,175,64,"drop_multiplier"],[126,81,175,79],[126,85,175,83],[126,88,175,86],[127,6,177,4],[127,12,177,10,"xpReward"],[127,20,177,18],[127,23,177,21,"Math"],[127,27,177,25],[127,28,177,26,"floor"],[127,33,177,31],[127,34,177,32,"baseXpReward"],[127,46,177,44],[127,49,177,47,"xpMultiplier"],[127,61,177,59],[127,62,177,60],[128,6,178,4],[128,12,178,10,"goldReward"],[128,22,178,20],[128,25,178,23,"Math"],[128,29,178,27],[128,30,178,28,"floor"],[128,35,178,33],[128,36,178,34],[128,40,178,38],[128,43,178,41,"dropMultiplier"],[128,57,178,55],[128,58,178,56],[128,59,178,57],[128,60,178,58],[130,6,180,4,"console"],[130,13,180,11],[130,14,180,12,"log"],[130,17,180,15],[130,18,180,16],[130,48,180,46,"xpReward"],[130,56,180,54],[130,67,180,65,"goldReward"],[130,77,180,75],[130,93,180,91],[130,94,180,92],[131,6,181,4,"console"],[131,13,181,11],[131,14,181,12,"log"],[131,17,181,15],[131,18,181,16],[131,60,181,58,"xpMultiplier"],[131,72,181,70],[131,94,181,92,"dropMultiplier"],[131,108,181,106],[131,110,181,108],[131,111,181,109],[132,6,182,4,"console"],[132,13,182,11],[132,14,182,12,"log"],[132,17,182,15],[132,18,182,16],[132,54,182,52,"baseXpReward"],[132,66,182,64],[132,81,182,79,"xpReward"],[132,89,182,87],[132,91,182,89],[132,92,182,90],[133,6,183,4,"console"],[133,13,183,11],[133,14,183,12,"log"],[133,17,183,15],[133,18,183,16],[133,58,183,56],[133,60,183,58,"JSON"],[133,64,183,62],[133,65,183,63,"stringify"],[133,74,183,72],[133,75,183,73,"game"],[133,79,183,77],[133,80,183,78,"gameState"],[133,89,183,87],[133,90,183,88,"subscriptionBenefits"],[133,110,183,108],[133,111,183,109],[133,112,183,110],[134,6,184,4,"console"],[134,13,184,11],[134,14,184,12,"log"],[134,17,184,15],[134,18,184,16],[134,49,184,47,"Platform"],[134,57,184,55],[134,58,184,55,"default"],[134,65,184,55],[134,66,184,56,"OS"],[134,68,184,58],[134,79,184,69,"Date"],[134,83,184,73],[134,84,184,74,"now"],[134,87,184,77],[134,88,184,78],[134,89,184,79],[134,91,184,81],[134,92,184,82],[136,6,186,4],[137,6,187,4],[138,6,188,4,"setTimeout"],[138,16,188,14],[138,17,188,15],[138,23,188,21],[139,8,189,6,"console"],[139,15,189,13],[139,16,189,14,"log"],[139,19,189,17],[139,20,189,18],[139,78,189,76],[139,79,189,77],[141,8,191,6],[142,8,192,6,"game"],[142,12,192,10],[142,13,192,11,"updateNinja"],[142,24,192,22],[142,25,192,24,"prev"],[142,29,192,28],[142,33,192,33],[143,10,193,8,"console"],[143,17,193,15],[143,18,193,16,"log"],[143,21,193,19],[143,22,193,20],[143,54,193,52,"prev"],[143,58,193,56],[143,59,193,57,"experience"],[143,69,193,67],[143,81,193,79,"prev"],[143,85,193,83],[143,86,193,84,"experience"],[143,96,193,94],[143,99,193,97,"xpReward"],[143,107,193,105],[143,109,193,107],[143,110,193,108],[144,10,194,8,"console"],[144,17,194,15],[144,18,194,16,"log"],[144,21,194,19],[144,22,194,20],[144,56,194,54,"prev"],[144,60,194,58],[144,61,194,59,"gold"],[144,65,194,63],[144,77,194,75,"prev"],[144,81,194,79],[144,82,194,80,"gold"],[144,86,194,84],[144,89,194,87,"goldReward"],[144,99,194,97],[144,101,194,99],[144,102,194,100],[145,10,195,8],[145,17,195,15],[146,12,196,10,"experience"],[146,22,196,20],[146,24,196,22,"prev"],[146,28,196,26],[146,29,196,27,"experience"],[146,39,196,37],[146,42,196,40,"xpReward"],[146,50,196,48],[147,12,197,10,"gold"],[147,16,197,14],[147,18,197,16,"prev"],[147,22,197,20],[147,23,197,21,"gold"],[147,27,197,25],[147,30,197,28,"goldReward"],[148,10,198,8],[148,11,198,9],[149,8,199,6],[149,9,199,7],[149,10,199,8],[151,8,201,6],[152,8,202,6],[152,14,202,12,"zoneEnemy"],[152,23,202,21],[152,26,202,24],[153,10,203,8,"id"],[153,12,203,10],[153,14,203,12,"enemy"],[153,19,203,17],[153,20,203,18,"id"],[153,22,203,20],[154,10,204,8,"typeId"],[154,16,204,14],[154,18,204,16,"enemy"],[154,23,204,21],[154,24,204,22,"zoneTypeId"],[154,34,204,32],[154,38,204,36],[154,48,204,46],[155,10,204,48],[156,10,205,8,"name"],[156,14,205,12],[156,16,205,14,"enemy"],[156,21,205,19],[156,22,205,20,"name"],[156,26,205,24],[157,10,206,8,"icon"],[157,14,206,12],[157,16,206,14],[157,20,206,18],[158,10,206,20],[159,10,207,8,"hp"],[159,12,207,10],[159,14,207,12],[159,15,207,13],[160,10,207,15],[161,10,208,8,"maxHP"],[161,15,208,13],[161,17,208,15,"enemy"],[161,22,208,20],[161,23,208,21,"maxHealth"],[161,32,208,30],[162,10,209,8,"attack"],[162,16,209,14],[162,18,209,16,"enemy"],[162,23,209,21],[162,24,209,22,"stats"],[162,29,209,27],[162,30,209,28,"attack"],[162,36,209,34],[163,10,210,8,"xp"],[163,12,210,10],[163,14,210,12,"enemy"],[163,19,210,17],[163,20,210,18,"zoneXP"],[163,26,210,24],[163,30,210,28],[163,32,210,30],[164,10,210,32],[165,10,211,8,"position"],[165,18,211,16],[165,20,211,18,"enemy"],[165,25,211,23],[165,26,211,24,"position"],[166,8,212,6],[166,9,212,7],[167,8,214,6,"console"],[167,15,214,13],[167,16,214,14,"log"],[167,19,214,17],[167,20,214,18],[167,40,214,38,"zoneEnemy"],[167,49,214,47],[167,50,214,48,"name"],[167,54,214,52],[167,59,214,57,"zoneEnemy"],[167,68,214,66],[167,69,214,67,"typeId"],[167,75,214,73],[167,113,214,111],[167,114,214,112],[168,8,215,6,"recordEnemyKill"],[168,23,215,21],[168,24,215,22,"zoneEnemy"],[168,33,215,31],[168,34,215,32],[169,6,216,4],[169,7,216,5],[169,9,216,7],[169,10,216,8],[169,11,216,9],[169,12,216,10],[169,13,216,11],[170,4,217,2],[170,5,217,3],[170,7,217,5],[170,8,217,6,"game"],[170,12,217,10],[170,13,217,11,"updateNinja"],[170,24,217,22],[170,26,217,24,"recordEnemyKill"],[170,41,217,39],[170,42,217,40],[170,43,217,41],[172,4,219,2],[173,4,220,2],[173,10,220,8,"handleCombatTick"],[173,26,220,24],[173,29,220,27,"React"],[173,34,220,32],[173,35,220,32,"default"],[173,42,220,32],[173,43,220,33,"useCallback"],[173,54,220,44],[173,55,220,45],[173,61,220,51],[174,6,221,4,"console"],[174,13,221,11],[174,14,221,12,"log"],[174,17,221,15],[174,18,221,16],[174,87,221,85],[174,88,221,86],[175,6,223,4],[175,10,223,8,"enemiesToKill"],[175,23,223,36],[175,26,223,39],[175,28,223,41],[175,29,223,42],[175,30,223,43],[177,6,225,4,"setCombatState"],[177,20,225,18],[177,21,225,19,"prev"],[177,25,225,23],[177,29,225,27],[178,8,226,6],[178,14,226,12,"newTick"],[178,21,226,19],[178,24,226,22,"combatEngine"],[178,43,226,34],[178,44,226,34,"combatEngine"],[178,56,226,34],[178,57,226,35,"getCurrentTick"],[178,71,226,49],[178,72,226,50],[178,73,226,51],[179,8,227,6],[179,14,227,12,"newState"],[179,22,227,20],[179,25,227,23],[180,10,227,25],[180,13,227,28,"prev"],[180,17,227,32],[181,10,227,34,"currentTick"],[181,21,227,45],[181,23,227,47,"newTick"],[182,8,227,55],[182,9,227,56],[183,8,229,6],[183,12,229,10],[183,13,229,11,"newState"],[183,21,229,19],[183,22,229,20,"isInCombat"],[183,32,229,30],[183,34,229,32],[183,41,229,39,"newState"],[183,49,229,47],[185,8,231,6],[186,8,232,6,"newState"],[186,16,232,14],[186,17,232,15,"abilityManager"],[186,31,232,29],[186,32,232,30,"updateCooldowns"],[186,47,232,45],[186,48,232,46,"newTick"],[186,55,232,53],[186,56,232,54],[188,8,234,6],[189,8,235,6],[189,14,235,12,"effectResults"],[189,27,235,25],[189,30,235,28,"newState"],[189,38,235,36],[189,39,235,37,"statusEffects"],[189,52,235,50],[189,53,235,51,"processTick"],[189,64,235,62],[189,65,235,63,"newTick"],[189,72,235,70],[189,73,235,71],[191,8,237,6],[192,8,238,6,"effectResults"],[192,21,238,19],[192,22,238,20,"forEach"],[192,29,238,27],[192,30,238,28],[192,31,238,29,"results"],[192,38,238,36],[192,40,238,38,"entityId"],[192,48,238,46],[192,53,238,51],[193,10,239,8],[193,16,239,14,"enemyIndex"],[193,26,239,24],[193,29,239,27,"newState"],[193,37,239,35],[193,38,239,36,"enemies"],[193,45,239,43],[193,46,239,44,"findIndex"],[193,55,239,53],[193,56,239,54,"e"],[193,57,239,55],[193,61,239,59,"e"],[193,62,239,60],[193,63,239,61,"id"],[193,65,239,63],[193,70,239,68,"entityId"],[193,78,239,76],[193,79,239,77],[194,10,240,8],[194,14,240,12,"enemyIndex"],[194,24,240,22],[194,28,240,26],[194,29,240,27],[194,31,240,29],[195,12,241,10,"results"],[195,19,241,17],[195,20,241,18,"forEach"],[195,27,241,25],[195,28,241,26,"result"],[195,34,241,32],[195,38,241,36],[196,14,242,12,"newState"],[196,22,242,20],[196,23,242,21,"enemies"],[196,30,242,28],[196,31,242,29,"enemyIndex"],[196,41,242,39],[196,42,242,40],[196,43,242,41,"health"],[196,49,242,47],[196,53,242,51,"result"],[196,59,242,57],[196,60,242,58,"damage"],[196,66,242,64],[197,14,243,12,"newState"],[197,22,243,20],[197,23,243,21,"enemies"],[197,30,243,28],[197,31,243,29,"enemyIndex"],[197,41,243,39],[197,42,243,40],[197,43,243,41,"lastDamaged"],[197,54,243,52],[197,57,243,55,"newTick"],[197,64,243,62],[198,12,244,10],[198,13,244,11],[198,14,244,12],[199,10,245,8],[200,8,246,6],[200,9,246,7],[200,10,246,8],[202,8,248,6],[203,8,249,6],[204,8,250,6],[204,12,250,10,"newState"],[204,20,250,18],[204,21,250,19,"playerStats"],[204,32,250,30],[204,36,250,34,"game"],[204,40,250,38],[204,41,250,39,"gameState"],[204,50,250,48],[204,51,250,49,"ninja"],[204,56,250,54],[204,58,250,56],[205,10,251,8],[205,16,251,14,"effectiveStats"],[205,30,251,28],[205,33,251,31,"game"],[205,37,251,35],[205,38,251,36,"getEffectiveStats"],[205,55,251,53],[205,56,251,54],[205,57,251,55],[207,10,253,8],[208,10,254,8],[208,14,254,12,"newState"],[208,22,254,20],[208,23,254,21,"playerStats"],[208,34,254,32],[208,35,254,33,"attack"],[208,41,254,39],[208,46,254,44,"effectiveStats"],[208,60,254,58],[208,61,254,59,"attack"],[208,67,254,65],[208,71,255,12,"newState"],[208,79,255,20],[208,80,255,21,"playerStats"],[208,91,255,32],[208,92,255,33,"defense"],[208,99,255,40],[208,104,255,45,"effectiveStats"],[208,118,255,59],[208,119,255,60,"defense"],[208,126,255,67],[208,130,256,12,"newState"],[208,138,256,20],[208,139,256,21,"playerStats"],[208,150,256,32],[208,151,256,33,"maxHealth"],[208,160,256,42],[208,165,256,47,"effectiveStats"],[208,179,256,61],[208,180,256,62,"maxHealth"],[208,189,256,71],[208,191,256,73],[209,12,258,10,"console"],[209,19,258,17],[209,20,258,18,"log"],[209,23,258,21],[209,24,258,22],[209,58,258,56,"newState"],[209,66,258,64],[209,67,258,65,"playerStats"],[209,78,258,76],[209,79,258,77,"attack"],[209,85,258,83],[209,91,258,89,"effectiveStats"],[209,105,258,103],[209,106,258,104,"attack"],[209,112,258,110],[209,125,258,123,"newState"],[209,133,258,131],[209,134,258,132,"playerStats"],[209,145,258,143],[209,146,258,144,"defense"],[209,153,258,151],[209,159,258,157,"effectiveStats"],[209,173,258,171],[209,174,258,172,"defense"],[209,181,258,179],[209,192,258,190,"newState"],[209,200,258,198],[209,201,258,199,"playerStats"],[209,212,258,210],[209,213,258,211,"maxHealth"],[209,222,258,220],[209,228,258,226,"effectiveStats"],[209,242,258,240],[209,243,258,241,"maxHealth"],[209,252,258,250],[209,254,258,252],[209,255,258,253],[211,12,260,10],[212,12,261,10],[212,16,261,14,"newHealth"],[212,25,261,23],[212,28,261,26,"newState"],[212,36,261,34],[212,37,261,35,"playerStats"],[212,48,261,46],[212,49,261,47,"health"],[212,55,261,53],[213,12,262,10],[213,16,262,14,"newState"],[213,24,262,22],[213,25,262,23,"playerStats"],[213,36,262,34],[213,37,262,35,"maxHealth"],[213,46,262,44],[213,51,262,49,"effectiveStats"],[213,65,262,63],[213,66,262,64,"maxHealth"],[213,75,262,73],[213,77,262,75],[214,14,263,12],[215,14,264,12],[215,18,264,16,"effectiveStats"],[215,32,264,30],[215,33,264,31,"maxHealth"],[215,42,264,40],[215,45,264,43,"newState"],[215,53,264,51],[215,54,264,52,"playerStats"],[215,65,264,63],[215,66,264,64,"maxHealth"],[215,75,264,73],[215,78,264,76],[215,81,264,79],[215,83,264,81],[216,16,265,14],[217,16,266,14],[217,22,266,20,"healthRatio"],[217,33,266,31],[217,36,266,34,"newState"],[217,44,266,42],[217,45,266,43,"playerStats"],[217,56,266,54],[217,57,266,55,"maxHealth"],[217,66,266,64],[217,69,266,67],[217,70,266,68],[217,73,267,16,"newState"],[217,81,267,24],[217,82,267,25,"playerStats"],[217,93,267,36],[217,94,267,37,"health"],[217,100,267,43],[217,103,267,46,"newState"],[217,111,267,54],[217,112,267,55,"playerStats"],[217,123,267,66],[217,124,267,67,"maxHealth"],[217,133,267,76],[217,136,267,79],[217,137,267,80],[218,16,268,14,"newHealth"],[218,25,268,23],[218,28,268,26,"Math"],[218,32,268,30],[218,33,268,31,"floor"],[218,38,268,36],[218,39,268,37,"effectiveStats"],[218,53,268,51],[218,54,268,52,"maxHealth"],[218,63,268,61],[218,66,268,64,"healthRatio"],[218,77,268,75],[218,78,268,76],[219,14,269,12],[219,15,269,13],[219,21,269,19],[219,25,269,23,"newState"],[219,33,269,31],[219,34,269,32,"playerStats"],[219,45,269,43],[219,46,269,44,"health"],[219,52,269,50],[219,55,269,53,"effectiveStats"],[219,69,269,67],[219,70,269,68,"maxHealth"],[219,79,269,77],[219,81,269,79],[220,16,270,14],[221,16,271,14,"newHealth"],[221,25,271,23],[221,28,271,26,"effectiveStats"],[221,42,271,40],[221,43,271,41,"maxHealth"],[221,52,271,50],[222,14,272,12],[223,14,273,12],[224,12,274,10],[225,12,276,10,"newState"],[225,20,276,18],[225,21,276,19,"playerStats"],[225,32,276,30],[225,35,276,33],[226,14,277,12],[226,17,277,15,"newState"],[226,25,277,23],[226,26,277,24,"playerStats"],[226,37,277,35],[227,14,278,12,"attack"],[227,20,278,18],[227,22,278,20,"effectiveStats"],[227,36,278,34],[227,37,278,35,"attack"],[227,43,278,41],[228,14,279,12,"defense"],[228,21,279,19],[228,23,279,21,"effectiveStats"],[228,37,279,35],[228,38,279,36,"defense"],[228,45,279,43],[229,14,280,12,"maxHealth"],[229,23,280,21],[229,25,280,23,"effectiveStats"],[229,39,280,37],[229,40,280,38,"maxHealth"],[229,49,280,47],[230,14,280,49],[231,14,281,12,"health"],[231,20,281,18],[231,22,281,20,"newHealth"],[231,31,281,29],[232,14,281,31],[233,14,282,12,"critChance"],[233,24,282,22],[233,26,282,24,"effectiveStats"],[233,40,282,38],[233,41,282,39,"critChance"],[233,51,282,49],[233,55,282,53,"newState"],[233,63,282,61],[233,64,282,62,"playerStats"],[233,75,282,73],[233,76,282,74,"critChance"],[233,86,282,84],[234,14,283,12,"critDamage"],[234,24,283,22],[234,26,283,24,"effectiveStats"],[234,40,283,38],[234,41,283,39,"critDamage"],[234,51,283,49],[234,55,283,53,"newState"],[234,63,283,61],[234,64,283,62,"playerStats"],[234,75,283,73],[234,76,283,74,"critDamage"],[234,86,283,84],[235,14,284,12,"cooldownReduction"],[235,31,284,29],[235,33,284,31,"effectiveStats"],[235,47,284,45],[235,48,284,46,"cooldownReduction"],[235,65,284,63],[235,69,284,67,"newState"],[235,77,284,75],[235,78,284,76,"playerStats"],[235,89,284,87],[235,90,284,88,"cooldownReduction"],[236,12,285,10],[236,13,285,11],[237,10,286,8],[239,10,288,8],[240,10,289,8],[240,14,289,12,"game"],[240,18,289,16],[240,19,289,17,"gameState"],[240,28,289,26],[240,29,289,27,"isAlive"],[240,36,289,34],[240,40,290,12,"game"],[240,44,290,16],[240,45,290,17,"gameState"],[240,54,290,26],[240,55,290,27,"ninja"],[240,60,290,32],[240,61,290,33,"health"],[240,67,290,39],[240,72,290,44,"effectiveStats"],[240,86,290,58],[240,87,290,59,"maxHealth"],[240,96,290,68],[240,100,291,12,"newState"],[240,108,291,20],[240,109,291,21,"playerStats"],[240,120,291,32],[240,121,291,33,"health"],[240,127,291,39],[240,130,291,42,"effectiveStats"],[240,144,291,56],[240,145,291,57,"maxHealth"],[240,154,291,66],[240,157,291,69],[240,160,291,72],[240,162,291,74],[241,12,292,10,"console"],[241,19,292,17],[241,20,292,18,"log"],[241,23,292,21],[241,24,292,22],[241,58,292,56,"newState"],[241,66,292,64],[241,67,292,65,"playerStats"],[241,78,292,76],[241,79,292,77,"health"],[241,85,292,83],[241,91,292,89,"game"],[241,95,292,93],[241,96,292,94,"gameState"],[241,105,292,103],[241,106,292,104,"ninja"],[241,111,292,109],[241,112,292,110,"health"],[241,118,292,116],[241,139,292,137],[241,140,292,138],[242,12,293,10,"newState"],[242,20,293,18],[242,21,293,19,"playerStats"],[242,32,293,30],[242,33,293,31,"health"],[242,39,293,37],[242,42,293,40,"game"],[242,46,293,44],[242,47,293,45,"gameState"],[242,56,293,54],[242,57,293,55,"ninja"],[242,62,293,60],[242,63,293,61,"health"],[242,69,293,67],[243,10,294,8],[244,8,295,6],[246,8,297,6],[247,8,298,6,"newState"],[247,16,298,14],[247,17,298,15,"enemies"],[247,24,298,22],[247,25,298,23,"forEach"],[247,32,298,30],[247,33,298,31,"enemy"],[247,38,298,36],[247,42,298,40],[248,10,299,8],[248,14,299,12],[248,15,299,13,"enemy"],[248,20,299,18],[248,21,299,19,"isBoss"],[248,27,299,25],[248,29,299,27],[249,12,299,29],[250,12,300,10],[251,12,301,10],[251,18,301,16,"MOVEMENT_SPEED"],[251,32,301,30],[251,35,301,33],[251,39,301,37],[251,40,301,38],[251,41,301,39],[252,12,302,10],[252,18,302,16,"SCREEN_WIDTH"],[252,30,302,28],[252,33,302,31],[252,36,302,34],[253,12,303,10],[253,18,303,16,"GAME_AREA_HEIGHT"],[253,34,303,32],[253,37,303,35],[253,40,303,38],[253,41,303,39],[253,42,303,40],[254,12,304,10],[254,18,304,16,"ENEMY_SIZE"],[254,28,304,26],[254,31,304,29],[254,33,304,31],[256,12,306,10],[257,12,307,10],[257,18,307,16,"playerX"],[257,25,307,23],[257,28,307,26,"currentNinjaPosition"],[257,48,307,46],[257,49,307,47,"x"],[257,50,307,48],[258,12,308,10],[258,18,308,16,"playerY"],[258,25,308,23],[258,28,308,26,"currentNinjaPosition"],[258,48,308,46],[258,49,308,47,"y"],[258,50,308,48],[260,12,310,10],[261,12,311,10],[261,18,311,16,"deltaX"],[261,24,311,22],[261,27,311,25,"playerX"],[261,34,311,32],[261,37,311,35,"enemy"],[261,42,311,40],[261,43,311,41,"position"],[261,51,311,49],[261,52,311,50,"x"],[261,53,311,51],[262,12,312,10],[262,18,312,16,"deltaY"],[262,24,312,22],[262,27,312,25,"playerY"],[262,34,312,32],[262,37,312,35,"enemy"],[262,42,312,40],[262,43,312,41,"position"],[262,51,312,49],[262,52,312,50,"y"],[262,53,312,51],[263,12,313,10],[263,18,313,16,"distance"],[263,26,313,24],[263,29,313,27,"Math"],[263,33,313,31],[263,34,313,32,"sqrt"],[263,38,313,36],[263,39,313,37,"deltaX"],[263,45,313,43],[263,48,313,46,"deltaX"],[263,54,313,52],[263,57,313,55,"deltaY"],[263,63,313,61],[263,66,313,64,"deltaY"],[263,72,313,70],[263,73,313,71],[265,12,315,10],[266,12,316,10],[266,18,316,16,"ATTACK_RANGE"],[266,30,316,28],[266,33,316,31],[266,35,316,33],[266,36,316,34],[266,37,316,35],[267,12,317,10],[267,18,317,16,"ATTACK_COOLDOWN"],[267,33,317,31],[267,36,317,34],[267,38,317,36],[267,39,317,37],[267,40,317,38],[269,12,319,10],[269,16,319,14,"distance"],[269,24,319,22],[269,28,319,26,"ATTACK_RANGE"],[269,40,319,38],[269,42,319,40],[270,14,320,12],[271,14,321,12],[271,18,321,16],[271,19,321,17,"enemy"],[271,24,321,22],[271,25,321,23,"lastAttackTick"],[271,39,321,37],[271,41,321,39,"enemy"],[271,46,321,44],[271,47,321,45,"lastAttackTick"],[271,61,321,59],[271,64,321,62],[271,65,321,63],[272,14,323,12],[272,18,323,16,"newState"],[272,26,323,24],[272,27,323,25,"currentTick"],[272,38,323,36],[272,41,323,39,"enemy"],[272,46,323,44],[272,47,323,45,"lastAttackTick"],[272,61,323,59],[272,65,323,63,"ATTACK_COOLDOWN"],[272,80,323,78],[272,82,323,80],[273,16,324,14],[274,16,325,14],[274,22,325,20,"isPlayerInvincible"],[274,40,325,38],[274,43,325,41,"game"],[274,47,325,45],[274,48,325,46,"gameState"],[274,57,325,55],[274,58,325,56,"isInvincible"],[274,70,325,68],[274,74,326,39,"game"],[274,78,326,43],[274,79,326,44,"gameState"],[274,88,326,53],[274,89,326,54,"invincibilityEndTime"],[274,109,326,74],[274,113,327,39,"Date"],[274,117,327,43],[274,118,327,44,"now"],[274,121,327,47],[274,122,327,48],[274,123,327,49],[274,126,327,52,"game"],[274,130,327,56],[274,131,327,57,"gameState"],[274,140,327,66],[274,141,327,67,"invincibilityEndTime"],[274,161,327,87],[275,16,329,14],[275,20,329,18,"isPlayerInvincible"],[275,38,329,36],[275,40,329,38],[276,18,330,16,"console"],[276,25,330,23],[276,26,330,24,"log"],[276,29,330,27],[276,30,330,28],[276,49,330,47,"enemy"],[276,54,330,52],[276,55,330,53,"name"],[276,59,330,57],[276,99,330,97],[276,100,330,98],[277,18,331,16],[278,18,332,16,"enemy"],[278,23,332,21],[278,24,332,22,"lastAttackTick"],[278,38,332,36],[278,41,332,39,"newState"],[278,49,332,47],[278,50,332,48,"currentTick"],[278,61,332,59],[279,16,333,14],[279,17,333,15],[279,23,333,21],[280,18,334,16],[281,18,335,16],[281,24,335,22,"baseAttack"],[281,34,335,32],[281,37,335,35,"enemy"],[281,42,335,40],[281,43,335,41,"stats"],[281,48,335,46],[281,49,335,47,"attack"],[281,55,335,53],[281,58,335,56],[281,61,335,59],[281,62,335,60],[281,63,335,61],[282,18,336,16],[282,24,336,22,"attackDamage"],[282,36,336,34],[282,39,336,37,"Math"],[282,43,336,41],[282,44,336,42,"floor"],[282,49,336,47],[282,50,336,48,"baseAttack"],[282,60,336,58],[282,64,336,62],[282,67,336,65],[282,70,336,68,"Math"],[282,74,336,72],[282,75,336,73,"random"],[282,81,336,79],[282,82,336,80],[282,83,336,81],[282,86,336,84],[282,89,336,87],[282,90,336,88],[282,91,336,89],[282,92,336,90],[282,93,336,91],[283,18,337,16],[283,24,337,22,"playerDefense"],[283,37,337,35],[283,40,337,38,"newState"],[283,48,337,46],[283,49,337,47,"playerStats"],[283,60,337,58],[283,61,337,59,"defense"],[283,68,337,66],[284,18,338,16],[284,24,338,22,"finalDamage"],[284,35,338,33],[284,38,338,36,"Math"],[284,42,338,40],[284,43,338,41,"max"],[284,46,338,44],[284,47,338,45],[284,48,338,46],[284,50,338,48,"attackDamage"],[284,62,338,60],[284,65,338,63,"Math"],[284,69,338,67],[284,70,338,68,"floor"],[284,75,338,73],[284,76,338,74,"playerDefense"],[284,89,338,87],[284,92,338,90],[284,95,338,93],[284,96,338,94],[284,97,338,95],[284,98,338,96],[284,99,338,97],[286,18,340,16,"console"],[286,25,340,23],[286,26,340,24,"log"],[286,29,340,27],[286,30,340,28],[286,51,340,49,"enemy"],[286,56,340,54],[286,57,340,55,"name"],[286,61,340,59],[286,84,340,82,"finalDamage"],[286,95,340,93],[286,107,340,105,"attackDamage"],[286,119,340,117],[286,130,340,128,"Math"],[286,134,340,132],[286,135,340,133,"floor"],[286,140,340,138],[286,141,340,139,"playerDefense"],[286,154,340,152],[286,157,340,155],[286,160,340,158],[286,161,340,159],[286,182,340,180],[286,183,340,181],[288,18,342,16],[289,18,343,16],[289,24,343,22,"newPlayerHealth"],[289,39,343,37],[289,42,343,40,"Math"],[289,46,343,44],[289,47,343,45,"max"],[289,50,343,48],[289,51,343,49],[289,52,343,50],[289,54,343,52,"newState"],[289,62,343,60],[289,63,343,61,"playerStats"],[289,74,343,72],[289,75,343,73,"health"],[289,81,343,79],[289,84,343,82,"finalDamage"],[289,95,343,93],[289,96,343,94],[290,18,344,16,"newState"],[290,26,344,24],[290,27,344,25,"playerStats"],[290,38,344,36],[290,39,344,37,"health"],[290,45,344,43],[290,48,344,46,"newPlayerHealth"],[290,63,344,61],[291,18,346,16,"console"],[291,25,346,23],[291,26,346,24,"log"],[291,29,346,27],[291,30,346,28],[291,51,346,49,"newState"],[291,59,346,57],[291,60,346,58,"playerStats"],[291,71,346,69],[291,72,346,70,"health"],[291,78,346,76],[291,82,346,80,"newState"],[291,90,346,88],[291,91,346,89,"playerStats"],[291,102,346,100],[291,103,346,101,"maxHealth"],[291,112,346,110],[291,122,346,120,"finalDamage"],[291,133,346,131],[291,143,346,141],[291,144,346,142],[293,18,348,16],[294,18,349,16,"enemy"],[294,23,349,21],[294,24,349,22,"lastAttackTick"],[294,38,349,36],[294,41,349,39,"newState"],[294,49,349,47],[294,50,349,48,"currentTick"],[294,61,349,59],[296,18,351,16],[297,18,352,16],[297,22,352,20,"newPlayerHealth"],[297,37,352,35],[297,41,352,39],[297,42,352,40],[297,44,352,42],[298,20,353,18,"console"],[298,27,353,25],[298,28,353,26,"log"],[298,31,353,29],[298,32,353,30],[298,82,353,80],[298,83,353,81],[299,20,354,18],[300,20,355,18,"setTimeout"],[300,30,355,28],[300,31,355,29],[300,37,355,35],[301,22,356,20],[302,22,357,20,"game"],[302,26,357,24],[302,27,357,25,"updateGameState"],[302,42,357,40],[302,43,357,41],[303,24,357,43,"isAlive"],[303,31,357,50],[303,33,357,52],[304,22,357,58],[304,23,357,59],[304,24,357,60],[305,20,358,18],[305,21,358,19],[305,23,358,21],[305,26,358,24],[305,27,358,25],[306,18,359,16],[307,16,360,14],[308,14,361,12],[309,12,362,10],[309,13,362,11],[309,19,362,17],[310,14,363,12],[311,14,364,12],[312,14,365,12],[312,18,365,16,"distance"],[312,26,365,24],[312,29,365,27],[312,31,365,29],[312,33,365,31],[313,16,366,14],[314,16,367,14],[314,22,367,20,"normalizedX"],[314,33,367,31],[314,36,367,34,"deltaX"],[314,42,367,40],[314,45,367,43,"distance"],[314,53,367,51],[315,16,368,14],[315,22,368,20,"normalizedY"],[315,33,368,31],[315,36,368,34,"deltaY"],[315,42,368,40],[315,45,368,43,"distance"],[315,53,368,51],[317,16,370,14],[318,16,371,14],[318,22,371,20,"randomFactor"],[318,34,371,32],[318,37,371,35],[318,40,371,38],[318,41,371,39],[318,42,371,40],[319,16,372,14],[319,22,372,20,"finalX"],[319,28,372,26],[319,31,372,29,"normalizedX"],[319,42,372,40],[319,45,372,43],[319,46,372,44,"Math"],[319,50,372,48],[319,51,372,49,"random"],[319,57,372,55],[319,58,372,56],[319,59,372,57],[319,62,372,60],[319,65,372,63],[319,69,372,67,"randomFactor"],[319,81,372,79],[320,16,373,14],[320,22,373,20,"finalY"],[320,28,373,26],[320,31,373,29,"normalizedY"],[320,42,373,40],[320,45,373,43],[320,46,373,44,"Math"],[320,50,373,48],[320,51,373,49,"random"],[320,57,373,55],[320,58,373,56],[320,59,373,57],[320,62,373,60],[320,65,373,63],[320,69,373,67,"randomFactor"],[320,81,373,79],[322,16,375,14],[323,16,376,14],[323,20,376,18,"newX"],[323,24,376,22],[323,27,376,25,"enemy"],[323,32,376,30],[323,33,376,31,"position"],[323,41,376,39],[323,42,376,40,"x"],[323,43,376,41],[323,46,376,45,"finalX"],[323,52,376,51],[323,55,376,54,"MOVEMENT_SPEED"],[323,69,376,69],[324,16,377,14],[324,20,377,18,"newY"],[324,24,377,22],[324,27,377,25,"enemy"],[324,32,377,30],[324,33,377,31,"position"],[324,41,377,39],[324,42,377,40,"y"],[324,43,377,41],[324,46,377,45,"finalY"],[324,52,377,51],[324,55,377,54,"MOVEMENT_SPEED"],[324,69,377,69],[326,16,379,14],[327,16,380,14,"newX"],[327,20,380,18],[327,23,380,21,"Math"],[327,27,380,25],[327,28,380,26,"max"],[327,31,380,29],[327,32,380,30],[327,33,380,31],[327,35,380,33,"Math"],[327,39,380,37],[327,40,380,38,"min"],[327,43,380,41],[327,44,380,42,"SCREEN_WIDTH"],[327,56,380,54],[327,59,380,57,"ENEMY_SIZE"],[327,69,380,67],[327,71,380,69,"newX"],[327,75,380,73],[327,76,380,74],[327,77,380,75],[328,16,381,14,"newY"],[328,20,381,18],[328,23,381,21,"Math"],[328,27,381,25],[328,28,381,26,"max"],[328,31,381,29],[328,32,381,30],[328,33,381,31],[328,35,381,33,"Math"],[328,39,381,37],[328,40,381,38,"min"],[328,43,381,41],[328,44,381,42,"GAME_AREA_HEIGHT"],[328,60,381,58],[328,63,381,61,"ENEMY_SIZE"],[328,73,381,71],[328,75,381,73,"newY"],[328,79,381,77],[328,80,381,78],[328,81,381,79],[330,16,383,14],[331,16,384,14,"enemy"],[331,21,384,19],[331,22,384,20,"position"],[331,30,384,28],[331,31,384,29,"x"],[331,32,384,30],[331,35,384,33,"newX"],[331,39,384,37],[332,16,385,14,"enemy"],[332,21,385,19],[332,22,385,20,"position"],[332,30,385,28],[332,31,385,29,"y"],[332,32,385,30],[332,35,385,33,"newY"],[332,39,385,37],[333,14,386,12],[334,14,387,12],[335,12,388,10],[336,10,389,8],[337,8,390,6],[337,9,390,7],[337,10,390,8],[339,8,392,6],[340,8,393,6],[341,8,394,6],[341,12,394,10,"newState"],[341,20,394,18],[341,21,394,19,"shadowClone"],[341,32,394,30],[341,34,394,32],[342,10,395,8],[343,10,396,8,"newState"],[343,18,396,16],[343,19,396,17,"shadowClone"],[343,30,396,28],[343,31,396,29,"remainingTicks"],[343,45,396,43],[343,47,396,45],[345,10,398,8],[346,10,399,8],[346,16,399,14,"cloneOffset"],[346,27,399,25],[346,30,399,28],[346,32,399,30],[346,33,399,31],[346,34,399,32],[347,10,400,8,"newState"],[347,18,400,16],[347,19,400,17,"shadowClone"],[347,30,400,28],[347,31,400,29,"position"],[347,39,400,37],[347,40,400,38,"x"],[347,41,400,39],[347,44,400,42,"currentNinjaPosition"],[347,64,400,62],[347,65,400,63,"x"],[347,66,400,64],[347,69,400,67,"cloneOffset"],[347,80,400,78],[348,10,401,8,"newState"],[348,18,401,16],[348,19,401,17,"shadowClone"],[348,30,401,28],[348,31,401,29,"position"],[348,39,401,37],[348,40,401,38,"y"],[348,41,401,39],[348,44,401,42,"currentNinjaPosition"],[348,64,401,62],[348,65,401,63,"y"],[348,66,401,64],[348,69,401,67],[348,71,401,69],[350,10,403,8],[351,10,404,8],[351,14,404,12,"newState"],[351,22,404,20],[351,23,404,21,"shadowClone"],[351,34,404,32],[351,35,404,33,"remainingTicks"],[351,49,404,47],[351,53,404,51],[351,54,404,52],[351,56,404,54],[352,12,405,10,"console"],[352,19,405,17],[352,20,405,18,"log"],[352,23,405,21],[352,24,405,22],[352,75,405,73],[352,76,405,74],[353,12,406,10,"newState"],[353,20,406,18],[353,21,406,19,"shadowClone"],[353,32,406,30],[353,35,406,33,"undefined"],[353,44,406,42],[354,10,407,8],[354,11,407,9],[354,17,407,15],[355,12,408,10],[356,12,409,10],[357,12,410,10],[357,18,410,16,"CLONE_ATTACK_INTERVAL"],[357,39,410,37],[357,42,410,40],[357,44,410,42],[358,12,411,10],[358,16,411,14,"newState"],[358,24,411,22],[358,25,411,23,"currentTick"],[358,36,411,34],[358,39,411,37,"CLONE_ATTACK_INTERVAL"],[358,60,411,58],[358,65,411,63],[358,66,411,64],[358,70,411,68,"newState"],[358,78,411,76],[358,79,411,77,"enemies"],[358,86,411,84],[358,87,411,85,"length"],[358,93,411,91],[358,96,411,94],[358,97,411,95],[358,99,411,97],[359,14,412,12,"console"],[359,21,412,19],[359,22,412,20,"log"],[359,25,412,23],[359,26,412,24],[359,83,412,81],[359,84,412,82],[361,14,414,12],[362,14,415,12],[362,20,415,18,"target"],[362,26,415,24],[362,29,415,27,"findClosestEnemyInternal"],[362,53,415,51],[362,54,415,52,"newState"],[362,62,415,60],[362,63,415,61,"enemies"],[362,70,415,68],[362,71,415,69],[363,14,416,12],[363,18,416,16,"target"],[363,24,416,22],[363,26,416,24],[364,16,417,14],[365,16,418,14],[365,22,418,20,"cloneDamage"],[365,33,418,31],[365,36,418,34,"Math"],[365,40,418,38],[365,41,418,39,"floor"],[365,46,418,44],[365,47,418,45,"newState"],[365,55,418,53],[365,56,418,54,"playerStats"],[365,67,418,65],[365,68,418,66,"attack"],[365,74,418,72],[365,77,418,75],[365,80,418,78],[365,81,418,79],[367,16,420,14],[368,16,421,14,"createProjectile"],[368,32,421,30],[368,33,421,31,"target"],[368,39,421,37],[368,41,421,39,"cloneDamage"],[368,52,421,50],[368,54,421,52,"newState"],[368,62,421,60],[368,63,421,61,"shadowClone"],[368,74,421,72],[368,75,421,73,"position"],[368,83,421,81],[368,85,421,83],[369,18,422,16,"id"],[369,20,422,18],[369,22,422,20],[369,43,422,41],[370,18,423,16,"name"],[370,22,423,20],[370,24,423,22],[370,45,423,43],[371,18,424,16,"icon"],[371,22,424,20],[371,24,424,22],[372,16,425,14],[372,17,425,15],[372,18,425,16],[373,14,426,12],[374,12,427,10],[375,10,428,8],[376,8,429,6],[378,8,431,6],[379,8,432,6],[379,12,432,10],[379,13,432,11,"isManualControlActive"],[379,34,432,32],[379,36,432,34],[380,10,433,8],[380,15,433,13],[380,19,433,17,"i"],[380,20,433,18],[380,23,433,21],[380,24,433,22],[380,26,433,24,"i"],[380,27,433,25],[380,30,433,28],[380,31,433,29],[380,33,433,31,"i"],[380,34,433,32],[380,36,433,34],[380,38,433,36],[381,12,434,10],[381,16,434,14,"newState"],[381,24,434,22],[381,25,434,23,"abilityManager"],[381,39,434,37],[381,40,434,38,"isAbilityReady"],[381,54,434,52],[381,55,434,53,"i"],[381,56,434,54],[381,57,434,55],[381,61,434,59,"newState"],[381,69,434,67],[381,70,434,68,"enemies"],[381,77,434,75],[381,78,434,76,"length"],[381,84,434,82],[381,87,434,85],[381,88,434,86],[381,90,434,88],[382,14,435,12],[382,18,435,16,"newState"],[382,26,435,24],[382,27,435,25,"abilityManager"],[382,41,435,39],[382,42,435,40,"useAbility"],[382,52,435,50],[382,53,435,51,"i"],[382,54,435,52],[382,56,435,54,"newTick"],[382,63,435,61],[382,64,435,62],[382,66,435,64],[383,16,436,14,"castAbility"],[383,27,436,25],[383,28,436,26,"newState"],[383,36,436,34],[383,38,436,36,"i"],[383,39,436,37],[383,40,436,38],[384,14,437,12],[385,12,438,10],[386,10,439,8],[387,8,440,6],[389,8,442,6],[390,8,443,6],[390,14,443,12,"deadEnemies"],[390,25,443,23],[390,28,443,26,"newState"],[390,36,443,34],[390,37,443,35,"enemies"],[390,44,443,42],[390,45,443,43,"filter"],[390,51,443,49],[390,52,443,50,"enemy"],[390,57,443,55],[390,61,443,59,"enemy"],[390,66,443,64],[390,67,443,65,"health"],[390,73,443,71],[390,77,443,75],[390,78,443,76],[390,79,443,77],[391,8,444,6,"enemiesToKill"],[391,21,444,19],[391,24,444,22],[391,25,444,23],[391,28,444,26,"deadEnemies"],[391,39,444,37],[391,40,444,38],[391,41,444,39],[391,42,444,40],[393,8,446,6],[394,8,447,6],[394,12,447,10,"deadEnemies"],[394,23,447,21],[394,24,447,22,"length"],[394,30,447,28],[394,33,447,31],[394,34,447,32],[394,36,447,34],[395,10,448,8,"console"],[395,17,448,15],[395,18,448,16,"log"],[395,21,448,19],[395,22,448,20],[395,49,448,47,"deadEnemies"],[395,60,448,58],[395,61,448,59,"length"],[395,67,448,65],[395,83,448,81],[395,85,448,83,"deadEnemies"],[395,96,448,94],[395,97,448,95,"map"],[395,100,448,98],[395,101,448,99,"e"],[395,102,448,100],[395,106,448,104],[395,109,448,107,"e"],[395,110,448,108],[395,111,448,109,"id"],[395,113,448,111],[395,117,448,115,"e"],[395,118,448,116],[395,119,448,117,"health"],[395,125,448,123],[395,130,448,128],[395,131,448,129],[395,132,448,130],[396,8,449,6],[398,8,451,6],[399,8,452,6],[399,14,452,12,"lowHealthEnemies"],[399,30,452,28],[399,33,452,31,"newState"],[399,41,452,39],[399,42,452,40,"enemies"],[399,49,452,47],[399,50,452,48,"filter"],[399,56,452,54],[399,57,452,55,"enemy"],[399,62,452,60],[399,66,452,64,"enemy"],[399,71,452,69],[399,72,452,70,"health"],[399,78,452,76],[399,82,452,80],[399,84,452,82],[399,88,452,86,"enemy"],[399,93,452,91],[399,94,452,92,"health"],[399,100,452,98],[399,103,452,101],[399,104,452,102],[399,105,452,103],[400,8,453,6],[400,12,453,10,"lowHealthEnemies"],[400,28,453,26],[400,29,453,27,"length"],[400,35,453,33],[400,38,453,36],[400,39,453,37],[400,41,453,39],[401,10,454,8,"console"],[401,17,454,15],[401,18,454,16,"log"],[401,21,454,19],[401,22,454,20],[401,61,454,59],[401,63,454,61,"lowHealthEnemies"],[401,79,454,77],[401,80,454,78,"map"],[401,83,454,81],[401,84,454,82,"e"],[401,85,454,83],[401,89,454,87],[401,92,454,90,"e"],[401,93,454,91],[401,94,454,92,"id"],[401,96,454,94],[401,100,454,98,"e"],[401,101,454,99],[401,102,454,100,"health"],[401,108,454,106],[401,112,454,110,"e"],[401,113,454,111],[401,114,454,112,"maxHealth"],[401,123,454,121],[401,128,454,126],[401,129,454,127],[401,130,454,128],[402,8,455,6],[404,8,457,6],[405,8,458,6],[405,14,458,12,"beforeCount"],[405,25,458,23],[405,28,458,26,"newState"],[405,36,458,34],[405,37,458,35,"enemies"],[405,44,458,42],[405,45,458,43,"length"],[405,51,458,49],[406,8,459,6,"newState"],[406,16,459,14],[406,17,459,15,"enemies"],[406,24,459,22],[406,27,459,25,"newState"],[406,35,459,33],[406,36,459,34,"enemies"],[406,43,459,41],[406,44,459,42,"filter"],[406,50,459,48],[406,51,459,49,"enemy"],[406,56,459,54],[406,60,459,58,"enemy"],[406,65,459,63],[406,66,459,64,"health"],[406,72,459,70],[406,75,459,73],[406,76,459,74],[406,77,459,75],[407,8,460,6],[407,14,460,12,"afterCount"],[407,24,460,22],[407,27,460,25,"newState"],[407,35,460,33],[407,36,460,34,"enemies"],[407,43,460,41],[407,44,460,42,"length"],[407,50,460,48],[408,8,462,6],[408,12,462,10,"beforeCount"],[408,23,462,21],[408,28,462,26,"afterCount"],[408,38,462,36],[408,40,462,38],[409,10,463,8,"console"],[409,17,463,15],[409,18,463,16,"log"],[409,21,463,19],[409,22,463,20],[409,52,463,50,"beforeCount"],[409,63,463,61],[409,66,463,64,"afterCount"],[409,76,463,74],[409,102,463,100],[409,103,463,101],[410,8,464,6],[412,8,466,6],[413,8,467,6],[414,8,468,6],[414,14,468,12,"MAX_ENEMIES"],[414,25,468,23],[414,28,468,26],[414,30,468,28],[414,31,468,29],[414,32,468,30],[415,8,469,6],[415,14,469,12,"MIN_SPAWN_DELAY"],[415,29,469,27],[415,32,469,30],[415,35,469,33],[415,36,469,34],[415,37,469,35],[416,8,470,6],[416,14,470,12,"now"],[416,17,470,15],[416,20,470,18,"Date"],[416,24,470,22],[416,25,470,23,"now"],[416,28,470,26],[416,29,470,27],[416,30,470,28],[417,8,471,6],[417,14,471,12,"hasBoss"],[417,21,471,19],[417,24,471,22,"newState"],[417,32,471,30],[417,33,471,31,"enemies"],[417,40,471,38],[417,41,471,39,"some"],[417,45,471,43],[417,46,471,44,"enemy"],[417,51,471,49],[417,55,471,53,"enemy"],[417,60,471,58],[417,61,471,59,"isBoss"],[417,67,471,65],[417,68,471,66],[419,8,473,6],[420,8,474,6],[420,12,474,10],[420,13,474,11,"newState"],[420,21,474,19],[420,22,474,20,"lastSpawnTime"],[420,35,474,33],[420,37,474,35],[421,10,475,8,"newState"],[421,18,475,16],[421,19,475,17,"lastSpawnTime"],[421,32,475,30],[421,35,475,33,"now"],[421,38,475,36],[422,8,476,6],[423,8,478,6,"console"],[423,15,478,13],[423,16,478,14,"log"],[423,19,478,17],[423,20,478,18],[423,53,478,51,"newState"],[423,61,478,59],[423,62,478,60,"enemies"],[423,69,478,67],[423,70,478,68,"length"],[423,76,478,74],[423,85,478,83,"MAX_ENEMIES"],[423,96,478,94],[423,109,478,107,"hasBoss"],[423,116,478,114],[423,118,478,116],[423,119,478,117],[425,8,480,6],[426,8,481,6],[426,12,481,10],[426,13,481,11,"hasBoss"],[426,20,481,18],[426,24,481,22,"newState"],[426,32,481,30],[426,33,481,31,"enemies"],[426,40,481,38],[426,41,481,39,"length"],[426,47,481,45],[426,50,481,48,"MAX_ENEMIES"],[426,61,481,59],[426,65,481,64,"now"],[426,68,481,67],[426,71,481,70,"newState"],[426,79,481,78],[426,80,481,79,"lastSpawnTime"],[426,93,481,92],[426,97,481,97,"MIN_SPAWN_DELAY"],[426,112,481,112],[426,114,481,114],[427,10,482,8,"console"],[427,17,482,15],[427,18,482,16,"log"],[427,21,482,19],[427,22,482,20],[427,43,482,41,"newState"],[427,51,482,49],[427,52,482,50,"enemies"],[427,59,482,57],[427,60,482,58,"length"],[427,66,482,64],[427,69,482,67],[427,70,482,68],[427,74,482,72,"MAX_ENEMIES"],[427,85,482,83],[427,87,482,85],[427,88,482,86],[428,10,483,8,"spawnTestEnemy"],[428,24,483,22],[428,25,483,23,"newState"],[428,33,483,31],[428,34,483,32],[429,10,484,8,"newState"],[429,18,484,16],[429,19,484,17,"lastSpawnTime"],[429,32,484,30],[429,35,484,33,"now"],[429,38,484,36],[430,8,485,6],[431,8,487,6],[431,15,487,13,"newState"],[431,23,487,21],[432,6,488,4],[432,7,488,5],[432,8,488,6],[434,6,490,4],[435,6,491,4,"console"],[435,13,491,11],[435,14,491,12,"log"],[435,17,491,15],[435,18,491,16],[435,50,491,48,"enemiesToKill"],[435,63,491,61],[435,64,491,62,"length"],[435,70,491,68],[435,101,491,99],[435,102,491,100],[436,6,493,4,"enemiesToKill"],[436,19,493,17],[436,20,493,18,"forEach"],[436,27,493,25],[436,28,493,26],[436,29,493,27,"enemy"],[436,34,493,32],[436,36,493,34,"index"],[436,41,493,39],[436,46,493,44],[437,8,494,6,"console"],[437,15,494,13],[437,16,494,14,"log"],[437,19,494,17],[437,20,494,18],[437,57,494,55,"index"],[437,62,494,60],[437,65,494,63],[437,66,494,64],[437,70,494,68,"enemiesToKill"],[437,83,494,81],[437,84,494,82,"length"],[437,90,494,88],[437,104,494,102,"enemy"],[437,109,494,107],[437,110,494,108,"id"],[437,112,494,110],[437,114,494,112],[437,115,494,113],[438,8,495,6,"handleEnemyKill"],[438,23,495,21],[438,24,495,22,"enemy"],[438,29,495,27],[438,30,495,28],[439,6,496,4],[439,7,496,5],[439,8,496,6],[440,4,497,2],[440,5,497,3],[440,7,497,5],[440,8,497,6,"handleEnemyKill"],[440,23,497,21],[440,24,497,22],[440,25,497,23],[440,26,497,24],[440,27,497,25],[442,4,499,2],[443,4,500,2],[443,10,500,8,"findClosestEnemyInternal"],[443,34,500,32],[443,37,500,36,"enemies"],[443,44,500,58],[443,48,500,83],[444,6,501,4],[444,10,501,8,"enemies"],[444,17,501,15],[444,18,501,16,"length"],[444,24,501,22],[444,29,501,27],[444,30,501,28],[444,32,501,30],[444,39,501,37],[444,43,501,41],[446,6,503,4],[447,6,504,4],[447,12,504,10,"SCREEN_WIDTH"],[447,24,504,22],[447,27,504,25],[447,30,504,28],[448,6,505,4],[448,12,505,10,"GAME_AREA_HEIGHT"],[448,28,505,26],[448,31,505,29],[448,34,505,32],[448,37,505,35],[448,40,505,38],[448,41,505,39],[448,42,505,40],[449,6,506,4],[449,12,506,10,"ninjaX"],[449,18,506,16],[449,21,506,19,"SCREEN_WIDTH"],[449,33,506,31],[449,36,506,34],[449,37,506,35],[450,6,507,4],[450,12,507,10,"ninjaY"],[450,18,507,16],[450,21,507,19,"GAME_AREA_HEIGHT"],[450,37,507,35],[450,40,507,38],[450,41,507,39],[451,6,509,4],[451,10,509,8,"closestEnemy"],[451,22,509,20],[451,25,509,23,"enemies"],[451,32,509,30],[451,33,509,31],[451,34,509,32],[451,35,509,33],[452,6,510,4],[452,10,510,8,"closestDistance"],[452,25,510,23],[452,28,510,26,"Infinity"],[452,36,510,34],[453,6,512,4,"enemies"],[453,13,512,11],[453,14,512,12,"forEach"],[453,21,512,19],[453,22,512,20,"enemy"],[453,27,512,25],[453,31,512,29],[454,8,513,6],[454,14,513,12,"distance"],[454,22,513,20],[454,25,513,23,"Math"],[454,29,513,27],[454,30,513,28,"sqrt"],[454,34,513,32],[454,35,514,8,"Math"],[454,39,514,12],[454,40,514,13,"pow"],[454,43,514,16],[454,44,514,17,"enemy"],[454,49,514,22],[454,50,514,23,"position"],[454,58,514,31],[454,59,514,32,"x"],[454,60,514,33],[454,63,514,36,"ninjaX"],[454,69,514,42],[454,71,514,44],[454,72,514,45],[454,73,514,46],[454,76,515,8,"Math"],[454,80,515,12],[454,81,515,13,"pow"],[454,84,515,16],[454,85,515,17,"enemy"],[454,90,515,22],[454,91,515,23,"position"],[454,99,515,31],[454,100,515,32,"y"],[454,101,515,33],[454,104,515,36,"ninjaY"],[454,110,515,42],[454,112,515,44],[454,113,515,45],[454,114,516,6],[454,115,516,7],[455,8,518,6],[455,12,518,10,"distance"],[455,20,518,18],[455,23,518,21,"closestDistance"],[455,38,518,36],[455,40,518,38],[456,10,519,8,"closestDistance"],[456,25,519,23],[456,28,519,26,"distance"],[456,36,519,34],[457,10,520,8,"closestEnemy"],[457,22,520,20],[457,25,520,23,"enemy"],[457,30,520,28],[458,8,521,6],[459,6,522,4],[459,7,522,5],[459,8,522,6],[460,6,524,4,"console"],[460,13,524,11],[460,14,524,12,"log"],[460,17,524,15],[460,18,524,16],[460,60,524,58,"closestDistance"],[460,75,524,73],[460,76,524,74,"toFixed"],[460,83,524,81],[460,84,524,82],[460,85,524,83],[460,86,524,84],[460,88,524,86],[460,89,524,87],[461,6,525,4],[461,13,525,11,"closestEnemy"],[461,25,525,23],[462,4,526,2],[462,5,526,3],[464,4,528,2],[465,4,529,2],[465,10,529,8,"findClosestEnemy"],[465,26,529,24],[465,29,529,27,"findClosestEnemy"],[465,30,529,27],[465,35,529,53],[466,6,530,4],[466,13,530,11,"findClosestEnemyInternal"],[466,37,530,35],[466,38,530,36,"combatState"],[466,49,530,47],[466,50,530,48,"enemies"],[466,57,530,55],[466,58,530,56],[467,4,531,2],[467,5,531,3],[469,4,533,2],[470,4,534,2],[470,10,534,8],[470,11,534,9,"currentNinjaPosition"],[470,31,534,29],[470,33,534,31,"setCurrentNinjaPosition"],[470,56,534,54],[470,57,534,55],[470,60,534,58],[470,64,534,58,"useState"],[470,70,534,66],[470,71,534,66,"useState"],[470,79,534,66],[470,81,534,91],[471,6,534,93,"x"],[471,7,534,94],[471,9,534,96],[471,10,534,97],[472,6,534,99,"y"],[472,7,534,100],[472,9,534,102],[473,4,534,104],[473,5,534,105],[473,6,534,106],[474,4,535,2],[474,10,535,8],[474,11,535,9,"isManualControlActive"],[474,32,535,30],[474,34,535,32,"setIsManualControlActive"],[474,58,535,56],[474,59,535,57],[474,62,535,60],[474,66,535,60,"useState"],[474,72,535,68],[474,73,535,68,"useState"],[474,81,535,68],[474,83,535,69],[474,88,535,74],[474,89,535,75],[476,4,537,2],[477,4,538,2],[477,10,538,8,"updateNinjaPosition"],[477,29,538,27],[477,32,538,30],[477,36,538,30,"useCallback"],[477,42,538,41],[477,43,538,41,"useCallback"],[477,54,538,41],[477,56,538,43,"newPosition"],[477,67,538,78],[477,71,538,83],[478,6,539,4,"setCurrentNinjaPosition"],[478,29,539,27],[478,30,539,28,"newPosition"],[478,41,539,39],[478,42,539,40],[479,4,540,2],[479,5,540,3],[479,7,540,5],[479,9,540,7],[479,10,540,8],[481,4,542,2],[482,4,543,2],[482,10,543,8,"setManualControlActive"],[482,32,543,30],[482,35,543,33],[482,39,543,33,"useCallback"],[482,45,543,44],[482,46,543,44,"useCallback"],[482,57,543,44],[482,59,543,46,"active"],[482,65,543,61],[482,69,543,66],[483,6,544,4,"setIsManualControlActive"],[483,30,544,28],[483,31,544,29,"active"],[483,37,544,35],[483,38,544,36],[484,6,545,4,"console"],[484,13,545,11],[484,14,545,12,"log"],[484,17,545,15],[484,18,545,16],[484,39,545,37,"active"],[484,45,545,43],[484,48,545,46],[484,59,545,57],[484,62,545,60],[484,75,545,73],[484,88,545,86,"active"],[484,94,545,92],[484,97,545,95],[484,105,545,103],[484,108,545,106],[484,117,545,115],[484,119,545,117],[484,120,545,118],[485,4,546,2],[485,5,546,3],[485,7,546,5],[485,9,546,7],[485,10,546,8],[487,4,548,2],[488,4,549,2],[488,10,549,8,"handleProjectileHit"],[488,29,549,27],[488,32,549,31,"projectile"],[488,42,549,59],[488,46,549,64],[489,6,550,4,"console"],[489,13,550,11],[489,14,550,12,"log"],[489,17,550,15],[489,18,550,16],[489,35,550,33,"projectile"],[489,45,550,43],[489,46,550,44,"id"],[489,48,550,46],[489,62,550,60,"projectile"],[489,72,550,70],[489,73,550,71,"targetEnemyId"],[489,86,550,84],[489,94,550,92,"projectile"],[489,104,550,102],[489,105,550,103,"damage"],[489,111,550,109],[489,120,550,118],[489,121,550,119],[490,6,552,4,"setCombatState"],[490,20,552,18],[490,21,552,19,"prev"],[490,25,552,23],[490,29,552,27],[491,8,553,6],[491,14,553,12,"newState"],[491,22,553,20],[491,25,553,23],[492,10,553,25],[492,13,553,28,"prev"],[493,8,553,33],[493,9,553,34],[495,8,555,6],[496,8,556,6],[496,14,556,12,"enemyIndex"],[496,24,556,22],[496,27,556,25,"newState"],[496,35,556,33],[496,36,556,34,"enemies"],[496,43,556,41],[496,44,556,42,"findIndex"],[496,53,556,51],[496,54,556,52,"e"],[496,55,556,53],[496,59,556,57,"e"],[496,60,556,58],[496,61,556,59,"id"],[496,63,556,61],[496,68,556,66,"projectile"],[496,78,556,76],[496,79,556,77,"targetEnemyId"],[496,92,556,90],[496,93,556,91],[497,8,557,6],[497,12,557,10,"enemyIndex"],[497,22,557,20],[497,26,557,24],[497,27,557,25],[497,29,557,27],[498,10,558,8,"newState"],[498,18,558,16],[498,19,558,17,"enemies"],[498,26,558,24],[498,29,558,27],[498,30,558,28],[498,33,558,31,"newState"],[498,41,558,39],[498,42,558,40,"enemies"],[498,49,558,47],[498,50,558,48],[499,10,559,8,"newState"],[499,18,559,16],[499,19,559,17,"enemies"],[499,26,559,24],[499,27,559,25,"enemyIndex"],[499,37,559,35],[499,38,559,36],[499,41,559,39],[500,12,560,10],[500,15,560,13,"newState"],[500,23,560,21],[500,24,560,22,"enemies"],[500,31,560,29],[500,32,560,30,"enemyIndex"],[500,42,560,40],[500,43,560,41],[501,12,561,10,"health"],[501,18,561,16],[501,20,561,18,"newState"],[501,28,561,26],[501,29,561,27,"enemies"],[501,36,561,34],[501,37,561,35,"enemyIndex"],[501,47,561,45],[501,48,561,46],[501,49,561,47,"health"],[501,55,561,53],[501,58,561,56,"projectile"],[501,68,561,66],[501,69,561,67,"damage"],[501,75,561,73],[502,12,562,10,"lastDamaged"],[502,23,562,21],[502,25,562,23,"combatEngine"],[502,44,562,35],[502,45,562,35,"combatEngine"],[502,57,562,35],[502,58,562,36,"getCurrentTick"],[502,72,562,50],[502,73,562,51],[503,10,563,8],[503,11,563,9],[504,10,565,8,"console"],[504,17,565,15],[504,18,565,16,"log"],[504,21,565,19],[504,22,565,20],[504,34,565,32,"projectile"],[504,44,565,42],[504,45,565,43,"targetEnemyId"],[504,58,565,56],[504,70,565,68,"newState"],[504,78,565,76],[504,79,565,77,"enemies"],[504,86,565,84],[504,87,565,85,"enemyIndex"],[504,97,565,95],[504,98,565,96],[504,99,565,97,"health"],[504,105,565,103],[504,109,565,107,"newState"],[504,117,565,115],[504,118,565,116,"enemies"],[504,125,565,123],[504,126,565,124,"enemyIndex"],[504,136,565,134],[504,137,565,135],[504,138,565,136,"maxHealth"],[504,147,565,145],[504,149,565,147],[504,150,565,148],[505,8,566,6],[506,8,568,6],[506,15,568,13,"newState"],[506,23,568,21],[507,6,569,4],[507,7,569,5],[507,8,569,6],[509,6,571,4],[510,6,572,4,"setProjectiles"],[510,20,572,18],[510,21,572,19,"prev"],[510,25,572,23],[510,29,572,27,"prev"],[510,33,572,31],[510,34,572,32,"filter"],[510,40,572,38],[510,41,572,39,"p"],[510,42,572,40],[510,46,572,44,"p"],[510,47,572,45],[510,48,572,46,"id"],[510,50,572,48],[510,55,572,53,"projectile"],[510,65,572,63],[510,66,572,64,"id"],[510,68,572,66],[510,69,572,67],[510,70,572,68],[511,4,573,2],[511,5,573,3],[513,4,575,2],[514,4,576,2],[514,10,576,8,"castAbility"],[514,21,576,19],[514,24,576,22,"castAbility"],[514,25,576,23,"state"],[514,30,576,41],[514,32,576,43,"slotIndex"],[514,41,576,60],[514,46,576,65],[515,6,577,4],[515,12,577,10,"deck"],[515,16,577,14],[515,19,577,17,"state"],[515,24,577,22],[515,25,577,23,"abilityManager"],[515,39,577,37],[515,40,577,38,"getDeck"],[515,47,577,45],[515,48,577,46],[515,49,577,47],[516,6,578,4],[516,12,578,10,"ability"],[516,19,578,17],[516,22,578,20,"deck"],[516,26,578,24],[516,27,578,25,"slots"],[516,32,578,30],[516,33,578,31,"slotIndex"],[516,42,578,40],[516,43,578,41],[517,6,579,4],[517,10,579,8],[517,11,579,9,"ability"],[517,18,579,16],[517,20,579,18],[519,6,581,4],[520,6,582,4],[520,10,582,8,"damage"],[520,16,582,14],[520,19,582,17,"ability"],[520,26,582,24],[520,27,582,25,"stats"],[520,32,582,30],[520,33,582,31,"baseDamage"],[520,43,582,41],[522,6,584,4],[523,6,585,4,"deck"],[523,10,585,8],[523,11,585,9,"activeSynergies"],[523,26,585,24],[523,27,585,25,"forEach"],[523,34,585,32],[523,35,585,33,"synergy"],[523,42,585,40],[523,46,585,44],[524,8,586,6],[524,12,586,10,"synergy"],[524,19,586,17],[524,20,586,18,"bonus"],[524,25,586,23],[524,26,586,24,"damageBonus"],[524,37,586,35],[524,41,587,10,"synergy"],[524,48,587,17],[524,49,587,18,"requiredTags"],[524,61,587,30],[524,62,587,31,"some"],[524,66,587,35],[524,67,587,36,"tag"],[524,70,587,39],[524,74,587,43,"ability"],[524,81,587,50],[524,82,587,51,"tags"],[524,86,587,55],[524,87,587,56,"includes"],[524,95,587,64],[524,96,587,65,"tag"],[524,99,587,68],[524,100,587,69],[524,101,587,70],[524,103,587,72],[525,10,588,8,"damage"],[525,16,588,14],[525,20,588,19],[525,21,588,20],[525,24,588,23,"synergy"],[525,31,588,30],[525,32,588,31,"bonus"],[525,37,588,36],[525,38,588,37,"damageBonus"],[525,49,588,48],[525,52,588,51],[525,55,588,55],[526,8,589,6],[527,6,590,4],[527,7,590,5],[527,8,590,6],[529,6,592,4],[530,6,593,4],[530,12,593,10,"isAOE"],[530,17,593,15],[530,20,593,18,"ability"],[530,27,593,25],[530,28,593,26,"effects"],[530,35,593,33],[530,36,593,34,"includes"],[530,44,593,42],[530,45,593,43],[530,50,593,48],[530,51,593,49],[530,55,593,53,"ability"],[530,62,593,60],[530,63,593,61,"stats"],[530,68,593,66],[530,69,593,67,"aoeRadius"],[530,78,593,76],[531,6,595,4],[531,10,595,8,"isAOE"],[531,15,595,13],[531,17,595,15],[532,8,596,6,"console"],[532,15,596,13],[532,16,596,14,"log"],[532,19,596,17],[532,20,596,18],[532,39,596,37,"ability"],[532,46,596,44],[532,47,596,45,"name"],[532,51,596,49],[532,67,596,65,"ability"],[532,74,596,72],[532,75,596,73,"stats"],[532,80,596,78],[532,81,596,79,"aoeRadius"],[532,90,596,88],[532,92,596,90],[532,93,596,91],[534,8,598,6],[535,8,599,6],[535,14,599,12,"ninjaX"],[535,20,599,18],[535,23,599,21,"currentNinjaPosition"],[535,43,599,41],[535,44,599,42,"x"],[535,45,599,43],[535,48,599,46],[535,50,599,48],[535,51,599,49],[535,52,599,50],[536,8,600,6],[536,14,600,12,"ninjaY"],[536,20,600,18],[536,23,600,21,"currentNinjaPosition"],[536,43,600,41],[536,44,600,42,"y"],[536,45,600,43],[536,48,600,46],[536,50,600,48],[537,8,601,6],[537,14,601,12,"aoeRadius"],[537,23,601,21],[537,26,601,24,"ability"],[537,33,601,31],[537,34,601,32,"stats"],[537,39,601,37],[537,40,601,38,"aoeRadius"],[537,49,601,47],[538,8,603,6],[538,14,603,12,"enemiesInRange"],[538,28,603,26],[538,31,603,29,"state"],[538,36,603,34],[538,37,603,35,"enemies"],[538,44,603,42],[538,45,603,43,"filter"],[538,51,603,49],[538,52,603,50,"enemy"],[538,57,603,55],[538,61,603,59],[539,10,604,8],[539,16,604,14,"enemyX"],[539,22,604,20],[539,25,604,23,"enemy"],[539,30,604,28],[539,31,604,29,"position"],[539,39,604,37],[539,40,604,38,"x"],[539,41,604,39],[539,44,604,42],[539,48,604,46],[539,49,604,47],[539,50,604,48],[540,10,605,8],[540,16,605,14,"enemyY"],[540,22,605,20],[540,25,605,23,"enemy"],[540,30,605,28],[540,31,605,29,"position"],[540,39,605,37],[540,40,605,38,"y"],[540,41,605,39],[540,44,605,42],[540,48,605,46],[541,10,606,8],[541,16,606,14,"distance"],[541,24,606,22],[541,27,606,25,"Math"],[541,31,606,29],[541,32,606,30,"sqrt"],[541,36,606,34],[541,37,606,35,"Math"],[541,41,606,39],[541,42,606,40,"pow"],[541,45,606,43],[541,46,606,44,"enemyX"],[541,52,606,50],[541,55,606,53,"ninjaX"],[541,61,606,59],[541,63,606,61],[541,64,606,62],[541,65,606,63],[541,68,606,66,"Math"],[541,72,606,70],[541,73,606,71,"pow"],[541,76,606,74],[541,77,606,75,"enemyY"],[541,83,606,81],[541,86,606,84,"ninjaY"],[541,92,606,90],[541,94,606,92],[541,95,606,93],[541,96,606,94],[541,97,606,95],[542,10,607,8],[542,17,607,15,"distance"],[542,25,607,23],[542,29,607,27,"aoeRadius"],[542,38,607,36],[543,8,608,6],[543,9,608,7],[543,10,608,8],[544,8,610,6,"console"],[544,15,610,13],[544,16,610,14,"log"],[544,19,610,17],[544,20,610,18],[544,45,610,43,"enemiesInRange"],[544,59,610,57],[544,60,610,58,"length"],[544,66,610,64],[544,88,610,86,"aoeRadius"],[544,97,610,95],[544,107,610,105],[544,108,610,106],[546,8,612,6],[547,8,613,6,"enemiesInRange"],[547,22,613,20],[547,23,613,21,"forEach"],[547,30,613,28],[547,31,613,29,"enemy"],[547,36,613,34],[547,40,613,38],[548,10,614,8],[548,16,614,14,"damageResult"],[548,28,614,26],[548,31,614,29,"DamageCalculator"],[548,50,614,45],[548,51,614,45,"DamageCalculator"],[548,67,614,45],[548,68,614,46,"calculateDamage"],[548,83,614,61],[548,84,614,62,"damage"],[548,90,614,68],[548,92,614,70,"state"],[548,97,614,75],[548,98,614,76,"playerStats"],[548,109,614,87],[548,111,614,89,"enemy"],[548,116,614,94],[548,117,614,95,"stats"],[548,122,614,100],[548,123,614,101],[549,10,615,8,"createProjectile"],[549,26,615,24],[549,27,615,25,"enemy"],[549,32,615,30],[549,34,615,32,"damageResult"],[549,46,615,44],[549,47,615,45,"damage"],[549,53,615,51],[549,55,615,53,"currentNinjaPosition"],[549,75,615,73],[549,77,615,75],[550,12,616,10,"id"],[550,14,616,12],[550,16,616,14,"ability"],[550,23,616,21],[550,24,616,22,"id"],[550,26,616,24],[551,12,617,10,"name"],[551,16,617,14],[551,18,617,16,"ability"],[551,25,617,23],[551,26,617,24,"name"],[551,30,617,28],[552,12,618,10,"icon"],[552,16,618,14],[552,18,618,16,"ability"],[552,25,618,23],[552,26,618,24,"icon"],[553,10,619,8],[553,11,619,9],[553,12,619,10],[554,10,621,8,"console"],[554,17,621,15],[554,18,621,16,"log"],[554,21,621,19],[554,22,621,20],[554,37,621,35,"enemy"],[554,42,621,40],[554,43,621,41,"name"],[554,47,621,45],[554,55,621,53,"damageResult"],[554,67,621,65],[554,68,621,66,"damage"],[554,74,621,72],[554,83,621,81],[554,84,621,82],[555,8,622,6],[555,9,622,7],[555,10,622,8],[556,8,624,6,"console"],[556,15,624,13],[556,16,624,14,"log"],[556,19,624,17],[556,20,624,18],[556,26,624,24,"ability"],[556,33,624,31],[556,34,624,32,"name"],[556,38,624,36],[556,56,624,54,"enemiesInRange"],[556,70,624,68],[556,71,624,69,"length"],[556,77,624,75],[556,93,624,91,"damage"],[556,99,624,97],[556,118,624,116],[556,119,624,117],[557,6,626,4],[557,7,626,5],[557,13,626,11],[558,8,627,6],[559,8,628,6],[559,14,628,12,"target"],[559,20,628,18],[559,23,628,21,"findClosestEnemyInternal"],[559,47,628,45],[559,48,628,46,"state"],[559,53,628,51],[559,54,628,52,"enemies"],[559,61,628,59],[559,62,628,60],[560,8,629,6],[560,12,629,10],[560,13,629,11,"target"],[560,19,629,17],[560,21,629,19],[561,8,631,6],[561,14,631,12,"damageResult"],[561,26,631,24],[561,29,631,27,"DamageCalculator"],[561,48,631,43],[561,49,631,43,"DamageCalculator"],[561,65,631,43],[561,66,631,44,"calculateDamage"],[561,81,631,59],[561,82,631,60,"damage"],[561,88,631,66],[561,90,631,68,"state"],[561,95,631,73],[561,96,631,74,"playerStats"],[561,107,631,85],[561,109,631,87,"target"],[561,115,631,93],[561,116,631,94,"stats"],[561,121,631,99],[561,122,631,100],[563,8,633,6],[564,8,634,6,"createProjectile"],[564,24,634,22],[564,25,634,23,"target"],[564,31,634,29],[564,33,634,31,"damageResult"],[564,45,634,43],[564,46,634,44,"damage"],[564,52,634,50],[564,54,634,52,"currentNinjaPosition"],[564,74,634,72],[564,76,634,74],[565,10,635,8,"id"],[565,12,635,10],[565,14,635,12,"ability"],[565,21,635,19],[565,22,635,20,"id"],[565,24,635,22],[566,10,636,8,"name"],[566,14,636,12],[566,16,636,14,"ability"],[566,23,636,21],[566,24,636,22,"name"],[566,28,636,26],[567,10,637,8,"icon"],[567,14,637,12],[567,16,637,14,"ability"],[567,23,637,21],[567,24,637,22,"icon"],[568,8,638,6],[568,9,638,7],[568,10,638,8],[569,8,640,6,"console"],[569,15,640,13],[569,16,640,14,"log"],[569,19,640,17],[569,20,640,18],[569,26,640,24,"ability"],[569,33,640,31],[569,34,640,32,"name"],[569,38,640,36],[569,66,640,64,"damageResult"],[569,78,640,76],[569,79,640,77,"damage"],[569,85,640,83],[569,95,640,93,"damageResult"],[569,107,640,105],[569,108,640,106,"isCritical"],[569,118,640,116],[569,121,640,119],[569,131,640,129],[569,134,640,132],[569,136,640,134],[569,138,640,136],[569,139,640,137],[570,6,641,4],[572,6,643,4],[573,6,644,4],[573,10,644,8,"ability"],[573,17,644,15],[573,18,644,16,"effects"],[573,25,644,23],[573,26,644,24,"includes"],[573,34,644,32],[573,35,644,33],[573,40,644,38],[573,41,644,39],[573,45,644,43,"ability"],[573,52,644,50],[573,53,644,51,"stats"],[573,58,644,56],[573,59,644,57,"duration"],[573,67,644,65],[573,69,644,67],[574,8,645,6],[574,14,645,12,"targets"],[574,21,645,19],[574,24,645,22,"isAOE"],[574,29,645,27],[574,32,646,8,"state"],[574,37,646,13],[574,38,646,14,"enemies"],[574,45,646,21],[574,46,646,22,"filter"],[574,52,646,28],[574,53,646,29,"enemy"],[574,58,646,34],[574,62,646,38],[575,10,647,10],[575,16,647,16,"ninjaX"],[575,22,647,22],[575,25,647,25,"currentNinjaPosition"],[575,45,647,45],[575,46,647,46,"x"],[575,47,647,47],[575,50,647,50],[575,52,647,52],[576,10,648,10],[576,16,648,16,"ninjaY"],[576,22,648,22],[576,25,648,25,"currentNinjaPosition"],[576,45,648,45],[576,46,648,46,"y"],[576,47,648,47],[576,50,648,50],[576,52,648,52],[577,10,649,10],[577,16,649,16,"enemyX"],[577,22,649,22],[577,25,649,25,"enemy"],[577,30,649,30],[577,31,649,31,"position"],[577,39,649,39],[577,40,649,40,"x"],[577,41,649,41],[577,44,649,44],[577,48,649,48],[578,10,650,10],[578,16,650,16,"enemyY"],[578,22,650,22],[578,25,650,25,"enemy"],[578,30,650,30],[578,31,650,31,"position"],[578,39,650,39],[578,40,650,40,"y"],[578,41,650,41],[578,44,650,44],[578,48,650,48],[579,10,651,10],[579,16,651,16,"distance"],[579,24,651,24],[579,27,651,27,"Math"],[579,31,651,31],[579,32,651,32,"sqrt"],[579,36,651,36],[579,37,651,37,"Math"],[579,41,651,41],[579,42,651,42,"pow"],[579,45,651,45],[579,46,651,46,"enemyX"],[579,52,651,52],[579,55,651,55,"ninjaX"],[579,61,651,61],[579,63,651,63],[579,64,651,64],[579,65,651,65],[579,68,651,68,"Math"],[579,72,651,72],[579,73,651,73,"pow"],[579,76,651,76],[579,77,651,77,"enemyY"],[579,83,651,83],[579,86,651,86,"ninjaY"],[579,92,651,92],[579,94,651,94],[579,95,651,95],[579,96,651,96],[579,97,651,97],[580,10,652,10],[580,17,652,17,"distance"],[580,25,652,25],[580,29,652,29,"ability"],[580,36,652,36],[580,37,652,37,"stats"],[580,42,652,42],[580,43,652,43,"aoeRadius"],[580,52,652,52],[581,8,653,8],[581,9,653,9],[581,10,653,10],[581,13,654,8],[581,14,654,9,"findClosestEnemyInternal"],[581,38,654,33],[581,39,654,34,"state"],[581,44,654,39],[581,45,654,40,"enemies"],[581,52,654,47],[581,53,654,48],[581,54,654,49],[581,55,654,50,"filter"],[581,61,654,56],[581,62,654,57,"Boolean"],[581,69,654,64],[581,70,654,65],[582,8,656,6,"targets"],[582,15,656,13],[582,16,656,14,"forEach"],[582,23,656,21],[582,24,656,22,"target"],[582,30,656,28],[582,34,656,32],[583,10,657,8,"state"],[583,15,657,13],[583,16,657,14,"statusEffects"],[583,29,657,27],[583,30,657,28,"addEffect"],[583,39,657,37],[583,40,657,38,"target"],[583,46,657,44],[583,47,657,45,"id"],[583,49,657,47],[583,51,657,49],[584,12,658,10,"id"],[584,14,658,12],[584,16,658,14],[584,19,658,17,"ability"],[584,26,658,24],[584,27,658,25,"id"],[584,29,658,27],[584,35,658,33],[585,12,659,10,"type"],[585,16,659,14],[585,18,659,16],[585,23,659,21],[586,12,660,10,"remainingTicks"],[586,26,660,24],[586,28,660,26,"Math"],[586,32,660,30],[586,33,660,31,"floor"],[586,38,660,36],[586,39,660,37,"ability"],[586,46,660,44],[586,47,660,45,"stats"],[586,52,660,50],[586,53,660,51,"duration"],[586,61,660,59],[586,64,660,62],[586,66,660,64],[586,67,660,65],[587,12,661,10,"tickInterval"],[587,24,661,22],[587,26,661,24],[587,28,661,26],[588,12,662,10,"lastTick"],[588,20,662,18],[588,22,662,20,"state"],[588,27,662,25],[588,28,662,26,"currentTick"],[588,39,662,37],[589,12,663,10,"value"],[589,17,663,15],[589,19,663,17,"Math"],[589,23,663,21],[589,24,663,22,"floor"],[589,29,663,27],[589,30,663,28,"damage"],[589,36,663,34],[589,39,663,37],[589,42,663,40],[589,43,663,41],[590,12,664,10,"stackable"],[590,21,664,19],[590,23,664,21],[591,10,665,8],[591,11,665,9],[591,12,665,10],[592,8,666,6],[592,9,666,7],[592,10,666,8],[593,6,667,4],[595,6,669,4],[596,6,670,4],[596,10,670,8,"ability"],[596,17,670,15],[596,18,670,16,"effects"],[596,25,670,23],[596,26,670,24,"includes"],[596,34,670,32],[596,35,670,33],[596,41,670,39],[596,42,670,40],[596,46,670,44,"ability"],[596,53,670,51],[596,54,670,52,"id"],[596,56,670,54],[596,61,670,59],[596,75,670,73],[596,77,670,75],[597,8,671,6,"console"],[597,15,671,13],[597,16,671,14,"log"],[597,19,671,17],[597,20,671,18],[597,66,671,64,"ability"],[597,73,671,71],[597,74,671,72,"stats"],[597,79,671,77],[597,80,671,78,"duration"],[597,88,671,86],[597,98,671,96],[597,99,671,97],[599,8,673,6],[600,8,674,6],[600,14,674,12,"cloneX"],[600,20,674,18],[600,23,674,21,"currentNinjaPosition"],[600,43,674,41],[600,44,674,42,"x"],[600,45,674,43],[600,48,674,46],[600,50,674,48],[600,51,674,49],[600,52,674,50],[601,8,675,6],[601,14,675,12,"cloneY"],[601,20,675,18],[601,23,675,21,"currentNinjaPosition"],[601,43,675,41],[601,44,675,42,"y"],[601,45,675,43],[601,48,675,46],[601,50,675,48],[601,51,675,49],[601,52,675,50],[603,8,677,6,"state"],[603,13,677,11],[603,14,677,12,"shadowClone"],[603,25,677,23],[603,28,677,26],[604,10,678,8,"id"],[604,12,678,10],[604,14,678,12],[604,30,678,28,"Date"],[604,34,678,32],[604,35,678,33,"now"],[604,38,678,36],[604,39,678,37],[604,40,678,38],[604,42,678,40],[605,10,679,8,"remainingTicks"],[605,24,679,22],[605,26,679,24,"Math"],[605,30,679,28],[605,31,679,29,"floor"],[605,36,679,34],[605,37,679,35,"ability"],[605,44,679,42],[605,45,679,43,"stats"],[605,50,679,48],[605,51,679,49,"duration"],[605,59,679,57],[605,62,679,60],[605,64,679,62],[605,65,679,63],[606,10,679,65],[607,10,680,8,"position"],[607,18,680,16],[607,20,680,18],[608,12,680,20,"x"],[608,13,680,21],[608,15,680,23,"cloneX"],[608,21,680,29],[609,12,680,31,"y"],[609,13,680,32],[609,15,680,34,"cloneY"],[610,10,680,41],[610,11,680,42],[611,10,681,8,"damageMultiplier"],[611,26,681,24],[611,28,681,26],[611,31,681,29],[611,32,681,31],[612,8,682,6],[612,9,682,7],[613,8,684,6,"console"],[613,15,684,13],[613,16,684,14,"log"],[613,19,684,17],[613,20,684,18],[613,63,684,61,"ability"],[613,70,684,68],[613,71,684,69,"stats"],[613,76,684,74],[613,77,684,75,"duration"],[613,85,684,83],[613,108,684,106],[613,109,684,107],[614,6,685,4],[615,4,686,2],[615,5,686,3],[617,4,688,2],[618,4,689,2],[618,10,689,8,"createProjectile"],[618,26,689,24],[618,29,689,27,"createProjectile"],[618,30,689,28,"targetEnemy"],[618,41,689,52],[618,43,689,54,"damage"],[618,49,689,68],[618,51,689,70,"ninjaPos"],[618,59,689,103],[618,61,689,105,"abilityInfo"],[618,72,689,159],[618,77,689,164],[619,6,690,4],[619,10,690,8],[619,11,690,9,"targetEnemy"],[619,22,690,20],[619,24,690,22],[620,8,691,6,"console"],[620,15,691,13],[620,16,691,14,"log"],[620,19,691,17],[620,20,691,18],[620,65,691,63],[620,66,691,64],[621,8,692,6],[621,15,692,13],[621,19,692,17],[622,6,693,4],[623,6,695,4],[623,12,695,10,"SCREEN_WIDTH"],[623,24,695,22],[623,27,695,25],[623,30,695,28],[624,6,696,4],[624,12,696,10,"GAME_AREA_HEIGHT"],[624,28,696,26],[624,31,696,29],[624,34,696,32],[624,37,696,35],[624,40,696,38],[624,41,696,39],[624,42,696,40],[625,6,697,4],[625,12,697,10,"NINJA_SIZE"],[625,22,697,20],[625,25,697,23],[625,27,697,25],[627,6,699,4],[628,6,700,4],[628,12,700,10,"ninjaX"],[628,18,700,16],[628,21,700,19,"ninjaPos"],[628,29,700,27],[628,32,700,30,"ninjaPos"],[628,40,700,38],[628,41,700,39,"x"],[628,42,700,40],[628,45,700,43,"NINJA_SIZE"],[628,55,700,53],[628,58,700,56],[628,59,700,57],[628,62,700,60,"SCREEN_WIDTH"],[628,74,700,72],[628,77,700,75],[628,78,700,76],[629,6,701,4],[629,12,701,10,"ninjaY"],[629,18,701,16],[629,21,701,19,"ninjaPos"],[629,29,701,27],[629,32,701,30,"ninjaPos"],[629,40,701,38],[629,41,701,39,"y"],[629,42,701,40],[629,45,701,43,"NINJA_SIZE"],[629,55,701,53],[629,58,701,56],[629,59,701,57],[629,62,701,60,"GAME_AREA_HEIGHT"],[629,78,701,76],[629,81,701,79],[629,82,701,80],[630,6,702,4],[630,12,702,10,"ENEMY_SIZE"],[630,22,702,20],[630,25,702,23],[630,27,702,25],[631,6,704,4],[631,12,704,10,"projectileId"],[631,24,704,22],[631,27,704,25],[631,35,704,33,"Date"],[631,39,704,37],[631,40,704,38,"now"],[631,43,704,41],[631,44,704,42],[631,45,704,43],[631,49,704,47,"Math"],[631,53,704,51],[631,54,704,52,"random"],[631,60,704,58],[631,61,704,59],[631,62,704,60],[631,64,704,62],[632,6,706,4],[632,12,706,10,"projectile"],[632,22,706,38],[632,25,706,41],[633,8,707,6,"id"],[633,10,707,8],[633,12,707,10,"projectileId"],[633,24,707,22],[634,8,708,6,"x"],[634,9,708,7],[634,11,708,9,"ninjaX"],[634,17,708,15],[635,8,709,6,"y"],[635,9,709,7],[635,11,709,9,"ninjaY"],[635,17,709,15],[636,8,710,6,"targetX"],[636,15,710,13],[636,17,710,15,"targetEnemy"],[636,28,710,26],[636,29,710,27,"position"],[636,37,710,35],[636,38,710,36,"x"],[636,39,710,37],[636,42,710,40,"ENEMY_SIZE"],[636,52,710,50],[636,55,710,53],[636,56,710,54],[637,8,711,6,"targetY"],[637,15,711,13],[637,17,711,15,"targetEnemy"],[637,28,711,26],[637,29,711,27,"position"],[637,37,711,35],[637,38,711,36,"y"],[637,39,711,37],[637,42,711,40,"ENEMY_SIZE"],[637,52,711,50],[637,55,711,53],[637,56,711,54],[638,8,712,6,"targetEnemyId"],[638,21,712,19],[638,23,712,21,"targetEnemy"],[638,34,712,32],[638,35,712,33,"id"],[638,37,712,35],[639,8,713,6,"damage"],[639,14,713,12],[639,16,713,14,"damage"],[639,22,713,20],[640,8,714,6,"startTime"],[640,17,714,15],[640,19,714,17,"Date"],[640,23,714,21],[640,24,714,22,"now"],[640,27,714,25],[640,28,714,26],[640,29,714,27],[641,8,715,6,"duration"],[641,16,715,14],[641,18,715,16],[641,21,715,19],[642,8,715,21],[643,8,716,6],[644,8,717,6,"abilityId"],[644,17,717,15],[644,19,717,17,"abilityInfo"],[644,30,717,28],[644,32,717,30,"id"],[644,34,717,32],[644,38,717,36],[644,54,717,52],[645,8,718,6,"abilityName"],[645,19,718,17],[645,21,718,19,"abilityInfo"],[645,32,718,30],[645,34,718,32,"name"],[645,38,718,36],[645,42,718,40],[645,58,718,56],[646,8,719,6,"abilityIcon"],[646,19,719,17],[646,21,719,19,"abilityInfo"],[646,32,719,30],[646,34,719,32,"icon"],[646,38,719,36],[646,42,719,40],[646,46,719,44],[646,47,719,46],[647,6,720,4],[647,7,720,5],[648,6,722,4,"console"],[648,13,722,11],[648,14,722,12,"log"],[648,17,722,15],[648,18,722,16],[648,44,722,42,"abilityInfo"],[648,55,722,53],[648,57,722,55,"name"],[648,61,722,59],[648,65,722,63],[648,81,722,79],[648,101,722,99,"projectileId"],[648,113,722,111],[648,128,722,126,"targetEnemy"],[648,139,722,137],[648,140,722,138,"name"],[648,144,722,142],[648,152,722,150,"damage"],[648,158,722,156],[648,167,722,165],[648,168,722,166],[649,6,724,4,"console"],[649,13,724,11],[649,14,724,12,"log"],[649,17,724,15],[649,18,724,16],[649,53,724,51,"targetEnemy"],[649,64,724,62],[649,65,724,63,"id"],[649,67,724,65],[649,75,724,73,"damage"],[649,81,724,79],[649,90,724,88],[649,91,724,89],[650,6,725,4,"console"],[650,13,725,11],[650,14,725,12,"log"],[650,17,725,15],[650,18,725,16],[650,53,725,51,"ninjaX"],[650,59,725,57],[650,64,725,62,"ninjaY"],[650,70,725,68],[650,87,725,85,"projectile"],[650,97,725,95],[650,98,725,96,"targetX"],[650,105,725,103],[650,110,725,108,"projectile"],[650,120,725,118],[650,121,725,119,"targetY"],[650,128,725,126],[650,131,725,129],[650,132,725,130],[651,6,727,4,"setProjectiles"],[651,20,727,18],[651,21,727,19,"prev"],[651,25,727,23],[651,29,727,27],[651,30,727,28],[651,33,727,31,"prev"],[651,37,727,35],[651,39,727,37,"projectile"],[651,49,727,47],[651,50,727,48],[651,51,727,49],[653,6,729,4],[654,6,730,4,"setTimeout"],[654,16,730,14],[654,17,730,15],[654,23,730,21],[655,8,731,6,"handleProjectileHit"],[655,27,731,25],[655,28,731,26,"projectile"],[655,38,731,36],[655,39,731,37],[656,6,732,4],[656,7,732,5],[656,9,732,7],[656,12,732,10],[656,13,732,11],[657,6,734,4],[657,13,734,11,"projectile"],[657,23,734,21],[658,4,735,2],[658,5,735,3],[660,4,737,2],[661,4,738,2],[661,10,738,8,"spawnTestEnemy"],[661,24,738,22],[661,27,738,26,"state"],[661,32,738,44],[661,36,738,49],[662,6,739,4,"console"],[662,13,739,11],[662,14,739,12,"log"],[662,17,739,15],[662,18,739,16],[662,83,739,81],[662,84,739,82],[664,6,741,4],[665,6,742,4],[665,12,742,10,"zoneEnemy"],[665,21,742,19],[665,24,742,22,"spawnZoneEnemy"],[665,38,742,36],[665,39,742,37],[665,40,742,38],[666,6,743,4],[666,10,743,8],[666,11,743,9,"zoneEnemy"],[666,20,743,18],[666,22,743,20],[667,8,744,6,"console"],[667,15,744,13],[667,16,744,14,"log"],[667,19,744,17],[667,20,744,18],[667,76,744,74],[667,77,744,75],[668,8,745,6],[669,8,746,6,"spawnBasicTestEnemy"],[669,27,746,25],[669,28,746,26,"state"],[669,33,746,31],[669,34,746,32],[670,8,747,6],[671,6,748,4],[672,6,750,4,"console"],[672,13,750,11],[672,14,750,12,"log"],[672,17,750,15],[672,18,750,16],[672,44,750,42,"zoneEnemy"],[672,53,750,51],[672,54,750,52,"name"],[672,58,750,56],[672,63,750,61,"zoneEnemy"],[672,72,750,70],[672,73,750,71,"typeId"],[672,79,750,77],[672,94,750,92,"currentZone"],[672,105,750,103],[672,107,750,105,"id"],[672,109,750,107],[672,119,750,117,"currentZoneLevel"],[672,135,750,133],[672,137,750,135,"level"],[672,142,750,140],[672,144,750,142],[672,145,750,143],[674,6,752,4],[675,6,753,4],[675,12,753,10,"combatEnemy"],[675,23,753,34],[675,26,753,37],[676,8,754,6,"id"],[676,10,754,8],[676,12,754,10,"zoneEnemy"],[676,21,754,19],[676,22,754,20,"id"],[676,24,754,22],[677,8,755,6,"name"],[677,12,755,10],[677,14,755,12,"zoneEnemy"],[677,23,755,21],[677,24,755,22,"name"],[677,28,755,26],[678,8,756,6,"health"],[678,14,756,12],[678,16,756,14,"zoneEnemy"],[678,25,756,23],[678,26,756,24,"hp"],[678,28,756,26],[679,8,757,6,"maxHealth"],[679,17,757,15],[679,19,757,17,"zoneEnemy"],[679,28,757,26],[679,29,757,27,"maxHP"],[679,34,757,32],[680,8,758,6,"stats"],[680,13,758,11],[680,15,758,13],[681,10,759,8,"attack"],[681,16,759,14],[681,18,759,16,"zoneEnemy"],[681,27,759,25],[681,28,759,26,"attack"],[681,34,759,32],[682,10,760,8,"defense"],[682,17,760,15],[682,19,760,17],[682,21,760,19],[683,10,760,21],[684,10,761,8,"health"],[684,16,761,14],[684,18,761,16,"zoneEnemy"],[684,27,761,25],[684,28,761,26,"hp"],[684,30,761,28],[685,10,762,8,"maxHealth"],[685,19,762,17],[685,21,762,19,"zoneEnemy"],[685,30,762,28],[685,31,762,29,"maxHP"],[685,36,762,34],[686,10,763,8,"critChance"],[686,20,763,18],[686,22,763,20],[686,23,763,21],[687,10,764,8,"critDamage"],[687,20,764,18],[687,22,764,20],[687,25,764,23],[688,10,765,8,"cooldownReduction"],[688,27,765,25],[688,29,765,27],[689,8,766,6],[689,9,766,7],[690,8,767,6,"position"],[690,16,767,14],[690,18,767,16,"zoneEnemy"],[690,27,767,25],[690,28,767,26,"position"],[690,36,767,34],[691,8,768,6,"lastDamaged"],[691,19,768,17],[691,21,768,19],[691,22,768,20],[692,8,769,6],[693,8,770,6,"zoneTypeId"],[693,18,770,16],[693,20,770,18,"zoneEnemy"],[693,29,770,27],[693,30,770,28,"typeId"],[693,36,770,34],[694,8,771,6,"zoneXP"],[694,14,771,12],[694,16,771,14,"zoneEnemy"],[694,25,771,23],[694,26,771,24,"xp"],[695,6,772,4],[695,7,772,5],[696,6,774,4,"console"],[696,13,774,11],[696,14,774,12,"log"],[696,17,774,15],[696,18,774,16],[696,42,774,40,"combatEnemy"],[696,53,774,51],[696,54,774,52,"name"],[696,58,774,56],[696,67,774,65,"combatEnemy"],[696,78,774,76],[696,79,774,77,"health"],[696,85,774,83],[696,100,774,98,"currentZone"],[696,111,774,109],[696,113,774,111,"id"],[696,115,774,113],[696,125,774,123,"currentZoneLevel"],[696,141,774,139],[696,143,774,141,"level"],[696,148,774,146],[696,150,774,148],[696,151,774,149],[697,6,775,4,"state"],[697,11,775,9],[697,12,775,10,"enemies"],[697,19,775,17],[697,20,775,18,"push"],[697,24,775,22],[697,25,775,23,"combatEnemy"],[697,36,775,34],[697,37,775,35],[698,4,776,2],[698,5,776,3],[700,4,778,2],[701,4,779,2],[701,10,779,8,"spawnBasicTestEnemy"],[701,29,779,27],[701,32,779,31,"state"],[701,37,779,49],[701,41,779,54],[702,6,780,4],[702,12,780,10,"SCREEN_WIDTH"],[702,24,780,22],[702,27,780,25],[702,30,780,28],[703,6,781,4],[703,12,781,10,"GAME_AREA_HEIGHT"],[703,28,781,26],[703,31,781,29],[703,34,781,32],[703,37,781,35],[703,40,781,38],[704,6,782,4],[704,12,782,10,"ENEMY_SIZE"],[704,22,782,20],[704,25,782,23],[704,27,782,25],[705,6,784,4],[705,12,784,10,"x"],[705,13,784,11],[705,16,784,14,"Math"],[705,20,784,18],[705,21,784,19,"random"],[705,27,784,25],[705,28,784,26],[705,29,784,27],[705,33,784,31,"SCREEN_WIDTH"],[705,45,784,43],[705,48,784,46,"ENEMY_SIZE"],[705,58,784,56],[705,61,784,59],[705,62,784,60],[705,63,784,61],[705,66,784,64,"ENEMY_SIZE"],[705,76,784,74],[706,6,785,4],[706,12,785,10,"y"],[706,13,785,11],[706,16,785,14,"Math"],[706,20,785,18],[706,21,785,19,"random"],[706,27,785,25],[706,28,785,26],[706,29,785,27],[706,33,785,31,"GAME_AREA_HEIGHT"],[706,49,785,47],[706,52,785,50,"ENEMY_SIZE"],[706,62,785,60],[706,65,785,63],[706,66,785,64],[706,67,785,65],[706,70,785,68,"ENEMY_SIZE"],[706,80,785,78],[707,6,787,4],[707,12,787,10,"enemy"],[707,17,787,28],[707,20,787,31],[708,8,788,6,"id"],[708,10,788,8],[708,12,788,10],[708,30,788,28,"Date"],[708,34,788,32],[708,35,788,33,"now"],[708,38,788,36],[708,39,788,37],[708,40,788,38],[708,44,788,42,"Math"],[708,48,788,46],[708,49,788,47,"random"],[708,55,788,53],[708,56,788,54],[708,57,788,55],[708,59,788,57],[709,8,789,6,"name"],[709,12,789,10],[709,14,789,12],[709,26,789,24,"Math"],[709,30,789,28],[709,31,789,29,"floor"],[709,36,789,34],[709,37,789,35,"Math"],[709,41,789,39],[709,42,789,40,"random"],[709,48,789,46],[709,49,789,47],[709,50,789,48],[709,53,789,51],[709,56,789,54],[709,57,789,55],[709,59,789,57],[710,8,790,6,"health"],[710,14,790,12],[710,16,790,14],[710,18,790,16],[711,8,791,6,"maxHealth"],[711,17,791,15],[711,19,791,17],[711,21,791,19],[712,8,792,6,"stats"],[712,13,792,11],[712,15,792,13],[713,10,793,8,"attack"],[713,16,793,14],[713,18,793,16],[713,20,793,18],[714,10,794,8,"defense"],[714,17,794,15],[714,19,794,17],[714,21,794,19],[715,10,795,8,"health"],[715,16,795,14],[715,18,795,16],[715,20,795,18],[716,10,796,8,"maxHealth"],[716,19,796,17],[716,21,796,19],[716,23,796,21],[717,10,797,8,"critChance"],[717,20,797,18],[717,22,797,20],[717,23,797,21],[718,10,798,8,"critDamage"],[718,20,798,18],[718,22,798,20],[718,25,798,23],[719,10,799,8,"cooldownReduction"],[719,27,799,25],[719,29,799,27],[720,8,800,6],[720,9,800,7],[721,8,801,6,"position"],[721,16,801,14],[721,18,801,16],[722,10,801,18,"x"],[722,11,801,19],[723,10,801,21,"y"],[724,8,801,23],[724,9,801,24],[725,8,802,6,"lastDamaged"],[725,19,802,17],[725,21,802,19],[726,6,803,4],[726,7,803,5],[727,6,805,4,"console"],[727,13,805,11],[727,14,805,12,"log"],[727,17,805,15],[727,18,805,16],[727,42,805,40,"enemy"],[727,47,805,45],[727,48,805,46,"name"],[727,52,805,50],[727,60,805,58,"Math"],[727,64,805,62],[727,65,805,63,"round"],[727,70,805,68],[727,71,805,69,"x"],[727,72,805,70],[727,73,805,71],[727,78,805,76,"Math"],[727,82,805,80],[727,83,805,81,"round"],[727,88,805,86],[727,89,805,87,"y"],[727,90,805,88],[727,91,805,89],[727,94,805,92],[727,95,805,93],[728,6,806,4,"state"],[728,11,806,9],[728,12,806,10,"enemies"],[728,19,806,17],[728,20,806,18,"push"],[728,24,806,22],[728,25,806,23,"enemy"],[728,30,806,28],[728,31,806,29],[729,4,807,2],[729,5,807,3],[731,4,809,2],[732,4,810,2],[732,10,810,8,"startCombat"],[732,21,810,19],[732,24,810,22,"React"],[732,29,810,27],[732,30,810,27,"default"],[732,37,810,27],[732,38,810,28,"useCallback"],[732,49,810,39],[732,50,810,40],[732,56,810,46],[733,6,811,4,"console"],[733,13,811,11],[733,14,811,12,"log"],[733,17,811,15],[733,18,811,16],[733,63,811,61],[733,64,811,62],[734,6,812,4,"setCombatState"],[734,20,812,18],[734,21,812,19,"prev"],[734,25,812,23],[734,30,812,28],[735,8,812,30],[735,11,812,33,"prev"],[735,15,812,37],[736,8,812,39,"isInCombat"],[736,18,812,49],[736,20,812,51],[737,6,812,56],[737,7,812,57],[737,8,812,58],[737,9,812,59],[739,6,814,4],[740,6,815,4,"combatEngine"],[740,25,815,16],[740,26,815,16,"combatEngine"],[740,38,815,16],[740,39,815,17,"addTickCallback"],[740,54,815,32],[740,55,815,33,"handleCombatTick"],[740,71,815,49],[740,72,815,50],[741,6,816,4,"console"],[741,13,816,11],[741,14,816,12,"log"],[741,17,816,15],[741,18,816,16],[741,62,816,60],[741,63,816,61],[743,6,818,4],[744,6,819,4,"combatEngine"],[744,25,819,16],[744,26,819,16,"combatEngine"],[744,38,819,16],[744,39,819,17,"start"],[744,44,819,22],[744,45,819,23],[744,46,819,24],[745,4,820,2],[745,5,820,3],[745,7,820,5],[745,8,820,6,"combatEngine"],[745,27,820,18],[745,28,820,18,"combatEngine"],[745,40,820,18],[745,42,820,20,"handleCombatTick"],[745,58,820,36],[745,59,820,37],[745,60,820,38],[747,4,822,2],[748,4,823,2],[748,10,823,8,"stopCombat"],[748,20,823,18],[748,23,823,21,"React"],[748,28,823,26],[748,29,823,26,"default"],[748,36,823,26],[748,37,823,27,"useCallback"],[748,48,823,38],[748,49,823,39],[748,55,823,45],[749,6,824,4,"setCombatState"],[749,20,824,18],[749,21,824,19,"prev"],[749,25,824,23],[749,30,824,28],[750,8,824,30],[750,11,824,33,"prev"],[750,15,824,37],[751,8,824,39,"isInCombat"],[751,18,824,49],[751,20,824,51],[752,6,824,57],[752,7,824,58],[752,8,824,59],[752,9,824,60],[753,6,825,4,"combatEngine"],[753,25,825,16],[753,26,825,16,"combatEngine"],[753,38,825,16],[753,39,825,17,"removeTickCallback"],[753,57,825,35],[753,58,825,36,"handleCombatTick"],[753,74,825,52],[753,75,825,53],[754,4,826,2],[754,5,826,3],[754,7,826,5],[754,8,826,6,"combatEngine"],[754,27,826,18],[754,28,826,18,"combatEngine"],[754,40,826,18],[754,42,826,20,"handleCombatTick"],[754,58,826,36],[754,59,826,37],[754,60,826,38],[756,4,828,2],[757,4,829,2],[757,10,829,8,"equipAbility"],[757,22,829,20],[757,25,829,23,"equipAbility"],[757,26,829,24,"abilityId"],[757,35,829,41],[757,37,829,43,"slotIndex"],[757,46,829,60],[757,51,829,74],[758,6,830,4],[758,13,830,11,"combatState"],[758,24,830,22],[758,25,830,23,"abilityManager"],[758,39,830,37],[758,40,830,38,"equipAbility"],[758,52,830,50],[758,53,830,51,"abilityId"],[758,62,830,60],[758,64,830,62,"slotIndex"],[758,73,830,71],[758,74,830,72],[759,4,831,2],[759,5,831,3],[760,4,833,2],[760,10,833,8,"getDeck"],[760,17,833,15],[760,20,833,18,"getDeck"],[760,21,833,18],[760,26,833,24],[761,6,834,4],[761,13,834,11,"combatState"],[761,24,834,22],[761,25,834,23,"abilityManager"],[761,39,834,37],[761,40,834,38,"getDeck"],[761,47,834,45],[761,48,834,46],[761,49,834,47],[762,4,835,2],[762,5,835,3],[763,4,837,2],[763,10,837,8,"getAvailableAbilities"],[763,31,837,29],[763,34,837,32,"getAvailableAbilities"],[763,35,837,32],[763,40,837,38],[764,6,838,4],[764,13,838,11,"combatState"],[764,24,838,22],[764,25,838,23,"abilityManager"],[764,39,838,37],[764,40,838,38,"getAvailableAbilities"],[764,61,838,59],[764,62,838,60],[764,63,838,61],[765,4,839,2],[765,5,839,3],[766,4,841,2],[766,10,841,8,"upgradeAbility"],[766,24,841,22],[766,27,841,26,"abilityId"],[766,36,841,43],[766,40,841,57],[767,6,842,4],[767,13,842,11,"combatState"],[767,24,842,22],[767,25,842,23,"abilityManager"],[767,39,842,37],[767,40,842,38,"upgradeAbility"],[767,54,842,52],[767,55,842,53,"abilityId"],[767,64,842,62],[767,65,842,63],[768,4,843,2],[768,5,843,3],[770,4,845,2],[771,4,846,2],[771,10,846,8,"clearAllEnemies"],[771,25,846,23],[771,28,846,26,"clearAllEnemies"],[771,29,846,26],[771,34,846,32],[772,6,847,4,"console"],[772,13,847,11],[772,14,847,12,"log"],[772,17,847,15],[772,18,847,16],[772,67,847,65],[772,68,847,66],[773,6,848,4,"setCombatState"],[773,20,848,18],[773,21,848,19,"prev"],[773,25,848,23],[773,30,848,28],[774,8,849,6],[774,11,849,9,"prev"],[774,15,849,13],[775,8,850,6,"enemies"],[775,15,850,13],[775,17,850,15],[776,6,851,4],[776,7,851,5],[776,8,851,6],[776,9,851,7],[777,4,852,2],[777,5,852,3],[779,4,854,2],[780,4,855,2],[780,10,855,8,"triggerLevelUpExplosion"],[780,33,855,31],[780,36,855,34,"triggerLevelUpExplosion"],[780,37,855,34],[780,42,855,40],[781,6,856,4,"console"],[781,13,856,11],[781,14,856,12,"log"],[781,17,856,15],[781,18,856,16],[781,70,856,68],[781,71,856,69],[782,6,858,4],[782,12,858,10,"explosionTime"],[782,25,858,23],[782,28,858,26,"Date"],[782,32,858,30],[782,33,858,31,"now"],[782,36,858,34],[782,37,858,35],[782,38,858,36],[783,6,859,4,"setLastExplosionTime"],[783,26,859,24],[783,27,859,25,"explosionTime"],[783,40,859,38],[783,41,859,39],[784,6,861,4,"setCombatState"],[784,20,861,18],[784,21,861,19,"prev"],[784,25,861,23],[784,29,861,27],[785,8,862,6],[786,8,863,6],[786,14,863,12,"enemyCount"],[786,24,863,22],[786,27,863,25,"prev"],[786,31,863,29],[786,32,863,30,"enemies"],[786,39,863,37],[786,40,863,38,"length"],[786,46,863,44],[787,8,864,6],[787,14,864,12,"explosionXP"],[787,25,864,23],[787,28,864,26,"enemyCount"],[787,38,864,36],[787,41,864,39],[787,44,864,42],[787,45,864,43],[787,46,864,44],[788,8,865,6],[788,14,865,12,"explosionGold"],[788,27,865,25],[788,30,865,28,"enemyCount"],[788,40,865,38],[788,43,865,41],[788,46,865,44],[788,47,865,45],[788,48,865,46],[790,8,867,6,"console"],[790,15,867,13],[790,16,867,14,"log"],[790,19,867,17],[790,20,867,18],[790,44,867,42,"enemyCount"],[790,54,867,52],[790,76,867,74,"explosionXP"],[790,87,867,85],[790,98,867,96,"explosionGold"],[790,111,867,109],[790,118,867,116],[790,119,867,117],[792,8,869,6],[793,8,870,6],[793,12,870,10,"explosionXP"],[793,23,870,21],[793,26,870,24],[793,27,870,25],[793,29,870,27],[794,10,871,8,"setTimeout"],[794,20,871,18],[794,21,871,19],[794,27,871,25],[795,12,872,10,"game"],[795,16,872,14],[795,17,872,15,"updateNinja"],[795,28,872,26],[795,29,872,28,"ninja"],[795,34,872,33],[795,39,872,39],[796,14,873,12,"experience"],[796,24,873,22],[796,26,873,24,"ninja"],[796,31,873,29],[796,32,873,30,"experience"],[796,42,873,40],[796,45,873,43,"explosionXP"],[796,56,873,54],[797,14,874,12,"gold"],[797,18,874,16],[797,20,874,18,"ninja"],[797,25,874,23],[797,26,874,24,"gold"],[797,30,874,28],[797,33,874,31,"explosionGold"],[798,12,875,10],[798,13,875,11],[798,14,875,12],[798,15,875,13],[799,10,876,8],[799,11,876,9],[799,13,876,11],[799,14,876,12],[799,15,876,13],[799,16,876,14],[799,17,876,15],[800,8,877,6],[802,8,879,6],[803,8,880,6],[804,8,881,6],[804,14,881,12,"damagedEnemies"],[804,28,881,26],[804,31,881,29,"prev"],[804,35,881,33],[804,36,881,34,"enemies"],[804,43,881,41],[804,44,881,42,"map"],[804,47,881,45],[804,48,881,46,"enemy"],[804,53,881,51],[804,58,881,56],[805,10,882,8],[805,13,882,11,"enemy"],[805,18,882,16],[806,10,883,8,"health"],[806,16,883,14],[806,18,883,16],[806,19,883,17],[807,10,883,19],[808,10,884,8,"lastDamaged"],[808,21,884,19],[808,23,884,21,"combatEngine"],[808,42,884,33],[808,43,884,33,"combatEngine"],[808,55,884,33],[808,56,884,34,"getCurrentTick"],[808,70,884,48],[808,71,884,49],[809,8,885,6],[809,9,885,7],[809,10,885,8],[809,11,885,9],[810,8,887,6],[810,15,887,13],[811,10,888,8],[811,13,888,11,"prev"],[811,17,888,15],[812,10,889,8,"enemies"],[812,17,889,15],[812,19,889,17,"damagedEnemies"],[813,8,890,6],[813,9,890,7],[814,6,891,4],[814,7,891,5],[814,8,891,6],[815,4,892,2],[815,5,892,3],[817,4,894,2],[818,4,895,2],[818,10,895,8,"spawnEnemy"],[818,20,895,18],[818,23,895,22,"position"],[818,31,895,57],[818,35,895,75],[819,6,896,4],[819,12,896,10,"SCREEN_WIDTH"],[819,24,896,22],[819,27,896,25],[819,30,896,28],[820,6,897,4],[820,12,897,10,"GAME_AREA_HEIGHT"],[820,28,897,26],[820,31,897,29],[820,34,897,32],[820,37,897,35],[820,40,897,38],[820,41,897,39],[820,42,897,40],[821,6,898,4],[821,12,898,10,"ENEMY_SIZE"],[821,22,898,20],[821,25,898,23],[821,27,898,25],[823,6,900,4],[824,6,901,4],[824,12,901,10,"x"],[824,13,901,11],[824,16,901,14,"position"],[824,24,901,22],[824,26,901,24,"x"],[824,27,901,25],[824,31,901,29,"Math"],[824,35,901,33],[824,36,901,34,"random"],[824,42,901,40],[824,43,901,41],[824,44,901,42],[824,48,901,46,"SCREEN_WIDTH"],[824,60,901,58],[824,63,901,61,"ENEMY_SIZE"],[824,73,901,71],[824,76,901,74],[824,77,901,75],[824,78,901,76],[824,81,901,79,"ENEMY_SIZE"],[824,91,901,89],[825,6,902,4],[825,12,902,10,"y"],[825,13,902,11],[825,16,902,14,"position"],[825,24,902,22],[825,26,902,24,"y"],[825,27,902,25],[825,31,902,29,"Math"],[825,35,902,33],[825,36,902,34,"random"],[825,42,902,40],[825,43,902,41],[825,44,902,42],[825,48,902,46,"GAME_AREA_HEIGHT"],[825,64,902,62],[825,67,902,65,"ENEMY_SIZE"],[825,77,902,75],[825,80,902,78],[825,81,902,79],[825,82,902,80],[825,85,902,83,"ENEMY_SIZE"],[825,95,902,93],[826,6,904,4],[826,12,904,10,"enemy"],[826,17,904,28],[826,20,904,31],[827,8,905,6,"id"],[827,10,905,8],[827,12,905,10],[827,21,905,19],[827,23,905,21,"enemyCounter"],[827,35,905,33],[827,37,905,35],[828,8,906,6,"name"],[828,12,906,10],[828,14,906,12],[828,24,906,22],[829,8,907,6,"health"],[829,14,907,12],[829,16,907,14],[829,19,907,17],[830,8,908,6,"maxHealth"],[830,17,908,15],[830,19,908,17],[830,22,908,20],[831,8,909,6,"stats"],[831,13,909,11],[831,15,909,13],[832,10,910,8,"attack"],[832,16,910,14],[832,18,910,16],[832,20,910,18],[833,10,911,8,"defense"],[833,17,911,15],[833,19,911,17],[833,21,911,19],[834,10,912,8,"health"],[834,16,912,14],[834,18,912,16],[834,21,912,19],[835,10,913,8,"maxHealth"],[835,19,913,17],[835,21,913,19],[835,24,913,22],[836,10,914,8,"critChance"],[836,20,914,18],[836,22,914,20],[836,23,914,21],[837,10,915,8,"critDamage"],[837,20,915,18],[837,22,915,20],[837,25,915,23],[838,10,916,8,"cooldownReduction"],[838,27,916,25],[838,29,916,27],[839,8,917,6],[839,9,917,7],[840,8,918,6,"position"],[840,16,918,14],[840,18,918,16],[841,10,918,18,"x"],[841,11,918,19],[842,10,918,21,"y"],[843,8,918,23],[843,9,918,24],[844,8,919,6,"lastDamaged"],[844,19,919,17],[844,21,919,19],[845,6,920,4],[845,7,920,5],[846,6,922,4,"setCombatState"],[846,20,922,18],[846,21,922,19,"prev"],[846,25,922,23],[846,30,922,28],[847,8,923,6],[847,11,923,9,"prev"],[847,15,923,13],[848,8,924,6,"enemies"],[848,15,924,13],[848,17,924,15],[848,18,924,16],[848,21,924,19,"prev"],[848,25,924,23],[848,26,924,24,"enemies"],[848,33,924,31],[848,35,924,33,"enemy"],[848,40,924,38],[849,6,925,4],[849,7,925,5],[849,8,925,6],[849,9,925,7],[850,6,927,4],[850,13,927,11,"enemy"],[850,18,927,16],[851,4,928,2],[851,5,928,3],[853,4,930,2],[854,4,931,2],[854,10,931,8,"spawnBoss"],[854,19,931,17],[854,22,931,21,"bossEnemy"],[854,31,931,43],[854,35,931,48],[855,6,932,4,"console"],[855,13,932,11],[855,14,932,12,"log"],[855,17,932,15],[855,18,932,16],[855,39,932,37,"bossEnemy"],[855,48,932,46],[855,49,932,47,"name"],[855,53,932,51],[855,90,932,88],[855,91,932,89],[856,6,933,4,"setCombatState"],[856,20,933,18],[856,21,933,19,"prev"],[856,25,933,23],[856,30,933,28],[857,8,934,6],[857,11,934,9,"prev"],[857,15,934,13],[858,8,935,6,"enemies"],[858,15,935,13],[858,17,935,15],[858,18,935,16,"bossEnemy"],[858,27,935,25],[858,28,935,26],[858,29,935,27],[859,6,936,4],[859,7,936,5],[859,8,936,6],[859,9,936,7],[860,4,937,2],[860,5,937,3],[862,4,939,2],[863,4,940,2],[863,10,940,8,"clearSpecificEnemy"],[863,28,940,26],[863,31,940,30,"enemyId"],[863,38,940,45],[863,42,940,50],[864,6,941,4,"setCombatState"],[864,20,941,18],[864,21,941,19,"prev"],[864,25,941,23],[864,30,941,28],[865,8,942,6],[865,11,942,9,"prev"],[865,15,942,13],[866,8,943,6,"enemies"],[866,15,943,13],[866,17,943,15,"prev"],[866,21,943,19],[866,22,943,20,"enemies"],[866,29,943,27],[866,30,943,28,"filter"],[866,36,943,34],[866,37,943,35,"enemy"],[866,42,943,40],[866,46,943,44,"enemy"],[866,51,943,49],[866,52,943,50,"id"],[866,54,943,52],[866,59,943,57,"enemyId"],[866,66,943,64],[867,6,944,4],[867,7,944,5],[867,8,944,6],[867,9,944,7],[868,4,945,2],[868,5,945,3],[870,4,947,2],[871,4,948,2],[871,10,948,8,"useAbilityManually"],[871,28,948,26],[871,31,948,29],[871,35,948,29,"useCallback"],[871,41,948,40],[871,42,948,40,"useCallback"],[871,53,948,40],[871,55,948,42,"slotIndex"],[871,64,948,59],[871,68,948,73],[872,6,949,4,"console"],[872,13,949,11],[872,14,949,12,"log"],[872,17,949,15],[872,18,949,16],[872,53,949,51,"slotIndex"],[872,62,949,60],[872,64,949,62],[872,65,949,63],[874,6,951,4],[875,6,952,4],[875,12,952,10,"isReady"],[875,19,952,17],[875,22,952,20,"combatState"],[875,33,952,31],[875,34,952,32,"abilityManager"],[875,48,952,46],[875,49,952,47,"isAbilityReady"],[875,63,952,61],[875,64,952,62,"slotIndex"],[875,73,952,71],[875,74,952,72],[876,6,953,4],[876,10,953,8],[876,11,953,9,"isReady"],[876,18,953,16],[876,20,953,18],[877,8,954,6,"console"],[877,15,954,13],[877,16,954,14,"log"],[877,19,954,17],[877,20,954,18],[877,41,954,39,"slotIndex"],[877,50,954,48],[877,85,954,83],[877,86,954,84],[878,8,955,6],[878,15,955,13],[878,20,955,18],[879,6,956,4],[881,6,958,4],[882,6,959,4],[882,10,959,8,"combatState"],[882,21,959,19],[882,22,959,20,"enemies"],[882,29,959,27],[882,30,959,28,"length"],[882,36,959,34],[882,41,959,39],[882,42,959,40],[882,44,959,42],[883,8,960,6,"console"],[883,15,960,13],[883,16,960,14,"log"],[883,19,960,17],[883,20,960,18],[883,69,960,67],[883,70,960,68],[884,8,961,6],[884,15,961,13],[884,20,961,18],[885,6,962,4],[887,6,964,4],[888,6,965,4],[888,12,965,10,"currentTick"],[888,23,965,21],[888,26,965,24,"combatEngine"],[888,45,965,36],[888,46,965,36,"combatEngine"],[888,58,965,36],[888,59,965,37,"getCurrentTick"],[888,73,965,51],[888,74,965,52],[888,75,965,53],[889,6,966,4],[889,12,966,10,"success"],[889,19,966,17],[889,22,966,20,"combatState"],[889,33,966,31],[889,34,966,32,"abilityManager"],[889,48,966,46],[889,49,966,47,"useAbility"],[889,59,966,57],[889,60,966,58,"slotIndex"],[889,69,966,67],[889,71,966,69,"currentTick"],[889,82,966,80],[889,83,966,81],[890,6,968,4],[890,10,968,8,"success"],[890,17,968,15],[890,19,968,17],[891,8,969,6],[892,8,970,6,"setCombatState"],[892,22,970,20],[892,23,970,21,"prev"],[892,27,970,25],[892,31,970,29],[893,10,971,8],[893,16,971,14,"newState"],[893,24,971,22],[893,27,971,25],[894,12,971,27],[894,15,971,30,"prev"],[895,10,971,35],[895,11,971,36],[896,10,972,8,"castAbility"],[896,21,972,19],[896,22,972,20,"newState"],[896,30,972,28],[896,32,972,30,"slotIndex"],[896,41,972,39],[896,42,972,40],[897,10,973,8],[897,17,973,15,"newState"],[897,25,973,23],[898,8,974,6],[898,9,974,7],[898,10,974,8],[899,8,976,6,"console"],[899,15,976,13],[899,16,976,14,"log"],[899,19,976,17],[899,20,976,18],[899,65,976,63,"slotIndex"],[899,74,976,72],[899,76,976,74],[899,77,976,75],[900,8,977,6],[900,15,977,13],[900,19,977,17],[901,6,978,4],[901,7,978,5],[901,13,978,11],[902,8,979,6,"console"],[902,15,979,13],[902,16,979,14,"log"],[902,19,979,17],[902,20,979,18],[902,61,979,59,"slotIndex"],[902,70,979,68],[902,72,979,70],[902,73,979,71],[903,8,980,6],[903,15,980,13],[903,20,980,18],[904,6,981,4],[905,4,982,2],[905,5,982,3],[905,7,982,5],[905,8,982,6,"combatState"],[905,19,982,17],[905,20,982,18,"abilityManager"],[905,34,982,32],[905,36,982,34,"combatState"],[905,47,982,45],[905,48,982,46,"enemies"],[905,55,982,53],[905,56,982,54],[905,57,982,55],[906,4,983,2],[906,8,983,2,"useEffect"],[906,14,983,11],[906,15,983,11,"useEffect"],[906,24,983,11],[906,26,983,12],[906,32,983,18],[907,6,984,4,"combatEngine"],[907,25,984,16],[907,26,984,16,"combatEngine"],[907,38,984,16],[907,39,984,17,"start"],[907,44,984,22],[907,45,984,23],[907,46,984,24],[909,6,986,4],[910,6,987,4],[911,6,988,4,"console"],[911,13,988,11],[911,14,988,12,"log"],[911,17,988,15],[911,18,988,16],[911,97,988,95],[911,98,988,96],[912,6,990,4],[912,13,990,11],[912,19,990,17],[913,8,991,6,"combatEngine"],[913,27,991,18],[913,28,991,18,"combatEngine"],[913,40,991,18],[913,41,991,19,"stop"],[913,45,991,23],[913,46,991,24],[913,47,991,25],[914,6,992,4],[914,7,992,5],[915,4,993,2],[915,5,993,3],[915,7,993,5],[915,9,993,7],[915,10,993,8],[917,4,995,2],[918,4,996,2],[918,8,996,2,"useEffect"],[918,14,996,11],[918,15,996,11,"useEffect"],[918,24,996,11],[918,26,996,12],[918,32,996,18],[919,6,997,4],[919,12,997,10,"processProjectileImpacts"],[919,36,997,34],[919,39,997,37,"processProjectileImpacts"],[919,40,997,37],[919,45,997,43],[920,8,998,6,"setProjectiles"],[920,22,998,20],[920,23,998,21,"currentProjectiles"],[920,41,998,39],[920,45,998,43],[921,10,999,8],[921,17,999,15,"currentProjectiles"],[921,35,999,33],[921,36,999,34,"map"],[921,39,999,37],[921,40,999,38,"projectile"],[921,50,999,48],[921,54,999,52],[922,12,1000,10],[922,16,1000,14],[922,17,1000,15,"projectile"],[922,27,1000,25],[922,29,1000,27],[922,36,1000,34],[922,40,1000,38],[924,12,1002,10],[925,12,1003,10],[925,18,1003,16,"currentTime"],[925,29,1003,27],[925,32,1003,30,"Date"],[925,36,1003,34],[925,37,1003,35,"now"],[925,40,1003,38],[925,41,1003,39],[925,42,1003,40],[926,12,1004,10],[926,18,1004,16,"startTime"],[926,27,1004,25],[926,30,1004,28,"projectile"],[926,40,1004,38],[926,41,1004,39,"startTime"],[926,50,1004,48],[926,54,1004,52,"currentTime"],[926,65,1004,63],[927,12,1005,10],[927,18,1005,16,"elapsedTime"],[927,29,1005,27],[927,32,1005,30,"currentTime"],[927,43,1005,41],[927,46,1005,44,"startTime"],[927,55,1005,53],[928,12,1006,10],[928,18,1006,16,"progress"],[928,26,1006,24],[928,29,1006,27,"Math"],[928,33,1006,31],[928,34,1006,32,"min"],[928,37,1006,35],[928,38,1006,36,"elapsedTime"],[928,49,1006,47],[928,53,1006,51,"projectile"],[928,63,1006,61],[928,64,1006,62,"duration"],[928,72,1006,70],[928,76,1006,74],[928,79,1006,77],[928,80,1006,78],[928,82,1006,80],[928,83,1006,81],[928,84,1006,82],[930,12,1008,10],[931,12,1009,10],[931,16,1009,14,"progress"],[931,24,1009,22],[931,28,1009,26],[931,29,1009,27],[931,33,1009,31],[931,34,1009,32,"projectile"],[931,44,1009,42],[931,45,1009,43,"hasHit"],[931,51,1009,49],[931,53,1009,51],[932,14,1010,12,"projectile"],[932,24,1010,22],[932,25,1010,23,"hasHit"],[932,31,1010,29],[932,34,1010,32],[932,38,1010,36],[933,14,1012,12,"console"],[933,21,1012,19],[933,22,1012,20,"log"],[933,25,1012,23],[933,26,1012,24],[933,51,1012,49,"projectile"],[933,61,1012,59],[933,62,1012,60,"abilityName"],[933,73,1012,71],[933,87,1012,85,"projectile"],[933,97,1012,95],[933,98,1012,96,"targetEnemyId"],[933,111,1012,109],[933,119,1012,117,"projectile"],[933,129,1012,127],[933,130,1012,128,"damage"],[933,136,1012,134],[933,145,1012,143],[933,146,1012,144],[935,14,1014,12],[936,14,1015,12,"setCombatState"],[936,28,1015,26],[936,29,1015,27,"prev"],[936,33,1015,31],[936,37,1015,35],[937,16,1016,14],[937,22,1016,20,"newState"],[937,30,1016,28],[937,33,1016,31],[938,18,1016,33],[938,21,1016,36,"prev"],[939,16,1016,41],[939,17,1016,42],[940,16,1017,14],[940,22,1017,20,"enemyIndex"],[940,32,1017,30],[940,35,1017,33,"newState"],[940,43,1017,41],[940,44,1017,42,"enemies"],[940,51,1017,49],[940,52,1017,50,"findIndex"],[940,61,1017,59],[940,62,1017,60,"e"],[940,63,1017,61],[940,67,1017,65,"e"],[940,68,1017,66],[940,69,1017,67,"id"],[940,71,1017,69],[940,76,1017,74,"projectile"],[940,86,1017,84],[940,87,1017,85,"targetEnemyId"],[940,100,1017,98],[940,101,1017,99],[941,16,1019,14],[941,20,1019,18,"enemyIndex"],[941,30,1019,28],[941,34,1019,32],[941,35,1019,33],[941,39,1019,37,"newState"],[941,47,1019,45],[941,48,1019,46,"enemies"],[941,55,1019,53],[941,56,1019,54,"enemyIndex"],[941,66,1019,64],[941,67,1019,65],[941,68,1019,66,"health"],[941,74,1019,72],[941,77,1019,75],[941,78,1019,76],[941,80,1019,78],[942,18,1020,16,"newState"],[942,26,1020,24],[942,27,1020,25,"enemies"],[942,34,1020,32],[942,37,1020,35],[942,38,1020,36],[942,41,1020,39,"newState"],[942,49,1020,47],[942,50,1020,48,"enemies"],[942,57,1020,55],[942,58,1020,56],[943,18,1021,16],[943,24,1021,22,"enemy"],[943,29,1021,27],[943,32,1021,30,"newState"],[943,40,1021,38],[943,41,1021,39,"enemies"],[943,48,1021,46],[943,49,1021,47,"enemyIndex"],[943,59,1021,57],[943,60,1021,58],[944,18,1022,16],[944,24,1022,22,"newHealth"],[944,33,1022,31],[944,36,1022,34,"Math"],[944,40,1022,38],[944,41,1022,39,"max"],[944,44,1022,42],[944,45,1022,43],[944,46,1022,44],[944,48,1022,46,"enemy"],[944,53,1022,51],[944,54,1022,52,"health"],[944,60,1022,58],[944,63,1022,61,"projectile"],[944,73,1022,71],[944,74,1022,72,"damage"],[944,80,1022,78],[944,81,1022,79],[945,18,1024,16,"newState"],[945,26,1024,24],[945,27,1024,25,"enemies"],[945,34,1024,32],[945,35,1024,33,"enemyIndex"],[945,45,1024,43],[945,46,1024,44],[945,49,1024,47],[946,20,1025,18],[946,23,1025,21,"enemy"],[946,28,1025,26],[947,20,1026,18,"health"],[947,26,1026,24],[947,28,1026,26,"newHealth"],[947,37,1026,35],[948,20,1027,18,"lastDamaged"],[948,31,1027,29],[948,33,1027,31,"combatEngine"],[948,52,1027,43],[948,53,1027,43,"combatEngine"],[948,65,1027,43],[948,66,1027,44,"getCurrentTick"],[948,80,1027,58],[948,81,1027,59],[949,18,1028,16],[949,19,1028,17],[950,18,1030,16,"console"],[950,25,1030,23],[950,26,1030,24,"log"],[950,29,1030,27],[950,30,1030,28],[950,52,1030,50,"enemy"],[950,57,1030,55],[950,58,1030,56,"name"],[950,62,1030,60],[950,74,1030,72,"newHealth"],[950,83,1030,81],[950,87,1030,85,"enemy"],[950,92,1030,90],[950,93,1030,91,"maxHealth"],[950,102,1030,100],[950,104,1030,102],[950,105,1030,103],[952,18,1032,16],[953,18,1033,16],[953,22,1033,20,"newHealth"],[953,31,1033,29],[953,35,1033,33],[953,36,1033,34],[953,40,1033,38,"enemy"],[953,45,1033,43],[953,46,1033,44,"health"],[953,52,1033,50],[953,55,1033,53],[953,56,1033,54],[953,58,1033,56],[954,20,1034,18,"console"],[954,27,1034,25],[954,28,1034,26,"log"],[954,31,1034,29],[954,32,1034,30],[954,55,1034,53,"enemy"],[954,60,1034,58],[954,61,1034,59,"name"],[954,65,1034,63],[954,79,1034,77,"projectile"],[954,89,1034,87],[954,90,1034,88,"abilityName"],[954,101,1034,99],[954,104,1034,102],[954,105,1034,103],[955,20,1035,18,"setTimeout"],[955,30,1035,28],[955,31,1035,29],[955,37,1035,35,"handleEnemyKill"],[955,52,1035,50],[955,53,1035,51,"enemy"],[955,58,1035,56],[955,59,1035,57],[955,61,1035,59],[955,62,1035,60],[955,63,1035,61],[956,18,1036,16],[957,16,1037,14],[958,16,1039,14],[958,23,1039,21,"newState"],[958,31,1039,29],[959,14,1040,12],[959,15,1040,13],[959,16,1040,14],[960,12,1041,10],[962,12,1043,10],[963,12,1044,10],[963,16,1044,14,"progress"],[963,24,1044,22],[963,28,1044,26],[963,31,1044,29],[963,33,1044,31],[964,14,1045,12],[964,21,1045,19],[964,25,1045,23],[965,12,1046,10],[966,12,1048,10],[966,19,1048,17,"projectile"],[966,29,1048,27],[967,10,1049,8],[967,11,1049,9],[967,12,1049,10],[967,13,1049,11,"filter"],[967,19,1049,17],[967,20,1049,18,"Boolean"],[967,27,1049,25],[967,28,1049,26],[968,8,1050,6],[968,9,1050,7],[968,10,1050,8],[969,6,1051,4],[969,7,1051,5],[971,6,1053,4],[972,6,1054,4],[972,12,1054,10,"impactInterval"],[972,26,1054,24],[972,29,1054,27,"setInterval"],[972,40,1054,38],[972,41,1054,39,"processProjectileImpacts"],[972,65,1054,63],[972,67,1054,65],[972,69,1054,67],[972,70,1054,68],[973,6,1055,4],[973,13,1055,11],[973,19,1055,17,"clearInterval"],[973,32,1055,30],[973,33,1055,31,"impactInterval"],[973,47,1055,45],[973,48,1055,46],[974,4,1056,2],[974,5,1056,3],[974,7,1056,5],[974,8,1056,6,"handleEnemyKill"],[974,23,1056,21],[974,24,1056,22],[974,25,1056,23],[976,4,1058,2],[977,4,1059,2],[977,10,1059,8,"saveAbilityData"],[977,25,1059,23],[977,28,1059,26],[977,32,1059,26,"useCallback"],[977,38,1059,37],[977,39,1059,37,"useCallback"],[977,50,1059,37],[977,52,1059,38],[977,58,1059,44],[978,6,1060,4],[978,10,1060,8,"combatState"],[978,21,1060,19],[978,22,1060,20,"abilityManager"],[978,36,1060,34],[978,38,1060,36],[979,8,1061,6],[979,14,1061,12,"abilityData"],[979,25,1061,23],[979,28,1061,26,"combatState"],[979,39,1061,37],[979,40,1061,38,"abilityManager"],[979,54,1061,52],[979,55,1061,53,"getSaveData"],[979,66,1061,64],[979,67,1061,65],[979,68,1061,66],[980,8,1062,6,"console"],[980,15,1062,13],[980,16,1062,14,"log"],[980,19,1062,17],[980,20,1062,18],[980,70,1062,68],[980,72,1062,70,"abilityData"],[980,83,1062,81],[980,84,1062,82],[981,8,1063,6,"game"],[981,12,1063,10],[981,13,1063,11,"updateAbilityData"],[981,30,1063,28],[981,31,1063,29,"abilityData"],[981,42,1063,40],[981,43,1063,41],[982,6,1064,4],[983,4,1065,2],[983,5,1065,3],[983,7,1065,5],[983,8,1065,6,"combatState"],[983,19,1065,17],[983,20,1065,18,"abilityManager"],[983,34,1065,32],[983,36,1065,34,"game"],[983,40,1065,38],[983,41,1065,39,"updateAbilityData"],[983,58,1065,56],[983,59,1065,57],[983,60,1065,58],[984,4,1067,2],[984,10,1067,8,"contextValue"],[984,22,1067,39],[984,25,1067,42,"React"],[984,30,1067,47],[984,31,1067,47,"default"],[984,38,1067,47],[984,39,1067,48,"useMemo"],[984,46,1067,55],[984,47,1067,56],[984,54,1067,63],[985,6,1068,4,"combatState"],[985,17,1068,15],[986,6,1069,4,"projectiles"],[986,17,1069,15],[987,6,1070,4,"startCombat"],[987,17,1070,15],[988,6,1071,4,"stopCombat"],[988,16,1071,14],[989,6,1072,4,"equipAbility"],[989,18,1072,16],[990,6,1073,4,"handleEnemyKill"],[990,21,1073,19],[991,6,1074,4,"getDeck"],[991,13,1074,11],[992,6,1075,4,"getAvailableAbilities"],[992,27,1075,25],[993,6,1076,4,"upgradeAbility"],[993,20,1076,18],[994,6,1077,4,"spawnEnemy"],[994,16,1077,14],[995,6,1078,4,"spawnBoss"],[995,15,1078,13],[996,6,1079,4,"clearAllEnemies"],[996,21,1079,19],[997,6,1080,4,"clearSpecificEnemy"],[997,24,1080,22],[998,6,1081,4,"triggerLevelUpExplosion"],[998,29,1081,27],[999,6,1082,4,"findClosestEnemy"],[999,22,1082,20],[1000,6,1083,4,"updateNinjaPosition"],[1000,25,1083,23],[1001,6,1084,4,"setManualControlActive"],[1001,28,1084,26],[1002,6,1085,4,"lastExplosionTime"],[1002,23,1085,21],[1003,6,1086,4,"useAbilityManually"],[1003,24,1086,22],[1004,6,1086,24],[1005,6,1087,4,"saveAbilityData"],[1005,21,1087,19],[1006,6,1087,21],[1007,6,1088,4,"shadowClone"],[1007,17,1088,15],[1007,19,1088,17,"combatState"],[1007,30,1088,28],[1007,31,1088,29,"shadowClone"],[1007,42,1088,40],[1007,43,1088,42],[1008,4,1089,2],[1008,5,1089,3],[1008,6,1089,4],[1008,8,1089,6],[1009,4,1090,4],[1010,4,1091,4],[1011,4,1092,4,"combatState"],[1011,15,1092,15],[1011,17,1093,4,"projectiles"],[1011,28,1093,15],[1011,30,1094,4,"lastExplosionTime"],[1011,47,1094,21],[1012,4,1095,4],[1013,4,1096,4,"combatState"],[1013,15,1096,15],[1013,16,1096,16,"abilityManager"],[1013,30,1096,30],[1013,32,1097,4,"combatState"],[1013,43,1097,15],[1013,44,1097,16,"enemies"],[1013,51,1097,23],[1013,53,1098,4,"combatState"],[1013,64,1098,15],[1013,65,1098,16,"shadowClone"],[1013,76,1098,27],[1014,4,1098,29],[1015,4,1099,4,"useAbilityManually"],[1015,22,1099,22],[1016,4,1099,24],[1017,4,1100,4,"saveAbilityData"],[1017,19,1100,19],[1017,20,1100,21],[1018,4,1100,21],[1018,5,1101,3],[1018,6,1101,4],[1019,4,1103,2],[1019,24,1104,4],[1019,28,1104,4,"_reactJsxDevRuntime"],[1019,47,1104,4],[1019,48,1104,4,"jsxDEV"],[1019,54,1104,4],[1019,56,1104,5,"CombatContext"],[1019,69,1104,18],[1019,70,1104,19,"Provider"],[1019,78,1104,27],[1020,6,1104,28,"value"],[1020,11,1104,33],[1020,13,1104,35,"contextValue"],[1020,25,1104,48],[1021,6,1104,48,"children"],[1021,14,1104,48],[1021,16,1105,7,"children"],[1022,4,1105,15],[1023,6,1105,15,"fileName"],[1023,14,1105,15],[1023,16,1105,15,"_jsxFileName"],[1023,28,1105,15],[1024,6,1105,15,"lineNumber"],[1024,16,1105,15],[1025,6,1105,15,"columnNumber"],[1025,18,1105,15],[1026,4,1105,15],[1026,11,1106,28],[1026,12,1106,29],[1027,2,1108,0],[1027,3,1108,1],[1028,0,1108,2],[1028,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BNyD;mBMG;ORgC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}