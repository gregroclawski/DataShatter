{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return EventEmitter;\n    }\n  });\n  class EventEmitter {\n    #registry;\n    constructor() {\n      this.#registry = {};\n    }\n    addListener(eventType, listener, context) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('EventEmitter.addListener(...): 2nd argument must be a function.');\n      }\n      const registrations = allocate(this.#registry, eventType);\n      const registration = {\n        context,\n        listener,\n        remove() {\n          registrations.delete(registration);\n        }\n      };\n      registrations.add(registration);\n      return registration;\n    }\n    emit(eventType, ...args) {\n      const registrations = this.#registry[eventType];\n      if (registrations != null) {\n        for (const registration of Array.from(registrations)) {\n          registration.listener.apply(registration.context, args);\n        }\n      }\n    }\n    removeAllListeners(eventType) {\n      if (eventType == null) {\n        this.#registry = {};\n      } else {\n        delete this.#registry[eventType];\n      }\n    }\n    listenerCount(eventType) {\n      const registrations = this.#registry[eventType];\n      return registrations == null ? 0 : registrations.size;\n    }\n  }\n  function allocate(registry, eventType) {\n    let registrations = registry[eventType];\n    if (registrations == null) {\n      registrations = new Set();\n      registry[eventType] = registrations;\n    }\n    return registrations;\n  }\n});","lineCount":61,"map":[[7,2,69,15,"Object"],[7,8,69,15],[7,9,69,15,"defineProperty"],[7,23,69,15],[7,24,69,15,"exports"],[7,31,69,15],[8,4,69,15,"enumerable"],[8,14,69,15],[9,4,69,15,"get"],[9,7,69,15],[9,18,69,15,"get"],[9,19,69,15],[10,6,69,15],[10,13,69,15,"EventEmitter"],[10,25,69,15],[11,4,69,15],[12,2,69,15],[13,2,69,15],[13,8,69,21,"EventEmitter"],[13,20,69,33],[13,21,74,0],[14,4,75,2],[14,5,75,3,"registry"],[14,13,75,11],[15,4,77,2,"constructor"],[15,15,77,13,"constructor"],[15,16,77,13],[15,18,77,16],[16,6,79,4],[16,10,79,8],[16,11,79,9],[16,12,79,10,"registry"],[16,20,79,18],[16,23,79,21],[16,24,79,22],[16,25,79,23],[17,4,80,2],[18,4,86,2,"addListener"],[18,15,86,13,"addListener"],[18,16,87,4,"eventType"],[18,25,87,21],[18,27,88,4,"listener"],[18,35,88,57],[18,37,89,4,"context"],[18,44,89,18],[18,46,90,23],[19,6,91,4],[19,10,91,8],[19,17,91,15,"listener"],[19,25,91,23],[19,30,91,28],[19,40,91,38],[19,42,91,40],[20,8,92,6],[20,14,92,12],[20,18,92,16,"TypeError"],[20,27,92,25],[20,28,93,8],[20,93,94,6],[20,94,94,7],[21,6,95,4],[22,6,96,4],[22,12,96,10,"registrations"],[22,25,96,23],[22,28,96,26,"allocate"],[22,36,96,34],[22,37,100,6],[22,41,100,10],[22,42,100,11],[22,43,100,12,"registry"],[22,51,100,20],[22,53,100,22,"eventType"],[22,62,100,31],[22,63,100,32],[23,6,101,4],[23,12,101,10,"registration"],[23,24,101,61],[23,27,101,64],[24,8,102,6,"context"],[24,15,102,13],[25,8,103,6,"listener"],[25,16,103,14],[26,8,104,6,"remove"],[26,14,104,12,"remove"],[26,15,104,12],[26,17,104,21],[27,10,105,8,"registrations"],[27,23,105,21],[27,24,105,22,"delete"],[27,30,105,28],[27,31,105,29,"registration"],[27,43,105,41],[27,44,105,42],[28,8,106,6],[29,6,107,4],[29,7,107,5],[30,6,108,4,"registrations"],[30,19,108,17],[30,20,108,18,"add"],[30,23,108,21],[30,24,108,22,"registration"],[30,36,108,34],[30,37,108,35],[31,6,109,4],[31,13,109,11,"registration"],[31,25,109,23],[32,4,110,2],[33,4,119,2,"emit"],[33,8,119,6,"emit"],[33,9,120,4,"eventType"],[33,18,120,21],[33,20,121,4],[33,23,121,7,"args"],[33,27,121,36],[33,29,122,10],[34,6,123,4],[34,12,123,10,"registrations"],[34,25,123,68],[34,28,124,6],[34,32,124,10],[34,33,124,11],[34,34,124,12,"registry"],[34,42,124,20],[34,43,124,21,"eventType"],[34,52,124,30],[34,53,124,31],[35,6,125,4],[35,10,125,8,"registrations"],[35,23,125,21],[35,27,125,25],[35,31,125,29],[35,33,125,31],[36,8,128,6],[36,13,128,11],[36,19,128,17,"registration"],[36,31,128,29],[36,35,128,33,"Array"],[36,40,128,38],[36,41,128,39,"from"],[36,45,128,43],[36,46,128,44,"registrations"],[36,59,128,57],[36,60,128,58],[36,62,128,60],[37,10,130,8,"registration"],[37,22,130,20],[37,23,130,21,"listener"],[37,31,130,29],[37,32,130,30,"apply"],[37,37,130,35],[37,38,130,36,"registration"],[37,50,130,48],[37,51,130,49,"context"],[37,58,130,56],[37,60,130,58,"args"],[37,64,130,62],[37,65,130,63],[38,8,131,6],[39,6,132,4],[40,4,133,2],[41,4,138,2,"removeAllListeners"],[41,22,138,20,"removeAllListeners"],[41,23,139,4,"eventType"],[41,32,139,23],[41,34,140,10],[42,6,141,4],[42,10,141,8,"eventType"],[42,19,141,17],[42,23,141,21],[42,27,141,25],[42,29,141,27],[43,8,143,6],[43,12,143,10],[43,13,143,11],[43,14,143,12,"registry"],[43,22,143,20],[43,25,143,23],[43,26,143,24],[43,27,143,25],[44,6,144,4],[44,7,144,5],[44,13,144,11],[45,8,145,6],[45,15,145,13],[45,19,145,17],[45,20,145,18],[45,21,145,19,"registry"],[45,29,145,27],[45,30,145,28,"eventType"],[45,39,145,37],[45,40,145,38],[46,6,146,4],[47,4,147,2],[48,4,152,2,"listenerCount"],[48,17,152,15,"listenerCount"],[48,18,152,48,"eventType"],[48,27,152,65],[48,29,152,75],[49,6,153,4],[49,12,153,10,"registrations"],[49,25,153,68],[49,28,154,6],[49,32,154,10],[49,33,154,11],[49,34,154,12,"registry"],[49,42,154,20],[49,43,154,21,"eventType"],[49,52,154,30],[49,53,154,31],[50,6,155,4],[50,13,155,11,"registrations"],[50,26,155,24],[50,30,155,28],[50,34,155,32],[50,37,155,35],[50,38,155,36],[50,41,155,39,"registrations"],[50,54,155,52],[50,55,155,53,"size"],[50,59,155,57],[51,4,156,2],[52,2,157,0],[53,2,159,0],[53,11,159,9,"allocate"],[53,19,159,17,"allocate"],[53,20,164,2,"registry"],[53,28,164,37],[53,30,165,2,"eventType"],[53,39,165,19],[53,41,166,46],[54,4,167,2],[54,8,167,6,"registrations"],[54,21,167,64],[54,24,168,4,"registry"],[54,32,168,12],[54,33,168,13,"eventType"],[54,42,168,22],[54,43,168,23],[55,4,169,2],[55,8,169,6,"registrations"],[55,21,169,19],[55,25,169,23],[55,29,169,27],[55,31,169,29],[56,6,170,4,"registrations"],[56,19,170,17],[56,22,170,20],[56,26,170,24,"Set"],[56,29,170,27],[56,30,170,28],[56,31,170,29],[57,6,171,4,"registry"],[57,14,171,12],[57,15,171,13,"eventType"],[57,24,171,22],[57,25,171,23],[57,28,171,26,"registrations"],[57,41,171,39],[58,4,172,2],[59,4,173,2],[59,11,173,9,"registrations"],[59,24,173,22],[60,2,174,0],[61,0,174,1],[61,3]],"functionMap":{"names":["<global>","EventEmitter","constructor","addListener","registration.remove","emit","removeAllListeners","listenerCount","allocate"],"mappings":"AAA;eCoE;ECQ;GDG;EEM;MCkB;ODE;GFI;EIS;GJc;EKK;GLS;EMK;GNI;CDC;AQE"},"hasCjsExports":false},"type":"js/module"}]}