{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // For AOE abilities, create a SINGLE projectile targeting the closest enemy\n        // When it hits, it will damage ALL enemies in the AOE radius\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n\n        // Create single AOE projectile\n        createProjectile(target, damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        }, true, ability.stats.aoeRadius); // Pass AOE flags\n\n        console.log(`🎯 ${ability.name} AOE projectile created targeting ${target.name} with ${ability.stats.aoeRadius} radius`);\n        console.log(`🎯 AOE DEBUG: damage=${damage}, isAOE=true, aoeRadius=${ability.stats.aoeRadius}`);\n      } else {\n        // Single target ability (original logic)\n        var _target = findClosestEnemyInternal(state.enemies);\n        if (!_target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, _target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(_target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1122,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1178,2],[27,6,1178,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1178,2],[27,42,1178,2,"require"],[27,49,1178,2],[27,50,1178,2,"_dependencyMap"],[27,64,1178,2],[28,2,1178,2],[28,6,1178,2,"_slicedToArray"],[28,20,1178,2],[28,23,1178,2,"_interopDefault"],[28,38,1178,2],[28,39,1178,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1178,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,73,173,71],[135,75,173,73,"enemy"],[135,80,173,78],[135,81,173,79,"id"],[135,83,173,81],[135,84,173,82],[137,6,175,4],[138,6,176,4],[138,10,176,10,"baseXpReward"],[138,22,176,22],[138,25,176,25],[138,28,176,28],[138,29,176,29],[138,30,176,30],[139,6,177,4],[139,10,177,10,"xpMultiplier"],[139,22,177,22],[139,25,177,25,"game"],[139,29,177,29],[139,30,177,30,"gameState"],[139,39,177,39],[139,40,177,40,"subscriptionBenefits"],[139,60,177,60],[139,62,177,62,"xp_multiplier"],[139,75,177,75],[139,79,177,79],[139,82,177,82],[140,6,178,4],[140,10,178,10,"dropMultiplier"],[140,24,178,24],[140,27,178,27,"game"],[140,31,178,31],[140,32,178,32,"gameState"],[140,41,178,41],[140,42,178,42,"subscriptionBenefits"],[140,62,178,62],[140,64,178,64,"drop_multiplier"],[140,79,178,79],[140,83,178,83],[140,86,178,86],[141,6,180,4],[141,10,180,10,"xpReward"],[141,18,180,18],[141,21,180,21,"Math"],[141,25,180,25],[141,26,180,26,"floor"],[141,31,180,31],[141,32,180,32,"baseXpReward"],[141,44,180,44],[141,47,180,47,"xpMultiplier"],[141,59,180,59],[141,60,180,60],[142,6,181,4],[142,10,181,10,"goldReward"],[142,20,181,20],[142,23,181,23,"Math"],[142,27,181,27],[142,28,181,28,"floor"],[142,33,181,33],[142,34,181,34],[142,38,181,38],[142,41,181,41,"dropMultiplier"],[142,55,181,55],[142,56,181,56],[142,57,181,57],[142,58,181,58],[144,6,183,4,"console"],[144,13,183,11],[144,14,183,12,"log"],[144,17,183,15],[144,18,183,16],[144,48,183,46,"xpReward"],[144,56,183,54],[144,67,183,65,"goldReward"],[144,77,183,75],[144,93,183,91],[144,94,183,92],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,60,184,58,"xpMultiplier"],[145,72,184,70],[145,94,184,92,"dropMultiplier"],[145,108,184,106],[145,110,184,108],[145,111,184,109],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,54,185,52,"baseXpReward"],[146,66,185,64],[146,81,185,79,"xpReward"],[146,89,185,87],[146,91,185,89],[146,92,185,90],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,58,186,56],[147,60,186,58,"JSON"],[147,64,186,62],[147,65,186,63,"stringify"],[147,74,186,72],[147,75,186,73,"game"],[147,79,186,77],[147,80,186,78,"gameState"],[147,89,186,87],[147,90,186,88,"subscriptionBenefits"],[147,110,186,108],[147,111,186,109],[147,112,186,110],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,49,187,47,"Platform"],[148,61,187,55],[148,62,187,55,"Platform"],[148,70,187,55],[148,71,187,56,"OS"],[148,73,187,58],[148,84,187,69,"Date"],[148,88,187,73],[148,89,187,74,"now"],[148,92,187,77],[148,93,187,78],[148,94,187,79],[148,96,187,81],[148,97,187,82],[150,6,189,4],[151,6,190,4],[152,6,191,4,"setTimeout"],[152,16,191,14],[152,17,191,15],[152,23,191,21],[153,8,192,6,"console"],[153,15,192,13],[153,16,192,14,"log"],[153,19,192,17],[153,20,192,18],[153,78,192,76],[153,79,192,77],[155,8,194,6],[156,8,195,6,"game"],[156,12,195,10],[156,13,195,11,"updateNinja"],[156,24,195,22],[156,25,195,24,"prev"],[156,29,195,28],[156,33,195,33],[157,10,196,8,"console"],[157,17,196,15],[157,18,196,16,"log"],[157,21,196,19],[157,22,196,20],[157,54,196,52,"prev"],[157,58,196,56],[157,59,196,57,"experience"],[157,69,196,67],[157,81,196,79,"prev"],[157,85,196,83],[157,86,196,84,"experience"],[157,96,196,94],[157,99,196,97,"xpReward"],[157,107,196,105],[157,109,196,107],[157,110,196,108],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,56,197,54,"prev"],[158,60,197,58],[158,61,197,59,"gold"],[158,65,197,63],[158,77,197,75,"prev"],[158,81,197,79],[158,82,197,80,"gold"],[158,86,197,84],[158,89,197,87,"goldReward"],[158,99,197,97],[158,101,197,99],[158,102,197,100],[159,10,198,8],[159,17,198,15],[160,12,199,10,"experience"],[160,22,199,20],[160,24,199,22,"prev"],[160,28,199,26],[160,29,199,27,"experience"],[160,39,199,37],[160,42,199,40,"xpReward"],[160,50,199,48],[161,12,200,10,"gold"],[161,16,200,14],[161,18,200,16,"prev"],[161,22,200,20],[161,23,200,21,"gold"],[161,27,200,25],[161,30,200,28,"goldReward"],[162,10,201,8],[162,11,201,9],[163,8,202,6],[163,9,202,7],[163,10,202,8],[165,8,204,6],[166,8,205,6],[166,12,205,12,"zoneEnemy"],[166,21,205,21],[166,24,205,24],[167,10,206,8,"id"],[167,12,206,10],[167,14,206,12,"enemy"],[167,19,206,17],[167,20,206,18,"id"],[167,22,206,20],[168,10,207,8,"typeId"],[168,16,207,14],[168,18,207,16,"enemy"],[168,23,207,21],[168,24,207,22,"zoneTypeId"],[168,34,207,32],[168,38,207,36],[168,48,207,46],[169,10,207,48],[170,10,208,8,"name"],[170,14,208,12],[170,16,208,14,"enemy"],[170,21,208,19],[170,22,208,20,"name"],[170,26,208,24],[171,10,209,8,"icon"],[171,14,209,12],[171,16,209,14],[171,20,209,18],[172,10,209,20],[173,10,210,8,"hp"],[173,12,210,10],[173,14,210,12],[173,15,210,13],[174,10,210,15],[175,10,211,8,"maxHP"],[175,15,211,13],[175,17,211,15,"enemy"],[175,22,211,20],[175,23,211,21,"maxHealth"],[175,32,211,30],[176,10,212,8,"attack"],[176,16,212,14],[176,18,212,16,"enemy"],[176,23,212,21],[176,24,212,22,"stats"],[176,29,212,27],[176,30,212,28,"attack"],[176,36,212,34],[177,10,213,8,"xp"],[177,12,213,10],[177,14,213,12,"enemy"],[177,19,213,17],[177,20,213,18,"zoneXP"],[177,26,213,24],[177,30,213,28],[177,32,213,30],[178,10,213,32],[179,10,214,8,"position"],[179,18,214,16],[179,20,214,18,"enemy"],[179,25,214,23],[179,26,214,24,"position"],[180,8,215,6],[180,9,215,7],[181,8,217,6,"console"],[181,15,217,13],[181,16,217,14,"log"],[181,19,217,17],[181,20,217,18],[181,40,217,38,"zoneEnemy"],[181,49,217,47],[181,50,217,48,"name"],[181,54,217,52],[181,59,217,57,"zoneEnemy"],[181,68,217,66],[181,69,217,67,"typeId"],[181,75,217,73],[181,113,217,111],[181,114,217,112],[182,8,218,6,"recordEnemyKill"],[182,23,218,21],[182,24,218,22,"zoneEnemy"],[182,33,218,31],[182,34,218,32],[183,6,219,4],[183,7,219,5],[183,9,219,7],[183,10,219,8],[183,11,219,9],[183,12,219,10],[183,13,219,11],[184,4,220,2],[184,5,220,3],[184,7,220,5],[184,8,220,6,"game"],[184,12,220,10],[184,13,220,11,"updateNinja"],[184,24,220,22],[184,26,220,24,"recordEnemyKill"],[184,41,220,39],[184,42,220,40],[184,43,220,41],[186,4,222,2],[187,4,223,2],[187,8,223,8,"handleCombatTick"],[187,24,223,24],[187,27,223,27,"React"],[187,32,223,32],[187,33,223,32,"default"],[187,40,223,32],[187,41,223,33,"useCallback"],[187,52,223,44],[187,53,223,45],[187,59,223,51],[188,6,223,51],[188,10,223,51,"_s2"],[188,13,223,51],[188,16,223,51,"$RefreshSig$"],[188,28,223,51],[189,6,224,4,"console"],[189,13,224,11],[189,14,224,12,"log"],[189,17,224,15],[189,18,224,16],[189,87,224,85],[189,88,224,86],[190,6,226,4],[190,10,226,8,"enemiesToKill"],[190,23,226,36],[190,26,226,39],[190,28,226,41],[190,29,226,42],[190,30,226,43],[192,6,228,4,"_s2"],[192,9,228,4],[192,10,228,4,"setCombatState"],[192,24,228,18],[192,25,228,18,"_s2"],[192,28,228,18],[192,29,228,19,"prev"],[192,33,228,23],[192,37,228,27],[193,8,228,27,"_s2"],[193,11,228,27],[194,8,229,6],[194,12,229,12,"newTick"],[194,19,229,19],[194,22,229,22,"combatEngine"],[194,41,229,34],[194,42,229,34,"combatEngine"],[194,54,229,34],[194,55,229,35,"getCurrentTick"],[194,69,229,49],[194,70,229,50],[194,71,229,51],[195,8,230,6],[195,12,230,12,"newState"],[195,20,230,20],[195,23,230,23],[196,10,230,25],[196,13,230,28,"prev"],[196,17,230,32],[197,10,230,34,"currentTick"],[197,21,230,45],[197,23,230,47,"newTick"],[198,8,230,55],[198,9,230,56],[199,8,232,6],[199,12,232,10],[199,13,232,11,"newState"],[199,21,232,19],[199,22,232,20,"isInCombat"],[199,32,232,30],[199,34,232,32],[199,41,232,39,"newState"],[199,49,232,47],[201,8,234,6],[202,8,235,6,"newState"],[202,16,235,14],[202,17,235,15,"abilityManager"],[202,31,235,29],[202,32,235,30,"updateCooldowns"],[202,47,235,45],[202,48,235,46,"newTick"],[202,55,235,53],[202,56,235,54],[204,8,237,6],[205,8,238,6],[205,12,238,12,"effectResults"],[205,25,238,25],[205,28,238,28,"newState"],[205,36,238,36],[205,37,238,37,"statusEffects"],[205,50,238,50],[205,51,238,51,"processTick"],[205,62,238,62],[205,63,238,63,"newTick"],[205,70,238,70],[205,71,238,71],[207,8,240,6],[208,8,241,6,"effectResults"],[208,21,241,19],[208,22,241,20,"forEach"],[208,29,241,27],[208,30,241,28],[208,31,241,29,"results"],[208,38,241,36],[208,40,241,38,"entityId"],[208,48,241,46],[208,53,241,51],[209,10,242,8],[209,14,242,14,"enemyIndex"],[209,24,242,24],[209,27,242,27,"newState"],[209,35,242,35],[209,36,242,36,"enemies"],[209,43,242,43],[209,44,242,44,"findIndex"],[209,53,242,53],[209,54,242,54,"e"],[209,55,242,55],[209,59,242,59,"e"],[209,60,242,60],[209,61,242,61,"id"],[209,63,242,63],[209,68,242,68,"entityId"],[209,76,242,76],[209,77,242,77],[210,10,243,8],[210,14,243,12,"enemyIndex"],[210,24,243,22],[210,28,243,26],[210,29,243,27],[210,31,243,29],[211,12,244,10,"results"],[211,19,244,17],[211,20,244,18,"forEach"],[211,27,244,25],[211,28,244,26,"result"],[211,34,244,32],[211,38,244,36],[212,14,245,12,"newState"],[212,22,245,20],[212,23,245,21,"enemies"],[212,30,245,28],[212,31,245,29,"enemyIndex"],[212,41,245,39],[212,42,245,40],[212,43,245,41,"health"],[212,49,245,47],[212,53,245,51,"result"],[212,59,245,57],[212,60,245,58,"damage"],[212,66,245,64],[213,14,246,12,"newState"],[213,22,246,20],[213,23,246,21,"enemies"],[213,30,246,28],[213,31,246,29,"enemyIndex"],[213,41,246,39],[213,42,246,40],[213,43,246,41,"lastDamaged"],[213,54,246,52],[213,57,246,55,"newTick"],[213,64,246,62],[214,12,247,10],[214,13,247,11],[214,14,247,12],[215,10,248,8],[216,8,249,6],[216,9,249,7],[216,10,249,8],[218,8,251,6],[219,8,252,6],[220,8,253,6],[220,12,253,10,"newState"],[220,20,253,18],[220,21,253,19,"playerStats"],[220,32,253,30],[220,36,253,34,"game"],[220,40,253,38],[220,41,253,39,"gameState"],[220,50,253,48],[220,51,253,49,"ninja"],[220,56,253,54],[220,58,253,56],[221,10,254,8],[221,14,254,14,"effectiveStats"],[221,28,254,28],[221,31,254,31,"game"],[221,35,254,35],[221,36,254,36,"getEffectiveStats"],[221,53,254,53],[221,54,254,54],[221,55,254,55],[223,10,256,8],[224,10,257,8],[224,14,257,12,"newState"],[224,22,257,20],[224,23,257,21,"playerStats"],[224,34,257,32],[224,35,257,33,"attack"],[224,41,257,39],[224,46,257,44,"effectiveStats"],[224,60,257,58],[224,61,257,59,"attack"],[224,67,257,65],[224,71,258,12,"newState"],[224,79,258,20],[224,80,258,21,"playerStats"],[224,91,258,32],[224,92,258,33,"defense"],[224,99,258,40],[224,104,258,45,"effectiveStats"],[224,118,258,59],[224,119,258,60,"defense"],[224,126,258,67],[224,130,259,12,"newState"],[224,138,259,20],[224,139,259,21,"playerStats"],[224,150,259,32],[224,151,259,33,"maxHealth"],[224,160,259,42],[224,165,259,47,"effectiveStats"],[224,179,259,61],[224,180,259,62,"maxHealth"],[224,189,259,71],[224,191,259,73],[225,12,261,10,"console"],[225,19,261,17],[225,20,261,18,"log"],[225,23,261,21],[225,24,261,22],[225,58,261,56,"newState"],[225,66,261,64],[225,67,261,65,"playerStats"],[225,78,261,76],[225,79,261,77,"attack"],[225,85,261,83],[225,91,261,89,"effectiveStats"],[225,105,261,103],[225,106,261,104,"attack"],[225,112,261,110],[225,125,261,123,"newState"],[225,133,261,131],[225,134,261,132,"playerStats"],[225,145,261,143],[225,146,261,144,"defense"],[225,153,261,151],[225,159,261,157,"effectiveStats"],[225,173,261,171],[225,174,261,172,"defense"],[225,181,261,179],[225,192,261,190,"newState"],[225,200,261,198],[225,201,261,199,"playerStats"],[225,212,261,210],[225,213,261,211,"maxHealth"],[225,222,261,220],[225,228,261,226,"effectiveStats"],[225,242,261,240],[225,243,261,241,"maxHealth"],[225,252,261,250],[225,254,261,252],[225,255,261,253],[227,12,263,10],[228,12,264,10],[228,16,264,14,"newHealth"],[228,25,264,23],[228,28,264,26,"newState"],[228,36,264,34],[228,37,264,35,"playerStats"],[228,48,264,46],[228,49,264,47,"health"],[228,55,264,53],[229,12,265,10],[229,16,265,14,"newState"],[229,24,265,22],[229,25,265,23,"playerStats"],[229,36,265,34],[229,37,265,35,"maxHealth"],[229,46,265,44],[229,51,265,49,"effectiveStats"],[229,65,265,63],[229,66,265,64,"maxHealth"],[229,75,265,73],[229,77,265,75],[230,14,266,12],[231,14,267,12],[231,18,267,16,"effectiveStats"],[231,32,267,30],[231,33,267,31,"maxHealth"],[231,42,267,40],[231,45,267,43,"newState"],[231,53,267,51],[231,54,267,52,"playerStats"],[231,65,267,63],[231,66,267,64,"maxHealth"],[231,75,267,73],[231,78,267,76],[231,81,267,79],[231,83,267,81],[232,16,268,14],[233,16,269,14],[233,20,269,20,"healthRatio"],[233,31,269,31],[233,34,269,34,"newState"],[233,42,269,42],[233,43,269,43,"playerStats"],[233,54,269,54],[233,55,269,55,"maxHealth"],[233,64,269,64],[233,67,269,67],[233,68,269,68],[233,71,270,16,"newState"],[233,79,270,24],[233,80,270,25,"playerStats"],[233,91,270,36],[233,92,270,37,"health"],[233,98,270,43],[233,101,270,46,"newState"],[233,109,270,54],[233,110,270,55,"playerStats"],[233,121,270,66],[233,122,270,67,"maxHealth"],[233,131,270,76],[233,134,270,79],[233,135,270,80],[234,16,271,14,"newHealth"],[234,25,271,23],[234,28,271,26,"Math"],[234,32,271,30],[234,33,271,31,"floor"],[234,38,271,36],[234,39,271,37,"effectiveStats"],[234,53,271,51],[234,54,271,52,"maxHealth"],[234,63,271,61],[234,66,271,64,"healthRatio"],[234,77,271,75],[234,78,271,76],[235,14,272,12],[235,15,272,13],[235,21,272,19],[235,25,272,23,"newState"],[235,33,272,31],[235,34,272,32,"playerStats"],[235,45,272,43],[235,46,272,44,"health"],[235,52,272,50],[235,55,272,53,"effectiveStats"],[235,69,272,67],[235,70,272,68,"maxHealth"],[235,79,272,77],[235,81,272,79],[236,16,273,14],[237,16,274,14,"newHealth"],[237,25,274,23],[237,28,274,26,"effectiveStats"],[237,42,274,40],[237,43,274,41,"maxHealth"],[237,52,274,50],[238,14,275,12],[239,14,276,12],[240,12,277,10],[241,12,279,10,"newState"],[241,20,279,18],[241,21,279,19,"playerStats"],[241,32,279,30],[241,35,279,33],[242,14,280,12],[242,17,280,15,"newState"],[242,25,280,23],[242,26,280,24,"playerStats"],[242,37,280,35],[243,14,281,12,"attack"],[243,20,281,18],[243,22,281,20,"effectiveStats"],[243,36,281,34],[243,37,281,35,"attack"],[243,43,281,41],[244,14,282,12,"defense"],[244,21,282,19],[244,23,282,21,"effectiveStats"],[244,37,282,35],[244,38,282,36,"defense"],[244,45,282,43],[245,14,283,12,"maxHealth"],[245,23,283,21],[245,25,283,23,"effectiveStats"],[245,39,283,37],[245,40,283,38,"maxHealth"],[245,49,283,47],[246,14,283,49],[247,14,284,12,"health"],[247,20,284,18],[247,22,284,20,"newHealth"],[247,31,284,29],[248,14,284,31],[249,14,285,12,"critChance"],[249,24,285,22],[249,26,285,24,"effectiveStats"],[249,40,285,38],[249,41,285,39,"critChance"],[249,51,285,49],[249,55,285,53,"newState"],[249,63,285,61],[249,64,285,62,"playerStats"],[249,75,285,73],[249,76,285,74,"critChance"],[249,86,285,84],[250,14,286,12,"critDamage"],[250,24,286,22],[250,26,286,24,"effectiveStats"],[250,40,286,38],[250,41,286,39,"critDamage"],[250,51,286,49],[250,55,286,53,"newState"],[250,63,286,61],[250,64,286,62,"playerStats"],[250,75,286,73],[250,76,286,74,"critDamage"],[250,86,286,84],[251,14,287,12,"cooldownReduction"],[251,31,287,29],[251,33,287,31,"effectiveStats"],[251,47,287,45],[251,48,287,46,"cooldownReduction"],[251,65,287,63],[251,69,287,67,"newState"],[251,77,287,75],[251,78,287,76,"playerStats"],[251,89,287,87],[251,90,287,88,"cooldownReduction"],[252,12,288,10],[252,13,288,11],[253,10,289,8],[255,10,291,8],[256,10,292,8],[256,14,292,12,"game"],[256,18,292,16],[256,19,292,17,"gameState"],[256,28,292,26],[256,29,292,27,"isAlive"],[256,36,292,34],[256,40,293,12,"game"],[256,44,293,16],[256,45,293,17,"gameState"],[256,54,293,26],[256,55,293,27,"ninja"],[256,60,293,32],[256,61,293,33,"health"],[256,67,293,39],[256,72,293,44,"effectiveStats"],[256,86,293,58],[256,87,293,59,"maxHealth"],[256,96,293,68],[256,100,294,12,"newState"],[256,108,294,20],[256,109,294,21,"playerStats"],[256,120,294,32],[256,121,294,33,"health"],[256,127,294,39],[256,130,294,42,"effectiveStats"],[256,144,294,56],[256,145,294,57,"maxHealth"],[256,154,294,66],[256,157,294,69],[256,160,294,72],[256,162,294,74],[257,12,295,10,"console"],[257,19,295,17],[257,20,295,18,"log"],[257,23,295,21],[257,24,295,22],[257,58,295,56,"newState"],[257,66,295,64],[257,67,295,65,"playerStats"],[257,78,295,76],[257,79,295,77,"health"],[257,85,295,83],[257,91,295,89,"game"],[257,95,295,93],[257,96,295,94,"gameState"],[257,105,295,103],[257,106,295,104,"ninja"],[257,111,295,109],[257,112,295,110,"health"],[257,118,295,116],[257,139,295,137],[257,140,295,138],[258,12,296,10,"newState"],[258,20,296,18],[258,21,296,19,"playerStats"],[258,32,296,30],[258,33,296,31,"health"],[258,39,296,37],[258,42,296,40,"game"],[258,46,296,44],[258,47,296,45,"gameState"],[258,56,296,54],[258,57,296,55,"ninja"],[258,62,296,60],[258,63,296,61,"health"],[258,69,296,67],[259,10,297,8],[260,8,298,6],[262,8,300,6],[263,8,301,6,"newState"],[263,16,301,14],[263,17,301,15,"enemies"],[263,24,301,22],[263,25,301,23,"forEach"],[263,32,301,30],[263,33,301,31,"enemy"],[263,38,301,36],[263,42,301,40],[264,10,302,8],[264,14,302,12],[264,15,302,13,"enemy"],[264,20,302,18],[264,21,302,19,"isBoss"],[264,27,302,25],[264,29,302,27],[265,12,302,29],[266,12,303,10],[267,12,304,10],[267,16,304,16,"MOVEMENT_SPEED"],[267,30,304,30],[267,33,304,33],[267,37,304,37],[267,38,304,38],[267,39,304,39],[268,12,305,10],[268,16,305,16,"SCREEN_WIDTH"],[268,28,305,28],[268,31,305,31],[268,34,305,34],[269,12,306,10],[269,16,306,16,"GAME_AREA_HEIGHT"],[269,32,306,32],[269,35,306,35],[269,38,306,38],[269,39,306,39],[269,40,306,40],[270,12,307,10],[270,16,307,16,"ENEMY_SIZE"],[270,26,307,26],[270,29,307,29],[270,31,307,31],[272,12,309,10],[273,12,310,10],[273,16,310,16,"playerX"],[273,23,310,23],[273,26,310,26,"currentNinjaPosition"],[273,46,310,46],[273,47,310,47,"x"],[273,48,310,48],[274,12,311,10],[274,16,311,16,"playerY"],[274,23,311,23],[274,26,311,26,"currentNinjaPosition"],[274,46,311,46],[274,47,311,47,"y"],[274,48,311,48],[276,12,313,10],[277,12,314,10],[277,16,314,16,"deltaX"],[277,22,314,22],[277,25,314,25,"playerX"],[277,32,314,32],[277,35,314,35,"enemy"],[277,40,314,40],[277,41,314,41,"position"],[277,49,314,49],[277,50,314,50,"x"],[277,51,314,51],[278,12,315,10],[278,16,315,16,"deltaY"],[278,22,315,22],[278,25,315,25,"playerY"],[278,32,315,32],[278,35,315,35,"enemy"],[278,40,315,40],[278,41,315,41,"position"],[278,49,315,49],[278,50,315,50,"y"],[278,51,315,51],[279,12,316,10],[279,16,316,16,"distance"],[279,24,316,24],[279,27,316,27,"Math"],[279,31,316,31],[279,32,316,32,"sqrt"],[279,36,316,36],[279,37,316,37,"deltaX"],[279,43,316,43],[279,46,316,46,"deltaX"],[279,52,316,52],[279,55,316,55,"deltaY"],[279,61,316,61],[279,64,316,64,"deltaY"],[279,70,316,70],[279,71,316,71],[281,12,318,10],[282,12,319,10],[282,16,319,16,"ATTACK_RANGE"],[282,28,319,28],[282,31,319,31],[282,33,319,33],[282,34,319,34],[282,35,319,35],[283,12,320,10],[283,16,320,16,"ATTACK_COOLDOWN"],[283,31,320,31],[283,34,320,34],[283,36,320,36],[283,37,320,37],[283,38,320,38],[285,12,322,10],[285,16,322,14,"distance"],[285,24,322,22],[285,28,322,26,"ATTACK_RANGE"],[285,40,322,38],[285,42,322,40],[286,14,323,12],[287,14,324,12],[287,18,324,16],[287,19,324,17,"enemy"],[287,24,324,22],[287,25,324,23,"lastAttackTick"],[287,39,324,37],[287,41,324,39,"enemy"],[287,46,324,44],[287,47,324,45,"lastAttackTick"],[287,61,324,59],[287,64,324,62],[287,65,324,63],[288,14,326,12],[288,18,326,16,"newState"],[288,26,326,24],[288,27,326,25,"currentTick"],[288,38,326,36],[288,41,326,39,"enemy"],[288,46,326,44],[288,47,326,45,"lastAttackTick"],[288,61,326,59],[288,65,326,63,"ATTACK_COOLDOWN"],[288,80,326,78],[288,82,326,80],[289,16,327,14],[290,16,328,14],[290,20,328,18],[290,21,328,19,"game"],[290,25,328,23],[290,26,328,24,"gameState"],[290,35,328,33],[290,36,328,34,"isAlive"],[290,43,328,41],[290,45,328,43],[291,18,329,16,"console"],[291,25,329,23],[291,26,329,24,"log"],[291,29,329,27],[291,30,329,28],[291,49,329,47,"enemy"],[291,54,329,52],[291,55,329,53,"name"],[291,59,329,57],[291,93,329,91],[291,94,329,92],[292,18,330,16],[293,18,331,16,"enemy"],[293,23,331,21],[293,24,331,22,"lastAttackTick"],[293,38,331,36],[293,41,331,39,"newState"],[293,49,331,47],[293,50,331,48,"currentTick"],[293,61,331,59],[294,16,332,14],[294,17,332,15],[294,23,332,21],[295,18,333,16],[296,18,334,16],[296,22,334,22,"isPlayerInvincible"],[296,40,334,40],[296,43,334,43,"game"],[296,47,334,47],[296,48,334,48,"gameState"],[296,57,334,57],[296,58,334,58,"isInvincible"],[296,70,334,70],[296,74,335,41,"game"],[296,78,335,45],[296,79,335,46,"gameState"],[296,88,335,55],[296,89,335,56,"invincibilityEndTime"],[296,109,335,76],[296,113,336,41,"Date"],[296,117,336,45],[296,118,336,46,"now"],[296,121,336,49],[296,122,336,50],[296,123,336,51],[296,126,336,54,"game"],[296,130,336,58],[296,131,336,59,"gameState"],[296,140,336,68],[296,141,336,69,"invincibilityEndTime"],[296,161,336,89],[297,18,338,16],[297,22,338,20,"isPlayerInvincible"],[297,40,338,38],[297,42,338,40],[298,20,339,18,"console"],[298,27,339,25],[298,28,339,26,"log"],[298,31,339,29],[298,32,339,30],[298,51,339,49,"enemy"],[298,56,339,54],[298,57,339,55,"name"],[298,61,339,59],[298,101,339,99],[298,102,339,100],[299,20,340,18],[300,20,341,18,"enemy"],[300,25,341,23],[300,26,341,24,"lastAttackTick"],[300,40,341,38],[300,43,341,41,"newState"],[300,51,341,49],[300,52,341,50,"currentTick"],[300,63,341,61],[301,18,342,16],[301,19,342,17],[301,25,342,23],[302,20,343,16],[303,20,344,16],[303,24,344,22,"baseAttack"],[303,34,344,32],[303,37,344,35,"enemy"],[303,42,344,40],[303,43,344,41,"stats"],[303,48,344,46],[303,49,344,47,"attack"],[303,55,344,53],[303,58,344,56],[303,61,344,59],[303,62,344,60],[303,63,344,61],[304,20,345,16],[304,24,345,22,"attackDamage"],[304,36,345,34],[304,39,345,37,"Math"],[304,43,345,41],[304,44,345,42,"floor"],[304,49,345,47],[304,50,345,48,"baseAttack"],[304,60,345,58],[304,64,345,62],[304,67,345,65],[304,70,345,68,"Math"],[304,74,345,72],[304,75,345,73,"random"],[304,81,345,79],[304,82,345,80],[304,83,345,81],[304,86,345,84],[304,89,345,87],[304,90,345,88],[304,91,345,89],[304,92,345,90],[304,93,345,91],[305,20,346,16],[305,24,346,22,"playerDefense"],[305,37,346,35],[305,40,346,38,"newState"],[305,48,346,46],[305,49,346,47,"playerStats"],[305,60,346,58],[305,61,346,59,"defense"],[305,68,346,66],[306,20,347,16],[306,24,347,22,"finalDamage"],[306,35,347,33],[306,38,347,36,"Math"],[306,42,347,40],[306,43,347,41,"max"],[306,46,347,44],[306,47,347,45],[306,48,347,46],[306,50,347,48,"attackDamage"],[306,62,347,60],[306,65,347,63,"Math"],[306,69,347,67],[306,70,347,68,"floor"],[306,75,347,73],[306,76,347,74,"playerDefense"],[306,89,347,87],[306,92,347,90],[306,95,347,93],[306,96,347,94],[306,97,347,95],[306,98,347,96],[306,99,347,97],[308,20,349,16,"console"],[308,27,349,23],[308,28,349,24,"log"],[308,31,349,27],[308,32,349,28],[308,53,349,49,"enemy"],[308,58,349,54],[308,59,349,55,"name"],[308,63,349,59],[308,86,349,82,"finalDamage"],[308,97,349,93],[308,109,349,105,"attackDamage"],[308,121,349,117],[308,132,349,128,"Math"],[308,136,349,132],[308,137,349,133,"floor"],[308,142,349,138],[308,143,349,139,"playerDefense"],[308,156,349,152],[308,159,349,155],[308,162,349,158],[308,163,349,159],[308,184,349,180],[308,185,349,181],[310,20,351,16],[311,20,352,16],[311,24,352,22,"newPlayerHealth"],[311,39,352,37],[311,42,352,40,"Math"],[311,46,352,44],[311,47,352,45,"max"],[311,50,352,48],[311,51,352,49],[311,52,352,50],[311,54,352,52,"newState"],[311,62,352,60],[311,63,352,61,"playerStats"],[311,74,352,72],[311,75,352,73,"health"],[311,81,352,79],[311,84,352,82,"finalDamage"],[311,95,352,93],[311,96,352,94],[312,20,353,16,"newState"],[312,28,353,24],[312,29,353,25,"playerStats"],[312,40,353,36],[312,41,353,37,"health"],[312,47,353,43],[312,50,353,46,"newPlayerHealth"],[312,65,353,61],[313,20,355,16,"console"],[313,27,355,23],[313,28,355,24,"log"],[313,31,355,27],[313,32,355,28],[313,53,355,49,"newState"],[313,61,355,57],[313,62,355,58,"playerStats"],[313,73,355,69],[313,74,355,70,"health"],[313,80,355,76],[313,84,355,80,"newState"],[313,92,355,88],[313,93,355,89,"playerStats"],[313,104,355,100],[313,105,355,101,"maxHealth"],[313,114,355,110],[313,124,355,120,"finalDamage"],[313,135,355,131],[313,145,355,141],[313,146,355,142],[315,20,357,16],[316,20,358,16,"enemy"],[316,25,358,21],[316,26,358,22,"lastAttackTick"],[316,40,358,36],[316,43,358,39,"newState"],[316,51,358,47],[316,52,358,48,"currentTick"],[316,63,358,59],[318,20,360,16],[319,20,361,16],[319,24,361,20,"newPlayerHealth"],[319,39,361,35],[319,43,361,39],[319,44,361,40],[319,46,361,42],[320,22,362,18,"console"],[320,29,362,25],[320,30,362,26,"log"],[320,33,362,29],[320,34,362,30],[320,84,362,80],[320,85,362,81],[321,22,363,18],[322,22,364,18,"setTimeout"],[322,32,364,28],[322,33,364,29],[322,39,364,35],[323,24,365,20],[324,24,366,20,"game"],[324,28,366,24],[324,29,366,25,"updateGameState"],[324,44,366,40],[324,45,366,41],[325,26,366,43,"isAlive"],[325,33,366,50],[325,35,366,52],[326,24,366,58],[326,25,366,59],[326,26,366,60],[327,22,367,18],[327,23,367,19],[327,25,367,21],[327,28,367,24],[327,29,367,25],[328,20,368,16],[329,18,369,16],[330,16,370,14],[331,14,371,12],[332,12,372,10],[332,13,372,11],[332,19,372,17],[333,14,373,12],[334,14,374,12],[335,14,375,12],[335,18,375,16,"distance"],[335,26,375,24],[335,29,375,27],[335,31,375,29],[335,33,375,31],[336,16,376,14],[337,16,377,14],[337,20,377,20,"normalizedX"],[337,31,377,31],[337,34,377,34,"deltaX"],[337,40,377,40],[337,43,377,43,"distance"],[337,51,377,51],[338,16,378,14],[338,20,378,20,"normalizedY"],[338,31,378,31],[338,34,378,34,"deltaY"],[338,40,378,40],[338,43,378,43,"distance"],[338,51,378,51],[340,16,380,14],[341,16,381,14],[341,20,381,20,"randomFactor"],[341,32,381,32],[341,35,381,35],[341,38,381,38],[341,39,381,39],[341,40,381,40],[342,16,382,14],[342,20,382,20,"finalX"],[342,26,382,26],[342,29,382,29,"normalizedX"],[342,40,382,40],[342,43,382,43],[342,44,382,44,"Math"],[342,48,382,48],[342,49,382,49,"random"],[342,55,382,55],[342,56,382,56],[342,57,382,57],[342,60,382,60],[342,63,382,63],[342,67,382,67,"randomFactor"],[342,79,382,79],[343,16,383,14],[343,20,383,20,"finalY"],[343,26,383,26],[343,29,383,29,"normalizedY"],[343,40,383,40],[343,43,383,43],[343,44,383,44,"Math"],[343,48,383,48],[343,49,383,49,"random"],[343,55,383,55],[343,56,383,56],[343,57,383,57],[343,60,383,60],[343,63,383,63],[343,67,383,67,"randomFactor"],[343,79,383,79],[345,16,385,14],[346,16,386,14],[346,20,386,18,"newX"],[346,24,386,22],[346,27,386,25,"enemy"],[346,32,386,30],[346,33,386,31,"position"],[346,41,386,39],[346,42,386,40,"x"],[346,43,386,41],[346,46,386,45,"finalX"],[346,52,386,51],[346,55,386,54,"MOVEMENT_SPEED"],[346,69,386,69],[347,16,387,14],[347,20,387,18,"newY"],[347,24,387,22],[347,27,387,25,"enemy"],[347,32,387,30],[347,33,387,31,"position"],[347,41,387,39],[347,42,387,40,"y"],[347,43,387,41],[347,46,387,45,"finalY"],[347,52,387,51],[347,55,387,54,"MOVEMENT_SPEED"],[347,69,387,69],[349,16,389,14],[350,16,390,14,"newX"],[350,20,390,18],[350,23,390,21,"Math"],[350,27,390,25],[350,28,390,26,"max"],[350,31,390,29],[350,32,390,30],[350,33,390,31],[350,35,390,33,"Math"],[350,39,390,37],[350,40,390,38,"min"],[350,43,390,41],[350,44,390,42,"SCREEN_WIDTH"],[350,56,390,54],[350,59,390,57,"ENEMY_SIZE"],[350,69,390,67],[350,71,390,69,"newX"],[350,75,390,73],[350,76,390,74],[350,77,390,75],[351,16,391,14,"newY"],[351,20,391,18],[351,23,391,21,"Math"],[351,27,391,25],[351,28,391,26,"max"],[351,31,391,29],[351,32,391,30],[351,33,391,31],[351,35,391,33,"Math"],[351,39,391,37],[351,40,391,38,"min"],[351,43,391,41],[351,44,391,42,"GAME_AREA_HEIGHT"],[351,60,391,58],[351,63,391,61,"ENEMY_SIZE"],[351,73,391,71],[351,75,391,73,"newY"],[351,79,391,77],[351,80,391,78],[351,81,391,79],[353,16,393,14],[354,16,394,14,"enemy"],[354,21,394,19],[354,22,394,20,"position"],[354,30,394,28],[354,31,394,29,"x"],[354,32,394,30],[354,35,394,33,"newX"],[354,39,394,37],[355,16,395,14,"enemy"],[355,21,395,19],[355,22,395,20,"position"],[355,30,395,28],[355,31,395,29,"y"],[355,32,395,30],[355,35,395,33,"newY"],[355,39,395,37],[356,14,396,12],[357,14,397,12],[358,12,398,10],[359,10,399,8],[360,8,400,6],[360,9,400,7],[360,10,400,8],[362,8,402,6],[363,8,403,6],[363,12,403,10,"newState"],[363,20,403,18],[363,21,403,19,"shadowClone"],[363,32,403,30],[363,34,403,32],[364,10,404,8],[365,10,405,8,"newState"],[365,18,405,16],[365,19,405,17,"shadowClone"],[365,30,405,28],[365,31,405,29,"remainingTicks"],[365,45,405,43],[365,47,405,45],[367,10,407,8],[368,10,408,8],[368,14,408,14,"cloneOffset"],[368,25,408,25],[368,28,408,28],[368,30,408,30],[368,31,408,31],[368,32,408,32],[369,10,409,8,"newState"],[369,18,409,16],[369,19,409,17,"shadowClone"],[369,30,409,28],[369,31,409,29,"position"],[369,39,409,37],[369,40,409,38,"x"],[369,41,409,39],[369,44,409,42,"currentNinjaPosition"],[369,64,409,62],[369,65,409,63,"x"],[369,66,409,64],[369,69,409,67,"cloneOffset"],[369,80,409,78],[370,10,410,8,"newState"],[370,18,410,16],[370,19,410,17,"shadowClone"],[370,30,410,28],[370,31,410,29,"position"],[370,39,410,37],[370,40,410,38,"y"],[370,41,410,39],[370,44,410,42,"currentNinjaPosition"],[370,64,410,62],[370,65,410,63,"y"],[370,66,410,64],[370,69,410,67],[370,71,410,69],[372,10,412,8],[373,10,413,8],[373,14,413,12,"newState"],[373,22,413,20],[373,23,413,21,"shadowClone"],[373,34,413,32],[373,35,413,33,"remainingTicks"],[373,49,413,47],[373,53,413,51],[373,54,413,52],[373,56,413,54],[374,12,414,10,"console"],[374,19,414,17],[374,20,414,18,"log"],[374,23,414,21],[374,24,414,22],[374,75,414,73],[374,76,414,74],[375,12,415,10,"newState"],[375,20,415,18],[375,21,415,19,"shadowClone"],[375,32,415,30],[375,35,415,33,"undefined"],[375,44,415,42],[376,10,416,8],[376,11,416,9],[376,17,416,15],[377,12,417,10],[378,12,418,10],[379,12,419,10],[379,16,419,16,"CLONE_ATTACK_INTERVAL"],[379,37,419,37],[379,40,419,40],[379,42,419,42],[380,12,420,10],[380,16,420,14,"newState"],[380,24,420,22],[380,25,420,23,"currentTick"],[380,36,420,34],[380,39,420,37,"CLONE_ATTACK_INTERVAL"],[380,60,420,58],[380,65,420,63],[380,66,420,64],[380,70,420,68,"newState"],[380,78,420,76],[380,79,420,77,"enemies"],[380,86,420,84],[380,87,420,85,"length"],[380,93,420,91],[380,96,420,94],[380,97,420,95],[380,99,420,97],[381,14,421,12,"console"],[381,21,421,19],[381,22,421,20,"log"],[381,25,421,23],[381,26,421,24],[381,83,421,81],[381,84,421,82],[383,14,423,12],[384,14,424,12],[384,18,424,18,"target"],[384,24,424,24],[384,27,424,27,"findClosestEnemyInternal"],[384,51,424,51],[384,52,424,52,"newState"],[384,60,424,60],[384,61,424,61,"enemies"],[384,68,424,68],[384,69,424,69],[385,14,425,12],[385,18,425,16,"target"],[385,24,425,22],[385,26,425,24],[386,16,426,14],[387,16,427,14],[387,20,427,20,"cloneDamage"],[387,31,427,31],[387,34,427,34,"Math"],[387,38,427,38],[387,39,427,39,"floor"],[387,44,427,44],[387,45,427,45,"newState"],[387,53,427,53],[387,54,427,54,"playerStats"],[387,65,427,65],[387,66,427,66,"attack"],[387,72,427,72],[387,75,427,75],[387,78,427,78],[387,79,427,79],[389,16,429,14],[390,16,430,14,"createProjectile"],[390,32,430,30],[390,33,430,31,"target"],[390,39,430,37],[390,41,430,39,"cloneDamage"],[390,52,430,50],[390,54,430,52,"newState"],[390,62,430,60],[390,63,430,61,"shadowClone"],[390,74,430,72],[390,75,430,73,"position"],[390,83,430,81],[390,85,430,83],[391,18,431,16,"id"],[391,20,431,18],[391,22,431,20],[391,43,431,41],[392,18,432,16,"name"],[392,22,432,20],[392,24,432,22],[392,45,432,43],[393,18,433,16,"icon"],[393,22,433,20],[393,24,433,22],[394,16,434,14],[394,17,434,15],[394,18,434,16],[395,14,435,12],[396,12,436,10],[397,10,437,8],[398,8,438,6],[400,8,440,6],[401,8,441,6],[402,8,442,6],[402,12,442,10],[402,13,442,11,"isManualControlActive"],[402,34,442,32],[402,38,442,36,"game"],[402,42,442,40],[402,43,442,41,"gameState"],[402,52,442,50],[402,53,442,51,"isAlive"],[402,60,442,58],[402,62,442,60],[403,10,443,8],[403,15,443,13],[403,19,443,17,"i"],[403,20,443,18],[403,23,443,21],[403,24,443,22],[403,26,443,24,"i"],[403,27,443,25],[403,30,443,28],[403,31,443,29],[403,33,443,31,"i"],[403,34,443,32],[403,36,443,34],[403,38,443,36],[404,12,444,10],[404,16,444,14,"newState"],[404,24,444,22],[404,25,444,23,"abilityManager"],[404,39,444,37],[404,40,444,38,"isAbilityReady"],[404,54,444,52],[404,55,444,53,"i"],[404,56,444,54],[404,57,444,55],[404,61,444,59,"newState"],[404,69,444,67],[404,70,444,68,"enemies"],[404,77,444,75],[404,78,444,76,"length"],[404,84,444,82],[404,87,444,85],[404,88,444,86],[404,90,444,88],[405,14,445,12],[405,18,445,16,"newState"],[405,26,445,24],[405,27,445,25,"abilityManager"],[405,41,445,39],[405,42,445,40,"useAbility"],[405,52,445,50],[405,53,445,51,"i"],[405,54,445,52],[405,56,445,54,"newTick"],[405,63,445,61],[405,64,445,62],[405,66,445,64],[406,16,446,14,"castAbility"],[406,27,446,25],[406,28,446,26,"newState"],[406,36,446,34],[406,38,446,36,"i"],[406,39,446,37],[406,40,446,38],[407,14,447,12],[408,12,448,10],[409,10,449,8],[410,8,450,6],[412,8,452,6],[413,8,453,6],[413,12,453,12,"deadEnemies"],[413,23,453,23],[413,26,453,26,"newState"],[413,34,453,34],[413,35,453,35,"enemies"],[413,42,453,42],[413,43,453,43,"filter"],[413,49,453,49],[413,50,453,50,"enemy"],[413,55,453,55],[413,59,453,59,"enemy"],[413,64,453,64],[413,65,453,65,"health"],[413,71,453,71],[413,75,453,75],[413,76,453,76],[413,77,453,77],[414,8,454,6,"enemiesToKill"],[414,21,454,19],[414,24,454,22],[414,25,454,23],[414,28,454,26,"deadEnemies"],[414,39,454,37],[414,40,454,38],[414,41,454,39],[414,42,454,40],[416,8,456,6],[417,8,457,6],[417,12,457,10,"deadEnemies"],[417,23,457,21],[417,24,457,22,"length"],[417,30,457,28],[417,33,457,31],[417,34,457,32],[417,36,457,34],[418,10,458,8,"console"],[418,17,458,15],[418,18,458,16,"log"],[418,21,458,19],[418,22,458,20],[418,49,458,47,"deadEnemies"],[418,60,458,58],[418,61,458,59,"length"],[418,67,458,65],[418,83,458,81],[418,85,458,83,"deadEnemies"],[418,96,458,94],[418,97,458,95,"map"],[418,100,458,98],[418,101,458,99,"e"],[418,102,458,100],[418,106,458,104],[418,109,458,107,"e"],[418,110,458,108],[418,111,458,109,"id"],[418,113,458,111],[418,117,458,115,"e"],[418,118,458,116],[418,119,458,117,"health"],[418,125,458,123],[418,130,458,128],[418,131,458,129],[418,132,458,130],[419,8,459,6],[421,8,461,6],[422,8,462,6],[422,12,462,12,"lowHealthEnemies"],[422,28,462,28],[422,31,462,31,"newState"],[422,39,462,39],[422,40,462,40,"enemies"],[422,47,462,47],[422,48,462,48,"filter"],[422,54,462,54],[422,55,462,55,"enemy"],[422,60,462,60],[422,64,462,64,"enemy"],[422,69,462,69],[422,70,462,70,"health"],[422,76,462,76],[422,80,462,80],[422,82,462,82],[422,86,462,86,"enemy"],[422,91,462,91],[422,92,462,92,"health"],[422,98,462,98],[422,101,462,101],[422,102,462,102],[422,103,462,103],[423,8,463,6],[423,12,463,10,"lowHealthEnemies"],[423,28,463,26],[423,29,463,27,"length"],[423,35,463,33],[423,38,463,36],[423,39,463,37],[423,41,463,39],[424,10,464,8,"console"],[424,17,464,15],[424,18,464,16,"log"],[424,21,464,19],[424,22,464,20],[424,61,464,59],[424,63,464,61,"lowHealthEnemies"],[424,79,464,77],[424,80,464,78,"map"],[424,83,464,81],[424,84,464,82,"e"],[424,85,464,83],[424,89,464,87],[424,92,464,90,"e"],[424,93,464,91],[424,94,464,92,"id"],[424,96,464,94],[424,100,464,98,"e"],[424,101,464,99],[424,102,464,100,"health"],[424,108,464,106],[424,112,464,110,"e"],[424,113,464,111],[424,114,464,112,"maxHealth"],[424,123,464,121],[424,128,464,126],[424,129,464,127],[424,130,464,128],[425,8,465,6],[427,8,467,6],[428,8,468,6],[428,12,468,12,"beforeCount"],[428,23,468,23],[428,26,468,26,"newState"],[428,34,468,34],[428,35,468,35,"enemies"],[428,42,468,42],[428,43,468,43,"length"],[428,49,468,49],[429,8,469,6,"newState"],[429,16,469,14],[429,17,469,15,"enemies"],[429,24,469,22],[429,27,469,25,"newState"],[429,35,469,33],[429,36,469,34,"enemies"],[429,43,469,41],[429,44,469,42,"filter"],[429,50,469,48],[429,51,469,49,"enemy"],[429,56,469,54],[429,60,469,58,"enemy"],[429,65,469,63],[429,66,469,64,"health"],[429,72,469,70],[429,75,469,73],[429,76,469,74],[429,77,469,75],[430,8,470,6],[430,12,470,12,"afterCount"],[430,22,470,22],[430,25,470,25,"newState"],[430,33,470,33],[430,34,470,34,"enemies"],[430,41,470,41],[430,42,470,42,"length"],[430,48,470,48],[431,8,472,6],[431,12,472,10,"beforeCount"],[431,23,472,21],[431,28,472,26,"afterCount"],[431,38,472,36],[431,40,472,38],[432,10,473,8,"console"],[432,17,473,15],[432,18,473,16,"log"],[432,21,473,19],[432,22,473,20],[432,52,473,50,"beforeCount"],[432,63,473,61],[432,66,473,64,"afterCount"],[432,76,473,74],[432,102,473,100],[432,103,473,101],[433,8,474,6],[435,8,476,6],[436,8,477,6],[437,8,478,6],[437,12,478,12,"MAX_ENEMIES"],[437,23,478,23],[437,26,478,26],[437,28,478,28],[437,29,478,29],[437,30,478,30],[438,8,479,6],[438,12,479,12,"MIN_SPAWN_DELAY"],[438,27,479,27],[438,30,479,30],[438,33,479,33],[438,34,479,34],[438,35,479,35],[439,8,480,6],[439,12,480,12,"now"],[439,15,480,15],[439,18,480,18,"Date"],[439,22,480,22],[439,23,480,23,"now"],[439,26,480,26],[439,27,480,27],[439,28,480,28],[440,8,481,6],[440,12,481,12,"hasBoss"],[440,19,481,19],[440,22,481,22,"newState"],[440,30,481,30],[440,31,481,31,"enemies"],[440,38,481,38],[440,39,481,39,"some"],[440,43,481,43],[440,44,481,44,"enemy"],[440,49,481,49],[440,53,481,53,"enemy"],[440,58,481,58],[440,59,481,59,"isBoss"],[440,65,481,65],[440,66,481,66],[442,8,483,6],[443,8,484,6],[443,12,484,10],[443,13,484,11,"newState"],[443,21,484,19],[443,22,484,20,"lastSpawnTime"],[443,35,484,33],[443,37,484,35],[444,10,485,8,"newState"],[444,18,485,16],[444,19,485,17,"lastSpawnTime"],[444,32,485,30],[444,35,485,33,"now"],[444,38,485,36],[445,8,486,6],[446,8,488,6,"console"],[446,15,488,13],[446,16,488,14,"log"],[446,19,488,17],[446,20,488,18],[446,53,488,51,"newState"],[446,61,488,59],[446,62,488,60,"enemies"],[446,69,488,67],[446,70,488,68,"length"],[446,76,488,74],[446,85,488,83,"MAX_ENEMIES"],[446,96,488,94],[446,109,488,107,"hasBoss"],[446,116,488,114],[446,118,488,116],[446,119,488,117],[448,8,490,6],[449,8,491,6],[449,12,491,10],[449,13,491,11,"hasBoss"],[449,20,491,18],[449,24,491,22,"newState"],[449,32,491,30],[449,33,491,31,"enemies"],[449,40,491,38],[449,41,491,39,"length"],[449,47,491,45],[449,50,491,48,"MAX_ENEMIES"],[449,61,491,59],[449,65,491,64,"now"],[449,68,491,67],[449,71,491,70,"newState"],[449,79,491,78],[449,80,491,79,"lastSpawnTime"],[449,93,491,92],[449,97,491,97,"MIN_SPAWN_DELAY"],[449,112,491,112],[449,114,491,114],[450,10,492,8,"console"],[450,17,492,15],[450,18,492,16,"log"],[450,21,492,19],[450,22,492,20],[450,43,492,41,"newState"],[450,51,492,49],[450,52,492,50,"enemies"],[450,59,492,57],[450,60,492,58,"length"],[450,66,492,64],[450,69,492,67],[450,70,492,68],[450,74,492,72,"MAX_ENEMIES"],[450,85,492,83],[450,87,492,85],[450,88,492,86],[451,10,493,8,"spawnTestEnemy"],[451,24,493,22],[451,25,493,23,"newState"],[451,33,493,31],[451,34,493,32],[452,10,494,8,"newState"],[452,18,494,16],[452,19,494,17,"lastSpawnTime"],[452,32,494,30],[452,35,494,33,"now"],[452,38,494,36],[453,8,495,6],[454,8,497,6],[454,15,497,13,"newState"],[454,23,497,21],[455,6,498,4],[455,7,498,5],[455,47,498,6],[457,6,500,4],[458,6,501,4,"console"],[458,13,501,11],[458,14,501,12,"log"],[458,17,501,15],[458,18,501,16],[458,50,501,48,"enemiesToKill"],[458,63,501,61],[458,64,501,62,"length"],[458,70,501,68],[458,101,501,99],[458,102,501,100],[459,6,503,4,"enemiesToKill"],[459,19,503,17],[459,20,503,18,"forEach"],[459,27,503,25],[459,28,503,26],[459,29,503,27,"enemy"],[459,34,503,32],[459,36,503,34,"index"],[459,41,503,39],[459,46,503,44],[460,8,504,6,"console"],[460,15,504,13],[460,16,504,14,"log"],[460,19,504,17],[460,20,504,18],[460,57,504,55,"index"],[460,62,504,60],[460,65,504,63],[460,66,504,64],[460,70,504,68,"enemiesToKill"],[460,83,504,81],[460,84,504,82,"length"],[460,90,504,88],[460,104,504,102,"enemy"],[460,109,504,107],[460,110,504,108,"id"],[460,112,504,110],[460,114,504,112],[460,115,504,113],[461,8,505,6,"handleEnemyKill"],[461,23,505,21],[461,24,505,22,"enemy"],[461,29,505,27],[461,30,505,28],[462,6,506,4],[462,7,506,5],[462,8,506,6],[463,4,507,2],[463,5,507,3],[463,7,507,5],[463,8,507,6,"handleEnemyKill"],[463,23,507,21],[463,24,507,22],[463,25,507,23],[463,26,507,24],[463,27,507,25],[465,4,509,2],[466,4,510,2],[466,8,510,8,"findClosestEnemyInternal"],[466,32,510,32],[466,35,510,36,"enemies"],[466,42,510,58],[466,46,510,83],[467,6,511,4],[467,10,511,8,"enemies"],[467,17,511,15],[467,18,511,16,"length"],[467,24,511,22],[467,29,511,27],[467,30,511,28],[467,32,511,30],[467,39,511,37],[467,43,511,41],[469,6,513,4],[470,6,514,4],[470,10,514,10,"SCREEN_WIDTH"],[470,22,514,22],[470,25,514,25],[470,28,514,28],[471,6,515,4],[471,10,515,10,"GAME_AREA_HEIGHT"],[471,26,515,26],[471,29,515,29],[471,32,515,32],[471,35,515,35],[471,38,515,38],[471,39,515,39],[471,40,515,40],[472,6,516,4],[472,10,516,10,"ninjaX"],[472,16,516,16],[472,19,516,19,"SCREEN_WIDTH"],[472,31,516,31],[472,34,516,34],[472,35,516,35],[473,6,517,4],[473,10,517,10,"ninjaY"],[473,16,517,16],[473,19,517,19,"GAME_AREA_HEIGHT"],[473,35,517,35],[473,38,517,38],[473,39,517,39],[474,6,519,4],[474,10,519,8,"closestEnemy"],[474,22,519,20],[474,25,519,23,"enemies"],[474,32,519,30],[474,33,519,31],[474,34,519,32],[474,35,519,33],[475,6,520,4],[475,10,520,8,"closestDistance"],[475,25,520,23],[475,28,520,26,"Infinity"],[475,36,520,34],[476,6,522,4,"enemies"],[476,13,522,11],[476,14,522,12,"forEach"],[476,21,522,19],[476,22,522,20,"enemy"],[476,27,522,25],[476,31,522,29],[477,8,523,6],[477,12,523,12,"distance"],[477,20,523,20],[477,23,523,23,"Math"],[477,27,523,27],[477,28,523,28,"sqrt"],[477,32,523,32],[477,33,524,8,"Math"],[477,37,524,12],[477,38,524,13,"pow"],[477,41,524,16],[477,42,524,17,"enemy"],[477,47,524,22],[477,48,524,23,"position"],[477,56,524,31],[477,57,524,32,"x"],[477,58,524,33],[477,61,524,36,"ninjaX"],[477,67,524,42],[477,69,524,44],[477,70,524,45],[477,71,524,46],[477,74,525,8,"Math"],[477,78,525,12],[477,79,525,13,"pow"],[477,82,525,16],[477,83,525,17,"enemy"],[477,88,525,22],[477,89,525,23,"position"],[477,97,525,31],[477,98,525,32,"y"],[477,99,525,33],[477,102,525,36,"ninjaY"],[477,108,525,42],[477,110,525,44],[477,111,525,45],[477,112,526,6],[477,113,526,7],[478,8,528,6],[478,12,528,10,"distance"],[478,20,528,18],[478,23,528,21,"closestDistance"],[478,38,528,36],[478,40,528,38],[479,10,529,8,"closestDistance"],[479,25,529,23],[479,28,529,26,"distance"],[479,36,529,34],[480,10,530,8,"closestEnemy"],[480,22,530,20],[480,25,530,23,"enemy"],[480,30,530,28],[481,8,531,6],[482,6,532,4],[482,7,532,5],[482,8,532,6],[483,6,534,4,"console"],[483,13,534,11],[483,14,534,12,"log"],[483,17,534,15],[483,18,534,16],[483,60,534,58,"closestDistance"],[483,75,534,73],[483,76,534,74,"toFixed"],[483,83,534,81],[483,84,534,82],[483,85,534,83],[483,86,534,84],[483,88,534,86],[483,89,534,87],[484,6,535,4],[484,13,535,11,"closestEnemy"],[484,25,535,23],[485,4,536,2],[485,5,536,3],[487,4,538,2],[488,4,539,2],[488,8,539,8,"findClosestEnemy"],[488,24,539,24],[488,27,539,27,"findClosestEnemy"],[488,28,539,27],[488,33,539,53],[489,6,540,4],[489,13,540,11,"findClosestEnemyInternal"],[489,37,540,35],[489,38,540,36,"combatState"],[489,49,540,47],[489,50,540,48,"enemies"],[489,57,540,55],[489,58,540,56],[490,4,541,2],[490,5,541,3],[492,4,543,2],[493,4,544,2],[493,8,544,2,"_useState7"],[493,18,544,2],[493,21,544,58],[493,25,544,58,"useState"],[493,31,544,66],[493,32,544,66,"useState"],[493,40,544,66],[493,42,544,91],[494,8,544,93,"x"],[494,9,544,94],[494,11,544,96],[494,12,544,97],[495,8,544,99,"y"],[495,9,544,100],[495,11,544,102],[496,6,544,104],[496,7,544,105],[496,8,544,106],[497,6,544,106,"_useState8"],[497,16,544,106],[497,23,544,106,"_slicedToArray"],[497,37,544,106],[497,38,544,106,"default"],[497,45,544,106],[497,47,544,106,"_useState7"],[497,57,544,106],[498,6,544,9,"currentNinjaPosition"],[498,26,544,29],[498,29,544,29,"_useState8"],[498,39,544,29],[499,6,544,31,"setCurrentNinjaPosition"],[499,29,544,54],[499,32,544,54,"_useState8"],[499,42,544,54],[500,4,545,2],[500,8,545,2,"_useState9"],[500,18,545,2],[500,21,545,60],[500,25,545,60,"useState"],[500,31,545,68],[500,32,545,68,"useState"],[500,40,545,68],[500,42,545,69],[500,47,545,74],[500,48,545,75],[501,6,545,75,"_useState0"],[501,16,545,75],[501,23,545,75,"_slicedToArray"],[501,37,545,75],[501,38,545,75,"default"],[501,45,545,75],[501,47,545,75,"_useState9"],[501,57,545,75],[502,6,545,9,"isManualControlActive"],[502,27,545,30],[502,30,545,30,"_useState0"],[502,40,545,30],[503,6,545,32,"setIsManualControlActive"],[503,30,545,56],[503,33,545,56,"_useState0"],[503,43,545,56],[505,4,547,2],[506,4,548,2],[506,8,548,8,"updateNinjaPosition"],[506,27,548,27],[506,30,548,30],[506,34,548,30,"useCallback"],[506,40,548,41],[506,41,548,41,"useCallback"],[506,52,548,41],[506,54,548,43,"newPosition"],[506,65,548,78],[506,69,548,83],[507,6,549,4,"setCurrentNinjaPosition"],[507,29,549,27],[507,30,549,28,"newPosition"],[507,41,549,39],[507,42,549,40],[508,4,550,2],[508,5,550,3],[508,7,550,5],[508,9,550,7],[508,10,550,8],[510,4,552,2],[511,4,553,2],[511,8,553,8,"setManualControlActive"],[511,30,553,30],[511,33,553,33],[511,37,553,33,"useCallback"],[511,43,553,44],[511,44,553,44,"useCallback"],[511,55,553,44],[511,57,553,46,"active"],[511,63,553,61],[511,67,553,66],[512,6,554,4,"setIsManualControlActive"],[512,30,554,28],[512,31,554,29,"active"],[512,37,554,35],[512,38,554,36],[513,6,555,4,"console"],[513,13,555,11],[513,14,555,12,"log"],[513,17,555,15],[513,18,555,16],[513,39,555,37,"active"],[513,45,555,43],[513,48,555,46],[513,59,555,57],[513,62,555,60],[513,75,555,73],[513,88,555,86,"active"],[513,94,555,92],[513,97,555,95],[513,105,555,103],[513,108,555,106],[513,117,555,115],[513,119,555,117],[513,120,555,118],[514,4,556,2],[514,5,556,3],[514,7,556,5],[514,9,556,7],[514,10,556,8],[516,4,558,2],[517,4,559,2],[517,8,559,8,"handleProjectileHit"],[517,27,559,27],[517,30,559,31,"projectile"],[517,40,559,59],[517,44,559,64],[518,6,560,4,"console"],[518,13,560,11],[518,14,560,12,"log"],[518,17,560,15],[518,18,560,16],[518,35,560,33,"projectile"],[518,45,560,43],[518,46,560,44,"id"],[518,48,560,46],[518,62,560,60,"projectile"],[518,72,560,70],[518,73,560,71,"targetEnemyId"],[518,86,560,84],[518,94,560,92,"projectile"],[518,104,560,102],[518,105,560,103,"damage"],[518,111,560,109],[518,120,560,118],[518,121,560,119],[519,6,562,4,"setCombatState"],[519,20,562,18],[519,21,562,19,"prev"],[519,25,562,23],[519,29,562,27],[520,8,563,6],[520,12,563,12,"newState"],[520,20,563,20],[520,23,563,23],[521,10,563,25],[521,13,563,28,"prev"],[522,8,563,33],[522,9,563,34],[524,8,565,6],[525,8,566,6],[525,12,566,12,"enemyIndex"],[525,22,566,22],[525,25,566,25,"newState"],[525,33,566,33],[525,34,566,34,"enemies"],[525,41,566,41],[525,42,566,42,"findIndex"],[525,51,566,51],[525,52,566,52,"e"],[525,53,566,53],[525,57,566,57,"e"],[525,58,566,58],[525,59,566,59,"id"],[525,61,566,61],[525,66,566,66,"projectile"],[525,76,566,76],[525,77,566,77,"targetEnemyId"],[525,90,566,90],[525,91,566,91],[526,8,567,6],[526,12,567,10,"enemyIndex"],[526,22,567,20],[526,26,567,24],[526,27,567,25],[526,29,567,27],[527,10,568,8,"newState"],[527,18,568,16],[527,19,568,17,"enemies"],[527,26,568,24],[527,29,568,27],[527,30,568,28],[527,33,568,31,"newState"],[527,41,568,39],[527,42,568,40,"enemies"],[527,49,568,47],[527,50,568,48],[528,10,569,8,"newState"],[528,18,569,16],[528,19,569,17,"enemies"],[528,26,569,24],[528,27,569,25,"enemyIndex"],[528,37,569,35],[528,38,569,36],[528,41,569,39],[529,12,570,10],[529,15,570,13,"newState"],[529,23,570,21],[529,24,570,22,"enemies"],[529,31,570,29],[529,32,570,30,"enemyIndex"],[529,42,570,40],[529,43,570,41],[530,12,571,10,"health"],[530,18,571,16],[530,20,571,18,"newState"],[530,28,571,26],[530,29,571,27,"enemies"],[530,36,571,34],[530,37,571,35,"enemyIndex"],[530,47,571,45],[530,48,571,46],[530,49,571,47,"health"],[530,55,571,53],[530,58,571,56,"projectile"],[530,68,571,66],[530,69,571,67,"damage"],[530,75,571,73],[531,12,572,10,"lastDamaged"],[531,23,572,21],[531,25,572,23,"combatEngine"],[531,44,572,35],[531,45,572,35,"combatEngine"],[531,57,572,35],[531,58,572,36,"getCurrentTick"],[531,72,572,50],[531,73,572,51],[532,10,573,8],[532,11,573,9],[533,10,575,8,"console"],[533,17,575,15],[533,18,575,16,"log"],[533,21,575,19],[533,22,575,20],[533,34,575,32,"projectile"],[533,44,575,42],[533,45,575,43,"targetEnemyId"],[533,58,575,56],[533,70,575,68,"newState"],[533,78,575,76],[533,79,575,77,"enemies"],[533,86,575,84],[533,87,575,85,"enemyIndex"],[533,97,575,95],[533,98,575,96],[533,99,575,97,"health"],[533,105,575,103],[533,109,575,107,"newState"],[533,117,575,115],[533,118,575,116,"enemies"],[533,125,575,123],[533,126,575,124,"enemyIndex"],[533,136,575,134],[533,137,575,135],[533,138,575,136,"maxHealth"],[533,147,575,145],[533,149,575,147],[533,150,575,148],[534,8,576,6],[535,8,578,6],[535,15,578,13,"newState"],[535,23,578,21],[536,6,579,4],[536,7,579,5],[536,8,579,6],[538,6,581,4],[539,6,582,4,"setProjectiles"],[539,20,582,18],[539,21,582,19,"prev"],[539,25,582,23],[539,29,582,27,"prev"],[539,33,582,31],[539,34,582,32,"filter"],[539,40,582,38],[539,41,582,39,"p"],[539,42,582,40],[539,46,582,44,"p"],[539,47,582,45],[539,48,582,46,"id"],[539,50,582,48],[539,55,582,53,"projectile"],[539,65,582,63],[539,66,582,64,"id"],[539,68,582,66],[539,69,582,67],[539,70,582,68],[540,4,583,2],[540,5,583,3],[542,4,585,2],[543,4,586,2],[543,8,586,8,"castAbility"],[543,19,586,19],[543,22,586,22,"castAbility"],[543,23,586,23,"state"],[543,28,586,41],[543,30,586,43,"slotIndex"],[543,39,586,60],[543,44,586,65],[544,6,587,4],[544,10,587,10,"deck"],[544,14,587,14],[544,17,587,17,"state"],[544,22,587,22],[544,23,587,23,"abilityManager"],[544,37,587,37],[544,38,587,38,"getDeck"],[544,45,587,45],[544,46,587,46],[544,47,587,47],[545,6,588,4],[545,10,588,10,"ability"],[545,17,588,17],[545,20,588,20,"deck"],[545,24,588,24],[545,25,588,25,"slots"],[545,30,588,30],[545,31,588,31,"slotIndex"],[545,40,588,40],[545,41,588,41],[546,6,589,4],[546,10,589,8],[546,11,589,9,"ability"],[546,18,589,16],[546,20,589,18],[548,6,591,4],[549,6,592,4],[549,10,592,8,"damage"],[549,16,592,14],[549,19,592,17,"ability"],[549,26,592,24],[549,27,592,25,"stats"],[549,32,592,30],[549,33,592,31,"baseDamage"],[549,43,592,41],[551,6,594,4],[552,6,595,4,"deck"],[552,10,595,8],[552,11,595,9,"activeSynergies"],[552,26,595,24],[552,27,595,25,"forEach"],[552,34,595,32],[552,35,595,33,"synergy"],[552,42,595,40],[552,46,595,44],[553,8,596,6],[553,12,596,10,"synergy"],[553,19,596,17],[553,20,596,18,"bonus"],[553,25,596,23],[553,26,596,24,"damageBonus"],[553,37,596,35],[553,41,597,10,"synergy"],[553,48,597,17],[553,49,597,18,"requiredTags"],[553,61,597,30],[553,62,597,31,"some"],[553,66,597,35],[553,67,597,36,"tag"],[553,70,597,39],[553,74,597,43,"ability"],[553,81,597,50],[553,82,597,51,"tags"],[553,86,597,55],[553,87,597,56,"includes"],[553,95,597,64],[553,96,597,65,"tag"],[553,99,597,68],[553,100,597,69],[553,101,597,70],[553,103,597,72],[554,10,598,8,"damage"],[554,16,598,14],[554,20,598,19],[554,21,598,20],[554,24,598,23,"synergy"],[554,31,598,30],[554,32,598,31,"bonus"],[554,37,598,36],[554,38,598,37,"damageBonus"],[554,49,598,48],[554,52,598,51],[554,55,598,55],[555,8,599,6],[556,6,600,4],[556,7,600,5],[556,8,600,6],[558,6,602,4],[559,6,603,4],[559,10,603,10,"isAOE"],[559,15,603,15],[559,18,603,18,"ability"],[559,25,603,25],[559,26,603,26,"effects"],[559,33,603,33],[559,34,603,34,"includes"],[559,42,603,42],[559,43,603,43],[559,48,603,48],[559,49,603,49],[559,53,603,53,"ability"],[559,60,603,60],[559,61,603,61,"stats"],[559,66,603,66],[559,67,603,67,"aoeRadius"],[559,76,603,76],[560,6,605,4],[560,10,605,8,"isAOE"],[560,15,605,13],[560,17,605,15],[561,8,606,6,"console"],[561,15,606,13],[561,16,606,14,"log"],[561,19,606,17],[561,20,606,18],[561,39,606,37,"ability"],[561,46,606,44],[561,47,606,45,"name"],[561,51,606,49],[561,67,606,65,"ability"],[561,74,606,72],[561,75,606,73,"stats"],[561,80,606,78],[561,81,606,79,"aoeRadius"],[561,90,606,88],[561,92,606,90],[561,93,606,91],[563,8,608,6],[564,8,609,6],[565,8,610,6],[565,12,610,12,"target"],[565,18,610,18],[565,21,610,21,"findClosestEnemyInternal"],[565,45,610,45],[565,46,610,46,"state"],[565,51,610,51],[565,52,610,52,"enemies"],[565,59,610,59],[565,60,610,60],[566,8,611,6],[566,12,611,10],[566,13,611,11,"target"],[566,19,611,17],[566,21,611,19],[568,8,613,6],[569,8,614,6,"createProjectile"],[569,24,614,22],[569,25,614,23,"target"],[569,31,614,29],[569,33,614,31,"damage"],[569,39,614,37],[569,41,614,39,"currentNinjaPosition"],[569,61,614,59],[569,63,614,61],[570,10,615,8,"id"],[570,12,615,10],[570,14,615,12,"ability"],[570,21,615,19],[570,22,615,20,"id"],[570,24,615,22],[571,10,616,8,"name"],[571,14,616,12],[571,16,616,14,"ability"],[571,23,616,21],[571,24,616,22,"name"],[571,28,616,26],[572,10,617,8,"icon"],[572,14,617,12],[572,16,617,14,"ability"],[572,23,617,21],[572,24,617,22,"icon"],[573,8,618,6],[573,9,618,7],[573,11,618,9],[573,15,618,13],[573,17,618,15,"ability"],[573,24,618,22],[573,25,618,23,"stats"],[573,30,618,28],[573,31,618,29,"aoeRadius"],[573,40,618,38],[573,41,618,39],[573,42,618,40],[573,43,618,41],[575,8,620,6,"console"],[575,15,620,13],[575,16,620,14,"log"],[575,19,620,17],[575,20,620,18],[575,26,620,24,"ability"],[575,33,620,31],[575,34,620,32,"name"],[575,38,620,36],[575,75,620,73,"target"],[575,81,620,79],[575,82,620,80,"name"],[575,86,620,84],[575,95,620,93,"ability"],[575,102,620,100],[575,103,620,101,"stats"],[575,108,620,106],[575,109,620,107,"aoeRadius"],[575,118,620,116],[575,127,620,125],[575,128,620,126],[576,8,621,6,"console"],[576,15,621,13],[576,16,621,14,"log"],[576,19,621,17],[576,20,621,18],[576,44,621,42,"damage"],[576,50,621,48],[576,77,621,75,"ability"],[576,84,621,82],[576,85,621,83,"stats"],[576,90,621,88],[576,91,621,89,"aoeRadius"],[576,100,621,98],[576,102,621,100],[576,103,621,101],[577,6,623,4],[577,7,623,5],[577,13,623,11],[578,8,624,6],[579,8,625,6],[579,12,625,12,"target"],[579,19,625,18],[579,22,625,21,"findClosestEnemyInternal"],[579,46,625,45],[579,47,625,46,"state"],[579,52,625,51],[579,53,625,52,"enemies"],[579,60,625,59],[579,61,625,60],[580,8,626,6],[580,12,626,10],[580,13,626,11,"target"],[580,20,626,17],[580,22,626,19],[581,8,628,6],[581,12,628,12,"damageResult"],[581,24,628,24],[581,27,628,27,"DamageCalculator"],[581,46,628,43],[581,47,628,43,"DamageCalculator"],[581,63,628,43],[581,64,628,44,"calculateDamage"],[581,79,628,59],[581,80,628,60,"damage"],[581,86,628,66],[581,88,628,68,"state"],[581,93,628,73],[581,94,628,74,"playerStats"],[581,105,628,85],[581,107,628,87,"target"],[581,114,628,93],[581,115,628,94,"stats"],[581,120,628,99],[581,121,628,100],[583,8,630,6],[584,8,631,6,"createProjectile"],[584,24,631,22],[584,25,631,23,"target"],[584,32,631,29],[584,34,631,31,"damageResult"],[584,46,631,43],[584,47,631,44,"damage"],[584,53,631,50],[584,55,631,52,"currentNinjaPosition"],[584,75,631,72],[584,77,631,74],[585,10,632,8,"id"],[585,12,632,10],[585,14,632,12,"ability"],[585,21,632,19],[585,22,632,20,"id"],[585,24,632,22],[586,10,633,8,"name"],[586,14,633,12],[586,16,633,14,"ability"],[586,23,633,21],[586,24,633,22,"name"],[586,28,633,26],[587,10,634,8,"icon"],[587,14,634,12],[587,16,634,14,"ability"],[587,23,634,21],[587,24,634,22,"icon"],[588,8,635,6],[588,9,635,7],[588,10,635,8],[589,8,637,6,"console"],[589,15,637,13],[589,16,637,14,"log"],[589,19,637,17],[589,20,637,18],[589,26,637,24,"ability"],[589,33,637,31],[589,34,637,32,"name"],[589,38,637,36],[589,66,637,64,"damageResult"],[589,78,637,76],[589,79,637,77,"damage"],[589,85,637,83],[589,95,637,93,"damageResult"],[589,107,637,105],[589,108,637,106,"isCritical"],[589,118,637,116],[589,121,637,119],[589,131,637,129],[589,134,637,132],[589,136,637,134],[589,138,637,136],[589,139,637,137],[590,6,638,4],[592,6,640,4],[593,6,641,4],[593,10,641,8,"ability"],[593,17,641,15],[593,18,641,16,"effects"],[593,25,641,23],[593,26,641,24,"includes"],[593,34,641,32],[593,35,641,33],[593,40,641,38],[593,41,641,39],[593,45,641,43,"ability"],[593,52,641,50],[593,53,641,51,"stats"],[593,58,641,56],[593,59,641,57,"duration"],[593,67,641,65],[593,69,641,67],[594,8,642,6],[594,12,642,12,"targets"],[594,19,642,19],[594,22,642,22,"isAOE"],[594,27,642,27],[594,30,643,8,"state"],[594,35,643,13],[594,36,643,14,"enemies"],[594,43,643,21],[594,44,643,22,"filter"],[594,50,643,28],[594,51,643,29,"enemy"],[594,56,643,34],[594,60,643,38],[595,10,644,10],[595,14,644,16,"ninjaX"],[595,20,644,22],[595,23,644,25,"currentNinjaPosition"],[595,43,644,45],[595,44,644,46,"x"],[595,45,644,47],[595,48,644,50],[595,50,644,52],[596,10,645,10],[596,14,645,16,"ninjaY"],[596,20,645,22],[596,23,645,25,"currentNinjaPosition"],[596,43,645,45],[596,44,645,46,"y"],[596,45,645,47],[596,48,645,50],[596,50,645,52],[597,10,646,10],[597,14,646,16,"enemyX"],[597,20,646,22],[597,23,646,25,"enemy"],[597,28,646,30],[597,29,646,31,"position"],[597,37,646,39],[597,38,646,40,"x"],[597,39,646,41],[597,42,646,44],[597,46,646,48],[598,10,647,10],[598,14,647,16,"enemyY"],[598,20,647,22],[598,23,647,25,"enemy"],[598,28,647,30],[598,29,647,31,"position"],[598,37,647,39],[598,38,647,40,"y"],[598,39,647,41],[598,42,647,44],[598,46,647,48],[599,10,648,10],[599,14,648,16,"distance"],[599,22,648,24],[599,25,648,27,"Math"],[599,29,648,31],[599,30,648,32,"sqrt"],[599,34,648,36],[599,35,648,37,"Math"],[599,39,648,41],[599,40,648,42,"pow"],[599,43,648,45],[599,44,648,46,"enemyX"],[599,50,648,52],[599,53,648,55,"ninjaX"],[599,59,648,61],[599,61,648,63],[599,62,648,64],[599,63,648,65],[599,66,648,68,"Math"],[599,70,648,72],[599,71,648,73,"pow"],[599,74,648,76],[599,75,648,77,"enemyY"],[599,81,648,83],[599,84,648,86,"ninjaY"],[599,90,648,92],[599,92,648,94],[599,93,648,95],[599,94,648,96],[599,95,648,97],[600,10,649,10],[600,17,649,17,"distance"],[600,25,649,25],[600,29,649,29,"ability"],[600,36,649,36],[600,37,649,37,"stats"],[600,42,649,42],[600,43,649,43,"aoeRadius"],[600,52,649,52],[601,8,650,8],[601,9,650,9],[601,10,650,10],[601,13,651,8],[601,14,651,9,"findClosestEnemyInternal"],[601,38,651,33],[601,39,651,34,"state"],[601,44,651,39],[601,45,651,40,"enemies"],[601,52,651,47],[601,53,651,48],[601,54,651,49],[601,55,651,50,"filter"],[601,61,651,56],[601,62,651,57,"Boolean"],[601,69,651,64],[601,70,651,65],[602,8,653,6,"targets"],[602,15,653,13],[602,16,653,14,"forEach"],[602,23,653,21],[602,24,653,22,"target"],[602,30,653,28],[602,34,653,32],[603,10,654,8,"state"],[603,15,654,13],[603,16,654,14,"statusEffects"],[603,29,654,27],[603,30,654,28,"addEffect"],[603,39,654,37],[603,40,654,38,"target"],[603,46,654,44],[603,47,654,45,"id"],[603,49,654,47],[603,51,654,49],[604,12,655,10,"id"],[604,14,655,12],[604,16,655,14],[604,19,655,17,"ability"],[604,26,655,24],[604,27,655,25,"id"],[604,29,655,27],[604,35,655,33],[605,12,656,10,"type"],[605,16,656,14],[605,18,656,16],[605,23,656,21],[606,12,657,10,"remainingTicks"],[606,26,657,24],[606,28,657,26,"Math"],[606,32,657,30],[606,33,657,31,"floor"],[606,38,657,36],[606,39,657,37,"ability"],[606,46,657,44],[606,47,657,45,"stats"],[606,52,657,50],[606,53,657,51,"duration"],[606,61,657,59],[606,64,657,62],[606,66,657,64],[606,67,657,65],[607,12,658,10,"tickInterval"],[607,24,658,22],[607,26,658,24],[607,28,658,26],[608,12,659,10,"lastTick"],[608,20,659,18],[608,22,659,20,"state"],[608,27,659,25],[608,28,659,26,"currentTick"],[608,39,659,37],[609,12,660,10,"value"],[609,17,660,15],[609,19,660,17,"Math"],[609,23,660,21],[609,24,660,22,"floor"],[609,29,660,27],[609,30,660,28,"damage"],[609,36,660,34],[609,39,660,37],[609,42,660,40],[609,43,660,41],[610,12,661,10,"stackable"],[610,21,661,19],[610,23,661,21],[611,10,662,8],[611,11,662,9],[611,12,662,10],[612,8,663,6],[612,9,663,7],[612,10,663,8],[613,6,664,4],[615,6,666,4],[616,6,667,4],[616,10,667,8,"ability"],[616,17,667,15],[616,18,667,16,"effects"],[616,25,667,23],[616,26,667,24,"includes"],[616,34,667,32],[616,35,667,33],[616,41,667,39],[616,42,667,40],[616,46,667,44,"ability"],[616,53,667,51],[616,54,667,52,"id"],[616,56,667,54],[616,61,667,59],[616,75,667,73],[616,77,667,75],[617,8,668,6,"console"],[617,15,668,13],[617,16,668,14,"log"],[617,19,668,17],[617,20,668,18],[617,66,668,64,"ability"],[617,73,668,71],[617,74,668,72,"stats"],[617,79,668,77],[617,80,668,78,"duration"],[617,88,668,86],[617,98,668,96],[617,99,668,97],[619,8,670,6],[620,8,671,6],[620,12,671,12,"cloneX"],[620,18,671,18],[620,21,671,21,"currentNinjaPosition"],[620,41,671,41],[620,42,671,42,"x"],[620,43,671,43],[620,46,671,46],[620,48,671,48],[620,49,671,49],[620,50,671,50],[621,8,672,6],[621,12,672,12,"cloneY"],[621,18,672,18],[621,21,672,21,"currentNinjaPosition"],[621,41,672,41],[621,42,672,42,"y"],[621,43,672,43],[621,46,672,46],[621,48,672,48],[621,49,672,49],[621,50,672,50],[623,8,674,6,"state"],[623,13,674,11],[623,14,674,12,"shadowClone"],[623,25,674,23],[623,28,674,26],[624,10,675,8,"id"],[624,12,675,10],[624,14,675,12],[624,30,675,28,"Date"],[624,34,675,32],[624,35,675,33,"now"],[624,38,675,36],[624,39,675,37],[624,40,675,38],[624,42,675,40],[625,10,676,8,"remainingTicks"],[625,24,676,22],[625,26,676,24,"Math"],[625,30,676,28],[625,31,676,29,"floor"],[625,36,676,34],[625,37,676,35,"ability"],[625,44,676,42],[625,45,676,43,"stats"],[625,50,676,48],[625,51,676,49,"duration"],[625,59,676,57],[625,62,676,60],[625,64,676,62],[625,65,676,63],[626,10,676,65],[627,10,677,8,"position"],[627,18,677,16],[627,20,677,18],[628,12,677,20,"x"],[628,13,677,21],[628,15,677,23,"cloneX"],[628,21,677,29],[629,12,677,31,"y"],[629,13,677,32],[629,15,677,34,"cloneY"],[630,10,677,41],[630,11,677,42],[631,10,678,8,"damageMultiplier"],[631,26,678,24],[631,28,678,26],[631,31,678,29],[631,32,678,31],[632,8,679,6],[632,9,679,7],[633,8,681,6,"console"],[633,15,681,13],[633,16,681,14,"log"],[633,19,681,17],[633,20,681,18],[633,63,681,61,"ability"],[633,70,681,68],[633,71,681,69,"stats"],[633,76,681,74],[633,77,681,75,"duration"],[633,85,681,83],[633,108,681,106],[633,109,681,107],[634,6,682,4],[635,4,683,2],[635,5,683,3],[637,4,685,2],[638,4,686,2],[638,8,686,8,"createProjectile"],[638,24,686,24],[638,27,686,27,"createProjectile"],[638,28,686,28,"targetEnemy"],[638,39,686,52],[638,41,686,54,"damage"],[638,47,686,68],[638,49,686,70,"ninjaPos"],[638,57,686,103],[638,59,686,105,"abilityInfo"],[638,70,686,159],[638,72,686,161,"isAOE"],[638,77,686,176],[638,79,686,178,"aoeRadius"],[638,88,686,196],[638,93,686,201],[639,6,687,4],[639,10,687,8],[639,11,687,9,"targetEnemy"],[639,22,687,20],[639,24,687,22],[640,8,688,6,"console"],[640,15,688,13],[640,16,688,14,"log"],[640,19,688,17],[640,20,688,18],[640,65,688,63],[640,66,688,64],[641,8,689,6],[641,15,689,13],[641,19,689,17],[642,6,690,4],[643,6,692,4],[643,10,692,10,"SCREEN_WIDTH"],[643,22,692,22],[643,25,692,25],[643,28,692,28],[644,6,693,4],[644,10,693,10,"GAME_AREA_HEIGHT"],[644,26,693,26],[644,29,693,29],[644,32,693,32],[644,35,693,35],[644,38,693,38],[644,39,693,39],[644,40,693,40],[645,6,694,4],[645,10,694,10,"NINJA_SIZE"],[645,20,694,20],[645,23,694,23],[645,25,694,25],[647,6,696,4],[648,6,697,4],[648,10,697,10,"ninjaX"],[648,16,697,16],[648,19,697,19,"ninjaPos"],[648,27,697,27],[648,30,697,30,"ninjaPos"],[648,38,697,38],[648,39,697,39,"x"],[648,40,697,40],[648,43,697,43,"NINJA_SIZE"],[648,53,697,53],[648,56,697,56],[648,57,697,57],[648,60,697,60,"SCREEN_WIDTH"],[648,72,697,72],[648,75,697,75],[648,76,697,76],[649,6,698,4],[649,10,698,10,"ninjaY"],[649,16,698,16],[649,19,698,19,"ninjaPos"],[649,27,698,27],[649,30,698,30,"ninjaPos"],[649,38,698,38],[649,39,698,39,"y"],[649,40,698,40],[649,43,698,43,"NINJA_SIZE"],[649,53,698,53],[649,56,698,56],[649,57,698,57],[649,60,698,60,"GAME_AREA_HEIGHT"],[649,76,698,76],[649,79,698,79],[649,80,698,80],[650,6,699,4],[650,10,699,10,"ENEMY_SIZE"],[650,20,699,20],[650,23,699,23],[650,25,699,25],[651,6,701,4],[651,10,701,10,"projectileId"],[651,22,701,22],[651,25,701,25],[651,33,701,33,"Date"],[651,37,701,37],[651,38,701,38,"now"],[651,41,701,41],[651,42,701,42],[651,43,701,43],[651,47,701,47,"Math"],[651,51,701,51],[651,52,701,52,"random"],[651,58,701,58],[651,59,701,59],[651,60,701,60],[651,62,701,62],[652,6,703,4],[652,10,703,10,"projectile"],[652,20,703,38],[652,23,703,41],[653,8,704,6,"id"],[653,10,704,8],[653,12,704,10,"projectileId"],[653,24,704,22],[654,8,705,6,"x"],[654,9,705,7],[654,11,705,9,"ninjaX"],[654,17,705,15],[655,8,706,6,"y"],[655,9,706,7],[655,11,706,9,"ninjaY"],[655,17,706,15],[656,8,707,6,"targetX"],[656,15,707,13],[656,17,707,15,"targetEnemy"],[656,28,707,26],[656,29,707,27,"position"],[656,37,707,35],[656,38,707,36,"x"],[656,39,707,37],[656,42,707,40,"ENEMY_SIZE"],[656,52,707,50],[656,55,707,53],[656,56,707,54],[657,8,708,6,"targetY"],[657,15,708,13],[657,17,708,15,"targetEnemy"],[657,28,708,26],[657,29,708,27,"position"],[657,37,708,35],[657,38,708,36,"y"],[657,39,708,37],[657,42,708,40,"ENEMY_SIZE"],[657,52,708,50],[657,55,708,53],[657,56,708,54],[658,8,709,6,"targetEnemyId"],[658,21,709,19],[658,23,709,21,"targetEnemy"],[658,34,709,32],[658,35,709,33,"id"],[658,37,709,35],[659,8,710,6,"damage"],[659,14,710,12],[659,16,710,14,"damage"],[659,22,710,20],[660,8,711,6,"startTime"],[660,17,711,15],[660,19,711,17,"Date"],[660,23,711,21],[660,24,711,22,"now"],[660,27,711,25],[660,28,711,26],[660,29,711,27],[661,8,712,6,"duration"],[661,16,712,14],[661,18,712,16],[661,21,712,19],[662,8,712,21],[663,8,713,6],[664,8,714,6,"abilityId"],[664,17,714,15],[664,19,714,17,"abilityInfo"],[664,30,714,28],[664,32,714,30,"id"],[664,34,714,32],[664,38,714,36],[664,54,714,52],[665,8,715,6,"abilityName"],[665,19,715,17],[665,21,715,19,"abilityInfo"],[665,32,715,30],[665,34,715,32,"name"],[665,38,715,36],[665,42,715,40],[665,58,715,56],[666,8,716,6,"abilityIcon"],[666,19,716,17],[666,21,716,19,"abilityInfo"],[666,32,716,30],[666,34,716,32,"icon"],[666,38,716,36],[666,42,716,40],[666,46,716,44],[667,8,716,46],[668,8,717,6],[669,8,718,6,"isAOE"],[669,13,718,11],[669,15,718,13,"isAOE"],[669,20,718,18],[669,24,718,22],[669,29,718,27],[670,8,719,6,"aoeRadius"],[670,17,719,15],[670,19,719,17,"aoeRadius"],[670,28,719,26],[670,32,719,30],[671,6,720,4],[671,7,720,5],[672,6,722,4,"console"],[672,13,722,11],[672,14,722,12,"log"],[672,17,722,15],[672,18,722,16],[672,44,722,42,"abilityInfo"],[672,55,722,53],[672,57,722,55,"name"],[672,61,722,59],[672,65,722,63],[672,81,722,79],[672,101,722,99,"projectileId"],[672,113,722,111],[672,128,722,126,"targetEnemy"],[672,139,722,137],[672,140,722,138,"name"],[672,144,722,142],[672,152,722,150,"damage"],[672,158,722,156],[672,167,722,165],[672,168,722,166],[673,6,723,4,"console"],[673,13,723,11],[673,14,723,12,"log"],[673,17,723,15],[673,18,723,16],[673,48,723,46,"isAOE"],[673,53,723,51],[673,68,723,66,"aoeRadius"],[673,77,723,75],[673,89,723,87,"damage"],[673,95,723,93],[673,97,723,95],[673,98,723,96],[674,6,725,4,"console"],[674,13,725,11],[674,14,725,12,"log"],[674,17,725,15],[674,18,725,16],[674,53,725,51,"targetEnemy"],[674,64,725,62],[674,65,725,63,"id"],[674,67,725,65],[674,75,725,73,"damage"],[674,81,725,79],[674,90,725,88],[674,91,725,89],[675,6,726,4,"console"],[675,13,726,11],[675,14,726,12,"log"],[675,17,726,15],[675,18,726,16],[675,53,726,51,"ninjaX"],[675,59,726,57],[675,64,726,62,"ninjaY"],[675,70,726,68],[675,87,726,85,"projectile"],[675,97,726,95],[675,98,726,96,"targetX"],[675,105,726,103],[675,110,726,108,"projectile"],[675,120,726,118],[675,121,726,119,"targetY"],[675,128,726,126],[675,131,726,129],[675,132,726,130],[676,6,728,4,"setProjectiles"],[676,20,728,18],[676,21,728,19,"prev"],[676,25,728,23],[676,29,728,27],[676,30,728,28],[676,33,728,31,"prev"],[676,37,728,35],[676,39,728,37,"projectile"],[676,49,728,47],[676,50,728,48],[676,51,728,49],[678,6,730,4],[679,6,731,4,"setTimeout"],[679,16,731,14],[679,17,731,15],[679,23,731,21],[680,8,732,6,"handleProjectileHit"],[680,27,732,25],[680,28,732,26,"projectile"],[680,38,732,36],[680,39,732,37],[681,6,733,4],[681,7,733,5],[681,9,733,7],[681,12,733,10],[681,13,733,11],[682,6,735,4],[682,13,735,11,"projectile"],[682,23,735,21],[683,4,736,2],[683,5,736,3],[685,4,738,2],[686,4,739,2],[686,8,739,8,"spawnTestEnemy"],[686,22,739,22],[686,25,739,26,"state"],[686,30,739,44],[686,34,739,49],[687,6,740,4,"console"],[687,13,740,11],[687,14,740,12,"log"],[687,17,740,15],[687,18,740,16],[687,83,740,81],[687,84,740,82],[689,6,742,4],[690,6,743,4],[690,10,743,10,"zoneEnemy"],[690,19,743,19],[690,22,743,22,"spawnZoneEnemy"],[690,36,743,36],[690,37,743,37],[690,38,743,38],[691,6,744,4],[691,10,744,8],[691,11,744,9,"zoneEnemy"],[691,20,744,18],[691,22,744,20],[692,8,745,6,"console"],[692,15,745,13],[692,16,745,14,"log"],[692,19,745,17],[692,20,745,18],[692,76,745,74],[692,77,745,75],[693,8,746,6],[694,8,747,6,"spawnBasicTestEnemy"],[694,27,747,25],[694,28,747,26,"state"],[694,33,747,31],[694,34,747,32],[695,8,748,6],[696,6,749,4],[697,6,751,4,"console"],[697,13,751,11],[697,14,751,12,"log"],[697,17,751,15],[697,18,751,16],[697,44,751,42,"zoneEnemy"],[697,53,751,51],[697,54,751,52,"name"],[697,58,751,56],[697,63,751,61,"zoneEnemy"],[697,72,751,70],[697,73,751,71,"typeId"],[697,79,751,77],[697,94,751,92,"currentZone"],[697,105,751,103],[697,107,751,105,"id"],[697,109,751,107],[697,119,751,117,"currentZoneLevel"],[697,135,751,133],[697,137,751,135,"level"],[697,142,751,140],[697,144,751,142],[697,145,751,143],[699,6,753,4],[700,6,754,4],[700,10,754,10,"combatEnemy"],[700,21,754,34],[700,24,754,37],[701,8,755,6,"id"],[701,10,755,8],[701,12,755,10,"zoneEnemy"],[701,21,755,19],[701,22,755,20,"id"],[701,24,755,22],[702,8,756,6,"name"],[702,12,756,10],[702,14,756,12,"zoneEnemy"],[702,23,756,21],[702,24,756,22,"name"],[702,28,756,26],[703,8,757,6,"health"],[703,14,757,12],[703,16,757,14,"zoneEnemy"],[703,25,757,23],[703,26,757,24,"hp"],[703,28,757,26],[704,8,758,6,"maxHealth"],[704,17,758,15],[704,19,758,17,"zoneEnemy"],[704,28,758,26],[704,29,758,27,"maxHP"],[704,34,758,32],[705,8,759,6,"stats"],[705,13,759,11],[705,15,759,13],[706,10,760,8,"attack"],[706,16,760,14],[706,18,760,16,"zoneEnemy"],[706,27,760,25],[706,28,760,26,"attack"],[706,34,760,32],[707,10,761,8,"defense"],[707,17,761,15],[707,19,761,17],[707,21,761,19],[708,10,761,21],[709,10,762,8,"health"],[709,16,762,14],[709,18,762,16,"zoneEnemy"],[709,27,762,25],[709,28,762,26,"hp"],[709,30,762,28],[710,10,763,8,"maxHealth"],[710,19,763,17],[710,21,763,19,"zoneEnemy"],[710,30,763,28],[710,31,763,29,"maxHP"],[710,36,763,34],[711,10,764,8,"critChance"],[711,20,764,18],[711,22,764,20],[711,23,764,21],[712,10,765,8,"critDamage"],[712,20,765,18],[712,22,765,20],[712,25,765,23],[713,10,766,8,"cooldownReduction"],[713,27,766,25],[713,29,766,27],[714,8,767,6],[714,9,767,7],[715,8,768,6,"position"],[715,16,768,14],[715,18,768,16,"zoneEnemy"],[715,27,768,25],[715,28,768,26,"position"],[715,36,768,34],[716,8,769,6,"lastDamaged"],[716,19,769,17],[716,21,769,19],[716,22,769,20],[717,8,770,6],[718,8,771,6,"zoneTypeId"],[718,18,771,16],[718,20,771,18,"zoneEnemy"],[718,29,771,27],[718,30,771,28,"typeId"],[718,36,771,34],[719,8,772,6,"zoneXP"],[719,14,772,12],[719,16,772,14,"zoneEnemy"],[719,25,772,23],[719,26,772,24,"xp"],[720,6,773,4],[720,7,773,5],[721,6,775,4,"console"],[721,13,775,11],[721,14,775,12,"log"],[721,17,775,15],[721,18,775,16],[721,42,775,40,"combatEnemy"],[721,53,775,51],[721,54,775,52,"name"],[721,58,775,56],[721,67,775,65,"combatEnemy"],[721,78,775,76],[721,79,775,77,"health"],[721,85,775,83],[721,100,775,98,"currentZone"],[721,111,775,109],[721,113,775,111,"id"],[721,115,775,113],[721,125,775,123,"currentZoneLevel"],[721,141,775,139],[721,143,775,141,"level"],[721,148,775,146],[721,150,775,148],[721,151,775,149],[722,6,776,4,"state"],[722,11,776,9],[722,12,776,10,"enemies"],[722,19,776,17],[722,20,776,18,"push"],[722,24,776,22],[722,25,776,23,"combatEnemy"],[722,36,776,34],[722,37,776,35],[723,4,777,2],[723,5,777,3],[725,4,779,2],[726,4,780,2],[726,8,780,8,"spawnBasicTestEnemy"],[726,27,780,27],[726,30,780,31,"state"],[726,35,780,49],[726,39,780,54],[727,6,781,4],[727,10,781,10,"SCREEN_WIDTH"],[727,22,781,22],[727,25,781,25],[727,28,781,28],[728,6,782,4],[728,10,782,10,"GAME_AREA_HEIGHT"],[728,26,782,26],[728,29,782,29],[728,32,782,32],[728,35,782,35],[728,38,782,38],[729,6,783,4],[729,10,783,10,"ENEMY_SIZE"],[729,20,783,20],[729,23,783,23],[729,25,783,25],[730,6,785,4],[730,10,785,10,"x"],[730,11,785,11],[730,14,785,14,"Math"],[730,18,785,18],[730,19,785,19,"random"],[730,25,785,25],[730,26,785,26],[730,27,785,27],[730,31,785,31,"SCREEN_WIDTH"],[730,43,785,43],[730,46,785,46,"ENEMY_SIZE"],[730,56,785,56],[730,59,785,59],[730,60,785,60],[730,61,785,61],[730,64,785,64,"ENEMY_SIZE"],[730,74,785,74],[731,6,786,4],[731,10,786,10,"y"],[731,11,786,11],[731,14,786,14,"Math"],[731,18,786,18],[731,19,786,19,"random"],[731,25,786,25],[731,26,786,26],[731,27,786,27],[731,31,786,31,"GAME_AREA_HEIGHT"],[731,47,786,47],[731,50,786,50,"ENEMY_SIZE"],[731,60,786,60],[731,63,786,63],[731,64,786,64],[731,65,786,65],[731,68,786,68,"ENEMY_SIZE"],[731,78,786,78],[732,6,788,4],[732,10,788,10,"enemy"],[732,15,788,28],[732,18,788,31],[733,8,789,6,"id"],[733,10,789,8],[733,12,789,10],[733,30,789,28,"Date"],[733,34,789,32],[733,35,789,33,"now"],[733,38,789,36],[733,39,789,37],[733,40,789,38],[733,44,789,42,"Math"],[733,48,789,46],[733,49,789,47,"random"],[733,55,789,53],[733,56,789,54],[733,57,789,55],[733,59,789,57],[734,8,790,6,"name"],[734,12,790,10],[734,14,790,12],[734,26,790,24,"Math"],[734,30,790,28],[734,31,790,29,"floor"],[734,36,790,34],[734,37,790,35,"Math"],[734,41,790,39],[734,42,790,40,"random"],[734,48,790,46],[734,49,790,47],[734,50,790,48],[734,53,790,51],[734,56,790,54],[734,57,790,55],[734,59,790,57],[735,8,791,6,"health"],[735,14,791,12],[735,16,791,14],[735,18,791,16],[736,8,792,6,"maxHealth"],[736,17,792,15],[736,19,792,17],[736,21,792,19],[737,8,793,6,"stats"],[737,13,793,11],[737,15,793,13],[738,10,794,8,"attack"],[738,16,794,14],[738,18,794,16],[738,20,794,18],[739,10,795,8,"defense"],[739,17,795,15],[739,19,795,17],[739,21,795,19],[740,10,796,8,"health"],[740,16,796,14],[740,18,796,16],[740,20,796,18],[741,10,797,8,"maxHealth"],[741,19,797,17],[741,21,797,19],[741,23,797,21],[742,10,798,8,"critChance"],[742,20,798,18],[742,22,798,20],[742,23,798,21],[743,10,799,8,"critDamage"],[743,20,799,18],[743,22,799,20],[743,25,799,23],[744,10,800,8,"cooldownReduction"],[744,27,800,25],[744,29,800,27],[745,8,801,6],[745,9,801,7],[746,8,802,6,"position"],[746,16,802,14],[746,18,802,16],[747,10,802,18,"x"],[747,11,802,19],[748,10,802,21,"y"],[749,8,802,23],[749,9,802,24],[750,8,803,6,"lastDamaged"],[750,19,803,17],[750,21,803,19],[751,6,804,4],[751,7,804,5],[752,6,806,4,"console"],[752,13,806,11],[752,14,806,12,"log"],[752,17,806,15],[752,18,806,16],[752,42,806,40,"enemy"],[752,47,806,45],[752,48,806,46,"name"],[752,52,806,50],[752,60,806,58,"Math"],[752,64,806,62],[752,65,806,63,"round"],[752,70,806,68],[752,71,806,69,"x"],[752,72,806,70],[752,73,806,71],[752,78,806,76,"Math"],[752,82,806,80],[752,83,806,81,"round"],[752,88,806,86],[752,89,806,87,"y"],[752,90,806,88],[752,91,806,89],[752,94,806,92],[752,95,806,93],[753,6,807,4,"state"],[753,11,807,9],[753,12,807,10,"enemies"],[753,19,807,17],[753,20,807,18,"push"],[753,24,807,22],[753,25,807,23,"enemy"],[753,30,807,28],[753,31,807,29],[754,4,808,2],[754,5,808,3],[756,4,810,2],[757,4,811,2],[757,8,811,8,"startCombat"],[757,19,811,19],[757,22,811,22,"React"],[757,27,811,27],[757,28,811,27,"default"],[757,35,811,27],[757,36,811,28,"useCallback"],[757,47,811,39],[757,48,811,40],[757,54,811,46],[758,6,812,4,"console"],[758,13,812,11],[758,14,812,12,"log"],[758,17,812,15],[758,18,812,16],[758,63,812,61],[758,64,812,62],[759,6,813,4,"setCombatState"],[759,20,813,18],[759,21,813,19,"prev"],[759,25,813,23],[759,30,813,28],[760,8,813,30],[760,11,813,33,"prev"],[760,15,813,37],[761,8,813,39,"isInCombat"],[761,18,813,49],[761,20,813,51],[762,6,813,56],[762,7,813,57],[762,8,813,58],[762,9,813,59],[764,6,815,4],[765,6,816,4,"combatEngine"],[765,25,816,16],[765,26,816,16,"combatEngine"],[765,38,816,16],[765,39,816,17,"addTickCallback"],[765,54,816,32],[765,55,816,33,"handleCombatTick"],[765,71,816,49],[765,72,816,50],[766,6,817,4,"console"],[766,13,817,11],[766,14,817,12,"log"],[766,17,817,15],[766,18,817,16],[766,62,817,60],[766,63,817,61],[768,6,819,4],[769,6,820,4,"combatEngine"],[769,25,820,16],[769,26,820,16,"combatEngine"],[769,38,820,16],[769,39,820,17,"start"],[769,44,820,22],[769,45,820,23],[769,46,820,24],[770,4,821,2],[770,5,821,3],[770,7,821,5],[770,8,821,6,"combatEngine"],[770,27,821,18],[770,28,821,18,"combatEngine"],[770,40,821,18],[770,42,821,20,"handleCombatTick"],[770,58,821,36],[770,59,821,37],[770,60,821,38],[772,4,823,2],[773,4,824,2],[773,8,824,8,"stopCombat"],[773,18,824,18],[773,21,824,21,"React"],[773,26,824,26],[773,27,824,26,"default"],[773,34,824,26],[773,35,824,27,"useCallback"],[773,46,824,38],[773,47,824,39],[773,53,824,45],[774,6,825,4,"setCombatState"],[774,20,825,18],[774,21,825,19,"prev"],[774,25,825,23],[774,30,825,28],[775,8,825,30],[775,11,825,33,"prev"],[775,15,825,37],[776,8,825,39,"isInCombat"],[776,18,825,49],[776,20,825,51],[777,6,825,57],[777,7,825,58],[777,8,825,59],[777,9,825,60],[778,6,826,4,"combatEngine"],[778,25,826,16],[778,26,826,16,"combatEngine"],[778,38,826,16],[778,39,826,17,"removeTickCallback"],[778,57,826,35],[778,58,826,36,"handleCombatTick"],[778,74,826,52],[778,75,826,53],[779,4,827,2],[779,5,827,3],[779,7,827,5],[779,8,827,6,"combatEngine"],[779,27,827,18],[779,28,827,18,"combatEngine"],[779,40,827,18],[779,42,827,20,"handleCombatTick"],[779,58,827,36],[779,59,827,37],[779,60,827,38],[781,4,829,2],[782,4,830,2],[782,8,830,8,"equipAbility"],[782,20,830,20],[782,23,830,23,"equipAbility"],[782,24,830,24,"abilityId"],[782,33,830,41],[782,35,830,43,"slotIndex"],[782,44,830,60],[782,49,830,74],[783,6,831,4],[783,13,831,11,"combatState"],[783,24,831,22],[783,25,831,23,"abilityManager"],[783,39,831,37],[783,40,831,38,"equipAbility"],[783,52,831,50],[783,53,831,51,"abilityId"],[783,62,831,60],[783,64,831,62,"slotIndex"],[783,73,831,71],[783,74,831,72],[784,4,832,2],[784,5,832,3],[785,4,834,2],[785,8,834,8,"getDeck"],[785,15,834,15],[785,18,834,18,"getDeck"],[785,19,834,18],[785,24,834,24],[786,6,835,4],[786,13,835,11,"combatState"],[786,24,835,22],[786,25,835,23,"abilityManager"],[786,39,835,37],[786,40,835,38,"getDeck"],[786,47,835,45],[786,48,835,46],[786,49,835,47],[787,4,836,2],[787,5,836,3],[788,4,838,2],[788,8,838,8,"getAvailableAbilities"],[788,29,838,29],[788,32,838,32,"getAvailableAbilities"],[788,33,838,32],[788,38,838,38],[789,6,839,4],[789,13,839,11,"combatState"],[789,24,839,22],[789,25,839,23,"abilityManager"],[789,39,839,37],[789,40,839,38,"getAvailableAbilities"],[789,61,839,59],[789,62,839,60],[789,63,839,61],[790,4,840,2],[790,5,840,3],[791,4,842,2],[791,8,842,8,"upgradeAbility"],[791,22,842,22],[791,25,842,26,"abilityId"],[791,34,842,43],[791,38,842,57],[792,6,843,4],[792,13,843,11,"combatState"],[792,24,843,22],[792,25,843,23,"abilityManager"],[792,39,843,37],[792,40,843,38,"upgradeAbility"],[792,54,843,52],[792,55,843,53,"abilityId"],[792,64,843,62],[792,65,843,63],[793,4,844,2],[793,5,844,3],[795,4,846,2],[796,4,847,2],[796,8,847,8,"clearAllEnemies"],[796,23,847,23],[796,26,847,26,"clearAllEnemies"],[796,27,847,26],[796,32,847,32],[797,6,848,4,"console"],[797,13,848,11],[797,14,848,12,"log"],[797,17,848,15],[797,18,848,16],[797,67,848,65],[797,68,848,66],[798,6,849,4,"setCombatState"],[798,20,849,18],[798,21,849,19,"prev"],[798,25,849,23],[798,30,849,28],[799,8,850,6],[799,11,850,9,"prev"],[799,15,850,13],[800,8,851,6,"enemies"],[800,15,851,13],[800,17,851,15],[801,6,852,4],[801,7,852,5],[801,8,852,6],[801,9,852,7],[802,4,853,2],[802,5,853,3],[804,4,855,2],[805,4,856,2],[805,8,856,8,"triggerLevelUpExplosion"],[805,31,856,31],[805,34,856,34,"triggerLevelUpExplosion"],[805,35,856,34],[805,40,856,40],[806,6,857,4,"console"],[806,13,857,11],[806,14,857,12,"log"],[806,17,857,15],[806,18,857,16],[806,70,857,68],[806,71,857,69],[807,6,859,4],[807,10,859,10,"explosionTime"],[807,23,859,23],[807,26,859,26,"Date"],[807,30,859,30],[807,31,859,31,"now"],[807,34,859,34],[807,35,859,35],[807,36,859,36],[808,6,860,4,"setLastExplosionTime"],[808,26,860,24],[808,27,860,25,"explosionTime"],[808,40,860,38],[808,41,860,39],[809,6,862,4,"setCombatState"],[809,20,862,18],[809,21,862,19,"prev"],[809,25,862,23],[809,29,862,27],[810,8,863,6],[811,8,864,6],[811,12,864,12,"enemyCount"],[811,22,864,22],[811,25,864,25,"prev"],[811,29,864,29],[811,30,864,30,"enemies"],[811,37,864,37],[811,38,864,38,"length"],[811,44,864,44],[812,8,865,6],[812,12,865,12,"explosionXP"],[812,23,865,23],[812,26,865,26,"enemyCount"],[812,36,865,36],[812,39,865,39],[812,42,865,42],[812,43,865,43],[812,44,865,44],[813,8,866,6],[813,12,866,12,"explosionGold"],[813,25,866,25],[813,28,866,28,"enemyCount"],[813,38,866,38],[813,41,866,41],[813,44,866,44],[813,45,866,45],[813,46,866,46],[815,8,868,6,"console"],[815,15,868,13],[815,16,868,14,"log"],[815,19,868,17],[815,20,868,18],[815,44,868,42,"enemyCount"],[815,54,868,52],[815,76,868,74,"explosionXP"],[815,87,868,85],[815,98,868,96,"explosionGold"],[815,111,868,109],[815,118,868,116],[815,119,868,117],[817,8,870,6],[818,8,871,6],[818,12,871,10,"explosionXP"],[818,23,871,21],[818,26,871,24],[818,27,871,25],[818,29,871,27],[819,10,872,8,"setTimeout"],[819,20,872,18],[819,21,872,19],[819,27,872,25],[820,12,873,10,"game"],[820,16,873,14],[820,17,873,15,"updateNinja"],[820,28,873,26],[820,29,873,28,"ninja"],[820,34,873,33],[820,39,873,39],[821,14,874,12,"experience"],[821,24,874,22],[821,26,874,24,"ninja"],[821,31,874,29],[821,32,874,30,"experience"],[821,42,874,40],[821,45,874,43,"explosionXP"],[821,56,874,54],[822,14,875,12,"gold"],[822,18,875,16],[822,20,875,18,"ninja"],[822,25,875,23],[822,26,875,24,"gold"],[822,30,875,28],[822,33,875,31,"explosionGold"],[823,12,876,10],[823,13,876,11],[823,14,876,12],[823,15,876,13],[824,10,877,8],[824,11,877,9],[824,13,877,11],[824,14,877,12],[824,15,877,13],[824,16,877,14],[824,17,877,15],[825,8,878,6],[827,8,880,6],[828,8,881,6],[829,8,882,6],[829,12,882,12,"damagedEnemies"],[829,26,882,26],[829,29,882,29,"prev"],[829,33,882,33],[829,34,882,34,"enemies"],[829,41,882,41],[829,42,882,42,"map"],[829,45,882,45],[829,46,882,46,"enemy"],[829,51,882,51],[829,56,882,56],[830,10,883,8],[830,13,883,11,"enemy"],[830,18,883,16],[831,10,884,8,"health"],[831,16,884,14],[831,18,884,16],[831,19,884,17],[832,10,884,19],[833,10,885,8,"lastDamaged"],[833,21,885,19],[833,23,885,21,"combatEngine"],[833,42,885,33],[833,43,885,33,"combatEngine"],[833,55,885,33],[833,56,885,34,"getCurrentTick"],[833,70,885,48],[833,71,885,49],[834,8,886,6],[834,9,886,7],[834,10,886,8],[834,11,886,9],[835,8,888,6],[835,15,888,13],[836,10,889,8],[836,13,889,11,"prev"],[836,17,889,15],[837,10,890,8,"enemies"],[837,17,890,15],[837,19,890,17,"damagedEnemies"],[838,8,891,6],[838,9,891,7],[839,6,892,4],[839,7,892,5],[839,8,892,6],[840,4,893,2],[840,5,893,3],[842,4,895,2],[843,4,896,2],[843,8,896,8,"spawnEnemy"],[843,18,896,18],[843,21,896,22,"position"],[843,29,896,57],[843,33,896,75],[844,6,897,4],[844,10,897,10,"SCREEN_WIDTH"],[844,22,897,22],[844,25,897,25],[844,28,897,28],[845,6,898,4],[845,10,898,10,"GAME_AREA_HEIGHT"],[845,26,898,26],[845,29,898,29],[845,32,898,32],[845,35,898,35],[845,38,898,38],[845,39,898,39],[845,40,898,40],[846,6,899,4],[846,10,899,10,"ENEMY_SIZE"],[846,20,899,20],[846,23,899,23],[846,25,899,25],[848,6,901,4],[849,6,902,4],[849,10,902,10,"x"],[849,11,902,11],[849,14,902,14,"position"],[849,22,902,22],[849,24,902,24,"x"],[849,25,902,25],[849,29,902,29,"Math"],[849,33,902,33],[849,34,902,34,"random"],[849,40,902,40],[849,41,902,41],[849,42,902,42],[849,46,902,46,"SCREEN_WIDTH"],[849,58,902,58],[849,61,902,61,"ENEMY_SIZE"],[849,71,902,71],[849,74,902,74],[849,75,902,75],[849,76,902,76],[849,79,902,79,"ENEMY_SIZE"],[849,89,902,89],[850,6,903,4],[850,10,903,10,"y"],[850,11,903,11],[850,14,903,14,"position"],[850,22,903,22],[850,24,903,24,"y"],[850,25,903,25],[850,29,903,29,"Math"],[850,33,903,33],[850,34,903,34,"random"],[850,40,903,40],[850,41,903,41],[850,42,903,42],[850,46,903,46,"GAME_AREA_HEIGHT"],[850,62,903,62],[850,65,903,65,"ENEMY_SIZE"],[850,75,903,75],[850,78,903,78],[850,79,903,79],[850,80,903,80],[850,83,903,83,"ENEMY_SIZE"],[850,93,903,93],[851,6,905,4],[851,10,905,10,"enemy"],[851,15,905,28],[851,18,905,31],[852,8,906,6,"id"],[852,10,906,8],[852,12,906,10],[852,21,906,19],[852,23,906,21,"enemyCounter"],[852,35,906,33],[852,37,906,35],[853,8,907,6,"name"],[853,12,907,10],[853,14,907,12],[853,24,907,22],[854,8,908,6,"health"],[854,14,908,12],[854,16,908,14],[854,19,908,17],[855,8,909,6,"maxHealth"],[855,17,909,15],[855,19,909,17],[855,22,909,20],[856,8,910,6,"stats"],[856,13,910,11],[856,15,910,13],[857,10,911,8,"attack"],[857,16,911,14],[857,18,911,16],[857,20,911,18],[858,10,912,8,"defense"],[858,17,912,15],[858,19,912,17],[858,21,912,19],[859,10,913,8,"health"],[859,16,913,14],[859,18,913,16],[859,21,913,19],[860,10,914,8,"maxHealth"],[860,19,914,17],[860,21,914,19],[860,24,914,22],[861,10,915,8,"critChance"],[861,20,915,18],[861,22,915,20],[861,23,915,21],[862,10,916,8,"critDamage"],[862,20,916,18],[862,22,916,20],[862,25,916,23],[863,10,917,8,"cooldownReduction"],[863,27,917,25],[863,29,917,27],[864,8,918,6],[864,9,918,7],[865,8,919,6,"position"],[865,16,919,14],[865,18,919,16],[866,10,919,18,"x"],[866,11,919,19],[867,10,919,21,"y"],[868,8,919,23],[868,9,919,24],[869,8,920,6,"lastDamaged"],[869,19,920,17],[869,21,920,19],[870,6,921,4],[870,7,921,5],[871,6,923,4,"setCombatState"],[871,20,923,18],[871,21,923,19,"prev"],[871,25,923,23],[871,30,923,28],[872,8,924,6],[872,11,924,9,"prev"],[872,15,924,13],[873,8,925,6,"enemies"],[873,15,925,13],[873,17,925,15],[873,18,925,16],[873,21,925,19,"prev"],[873,25,925,23],[873,26,925,24,"enemies"],[873,33,925,31],[873,35,925,33,"enemy"],[873,40,925,38],[874,6,926,4],[874,7,926,5],[874,8,926,6],[874,9,926,7],[875,6,928,4],[875,13,928,11,"enemy"],[875,18,928,16],[876,4,929,2],[876,5,929,3],[878,4,931,2],[879,4,932,2],[879,8,932,8,"spawnBoss"],[879,17,932,17],[879,20,932,21,"bossEnemy"],[879,29,932,43],[879,33,932,48],[880,6,933,4,"console"],[880,13,933,11],[880,14,933,12,"log"],[880,17,933,15],[880,18,933,16],[880,39,933,37,"bossEnemy"],[880,48,933,46],[880,49,933,47,"name"],[880,53,933,51],[880,90,933,88],[880,91,933,89],[881,6,934,4,"setCombatState"],[881,20,934,18],[881,21,934,19,"prev"],[881,25,934,23],[881,30,934,28],[882,8,935,6],[882,11,935,9,"prev"],[882,15,935,13],[883,8,936,6,"enemies"],[883,15,936,13],[883,17,936,15],[883,18,936,16,"bossEnemy"],[883,27,936,25],[883,28,936,26],[883,29,936,27],[884,6,937,4],[884,7,937,5],[884,8,937,6],[884,9,937,7],[885,4,938,2],[885,5,938,3],[887,4,940,2],[888,4,941,2],[888,8,941,8,"clearSpecificEnemy"],[888,26,941,26],[888,29,941,30,"enemyId"],[888,36,941,45],[888,40,941,50],[889,6,942,4,"setCombatState"],[889,20,942,18],[889,21,942,19,"prev"],[889,25,942,23],[889,30,942,28],[890,8,943,6],[890,11,943,9,"prev"],[890,15,943,13],[891,8,944,6,"enemies"],[891,15,944,13],[891,17,944,15,"prev"],[891,21,944,19],[891,22,944,20,"enemies"],[891,29,944,27],[891,30,944,28,"filter"],[891,36,944,34],[891,37,944,35,"enemy"],[891,42,944,40],[891,46,944,44,"enemy"],[891,51,944,49],[891,52,944,50,"id"],[891,54,944,52],[891,59,944,57,"enemyId"],[891,66,944,64],[892,6,945,4],[892,7,945,5],[892,8,945,6],[892,9,945,7],[893,4,946,2],[893,5,946,3],[895,4,948,2],[896,4,949,2],[896,8,949,8,"useAbilityManually"],[896,26,949,26],[896,29,949,26,"_s3"],[896,32,949,26],[896,33,949,29],[896,37,949,29,"useCallback"],[896,43,949,40],[896,44,949,40,"useCallback"],[896,55,949,40],[896,57,949,40,"_s3"],[896,60,949,40],[896,61,949,42,"slotIndex"],[896,70,949,59],[896,74,949,73],[897,6,949,73,"_s3"],[897,9,949,73],[898,6,950,4,"console"],[898,13,950,11],[898,14,950,12,"log"],[898,17,950,15],[898,18,950,16],[898,53,950,51,"slotIndex"],[898,62,950,60],[898,64,950,62],[898,65,950,63],[900,6,952,4],[901,6,953,4],[901,10,953,8],[901,11,953,9,"game"],[901,15,953,13],[901,16,953,14,"gameState"],[901,25,953,23],[901,26,953,24,"isAlive"],[901,33,953,31],[901,35,953,33],[902,8,954,6,"console"],[902,15,954,13],[902,16,954,14,"log"],[902,19,954,17],[902,20,954,18],[902,70,954,68],[902,71,954,69],[903,8,955,6],[903,15,955,13],[903,20,955,18],[904,6,956,4],[906,6,958,4],[907,6,959,4],[907,10,959,10,"isReady"],[907,17,959,17],[907,20,959,20,"combatState"],[907,31,959,31],[907,32,959,32,"abilityManager"],[907,46,959,46],[907,47,959,47,"isAbilityReady"],[907,61,959,61],[907,62,959,62,"slotIndex"],[907,71,959,71],[907,72,959,72],[908,6,960,4],[908,10,960,8],[908,11,960,9,"isReady"],[908,18,960,16],[908,20,960,18],[909,8,961,6,"console"],[909,15,961,13],[909,16,961,14,"log"],[909,19,961,17],[909,20,961,18],[909,41,961,39,"slotIndex"],[909,50,961,48],[909,85,961,83],[909,86,961,84],[910,8,962,6],[910,15,962,13],[910,20,962,18],[911,6,963,4],[913,6,965,4],[914,6,966,4],[914,10,966,8,"combatState"],[914,21,966,19],[914,22,966,20,"enemies"],[914,29,966,27],[914,30,966,28,"length"],[914,36,966,34],[914,41,966,39],[914,42,966,40],[914,44,966,42],[915,8,967,6,"console"],[915,15,967,13],[915,16,967,14,"log"],[915,19,967,17],[915,20,967,18],[915,69,967,67],[915,70,967,68],[916,8,968,6],[916,15,968,13],[916,20,968,18],[917,6,969,4],[919,6,971,4],[920,6,972,4],[920,10,972,10,"currentTick"],[920,21,972,21],[920,24,972,24,"combatEngine"],[920,43,972,36],[920,44,972,36,"combatEngine"],[920,56,972,36],[920,57,972,37,"getCurrentTick"],[920,71,972,51],[920,72,972,52],[920,73,972,53],[921,6,973,4],[921,10,973,10,"success"],[921,17,973,17],[921,20,973,20,"combatState"],[921,31,973,31],[921,32,973,32,"abilityManager"],[921,46,973,46],[921,47,973,47,"useAbility"],[921,57,973,57],[921,58,973,58,"slotIndex"],[921,67,973,67],[921,69,973,69,"currentTick"],[921,80,973,80],[921,81,973,81],[922,6,975,4],[922,10,975,8,"success"],[922,17,975,15],[922,19,975,17],[923,8,976,6],[924,8,977,6,"setCombatState"],[924,22,977,20],[924,23,977,21,"prev"],[924,27,977,25],[924,31,977,29],[925,10,978,8],[925,14,978,14,"newState"],[925,22,978,22],[925,25,978,25],[926,12,978,27],[926,15,978,30,"prev"],[927,10,978,35],[927,11,978,36],[928,10,979,8,"castAbility"],[928,21,979,19],[928,22,979,20,"newState"],[928,30,979,28],[928,32,979,30,"slotIndex"],[928,41,979,39],[928,42,979,40],[929,10,980,8],[929,17,980,15,"newState"],[929,25,980,23],[930,8,981,6],[930,9,981,7],[930,10,981,8],[931,8,983,6,"console"],[931,15,983,13],[931,16,983,14,"log"],[931,19,983,17],[931,20,983,18],[931,65,983,63,"slotIndex"],[931,74,983,72],[931,76,983,74],[931,77,983,75],[932,8,984,6],[932,15,984,13],[932,19,984,17],[933,6,985,4],[933,7,985,5],[933,13,985,11],[934,8,986,6,"console"],[934,15,986,13],[934,16,986,14,"log"],[934,19,986,17],[934,20,986,18],[934,61,986,59,"slotIndex"],[934,70,986,68],[934,72,986,70],[934,73,986,71],[935,8,987,6],[935,15,987,13],[935,20,987,18],[936,6,988,4],[937,4,989,2],[937,5,989,3],[937,46,989,5],[937,47,989,6,"combatState"],[937,58,989,17],[937,59,989,18,"abilityManager"],[937,73,989,32],[937,75,989,34,"combatState"],[937,86,989,45],[937,87,989,46,"enemies"],[937,94,989,53],[937,95,989,54],[937,96,989,55],[938,4,990,2],[938,8,990,2,"useEffect"],[938,14,990,11],[938,15,990,11,"useEffect"],[938,24,990,11],[938,26,990,12],[938,32,990,18],[939,6,991,4,"combatEngine"],[939,25,991,16],[939,26,991,16,"combatEngine"],[939,38,991,16],[939,39,991,17,"start"],[939,44,991,22],[939,45,991,23],[939,46,991,24],[941,6,993,4],[942,6,994,4],[943,6,995,4,"console"],[943,13,995,11],[943,14,995,12,"log"],[943,17,995,15],[943,18,995,16],[943,97,995,95],[943,98,995,96],[944,6,997,4],[944,13,997,11],[944,19,997,17],[945,8,998,6,"combatEngine"],[945,27,998,18],[945,28,998,18,"combatEngine"],[945,40,998,18],[945,41,998,19,"stop"],[945,45,998,23],[945,46,998,24],[945,47,998,25],[946,6,999,4],[946,7,999,5],[947,4,1000,2],[947,5,1000,3],[947,7,1000,5],[947,9,1000,7],[947,10,1000,8],[949,4,1002,2],[950,4,1003,2],[950,8,1003,2,"useEffect"],[950,14,1003,11],[950,15,1003,11,"useEffect"],[950,24,1003,11],[950,26,1003,12],[950,32,1003,18],[951,6,1004,4],[951,10,1004,10,"processProjectileImpacts"],[951,34,1004,34],[951,37,1004,37,"processProjectileImpacts"],[951,38,1004,37],[951,43,1004,43],[952,8,1005,6,"setProjectiles"],[952,22,1005,20],[952,23,1005,21,"currentProjectiles"],[952,41,1005,39],[952,45,1005,43],[953,10,1006,8],[953,17,1006,15,"currentProjectiles"],[953,35,1006,33],[953,36,1006,34,"map"],[953,39,1006,37],[953,40,1006,38,"projectile"],[953,50,1006,48],[953,54,1006,52],[954,12,1007,10],[954,16,1007,14],[954,17,1007,15,"projectile"],[954,27,1007,25],[954,29,1007,27],[954,36,1007,34],[954,40,1007,38],[956,12,1009,10],[957,12,1010,10],[957,16,1010,16,"currentTime"],[957,27,1010,27],[957,30,1010,30,"Date"],[957,34,1010,34],[957,35,1010,35,"now"],[957,38,1010,38],[957,39,1010,39],[957,40,1010,40],[958,12,1011,10],[958,16,1011,16,"startTime"],[958,25,1011,25],[958,28,1011,28,"projectile"],[958,38,1011,38],[958,39,1011,39,"startTime"],[958,48,1011,48],[958,52,1011,52,"currentTime"],[958,63,1011,63],[959,12,1012,10],[959,16,1012,16,"elapsedTime"],[959,27,1012,27],[959,30,1012,30,"currentTime"],[959,41,1012,41],[959,44,1012,44,"startTime"],[959,53,1012,53],[960,12,1013,10],[960,16,1013,16,"progress"],[960,24,1013,24],[960,27,1013,27,"Math"],[960,31,1013,31],[960,32,1013,32,"min"],[960,35,1013,35],[960,36,1013,36,"elapsedTime"],[960,47,1013,47],[960,51,1013,51,"projectile"],[960,61,1013,61],[960,62,1013,62,"duration"],[960,70,1013,70],[960,74,1013,74],[960,77,1013,77],[960,78,1013,78],[960,80,1013,80],[960,81,1013,81],[960,82,1013,82],[962,12,1015,10],[963,12,1016,10],[963,16,1016,14,"progress"],[963,24,1016,22],[963,28,1016,26],[963,29,1016,27],[963,33,1016,31],[963,34,1016,32,"projectile"],[963,44,1016,42],[963,45,1016,43,"hasHit"],[963,51,1016,49],[963,53,1016,51],[964,14,1017,12,"projectile"],[964,24,1017,22],[964,25,1017,23,"hasHit"],[964,31,1017,29],[964,34,1017,32],[964,38,1017,36],[965,14,1019,12,"setCombatState"],[965,28,1019,26],[965,29,1019,27,"prev"],[965,33,1019,31],[965,37,1019,35],[966,16,1020,14],[966,20,1020,20,"newState"],[966,28,1020,28],[966,31,1020,31],[967,18,1020,33],[967,21,1020,36,"prev"],[968,16,1020,41],[968,17,1020,42],[969,16,1022,14],[969,20,1022,18,"projectile"],[969,30,1022,28],[969,31,1022,29,"isAOE"],[969,36,1022,34],[969,40,1022,38,"projectile"],[969,50,1022,48],[969,51,1022,49,"aoeRadius"],[969,60,1022,58],[969,64,1022,62,"projectile"],[969,74,1022,72],[969,75,1022,73,"aoeRadius"],[969,84,1022,82],[969,87,1022,85],[969,88,1022,86],[969,90,1022,88],[970,18,1023,16],[971,18,1024,16,"console"],[971,25,1024,23],[971,26,1024,24,"log"],[971,29,1024,27],[971,30,1024,28],[971,59,1024,57,"projectile"],[971,69,1024,67],[971,70,1024,68,"abilityName"],[971,81,1024,79],[971,97,1024,95,"projectile"],[971,107,1024,105],[971,108,1024,106,"aoeRadius"],[971,117,1024,115],[971,119,1024,117],[971,120,1024,118],[972,18,1026,16],[972,22,1026,22,"impactX"],[972,29,1026,29],[972,32,1026,32,"projectile"],[972,42,1026,42],[972,43,1026,43,"targetX"],[972,50,1026,50],[973,18,1027,16],[973,22,1027,22,"impactY"],[973,29,1027,29],[973,32,1027,32,"projectile"],[973,42,1027,42],[973,43,1027,43,"targetY"],[973,50,1027,50],[974,18,1028,16],[974,22,1028,22,"enemiesKilled"],[974,35,1028,50],[974,38,1028,53],[974,40,1028,55],[976,18,1030,16],[977,18,1031,16,"newState"],[977,26,1031,24],[977,27,1031,25,"enemies"],[977,34,1031,32],[977,37,1031,35,"newState"],[977,45,1031,43],[977,46,1031,44,"enemies"],[977,53,1031,51],[977,54,1031,52,"map"],[977,57,1031,55],[977,58,1031,56,"enemy"],[977,63,1031,61],[977,67,1031,65],[978,20,1032,18],[978,24,1032,22,"enemy"],[978,29,1032,27],[978,30,1032,28,"health"],[978,36,1032,34],[978,40,1032,38],[978,41,1032,39],[978,45,1032,43,"enemy"],[978,50,1032,48],[978,51,1032,49,"markedForDeath"],[978,65,1032,63],[978,67,1032,65],[978,74,1032,72,"enemy"],[978,79,1032,77],[979,20,1034,18],[979,24,1034,24,"enemyX"],[979,30,1034,30],[979,33,1034,33,"enemy"],[979,38,1034,38],[979,39,1034,39,"position"],[979,47,1034,47],[979,48,1034,48,"x"],[979,49,1034,49],[979,52,1034,52],[979,56,1034,56],[979,57,1034,57],[979,58,1034,58],[980,20,1035,18],[980,24,1035,24,"enemyY"],[980,30,1035,30],[980,33,1035,33,"enemy"],[980,38,1035,38],[980,39,1035,39,"position"],[980,47,1035,47],[980,48,1035,48,"y"],[980,49,1035,49],[980,52,1035,52],[980,56,1035,56],[981,20,1036,18],[981,24,1036,24,"distance"],[981,32,1036,32],[981,35,1036,35,"Math"],[981,39,1036,39],[981,40,1036,40,"sqrt"],[981,44,1036,44],[981,45,1036,45,"Math"],[981,49,1036,49],[981,50,1036,50,"pow"],[981,53,1036,53],[981,54,1036,54,"enemyX"],[981,60,1036,60],[981,63,1036,63,"impactX"],[981,70,1036,70],[981,72,1036,72],[981,73,1036,73],[981,74,1036,74],[981,77,1036,77,"Math"],[981,81,1036,81],[981,82,1036,82,"pow"],[981,85,1036,85],[981,86,1036,86,"enemyY"],[981,92,1036,92],[981,95,1036,95,"impactY"],[981,102,1036,102],[981,104,1036,104],[981,105,1036,105],[981,106,1036,106],[981,107,1036,107],[982,20,1038,18],[982,24,1038,22,"distance"],[982,32,1038,30],[982,36,1038,34,"projectile"],[982,46,1038,44],[982,47,1038,45,"aoeRadius"],[982,56,1038,54],[982,58,1038,56],[983,22,1039,20],[984,22,1040,20],[984,26,1040,26,"newHealth"],[984,35,1040,35],[984,38,1040,38,"Math"],[984,42,1040,42],[984,43,1040,43,"max"],[984,46,1040,46],[984,47,1040,47],[984,48,1040,48],[984,50,1040,50,"enemy"],[984,55,1040,55],[984,56,1040,56,"health"],[984,62,1040,62],[984,65,1040,65,"projectile"],[984,75,1040,75],[984,76,1040,76,"damage"],[984,82,1040,82],[984,83,1040,83],[985,22,1042,20,"console"],[985,29,1042,27],[985,30,1042,28,"log"],[985,33,1042,31],[985,34,1042,32],[985,52,1042,50,"enemy"],[985,57,1042,55],[985,58,1042,56,"name"],[985,62,1042,60],[985,74,1042,72,"projectile"],[985,84,1042,82],[985,85,1042,83,"damage"],[985,91,1042,89],[985,103,1042,101,"enemy"],[985,108,1042,106],[985,109,1042,107,"health"],[985,115,1042,113],[985,122,1042,120,"newHealth"],[985,131,1042,129],[985,134,1042,132],[985,135,1042,133],[987,22,1044,20],[988,22,1045,20],[988,26,1045,24,"newHealth"],[988,35,1045,33],[988,39,1045,37],[988,40,1045,38],[988,44,1045,42,"enemy"],[988,49,1045,47],[988,50,1045,48,"health"],[988,56,1045,54],[988,59,1045,57],[988,60,1045,58],[988,62,1045,60],[989,24,1046,22,"console"],[989,31,1046,29],[989,32,1046,30,"log"],[989,35,1046,33],[989,36,1046,34],[989,52,1046,50,"enemy"],[989,57,1046,55],[989,58,1046,56,"name"],[989,62,1046,60],[989,76,1046,74,"projectile"],[989,86,1046,84],[989,87,1046,85,"abilityName"],[989,98,1046,96],[989,101,1046,99],[989,102,1046,100],[990,24,1047,22,"enemiesKilled"],[990,37,1047,35],[990,38,1047,36,"push"],[990,42,1047,40],[990,43,1047,41,"enemy"],[990,48,1047,46],[990,49,1047,47],[990,50,1047,48],[990,51,1047,49],[992,24,1049,22],[992,31,1049,29],[993,26,1050,24],[993,29,1050,27,"enemy"],[993,34,1050,32],[994,26,1051,24,"health"],[994,32,1051,30],[994,34,1051,32],[994,35,1051,33],[995,26,1052,24,"markedForDeath"],[995,40,1052,38],[995,42,1052,40],[995,46,1052,44],[996,26,1053,24,"lastDamaged"],[996,37,1053,35],[996,39,1053,37,"combatEngine"],[996,58,1053,49],[996,59,1053,49,"combatEngine"],[996,71,1053,49],[996,72,1053,50,"getCurrentTick"],[996,86,1053,64],[996,87,1053,65],[997,24,1054,22],[997,25,1054,23],[998,22,1055,20],[998,23,1055,21],[998,29,1055,27],[999,24,1056,22],[999,31,1056,29],[1000,26,1057,24],[1000,29,1057,27,"enemy"],[1000,34,1057,32],[1001,26,1058,24,"health"],[1001,32,1058,30],[1001,34,1058,32,"newHealth"],[1001,43,1058,41],[1002,26,1059,24,"lastDamaged"],[1002,37,1059,35],[1002,39,1059,37,"combatEngine"],[1002,58,1059,49],[1002,59,1059,49,"combatEngine"],[1002,71,1059,49],[1002,72,1059,50,"getCurrentTick"],[1002,86,1059,64],[1002,87,1059,65],[1003,24,1060,22],[1003,25,1060,23],[1004,22,1061,20],[1005,20,1062,18],[1006,20,1064,18],[1006,27,1064,25,"enemy"],[1006,32,1064,30],[1006,33,1064,31],[1006,34,1064,32],[1007,18,1065,16],[1007,19,1065,17],[1007,20,1065,18],[1009,18,1067,16],[1010,18,1068,16],[1010,22,1068,20,"enemiesKilled"],[1010,35,1068,33],[1010,36,1068,34,"length"],[1010,42,1068,40],[1010,45,1068,43],[1010,46,1068,44],[1010,48,1068,46],[1011,20,1069,18,"console"],[1011,27,1069,25],[1011,28,1069,26,"log"],[1011,31,1069,29],[1011,32,1069,30],[1011,52,1069,50,"enemiesKilled"],[1011,65,1069,63],[1011,66,1069,64,"length"],[1011,72,1069,70],[1011,94,1069,92,"projectile"],[1011,104,1069,102],[1011,105,1069,103,"abilityName"],[1011,116,1069,114],[1011,118,1069,116],[1011,119,1069,117],[1012,20,1070,18,"setTimeout"],[1012,30,1070,28],[1012,31,1070,29],[1012,37,1070,35],[1013,22,1071,20,"enemiesKilled"],[1013,35,1071,33],[1013,36,1071,34,"forEach"],[1013,43,1071,41],[1013,44,1071,42,"enemy"],[1013,49,1071,47],[1013,53,1071,51,"handleEnemyKill"],[1013,68,1071,66],[1013,69,1071,67,"enemy"],[1013,74,1071,72],[1013,75,1071,73],[1013,76,1071,74],[1014,20,1072,18],[1014,21,1072,19],[1014,23,1072,21],[1014,24,1072,22],[1014,25,1072,23],[1015,18,1073,16],[1016,16,1075,14],[1016,17,1075,15],[1016,23,1075,21],[1017,18,1076,16],[1018,18,1077,16],[1018,22,1077,22,"enemyIndex"],[1018,32,1077,32],[1018,35,1077,35,"newState"],[1018,43,1077,43],[1018,44,1077,44,"enemies"],[1018,51,1077,51],[1018,52,1077,52,"findIndex"],[1018,61,1077,61],[1018,62,1077,62,"e"],[1018,63,1077,63],[1018,67,1077,67,"e"],[1018,68,1077,68],[1018,69,1077,69,"id"],[1018,71,1077,71],[1018,76,1077,76,"projectile"],[1018,86,1077,86],[1018,87,1077,87,"targetEnemyId"],[1018,100,1077,100],[1018,101,1077,101],[1019,18,1079,16],[1019,22,1079,20,"enemyIndex"],[1019,32,1079,30],[1019,36,1079,34],[1019,37,1079,35],[1019,41,1079,39,"newState"],[1019,49,1079,47],[1019,50,1079,48,"enemies"],[1019,57,1079,55],[1019,58,1079,56,"enemyIndex"],[1019,68,1079,66],[1019,69,1079,67],[1019,70,1079,68,"health"],[1019,76,1079,74],[1019,79,1079,77],[1019,80,1079,78],[1019,84,1079,82],[1019,85,1079,83,"newState"],[1019,93,1079,91],[1019,94,1079,92,"enemies"],[1019,101,1079,99],[1019,102,1079,100,"enemyIndex"],[1019,112,1079,110],[1019,113,1079,111],[1019,114,1079,112,"markedForDeath"],[1019,128,1079,126],[1019,130,1079,128],[1020,20,1080,18,"newState"],[1020,28,1080,26],[1020,29,1080,27,"enemies"],[1020,36,1080,34],[1020,39,1080,37],[1020,40,1080,38],[1020,43,1080,41,"newState"],[1020,51,1080,49],[1020,52,1080,50,"enemies"],[1020,59,1080,57],[1020,60,1080,58],[1021,20,1081,18],[1021,24,1081,24,"enemy"],[1021,29,1081,29],[1021,32,1081,32,"newState"],[1021,40,1081,40],[1021,41,1081,41,"enemies"],[1021,48,1081,48],[1021,49,1081,49,"enemyIndex"],[1021,59,1081,59],[1021,60,1081,60],[1022,20,1082,18],[1022,24,1082,24,"newHealth"],[1022,33,1082,33],[1022,36,1082,36,"Math"],[1022,40,1082,40],[1022,41,1082,41,"max"],[1022,44,1082,44],[1022,45,1082,45],[1022,46,1082,46],[1022,48,1082,48,"enemy"],[1022,53,1082,53],[1022,54,1082,54,"health"],[1022,60,1082,60],[1022,63,1082,63,"projectile"],[1022,73,1082,73],[1022,74,1082,74,"damage"],[1022,80,1082,80],[1022,81,1082,81],[1023,20,1084,18,"newState"],[1023,28,1084,26],[1023,29,1084,27,"enemies"],[1023,36,1084,34],[1023,37,1084,35,"enemyIndex"],[1023,47,1084,45],[1023,48,1084,46],[1023,51,1084,49],[1024,22,1085,20],[1024,25,1085,23,"enemy"],[1024,30,1085,28],[1025,22,1086,20,"health"],[1025,28,1086,26],[1025,30,1086,28,"newHealth"],[1025,39,1086,37],[1026,22,1087,20,"lastDamaged"],[1026,33,1087,31],[1026,35,1087,33,"combatEngine"],[1026,54,1087,45],[1026,55,1087,45,"combatEngine"],[1026,67,1087,45],[1026,68,1087,46,"getCurrentTick"],[1026,82,1087,60],[1026,83,1087,61],[1027,20,1088,18],[1027,21,1088,19],[1028,20,1090,18,"console"],[1028,27,1090,25],[1028,28,1090,26,"log"],[1028,31,1090,29],[1028,32,1090,30],[1028,60,1090,58,"enemy"],[1028,65,1090,63],[1028,66,1090,64,"name"],[1028,70,1090,68],[1028,82,1090,80,"newHealth"],[1028,91,1090,89],[1028,95,1090,93,"enemy"],[1028,100,1090,98],[1028,101,1090,99,"maxHealth"],[1028,110,1090,108],[1028,112,1090,110],[1028,113,1090,111],[1030,20,1092,18],[1031,20,1093,18],[1031,24,1093,22,"newHealth"],[1031,33,1093,31],[1031,37,1093,35],[1031,38,1093,36],[1031,42,1093,40,"enemy"],[1031,47,1093,45],[1031,48,1093,46,"health"],[1031,54,1093,52],[1031,57,1093,55],[1031,58,1093,56],[1031,60,1093,58],[1032,22,1094,20,"console"],[1032,29,1094,27],[1032,30,1094,28,"log"],[1032,33,1094,31],[1032,34,1094,32],[1032,60,1094,58,"enemy"],[1032,65,1094,63],[1032,66,1094,64,"name"],[1032,70,1094,68],[1032,84,1094,82,"projectile"],[1032,94,1094,92],[1032,95,1094,93,"abilityName"],[1032,106,1094,104],[1032,109,1094,107],[1032,110,1094,108],[1034,22,1096,20],[1035,22,1097,20,"newState"],[1035,30,1097,28],[1035,31,1097,29,"enemies"],[1035,38,1097,36],[1035,39,1097,37,"enemyIndex"],[1035,49,1097,47],[1035,50,1097,48],[1035,53,1097,51],[1036,24,1098,22],[1036,27,1098,25,"newState"],[1036,35,1098,33],[1036,36,1098,34,"enemies"],[1036,43,1098,41],[1036,44,1098,42,"enemyIndex"],[1036,54,1098,52],[1036,55,1098,53],[1037,24,1099,22,"health"],[1037,30,1099,28],[1037,32,1099,30],[1037,33,1099,31],[1038,24,1100,22,"markedForDeath"],[1038,38,1100,36],[1038,40,1100,38],[1039,22,1101,20],[1039,23,1101,21],[1041,22,1103,20],[1042,22,1104,20,"setTimeout"],[1042,32,1104,30],[1042,33,1104,31],[1042,39,1104,37,"handleEnemyKill"],[1042,54,1104,52],[1042,55,1104,53,"enemy"],[1042,60,1104,58],[1042,61,1104,59],[1042,63,1104,61],[1042,64,1104,62],[1042,65,1104,63],[1043,20,1105,18],[1044,18,1106,16],[1045,16,1107,14],[1046,16,1109,14],[1046,23,1109,21,"newState"],[1046,31,1109,29],[1047,14,1110,12],[1047,15,1110,13],[1047,16,1110,14],[1048,12,1111,10],[1050,12,1113,10],[1051,12,1114,10],[1051,16,1114,14,"progress"],[1051,24,1114,22],[1051,28,1114,26],[1051,31,1114,29],[1051,33,1114,31],[1052,14,1115,12],[1052,21,1115,19],[1052,25,1115,23],[1053,12,1116,10],[1054,12,1118,10],[1054,19,1118,17,"projectile"],[1054,29,1118,27],[1055,10,1119,8],[1055,11,1119,9],[1055,12,1119,10],[1055,13,1119,11,"filter"],[1055,19,1119,17],[1055,20,1119,18,"Boolean"],[1055,27,1119,25],[1055,28,1119,26],[1056,8,1120,6],[1056,9,1120,7],[1056,10,1120,8],[1057,6,1121,4],[1057,7,1121,5],[1059,6,1123,4],[1060,6,1124,4],[1060,10,1124,10,"impactInterval"],[1060,24,1124,24],[1060,27,1124,27,"setInterval"],[1060,38,1124,38],[1060,39,1124,39,"processProjectileImpacts"],[1060,63,1124,63],[1060,65,1124,65],[1060,67,1124,67],[1060,68,1124,68],[1061,6,1125,4],[1061,13,1125,11],[1061,19,1125,17,"clearInterval"],[1061,32,1125,30],[1061,33,1125,31,"impactInterval"],[1061,47,1125,45],[1061,48,1125,46],[1062,4,1126,2],[1062,5,1126,3],[1062,7,1126,5],[1062,8,1126,6,"handleEnemyKill"],[1062,23,1126,21],[1062,24,1126,22],[1062,25,1126,23],[1064,4,1128,2],[1065,4,1129,2],[1065,8,1129,8,"saveAbilityData"],[1065,23,1129,23],[1065,26,1129,26],[1065,30,1129,26,"useCallback"],[1065,36,1129,37],[1065,37,1129,37,"useCallback"],[1065,48,1129,37],[1065,50,1129,38],[1065,56,1129,44],[1066,6,1130,4],[1066,10,1130,8,"combatState"],[1066,21,1130,19],[1066,22,1130,20,"abilityManager"],[1066,36,1130,34],[1066,38,1130,36],[1067,8,1131,6],[1067,12,1131,12,"abilityData"],[1067,23,1131,23],[1067,26,1131,26,"combatState"],[1067,37,1131,37],[1067,38,1131,38,"abilityManager"],[1067,52,1131,52],[1067,53,1131,53,"getSaveData"],[1067,64,1131,64],[1067,65,1131,65],[1067,66,1131,66],[1068,8,1132,6,"console"],[1068,15,1132,13],[1068,16,1132,14,"log"],[1068,19,1132,17],[1068,20,1132,18],[1068,70,1132,68],[1068,72,1132,70,"abilityData"],[1068,83,1132,81],[1068,84,1132,82],[1069,8,1133,6,"game"],[1069,12,1133,10],[1069,13,1133,11,"updateAbilityData"],[1069,30,1133,28],[1069,31,1133,29,"abilityData"],[1069,42,1133,40],[1069,43,1133,41],[1070,6,1134,4],[1071,4,1135,2],[1071,5,1135,3],[1071,7,1135,5],[1071,8,1135,6,"combatState"],[1071,19,1135,17],[1071,20,1135,18,"abilityManager"],[1071,34,1135,32],[1071,36,1135,34,"game"],[1071,40,1135,38],[1071,41,1135,39,"updateAbilityData"],[1071,58,1135,56],[1071,59,1135,57],[1071,60,1135,58],[1072,4,1137,2],[1072,8,1137,8,"contextValue"],[1072,20,1137,39],[1072,23,1137,42,"React"],[1072,28,1137,47],[1072,29,1137,47,"default"],[1072,36,1137,47],[1072,37,1137,48,"useMemo"],[1072,44,1137,55],[1072,45,1137,56],[1072,52,1137,63],[1073,6,1138,4,"combatState"],[1073,17,1138,15],[1074,6,1139,4,"projectiles"],[1074,17,1139,15],[1075,6,1140,4,"startCombat"],[1075,17,1140,15],[1076,6,1141,4,"stopCombat"],[1076,16,1141,14],[1077,6,1142,4,"equipAbility"],[1077,18,1142,16],[1078,6,1143,4,"handleEnemyKill"],[1078,21,1143,19],[1079,6,1144,4,"getDeck"],[1079,13,1144,11],[1080,6,1145,4,"getAvailableAbilities"],[1080,27,1145,25],[1081,6,1146,4,"upgradeAbility"],[1081,20,1146,18],[1082,6,1147,4,"spawnEnemy"],[1082,16,1147,14],[1083,6,1148,4,"spawnBoss"],[1083,15,1148,13],[1084,6,1149,4,"clearAllEnemies"],[1084,21,1149,19],[1085,6,1150,4,"clearSpecificEnemy"],[1085,24,1150,22],[1086,6,1151,4,"triggerLevelUpExplosion"],[1086,29,1151,27],[1087,6,1152,4,"findClosestEnemy"],[1087,22,1152,20],[1088,6,1153,4,"updateNinjaPosition"],[1088,25,1153,23],[1089,6,1154,4,"setManualControlActive"],[1089,28,1154,26],[1090,6,1155,4,"lastExplosionTime"],[1090,23,1155,21],[1091,6,1156,4,"useAbilityManually"],[1091,24,1156,22],[1092,6,1156,24],[1093,6,1157,4,"saveAbilityData"],[1093,21,1157,19],[1094,6,1157,21],[1095,6,1158,4,"shadowClone"],[1095,17,1158,15],[1095,19,1158,17,"combatState"],[1095,30,1158,28],[1095,31,1158,29,"shadowClone"],[1095,42,1158,40],[1095,43,1158,42],[1096,4,1159,2],[1096,5,1159,3],[1096,6,1159,4],[1096,8,1159,6],[1097,4,1160,4],[1098,4,1161,4],[1099,4,1162,4,"combatState"],[1099,15,1162,15],[1099,17,1163,4,"projectiles"],[1099,28,1163,15],[1099,30,1164,4,"lastExplosionTime"],[1099,47,1164,21],[1100,4,1165,4],[1101,4,1166,4,"combatState"],[1101,15,1166,15],[1101,16,1166,16,"abilityManager"],[1101,30,1166,30],[1101,32,1167,4,"combatState"],[1101,43,1167,15],[1101,44,1167,16,"enemies"],[1101,51,1167,23],[1101,53,1168,4,"combatState"],[1101,64,1168,15],[1101,65,1168,16,"shadowClone"],[1101,76,1168,27],[1102,4,1168,29],[1103,4,1169,4,"useAbilityManually"],[1103,22,1169,22],[1104,4,1169,24],[1105,4,1170,4,"saveAbilityData"],[1105,19,1170,19],[1105,20,1170,21],[1106,4,1170,21],[1106,5,1171,3],[1106,6,1171,4],[1107,4,1173,2],[1107,24,1174,4],[1107,28,1174,4,"_reactJsxDevRuntime"],[1107,47,1174,4],[1107,48,1174,4,"jsxDEV"],[1107,54,1174,4],[1107,56,1174,5,"CombatContext"],[1107,69,1174,18],[1107,70,1174,19,"Provider"],[1107,78,1174,27],[1108,6,1174,28,"value"],[1108,11,1174,33],[1108,13,1174,35,"contextValue"],[1108,25,1174,48],[1109,6,1174,48,"children"],[1109,14,1174,48],[1109,16,1175,7,"children"],[1110,4,1175,15],[1111,6,1175,15,"fileName"],[1111,14,1175,15],[1111,16,1175,15,"_jsxFileName"],[1111,28,1175,15],[1112,6,1175,15,"lineNumber"],[1112,16,1175,15],[1113,6,1175,15,"columnNumber"],[1113,18,1175,15],[1114,4,1175,15],[1114,11,1176,28],[1114,12,1176,29],[1115,2,1178,0],[1115,3,1178,1],[1116,2,1178,2,"_s4"],[1116,5,1178,2],[1116,6,103,13,"CombatProvider"],[1116,20,103,27],[1117,4,103,27],[1117,12,104,15,"useGame"],[1117,24,104,22],[1117,25,104,22,"useGame"],[1117,32,104,22],[1117,34,105,77,"useZone"],[1117,46,105,84],[1117,47,105,84,"useZone"],[1117,54,105,84],[1118,2,105,84],[1119,2,105,84,"_c"],[1119,4,105,84],[1119,7,103,13,"CombatProvider"],[1119,21,103,27],[1120,2,103,27],[1120,6,103,27,"_c"],[1120,8,103,27],[1121,2,103,27,"$RefreshReg$"],[1121,14,103,27],[1121,15,103,27,"_c"],[1121,17,103,27],[1122,0,103,27],[1122,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;6BG2C;SHO;sBIG;OJU;GxBoB;2B6BG;mBP0C,6BO;ezBG;KyBE;G7BG;yB8BG;G9BsC;8B+BG;G/B4B;wCgCG;mB9BE,uC8B;GhCQ;uCiCG;mB/BC,wC+B;GjCE;uBkCG;GlCE;kBmCE;GnCE;gCoCE;GpCE;yBqCE;GrCE;0BsCG;mBpCE;MoCG;GtCC;kCuCG;mBrCM;mBEU;2BCC;YDG;SFC;8CsCK;QtCI;KqCM;GvCC;qByCG;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C4B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBzBC;sC0BC;2B9Ca;wD+CY;iB/CkC;6BEK;0C8CC,+B9C;mBFC;8DMK,sCN;+BE2B,4BF;a8CM;S1BS;OyBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}