{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      var xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      var goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        var unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          var totalXP = 0;\n          var totalGold = 0;\n          var zoneKills = [];\n          var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          var goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              var wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, []); // Empty dependency array - handleEnemyKill is stable\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    var _useState7 = (0, _react.useState)({\n        x: 195,\n        y: 400\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"lv0RwSXXMNmrzfA074n/0ziwNOM=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1165,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1229,2],[27,6,1229,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1229,2],[27,42,1229,2,"require"],[27,49,1229,2],[27,50,1229,2,"_dependencyMap"],[27,64,1229,2],[28,2,1229,2],[28,6,1229,2,"_slicedToArray"],[28,20,1229,2],[28,23,1229,2,"_interopDefault"],[28,38,1229,2],[28,39,1229,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1229,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,94,0],[36,6,94,6,"CombatContext"],[36,19,94,19],[36,35,94,22],[36,39,94,22,"createContext"],[36,45,94,35],[36,46,94,35,"createContext"],[36,59,94,35],[36,61,94,67,"undefined"],[36,70,94,76],[36,71,94,77],[37,2,96,7],[37,6,96,13,"useCombat"],[37,15,96,22],[37,18,96,25,"useCombat"],[37,19,96,25],[37,24,96,50],[38,4,96,50,"_s"],[38,6,96,50],[39,4,97,2],[39,8,97,8,"context"],[39,15,97,15],[39,18,97,18],[39,22,97,18,"useContext"],[39,28,97,28],[39,29,97,28,"useContext"],[39,39,97,28],[39,41,97,29,"CombatContext"],[39,54,97,42],[39,55,97,43],[40,4,98,2],[40,8,98,6],[40,9,98,7,"context"],[40,16,98,14],[40,18,98,16],[41,6,99,4],[41,12,99,10],[41,16,99,14,"Error"],[41,21,99,19],[41,22,99,20],[41,70,99,68],[41,71,99,69],[42,4,100,2],[43,4,101,2],[43,11,101,9,"context"],[43,18,101,16],[44,2,102,0],[44,3,102,1],[45,2,102,2,"_s"],[45,4,102,2],[45,5,96,13,"useCombat"],[45,14,96,22],[46,2,104,0],[46,6,104,4,"enemyCounter"],[46,18,104,16],[46,21,104,19],[46,22,104,20],[46,23,104,21],[46,24,104,22],[48,2,106,7],[48,6,106,13,"CombatProvider"],[48,20,106,27],[48,23,106,30,"_ref"],[48,27,106,30],[48,31,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,106,73],[51,8,106,33,"children"],[51,16,106,41],[51,19,106,41,"_ref"],[51,23,106,41],[51,24,106,33,"children"],[51,32,106,41],[52,4,107,2],[52,8,107,8,"game"],[52,12,107,12],[52,15,107,15],[52,19,107,15,"useGame"],[52,31,107,22],[52,32,107,22,"useGame"],[52,39,107,22],[52,41,107,23],[52,42,107,24],[53,4,108,2],[53,8,108,2,"_useZone"],[53,16,108,2],[53,19,108,77],[53,23,108,77,"useZone"],[53,35,108,84],[53,36,108,84,"useZone"],[53,43,108,84],[53,45,108,85],[53,46,108,86],[54,6,108,10,"currentZone"],[54,17,108,21],[54,20,108,21,"_useZone"],[54,28,108,21],[54,29,108,10,"currentZone"],[54,40,108,21],[55,6,108,23,"currentZoneLevel"],[55,22,108,39],[55,25,108,39,"_useZone"],[55,33,108,39],[55,34,108,23,"currentZoneLevel"],[55,50,108,39],[56,6,108,41,"recordEnemyKill"],[56,21,108,56],[56,24,108,56,"_useZone"],[56,32,108,56],[56,33,108,41,"recordEnemyKill"],[56,48,108,56],[57,6,108,58,"spawnZoneEnemy"],[57,20,108,72],[57,23,108,72,"_useZone"],[57,31,108,72],[57,32,108,58,"spawnZoneEnemy"],[57,46,108,72],[59,4,110,2],[60,4,111,2],[60,8,111,8,"initialCombatState"],[60,26,111,39],[60,29,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,8,128,2,"_useState"],[77,17,128,2],[77,20,128,40],[77,24,128,40,"useState"],[77,30,128,48],[77,31,128,48,"useState"],[77,39,128,48],[77,41,128,62,"initialCombatState"],[77,59,128,80],[77,60,128,81],[78,6,128,81,"_useState2"],[78,16,128,81],[78,23,128,81,"_slicedToArray"],[78,37,128,81],[78,38,128,81,"default"],[78,45,128,81],[78,47,128,81,"_useState"],[78,56,128,81],[79,6,128,9,"combatState"],[79,17,128,20],[79,20,128,20,"_useState2"],[79,30,128,20],[80,6,128,22,"setCombatState"],[80,20,128,36],[80,23,128,36,"_useState2"],[80,33,128,36],[82,4,130,2],[83,4,131,2],[83,8,131,2,"useEffect"],[83,14,131,11],[83,15,131,11,"useEffect"],[83,24,131,11],[83,26,131,12],[83,32,131,18],[84,6,132,4],[84,10,132,8,"game"],[84,14,132,12],[84,15,132,13,"gameState"],[84,24,132,22],[84,25,132,23,"abilityData"],[84,36,132,34],[84,40,132,38,"combatState"],[84,51,132,49],[84,52,132,50,"abilityManager"],[84,66,132,64],[84,68,132,66],[85,8,133,6,"console"],[85,15,133,13],[85,16,133,14,"log"],[85,19,133,17],[85,20,133,18],[85,68,133,66],[85,70,133,68,"game"],[85,74,133,72],[85,75,133,73,"gameState"],[85,84,133,82],[85,85,133,83,"abilityData"],[85,96,133,94],[85,97,133,95],[86,8,134,6,"combatState"],[86,19,134,17],[86,20,134,18,"abilityManager"],[86,34,134,32],[86,35,134,33,"restoreFromSaveData"],[86,54,134,52],[86,55,134,53,"game"],[86,59,134,57],[86,60,134,58,"gameState"],[86,69,134,67],[86,70,134,68,"abilityData"],[86,81,134,79],[86,82,134,80],[88,8,136,6],[89,8,137,6,"setCombatState"],[89,22,137,20],[89,23,137,21,"prev"],[89,27,137,25],[89,32,137,30],[90,10,137,32],[90,13,137,35,"prev"],[91,8,137,40],[91,9,137,41],[91,10,137,42],[91,11,137,43],[92,6,138,4],[93,4,139,2],[93,5,139,3],[93,7,139,5],[93,8,139,6,"game"],[93,12,139,10],[93,13,139,11,"gameState"],[93,22,139,20],[93,23,139,21,"abilityData"],[93,34,139,32],[93,36,139,34,"combatState"],[93,47,139,45],[93,48,139,46,"abilityManager"],[93,62,139,60],[93,63,139,61],[93,64,139,62],[95,4,141,2],[96,4,142,2],[96,8,142,2,"useEffect"],[96,14,142,11],[96,15,142,11,"useEffect"],[96,24,142,11],[96,26,142,12],[96,32,142,18],[97,6,143,4],[97,10,143,8,"game"],[97,14,143,12],[97,15,143,13,"gameState"],[97,24,143,22],[97,25,143,23,"ninja"],[97,30,143,28],[97,32,143,30],[98,8,144,6],[98,12,144,12,"effectiveStats"],[98,26,144,26],[98,29,144,29,"game"],[98,33,144,33],[98,34,144,34,"getEffectiveStats"],[98,51,144,51],[98,52,144,52],[98,53,144,53],[99,8,146,6,"setCombatState"],[99,22,146,20],[99,23,146,21,"prev"],[99,27,146,25],[99,31,146,29],[100,10,147,8],[101,10,148,8],[101,14,148,12,"prev"],[101,18,148,16],[101,19,148,17,"playerStats"],[101,30,148,28],[101,31,148,29,"maxHealth"],[101,40,148,38],[101,45,148,43],[101,48,148,46],[101,52,148,50,"prev"],[101,56,148,54],[101,57,148,55,"playerStats"],[101,68,148,66],[101,69,148,67,"attack"],[101,75,148,73],[101,80,148,78],[101,82,148,80],[101,84,148,82],[102,12,149,10,"console"],[102,19,149,17],[102,20,149,18,"log"],[102,23,149,21],[102,24,149,22],[102,60,149,58,"effectiveStats"],[102,74,149,72],[102,75,149,73,"health"],[102,81,149,79],[102,93,149,91,"effectiveStats"],[102,107,149,105],[102,108,149,106,"attack"],[102,114,149,112],[102,127,149,125,"effectiveStats"],[102,141,149,139],[102,142,149,140,"defense"],[102,149,149,147],[102,151,149,149],[102,152,149,150],[103,12,151,10],[103,19,151,17],[104,14,152,12],[104,17,152,15,"prev"],[104,21,152,19],[105,14,153,12,"playerStats"],[105,25,153,23],[105,27,153,25],[106,16,154,14,"attack"],[106,22,154,20],[106,24,154,22,"effectiveStats"],[106,38,154,36],[106,39,154,37,"attack"],[106,45,154,43],[107,16,155,14,"defense"],[107,23,155,21],[107,25,155,23,"effectiveStats"],[107,39,155,37],[107,40,155,38,"defense"],[107,47,155,45],[108,16,156,14,"health"],[108,22,156,20],[108,24,156,22,"effectiveStats"],[108,38,156,36],[108,39,156,37,"health"],[108,45,156,43],[109,16,156,45],[110,16,157,14,"maxHealth"],[110,25,157,23],[110,27,157,25,"effectiveStats"],[110,41,157,39],[110,42,157,40,"health"],[110,48,157,46],[111,16,158,14,"critChance"],[111,26,158,24],[111,28,158,26,"effectiveStats"],[111,42,158,40],[111,43,158,41,"critChance"],[111,53,158,51],[111,57,158,55],[111,58,158,56],[112,16,159,14,"critDamage"],[112,26,159,24],[112,28,159,26,"effectiveStats"],[112,42,159,40],[112,43,159,41,"critDamage"],[112,53,159,51],[112,57,159,55],[112,60,159,58],[113,16,160,14,"cooldownReduction"],[113,33,160,31],[113,35,160,33,"effectiveStats"],[113,49,160,47],[113,50,160,48,"cooldownReduction"],[113,67,160,65],[113,71,160,69],[114,14,161,12],[115,12,162,10],[115,13,162,11],[116,10,163,8],[117,10,164,8],[117,17,164,15,"prev"],[117,21,164,19],[118,8,165,6],[118,9,165,7],[118,10,165,8],[119,6,166,4],[120,4,167,2],[120,5,167,3],[120,7,167,5],[120,8,167,6,"game"],[120,12,167,10],[120,13,167,11,"gameState"],[120,22,167,20],[120,23,167,21,"ninja"],[120,28,167,26],[120,29,167,27],[120,30,167,28],[121,4,169,2],[121,8,169,2,"_useState3"],[121,18,169,2],[121,21,169,40],[121,25,169,40,"useState"],[121,31,169,48],[121,32,169,48,"useState"],[121,40,169,48],[121,42,169,69],[121,44,169,71],[121,45,169,72],[122,6,169,72,"_useState4"],[122,16,169,72],[122,23,169,72,"_slicedToArray"],[122,37,169,72],[122,38,169,72,"default"],[122,45,169,72],[122,47,169,72,"_useState3"],[122,57,169,72],[123,6,169,9,"projectiles"],[123,17,169,20],[123,20,169,20,"_useState4"],[123,30,169,20],[124,6,169,22,"setProjectiles"],[124,20,169,36],[124,23,169,36,"_useState4"],[124,33,169,36],[125,4,170,2],[125,8,170,2,"_useState5"],[125,18,170,2],[125,21,170,52],[125,25,170,52,"useState"],[125,31,170,60],[125,32,170,60,"useState"],[125,40,170,60],[125,42,170,69],[125,43,170,70],[125,44,170,71],[126,6,170,71,"_useState6"],[126,16,170,71],[126,23,170,71,"_slicedToArray"],[126,37,170,71],[126,38,170,71,"default"],[126,45,170,71],[126,47,170,71,"_useState5"],[126,57,170,71],[127,6,170,9,"lastExplosionTime"],[127,23,170,26],[127,26,170,26,"_useState6"],[127,36,170,26],[128,6,170,28,"setLastExplosionTime"],[128,26,170,48],[128,29,170,48,"_useState6"],[128,39,170,48],[129,4,171,2],[130,4,172,2],[132,4,174,2],[133,4,175,2],[133,8,175,8,"handleEnemyKill"],[133,23,175,23],[133,26,175,26],[133,30,175,26,"useCallback"],[133,36,175,37],[133,37,175,37,"useCallback"],[133,48,175,37],[133,50,175,39,"enemy"],[133,55,175,57],[133,59,175,62],[134,6,176,4],[135,6,177,4],[135,10,177,10,"xpReward"],[135,18,177,18],[135,21,177,21],[135,22,177,22,"enemy"],[135,27,177,27],[135,28,177,28,"zoneXP"],[135,34,177,34],[135,38,177,38],[135,39,177,39],[135,44,177,44,"game"],[135,48,177,48],[135,49,177,49,"gameState"],[135,58,177,58],[135,59,177,59,"subscriptionBenefits"],[135,79,177,79],[135,81,177,81,"xp_multiplier"],[135,94,177,94],[135,98,177,98],[135,101,177,101],[135,102,177,102],[136,6,178,4],[136,10,178,10,"goldReward"],[136,20,178,20],[136,23,178,23],[136,25,178,25],[136,29,178,29,"game"],[136,33,178,33],[136,34,178,34,"gameState"],[136,43,178,43],[136,44,178,44,"subscriptionBenefits"],[136,64,178,64],[136,66,178,66,"drop_multiplier"],[136,81,178,81],[136,85,178,85],[136,88,178,88],[136,89,178,89],[138,6,180,4],[139,6,181,4,"game"],[139,10,181,8],[139,11,181,9,"updateNinja"],[139,22,181,20],[139,23,181,21,"prev"],[139,27,181,25],[139,32,181,30],[140,8,182,6,"experience"],[140,18,182,16],[140,20,182,18,"prev"],[140,24,182,22],[140,25,182,23,"experience"],[140,35,182,33],[140,38,182,36,"xpReward"],[140,46,182,44],[141,8,183,6,"gold"],[141,12,183,10],[141,14,183,12,"prev"],[141,18,183,16],[141,19,183,17,"gold"],[141,23,183,21],[141,26,183,24,"goldReward"],[142,6,184,4],[142,7,184,5],[142,8,184,6],[142,9,184,7],[144,6,186,4],[145,6,187,4,"setCombatState"],[145,20,187,18],[145,21,187,19,"prevState"],[145,30,187,28],[145,35,187,33],[146,8,188,6],[146,11,188,9,"prevState"],[146,20,188,18],[147,8,189,6,"enemies"],[147,15,189,13],[147,17,189,15,"prevState"],[147,26,189,24],[147,27,189,25,"enemies"],[147,34,189,32],[147,35,189,33,"map"],[147,38,189,36],[147,39,189,37,"e"],[147,40,189,38],[147,44,190,8,"e"],[147,45,190,9],[147,46,190,10,"id"],[147,48,190,12],[147,53,190,17,"enemy"],[147,58,190,22],[147,59,190,23,"id"],[147,61,190,25],[147,64,190,28],[148,10,190,30],[148,13,190,33,"e"],[148,14,190,34],[149,10,190,36,"xpAwarded"],[149,19,190,45],[149,21,190,47],[150,8,190,52],[150,9,190,53],[150,12,190,56,"e"],[150,13,191,6],[151,6,192,4],[151,7,192,5],[151,8,192,6],[151,9,192,7],[153,6,194,4],[154,6,195,4],[154,10,195,8,"enemy"],[154,15,195,13],[154,16,195,14,"zoneTypeId"],[154,26,195,24],[154,28,195,26],[155,8,196,6,"recordEnemyKill"],[155,23,196,21],[155,24,196,22],[156,10,197,8,"id"],[156,12,197,10],[156,14,197,12,"enemy"],[156,19,197,17],[156,20,197,18,"id"],[156,22,197,20],[157,10,198,8,"typeId"],[157,16,198,14],[157,18,198,16,"enemy"],[157,23,198,21],[157,24,198,22,"zoneTypeId"],[157,34,198,32],[158,10,199,8,"name"],[158,14,199,12],[158,16,199,14,"enemy"],[158,21,199,19],[158,22,199,20,"name"],[158,26,199,24],[159,10,200,8,"icon"],[159,14,200,12],[159,16,200,14],[159,20,200,18],[160,10,201,8,"hp"],[160,12,201,10],[160,14,201,12],[160,15,201,13],[161,10,202,8,"maxHP"],[161,15,202,13],[161,17,202,15,"enemy"],[161,22,202,20],[161,23,202,21,"maxHealth"],[161,32,202,30],[162,10,203,8,"attack"],[162,16,203,14],[162,18,203,16,"enemy"],[162,23,203,21],[162,24,203,22,"stats"],[162,29,203,27],[162,30,203,28,"attack"],[162,36,203,34],[163,10,204,8,"xp"],[163,12,204,10],[163,14,204,12,"enemy"],[163,19,204,17],[163,20,204,18,"zoneXP"],[163,26,204,24],[163,30,204,28],[163,31,204,29],[164,10,205,8,"position"],[164,18,205,16],[164,20,205,18,"enemy"],[164,25,205,23],[164,26,205,24,"position"],[165,8,206,6],[165,9,206,7],[165,10,206,8],[166,6,207,4],[167,4,208,2],[167,5,208,3],[167,7,208,5],[167,8,208,6,"game"],[167,12,208,10],[167,13,208,11,"updateNinja"],[167,24,208,22],[167,26,208,24,"game"],[167,30,208,28],[167,31,208,29,"gameState"],[167,40,208,38],[167,41,208,39,"subscriptionBenefits"],[167,61,208,59],[167,63,208,61,"recordEnemyKill"],[167,78,208,76],[167,79,208,77],[167,80,208,78],[169,4,210,2],[170,4,211,2],[171,4,212,2],[171,8,212,8,"handleCombatTick"],[171,24,212,24],[171,27,212,27,"React"],[171,32,212,32],[171,33,212,32,"default"],[171,40,212,32],[171,41,212,33,"useCallback"],[171,52,212,44],[171,53,212,45],[171,59,212,51],[172,6,212,51],[172,10,212,51,"_s2"],[172,13,212,51],[172,16,212,51,"$RefreshSig$"],[172,28,212,51],[173,6,213,4,"console"],[173,13,213,11],[173,14,213,12,"log"],[173,17,213,15],[173,18,213,16],[173,87,213,85],[173,88,213,86],[174,6,214,4,"console"],[174,13,214,11],[174,14,214,12,"log"],[174,17,214,15],[174,18,214,16],[174,65,214,63,"isManualControlActive"],[174,86,214,84],[174,99,214,97,"game"],[174,103,214,101],[174,104,214,102,"gameState"],[174,113,214,111],[174,114,214,112,"isAlive"],[174,121,214,119],[174,123,214,121],[174,124,214,122],[175,6,216,4],[175,10,216,8,"enemiesToKill"],[175,23,216,36],[175,26,216,39],[175,28,216,41],[175,29,216,42],[175,30,216,43],[177,6,218,4,"_s2"],[177,9,218,4],[177,10,218,4,"setCombatState"],[177,24,218,18],[177,25,218,18,"_s2"],[177,28,218,18],[177,29,218,19,"prev"],[177,33,218,23],[177,37,218,27],[178,8,218,27,"_s2"],[178,11,218,27],[179,8,219,6],[179,12,219,12,"newTick"],[179,19,219,19],[179,22,219,22,"combatEngine"],[179,41,219,34],[179,42,219,34,"combatEngine"],[179,54,219,34],[179,55,219,35,"getCurrentTick"],[179,69,219,49],[179,70,219,50],[179,71,219,51],[180,8,220,6],[180,12,220,12,"newState"],[180,20,220,20],[180,23,220,23],[181,10,220,25],[181,13,220,28,"prev"],[181,17,220,32],[182,10,220,34,"currentTick"],[182,21,220,45],[182,23,220,47,"newTick"],[183,8,220,55],[183,9,220,56],[184,8,222,6],[184,12,222,10],[184,13,222,11,"newState"],[184,21,222,19],[184,22,222,20,"isInCombat"],[184,32,222,30],[184,34,222,32],[184,41,222,39,"newState"],[184,49,222,47],[186,8,224,6],[187,8,225,6,"newState"],[187,16,225,14],[187,17,225,15,"abilityManager"],[187,31,225,29],[187,32,225,30,"updateCooldowns"],[187,47,225,45],[187,48,225,46,"newTick"],[187,55,225,53],[187,56,225,54],[189,8,227,6],[190,8,228,6],[190,12,228,12,"effectResults"],[190,25,228,25],[190,28,228,28,"newState"],[190,36,228,36],[190,37,228,37,"statusEffects"],[190,50,228,50],[190,51,228,51,"processTick"],[190,62,228,62],[190,63,228,63,"newTick"],[190,70,228,70],[190,71,228,71],[192,8,230,6],[193,8,231,6,"effectResults"],[193,21,231,19],[193,22,231,20,"forEach"],[193,29,231,27],[193,30,231,28],[193,31,231,29,"results"],[193,38,231,36],[193,40,231,38,"entityId"],[193,48,231,46],[193,53,231,51],[194,10,232,8],[194,14,232,14,"enemyIndex"],[194,24,232,24],[194,27,232,27,"newState"],[194,35,232,35],[194,36,232,36,"enemies"],[194,43,232,43],[194,44,232,44,"findIndex"],[194,53,232,53],[194,54,232,54,"e"],[194,55,232,55],[194,59,232,59,"e"],[194,60,232,60],[194,61,232,61,"id"],[194,63,232,63],[194,68,232,68,"entityId"],[194,76,232,76],[194,77,232,77],[195,10,233,8],[195,14,233,12,"enemyIndex"],[195,24,233,22],[195,28,233,26],[195,29,233,27],[195,31,233,29],[196,12,234,10,"results"],[196,19,234,17],[196,20,234,18,"forEach"],[196,27,234,25],[196,28,234,26,"result"],[196,34,234,32],[196,38,234,36],[197,14,235,12,"newState"],[197,22,235,20],[197,23,235,21,"enemies"],[197,30,235,28],[197,31,235,29,"enemyIndex"],[197,41,235,39],[197,42,235,40],[197,43,235,41,"health"],[197,49,235,47],[197,53,235,51,"result"],[197,59,235,57],[197,60,235,58,"damage"],[197,66,235,64],[198,14,236,12,"newState"],[198,22,236,20],[198,23,236,21,"enemies"],[198,30,236,28],[198,31,236,29,"enemyIndex"],[198,41,236,39],[198,42,236,40],[198,43,236,41,"lastDamaged"],[198,54,236,52],[198,57,236,55,"newTick"],[198,64,236,62],[199,12,237,10],[199,13,237,11],[199,14,237,12],[200,10,238,8],[201,8,239,6],[201,9,239,7],[201,10,239,8],[203,8,241,6],[204,8,242,6],[205,8,243,6],[205,12,243,10,"newState"],[205,20,243,18],[205,21,243,19,"playerStats"],[205,32,243,30],[205,36,243,34,"game"],[205,40,243,38],[205,41,243,39,"gameState"],[205,50,243,48],[205,51,243,49,"ninja"],[205,56,243,54],[205,58,243,56],[206,10,244,8],[206,14,244,14,"effectiveStats"],[206,28,244,28],[206,31,244,31,"game"],[206,35,244,35],[206,36,244,36,"getEffectiveStats"],[206,53,244,53],[206,54,244,54],[206,55,244,55],[208,10,246,8],[209,10,247,8],[209,14,247,12,"newState"],[209,22,247,20],[209,23,247,21,"playerStats"],[209,34,247,32],[209,35,247,33,"attack"],[209,41,247,39],[209,46,247,44,"effectiveStats"],[209,60,247,58],[209,61,247,59,"attack"],[209,67,247,65],[209,71,248,12,"newState"],[209,79,248,20],[209,80,248,21,"playerStats"],[209,91,248,32],[209,92,248,33,"defense"],[209,99,248,40],[209,104,248,45,"effectiveStats"],[209,118,248,59],[209,119,248,60,"defense"],[209,126,248,67],[209,130,249,12,"newState"],[209,138,249,20],[209,139,249,21,"playerStats"],[209,150,249,32],[209,151,249,33,"maxHealth"],[209,160,249,42],[209,165,249,47,"effectiveStats"],[209,179,249,61],[209,180,249,62,"maxHealth"],[209,189,249,71],[209,191,249,73],[210,12,251,10,"console"],[210,19,251,17],[210,20,251,18,"log"],[210,23,251,21],[210,24,251,22],[210,58,251,56,"newState"],[210,66,251,64],[210,67,251,65,"playerStats"],[210,78,251,76],[210,79,251,77,"attack"],[210,85,251,83],[210,91,251,89,"effectiveStats"],[210,105,251,103],[210,106,251,104,"attack"],[210,112,251,110],[210,125,251,123,"newState"],[210,133,251,131],[210,134,251,132,"playerStats"],[210,145,251,143],[210,146,251,144,"defense"],[210,153,251,151],[210,159,251,157,"effectiveStats"],[210,173,251,171],[210,174,251,172,"defense"],[210,181,251,179],[210,192,251,190,"newState"],[210,200,251,198],[210,201,251,199,"playerStats"],[210,212,251,210],[210,213,251,211,"maxHealth"],[210,222,251,220],[210,228,251,226,"effectiveStats"],[210,242,251,240],[210,243,251,241,"maxHealth"],[210,252,251,250],[210,254,251,252],[210,255,251,253],[212,12,253,10],[213,12,254,10],[213,16,254,14,"newHealth"],[213,25,254,23],[213,28,254,26,"newState"],[213,36,254,34],[213,37,254,35,"playerStats"],[213,48,254,46],[213,49,254,47,"health"],[213,55,254,53],[214,12,255,10],[214,16,255,14,"newState"],[214,24,255,22],[214,25,255,23,"playerStats"],[214,36,255,34],[214,37,255,35,"maxHealth"],[214,46,255,44],[214,51,255,49,"effectiveStats"],[214,65,255,63],[214,66,255,64,"maxHealth"],[214,75,255,73],[214,77,255,75],[215,14,256,12],[216,14,257,12],[216,18,257,16,"effectiveStats"],[216,32,257,30],[216,33,257,31,"maxHealth"],[216,42,257,40],[216,45,257,43,"newState"],[216,53,257,51],[216,54,257,52,"playerStats"],[216,65,257,63],[216,66,257,64,"maxHealth"],[216,75,257,73],[216,78,257,76],[216,81,257,79],[216,83,257,81],[217,16,258,14],[218,16,259,14],[218,20,259,20,"healthRatio"],[218,31,259,31],[218,34,259,34,"newState"],[218,42,259,42],[218,43,259,43,"playerStats"],[218,54,259,54],[218,55,259,55,"maxHealth"],[218,64,259,64],[218,67,259,67],[218,68,259,68],[218,71,260,16,"newState"],[218,79,260,24],[218,80,260,25,"playerStats"],[218,91,260,36],[218,92,260,37,"health"],[218,98,260,43],[218,101,260,46,"newState"],[218,109,260,54],[218,110,260,55,"playerStats"],[218,121,260,66],[218,122,260,67,"maxHealth"],[218,131,260,76],[218,134,260,79],[218,135,260,80],[219,16,261,14,"newHealth"],[219,25,261,23],[219,28,261,26,"Math"],[219,32,261,30],[219,33,261,31,"floor"],[219,38,261,36],[219,39,261,37,"effectiveStats"],[219,53,261,51],[219,54,261,52,"maxHealth"],[219,63,261,61],[219,66,261,64,"healthRatio"],[219,77,261,75],[219,78,261,76],[220,14,262,12],[220,15,262,13],[220,21,262,19],[220,25,262,23,"newState"],[220,33,262,31],[220,34,262,32,"playerStats"],[220,45,262,43],[220,46,262,44,"health"],[220,52,262,50],[220,55,262,53,"effectiveStats"],[220,69,262,67],[220,70,262,68,"maxHealth"],[220,79,262,77],[220,81,262,79],[221,16,263,14],[222,16,264,14,"newHealth"],[222,25,264,23],[222,28,264,26,"effectiveStats"],[222,42,264,40],[222,43,264,41,"maxHealth"],[222,52,264,50],[223,14,265,12],[224,14,266,12],[225,12,267,10],[226,12,269,10,"newState"],[226,20,269,18],[226,21,269,19,"playerStats"],[226,32,269,30],[226,35,269,33],[227,14,270,12],[227,17,270,15,"newState"],[227,25,270,23],[227,26,270,24,"playerStats"],[227,37,270,35],[228,14,271,12,"attack"],[228,20,271,18],[228,22,271,20,"effectiveStats"],[228,36,271,34],[228,37,271,35,"attack"],[228,43,271,41],[229,14,272,12,"defense"],[229,21,272,19],[229,23,272,21,"effectiveStats"],[229,37,272,35],[229,38,272,36,"defense"],[229,45,272,43],[230,14,273,12,"maxHealth"],[230,23,273,21],[230,25,273,23,"effectiveStats"],[230,39,273,37],[230,40,273,38,"maxHealth"],[230,49,273,47],[231,14,273,49],[232,14,274,12,"health"],[232,20,274,18],[232,22,274,20,"newHealth"],[232,31,274,29],[233,14,274,31],[234,14,275,12,"critChance"],[234,24,275,22],[234,26,275,24,"effectiveStats"],[234,40,275,38],[234,41,275,39,"critChance"],[234,51,275,49],[234,55,275,53,"newState"],[234,63,275,61],[234,64,275,62,"playerStats"],[234,75,275,73],[234,76,275,74,"critChance"],[234,86,275,84],[235,14,276,12,"critDamage"],[235,24,276,22],[235,26,276,24,"effectiveStats"],[235,40,276,38],[235,41,276,39,"critDamage"],[235,51,276,49],[235,55,276,53,"newState"],[235,63,276,61],[235,64,276,62,"playerStats"],[235,75,276,73],[235,76,276,74,"critDamage"],[235,86,276,84],[236,14,277,12,"cooldownReduction"],[236,31,277,29],[236,33,277,31,"effectiveStats"],[236,47,277,45],[236,48,277,46,"cooldownReduction"],[236,65,277,63],[236,69,277,67,"newState"],[236,77,277,75],[236,78,277,76,"playerStats"],[236,89,277,87],[236,90,277,88,"cooldownReduction"],[237,12,278,10],[237,13,278,11],[238,10,279,8],[240,10,281,8],[241,10,282,8],[241,14,282,12,"game"],[241,18,282,16],[241,19,282,17,"gameState"],[241,28,282,26],[241,29,282,27,"isAlive"],[241,36,282,34],[241,40,283,12,"game"],[241,44,283,16],[241,45,283,17,"gameState"],[241,54,283,26],[241,55,283,27,"ninja"],[241,60,283,32],[241,61,283,33,"health"],[241,67,283,39],[241,72,283,44,"effectiveStats"],[241,86,283,58],[241,87,283,59,"maxHealth"],[241,96,283,68],[241,100,284,12,"newState"],[241,108,284,20],[241,109,284,21,"playerStats"],[241,120,284,32],[241,121,284,33,"health"],[241,127,284,39],[241,130,284,42,"effectiveStats"],[241,144,284,56],[241,145,284,57,"maxHealth"],[241,154,284,66],[241,157,284,69],[241,160,284,72],[241,162,284,74],[242,12,285,10,"console"],[242,19,285,17],[242,20,285,18,"log"],[242,23,285,21],[242,24,285,22],[242,58,285,56,"newState"],[242,66,285,64],[242,67,285,65,"playerStats"],[242,78,285,76],[242,79,285,77,"health"],[242,85,285,83],[242,91,285,89,"game"],[242,95,285,93],[242,96,285,94,"gameState"],[242,105,285,103],[242,106,285,104,"ninja"],[242,111,285,109],[242,112,285,110,"health"],[242,118,285,116],[242,139,285,137],[242,140,285,138],[243,12,286,10,"newState"],[243,20,286,18],[243,21,286,19,"playerStats"],[243,32,286,30],[243,33,286,31,"health"],[243,39,286,37],[243,42,286,40,"game"],[243,46,286,44],[243,47,286,45,"gameState"],[243,56,286,54],[243,57,286,55,"ninja"],[243,62,286,60],[243,63,286,61,"health"],[243,69,286,67],[244,10,287,8],[245,8,288,6],[247,8,290,6],[248,8,291,6,"newState"],[248,16,291,14],[248,17,291,15,"enemies"],[248,24,291,22],[248,25,291,23,"forEach"],[248,32,291,30],[248,33,291,31,"enemy"],[248,38,291,36],[248,42,291,40],[249,10,292,8],[249,14,292,12],[249,15,292,13,"enemy"],[249,20,292,18],[249,21,292,19,"isBoss"],[249,27,292,25],[249,29,292,27],[250,12,292,29],[251,12,293,10],[252,12,294,10],[252,16,294,16,"MOVEMENT_SPEED"],[252,30,294,30],[252,33,294,33],[252,37,294,37],[252,38,294,38],[252,39,294,39],[253,12,295,10],[253,16,295,16,"SCREEN_WIDTH"],[253,28,295,28],[253,31,295,31],[253,34,295,34],[254,12,296,10],[254,16,296,16,"GAME_AREA_HEIGHT"],[254,32,296,32],[254,35,296,35],[254,38,296,38],[254,39,296,39],[254,40,296,40],[255,12,297,10],[255,16,297,16,"ENEMY_SIZE"],[255,26,297,26],[255,29,297,29],[255,31,297,31],[257,12,299,10],[258,12,300,10],[258,16,300,16,"playerX"],[258,23,300,23],[258,26,300,26,"currentNinjaPosition"],[258,46,300,46],[258,47,300,47,"x"],[258,48,300,48],[259,12,301,10],[259,16,301,16,"playerY"],[259,23,301,23],[259,26,301,26,"currentNinjaPosition"],[259,46,301,46],[259,47,301,47,"y"],[259,48,301,48],[261,12,303,10],[262,12,304,10],[262,16,304,16,"deltaX"],[262,22,304,22],[262,25,304,25,"playerX"],[262,32,304,32],[262,35,304,35,"enemy"],[262,40,304,40],[262,41,304,41,"position"],[262,49,304,49],[262,50,304,50,"x"],[262,51,304,51],[263,12,305,10],[263,16,305,16,"deltaY"],[263,22,305,22],[263,25,305,25,"playerY"],[263,32,305,32],[263,35,305,35,"enemy"],[263,40,305,40],[263,41,305,41,"position"],[263,49,305,49],[263,50,305,50,"y"],[263,51,305,51],[264,12,306,10],[264,16,306,16,"distance"],[264,24,306,24],[264,27,306,27,"Math"],[264,31,306,31],[264,32,306,32,"sqrt"],[264,36,306,36],[264,37,306,37,"deltaX"],[264,43,306,43],[264,46,306,46,"deltaX"],[264,52,306,52],[264,55,306,55,"deltaY"],[264,61,306,61],[264,64,306,64,"deltaY"],[264,70,306,70],[264,71,306,71],[266,12,308,10],[267,12,309,10],[267,16,309,16,"ATTACK_RANGE"],[267,28,309,28],[267,31,309,31],[267,33,309,33],[267,34,309,34],[267,35,309,35],[268,12,310,10],[268,16,310,16,"ATTACK_COOLDOWN"],[268,31,310,31],[268,34,310,34],[268,36,310,36],[268,37,310,37],[268,38,310,38],[270,12,312,10],[270,16,312,14,"distance"],[270,24,312,22],[270,28,312,26,"ATTACK_RANGE"],[270,40,312,38],[270,42,312,40],[271,14,313,12],[272,14,314,12],[272,18,314,16],[272,19,314,17,"enemy"],[272,24,314,22],[272,25,314,23,"lastAttackTick"],[272,39,314,37],[272,41,314,39,"enemy"],[272,46,314,44],[272,47,314,45,"lastAttackTick"],[272,61,314,59],[272,64,314,62],[272,65,314,63],[273,14,316,12],[273,18,316,16,"newState"],[273,26,316,24],[273,27,316,25,"currentTick"],[273,38,316,36],[273,41,316,39,"enemy"],[273,46,316,44],[273,47,316,45,"lastAttackTick"],[273,61,316,59],[273,65,316,63,"ATTACK_COOLDOWN"],[273,80,316,78],[273,82,316,80],[274,16,317,14],[275,16,318,14],[275,20,318,18],[275,21,318,19,"game"],[275,25,318,23],[275,26,318,24,"gameState"],[275,35,318,33],[275,36,318,34,"isAlive"],[275,43,318,41],[275,45,318,43],[276,18,319,16,"console"],[276,25,319,23],[276,26,319,24,"log"],[276,29,319,27],[276,30,319,28],[276,49,319,47,"enemy"],[276,54,319,52],[276,55,319,53,"name"],[276,59,319,57],[276,93,319,91],[276,94,319,92],[277,18,320,16],[278,18,321,16,"enemy"],[278,23,321,21],[278,24,321,22,"lastAttackTick"],[278,38,321,36],[278,41,321,39,"newState"],[278,49,321,47],[278,50,321,48,"currentTick"],[278,61,321,59],[279,16,322,14],[279,17,322,15],[279,23,322,21],[280,18,323,16],[281,18,324,16],[281,22,324,22,"isPlayerInvincible"],[281,40,324,40],[281,43,324,43,"game"],[281,47,324,47],[281,48,324,48,"gameState"],[281,57,324,57],[281,58,324,58,"isInvincible"],[281,70,324,70],[281,74,325,41,"game"],[281,78,325,45],[281,79,325,46,"gameState"],[281,88,325,55],[281,89,325,56,"invincibilityEndTime"],[281,109,325,76],[281,113,326,41,"Date"],[281,117,326,45],[281,118,326,46,"now"],[281,121,326,49],[281,122,326,50],[281,123,326,51],[281,126,326,54,"game"],[281,130,326,58],[281,131,326,59,"gameState"],[281,140,326,68],[281,141,326,69,"invincibilityEndTime"],[281,161,326,89],[282,18,328,16],[282,22,328,20,"isPlayerInvincible"],[282,40,328,38],[282,42,328,40],[283,20,329,18,"console"],[283,27,329,25],[283,28,329,26,"log"],[283,31,329,29],[283,32,329,30],[283,51,329,49,"enemy"],[283,56,329,54],[283,57,329,55,"name"],[283,61,329,59],[283,101,329,99],[283,102,329,100],[284,20,330,18],[285,20,331,18,"enemy"],[285,25,331,23],[285,26,331,24,"lastAttackTick"],[285,40,331,38],[285,43,331,41,"newState"],[285,51,331,49],[285,52,331,50,"currentTick"],[285,63,331,61],[286,18,332,16],[286,19,332,17],[286,25,332,23],[287,20,333,16],[288,20,334,16],[288,24,334,22,"baseAttack"],[288,34,334,32],[288,37,334,35,"enemy"],[288,42,334,40],[288,43,334,41,"stats"],[288,48,334,46],[288,49,334,47,"attack"],[288,55,334,53],[288,58,334,56],[288,61,334,59],[288,62,334,60],[288,63,334,61],[289,20,335,16],[289,24,335,22,"attackDamage"],[289,36,335,34],[289,39,335,37,"Math"],[289,43,335,41],[289,44,335,42,"floor"],[289,49,335,47],[289,50,335,48,"baseAttack"],[289,60,335,58],[289,64,335,62],[289,67,335,65],[289,70,335,68,"Math"],[289,74,335,72],[289,75,335,73,"random"],[289,81,335,79],[289,82,335,80],[289,83,335,81],[289,86,335,84],[289,89,335,87],[289,90,335,88],[289,91,335,89],[289,92,335,90],[289,93,335,91],[290,20,336,16],[290,24,336,22,"playerDefense"],[290,37,336,35],[290,40,336,38,"newState"],[290,48,336,46],[290,49,336,47,"playerStats"],[290,60,336,58],[290,61,336,59,"defense"],[290,68,336,66],[291,20,337,16],[291,24,337,22,"finalDamage"],[291,35,337,33],[291,38,337,36,"Math"],[291,42,337,40],[291,43,337,41,"max"],[291,46,337,44],[291,47,337,45],[291,48,337,46],[291,50,337,48,"attackDamage"],[291,62,337,60],[291,65,337,63,"Math"],[291,69,337,67],[291,70,337,68,"floor"],[291,75,337,73],[291,76,337,74,"playerDefense"],[291,89,337,87],[291,92,337,90],[291,95,337,93],[291,96,337,94],[291,97,337,95],[291,98,337,96],[291,99,337,97],[293,20,339,16,"console"],[293,27,339,23],[293,28,339,24,"log"],[293,31,339,27],[293,32,339,28],[293,53,339,49,"enemy"],[293,58,339,54],[293,59,339,55,"name"],[293,63,339,59],[293,86,339,82,"finalDamage"],[293,97,339,93],[293,109,339,105,"attackDamage"],[293,121,339,117],[293,132,339,128,"Math"],[293,136,339,132],[293,137,339,133,"floor"],[293,142,339,138],[293,143,339,139,"playerDefense"],[293,156,339,152],[293,159,339,155],[293,162,339,158],[293,163,339,159],[293,184,339,180],[293,185,339,181],[295,20,341,16],[296,20,342,16],[296,24,342,22,"newPlayerHealth"],[296,39,342,37],[296,42,342,40,"Math"],[296,46,342,44],[296,47,342,45,"max"],[296,50,342,48],[296,51,342,49],[296,52,342,50],[296,54,342,52,"newState"],[296,62,342,60],[296,63,342,61,"playerStats"],[296,74,342,72],[296,75,342,73,"health"],[296,81,342,79],[296,84,342,82,"finalDamage"],[296,95,342,93],[296,96,342,94],[297,20,343,16,"newState"],[297,28,343,24],[297,29,343,25,"playerStats"],[297,40,343,36],[297,41,343,37,"health"],[297,47,343,43],[297,50,343,46,"newPlayerHealth"],[297,65,343,61],[298,20,345,16,"console"],[298,27,345,23],[298,28,345,24,"log"],[298,31,345,27],[298,32,345,28],[298,53,345,49,"newState"],[298,61,345,57],[298,62,345,58,"playerStats"],[298,73,345,69],[298,74,345,70,"health"],[298,80,345,76],[298,84,345,80,"newState"],[298,92,345,88],[298,93,345,89,"playerStats"],[298,104,345,100],[298,105,345,101,"maxHealth"],[298,114,345,110],[298,124,345,120,"finalDamage"],[298,135,345,131],[298,145,345,141],[298,146,345,142],[300,20,347,16],[301,20,348,16,"enemy"],[301,25,348,21],[301,26,348,22,"lastAttackTick"],[301,40,348,36],[301,43,348,39,"newState"],[301,51,348,47],[301,52,348,48,"currentTick"],[301,63,348,59],[303,20,350,16],[304,20,351,16],[304,24,351,20,"newPlayerHealth"],[304,39,351,35],[304,43,351,39],[304,44,351,40],[304,46,351,42],[305,22,352,18,"console"],[305,29,352,25],[305,30,352,26,"log"],[305,33,352,29],[305,34,352,30],[305,84,352,80],[305,85,352,81],[306,22,353,18],[307,22,354,18,"setTimeout"],[307,32,354,28],[307,33,354,29],[307,39,354,35],[308,24,355,20],[309,24,356,20,"game"],[309,28,356,24],[309,29,356,25,"updateGameState"],[309,44,356,40],[309,45,356,41],[310,26,356,43,"isAlive"],[310,33,356,50],[310,35,356,52],[311,24,356,58],[311,25,356,59],[311,26,356,60],[312,22,357,18],[312,23,357,19],[312,25,357,21],[312,28,357,24],[312,29,357,25],[313,20,358,16],[314,18,359,16],[315,16,360,14],[316,14,361,12],[317,12,362,10],[317,13,362,11],[317,19,362,17],[318,14,363,12],[319,14,364,12],[320,14,365,12],[320,18,365,16,"distance"],[320,26,365,24],[320,29,365,27],[320,31,365,29],[320,33,365,31],[321,16,366,14],[322,16,367,14],[322,20,367,20,"normalizedX"],[322,31,367,31],[322,34,367,34,"deltaX"],[322,40,367,40],[322,43,367,43,"distance"],[322,51,367,51],[323,16,368,14],[323,20,368,20,"normalizedY"],[323,31,368,31],[323,34,368,34,"deltaY"],[323,40,368,40],[323,43,368,43,"distance"],[323,51,368,51],[325,16,370,14],[326,16,371,14],[326,20,371,20,"randomFactor"],[326,32,371,32],[326,35,371,35],[326,38,371,38],[326,39,371,39],[326,40,371,40],[327,16,372,14],[327,20,372,20,"finalX"],[327,26,372,26],[327,29,372,29,"normalizedX"],[327,40,372,40],[327,43,372,43],[327,44,372,44,"Math"],[327,48,372,48],[327,49,372,49,"random"],[327,55,372,55],[327,56,372,56],[327,57,372,57],[327,60,372,60],[327,63,372,63],[327,67,372,67,"randomFactor"],[327,79,372,79],[328,16,373,14],[328,20,373,20,"finalY"],[328,26,373,26],[328,29,373,29,"normalizedY"],[328,40,373,40],[328,43,373,43],[328,44,373,44,"Math"],[328,48,373,48],[328,49,373,49,"random"],[328,55,373,55],[328,56,373,56],[328,57,373,57],[328,60,373,60],[328,63,373,63],[328,67,373,67,"randomFactor"],[328,79,373,79],[330,16,375,14],[331,16,376,14],[331,20,376,18,"newX"],[331,24,376,22],[331,27,376,25,"enemy"],[331,32,376,30],[331,33,376,31,"position"],[331,41,376,39],[331,42,376,40,"x"],[331,43,376,41],[331,46,376,45,"finalX"],[331,52,376,51],[331,55,376,54,"MOVEMENT_SPEED"],[331,69,376,69],[332,16,377,14],[332,20,377,18,"newY"],[332,24,377,22],[332,27,377,25,"enemy"],[332,32,377,30],[332,33,377,31,"position"],[332,41,377,39],[332,42,377,40,"y"],[332,43,377,41],[332,46,377,45,"finalY"],[332,52,377,51],[332,55,377,54,"MOVEMENT_SPEED"],[332,69,377,69],[334,16,379,14],[335,16,380,14,"newX"],[335,20,380,18],[335,23,380,21,"Math"],[335,27,380,25],[335,28,380,26,"max"],[335,31,380,29],[335,32,380,30],[335,33,380,31],[335,35,380,33,"Math"],[335,39,380,37],[335,40,380,38,"min"],[335,43,380,41],[335,44,380,42,"SCREEN_WIDTH"],[335,56,380,54],[335,59,380,57,"ENEMY_SIZE"],[335,69,380,67],[335,71,380,69,"newX"],[335,75,380,73],[335,76,380,74],[335,77,380,75],[336,16,381,14,"newY"],[336,20,381,18],[336,23,381,21,"Math"],[336,27,381,25],[336,28,381,26,"max"],[336,31,381,29],[336,32,381,30],[336,33,381,31],[336,35,381,33,"Math"],[336,39,381,37],[336,40,381,38,"min"],[336,43,381,41],[336,44,381,42,"GAME_AREA_HEIGHT"],[336,60,381,58],[336,63,381,61,"ENEMY_SIZE"],[336,73,381,71],[336,75,381,73,"newY"],[336,79,381,77],[336,80,381,78],[336,81,381,79],[338,16,383,14],[339,16,384,14,"enemy"],[339,21,384,19],[339,22,384,20,"position"],[339,30,384,28],[339,31,384,29,"x"],[339,32,384,30],[339,35,384,33,"newX"],[339,39,384,37],[340,16,385,14,"enemy"],[340,21,385,19],[340,22,385,20,"position"],[340,30,385,28],[340,31,385,29,"y"],[340,32,385,30],[340,35,385,33,"newY"],[340,39,385,37],[341,14,386,12],[342,14,387,12],[343,12,388,10],[344,10,389,8],[345,8,390,6],[345,9,390,7],[345,10,390,8],[347,8,392,6],[348,8,393,6],[348,12,393,10,"newState"],[348,20,393,18],[348,21,393,19,"shadowClone"],[348,32,393,30],[348,34,393,32],[349,10,394,8],[350,10,395,8,"newState"],[350,18,395,16],[350,19,395,17,"shadowClone"],[350,30,395,28],[350,31,395,29,"remainingTicks"],[350,45,395,43],[350,47,395,45],[352,10,397,8],[353,10,398,8],[353,14,398,14,"cloneOffset"],[353,25,398,25],[353,28,398,28],[353,30,398,30],[353,31,398,31],[353,32,398,32],[354,10,399,8,"newState"],[354,18,399,16],[354,19,399,17,"shadowClone"],[354,30,399,28],[354,31,399,29,"position"],[354,39,399,37],[354,40,399,38,"x"],[354,41,399,39],[354,44,399,42,"currentNinjaPosition"],[354,64,399,62],[354,65,399,63,"x"],[354,66,399,64],[354,69,399,67,"cloneOffset"],[354,80,399,78],[355,10,400,8,"newState"],[355,18,400,16],[355,19,400,17,"shadowClone"],[355,30,400,28],[355,31,400,29,"position"],[355,39,400,37],[355,40,400,38,"y"],[355,41,400,39],[355,44,400,42,"currentNinjaPosition"],[355,64,400,62],[355,65,400,63,"y"],[355,66,400,64],[355,69,400,67],[355,71,400,69],[357,10,402,8],[358,10,403,8],[358,14,403,12,"newState"],[358,22,403,20],[358,23,403,21,"shadowClone"],[358,34,403,32],[358,35,403,33,"remainingTicks"],[358,49,403,47],[358,53,403,51],[358,54,403,52],[358,56,403,54],[359,12,404,10,"console"],[359,19,404,17],[359,20,404,18,"log"],[359,23,404,21],[359,24,404,22],[359,75,404,73],[359,76,404,74],[360,12,405,10,"newState"],[360,20,405,18],[360,21,405,19,"shadowClone"],[360,32,405,30],[360,35,405,33,"undefined"],[360,44,405,42],[361,10,406,8],[361,11,406,9],[361,17,406,15],[362,12,407,10],[363,12,408,10],[364,12,409,10],[364,16,409,16,"CLONE_ATTACK_INTERVAL"],[364,37,409,37],[364,40,409,40],[364,42,409,42],[365,12,410,10],[365,16,410,14,"newState"],[365,24,410,22],[365,25,410,23,"currentTick"],[365,36,410,34],[365,39,410,37,"CLONE_ATTACK_INTERVAL"],[365,60,410,58],[365,65,410,63],[365,66,410,64],[365,70,410,68,"newState"],[365,78,410,76],[365,79,410,77,"enemies"],[365,86,410,84],[365,87,410,85,"length"],[365,93,410,91],[365,96,410,94],[365,97,410,95],[365,99,410,97],[366,14,411,12,"console"],[366,21,411,19],[366,22,411,20,"log"],[366,25,411,23],[366,26,411,24],[366,83,411,81],[366,84,411,82],[368,14,413,12],[369,14,414,12],[369,18,414,18,"target"],[369,24,414,24],[369,27,414,27,"findClosestEnemyInternal"],[369,51,414,51],[369,52,414,52,"newState"],[369,60,414,60],[369,61,414,61,"enemies"],[369,68,414,68],[369,69,414,69],[370,14,415,12],[370,18,415,16,"target"],[370,24,415,22],[370,26,415,24],[371,16,416,14],[372,16,417,14],[372,20,417,20,"cloneDamage"],[372,31,417,31],[372,34,417,34,"Math"],[372,38,417,38],[372,39,417,39,"floor"],[372,44,417,44],[372,45,417,45,"newState"],[372,53,417,53],[372,54,417,54,"playerStats"],[372,65,417,65],[372,66,417,66,"attack"],[372,72,417,72],[372,75,417,75],[372,78,417,78],[372,79,417,79],[374,16,419,14],[375,16,420,14,"createProjectile"],[375,32,420,30],[375,33,420,31,"target"],[375,39,420,37],[375,41,420,39,"cloneDamage"],[375,52,420,50],[375,54,420,52,"newState"],[375,62,420,60],[375,63,420,61,"shadowClone"],[375,74,420,72],[375,75,420,73,"position"],[375,83,420,81],[375,85,420,83],[376,18,421,16,"id"],[376,20,421,18],[376,22,421,20],[376,43,421,41],[377,18,422,16,"name"],[377,22,422,20],[377,24,422,22],[377,45,422,43],[378,18,423,16,"icon"],[378,22,423,20],[378,24,423,22],[379,16,424,14],[379,17,424,15],[379,18,424,16],[380,14,425,12],[381,12,426,10],[382,10,427,8],[383,8,428,6],[385,8,430,6],[386,8,431,6],[387,8,432,6,"console"],[387,15,432,13],[387,16,432,14,"log"],[387,19,432,17],[387,20,432,18],[387,63,432,61,"isManualControlActive"],[387,84,432,82],[387,97,432,95,"game"],[387,101,432,99],[387,102,432,100,"gameState"],[387,111,432,109],[387,112,432,110,"isAlive"],[387,119,432,117],[387,121,432,119],[387,122,432,120],[388,8,433,6],[388,12,433,10],[388,13,433,11,"isManualControlActive"],[388,34,433,32],[388,38,433,36,"game"],[388,42,433,40],[388,43,433,41,"gameState"],[388,52,433,50],[388,53,433,51,"isAlive"],[388,60,433,58],[388,62,433,60],[389,10,434,8],[389,15,434,13],[389,19,434,17,"i"],[389,20,434,18],[389,23,434,21],[389,24,434,22],[389,26,434,24,"i"],[389,27,434,25],[389,30,434,28],[389,31,434,29],[389,33,434,31,"i"],[389,34,434,32],[389,36,434,34],[389,38,434,36],[390,12,435,10],[390,16,435,14,"newState"],[390,24,435,22],[390,25,435,23,"abilityManager"],[390,39,435,37],[390,40,435,38,"isAbilityReady"],[390,54,435,52],[390,55,435,53,"i"],[390,56,435,54],[390,57,435,55],[390,61,435,59,"newState"],[390,69,435,67],[390,70,435,68,"enemies"],[390,77,435,75],[390,78,435,76,"length"],[390,84,435,82],[390,87,435,85],[390,88,435,86],[390,90,435,88],[391,14,436,12],[391,18,436,16,"newState"],[391,26,436,24],[391,27,436,25,"abilityManager"],[391,41,436,39],[391,42,436,40,"useAbility"],[391,52,436,50],[391,53,436,51,"i"],[391,54,436,52],[391,56,436,54,"newTick"],[391,63,436,61],[391,64,436,62],[391,66,436,64],[392,16,437,14,"console"],[392,23,437,21],[392,24,437,22,"log"],[392,27,437,25],[392,28,437,26],[392,73,437,71,"i"],[392,74,437,72],[392,76,437,74],[392,77,437,75],[393,16,438,14,"castAbility"],[393,27,438,25],[393,28,438,26,"newState"],[393,36,438,34],[393,38,438,36,"i"],[393,39,438,37],[393,40,438,38],[394,14,439,12],[395,12,440,10],[396,10,441,8],[397,8,442,6],[399,8,444,6],[400,8,445,6],[400,12,445,12,"dyingEnemies"],[400,24,445,24],[400,27,445,27,"newState"],[400,35,445,35],[400,36,445,36,"enemies"],[400,43,445,43],[400,44,445,44,"filter"],[400,50,445,50],[400,51,445,51,"enemy"],[400,56,445,56],[400,60,445,60,"enemy"],[400,65,445,65],[400,66,445,66,"isDying"],[400,73,445,73],[400,77,445,77,"enemy"],[400,82,445,82],[400,83,445,83,"health"],[400,89,445,89],[400,93,445,93],[400,94,445,94],[400,95,445,95],[401,8,446,6],[401,12,446,12,"deadEnemies"],[401,23,446,23],[401,26,446,26,"newState"],[401,34,446,34],[401,35,446,35,"enemies"],[401,42,446,42],[401,43,446,43,"filter"],[401,49,446,49],[401,50,446,50,"enemy"],[401,55,446,55],[401,59,446,59,"enemy"],[401,64,446,64],[401,65,446,65,"health"],[401,71,446,71],[401,75,446,75],[401,76,446,76],[401,80,446,80],[401,81,446,81,"enemy"],[401,86,446,86],[401,87,446,87,"isDying"],[401,94,446,94],[401,95,446,95],[403,8,448,6],[404,8,449,6,"enemiesToKill"],[404,21,449,19],[404,24,449,22],[404,25,449,23],[404,28,449,26,"deadEnemies"],[404,39,449,37],[404,41,449,39],[404,44,449,42,"dyingEnemies"],[404,56,449,54],[404,57,449,55],[404,58,449,56],[404,59,449,57],[406,8,451,6],[407,8,452,6],[407,12,452,12,"currentTime"],[407,23,452,23],[407,26,452,26,"Date"],[407,30,452,30],[407,31,452,31,"now"],[407,34,452,34],[407,35,452,35],[407,36,452,36],[408,8,453,6,"newState"],[408,16,453,14],[408,17,453,15,"enemies"],[408,24,453,22],[408,27,453,25,"newState"],[408,35,453,33],[408,36,453,34,"enemies"],[408,43,453,41],[408,44,453,42,"filter"],[408,50,453,48],[408,51,453,49,"enemy"],[408,56,453,54],[408,60,453,58],[409,10,454,8],[409,14,454,12,"enemy"],[409,19,454,17],[409,20,454,18,"isDying"],[409,27,454,25],[409,31,454,29,"enemy"],[409,36,454,34],[409,37,454,35,"deathStartTime"],[409,51,454,49],[409,53,454,51],[410,12,455,10],[410,16,455,16,"animationDuration"],[410,33,455,33],[410,36,455,36],[410,39,455,39],[410,40,455,40],[410,41,455,41],[411,12,456,10],[411,16,456,16,"isAnimationComplete"],[411,35,456,35],[411,38,456,38,"currentTime"],[411,49,456,49],[411,52,456,52,"enemy"],[411,57,456,57],[411,58,456,58,"deathStartTime"],[411,72,456,72],[411,76,456,76,"animationDuration"],[411,93,456,93],[412,12,457,10],[412,16,457,14,"isAnimationComplete"],[412,35,457,33],[412,37,457,35],[413,14,458,12,"console"],[413,21,458,19],[413,22,458,20,"log"],[413,25,458,23],[413,26,458,24],[413,58,458,56,"enemy"],[413,63,458,61],[413,64,458,62,"name"],[413,68,458,66],[413,86,458,84,"currentTime"],[413,97,458,95],[413,100,458,98,"enemy"],[413,105,458,103],[413,106,458,104,"deathStartTime"],[413,120,458,118],[413,129,458,127],[413,130,458,128],[414,14,459,12],[414,21,459,19],[414,26,459,24],[414,27,459,25],[414,28,459,26],[415,12,460,10],[416,10,461,8],[417,10,462,8],[417,17,462,15],[417,21,462,19],[417,22,462,20],[417,23,462,21],[418,8,463,6],[418,9,463,7],[418,10,463,8],[420,8,465,6],[421,8,466,6],[421,12,466,10,"deadEnemies"],[421,23,466,21],[421,24,466,22,"length"],[421,30,466,28],[421,33,466,31],[421,34,466,32],[421,36,466,34],[422,10,467,8,"console"],[422,17,467,15],[422,18,467,16,"log"],[422,21,467,19],[422,22,467,20],[422,49,467,47,"deadEnemies"],[422,60,467,58],[422,61,467,59,"length"],[422,67,467,65],[422,83,467,81],[422,85,467,83,"deadEnemies"],[422,96,467,94],[422,97,467,95,"map"],[422,100,467,98],[422,101,467,99,"e"],[422,102,467,100],[422,106,467,104],[422,109,467,107,"e"],[422,110,467,108],[422,111,467,109,"id"],[422,113,467,111],[422,117,467,115,"e"],[422,118,467,116],[422,119,467,117,"health"],[422,125,467,123],[422,130,467,128],[422,131,467,129],[422,132,467,130],[423,8,468,6],[425,8,470,6],[426,8,471,6],[426,12,471,12,"lowHealthEnemies"],[426,28,471,28],[426,31,471,31,"newState"],[426,39,471,39],[426,40,471,40,"enemies"],[426,47,471,47],[426,48,471,48,"filter"],[426,54,471,54],[426,55,471,55,"enemy"],[426,60,471,60],[426,64,471,64,"enemy"],[426,69,471,69],[426,70,471,70,"health"],[426,76,471,76],[426,80,471,80],[426,82,471,82],[426,86,471,86,"enemy"],[426,91,471,91],[426,92,471,92,"health"],[426,98,471,98],[426,101,471,101],[426,102,471,102],[426,103,471,103],[427,8,472,6],[427,12,472,10,"lowHealthEnemies"],[427,28,472,26],[427,29,472,27,"length"],[427,35,472,33],[427,38,472,36],[427,39,472,37],[427,41,472,39],[428,10,473,8,"console"],[428,17,473,15],[428,18,473,16,"log"],[428,21,473,19],[428,22,473,20],[428,61,473,59],[428,63,473,61,"lowHealthEnemies"],[428,79,473,77],[428,80,473,78,"map"],[428,83,473,81],[428,84,473,82,"e"],[428,85,473,83],[428,89,473,87],[428,92,473,90,"e"],[428,93,473,91],[428,94,473,92,"id"],[428,96,473,94],[428,100,473,98,"e"],[428,101,473,99],[428,102,473,100,"health"],[428,108,473,106],[428,112,473,110,"e"],[428,113,473,111],[428,114,473,112,"maxHealth"],[428,123,473,121],[428,128,473,126],[428,129,473,127],[428,130,473,128],[429,8,474,6],[431,8,476,6],[432,8,477,6],[432,12,477,12,"beforeCount"],[432,23,477,23],[432,26,477,26,"newState"],[432,34,477,34],[432,35,477,35,"enemies"],[432,42,477,42],[432,43,477,43,"length"],[432,49,477,49],[433,8,478,6,"newState"],[433,16,478,14],[433,17,478,15,"enemies"],[433,24,478,22],[433,27,478,25,"newState"],[433,35,478,33],[433,36,478,34,"enemies"],[433,43,478,41],[433,44,478,42,"filter"],[433,50,478,48],[433,51,478,49,"enemy"],[433,56,478,54],[433,60,478,58,"enemy"],[433,65,478,63],[433,66,478,64,"health"],[433,72,478,70],[433,75,478,73],[433,76,478,74],[433,77,478,75],[434,8,479,6],[434,12,479,12,"afterCount"],[434,22,479,22],[434,25,479,25,"newState"],[434,33,479,33],[434,34,479,34,"enemies"],[434,41,479,41],[434,42,479,42,"length"],[434,48,479,48],[435,8,481,6],[435,12,481,10,"beforeCount"],[435,23,481,21],[435,28,481,26,"afterCount"],[435,38,481,36],[435,40,481,38],[436,10,482,8,"console"],[436,17,482,15],[436,18,482,16,"log"],[436,21,482,19],[436,22,482,20],[436,52,482,50,"beforeCount"],[436,63,482,61],[436,66,482,64,"afterCount"],[436,76,482,74],[436,102,482,100],[436,103,482,101],[437,8,483,6],[439,8,485,6],[440,8,486,6],[441,8,487,6],[441,12,487,12,"MAX_ENEMIES"],[441,23,487,23],[441,26,487,26],[441,28,487,28],[441,29,487,29],[441,30,487,30],[442,8,488,6],[442,12,488,12,"MIN_SPAWN_DELAY"],[442,27,488,27],[442,30,488,30],[442,33,488,33],[442,34,488,34],[442,35,488,35],[443,8,489,6],[443,12,489,12,"now"],[443,15,489,15],[443,18,489,18,"Date"],[443,22,489,22],[443,23,489,23,"now"],[443,26,489,26],[443,27,489,27],[443,28,489,28],[444,8,490,6],[444,12,490,12,"hasBoss"],[444,19,490,19],[444,22,490,22,"newState"],[444,30,490,30],[444,31,490,31,"enemies"],[444,38,490,38],[444,39,490,39,"some"],[444,43,490,43],[444,44,490,44,"enemy"],[444,49,490,49],[444,53,490,53,"enemy"],[444,58,490,58],[444,59,490,59,"isBoss"],[444,65,490,65],[444,66,490,66],[446,8,492,6],[447,8,493,6],[447,12,493,10],[447,13,493,11,"newState"],[447,21,493,19],[447,22,493,20,"lastSpawnTime"],[447,35,493,33],[447,37,493,35],[448,10,494,8,"newState"],[448,18,494,16],[448,19,494,17,"lastSpawnTime"],[448,32,494,30],[448,35,494,33,"now"],[448,38,494,36],[449,8,495,6],[450,8,497,6,"console"],[450,15,497,13],[450,16,497,14,"log"],[450,19,497,17],[450,20,497,18],[450,53,497,51,"newState"],[450,61,497,59],[450,62,497,60,"enemies"],[450,69,497,67],[450,70,497,68,"length"],[450,76,497,74],[450,85,497,83,"MAX_ENEMIES"],[450,96,497,94],[450,109,497,107,"hasBoss"],[450,116,497,114],[450,118,497,116],[450,119,497,117],[452,8,499,6],[453,8,500,6],[453,12,500,10],[453,13,500,11,"hasBoss"],[453,20,500,18],[453,24,500,22,"newState"],[453,32,500,30],[453,33,500,31,"enemies"],[453,40,500,38],[453,41,500,39,"length"],[453,47,500,45],[453,50,500,48,"MAX_ENEMIES"],[453,61,500,59],[453,65,500,64,"now"],[453,68,500,67],[453,71,500,70,"newState"],[453,79,500,78],[453,80,500,79,"lastSpawnTime"],[453,93,500,92],[453,97,500,97,"MIN_SPAWN_DELAY"],[453,112,500,112],[453,114,500,114],[454,10,501,8,"console"],[454,17,501,15],[454,18,501,16,"log"],[454,21,501,19],[454,22,501,20],[454,43,501,41,"newState"],[454,51,501,49],[454,52,501,50,"enemies"],[454,59,501,57],[454,60,501,58,"length"],[454,66,501,64],[454,69,501,67],[454,70,501,68],[454,74,501,72,"MAX_ENEMIES"],[454,85,501,83],[454,87,501,85],[454,88,501,86],[455,10,502,8,"spawnTestEnemy"],[455,24,502,22],[455,25,502,23,"newState"],[455,33,502,31],[455,34,502,32],[456,10,503,8,"newState"],[456,18,503,16],[456,19,503,17,"lastSpawnTime"],[456,32,503,30],[456,35,503,33,"now"],[456,38,503,36],[457,8,504,6],[458,8,506,6],[458,15,506,13,"newState"],[458,23,506,21],[459,6,507,4],[459,7,507,5],[459,47,507,6],[461,6,509,4],[462,6,510,4],[462,10,510,8,"enemiesToKill"],[462,23,510,21],[462,24,510,22,"length"],[462,30,510,28],[462,33,510,31],[462,34,510,32],[462,36,510,34],[463,8,511,6],[464,8,512,6],[464,12,512,12,"unprocessedEnemies"],[464,30,512,30],[464,33,512,33,"enemiesToKill"],[464,46,512,46],[464,47,512,47,"filter"],[464,53,512,53],[464,54,512,54,"enemy"],[464,59,512,59],[464,63,512,63],[464,64,512,64,"enemy"],[464,69,512,69],[464,70,512,70,"xpAwarded"],[464,79,512,79],[464,80,512,80],[465,8,514,6],[465,12,514,10,"unprocessedEnemies"],[465,30,514,28],[465,31,514,29,"length"],[465,37,514,35],[465,40,514,38],[465,41,514,39],[465,43,514,41],[466,10,515,8],[467,10,516,8],[467,14,516,12,"totalXP"],[467,21,516,19],[467,24,516,22],[467,25,516,23],[468,10,517,8],[468,14,517,12,"totalGold"],[468,23,517,21],[468,26,517,24],[468,27,517,25],[469,10,518,8],[469,14,518,14,"zoneKills"],[469,23,518,30],[469,26,518,33],[469,28,518,35],[470,10,520,8],[470,14,520,14,"xpMultiplier"],[470,26,520,26],[470,29,520,29,"game"],[470,33,520,33],[470,34,520,34,"gameState"],[470,43,520,43],[470,44,520,44,"subscriptionBenefits"],[470,64,520,64],[470,66,520,66,"xp_multiplier"],[470,79,520,79],[470,83,520,83],[470,86,520,86],[471,10,521,8],[471,14,521,14,"goldMultiplier"],[471,28,521,28],[471,31,521,31,"game"],[471,35,521,35],[471,36,521,36,"gameState"],[471,45,521,45],[471,46,521,46,"subscriptionBenefits"],[471,66,521,66],[471,68,521,68,"drop_multiplier"],[471,83,521,83],[471,87,521,87],[471,90,521,90],[472,10,523,8,"unprocessedEnemies"],[472,28,523,26],[472,29,523,27,"forEach"],[472,36,523,34],[472,37,523,35,"enemy"],[472,42,523,40],[472,46,523,44],[473,12,524,10,"totalXP"],[473,19,524,17],[473,23,524,21],[473,24,524,22,"enemy"],[473,29,524,27],[473,30,524,28,"zoneXP"],[473,36,524,34],[473,40,524,38],[473,41,524,39],[473,45,524,43,"xpMultiplier"],[473,57,524,55],[474,12,525,10,"totalGold"],[474,21,525,19],[474,25,525,23],[474,27,525,25],[474,30,525,28,"goldMultiplier"],[474,44,525,42],[475,12,527,10],[475,16,527,14,"enemy"],[475,21,527,19],[475,22,527,20,"zoneTypeId"],[475,32,527,30],[475,34,527,32],[476,14,528,12,"zoneKills"],[476,23,528,21],[476,24,528,22,"push"],[476,28,528,26],[476,29,528,27],[477,16,529,14,"id"],[477,18,529,16],[477,20,529,18,"enemy"],[477,25,529,23],[477,26,529,24,"id"],[477,28,529,26],[478,16,530,14,"typeId"],[478,22,530,20],[478,24,530,22,"enemy"],[478,29,530,27],[478,30,530,28,"zoneTypeId"],[478,40,530,38],[479,16,531,14,"name"],[479,20,531,18],[479,22,531,20,"enemy"],[479,27,531,25],[479,28,531,26,"name"],[479,32,531,30],[480,16,532,14,"icon"],[480,20,532,18],[480,22,532,20],[480,26,532,24],[481,16,533,14,"hp"],[481,18,533,16],[481,20,533,18],[481,21,533,19],[482,16,534,14,"maxHP"],[482,21,534,19],[482,23,534,21,"enemy"],[482,28,534,26],[482,29,534,27,"maxHealth"],[482,38,534,36],[483,16,535,14,"attack"],[483,22,535,20],[483,24,535,22,"enemy"],[483,29,535,27],[483,30,535,28,"stats"],[483,35,535,33],[483,36,535,34,"attack"],[483,42,535,40],[484,16,536,14,"xp"],[484,18,536,16],[484,20,536,18,"enemy"],[484,25,536,23],[484,26,536,24,"zoneXP"],[484,32,536,30],[484,36,536,34],[484,37,536,35],[485,16,537,14,"position"],[485,24,537,22],[485,26,537,24,"enemy"],[485,31,537,29],[485,32,537,30,"position"],[486,14,538,12],[486,15,538,13],[486,16,538,14],[487,12,539,10],[488,10,540,8],[488,11,540,9],[488,12,540,10],[490,10,542,8],[491,10,543,8,"game"],[491,14,543,12],[491,15,543,13,"updateNinja"],[491,26,543,24],[491,27,543,25,"prev"],[491,31,543,29],[491,36,543,34],[492,12,544,10,"experience"],[492,22,544,20],[492,24,544,22,"prev"],[492,28,544,26],[492,29,544,27,"experience"],[492,39,544,37],[492,42,544,40,"totalXP"],[492,49,544,47],[493,12,545,10,"gold"],[493,16,545,14],[493,18,545,16,"prev"],[493,22,545,20],[493,23,545,21,"gold"],[493,27,545,25],[493,30,545,28,"totalGold"],[494,10,546,8],[494,11,546,9],[494,12,546,10],[494,13,546,11],[496,10,548,8],[497,10,549,8,"zoneKills"],[497,19,549,17],[497,20,549,18,"forEach"],[497,27,549,25],[497,28,549,26,"zoneEnemy"],[497,37,549,35],[497,41,549,39,"recordEnemyKill"],[497,56,549,54],[497,57,549,55,"zoneEnemy"],[497,66,549,64],[497,67,549,65],[497,68,549,66],[499,10,551,8],[500,10,552,8,"setCombatState"],[500,24,552,22],[500,25,552,23,"prev"],[500,29,552,27],[500,34,552,32],[501,12,553,10],[501,15,553,13,"prev"],[501,19,553,17],[502,12,554,10,"enemies"],[502,19,554,17],[502,21,554,19,"prev"],[502,25,554,23],[502,26,554,24,"enemies"],[502,33,554,31],[502,34,554,32,"map"],[502,37,554,35],[502,38,554,36,"enemy"],[502,43,554,41],[502,47,554,45],[503,14,555,12],[503,18,555,18,"wasProcessed"],[503,30,555,30],[503,33,555,33,"unprocessedEnemies"],[503,51,555,51],[503,52,555,52,"find"],[503,56,555,56],[503,57,555,57,"processed"],[503,66,555,66],[503,70,555,70,"processed"],[503,79,555,79],[503,80,555,80,"id"],[503,82,555,82],[503,87,555,87,"enemy"],[503,92,555,92],[503,93,555,93,"id"],[503,95,555,95],[503,96,555,96],[504,14,556,12],[504,21,556,19,"wasProcessed"],[504,33,556,31],[504,36,556,34],[505,16,556,36],[505,19,556,39,"enemy"],[505,24,556,44],[506,16,556,46,"xpAwarded"],[506,25,556,55],[506,27,556,57],[507,14,556,62],[507,15,556,63],[507,18,556,66,"enemy"],[507,23,556,71],[508,12,557,10],[508,13,557,11],[509,10,558,8],[509,11,558,9],[509,12,558,10],[509,13,558,11],[510,8,559,6],[511,6,560,4],[512,4,561,2],[512,5,561,3],[512,7,561,5],[512,9,561,7],[512,10,561,8],[512,11,561,9],[512,12,561,10],[514,4,563,2],[515,4,564,2],[515,8,564,8,"findClosestEnemyInternal"],[515,32,564,32],[515,35,564,36,"enemies"],[515,42,564,58],[515,46,564,83],[516,6,565,4],[516,10,565,8,"enemies"],[516,17,565,15],[516,18,565,16,"length"],[516,24,565,22],[516,29,565,27],[516,30,565,28],[516,32,565,30],[516,39,565,37],[516,43,565,41],[518,6,567,4],[519,6,568,4],[519,10,568,10,"SCREEN_WIDTH"],[519,22,568,22],[519,25,568,25],[519,28,568,28],[520,6,569,4],[520,10,569,10,"GAME_AREA_HEIGHT"],[520,26,569,26],[520,29,569,29],[520,32,569,32],[520,35,569,35],[520,38,569,38],[520,39,569,39],[520,40,569,40],[521,6,570,4],[521,10,570,10,"ninjaX"],[521,16,570,16],[521,19,570,19,"SCREEN_WIDTH"],[521,31,570,31],[521,34,570,34],[521,35,570,35],[522,6,571,4],[522,10,571,10,"ninjaY"],[522,16,571,16],[522,19,571,19,"GAME_AREA_HEIGHT"],[522,35,571,35],[522,38,571,38],[522,39,571,39],[523,6,573,4],[523,10,573,8,"closestEnemy"],[523,22,573,20],[523,25,573,23,"enemies"],[523,32,573,30],[523,33,573,31],[523,34,573,32],[523,35,573,33],[524,6,574,4],[524,10,574,8,"closestDistance"],[524,25,574,23],[524,28,574,26,"Infinity"],[524,36,574,34],[525,6,576,4,"enemies"],[525,13,576,11],[525,14,576,12,"forEach"],[525,21,576,19],[525,22,576,20,"enemy"],[525,27,576,25],[525,31,576,29],[526,8,577,6],[526,12,577,12,"distance"],[526,20,577,20],[526,23,577,23,"Math"],[526,27,577,27],[526,28,577,28,"sqrt"],[526,32,577,32],[526,33,578,8,"Math"],[526,37,578,12],[526,38,578,13,"pow"],[526,41,578,16],[526,42,578,17,"enemy"],[526,47,578,22],[526,48,578,23,"position"],[526,56,578,31],[526,57,578,32,"x"],[526,58,578,33],[526,61,578,36,"ninjaX"],[526,67,578,42],[526,69,578,44],[526,70,578,45],[526,71,578,46],[526,74,579,8,"Math"],[526,78,579,12],[526,79,579,13,"pow"],[526,82,579,16],[526,83,579,17,"enemy"],[526,88,579,22],[526,89,579,23,"position"],[526,97,579,31],[526,98,579,32,"y"],[526,99,579,33],[526,102,579,36,"ninjaY"],[526,108,579,42],[526,110,579,44],[526,111,579,45],[526,112,580,6],[526,113,580,7],[527,8,582,6],[527,12,582,10,"distance"],[527,20,582,18],[527,23,582,21,"closestDistance"],[527,38,582,36],[527,40,582,38],[528,10,583,8,"closestDistance"],[528,25,583,23],[528,28,583,26,"distance"],[528,36,583,34],[529,10,584,8,"closestEnemy"],[529,22,584,20],[529,25,584,23,"enemy"],[529,30,584,28],[530,8,585,6],[531,6,586,4],[531,7,586,5],[531,8,586,6],[532,6,588,4,"console"],[532,13,588,11],[532,14,588,12,"log"],[532,17,588,15],[532,18,588,16],[532,60,588,58,"closestDistance"],[532,75,588,73],[532,76,588,74,"toFixed"],[532,83,588,81],[532,84,588,82],[532,85,588,83],[532,86,588,84],[532,88,588,86],[532,89,588,87],[533,6,589,4],[533,13,589,11,"closestEnemy"],[533,25,589,23],[534,4,590,2],[534,5,590,3],[536,4,592,2],[537,4,593,2],[537,8,593,8,"findClosestEnemy"],[537,24,593,24],[537,27,593,27,"findClosestEnemy"],[537,28,593,27],[537,33,593,53],[538,6,594,4],[538,13,594,11,"findClosestEnemyInternal"],[538,37,594,35],[538,38,594,36,"combatState"],[538,49,594,47],[538,50,594,48,"enemies"],[538,57,594,55],[538,58,594,56],[539,4,595,2],[539,5,595,3],[541,4,597,2],[542,4,598,2],[543,4,599,2],[543,8,599,2,"_useState7"],[543,18,599,2],[543,21,599,58],[543,25,599,58,"useState"],[543,31,599,66],[543,32,599,66,"useState"],[543,40,599,66],[543,42,599,91],[544,8,599,93,"x"],[544,9,599,94],[544,11,599,96],[544,14,599,99],[545,8,599,101,"y"],[545,9,599,102],[545,11,599,104],[546,6,599,108],[546,7,599,109],[546,8,599,110],[547,6,599,110,"_useState8"],[547,16,599,110],[547,23,599,110,"_slicedToArray"],[547,37,599,110],[547,38,599,110,"default"],[547,45,599,110],[547,47,599,110,"_useState7"],[547,57,599,110],[548,6,599,9,"currentNinjaPosition"],[548,26,599,29],[548,29,599,29,"_useState8"],[548,39,599,29],[549,6,599,31,"setCurrentNinjaPosition"],[549,29,599,54],[549,32,599,54,"_useState8"],[549,42,599,54],[550,4,600,2],[550,8,600,2,"_useState9"],[550,18,600,2],[550,21,600,60],[550,25,600,60,"useState"],[550,31,600,68],[550,32,600,68,"useState"],[550,40,600,68],[550,42,600,69],[550,47,600,74],[550,48,600,75],[551,6,600,75,"_useState0"],[551,16,600,75],[551,23,600,75,"_slicedToArray"],[551,37,600,75],[551,38,600,75,"default"],[551,45,600,75],[551,47,600,75,"_useState9"],[551,57,600,75],[552,6,600,9,"isManualControlActive"],[552,27,600,30],[552,30,600,30,"_useState0"],[552,40,600,30],[553,6,600,32,"setIsManualControlActive"],[553,30,600,56],[553,33,600,56,"_useState0"],[553,43,600,56],[555,4,602,2],[556,4,603,2],[556,8,603,8,"updateNinjaPosition"],[556,27,603,27],[556,30,603,30],[556,34,603,30,"useCallback"],[556,40,603,41],[556,41,603,41,"useCallback"],[556,52,603,41],[556,54,603,43,"newPosition"],[556,65,603,78],[556,69,603,83],[557,6,604,4,"setCurrentNinjaPosition"],[557,29,604,27],[557,30,604,28,"newPosition"],[557,41,604,39],[557,42,604,40],[558,4,605,2],[558,5,605,3],[558,7,605,5],[558,9,605,7],[558,10,605,8],[560,4,607,2],[561,4,608,2],[561,8,608,8,"setManualControlActive"],[561,30,608,30],[561,33,608,33],[561,37,608,33,"useCallback"],[561,43,608,44],[561,44,608,44,"useCallback"],[561,55,608,44],[561,57,608,46,"active"],[561,63,608,61],[561,67,608,66],[562,6,609,4,"setIsManualControlActive"],[562,30,609,28],[562,31,609,29,"active"],[562,37,609,35],[562,38,609,36],[563,6,610,4,"console"],[563,13,610,11],[563,14,610,12,"log"],[563,17,610,15],[563,18,610,16],[563,39,610,37,"active"],[563,45,610,43],[563,48,610,46],[563,59,610,57],[563,62,610,60],[563,75,610,73],[563,88,610,86,"active"],[563,94,610,92],[563,97,610,95],[563,105,610,103],[563,108,610,106],[563,117,610,115],[563,119,610,117],[563,120,610,118],[564,4,611,2],[564,5,611,3],[564,7,611,5],[564,9,611,7],[564,10,611,8],[566,4,613,2],[567,4,614,2],[567,8,614,8,"handleProjectileHit"],[567,27,614,27],[567,30,614,31,"projectile"],[567,40,614,59],[567,44,614,64],[568,6,615,4,"console"],[568,13,615,11],[568,14,615,12,"log"],[568,17,615,15],[568,18,615,16],[568,35,615,33,"projectile"],[568,45,615,43],[568,46,615,44,"id"],[568,48,615,46],[568,62,615,60,"projectile"],[568,72,615,70],[568,73,615,71,"targetEnemyId"],[568,86,615,84],[568,94,615,92,"projectile"],[568,104,615,102],[568,105,615,103,"damage"],[568,111,615,109],[568,120,615,118],[568,121,615,119],[569,6,617,4,"setCombatState"],[569,20,617,18],[569,21,617,19,"prev"],[569,25,617,23],[569,29,617,27],[570,8,618,6],[570,12,618,12,"newState"],[570,20,618,20],[570,23,618,23],[571,10,618,25],[571,13,618,28,"prev"],[572,8,618,33],[572,9,618,34],[574,8,620,6],[575,8,621,6],[575,12,621,12,"enemyIndex"],[575,22,621,22],[575,25,621,25,"newState"],[575,33,621,33],[575,34,621,34,"enemies"],[575,41,621,41],[575,42,621,42,"findIndex"],[575,51,621,51],[575,52,621,52,"e"],[575,53,621,53],[575,57,621,57,"e"],[575,58,621,58],[575,59,621,59,"id"],[575,61,621,61],[575,66,621,66,"projectile"],[575,76,621,76],[575,77,621,77,"targetEnemyId"],[575,90,621,90],[575,91,621,91],[576,8,622,6],[576,12,622,10,"enemyIndex"],[576,22,622,20],[576,26,622,24],[576,27,622,25],[576,29,622,27],[577,10,623,8,"newState"],[577,18,623,16],[577,19,623,17,"enemies"],[577,26,623,24],[577,29,623,27],[577,30,623,28],[577,33,623,31,"newState"],[577,41,623,39],[577,42,623,40,"enemies"],[577,49,623,47],[577,50,623,48],[578,10,624,8,"newState"],[578,18,624,16],[578,19,624,17,"enemies"],[578,26,624,24],[578,27,624,25,"enemyIndex"],[578,37,624,35],[578,38,624,36],[578,41,624,39],[579,12,625,10],[579,15,625,13,"newState"],[579,23,625,21],[579,24,625,22,"enemies"],[579,31,625,29],[579,32,625,30,"enemyIndex"],[579,42,625,40],[579,43,625,41],[580,12,626,10,"health"],[580,18,626,16],[580,20,626,18,"newState"],[580,28,626,26],[580,29,626,27,"enemies"],[580,36,626,34],[580,37,626,35,"enemyIndex"],[580,47,626,45],[580,48,626,46],[580,49,626,47,"health"],[580,55,626,53],[580,58,626,56,"projectile"],[580,68,626,66],[580,69,626,67,"damage"],[580,75,626,73],[581,12,627,10,"lastDamaged"],[581,23,627,21],[581,25,627,23,"combatEngine"],[581,44,627,35],[581,45,627,35,"combatEngine"],[581,57,627,35],[581,58,627,36,"getCurrentTick"],[581,72,627,50],[581,73,627,51],[582,10,628,8],[582,11,628,9],[583,10,630,8,"console"],[583,17,630,15],[583,18,630,16,"log"],[583,21,630,19],[583,22,630,20],[583,34,630,32,"projectile"],[583,44,630,42],[583,45,630,43,"targetEnemyId"],[583,58,630,56],[583,70,630,68,"newState"],[583,78,630,76],[583,79,630,77,"enemies"],[583,86,630,84],[583,87,630,85,"enemyIndex"],[583,97,630,95],[583,98,630,96],[583,99,630,97,"health"],[583,105,630,103],[583,109,630,107,"newState"],[583,117,630,115],[583,118,630,116,"enemies"],[583,125,630,123],[583,126,630,124,"enemyIndex"],[583,136,630,134],[583,137,630,135],[583,138,630,136,"maxHealth"],[583,147,630,145],[583,149,630,147],[583,150,630,148],[584,8,631,6],[585,8,633,6],[585,15,633,13,"newState"],[585,23,633,21],[586,6,634,4],[586,7,634,5],[586,8,634,6],[588,6,636,4],[589,6,637,4,"setProjectiles"],[589,20,637,18],[589,21,637,19,"prev"],[589,25,637,23],[589,29,637,27,"prev"],[589,33,637,31],[589,34,637,32,"filter"],[589,40,637,38],[589,41,637,39,"p"],[589,42,637,40],[589,46,637,44,"p"],[589,47,637,45],[589,48,637,46,"id"],[589,50,637,48],[589,55,637,53,"projectile"],[589,65,637,63],[589,66,637,64,"id"],[589,68,637,66],[589,69,637,67],[589,70,637,68],[590,4,638,2],[590,5,638,3],[592,4,640,2],[593,4,641,2],[593,8,641,8,"castAbility"],[593,19,641,19],[593,22,641,22,"castAbility"],[593,23,641,23,"state"],[593,28,641,41],[593,30,641,43,"slotIndex"],[593,39,641,60],[593,44,641,65],[594,6,642,4],[594,10,642,10,"deck"],[594,14,642,14],[594,17,642,17,"state"],[594,22,642,22],[594,23,642,23,"abilityManager"],[594,37,642,37],[594,38,642,38,"getDeck"],[594,45,642,45],[594,46,642,46],[594,47,642,47],[595,6,643,4],[595,10,643,10,"ability"],[595,17,643,17],[595,20,643,20,"deck"],[595,24,643,24],[595,25,643,25,"slots"],[595,30,643,30],[595,31,643,31,"slotIndex"],[595,40,643,40],[595,41,643,41],[596,6,644,4],[596,10,644,8],[596,11,644,9,"ability"],[596,18,644,16],[596,20,644,18],[597,6,646,4,"console"],[597,13,646,11],[597,14,646,12,"log"],[597,17,646,15],[597,18,646,16],[597,43,646,41,"ability"],[597,50,646,48],[597,51,646,49,"id"],[597,53,646,51],[597,67,646,65,"slotIndex"],[597,76,646,74],[597,78,646,76],[597,79,646,77],[599,6,648,4],[600,6,649,4],[600,10,649,8,"damage"],[600,16,649,14],[600,19,649,17,"ability"],[600,26,649,24],[600,27,649,25,"stats"],[600,32,649,30],[600,33,649,31,"baseDamage"],[600,43,649,41],[602,6,651,4],[603,6,652,4,"deck"],[603,10,652,8],[603,11,652,9,"activeSynergies"],[603,26,652,24],[603,27,652,25,"forEach"],[603,34,652,32],[603,35,652,33,"synergy"],[603,42,652,40],[603,46,652,44],[604,8,653,6],[604,12,653,10,"synergy"],[604,19,653,17],[604,20,653,18,"bonus"],[604,25,653,23],[604,26,653,24,"damageBonus"],[604,37,653,35],[604,41,654,10,"synergy"],[604,48,654,17],[604,49,654,18,"requiredTags"],[604,61,654,30],[604,62,654,31,"some"],[604,66,654,35],[604,67,654,36,"tag"],[604,70,654,39],[604,74,654,43,"ability"],[604,81,654,50],[604,82,654,51,"tags"],[604,86,654,55],[604,87,654,56,"includes"],[604,95,654,64],[604,96,654,65,"tag"],[604,99,654,68],[604,100,654,69],[604,101,654,70],[604,103,654,72],[605,10,655,8,"damage"],[605,16,655,14],[605,20,655,19],[605,21,655,20],[605,24,655,23,"synergy"],[605,31,655,30],[605,32,655,31,"bonus"],[605,37,655,36],[605,38,655,37,"damageBonus"],[605,49,655,48],[605,52,655,51],[605,55,655,55],[606,8,656,6],[607,6,657,4],[607,7,657,5],[607,8,657,6],[609,6,659,4],[610,6,660,4],[610,10,660,10,"isAOE"],[610,15,660,15],[610,18,660,18,"ability"],[610,25,660,25],[610,26,660,26,"effects"],[610,33,660,33],[610,34,660,34,"includes"],[610,42,660,42],[610,43,660,43],[610,48,660,48],[610,49,660,49],[610,53,660,53,"ability"],[610,60,660,60],[610,61,660,61,"stats"],[610,66,660,66],[610,67,660,67,"aoeRadius"],[610,76,660,76],[611,6,661,4,"console"],[611,13,661,11],[611,14,661,12,"log"],[611,17,661,15],[611,18,661,16],[611,39,661,37,"ability"],[611,46,661,44],[611,47,661,45,"name"],[611,51,661,49],[611,66,661,64,"JSON"],[611,70,661,68],[611,71,661,69,"stringify"],[611,80,661,78],[611,81,661,79,"ability"],[611,88,661,86],[611,89,661,87,"effects"],[611,96,661,94],[611,97,661,95],[611,113,661,111,"ability"],[611,120,661,118],[611,121,661,119,"stats"],[611,126,661,124],[611,127,661,125,"aoeRadius"],[611,136,661,134],[611,148,661,146,"isAOE"],[611,153,661,151],[611,155,661,153],[611,156,661,154],[612,6,663,4],[612,10,663,8,"isAOE"],[612,15,663,13],[612,17,663,15],[613,8,664,6,"console"],[613,15,664,13],[613,16,664,14,"log"],[613,19,664,17],[613,20,664,18],[613,39,664,37,"ability"],[613,46,664,44],[613,47,664,45,"name"],[613,51,664,49],[613,67,664,65,"ability"],[613,74,664,72],[613,75,664,73,"stats"],[613,80,664,78],[613,81,664,79,"aoeRadius"],[613,90,664,88],[613,92,664,90],[613,93,664,91],[615,8,666,6],[616,8,667,6],[617,8,668,6],[617,12,668,12,"ninjaX"],[617,18,668,18],[617,21,668,21,"currentNinjaPosition"],[617,41,668,41],[617,42,668,42,"x"],[617,43,668,43],[617,46,668,46],[617,48,668,48],[617,49,668,49],[617,50,668,50],[618,8,669,6],[618,12,669,12,"ninjaY"],[618,18,669,18],[618,21,669,21,"currentNinjaPosition"],[618,41,669,41],[618,42,669,42,"y"],[618,43,669,43],[618,46,669,46],[618,48,669,48],[619,8,670,6],[619,12,670,12,"aoeRadius"],[619,21,670,21],[619,24,670,24,"ability"],[619,31,670,31],[619,32,670,32,"stats"],[619,37,670,37],[619,38,670,38,"aoeRadius"],[619,47,670,47],[620,8,672,6],[620,12,672,12,"enemiesInRange"],[620,26,672,26],[620,29,672,29,"state"],[620,34,672,34],[620,35,672,35,"enemies"],[620,42,672,42],[620,43,672,43,"filter"],[620,49,672,49],[620,50,672,50,"enemy"],[620,55,672,55],[620,59,672,59],[621,10,673,8],[621,14,673,14,"enemyX"],[621,20,673,20],[621,23,673,23,"enemy"],[621,28,673,28],[621,29,673,29,"position"],[621,37,673,37],[621,38,673,38,"x"],[621,39,673,39],[621,42,673,42],[621,46,673,46],[621,47,673,47],[621,48,673,48],[622,10,674,8],[622,14,674,14,"enemyY"],[622,20,674,20],[622,23,674,23,"enemy"],[622,28,674,28],[622,29,674,29,"position"],[622,37,674,37],[622,38,674,38,"y"],[622,39,674,39],[622,42,674,42],[622,46,674,46],[623,10,675,8],[623,14,675,14,"distance"],[623,22,675,22],[623,25,675,25,"Math"],[623,29,675,29],[623,30,675,30,"sqrt"],[623,34,675,34],[623,35,675,35,"Math"],[623,39,675,39],[623,40,675,40,"pow"],[623,43,675,43],[623,44,675,44,"enemyX"],[623,50,675,50],[623,53,675,53,"ninjaX"],[623,59,675,59],[623,61,675,61],[623,62,675,62],[623,63,675,63],[623,66,675,66,"Math"],[623,70,675,70],[623,71,675,71,"pow"],[623,74,675,74],[623,75,675,75,"enemyY"],[623,81,675,81],[623,84,675,84,"ninjaY"],[623,90,675,90],[623,92,675,92],[623,93,675,93],[623,94,675,94],[623,95,675,95],[624,10,676,8],[624,17,676,15,"distance"],[624,25,676,23],[624,29,676,27,"aoeRadius"],[624,38,676,36],[625,8,677,6],[625,9,677,7],[625,10,677,8],[626,8,679,6,"console"],[626,15,679,13],[626,16,679,14,"log"],[626,19,679,17],[626,20,679,18],[626,45,679,43,"enemiesInRange"],[626,59,679,57],[626,60,679,58,"length"],[626,66,679,64],[626,88,679,86,"aoeRadius"],[626,97,679,95],[626,107,679,105],[626,108,679,106],[628,8,681,6],[629,8,682,6,"enemiesInRange"],[629,22,682,20],[629,23,682,21,"forEach"],[629,30,682,28],[629,31,682,29,"enemy"],[629,36,682,34],[629,40,682,38],[630,10,683,8],[630,14,683,14,"damageResult"],[630,26,683,26],[630,29,683,29,"DamageCalculator"],[630,48,683,45],[630,49,683,45,"DamageCalculator"],[630,65,683,45],[630,66,683,46,"calculateDamage"],[630,81,683,61],[630,82,683,62,"damage"],[630,88,683,68],[630,90,683,70,"state"],[630,95,683,75],[630,96,683,76,"playerStats"],[630,107,683,87],[630,109,683,89,"enemy"],[630,114,683,94],[630,115,683,95,"stats"],[630,120,683,100],[630,121,683,101],[631,10,684,8,"createProjectile"],[631,26,684,24],[631,27,684,25,"enemy"],[631,32,684,30],[631,34,684,32,"damageResult"],[631,46,684,44],[631,47,684,45,"damage"],[631,53,684,51],[631,55,684,53,"currentNinjaPosition"],[631,75,684,73],[631,77,684,75],[632,12,685,10,"id"],[632,14,685,12],[632,16,685,14,"ability"],[632,23,685,21],[632,24,685,22,"id"],[632,26,685,24],[633,12,686,10,"name"],[633,16,686,14],[633,18,686,16,"ability"],[633,25,686,23],[633,26,686,24,"name"],[633,30,686,28],[634,12,687,10,"icon"],[634,16,687,14],[634,18,687,16,"ability"],[634,25,687,23],[634,26,687,24,"icon"],[635,10,688,8],[635,11,688,9],[635,12,688,10],[636,10,689,8,"console"],[636,17,689,15],[636,18,689,16,"log"],[636,21,689,19],[636,22,689,20],[636,37,689,35,"enemy"],[636,42,689,40],[636,43,689,41,"name"],[636,47,689,45],[636,55,689,53,"damageResult"],[636,67,689,65],[636,68,689,66,"damage"],[636,74,689,72],[636,83,689,81],[636,84,689,82],[638,10,691,8],[639,10,692,8],[639,14,692,12,"damageResult"],[639,26,692,24],[639,27,692,25,"damage"],[639,33,692,31],[639,37,692,35,"enemy"],[639,42,692,40],[639,43,692,41,"health"],[639,49,692,47],[639,51,692,49],[640,12,693,10,"console"],[640,19,693,17],[640,20,693,18,"log"],[640,23,693,21],[640,24,693,22],[640,67,693,65,"enemy"],[640,72,693,70],[640,73,693,71,"name"],[640,77,693,75],[640,90,693,88,"damageResult"],[640,102,693,100],[640,103,693,101,"damage"],[640,109,693,107],[640,124,693,122,"enemy"],[640,129,693,127],[640,130,693,128,"health"],[640,136,693,134],[640,139,693,137],[640,140,693,138],[641,10,694,8],[642,8,695,6],[642,9,695,7],[642,10,695,8],[643,8,697,6,"console"],[643,15,697,13],[643,16,697,14,"log"],[643,19,697,17],[643,20,697,18],[643,26,697,24,"ability"],[643,33,697,31],[643,34,697,32,"name"],[643,38,697,36],[643,56,697,54,"enemiesInRange"],[643,70,697,68],[643,71,697,69,"length"],[643,77,697,75],[643,93,697,91,"damage"],[643,99,697,97],[643,118,697,116],[643,119,697,117],[644,6,699,4],[644,7,699,5],[644,13,699,11],[645,8,700,6],[646,8,701,6],[646,12,701,12,"target"],[646,18,701,18],[646,21,701,21,"findClosestEnemyInternal"],[646,45,701,45],[646,46,701,46,"state"],[646,51,701,51],[646,52,701,52,"enemies"],[646,59,701,59],[646,60,701,60],[647,8,702,6],[647,12,702,10],[647,13,702,11,"target"],[647,19,702,17],[647,21,702,19],[648,8,704,6],[648,12,704,12,"damageResult"],[648,24,704,24],[648,27,704,27,"DamageCalculator"],[648,46,704,43],[648,47,704,43,"DamageCalculator"],[648,63,704,43],[648,64,704,44,"calculateDamage"],[648,79,704,59],[648,80,704,60,"damage"],[648,86,704,66],[648,88,704,68,"state"],[648,93,704,73],[648,94,704,74,"playerStats"],[648,105,704,85],[648,107,704,87,"target"],[648,113,704,93],[648,114,704,94,"stats"],[648,119,704,99],[648,120,704,100],[650,8,706,6],[651,8,707,6,"console"],[651,15,707,13],[651,16,707,14,"log"],[651,19,707,17],[651,20,707,18],[651,71,707,69,"target"],[651,77,707,75],[651,78,707,76,"name"],[651,82,707,80],[651,91,707,89,"damageResult"],[651,103,707,101],[651,104,707,102,"damage"],[651,110,707,108],[651,119,707,117],[651,120,707,118],[652,8,708,6,"createProjectile"],[652,24,708,22],[652,25,708,23,"target"],[652,31,708,29],[652,33,708,31,"damageResult"],[652,45,708,43],[652,46,708,44,"damage"],[652,52,708,50],[652,54,708,52,"currentNinjaPosition"],[652,74,708,72],[652,76,708,74],[653,10,709,8,"id"],[653,12,709,10],[653,14,709,12,"ability"],[653,21,709,19],[653,22,709,20,"id"],[653,24,709,22],[654,10,710,8,"name"],[654,14,710,12],[654,16,710,14,"ability"],[654,23,710,21],[654,24,710,22,"name"],[654,28,710,26],[655,10,711,8,"icon"],[655,14,711,12],[655,16,711,14,"ability"],[655,23,711,21],[655,24,711,22,"icon"],[656,8,712,6],[656,9,712,7],[656,10,712,8],[657,8,714,6,"console"],[657,15,714,13],[657,16,714,14,"log"],[657,19,714,17],[657,20,714,18],[657,26,714,24,"ability"],[657,33,714,31],[657,34,714,32,"name"],[657,38,714,36],[657,66,714,64,"damageResult"],[657,78,714,76],[657,79,714,77,"damage"],[657,85,714,83],[657,95,714,93,"damageResult"],[657,107,714,105],[657,108,714,106,"isCritical"],[657,118,714,116],[657,121,714,119],[657,131,714,129],[657,134,714,132],[657,136,714,134],[657,138,714,136],[657,139,714,137],[659,8,716,6],[660,8,717,6],[660,12,717,10,"damageResult"],[660,24,717,22],[660,25,717,23,"damage"],[660,31,717,29],[660,35,717,33,"target"],[660,41,717,39],[660,42,717,40,"health"],[660,48,717,46],[660,50,717,48],[661,10,718,8,"console"],[661,17,718,15],[661,18,718,16,"log"],[661,21,718,19],[661,22,718,20],[661,75,718,73,"target"],[661,81,718,79],[661,82,718,80,"name"],[661,86,718,84],[661,99,718,97,"damageResult"],[661,111,718,109],[661,112,718,110,"damage"],[661,118,718,116],[661,133,718,131,"target"],[661,139,718,137],[661,140,718,138,"health"],[661,146,718,144],[661,149,718,147],[661,150,718,148],[662,8,719,6],[663,6,720,4],[665,6,722,4],[666,6,723,4],[666,10,723,8,"ability"],[666,17,723,15],[666,18,723,16,"effects"],[666,25,723,23],[666,26,723,24,"includes"],[666,34,723,32],[666,35,723,33],[666,40,723,38],[666,41,723,39],[666,45,723,43,"ability"],[666,52,723,50],[666,53,723,51,"stats"],[666,58,723,56],[666,59,723,57,"duration"],[666,67,723,65],[666,69,723,67],[667,8,724,6],[667,12,724,12,"targets"],[667,19,724,19],[667,22,724,22,"isAOE"],[667,27,724,27],[667,30,725,8,"state"],[667,35,725,13],[667,36,725,14,"enemies"],[667,43,725,21],[667,44,725,22,"filter"],[667,50,725,28],[667,51,725,29,"enemy"],[667,56,725,34],[667,60,725,38],[668,10,726,10],[668,14,726,16,"ninjaX"],[668,20,726,22],[668,23,726,25,"currentNinjaPosition"],[668,43,726,45],[668,44,726,46,"x"],[668,45,726,47],[668,48,726,50],[668,50,726,52],[669,10,727,10],[669,14,727,16,"ninjaY"],[669,20,727,22],[669,23,727,25,"currentNinjaPosition"],[669,43,727,45],[669,44,727,46,"y"],[669,45,727,47],[669,48,727,50],[669,50,727,52],[670,10,728,10],[670,14,728,16,"enemyX"],[670,20,728,22],[670,23,728,25,"enemy"],[670,28,728,30],[670,29,728,31,"position"],[670,37,728,39],[670,38,728,40,"x"],[670,39,728,41],[670,42,728,44],[670,46,728,48],[671,10,729,10],[671,14,729,16,"enemyY"],[671,20,729,22],[671,23,729,25,"enemy"],[671,28,729,30],[671,29,729,31,"position"],[671,37,729,39],[671,38,729,40,"y"],[671,39,729,41],[671,42,729,44],[671,46,729,48],[672,10,730,10],[672,14,730,16,"distance"],[672,22,730,24],[672,25,730,27,"Math"],[672,29,730,31],[672,30,730,32,"sqrt"],[672,34,730,36],[672,35,730,37,"Math"],[672,39,730,41],[672,40,730,42,"pow"],[672,43,730,45],[672,44,730,46,"enemyX"],[672,50,730,52],[672,53,730,55,"ninjaX"],[672,59,730,61],[672,61,730,63],[672,62,730,64],[672,63,730,65],[672,66,730,68,"Math"],[672,70,730,72],[672,71,730,73,"pow"],[672,74,730,76],[672,75,730,77,"enemyY"],[672,81,730,83],[672,84,730,86,"ninjaY"],[672,90,730,92],[672,92,730,94],[672,93,730,95],[672,94,730,96],[672,95,730,97],[673,10,731,10],[673,17,731,17,"distance"],[673,25,731,25],[673,29,731,29,"ability"],[673,36,731,36],[673,37,731,37,"stats"],[673,42,731,42],[673,43,731,43,"aoeRadius"],[673,52,731,52],[674,8,732,8],[674,9,732,9],[674,10,732,10],[674,13,733,8],[674,14,733,9,"findClosestEnemyInternal"],[674,38,733,33],[674,39,733,34,"state"],[674,44,733,39],[674,45,733,40,"enemies"],[674,52,733,47],[674,53,733,48],[674,54,733,49],[674,55,733,50,"filter"],[674,61,733,56],[674,62,733,57,"Boolean"],[674,69,733,64],[674,70,733,65],[675,8,735,6,"targets"],[675,15,735,13],[675,16,735,14,"forEach"],[675,23,735,21],[675,24,735,22,"target"],[675,30,735,28],[675,34,735,32],[676,10,736,8,"state"],[676,15,736,13],[676,16,736,14,"statusEffects"],[676,29,736,27],[676,30,736,28,"addEffect"],[676,39,736,37],[676,40,736,38,"target"],[676,46,736,44],[676,47,736,45,"id"],[676,49,736,47],[676,51,736,49],[677,12,737,10,"id"],[677,14,737,12],[677,16,737,14],[677,19,737,17,"ability"],[677,26,737,24],[677,27,737,25,"id"],[677,29,737,27],[677,35,737,33],[678,12,738,10,"type"],[678,16,738,14],[678,18,738,16],[678,23,738,21],[679,12,739,10,"remainingTicks"],[679,26,739,24],[679,28,739,26,"Math"],[679,32,739,30],[679,33,739,31,"floor"],[679,38,739,36],[679,39,739,37,"ability"],[679,46,739,44],[679,47,739,45,"stats"],[679,52,739,50],[679,53,739,51,"duration"],[679,61,739,59],[679,64,739,62],[679,66,739,64],[679,67,739,65],[680,12,740,10,"tickInterval"],[680,24,740,22],[680,26,740,24],[680,28,740,26],[681,12,741,10,"lastTick"],[681,20,741,18],[681,22,741,20,"state"],[681,27,741,25],[681,28,741,26,"currentTick"],[681,39,741,37],[682,12,742,10,"value"],[682,17,742,15],[682,19,742,17,"Math"],[682,23,742,21],[682,24,742,22,"floor"],[682,29,742,27],[682,30,742,28,"damage"],[682,36,742,34],[682,39,742,37],[682,42,742,40],[682,43,742,41],[683,12,743,10,"stackable"],[683,21,743,19],[683,23,743,21],[684,10,744,8],[684,11,744,9],[684,12,744,10],[685,8,745,6],[685,9,745,7],[685,10,745,8],[686,6,746,4],[688,6,748,4],[689,6,749,4],[689,10,749,8,"ability"],[689,17,749,15],[689,18,749,16,"effects"],[689,25,749,23],[689,26,749,24,"includes"],[689,34,749,32],[689,35,749,33],[689,41,749,39],[689,42,749,40],[689,46,749,44,"ability"],[689,53,749,51],[689,54,749,52,"id"],[689,56,749,54],[689,61,749,59],[689,75,749,73],[689,77,749,75],[690,8,750,6,"console"],[690,15,750,13],[690,16,750,14,"log"],[690,19,750,17],[690,20,750,18],[690,66,750,64,"ability"],[690,73,750,71],[690,74,750,72,"stats"],[690,79,750,77],[690,80,750,78,"duration"],[690,88,750,86],[690,98,750,96],[690,99,750,97],[692,8,752,6],[693,8,753,6],[693,12,753,12,"cloneX"],[693,18,753,18],[693,21,753,21,"currentNinjaPosition"],[693,41,753,41],[693,42,753,42,"x"],[693,43,753,43],[693,46,753,46],[693,48,753,48],[693,49,753,49],[693,50,753,50],[694,8,754,6],[694,12,754,12,"cloneY"],[694,18,754,18],[694,21,754,21,"currentNinjaPosition"],[694,41,754,41],[694,42,754,42,"y"],[694,43,754,43],[694,46,754,46],[694,48,754,48],[694,49,754,49],[694,50,754,50],[696,8,756,6,"state"],[696,13,756,11],[696,14,756,12,"shadowClone"],[696,25,756,23],[696,28,756,26],[697,10,757,8,"id"],[697,12,757,10],[697,14,757,12],[697,30,757,28,"Date"],[697,34,757,32],[697,35,757,33,"now"],[697,38,757,36],[697,39,757,37],[697,40,757,38],[697,42,757,40],[698,10,758,8,"remainingTicks"],[698,24,758,22],[698,26,758,24,"Math"],[698,30,758,28],[698,31,758,29,"floor"],[698,36,758,34],[698,37,758,35,"ability"],[698,44,758,42],[698,45,758,43,"stats"],[698,50,758,48],[698,51,758,49,"duration"],[698,59,758,57],[698,62,758,60],[698,64,758,62],[698,65,758,63],[699,10,758,65],[700,10,759,8,"position"],[700,18,759,16],[700,20,759,18],[701,12,759,20,"x"],[701,13,759,21],[701,15,759,23,"cloneX"],[701,21,759,29],[702,12,759,31,"y"],[702,13,759,32],[702,15,759,34,"cloneY"],[703,10,759,41],[703,11,759,42],[704,10,760,8,"damageMultiplier"],[704,26,760,24],[704,28,760,26],[704,31,760,29],[704,32,760,31],[705,8,761,6],[705,9,761,7],[706,8,763,6,"console"],[706,15,763,13],[706,16,763,14,"log"],[706,19,763,17],[706,20,763,18],[706,63,763,61,"ability"],[706,70,763,68],[706,71,763,69,"stats"],[706,76,763,74],[706,77,763,75,"duration"],[706,85,763,83],[706,108,763,106],[706,109,763,107],[707,6,764,4],[708,4,765,2],[708,5,765,3],[710,4,767,2],[711,4,768,2],[711,8,768,8,"createProjectile"],[711,24,768,24],[711,27,768,27,"createProjectile"],[711,28,768,28,"targetEnemy"],[711,39,768,52],[711,41,768,54,"damage"],[711,47,768,68],[711,49,768,70,"ninjaPos"],[711,57,768,103],[711,59,768,105,"abilityInfo"],[711,70,768,159],[711,72,768,161,"isAOE"],[711,77,768,176],[711,79,768,178,"aoeRadius"],[711,88,768,196],[711,93,768,201],[712,6,769,4],[712,10,769,8],[712,11,769,9,"targetEnemy"],[712,22,769,20],[712,24,769,22],[713,8,770,6,"console"],[713,15,770,13],[713,16,770,14,"log"],[713,19,770,17],[713,20,770,18],[713,65,770,63],[713,66,770,64],[714,8,771,6],[714,15,771,13],[714,19,771,17],[715,6,772,4],[716,6,774,4],[716,10,774,10,"SCREEN_WIDTH"],[716,22,774,22],[716,25,774,25],[716,28,774,28],[717,6,775,4],[717,10,775,10,"GAME_AREA_HEIGHT"],[717,26,775,26],[717,29,775,29],[717,32,775,32],[717,35,775,35],[717,38,775,38],[717,39,775,39],[717,40,775,40],[718,6,776,4],[718,10,776,10,"NINJA_SIZE"],[718,20,776,20],[718,23,776,23],[718,25,776,25],[720,6,778,4],[721,6,779,4],[721,10,779,10,"ninjaX"],[721,16,779,16],[721,19,779,19,"ninjaPos"],[721,27,779,27],[721,30,779,30,"ninjaPos"],[721,38,779,38],[721,39,779,39,"x"],[721,40,779,40],[721,43,779,43,"NINJA_SIZE"],[721,53,779,53],[721,56,779,56],[721,57,779,57],[721,60,779,60,"SCREEN_WIDTH"],[721,72,779,72],[721,75,779,75],[721,76,779,76],[722,6,780,4],[722,10,780,10,"ninjaY"],[722,16,780,16],[722,19,780,19,"ninjaPos"],[722,27,780,27],[722,30,780,30,"ninjaPos"],[722,38,780,38],[722,39,780,39,"y"],[722,40,780,40],[722,43,780,43,"NINJA_SIZE"],[722,53,780,53],[722,56,780,56],[722,57,780,57],[722,60,780,60,"GAME_AREA_HEIGHT"],[722,76,780,76],[722,79,780,79],[722,80,780,80],[723,6,781,4],[723,10,781,10,"ENEMY_SIZE"],[723,20,781,20],[723,23,781,23],[723,25,781,25],[724,6,783,4],[724,10,783,10,"projectileId"],[724,22,783,22],[724,25,783,25],[724,33,783,33,"Date"],[724,37,783,37],[724,38,783,38,"now"],[724,41,783,41],[724,42,783,42],[724,43,783,43],[724,47,783,47,"Math"],[724,51,783,51],[724,52,783,52,"random"],[724,58,783,58],[724,59,783,59],[724,60,783,60],[724,62,783,62],[725,6,785,4],[725,10,785,10,"projectile"],[725,20,785,38],[725,23,785,41],[726,8,786,6,"id"],[726,10,786,8],[726,12,786,10,"projectileId"],[726,24,786,22],[727,8,787,6,"x"],[727,9,787,7],[727,11,787,9,"ninjaX"],[727,17,787,15],[728,8,788,6,"y"],[728,9,788,7],[728,11,788,9,"ninjaY"],[728,17,788,15],[729,8,789,6,"targetX"],[729,15,789,13],[729,17,789,15,"targetEnemy"],[729,28,789,26],[729,29,789,27,"position"],[729,37,789,35],[729,38,789,36,"x"],[729,39,789,37],[729,42,789,40,"ENEMY_SIZE"],[729,52,789,50],[729,55,789,53],[729,56,789,54],[730,8,790,6,"targetY"],[730,15,790,13],[730,17,790,15,"targetEnemy"],[730,28,790,26],[730,29,790,27,"position"],[730,37,790,35],[730,38,790,36,"y"],[730,39,790,37],[730,42,790,40,"ENEMY_SIZE"],[730,52,790,50],[730,55,790,53],[730,56,790,54],[731,8,791,6,"targetEnemyId"],[731,21,791,19],[731,23,791,21,"targetEnemy"],[731,34,791,32],[731,35,791,33,"id"],[731,37,791,35],[732,8,792,6,"damage"],[732,14,792,12],[732,16,792,14,"damage"],[732,22,792,20],[733,8,793,6,"startTime"],[733,17,793,15],[733,19,793,17,"Date"],[733,23,793,21],[733,24,793,22,"now"],[733,27,793,25],[733,28,793,26],[733,29,793,27],[734,8,794,6,"duration"],[734,16,794,14],[734,18,794,16],[734,21,794,19],[735,8,794,21],[736,8,795,6],[737,8,796,6,"abilityId"],[737,17,796,15],[737,19,796,17,"abilityInfo"],[737,30,796,28],[737,32,796,30,"id"],[737,34,796,32],[737,38,796,36],[737,54,796,52],[738,8,797,6,"abilityName"],[738,19,797,17],[738,21,797,19,"abilityInfo"],[738,32,797,30],[738,34,797,32,"name"],[738,38,797,36],[738,42,797,40],[738,58,797,56],[739,8,798,6,"abilityIcon"],[739,19,798,17],[739,21,798,19,"abilityInfo"],[739,32,798,30],[739,34,798,32,"icon"],[739,38,798,36],[739,42,798,40],[739,46,798,44],[740,8,798,46],[741,8,799,6],[742,8,800,6,"isAOE"],[742,13,800,11],[742,15,800,13,"isAOE"],[742,20,800,18],[742,24,800,22],[742,29,800,27],[743,8,801,6,"aoeRadius"],[743,17,801,15],[743,19,801,17,"aoeRadius"],[743,28,801,26],[743,32,801,30],[744,6,802,4],[744,7,802,5],[745,6,804,4,"console"],[745,13,804,11],[745,14,804,12,"log"],[745,17,804,15],[745,18,804,16],[745,44,804,42,"abilityInfo"],[745,55,804,53],[745,57,804,55,"name"],[745,61,804,59],[745,65,804,63],[745,81,804,79],[745,101,804,99,"projectileId"],[745,113,804,111],[745,128,804,126,"targetEnemy"],[745,139,804,137],[745,140,804,138,"name"],[745,144,804,142],[745,152,804,150,"damage"],[745,158,804,156],[745,167,804,165],[745,168,804,166],[746,6,805,4,"console"],[746,13,805,11],[746,14,805,12,"log"],[746,17,805,15],[746,18,805,16],[746,48,805,46,"isAOE"],[746,53,805,51],[746,68,805,66,"aoeRadius"],[746,77,805,75],[746,89,805,87,"damage"],[746,95,805,93],[746,97,805,95],[746,98,805,96],[747,6,807,4,"console"],[747,13,807,11],[747,14,807,12,"log"],[747,17,807,15],[747,18,807,16],[747,53,807,51,"targetEnemy"],[747,64,807,62],[747,65,807,63,"id"],[747,67,807,65],[747,75,807,73,"damage"],[747,81,807,79],[747,90,807,88],[747,91,807,89],[748,6,808,4,"console"],[748,13,808,11],[748,14,808,12,"log"],[748,17,808,15],[748,18,808,16],[748,53,808,51,"ninjaX"],[748,59,808,57],[748,64,808,62,"ninjaY"],[748,70,808,68],[748,87,808,85,"projectile"],[748,97,808,95],[748,98,808,96,"targetX"],[748,105,808,103],[748,110,808,108,"projectile"],[748,120,808,118],[748,121,808,119,"targetY"],[748,128,808,126],[748,131,808,129],[748,132,808,130],[749,6,810,4,"setProjectiles"],[749,20,810,18],[749,21,810,19,"prev"],[749,25,810,23],[749,29,810,27],[749,30,810,28],[749,33,810,31,"prev"],[749,37,810,35],[749,39,810,37,"projectile"],[749,49,810,47],[749,50,810,48],[749,51,810,49],[751,6,812,4],[752,6,813,4,"setTimeout"],[752,16,813,14],[752,17,813,15],[752,23,813,21],[753,8,814,6,"handleProjectileHit"],[753,27,814,25],[753,28,814,26,"projectile"],[753,38,814,36],[753,39,814,37],[754,6,815,4],[754,7,815,5],[754,9,815,7],[754,12,815,10],[754,13,815,11],[755,6,817,4],[755,13,817,11,"projectile"],[755,23,817,21],[756,4,818,2],[756,5,818,3],[758,4,820,2],[759,4,821,2],[759,8,821,8,"spawnTestEnemy"],[759,22,821,22],[759,25,821,26,"state"],[759,30,821,44],[759,34,821,49],[760,6,822,4,"console"],[760,13,822,11],[760,14,822,12,"log"],[760,17,822,15],[760,18,822,16],[760,83,822,81],[760,84,822,82],[762,6,824,4],[763,6,825,4],[763,10,825,10,"zoneEnemy"],[763,19,825,19],[763,22,825,22,"spawnZoneEnemy"],[763,36,825,36],[763,37,825,37],[763,38,825,38],[764,6,826,4],[764,10,826,8],[764,11,826,9,"zoneEnemy"],[764,20,826,18],[764,22,826,20],[765,8,827,6,"console"],[765,15,827,13],[765,16,827,14,"log"],[765,19,827,17],[765,20,827,18],[765,76,827,74],[765,77,827,75],[766,8,828,6],[767,8,829,6,"spawnBasicTestEnemy"],[767,27,829,25],[767,28,829,26,"state"],[767,33,829,31],[767,34,829,32],[768,8,830,6],[769,6,831,4],[770,6,833,4,"console"],[770,13,833,11],[770,14,833,12,"log"],[770,17,833,15],[770,18,833,16],[770,44,833,42,"zoneEnemy"],[770,53,833,51],[770,54,833,52,"name"],[770,58,833,56],[770,63,833,61,"zoneEnemy"],[770,72,833,70],[770,73,833,71,"typeId"],[770,79,833,77],[770,94,833,92,"currentZone"],[770,105,833,103],[770,107,833,105,"id"],[770,109,833,107],[770,119,833,117,"currentZoneLevel"],[770,135,833,133],[770,137,833,135,"level"],[770,142,833,140],[770,144,833,142],[770,145,833,143],[772,6,835,4],[773,6,836,4],[773,10,836,10,"combatEnemy"],[773,21,836,34],[773,24,836,37],[774,8,837,6,"id"],[774,10,837,8],[774,12,837,10,"zoneEnemy"],[774,21,837,19],[774,22,837,20,"id"],[774,24,837,22],[775,8,838,6,"name"],[775,12,838,10],[775,14,838,12,"zoneEnemy"],[775,23,838,21],[775,24,838,22,"name"],[775,28,838,26],[776,8,839,6,"health"],[776,14,839,12],[776,16,839,14,"zoneEnemy"],[776,25,839,23],[776,26,839,24,"hp"],[776,28,839,26],[777,8,840,6,"maxHealth"],[777,17,840,15],[777,19,840,17,"zoneEnemy"],[777,28,840,26],[777,29,840,27,"maxHP"],[777,34,840,32],[778,8,841,6,"stats"],[778,13,841,11],[778,15,841,13],[779,10,842,8,"attack"],[779,16,842,14],[779,18,842,16,"zoneEnemy"],[779,27,842,25],[779,28,842,26,"attack"],[779,34,842,32],[780,10,843,8,"defense"],[780,17,843,15],[780,19,843,17],[780,21,843,19],[781,10,843,21],[782,10,844,8,"health"],[782,16,844,14],[782,18,844,16,"zoneEnemy"],[782,27,844,25],[782,28,844,26,"hp"],[782,30,844,28],[783,10,845,8,"maxHealth"],[783,19,845,17],[783,21,845,19,"zoneEnemy"],[783,30,845,28],[783,31,845,29,"maxHP"],[783,36,845,34],[784,10,846,8,"critChance"],[784,20,846,18],[784,22,846,20],[784,23,846,21],[785,10,847,8,"critDamage"],[785,20,847,18],[785,22,847,20],[785,25,847,23],[786,10,848,8,"cooldownReduction"],[786,27,848,25],[786,29,848,27],[787,8,849,6],[787,9,849,7],[788,8,850,6,"position"],[788,16,850,14],[788,18,850,16,"zoneEnemy"],[788,27,850,25],[788,28,850,26,"position"],[788,36,850,34],[789,8,851,6,"lastDamaged"],[789,19,851,17],[789,21,851,19],[789,22,851,20],[790,8,852,6],[791,8,853,6,"zoneTypeId"],[791,18,853,16],[791,20,853,18,"zoneEnemy"],[791,29,853,27],[791,30,853,28,"typeId"],[791,36,853,34],[792,8,854,6,"zoneXP"],[792,14,854,12],[792,16,854,14,"zoneEnemy"],[792,25,854,23],[792,26,854,24,"xp"],[793,6,855,4],[793,7,855,5],[794,6,857,4,"console"],[794,13,857,11],[794,14,857,12,"log"],[794,17,857,15],[794,18,857,16],[794,42,857,40,"combatEnemy"],[794,53,857,51],[794,54,857,52,"name"],[794,58,857,56],[794,67,857,65,"combatEnemy"],[794,78,857,76],[794,79,857,77,"health"],[794,85,857,83],[794,100,857,98,"currentZone"],[794,111,857,109],[794,113,857,111,"id"],[794,115,857,113],[794,125,857,123,"currentZoneLevel"],[794,141,857,139],[794,143,857,141,"level"],[794,148,857,146],[794,150,857,148],[794,151,857,149],[795,6,858,4,"state"],[795,11,858,9],[795,12,858,10,"enemies"],[795,19,858,17],[795,20,858,18,"push"],[795,24,858,22],[795,25,858,23,"combatEnemy"],[795,36,858,34],[795,37,858,35],[796,4,859,2],[796,5,859,3],[798,4,861,2],[799,4,862,2],[799,8,862,8,"spawnBasicTestEnemy"],[799,27,862,27],[799,30,862,31,"state"],[799,35,862,49],[799,39,862,54],[800,6,863,4],[800,10,863,10,"SCREEN_WIDTH"],[800,22,863,22],[800,25,863,25],[800,28,863,28],[801,6,864,4],[801,10,864,10,"GAME_AREA_HEIGHT"],[801,26,864,26],[801,29,864,29],[801,32,864,32],[801,35,864,35],[801,38,864,38],[802,6,865,4],[802,10,865,10,"ENEMY_SIZE"],[802,20,865,20],[802,23,865,23],[802,25,865,25],[803,6,867,4],[803,10,867,10,"x"],[803,11,867,11],[803,14,867,14,"Math"],[803,18,867,18],[803,19,867,19,"random"],[803,25,867,25],[803,26,867,26],[803,27,867,27],[803,31,867,31,"SCREEN_WIDTH"],[803,43,867,43],[803,46,867,46,"ENEMY_SIZE"],[803,56,867,56],[803,59,867,59],[803,60,867,60],[803,61,867,61],[803,64,867,64,"ENEMY_SIZE"],[803,74,867,74],[804,6,868,4],[804,10,868,10,"y"],[804,11,868,11],[804,14,868,14,"Math"],[804,18,868,18],[804,19,868,19,"random"],[804,25,868,25],[804,26,868,26],[804,27,868,27],[804,31,868,31,"GAME_AREA_HEIGHT"],[804,47,868,47],[804,50,868,50,"ENEMY_SIZE"],[804,60,868,60],[804,63,868,63],[804,64,868,64],[804,65,868,65],[804,68,868,68,"ENEMY_SIZE"],[804,78,868,78],[805,6,870,4],[805,10,870,10,"enemy"],[805,15,870,28],[805,18,870,31],[806,8,871,6,"id"],[806,10,871,8],[806,12,871,10],[806,30,871,28,"Date"],[806,34,871,32],[806,35,871,33,"now"],[806,38,871,36],[806,39,871,37],[806,40,871,38],[806,44,871,42,"Math"],[806,48,871,46],[806,49,871,47,"random"],[806,55,871,53],[806,56,871,54],[806,57,871,55],[806,59,871,57],[807,8,872,6,"name"],[807,12,872,10],[807,14,872,12],[807,26,872,24,"Math"],[807,30,872,28],[807,31,872,29,"floor"],[807,36,872,34],[807,37,872,35,"Math"],[807,41,872,39],[807,42,872,40,"random"],[807,48,872,46],[807,49,872,47],[807,50,872,48],[807,53,872,51],[807,56,872,54],[807,57,872,55],[807,59,872,57],[808,8,873,6,"health"],[808,14,873,12],[808,16,873,14],[808,18,873,16],[809,8,874,6,"maxHealth"],[809,17,874,15],[809,19,874,17],[809,21,874,19],[810,8,875,6,"stats"],[810,13,875,11],[810,15,875,13],[811,10,876,8,"attack"],[811,16,876,14],[811,18,876,16],[811,20,876,18],[812,10,877,8,"defense"],[812,17,877,15],[812,19,877,17],[812,21,877,19],[813,10,878,8,"health"],[813,16,878,14],[813,18,878,16],[813,20,878,18],[814,10,879,8,"maxHealth"],[814,19,879,17],[814,21,879,19],[814,23,879,21],[815,10,880,8,"critChance"],[815,20,880,18],[815,22,880,20],[815,23,880,21],[816,10,881,8,"critDamage"],[816,20,881,18],[816,22,881,20],[816,25,881,23],[817,10,882,8,"cooldownReduction"],[817,27,882,25],[817,29,882,27],[818,8,883,6],[818,9,883,7],[819,8,884,6,"position"],[819,16,884,14],[819,18,884,16],[820,10,884,18,"x"],[820,11,884,19],[821,10,884,21,"y"],[822,8,884,23],[822,9,884,24],[823,8,885,6,"lastDamaged"],[823,19,885,17],[823,21,885,19],[824,6,886,4],[824,7,886,5],[825,6,888,4,"console"],[825,13,888,11],[825,14,888,12,"log"],[825,17,888,15],[825,18,888,16],[825,42,888,40,"enemy"],[825,47,888,45],[825,48,888,46,"name"],[825,52,888,50],[825,60,888,58,"Math"],[825,64,888,62],[825,65,888,63,"round"],[825,70,888,68],[825,71,888,69,"x"],[825,72,888,70],[825,73,888,71],[825,78,888,76,"Math"],[825,82,888,80],[825,83,888,81,"round"],[825,88,888,86],[825,89,888,87,"y"],[825,90,888,88],[825,91,888,89],[825,94,888,92],[825,95,888,93],[826,6,889,4,"state"],[826,11,889,9],[826,12,889,10,"enemies"],[826,19,889,17],[826,20,889,18,"push"],[826,24,889,22],[826,25,889,23,"enemy"],[826,30,889,28],[826,31,889,29],[827,4,890,2],[827,5,890,3],[829,4,892,2],[830,4,893,2],[831,4,894,2],[831,8,894,8,"startCombat"],[831,19,894,19],[831,22,894,22,"React"],[831,27,894,27],[831,28,894,27,"default"],[831,35,894,27],[831,36,894,28,"useCallback"],[831,47,894,39],[831,48,894,40],[831,54,894,46],[832,6,895,4,"console"],[832,13,895,11],[832,14,895,12,"log"],[832,17,895,15],[832,18,895,16],[832,63,895,61],[832,64,895,62],[833,6,896,4,"setCombatState"],[833,20,896,18],[833,21,896,19,"prev"],[833,25,896,23],[833,30,896,28],[834,8,896,30],[834,11,896,33,"prev"],[834,15,896,37],[835,8,896,39,"isInCombat"],[835,18,896,49],[835,20,896,51],[836,6,896,56],[836,7,896,57],[836,8,896,58],[836,9,896,59],[838,6,898,4],[839,6,899,4,"combatEngine"],[839,25,899,16],[839,26,899,16,"combatEngine"],[839,38,899,16],[839,39,899,17,"addTickCallback"],[839,54,899,32],[839,55,899,33,"handleCombatTick"],[839,71,899,49],[839,72,899,50],[840,6,900,4,"console"],[840,13,900,11],[840,14,900,12,"log"],[840,17,900,15],[840,18,900,16],[840,62,900,60],[840,63,900,61],[842,6,902,4],[843,6,903,4,"combatEngine"],[843,25,903,16],[843,26,903,16,"combatEngine"],[843,38,903,16],[843,39,903,17,"start"],[843,44,903,22],[843,45,903,23],[843,46,903,24],[844,4,904,2],[844,5,904,3],[844,7,904,5],[844,8,904,6,"combatEngine"],[844,27,904,18],[844,28,904,18,"combatEngine"],[844,40,904,18],[844,42,904,20,"handleCombatTick"],[844,58,904,36],[844,59,904,37],[844,60,904,38],[846,4,906,2],[847,4,907,2],[847,8,907,8,"stopCombat"],[847,18,907,18],[847,21,907,21,"React"],[847,26,907,26],[847,27,907,26,"default"],[847,34,907,26],[847,35,907,27,"useCallback"],[847,46,907,38],[847,47,907,39],[847,53,907,45],[848,6,908,4,"setCombatState"],[848,20,908,18],[848,21,908,19,"prev"],[848,25,908,23],[848,30,908,28],[849,8,908,30],[849,11,908,33,"prev"],[849,15,908,37],[850,8,908,39,"isInCombat"],[850,18,908,49],[850,20,908,51],[851,6,908,57],[851,7,908,58],[851,8,908,59],[851,9,908,60],[852,6,909,4,"combatEngine"],[852,25,909,16],[852,26,909,16,"combatEngine"],[852,38,909,16],[852,39,909,17,"removeTickCallback"],[852,57,909,35],[852,58,909,36,"handleCombatTick"],[852,74,909,52],[852,75,909,53],[853,4,910,2],[853,5,910,3],[853,7,910,5],[853,8,910,6,"combatEngine"],[853,27,910,18],[853,28,910,18,"combatEngine"],[853,40,910,18],[853,42,910,20,"handleCombatTick"],[853,58,910,36],[853,59,910,37],[853,60,910,38],[855,4,912,2],[856,4,913,2],[856,8,913,8,"equipAbility"],[856,20,913,20],[856,23,913,23,"equipAbility"],[856,24,913,24,"abilityId"],[856,33,913,41],[856,35,913,43,"slotIndex"],[856,44,913,60],[856,49,913,74],[857,6,914,4],[857,13,914,11,"combatState"],[857,24,914,22],[857,25,914,23,"abilityManager"],[857,39,914,37],[857,40,914,38,"equipAbility"],[857,52,914,50],[857,53,914,51,"abilityId"],[857,62,914,60],[857,64,914,62,"slotIndex"],[857,73,914,71],[857,74,914,72],[858,4,915,2],[858,5,915,3],[859,4,917,2],[859,8,917,8,"getDeck"],[859,15,917,15],[859,18,917,18,"getDeck"],[859,19,917,18],[859,24,917,24],[860,6,918,4],[860,13,918,11,"combatState"],[860,24,918,22],[860,25,918,23,"abilityManager"],[860,39,918,37],[860,40,918,38,"getDeck"],[860,47,918,45],[860,48,918,46],[860,49,918,47],[861,4,919,2],[861,5,919,3],[862,4,921,2],[862,8,921,8,"getAvailableAbilities"],[862,29,921,29],[862,32,921,32,"getAvailableAbilities"],[862,33,921,32],[862,38,921,38],[863,6,922,4],[863,13,922,11,"combatState"],[863,24,922,22],[863,25,922,23,"abilityManager"],[863,39,922,37],[863,40,922,38,"getAvailableAbilities"],[863,61,922,59],[863,62,922,60],[863,63,922,61],[864,4,923,2],[864,5,923,3],[865,4,925,2],[865,8,925,8,"upgradeAbility"],[865,22,925,22],[865,25,925,26,"abilityId"],[865,34,925,43],[865,38,925,57],[866,6,926,4],[866,13,926,11,"combatState"],[866,24,926,22],[866,25,926,23,"abilityManager"],[866,39,926,37],[866,40,926,38,"upgradeAbility"],[866,54,926,52],[866,55,926,53,"abilityId"],[866,64,926,62],[866,65,926,63],[867,4,927,2],[867,5,927,3],[869,4,929,2],[870,4,930,2],[870,8,930,8,"clearAllEnemies"],[870,23,930,23],[870,26,930,26,"clearAllEnemies"],[870,27,930,26],[870,32,930,32],[871,6,931,4,"console"],[871,13,931,11],[871,14,931,12,"log"],[871,17,931,15],[871,18,931,16],[871,67,931,65],[871,68,931,66],[872,6,932,4,"setCombatState"],[872,20,932,18],[872,21,932,19,"prev"],[872,25,932,23],[872,30,932,28],[873,8,933,6],[873,11,933,9,"prev"],[873,15,933,13],[874,8,934,6,"enemies"],[874,15,934,13],[874,17,934,15],[875,6,935,4],[875,7,935,5],[875,8,935,6],[875,9,935,7],[876,4,936,2],[876,5,936,3],[878,4,938,2],[879,4,939,2],[881,4,941,2],[882,4,942,2],[882,8,942,8,"spawnEnemy"],[882,18,942,18],[882,21,942,22,"position"],[882,29,942,57],[882,33,942,75],[883,6,943,4],[883,10,943,10,"SCREEN_WIDTH"],[883,22,943,22],[883,25,943,25],[883,28,943,28],[884,6,944,4],[884,10,944,10,"GAME_AREA_HEIGHT"],[884,26,944,26],[884,29,944,29],[884,32,944,32],[884,35,944,35],[884,38,944,38],[884,39,944,39],[884,40,944,40],[885,6,945,4],[885,10,945,10,"ENEMY_SIZE"],[885,20,945,20],[885,23,945,23],[885,25,945,25],[887,6,947,4],[888,6,948,4],[888,10,948,10,"x"],[888,11,948,11],[888,14,948,14,"position"],[888,22,948,22],[888,24,948,24,"x"],[888,25,948,25],[888,29,948,29,"Math"],[888,33,948,33],[888,34,948,34,"random"],[888,40,948,40],[888,41,948,41],[888,42,948,42],[888,46,948,46,"SCREEN_WIDTH"],[888,58,948,58],[888,61,948,61,"ENEMY_SIZE"],[888,71,948,71],[888,74,948,74],[888,75,948,75],[888,76,948,76],[888,79,948,79,"ENEMY_SIZE"],[888,89,948,89],[889,6,949,4],[889,10,949,10,"y"],[889,11,949,11],[889,14,949,14,"position"],[889,22,949,22],[889,24,949,24,"y"],[889,25,949,25],[889,29,949,29,"Math"],[889,33,949,33],[889,34,949,34,"random"],[889,40,949,40],[889,41,949,41],[889,42,949,42],[889,46,949,46,"GAME_AREA_HEIGHT"],[889,62,949,62],[889,65,949,65,"ENEMY_SIZE"],[889,75,949,75],[889,78,949,78],[889,79,949,79],[889,80,949,80],[889,83,949,83,"ENEMY_SIZE"],[889,93,949,93],[890,6,951,4],[890,10,951,10,"enemy"],[890,15,951,28],[890,18,951,31],[891,8,952,6,"id"],[891,10,952,8],[891,12,952,10],[891,21,952,19],[891,23,952,21,"enemyCounter"],[891,35,952,33],[891,37,952,35],[892,8,953,6,"name"],[892,12,953,10],[892,14,953,12],[892,24,953,22],[893,8,954,6,"health"],[893,14,954,12],[893,16,954,14],[893,19,954,17],[894,8,955,6,"maxHealth"],[894,17,955,15],[894,19,955,17],[894,22,955,20],[895,8,956,6,"stats"],[895,13,956,11],[895,15,956,13],[896,10,957,8,"attack"],[896,16,957,14],[896,18,957,16],[896,20,957,18],[897,10,958,8,"defense"],[897,17,958,15],[897,19,958,17],[897,21,958,19],[898,10,959,8,"health"],[898,16,959,14],[898,18,959,16],[898,21,959,19],[899,10,960,8,"maxHealth"],[899,19,960,17],[899,21,960,19],[899,24,960,22],[900,10,961,8,"critChance"],[900,20,961,18],[900,22,961,20],[900,23,961,21],[901,10,962,8,"critDamage"],[901,20,962,18],[901,22,962,20],[901,25,962,23],[902,10,963,8,"cooldownReduction"],[902,27,963,25],[902,29,963,27],[903,8,964,6],[903,9,964,7],[904,8,965,6,"position"],[904,16,965,14],[904,18,965,16],[905,10,965,18,"x"],[905,11,965,19],[906,10,965,21,"y"],[907,8,965,23],[907,9,965,24],[908,8,966,6,"lastDamaged"],[908,19,966,17],[908,21,966,19],[909,6,967,4],[909,7,967,5],[910,6,969,4,"setCombatState"],[910,20,969,18],[910,21,969,19,"prev"],[910,25,969,23],[910,30,969,28],[911,8,970,6],[911,11,970,9,"prev"],[911,15,970,13],[912,8,971,6,"enemies"],[912,15,971,13],[912,17,971,15],[912,18,971,16],[912,21,971,19,"prev"],[912,25,971,23],[912,26,971,24,"enemies"],[912,33,971,31],[912,35,971,33,"enemy"],[912,40,971,38],[913,6,972,4],[913,7,972,5],[913,8,972,6],[913,9,972,7],[914,6,974,4],[914,13,974,11,"enemy"],[914,18,974,16],[915,4,975,2],[915,5,975,3],[917,4,977,2],[918,4,978,2],[918,8,978,8,"spawnBoss"],[918,17,978,17],[918,20,978,21,"bossEnemy"],[918,29,978,43],[918,33,978,48],[919,6,979,4,"console"],[919,13,979,11],[919,14,979,12,"log"],[919,17,979,15],[919,18,979,16],[919,39,979,37,"bossEnemy"],[919,48,979,46],[919,49,979,47,"name"],[919,53,979,51],[919,90,979,88],[919,91,979,89],[920,6,980,4,"setCombatState"],[920,20,980,18],[920,21,980,19,"prev"],[920,25,980,23],[920,30,980,28],[921,8,981,6],[921,11,981,9,"prev"],[921,15,981,13],[922,8,982,6,"enemies"],[922,15,982,13],[922,17,982,15],[922,18,982,16,"bossEnemy"],[922,27,982,25],[922,28,982,26],[922,29,982,27],[923,6,983,4],[923,7,983,5],[923,8,983,6],[923,9,983,7],[924,4,984,2],[924,5,984,3],[926,4,986,2],[927,4,987,2],[927,8,987,8,"clearSpecificEnemy"],[927,26,987,26],[927,29,987,30,"enemyId"],[927,36,987,45],[927,40,987,50],[928,6,988,4,"setCombatState"],[928,20,988,18],[928,21,988,19,"prev"],[928,25,988,23],[928,30,988,28],[929,8,989,6],[929,11,989,9,"prev"],[929,15,989,13],[930,8,990,6,"enemies"],[930,15,990,13],[930,17,990,15,"prev"],[930,21,990,19],[930,22,990,20,"enemies"],[930,29,990,27],[930,30,990,28,"filter"],[930,36,990,34],[930,37,990,35,"enemy"],[930,42,990,40],[930,46,990,44,"enemy"],[930,51,990,49],[930,52,990,50,"id"],[930,54,990,52],[930,59,990,57,"enemyId"],[930,66,990,64],[931,6,991,4],[931,7,991,5],[931,8,991,6],[931,9,991,7],[932,4,992,2],[932,5,992,3],[934,4,994,2],[935,4,995,2],[935,8,995,8,"useAbilityManually"],[935,26,995,26],[935,29,995,26,"_s3"],[935,32,995,26],[935,33,995,29],[935,37,995,29,"useCallback"],[935,43,995,40],[935,44,995,40,"useCallback"],[935,55,995,40],[935,57,995,40,"_s3"],[935,60,995,40],[935,61,995,42,"slotIndex"],[935,70,995,59],[935,74,995,73],[936,6,995,73,"_s3"],[936,9,995,73],[937,6,996,4,"console"],[937,13,996,11],[937,14,996,12,"log"],[937,17,996,15],[937,18,996,16],[937,64,996,62,"slotIndex"],[937,73,996,71],[937,82,996,80],[937,83,996,81],[938,6,997,4,"console"],[938,13,997,11],[938,14,997,12,"log"],[938,17,997,15],[938,18,997,16],[938,65,997,63,"slotIndex"],[938,74,997,72],[938,76,997,74],[938,77,997,75],[939,6,998,4,"console"],[939,13,998,11],[939,14,998,12,"log"],[939,17,998,15],[939,18,998,16],[939,53,998,51,"slotIndex"],[939,62,998,60],[939,64,998,62],[939,65,998,63],[941,6,1000,4],[942,6,1001,4],[942,10,1001,8],[942,11,1001,9,"game"],[942,15,1001,13],[942,16,1001,14,"gameState"],[942,25,1001,23],[942,26,1001,24,"isAlive"],[942,33,1001,31],[942,35,1001,33],[943,8,1002,6,"console"],[943,15,1002,13],[943,16,1002,14,"log"],[943,19,1002,17],[943,20,1002,18],[943,70,1002,68],[943,71,1002,69],[944,8,1003,6],[944,15,1003,13],[944,20,1003,18],[945,6,1004,4],[947,6,1006,4],[948,6,1007,4],[948,10,1007,10,"isReady"],[948,17,1007,17],[948,20,1007,20,"combatState"],[948,31,1007,31],[948,32,1007,32,"abilityManager"],[948,46,1007,46],[948,47,1007,47,"isAbilityReady"],[948,61,1007,61],[948,62,1007,62,"slotIndex"],[948,71,1007,71],[948,72,1007,72],[949,6,1008,4],[949,10,1008,8],[949,11,1008,9,"isReady"],[949,18,1008,16],[949,20,1008,18],[950,8,1009,6,"console"],[950,15,1009,13],[950,16,1009,14,"log"],[950,19,1009,17],[950,20,1009,18],[950,41,1009,39,"slotIndex"],[950,50,1009,48],[950,85,1009,83],[950,86,1009,84],[951,8,1010,6],[951,15,1010,13],[951,20,1010,18],[952,6,1011,4],[954,6,1013,4],[955,6,1014,4],[955,10,1014,8,"combatState"],[955,21,1014,19],[955,22,1014,20,"enemies"],[955,29,1014,27],[955,30,1014,28,"length"],[955,36,1014,34],[955,41,1014,39],[955,42,1014,40],[955,44,1014,42],[956,8,1015,6,"console"],[956,15,1015,13],[956,16,1015,14,"log"],[956,19,1015,17],[956,20,1015,18],[956,69,1015,67],[956,70,1015,68],[957,8,1016,6],[957,15,1016,13],[957,20,1016,18],[958,6,1017,4],[960,6,1019,4],[961,6,1020,4],[961,10,1020,10,"currentTick"],[961,21,1020,21],[961,24,1020,24,"combatEngine"],[961,43,1020,36],[961,44,1020,36,"combatEngine"],[961,56,1020,36],[961,57,1020,37,"getCurrentTick"],[961,71,1020,51],[961,72,1020,52],[961,73,1020,53],[962,6,1021,4],[962,10,1021,10,"success"],[962,17,1021,17],[962,20,1021,20,"combatState"],[962,31,1021,31],[962,32,1021,32,"abilityManager"],[962,46,1021,46],[962,47,1021,47,"useAbility"],[962,57,1021,57],[962,58,1021,58,"slotIndex"],[962,67,1021,67],[962,69,1021,69,"currentTick"],[962,80,1021,80],[962,81,1021,81],[963,6,1023,4],[963,10,1023,8,"success"],[963,17,1023,15],[963,19,1023,17],[964,8,1024,6],[965,8,1025,6,"setCombatState"],[965,22,1025,20],[965,23,1025,21,"prev"],[965,27,1025,25],[965,31,1025,29],[966,10,1026,8],[966,14,1026,14,"newState"],[966,22,1026,22],[966,25,1026,25],[967,12,1026,27],[967,15,1026,30,"prev"],[968,10,1026,35],[968,11,1026,36],[969,10,1027,8,"castAbility"],[969,21,1027,19],[969,22,1027,20,"newState"],[969,30,1027,28],[969,32,1027,30,"slotIndex"],[969,41,1027,39],[969,42,1027,40],[970,10,1028,8],[970,17,1028,15,"newState"],[970,25,1028,23],[971,8,1029,6],[971,9,1029,7],[971,10,1029,8],[972,8,1031,6,"console"],[972,15,1031,13],[972,16,1031,14,"log"],[972,19,1031,17],[972,20,1031,18],[972,65,1031,63,"slotIndex"],[972,74,1031,72],[972,76,1031,74],[972,77,1031,75],[973,8,1032,6],[973,15,1032,13],[973,19,1032,17],[974,6,1033,4],[974,7,1033,5],[974,13,1033,11],[975,8,1034,6,"console"],[975,15,1034,13],[975,16,1034,14,"log"],[975,19,1034,17],[975,20,1034,18],[975,61,1034,59,"slotIndex"],[975,70,1034,68],[975,72,1034,70],[975,73,1034,71],[976,8,1035,6],[976,15,1035,13],[976,20,1035,18],[977,6,1036,4],[978,4,1037,2],[978,5,1037,3],[978,46,1037,5],[978,47,1037,6,"combatState"],[978,58,1037,17],[978,59,1037,18,"abilityManager"],[978,73,1037,32],[978,75,1037,34,"combatState"],[978,86,1037,45],[978,87,1037,46,"enemies"],[978,94,1037,53],[978,95,1037,54],[978,96,1037,55],[979,4,1038,2],[979,8,1038,2,"useEffect"],[979,14,1038,11],[979,15,1038,11,"useEffect"],[979,24,1038,11],[979,26,1038,12],[979,32,1038,18],[980,6,1039,4,"combatEngine"],[980,25,1039,16],[980,26,1039,16,"combatEngine"],[980,38,1039,16],[980,39,1039,17,"start"],[980,44,1039,22],[980,45,1039,23],[980,46,1039,24],[982,6,1041,4],[983,6,1042,4],[984,6,1043,4,"console"],[984,13,1043,11],[984,14,1043,12,"log"],[984,17,1043,15],[984,18,1043,16],[984,97,1043,95],[984,98,1043,96],[985,6,1045,4],[985,13,1045,11],[985,19,1045,17],[986,8,1046,6,"combatEngine"],[986,27,1046,18],[986,28,1046,18,"combatEngine"],[986,40,1046,18],[986,41,1046,19,"stop"],[986,45,1046,23],[986,46,1046,24],[986,47,1046,25],[987,6,1047,4],[987,7,1047,5],[988,4,1048,2],[988,5,1048,3],[988,7,1048,5],[988,9,1048,7],[988,10,1048,8],[990,4,1050,2],[991,4,1051,2],[991,8,1051,2,"useEffect"],[991,14,1051,11],[991,15,1051,11,"useEffect"],[991,24,1051,11],[991,26,1051,12],[991,32,1051,18],[992,6,1052,4],[992,10,1052,10,"processProjectileImpacts"],[992,34,1052,34],[992,37,1052,37,"processProjectileImpacts"],[992,38,1052,37],[992,43,1052,43],[993,8,1053,6,"setProjectiles"],[993,22,1053,20],[993,23,1053,21,"currentProjectiles"],[993,41,1053,39],[993,45,1053,43],[994,10,1054,8],[994,17,1054,15,"currentProjectiles"],[994,35,1054,33],[994,36,1054,34,"map"],[994,39,1054,37],[994,40,1054,38,"projectile"],[994,50,1054,48],[994,54,1054,52],[995,12,1055,10],[995,16,1055,14],[995,17,1055,15,"projectile"],[995,27,1055,25],[995,29,1055,27],[995,36,1055,34],[995,40,1055,38],[997,12,1057,10],[998,12,1058,10],[998,16,1058,16,"currentTime"],[998,27,1058,27],[998,30,1058,30,"Date"],[998,34,1058,34],[998,35,1058,35,"now"],[998,38,1058,38],[998,39,1058,39],[998,40,1058,40],[999,12,1059,10],[999,16,1059,16,"startTime"],[999,25,1059,25],[999,28,1059,28,"projectile"],[999,38,1059,38],[999,39,1059,39,"startTime"],[999,48,1059,48],[999,52,1059,52,"currentTime"],[999,63,1059,63],[1000,12,1060,10],[1000,16,1060,16,"elapsedTime"],[1000,27,1060,27],[1000,30,1060,30,"currentTime"],[1000,41,1060,41],[1000,44,1060,44,"startTime"],[1000,53,1060,53],[1001,12,1061,10],[1001,16,1061,16,"progress"],[1001,24,1061,24],[1001,27,1061,27,"Math"],[1001,31,1061,31],[1001,32,1061,32,"min"],[1001,35,1061,35],[1001,36,1061,36,"elapsedTime"],[1001,47,1061,47],[1001,51,1061,51,"projectile"],[1001,61,1061,61],[1001,62,1061,62,"duration"],[1001,70,1061,70],[1001,74,1061,74],[1001,77,1061,77],[1001,78,1061,78],[1001,80,1061,80],[1001,81,1061,81],[1001,82,1061,82],[1003,12,1063,10],[1004,12,1064,10],[1004,16,1064,14,"progress"],[1004,24,1064,22],[1004,28,1064,26],[1004,29,1064,27],[1004,33,1064,31],[1004,34,1064,32,"projectile"],[1004,44,1064,42],[1004,45,1064,43,"hasHit"],[1004,51,1064,49],[1004,53,1064,51],[1005,14,1065,12,"projectile"],[1005,24,1065,22],[1005,25,1065,23,"hasHit"],[1005,31,1065,29],[1005,34,1065,32],[1005,38,1065,36],[1006,14,1067,12,"console"],[1006,21,1067,19],[1006,22,1067,20,"log"],[1006,25,1067,23],[1006,26,1067,24],[1006,51,1067,49,"projectile"],[1006,61,1067,59],[1006,62,1067,60,"abilityName"],[1006,73,1067,71],[1006,97,1067,95],[1006,98,1067,96],[1007,14,1068,12,"setCombatState"],[1007,28,1068,26],[1007,29,1068,27,"prev"],[1007,33,1068,31],[1007,37,1068,35],[1008,16,1069,14],[1008,20,1069,20,"newState"],[1008,28,1069,28],[1008,31,1069,31],[1009,18,1069,33],[1009,21,1069,36,"prev"],[1010,16,1069,41],[1010,17,1069,42],[1011,16,1071,14],[1011,20,1071,18,"projectile"],[1011,30,1071,28],[1011,31,1071,29,"isAOE"],[1011,36,1071,34],[1011,40,1071,38,"projectile"],[1011,50,1071,48],[1011,51,1071,49,"aoeRadius"],[1011,60,1071,58],[1011,64,1071,62,"projectile"],[1011,74,1071,72],[1011,75,1071,73,"aoeRadius"],[1011,84,1071,82],[1011,87,1071,85],[1011,88,1071,86],[1011,90,1071,88],[1012,18,1072,16],[1013,18,1073,16,"console"],[1013,25,1073,23],[1013,26,1073,24,"log"],[1013,29,1073,27],[1013,30,1073,28],[1013,59,1073,57,"projectile"],[1013,69,1073,67],[1013,70,1073,68,"abilityName"],[1013,81,1073,79],[1013,97,1073,95,"projectile"],[1013,107,1073,105],[1013,108,1073,106,"aoeRadius"],[1013,117,1073,115],[1013,119,1073,117],[1013,120,1073,118],[1014,18,1075,16],[1014,22,1075,22,"impactX"],[1014,29,1075,29],[1014,32,1075,32,"projectile"],[1014,42,1075,42],[1014,43,1075,43,"targetX"],[1014,50,1075,50],[1015,18,1076,16],[1015,22,1076,22,"impactY"],[1015,29,1076,29],[1015,32,1076,32,"projectile"],[1015,42,1076,42],[1015,43,1076,43,"targetY"],[1015,50,1076,50],[1016,18,1077,16],[1016,22,1077,22,"enemiesKilled"],[1016,35,1077,50],[1016,38,1077,53],[1016,40,1077,55],[1018,18,1079,16],[1019,18,1080,16,"newState"],[1019,26,1080,24],[1019,27,1080,25,"enemies"],[1019,34,1080,32],[1019,37,1080,35,"newState"],[1019,45,1080,43],[1019,46,1080,44,"enemies"],[1019,53,1080,51],[1019,54,1080,52,"map"],[1019,57,1080,55],[1019,58,1080,56,"enemy"],[1019,63,1080,61],[1019,67,1080,65],[1020,20,1081,18],[1020,24,1081,22,"enemy"],[1020,29,1081,27],[1020,30,1081,28,"health"],[1020,36,1081,34],[1020,40,1081,38],[1020,41,1081,39],[1020,45,1081,43,"enemy"],[1020,50,1081,48],[1020,51,1081,49,"markedForDeath"],[1020,65,1081,63],[1020,67,1081,65],[1020,74,1081,72,"enemy"],[1020,79,1081,77],[1021,20,1083,18],[1021,24,1083,24,"enemyX"],[1021,30,1083,30],[1021,33,1083,33,"enemy"],[1021,38,1083,38],[1021,39,1083,39,"position"],[1021,47,1083,47],[1021,48,1083,48,"x"],[1021,49,1083,49],[1021,52,1083,52],[1021,56,1083,56],[1021,57,1083,57],[1021,58,1083,58],[1022,20,1084,18],[1022,24,1084,24,"enemyY"],[1022,30,1084,30],[1022,33,1084,33,"enemy"],[1022,38,1084,38],[1022,39,1084,39,"position"],[1022,47,1084,47],[1022,48,1084,48,"y"],[1022,49,1084,49],[1022,52,1084,52],[1022,56,1084,56],[1023,20,1085,18],[1023,24,1085,24,"distance"],[1023,32,1085,32],[1023,35,1085,35,"Math"],[1023,39,1085,39],[1023,40,1085,40,"sqrt"],[1023,44,1085,44],[1023,45,1085,45,"Math"],[1023,49,1085,49],[1023,50,1085,50,"pow"],[1023,53,1085,53],[1023,54,1085,54,"enemyX"],[1023,60,1085,60],[1023,63,1085,63,"impactX"],[1023,70,1085,70],[1023,72,1085,72],[1023,73,1085,73],[1023,74,1085,74],[1023,77,1085,77,"Math"],[1023,81,1085,81],[1023,82,1085,82,"pow"],[1023,85,1085,85],[1023,86,1085,86,"enemyY"],[1023,92,1085,92],[1023,95,1085,95,"impactY"],[1023,102,1085,102],[1023,104,1085,104],[1023,105,1085,105],[1023,106,1085,106],[1023,107,1085,107],[1024,20,1087,18,"console"],[1024,27,1087,25],[1024,28,1087,26,"log"],[1024,31,1087,29],[1024,32,1087,30],[1024,58,1087,56,"enemy"],[1024,63,1087,61],[1024,64,1087,62,"name"],[1024,68,1087,66],[1024,76,1087,74,"enemyX"],[1024,82,1087,80],[1024,87,1087,85,"enemyY"],[1024,93,1087,91],[1024,109,1087,107,"impactX"],[1024,116,1087,114],[1024,121,1087,119,"impactY"],[1024,128,1087,126],[1024,135,1087,133,"distance"],[1024,143,1087,141],[1024,144,1087,142,"toFixed"],[1024,151,1087,149],[1024,152,1087,150],[1024,153,1087,151],[1024,154,1087,152],[1024,169,1087,167,"projectile"],[1024,179,1087,177],[1024,180,1087,178,"aoeRadius"],[1024,189,1087,187],[1024,194,1087,192],[1024,195,1087,193],[1025,20,1089,18],[1025,24,1089,22,"distance"],[1025,32,1089,30],[1025,36,1089,34,"projectile"],[1025,46,1089,44],[1025,47,1089,45,"aoeRadius"],[1025,56,1089,54],[1025,58,1089,56],[1026,22,1090,20],[1027,22,1091,20],[1027,26,1091,26,"newHealth"],[1027,35,1091,35],[1027,38,1091,38,"Math"],[1027,42,1091,42],[1027,43,1091,43,"max"],[1027,46,1091,46],[1027,47,1091,47],[1027,48,1091,48],[1027,50,1091,50,"enemy"],[1027,55,1091,55],[1027,56,1091,56,"health"],[1027,62,1091,62],[1027,65,1091,65,"projectile"],[1027,75,1091,75],[1027,76,1091,76,"damage"],[1027,82,1091,82],[1027,83,1091,83],[1028,22,1093,20,"console"],[1028,29,1093,27],[1028,30,1093,28,"log"],[1028,33,1093,31],[1028,34,1093,32],[1028,52,1093,50,"enemy"],[1028,57,1093,55],[1028,58,1093,56,"name"],[1028,62,1093,60],[1028,74,1093,72,"projectile"],[1028,84,1093,82],[1028,85,1093,83,"damage"],[1028,91,1093,89],[1028,103,1093,101,"enemy"],[1028,108,1093,106],[1028,109,1093,107,"health"],[1028,115,1093,113],[1028,122,1093,120,"newHealth"],[1028,131,1093,129],[1028,134,1093,132],[1028,135,1093,133],[1030,22,1095,20],[1031,22,1096,20],[1031,26,1096,24,"newHealth"],[1031,35,1096,33],[1031,39,1096,37],[1031,40,1096,38],[1031,44,1096,42,"enemy"],[1031,49,1096,47],[1031,50,1096,48,"health"],[1031,56,1096,54],[1031,59,1096,57],[1031,60,1096,58],[1031,62,1096,60],[1032,24,1097,22,"console"],[1032,31,1097,29],[1032,32,1097,30,"log"],[1032,35,1097,33],[1032,36,1097,34],[1032,52,1097,50,"enemy"],[1032,57,1097,55],[1032,58,1097,56,"name"],[1032,62,1097,60],[1032,76,1097,74,"projectile"],[1032,86,1097,84],[1032,87,1097,85,"abilityName"],[1032,98,1097,96],[1032,101,1097,99],[1032,102,1097,100],[1033,24,1098,22,"enemiesKilled"],[1033,37,1098,35],[1033,38,1098,36,"push"],[1033,42,1098,40],[1033,43,1098,41,"enemy"],[1033,48,1098,46],[1033,49,1098,47],[1033,50,1098,48],[1033,51,1098,49],[1035,24,1100,22],[1035,31,1100,29],[1036,26,1101,24],[1036,29,1101,27,"enemy"],[1036,34,1101,32],[1037,26,1102,24,"health"],[1037,32,1102,30],[1037,34,1102,32],[1037,35,1102,33],[1038,26,1103,24,"markedForDeath"],[1038,40,1103,38],[1038,42,1103,40],[1038,46,1103,44],[1039,26,1104,24,"lastDamaged"],[1039,37,1104,35],[1039,39,1104,37,"combatEngine"],[1039,58,1104,49],[1039,59,1104,49,"combatEngine"],[1039,71,1104,49],[1039,72,1104,50,"getCurrentTick"],[1039,86,1104,64],[1039,87,1104,65],[1040,24,1105,22],[1040,25,1105,23],[1041,22,1106,20],[1041,23,1106,21],[1041,29,1106,27],[1042,24,1107,22],[1042,31,1107,29],[1043,26,1108,24],[1043,29,1108,27,"enemy"],[1043,34,1108,32],[1044,26,1109,24,"health"],[1044,32,1109,30],[1044,34,1109,32,"newHealth"],[1044,43,1109,41],[1045,26,1110,24,"lastDamaged"],[1045,37,1110,35],[1045,39,1110,37,"combatEngine"],[1045,58,1110,49],[1045,59,1110,49,"combatEngine"],[1045,71,1110,49],[1045,72,1110,50,"getCurrentTick"],[1045,86,1110,64],[1045,87,1110,65],[1046,24,1111,22],[1046,25,1111,23],[1047,22,1112,20],[1048,20,1113,18],[1049,20,1115,18],[1049,27,1115,25,"enemy"],[1049,32,1115,30],[1049,33,1115,31],[1049,34,1115,32],[1050,18,1116,16],[1050,19,1116,17],[1050,20,1116,18],[1052,18,1118,16],[1053,18,1119,16],[1053,22,1119,20,"enemiesKilled"],[1053,35,1119,33],[1053,36,1119,34,"length"],[1053,42,1119,40],[1053,45,1119,43],[1053,46,1119,44],[1053,48,1119,46],[1054,20,1120,18,"console"],[1054,27,1120,25],[1054,28,1120,26,"log"],[1054,31,1120,29],[1054,32,1120,30],[1054,52,1120,50,"enemiesKilled"],[1054,65,1120,63],[1054,66,1120,64,"length"],[1054,72,1120,70],[1054,94,1120,92,"projectile"],[1054,104,1120,102],[1054,105,1120,103,"abilityName"],[1054,116,1120,114],[1054,118,1120,116],[1054,119,1120,117],[1055,20,1121,18,"setTimeout"],[1055,30,1121,28],[1055,31,1121,29],[1055,37,1121,35],[1056,22,1122,20,"enemiesKilled"],[1056,35,1122,33],[1056,36,1122,34,"forEach"],[1056,43,1122,41],[1056,44,1122,42,"enemy"],[1056,49,1122,47],[1056,53,1122,51,"handleEnemyKill"],[1056,68,1122,66],[1056,69,1122,67,"enemy"],[1056,74,1122,72],[1056,75,1122,73],[1056,76,1122,74],[1057,20,1123,18],[1057,21,1123,19],[1057,23,1123,21],[1057,24,1123,22],[1057,25,1123,23],[1058,18,1124,16],[1059,16,1126,14],[1059,17,1126,15],[1059,23,1126,21],[1060,18,1127,16],[1061,18,1128,16],[1061,22,1128,22,"enemyIndex"],[1061,32,1128,32],[1061,35,1128,35,"newState"],[1061,43,1128,43],[1061,44,1128,44,"enemies"],[1061,51,1128,51],[1061,52,1128,52,"findIndex"],[1061,61,1128,61],[1061,62,1128,62,"e"],[1061,63,1128,63],[1061,67,1128,67,"e"],[1061,68,1128,68],[1061,69,1128,69,"id"],[1061,71,1128,71],[1061,76,1128,76,"projectile"],[1061,86,1128,86],[1061,87,1128,87,"targetEnemyId"],[1061,100,1128,100],[1061,101,1128,101],[1062,18,1130,16],[1062,22,1130,20,"enemyIndex"],[1062,32,1130,30],[1062,36,1130,34],[1062,37,1130,35],[1062,41,1130,39,"newState"],[1062,49,1130,47],[1062,50,1130,48,"enemies"],[1062,57,1130,55],[1062,58,1130,56,"enemyIndex"],[1062,68,1130,66],[1062,69,1130,67],[1062,70,1130,68,"health"],[1062,76,1130,74],[1062,79,1130,77],[1062,80,1130,78],[1062,84,1130,82],[1062,85,1130,83,"newState"],[1062,93,1130,91],[1062,94,1130,92,"enemies"],[1062,101,1130,99],[1062,102,1130,100,"enemyIndex"],[1062,112,1130,110],[1062,113,1130,111],[1062,114,1130,112,"markedForDeath"],[1062,128,1130,126],[1062,130,1130,128],[1063,20,1131,18,"newState"],[1063,28,1131,26],[1063,29,1131,27,"enemies"],[1063,36,1131,34],[1063,39,1131,37],[1063,40,1131,38],[1063,43,1131,41,"newState"],[1063,51,1131,49],[1063,52,1131,50,"enemies"],[1063,59,1131,57],[1063,60,1131,58],[1064,20,1132,18],[1064,24,1132,24,"enemy"],[1064,29,1132,29],[1064,32,1132,32,"newState"],[1064,40,1132,40],[1064,41,1132,41,"enemies"],[1064,48,1132,48],[1064,49,1132,49,"enemyIndex"],[1064,59,1132,59],[1064,60,1132,60],[1065,20,1133,18],[1065,24,1133,24,"newHealth"],[1065,33,1133,33],[1065,36,1133,36,"Math"],[1065,40,1133,40],[1065,41,1133,41,"max"],[1065,44,1133,44],[1065,45,1133,45],[1065,46,1133,46],[1065,48,1133,48,"enemy"],[1065,53,1133,53],[1065,54,1133,54,"health"],[1065,60,1133,60],[1065,63,1133,63,"projectile"],[1065,73,1133,73],[1065,74,1133,74,"damage"],[1065,80,1133,80],[1065,81,1133,81],[1066,20,1135,18,"newState"],[1066,28,1135,26],[1066,29,1135,27,"enemies"],[1066,36,1135,34],[1066,37,1135,35,"enemyIndex"],[1066,47,1135,45],[1066,48,1135,46],[1066,51,1135,49],[1067,22,1136,20],[1067,25,1136,23,"enemy"],[1067,30,1136,28],[1068,22,1137,20,"health"],[1068,28,1137,26],[1068,30,1137,28,"newHealth"],[1068,39,1137,37],[1069,22,1138,20,"lastDamaged"],[1069,33,1138,31],[1069,35,1138,33,"combatEngine"],[1069,54,1138,45],[1069,55,1138,45,"combatEngine"],[1069,67,1138,45],[1069,68,1138,46,"getCurrentTick"],[1069,82,1138,60],[1069,83,1138,61],[1070,20,1139,18],[1070,21,1139,19],[1071,20,1141,18,"console"],[1071,27,1141,25],[1071,28,1141,26,"log"],[1071,31,1141,29],[1071,32,1141,30],[1071,60,1141,58,"enemy"],[1071,65,1141,63],[1071,66,1141,64,"name"],[1071,70,1141,68],[1071,82,1141,80,"newHealth"],[1071,91,1141,89],[1071,95,1141,93,"enemy"],[1071,100,1141,98],[1071,101,1141,99,"maxHealth"],[1071,110,1141,108],[1071,112,1141,110],[1071,113,1141,111],[1073,20,1143,18],[1074,20,1144,18],[1074,24,1144,22,"newHealth"],[1074,33,1144,31],[1074,37,1144,35],[1074,38,1144,36],[1074,42,1144,40,"enemy"],[1074,47,1144,45],[1074,48,1144,46,"health"],[1074,54,1144,52],[1074,57,1144,55],[1074,58,1144,56],[1074,60,1144,58],[1075,22,1145,20,"console"],[1075,29,1145,27],[1075,30,1145,28,"log"],[1075,33,1145,31],[1075,34,1145,32],[1075,54,1145,52,"enemy"],[1075,59,1145,57],[1075,60,1145,58,"name"],[1075,64,1145,62],[1075,78,1145,76,"projectile"],[1075,88,1145,86],[1075,89,1145,87,"abilityName"],[1075,100,1145,98],[1075,136,1145,134],[1075,137,1145,135],[1077,22,1147,20],[1078,22,1148,20,"newState"],[1078,30,1148,28],[1078,31,1148,29,"enemies"],[1078,38,1148,36],[1078,39,1148,37,"enemyIndex"],[1078,49,1148,47],[1078,50,1148,48],[1078,53,1148,51],[1079,24,1149,22],[1079,27,1149,25,"newState"],[1079,35,1149,33],[1079,36,1149,34,"enemies"],[1079,43,1149,41],[1079,44,1149,42,"enemyIndex"],[1079,54,1149,52],[1079,55,1149,53],[1080,24,1150,22,"health"],[1080,30,1150,28],[1080,32,1150,30],[1080,33,1150,31],[1081,24,1151,22,"isDying"],[1081,31,1151,29],[1081,33,1151,31],[1081,37,1151,35],[1082,24,1152,22,"deathStartTime"],[1082,38,1152,36],[1082,40,1152,38,"Date"],[1082,44,1152,42],[1082,45,1152,43,"now"],[1082,48,1152,46],[1082,49,1152,47],[1083,22,1153,20],[1083,23,1153,21],[1084,20,1154,18],[1084,21,1154,19],[1084,27,1154,25],[1084,31,1154,29,"enemy"],[1084,36,1154,34],[1084,37,1154,35,"health"],[1084,43,1154,41],[1084,46,1154,44],[1084,47,1154,45],[1084,49,1154,47],[1085,22,1155,20,"console"],[1085,29,1155,27],[1085,30,1155,28,"log"],[1085,33,1155,31],[1085,34,1155,32],[1085,48,1155,46,"enemy"],[1085,53,1155,51],[1085,54,1155,52,"name"],[1085,58,1155,56],[1085,70,1155,68,"projectile"],[1085,80,1155,78],[1085,81,1155,79,"damage"],[1085,87,1155,85],[1085,99,1155,97,"enemy"],[1085,104,1155,102],[1085,105,1155,103,"health"],[1085,111,1155,109],[1085,117,1155,115,"newHealth"],[1085,126,1155,124],[1085,129,1155,127],[1085,130,1155,128],[1086,20,1156,18],[1087,18,1157,16],[1088,16,1158,14],[1089,16,1160,14],[1089,23,1160,21,"newState"],[1089,31,1160,29],[1090,14,1161,12],[1090,15,1161,13],[1090,16,1161,14],[1091,12,1162,10],[1093,12,1164,10],[1094,12,1165,10],[1094,16,1165,14,"progress"],[1094,24,1165,22],[1094,28,1165,26],[1094,31,1165,29],[1094,33,1165,31],[1095,14,1166,12],[1095,21,1166,19],[1095,25,1166,23],[1096,12,1167,10],[1097,12,1169,10],[1097,19,1169,17,"projectile"],[1097,29,1169,27],[1098,10,1170,8],[1098,11,1170,9],[1098,12,1170,10],[1098,13,1170,11,"filter"],[1098,19,1170,17],[1098,20,1170,18,"Boolean"],[1098,27,1170,25],[1098,28,1170,26],[1099,8,1171,6],[1099,9,1171,7],[1099,10,1171,8],[1100,6,1172,4],[1100,7,1172,5],[1102,6,1174,4],[1103,6,1175,4],[1103,10,1175,10,"impactInterval"],[1103,24,1175,24],[1103,27,1175,27,"setInterval"],[1103,38,1175,38],[1103,39,1175,39,"processProjectileImpacts"],[1103,63,1175,63],[1103,65,1175,65],[1103,67,1175,67],[1103,68,1175,68],[1104,6,1176,4],[1104,13,1176,11],[1104,19,1176,17,"clearInterval"],[1104,32,1176,30],[1104,33,1176,31,"impactInterval"],[1104,47,1176,45],[1104,48,1176,46],[1105,4,1177,2],[1105,5,1177,3],[1105,7,1177,5],[1105,8,1177,6,"handleEnemyKill"],[1105,23,1177,21],[1105,24,1177,22],[1105,25,1177,23],[1107,4,1179,2],[1108,4,1180,2],[1108,8,1180,8,"saveAbilityData"],[1108,23,1180,23],[1108,26,1180,26],[1108,30,1180,26,"useCallback"],[1108,36,1180,37],[1108,37,1180,37,"useCallback"],[1108,48,1180,37],[1108,50,1180,38],[1108,56,1180,44],[1109,6,1181,4],[1109,10,1181,8,"combatState"],[1109,21,1181,19],[1109,22,1181,20,"abilityManager"],[1109,36,1181,34],[1109,38,1181,36],[1110,8,1182,6],[1110,12,1182,12,"abilityData"],[1110,23,1182,23],[1110,26,1182,26,"combatState"],[1110,37,1182,37],[1110,38,1182,38,"abilityManager"],[1110,52,1182,52],[1110,53,1182,53,"getSaveData"],[1110,64,1182,64],[1110,65,1182,65],[1110,66,1182,66],[1111,8,1183,6,"console"],[1111,15,1183,13],[1111,16,1183,14,"log"],[1111,19,1183,17],[1111,20,1183,18],[1111,70,1183,68],[1111,72,1183,70,"abilityData"],[1111,83,1183,81],[1111,84,1183,82],[1112,8,1184,6,"game"],[1112,12,1184,10],[1112,13,1184,11,"updateAbilityData"],[1112,30,1184,28],[1112,31,1184,29,"abilityData"],[1112,42,1184,40],[1112,43,1184,41],[1113,6,1185,4],[1114,4,1186,2],[1114,5,1186,3],[1114,7,1186,5],[1114,8,1186,6,"combatState"],[1114,19,1186,17],[1114,20,1186,18,"abilityManager"],[1114,34,1186,32],[1114,36,1186,34,"game"],[1114,40,1186,38],[1114,41,1186,39,"updateAbilityData"],[1114,58,1186,56],[1114,59,1186,57],[1114,60,1186,58],[1115,4,1188,2],[1115,8,1188,8,"contextValue"],[1115,20,1188,39],[1115,23,1188,42,"React"],[1115,28,1188,47],[1115,29,1188,47,"default"],[1115,36,1188,47],[1115,37,1188,48,"useMemo"],[1115,44,1188,55],[1115,45,1188,56],[1115,52,1188,63],[1116,6,1189,4,"combatState"],[1116,17,1189,15],[1117,6,1190,4,"projectiles"],[1117,17,1190,15],[1118,6,1191,4,"startCombat"],[1118,17,1191,15],[1119,6,1192,4,"stopCombat"],[1119,16,1192,14],[1120,6,1193,4,"equipAbility"],[1120,18,1193,16],[1121,6,1194,4,"handleEnemyKill"],[1121,21,1194,19],[1122,6,1195,4,"getDeck"],[1122,13,1195,11],[1123,6,1196,4,"getAvailableAbilities"],[1123,27,1196,25],[1124,6,1197,4,"upgradeAbility"],[1124,20,1197,18],[1125,6,1198,4,"spawnEnemy"],[1125,16,1198,14],[1126,6,1199,4,"spawnBoss"],[1126,15,1199,13],[1127,6,1200,4,"clearAllEnemies"],[1127,21,1200,19],[1128,6,1201,4,"clearSpecificEnemy"],[1128,24,1201,22],[1129,6,1202,4],[1130,6,1203,4,"findClosestEnemy"],[1130,22,1203,20],[1131,6,1204,4,"updateNinjaPosition"],[1131,25,1204,23],[1132,6,1205,4,"setManualControlActive"],[1132,28,1205,26],[1133,6,1206,4,"lastExplosionTime"],[1133,23,1206,21],[1134,6,1207,4,"useAbilityManually"],[1134,24,1207,22],[1135,6,1207,24],[1136,6,1208,4,"saveAbilityData"],[1136,21,1208,19],[1137,6,1208,21],[1138,6,1209,4,"shadowClone"],[1138,17,1209,15],[1138,19,1209,17,"combatState"],[1138,30,1209,28],[1138,31,1209,29,"shadowClone"],[1138,42,1209,40],[1138,43,1209,42],[1139,4,1210,2],[1139,5,1210,3],[1139,6,1210,4],[1139,8,1210,6],[1140,4,1211,4],[1141,4,1212,4],[1142,4,1213,4,"combatState"],[1142,15,1213,15],[1142,17,1214,4,"projectiles"],[1142,28,1214,15],[1142,30,1215,4,"lastExplosionTime"],[1142,47,1215,21],[1143,4,1216,4],[1144,4,1217,4,"combatState"],[1144,15,1217,15],[1144,16,1217,16,"abilityManager"],[1144,30,1217,30],[1144,32,1218,4,"combatState"],[1144,43,1218,15],[1144,44,1218,16,"enemies"],[1144,51,1218,23],[1144,53,1219,4,"combatState"],[1144,64,1219,15],[1144,65,1219,16,"shadowClone"],[1144,76,1219,27],[1145,4,1219,29],[1146,4,1220,4,"useAbilityManually"],[1146,22,1220,22],[1147,4,1220,24],[1148,4,1221,4,"saveAbilityData"],[1148,19,1221,19],[1148,20,1221,21],[1149,4,1221,21],[1149,5,1222,3],[1149,6,1222,4],[1150,4,1224,2],[1150,24,1225,4],[1150,28,1225,4,"_reactJsxDevRuntime"],[1150,47,1225,4],[1150,48,1225,4,"jsxDEV"],[1150,54,1225,4],[1150,56,1225,5,"CombatContext"],[1150,69,1225,18],[1150,70,1225,19,"Provider"],[1150,78,1225,27],[1151,6,1225,28,"value"],[1151,11,1225,33],[1151,13,1225,35,"contextValue"],[1151,25,1225,48],[1152,6,1225,48,"children"],[1152,14,1225,48],[1152,16,1226,7,"children"],[1153,4,1226,15],[1154,6,1226,15,"fileName"],[1154,14,1226,15],[1154,16,1226,15,"_jsxFileName"],[1154,28,1226,15],[1155,6,1226,15,"lineNumber"],[1155,16,1226,15],[1156,6,1226,15,"columnNumber"],[1156,18,1226,15],[1157,4,1226,15],[1157,11,1227,28],[1157,12,1227,29],[1158,2,1229,0],[1158,3,1229,1],[1159,2,1229,2,"_s4"],[1159,5,1229,2],[1159,6,106,13,"CombatProvider"],[1159,20,106,27],[1160,4,106,27],[1160,12,107,15,"useGame"],[1160,24,107,22],[1160,25,107,22,"useGame"],[1160,32,107,22],[1160,34,108,77,"useZone"],[1160,46,108,84],[1160,47,108,84,"useZone"],[1160,54,108,84],[1161,2,108,84],[1162,2,108,84,"_c"],[1162,4,108,84],[1162,7,106,13,"CombatProvider"],[1162,21,106,27],[1163,2,106,27],[1163,6,106,27,"_c"],[1163,8,106,27],[1164,2,106,27,"$RefreshReg$"],[1164,14,106,27],[1164,15,106,27,"_c"],[1164,17,106,27],[1165,0,106,27],[1165,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BC+D;mBDG;ORiC;mDUuD,2CV;kDUC,4CV;iDUO;OVU;mGWI,6BX;uDUI,+CV;kFYE,4CZ;iDUK,yBV;4CaY,qBb;KIiB;sDUK,yBV;mCWW;SXiB;yBFG;UEG;0BYG,uCZ;uBJG;oCiBE;yDCC,sCD;WjBE;UIC;GNG;mCqBG;oBCY;KDU;GrBI;2BuBG;GvBE;0CwBQ;GxBE;6CyBG;GzBG;8B0BG;mBxBG;oDMI,sCN;KwBa;mBCG,oBC,2BD,CD;G1BC;sB6BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G7BoB;2BmCG;mBR0C,6BQ;exBG;KwBE;GnCG;yBoCG;GpCsC;8BqCG;GrC4B;wCsCI;mBpCE,uCoC;GtCQ;uCuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBxBC;sCyBC;2BlDc;wDmDY;iBnDoC;6BSK;0C2CC,+B3C;mBTC;8DMK,sCN;akDiC;SzBS;OwBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}