{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    var handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"GermbF3J8vk/KSHxEBHfOt4hN3o=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":900,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,934,2],[27,6,934,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,934,2],[27,42,934,2,"require"],[27,49,934,2],[27,50,934,2,"_dependencyMap"],[27,64,934,2],[28,2,934,2],[28,6,934,2,"_slicedToArray"],[28,20,934,2],[28,23,934,2,"_interopDefault"],[28,38,934,2],[28,39,934,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,934,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[95,4,135,2],[95,8,135,2,"_useState3"],[95,18,135,2],[95,21,135,40],[95,25,135,40,"useState"],[95,31,135,48],[95,32,135,48,"useState"],[95,40,135,48],[95,42,135,69],[95,44,135,71],[95,45,135,72],[96,6,135,72,"_useState4"],[96,16,135,72],[96,23,135,72,"_slicedToArray"],[96,37,135,72],[96,38,135,72,"default"],[96,45,135,72],[96,47,135,72,"_useState3"],[96,57,135,72],[97,6,135,9,"projectiles"],[97,17,135,20],[97,20,135,20,"_useState4"],[97,30,135,20],[98,6,135,22,"setProjectiles"],[98,20,135,36],[98,23,135,36,"_useState4"],[98,33,135,36],[99,4,136,2],[99,8,136,2,"_useState5"],[99,18,136,2],[99,21,136,52],[99,25,136,52,"useState"],[99,31,136,60],[99,32,136,60,"useState"],[99,40,136,60],[99,42,136,69],[99,43,136,70],[99,44,136,71],[100,6,136,71,"_useState6"],[100,16,136,71],[100,23,136,71,"_slicedToArray"],[100,37,136,71],[100,38,136,71,"default"],[100,45,136,71],[100,47,136,71,"_useState5"],[100,57,136,71],[101,6,136,9,"lastExplosionTime"],[101,23,136,26],[101,26,136,26,"_useState6"],[101,36,136,26],[102,6,136,28,"setLastExplosionTime"],[102,26,136,48],[102,29,136,48,"_useState6"],[102,39,136,48],[103,4,137,2],[104,4,138,2],[106,4,140,2],[107,4,141,2],[107,8,141,8,"handleEnemyKill"],[107,23,141,23],[107,26,141,26],[107,30,141,26,"useCallback"],[107,36,141,37],[107,37,141,37,"useCallback"],[107,48,141,37],[107,50,141,39,"enemy"],[107,55,141,57],[107,59,141,62],[108,6,142,4,"console"],[108,13,142,11],[108,14,142,12,"log"],[108,17,142,15],[108,18,142,16],[108,73,142,71],[108,75,142,73,"enemy"],[108,80,142,78],[108,81,142,79,"id"],[108,83,142,81],[108,84,142,82],[110,6,144,4],[111,6,145,4],[111,10,145,10,"baseXpReward"],[111,22,145,22],[111,25,145,25],[111,28,145,28],[111,29,145,29],[111,30,145,30],[112,6,146,4],[112,10,146,10,"xpMultiplier"],[112,22,146,22],[112,25,146,25,"game"],[112,29,146,29],[112,30,146,30,"gameState"],[112,39,146,39],[112,40,146,40,"subscriptionBenefits"],[112,60,146,60],[112,62,146,62,"xp_multiplier"],[112,75,146,75],[112,79,146,79],[112,82,146,82],[113,6,147,4],[113,10,147,10,"dropMultiplier"],[113,24,147,24],[113,27,147,27,"game"],[113,31,147,31],[113,32,147,32,"gameState"],[113,41,147,41],[113,42,147,42,"subscriptionBenefits"],[113,62,147,62],[113,64,147,64,"drop_multiplier"],[113,79,147,79],[113,83,147,83],[113,86,147,86],[114,6,149,4],[114,10,149,10,"xpReward"],[114,18,149,18],[114,21,149,21,"Math"],[114,25,149,25],[114,26,149,26,"floor"],[114,31,149,31],[114,32,149,32,"baseXpReward"],[114,44,149,44],[114,47,149,47,"xpMultiplier"],[114,59,149,59],[114,60,149,60],[115,6,150,4],[115,10,150,10,"goldReward"],[115,20,150,20],[115,23,150,23,"Math"],[115,27,150,27],[115,28,150,28,"floor"],[115,33,150,33],[115,34,150,34],[115,36,150,36],[115,39,150,39,"dropMultiplier"],[115,53,150,53],[115,54,150,54],[116,6,152,4,"console"],[116,13,152,11],[116,14,152,12,"log"],[116,17,152,15],[116,18,152,16],[116,48,152,46,"xpReward"],[116,56,152,54],[116,67,152,65,"goldReward"],[116,77,152,75],[116,93,152,91],[116,94,152,92],[117,6,153,4,"console"],[117,13,153,11],[117,14,153,12,"log"],[117,17,153,15],[117,18,153,16],[117,60,153,58,"xpMultiplier"],[117,72,153,70],[117,94,153,92,"dropMultiplier"],[117,108,153,106],[117,110,153,108],[117,111,153,109],[118,6,154,4,"console"],[118,13,154,11],[118,14,154,12,"log"],[118,17,154,15],[118,18,154,16],[118,54,154,52,"baseXpReward"],[118,66,154,64],[118,81,154,79,"xpReward"],[118,89,154,87],[118,91,154,89],[118,92,154,90],[119,6,155,4,"console"],[119,13,155,11],[119,14,155,12,"log"],[119,17,155,15],[119,18,155,16],[119,58,155,56],[119,60,155,58,"JSON"],[119,64,155,62],[119,65,155,63,"stringify"],[119,74,155,72],[119,75,155,73,"game"],[119,79,155,77],[119,80,155,78,"gameState"],[119,89,155,87],[119,90,155,88,"subscriptionBenefits"],[119,110,155,108],[119,111,155,109],[119,112,155,110],[120,6,156,4,"console"],[120,13,156,11],[120,14,156,12,"log"],[120,17,156,15],[120,18,156,16],[120,49,156,47,"Platform"],[120,61,156,55],[120,62,156,55,"Platform"],[120,70,156,55],[120,71,156,56,"OS"],[120,73,156,58],[120,84,156,69,"Date"],[120,88,156,73],[120,89,156,74,"now"],[120,92,156,77],[120,93,156,78],[120,94,156,79],[120,96,156,81],[120,97,156,82],[122,6,158,4],[123,6,159,4],[124,6,160,4,"setTimeout"],[124,16,160,14],[124,17,160,15],[124,23,160,21],[125,8,161,6,"console"],[125,15,161,13],[125,16,161,14,"log"],[125,19,161,17],[125,20,161,18],[125,78,161,76],[125,79,161,77],[127,8,163,6],[128,8,164,6,"game"],[128,12,164,10],[128,13,164,11,"updateNinja"],[128,24,164,22],[128,25,164,24,"prev"],[128,29,164,28],[128,33,164,33],[129,10,165,8,"console"],[129,17,165,15],[129,18,165,16,"log"],[129,21,165,19],[129,22,165,20],[129,54,165,52,"prev"],[129,58,165,56],[129,59,165,57,"experience"],[129,69,165,67],[129,81,165,79,"prev"],[129,85,165,83],[129,86,165,84,"experience"],[129,96,165,94],[129,99,165,97,"xpReward"],[129,107,165,105],[129,109,165,107],[129,110,165,108],[130,10,166,8,"console"],[130,17,166,15],[130,18,166,16,"log"],[130,21,166,19],[130,22,166,20],[130,56,166,54,"prev"],[130,60,166,58],[130,61,166,59,"gold"],[130,65,166,63],[130,77,166,75,"prev"],[130,81,166,79],[130,82,166,80,"gold"],[130,86,166,84],[130,89,166,87,"goldReward"],[130,99,166,97],[130,101,166,99],[130,102,166,100],[131,10,167,8],[131,17,167,15],[132,12,168,10,"experience"],[132,22,168,20],[132,24,168,22,"prev"],[132,28,168,26],[132,29,168,27,"experience"],[132,39,168,37],[132,42,168,40,"xpReward"],[132,50,168,48],[133,12,169,10,"gold"],[133,16,169,14],[133,18,169,16,"prev"],[133,22,169,20],[133,23,169,21,"gold"],[133,27,169,25],[133,30,169,28,"goldReward"],[134,10,170,8],[134,11,170,9],[135,8,171,6],[135,9,171,7],[135,10,171,8],[137,8,173,6],[138,8,174,6],[138,12,174,12,"zoneEnemy"],[138,21,174,21],[138,24,174,24],[139,10,175,8,"id"],[139,12,175,10],[139,14,175,12,"enemy"],[139,19,175,17],[139,20,175,18,"id"],[139,22,175,20],[140,10,176,8,"typeId"],[140,16,176,14],[140,18,176,16,"enemy"],[140,23,176,21],[140,24,176,22,"zoneTypeId"],[140,34,176,32],[140,38,176,36],[140,48,176,46],[141,10,176,48],[142,10,177,8,"name"],[142,14,177,12],[142,16,177,14,"enemy"],[142,21,177,19],[142,22,177,20,"name"],[142,26,177,24],[143,10,178,8,"icon"],[143,14,178,12],[143,16,178,14],[143,20,178,18],[144,10,178,20],[145,10,179,8,"hp"],[145,12,179,10],[145,14,179,12],[145,15,179,13],[146,10,179,15],[147,10,180,8,"maxHP"],[147,15,180,13],[147,17,180,15,"enemy"],[147,22,180,20],[147,23,180,21,"maxHealth"],[147,32,180,30],[148,10,181,8,"attack"],[148,16,181,14],[148,18,181,16,"enemy"],[148,23,181,21],[148,24,181,22,"stats"],[148,29,181,27],[148,30,181,28,"attack"],[148,36,181,34],[149,10,182,8,"xp"],[149,12,182,10],[149,14,182,12,"enemy"],[149,19,182,17],[149,20,182,18,"zoneXP"],[149,26,182,24],[149,30,182,28],[149,32,182,30],[150,10,182,32],[151,10,183,8,"position"],[151,18,183,16],[151,20,183,18,"enemy"],[151,25,183,23],[151,26,183,24,"position"],[152,8,184,6],[152,9,184,7],[153,8,186,6,"console"],[153,15,186,13],[153,16,186,14,"log"],[153,19,186,17],[153,20,186,18],[153,40,186,38,"zoneEnemy"],[153,49,186,47],[153,50,186,48,"name"],[153,54,186,52],[153,59,186,57,"zoneEnemy"],[153,68,186,66],[153,69,186,67,"typeId"],[153,75,186,73],[153,113,186,111],[153,114,186,112],[154,8,187,6,"recordEnemyKill"],[154,23,187,21],[154,24,187,22,"zoneEnemy"],[154,33,187,31],[154,34,187,32],[155,6,188,4],[155,7,188,5],[155,9,188,7],[155,10,188,8],[155,11,188,9],[155,12,188,10],[155,13,188,11],[156,4,189,2],[156,5,189,3],[156,7,189,5],[156,8,189,6,"game"],[156,12,189,10],[156,13,189,11,"updateNinja"],[156,24,189,22],[156,26,189,24,"recordEnemyKill"],[156,41,189,39],[156,42,189,40],[156,43,189,41],[158,4,191,2],[159,4,192,2],[159,8,192,8,"handleCombatTick"],[159,24,192,24],[159,27,192,27,"React"],[159,32,192,32],[159,33,192,32,"default"],[159,40,192,32],[159,41,192,33,"useCallback"],[159,52,192,44],[159,53,192,45],[159,59,192,51],[160,6,192,51],[160,10,192,51,"_s2"],[160,13,192,51],[160,16,192,51,"$RefreshSig$"],[160,28,192,51],[161,6,193,4,"console"],[161,13,193,11],[161,14,193,12,"log"],[161,17,193,15],[161,18,193,16],[161,87,193,85],[161,88,193,86],[162,6,195,4],[162,10,195,8,"enemiesToKill"],[162,23,195,36],[162,26,195,39],[162,28,195,41],[162,29,195,42],[162,30,195,43],[164,6,197,4,"_s2"],[164,9,197,4],[164,10,197,4,"setCombatState"],[164,24,197,18],[164,25,197,18,"_s2"],[164,28,197,18],[164,29,197,19,"prev"],[164,33,197,23],[164,37,197,27],[165,8,197,27,"_s2"],[165,11,197,27],[166,8,198,6],[166,12,198,12,"newTick"],[166,19,198,19],[166,22,198,22,"combatEngine"],[166,41,198,34],[166,42,198,34,"combatEngine"],[166,54,198,34],[166,55,198,35,"getCurrentTick"],[166,69,198,49],[166,70,198,50],[166,71,198,51],[167,8,199,6],[167,12,199,12,"newState"],[167,20,199,20],[167,23,199,23],[168,10,199,25],[168,13,199,28,"prev"],[168,17,199,32],[169,10,199,34,"currentTick"],[169,21,199,45],[169,23,199,47,"newTick"],[170,8,199,55],[170,9,199,56],[171,8,201,6],[171,12,201,10],[171,13,201,11,"newState"],[171,21,201,19],[171,22,201,20,"isInCombat"],[171,32,201,30],[171,34,201,32],[171,41,201,39,"newState"],[171,49,201,47],[173,8,203,6],[174,8,204,6,"newState"],[174,16,204,14],[174,17,204,15,"abilityManager"],[174,31,204,29],[174,32,204,30,"updateCooldowns"],[174,47,204,45],[174,48,204,46,"newTick"],[174,55,204,53],[174,56,204,54],[176,8,206,6],[177,8,207,6],[177,12,207,12,"effectResults"],[177,25,207,25],[177,28,207,28,"newState"],[177,36,207,36],[177,37,207,37,"statusEffects"],[177,50,207,50],[177,51,207,51,"processTick"],[177,62,207,62],[177,63,207,63,"newTick"],[177,70,207,70],[177,71,207,71],[179,8,209,6],[180,8,210,6,"effectResults"],[180,21,210,19],[180,22,210,20,"forEach"],[180,29,210,27],[180,30,210,28],[180,31,210,29,"results"],[180,38,210,36],[180,40,210,38,"entityId"],[180,48,210,46],[180,53,210,51],[181,10,211,8],[181,14,211,14,"enemyIndex"],[181,24,211,24],[181,27,211,27,"newState"],[181,35,211,35],[181,36,211,36,"enemies"],[181,43,211,43],[181,44,211,44,"findIndex"],[181,53,211,53],[181,54,211,54,"e"],[181,55,211,55],[181,59,211,59,"e"],[181,60,211,60],[181,61,211,61,"id"],[181,63,211,63],[181,68,211,68,"entityId"],[181,76,211,76],[181,77,211,77],[182,10,212,8],[182,14,212,12,"enemyIndex"],[182,24,212,22],[182,28,212,26],[182,29,212,27],[182,31,212,29],[183,12,213,10,"results"],[183,19,213,17],[183,20,213,18,"forEach"],[183,27,213,25],[183,28,213,26,"result"],[183,34,213,32],[183,38,213,36],[184,14,214,12,"newState"],[184,22,214,20],[184,23,214,21,"enemies"],[184,30,214,28],[184,31,214,29,"enemyIndex"],[184,41,214,39],[184,42,214,40],[184,43,214,41,"health"],[184,49,214,47],[184,53,214,51,"result"],[184,59,214,57],[184,60,214,58,"damage"],[184,66,214,64],[185,14,215,12,"newState"],[185,22,215,20],[185,23,215,21,"enemies"],[185,30,215,28],[185,31,215,29,"enemyIndex"],[185,41,215,39],[185,42,215,40],[185,43,215,41,"lastDamaged"],[185,54,215,52],[185,57,215,55,"newTick"],[185,64,215,62],[186,12,216,10],[186,13,216,11],[186,14,216,12],[187,10,217,8],[188,8,218,6],[188,9,218,7],[188,10,218,8],[190,8,220,6],[191,8,221,6,"newState"],[191,16,221,14],[191,17,221,15,"enemies"],[191,24,221,22],[191,25,221,23,"forEach"],[191,32,221,30],[191,33,221,31,"enemy"],[191,38,221,36],[191,42,221,40],[192,10,222,8],[192,14,222,12],[192,15,222,13,"enemy"],[192,20,222,18],[192,21,222,19,"isBoss"],[192,27,222,25],[192,29,222,27],[193,12,222,29],[194,12,223,10],[195,12,224,10],[195,16,224,16,"MOVEMENT_SPEED"],[195,30,224,30],[195,33,224,33],[195,37,224,37],[195,38,224,38],[195,39,224,39],[196,12,225,10],[196,16,225,16,"SCREEN_WIDTH"],[196,28,225,28],[196,31,225,31],[196,34,225,34],[197,12,226,10],[197,16,226,16,"GAME_AREA_HEIGHT"],[197,32,226,32],[197,35,226,35],[197,38,226,38],[197,39,226,39],[197,40,226,40],[198,12,227,10],[198,16,227,16,"ENEMY_SIZE"],[198,26,227,26],[198,29,227,29],[198,31,227,31],[200,12,229,10],[201,12,230,10],[201,16,230,16,"playerX"],[201,23,230,23],[201,26,230,26,"currentNinjaPosition"],[201,46,230,46],[201,47,230,47,"x"],[201,48,230,48],[202,12,231,10],[202,16,231,16,"playerY"],[202,23,231,23],[202,26,231,26,"currentNinjaPosition"],[202,46,231,46],[202,47,231,47,"y"],[202,48,231,48],[204,12,233,10],[205,12,234,10],[205,16,234,16,"deltaX"],[205,22,234,22],[205,25,234,25,"playerX"],[205,32,234,32],[205,35,234,35,"enemy"],[205,40,234,40],[205,41,234,41,"position"],[205,49,234,49],[205,50,234,50,"x"],[205,51,234,51],[206,12,235,10],[206,16,235,16,"deltaY"],[206,22,235,22],[206,25,235,25,"playerY"],[206,32,235,32],[206,35,235,35,"enemy"],[206,40,235,40],[206,41,235,41,"position"],[206,49,235,49],[206,50,235,50,"y"],[206,51,235,51],[207,12,236,10],[207,16,236,16,"distance"],[207,24,236,24],[207,27,236,27,"Math"],[207,31,236,31],[207,32,236,32,"sqrt"],[207,36,236,36],[207,37,236,37,"deltaX"],[207,43,236,43],[207,46,236,46,"deltaX"],[207,52,236,52],[207,55,236,55,"deltaY"],[207,61,236,61],[207,64,236,64,"deltaY"],[207,70,236,70],[207,71,236,71],[209,12,238,10],[210,12,239,10],[210,16,239,14,"distance"],[210,24,239,22],[210,27,239,25],[210,29,239,27],[210,31,239,29],[211,14,240,12],[212,14,241,12],[212,18,241,18,"normalizedX"],[212,29,241,29],[212,32,241,32,"deltaX"],[212,38,241,38],[212,41,241,41,"distance"],[212,49,241,49],[213,14,242,12],[213,18,242,18,"normalizedY"],[213,29,242,29],[213,32,242,32,"deltaY"],[213,38,242,38],[213,41,242,41,"distance"],[213,49,242,49],[215,14,244,12],[216,14,245,12],[216,18,245,18,"randomFactor"],[216,30,245,30],[216,33,245,33],[216,36,245,36],[216,37,245,37],[216,38,245,38],[217,14,246,12],[217,18,246,18,"finalX"],[217,24,246,24],[217,27,246,27,"normalizedX"],[217,38,246,38],[217,41,246,41],[217,42,246,42,"Math"],[217,46,246,46],[217,47,246,47,"random"],[217,53,246,53],[217,54,246,54],[217,55,246,55],[217,58,246,58],[217,61,246,61],[217,65,246,65,"randomFactor"],[217,77,246,77],[218,14,247,12],[218,18,247,18,"finalY"],[218,24,247,24],[218,27,247,27,"normalizedY"],[218,38,247,38],[218,41,247,41],[218,42,247,42,"Math"],[218,46,247,46],[218,47,247,47,"random"],[218,53,247,53],[218,54,247,54],[218,55,247,55],[218,58,247,58],[218,61,247,61],[218,65,247,65,"randomFactor"],[218,77,247,77],[220,14,249,12],[221,14,250,12],[221,18,250,16,"newX"],[221,22,250,20],[221,25,250,23,"enemy"],[221,30,250,28],[221,31,250,29,"position"],[221,39,250,37],[221,40,250,38,"x"],[221,41,250,39],[221,44,250,43,"finalX"],[221,50,250,49],[221,53,250,52,"MOVEMENT_SPEED"],[221,67,250,67],[222,14,251,12],[222,18,251,16,"newY"],[222,22,251,20],[222,25,251,23,"enemy"],[222,30,251,28],[222,31,251,29,"position"],[222,39,251,37],[222,40,251,38,"y"],[222,41,251,39],[222,44,251,43,"finalY"],[222,50,251,49],[222,53,251,52,"MOVEMENT_SPEED"],[222,67,251,67],[224,14,253,12],[225,14,254,12,"newX"],[225,18,254,16],[225,21,254,19,"Math"],[225,25,254,23],[225,26,254,24,"max"],[225,29,254,27],[225,30,254,28],[225,31,254,29],[225,33,254,31,"Math"],[225,37,254,35],[225,38,254,36,"min"],[225,41,254,39],[225,42,254,40,"SCREEN_WIDTH"],[225,54,254,52],[225,57,254,55,"ENEMY_SIZE"],[225,67,254,65],[225,69,254,67,"newX"],[225,73,254,71],[225,74,254,72],[225,75,254,73],[226,14,255,12,"newY"],[226,18,255,16],[226,21,255,19,"Math"],[226,25,255,23],[226,26,255,24,"max"],[226,29,255,27],[226,30,255,28],[226,31,255,29],[226,33,255,31,"Math"],[226,37,255,35],[226,38,255,36,"min"],[226,41,255,39],[226,42,255,40,"GAME_AREA_HEIGHT"],[226,58,255,56],[226,61,255,59,"ENEMY_SIZE"],[226,71,255,69],[226,73,255,71,"newY"],[226,77,255,75],[226,78,255,76],[226,79,255,77],[228,14,257,12],[229,14,258,12,"enemy"],[229,19,258,17],[229,20,258,18,"position"],[229,28,258,26],[229,29,258,27,"x"],[229,30,258,28],[229,33,258,31,"newX"],[229,37,258,35],[230,14,259,12,"enemy"],[230,19,259,17],[230,20,259,18,"position"],[230,28,259,26],[230,29,259,27,"y"],[230,30,259,28],[230,33,259,31,"newY"],[230,37,259,35],[231,12,260,10],[232,12,261,10],[233,10,262,8],[234,8,263,6],[234,9,263,7],[234,10,263,8],[236,8,265,6],[237,8,266,6],[237,12,266,10,"newState"],[237,20,266,18],[237,21,266,19,"shadowClone"],[237,32,266,30],[237,34,266,32],[238,10,267,8],[239,10,268,8,"newState"],[239,18,268,16],[239,19,268,17,"shadowClone"],[239,30,268,28],[239,31,268,29,"remainingTicks"],[239,45,268,43],[239,47,268,45],[241,10,270,8],[242,10,271,8],[242,14,271,14,"cloneOffset"],[242,25,271,25],[242,28,271,28],[242,30,271,30],[242,31,271,31],[242,32,271,32],[243,10,272,8,"newState"],[243,18,272,16],[243,19,272,17,"shadowClone"],[243,30,272,28],[243,31,272,29,"position"],[243,39,272,37],[243,40,272,38,"x"],[243,41,272,39],[243,44,272,42,"currentNinjaPosition"],[243,64,272,62],[243,65,272,63,"x"],[243,66,272,64],[243,69,272,67,"cloneOffset"],[243,80,272,78],[244,10,273,8,"newState"],[244,18,273,16],[244,19,273,17,"shadowClone"],[244,30,273,28],[244,31,273,29,"position"],[244,39,273,37],[244,40,273,38,"y"],[244,41,273,39],[244,44,273,42,"currentNinjaPosition"],[244,64,273,62],[244,65,273,63,"y"],[244,66,273,64],[244,69,273,67],[244,71,273,69],[246,10,275,8],[247,10,276,8],[247,14,276,12,"newState"],[247,22,276,20],[247,23,276,21,"shadowClone"],[247,34,276,32],[247,35,276,33,"remainingTicks"],[247,49,276,47],[247,53,276,51],[247,54,276,52],[247,56,276,54],[248,12,277,10,"console"],[248,19,277,17],[248,20,277,18,"log"],[248,23,277,21],[248,24,277,22],[248,75,277,73],[248,76,277,74],[249,12,278,10,"newState"],[249,20,278,18],[249,21,278,19,"shadowClone"],[249,32,278,30],[249,35,278,33,"undefined"],[249,44,278,42],[250,10,279,8],[250,11,279,9],[250,17,279,15],[251,12,280,10],[252,12,281,10],[253,12,282,10],[253,16,282,16,"CLONE_ATTACK_INTERVAL"],[253,37,282,37],[253,40,282,40],[253,42,282,42],[254,12,283,10],[254,16,283,14,"newState"],[254,24,283,22],[254,25,283,23,"currentTick"],[254,36,283,34],[254,39,283,37,"CLONE_ATTACK_INTERVAL"],[254,60,283,58],[254,65,283,63],[254,66,283,64],[254,70,283,68,"newState"],[254,78,283,76],[254,79,283,77,"enemies"],[254,86,283,84],[254,87,283,85,"length"],[254,93,283,91],[254,96,283,94],[254,97,283,95],[254,99,283,97],[255,14,284,12,"console"],[255,21,284,19],[255,22,284,20,"log"],[255,25,284,23],[255,26,284,24],[255,83,284,81],[255,84,284,82],[257,14,286,12],[258,14,287,12],[258,18,287,18,"target"],[258,24,287,24],[258,27,287,27,"findClosestEnemyInternal"],[258,51,287,51],[258,52,287,52,"newState"],[258,60,287,60],[258,61,287,61,"enemies"],[258,68,287,68],[258,69,287,69],[259,14,288,12],[259,18,288,16,"target"],[259,24,288,22],[259,26,288,24],[260,16,289,14],[261,16,290,14],[261,20,290,20,"cloneDamage"],[261,31,290,31],[261,34,290,34,"Math"],[261,38,290,38],[261,39,290,39,"floor"],[261,44,290,44],[261,45,290,45,"newState"],[261,53,290,53],[261,54,290,54,"playerStats"],[261,65,290,65],[261,66,290,66,"attack"],[261,72,290,72],[261,75,290,75],[261,78,290,78],[261,79,290,79],[263,16,292,14],[264,16,293,14,"createProjectile"],[264,32,293,30],[264,33,293,31,"target"],[264,39,293,37],[264,41,293,39,"cloneDamage"],[264,52,293,50],[264,54,293,52,"newState"],[264,62,293,60],[264,63,293,61,"shadowClone"],[264,74,293,72],[264,75,293,73,"position"],[264,83,293,81],[264,85,293,83],[265,18,294,16,"id"],[265,20,294,18],[265,22,294,20],[265,43,294,41],[266,18,295,16,"name"],[266,22,295,20],[266,24,295,22],[266,45,295,43],[267,18,296,16,"icon"],[267,22,296,20],[267,24,296,22],[268,16,297,14],[268,17,297,15],[268,18,297,16],[269,14,298,12],[270,12,299,10],[271,10,300,8],[272,8,301,6],[274,8,303,6],[275,8,304,6],[275,12,304,10],[275,13,304,11,"isManualControlActive"],[275,34,304,32],[275,36,304,34],[276,10,305,8],[276,15,305,13],[276,19,305,17,"i"],[276,20,305,18],[276,23,305,21],[276,24,305,22],[276,26,305,24,"i"],[276,27,305,25],[276,30,305,28],[276,31,305,29],[276,33,305,31,"i"],[276,34,305,32],[276,36,305,34],[276,38,305,36],[277,12,306,10],[277,16,306,14,"newState"],[277,24,306,22],[277,25,306,23,"abilityManager"],[277,39,306,37],[277,40,306,38,"isAbilityReady"],[277,54,306,52],[277,55,306,53,"i"],[277,56,306,54],[277,57,306,55],[277,61,306,59,"newState"],[277,69,306,67],[277,70,306,68,"enemies"],[277,77,306,75],[277,78,306,76,"length"],[277,84,306,82],[277,87,306,85],[277,88,306,86],[277,90,306,88],[278,14,307,12],[278,18,307,16,"newState"],[278,26,307,24],[278,27,307,25,"abilityManager"],[278,41,307,39],[278,42,307,40,"useAbility"],[278,52,307,50],[278,53,307,51,"i"],[278,54,307,52],[278,56,307,54,"newTick"],[278,63,307,61],[278,64,307,62],[278,66,307,64],[279,16,308,14,"castAbility"],[279,27,308,25],[279,28,308,26,"newState"],[279,36,308,34],[279,38,308,36,"i"],[279,39,308,37],[279,40,308,38],[280,14,309,12],[281,12,310,10],[282,10,311,8],[283,8,312,6],[285,8,314,6],[286,8,315,6],[286,12,315,12,"deadEnemies"],[286,23,315,23],[286,26,315,26,"newState"],[286,34,315,34],[286,35,315,35,"enemies"],[286,42,315,42],[286,43,315,43,"filter"],[286,49,315,49],[286,50,315,50,"enemy"],[286,55,315,55],[286,59,315,59,"enemy"],[286,64,315,64],[286,65,315,65,"health"],[286,71,315,71],[286,75,315,75],[286,76,315,76],[286,77,315,77],[287,8,316,6,"enemiesToKill"],[287,21,316,19],[287,24,316,22],[287,25,316,23],[287,28,316,26,"deadEnemies"],[287,39,316,37],[287,40,316,38],[287,41,316,39],[287,42,316,40],[289,8,318,6],[290,8,319,6],[290,12,319,10,"deadEnemies"],[290,23,319,21],[290,24,319,22,"length"],[290,30,319,28],[290,33,319,31],[290,34,319,32],[290,36,319,34],[291,10,320,8,"console"],[291,17,320,15],[291,18,320,16,"log"],[291,21,320,19],[291,22,320,20],[291,49,320,47,"deadEnemies"],[291,60,320,58],[291,61,320,59,"length"],[291,67,320,65],[291,83,320,81],[291,85,320,83,"deadEnemies"],[291,96,320,94],[291,97,320,95,"map"],[291,100,320,98],[291,101,320,99,"e"],[291,102,320,100],[291,106,320,104],[291,109,320,107,"e"],[291,110,320,108],[291,111,320,109,"id"],[291,113,320,111],[291,117,320,115,"e"],[291,118,320,116],[291,119,320,117,"health"],[291,125,320,123],[291,130,320,128],[291,131,320,129],[291,132,320,130],[292,8,321,6],[294,8,323,6],[295,8,324,6],[295,12,324,12,"lowHealthEnemies"],[295,28,324,28],[295,31,324,31,"newState"],[295,39,324,39],[295,40,324,40,"enemies"],[295,47,324,47],[295,48,324,48,"filter"],[295,54,324,54],[295,55,324,55,"enemy"],[295,60,324,60],[295,64,324,64,"enemy"],[295,69,324,69],[295,70,324,70,"health"],[295,76,324,76],[295,80,324,80],[295,82,324,82],[295,86,324,86,"enemy"],[295,91,324,91],[295,92,324,92,"health"],[295,98,324,98],[295,101,324,101],[295,102,324,102],[295,103,324,103],[296,8,325,6],[296,12,325,10,"lowHealthEnemies"],[296,28,325,26],[296,29,325,27,"length"],[296,35,325,33],[296,38,325,36],[296,39,325,37],[296,41,325,39],[297,10,326,8,"console"],[297,17,326,15],[297,18,326,16,"log"],[297,21,326,19],[297,22,326,20],[297,61,326,59],[297,63,326,61,"lowHealthEnemies"],[297,79,326,77],[297,80,326,78,"map"],[297,83,326,81],[297,84,326,82,"e"],[297,85,326,83],[297,89,326,87],[297,92,326,90,"e"],[297,93,326,91],[297,94,326,92,"id"],[297,96,326,94],[297,100,326,98,"e"],[297,101,326,99],[297,102,326,100,"health"],[297,108,326,106],[297,112,326,110,"e"],[297,113,326,111],[297,114,326,112,"maxHealth"],[297,123,326,121],[297,128,326,126],[297,129,326,127],[297,130,326,128],[298,8,327,6],[300,8,329,6],[301,8,330,6],[301,12,330,12,"beforeCount"],[301,23,330,23],[301,26,330,26,"newState"],[301,34,330,34],[301,35,330,35,"enemies"],[301,42,330,42],[301,43,330,43,"length"],[301,49,330,49],[302,8,331,6,"newState"],[302,16,331,14],[302,17,331,15,"enemies"],[302,24,331,22],[302,27,331,25,"newState"],[302,35,331,33],[302,36,331,34,"enemies"],[302,43,331,41],[302,44,331,42,"filter"],[302,50,331,48],[302,51,331,49,"enemy"],[302,56,331,54],[302,60,331,58,"enemy"],[302,65,331,63],[302,66,331,64,"health"],[302,72,331,70],[302,75,331,73],[302,76,331,74],[302,77,331,75],[303,8,332,6],[303,12,332,12,"afterCount"],[303,22,332,22],[303,25,332,25,"newState"],[303,33,332,33],[303,34,332,34,"enemies"],[303,41,332,41],[303,42,332,42,"length"],[303,48,332,48],[304,8,334,6],[304,12,334,10,"beforeCount"],[304,23,334,21],[304,28,334,26,"afterCount"],[304,38,334,36],[304,40,334,38],[305,10,335,8,"console"],[305,17,335,15],[305,18,335,16,"log"],[305,21,335,19],[305,22,335,20],[305,52,335,50,"beforeCount"],[305,63,335,61],[305,66,335,64,"afterCount"],[305,76,335,74],[305,102,335,100],[305,103,335,101],[306,8,336,6],[308,8,338,6],[309,8,339,6],[310,8,340,6],[310,12,340,12,"MAX_ENEMIES"],[310,23,340,23],[310,26,340,26],[310,28,340,28],[310,29,340,29],[310,30,340,30],[311,8,341,6],[311,12,341,12,"MIN_SPAWN_DELAY"],[311,27,341,27],[311,30,341,30],[311,33,341,33],[311,34,341,34],[311,35,341,35],[312,8,342,6],[312,12,342,12,"now"],[312,15,342,15],[312,18,342,18,"Date"],[312,22,342,22],[312,23,342,23,"now"],[312,26,342,26],[312,27,342,27],[312,28,342,28],[313,8,343,6],[313,12,343,12,"hasBoss"],[313,19,343,19],[313,22,343,22,"newState"],[313,30,343,30],[313,31,343,31,"enemies"],[313,38,343,38],[313,39,343,39,"some"],[313,43,343,43],[313,44,343,44,"enemy"],[313,49,343,49],[313,53,343,53,"enemy"],[313,58,343,58],[313,59,343,59,"isBoss"],[313,65,343,65],[313,66,343,66],[315,8,345,6],[316,8,346,6],[316,12,346,10],[316,13,346,11,"newState"],[316,21,346,19],[316,22,346,20,"lastSpawnTime"],[316,35,346,33],[316,37,346,35],[317,10,347,8,"newState"],[317,18,347,16],[317,19,347,17,"lastSpawnTime"],[317,32,347,30],[317,35,347,33,"now"],[317,38,347,36],[318,8,348,6],[319,8,350,6,"console"],[319,15,350,13],[319,16,350,14,"log"],[319,19,350,17],[319,20,350,18],[319,53,350,51,"newState"],[319,61,350,59],[319,62,350,60,"enemies"],[319,69,350,67],[319,70,350,68,"length"],[319,76,350,74],[319,85,350,83,"MAX_ENEMIES"],[319,96,350,94],[319,109,350,107,"hasBoss"],[319,116,350,114],[319,118,350,116],[319,119,350,117],[321,8,352,6],[322,8,353,6],[322,12,353,10],[322,13,353,11,"hasBoss"],[322,20,353,18],[322,24,353,22,"newState"],[322,32,353,30],[322,33,353,31,"enemies"],[322,40,353,38],[322,41,353,39,"length"],[322,47,353,45],[322,50,353,48,"MAX_ENEMIES"],[322,61,353,59],[322,65,353,64,"now"],[322,68,353,67],[322,71,353,70,"newState"],[322,79,353,78],[322,80,353,79,"lastSpawnTime"],[322,93,353,92],[322,97,353,97,"MIN_SPAWN_DELAY"],[322,112,353,112],[322,114,353,114],[323,10,354,8,"console"],[323,17,354,15],[323,18,354,16,"log"],[323,21,354,19],[323,22,354,20],[323,43,354,41,"newState"],[323,51,354,49],[323,52,354,50,"enemies"],[323,59,354,57],[323,60,354,58,"length"],[323,66,354,64],[323,69,354,67],[323,70,354,68],[323,74,354,72,"MAX_ENEMIES"],[323,85,354,83],[323,87,354,85],[323,88,354,86],[324,10,355,8,"spawnTestEnemy"],[324,24,355,22],[324,25,355,23,"newState"],[324,33,355,31],[324,34,355,32],[325,10,356,8,"newState"],[325,18,356,16],[325,19,356,17,"lastSpawnTime"],[325,32,356,30],[325,35,356,33,"now"],[325,38,356,36],[326,8,357,6],[327,8,359,6],[327,15,359,13,"newState"],[327,23,359,21],[328,6,360,4],[328,7,360,5],[328,47,360,6],[330,6,362,4],[331,6,363,4,"console"],[331,13,363,11],[331,14,363,12,"log"],[331,17,363,15],[331,18,363,16],[331,50,363,48,"enemiesToKill"],[331,63,363,61],[331,64,363,62,"length"],[331,70,363,68],[331,101,363,99],[331,102,363,100],[332,6,365,4,"enemiesToKill"],[332,19,365,17],[332,20,365,18,"forEach"],[332,27,365,25],[332,28,365,26],[332,29,365,27,"enemy"],[332,34,365,32],[332,36,365,34,"index"],[332,41,365,39],[332,46,365,44],[333,8,366,6,"console"],[333,15,366,13],[333,16,366,14,"log"],[333,19,366,17],[333,20,366,18],[333,57,366,55,"index"],[333,62,366,60],[333,65,366,63],[333,66,366,64],[333,70,366,68,"enemiesToKill"],[333,83,366,81],[333,84,366,82,"length"],[333,90,366,88],[333,104,366,102,"enemy"],[333,109,366,107],[333,110,366,108,"id"],[333,112,366,110],[333,114,366,112],[333,115,366,113],[334,8,367,6,"handleEnemyKill"],[334,23,367,21],[334,24,367,22,"enemy"],[334,29,367,27],[334,30,367,28],[335,6,368,4],[335,7,368,5],[335,8,368,6],[336,4,369,2],[336,5,369,3],[336,7,369,5],[336,8,369,6,"handleEnemyKill"],[336,23,369,21],[336,24,369,22],[336,25,369,23],[336,26,369,24],[336,27,369,25],[338,4,371,2],[339,4,372,2],[339,8,372,8,"findClosestEnemyInternal"],[339,32,372,32],[339,35,372,36,"enemies"],[339,42,372,58],[339,46,372,83],[340,6,373,4],[340,10,373,8,"enemies"],[340,17,373,15],[340,18,373,16,"length"],[340,24,373,22],[340,29,373,27],[340,30,373,28],[340,32,373,30],[340,39,373,37],[340,43,373,41],[342,6,375,4],[343,6,376,4],[343,10,376,10,"SCREEN_WIDTH"],[343,22,376,22],[343,25,376,25],[343,28,376,28],[344,6,377,4],[344,10,377,10,"GAME_AREA_HEIGHT"],[344,26,377,26],[344,29,377,29],[344,32,377,32],[344,35,377,35],[344,38,377,38],[344,39,377,39],[344,40,377,40],[345,6,378,4],[345,10,378,10,"ninjaX"],[345,16,378,16],[345,19,378,19,"SCREEN_WIDTH"],[345,31,378,31],[345,34,378,34],[345,35,378,35],[346,6,379,4],[346,10,379,10,"ninjaY"],[346,16,379,16],[346,19,379,19,"GAME_AREA_HEIGHT"],[346,35,379,35],[346,38,379,38],[346,39,379,39],[347,6,381,4],[347,10,381,8,"closestEnemy"],[347,22,381,20],[347,25,381,23,"enemies"],[347,32,381,30],[347,33,381,31],[347,34,381,32],[347,35,381,33],[348,6,382,4],[348,10,382,8,"closestDistance"],[348,25,382,23],[348,28,382,26,"Infinity"],[348,36,382,34],[349,6,384,4,"enemies"],[349,13,384,11],[349,14,384,12,"forEach"],[349,21,384,19],[349,22,384,20,"enemy"],[349,27,384,25],[349,31,384,29],[350,8,385,6],[350,12,385,12,"distance"],[350,20,385,20],[350,23,385,23,"Math"],[350,27,385,27],[350,28,385,28,"sqrt"],[350,32,385,32],[350,33,386,8,"Math"],[350,37,386,12],[350,38,386,13,"pow"],[350,41,386,16],[350,42,386,17,"enemy"],[350,47,386,22],[350,48,386,23,"position"],[350,56,386,31],[350,57,386,32,"x"],[350,58,386,33],[350,61,386,36,"ninjaX"],[350,67,386,42],[350,69,386,44],[350,70,386,45],[350,71,386,46],[350,74,387,8,"Math"],[350,78,387,12],[350,79,387,13,"pow"],[350,82,387,16],[350,83,387,17,"enemy"],[350,88,387,22],[350,89,387,23,"position"],[350,97,387,31],[350,98,387,32,"y"],[350,99,387,33],[350,102,387,36,"ninjaY"],[350,108,387,42],[350,110,387,44],[350,111,387,45],[350,112,388,6],[350,113,388,7],[351,8,390,6],[351,12,390,10,"distance"],[351,20,390,18],[351,23,390,21,"closestDistance"],[351,38,390,36],[351,40,390,38],[352,10,391,8,"closestDistance"],[352,25,391,23],[352,28,391,26,"distance"],[352,36,391,34],[353,10,392,8,"closestEnemy"],[353,22,392,20],[353,25,392,23,"enemy"],[353,30,392,28],[354,8,393,6],[355,6,394,4],[355,7,394,5],[355,8,394,6],[356,6,396,4,"console"],[356,13,396,11],[356,14,396,12,"log"],[356,17,396,15],[356,18,396,16],[356,60,396,58,"closestDistance"],[356,75,396,73],[356,76,396,74,"toFixed"],[356,83,396,81],[356,84,396,82],[356,85,396,83],[356,86,396,84],[356,88,396,86],[356,89,396,87],[357,6,397,4],[357,13,397,11,"closestEnemy"],[357,25,397,23],[358,4,398,2],[358,5,398,3],[360,4,400,2],[361,4,401,2],[361,8,401,8,"findClosestEnemy"],[361,24,401,24],[361,27,401,27,"findClosestEnemy"],[361,28,401,27],[361,33,401,53],[362,6,402,4],[362,13,402,11,"findClosestEnemyInternal"],[362,37,402,35],[362,38,402,36,"combatState"],[362,49,402,47],[362,50,402,48,"enemies"],[362,57,402,55],[362,58,402,56],[363,4,403,2],[363,5,403,3],[365,4,405,2],[366,4,406,2],[366,8,406,2,"_useState7"],[366,18,406,2],[366,21,406,58],[366,25,406,58,"useState"],[366,31,406,66],[366,32,406,66,"useState"],[366,40,406,66],[366,42,406,91],[367,8,406,93,"x"],[367,9,406,94],[367,11,406,96],[367,12,406,97],[368,8,406,99,"y"],[368,9,406,100],[368,11,406,102],[369,6,406,104],[369,7,406,105],[369,8,406,106],[370,6,406,106,"_useState8"],[370,16,406,106],[370,23,406,106,"_slicedToArray"],[370,37,406,106],[370,38,406,106,"default"],[370,45,406,106],[370,47,406,106,"_useState7"],[370,57,406,106],[371,6,406,9,"currentNinjaPosition"],[371,26,406,29],[371,29,406,29,"_useState8"],[371,39,406,29],[372,6,406,31,"setCurrentNinjaPosition"],[372,29,406,54],[372,32,406,54,"_useState8"],[372,42,406,54],[373,4,407,2],[373,8,407,2,"_useState9"],[373,18,407,2],[373,21,407,60],[373,25,407,60,"useState"],[373,31,407,68],[373,32,407,68,"useState"],[373,40,407,68],[373,42,407,69],[373,47,407,74],[373,48,407,75],[374,6,407,75,"_useState0"],[374,16,407,75],[374,23,407,75,"_slicedToArray"],[374,37,407,75],[374,38,407,75,"default"],[374,45,407,75],[374,47,407,75,"_useState9"],[374,57,407,75],[375,6,407,9,"isManualControlActive"],[375,27,407,30],[375,30,407,30,"_useState0"],[375,40,407,30],[376,6,407,32,"setIsManualControlActive"],[376,30,407,56],[376,33,407,56,"_useState0"],[376,43,407,56],[378,4,409,2],[379,4,410,2],[379,8,410,8,"updateNinjaPosition"],[379,27,410,27],[379,30,410,30],[379,34,410,30,"useCallback"],[379,40,410,41],[379,41,410,41,"useCallback"],[379,52,410,41],[379,54,410,43,"newPosition"],[379,65,410,78],[379,69,410,83],[380,6,411,4,"setCurrentNinjaPosition"],[380,29,411,27],[380,30,411,28,"newPosition"],[380,41,411,39],[380,42,411,40],[381,4,412,2],[381,5,412,3],[381,7,412,5],[381,9,412,7],[381,10,412,8],[383,4,414,2],[384,4,415,2],[384,8,415,8,"setManualControlActive"],[384,30,415,30],[384,33,415,33],[384,37,415,33,"useCallback"],[384,43,415,44],[384,44,415,44,"useCallback"],[384,55,415,44],[384,57,415,46,"active"],[384,63,415,61],[384,67,415,66],[385,6,416,4,"setIsManualControlActive"],[385,30,416,28],[385,31,416,29,"active"],[385,37,416,35],[385,38,416,36],[386,6,417,4,"console"],[386,13,417,11],[386,14,417,12,"log"],[386,17,417,15],[386,18,417,16],[386,39,417,37,"active"],[386,45,417,43],[386,48,417,46],[386,59,417,57],[386,62,417,60],[386,75,417,73],[386,88,417,86,"active"],[386,94,417,92],[386,97,417,95],[386,105,417,103],[386,108,417,106],[386,117,417,115],[386,119,417,117],[386,120,417,118],[387,4,418,2],[387,5,418,3],[387,7,418,5],[387,9,418,7],[387,10,418,8],[389,4,420,2],[390,4,421,2],[390,8,421,8,"handleProjectileHit"],[390,27,421,27],[390,30,421,31,"projectile"],[390,40,421,59],[390,44,421,64],[391,6,422,4,"console"],[391,13,422,11],[391,14,422,12,"log"],[391,17,422,15],[391,18,422,16],[391,35,422,33,"projectile"],[391,45,422,43],[391,46,422,44,"id"],[391,48,422,46],[391,62,422,60,"projectile"],[391,72,422,70],[391,73,422,71,"targetEnemyId"],[391,86,422,84],[391,94,422,92,"projectile"],[391,104,422,102],[391,105,422,103,"damage"],[391,111,422,109],[391,120,422,118],[391,121,422,119],[392,6,424,4,"setCombatState"],[392,20,424,18],[392,21,424,19,"prev"],[392,25,424,23],[392,29,424,27],[393,8,425,6],[393,12,425,12,"newState"],[393,20,425,20],[393,23,425,23],[394,10,425,25],[394,13,425,28,"prev"],[395,8,425,33],[395,9,425,34],[397,8,427,6],[398,8,428,6],[398,12,428,12,"enemyIndex"],[398,22,428,22],[398,25,428,25,"newState"],[398,33,428,33],[398,34,428,34,"enemies"],[398,41,428,41],[398,42,428,42,"findIndex"],[398,51,428,51],[398,52,428,52,"e"],[398,53,428,53],[398,57,428,57,"e"],[398,58,428,58],[398,59,428,59,"id"],[398,61,428,61],[398,66,428,66,"projectile"],[398,76,428,76],[398,77,428,77,"targetEnemyId"],[398,90,428,90],[398,91,428,91],[399,8,429,6],[399,12,429,10,"enemyIndex"],[399,22,429,20],[399,26,429,24],[399,27,429,25],[399,29,429,27],[400,10,430,8,"newState"],[400,18,430,16],[400,19,430,17,"enemies"],[400,26,430,24],[400,29,430,27],[400,30,430,28],[400,33,430,31,"newState"],[400,41,430,39],[400,42,430,40,"enemies"],[400,49,430,47],[400,50,430,48],[401,10,431,8,"newState"],[401,18,431,16],[401,19,431,17,"enemies"],[401,26,431,24],[401,27,431,25,"enemyIndex"],[401,37,431,35],[401,38,431,36],[401,41,431,39],[402,12,432,10],[402,15,432,13,"newState"],[402,23,432,21],[402,24,432,22,"enemies"],[402,31,432,29],[402,32,432,30,"enemyIndex"],[402,42,432,40],[402,43,432,41],[403,12,433,10,"health"],[403,18,433,16],[403,20,433,18,"newState"],[403,28,433,26],[403,29,433,27,"enemies"],[403,36,433,34],[403,37,433,35,"enemyIndex"],[403,47,433,45],[403,48,433,46],[403,49,433,47,"health"],[403,55,433,53],[403,58,433,56,"projectile"],[403,68,433,66],[403,69,433,67,"damage"],[403,75,433,73],[404,12,434,10,"lastDamaged"],[404,23,434,21],[404,25,434,23,"combatEngine"],[404,44,434,35],[404,45,434,35,"combatEngine"],[404,57,434,35],[404,58,434,36,"getCurrentTick"],[404,72,434,50],[404,73,434,51],[405,10,435,8],[405,11,435,9],[406,10,437,8,"console"],[406,17,437,15],[406,18,437,16,"log"],[406,21,437,19],[406,22,437,20],[406,34,437,32,"projectile"],[406,44,437,42],[406,45,437,43,"targetEnemyId"],[406,58,437,56],[406,70,437,68,"newState"],[406,78,437,76],[406,79,437,77,"enemies"],[406,86,437,84],[406,87,437,85,"enemyIndex"],[406,97,437,95],[406,98,437,96],[406,99,437,97,"health"],[406,105,437,103],[406,109,437,107,"newState"],[406,117,437,115],[406,118,437,116,"enemies"],[406,125,437,123],[406,126,437,124,"enemyIndex"],[406,136,437,134],[406,137,437,135],[406,138,437,136,"maxHealth"],[406,147,437,145],[406,149,437,147],[406,150,437,148],[407,8,438,6],[408,8,440,6],[408,15,440,13,"newState"],[408,23,440,21],[409,6,441,4],[409,7,441,5],[409,8,441,6],[411,6,443,4],[412,6,444,4,"setProjectiles"],[412,20,444,18],[412,21,444,19,"prev"],[412,25,444,23],[412,29,444,27,"prev"],[412,33,444,31],[412,34,444,32,"filter"],[412,40,444,38],[412,41,444,39,"p"],[412,42,444,40],[412,46,444,44,"p"],[412,47,444,45],[412,48,444,46,"id"],[412,50,444,48],[412,55,444,53,"projectile"],[412,65,444,63],[412,66,444,64,"id"],[412,68,444,66],[412,69,444,67],[412,70,444,68],[413,4,445,2],[413,5,445,3],[415,4,447,2],[416,4,448,2],[416,8,448,8,"castAbility"],[416,19,448,19],[416,22,448,22,"castAbility"],[416,23,448,23,"state"],[416,28,448,41],[416,30,448,43,"slotIndex"],[416,39,448,60],[416,44,448,65],[417,6,449,4],[417,10,449,10,"deck"],[417,14,449,14],[417,17,449,17,"state"],[417,22,449,22],[417,23,449,23,"abilityManager"],[417,37,449,37],[417,38,449,38,"getDeck"],[417,45,449,45],[417,46,449,46],[417,47,449,47],[418,6,450,4],[418,10,450,10,"ability"],[418,17,450,17],[418,20,450,20,"deck"],[418,24,450,24],[418,25,450,25,"slots"],[418,30,450,30],[418,31,450,31,"slotIndex"],[418,40,450,40],[418,41,450,41],[419,6,451,4],[419,10,451,8],[419,11,451,9,"ability"],[419,18,451,16],[419,20,451,18],[421,6,453,4],[422,6,454,4],[422,10,454,8,"damage"],[422,16,454,14],[422,19,454,17,"ability"],[422,26,454,24],[422,27,454,25,"stats"],[422,32,454,30],[422,33,454,31,"baseDamage"],[422,43,454,41],[424,6,456,4],[425,6,457,4,"deck"],[425,10,457,8],[425,11,457,9,"activeSynergies"],[425,26,457,24],[425,27,457,25,"forEach"],[425,34,457,32],[425,35,457,33,"synergy"],[425,42,457,40],[425,46,457,44],[426,8,458,6],[426,12,458,10,"synergy"],[426,19,458,17],[426,20,458,18,"bonus"],[426,25,458,23],[426,26,458,24,"damageBonus"],[426,37,458,35],[426,41,459,10,"synergy"],[426,48,459,17],[426,49,459,18,"requiredTags"],[426,61,459,30],[426,62,459,31,"some"],[426,66,459,35],[426,67,459,36,"tag"],[426,70,459,39],[426,74,459,43,"ability"],[426,81,459,50],[426,82,459,51,"tags"],[426,86,459,55],[426,87,459,56,"includes"],[426,95,459,64],[426,96,459,65,"tag"],[426,99,459,68],[426,100,459,69],[426,101,459,70],[426,103,459,72],[427,10,460,8,"damage"],[427,16,460,14],[427,20,460,19],[427,21,460,20],[427,24,460,23,"synergy"],[427,31,460,30],[427,32,460,31,"bonus"],[427,37,460,36],[427,38,460,37,"damageBonus"],[427,49,460,48],[427,52,460,51],[427,55,460,55],[428,8,461,6],[429,6,462,4],[429,7,462,5],[429,8,462,6],[431,6,464,4],[432,6,465,4],[432,10,465,10,"isAOE"],[432,15,465,15],[432,18,465,18,"ability"],[432,25,465,25],[432,26,465,26,"effects"],[432,33,465,33],[432,34,465,34,"includes"],[432,42,465,42],[432,43,465,43],[432,48,465,48],[432,49,465,49],[432,53,465,53,"ability"],[432,60,465,60],[432,61,465,61,"stats"],[432,66,465,66],[432,67,465,67,"aoeRadius"],[432,76,465,76],[433,6,467,4],[433,10,467,8,"isAOE"],[433,15,467,13],[433,17,467,15],[434,8,468,6,"console"],[434,15,468,13],[434,16,468,14,"log"],[434,19,468,17],[434,20,468,18],[434,39,468,37,"ability"],[434,46,468,44],[434,47,468,45,"name"],[434,51,468,49],[434,67,468,65,"ability"],[434,74,468,72],[434,75,468,73,"stats"],[434,80,468,78],[434,81,468,79,"aoeRadius"],[434,90,468,88],[434,92,468,90],[434,93,468,91],[436,8,470,6],[437,8,471,6],[437,12,471,12,"ninjaX"],[437,18,471,18],[437,21,471,21,"currentNinjaPosition"],[437,41,471,41],[437,42,471,42,"x"],[437,43,471,43],[437,46,471,46],[437,48,471,48],[437,49,471,49],[437,50,471,50],[438,8,472,6],[438,12,472,12,"ninjaY"],[438,18,472,18],[438,21,472,21,"currentNinjaPosition"],[438,41,472,41],[438,42,472,42,"y"],[438,43,472,43],[438,46,472,46],[438,48,472,48],[439,8,473,6],[439,12,473,12,"aoeRadius"],[439,21,473,21],[439,24,473,24,"ability"],[439,31,473,31],[439,32,473,32,"stats"],[439,37,473,37],[439,38,473,38,"aoeRadius"],[439,47,473,47],[440,8,475,6],[440,12,475,12,"enemiesInRange"],[440,26,475,26],[440,29,475,29,"state"],[440,34,475,34],[440,35,475,35,"enemies"],[440,42,475,42],[440,43,475,43,"filter"],[440,49,475,49],[440,50,475,50,"enemy"],[440,55,475,55],[440,59,475,59],[441,10,476,8],[441,14,476,14,"enemyX"],[441,20,476,20],[441,23,476,23,"enemy"],[441,28,476,28],[441,29,476,29,"position"],[441,37,476,37],[441,38,476,38,"x"],[441,39,476,39],[441,42,476,42],[441,46,476,46],[441,47,476,47],[441,48,476,48],[442,10,477,8],[442,14,477,14,"enemyY"],[442,20,477,20],[442,23,477,23,"enemy"],[442,28,477,28],[442,29,477,29,"position"],[442,37,477,37],[442,38,477,38,"y"],[442,39,477,39],[442,42,477,42],[442,46,477,46],[443,10,478,8],[443,14,478,14,"distance"],[443,22,478,22],[443,25,478,25,"Math"],[443,29,478,29],[443,30,478,30,"sqrt"],[443,34,478,34],[443,35,478,35,"Math"],[443,39,478,39],[443,40,478,40,"pow"],[443,43,478,43],[443,44,478,44,"enemyX"],[443,50,478,50],[443,53,478,53,"ninjaX"],[443,59,478,59],[443,61,478,61],[443,62,478,62],[443,63,478,63],[443,66,478,66,"Math"],[443,70,478,70],[443,71,478,71,"pow"],[443,74,478,74],[443,75,478,75,"enemyY"],[443,81,478,81],[443,84,478,84,"ninjaY"],[443,90,478,90],[443,92,478,92],[443,93,478,93],[443,94,478,94],[443,95,478,95],[444,10,479,8],[444,17,479,15,"distance"],[444,25,479,23],[444,29,479,27,"aoeRadius"],[444,38,479,36],[445,8,480,6],[445,9,480,7],[445,10,480,8],[446,8,482,6,"console"],[446,15,482,13],[446,16,482,14,"log"],[446,19,482,17],[446,20,482,18],[446,45,482,43,"enemiesInRange"],[446,59,482,57],[446,60,482,58,"length"],[446,66,482,64],[446,88,482,86,"aoeRadius"],[446,97,482,95],[446,107,482,105],[446,108,482,106],[448,8,484,6],[449,8,485,6,"enemiesInRange"],[449,22,485,20],[449,23,485,21,"forEach"],[449,30,485,28],[449,31,485,29,"enemy"],[449,36,485,34],[449,40,485,38],[450,10,486,8],[450,14,486,14,"damageResult"],[450,26,486,26],[450,29,486,29,"DamageCalculator"],[450,48,486,45],[450,49,486,45,"DamageCalculator"],[450,65,486,45],[450,66,486,46,"calculateDamage"],[450,81,486,61],[450,82,486,62,"damage"],[450,88,486,68],[450,90,486,70,"state"],[450,95,486,75],[450,96,486,76,"playerStats"],[450,107,486,87],[450,109,486,89,"enemy"],[450,114,486,94],[450,115,486,95,"stats"],[450,120,486,100],[450,121,486,101],[451,10,487,8,"createProjectile"],[451,26,487,24],[451,27,487,25,"enemy"],[451,32,487,30],[451,34,487,32,"damageResult"],[451,46,487,44],[451,47,487,45,"damage"],[451,53,487,51],[451,55,487,53,"currentNinjaPosition"],[451,75,487,73],[451,77,487,75],[452,12,488,10,"id"],[452,14,488,12],[452,16,488,14,"ability"],[452,23,488,21],[452,24,488,22,"id"],[452,26,488,24],[453,12,489,10,"name"],[453,16,489,14],[453,18,489,16,"ability"],[453,25,489,23],[453,26,489,24,"name"],[453,30,489,28],[454,12,490,10,"icon"],[454,16,490,14],[454,18,490,16,"ability"],[454,25,490,23],[454,26,490,24,"icon"],[455,10,491,8],[455,11,491,9],[455,12,491,10],[456,10,493,8,"console"],[456,17,493,15],[456,18,493,16,"log"],[456,21,493,19],[456,22,493,20],[456,37,493,35,"enemy"],[456,42,493,40],[456,43,493,41,"name"],[456,47,493,45],[456,55,493,53,"damageResult"],[456,67,493,65],[456,68,493,66,"damage"],[456,74,493,72],[456,83,493,81],[456,84,493,82],[457,8,494,6],[457,9,494,7],[457,10,494,8],[458,8,496,6,"console"],[458,15,496,13],[458,16,496,14,"log"],[458,19,496,17],[458,20,496,18],[458,26,496,24,"ability"],[458,33,496,31],[458,34,496,32,"name"],[458,38,496,36],[458,56,496,54,"enemiesInRange"],[458,70,496,68],[458,71,496,69,"length"],[458,77,496,75],[458,93,496,91,"damage"],[458,99,496,97],[458,118,496,116],[458,119,496,117],[459,6,498,4],[459,7,498,5],[459,13,498,11],[460,8,499,6],[461,8,500,6],[461,12,500,12,"target"],[461,18,500,18],[461,21,500,21,"findClosestEnemyInternal"],[461,45,500,45],[461,46,500,46,"state"],[461,51,500,51],[461,52,500,52,"enemies"],[461,59,500,59],[461,60,500,60],[462,8,501,6],[462,12,501,10],[462,13,501,11,"target"],[462,19,501,17],[462,21,501,19],[463,8,503,6],[463,12,503,12,"damageResult"],[463,24,503,24],[463,27,503,27,"DamageCalculator"],[463,46,503,43],[463,47,503,43,"DamageCalculator"],[463,63,503,43],[463,64,503,44,"calculateDamage"],[463,79,503,59],[463,80,503,60,"damage"],[463,86,503,66],[463,88,503,68,"state"],[463,93,503,73],[463,94,503,74,"playerStats"],[463,105,503,85],[463,107,503,87,"target"],[463,113,503,93],[463,114,503,94,"stats"],[463,119,503,99],[463,120,503,100],[465,8,505,6],[466,8,506,6,"createProjectile"],[466,24,506,22],[466,25,506,23,"target"],[466,31,506,29],[466,33,506,31,"damageResult"],[466,45,506,43],[466,46,506,44,"damage"],[466,52,506,50],[466,54,506,52,"currentNinjaPosition"],[466,74,506,72],[466,76,506,74],[467,10,507,8,"id"],[467,12,507,10],[467,14,507,12,"ability"],[467,21,507,19],[467,22,507,20,"id"],[467,24,507,22],[468,10,508,8,"name"],[468,14,508,12],[468,16,508,14,"ability"],[468,23,508,21],[468,24,508,22,"name"],[468,28,508,26],[469,10,509,8,"icon"],[469,14,509,12],[469,16,509,14,"ability"],[469,23,509,21],[469,24,509,22,"icon"],[470,8,510,6],[470,9,510,7],[470,10,510,8],[471,8,512,6,"console"],[471,15,512,13],[471,16,512,14,"log"],[471,19,512,17],[471,20,512,18],[471,26,512,24,"ability"],[471,33,512,31],[471,34,512,32,"name"],[471,38,512,36],[471,66,512,64,"damageResult"],[471,78,512,76],[471,79,512,77,"damage"],[471,85,512,83],[471,95,512,93,"damageResult"],[471,107,512,105],[471,108,512,106,"isCritical"],[471,118,512,116],[471,121,512,119],[471,131,512,129],[471,134,512,132],[471,136,512,134],[471,138,512,136],[471,139,512,137],[472,6,513,4],[474,6,515,4],[475,6,516,4],[475,10,516,8,"ability"],[475,17,516,15],[475,18,516,16,"effects"],[475,25,516,23],[475,26,516,24,"includes"],[475,34,516,32],[475,35,516,33],[475,40,516,38],[475,41,516,39],[475,45,516,43,"ability"],[475,52,516,50],[475,53,516,51,"stats"],[475,58,516,56],[475,59,516,57,"duration"],[475,67,516,65],[475,69,516,67],[476,8,517,6],[476,12,517,12,"targets"],[476,19,517,19],[476,22,517,22,"isAOE"],[476,27,517,27],[476,30,518,8,"state"],[476,35,518,13],[476,36,518,14,"enemies"],[476,43,518,21],[476,44,518,22,"filter"],[476,50,518,28],[476,51,518,29,"enemy"],[476,56,518,34],[476,60,518,38],[477,10,519,10],[477,14,519,16,"ninjaX"],[477,20,519,22],[477,23,519,25,"currentNinjaPosition"],[477,43,519,45],[477,44,519,46,"x"],[477,45,519,47],[477,48,519,50],[477,50,519,52],[478,10,520,10],[478,14,520,16,"ninjaY"],[478,20,520,22],[478,23,520,25,"currentNinjaPosition"],[478,43,520,45],[478,44,520,46,"y"],[478,45,520,47],[478,48,520,50],[478,50,520,52],[479,10,521,10],[479,14,521,16,"enemyX"],[479,20,521,22],[479,23,521,25,"enemy"],[479,28,521,30],[479,29,521,31,"position"],[479,37,521,39],[479,38,521,40,"x"],[479,39,521,41],[479,42,521,44],[479,46,521,48],[480,10,522,10],[480,14,522,16,"enemyY"],[480,20,522,22],[480,23,522,25,"enemy"],[480,28,522,30],[480,29,522,31,"position"],[480,37,522,39],[480,38,522,40,"y"],[480,39,522,41],[480,42,522,44],[480,46,522,48],[481,10,523,10],[481,14,523,16,"distance"],[481,22,523,24],[481,25,523,27,"Math"],[481,29,523,31],[481,30,523,32,"sqrt"],[481,34,523,36],[481,35,523,37,"Math"],[481,39,523,41],[481,40,523,42,"pow"],[481,43,523,45],[481,44,523,46,"enemyX"],[481,50,523,52],[481,53,523,55,"ninjaX"],[481,59,523,61],[481,61,523,63],[481,62,523,64],[481,63,523,65],[481,66,523,68,"Math"],[481,70,523,72],[481,71,523,73,"pow"],[481,74,523,76],[481,75,523,77,"enemyY"],[481,81,523,83],[481,84,523,86,"ninjaY"],[481,90,523,92],[481,92,523,94],[481,93,523,95],[481,94,523,96],[481,95,523,97],[482,10,524,10],[482,17,524,17,"distance"],[482,25,524,25],[482,29,524,29,"ability"],[482,36,524,36],[482,37,524,37,"stats"],[482,42,524,42],[482,43,524,43,"aoeRadius"],[482,52,524,52],[483,8,525,8],[483,9,525,9],[483,10,525,10],[483,13,526,8],[483,14,526,9,"findClosestEnemyInternal"],[483,38,526,33],[483,39,526,34,"state"],[483,44,526,39],[483,45,526,40,"enemies"],[483,52,526,47],[483,53,526,48],[483,54,526,49],[483,55,526,50,"filter"],[483,61,526,56],[483,62,526,57,"Boolean"],[483,69,526,64],[483,70,526,65],[484,8,528,6,"targets"],[484,15,528,13],[484,16,528,14,"forEach"],[484,23,528,21],[484,24,528,22,"target"],[484,30,528,28],[484,34,528,32],[485,10,529,8,"state"],[485,15,529,13],[485,16,529,14,"statusEffects"],[485,29,529,27],[485,30,529,28,"addEffect"],[485,39,529,37],[485,40,529,38,"target"],[485,46,529,44],[485,47,529,45,"id"],[485,49,529,47],[485,51,529,49],[486,12,530,10,"id"],[486,14,530,12],[486,16,530,14],[486,19,530,17,"ability"],[486,26,530,24],[486,27,530,25,"id"],[486,29,530,27],[486,35,530,33],[487,12,531,10,"type"],[487,16,531,14],[487,18,531,16],[487,23,531,21],[488,12,532,10,"remainingTicks"],[488,26,532,24],[488,28,532,26,"Math"],[488,32,532,30],[488,33,532,31,"floor"],[488,38,532,36],[488,39,532,37,"ability"],[488,46,532,44],[488,47,532,45,"stats"],[488,52,532,50],[488,53,532,51,"duration"],[488,61,532,59],[488,64,532,62],[488,66,532,64],[488,67,532,65],[489,12,533,10,"tickInterval"],[489,24,533,22],[489,26,533,24],[489,28,533,26],[490,12,534,10,"lastTick"],[490,20,534,18],[490,22,534,20,"state"],[490,27,534,25],[490,28,534,26,"currentTick"],[490,39,534,37],[491,12,535,10,"value"],[491,17,535,15],[491,19,535,17,"Math"],[491,23,535,21],[491,24,535,22,"floor"],[491,29,535,27],[491,30,535,28,"damage"],[491,36,535,34],[491,39,535,37],[491,42,535,40],[491,43,535,41],[492,12,536,10,"stackable"],[492,21,536,19],[492,23,536,21],[493,10,537,8],[493,11,537,9],[493,12,537,10],[494,8,538,6],[494,9,538,7],[494,10,538,8],[495,6,539,4],[497,6,541,4],[498,6,542,4],[498,10,542,8,"ability"],[498,17,542,15],[498,18,542,16,"effects"],[498,25,542,23],[498,26,542,24,"includes"],[498,34,542,32],[498,35,542,33],[498,41,542,39],[498,42,542,40],[498,46,542,44,"ability"],[498,53,542,51],[498,54,542,52,"id"],[498,56,542,54],[498,61,542,59],[498,75,542,73],[498,77,542,75],[499,8,543,6,"console"],[499,15,543,13],[499,16,543,14,"log"],[499,19,543,17],[499,20,543,18],[499,66,543,64,"ability"],[499,73,543,71],[499,74,543,72,"stats"],[499,79,543,77],[499,80,543,78,"duration"],[499,88,543,86],[499,98,543,96],[499,99,543,97],[501,8,545,6],[502,8,546,6],[502,12,546,12,"cloneX"],[502,18,546,18],[502,21,546,21,"currentNinjaPosition"],[502,41,546,41],[502,42,546,42,"x"],[502,43,546,43],[502,46,546,46],[502,48,546,48],[502,49,546,49],[502,50,546,50],[503,8,547,6],[503,12,547,12,"cloneY"],[503,18,547,18],[503,21,547,21,"currentNinjaPosition"],[503,41,547,41],[503,42,547,42,"y"],[503,43,547,43],[503,46,547,46],[503,48,547,48],[503,49,547,49],[503,50,547,50],[505,8,549,6,"state"],[505,13,549,11],[505,14,549,12,"shadowClone"],[505,25,549,23],[505,28,549,26],[506,10,550,8,"id"],[506,12,550,10],[506,14,550,12],[506,30,550,28,"Date"],[506,34,550,32],[506,35,550,33,"now"],[506,38,550,36],[506,39,550,37],[506,40,550,38],[506,42,550,40],[507,10,551,8,"remainingTicks"],[507,24,551,22],[507,26,551,24,"Math"],[507,30,551,28],[507,31,551,29,"floor"],[507,36,551,34],[507,37,551,35,"ability"],[507,44,551,42],[507,45,551,43,"stats"],[507,50,551,48],[507,51,551,49,"duration"],[507,59,551,57],[507,62,551,60],[507,64,551,62],[507,65,551,63],[508,10,551,65],[509,10,552,8,"position"],[509,18,552,16],[509,20,552,18],[510,12,552,20,"x"],[510,13,552,21],[510,15,552,23,"cloneX"],[510,21,552,29],[511,12,552,31,"y"],[511,13,552,32],[511,15,552,34,"cloneY"],[512,10,552,41],[512,11,552,42],[513,10,553,8,"damageMultiplier"],[513,26,553,24],[513,28,553,26],[513,31,553,29],[513,32,553,31],[514,8,554,6],[514,9,554,7],[515,8,556,6,"console"],[515,15,556,13],[515,16,556,14,"log"],[515,19,556,17],[515,20,556,18],[515,63,556,61,"ability"],[515,70,556,68],[515,71,556,69,"stats"],[515,76,556,74],[515,77,556,75,"duration"],[515,85,556,83],[515,108,556,106],[515,109,556,107],[516,6,557,4],[517,4,558,2],[517,5,558,3],[519,4,560,2],[520,4,561,2],[520,8,561,8,"createProjectile"],[520,24,561,24],[520,27,561,27,"createProjectile"],[520,28,561,28,"targetEnemy"],[520,39,561,52],[520,41,561,54,"damage"],[520,47,561,68],[520,49,561,70,"ninjaPos"],[520,57,561,103],[520,59,561,105,"abilityInfo"],[520,70,561,159],[520,75,561,164],[521,6,562,4],[521,10,562,10,"SCREEN_WIDTH"],[521,22,562,22],[521,25,562,25],[521,28,562,28],[522,6,563,4],[522,10,563,10,"GAME_AREA_HEIGHT"],[522,26,563,26],[522,29,563,29],[522,32,563,32],[522,35,563,35],[522,38,563,38],[522,39,563,39],[522,40,563,40],[523,6,564,4],[523,10,564,10,"NINJA_SIZE"],[523,20,564,20],[523,23,564,23],[523,25,564,25],[525,6,566,4],[526,6,567,4],[526,10,567,10,"ninjaX"],[526,16,567,16],[526,19,567,19,"ninjaPos"],[526,27,567,27],[526,30,567,30,"ninjaPos"],[526,38,567,38],[526,39,567,39,"x"],[526,40,567,40],[526,43,567,43,"NINJA_SIZE"],[526,53,567,53],[526,56,567,56],[526,57,567,57],[526,60,567,60,"SCREEN_WIDTH"],[526,72,567,72],[526,75,567,75],[526,76,567,76],[527,6,568,4],[527,10,568,10,"ninjaY"],[527,16,568,16],[527,19,568,19,"ninjaPos"],[527,27,568,27],[527,30,568,30,"ninjaPos"],[527,38,568,38],[527,39,568,39,"y"],[527,40,568,40],[527,43,568,43,"NINJA_SIZE"],[527,53,568,53],[527,56,568,56],[527,57,568,57],[527,60,568,60,"GAME_AREA_HEIGHT"],[527,76,568,76],[527,79,568,79],[527,80,568,80],[528,6,569,4],[528,10,569,10,"ENEMY_SIZE"],[528,20,569,20],[528,23,569,23],[528,25,569,25],[529,6,571,4],[529,10,571,10,"projectile"],[529,20,571,38],[529,23,571,41],[530,8,572,6,"id"],[530,10,572,8],[530,12,572,10],[530,20,572,18,"Date"],[530,24,572,22],[530,25,572,23,"now"],[530,28,572,26],[530,29,572,27],[530,30,572,28],[530,34,572,32,"Math"],[530,38,572,36],[530,39,572,37,"random"],[530,45,572,43],[530,46,572,44],[530,47,572,45],[530,49,572,47],[531,8,573,6,"x"],[531,9,573,7],[531,11,573,9,"ninjaX"],[531,17,573,15],[532,8,574,6,"y"],[532,9,574,7],[532,11,574,9,"ninjaY"],[532,17,574,15],[533,8,575,6,"targetX"],[533,15,575,13],[533,17,575,15,"targetEnemy"],[533,28,575,26],[533,29,575,27,"position"],[533,37,575,35],[533,38,575,36,"x"],[533,39,575,37],[533,42,575,40,"ENEMY_SIZE"],[533,52,575,50],[533,55,575,53],[533,56,575,54],[534,8,576,6,"targetY"],[534,15,576,13],[534,17,576,15,"targetEnemy"],[534,28,576,26],[534,29,576,27,"position"],[534,37,576,35],[534,38,576,36,"y"],[534,39,576,37],[534,42,576,40,"ENEMY_SIZE"],[534,52,576,50],[534,55,576,53],[534,56,576,54],[535,8,577,6,"targetEnemyId"],[535,21,577,19],[535,23,577,21,"targetEnemy"],[535,34,577,32],[535,35,577,33,"id"],[535,37,577,35],[536,8,578,6,"damage"],[536,14,578,12],[536,16,578,14,"damage"],[536,22,578,20],[537,8,579,6,"startTime"],[537,17,579,15],[537,19,579,17,"Date"],[537,23,579,21],[537,24,579,22,"now"],[537,27,579,25],[537,28,579,26],[537,29,579,27],[538,8,580,6,"duration"],[538,16,580,14],[538,18,580,16],[538,21,580,19],[539,8,580,21],[540,8,581,6],[541,8,582,6,"abilityId"],[541,17,582,15],[541,19,582,17,"abilityInfo"],[541,30,582,28],[541,32,582,30,"id"],[541,34,582,32],[541,38,582,36],[541,54,582,52],[542,8,583,6,"abilityName"],[542,19,583,17],[542,21,583,19,"abilityInfo"],[542,32,583,30],[542,34,583,32,"name"],[542,38,583,36],[542,42,583,40],[542,58,583,56],[543,8,584,6,"abilityIcon"],[543,19,584,17],[543,21,584,19,"abilityInfo"],[543,32,584,30],[543,34,584,32,"icon"],[543,38,584,36],[543,42,584,40],[543,46,584,44],[543,47,584,46],[544,6,585,4],[544,7,585,5],[545,6,587,4,"console"],[545,13,587,11],[545,14,587,12,"log"],[545,17,587,15],[545,18,587,16],[545,53,587,51,"targetEnemy"],[545,64,587,62],[545,65,587,63,"id"],[545,67,587,65],[545,75,587,73,"damage"],[545,81,587,79],[545,90,587,88],[545,91,587,89],[546,6,588,4,"console"],[546,13,588,11],[546,14,588,12,"log"],[546,17,588,15],[546,18,588,16],[546,53,588,51,"ninjaX"],[546,59,588,57],[546,64,588,62,"ninjaY"],[546,70,588,68],[546,87,588,85,"projectile"],[546,97,588,95],[546,98,588,96,"targetX"],[546,105,588,103],[546,110,588,108,"projectile"],[546,120,588,118],[546,121,588,119,"targetY"],[546,128,588,126],[546,131,588,129],[546,132,588,130],[547,6,590,4,"setProjectiles"],[547,20,590,18],[547,21,590,19,"prev"],[547,25,590,23],[547,29,590,27],[547,30,590,28],[547,33,590,31,"prev"],[547,37,590,35],[547,39,590,37,"projectile"],[547,49,590,47],[547,50,590,48],[547,51,590,49],[549,6,592,4],[550,6,593,4,"setTimeout"],[550,16,593,14],[550,17,593,15],[550,23,593,21],[551,8,594,6,"handleProjectileHit"],[551,27,594,25],[551,28,594,26,"projectile"],[551,38,594,36],[551,39,594,37],[552,6,595,4],[552,7,595,5],[552,9,595,7],[552,12,595,10],[552,13,595,11],[553,4,596,2],[553,5,596,3],[555,4,598,2],[556,4,599,2],[556,8,599,8,"spawnTestEnemy"],[556,22,599,22],[556,25,599,26,"state"],[556,30,599,44],[556,34,599,49],[557,6,600,4,"console"],[557,13,600,11],[557,14,600,12,"log"],[557,17,600,15],[557,18,600,16],[557,83,600,81],[557,84,600,82],[559,6,602,4],[560,6,603,4],[560,10,603,10,"zoneEnemy"],[560,19,603,19],[560,22,603,22,"spawnZoneEnemy"],[560,36,603,36],[560,37,603,37],[560,38,603,38],[561,6,604,4],[561,10,604,8],[561,11,604,9,"zoneEnemy"],[561,20,604,18],[561,22,604,20],[562,8,605,6,"console"],[562,15,605,13],[562,16,605,14,"log"],[562,19,605,17],[562,20,605,18],[562,76,605,74],[562,77,605,75],[563,8,606,6],[564,8,607,6,"spawnBasicTestEnemy"],[564,27,607,25],[564,28,607,26,"state"],[564,33,607,31],[564,34,607,32],[565,8,608,6],[566,6,609,4],[567,6,611,4,"console"],[567,13,611,11],[567,14,611,12,"log"],[567,17,611,15],[567,18,611,16],[567,44,611,42,"zoneEnemy"],[567,53,611,51],[567,54,611,52,"name"],[567,58,611,56],[567,63,611,61,"zoneEnemy"],[567,72,611,70],[567,73,611,71,"typeId"],[567,79,611,77],[567,94,611,92,"currentZone"],[567,105,611,103],[567,107,611,105,"id"],[567,109,611,107],[567,119,611,117,"currentZoneLevel"],[567,135,611,133],[567,137,611,135,"level"],[567,142,611,140],[567,144,611,142],[567,145,611,143],[569,6,613,4],[570,6,614,4],[570,10,614,10,"combatEnemy"],[570,21,614,34],[570,24,614,37],[571,8,615,6,"id"],[571,10,615,8],[571,12,615,10,"zoneEnemy"],[571,21,615,19],[571,22,615,20,"id"],[571,24,615,22],[572,8,616,6,"name"],[572,12,616,10],[572,14,616,12,"zoneEnemy"],[572,23,616,21],[572,24,616,22,"name"],[572,28,616,26],[573,8,617,6,"health"],[573,14,617,12],[573,16,617,14,"zoneEnemy"],[573,25,617,23],[573,26,617,24,"hp"],[573,28,617,26],[574,8,618,6,"maxHealth"],[574,17,618,15],[574,19,618,17,"zoneEnemy"],[574,28,618,26],[574,29,618,27,"maxHP"],[574,34,618,32],[575,8,619,6,"stats"],[575,13,619,11],[575,15,619,13],[576,10,620,8,"attack"],[576,16,620,14],[576,18,620,16,"zoneEnemy"],[576,27,620,25],[576,28,620,26,"attack"],[576,34,620,32],[577,10,621,8,"defense"],[577,17,621,15],[577,19,621,17],[577,21,621,19],[578,10,621,21],[579,10,622,8,"health"],[579,16,622,14],[579,18,622,16,"zoneEnemy"],[579,27,622,25],[579,28,622,26,"hp"],[579,30,622,28],[580,10,623,8,"maxHealth"],[580,19,623,17],[580,21,623,19,"zoneEnemy"],[580,30,623,28],[580,31,623,29,"maxHP"],[580,36,623,34],[581,10,624,8,"critChance"],[581,20,624,18],[581,22,624,20],[581,23,624,21],[582,10,625,8,"critDamage"],[582,20,625,18],[582,22,625,20],[582,25,625,23],[583,10,626,8,"cooldownReduction"],[583,27,626,25],[583,29,626,27],[584,8,627,6],[584,9,627,7],[585,8,628,6,"position"],[585,16,628,14],[585,18,628,16,"zoneEnemy"],[585,27,628,25],[585,28,628,26,"position"],[585,36,628,34],[586,8,629,6,"lastDamaged"],[586,19,629,17],[586,21,629,19],[586,22,629,20],[587,8,630,6],[588,8,631,6,"zoneTypeId"],[588,18,631,16],[588,20,631,18,"zoneEnemy"],[588,29,631,27],[588,30,631,28,"typeId"],[588,36,631,34],[589,8,632,6,"zoneXP"],[589,14,632,12],[589,16,632,14,"zoneEnemy"],[589,25,632,23],[589,26,632,24,"xp"],[590,6,633,4],[590,7,633,5],[591,6,635,4,"console"],[591,13,635,11],[591,14,635,12,"log"],[591,17,635,15],[591,18,635,16],[591,42,635,40,"combatEnemy"],[591,53,635,51],[591,54,635,52,"name"],[591,58,635,56],[591,67,635,65,"combatEnemy"],[591,78,635,76],[591,79,635,77,"health"],[591,85,635,83],[591,100,635,98,"currentZone"],[591,111,635,109],[591,113,635,111,"id"],[591,115,635,113],[591,125,635,123,"currentZoneLevel"],[591,141,635,139],[591,143,635,141,"level"],[591,148,635,146],[591,150,635,148],[591,151,635,149],[592,6,636,4,"state"],[592,11,636,9],[592,12,636,10,"enemies"],[592,19,636,17],[592,20,636,18,"push"],[592,24,636,22],[592,25,636,23,"combatEnemy"],[592,36,636,34],[592,37,636,35],[593,4,637,2],[593,5,637,3],[595,4,639,2],[596,4,640,2],[596,8,640,8,"spawnBasicTestEnemy"],[596,27,640,27],[596,30,640,31,"state"],[596,35,640,49],[596,39,640,54],[597,6,641,4],[597,10,641,10,"SCREEN_WIDTH"],[597,22,641,22],[597,25,641,25],[597,28,641,28],[598,6,642,4],[598,10,642,10,"GAME_AREA_HEIGHT"],[598,26,642,26],[598,29,642,29],[598,32,642,32],[598,35,642,35],[598,38,642,38],[599,6,643,4],[599,10,643,10,"ENEMY_SIZE"],[599,20,643,20],[599,23,643,23],[599,25,643,25],[600,6,645,4],[600,10,645,10,"x"],[600,11,645,11],[600,14,645,14,"Math"],[600,18,645,18],[600,19,645,19,"random"],[600,25,645,25],[600,26,645,26],[600,27,645,27],[600,31,645,31,"SCREEN_WIDTH"],[600,43,645,43],[600,46,645,46,"ENEMY_SIZE"],[600,56,645,56],[600,59,645,59],[600,60,645,60],[600,61,645,61],[600,64,645,64,"ENEMY_SIZE"],[600,74,645,74],[601,6,646,4],[601,10,646,10,"y"],[601,11,646,11],[601,14,646,14,"Math"],[601,18,646,18],[601,19,646,19,"random"],[601,25,646,25],[601,26,646,26],[601,27,646,27],[601,31,646,31,"GAME_AREA_HEIGHT"],[601,47,646,47],[601,50,646,50,"ENEMY_SIZE"],[601,60,646,60],[601,63,646,63],[601,64,646,64],[601,65,646,65],[601,68,646,68,"ENEMY_SIZE"],[601,78,646,78],[602,6,648,4],[602,10,648,10,"enemy"],[602,15,648,28],[602,18,648,31],[603,8,649,6,"id"],[603,10,649,8],[603,12,649,10],[603,30,649,28,"Date"],[603,34,649,32],[603,35,649,33,"now"],[603,38,649,36],[603,39,649,37],[603,40,649,38],[603,44,649,42,"Math"],[603,48,649,46],[603,49,649,47,"random"],[603,55,649,53],[603,56,649,54],[603,57,649,55],[603,59,649,57],[604,8,650,6,"name"],[604,12,650,10],[604,14,650,12],[604,26,650,24,"Math"],[604,30,650,28],[604,31,650,29,"floor"],[604,36,650,34],[604,37,650,35,"Math"],[604,41,650,39],[604,42,650,40,"random"],[604,48,650,46],[604,49,650,47],[604,50,650,48],[604,53,650,51],[604,56,650,54],[604,57,650,55],[604,59,650,57],[605,8,651,6,"health"],[605,14,651,12],[605,16,651,14],[605,18,651,16],[606,8,652,6,"maxHealth"],[606,17,652,15],[606,19,652,17],[606,21,652,19],[607,8,653,6,"stats"],[607,13,653,11],[607,15,653,13],[608,10,654,8,"attack"],[608,16,654,14],[608,18,654,16],[608,20,654,18],[609,10,655,8,"defense"],[609,17,655,15],[609,19,655,17],[609,21,655,19],[610,10,656,8,"health"],[610,16,656,14],[610,18,656,16],[610,20,656,18],[611,10,657,8,"maxHealth"],[611,19,657,17],[611,21,657,19],[611,23,657,21],[612,10,658,8,"critChance"],[612,20,658,18],[612,22,658,20],[612,23,658,21],[613,10,659,8,"critDamage"],[613,20,659,18],[613,22,659,20],[613,25,659,23],[614,10,660,8,"cooldownReduction"],[614,27,660,25],[614,29,660,27],[615,8,661,6],[615,9,661,7],[616,8,662,6,"position"],[616,16,662,14],[616,18,662,16],[617,10,662,18,"x"],[617,11,662,19],[618,10,662,21,"y"],[619,8,662,23],[619,9,662,24],[620,8,663,6,"lastDamaged"],[620,19,663,17],[620,21,663,19],[621,6,664,4],[621,7,664,5],[622,6,666,4,"console"],[622,13,666,11],[622,14,666,12,"log"],[622,17,666,15],[622,18,666,16],[622,42,666,40,"enemy"],[622,47,666,45],[622,48,666,46,"name"],[622,52,666,50],[622,60,666,58,"Math"],[622,64,666,62],[622,65,666,63,"round"],[622,70,666,68],[622,71,666,69,"x"],[622,72,666,70],[622,73,666,71],[622,78,666,76,"Math"],[622,82,666,80],[622,83,666,81,"round"],[622,88,666,86],[622,89,666,87,"y"],[622,90,666,88],[622,91,666,89],[622,94,666,92],[622,95,666,93],[623,6,667,4,"state"],[623,11,667,9],[623,12,667,10,"enemies"],[623,19,667,17],[623,20,667,18,"push"],[623,24,667,22],[623,25,667,23,"enemy"],[623,30,667,28],[623,31,667,29],[624,4,668,2],[624,5,668,3],[626,4,670,2],[627,4,671,2],[627,8,671,8,"startCombat"],[627,19,671,19],[627,22,671,22,"React"],[627,27,671,27],[627,28,671,27,"default"],[627,35,671,27],[627,36,671,28,"useCallback"],[627,47,671,39],[627,48,671,40],[627,54,671,46],[628,6,672,4,"console"],[628,13,672,11],[628,14,672,12,"log"],[628,17,672,15],[628,18,672,16],[628,63,672,61],[628,64,672,62],[629,6,673,4,"setCombatState"],[629,20,673,18],[629,21,673,19,"prev"],[629,25,673,23],[629,30,673,28],[630,8,673,30],[630,11,673,33,"prev"],[630,15,673,37],[631,8,673,39,"isInCombat"],[631,18,673,49],[631,20,673,51],[632,6,673,56],[632,7,673,57],[632,8,673,58],[632,9,673,59],[634,6,675,4],[635,6,676,4,"combatEngine"],[635,25,676,16],[635,26,676,16,"combatEngine"],[635,38,676,16],[635,39,676,17,"addTickCallback"],[635,54,676,32],[635,55,676,33,"handleCombatTick"],[635,71,676,49],[635,72,676,50],[636,6,677,4,"console"],[636,13,677,11],[636,14,677,12,"log"],[636,17,677,15],[636,18,677,16],[636,62,677,60],[636,63,677,61],[638,6,679,4],[639,6,680,4,"combatEngine"],[639,25,680,16],[639,26,680,16,"combatEngine"],[639,38,680,16],[639,39,680,17,"start"],[639,44,680,22],[639,45,680,23],[639,46,680,24],[640,4,681,2],[640,5,681,3],[640,7,681,5],[640,8,681,6,"combatEngine"],[640,27,681,18],[640,28,681,18,"combatEngine"],[640,40,681,18],[640,42,681,20,"handleCombatTick"],[640,58,681,36],[640,59,681,37],[640,60,681,38],[642,4,683,2],[643,4,684,2],[643,8,684,8,"stopCombat"],[643,18,684,18],[643,21,684,21,"React"],[643,26,684,26],[643,27,684,26,"default"],[643,34,684,26],[643,35,684,27,"useCallback"],[643,46,684,38],[643,47,684,39],[643,53,684,45],[644,6,685,4,"setCombatState"],[644,20,685,18],[644,21,685,19,"prev"],[644,25,685,23],[644,30,685,28],[645,8,685,30],[645,11,685,33,"prev"],[645,15,685,37],[646,8,685,39,"isInCombat"],[646,18,685,49],[646,20,685,51],[647,6,685,57],[647,7,685,58],[647,8,685,59],[647,9,685,60],[648,6,686,4,"combatEngine"],[648,25,686,16],[648,26,686,16,"combatEngine"],[648,38,686,16],[648,39,686,17,"removeTickCallback"],[648,57,686,35],[648,58,686,36,"handleCombatTick"],[648,74,686,52],[648,75,686,53],[649,4,687,2],[649,5,687,3],[649,7,687,5],[649,8,687,6,"combatEngine"],[649,27,687,18],[649,28,687,18,"combatEngine"],[649,40,687,18],[649,42,687,20,"handleCombatTick"],[649,58,687,36],[649,59,687,37],[649,60,687,38],[651,4,689,2],[652,4,690,2],[652,8,690,8,"equipAbility"],[652,20,690,20],[652,23,690,23,"equipAbility"],[652,24,690,24,"abilityId"],[652,33,690,41],[652,35,690,43,"slotIndex"],[652,44,690,60],[652,49,690,74],[653,6,691,4],[653,13,691,11,"combatState"],[653,24,691,22],[653,25,691,23,"abilityManager"],[653,39,691,37],[653,40,691,38,"equipAbility"],[653,52,691,50],[653,53,691,51,"abilityId"],[653,62,691,60],[653,64,691,62,"slotIndex"],[653,73,691,71],[653,74,691,72],[654,4,692,2],[654,5,692,3],[655,4,694,2],[655,8,694,8,"getDeck"],[655,15,694,15],[655,18,694,18,"getDeck"],[655,19,694,18],[655,24,694,24],[656,6,695,4],[656,13,695,11,"combatState"],[656,24,695,22],[656,25,695,23,"abilityManager"],[656,39,695,37],[656,40,695,38,"getDeck"],[656,47,695,45],[656,48,695,46],[656,49,695,47],[657,4,696,2],[657,5,696,3],[658,4,698,2],[658,8,698,8,"getAvailableAbilities"],[658,29,698,29],[658,32,698,32,"getAvailableAbilities"],[658,33,698,32],[658,38,698,38],[659,6,699,4],[659,13,699,11,"combatState"],[659,24,699,22],[659,25,699,23,"abilityManager"],[659,39,699,37],[659,40,699,38,"getAvailableAbilities"],[659,61,699,59],[659,62,699,60],[659,63,699,61],[660,4,700,2],[660,5,700,3],[661,4,702,2],[661,8,702,8,"upgradeAbility"],[661,22,702,22],[661,25,702,26,"abilityId"],[661,34,702,43],[661,38,702,57],[662,6,703,4],[662,13,703,11,"combatState"],[662,24,703,22],[662,25,703,23,"abilityManager"],[662,39,703,37],[662,40,703,38,"upgradeAbility"],[662,54,703,52],[662,55,703,53,"abilityId"],[662,64,703,62],[662,65,703,63],[663,4,704,2],[663,5,704,3],[665,4,706,2],[666,4,707,2],[666,8,707,8,"clearAllEnemies"],[666,23,707,23],[666,26,707,26,"clearAllEnemies"],[666,27,707,26],[666,32,707,32],[667,6,708,4,"console"],[667,13,708,11],[667,14,708,12,"log"],[667,17,708,15],[667,18,708,16],[667,67,708,65],[667,68,708,66],[668,6,709,4,"setCombatState"],[668,20,709,18],[668,21,709,19,"prev"],[668,25,709,23],[668,30,709,28],[669,8,710,6],[669,11,710,9,"prev"],[669,15,710,13],[670,8,711,6,"enemies"],[670,15,711,13],[670,17,711,15],[671,6,712,4],[671,7,712,5],[671,8,712,6],[671,9,712,7],[672,4,713,2],[672,5,713,3],[674,4,715,2],[675,4,716,2],[675,8,716,8,"triggerLevelUpExplosion"],[675,31,716,31],[675,34,716,34,"triggerLevelUpExplosion"],[675,35,716,34],[675,40,716,40],[676,6,717,4,"console"],[676,13,717,11],[676,14,717,12,"log"],[676,17,717,15],[676,18,717,16],[676,70,717,68],[676,71,717,69],[677,6,719,4],[677,10,719,10,"explosionTime"],[677,23,719,23],[677,26,719,26,"Date"],[677,30,719,30],[677,31,719,31,"now"],[677,34,719,34],[677,35,719,35],[677,36,719,36],[678,6,720,4,"setLastExplosionTime"],[678,26,720,24],[678,27,720,25,"explosionTime"],[678,40,720,38],[678,41,720,39],[679,6,722,4,"setCombatState"],[679,20,722,18],[679,21,722,19,"prev"],[679,25,722,23],[679,29,722,27],[680,8,723,6],[681,8,724,6],[681,12,724,12,"enemyCount"],[681,22,724,22],[681,25,724,25,"prev"],[681,29,724,29],[681,30,724,30,"enemies"],[681,37,724,37],[681,38,724,38,"length"],[681,44,724,44],[682,8,725,6],[682,12,725,12,"explosionXP"],[682,23,725,23],[682,26,725,26,"enemyCount"],[682,36,725,36],[682,39,725,39],[682,42,725,42],[682,43,725,43],[682,44,725,44],[683,8,726,6],[683,12,726,12,"explosionGold"],[683,25,726,25],[683,28,726,28,"enemyCount"],[683,38,726,38],[683,41,726,41],[683,42,726,42],[683,43,726,43],[683,44,726,44],[685,8,728,6,"console"],[685,15,728,13],[685,16,728,14,"log"],[685,19,728,17],[685,20,728,18],[685,44,728,42,"enemyCount"],[685,54,728,52],[685,76,728,74,"explosionXP"],[685,87,728,85],[685,98,728,96,"explosionGold"],[685,111,728,109],[685,118,728,116],[685,119,728,117],[687,8,730,6],[688,8,731,6],[688,12,731,10,"explosionXP"],[688,23,731,21],[688,26,731,24],[688,27,731,25],[688,29,731,27],[689,10,732,8,"setTimeout"],[689,20,732,18],[689,21,732,19],[689,27,732,25],[690,12,733,10,"game"],[690,16,733,14],[690,17,733,15,"updateNinja"],[690,28,733,26],[690,29,733,28,"ninja"],[690,34,733,33],[690,39,733,39],[691,14,734,12,"experience"],[691,24,734,22],[691,26,734,24,"ninja"],[691,31,734,29],[691,32,734,30,"experience"],[691,42,734,40],[691,45,734,43,"explosionXP"],[691,56,734,54],[692,14,735,12,"gold"],[692,18,735,16],[692,20,735,18,"ninja"],[692,25,735,23],[692,26,735,24,"gold"],[692,30,735,28],[692,33,735,31,"explosionGold"],[693,12,736,10],[693,13,736,11],[693,14,736,12],[693,15,736,13],[694,10,737,8],[694,11,737,9],[694,13,737,11],[694,14,737,12],[694,15,737,13],[694,16,737,14],[694,17,737,15],[695,8,738,6],[697,8,740,6],[698,8,741,6],[699,8,742,6],[699,12,742,12,"damagedEnemies"],[699,26,742,26],[699,29,742,29,"prev"],[699,33,742,33],[699,34,742,34,"enemies"],[699,41,742,41],[699,42,742,42,"map"],[699,45,742,45],[699,46,742,46,"enemy"],[699,51,742,51],[699,56,742,56],[700,10,743,8],[700,13,743,11,"enemy"],[700,18,743,16],[701,10,744,8,"health"],[701,16,744,14],[701,18,744,16],[701,19,744,17],[702,10,744,19],[703,10,745,8,"lastDamaged"],[703,21,745,19],[703,23,745,21,"combatEngine"],[703,42,745,33],[703,43,745,33,"combatEngine"],[703,55,745,33],[703,56,745,34,"getCurrentTick"],[703,70,745,48],[703,71,745,49],[704,8,746,6],[704,9,746,7],[704,10,746,8],[704,11,746,9],[705,8,748,6],[705,15,748,13],[706,10,749,8],[706,13,749,11,"prev"],[706,17,749,15],[707,10,750,8,"enemies"],[707,17,750,15],[707,19,750,17,"damagedEnemies"],[708,8,751,6],[708,9,751,7],[709,6,752,4],[709,7,752,5],[709,8,752,6],[710,4,753,2],[710,5,753,3],[712,4,755,2],[713,4,756,2],[713,8,756,8,"spawnEnemy"],[713,18,756,18],[713,21,756,22,"position"],[713,29,756,57],[713,33,756,75],[714,6,757,4],[714,10,757,10,"SCREEN_WIDTH"],[714,22,757,22],[714,25,757,25],[714,28,757,28],[715,6,758,4],[715,10,758,10,"GAME_AREA_HEIGHT"],[715,26,758,26],[715,29,758,29],[715,32,758,32],[715,35,758,35],[715,38,758,38],[715,39,758,39],[715,40,758,40],[716,6,759,4],[716,10,759,10,"ENEMY_SIZE"],[716,20,759,20],[716,23,759,23],[716,25,759,25],[718,6,761,4],[719,6,762,4],[719,10,762,10,"x"],[719,11,762,11],[719,14,762,14,"position"],[719,22,762,22],[719,24,762,24,"x"],[719,25,762,25],[719,29,762,29,"Math"],[719,33,762,33],[719,34,762,34,"random"],[719,40,762,40],[719,41,762,41],[719,42,762,42],[719,46,762,46,"SCREEN_WIDTH"],[719,58,762,58],[719,61,762,61,"ENEMY_SIZE"],[719,71,762,71],[719,74,762,74],[719,75,762,75],[719,76,762,76],[719,79,762,79,"ENEMY_SIZE"],[719,89,762,89],[720,6,763,4],[720,10,763,10,"y"],[720,11,763,11],[720,14,763,14,"position"],[720,22,763,22],[720,24,763,24,"y"],[720,25,763,25],[720,29,763,29,"Math"],[720,33,763,33],[720,34,763,34,"random"],[720,40,763,40],[720,41,763,41],[720,42,763,42],[720,46,763,46,"GAME_AREA_HEIGHT"],[720,62,763,62],[720,65,763,65,"ENEMY_SIZE"],[720,75,763,75],[720,78,763,78],[720,79,763,79],[720,80,763,80],[720,83,763,83,"ENEMY_SIZE"],[720,93,763,93],[721,6,765,4],[721,10,765,10,"enemy"],[721,15,765,28],[721,18,765,31],[722,8,766,6,"id"],[722,10,766,8],[722,12,766,10],[722,21,766,19],[722,23,766,21,"enemyCounter"],[722,35,766,33],[722,37,766,35],[723,8,767,6,"name"],[723,12,767,10],[723,14,767,12],[723,24,767,22],[724,8,768,6,"health"],[724,14,768,12],[724,16,768,14],[724,19,768,17],[725,8,769,6,"maxHealth"],[725,17,769,15],[725,19,769,17],[725,22,769,20],[726,8,770,6,"stats"],[726,13,770,11],[726,15,770,13],[727,10,771,8,"attack"],[727,16,771,14],[727,18,771,16],[727,20,771,18],[728,10,772,8,"defense"],[728,17,772,15],[728,19,772,17],[728,21,772,19],[729,10,773,8,"health"],[729,16,773,14],[729,18,773,16],[729,21,773,19],[730,10,774,8,"maxHealth"],[730,19,774,17],[730,21,774,19],[730,24,774,22],[731,10,775,8,"critChance"],[731,20,775,18],[731,22,775,20],[731,23,775,21],[732,10,776,8,"critDamage"],[732,20,776,18],[732,22,776,20],[732,25,776,23],[733,10,777,8,"cooldownReduction"],[733,27,777,25],[733,29,777,27],[734,8,778,6],[734,9,778,7],[735,8,779,6,"position"],[735,16,779,14],[735,18,779,16],[736,10,779,18,"x"],[736,11,779,19],[737,10,779,21,"y"],[738,8,779,23],[738,9,779,24],[739,8,780,6,"lastDamaged"],[739,19,780,17],[739,21,780,19],[740,6,781,4],[740,7,781,5],[741,6,783,4,"setCombatState"],[741,20,783,18],[741,21,783,19,"prev"],[741,25,783,23],[741,30,783,28],[742,8,784,6],[742,11,784,9,"prev"],[742,15,784,13],[743,8,785,6,"enemies"],[743,15,785,13],[743,17,785,15],[743,18,785,16],[743,21,785,19,"prev"],[743,25,785,23],[743,26,785,24,"enemies"],[743,33,785,31],[743,35,785,33,"enemy"],[743,40,785,38],[744,6,786,4],[744,7,786,5],[744,8,786,6],[744,9,786,7],[745,6,788,4],[745,13,788,11,"enemy"],[745,18,788,16],[746,4,789,2],[746,5,789,3],[748,4,791,2],[749,4,792,2],[749,8,792,8,"spawnBoss"],[749,17,792,17],[749,20,792,21,"bossEnemy"],[749,29,792,43],[749,33,792,48],[750,6,793,4,"console"],[750,13,793,11],[750,14,793,12,"log"],[750,17,793,15],[750,18,793,16],[750,39,793,37,"bossEnemy"],[750,48,793,46],[750,49,793,47,"name"],[750,53,793,51],[750,90,793,88],[750,91,793,89],[751,6,794,4,"setCombatState"],[751,20,794,18],[751,21,794,19,"prev"],[751,25,794,23],[751,30,794,28],[752,8,795,6],[752,11,795,9,"prev"],[752,15,795,13],[753,8,796,6,"enemies"],[753,15,796,13],[753,17,796,15],[753,18,796,16,"bossEnemy"],[753,27,796,25],[753,28,796,26],[753,29,796,27],[754,6,797,4],[754,7,797,5],[754,8,797,6],[754,9,797,7],[755,4,798,2],[755,5,798,3],[757,4,800,2],[758,4,801,2],[758,8,801,8,"clearSpecificEnemy"],[758,26,801,26],[758,29,801,30,"enemyId"],[758,36,801,45],[758,40,801,50],[759,6,802,4,"setCombatState"],[759,20,802,18],[759,21,802,19,"prev"],[759,25,802,23],[759,30,802,28],[760,8,803,6],[760,11,803,9,"prev"],[760,15,803,13],[761,8,804,6,"enemies"],[761,15,804,13],[761,17,804,15,"prev"],[761,21,804,19],[761,22,804,20,"enemies"],[761,29,804,27],[761,30,804,28,"filter"],[761,36,804,34],[761,37,804,35,"enemy"],[761,42,804,40],[761,46,804,44,"enemy"],[761,51,804,49],[761,52,804,50,"id"],[761,54,804,52],[761,59,804,57,"enemyId"],[761,66,804,64],[762,6,805,4],[762,7,805,5],[762,8,805,6],[762,9,805,7],[763,4,806,2],[763,5,806,3],[765,4,808,2],[766,4,809,2],[766,8,809,8,"useAbilityManually"],[766,26,809,26],[766,29,809,26,"_s3"],[766,32,809,26],[766,33,809,29],[766,37,809,29,"useCallback"],[766,43,809,40],[766,44,809,40,"useCallback"],[766,55,809,40],[766,57,809,40,"_s3"],[766,60,809,40],[766,61,809,42,"slotIndex"],[766,70,809,59],[766,74,809,73],[767,6,809,73,"_s3"],[767,9,809,73],[768,6,810,4,"console"],[768,13,810,11],[768,14,810,12,"log"],[768,17,810,15],[768,18,810,16],[768,53,810,51,"slotIndex"],[768,62,810,60],[768,64,810,62],[768,65,810,63],[770,6,812,4],[771,6,813,4],[771,10,813,10,"isReady"],[771,17,813,17],[771,20,813,20,"combatState"],[771,31,813,31],[771,32,813,32,"abilityManager"],[771,46,813,46],[771,47,813,47,"isAbilityReady"],[771,61,813,61],[771,62,813,62,"slotIndex"],[771,71,813,71],[771,72,813,72],[772,6,814,4],[772,10,814,8],[772,11,814,9,"isReady"],[772,18,814,16],[772,20,814,18],[773,8,815,6,"console"],[773,15,815,13],[773,16,815,14,"log"],[773,19,815,17],[773,20,815,18],[773,41,815,39,"slotIndex"],[773,50,815,48],[773,85,815,83],[773,86,815,84],[774,8,816,6],[774,15,816,13],[774,20,816,18],[775,6,817,4],[777,6,819,4],[778,6,820,4],[778,10,820,8,"combatState"],[778,21,820,19],[778,22,820,20,"enemies"],[778,29,820,27],[778,30,820,28,"length"],[778,36,820,34],[778,41,820,39],[778,42,820,40],[778,44,820,42],[779,8,821,6,"console"],[779,15,821,13],[779,16,821,14,"log"],[779,19,821,17],[779,20,821,18],[779,69,821,67],[779,70,821,68],[780,8,822,6],[780,15,822,13],[780,20,822,18],[781,6,823,4],[783,6,825,4],[784,6,826,4],[784,10,826,10,"currentTick"],[784,21,826,21],[784,24,826,24,"combatEngine"],[784,43,826,36],[784,44,826,36,"combatEngine"],[784,56,826,36],[784,57,826,37,"getCurrentTick"],[784,71,826,51],[784,72,826,52],[784,73,826,53],[785,6,827,4],[785,10,827,10,"success"],[785,17,827,17],[785,20,827,20,"combatState"],[785,31,827,31],[785,32,827,32,"abilityManager"],[785,46,827,46],[785,47,827,47,"useAbility"],[785,57,827,57],[785,58,827,58,"slotIndex"],[785,67,827,67],[785,69,827,69,"currentTick"],[785,80,827,80],[785,81,827,81],[786,6,829,4],[786,10,829,8,"success"],[786,17,829,15],[786,19,829,17],[787,8,830,6],[788,8,831,6,"setCombatState"],[788,22,831,20],[788,23,831,21,"prev"],[788,27,831,25],[788,31,831,29],[789,10,832,8],[789,14,832,14,"newState"],[789,22,832,22],[789,25,832,25],[790,12,832,27],[790,15,832,30,"prev"],[791,10,832,35],[791,11,832,36],[792,10,833,8,"castAbility"],[792,21,833,19],[792,22,833,20,"newState"],[792,30,833,28],[792,32,833,30,"slotIndex"],[792,41,833,39],[792,42,833,40],[793,10,834,8],[793,17,834,15,"newState"],[793,25,834,23],[794,8,835,6],[794,9,835,7],[794,10,835,8],[795,8,837,6,"console"],[795,15,837,13],[795,16,837,14,"log"],[795,19,837,17],[795,20,837,18],[795,65,837,63,"slotIndex"],[795,74,837,72],[795,76,837,74],[795,77,837,75],[796,8,838,6],[796,15,838,13],[796,19,838,17],[797,6,839,4],[797,7,839,5],[797,13,839,11],[798,8,840,6,"console"],[798,15,840,13],[798,16,840,14,"log"],[798,19,840,17],[798,20,840,18],[798,61,840,59,"slotIndex"],[798,70,840,68],[798,72,840,70],[798,73,840,71],[799,8,841,6],[799,15,841,13],[799,20,841,18],[800,6,842,4],[801,4,843,2],[801,5,843,3],[801,46,843,5],[801,47,843,6,"combatState"],[801,58,843,17],[801,59,843,18,"abilityManager"],[801,73,843,32],[801,75,843,34,"combatState"],[801,86,843,45],[801,87,843,46,"enemies"],[801,94,843,53],[801,95,843,54],[801,96,843,55],[802,4,844,2],[802,8,844,2,"useEffect"],[802,14,844,11],[802,15,844,11,"useEffect"],[802,24,844,11],[802,26,844,12],[802,32,844,18],[803,6,845,4,"combatEngine"],[803,25,845,16],[803,26,845,16,"combatEngine"],[803,38,845,16],[803,39,845,17,"start"],[803,44,845,22],[803,45,845,23],[803,46,845,24],[805,6,847,4],[806,6,848,4],[807,6,849,4,"console"],[807,13,849,11],[807,14,849,12,"log"],[807,17,849,15],[807,18,849,16],[807,97,849,95],[807,98,849,96],[808,6,851,4],[808,13,851,11],[808,19,851,17],[809,8,852,6,"combatEngine"],[809,27,852,18],[809,28,852,18,"combatEngine"],[809,40,852,18],[809,41,852,19,"stop"],[809,45,852,23],[809,46,852,24],[809,47,852,25],[810,6,853,4],[810,7,853,5],[811,4,854,2],[811,5,854,3],[811,7,854,5],[811,9,854,7],[811,10,854,8],[813,4,856,2],[814,4,857,2],[814,8,857,8,"handleProjectileImpact"],[814,30,857,30],[814,33,857,33],[814,37,857,33,"useCallback"],[814,43,857,44],[814,44,857,44,"useCallback"],[814,55,857,44],[814,57,857,45],[814,58,857,46,"targetEnemyId"],[814,71,857,67],[814,73,857,69,"damage"],[814,79,857,83],[814,81,857,85,"abilityName"],[814,92,857,104],[814,97,857,109],[815,6,858,4,"console"],[815,13,858,11],[815,14,858,12,"log"],[815,17,858,15],[815,18,858,16],[815,43,858,41,"abilityName"],[815,54,858,52],[815,68,858,66,"targetEnemyId"],[815,81,858,79],[815,89,858,87,"damage"],[815,95,858,93],[815,104,858,102],[815,105,858,103],[816,6,860,4,"setCombatState"],[816,20,860,18],[816,21,860,19,"prev"],[816,25,860,23],[816,29,860,27],[817,8,861,6],[817,12,861,12,"newState"],[817,20,861,20],[817,23,861,23],[818,10,861,25],[818,13,861,28,"prev"],[819,8,861,33],[819,9,861,34],[821,8,863,6],[822,8,864,6],[822,12,864,12,"enemyIndex"],[822,22,864,22],[822,25,864,25,"newState"],[822,33,864,33],[822,34,864,34,"enemies"],[822,41,864,41],[822,42,864,42,"findIndex"],[822,51,864,51],[822,52,864,52,"e"],[822,53,864,53],[822,57,864,57,"e"],[822,58,864,58],[822,59,864,59,"id"],[822,61,864,61],[822,66,864,66,"targetEnemyId"],[822,79,864,79],[822,80,864,80],[823,8,865,6],[823,12,865,10,"enemyIndex"],[823,22,865,20],[823,26,865,24],[823,27,865,25],[823,29,865,27],[824,10,866,8,"newState"],[824,18,866,16],[824,19,866,17,"enemies"],[824,26,866,24],[824,29,866,27],[824,30,866,28],[824,33,866,31,"newState"],[824,41,866,39],[824,42,866,40,"enemies"],[824,49,866,47],[824,50,866,48],[825,10,867,8,"newState"],[825,18,867,16],[825,19,867,17,"enemies"],[825,26,867,24],[825,27,867,25,"enemyIndex"],[825,37,867,35],[825,38,867,36],[825,41,867,39],[826,12,868,10],[826,15,868,13,"newState"],[826,23,868,21],[826,24,868,22,"enemies"],[826,31,868,29],[826,32,868,30,"enemyIndex"],[826,42,868,40],[826,43,868,41],[827,12,869,10,"health"],[827,18,869,16],[827,20,869,18,"Math"],[827,24,869,22],[827,25,869,23,"max"],[827,28,869,26],[827,29,869,27],[827,30,869,28],[827,32,869,30,"newState"],[827,40,869,38],[827,41,869,39,"enemies"],[827,48,869,46],[827,49,869,47,"enemyIndex"],[827,59,869,57],[827,60,869,58],[827,61,869,59,"health"],[827,67,869,65],[827,70,869,68,"damage"],[827,76,869,74],[827,77,869,75],[828,12,870,10,"lastDamaged"],[828,23,870,21],[828,25,870,23,"combatEngine"],[828,44,870,35],[828,45,870,35,"combatEngine"],[828,57,870,35],[828,58,870,36,"getCurrentTick"],[828,72,870,50],[828,73,870,51],[829,10,871,8],[829,11,871,9],[830,10,873,8,"console"],[830,17,873,15],[830,18,873,16,"log"],[830,21,873,19],[830,22,873,20],[830,34,873,32,"targetEnemyId"],[830,47,873,45],[830,59,873,57,"newState"],[830,67,873,65],[830,68,873,66,"enemies"],[830,75,873,73],[830,76,873,74,"enemyIndex"],[830,86,873,84],[830,87,873,85],[830,88,873,86,"health"],[830,94,873,92],[830,98,873,96,"newState"],[830,106,873,104],[830,107,873,105,"enemies"],[830,114,873,112],[830,115,873,113,"enemyIndex"],[830,125,873,123],[830,126,873,124],[830,127,873,125,"maxHealth"],[830,136,873,134],[830,146,873,144,"abilityName"],[830,157,873,155],[830,166,873,164],[830,167,873,165],[831,8,874,6],[831,9,874,7],[831,15,874,13],[832,10,875,8,"console"],[832,17,875,15],[832,18,875,16,"log"],[832,21,875,19],[832,22,875,20],[832,33,875,31,"targetEnemyId"],[832,46,875,44],[832,80,875,78],[832,81,875,79],[833,8,876,6],[834,8,878,6],[834,15,878,13,"newState"],[834,23,878,21],[835,6,879,4],[835,7,879,5],[835,8,879,6],[836,4,880,2],[836,5,880,3],[836,7,880,5],[836,9,880,7],[836,10,880,8],[838,4,882,2],[839,4,883,2],[839,8,883,8,"saveAbilityData"],[839,23,883,23],[839,26,883,26],[839,30,883,26,"useCallback"],[839,36,883,37],[839,37,883,37,"useCallback"],[839,48,883,37],[839,50,883,38],[839,56,883,44],[840,6,884,4],[840,10,884,8,"combatState"],[840,21,884,19],[840,22,884,20,"abilityManager"],[840,36,884,34],[840,38,884,36],[841,8,885,6],[841,12,885,12,"abilityData"],[841,23,885,23],[841,26,885,26,"combatState"],[841,37,885,37],[841,38,885,38,"abilityManager"],[841,52,885,52],[841,53,885,53,"getSaveData"],[841,64,885,64],[841,65,885,65],[841,66,885,66],[842,8,886,6,"console"],[842,15,886,13],[842,16,886,14,"log"],[842,19,886,17],[842,20,886,18],[842,70,886,68],[842,72,886,70,"abilityData"],[842,83,886,81],[842,84,886,82],[843,8,887,6,"game"],[843,12,887,10],[843,13,887,11,"updateAbilityData"],[843,30,887,28],[843,31,887,29,"abilityData"],[843,42,887,40],[843,43,887,41],[844,6,888,4],[845,4,889,2],[845,5,889,3],[845,7,889,5],[845,8,889,6,"combatState"],[845,19,889,17],[845,20,889,18,"abilityManager"],[845,34,889,32],[845,36,889,34,"game"],[845,40,889,38],[845,41,889,39,"updateAbilityData"],[845,58,889,56],[845,59,889,57],[845,60,889,58],[846,4,891,2],[846,8,891,8,"contextValue"],[846,20,891,39],[846,23,891,42,"React"],[846,28,891,47],[846,29,891,47,"default"],[846,36,891,47],[846,37,891,48,"useMemo"],[846,44,891,55],[846,45,891,56],[846,52,891,63],[847,6,892,4,"combatState"],[847,17,892,15],[848,6,893,4,"projectiles"],[848,17,893,15],[849,6,894,4,"startCombat"],[849,17,894,15],[850,6,895,4,"stopCombat"],[850,16,895,14],[851,6,896,4,"equipAbility"],[851,18,896,16],[852,6,897,4,"handleEnemyKill"],[852,21,897,19],[853,6,898,4,"getDeck"],[853,13,898,11],[854,6,899,4,"getAvailableAbilities"],[854,27,899,25],[855,6,900,4,"upgradeAbility"],[855,20,900,18],[856,6,901,4,"spawnEnemy"],[856,16,901,14],[857,6,902,4,"spawnBoss"],[857,15,902,13],[858,6,903,4,"clearAllEnemies"],[858,21,903,19],[859,6,904,4,"clearSpecificEnemy"],[859,24,904,22],[860,6,905,4,"triggerLevelUpExplosion"],[860,29,905,27],[861,6,906,4,"findClosestEnemy"],[861,22,906,20],[862,6,907,4,"updateNinjaPosition"],[862,25,907,23],[863,6,908,4,"setManualControlActive"],[863,28,908,26],[864,6,909,4,"lastExplosionTime"],[864,23,909,21],[865,6,910,4,"useAbilityManually"],[865,24,910,22],[866,6,910,24],[867,6,911,4,"saveAbilityData"],[867,21,911,19],[868,6,911,21],[869,6,912,4,"shadowClone"],[869,17,912,15],[869,19,912,17,"combatState"],[869,30,912,28],[869,31,912,29,"shadowClone"],[869,42,912,40],[870,6,912,42],[871,6,913,4,"handleProjectileImpact"],[871,28,913,26],[871,29,913,28],[872,4,914,2],[872,5,914,3],[872,6,914,4],[872,8,914,6],[873,4,915,4],[874,4,916,4],[875,4,917,4,"combatState"],[875,15,917,15],[875,17,918,4,"projectiles"],[875,28,918,15],[875,30,919,4,"lastExplosionTime"],[875,47,919,21],[876,4,920,4],[877,4,921,4,"combatState"],[877,15,921,15],[877,16,921,16,"abilityManager"],[877,30,921,30],[877,32,922,4,"combatState"],[877,43,922,15],[877,44,922,16,"enemies"],[877,51,922,23],[877,53,923,4,"combatState"],[877,64,923,15],[877,65,923,16,"shadowClone"],[877,76,923,27],[878,4,923,29],[879,4,924,4,"useAbilityManually"],[879,22,924,22],[880,4,924,24],[881,4,925,4,"saveAbilityData"],[881,19,925,19],[882,4,925,21],[883,4,926,4,"handleProjectileImpact"],[883,26,926,26],[883,27,926,28],[884,4,926,28],[884,5,927,3],[884,6,927,4],[885,4,929,2],[885,24,930,4],[885,28,930,4,"_reactJsxDevRuntime"],[885,47,930,4],[885,48,930,4,"jsxDEV"],[885,54,930,4],[885,56,930,5,"CombatContext"],[885,69,930,18],[885,70,930,19,"Provider"],[885,78,930,27],[886,6,930,28,"value"],[886,11,930,33],[886,13,930,35,"contextValue"],[886,25,930,48],[887,6,930,48,"children"],[887,14,930,48],[887,16,931,7,"children"],[888,4,931,15],[889,6,931,15,"fileName"],[889,14,931,15],[889,16,931,15,"_jsxFileName"],[889,28,931,15],[890,6,931,15,"lineNumber"],[890,16,931,15],[891,6,931,15,"columnNumber"],[891,18,931,15],[892,4,931,15],[892,11,932,28],[892,12,932,29],[893,2,934,0],[893,3,934,1],[894,2,934,2,"_s4"],[894,5,934,2],[894,6,100,13,"CombatProvider"],[894,20,100,27],[895,4,100,27],[895,12,101,15,"useGame"],[895,24,101,22],[895,25,101,22,"useGame"],[895,32,101,22],[895,34,102,77,"useZone"],[895,46,102,84],[895,47,102,84,"useZone"],[895,54,102,84],[896,2,102,84],[897,2,102,84,"_c"],[897,4,102,84],[897,7,100,13,"CombatProvider"],[897,21,100,27],[898,2,100,27],[898,6,100,27,"_c"],[898,8,100,27],[899,2,100,27,"$RefreshReg$"],[899,14,100,27],[899,15,100,27,"_c"],[899,17,100,27],[900,0,100,27],[900,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;6CgDG;mB9CG;oDMI,2BN;K8Ce;GhDC;sCiDG;GjDM;wDkDE;IlDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}