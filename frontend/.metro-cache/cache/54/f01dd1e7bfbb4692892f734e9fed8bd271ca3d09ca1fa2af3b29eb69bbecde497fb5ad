{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":767,"map":[[15,2,80,0,"Object"],[15,8,80,0],[15,9,80,0,"defineProperty"],[15,23,80,0],[15,24,80,0,"exports"],[15,31,80,0],[16,4,80,0,"enumerable"],[16,14,80,0],[17,4,80,0,"get"],[17,7,80,0],[17,18,80,0,"get"],[17,19,80,0],[18,6,80,0],[18,13,80,0,"useCombat"],[18,22,80,0],[19,4,80,0],[20,2,80,0],[21,2,90,0,"Object"],[21,8,90,0],[21,9,90,0,"defineProperty"],[21,23,90,0],[21,24,90,0,"exports"],[21,31,90,0],[22,4,90,0,"enumerable"],[22,14,90,0],[23,4,90,0,"get"],[23,7,90,0],[23,18,90,0,"get"],[23,19,90,0],[24,6,90,0],[24,13,90,0,"CombatProvider"],[24,27,90,0],[25,4,90,0],[26,2,90,0],[27,2,783,2],[27,6,783,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,783,2],[27,42,783,2,"require"],[27,49,783,2],[27,50,783,2,"_dependencyMap"],[27,64,783,2],[28,2,783,2],[28,6,783,2,"_slicedToArray"],[28,20,783,2],[28,23,783,2,"_interopDefault"],[28,38,783,2],[28,39,783,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,783,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,78,0],[37,6,78,6,"CombatContext"],[37,19,78,19],[37,35,78,22],[37,39,78,22,"createContext"],[37,45,78,35],[37,46,78,35,"createContext"],[37,59,78,35],[37,61,78,67,"undefined"],[37,70,78,76],[37,71,78,77],[38,2,80,7],[38,6,80,13,"useCombat"],[38,15,80,22],[38,18,80,25,"useCombat"],[38,19,80,25],[38,24,80,50],[39,4,80,50,"_s"],[39,6,80,50],[40,4,81,2],[40,8,81,8,"context"],[40,15,81,15],[40,18,81,18],[40,22,81,18,"useContext"],[40,28,81,28],[40,29,81,28,"useContext"],[40,39,81,28],[40,41,81,29,"CombatContext"],[40,54,81,42],[40,55,81,43],[41,4,82,2],[41,8,82,6],[41,9,82,7,"context"],[41,16,82,14],[41,18,82,16],[42,6,83,4],[42,12,83,10],[42,16,83,14,"Error"],[42,21,83,19],[42,22,83,20],[42,70,83,68],[42,71,83,69],[43,4,84,2],[44,4,85,2],[44,11,85,9,"context"],[44,18,85,16],[45,2,86,0],[45,3,86,1],[46,2,86,2,"_s"],[46,4,86,2],[46,5,80,13,"useCombat"],[46,14,80,22],[47,2,88,0],[47,6,88,4,"enemyCounter"],[47,18,88,16],[47,21,88,19],[47,22,88,20],[47,23,88,21],[47,24,88,22],[49,2,90,7],[49,6,90,13,"CombatProvider"],[49,20,90,27],[49,23,90,30,"_ref"],[49,27,90,30],[49,31,90,73],[50,4,90,73,"_s4"],[50,7,90,73],[51,4,90,73],[51,8,90,73,"_s3"],[51,11,90,73],[51,14,90,73,"$RefreshSig$"],[51,26,90,73],[52,4,90,73],[52,8,90,33,"children"],[52,16,90,41],[52,19,90,41,"_ref"],[52,23,90,41],[52,24,90,33,"children"],[52,32,90,41],[53,4,91,2],[53,8,91,8,"game"],[53,12,91,12],[53,15,91,15],[53,19,91,15,"useGame"],[53,31,91,22],[53,32,91,22,"useGame"],[53,39,91,22],[53,41,91,23],[53,42,91,24],[54,4,92,2],[54,8,92,2,"_useZone"],[54,16,92,2],[54,19,92,77],[54,23,92,77,"useZone"],[54,35,92,84],[54,36,92,84,"useZone"],[54,43,92,84],[54,45,92,85],[54,46,92,86],[55,6,92,10,"currentZone"],[55,17,92,21],[55,20,92,21,"_useZone"],[55,28,92,21],[55,29,92,10,"currentZone"],[55,40,92,21],[56,6,92,23,"currentZoneLevel"],[56,22,92,39],[56,25,92,39,"_useZone"],[56,33,92,39],[56,34,92,23,"currentZoneLevel"],[56,50,92,39],[57,6,92,41,"recordEnemyKill"],[57,21,92,56],[57,24,92,56,"_useZone"],[57,32,92,56],[57,33,92,41,"recordEnemyKill"],[57,48,92,56],[58,6,92,58,"spawnZoneEnemy"],[58,20,92,72],[58,23,92,72,"_useZone"],[58,31,92,72],[58,32,92,58,"spawnZoneEnemy"],[58,46,92,72],[60,4,94,2],[61,4,95,2],[61,8,95,8,"initialCombatState"],[61,26,95,39],[61,29,95,42],[62,6,96,4,"isInCombat"],[62,16,96,14],[62,18,96,16],[62,23,96,21],[63,6,97,4,"currentTick"],[63,17,97,15],[63,19,97,17],[63,20,97,18],[64,6,98,4,"enemies"],[64,13,98,11],[64,15,98,13],[64,17,98,15],[65,6,99,4,"abilityManager"],[65,20,99,18],[65,22,99,20],[65,26,99,24,"AbilityManager"],[65,44,99,38],[65,45,99,38,"AbilityManager"],[65,59,99,38],[65,60,99,39],[65,61,99,40],[66,6,100,4,"statusEffects"],[66,19,100,17],[66,21,100,19],[66,25,100,23,"StatusEffectManager"],[66,44,100,42],[66,45,100,42,"StatusEffectManager"],[66,64,100,42],[66,65,100,43],[66,66,100,44],[67,6,101,4,"playerStats"],[67,17,101,15],[67,19,101,17],[68,8,102,6,"attack"],[68,14,102,12],[68,16,102,14],[68,18,102,16],[69,8,102,18],[70,8,103,6,"defense"],[70,15,103,13],[70,17,103,15],[70,18,103,16],[71,8,104,6,"health"],[71,14,104,12],[71,16,104,14],[71,19,104,17],[72,8,105,6,"maxHealth"],[72,17,105,15],[72,19,105,17],[72,22,105,20],[73,8,106,6,"critChance"],[73,18,106,16],[73,20,106,18],[73,21,106,19],[74,8,107,6,"critDamage"],[74,18,107,16],[74,20,107,18],[74,23,107,21],[75,8,108,6,"cooldownReduction"],[75,25,108,23],[75,27,108,25],[76,6,109,4],[77,4,110,2],[77,5,110,3],[78,4,112,2],[78,8,112,2,"_useState"],[78,17,112,2],[78,20,112,40],[78,24,112,40,"useState"],[78,30,112,48],[78,31,112,48,"useState"],[78,39,112,48],[78,41,112,62,"initialCombatState"],[78,59,112,80],[78,60,112,81],[79,6,112,81,"_useState2"],[79,16,112,81],[79,23,112,81,"_slicedToArray"],[79,37,112,81],[79,38,112,81,"default"],[79,45,112,81],[79,47,112,81,"_useState"],[79,56,112,81],[80,6,112,9,"combatState"],[80,17,112,20],[80,20,112,20,"_useState2"],[80,30,112,20],[81,6,112,22,"setCombatState"],[81,20,112,36],[81,23,112,36,"_useState2"],[81,33,112,36],[83,4,114,2],[84,4,115,2],[84,8,115,2,"useEffect"],[84,14,115,11],[84,15,115,11,"useEffect"],[84,24,115,11],[84,26,115,12],[84,32,115,18],[85,6,116,4],[85,10,116,8,"game"],[85,14,116,12],[85,15,116,13,"gameState"],[85,24,116,22],[85,25,116,23,"abilityData"],[85,36,116,34],[85,40,116,38,"combatState"],[85,51,116,49],[85,52,116,50,"abilityManager"],[85,66,116,64],[85,68,116,66],[86,8,117,6,"console"],[86,15,117,13],[86,16,117,14,"log"],[86,19,117,17],[86,20,117,18],[86,68,117,66],[86,70,117,68,"game"],[86,74,117,72],[86,75,117,73,"gameState"],[86,84,117,82],[86,85,117,83,"abilityData"],[86,96,117,94],[86,97,117,95],[87,8,118,6,"combatState"],[87,19,118,17],[87,20,118,18,"abilityManager"],[87,34,118,32],[87,35,118,33,"restoreFromSaveData"],[87,54,118,52],[87,55,118,53,"game"],[87,59,118,57],[87,60,118,58,"gameState"],[87,69,118,67],[87,70,118,68,"abilityData"],[87,81,118,79],[87,82,118,80],[89,8,120,6],[90,8,121,6,"setCombatState"],[90,22,121,20],[90,23,121,21,"prev"],[90,27,121,25],[90,32,121,30],[91,10,121,32],[91,13,121,35,"prev"],[92,8,121,40],[92,9,121,41],[92,10,121,42],[92,11,121,43],[93,6,122,4],[94,4,123,2],[94,5,123,3],[94,7,123,5],[94,8,123,6,"game"],[94,12,123,10],[94,13,123,11,"gameState"],[94,22,123,20],[94,23,123,21,"abilityData"],[94,34,123,32],[94,36,123,34,"combatState"],[94,47,123,45],[94,48,123,46,"abilityManager"],[94,62,123,60],[94,63,123,61],[94,64,123,62],[95,4,125,2],[95,8,125,2,"_useState3"],[95,18,125,2],[95,21,125,40],[95,25,125,40,"useState"],[95,31,125,48],[95,32,125,48,"useState"],[95,40,125,48],[95,42,125,69],[95,44,125,71],[95,45,125,72],[96,6,125,72,"_useState4"],[96,16,125,72],[96,23,125,72,"_slicedToArray"],[96,37,125,72],[96,38,125,72,"default"],[96,45,125,72],[96,47,125,72,"_useState3"],[96,57,125,72],[97,6,125,9,"projectiles"],[97,17,125,20],[97,20,125,20,"_useState4"],[97,30,125,20],[98,6,125,22,"setProjectiles"],[98,20,125,36],[98,23,125,36,"_useState4"],[98,33,125,36],[99,4,126,2],[99,8,126,2,"_useState5"],[99,18,126,2],[99,21,126,52],[99,25,126,52,"useState"],[99,31,126,60],[99,32,126,60,"useState"],[99,40,126,60],[99,42,126,69],[99,43,126,70],[99,44,126,71],[100,6,126,71,"_useState6"],[100,16,126,71],[100,23,126,71,"_slicedToArray"],[100,37,126,71],[100,38,126,71,"default"],[100,45,126,71],[100,47,126,71,"_useState5"],[100,57,126,71],[101,6,126,9,"lastExplosionTime"],[101,23,126,26],[101,26,126,26,"_useState6"],[101,36,126,26],[102,6,126,28,"setLastExplosionTime"],[102,26,126,48],[102,29,126,48,"_useState6"],[102,39,126,48],[103,4,127,2],[104,4,128,2],[106,4,130,2],[107,4,131,2],[107,8,131,8,"handleEnemyKill"],[107,23,131,23],[107,26,131,26],[107,30,131,26,"useCallback"],[107,36,131,37],[107,37,131,37,"useCallback"],[107,48,131,37],[107,50,131,39,"enemy"],[107,55,131,57],[107,59,131,62],[108,6,132,4,"console"],[108,13,132,11],[108,14,132,12,"log"],[108,17,132,15],[108,18,132,16],[108,73,132,71],[108,75,132,73,"enemy"],[108,80,132,78],[108,81,132,79,"id"],[108,83,132,81],[108,84,132,82],[110,6,134,4],[111,6,135,4],[111,10,135,10,"xpReward"],[111,18,135,18],[111,21,135,21],[111,23,135,23],[111,24,135,24],[111,25,135,25],[112,6,136,4],[112,10,136,10,"goldReward"],[112,20,136,20],[112,23,136,23],[112,25,136,25],[113,6,138,4,"console"],[113,13,138,11],[113,14,138,12,"log"],[113,17,138,15],[113,18,138,16],[113,48,138,46,"xpReward"],[113,56,138,54],[113,67,138,65,"goldReward"],[113,77,138,75],[113,93,138,91],[113,94,138,92],[114,6,139,4,"console"],[114,13,139,11],[114,14,139,12,"log"],[114,17,139,15],[114,18,139,16],[114,49,139,47,"Platform"],[114,61,139,55],[114,62,139,55,"Platform"],[114,70,139,55],[114,71,139,56,"OS"],[114,73,139,58],[114,84,139,69,"Date"],[114,88,139,73],[114,89,139,74,"now"],[114,92,139,77],[114,93,139,78],[114,94,139,79],[114,96,139,81],[114,97,139,82],[116,6,141,4],[117,6,142,4],[118,6,143,4,"setTimeout"],[118,16,143,14],[118,17,143,15],[118,23,143,21],[119,8,144,6,"console"],[119,15,144,13],[119,16,144,14,"log"],[119,19,144,17],[119,20,144,18],[119,78,144,76],[119,79,144,77],[121,8,146,6],[122,8,147,6,"game"],[122,12,147,10],[122,13,147,11,"updateNinja"],[122,24,147,22],[122,25,147,24,"prev"],[122,29,147,28],[122,33,147,33],[123,10,148,8,"console"],[123,17,148,15],[123,18,148,16,"log"],[123,21,148,19],[123,22,148,20],[123,54,148,52,"prev"],[123,58,148,56],[123,59,148,57,"experience"],[123,69,148,67],[123,81,148,79,"prev"],[123,85,148,83],[123,86,148,84,"experience"],[123,96,148,94],[123,99,148,97,"xpReward"],[123,107,148,105],[123,109,148,107],[123,110,148,108],[124,10,149,8,"console"],[124,17,149,15],[124,18,149,16,"log"],[124,21,149,19],[124,22,149,20],[124,56,149,54,"prev"],[124,60,149,58],[124,61,149,59,"gold"],[124,65,149,63],[124,77,149,75,"prev"],[124,81,149,79],[124,82,149,80,"gold"],[124,86,149,84],[124,89,149,87,"goldReward"],[124,99,149,97],[124,101,149,99],[124,102,149,100],[125,10,150,8],[125,17,150,15],[126,12,151,10,"experience"],[126,22,151,20],[126,24,151,22,"prev"],[126,28,151,26],[126,29,151,27,"experience"],[126,39,151,37],[126,42,151,40,"xpReward"],[126,50,151,48],[127,12,152,10,"gold"],[127,16,152,14],[127,18,152,16,"prev"],[127,22,152,20],[127,23,152,21,"gold"],[127,27,152,25],[127,30,152,28,"goldReward"],[128,10,153,8],[128,11,153,9],[129,8,154,6],[129,9,154,7],[129,10,154,8],[131,8,156,6],[132,8,157,6],[132,12,157,12,"zoneEnemy"],[132,21,157,21],[132,24,157,24],[133,10,158,8,"id"],[133,12,158,10],[133,14,158,12,"enemy"],[133,19,158,17],[133,20,158,18,"id"],[133,22,158,20],[134,10,159,8,"typeId"],[134,16,159,14],[134,18,159,16,"enemy"],[134,23,159,21],[134,24,159,22,"zoneTypeId"],[134,34,159,32],[134,38,159,36],[134,48,159,46],[135,10,159,48],[136,10,160,8,"name"],[136,14,160,12],[136,16,160,14,"enemy"],[136,21,160,19],[136,22,160,20,"name"],[136,26,160,24],[137,10,161,8,"icon"],[137,14,161,12],[137,16,161,14],[137,20,161,18],[138,10,161,20],[139,10,162,8,"hp"],[139,12,162,10],[139,14,162,12],[139,15,162,13],[140,10,162,15],[141,10,163,8,"maxHP"],[141,15,163,13],[141,17,163,15,"enemy"],[141,22,163,20],[141,23,163,21,"maxHealth"],[141,32,163,30],[142,10,164,8,"attack"],[142,16,164,14],[142,18,164,16,"enemy"],[142,23,164,21],[142,24,164,22,"stats"],[142,29,164,27],[142,30,164,28,"attack"],[142,36,164,34],[143,10,165,8,"xp"],[143,12,165,10],[143,14,165,12,"enemy"],[143,19,165,17],[143,20,165,18,"zoneXP"],[143,26,165,24],[143,30,165,28],[143,32,165,30],[144,10,165,32],[145,10,166,8,"position"],[145,18,166,16],[145,20,166,18,"enemy"],[145,25,166,23],[145,26,166,24,"position"],[146,8,167,6],[146,9,167,7],[147,8,169,6,"console"],[147,15,169,13],[147,16,169,14,"log"],[147,19,169,17],[147,20,169,18],[147,40,169,38,"zoneEnemy"],[147,49,169,47],[147,50,169,48,"name"],[147,54,169,52],[147,59,169,57,"zoneEnemy"],[147,68,169,66],[147,69,169,67,"typeId"],[147,75,169,73],[147,113,169,111],[147,114,169,112],[148,8,170,6,"recordEnemyKill"],[148,23,170,21],[148,24,170,22,"zoneEnemy"],[148,33,170,31],[148,34,170,32],[149,6,171,4],[149,7,171,5],[149,9,171,7],[149,10,171,8],[149,11,171,9],[149,12,171,10],[149,13,171,11],[150,4,172,2],[150,5,172,3],[150,7,172,5],[150,8,172,6,"game"],[150,12,172,10],[150,13,172,11,"updateNinja"],[150,24,172,22],[150,26,172,24,"recordEnemyKill"],[150,41,172,39],[150,42,172,40],[150,43,172,41],[152,4,174,2],[153,4,175,2],[153,8,175,8,"handleCombatTick"],[153,24,175,24],[153,27,175,27,"React"],[153,32,175,32],[153,33,175,32,"default"],[153,40,175,32],[153,41,175,33,"useCallback"],[153,52,175,44],[153,53,175,45],[153,59,175,51],[154,6,175,51],[154,10,175,51,"_s2"],[154,13,175,51],[154,16,175,51,"$RefreshSig$"],[154,28,175,51],[155,6,176,4,"console"],[155,13,176,11],[155,14,176,12,"log"],[155,17,176,15],[155,18,176,16],[155,87,176,85],[155,88,176,86],[156,6,178,4],[156,10,178,8,"enemiesToKill"],[156,23,178,36],[156,26,178,39],[156,28,178,41],[156,29,178,42],[156,30,178,43],[158,6,180,4,"_s2"],[158,9,180,4],[158,10,180,4,"setCombatState"],[158,24,180,18],[158,25,180,18,"_s2"],[158,28,180,18],[158,29,180,19,"prev"],[158,33,180,23],[158,37,180,27],[159,8,180,27,"_s2"],[159,11,180,27],[160,8,181,6],[160,12,181,12,"newTick"],[160,19,181,19],[160,22,181,22,"combatEngine"],[160,41,181,34],[160,42,181,34,"combatEngine"],[160,54,181,34],[160,55,181,35,"getCurrentTick"],[160,69,181,49],[160,70,181,50],[160,71,181,51],[161,8,182,6],[161,12,182,12,"newState"],[161,20,182,20],[161,23,182,23],[162,10,182,25],[162,13,182,28,"prev"],[162,17,182,32],[163,10,182,34,"currentTick"],[163,21,182,45],[163,23,182,47,"newTick"],[164,8,182,55],[164,9,182,56],[165,8,184,6],[165,12,184,10],[165,13,184,11,"newState"],[165,21,184,19],[165,22,184,20,"isInCombat"],[165,32,184,30],[165,34,184,32],[165,41,184,39,"newState"],[165,49,184,47],[167,8,186,6],[168,8,187,6,"newState"],[168,16,187,14],[168,17,187,15,"abilityManager"],[168,31,187,29],[168,32,187,30,"updateCooldowns"],[168,47,187,45],[168,48,187,46,"newTick"],[168,55,187,53],[168,56,187,54],[170,8,189,6],[171,8,190,6],[171,12,190,12,"effectResults"],[171,25,190,25],[171,28,190,28,"newState"],[171,36,190,36],[171,37,190,37,"statusEffects"],[171,50,190,50],[171,51,190,51,"processTick"],[171,62,190,62],[171,63,190,63,"newTick"],[171,70,190,70],[171,71,190,71],[173,8,192,6],[174,8,193,6,"effectResults"],[174,21,193,19],[174,22,193,20,"forEach"],[174,29,193,27],[174,30,193,28],[174,31,193,29,"results"],[174,38,193,36],[174,40,193,38,"entityId"],[174,48,193,46],[174,53,193,51],[175,10,194,8],[175,14,194,14,"enemyIndex"],[175,24,194,24],[175,27,194,27,"newState"],[175,35,194,35],[175,36,194,36,"enemies"],[175,43,194,43],[175,44,194,44,"findIndex"],[175,53,194,53],[175,54,194,54,"e"],[175,55,194,55],[175,59,194,59,"e"],[175,60,194,60],[175,61,194,61,"id"],[175,63,194,63],[175,68,194,68,"entityId"],[175,76,194,76],[175,77,194,77],[176,10,195,8],[176,14,195,12,"enemyIndex"],[176,24,195,22],[176,28,195,26],[176,29,195,27],[176,31,195,29],[177,12,196,10,"results"],[177,19,196,17],[177,20,196,18,"forEach"],[177,27,196,25],[177,28,196,26,"result"],[177,34,196,32],[177,38,196,36],[178,14,197,12,"newState"],[178,22,197,20],[178,23,197,21,"enemies"],[178,30,197,28],[178,31,197,29,"enemyIndex"],[178,41,197,39],[178,42,197,40],[178,43,197,41,"health"],[178,49,197,47],[178,53,197,51,"result"],[178,59,197,57],[178,60,197,58,"damage"],[178,66,197,64],[179,14,198,12,"newState"],[179,22,198,20],[179,23,198,21,"enemies"],[179,30,198,28],[179,31,198,29,"enemyIndex"],[179,41,198,39],[179,42,198,40],[179,43,198,41,"lastDamaged"],[179,54,198,52],[179,57,198,55,"newTick"],[179,64,198,62],[180,12,199,10],[180,13,199,11],[180,14,199,12],[181,10,200,8],[182,8,201,6],[182,9,201,7],[182,10,201,8],[184,8,203,6],[185,8,204,6,"newState"],[185,16,204,14],[185,17,204,15,"enemies"],[185,24,204,22],[185,25,204,23,"forEach"],[185,32,204,30],[185,33,204,31,"enemy"],[185,38,204,36],[185,42,204,40],[186,10,205,8],[186,14,205,12],[186,15,205,13,"enemy"],[186,20,205,18],[186,21,205,19,"isBoss"],[186,27,205,25],[186,29,205,27],[187,12,205,29],[188,12,206,10],[189,12,207,10],[189,16,207,16,"MOVEMENT_SPEED"],[189,30,207,30],[189,33,207,33],[189,37,207,37],[189,38,207,38],[189,39,207,39],[190,12,208,10],[190,16,208,16,"SCREEN_WIDTH"],[190,28,208,28],[190,31,208,31],[190,34,208,34],[191,12,209,10],[191,16,209,16,"GAME_AREA_HEIGHT"],[191,32,209,32],[191,35,209,35],[191,38,209,38],[191,39,209,39],[191,40,209,40],[192,12,210,10],[192,16,210,16,"ENEMY_SIZE"],[192,26,210,26],[192,29,210,29],[192,31,210,31],[194,12,212,10],[195,12,213,10],[195,16,213,16,"playerX"],[195,23,213,23],[195,26,213,26,"currentNinjaPosition"],[195,46,213,46],[195,47,213,47,"x"],[195,48,213,48],[196,12,214,10],[196,16,214,16,"playerY"],[196,23,214,23],[196,26,214,26,"currentNinjaPosition"],[196,46,214,46],[196,47,214,47,"y"],[196,48,214,48],[198,12,216,10],[199,12,217,10],[199,16,217,16,"deltaX"],[199,22,217,22],[199,25,217,25,"playerX"],[199,32,217,32],[199,35,217,35,"enemy"],[199,40,217,40],[199,41,217,41,"position"],[199,49,217,49],[199,50,217,50,"x"],[199,51,217,51],[200,12,218,10],[200,16,218,16,"deltaY"],[200,22,218,22],[200,25,218,25,"playerY"],[200,32,218,32],[200,35,218,35,"enemy"],[200,40,218,40],[200,41,218,41,"position"],[200,49,218,49],[200,50,218,50,"y"],[200,51,218,51],[201,12,219,10],[201,16,219,16,"distance"],[201,24,219,24],[201,27,219,27,"Math"],[201,31,219,31],[201,32,219,32,"sqrt"],[201,36,219,36],[201,37,219,37,"deltaX"],[201,43,219,43],[201,46,219,46,"deltaX"],[201,52,219,52],[201,55,219,55,"deltaY"],[201,61,219,61],[201,64,219,64,"deltaY"],[201,70,219,70],[201,71,219,71],[203,12,221,10],[204,12,222,10],[204,16,222,14,"distance"],[204,24,222,22],[204,27,222,25],[204,29,222,27],[204,31,222,29],[205,14,223,12],[206,14,224,12],[206,18,224,18,"normalizedX"],[206,29,224,29],[206,32,224,32,"deltaX"],[206,38,224,38],[206,41,224,41,"distance"],[206,49,224,49],[207,14,225,12],[207,18,225,18,"normalizedY"],[207,29,225,29],[207,32,225,32,"deltaY"],[207,38,225,38],[207,41,225,41,"distance"],[207,49,225,49],[209,14,227,12],[210,14,228,12],[210,18,228,18,"randomFactor"],[210,30,228,30],[210,33,228,33],[210,36,228,36],[210,37,228,37],[210,38,228,38],[211,14,229,12],[211,18,229,18,"finalX"],[211,24,229,24],[211,27,229,27,"normalizedX"],[211,38,229,38],[211,41,229,41],[211,42,229,42,"Math"],[211,46,229,46],[211,47,229,47,"random"],[211,53,229,53],[211,54,229,54],[211,55,229,55],[211,58,229,58],[211,61,229,61],[211,65,229,65,"randomFactor"],[211,77,229,77],[212,14,230,12],[212,18,230,18,"finalY"],[212,24,230,24],[212,27,230,27,"normalizedY"],[212,38,230,38],[212,41,230,41],[212,42,230,42,"Math"],[212,46,230,46],[212,47,230,47,"random"],[212,53,230,53],[212,54,230,54],[212,55,230,55],[212,58,230,58],[212,61,230,61],[212,65,230,65,"randomFactor"],[212,77,230,77],[214,14,232,12],[215,14,233,12],[215,18,233,16,"newX"],[215,22,233,20],[215,25,233,23,"enemy"],[215,30,233,28],[215,31,233,29,"position"],[215,39,233,37],[215,40,233,38,"x"],[215,41,233,39],[215,44,233,43,"finalX"],[215,50,233,49],[215,53,233,52,"MOVEMENT_SPEED"],[215,67,233,67],[216,14,234,12],[216,18,234,16,"newY"],[216,22,234,20],[216,25,234,23,"enemy"],[216,30,234,28],[216,31,234,29,"position"],[216,39,234,37],[216,40,234,38,"y"],[216,41,234,39],[216,44,234,43,"finalY"],[216,50,234,49],[216,53,234,52,"MOVEMENT_SPEED"],[216,67,234,67],[218,14,236,12],[219,14,237,12,"newX"],[219,18,237,16],[219,21,237,19,"Math"],[219,25,237,23],[219,26,237,24,"max"],[219,29,237,27],[219,30,237,28],[219,31,237,29],[219,33,237,31,"Math"],[219,37,237,35],[219,38,237,36,"min"],[219,41,237,39],[219,42,237,40,"SCREEN_WIDTH"],[219,54,237,52],[219,57,237,55,"ENEMY_SIZE"],[219,67,237,65],[219,69,237,67,"newX"],[219,73,237,71],[219,74,237,72],[219,75,237,73],[220,14,238,12,"newY"],[220,18,238,16],[220,21,238,19,"Math"],[220,25,238,23],[220,26,238,24,"max"],[220,29,238,27],[220,30,238,28],[220,31,238,29],[220,33,238,31,"Math"],[220,37,238,35],[220,38,238,36,"min"],[220,41,238,39],[220,42,238,40,"GAME_AREA_HEIGHT"],[220,58,238,56],[220,61,238,59,"ENEMY_SIZE"],[220,71,238,69],[220,73,238,71,"newY"],[220,77,238,75],[220,78,238,76],[220,79,238,77],[222,14,240,12],[223,14,241,12,"enemy"],[223,19,241,17],[223,20,241,18,"position"],[223,28,241,26],[223,29,241,27,"x"],[223,30,241,28],[223,33,241,31,"newX"],[223,37,241,35],[224,14,242,12,"enemy"],[224,19,242,17],[224,20,242,18,"position"],[224,28,242,26],[224,29,242,27,"y"],[224,30,242,28],[224,33,242,31,"newY"],[224,37,242,35],[225,12,243,10],[226,12,244,10],[227,10,245,8],[228,8,246,6],[228,9,246,7],[228,10,246,8],[230,8,248,6],[231,8,249,6],[231,12,249,10],[231,13,249,11,"isManualControlActive"],[231,34,249,32],[231,36,249,34],[232,10,250,8],[232,15,250,13],[232,19,250,17,"i"],[232,20,250,18],[232,23,250,21],[232,24,250,22],[232,26,250,24,"i"],[232,27,250,25],[232,30,250,28],[232,31,250,29],[232,33,250,31,"i"],[232,34,250,32],[232,36,250,34],[232,38,250,36],[233,12,251,10],[233,16,251,14,"newState"],[233,24,251,22],[233,25,251,23,"abilityManager"],[233,39,251,37],[233,40,251,38,"isAbilityReady"],[233,54,251,52],[233,55,251,53,"i"],[233,56,251,54],[233,57,251,55],[233,61,251,59,"newState"],[233,69,251,67],[233,70,251,68,"enemies"],[233,77,251,75],[233,78,251,76,"length"],[233,84,251,82],[233,87,251,85],[233,88,251,86],[233,90,251,88],[234,14,252,12],[234,18,252,16,"newState"],[234,26,252,24],[234,27,252,25,"abilityManager"],[234,41,252,39],[234,42,252,40,"useAbility"],[234,52,252,50],[234,53,252,51,"i"],[234,54,252,52],[234,56,252,54,"newTick"],[234,63,252,61],[234,64,252,62],[234,66,252,64],[235,16,253,14,"castAbility"],[235,27,253,25],[235,28,253,26,"newState"],[235,36,253,34],[235,38,253,36,"i"],[235,39,253,37],[235,40,253,38],[236,14,254,12],[237,12,255,10],[238,10,256,8],[239,8,257,6],[241,8,259,6],[242,8,260,6],[242,12,260,12,"deadEnemies"],[242,23,260,23],[242,26,260,26,"newState"],[242,34,260,34],[242,35,260,35,"enemies"],[242,42,260,42],[242,43,260,43,"filter"],[242,49,260,49],[242,50,260,50,"enemy"],[242,55,260,55],[242,59,260,59,"enemy"],[242,64,260,64],[242,65,260,65,"health"],[242,71,260,71],[242,75,260,75],[242,76,260,76],[242,77,260,77],[243,8,261,6,"enemiesToKill"],[243,21,261,19],[243,24,261,22],[243,25,261,23],[243,28,261,26,"deadEnemies"],[243,39,261,37],[243,40,261,38],[243,41,261,39],[243,42,261,40],[245,8,263,6],[246,8,264,6],[246,12,264,10,"deadEnemies"],[246,23,264,21],[246,24,264,22,"length"],[246,30,264,28],[246,33,264,31],[246,34,264,32],[246,36,264,34],[247,10,265,8,"console"],[247,17,265,15],[247,18,265,16,"log"],[247,21,265,19],[247,22,265,20],[247,49,265,47,"deadEnemies"],[247,60,265,58],[247,61,265,59,"length"],[247,67,265,65],[247,83,265,81],[247,85,265,83,"deadEnemies"],[247,96,265,94],[247,97,265,95,"map"],[247,100,265,98],[247,101,265,99,"e"],[247,102,265,100],[247,106,265,104],[247,109,265,107,"e"],[247,110,265,108],[247,111,265,109,"id"],[247,113,265,111],[247,117,265,115,"e"],[247,118,265,116],[247,119,265,117,"health"],[247,125,265,123],[247,130,265,128],[247,131,265,129],[247,132,265,130],[248,8,266,6],[250,8,268,6],[251,8,269,6],[251,12,269,12,"lowHealthEnemies"],[251,28,269,28],[251,31,269,31,"newState"],[251,39,269,39],[251,40,269,40,"enemies"],[251,47,269,47],[251,48,269,48,"filter"],[251,54,269,54],[251,55,269,55,"enemy"],[251,60,269,60],[251,64,269,64,"enemy"],[251,69,269,69],[251,70,269,70,"health"],[251,76,269,76],[251,80,269,80],[251,82,269,82],[251,86,269,86,"enemy"],[251,91,269,91],[251,92,269,92,"health"],[251,98,269,98],[251,101,269,101],[251,102,269,102],[251,103,269,103],[252,8,270,6],[252,12,270,10,"lowHealthEnemies"],[252,28,270,26],[252,29,270,27,"length"],[252,35,270,33],[252,38,270,36],[252,39,270,37],[252,41,270,39],[253,10,271,8,"console"],[253,17,271,15],[253,18,271,16,"log"],[253,21,271,19],[253,22,271,20],[253,61,271,59],[253,63,271,61,"lowHealthEnemies"],[253,79,271,77],[253,80,271,78,"map"],[253,83,271,81],[253,84,271,82,"e"],[253,85,271,83],[253,89,271,87],[253,92,271,90,"e"],[253,93,271,91],[253,94,271,92,"id"],[253,96,271,94],[253,100,271,98,"e"],[253,101,271,99],[253,102,271,100,"health"],[253,108,271,106],[253,112,271,110,"e"],[253,113,271,111],[253,114,271,112,"maxHealth"],[253,123,271,121],[253,128,271,126],[253,129,271,127],[253,130,271,128],[254,8,272,6],[256,8,274,6],[257,8,275,6],[257,12,275,12,"beforeCount"],[257,23,275,23],[257,26,275,26,"newState"],[257,34,275,34],[257,35,275,35,"enemies"],[257,42,275,42],[257,43,275,43,"length"],[257,49,275,49],[258,8,276,6,"newState"],[258,16,276,14],[258,17,276,15,"enemies"],[258,24,276,22],[258,27,276,25,"newState"],[258,35,276,33],[258,36,276,34,"enemies"],[258,43,276,41],[258,44,276,42,"filter"],[258,50,276,48],[258,51,276,49,"enemy"],[258,56,276,54],[258,60,276,58,"enemy"],[258,65,276,63],[258,66,276,64,"health"],[258,72,276,70],[258,75,276,73],[258,76,276,74],[258,77,276,75],[259,8,277,6],[259,12,277,12,"afterCount"],[259,22,277,22],[259,25,277,25,"newState"],[259,33,277,33],[259,34,277,34,"enemies"],[259,41,277,41],[259,42,277,42,"length"],[259,48,277,48],[260,8,279,6],[260,12,279,10,"beforeCount"],[260,23,279,21],[260,28,279,26,"afterCount"],[260,38,279,36],[260,40,279,38],[261,10,280,8,"console"],[261,17,280,15],[261,18,280,16,"log"],[261,21,280,19],[261,22,280,20],[261,52,280,50,"beforeCount"],[261,63,280,61],[261,66,280,64,"afterCount"],[261,76,280,74],[261,102,280,100],[261,103,280,101],[262,8,281,6],[264,8,283,6],[265,8,284,6],[266,8,285,6],[266,12,285,12,"MAX_ENEMIES"],[266,23,285,23],[266,26,285,26],[266,28,285,28],[267,8,286,6],[267,12,286,12,"MIN_SPAWN_DELAY"],[267,27,286,27],[267,30,286,30],[267,33,286,33],[267,34,286,34],[267,35,286,35],[268,8,287,6],[268,12,287,12,"now"],[268,15,287,15],[268,18,287,18,"Date"],[268,22,287,22],[268,23,287,23,"now"],[268,26,287,26],[268,27,287,27],[268,28,287,28],[269,8,288,6],[269,12,288,12,"hasBoss"],[269,19,288,19],[269,22,288,22,"newState"],[269,30,288,30],[269,31,288,31,"enemies"],[269,38,288,38],[269,39,288,39,"some"],[269,43,288,43],[269,44,288,44,"enemy"],[269,49,288,49],[269,53,288,53,"enemy"],[269,58,288,58],[269,59,288,59,"isBoss"],[269,65,288,65],[269,66,288,66],[271,8,290,6],[272,8,291,6],[272,12,291,10],[272,13,291,11,"newState"],[272,21,291,19],[272,22,291,20,"lastSpawnTime"],[272,35,291,33],[272,37,291,35],[273,10,292,8,"newState"],[273,18,292,16],[273,19,292,17,"lastSpawnTime"],[273,32,292,30],[273,35,292,33,"now"],[273,38,292,36],[274,8,293,6],[275,8,295,6,"console"],[275,15,295,13],[275,16,295,14,"log"],[275,19,295,17],[275,20,295,18],[275,53,295,51,"newState"],[275,61,295,59],[275,62,295,60,"enemies"],[275,69,295,67],[275,70,295,68,"length"],[275,76,295,74],[275,85,295,83,"MAX_ENEMIES"],[275,96,295,94],[275,109,295,107,"hasBoss"],[275,116,295,114],[275,118,295,116],[275,119,295,117],[277,8,297,6],[278,8,298,6],[278,12,298,10],[278,13,298,11,"hasBoss"],[278,20,298,18],[278,24,298,22,"newState"],[278,32,298,30],[278,33,298,31,"enemies"],[278,40,298,38],[278,41,298,39,"length"],[278,47,298,45],[278,50,298,48,"MAX_ENEMIES"],[278,61,298,59],[278,65,298,64,"now"],[278,68,298,67],[278,71,298,70,"newState"],[278,79,298,78],[278,80,298,79,"lastSpawnTime"],[278,93,298,92],[278,97,298,97,"MIN_SPAWN_DELAY"],[278,112,298,112],[278,114,298,114],[279,10,299,8,"console"],[279,17,299,15],[279,18,299,16,"log"],[279,21,299,19],[279,22,299,20],[279,43,299,41,"newState"],[279,51,299,49],[279,52,299,50,"enemies"],[279,59,299,57],[279,60,299,58,"length"],[279,66,299,64],[279,69,299,67],[279,70,299,68],[279,74,299,72,"MAX_ENEMIES"],[279,85,299,83],[279,87,299,85],[279,88,299,86],[280,10,300,8,"spawnTestEnemy"],[280,24,300,22],[280,25,300,23,"newState"],[280,33,300,31],[280,34,300,32],[281,10,301,8,"newState"],[281,18,301,16],[281,19,301,17,"lastSpawnTime"],[281,32,301,30],[281,35,301,33,"now"],[281,38,301,36],[282,8,302,6],[283,8,304,6],[283,15,304,13,"newState"],[283,23,304,21],[284,6,305,4],[284,7,305,5],[284,47,305,6],[286,6,307,4],[287,6,308,4,"console"],[287,13,308,11],[287,14,308,12,"log"],[287,17,308,15],[287,18,308,16],[287,50,308,48,"enemiesToKill"],[287,63,308,61],[287,64,308,62,"length"],[287,70,308,68],[287,101,308,99],[287,102,308,100],[288,6,310,4,"enemiesToKill"],[288,19,310,17],[288,20,310,18,"forEach"],[288,27,310,25],[288,28,310,26],[288,29,310,27,"enemy"],[288,34,310,32],[288,36,310,34,"index"],[288,41,310,39],[288,46,310,44],[289,8,311,6,"console"],[289,15,311,13],[289,16,311,14,"log"],[289,19,311,17],[289,20,311,18],[289,57,311,55,"index"],[289,62,311,60],[289,65,311,63],[289,66,311,64],[289,70,311,68,"enemiesToKill"],[289,83,311,81],[289,84,311,82,"length"],[289,90,311,88],[289,104,311,102,"enemy"],[289,109,311,107],[289,110,311,108,"id"],[289,112,311,110],[289,114,311,112],[289,115,311,113],[290,8,312,6,"handleEnemyKill"],[290,23,312,21],[290,24,312,22,"enemy"],[290,29,312,27],[290,30,312,28],[291,6,313,4],[291,7,313,5],[291,8,313,6],[292,4,314,2],[292,5,314,3],[292,7,314,5],[292,8,314,6,"handleEnemyKill"],[292,23,314,21],[292,24,314,22],[292,25,314,23],[292,26,314,24],[292,27,314,25],[294,4,316,2],[295,4,317,2],[295,8,317,8,"findClosestEnemyInternal"],[295,32,317,32],[295,35,317,36,"enemies"],[295,42,317,58],[295,46,317,83],[296,6,318,4],[296,10,318,8,"enemies"],[296,17,318,15],[296,18,318,16,"length"],[296,24,318,22],[296,29,318,27],[296,30,318,28],[296,32,318,30],[296,39,318,37],[296,43,318,41],[298,6,320,4],[299,6,321,4],[299,10,321,10,"SCREEN_WIDTH"],[299,22,321,22],[299,25,321,25],[299,28,321,28],[300,6,322,4],[300,10,322,10,"GAME_AREA_HEIGHT"],[300,26,322,26],[300,29,322,29],[300,32,322,32],[300,35,322,35],[300,38,322,38],[300,39,322,39],[300,40,322,40],[301,6,323,4],[301,10,323,10,"ninjaX"],[301,16,323,16],[301,19,323,19,"SCREEN_WIDTH"],[301,31,323,31],[301,34,323,34],[301,35,323,35],[302,6,324,4],[302,10,324,10,"ninjaY"],[302,16,324,16],[302,19,324,19,"GAME_AREA_HEIGHT"],[302,35,324,35],[302,38,324,38],[302,39,324,39],[303,6,326,4],[303,10,326,8,"closestEnemy"],[303,22,326,20],[303,25,326,23,"enemies"],[303,32,326,30],[303,33,326,31],[303,34,326,32],[303,35,326,33],[304,6,327,4],[304,10,327,8,"closestDistance"],[304,25,327,23],[304,28,327,26,"Infinity"],[304,36,327,34],[305,6,329,4,"enemies"],[305,13,329,11],[305,14,329,12,"forEach"],[305,21,329,19],[305,22,329,20,"enemy"],[305,27,329,25],[305,31,329,29],[306,8,330,6],[306,12,330,12,"distance"],[306,20,330,20],[306,23,330,23,"Math"],[306,27,330,27],[306,28,330,28,"sqrt"],[306,32,330,32],[306,33,331,8,"Math"],[306,37,331,12],[306,38,331,13,"pow"],[306,41,331,16],[306,42,331,17,"enemy"],[306,47,331,22],[306,48,331,23,"position"],[306,56,331,31],[306,57,331,32,"x"],[306,58,331,33],[306,61,331,36,"ninjaX"],[306,67,331,42],[306,69,331,44],[306,70,331,45],[306,71,331,46],[306,74,332,8,"Math"],[306,78,332,12],[306,79,332,13,"pow"],[306,82,332,16],[306,83,332,17,"enemy"],[306,88,332,22],[306,89,332,23,"position"],[306,97,332,31],[306,98,332,32,"y"],[306,99,332,33],[306,102,332,36,"ninjaY"],[306,108,332,42],[306,110,332,44],[306,111,332,45],[306,112,333,6],[306,113,333,7],[307,8,335,6],[307,12,335,10,"distance"],[307,20,335,18],[307,23,335,21,"closestDistance"],[307,38,335,36],[307,40,335,38],[308,10,336,8,"closestDistance"],[308,25,336,23],[308,28,336,26,"distance"],[308,36,336,34],[309,10,337,8,"closestEnemy"],[309,22,337,20],[309,25,337,23,"enemy"],[309,30,337,28],[310,8,338,6],[311,6,339,4],[311,7,339,5],[311,8,339,6],[312,6,341,4,"console"],[312,13,341,11],[312,14,341,12,"log"],[312,17,341,15],[312,18,341,16],[312,60,341,58,"closestDistance"],[312,75,341,73],[312,76,341,74,"toFixed"],[312,83,341,81],[312,84,341,82],[312,85,341,83],[312,86,341,84],[312,88,341,86],[312,89,341,87],[313,6,342,4],[313,13,342,11,"closestEnemy"],[313,25,342,23],[314,4,343,2],[314,5,343,3],[316,4,345,2],[317,4,346,2],[317,8,346,8,"findClosestEnemy"],[317,24,346,24],[317,27,346,27,"findClosestEnemy"],[317,28,346,27],[317,33,346,53],[318,6,347,4],[318,13,347,11,"findClosestEnemyInternal"],[318,37,347,35],[318,38,347,36,"combatState"],[318,49,347,47],[318,50,347,48,"enemies"],[318,57,347,55],[318,58,347,56],[319,4,348,2],[319,5,348,3],[321,4,350,2],[322,4,351,2],[322,8,351,2,"_useState7"],[322,18,351,2],[322,21,351,58],[322,25,351,58,"useState"],[322,31,351,66],[322,32,351,66,"useState"],[322,40,351,66],[322,42,351,91],[323,8,351,93,"x"],[323,9,351,94],[323,11,351,96],[323,12,351,97],[324,8,351,99,"y"],[324,9,351,100],[324,11,351,102],[325,6,351,104],[325,7,351,105],[325,8,351,106],[326,6,351,106,"_useState8"],[326,16,351,106],[326,23,351,106,"_slicedToArray"],[326,37,351,106],[326,38,351,106,"default"],[326,45,351,106],[326,47,351,106,"_useState7"],[326,57,351,106],[327,6,351,9,"currentNinjaPosition"],[327,26,351,29],[327,29,351,29,"_useState8"],[327,39,351,29],[328,6,351,31,"setCurrentNinjaPosition"],[328,29,351,54],[328,32,351,54,"_useState8"],[328,42,351,54],[329,4,352,2],[329,8,352,2,"_useState9"],[329,18,352,2],[329,21,352,60],[329,25,352,60,"useState"],[329,31,352,68],[329,32,352,68,"useState"],[329,40,352,68],[329,42,352,69],[329,47,352,74],[329,48,352,75],[330,6,352,75,"_useState0"],[330,16,352,75],[330,23,352,75,"_slicedToArray"],[330,37,352,75],[330,38,352,75,"default"],[330,45,352,75],[330,47,352,75,"_useState9"],[330,57,352,75],[331,6,352,9,"isManualControlActive"],[331,27,352,30],[331,30,352,30,"_useState0"],[331,40,352,30],[332,6,352,32,"setIsManualControlActive"],[332,30,352,56],[332,33,352,56,"_useState0"],[332,43,352,56],[334,4,354,2],[335,4,355,2],[335,8,355,8,"updateNinjaPosition"],[335,27,355,27],[335,30,355,30],[335,34,355,30,"useCallback"],[335,40,355,41],[335,41,355,41,"useCallback"],[335,52,355,41],[335,54,355,43,"newPosition"],[335,65,355,78],[335,69,355,83],[336,6,356,4,"setCurrentNinjaPosition"],[336,29,356,27],[336,30,356,28,"newPosition"],[336,41,356,39],[336,42,356,40],[337,4,357,2],[337,5,357,3],[337,7,357,5],[337,9,357,7],[337,10,357,8],[339,4,359,2],[340,4,360,2],[340,8,360,8,"setManualControlActive"],[340,30,360,30],[340,33,360,33],[340,37,360,33,"useCallback"],[340,43,360,44],[340,44,360,44,"useCallback"],[340,55,360,44],[340,57,360,46,"active"],[340,63,360,61],[340,67,360,66],[341,6,361,4,"setIsManualControlActive"],[341,30,361,28],[341,31,361,29,"active"],[341,37,361,35],[341,38,361,36],[342,6,362,4,"console"],[342,13,362,11],[342,14,362,12,"log"],[342,17,362,15],[342,18,362,16],[342,39,362,37,"active"],[342,45,362,43],[342,48,362,46],[342,59,362,57],[342,62,362,60],[342,75,362,73],[342,88,362,86,"active"],[342,94,362,92],[342,97,362,95],[342,105,362,103],[342,108,362,106],[342,117,362,115],[342,119,362,117],[342,120,362,118],[343,4,363,2],[343,5,363,3],[343,7,363,5],[343,9,363,7],[343,10,363,8],[345,4,365,2],[346,4,366,2],[346,8,366,8,"handleProjectileHit"],[346,27,366,27],[346,30,366,31,"projectile"],[346,40,366,59],[346,44,366,64],[347,6,367,4,"console"],[347,13,367,11],[347,14,367,12,"log"],[347,17,367,15],[347,18,367,16],[347,35,367,33,"projectile"],[347,45,367,43],[347,46,367,44,"id"],[347,48,367,46],[347,62,367,60,"projectile"],[347,72,367,70],[347,73,367,71,"targetEnemyId"],[347,86,367,84],[347,94,367,92,"projectile"],[347,104,367,102],[347,105,367,103,"damage"],[347,111,367,109],[347,120,367,118],[347,121,367,119],[348,6,369,4,"setCombatState"],[348,20,369,18],[348,21,369,19,"prev"],[348,25,369,23],[348,29,369,27],[349,8,370,6],[349,12,370,12,"newState"],[349,20,370,20],[349,23,370,23],[350,10,370,25],[350,13,370,28,"prev"],[351,8,370,33],[351,9,370,34],[353,8,372,6],[354,8,373,6],[354,12,373,12,"enemyIndex"],[354,22,373,22],[354,25,373,25,"newState"],[354,33,373,33],[354,34,373,34,"enemies"],[354,41,373,41],[354,42,373,42,"findIndex"],[354,51,373,51],[354,52,373,52,"e"],[354,53,373,53],[354,57,373,57,"e"],[354,58,373,58],[354,59,373,59,"id"],[354,61,373,61],[354,66,373,66,"projectile"],[354,76,373,76],[354,77,373,77,"targetEnemyId"],[354,90,373,90],[354,91,373,91],[355,8,374,6],[355,12,374,10,"enemyIndex"],[355,22,374,20],[355,26,374,24],[355,27,374,25],[355,29,374,27],[356,10,375,8,"newState"],[356,18,375,16],[356,19,375,17,"enemies"],[356,26,375,24],[356,29,375,27],[356,30,375,28],[356,33,375,31,"newState"],[356,41,375,39],[356,42,375,40,"enemies"],[356,49,375,47],[356,50,375,48],[357,10,376,8,"newState"],[357,18,376,16],[357,19,376,17,"enemies"],[357,26,376,24],[357,27,376,25,"enemyIndex"],[357,37,376,35],[357,38,376,36],[357,41,376,39],[358,12,377,10],[358,15,377,13,"newState"],[358,23,377,21],[358,24,377,22,"enemies"],[358,31,377,29],[358,32,377,30,"enemyIndex"],[358,42,377,40],[358,43,377,41],[359,12,378,10,"health"],[359,18,378,16],[359,20,378,18,"newState"],[359,28,378,26],[359,29,378,27,"enemies"],[359,36,378,34],[359,37,378,35,"enemyIndex"],[359,47,378,45],[359,48,378,46],[359,49,378,47,"health"],[359,55,378,53],[359,58,378,56,"projectile"],[359,68,378,66],[359,69,378,67,"damage"],[359,75,378,73],[360,12,379,10,"lastDamaged"],[360,23,379,21],[360,25,379,23,"combatEngine"],[360,44,379,35],[360,45,379,35,"combatEngine"],[360,57,379,35],[360,58,379,36,"getCurrentTick"],[360,72,379,50],[360,73,379,51],[361,10,380,8],[361,11,380,9],[362,10,382,8,"console"],[362,17,382,15],[362,18,382,16,"log"],[362,21,382,19],[362,22,382,20],[362,34,382,32,"projectile"],[362,44,382,42],[362,45,382,43,"targetEnemyId"],[362,58,382,56],[362,70,382,68,"newState"],[362,78,382,76],[362,79,382,77,"enemies"],[362,86,382,84],[362,87,382,85,"enemyIndex"],[362,97,382,95],[362,98,382,96],[362,99,382,97,"health"],[362,105,382,103],[362,109,382,107,"newState"],[362,117,382,115],[362,118,382,116,"enemies"],[362,125,382,123],[362,126,382,124,"enemyIndex"],[362,136,382,134],[362,137,382,135],[362,138,382,136,"maxHealth"],[362,147,382,145],[362,149,382,147],[362,150,382,148],[363,8,383,6],[364,8,385,6],[364,15,385,13,"newState"],[364,23,385,21],[365,6,386,4],[365,7,386,5],[365,8,386,6],[367,6,388,4],[368,6,389,4,"setProjectiles"],[368,20,389,18],[368,21,389,19,"prev"],[368,25,389,23],[368,29,389,27,"prev"],[368,33,389,31],[368,34,389,32,"filter"],[368,40,389,38],[368,41,389,39,"p"],[368,42,389,40],[368,46,389,44,"p"],[368,47,389,45],[368,48,389,46,"id"],[368,50,389,48],[368,55,389,53,"projectile"],[368,65,389,63],[368,66,389,64,"id"],[368,68,389,66],[368,69,389,67],[368,70,389,68],[369,4,390,2],[369,5,390,3],[371,4,392,2],[372,4,393,2],[372,8,393,8,"castAbility"],[372,19,393,19],[372,22,393,22,"castAbility"],[372,23,393,23,"state"],[372,28,393,41],[372,30,393,43,"slotIndex"],[372,39,393,60],[372,44,393,65],[373,6,394,4],[373,10,394,10,"deck"],[373,14,394,14],[373,17,394,17,"state"],[373,22,394,22],[373,23,394,23,"abilityManager"],[373,37,394,37],[373,38,394,38,"getDeck"],[373,45,394,45],[373,46,394,46],[373,47,394,47],[374,6,395,4],[374,10,395,10,"ability"],[374,17,395,17],[374,20,395,20,"deck"],[374,24,395,24],[374,25,395,25,"slots"],[374,30,395,30],[374,31,395,31,"slotIndex"],[374,40,395,40],[374,41,395,41],[375,6,396,4],[375,10,396,8],[375,11,396,9,"ability"],[375,18,396,16],[375,20,396,18],[377,6,398,4],[378,6,399,4],[378,10,399,10,"target"],[378,16,399,16],[378,19,399,19,"findClosestEnemyInternal"],[378,43,399,43],[378,44,399,44,"state"],[378,49,399,49],[378,50,399,50,"enemies"],[378,57,399,57],[378,58,399,58],[379,6,400,4],[379,10,400,8],[379,11,400,9,"target"],[379,17,400,15],[379,19,400,17],[381,6,402,4],[382,6,403,4],[382,10,403,8,"damage"],[382,16,403,14],[382,19,403,17,"ability"],[382,26,403,24],[382,27,403,25,"stats"],[382,32,403,30],[382,33,403,31,"baseDamage"],[382,43,403,41],[384,6,405,4],[385,6,406,4,"deck"],[385,10,406,8],[385,11,406,9,"activeSynergies"],[385,26,406,24],[385,27,406,25,"forEach"],[385,34,406,32],[385,35,406,33,"synergy"],[385,42,406,40],[385,46,406,44],[386,8,407,6],[386,12,407,10,"synergy"],[386,19,407,17],[386,20,407,18,"bonus"],[386,25,407,23],[386,26,407,24,"damageBonus"],[386,37,407,35],[386,41,408,10,"synergy"],[386,48,408,17],[386,49,408,18,"requiredTags"],[386,61,408,30],[386,62,408,31,"some"],[386,66,408,35],[386,67,408,36,"tag"],[386,70,408,39],[386,74,408,43,"ability"],[386,81,408,50],[386,82,408,51,"tags"],[386,86,408,55],[386,87,408,56,"includes"],[386,95,408,64],[386,96,408,65,"tag"],[386,99,408,68],[386,100,408,69],[386,101,408,70],[386,103,408,72],[387,10,409,8,"damage"],[387,16,409,14],[387,20,409,19],[387,21,409,20],[387,24,409,23,"synergy"],[387,31,409,30],[387,32,409,31,"bonus"],[387,37,409,36],[387,38,409,37,"damageBonus"],[387,49,409,48],[387,52,409,51],[387,55,409,55],[388,8,410,6],[389,6,411,4],[389,7,411,5],[389,8,411,6],[391,6,413,4],[392,6,414,4],[392,10,414,10,"damageResult"],[392,22,414,22],[392,25,414,25,"DamageCalculator"],[392,44,414,41],[392,45,414,41,"DamageCalculator"],[392,61,414,41],[392,62,414,42,"calculateDamage"],[392,77,414,57],[392,78,414,58,"damage"],[392,84,414,64],[392,86,414,66,"state"],[392,91,414,71],[392,92,414,72,"playerStats"],[392,103,414,83],[392,105,414,85,"target"],[392,111,414,91],[392,112,414,92,"stats"],[392,117,414,97],[392,118,414,98],[394,6,416,4],[395,6,417,4,"createProjectile"],[395,22,417,20],[395,23,417,21,"target"],[395,29,417,27],[395,31,417,29,"damageResult"],[395,43,417,41],[395,44,417,42,"damage"],[395,50,417,48],[395,52,417,50,"currentNinjaPosition"],[395,72,417,70],[395,74,417,72],[396,8,418,6,"id"],[396,10,418,8],[396,12,418,10,"ability"],[396,19,418,17],[396,20,418,18,"id"],[396,22,418,20],[397,8,419,6,"name"],[397,12,419,10],[397,14,419,12,"ability"],[397,21,419,19],[397,22,419,20,"name"],[397,26,419,24],[398,8,420,6,"icon"],[398,12,420,10],[398,14,420,12,"ability"],[398,21,420,19],[398,22,420,20,"icon"],[399,6,421,4],[399,7,421,5],[399,8,421,6],[401,6,423,4],[402,6,424,4],[402,10,424,8,"ability"],[402,17,424,15],[402,18,424,16,"effects"],[402,25,424,23],[402,26,424,24,"includes"],[402,34,424,32],[402,35,424,33],[402,40,424,38],[402,41,424,39],[402,45,424,43,"ability"],[402,52,424,50],[402,53,424,51,"stats"],[402,58,424,56],[402,59,424,57,"duration"],[402,67,424,65],[402,69,424,67],[403,8,425,6,"state"],[403,13,425,11],[403,14,425,12,"statusEffects"],[403,27,425,25],[403,28,425,26,"addEffect"],[403,37,425,35],[403,38,425,36,"target"],[403,44,425,42],[403,45,425,43,"id"],[403,47,425,45],[403,49,425,47],[404,10,426,8,"id"],[404,12,426,10],[404,14,426,12],[404,17,426,15,"ability"],[404,24,426,22],[404,25,426,23,"id"],[404,27,426,25],[404,33,426,31],[405,10,427,8,"type"],[405,14,427,12],[405,16,427,14],[405,21,427,19],[406,10,428,8,"remainingTicks"],[406,24,428,22],[406,26,428,24,"Math"],[406,30,428,28],[406,31,428,29,"floor"],[406,36,428,34],[406,37,428,35,"ability"],[406,44,428,42],[406,45,428,43,"stats"],[406,50,428,48],[406,51,428,49,"duration"],[406,59,428,57],[406,62,428,60],[406,64,428,62],[406,65,428,63],[407,10,428,65],[408,10,429,8,"tickInterval"],[408,22,429,20],[408,24,429,22],[408,26,429,24],[409,10,429,26],[410,10,430,8,"lastTick"],[410,18,430,16],[410,20,430,18,"state"],[410,25,430,23],[410,26,430,24,"currentTick"],[410,37,430,35],[411,10,431,8,"value"],[411,15,431,13],[411,17,431,15,"Math"],[411,21,431,19],[411,22,431,20,"floor"],[411,27,431,25],[411,28,431,26,"damage"],[411,34,431,32],[411,37,431,35],[411,40,431,38],[411,41,431,39],[412,10,431,41],[413,10,432,8,"stackable"],[413,19,432,17],[413,21,432,19],[414,8,433,6],[414,9,433,7],[414,10,433,8],[415,6,434,4],[416,6,436,4,"console"],[416,13,436,11],[416,14,436,12,"log"],[416,17,436,15],[416,18,436,16],[416,24,436,22,"ability"],[416,31,436,29],[416,32,436,30,"name"],[416,36,436,34],[416,69,436,67,"damageResult"],[416,81,436,79],[416,82,436,80,"damage"],[416,88,436,86],[416,98,436,96,"damageResult"],[416,110,436,108],[416,111,436,109,"isCritical"],[416,121,436,119],[416,124,436,122],[416,134,436,132],[416,137,436,135],[416,139,436,137],[416,141,436,139],[416,142,436,140],[417,4,437,2],[417,5,437,3],[419,4,439,2],[420,4,440,2],[420,8,440,8,"createProjectile"],[420,24,440,24],[420,27,440,27,"createProjectile"],[420,28,440,28,"targetEnemy"],[420,39,440,52],[420,41,440,54,"damage"],[420,47,440,68],[420,49,440,70,"ninjaPos"],[420,57,440,103],[420,59,440,105,"abilityInfo"],[420,70,440,159],[420,75,440,164],[421,6,441,4],[421,10,441,10,"SCREEN_WIDTH"],[421,22,441,22],[421,25,441,25],[421,28,441,28],[422,6,442,4],[422,10,442,10,"GAME_AREA_HEIGHT"],[422,26,442,26],[422,29,442,29],[422,32,442,32],[422,35,442,35],[422,38,442,38],[422,39,442,39],[422,40,442,40],[423,6,443,4],[423,10,443,10,"NINJA_SIZE"],[423,20,443,20],[423,23,443,23],[423,25,443,25],[425,6,445,4],[426,6,446,4],[426,10,446,10,"ninjaX"],[426,16,446,16],[426,19,446,19,"ninjaPos"],[426,27,446,27],[426,30,446,30,"ninjaPos"],[426,38,446,38],[426,39,446,39,"x"],[426,40,446,40],[426,43,446,43,"NINJA_SIZE"],[426,53,446,53],[426,56,446,56],[426,57,446,57],[426,60,446,60,"SCREEN_WIDTH"],[426,72,446,72],[426,75,446,75],[426,76,446,76],[427,6,447,4],[427,10,447,10,"ninjaY"],[427,16,447,16],[427,19,447,19,"ninjaPos"],[427,27,447,27],[427,30,447,30,"ninjaPos"],[427,38,447,38],[427,39,447,39,"y"],[427,40,447,40],[427,43,447,43,"NINJA_SIZE"],[427,53,447,53],[427,56,447,56],[427,57,447,57],[427,60,447,60,"GAME_AREA_HEIGHT"],[427,76,447,76],[427,79,447,79],[427,80,447,80],[428,6,448,4],[428,10,448,10,"ENEMY_SIZE"],[428,20,448,20],[428,23,448,23],[428,25,448,25],[429,6,450,4],[429,10,450,10,"projectile"],[429,20,450,38],[429,23,450,41],[430,8,451,6,"id"],[430,10,451,8],[430,12,451,10],[430,20,451,18,"Date"],[430,24,451,22],[430,25,451,23,"now"],[430,28,451,26],[430,29,451,27],[430,30,451,28],[430,34,451,32,"Math"],[430,38,451,36],[430,39,451,37,"random"],[430,45,451,43],[430,46,451,44],[430,47,451,45],[430,49,451,47],[431,8,452,6,"x"],[431,9,452,7],[431,11,452,9,"ninjaX"],[431,17,452,15],[432,8,453,6,"y"],[432,9,453,7],[432,11,453,9,"ninjaY"],[432,17,453,15],[433,8,454,6,"targetX"],[433,15,454,13],[433,17,454,15,"targetEnemy"],[433,28,454,26],[433,29,454,27,"position"],[433,37,454,35],[433,38,454,36,"x"],[433,39,454,37],[433,42,454,40,"ENEMY_SIZE"],[433,52,454,50],[433,55,454,53],[433,56,454,54],[434,8,455,6,"targetY"],[434,15,455,13],[434,17,455,15,"targetEnemy"],[434,28,455,26],[434,29,455,27,"position"],[434,37,455,35],[434,38,455,36,"y"],[434,39,455,37],[434,42,455,40,"ENEMY_SIZE"],[434,52,455,50],[434,55,455,53],[434,56,455,54],[435,8,456,6,"targetEnemyId"],[435,21,456,19],[435,23,456,21,"targetEnemy"],[435,34,456,32],[435,35,456,33,"id"],[435,37,456,35],[436,8,457,6,"damage"],[436,14,457,12],[436,16,457,14,"damage"],[436,22,457,20],[437,8,458,6,"startTime"],[437,17,458,15],[437,19,458,17,"Date"],[437,23,458,21],[437,24,458,22,"now"],[437,27,458,25],[437,28,458,26],[437,29,458,27],[438,8,459,6,"duration"],[438,16,459,14],[438,18,459,16],[438,21,459,19],[439,8,459,21],[440,8,460,6],[441,8,461,6,"abilityId"],[441,17,461,15],[441,19,461,17,"abilityInfo"],[441,30,461,28],[441,32,461,30,"id"],[441,34,461,32],[441,38,461,36],[441,54,461,52],[442,8,462,6,"abilityName"],[442,19,462,17],[442,21,462,19,"abilityInfo"],[442,32,462,30],[442,34,462,32,"name"],[442,38,462,36],[442,42,462,40],[442,58,462,56],[443,8,463,6,"abilityIcon"],[443,19,463,17],[443,21,463,19,"abilityInfo"],[443,32,463,30],[443,34,463,32,"icon"],[443,38,463,36],[443,42,463,40],[443,46,463,44],[443,47,463,46],[444,6,464,4],[444,7,464,5],[445,6,466,4,"console"],[445,13,466,11],[445,14,466,12,"log"],[445,17,466,15],[445,18,466,16],[445,53,466,51,"targetEnemy"],[445,64,466,62],[445,65,466,63,"id"],[445,67,466,65],[445,75,466,73,"damage"],[445,81,466,79],[445,90,466,88],[445,91,466,89],[446,6,467,4,"console"],[446,13,467,11],[446,14,467,12,"log"],[446,17,467,15],[446,18,467,16],[446,53,467,51,"ninjaX"],[446,59,467,57],[446,64,467,62,"ninjaY"],[446,70,467,68],[446,87,467,85,"projectile"],[446,97,467,95],[446,98,467,96,"targetX"],[446,105,467,103],[446,110,467,108,"projectile"],[446,120,467,118],[446,121,467,119,"targetY"],[446,128,467,126],[446,131,467,129],[446,132,467,130],[447,6,469,4,"setProjectiles"],[447,20,469,18],[447,21,469,19,"prev"],[447,25,469,23],[447,29,469,27],[447,30,469,28],[447,33,469,31,"prev"],[447,37,469,35],[447,39,469,37,"projectile"],[447,49,469,47],[447,50,469,48],[447,51,469,49],[449,6,471,4],[450,6,472,4,"setTimeout"],[450,16,472,14],[450,17,472,15],[450,23,472,21],[451,8,473,6,"handleProjectileHit"],[451,27,473,25],[451,28,473,26,"projectile"],[451,38,473,36],[451,39,473,37],[452,6,474,4],[452,7,474,5],[452,9,474,7],[452,12,474,10],[452,13,474,11],[453,4,475,2],[453,5,475,3],[455,4,477,2],[456,4,478,2],[456,8,478,8,"spawnTestEnemy"],[456,22,478,22],[456,25,478,26,"state"],[456,30,478,44],[456,34,478,49],[457,6,479,4,"console"],[457,13,479,11],[457,14,479,12,"log"],[457,17,479,15],[457,18,479,16],[457,83,479,81],[457,84,479,82],[459,6,481,4],[460,6,482,4],[460,10,482,10,"zoneEnemy"],[460,19,482,19],[460,22,482,22,"spawnZoneEnemy"],[460,36,482,36],[460,37,482,37],[460,38,482,38],[461,6,483,4],[461,10,483,8],[461,11,483,9,"zoneEnemy"],[461,20,483,18],[461,22,483,20],[462,8,484,6,"console"],[462,15,484,13],[462,16,484,14,"log"],[462,19,484,17],[462,20,484,18],[462,76,484,74],[462,77,484,75],[463,8,485,6],[464,8,486,6,"spawnBasicTestEnemy"],[464,27,486,25],[464,28,486,26,"state"],[464,33,486,31],[464,34,486,32],[465,8,487,6],[466,6,488,4],[467,6,490,4,"console"],[467,13,490,11],[467,14,490,12,"log"],[467,17,490,15],[467,18,490,16],[467,44,490,42,"zoneEnemy"],[467,53,490,51],[467,54,490,52,"name"],[467,58,490,56],[467,63,490,61,"zoneEnemy"],[467,72,490,70],[467,73,490,71,"typeId"],[467,79,490,77],[467,94,490,92,"currentZone"],[467,105,490,103],[467,107,490,105,"id"],[467,109,490,107],[467,119,490,117,"currentZoneLevel"],[467,135,490,133],[467,137,490,135,"level"],[467,142,490,140],[467,144,490,142],[467,145,490,143],[469,6,492,4],[470,6,493,4],[470,10,493,10,"combatEnemy"],[470,21,493,34],[470,24,493,37],[471,8,494,6,"id"],[471,10,494,8],[471,12,494,10,"zoneEnemy"],[471,21,494,19],[471,22,494,20,"id"],[471,24,494,22],[472,8,495,6,"name"],[472,12,495,10],[472,14,495,12,"zoneEnemy"],[472,23,495,21],[472,24,495,22,"name"],[472,28,495,26],[473,8,496,6,"health"],[473,14,496,12],[473,16,496,14,"zoneEnemy"],[473,25,496,23],[473,26,496,24,"hp"],[473,28,496,26],[474,8,497,6,"maxHealth"],[474,17,497,15],[474,19,497,17,"zoneEnemy"],[474,28,497,26],[474,29,497,27,"maxHP"],[474,34,497,32],[475,8,498,6,"stats"],[475,13,498,11],[475,15,498,13],[476,10,499,8,"attack"],[476,16,499,14],[476,18,499,16,"zoneEnemy"],[476,27,499,25],[476,28,499,26,"attack"],[476,34,499,32],[477,10,500,8,"defense"],[477,17,500,15],[477,19,500,17],[477,21,500,19],[478,10,500,21],[479,10,501,8,"health"],[479,16,501,14],[479,18,501,16,"zoneEnemy"],[479,27,501,25],[479,28,501,26,"hp"],[479,30,501,28],[480,10,502,8,"maxHealth"],[480,19,502,17],[480,21,502,19,"zoneEnemy"],[480,30,502,28],[480,31,502,29,"maxHP"],[480,36,502,34],[481,10,503,8,"critChance"],[481,20,503,18],[481,22,503,20],[481,23,503,21],[482,10,504,8,"critDamage"],[482,20,504,18],[482,22,504,20],[482,25,504,23],[483,10,505,8,"cooldownReduction"],[483,27,505,25],[483,29,505,27],[484,8,506,6],[484,9,506,7],[485,8,507,6,"position"],[485,16,507,14],[485,18,507,16,"zoneEnemy"],[485,27,507,25],[485,28,507,26,"position"],[485,36,507,34],[486,8,508,6,"lastDamaged"],[486,19,508,17],[486,21,508,19],[486,22,508,20],[487,8,509,6],[488,8,510,6,"zoneTypeId"],[488,18,510,16],[488,20,510,18,"zoneEnemy"],[488,29,510,27],[488,30,510,28,"typeId"],[488,36,510,34],[489,8,511,6,"zoneXP"],[489,14,511,12],[489,16,511,14,"zoneEnemy"],[489,25,511,23],[489,26,511,24,"xp"],[490,6,512,4],[490,7,512,5],[491,6,514,4,"console"],[491,13,514,11],[491,14,514,12,"log"],[491,17,514,15],[491,18,514,16],[491,42,514,40,"combatEnemy"],[491,53,514,51],[491,54,514,52,"name"],[491,58,514,56],[491,67,514,65,"combatEnemy"],[491,78,514,76],[491,79,514,77,"health"],[491,85,514,83],[491,100,514,98,"currentZone"],[491,111,514,109],[491,113,514,111,"id"],[491,115,514,113],[491,125,514,123,"currentZoneLevel"],[491,141,514,139],[491,143,514,141,"level"],[491,148,514,146],[491,150,514,148],[491,151,514,149],[492,6,515,4,"state"],[492,11,515,9],[492,12,515,10,"enemies"],[492,19,515,17],[492,20,515,18,"push"],[492,24,515,22],[492,25,515,23,"combatEnemy"],[492,36,515,34],[492,37,515,35],[493,4,516,2],[493,5,516,3],[495,4,518,2],[496,4,519,2],[496,8,519,8,"spawnBasicTestEnemy"],[496,27,519,27],[496,30,519,31,"state"],[496,35,519,49],[496,39,519,54],[497,6,520,4],[497,10,520,10,"SCREEN_WIDTH"],[497,22,520,22],[497,25,520,25],[497,28,520,28],[498,6,521,4],[498,10,521,10,"GAME_AREA_HEIGHT"],[498,26,521,26],[498,29,521,29],[498,32,521,32],[498,35,521,35],[498,38,521,38],[499,6,522,4],[499,10,522,10,"ENEMY_SIZE"],[499,20,522,20],[499,23,522,23],[499,25,522,25],[500,6,524,4],[500,10,524,10,"x"],[500,11,524,11],[500,14,524,14,"Math"],[500,18,524,18],[500,19,524,19,"random"],[500,25,524,25],[500,26,524,26],[500,27,524,27],[500,31,524,31,"SCREEN_WIDTH"],[500,43,524,43],[500,46,524,46,"ENEMY_SIZE"],[500,56,524,56],[500,59,524,59],[500,60,524,60],[500,61,524,61],[500,64,524,64,"ENEMY_SIZE"],[500,74,524,74],[501,6,525,4],[501,10,525,10,"y"],[501,11,525,11],[501,14,525,14,"Math"],[501,18,525,18],[501,19,525,19,"random"],[501,25,525,25],[501,26,525,26],[501,27,525,27],[501,31,525,31,"GAME_AREA_HEIGHT"],[501,47,525,47],[501,50,525,50,"ENEMY_SIZE"],[501,60,525,60],[501,63,525,63],[501,64,525,64],[501,65,525,65],[501,68,525,68,"ENEMY_SIZE"],[501,78,525,78],[502,6,527,4],[502,10,527,10,"enemy"],[502,15,527,28],[502,18,527,31],[503,8,528,6,"id"],[503,10,528,8],[503,12,528,10],[503,30,528,28,"Date"],[503,34,528,32],[503,35,528,33,"now"],[503,38,528,36],[503,39,528,37],[503,40,528,38],[503,44,528,42,"Math"],[503,48,528,46],[503,49,528,47,"random"],[503,55,528,53],[503,56,528,54],[503,57,528,55],[503,59,528,57],[504,8,529,6,"name"],[504,12,529,10],[504,14,529,12],[504,26,529,24,"Math"],[504,30,529,28],[504,31,529,29,"floor"],[504,36,529,34],[504,37,529,35,"Math"],[504,41,529,39],[504,42,529,40,"random"],[504,48,529,46],[504,49,529,47],[504,50,529,48],[504,53,529,51],[504,56,529,54],[504,57,529,55],[504,59,529,57],[505,8,530,6,"health"],[505,14,530,12],[505,16,530,14],[505,18,530,16],[506,8,531,6,"maxHealth"],[506,17,531,15],[506,19,531,17],[506,21,531,19],[507,8,532,6,"stats"],[507,13,532,11],[507,15,532,13],[508,10,533,8,"attack"],[508,16,533,14],[508,18,533,16],[508,20,533,18],[509,10,534,8,"defense"],[509,17,534,15],[509,19,534,17],[509,21,534,19],[510,10,535,8,"health"],[510,16,535,14],[510,18,535,16],[510,20,535,18],[511,10,536,8,"maxHealth"],[511,19,536,17],[511,21,536,19],[511,23,536,21],[512,10,537,8,"critChance"],[512,20,537,18],[512,22,537,20],[512,23,537,21],[513,10,538,8,"critDamage"],[513,20,538,18],[513,22,538,20],[513,25,538,23],[514,10,539,8,"cooldownReduction"],[514,27,539,25],[514,29,539,27],[515,8,540,6],[515,9,540,7],[516,8,541,6,"position"],[516,16,541,14],[516,18,541,16],[517,10,541,18,"x"],[517,11,541,19],[518,10,541,21,"y"],[519,8,541,23],[519,9,541,24],[520,8,542,6,"lastDamaged"],[520,19,542,17],[520,21,542,19],[521,6,543,4],[521,7,543,5],[522,6,545,4,"console"],[522,13,545,11],[522,14,545,12,"log"],[522,17,545,15],[522,18,545,16],[522,42,545,40,"enemy"],[522,47,545,45],[522,48,545,46,"name"],[522,52,545,50],[522,60,545,58,"Math"],[522,64,545,62],[522,65,545,63,"round"],[522,70,545,68],[522,71,545,69,"x"],[522,72,545,70],[522,73,545,71],[522,78,545,76,"Math"],[522,82,545,80],[522,83,545,81,"round"],[522,88,545,86],[522,89,545,87,"y"],[522,90,545,88],[522,91,545,89],[522,94,545,92],[522,95,545,93],[523,6,546,4,"state"],[523,11,546,9],[523,12,546,10,"enemies"],[523,19,546,17],[523,20,546,18,"push"],[523,24,546,22],[523,25,546,23,"enemy"],[523,30,546,28],[523,31,546,29],[524,4,547,2],[524,5,547,3],[526,4,549,2],[527,4,550,2],[527,8,550,8,"startCombat"],[527,19,550,19],[527,22,550,22,"React"],[527,27,550,27],[527,28,550,27,"default"],[527,35,550,27],[527,36,550,28,"useCallback"],[527,47,550,39],[527,48,550,40],[527,54,550,46],[528,6,551,4,"console"],[528,13,551,11],[528,14,551,12,"log"],[528,17,551,15],[528,18,551,16],[528,63,551,61],[528,64,551,62],[529,6,552,4,"setCombatState"],[529,20,552,18],[529,21,552,19,"prev"],[529,25,552,23],[529,30,552,28],[530,8,552,30],[530,11,552,33,"prev"],[530,15,552,37],[531,8,552,39,"isInCombat"],[531,18,552,49],[531,20,552,51],[532,6,552,56],[532,7,552,57],[532,8,552,58],[532,9,552,59],[534,6,554,4],[535,6,555,4,"combatEngine"],[535,25,555,16],[535,26,555,16,"combatEngine"],[535,38,555,16],[535,39,555,17,"addTickCallback"],[535,54,555,32],[535,55,555,33,"handleCombatTick"],[535,71,555,49],[535,72,555,50],[536,6,556,4,"console"],[536,13,556,11],[536,14,556,12,"log"],[536,17,556,15],[536,18,556,16],[536,62,556,60],[536,63,556,61],[538,6,558,4],[539,6,559,4,"combatEngine"],[539,25,559,16],[539,26,559,16,"combatEngine"],[539,38,559,16],[539,39,559,17,"start"],[539,44,559,22],[539,45,559,23],[539,46,559,24],[540,4,560,2],[540,5,560,3],[540,7,560,5],[540,8,560,6,"combatEngine"],[540,27,560,18],[540,28,560,18,"combatEngine"],[540,40,560,18],[540,42,560,20,"handleCombatTick"],[540,58,560,36],[540,59,560,37],[540,60,560,38],[542,4,562,2],[543,4,563,2],[543,8,563,8,"stopCombat"],[543,18,563,18],[543,21,563,21,"React"],[543,26,563,26],[543,27,563,26,"default"],[543,34,563,26],[543,35,563,27,"useCallback"],[543,46,563,38],[543,47,563,39],[543,53,563,45],[544,6,564,4,"setCombatState"],[544,20,564,18],[544,21,564,19,"prev"],[544,25,564,23],[544,30,564,28],[545,8,564,30],[545,11,564,33,"prev"],[545,15,564,37],[546,8,564,39,"isInCombat"],[546,18,564,49],[546,20,564,51],[547,6,564,57],[547,7,564,58],[547,8,564,59],[547,9,564,60],[548,6,565,4,"combatEngine"],[548,25,565,16],[548,26,565,16,"combatEngine"],[548,38,565,16],[548,39,565,17,"removeTickCallback"],[548,57,565,35],[548,58,565,36,"handleCombatTick"],[548,74,565,52],[548,75,565,53],[549,4,566,2],[549,5,566,3],[549,7,566,5],[549,8,566,6,"combatEngine"],[549,27,566,18],[549,28,566,18,"combatEngine"],[549,40,566,18],[549,42,566,20,"handleCombatTick"],[549,58,566,36],[549,59,566,37],[549,60,566,38],[551,4,568,2],[552,4,569,2],[552,8,569,8,"equipAbility"],[552,20,569,20],[552,23,569,23,"equipAbility"],[552,24,569,24,"abilityId"],[552,33,569,41],[552,35,569,43,"slotIndex"],[552,44,569,60],[552,49,569,74],[553,6,570,4],[553,13,570,11,"combatState"],[553,24,570,22],[553,25,570,23,"abilityManager"],[553,39,570,37],[553,40,570,38,"equipAbility"],[553,52,570,50],[553,53,570,51,"abilityId"],[553,62,570,60],[553,64,570,62,"slotIndex"],[553,73,570,71],[553,74,570,72],[554,4,571,2],[554,5,571,3],[555,4,573,2],[555,8,573,8,"getDeck"],[555,15,573,15],[555,18,573,18,"getDeck"],[555,19,573,18],[555,24,573,24],[556,6,574,4],[556,13,574,11,"combatState"],[556,24,574,22],[556,25,574,23,"abilityManager"],[556,39,574,37],[556,40,574,38,"getDeck"],[556,47,574,45],[556,48,574,46],[556,49,574,47],[557,4,575,2],[557,5,575,3],[558,4,577,2],[558,8,577,8,"getAvailableAbilities"],[558,29,577,29],[558,32,577,32,"getAvailableAbilities"],[558,33,577,32],[558,38,577,38],[559,6,578,4],[559,13,578,11,"combatState"],[559,24,578,22],[559,25,578,23,"abilityManager"],[559,39,578,37],[559,40,578,38,"getAvailableAbilities"],[559,61,578,59],[559,62,578,60],[559,63,578,61],[560,4,579,2],[560,5,579,3],[561,4,581,2],[561,8,581,8,"upgradeAbility"],[561,22,581,22],[561,25,581,26,"abilityId"],[561,34,581,43],[561,38,581,57],[562,6,582,4],[562,13,582,11,"combatState"],[562,24,582,22],[562,25,582,23,"abilityManager"],[562,39,582,37],[562,40,582,38,"upgradeAbility"],[562,54,582,52],[562,55,582,53,"abilityId"],[562,64,582,62],[562,65,582,63],[563,4,583,2],[563,5,583,3],[565,4,585,2],[566,4,586,2],[566,8,586,8,"clearAllEnemies"],[566,23,586,23],[566,26,586,26,"clearAllEnemies"],[566,27,586,26],[566,32,586,32],[567,6,587,4,"console"],[567,13,587,11],[567,14,587,12,"log"],[567,17,587,15],[567,18,587,16],[567,67,587,65],[567,68,587,66],[568,6,588,4,"setCombatState"],[568,20,588,18],[568,21,588,19,"prev"],[568,25,588,23],[568,30,588,28],[569,8,589,6],[569,11,589,9,"prev"],[569,15,589,13],[570,8,590,6,"enemies"],[570,15,590,13],[570,17,590,15],[571,6,591,4],[571,7,591,5],[571,8,591,6],[571,9,591,7],[572,4,592,2],[572,5,592,3],[574,4,594,2],[575,4,595,2],[575,8,595,8,"triggerLevelUpExplosion"],[575,31,595,31],[575,34,595,34,"triggerLevelUpExplosion"],[575,35,595,34],[575,40,595,40],[576,6,596,4,"console"],[576,13,596,11],[576,14,596,12,"log"],[576,17,596,15],[576,18,596,16],[576,70,596,68],[576,71,596,69],[577,6,598,4],[577,10,598,10,"explosionTime"],[577,23,598,23],[577,26,598,26,"Date"],[577,30,598,30],[577,31,598,31,"now"],[577,34,598,34],[577,35,598,35],[577,36,598,36],[578,6,599,4,"setLastExplosionTime"],[578,26,599,24],[578,27,599,25,"explosionTime"],[578,40,599,38],[578,41,599,39],[579,6,601,4,"setCombatState"],[579,20,601,18],[579,21,601,19,"prev"],[579,25,601,23],[579,29,601,27],[580,8,602,6],[581,8,603,6],[581,12,603,12,"enemyCount"],[581,22,603,22],[581,25,603,25,"prev"],[581,29,603,29],[581,30,603,30,"enemies"],[581,37,603,37],[581,38,603,38,"length"],[581,44,603,44],[582,8,604,6],[582,12,604,12,"explosionXP"],[582,23,604,23],[582,26,604,26,"enemyCount"],[582,36,604,36],[582,39,604,39],[582,41,604,41],[582,42,604,42],[582,43,604,43],[583,8,605,6],[583,12,605,12,"explosionGold"],[583,25,605,25],[583,28,605,28,"enemyCount"],[583,38,605,38],[583,41,605,41],[583,42,605,42],[583,43,605,43],[583,44,605,44],[585,8,607,6,"console"],[585,15,607,13],[585,16,607,14,"log"],[585,19,607,17],[585,20,607,18],[585,44,607,42,"enemyCount"],[585,54,607,52],[585,76,607,74,"explosionXP"],[585,87,607,85],[585,98,607,96,"explosionGold"],[585,111,607,109],[585,118,607,116],[585,119,607,117],[587,8,609,6],[588,8,610,6],[588,12,610,10,"explosionXP"],[588,23,610,21],[588,26,610,24],[588,27,610,25],[588,29,610,27],[589,10,611,8,"setTimeout"],[589,20,611,18],[589,21,611,19],[589,27,611,25],[590,12,612,10,"game"],[590,16,612,14],[590,17,612,15,"updateNinja"],[590,28,612,26],[590,29,612,28,"ninja"],[590,34,612,33],[590,39,612,39],[591,14,613,12,"experience"],[591,24,613,22],[591,26,613,24,"ninja"],[591,31,613,29],[591,32,613,30,"experience"],[591,42,613,40],[591,45,613,43,"explosionXP"],[591,56,613,54],[592,14,614,12,"gold"],[592,18,614,16],[592,20,614,18,"ninja"],[592,25,614,23],[592,26,614,24,"gold"],[592,30,614,28],[592,33,614,31,"explosionGold"],[593,12,615,10],[593,13,615,11],[593,14,615,12],[593,15,615,13],[594,10,616,8],[594,11,616,9],[594,13,616,11],[594,14,616,12],[594,15,616,13],[594,16,616,14],[594,17,616,15],[595,8,617,6],[597,8,619,6],[598,8,620,6],[599,8,621,6],[599,12,621,12,"damagedEnemies"],[599,26,621,26],[599,29,621,29,"prev"],[599,33,621,33],[599,34,621,34,"enemies"],[599,41,621,41],[599,42,621,42,"map"],[599,45,621,45],[599,46,621,46,"enemy"],[599,51,621,51],[599,56,621,56],[600,10,622,8],[600,13,622,11,"enemy"],[600,18,622,16],[601,10,623,8,"health"],[601,16,623,14],[601,18,623,16],[601,19,623,17],[602,10,623,19],[603,10,624,8,"lastDamaged"],[603,21,624,19],[603,23,624,21,"combatEngine"],[603,42,624,33],[603,43,624,33,"combatEngine"],[603,55,624,33],[603,56,624,34,"getCurrentTick"],[603,70,624,48],[603,71,624,49],[604,8,625,6],[604,9,625,7],[604,10,625,8],[604,11,625,9],[605,8,627,6],[605,15,627,13],[606,10,628,8],[606,13,628,11,"prev"],[606,17,628,15],[607,10,629,8,"enemies"],[607,17,629,15],[607,19,629,17,"damagedEnemies"],[608,8,630,6],[608,9,630,7],[609,6,631,4],[609,7,631,5],[609,8,631,6],[610,4,632,2],[610,5,632,3],[612,4,634,2],[613,4,635,2],[613,8,635,8,"spawnEnemy"],[613,18,635,18],[613,21,635,22,"position"],[613,29,635,57],[613,33,635,75],[614,6,636,4],[614,10,636,10,"SCREEN_WIDTH"],[614,22,636,22],[614,25,636,25],[614,28,636,28],[615,6,637,4],[615,10,637,10,"GAME_AREA_HEIGHT"],[615,26,637,26],[615,29,637,29],[615,32,637,32],[615,35,637,35],[615,38,637,38],[615,39,637,39],[615,40,637,40],[616,6,638,4],[616,10,638,10,"ENEMY_SIZE"],[616,20,638,20],[616,23,638,23],[616,25,638,25],[618,6,640,4],[619,6,641,4],[619,10,641,10,"x"],[619,11,641,11],[619,14,641,14,"position"],[619,22,641,22],[619,24,641,24,"x"],[619,25,641,25],[619,29,641,29,"Math"],[619,33,641,33],[619,34,641,34,"random"],[619,40,641,40],[619,41,641,41],[619,42,641,42],[619,46,641,46,"SCREEN_WIDTH"],[619,58,641,58],[619,61,641,61,"ENEMY_SIZE"],[619,71,641,71],[619,74,641,74],[619,75,641,75],[619,76,641,76],[619,79,641,79,"ENEMY_SIZE"],[619,89,641,89],[620,6,642,4],[620,10,642,10,"y"],[620,11,642,11],[620,14,642,14,"position"],[620,22,642,22],[620,24,642,24,"y"],[620,25,642,25],[620,29,642,29,"Math"],[620,33,642,33],[620,34,642,34,"random"],[620,40,642,40],[620,41,642,41],[620,42,642,42],[620,46,642,46,"GAME_AREA_HEIGHT"],[620,62,642,62],[620,65,642,65,"ENEMY_SIZE"],[620,75,642,75],[620,78,642,78],[620,79,642,79],[620,80,642,80],[620,83,642,83,"ENEMY_SIZE"],[620,93,642,93],[621,6,644,4],[621,10,644,10,"enemy"],[621,15,644,28],[621,18,644,31],[622,8,645,6,"id"],[622,10,645,8],[622,12,645,10],[622,21,645,19],[622,23,645,21,"enemyCounter"],[622,35,645,33],[622,37,645,35],[623,8,646,6,"name"],[623,12,646,10],[623,14,646,12],[623,24,646,22],[624,8,647,6,"health"],[624,14,647,12],[624,16,647,14],[624,19,647,17],[625,8,648,6,"maxHealth"],[625,17,648,15],[625,19,648,17],[625,22,648,20],[626,8,649,6,"stats"],[626,13,649,11],[626,15,649,13],[627,10,650,8,"attack"],[627,16,650,14],[627,18,650,16],[627,20,650,18],[628,10,651,8,"defense"],[628,17,651,15],[628,19,651,17],[628,21,651,19],[629,10,652,8,"health"],[629,16,652,14],[629,18,652,16],[629,21,652,19],[630,10,653,8,"maxHealth"],[630,19,653,17],[630,21,653,19],[630,24,653,22],[631,10,654,8,"critChance"],[631,20,654,18],[631,22,654,20],[631,23,654,21],[632,10,655,8,"critDamage"],[632,20,655,18],[632,22,655,20],[632,25,655,23],[633,10,656,8,"cooldownReduction"],[633,27,656,25],[633,29,656,27],[634,8,657,6],[634,9,657,7],[635,8,658,6,"position"],[635,16,658,14],[635,18,658,16],[636,10,658,18,"x"],[636,11,658,19],[637,10,658,21,"y"],[638,8,658,23],[638,9,658,24],[639,8,659,6,"lastDamaged"],[639,19,659,17],[639,21,659,19],[640,6,660,4],[640,7,660,5],[641,6,662,4,"setCombatState"],[641,20,662,18],[641,21,662,19,"prev"],[641,25,662,23],[641,30,662,28],[642,8,663,6],[642,11,663,9,"prev"],[642,15,663,13],[643,8,664,6,"enemies"],[643,15,664,13],[643,17,664,15],[643,18,664,16],[643,21,664,19,"prev"],[643,25,664,23],[643,26,664,24,"enemies"],[643,33,664,31],[643,35,664,33,"enemy"],[643,40,664,38],[644,6,665,4],[644,7,665,5],[644,8,665,6],[644,9,665,7],[645,6,667,4],[645,13,667,11,"enemy"],[645,18,667,16],[646,4,668,2],[646,5,668,3],[648,4,670,2],[649,4,671,2],[649,8,671,8,"spawnBoss"],[649,17,671,17],[649,20,671,21,"bossEnemy"],[649,29,671,43],[649,33,671,48],[650,6,672,4,"console"],[650,13,672,11],[650,14,672,12,"log"],[650,17,672,15],[650,18,672,16],[650,39,672,37,"bossEnemy"],[650,48,672,46],[650,49,672,47,"name"],[650,53,672,51],[650,90,672,88],[650,91,672,89],[651,6,673,4,"setCombatState"],[651,20,673,18],[651,21,673,19,"prev"],[651,25,673,23],[651,30,673,28],[652,8,674,6],[652,11,674,9,"prev"],[652,15,674,13],[653,8,675,6,"enemies"],[653,15,675,13],[653,17,675,15],[653,18,675,16,"bossEnemy"],[653,27,675,25],[653,28,675,26],[653,29,675,27],[654,6,676,4],[654,7,676,5],[654,8,676,6],[654,9,676,7],[655,4,677,2],[655,5,677,3],[657,4,679,2],[658,4,680,2],[658,8,680,8,"clearSpecificEnemy"],[658,26,680,26],[658,29,680,30,"enemyId"],[658,36,680,45],[658,40,680,50],[659,6,681,4,"setCombatState"],[659,20,681,18],[659,21,681,19,"prev"],[659,25,681,23],[659,30,681,28],[660,8,682,6],[660,11,682,9,"prev"],[660,15,682,13],[661,8,683,6,"enemies"],[661,15,683,13],[661,17,683,15,"prev"],[661,21,683,19],[661,22,683,20,"enemies"],[661,29,683,27],[661,30,683,28,"filter"],[661,36,683,34],[661,37,683,35,"enemy"],[661,42,683,40],[661,46,683,44,"enemy"],[661,51,683,49],[661,52,683,50,"id"],[661,54,683,52],[661,59,683,57,"enemyId"],[661,66,683,64],[662,6,684,4],[662,7,684,5],[662,8,684,6],[662,9,684,7],[663,4,685,2],[663,5,685,3],[665,4,687,2],[666,4,688,2],[666,8,688,8,"useAbilityManually"],[666,26,688,26],[666,29,688,26,"_s3"],[666,32,688,26],[666,33,688,29],[666,37,688,29,"useCallback"],[666,43,688,40],[666,44,688,40,"useCallback"],[666,55,688,40],[666,57,688,40,"_s3"],[666,60,688,40],[666,61,688,42,"slotIndex"],[666,70,688,59],[666,74,688,73],[667,6,688,73,"_s3"],[667,9,688,73],[668,6,689,4,"console"],[668,13,689,11],[668,14,689,12,"log"],[668,17,689,15],[668,18,689,16],[668,53,689,51,"slotIndex"],[668,62,689,60],[668,64,689,62],[668,65,689,63],[670,6,691,4],[671,6,692,4],[671,10,692,10,"isReady"],[671,17,692,17],[671,20,692,20,"combatState"],[671,31,692,31],[671,32,692,32,"abilityManager"],[671,46,692,46],[671,47,692,47,"isAbilityReady"],[671,61,692,61],[671,62,692,62,"slotIndex"],[671,71,692,71],[671,72,692,72],[672,6,693,4],[672,10,693,8],[672,11,693,9,"isReady"],[672,18,693,16],[672,20,693,18],[673,8,694,6,"console"],[673,15,694,13],[673,16,694,14,"log"],[673,19,694,17],[673,20,694,18],[673,41,694,39,"slotIndex"],[673,50,694,48],[673,85,694,83],[673,86,694,84],[674,8,695,6],[674,15,695,13],[674,20,695,18],[675,6,696,4],[677,6,698,4],[678,6,699,4],[678,10,699,8,"combatState"],[678,21,699,19],[678,22,699,20,"enemies"],[678,29,699,27],[678,30,699,28,"length"],[678,36,699,34],[678,41,699,39],[678,42,699,40],[678,44,699,42],[679,8,700,6,"console"],[679,15,700,13],[679,16,700,14,"log"],[679,19,700,17],[679,20,700,18],[679,69,700,67],[679,70,700,68],[680,8,701,6],[680,15,701,13],[680,20,701,18],[681,6,702,4],[683,6,704,4],[684,6,705,4],[684,10,705,10,"currentTick"],[684,21,705,21],[684,24,705,24,"combatEngine"],[684,43,705,36],[684,44,705,36,"combatEngine"],[684,56,705,36],[684,57,705,37,"getCurrentTick"],[684,71,705,51],[684,72,705,52],[684,73,705,53],[685,6,706,4],[685,10,706,10,"success"],[685,17,706,17],[685,20,706,20,"combatState"],[685,31,706,31],[685,32,706,32,"abilityManager"],[685,46,706,46],[685,47,706,47,"useAbility"],[685,57,706,57],[685,58,706,58,"slotIndex"],[685,67,706,67],[685,69,706,69,"currentTick"],[685,80,706,80],[685,81,706,81],[686,6,708,4],[686,10,708,8,"success"],[686,17,708,15],[686,19,708,17],[687,8,709,6],[688,8,710,6,"setCombatState"],[688,22,710,20],[688,23,710,21,"prev"],[688,27,710,25],[688,31,710,29],[689,10,711,8],[689,14,711,14,"newState"],[689,22,711,22],[689,25,711,25],[690,12,711,27],[690,15,711,30,"prev"],[691,10,711,35],[691,11,711,36],[692,10,712,8,"castAbility"],[692,21,712,19],[692,22,712,20,"newState"],[692,30,712,28],[692,32,712,30,"slotIndex"],[692,41,712,39],[692,42,712,40],[693,10,713,8],[693,17,713,15,"newState"],[693,25,713,23],[694,8,714,6],[694,9,714,7],[694,10,714,8],[695,8,716,6,"console"],[695,15,716,13],[695,16,716,14,"log"],[695,19,716,17],[695,20,716,18],[695,65,716,63,"slotIndex"],[695,74,716,72],[695,76,716,74],[695,77,716,75],[696,8,717,6],[696,15,717,13],[696,19,717,17],[697,6,718,4],[697,7,718,5],[697,13,718,11],[698,8,719,6,"console"],[698,15,719,13],[698,16,719,14,"log"],[698,19,719,17],[698,20,719,18],[698,61,719,59,"slotIndex"],[698,70,719,68],[698,72,719,70],[698,73,719,71],[699,8,720,6],[699,15,720,13],[699,20,720,18],[700,6,721,4],[701,4,722,2],[701,5,722,3],[701,46,722,5],[701,47,722,6,"combatState"],[701,58,722,17],[701,59,722,18,"abilityManager"],[701,73,722,32],[701,75,722,34,"combatState"],[701,86,722,45],[701,87,722,46,"enemies"],[701,94,722,53],[701,95,722,54],[701,96,722,55],[702,4,723,2],[702,8,723,2,"useEffect"],[702,14,723,11],[702,15,723,11,"useEffect"],[702,24,723,11],[702,26,723,12],[702,32,723,18],[703,6,724,4,"combatEngine"],[703,25,724,16],[703,26,724,16,"combatEngine"],[703,38,724,16],[703,39,724,17,"start"],[703,44,724,22],[703,45,724,23],[703,46,724,24],[705,6,726,4],[706,6,727,4],[707,6,728,4,"console"],[707,13,728,11],[707,14,728,12,"log"],[707,17,728,15],[707,18,728,16],[707,97,728,95],[707,98,728,96],[708,6,730,4],[708,13,730,11],[708,19,730,17],[709,8,731,6,"combatEngine"],[709,27,731,18],[709,28,731,18,"combatEngine"],[709,40,731,18],[709,41,731,19,"stop"],[709,45,731,23],[709,46,731,24],[709,47,731,25],[710,6,732,4],[710,7,732,5],[711,4,733,2],[711,5,733,3],[711,7,733,5],[711,9,733,7],[711,10,733,8],[713,4,735,2],[714,4,736,2],[714,8,736,8,"saveAbilityData"],[714,23,736,23],[714,26,736,26],[714,30,736,26,"useCallback"],[714,36,736,37],[714,37,736,37,"useCallback"],[714,48,736,37],[714,50,736,38],[714,56,736,44],[715,6,737,4],[715,10,737,8,"combatState"],[715,21,737,19],[715,22,737,20,"abilityManager"],[715,36,737,34],[715,38,737,36],[716,8,738,6],[716,12,738,12,"abilityData"],[716,23,738,23],[716,26,738,26,"combatState"],[716,37,738,37],[716,38,738,38,"abilityManager"],[716,52,738,52],[716,53,738,53,"getSaveData"],[716,64,738,64],[716,65,738,65],[716,66,738,66],[717,8,739,6,"console"],[717,15,739,13],[717,16,739,14,"log"],[717,19,739,17],[717,20,739,18],[717,70,739,68],[717,72,739,70,"abilityData"],[717,83,739,81],[717,84,739,82],[718,8,740,6,"game"],[718,12,740,10],[718,13,740,11,"updateAbilityData"],[718,30,740,28],[718,31,740,29,"abilityData"],[718,42,740,40],[718,43,740,41],[719,6,741,4],[720,4,742,2],[720,5,742,3],[720,7,742,5],[720,8,742,6,"combatState"],[720,19,742,17],[720,20,742,18,"abilityManager"],[720,34,742,32],[720,36,742,34,"game"],[720,40,742,38],[720,41,742,39,"updateAbilityData"],[720,58,742,56],[720,59,742,57],[720,60,742,58],[721,4,744,2],[721,8,744,8,"contextValue"],[721,20,744,39],[721,23,744,42,"React"],[721,28,744,47],[721,29,744,47,"default"],[721,36,744,47],[721,37,744,48,"useMemo"],[721,44,744,55],[721,45,744,56],[721,52,744,63],[722,6,745,4,"combatState"],[722,17,745,15],[723,6,746,4,"projectiles"],[723,17,746,15],[724,6,747,4,"startCombat"],[724,17,747,15],[725,6,748,4,"stopCombat"],[725,16,748,14],[726,6,749,4,"equipAbility"],[726,18,749,16],[727,6,750,4,"handleEnemyKill"],[727,21,750,19],[728,6,751,4,"getDeck"],[728,13,751,11],[729,6,752,4,"getAvailableAbilities"],[729,27,752,25],[730,6,753,4,"upgradeAbility"],[730,20,753,18],[731,6,754,4,"spawnEnemy"],[731,16,754,14],[732,6,755,4,"spawnBoss"],[732,15,755,13],[733,6,756,4,"clearAllEnemies"],[733,21,756,19],[734,6,757,4,"clearSpecificEnemy"],[734,24,757,22],[735,6,758,4,"triggerLevelUpExplosion"],[735,29,758,27],[736,6,759,4,"findClosestEnemy"],[736,22,759,20],[737,6,760,4,"updateNinjaPosition"],[737,25,760,23],[738,6,761,4,"setManualControlActive"],[738,28,761,26],[739,6,762,4,"lastExplosionTime"],[739,23,762,21],[740,6,763,4,"useAbilityManually"],[740,24,763,22],[741,6,763,24],[742,6,764,4,"saveAbilityData"],[742,21,764,19],[742,22,764,21],[743,4,765,2],[743,5,765,3],[743,6,765,4],[743,8,765,6],[744,4,766,4],[745,4,767,4],[746,4,768,4,"combatState"],[746,15,768,15],[746,17,769,4,"projectiles"],[746,28,769,15],[746,30,770,4,"lastExplosionTime"],[746,47,770,21],[747,4,771,4],[748,4,772,4,"combatState"],[748,15,772,15],[748,16,772,16,"abilityManager"],[748,30,772,30],[748,32,773,4,"combatState"],[748,43,773,15],[748,44,773,16,"enemies"],[748,51,773,23],[748,53,774,4,"useAbilityManually"],[748,71,774,22],[749,4,774,24],[750,4,775,4,"saveAbilityData"],[750,19,775,19],[750,20,775,21],[751,4,775,21],[751,5,776,3],[751,6,776,4],[752,4,778,2],[752,24,779,4],[752,28,779,4,"_reactJsxDevRuntime"],[752,47,779,4],[752,48,779,4,"jsxDEV"],[752,54,779,4],[752,56,779,5,"CombatContext"],[752,69,779,18],[752,70,779,19,"Provider"],[752,78,779,27],[753,6,779,28,"value"],[753,11,779,33],[753,13,779,35,"contextValue"],[753,25,779,48],[754,6,779,48,"children"],[754,14,779,48],[754,16,780,7,"children"],[755,4,780,15],[756,6,780,15,"fileName"],[756,14,780,15],[756,16,780,15,"_jsxFileName"],[756,28,780,15],[757,6,780,15,"lineNumber"],[757,16,780,15],[758,6,780,15,"columnNumber"],[758,18,780,15],[759,4,780,15],[759,11,781,28],[759,12,781,29],[760,2,783,0],[760,3,783,1],[761,2,783,2,"_s4"],[761,5,783,2],[761,6,90,13,"CombatProvider"],[761,20,90,27],[762,4,90,27],[762,12,91,15,"useGame"],[762,24,91,22],[762,25,91,22,"useGame"],[762,32,91,22],[762,34,92,77,"useZone"],[762,46,92,84],[762,47,92,84,"useZone"],[762,54,92,84],[763,2,92,84],[764,2,92,84,"_c"],[764,4,92,84],[764,7,90,13,"CombatProvider"],[764,21,90,27],[765,2,90,27],[765,6,90,27,"_c"],[765,8,90,27],[766,2,90,27,"$RefreshReg$"],[766,14,90,27],[766,15,90,27,"_c"],[766,17,90,27],[767,0,90,27],[767,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5BsC;8B6BG;G7B4B;wC8BG;mB5BE,uC4B;G9BQ;uC+BG;mB7BC,wC6B;G/BE;uBgCG;GhCE;kBiCE;GjCE;gCkCE;GlCE;yBmCE;GnCE;0BoCG;mBlCE;MkCG;GpCC;kCqCG;mBnCM;mBEU;2BCC;YDG;SFC;8CoCK;QpCI;KmCM;GrCC;qBuCG;mBrC2B;MqCG;GvCG;oBwCG;mBtCE;MsCG;GxCC;6ByCG;mBvCC;mCwCE,6BxC;MuCC;GzCC;yC2CG;qBzCsB;OyCI;G3CQ;YCC;W2CO;K3CE;GDC;sC6CG;G7CM;wD8CE;I9CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}