{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      var xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      var goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n      console.log(`💰 ENEMY KILL - Awarding ${xpReward} XP and ${goldReward} gold for ${enemy.name}`);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal immediately\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        // FIXED: Use single filter for all dead enemies regardless of isDying flag\n        var allDeadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n\n        // DEBUG: Check if any enemies actually have 0 or negative health\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 FOUND ${allDeadEnemies.length} enemies with health <= 0:`, allDeadEnemies.map(e => `${e.name}(${e.health}hp, isDying:${e.isDying})`));\n        }\n\n        // Process ALL dead enemies for XP (regardless of isDying status)\n        enemiesToKill = allDeadEnemies;\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (allDeadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${allDeadEnemies.length} dead enemies:`, allDeadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        var unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        console.log(`💀 BULK PROCESSING: ${enemiesToKill.length} total kills, ${unprocessedEnemies.length} unprocessed`);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          var totalXP = 0;\n          var totalGold = 0;\n          var zoneKills = [];\n          var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          var goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              var wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, []); // Empty dependency array - handleEnemyKill is stable\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    var _useState7 = (0, _react.useState)({\n        x: 195,\n        y: 400\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // REMOVED: Legacy handleProjectileHit function - replaced with real-time impact processing\n    // Old system caused state conflicts by applying damage 500ms after the new system\n    // Now using processProjectileImpacts for immediate damage application and death detection\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n\n      // DEBUG: Log damage values being applied\n      console.log(`🚀 CREATING PROJECTILE: damage=${damage}, target=${targetEnemy.name} (${targetEnemy.health}/${targetEnemy.maxHealth} HP)`);\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // REMOVED: Old damage system scheduling - now using real-time impact processing\n      // setTimeout(() => { handleProjectileHit(projectile); }, 500);\n\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      console.log('🚀 Combat engine:', _engineCombatEngine.combatEngine);\n      console.log('🚀 Handle combat tick function:', handleCombatTick);\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n      console.log('🚀 Engine started successfully!');\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              // FIXED: Don't mutate state directly - mark as hit via state update instead\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies SYNCHRONOUSLY - no setTimeout to avoid state conflicts\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    // Process XP immediately within this state update to prevent conflicts\n                    enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n\n              // FIXED: Move projectile hit marking into the same state cycle - no separate setProjectiles call\n              // The projectile cleanup will handle marking and removal in the next iteration\n            }\n\n            // Clean up completed projectiles - FIX: Use 1.0 threshold since progress is capped at 1.0\n            // Also add fallback time-based cleanup for safety\n            var timeBasedCleanup = elapsedTime > 2000; // 2 second fallback\n            if (progress >= 1.0 || timeBasedCleanup) {\n              if (timeBasedCleanup) {\n                console.log(`⚠️ FALLBACK CLEANUP: Projectile ${projectile.id} cleaned up after 2 seconds`);\n              }\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, []); // FIXED: Empty dependency array to prevent interval recreation\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"lv0RwSXXMNmrzfA074n/0ziwNOM=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1159,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1223,2],[27,6,1223,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1223,2],[27,42,1223,2,"require"],[27,49,1223,2],[27,50,1223,2,"_dependencyMap"],[27,64,1223,2],[28,2,1223,2],[28,6,1223,2,"_slicedToArray"],[28,20,1223,2],[28,23,1223,2,"_interopDefault"],[28,38,1223,2],[28,39,1223,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1223,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,94,0],[36,6,94,6,"CombatContext"],[36,19,94,19],[36,35,94,22],[36,39,94,22,"createContext"],[36,45,94,35],[36,46,94,35,"createContext"],[36,59,94,35],[36,61,94,67,"undefined"],[36,70,94,76],[36,71,94,77],[37,2,96,7],[37,6,96,13,"useCombat"],[37,15,96,22],[37,18,96,25,"useCombat"],[37,19,96,25],[37,24,96,50],[38,4,96,50,"_s"],[38,6,96,50],[39,4,97,2],[39,8,97,8,"context"],[39,15,97,15],[39,18,97,18],[39,22,97,18,"useContext"],[39,28,97,28],[39,29,97,28,"useContext"],[39,39,97,28],[39,41,97,29,"CombatContext"],[39,54,97,42],[39,55,97,43],[40,4,98,2],[40,8,98,6],[40,9,98,7,"context"],[40,16,98,14],[40,18,98,16],[41,6,99,4],[41,12,99,10],[41,16,99,14,"Error"],[41,21,99,19],[41,22,99,20],[41,70,99,68],[41,71,99,69],[42,4,100,2],[43,4,101,2],[43,11,101,9,"context"],[43,18,101,16],[44,2,102,0],[44,3,102,1],[45,2,102,2,"_s"],[45,4,102,2],[45,5,96,13,"useCombat"],[45,14,96,22],[46,2,104,0],[46,6,104,4,"enemyCounter"],[46,18,104,16],[46,21,104,19],[46,22,104,20],[46,23,104,21],[46,24,104,22],[48,2,106,7],[48,6,106,13,"CombatProvider"],[48,20,106,27],[48,23,106,30,"_ref"],[48,27,106,30],[48,31,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,106,73],[51,8,106,33,"children"],[51,16,106,41],[51,19,106,41,"_ref"],[51,23,106,41],[51,24,106,33,"children"],[51,32,106,41],[52,4,107,2],[52,8,107,8,"game"],[52,12,107,12],[52,15,107,15],[52,19,107,15,"useGame"],[52,31,107,22],[52,32,107,22,"useGame"],[52,39,107,22],[52,41,107,23],[52,42,107,24],[53,4,108,2],[53,8,108,2,"_useZone"],[53,16,108,2],[53,19,108,77],[53,23,108,77,"useZone"],[53,35,108,84],[53,36,108,84,"useZone"],[53,43,108,84],[53,45,108,85],[53,46,108,86],[54,6,108,10,"currentZone"],[54,17,108,21],[54,20,108,21,"_useZone"],[54,28,108,21],[54,29,108,10,"currentZone"],[54,40,108,21],[55,6,108,23,"currentZoneLevel"],[55,22,108,39],[55,25,108,39,"_useZone"],[55,33,108,39],[55,34,108,23,"currentZoneLevel"],[55,50,108,39],[56,6,108,41,"recordEnemyKill"],[56,21,108,56],[56,24,108,56,"_useZone"],[56,32,108,56],[56,33,108,41,"recordEnemyKill"],[56,48,108,56],[57,6,108,58,"spawnZoneEnemy"],[57,20,108,72],[57,23,108,72,"_useZone"],[57,31,108,72],[57,32,108,58,"spawnZoneEnemy"],[57,46,108,72],[59,4,110,2],[60,4,111,2],[60,8,111,8,"initialCombatState"],[60,26,111,39],[60,29,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,8,128,2,"_useState"],[77,17,128,2],[77,20,128,40],[77,24,128,40,"useState"],[77,30,128,48],[77,31,128,48,"useState"],[77,39,128,48],[77,41,128,62,"initialCombatState"],[77,59,128,80],[77,60,128,81],[78,6,128,81,"_useState2"],[78,16,128,81],[78,23,128,81,"_slicedToArray"],[78,37,128,81],[78,38,128,81,"default"],[78,45,128,81],[78,47,128,81,"_useState"],[78,56,128,81],[79,6,128,9,"combatState"],[79,17,128,20],[79,20,128,20,"_useState2"],[79,30,128,20],[80,6,128,22,"setCombatState"],[80,20,128,36],[80,23,128,36,"_useState2"],[80,33,128,36],[82,4,130,2],[83,4,131,2],[83,8,131,2,"useEffect"],[83,14,131,11],[83,15,131,11,"useEffect"],[83,24,131,11],[83,26,131,12],[83,32,131,18],[84,6,132,4],[84,10,132,8,"game"],[84,14,132,12],[84,15,132,13,"gameState"],[84,24,132,22],[84,25,132,23,"abilityData"],[84,36,132,34],[84,40,132,38,"combatState"],[84,51,132,49],[84,52,132,50,"abilityManager"],[84,66,132,64],[84,68,132,66],[85,8,133,6,"console"],[85,15,133,13],[85,16,133,14,"log"],[85,19,133,17],[85,20,133,18],[85,68,133,66],[85,70,133,68,"game"],[85,74,133,72],[85,75,133,73,"gameState"],[85,84,133,82],[85,85,133,83,"abilityData"],[85,96,133,94],[85,97,133,95],[86,8,134,6,"combatState"],[86,19,134,17],[86,20,134,18,"abilityManager"],[86,34,134,32],[86,35,134,33,"restoreFromSaveData"],[86,54,134,52],[86,55,134,53,"game"],[86,59,134,57],[86,60,134,58,"gameState"],[86,69,134,67],[86,70,134,68,"abilityData"],[86,81,134,79],[86,82,134,80],[88,8,136,6],[89,8,137,6,"setCombatState"],[89,22,137,20],[89,23,137,21,"prev"],[89,27,137,25],[89,32,137,30],[90,10,137,32],[90,13,137,35,"prev"],[91,8,137,40],[91,9,137,41],[91,10,137,42],[91,11,137,43],[92,6,138,4],[93,4,139,2],[93,5,139,3],[93,7,139,5],[93,8,139,6,"game"],[93,12,139,10],[93,13,139,11,"gameState"],[93,22,139,20],[93,23,139,21,"abilityData"],[93,34,139,32],[93,36,139,34,"combatState"],[93,47,139,45],[93,48,139,46,"abilityManager"],[93,62,139,60],[93,63,139,61],[93,64,139,62],[95,4,141,2],[96,4,142,2],[96,8,142,2,"useEffect"],[96,14,142,11],[96,15,142,11,"useEffect"],[96,24,142,11],[96,26,142,12],[96,32,142,18],[97,6,143,4],[97,10,143,8,"game"],[97,14,143,12],[97,15,143,13,"gameState"],[97,24,143,22],[97,25,143,23,"ninja"],[97,30,143,28],[97,32,143,30],[98,8,144,6],[98,12,144,12,"effectiveStats"],[98,26,144,26],[98,29,144,29,"game"],[98,33,144,33],[98,34,144,34,"getEffectiveStats"],[98,51,144,51],[98,52,144,52],[98,53,144,53],[99,8,146,6,"setCombatState"],[99,22,146,20],[99,23,146,21,"prev"],[99,27,146,25],[99,31,146,29],[100,10,147,8],[101,10,148,8],[101,14,148,12,"prev"],[101,18,148,16],[101,19,148,17,"playerStats"],[101,30,148,28],[101,31,148,29,"maxHealth"],[101,40,148,38],[101,45,148,43],[101,48,148,46],[101,52,148,50,"prev"],[101,56,148,54],[101,57,148,55,"playerStats"],[101,68,148,66],[101,69,148,67,"attack"],[101,75,148,73],[101,80,148,78],[101,82,148,80],[101,84,148,82],[102,12,149,10,"console"],[102,19,149,17],[102,20,149,18,"log"],[102,23,149,21],[102,24,149,22],[102,60,149,58,"effectiveStats"],[102,74,149,72],[102,75,149,73,"health"],[102,81,149,79],[102,93,149,91,"effectiveStats"],[102,107,149,105],[102,108,149,106,"attack"],[102,114,149,112],[102,127,149,125,"effectiveStats"],[102,141,149,139],[102,142,149,140,"defense"],[102,149,149,147],[102,151,149,149],[102,152,149,150],[103,12,151,10],[103,19,151,17],[104,14,152,12],[104,17,152,15,"prev"],[104,21,152,19],[105,14,153,12,"playerStats"],[105,25,153,23],[105,27,153,25],[106,16,154,14,"attack"],[106,22,154,20],[106,24,154,22,"effectiveStats"],[106,38,154,36],[106,39,154,37,"attack"],[106,45,154,43],[107,16,155,14,"defense"],[107,23,155,21],[107,25,155,23,"effectiveStats"],[107,39,155,37],[107,40,155,38,"defense"],[107,47,155,45],[108,16,156,14,"health"],[108,22,156,20],[108,24,156,22,"effectiveStats"],[108,38,156,36],[108,39,156,37,"health"],[108,45,156,43],[109,16,156,45],[110,16,157,14,"maxHealth"],[110,25,157,23],[110,27,157,25,"effectiveStats"],[110,41,157,39],[110,42,157,40,"health"],[110,48,157,46],[111,16,158,14,"critChance"],[111,26,158,24],[111,28,158,26,"effectiveStats"],[111,42,158,40],[111,43,158,41,"critChance"],[111,53,158,51],[111,57,158,55],[111,58,158,56],[112,16,159,14,"critDamage"],[112,26,159,24],[112,28,159,26,"effectiveStats"],[112,42,159,40],[112,43,159,41,"critDamage"],[112,53,159,51],[112,57,159,55],[112,60,159,58],[113,16,160,14,"cooldownReduction"],[113,33,160,31],[113,35,160,33,"effectiveStats"],[113,49,160,47],[113,50,160,48,"cooldownReduction"],[113,67,160,65],[113,71,160,69],[114,14,161,12],[115,12,162,10],[115,13,162,11],[116,10,163,8],[117,10,164,8],[117,17,164,15,"prev"],[117,21,164,19],[118,8,165,6],[118,9,165,7],[118,10,165,8],[119,6,166,4],[120,4,167,2],[120,5,167,3],[120,7,167,5],[120,8,167,6,"game"],[120,12,167,10],[120,13,167,11,"gameState"],[120,22,167,20],[120,23,167,21,"ninja"],[120,28,167,26],[120,29,167,27],[120,30,167,28],[121,4,169,2],[121,8,169,2,"_useState3"],[121,18,169,2],[121,21,169,40],[121,25,169,40,"useState"],[121,31,169,48],[121,32,169,48,"useState"],[121,40,169,48],[121,42,169,69],[121,44,169,71],[121,45,169,72],[122,6,169,72,"_useState4"],[122,16,169,72],[122,23,169,72,"_slicedToArray"],[122,37,169,72],[122,38,169,72,"default"],[122,45,169,72],[122,47,169,72,"_useState3"],[122,57,169,72],[123,6,169,9,"projectiles"],[123,17,169,20],[123,20,169,20,"_useState4"],[123,30,169,20],[124,6,169,22,"setProjectiles"],[124,20,169,36],[124,23,169,36,"_useState4"],[124,33,169,36],[125,4,170,2],[125,8,170,2,"_useState5"],[125,18,170,2],[125,21,170,52],[125,25,170,52,"useState"],[125,31,170,60],[125,32,170,60,"useState"],[125,40,170,60],[125,42,170,69],[125,43,170,70],[125,44,170,71],[126,6,170,71,"_useState6"],[126,16,170,71],[126,23,170,71,"_slicedToArray"],[126,37,170,71],[126,38,170,71,"default"],[126,45,170,71],[126,47,170,71,"_useState5"],[126,57,170,71],[127,6,170,9,"lastExplosionTime"],[127,23,170,26],[127,26,170,26,"_useState6"],[127,36,170,26],[128,6,170,28,"setLastExplosionTime"],[128,26,170,48],[128,29,170,48,"_useState6"],[128,39,170,48],[129,4,171,2],[130,4,172,2],[132,4,174,2],[133,4,175,2],[133,8,175,8,"handleEnemyKill"],[133,23,175,23],[133,26,175,26],[133,30,175,26,"useCallback"],[133,36,175,37],[133,37,175,37,"useCallback"],[133,48,175,37],[133,50,175,39,"enemy"],[133,55,175,57],[133,59,175,62],[134,6,176,4],[135,6,177,4],[135,10,177,10,"xpReward"],[135,18,177,18],[135,21,177,21],[135,22,177,22,"enemy"],[135,27,177,27],[135,28,177,28,"zoneXP"],[135,34,177,34],[135,38,177,38],[135,39,177,39],[135,44,177,44,"game"],[135,48,177,48],[135,49,177,49,"gameState"],[135,58,177,58],[135,59,177,59,"subscriptionBenefits"],[135,79,177,79],[135,81,177,81,"xp_multiplier"],[135,94,177,94],[135,98,177,98],[135,101,177,101],[135,102,177,102],[136,6,178,4],[136,10,178,10,"goldReward"],[136,20,178,20],[136,23,178,23],[136,25,178,25],[136,29,178,29,"game"],[136,33,178,33],[136,34,178,34,"gameState"],[136,43,178,43],[136,44,178,44,"subscriptionBenefits"],[136,64,178,64],[136,66,178,66,"drop_multiplier"],[136,81,178,81],[136,85,178,85],[136,88,178,88],[136,89,178,89],[137,6,180,4,"console"],[137,13,180,11],[137,14,180,12,"log"],[137,17,180,15],[137,18,180,16],[137,46,180,44,"xpReward"],[137,54,180,52],[137,65,180,63,"goldReward"],[137,75,180,73],[137,88,180,86,"enemy"],[137,93,180,91],[137,94,180,92,"name"],[137,98,180,96],[137,100,180,98],[137,101,180,99],[139,6,182,4],[140,6,183,4,"game"],[140,10,183,8],[140,11,183,9,"updateNinja"],[140,22,183,20],[140,23,183,21,"prev"],[140,27,183,25],[140,32,183,30],[141,8,184,6,"experience"],[141,18,184,16],[141,20,184,18,"prev"],[141,24,184,22],[141,25,184,23,"experience"],[141,35,184,33],[141,38,184,36,"xpReward"],[141,46,184,44],[142,8,185,6,"gold"],[142,12,185,10],[142,14,185,12,"prev"],[142,18,185,16],[142,19,185,17,"gold"],[142,23,185,21],[142,26,185,24,"goldReward"],[143,6,186,4],[143,7,186,5],[143,8,186,6],[143,9,186,7],[145,6,188,4],[146,6,189,4,"setCombatState"],[146,20,189,18],[146,21,189,19,"prevState"],[146,30,189,28],[146,35,189,33],[147,8,190,6],[147,11,190,9,"prevState"],[147,20,190,18],[148,8,191,6,"enemies"],[148,15,191,13],[148,17,191,15,"prevState"],[148,26,191,24],[148,27,191,25,"enemies"],[148,34,191,32],[148,35,191,33,"map"],[148,38,191,36],[148,39,191,37,"e"],[148,40,191,38],[148,44,192,8,"e"],[148,45,192,9],[148,46,192,10,"id"],[148,48,192,12],[148,53,192,17,"enemy"],[148,58,192,22],[148,59,192,23,"id"],[148,61,192,25],[148,64,192,28],[149,10,192,30],[149,13,192,33,"e"],[149,14,192,34],[150,10,192,36,"xpAwarded"],[150,19,192,45],[150,21,192,47],[151,8,192,52],[151,9,192,53],[151,12,192,56,"e"],[151,13,193,6],[152,6,194,4],[152,7,194,5],[152,8,194,6],[152,9,194,7],[154,6,196,4],[155,6,197,4],[155,10,197,8,"enemy"],[155,15,197,13],[155,16,197,14,"zoneTypeId"],[155,26,197,24],[155,28,197,26],[156,8,198,6,"recordEnemyKill"],[156,23,198,21],[156,24,198,22],[157,10,199,8,"id"],[157,12,199,10],[157,14,199,12,"enemy"],[157,19,199,17],[157,20,199,18,"id"],[157,22,199,20],[158,10,200,8,"typeId"],[158,16,200,14],[158,18,200,16,"enemy"],[158,23,200,21],[158,24,200,22,"zoneTypeId"],[158,34,200,32],[159,10,201,8,"name"],[159,14,201,12],[159,16,201,14,"enemy"],[159,21,201,19],[159,22,201,20,"name"],[159,26,201,24],[160,10,202,8,"icon"],[160,14,202,12],[160,16,202,14],[160,20,202,18],[161,10,203,8,"hp"],[161,12,203,10],[161,14,203,12],[161,15,203,13],[162,10,204,8,"maxHP"],[162,15,204,13],[162,17,204,15,"enemy"],[162,22,204,20],[162,23,204,21,"maxHealth"],[162,32,204,30],[163,10,205,8,"attack"],[163,16,205,14],[163,18,205,16,"enemy"],[163,23,205,21],[163,24,205,22,"stats"],[163,29,205,27],[163,30,205,28,"attack"],[163,36,205,34],[164,10,206,8,"xp"],[164,12,206,10],[164,14,206,12,"enemy"],[164,19,206,17],[164,20,206,18,"zoneXP"],[164,26,206,24],[164,30,206,28],[164,31,206,29],[165,10,207,8,"position"],[165,18,207,16],[165,20,207,18,"enemy"],[165,25,207,23],[165,26,207,24,"position"],[166,8,208,6],[166,9,208,7],[166,10,208,8],[167,6,209,4],[168,4,210,2],[168,5,210,3],[168,7,210,5],[168,8,210,6,"game"],[168,12,210,10],[168,13,210,11,"updateNinja"],[168,24,210,22],[168,26,210,24,"game"],[168,30,210,28],[168,31,210,29,"gameState"],[168,40,210,38],[168,41,210,39,"subscriptionBenefits"],[168,61,210,59],[168,63,210,61,"recordEnemyKill"],[168,78,210,76],[168,79,210,77],[168,80,210,78],[170,4,212,2],[171,4,213,2],[172,4,214,2],[172,8,214,8,"handleCombatTick"],[172,24,214,24],[172,27,214,27,"React"],[172,32,214,32],[172,33,214,32,"default"],[172,40,214,32],[172,41,214,33,"useCallback"],[172,52,214,44],[172,53,214,45],[172,59,214,51],[173,6,214,51],[173,10,214,51,"_s2"],[173,13,214,51],[173,16,214,51,"$RefreshSig$"],[173,28,214,51],[174,6,215,4,"console"],[174,13,215,11],[174,14,215,12,"log"],[174,17,215,15],[174,18,215,16],[174,87,215,85],[174,88,215,86],[175,6,216,4,"console"],[175,13,216,11],[175,14,216,12,"log"],[175,17,216,15],[175,18,216,16],[175,65,216,63,"isManualControlActive"],[175,86,216,84],[175,99,216,97,"game"],[175,103,216,101],[175,104,216,102,"gameState"],[175,113,216,111],[175,114,216,112,"isAlive"],[175,121,216,119],[175,123,216,121],[175,124,216,122],[176,6,218,4],[176,10,218,8,"enemiesToKill"],[176,23,218,36],[176,26,218,39],[176,28,218,41],[176,29,218,42],[176,30,218,43],[178,6,220,4,"_s2"],[178,9,220,4],[178,10,220,4,"setCombatState"],[178,24,220,18],[178,25,220,18,"_s2"],[178,28,220,18],[178,29,220,19,"prev"],[178,33,220,23],[178,37,220,27],[179,8,220,27,"_s2"],[179,11,220,27],[180,8,221,6],[180,12,221,12,"newTick"],[180,19,221,19],[180,22,221,22,"combatEngine"],[180,41,221,34],[180,42,221,34,"combatEngine"],[180,54,221,34],[180,55,221,35,"getCurrentTick"],[180,69,221,49],[180,70,221,50],[180,71,221,51],[181,8,222,6],[181,12,222,12,"newState"],[181,20,222,20],[181,23,222,23],[182,10,222,25],[182,13,222,28,"prev"],[182,17,222,32],[183,10,222,34,"currentTick"],[183,21,222,45],[183,23,222,47,"newTick"],[184,8,222,55],[184,9,222,56],[185,8,224,6],[185,12,224,10],[185,13,224,11,"newState"],[185,21,224,19],[185,22,224,20,"isInCombat"],[185,32,224,30],[185,34,224,32],[185,41,224,39,"newState"],[185,49,224,47],[187,8,226,6],[188,8,227,6,"newState"],[188,16,227,14],[188,17,227,15,"abilityManager"],[188,31,227,29],[188,32,227,30,"updateCooldowns"],[188,47,227,45],[188,48,227,46,"newTick"],[188,55,227,53],[188,56,227,54],[190,8,229,6],[191,8,230,6],[191,12,230,12,"effectResults"],[191,25,230,25],[191,28,230,28,"newState"],[191,36,230,36],[191,37,230,37,"statusEffects"],[191,50,230,50],[191,51,230,51,"processTick"],[191,62,230,62],[191,63,230,63,"newTick"],[191,70,230,70],[191,71,230,71],[193,8,232,6],[194,8,233,6,"effectResults"],[194,21,233,19],[194,22,233,20,"forEach"],[194,29,233,27],[194,30,233,28],[194,31,233,29,"results"],[194,38,233,36],[194,40,233,38,"entityId"],[194,48,233,46],[194,53,233,51],[195,10,234,8],[195,14,234,14,"enemyIndex"],[195,24,234,24],[195,27,234,27,"newState"],[195,35,234,35],[195,36,234,36,"enemies"],[195,43,234,43],[195,44,234,44,"findIndex"],[195,53,234,53],[195,54,234,54,"e"],[195,55,234,55],[195,59,234,59,"e"],[195,60,234,60],[195,61,234,61,"id"],[195,63,234,63],[195,68,234,68,"entityId"],[195,76,234,76],[195,77,234,77],[196,10,235,8],[196,14,235,12,"enemyIndex"],[196,24,235,22],[196,28,235,26],[196,29,235,27],[196,31,235,29],[197,12,236,10,"results"],[197,19,236,17],[197,20,236,18,"forEach"],[197,27,236,25],[197,28,236,26,"result"],[197,34,236,32],[197,38,236,36],[198,14,237,12,"newState"],[198,22,237,20],[198,23,237,21,"enemies"],[198,30,237,28],[198,31,237,29,"enemyIndex"],[198,41,237,39],[198,42,237,40],[198,43,237,41,"health"],[198,49,237,47],[198,53,237,51,"result"],[198,59,237,57],[198,60,237,58,"damage"],[198,66,237,64],[199,14,238,12,"newState"],[199,22,238,20],[199,23,238,21,"enemies"],[199,30,238,28],[199,31,238,29,"enemyIndex"],[199,41,238,39],[199,42,238,40],[199,43,238,41,"lastDamaged"],[199,54,238,52],[199,57,238,55,"newTick"],[199,64,238,62],[200,12,239,10],[200,13,239,11],[200,14,239,12],[201,10,240,8],[202,8,241,6],[202,9,241,7],[202,10,241,8],[204,8,243,6],[205,8,244,6],[206,8,245,6],[206,12,245,10,"newState"],[206,20,245,18],[206,21,245,19,"playerStats"],[206,32,245,30],[206,36,245,34,"game"],[206,40,245,38],[206,41,245,39,"gameState"],[206,50,245,48],[206,51,245,49,"ninja"],[206,56,245,54],[206,58,245,56],[207,10,246,8],[207,14,246,14,"effectiveStats"],[207,28,246,28],[207,31,246,31,"game"],[207,35,246,35],[207,36,246,36,"getEffectiveStats"],[207,53,246,53],[207,54,246,54],[207,55,246,55],[209,10,248,8],[210,10,249,8],[210,14,249,12,"newState"],[210,22,249,20],[210,23,249,21,"playerStats"],[210,34,249,32],[210,35,249,33,"attack"],[210,41,249,39],[210,46,249,44,"effectiveStats"],[210,60,249,58],[210,61,249,59,"attack"],[210,67,249,65],[210,71,250,12,"newState"],[210,79,250,20],[210,80,250,21,"playerStats"],[210,91,250,32],[210,92,250,33,"defense"],[210,99,250,40],[210,104,250,45,"effectiveStats"],[210,118,250,59],[210,119,250,60,"defense"],[210,126,250,67],[210,130,251,12,"newState"],[210,138,251,20],[210,139,251,21,"playerStats"],[210,150,251,32],[210,151,251,33,"maxHealth"],[210,160,251,42],[210,165,251,47,"effectiveStats"],[210,179,251,61],[210,180,251,62,"maxHealth"],[210,189,251,71],[210,191,251,73],[211,12,253,10,"console"],[211,19,253,17],[211,20,253,18,"log"],[211,23,253,21],[211,24,253,22],[211,58,253,56,"newState"],[211,66,253,64],[211,67,253,65,"playerStats"],[211,78,253,76],[211,79,253,77,"attack"],[211,85,253,83],[211,91,253,89,"effectiveStats"],[211,105,253,103],[211,106,253,104,"attack"],[211,112,253,110],[211,125,253,123,"newState"],[211,133,253,131],[211,134,253,132,"playerStats"],[211,145,253,143],[211,146,253,144,"defense"],[211,153,253,151],[211,159,253,157,"effectiveStats"],[211,173,253,171],[211,174,253,172,"defense"],[211,181,253,179],[211,192,253,190,"newState"],[211,200,253,198],[211,201,253,199,"playerStats"],[211,212,253,210],[211,213,253,211,"maxHealth"],[211,222,253,220],[211,228,253,226,"effectiveStats"],[211,242,253,240],[211,243,253,241,"maxHealth"],[211,252,253,250],[211,254,253,252],[211,255,253,253],[213,12,255,10],[214,12,256,10],[214,16,256,14,"newHealth"],[214,25,256,23],[214,28,256,26,"newState"],[214,36,256,34],[214,37,256,35,"playerStats"],[214,48,256,46],[214,49,256,47,"health"],[214,55,256,53],[215,12,257,10],[215,16,257,14,"newState"],[215,24,257,22],[215,25,257,23,"playerStats"],[215,36,257,34],[215,37,257,35,"maxHealth"],[215,46,257,44],[215,51,257,49,"effectiveStats"],[215,65,257,63],[215,66,257,64,"maxHealth"],[215,75,257,73],[215,77,257,75],[216,14,258,12],[217,14,259,12],[217,18,259,16,"effectiveStats"],[217,32,259,30],[217,33,259,31,"maxHealth"],[217,42,259,40],[217,45,259,43,"newState"],[217,53,259,51],[217,54,259,52,"playerStats"],[217,65,259,63],[217,66,259,64,"maxHealth"],[217,75,259,73],[217,78,259,76],[217,81,259,79],[217,83,259,81],[218,16,260,14],[219,16,261,14],[219,20,261,20,"healthRatio"],[219,31,261,31],[219,34,261,34,"newState"],[219,42,261,42],[219,43,261,43,"playerStats"],[219,54,261,54],[219,55,261,55,"maxHealth"],[219,64,261,64],[219,67,261,67],[219,68,261,68],[219,71,262,16,"newState"],[219,79,262,24],[219,80,262,25,"playerStats"],[219,91,262,36],[219,92,262,37,"health"],[219,98,262,43],[219,101,262,46,"newState"],[219,109,262,54],[219,110,262,55,"playerStats"],[219,121,262,66],[219,122,262,67,"maxHealth"],[219,131,262,76],[219,134,262,79],[219,135,262,80],[220,16,263,14,"newHealth"],[220,25,263,23],[220,28,263,26,"Math"],[220,32,263,30],[220,33,263,31,"floor"],[220,38,263,36],[220,39,263,37,"effectiveStats"],[220,53,263,51],[220,54,263,52,"maxHealth"],[220,63,263,61],[220,66,263,64,"healthRatio"],[220,77,263,75],[220,78,263,76],[221,14,264,12],[221,15,264,13],[221,21,264,19],[221,25,264,23,"newState"],[221,33,264,31],[221,34,264,32,"playerStats"],[221,45,264,43],[221,46,264,44,"health"],[221,52,264,50],[221,55,264,53,"effectiveStats"],[221,69,264,67],[221,70,264,68,"maxHealth"],[221,79,264,77],[221,81,264,79],[222,16,265,14],[223,16,266,14,"newHealth"],[223,25,266,23],[223,28,266,26,"effectiveStats"],[223,42,266,40],[223,43,266,41,"maxHealth"],[223,52,266,50],[224,14,267,12],[225,14,268,12],[226,12,269,10],[227,12,271,10,"newState"],[227,20,271,18],[227,21,271,19,"playerStats"],[227,32,271,30],[227,35,271,33],[228,14,272,12],[228,17,272,15,"newState"],[228,25,272,23],[228,26,272,24,"playerStats"],[228,37,272,35],[229,14,273,12,"attack"],[229,20,273,18],[229,22,273,20,"effectiveStats"],[229,36,273,34],[229,37,273,35,"attack"],[229,43,273,41],[230,14,274,12,"defense"],[230,21,274,19],[230,23,274,21,"effectiveStats"],[230,37,274,35],[230,38,274,36,"defense"],[230,45,274,43],[231,14,275,12,"maxHealth"],[231,23,275,21],[231,25,275,23,"effectiveStats"],[231,39,275,37],[231,40,275,38,"maxHealth"],[231,49,275,47],[232,14,275,49],[233,14,276,12,"health"],[233,20,276,18],[233,22,276,20,"newHealth"],[233,31,276,29],[234,14,276,31],[235,14,277,12,"critChance"],[235,24,277,22],[235,26,277,24,"effectiveStats"],[235,40,277,38],[235,41,277,39,"critChance"],[235,51,277,49],[235,55,277,53,"newState"],[235,63,277,61],[235,64,277,62,"playerStats"],[235,75,277,73],[235,76,277,74,"critChance"],[235,86,277,84],[236,14,278,12,"critDamage"],[236,24,278,22],[236,26,278,24,"effectiveStats"],[236,40,278,38],[236,41,278,39,"critDamage"],[236,51,278,49],[236,55,278,53,"newState"],[236,63,278,61],[236,64,278,62,"playerStats"],[236,75,278,73],[236,76,278,74,"critDamage"],[236,86,278,84],[237,14,279,12,"cooldownReduction"],[237,31,279,29],[237,33,279,31,"effectiveStats"],[237,47,279,45],[237,48,279,46,"cooldownReduction"],[237,65,279,63],[237,69,279,67,"newState"],[237,77,279,75],[237,78,279,76,"playerStats"],[237,89,279,87],[237,90,279,88,"cooldownReduction"],[238,12,280,10],[238,13,280,11],[239,10,281,8],[241,10,283,8],[242,10,284,8],[242,14,284,12,"game"],[242,18,284,16],[242,19,284,17,"gameState"],[242,28,284,26],[242,29,284,27,"isAlive"],[242,36,284,34],[242,40,285,12,"game"],[242,44,285,16],[242,45,285,17,"gameState"],[242,54,285,26],[242,55,285,27,"ninja"],[242,60,285,32],[242,61,285,33,"health"],[242,67,285,39],[242,72,285,44,"effectiveStats"],[242,86,285,58],[242,87,285,59,"maxHealth"],[242,96,285,68],[242,100,286,12,"newState"],[242,108,286,20],[242,109,286,21,"playerStats"],[242,120,286,32],[242,121,286,33,"health"],[242,127,286,39],[242,130,286,42,"effectiveStats"],[242,144,286,56],[242,145,286,57,"maxHealth"],[242,154,286,66],[242,157,286,69],[242,160,286,72],[242,162,286,74],[243,12,287,10,"console"],[243,19,287,17],[243,20,287,18,"log"],[243,23,287,21],[243,24,287,22],[243,58,287,56,"newState"],[243,66,287,64],[243,67,287,65,"playerStats"],[243,78,287,76],[243,79,287,77,"health"],[243,85,287,83],[243,91,287,89,"game"],[243,95,287,93],[243,96,287,94,"gameState"],[243,105,287,103],[243,106,287,104,"ninja"],[243,111,287,109],[243,112,287,110,"health"],[243,118,287,116],[243,139,287,137],[243,140,287,138],[244,12,288,10,"newState"],[244,20,288,18],[244,21,288,19,"playerStats"],[244,32,288,30],[244,33,288,31,"health"],[244,39,288,37],[244,42,288,40,"game"],[244,46,288,44],[244,47,288,45,"gameState"],[244,56,288,54],[244,57,288,55,"ninja"],[244,62,288,60],[244,63,288,61,"health"],[244,69,288,67],[245,10,289,8],[246,8,290,6],[248,8,292,6],[249,8,293,6,"newState"],[249,16,293,14],[249,17,293,15,"enemies"],[249,24,293,22],[249,25,293,23,"forEach"],[249,32,293,30],[249,33,293,31,"enemy"],[249,38,293,36],[249,42,293,40],[250,10,294,8],[250,14,294,12],[250,15,294,13,"enemy"],[250,20,294,18],[250,21,294,19,"isBoss"],[250,27,294,25],[250,29,294,27],[251,12,294,29],[252,12,295,10],[253,12,296,10],[253,16,296,16,"MOVEMENT_SPEED"],[253,30,296,30],[253,33,296,33],[253,37,296,37],[253,38,296,38],[253,39,296,39],[254,12,297,10],[254,16,297,16,"SCREEN_WIDTH"],[254,28,297,28],[254,31,297,31],[254,34,297,34],[255,12,298,10],[255,16,298,16,"GAME_AREA_HEIGHT"],[255,32,298,32],[255,35,298,35],[255,38,298,38],[255,39,298,39],[255,40,298,40],[256,12,299,10],[256,16,299,16,"ENEMY_SIZE"],[256,26,299,26],[256,29,299,29],[256,31,299,31],[258,12,301,10],[259,12,302,10],[259,16,302,16,"playerX"],[259,23,302,23],[259,26,302,26,"currentNinjaPosition"],[259,46,302,46],[259,47,302,47,"x"],[259,48,302,48],[260,12,303,10],[260,16,303,16,"playerY"],[260,23,303,23],[260,26,303,26,"currentNinjaPosition"],[260,46,303,46],[260,47,303,47,"y"],[260,48,303,48],[262,12,305,10],[263,12,306,10],[263,16,306,16,"deltaX"],[263,22,306,22],[263,25,306,25,"playerX"],[263,32,306,32],[263,35,306,35,"enemy"],[263,40,306,40],[263,41,306,41,"position"],[263,49,306,49],[263,50,306,50,"x"],[263,51,306,51],[264,12,307,10],[264,16,307,16,"deltaY"],[264,22,307,22],[264,25,307,25,"playerY"],[264,32,307,32],[264,35,307,35,"enemy"],[264,40,307,40],[264,41,307,41,"position"],[264,49,307,49],[264,50,307,50,"y"],[264,51,307,51],[265,12,308,10],[265,16,308,16,"distance"],[265,24,308,24],[265,27,308,27,"Math"],[265,31,308,31],[265,32,308,32,"sqrt"],[265,36,308,36],[265,37,308,37,"deltaX"],[265,43,308,43],[265,46,308,46,"deltaX"],[265,52,308,52],[265,55,308,55,"deltaY"],[265,61,308,61],[265,64,308,64,"deltaY"],[265,70,308,70],[265,71,308,71],[267,12,310,10],[268,12,311,10],[268,16,311,16,"ATTACK_RANGE"],[268,28,311,28],[268,31,311,31],[268,33,311,33],[268,34,311,34],[268,35,311,35],[269,12,312,10],[269,16,312,16,"ATTACK_COOLDOWN"],[269,31,312,31],[269,34,312,34],[269,36,312,36],[269,37,312,37],[269,38,312,38],[271,12,314,10],[271,16,314,14,"distance"],[271,24,314,22],[271,28,314,26,"ATTACK_RANGE"],[271,40,314,38],[271,42,314,40],[272,14,315,12],[273,14,316,12],[273,18,316,16],[273,19,316,17,"enemy"],[273,24,316,22],[273,25,316,23,"lastAttackTick"],[273,39,316,37],[273,41,316,39,"enemy"],[273,46,316,44],[273,47,316,45,"lastAttackTick"],[273,61,316,59],[273,64,316,62],[273,65,316,63],[274,14,318,12],[274,18,318,16,"newState"],[274,26,318,24],[274,27,318,25,"currentTick"],[274,38,318,36],[274,41,318,39,"enemy"],[274,46,318,44],[274,47,318,45,"lastAttackTick"],[274,61,318,59],[274,65,318,63,"ATTACK_COOLDOWN"],[274,80,318,78],[274,82,318,80],[275,16,319,14],[276,16,320,14],[276,20,320,18],[276,21,320,19,"game"],[276,25,320,23],[276,26,320,24,"gameState"],[276,35,320,33],[276,36,320,34,"isAlive"],[276,43,320,41],[276,45,320,43],[277,18,321,16,"console"],[277,25,321,23],[277,26,321,24,"log"],[277,29,321,27],[277,30,321,28],[277,49,321,47,"enemy"],[277,54,321,52],[277,55,321,53,"name"],[277,59,321,57],[277,93,321,91],[277,94,321,92],[278,18,322,16],[279,18,323,16,"enemy"],[279,23,323,21],[279,24,323,22,"lastAttackTick"],[279,38,323,36],[279,41,323,39,"newState"],[279,49,323,47],[279,50,323,48,"currentTick"],[279,61,323,59],[280,16,324,14],[280,17,324,15],[280,23,324,21],[281,18,325,16],[282,18,326,16],[282,22,326,22,"isPlayerInvincible"],[282,40,326,40],[282,43,326,43,"game"],[282,47,326,47],[282,48,326,48,"gameState"],[282,57,326,57],[282,58,326,58,"isInvincible"],[282,70,326,70],[282,74,327,41,"game"],[282,78,327,45],[282,79,327,46,"gameState"],[282,88,327,55],[282,89,327,56,"invincibilityEndTime"],[282,109,327,76],[282,113,328,41,"Date"],[282,117,328,45],[282,118,328,46,"now"],[282,121,328,49],[282,122,328,50],[282,123,328,51],[282,126,328,54,"game"],[282,130,328,58],[282,131,328,59,"gameState"],[282,140,328,68],[282,141,328,69,"invincibilityEndTime"],[282,161,328,89],[283,18,330,16],[283,22,330,20,"isPlayerInvincible"],[283,40,330,38],[283,42,330,40],[284,20,331,18,"console"],[284,27,331,25],[284,28,331,26,"log"],[284,31,331,29],[284,32,331,30],[284,51,331,49,"enemy"],[284,56,331,54],[284,57,331,55,"name"],[284,61,331,59],[284,101,331,99],[284,102,331,100],[285,20,332,18],[286,20,333,18,"enemy"],[286,25,333,23],[286,26,333,24,"lastAttackTick"],[286,40,333,38],[286,43,333,41,"newState"],[286,51,333,49],[286,52,333,50,"currentTick"],[286,63,333,61],[287,18,334,16],[287,19,334,17],[287,25,334,23],[288,20,335,16],[289,20,336,16],[289,24,336,22,"baseAttack"],[289,34,336,32],[289,37,336,35,"enemy"],[289,42,336,40],[289,43,336,41,"stats"],[289,48,336,46],[289,49,336,47,"attack"],[289,55,336,53],[289,58,336,56],[289,61,336,59],[289,62,336,60],[289,63,336,61],[290,20,337,16],[290,24,337,22,"attackDamage"],[290,36,337,34],[290,39,337,37,"Math"],[290,43,337,41],[290,44,337,42,"floor"],[290,49,337,47],[290,50,337,48,"baseAttack"],[290,60,337,58],[290,64,337,62],[290,67,337,65],[290,70,337,68,"Math"],[290,74,337,72],[290,75,337,73,"random"],[290,81,337,79],[290,82,337,80],[290,83,337,81],[290,86,337,84],[290,89,337,87],[290,90,337,88],[290,91,337,89],[290,92,337,90],[290,93,337,91],[291,20,338,16],[291,24,338,22,"playerDefense"],[291,37,338,35],[291,40,338,38,"newState"],[291,48,338,46],[291,49,338,47,"playerStats"],[291,60,338,58],[291,61,338,59,"defense"],[291,68,338,66],[292,20,339,16],[292,24,339,22,"finalDamage"],[292,35,339,33],[292,38,339,36,"Math"],[292,42,339,40],[292,43,339,41,"max"],[292,46,339,44],[292,47,339,45],[292,48,339,46],[292,50,339,48,"attackDamage"],[292,62,339,60],[292,65,339,63,"Math"],[292,69,339,67],[292,70,339,68,"floor"],[292,75,339,73],[292,76,339,74,"playerDefense"],[292,89,339,87],[292,92,339,90],[292,95,339,93],[292,96,339,94],[292,97,339,95],[292,98,339,96],[292,99,339,97],[294,20,341,16,"console"],[294,27,341,23],[294,28,341,24,"log"],[294,31,341,27],[294,32,341,28],[294,53,341,49,"enemy"],[294,58,341,54],[294,59,341,55,"name"],[294,63,341,59],[294,86,341,82,"finalDamage"],[294,97,341,93],[294,109,341,105,"attackDamage"],[294,121,341,117],[294,132,341,128,"Math"],[294,136,341,132],[294,137,341,133,"floor"],[294,142,341,138],[294,143,341,139,"playerDefense"],[294,156,341,152],[294,159,341,155],[294,162,341,158],[294,163,341,159],[294,184,341,180],[294,185,341,181],[296,20,343,16],[297,20,344,16],[297,24,344,22,"newPlayerHealth"],[297,39,344,37],[297,42,344,40,"Math"],[297,46,344,44],[297,47,344,45,"max"],[297,50,344,48],[297,51,344,49],[297,52,344,50],[297,54,344,52,"newState"],[297,62,344,60],[297,63,344,61,"playerStats"],[297,74,344,72],[297,75,344,73,"health"],[297,81,344,79],[297,84,344,82,"finalDamage"],[297,95,344,93],[297,96,344,94],[298,20,345,16,"newState"],[298,28,345,24],[298,29,345,25,"playerStats"],[298,40,345,36],[298,41,345,37,"health"],[298,47,345,43],[298,50,345,46,"newPlayerHealth"],[298,65,345,61],[299,20,347,16,"console"],[299,27,347,23],[299,28,347,24,"log"],[299,31,347,27],[299,32,347,28],[299,53,347,49,"newState"],[299,61,347,57],[299,62,347,58,"playerStats"],[299,73,347,69],[299,74,347,70,"health"],[299,80,347,76],[299,84,347,80,"newState"],[299,92,347,88],[299,93,347,89,"playerStats"],[299,104,347,100],[299,105,347,101,"maxHealth"],[299,114,347,110],[299,124,347,120,"finalDamage"],[299,135,347,131],[299,145,347,141],[299,146,347,142],[301,20,349,16],[302,20,350,16,"enemy"],[302,25,350,21],[302,26,350,22,"lastAttackTick"],[302,40,350,36],[302,43,350,39,"newState"],[302,51,350,47],[302,52,350,48,"currentTick"],[302,63,350,59],[304,20,352,16],[305,20,353,16],[305,24,353,20,"newPlayerHealth"],[305,39,353,35],[305,43,353,39],[305,44,353,40],[305,46,353,42],[306,22,354,18,"console"],[306,29,354,25],[306,30,354,26,"log"],[306,33,354,29],[306,34,354,30],[306,84,354,80],[306,85,354,81],[307,22,355,18],[308,22,356,18,"game"],[308,26,356,22],[308,27,356,23,"updateGameState"],[308,42,356,38],[308,43,356,39],[309,24,356,41,"isAlive"],[309,31,356,48],[309,33,356,50],[310,22,356,56],[310,23,356,57],[310,24,356,58],[311,20,357,16],[312,18,358,16],[313,16,359,14],[314,14,360,12],[315,12,361,10],[315,13,361,11],[315,19,361,17],[316,14,362,12],[317,14,363,12],[318,14,364,12],[318,18,364,16,"distance"],[318,26,364,24],[318,29,364,27],[318,31,364,29],[318,33,364,31],[319,16,365,14],[320,16,366,14],[320,20,366,20,"normalizedX"],[320,31,366,31],[320,34,366,34,"deltaX"],[320,40,366,40],[320,43,366,43,"distance"],[320,51,366,51],[321,16,367,14],[321,20,367,20,"normalizedY"],[321,31,367,31],[321,34,367,34,"deltaY"],[321,40,367,40],[321,43,367,43,"distance"],[321,51,367,51],[323,16,369,14],[324,16,370,14],[324,20,370,20,"randomFactor"],[324,32,370,32],[324,35,370,35],[324,38,370,38],[324,39,370,39],[324,40,370,40],[325,16,371,14],[325,20,371,20,"finalX"],[325,26,371,26],[325,29,371,29,"normalizedX"],[325,40,371,40],[325,43,371,43],[325,44,371,44,"Math"],[325,48,371,48],[325,49,371,49,"random"],[325,55,371,55],[325,56,371,56],[325,57,371,57],[325,60,371,60],[325,63,371,63],[325,67,371,67,"randomFactor"],[325,79,371,79],[326,16,372,14],[326,20,372,20,"finalY"],[326,26,372,26],[326,29,372,29,"normalizedY"],[326,40,372,40],[326,43,372,43],[326,44,372,44,"Math"],[326,48,372,48],[326,49,372,49,"random"],[326,55,372,55],[326,56,372,56],[326,57,372,57],[326,60,372,60],[326,63,372,63],[326,67,372,67,"randomFactor"],[326,79,372,79],[328,16,374,14],[329,16,375,14],[329,20,375,18,"newX"],[329,24,375,22],[329,27,375,25,"enemy"],[329,32,375,30],[329,33,375,31,"position"],[329,41,375,39],[329,42,375,40,"x"],[329,43,375,41],[329,46,375,45,"finalX"],[329,52,375,51],[329,55,375,54,"MOVEMENT_SPEED"],[329,69,375,69],[330,16,376,14],[330,20,376,18,"newY"],[330,24,376,22],[330,27,376,25,"enemy"],[330,32,376,30],[330,33,376,31,"position"],[330,41,376,39],[330,42,376,40,"y"],[330,43,376,41],[330,46,376,45,"finalY"],[330,52,376,51],[330,55,376,54,"MOVEMENT_SPEED"],[330,69,376,69],[332,16,378,14],[333,16,379,14,"newX"],[333,20,379,18],[333,23,379,21,"Math"],[333,27,379,25],[333,28,379,26,"max"],[333,31,379,29],[333,32,379,30],[333,33,379,31],[333,35,379,33,"Math"],[333,39,379,37],[333,40,379,38,"min"],[333,43,379,41],[333,44,379,42,"SCREEN_WIDTH"],[333,56,379,54],[333,59,379,57,"ENEMY_SIZE"],[333,69,379,67],[333,71,379,69,"newX"],[333,75,379,73],[333,76,379,74],[333,77,379,75],[334,16,380,14,"newY"],[334,20,380,18],[334,23,380,21,"Math"],[334,27,380,25],[334,28,380,26,"max"],[334,31,380,29],[334,32,380,30],[334,33,380,31],[334,35,380,33,"Math"],[334,39,380,37],[334,40,380,38,"min"],[334,43,380,41],[334,44,380,42,"GAME_AREA_HEIGHT"],[334,60,380,58],[334,63,380,61,"ENEMY_SIZE"],[334,73,380,71],[334,75,380,73,"newY"],[334,79,380,77],[334,80,380,78],[334,81,380,79],[336,16,382,14],[337,16,383,14,"enemy"],[337,21,383,19],[337,22,383,20,"position"],[337,30,383,28],[337,31,383,29,"x"],[337,32,383,30],[337,35,383,33,"newX"],[337,39,383,37],[338,16,384,14,"enemy"],[338,21,384,19],[338,22,384,20,"position"],[338,30,384,28],[338,31,384,29,"y"],[338,32,384,30],[338,35,384,33,"newY"],[338,39,384,37],[339,14,385,12],[340,14,386,12],[341,12,387,10],[342,10,388,8],[343,8,389,6],[343,9,389,7],[343,10,389,8],[345,8,391,6],[346,8,392,6],[346,12,392,10,"newState"],[346,20,392,18],[346,21,392,19,"shadowClone"],[346,32,392,30],[346,34,392,32],[347,10,393,8],[348,10,394,8,"newState"],[348,18,394,16],[348,19,394,17,"shadowClone"],[348,30,394,28],[348,31,394,29,"remainingTicks"],[348,45,394,43],[348,47,394,45],[350,10,396,8],[351,10,397,8],[351,14,397,14,"cloneOffset"],[351,25,397,25],[351,28,397,28],[351,30,397,30],[351,31,397,31],[351,32,397,32],[352,10,398,8,"newState"],[352,18,398,16],[352,19,398,17,"shadowClone"],[352,30,398,28],[352,31,398,29,"position"],[352,39,398,37],[352,40,398,38,"x"],[352,41,398,39],[352,44,398,42,"currentNinjaPosition"],[352,64,398,62],[352,65,398,63,"x"],[352,66,398,64],[352,69,398,67,"cloneOffset"],[352,80,398,78],[353,10,399,8,"newState"],[353,18,399,16],[353,19,399,17,"shadowClone"],[353,30,399,28],[353,31,399,29,"position"],[353,39,399,37],[353,40,399,38,"y"],[353,41,399,39],[353,44,399,42,"currentNinjaPosition"],[353,64,399,62],[353,65,399,63,"y"],[353,66,399,64],[353,69,399,67],[353,71,399,69],[355,10,401,8],[356,10,402,8],[356,14,402,12,"newState"],[356,22,402,20],[356,23,402,21,"shadowClone"],[356,34,402,32],[356,35,402,33,"remainingTicks"],[356,49,402,47],[356,53,402,51],[356,54,402,52],[356,56,402,54],[357,12,403,10,"console"],[357,19,403,17],[357,20,403,18,"log"],[357,23,403,21],[357,24,403,22],[357,75,403,73],[357,76,403,74],[358,12,404,10,"newState"],[358,20,404,18],[358,21,404,19,"shadowClone"],[358,32,404,30],[358,35,404,33,"undefined"],[358,44,404,42],[359,10,405,8],[359,11,405,9],[359,17,405,15],[360,12,406,10],[361,12,407,10],[362,12,408,10],[362,16,408,16,"CLONE_ATTACK_INTERVAL"],[362,37,408,37],[362,40,408,40],[362,42,408,42],[363,12,409,10],[363,16,409,14,"newState"],[363,24,409,22],[363,25,409,23,"currentTick"],[363,36,409,34],[363,39,409,37,"CLONE_ATTACK_INTERVAL"],[363,60,409,58],[363,65,409,63],[363,66,409,64],[363,70,409,68,"newState"],[363,78,409,76],[363,79,409,77,"enemies"],[363,86,409,84],[363,87,409,85,"length"],[363,93,409,91],[363,96,409,94],[363,97,409,95],[363,99,409,97],[364,14,410,12,"console"],[364,21,410,19],[364,22,410,20,"log"],[364,25,410,23],[364,26,410,24],[364,83,410,81],[364,84,410,82],[366,14,412,12],[367,14,413,12],[367,18,413,18,"target"],[367,24,413,24],[367,27,413,27,"findClosestEnemyInternal"],[367,51,413,51],[367,52,413,52,"newState"],[367,60,413,60],[367,61,413,61,"enemies"],[367,68,413,68],[367,69,413,69],[368,14,414,12],[368,18,414,16,"target"],[368,24,414,22],[368,26,414,24],[369,16,415,14],[370,16,416,14],[370,20,416,20,"cloneDamage"],[370,31,416,31],[370,34,416,34,"Math"],[370,38,416,38],[370,39,416,39,"floor"],[370,44,416,44],[370,45,416,45,"newState"],[370,53,416,53],[370,54,416,54,"playerStats"],[370,65,416,65],[370,66,416,66,"attack"],[370,72,416,72],[370,75,416,75],[370,78,416,78],[370,79,416,79],[372,16,418,14],[373,16,419,14,"createProjectile"],[373,32,419,30],[373,33,419,31,"target"],[373,39,419,37],[373,41,419,39,"cloneDamage"],[373,52,419,50],[373,54,419,52,"newState"],[373,62,419,60],[373,63,419,61,"shadowClone"],[373,74,419,72],[373,75,419,73,"position"],[373,83,419,81],[373,85,419,83],[374,18,420,16,"id"],[374,20,420,18],[374,22,420,20],[374,43,420,41],[375,18,421,16,"name"],[375,22,421,20],[375,24,421,22],[375,45,421,43],[376,18,422,16,"icon"],[376,22,422,20],[376,24,422,22],[377,16,423,14],[377,17,423,15],[377,18,423,16],[378,14,424,12],[379,12,425,10],[380,10,426,8],[381,8,427,6],[383,8,429,6],[384,8,430,6],[385,8,431,6,"console"],[385,15,431,13],[385,16,431,14,"log"],[385,19,431,17],[385,20,431,18],[385,63,431,61,"isManualControlActive"],[385,84,431,82],[385,97,431,95,"game"],[385,101,431,99],[385,102,431,100,"gameState"],[385,111,431,109],[385,112,431,110,"isAlive"],[385,119,431,117],[385,121,431,119],[385,122,431,120],[386,8,432,6],[386,12,432,10],[386,13,432,11,"isManualControlActive"],[386,34,432,32],[386,38,432,36,"game"],[386,42,432,40],[386,43,432,41,"gameState"],[386,52,432,50],[386,53,432,51,"isAlive"],[386,60,432,58],[386,62,432,60],[387,10,433,8],[387,15,433,13],[387,19,433,17,"i"],[387,20,433,18],[387,23,433,21],[387,24,433,22],[387,26,433,24,"i"],[387,27,433,25],[387,30,433,28],[387,31,433,29],[387,33,433,31,"i"],[387,34,433,32],[387,36,433,34],[387,38,433,36],[388,12,434,10],[388,16,434,14,"newState"],[388,24,434,22],[388,25,434,23,"abilityManager"],[388,39,434,37],[388,40,434,38,"isAbilityReady"],[388,54,434,52],[388,55,434,53,"i"],[388,56,434,54],[388,57,434,55],[388,61,434,59,"newState"],[388,69,434,67],[388,70,434,68,"enemies"],[388,77,434,75],[388,78,434,76,"length"],[388,84,434,82],[388,87,434,85],[388,88,434,86],[388,90,434,88],[389,14,435,12],[389,18,435,16,"newState"],[389,26,435,24],[389,27,435,25,"abilityManager"],[389,41,435,39],[389,42,435,40,"useAbility"],[389,52,435,50],[389,53,435,51,"i"],[389,54,435,52],[389,56,435,54,"newTick"],[389,63,435,61],[389,64,435,62],[389,66,435,64],[390,16,436,14,"console"],[390,23,436,21],[390,24,436,22,"log"],[390,27,436,25],[390,28,436,26],[390,73,436,71,"i"],[390,74,436,72],[390,76,436,74],[390,77,436,75],[391,16,437,14,"castAbility"],[391,27,437,25],[391,28,437,26,"newState"],[391,36,437,34],[391,38,437,36,"i"],[391,39,437,37],[391,40,437,38],[392,14,438,12],[393,12,439,10],[394,10,440,8],[395,8,441,6],[397,8,443,6],[398,8,444,6],[399,8,445,6],[399,12,445,12,"allDeadEnemies"],[399,26,445,26],[399,29,445,29,"newState"],[399,37,445,37],[399,38,445,38,"enemies"],[399,45,445,45],[399,46,445,46,"filter"],[399,52,445,52],[399,53,445,53,"enemy"],[399,58,445,58],[399,62,445,62,"enemy"],[399,67,445,67],[399,68,445,68,"health"],[399,74,445,74],[399,78,445,78],[399,79,445,79],[399,80,445,80],[401,8,447,6],[402,8,448,6],[402,12,448,10,"allDeadEnemies"],[402,26,448,24],[402,27,448,25,"length"],[402,33,448,31],[402,36,448,34],[402,37,448,35],[402,39,448,37],[403,10,449,8,"console"],[403,17,449,15],[403,18,449,16,"log"],[403,21,449,19],[403,22,449,20],[403,34,449,32,"allDeadEnemies"],[403,48,449,46],[403,49,449,47,"length"],[403,55,449,53],[403,83,449,81],[403,85,449,83,"allDeadEnemies"],[403,99,449,97],[403,100,449,98,"map"],[403,103,449,101],[403,104,449,102,"e"],[403,105,449,103],[403,109,449,107],[403,112,449,110,"e"],[403,113,449,111],[403,114,449,112,"name"],[403,118,449,116],[403,122,449,120,"e"],[403,123,449,121],[403,124,449,122,"health"],[403,130,449,128],[403,145,449,143,"e"],[403,146,449,144],[403,147,449,145,"isDying"],[403,154,449,152],[403,157,449,155],[403,158,449,156],[403,159,449,157],[404,8,450,6],[406,8,452,6],[407,8,453,6,"enemiesToKill"],[407,21,453,19],[407,24,453,22,"allDeadEnemies"],[407,38,453,36],[409,8,455,6],[410,8,456,6],[410,12,456,12,"currentTime"],[410,23,456,23],[410,26,456,26,"Date"],[410,30,456,30],[410,31,456,31,"now"],[410,34,456,34],[410,35,456,35],[410,36,456,36],[411,8,457,6,"newState"],[411,16,457,14],[411,17,457,15,"enemies"],[411,24,457,22],[411,27,457,25,"newState"],[411,35,457,33],[411,36,457,34,"enemies"],[411,43,457,41],[411,44,457,42,"filter"],[411,50,457,48],[411,51,457,49,"enemy"],[411,56,457,54],[411,60,457,58],[412,10,458,8],[412,14,458,12,"enemy"],[412,19,458,17],[412,20,458,18,"isDying"],[412,27,458,25],[412,31,458,29,"enemy"],[412,36,458,34],[412,37,458,35,"deathStartTime"],[412,51,458,49],[412,53,458,51],[413,12,459,10],[413,16,459,16,"animationDuration"],[413,33,459,33],[413,36,459,36],[413,39,459,39],[413,40,459,40],[413,41,459,41],[414,12,460,10],[414,16,460,16,"isAnimationComplete"],[414,35,460,35],[414,38,460,38,"currentTime"],[414,49,460,49],[414,52,460,52,"enemy"],[414,57,460,57],[414,58,460,58,"deathStartTime"],[414,72,460,72],[414,76,460,76,"animationDuration"],[414,93,460,93],[415,12,461,10],[415,16,461,14,"isAnimationComplete"],[415,35,461,33],[415,37,461,35],[416,14,462,12,"console"],[416,21,462,19],[416,22,462,20,"log"],[416,25,462,23],[416,26,462,24],[416,58,462,56,"enemy"],[416,63,462,61],[416,64,462,62,"name"],[416,68,462,66],[416,86,462,84,"currentTime"],[416,97,462,95],[416,100,462,98,"enemy"],[416,105,462,103],[416,106,462,104,"deathStartTime"],[416,120,462,118],[416,129,462,127],[416,130,462,128],[417,14,463,12],[417,21,463,19],[417,26,463,24],[417,27,463,25],[417,28,463,26],[418,12,464,10],[419,10,465,8],[420,10,466,8],[420,17,466,15],[420,21,466,19],[420,22,466,20],[420,23,466,21],[421,8,467,6],[421,9,467,7],[421,10,467,8],[423,8,469,6],[424,8,470,6],[424,12,470,10,"allDeadEnemies"],[424,26,470,24],[424,27,470,25,"length"],[424,33,470,31],[424,36,470,34],[424,37,470,35],[424,39,470,37],[425,10,471,8,"console"],[425,17,471,15],[425,18,471,16,"log"],[425,21,471,19],[425,22,471,20],[425,49,471,47,"allDeadEnemies"],[425,63,471,61],[425,64,471,62,"length"],[425,70,471,68],[425,86,471,84],[425,88,471,86,"allDeadEnemies"],[425,102,471,100],[425,103,471,101,"map"],[425,106,471,104],[425,107,471,105,"e"],[425,108,471,106],[425,112,471,110],[425,115,471,113,"e"],[425,116,471,114],[425,117,471,115,"id"],[425,119,471,117],[425,123,471,121,"e"],[425,124,471,122],[425,125,471,123,"health"],[425,131,471,129],[425,136,471,134],[425,137,471,135],[425,138,471,136],[426,8,472,6],[428,8,474,6],[429,8,475,6],[429,12,475,12,"lowHealthEnemies"],[429,28,475,28],[429,31,475,31,"newState"],[429,39,475,39],[429,40,475,40,"enemies"],[429,47,475,47],[429,48,475,48,"filter"],[429,54,475,54],[429,55,475,55,"enemy"],[429,60,475,60],[429,64,475,64,"enemy"],[429,69,475,69],[429,70,475,70,"health"],[429,76,475,76],[429,80,475,80],[429,82,475,82],[429,86,475,86,"enemy"],[429,91,475,91],[429,92,475,92,"health"],[429,98,475,98],[429,101,475,101],[429,102,475,102],[429,103,475,103],[430,8,476,6],[430,12,476,10,"lowHealthEnemies"],[430,28,476,26],[430,29,476,27,"length"],[430,35,476,33],[430,38,476,36],[430,39,476,37],[430,41,476,39],[431,10,477,8,"console"],[431,17,477,15],[431,18,477,16,"log"],[431,21,477,19],[431,22,477,20],[431,61,477,59],[431,63,477,61,"lowHealthEnemies"],[431,79,477,77],[431,80,477,78,"map"],[431,83,477,81],[431,84,477,82,"e"],[431,85,477,83],[431,89,477,87],[431,92,477,90,"e"],[431,93,477,91],[431,94,477,92,"id"],[431,96,477,94],[431,100,477,98,"e"],[431,101,477,99],[431,102,477,100,"health"],[431,108,477,106],[431,112,477,110,"e"],[431,113,477,111],[431,114,477,112,"maxHealth"],[431,123,477,121],[431,128,477,126],[431,129,477,127],[431,130,477,128],[432,8,478,6],[434,8,480,6],[435,8,481,6],[435,12,481,12,"beforeCount"],[435,23,481,23],[435,26,481,26,"newState"],[435,34,481,34],[435,35,481,35,"enemies"],[435,42,481,42],[435,43,481,43,"length"],[435,49,481,49],[436,8,482,6,"newState"],[436,16,482,14],[436,17,482,15,"enemies"],[436,24,482,22],[436,27,482,25,"newState"],[436,35,482,33],[436,36,482,34,"enemies"],[436,43,482,41],[436,44,482,42,"filter"],[436,50,482,48],[436,51,482,49,"enemy"],[436,56,482,54],[436,60,482,58,"enemy"],[436,65,482,63],[436,66,482,64,"health"],[436,72,482,70],[436,75,482,73],[436,76,482,74],[436,77,482,75],[437,8,483,6],[437,12,483,12,"afterCount"],[437,22,483,22],[437,25,483,25,"newState"],[437,33,483,33],[437,34,483,34,"enemies"],[437,41,483,41],[437,42,483,42,"length"],[437,48,483,48],[438,8,485,6],[438,12,485,10,"beforeCount"],[438,23,485,21],[438,28,485,26,"afterCount"],[438,38,485,36],[438,40,485,38],[439,10,486,8,"console"],[439,17,486,15],[439,18,486,16,"log"],[439,21,486,19],[439,22,486,20],[439,52,486,50,"beforeCount"],[439,63,486,61],[439,66,486,64,"afterCount"],[439,76,486,74],[439,102,486,100],[439,103,486,101],[440,8,487,6],[442,8,489,6],[443,8,490,6],[444,8,491,6],[444,12,491,12,"MAX_ENEMIES"],[444,23,491,23],[444,26,491,26],[444,28,491,28],[444,29,491,29],[444,30,491,30],[445,8,492,6],[445,12,492,12,"MIN_SPAWN_DELAY"],[445,27,492,27],[445,30,492,30],[445,33,492,33],[445,34,492,34],[445,35,492,35],[446,8,493,6],[446,12,493,12,"now"],[446,15,493,15],[446,18,493,18,"Date"],[446,22,493,22],[446,23,493,23,"now"],[446,26,493,26],[446,27,493,27],[446,28,493,28],[447,8,494,6],[447,12,494,12,"hasBoss"],[447,19,494,19],[447,22,494,22,"newState"],[447,30,494,30],[447,31,494,31,"enemies"],[447,38,494,38],[447,39,494,39,"some"],[447,43,494,43],[447,44,494,44,"enemy"],[447,49,494,49],[447,53,494,53,"enemy"],[447,58,494,58],[447,59,494,59,"isBoss"],[447,65,494,65],[447,66,494,66],[449,8,496,6],[450,8,497,6],[450,12,497,10],[450,13,497,11,"newState"],[450,21,497,19],[450,22,497,20,"lastSpawnTime"],[450,35,497,33],[450,37,497,35],[451,10,498,8,"newState"],[451,18,498,16],[451,19,498,17,"lastSpawnTime"],[451,32,498,30],[451,35,498,33,"now"],[451,38,498,36],[452,8,499,6],[453,8,501,6,"console"],[453,15,501,13],[453,16,501,14,"log"],[453,19,501,17],[453,20,501,18],[453,53,501,51,"newState"],[453,61,501,59],[453,62,501,60,"enemies"],[453,69,501,67],[453,70,501,68,"length"],[453,76,501,74],[453,85,501,83,"MAX_ENEMIES"],[453,96,501,94],[453,109,501,107,"hasBoss"],[453,116,501,114],[453,118,501,116],[453,119,501,117],[455,8,503,6],[456,8,504,6],[456,12,504,10],[456,13,504,11,"hasBoss"],[456,20,504,18],[456,24,504,22,"newState"],[456,32,504,30],[456,33,504,31,"enemies"],[456,40,504,38],[456,41,504,39,"length"],[456,47,504,45],[456,50,504,48,"MAX_ENEMIES"],[456,61,504,59],[456,65,504,64,"now"],[456,68,504,67],[456,71,504,70,"newState"],[456,79,504,78],[456,80,504,79,"lastSpawnTime"],[456,93,504,92],[456,97,504,97,"MIN_SPAWN_DELAY"],[456,112,504,112],[456,114,504,114],[457,10,505,8,"console"],[457,17,505,15],[457,18,505,16,"log"],[457,21,505,19],[457,22,505,20],[457,43,505,41,"newState"],[457,51,505,49],[457,52,505,50,"enemies"],[457,59,505,57],[457,60,505,58,"length"],[457,66,505,64],[457,69,505,67],[457,70,505,68],[457,74,505,72,"MAX_ENEMIES"],[457,85,505,83],[457,87,505,85],[457,88,505,86],[458,10,506,8,"spawnTestEnemy"],[458,24,506,22],[458,25,506,23,"newState"],[458,33,506,31],[458,34,506,32],[459,10,507,8,"newState"],[459,18,507,16],[459,19,507,17,"lastSpawnTime"],[459,32,507,30],[459,35,507,33,"now"],[459,38,507,36],[460,8,508,6],[461,8,510,6],[461,15,510,13,"newState"],[461,23,510,21],[462,6,511,4],[462,7,511,5],[462,47,511,6],[464,6,513,4],[465,6,514,4],[465,10,514,8,"enemiesToKill"],[465,23,514,21],[465,24,514,22,"length"],[465,30,514,28],[465,33,514,31],[465,34,514,32],[465,36,514,34],[466,8,515,6],[467,8,516,6],[467,12,516,12,"unprocessedEnemies"],[467,30,516,30],[467,33,516,33,"enemiesToKill"],[467,46,516,46],[467,47,516,47,"filter"],[467,53,516,53],[467,54,516,54,"enemy"],[467,59,516,59],[467,63,516,63],[467,64,516,64,"enemy"],[467,69,516,69],[467,70,516,70,"xpAwarded"],[467,79,516,79],[467,80,516,80],[468,8,518,6,"console"],[468,15,518,13],[468,16,518,14,"log"],[468,19,518,17],[468,20,518,18],[468,43,518,41,"enemiesToKill"],[468,56,518,54],[468,57,518,55,"length"],[468,63,518,61],[468,80,518,78,"unprocessedEnemies"],[468,98,518,96],[468,99,518,97,"length"],[468,105,518,103],[468,119,518,117],[468,120,518,118],[469,8,520,6],[469,12,520,10,"unprocessedEnemies"],[469,30,520,28],[469,31,520,29,"length"],[469,37,520,35],[469,40,520,38],[469,41,520,39],[469,43,520,41],[470,10,521,8],[471,10,522,8],[471,14,522,12,"totalXP"],[471,21,522,19],[471,24,522,22],[471,25,522,23],[472,10,523,8],[472,14,523,12,"totalGold"],[472,23,523,21],[472,26,523,24],[472,27,523,25],[473,10,524,8],[473,14,524,14,"zoneKills"],[473,23,524,30],[473,26,524,33],[473,28,524,35],[474,10,526,8],[474,14,526,14,"xpMultiplier"],[474,26,526,26],[474,29,526,29,"game"],[474,33,526,33],[474,34,526,34,"gameState"],[474,43,526,43],[474,44,526,44,"subscriptionBenefits"],[474,64,526,64],[474,66,526,66,"xp_multiplier"],[474,79,526,79],[474,83,526,83],[474,86,526,86],[475,10,527,8],[475,14,527,14,"goldMultiplier"],[475,28,527,28],[475,31,527,31,"game"],[475,35,527,35],[475,36,527,36,"gameState"],[475,45,527,45],[475,46,527,46,"subscriptionBenefits"],[475,66,527,66],[475,68,527,68,"drop_multiplier"],[475,83,527,83],[475,87,527,87],[475,90,527,90],[476,10,529,8,"unprocessedEnemies"],[476,28,529,26],[476,29,529,27,"forEach"],[476,36,529,34],[476,37,529,35,"enemy"],[476,42,529,40],[476,46,529,44],[477,12,530,10,"totalXP"],[477,19,530,17],[477,23,530,21],[477,24,530,22,"enemy"],[477,29,530,27],[477,30,530,28,"zoneXP"],[477,36,530,34],[477,40,530,38],[477,41,530,39],[477,45,530,43,"xpMultiplier"],[477,57,530,55],[478,12,531,10,"totalGold"],[478,21,531,19],[478,25,531,23],[478,27,531,25],[478,30,531,28,"goldMultiplier"],[478,44,531,42],[479,12,533,10],[479,16,533,14,"enemy"],[479,21,533,19],[479,22,533,20,"zoneTypeId"],[479,32,533,30],[479,34,533,32],[480,14,534,12,"zoneKills"],[480,23,534,21],[480,24,534,22,"push"],[480,28,534,26],[480,29,534,27],[481,16,535,14,"id"],[481,18,535,16],[481,20,535,18,"enemy"],[481,25,535,23],[481,26,535,24,"id"],[481,28,535,26],[482,16,536,14,"typeId"],[482,22,536,20],[482,24,536,22,"enemy"],[482,29,536,27],[482,30,536,28,"zoneTypeId"],[482,40,536,38],[483,16,537,14,"name"],[483,20,537,18],[483,22,537,20,"enemy"],[483,27,537,25],[483,28,537,26,"name"],[483,32,537,30],[484,16,538,14,"icon"],[484,20,538,18],[484,22,538,20],[484,26,538,24],[485,16,539,14,"hp"],[485,18,539,16],[485,20,539,18],[485,21,539,19],[486,16,540,14,"maxHP"],[486,21,540,19],[486,23,540,21,"enemy"],[486,28,540,26],[486,29,540,27,"maxHealth"],[486,38,540,36],[487,16,541,14,"attack"],[487,22,541,20],[487,24,541,22,"enemy"],[487,29,541,27],[487,30,541,28,"stats"],[487,35,541,33],[487,36,541,34,"attack"],[487,42,541,40],[488,16,542,14,"xp"],[488,18,542,16],[488,20,542,18,"enemy"],[488,25,542,23],[488,26,542,24,"zoneXP"],[488,32,542,30],[488,36,542,34],[488,37,542,35],[489,16,543,14,"position"],[489,24,543,22],[489,26,543,24,"enemy"],[489,31,543,29],[489,32,543,30,"position"],[490,14,544,12],[490,15,544,13],[490,16,544,14],[491,12,545,10],[492,10,546,8],[492,11,546,9],[492,12,546,10],[494,10,548,8],[495,10,549,8,"game"],[495,14,549,12],[495,15,549,13,"updateNinja"],[495,26,549,24],[495,27,549,25,"prev"],[495,31,549,29],[495,36,549,34],[496,12,550,10,"experience"],[496,22,550,20],[496,24,550,22,"prev"],[496,28,550,26],[496,29,550,27,"experience"],[496,39,550,37],[496,42,550,40,"totalXP"],[496,49,550,47],[497,12,551,10,"gold"],[497,16,551,14],[497,18,551,16,"prev"],[497,22,551,20],[497,23,551,21,"gold"],[497,27,551,25],[497,30,551,28,"totalGold"],[498,10,552,8],[498,11,552,9],[498,12,552,10],[498,13,552,11],[500,10,554,8],[501,10,555,8,"zoneKills"],[501,19,555,17],[501,20,555,18,"forEach"],[501,27,555,25],[501,28,555,26,"zoneEnemy"],[501,37,555,35],[501,41,555,39,"recordEnemyKill"],[501,56,555,54],[501,57,555,55,"zoneEnemy"],[501,66,555,64],[501,67,555,65],[501,68,555,66],[503,10,557,8],[504,10,558,8,"setCombatState"],[504,24,558,22],[504,25,558,23,"prev"],[504,29,558,27],[504,34,558,32],[505,12,559,10],[505,15,559,13,"prev"],[505,19,559,17],[506,12,560,10,"enemies"],[506,19,560,17],[506,21,560,19,"prev"],[506,25,560,23],[506,26,560,24,"enemies"],[506,33,560,31],[506,34,560,32,"map"],[506,37,560,35],[506,38,560,36,"enemy"],[506,43,560,41],[506,47,560,45],[507,14,561,12],[507,18,561,18,"wasProcessed"],[507,30,561,30],[507,33,561,33,"unprocessedEnemies"],[507,51,561,51],[507,52,561,52,"find"],[507,56,561,56],[507,57,561,57,"processed"],[507,66,561,66],[507,70,561,70,"processed"],[507,79,561,79],[507,80,561,80,"id"],[507,82,561,82],[507,87,561,87,"enemy"],[507,92,561,92],[507,93,561,93,"id"],[507,95,561,95],[507,96,561,96],[508,14,562,12],[508,21,562,19,"wasProcessed"],[508,33,562,31],[508,36,562,34],[509,16,562,36],[509,19,562,39,"enemy"],[509,24,562,44],[510,16,562,46,"xpAwarded"],[510,25,562,55],[510,27,562,57],[511,14,562,62],[511,15,562,63],[511,18,562,66,"enemy"],[511,23,562,71],[512,12,563,10],[512,13,563,11],[513,10,564,8],[513,11,564,9],[513,12,564,10],[513,13,564,11],[514,8,565,6],[515,6,566,4],[516,4,567,2],[516,5,567,3],[516,7,567,5],[516,9,567,7],[516,10,567,8],[516,11,567,9],[516,12,567,10],[518,4,569,2],[519,4,570,2],[519,8,570,8,"findClosestEnemyInternal"],[519,32,570,32],[519,35,570,36,"enemies"],[519,42,570,58],[519,46,570,83],[520,6,571,4],[520,10,571,8,"enemies"],[520,17,571,15],[520,18,571,16,"length"],[520,24,571,22],[520,29,571,27],[520,30,571,28],[520,32,571,30],[520,39,571,37],[520,43,571,41],[522,6,573,4],[523,6,574,4],[523,10,574,10,"SCREEN_WIDTH"],[523,22,574,22],[523,25,574,25],[523,28,574,28],[524,6,575,4],[524,10,575,10,"GAME_AREA_HEIGHT"],[524,26,575,26],[524,29,575,29],[524,32,575,32],[524,35,575,35],[524,38,575,38],[524,39,575,39],[524,40,575,40],[525,6,576,4],[525,10,576,10,"ninjaX"],[525,16,576,16],[525,19,576,19,"SCREEN_WIDTH"],[525,31,576,31],[525,34,576,34],[525,35,576,35],[526,6,577,4],[526,10,577,10,"ninjaY"],[526,16,577,16],[526,19,577,19,"GAME_AREA_HEIGHT"],[526,35,577,35],[526,38,577,38],[526,39,577,39],[527,6,579,4],[527,10,579,8,"closestEnemy"],[527,22,579,20],[527,25,579,23,"enemies"],[527,32,579,30],[527,33,579,31],[527,34,579,32],[527,35,579,33],[528,6,580,4],[528,10,580,8,"closestDistance"],[528,25,580,23],[528,28,580,26,"Infinity"],[528,36,580,34],[529,6,582,4,"enemies"],[529,13,582,11],[529,14,582,12,"forEach"],[529,21,582,19],[529,22,582,20,"enemy"],[529,27,582,25],[529,31,582,29],[530,8,583,6],[530,12,583,12,"distance"],[530,20,583,20],[530,23,583,23,"Math"],[530,27,583,27],[530,28,583,28,"sqrt"],[530,32,583,32],[530,33,584,8,"Math"],[530,37,584,12],[530,38,584,13,"pow"],[530,41,584,16],[530,42,584,17,"enemy"],[530,47,584,22],[530,48,584,23,"position"],[530,56,584,31],[530,57,584,32,"x"],[530,58,584,33],[530,61,584,36,"ninjaX"],[530,67,584,42],[530,69,584,44],[530,70,584,45],[530,71,584,46],[530,74,585,8,"Math"],[530,78,585,12],[530,79,585,13,"pow"],[530,82,585,16],[530,83,585,17,"enemy"],[530,88,585,22],[530,89,585,23,"position"],[530,97,585,31],[530,98,585,32,"y"],[530,99,585,33],[530,102,585,36,"ninjaY"],[530,108,585,42],[530,110,585,44],[530,111,585,45],[530,112,586,6],[530,113,586,7],[531,8,588,6],[531,12,588,10,"distance"],[531,20,588,18],[531,23,588,21,"closestDistance"],[531,38,588,36],[531,40,588,38],[532,10,589,8,"closestDistance"],[532,25,589,23],[532,28,589,26,"distance"],[532,36,589,34],[533,10,590,8,"closestEnemy"],[533,22,590,20],[533,25,590,23,"enemy"],[533,30,590,28],[534,8,591,6],[535,6,592,4],[535,7,592,5],[535,8,592,6],[536,6,594,4,"console"],[536,13,594,11],[536,14,594,12,"log"],[536,17,594,15],[536,18,594,16],[536,60,594,58,"closestDistance"],[536,75,594,73],[536,76,594,74,"toFixed"],[536,83,594,81],[536,84,594,82],[536,85,594,83],[536,86,594,84],[536,88,594,86],[536,89,594,87],[537,6,595,4],[537,13,595,11,"closestEnemy"],[537,25,595,23],[538,4,596,2],[538,5,596,3],[540,4,598,2],[541,4,599,2],[541,8,599,8,"findClosestEnemy"],[541,24,599,24],[541,27,599,27,"findClosestEnemy"],[541,28,599,27],[541,33,599,53],[542,6,600,4],[542,13,600,11,"findClosestEnemyInternal"],[542,37,600,35],[542,38,600,36,"combatState"],[542,49,600,47],[542,50,600,48,"enemies"],[542,57,600,55],[542,58,600,56],[543,4,601,2],[543,5,601,3],[545,4,603,2],[546,4,604,2],[547,4,605,2],[547,8,605,2,"_useState7"],[547,18,605,2],[547,21,605,58],[547,25,605,58,"useState"],[547,31,605,66],[547,32,605,66,"useState"],[547,40,605,66],[547,42,605,91],[548,8,605,93,"x"],[548,9,605,94],[548,11,605,96],[548,14,605,99],[549,8,605,101,"y"],[549,9,605,102],[549,11,605,104],[550,6,605,108],[550,7,605,109],[550,8,605,110],[551,6,605,110,"_useState8"],[551,16,605,110],[551,23,605,110,"_slicedToArray"],[551,37,605,110],[551,38,605,110,"default"],[551,45,605,110],[551,47,605,110,"_useState7"],[551,57,605,110],[552,6,605,9,"currentNinjaPosition"],[552,26,605,29],[552,29,605,29,"_useState8"],[552,39,605,29],[553,6,605,31,"setCurrentNinjaPosition"],[553,29,605,54],[553,32,605,54,"_useState8"],[553,42,605,54],[554,4,606,2],[554,8,606,2,"_useState9"],[554,18,606,2],[554,21,606,60],[554,25,606,60,"useState"],[554,31,606,68],[554,32,606,68,"useState"],[554,40,606,68],[554,42,606,69],[554,47,606,74],[554,48,606,75],[555,6,606,75,"_useState0"],[555,16,606,75],[555,23,606,75,"_slicedToArray"],[555,37,606,75],[555,38,606,75,"default"],[555,45,606,75],[555,47,606,75,"_useState9"],[555,57,606,75],[556,6,606,9,"isManualControlActive"],[556,27,606,30],[556,30,606,30,"_useState0"],[556,40,606,30],[557,6,606,32,"setIsManualControlActive"],[557,30,606,56],[557,33,606,56,"_useState0"],[557,43,606,56],[559,4,608,2],[560,4,609,2],[560,8,609,8,"updateNinjaPosition"],[560,27,609,27],[560,30,609,30],[560,34,609,30,"useCallback"],[560,40,609,41],[560,41,609,41,"useCallback"],[560,52,609,41],[560,54,609,43,"newPosition"],[560,65,609,78],[560,69,609,83],[561,6,610,4,"setCurrentNinjaPosition"],[561,29,610,27],[561,30,610,28,"newPosition"],[561,41,610,39],[561,42,610,40],[562,4,611,2],[562,5,611,3],[562,7,611,5],[562,9,611,7],[562,10,611,8],[564,4,613,2],[565,4,614,2],[565,8,614,8,"setManualControlActive"],[565,30,614,30],[565,33,614,33],[565,37,614,33,"useCallback"],[565,43,614,44],[565,44,614,44,"useCallback"],[565,55,614,44],[565,57,614,46,"active"],[565,63,614,61],[565,67,614,66],[566,6,615,4,"setIsManualControlActive"],[566,30,615,28],[566,31,615,29,"active"],[566,37,615,35],[566,38,615,36],[567,6,616,4,"console"],[567,13,616,11],[567,14,616,12,"log"],[567,17,616,15],[567,18,616,16],[567,39,616,37,"active"],[567,45,616,43],[567,48,616,46],[567,59,616,57],[567,62,616,60],[567,75,616,73],[567,88,616,86,"active"],[567,94,616,92],[567,97,616,95],[567,105,616,103],[567,108,616,106],[567,117,616,115],[567,119,616,117],[567,120,616,118],[568,4,617,2],[568,5,617,3],[568,7,617,5],[568,9,617,7],[568,10,617,8],[570,4,619,2],[571,4,620,2],[572,4,621,2],[574,4,623,2],[575,4,624,2],[575,8,624,8,"castAbility"],[575,19,624,19],[575,22,624,22,"castAbility"],[575,23,624,23,"state"],[575,28,624,41],[575,30,624,43,"slotIndex"],[575,39,624,60],[575,44,624,65],[576,6,625,4],[576,10,625,10,"deck"],[576,14,625,14],[576,17,625,17,"state"],[576,22,625,22],[576,23,625,23,"abilityManager"],[576,37,625,37],[576,38,625,38,"getDeck"],[576,45,625,45],[576,46,625,46],[576,47,625,47],[577,6,626,4],[577,10,626,10,"ability"],[577,17,626,17],[577,20,626,20,"deck"],[577,24,626,24],[577,25,626,25,"slots"],[577,30,626,30],[577,31,626,31,"slotIndex"],[577,40,626,40],[577,41,626,41],[578,6,627,4],[578,10,627,8],[578,11,627,9,"ability"],[578,18,627,16],[578,20,627,18],[579,6,629,4,"console"],[579,13,629,11],[579,14,629,12,"log"],[579,17,629,15],[579,18,629,16],[579,43,629,41,"ability"],[579,50,629,48],[579,51,629,49,"id"],[579,53,629,51],[579,67,629,65,"slotIndex"],[579,76,629,74],[579,78,629,76],[579,79,629,77],[581,6,631,4],[582,6,632,4],[582,10,632,8,"damage"],[582,16,632,14],[582,19,632,17,"ability"],[582,26,632,24],[582,27,632,25,"stats"],[582,32,632,30],[582,33,632,31,"baseDamage"],[582,43,632,41],[584,6,634,4],[585,6,635,4,"deck"],[585,10,635,8],[585,11,635,9,"activeSynergies"],[585,26,635,24],[585,27,635,25,"forEach"],[585,34,635,32],[585,35,635,33,"synergy"],[585,42,635,40],[585,46,635,44],[586,8,636,6],[586,12,636,10,"synergy"],[586,19,636,17],[586,20,636,18,"bonus"],[586,25,636,23],[586,26,636,24,"damageBonus"],[586,37,636,35],[586,41,637,10,"synergy"],[586,48,637,17],[586,49,637,18,"requiredTags"],[586,61,637,30],[586,62,637,31,"some"],[586,66,637,35],[586,67,637,36,"tag"],[586,70,637,39],[586,74,637,43,"ability"],[586,81,637,50],[586,82,637,51,"tags"],[586,86,637,55],[586,87,637,56,"includes"],[586,95,637,64],[586,96,637,65,"tag"],[586,99,637,68],[586,100,637,69],[586,101,637,70],[586,103,637,72],[587,10,638,8,"damage"],[587,16,638,14],[587,20,638,19],[587,21,638,20],[587,24,638,23,"synergy"],[587,31,638,30],[587,32,638,31,"bonus"],[587,37,638,36],[587,38,638,37,"damageBonus"],[587,49,638,48],[587,52,638,51],[587,55,638,55],[588,8,639,6],[589,6,640,4],[589,7,640,5],[589,8,640,6],[591,6,642,4],[592,6,643,4],[592,10,643,10,"isAOE"],[592,15,643,15],[592,18,643,18,"ability"],[592,25,643,25],[592,26,643,26,"effects"],[592,33,643,33],[592,34,643,34,"includes"],[592,42,643,42],[592,43,643,43],[592,48,643,48],[592,49,643,49],[592,53,643,53,"ability"],[592,60,643,60],[592,61,643,61,"stats"],[592,66,643,66],[592,67,643,67,"aoeRadius"],[592,76,643,76],[593,6,644,4,"console"],[593,13,644,11],[593,14,644,12,"log"],[593,17,644,15],[593,18,644,16],[593,39,644,37,"ability"],[593,46,644,44],[593,47,644,45,"name"],[593,51,644,49],[593,66,644,64,"JSON"],[593,70,644,68],[593,71,644,69,"stringify"],[593,80,644,78],[593,81,644,79,"ability"],[593,88,644,86],[593,89,644,87,"effects"],[593,96,644,94],[593,97,644,95],[593,113,644,111,"ability"],[593,120,644,118],[593,121,644,119,"stats"],[593,126,644,124],[593,127,644,125,"aoeRadius"],[593,136,644,134],[593,148,644,146,"isAOE"],[593,153,644,151],[593,155,644,153],[593,156,644,154],[594,6,646,4],[594,10,646,8,"isAOE"],[594,15,646,13],[594,17,646,15],[595,8,647,6,"console"],[595,15,647,13],[595,16,647,14,"log"],[595,19,647,17],[595,20,647,18],[595,39,647,37,"ability"],[595,46,647,44],[595,47,647,45,"name"],[595,51,647,49],[595,67,647,65,"ability"],[595,74,647,72],[595,75,647,73,"stats"],[595,80,647,78],[595,81,647,79,"aoeRadius"],[595,90,647,88],[595,92,647,90],[595,93,647,91],[597,8,649,6],[598,8,650,6],[599,8,651,6],[599,12,651,12,"ninjaX"],[599,18,651,18],[599,21,651,21,"currentNinjaPosition"],[599,41,651,41],[599,42,651,42,"x"],[599,43,651,43],[599,46,651,46],[599,48,651,48],[599,49,651,49],[599,50,651,50],[600,8,652,6],[600,12,652,12,"ninjaY"],[600,18,652,18],[600,21,652,21,"currentNinjaPosition"],[600,41,652,41],[600,42,652,42,"y"],[600,43,652,43],[600,46,652,46],[600,48,652,48],[601,8,653,6],[601,12,653,12,"aoeRadius"],[601,21,653,21],[601,24,653,24,"ability"],[601,31,653,31],[601,32,653,32,"stats"],[601,37,653,37],[601,38,653,38,"aoeRadius"],[601,47,653,47],[602,8,655,6],[602,12,655,12,"enemiesInRange"],[602,26,655,26],[602,29,655,29,"state"],[602,34,655,34],[602,35,655,35,"enemies"],[602,42,655,42],[602,43,655,43,"filter"],[602,49,655,49],[602,50,655,50,"enemy"],[602,55,655,55],[602,59,655,59],[603,10,656,8],[603,14,656,14,"enemyX"],[603,20,656,20],[603,23,656,23,"enemy"],[603,28,656,28],[603,29,656,29,"position"],[603,37,656,37],[603,38,656,38,"x"],[603,39,656,39],[603,42,656,42],[603,46,656,46],[603,47,656,47],[603,48,656,48],[604,10,657,8],[604,14,657,14,"enemyY"],[604,20,657,20],[604,23,657,23,"enemy"],[604,28,657,28],[604,29,657,29,"position"],[604,37,657,37],[604,38,657,38,"y"],[604,39,657,39],[604,42,657,42],[604,46,657,46],[605,10,658,8],[605,14,658,14,"distance"],[605,22,658,22],[605,25,658,25,"Math"],[605,29,658,29],[605,30,658,30,"sqrt"],[605,34,658,34],[605,35,658,35,"Math"],[605,39,658,39],[605,40,658,40,"pow"],[605,43,658,43],[605,44,658,44,"enemyX"],[605,50,658,50],[605,53,658,53,"ninjaX"],[605,59,658,59],[605,61,658,61],[605,62,658,62],[605,63,658,63],[605,66,658,66,"Math"],[605,70,658,70],[605,71,658,71,"pow"],[605,74,658,74],[605,75,658,75,"enemyY"],[605,81,658,81],[605,84,658,84,"ninjaY"],[605,90,658,90],[605,92,658,92],[605,93,658,93],[605,94,658,94],[605,95,658,95],[606,10,659,8],[606,17,659,15,"distance"],[606,25,659,23],[606,29,659,27,"aoeRadius"],[606,38,659,36],[607,8,660,6],[607,9,660,7],[607,10,660,8],[608,8,662,6,"console"],[608,15,662,13],[608,16,662,14,"log"],[608,19,662,17],[608,20,662,18],[608,45,662,43,"enemiesInRange"],[608,59,662,57],[608,60,662,58,"length"],[608,66,662,64],[608,88,662,86,"aoeRadius"],[608,97,662,95],[608,107,662,105],[608,108,662,106],[610,8,664,6],[611,8,665,6,"enemiesInRange"],[611,22,665,20],[611,23,665,21,"forEach"],[611,30,665,28],[611,31,665,29,"enemy"],[611,36,665,34],[611,40,665,38],[612,10,666,8],[612,14,666,14,"damageResult"],[612,26,666,26],[612,29,666,29,"DamageCalculator"],[612,48,666,45],[612,49,666,45,"DamageCalculator"],[612,65,666,45],[612,66,666,46,"calculateDamage"],[612,81,666,61],[612,82,666,62,"damage"],[612,88,666,68],[612,90,666,70,"state"],[612,95,666,75],[612,96,666,76,"playerStats"],[612,107,666,87],[612,109,666,89,"enemy"],[612,114,666,94],[612,115,666,95,"stats"],[612,120,666,100],[612,121,666,101],[613,10,667,8,"createProjectile"],[613,26,667,24],[613,27,667,25,"enemy"],[613,32,667,30],[613,34,667,32,"damageResult"],[613,46,667,44],[613,47,667,45,"damage"],[613,53,667,51],[613,55,667,53,"currentNinjaPosition"],[613,75,667,73],[613,77,667,75],[614,12,668,10,"id"],[614,14,668,12],[614,16,668,14,"ability"],[614,23,668,21],[614,24,668,22,"id"],[614,26,668,24],[615,12,669,10,"name"],[615,16,669,14],[615,18,669,16,"ability"],[615,25,669,23],[615,26,669,24,"name"],[615,30,669,28],[616,12,670,10,"icon"],[616,16,670,14],[616,18,670,16,"ability"],[616,25,670,23],[616,26,670,24,"icon"],[617,10,671,8],[617,11,671,9],[617,12,671,10],[618,10,672,8,"console"],[618,17,672,15],[618,18,672,16,"log"],[618,21,672,19],[618,22,672,20],[618,37,672,35,"enemy"],[618,42,672,40],[618,43,672,41,"name"],[618,47,672,45],[618,55,672,53,"damageResult"],[618,67,672,65],[618,68,672,66,"damage"],[618,74,672,72],[618,83,672,81],[618,84,672,82],[620,10,674,8],[621,10,675,8],[621,14,675,12,"damageResult"],[621,26,675,24],[621,27,675,25,"damage"],[621,33,675,31],[621,37,675,35,"enemy"],[621,42,675,40],[621,43,675,41,"health"],[621,49,675,47],[621,51,675,49],[622,12,676,10,"console"],[622,19,676,17],[622,20,676,18,"log"],[622,23,676,21],[622,24,676,22],[622,67,676,65,"enemy"],[622,72,676,70],[622,73,676,71,"name"],[622,77,676,75],[622,90,676,88,"damageResult"],[622,102,676,100],[622,103,676,101,"damage"],[622,109,676,107],[622,124,676,122,"enemy"],[622,129,676,127],[622,130,676,128,"health"],[622,136,676,134],[622,139,676,137],[622,140,676,138],[623,10,677,8],[624,8,678,6],[624,9,678,7],[624,10,678,8],[625,8,680,6,"console"],[625,15,680,13],[625,16,680,14,"log"],[625,19,680,17],[625,20,680,18],[625,26,680,24,"ability"],[625,33,680,31],[625,34,680,32,"name"],[625,38,680,36],[625,56,680,54,"enemiesInRange"],[625,70,680,68],[625,71,680,69,"length"],[625,77,680,75],[625,93,680,91,"damage"],[625,99,680,97],[625,118,680,116],[625,119,680,117],[626,6,682,4],[626,7,682,5],[626,13,682,11],[627,8,683,6],[628,8,684,6],[628,12,684,12,"target"],[628,18,684,18],[628,21,684,21,"findClosestEnemyInternal"],[628,45,684,45],[628,46,684,46,"state"],[628,51,684,51],[628,52,684,52,"enemies"],[628,59,684,59],[628,60,684,60],[629,8,685,6],[629,12,685,10],[629,13,685,11,"target"],[629,19,685,17],[629,21,685,19],[630,8,687,6],[630,12,687,12,"damageResult"],[630,24,687,24],[630,27,687,27,"DamageCalculator"],[630,46,687,43],[630,47,687,43,"DamageCalculator"],[630,63,687,43],[630,64,687,44,"calculateDamage"],[630,79,687,59],[630,80,687,60,"damage"],[630,86,687,66],[630,88,687,68,"state"],[630,93,687,73],[630,94,687,74,"playerStats"],[630,105,687,85],[630,107,687,87,"target"],[630,113,687,93],[630,114,687,94,"stats"],[630,119,687,99],[630,120,687,100],[632,8,689,6],[633,8,690,6,"console"],[633,15,690,13],[633,16,690,14,"log"],[633,19,690,17],[633,20,690,18],[633,71,690,69,"target"],[633,77,690,75],[633,78,690,76,"name"],[633,82,690,80],[633,91,690,89,"damageResult"],[633,103,690,101],[633,104,690,102,"damage"],[633,110,690,108],[633,119,690,117],[633,120,690,118],[634,8,691,6,"createProjectile"],[634,24,691,22],[634,25,691,23,"target"],[634,31,691,29],[634,33,691,31,"damageResult"],[634,45,691,43],[634,46,691,44,"damage"],[634,52,691,50],[634,54,691,52,"currentNinjaPosition"],[634,74,691,72],[634,76,691,74],[635,10,692,8,"id"],[635,12,692,10],[635,14,692,12,"ability"],[635,21,692,19],[635,22,692,20,"id"],[635,24,692,22],[636,10,693,8,"name"],[636,14,693,12],[636,16,693,14,"ability"],[636,23,693,21],[636,24,693,22,"name"],[636,28,693,26],[637,10,694,8,"icon"],[637,14,694,12],[637,16,694,14,"ability"],[637,23,694,21],[637,24,694,22,"icon"],[638,8,695,6],[638,9,695,7],[638,10,695,8],[639,8,697,6,"console"],[639,15,697,13],[639,16,697,14,"log"],[639,19,697,17],[639,20,697,18],[639,26,697,24,"ability"],[639,33,697,31],[639,34,697,32,"name"],[639,38,697,36],[639,66,697,64,"damageResult"],[639,78,697,76],[639,79,697,77,"damage"],[639,85,697,83],[639,95,697,93,"damageResult"],[639,107,697,105],[639,108,697,106,"isCritical"],[639,118,697,116],[639,121,697,119],[639,131,697,129],[639,134,697,132],[639,136,697,134],[639,138,697,136],[639,139,697,137],[641,8,699,6],[642,8,700,6],[642,12,700,10,"damageResult"],[642,24,700,22],[642,25,700,23,"damage"],[642,31,700,29],[642,35,700,33,"target"],[642,41,700,39],[642,42,700,40,"health"],[642,48,700,46],[642,50,700,48],[643,10,701,8,"console"],[643,17,701,15],[643,18,701,16,"log"],[643,21,701,19],[643,22,701,20],[643,75,701,73,"target"],[643,81,701,79],[643,82,701,80,"name"],[643,86,701,84],[643,99,701,97,"damageResult"],[643,111,701,109],[643,112,701,110,"damage"],[643,118,701,116],[643,133,701,131,"target"],[643,139,701,137],[643,140,701,138,"health"],[643,146,701,144],[643,149,701,147],[643,150,701,148],[644,8,702,6],[645,6,703,4],[647,6,705,4],[648,6,706,4],[648,10,706,8,"ability"],[648,17,706,15],[648,18,706,16,"effects"],[648,25,706,23],[648,26,706,24,"includes"],[648,34,706,32],[648,35,706,33],[648,40,706,38],[648,41,706,39],[648,45,706,43,"ability"],[648,52,706,50],[648,53,706,51,"stats"],[648,58,706,56],[648,59,706,57,"duration"],[648,67,706,65],[648,69,706,67],[649,8,707,6],[649,12,707,12,"targets"],[649,19,707,19],[649,22,707,22,"isAOE"],[649,27,707,27],[649,30,708,8,"state"],[649,35,708,13],[649,36,708,14,"enemies"],[649,43,708,21],[649,44,708,22,"filter"],[649,50,708,28],[649,51,708,29,"enemy"],[649,56,708,34],[649,60,708,38],[650,10,709,10],[650,14,709,16,"ninjaX"],[650,20,709,22],[650,23,709,25,"currentNinjaPosition"],[650,43,709,45],[650,44,709,46,"x"],[650,45,709,47],[650,48,709,50],[650,50,709,52],[651,10,710,10],[651,14,710,16,"ninjaY"],[651,20,710,22],[651,23,710,25,"currentNinjaPosition"],[651,43,710,45],[651,44,710,46,"y"],[651,45,710,47],[651,48,710,50],[651,50,710,52],[652,10,711,10],[652,14,711,16,"enemyX"],[652,20,711,22],[652,23,711,25,"enemy"],[652,28,711,30],[652,29,711,31,"position"],[652,37,711,39],[652,38,711,40,"x"],[652,39,711,41],[652,42,711,44],[652,46,711,48],[653,10,712,10],[653,14,712,16,"enemyY"],[653,20,712,22],[653,23,712,25,"enemy"],[653,28,712,30],[653,29,712,31,"position"],[653,37,712,39],[653,38,712,40,"y"],[653,39,712,41],[653,42,712,44],[653,46,712,48],[654,10,713,10],[654,14,713,16,"distance"],[654,22,713,24],[654,25,713,27,"Math"],[654,29,713,31],[654,30,713,32,"sqrt"],[654,34,713,36],[654,35,713,37,"Math"],[654,39,713,41],[654,40,713,42,"pow"],[654,43,713,45],[654,44,713,46,"enemyX"],[654,50,713,52],[654,53,713,55,"ninjaX"],[654,59,713,61],[654,61,713,63],[654,62,713,64],[654,63,713,65],[654,66,713,68,"Math"],[654,70,713,72],[654,71,713,73,"pow"],[654,74,713,76],[654,75,713,77,"enemyY"],[654,81,713,83],[654,84,713,86,"ninjaY"],[654,90,713,92],[654,92,713,94],[654,93,713,95],[654,94,713,96],[654,95,713,97],[655,10,714,10],[655,17,714,17,"distance"],[655,25,714,25],[655,29,714,29,"ability"],[655,36,714,36],[655,37,714,37,"stats"],[655,42,714,42],[655,43,714,43,"aoeRadius"],[655,52,714,52],[656,8,715,8],[656,9,715,9],[656,10,715,10],[656,13,716,8],[656,14,716,9,"findClosestEnemyInternal"],[656,38,716,33],[656,39,716,34,"state"],[656,44,716,39],[656,45,716,40,"enemies"],[656,52,716,47],[656,53,716,48],[656,54,716,49],[656,55,716,50,"filter"],[656,61,716,56],[656,62,716,57,"Boolean"],[656,69,716,64],[656,70,716,65],[657,8,718,6,"targets"],[657,15,718,13],[657,16,718,14,"forEach"],[657,23,718,21],[657,24,718,22,"target"],[657,30,718,28],[657,34,718,32],[658,10,719,8,"state"],[658,15,719,13],[658,16,719,14,"statusEffects"],[658,29,719,27],[658,30,719,28,"addEffect"],[658,39,719,37],[658,40,719,38,"target"],[658,46,719,44],[658,47,719,45,"id"],[658,49,719,47],[658,51,719,49],[659,12,720,10,"id"],[659,14,720,12],[659,16,720,14],[659,19,720,17,"ability"],[659,26,720,24],[659,27,720,25,"id"],[659,29,720,27],[659,35,720,33],[660,12,721,10,"type"],[660,16,721,14],[660,18,721,16],[660,23,721,21],[661,12,722,10,"remainingTicks"],[661,26,722,24],[661,28,722,26,"Math"],[661,32,722,30],[661,33,722,31,"floor"],[661,38,722,36],[661,39,722,37,"ability"],[661,46,722,44],[661,47,722,45,"stats"],[661,52,722,50],[661,53,722,51,"duration"],[661,61,722,59],[661,64,722,62],[661,66,722,64],[661,67,722,65],[662,12,723,10,"tickInterval"],[662,24,723,22],[662,26,723,24],[662,28,723,26],[663,12,724,10,"lastTick"],[663,20,724,18],[663,22,724,20,"state"],[663,27,724,25],[663,28,724,26,"currentTick"],[663,39,724,37],[664,12,725,10,"value"],[664,17,725,15],[664,19,725,17,"Math"],[664,23,725,21],[664,24,725,22,"floor"],[664,29,725,27],[664,30,725,28,"damage"],[664,36,725,34],[664,39,725,37],[664,42,725,40],[664,43,725,41],[665,12,726,10,"stackable"],[665,21,726,19],[665,23,726,21],[666,10,727,8],[666,11,727,9],[666,12,727,10],[667,8,728,6],[667,9,728,7],[667,10,728,8],[668,6,729,4],[670,6,731,4],[671,6,732,4],[671,10,732,8,"ability"],[671,17,732,15],[671,18,732,16,"effects"],[671,25,732,23],[671,26,732,24,"includes"],[671,34,732,32],[671,35,732,33],[671,41,732,39],[671,42,732,40],[671,46,732,44,"ability"],[671,53,732,51],[671,54,732,52,"id"],[671,56,732,54],[671,61,732,59],[671,75,732,73],[671,77,732,75],[672,8,733,6,"console"],[672,15,733,13],[672,16,733,14,"log"],[672,19,733,17],[672,20,733,18],[672,66,733,64,"ability"],[672,73,733,71],[672,74,733,72,"stats"],[672,79,733,77],[672,80,733,78,"duration"],[672,88,733,86],[672,98,733,96],[672,99,733,97],[674,8,735,6],[675,8,736,6],[675,12,736,12,"cloneX"],[675,18,736,18],[675,21,736,21,"currentNinjaPosition"],[675,41,736,41],[675,42,736,42,"x"],[675,43,736,43],[675,46,736,46],[675,48,736,48],[675,49,736,49],[675,50,736,50],[676,8,737,6],[676,12,737,12,"cloneY"],[676,18,737,18],[676,21,737,21,"currentNinjaPosition"],[676,41,737,41],[676,42,737,42,"y"],[676,43,737,43],[676,46,737,46],[676,48,737,48],[676,49,737,49],[676,50,737,50],[678,8,739,6,"state"],[678,13,739,11],[678,14,739,12,"shadowClone"],[678,25,739,23],[678,28,739,26],[679,10,740,8,"id"],[679,12,740,10],[679,14,740,12],[679,30,740,28,"Date"],[679,34,740,32],[679,35,740,33,"now"],[679,38,740,36],[679,39,740,37],[679,40,740,38],[679,42,740,40],[680,10,741,8,"remainingTicks"],[680,24,741,22],[680,26,741,24,"Math"],[680,30,741,28],[680,31,741,29,"floor"],[680,36,741,34],[680,37,741,35,"ability"],[680,44,741,42],[680,45,741,43,"stats"],[680,50,741,48],[680,51,741,49,"duration"],[680,59,741,57],[680,62,741,60],[680,64,741,62],[680,65,741,63],[681,10,741,65],[682,10,742,8,"position"],[682,18,742,16],[682,20,742,18],[683,12,742,20,"x"],[683,13,742,21],[683,15,742,23,"cloneX"],[683,21,742,29],[684,12,742,31,"y"],[684,13,742,32],[684,15,742,34,"cloneY"],[685,10,742,41],[685,11,742,42],[686,10,743,8,"damageMultiplier"],[686,26,743,24],[686,28,743,26],[686,31,743,29],[686,32,743,31],[687,8,744,6],[687,9,744,7],[688,8,746,6,"console"],[688,15,746,13],[688,16,746,14,"log"],[688,19,746,17],[688,20,746,18],[688,63,746,61,"ability"],[688,70,746,68],[688,71,746,69,"stats"],[688,76,746,74],[688,77,746,75,"duration"],[688,85,746,83],[688,108,746,106],[688,109,746,107],[689,6,747,4],[690,4,748,2],[690,5,748,3],[692,4,750,2],[693,4,751,2],[693,8,751,8,"createProjectile"],[693,24,751,24],[693,27,751,27,"createProjectile"],[693,28,751,28,"targetEnemy"],[693,39,751,52],[693,41,751,54,"damage"],[693,47,751,68],[693,49,751,70,"ninjaPos"],[693,57,751,103],[693,59,751,105,"abilityInfo"],[693,70,751,159],[693,72,751,161,"isAOE"],[693,77,751,176],[693,79,751,178,"aoeRadius"],[693,88,751,196],[693,93,751,201],[694,6,752,4],[694,10,752,8],[694,11,752,9,"targetEnemy"],[694,22,752,20],[694,24,752,22],[695,8,753,6,"console"],[695,15,753,13],[695,16,753,14,"log"],[695,19,753,17],[695,20,753,18],[695,65,753,63],[695,66,753,64],[696,8,754,6],[696,15,754,13],[696,19,754,17],[697,6,755,4],[699,6,757,4],[700,6,758,4,"console"],[700,13,758,11],[700,14,758,12,"log"],[700,17,758,15],[700,18,758,16],[700,52,758,50,"damage"],[700,58,758,56],[700,70,758,68,"targetEnemy"],[700,81,758,79],[700,82,758,80,"name"],[700,86,758,84],[700,91,758,89,"targetEnemy"],[700,102,758,100],[700,103,758,101,"health"],[700,109,758,107],[700,113,758,111,"targetEnemy"],[700,124,758,122],[700,125,758,123,"maxHealth"],[700,134,758,132],[700,140,758,138],[700,141,758,139],[701,6,760,4],[701,10,760,10,"SCREEN_WIDTH"],[701,22,760,22],[701,25,760,25],[701,28,760,28],[702,6,761,4],[702,10,761,10,"GAME_AREA_HEIGHT"],[702,26,761,26],[702,29,761,29],[702,32,761,32],[702,35,761,35],[702,38,761,38],[702,39,761,39],[702,40,761,40],[703,6,762,4],[703,10,762,10,"NINJA_SIZE"],[703,20,762,20],[703,23,762,23],[703,25,762,25],[705,6,764,4],[706,6,765,4],[706,10,765,10,"ninjaX"],[706,16,765,16],[706,19,765,19,"ninjaPos"],[706,27,765,27],[706,30,765,30,"ninjaPos"],[706,38,765,38],[706,39,765,39,"x"],[706,40,765,40],[706,43,765,43,"NINJA_SIZE"],[706,53,765,53],[706,56,765,56],[706,57,765,57],[706,60,765,60,"SCREEN_WIDTH"],[706,72,765,72],[706,75,765,75],[706,76,765,76],[707,6,766,4],[707,10,766,10,"ninjaY"],[707,16,766,16],[707,19,766,19,"ninjaPos"],[707,27,766,27],[707,30,766,30,"ninjaPos"],[707,38,766,38],[707,39,766,39,"y"],[707,40,766,40],[707,43,766,43,"NINJA_SIZE"],[707,53,766,53],[707,56,766,56],[707,57,766,57],[707,60,766,60,"GAME_AREA_HEIGHT"],[707,76,766,76],[707,79,766,79],[707,80,766,80],[708,6,767,4],[708,10,767,10,"ENEMY_SIZE"],[708,20,767,20],[708,23,767,23],[708,25,767,25],[709,6,769,4],[709,10,769,10,"projectileId"],[709,22,769,22],[709,25,769,25],[709,33,769,33,"Date"],[709,37,769,37],[709,38,769,38,"now"],[709,41,769,41],[709,42,769,42],[709,43,769,43],[709,47,769,47,"Math"],[709,51,769,51],[709,52,769,52,"random"],[709,58,769,58],[709,59,769,59],[709,60,769,60],[709,62,769,62],[710,6,771,4],[710,10,771,10,"projectile"],[710,20,771,38],[710,23,771,41],[711,8,772,6,"id"],[711,10,772,8],[711,12,772,10,"projectileId"],[711,24,772,22],[712,8,773,6,"x"],[712,9,773,7],[712,11,773,9,"ninjaX"],[712,17,773,15],[713,8,774,6,"y"],[713,9,774,7],[713,11,774,9,"ninjaY"],[713,17,774,15],[714,8,775,6,"targetX"],[714,15,775,13],[714,17,775,15,"targetEnemy"],[714,28,775,26],[714,29,775,27,"position"],[714,37,775,35],[714,38,775,36,"x"],[714,39,775,37],[714,42,775,40,"ENEMY_SIZE"],[714,52,775,50],[714,55,775,53],[714,56,775,54],[715,8,776,6,"targetY"],[715,15,776,13],[715,17,776,15,"targetEnemy"],[715,28,776,26],[715,29,776,27,"position"],[715,37,776,35],[715,38,776,36,"y"],[715,39,776,37],[715,42,776,40,"ENEMY_SIZE"],[715,52,776,50],[715,55,776,53],[715,56,776,54],[716,8,777,6,"targetEnemyId"],[716,21,777,19],[716,23,777,21,"targetEnemy"],[716,34,777,32],[716,35,777,33,"id"],[716,37,777,35],[717,8,778,6,"damage"],[717,14,778,12],[717,16,778,14,"damage"],[717,22,778,20],[718,8,779,6,"startTime"],[718,17,779,15],[718,19,779,17,"Date"],[718,23,779,21],[718,24,779,22,"now"],[718,27,779,25],[718,28,779,26],[718,29,779,27],[719,8,780,6,"duration"],[719,16,780,14],[719,18,780,16],[719,21,780,19],[720,8,780,21],[721,8,781,6],[722,8,782,6,"abilityId"],[722,17,782,15],[722,19,782,17,"abilityInfo"],[722,30,782,28],[722,32,782,30,"id"],[722,34,782,32],[722,38,782,36],[722,54,782,52],[723,8,783,6,"abilityName"],[723,19,783,17],[723,21,783,19,"abilityInfo"],[723,32,783,30],[723,34,783,32,"name"],[723,38,783,36],[723,42,783,40],[723,58,783,56],[724,8,784,6,"abilityIcon"],[724,19,784,17],[724,21,784,19,"abilityInfo"],[724,32,784,30],[724,34,784,32,"icon"],[724,38,784,36],[724,42,784,40],[724,46,784,44],[725,8,784,46],[726,8,785,6],[727,8,786,6,"isAOE"],[727,13,786,11],[727,15,786,13,"isAOE"],[727,20,786,18],[727,24,786,22],[727,29,786,27],[728,8,787,6,"aoeRadius"],[728,17,787,15],[728,19,787,17,"aoeRadius"],[728,28,787,26],[728,32,787,30],[729,6,788,4],[729,7,788,5],[730,6,790,4,"console"],[730,13,790,11],[730,14,790,12,"log"],[730,17,790,15],[730,18,790,16],[730,44,790,42,"abilityInfo"],[730,55,790,53],[730,57,790,55,"name"],[730,61,790,59],[730,65,790,63],[730,81,790,79],[730,101,790,99,"projectileId"],[730,113,790,111],[730,128,790,126,"targetEnemy"],[730,139,790,137],[730,140,790,138,"name"],[730,144,790,142],[730,152,790,150,"damage"],[730,158,790,156],[730,167,790,165],[730,168,790,166],[731,6,791,4,"console"],[731,13,791,11],[731,14,791,12,"log"],[731,17,791,15],[731,18,791,16],[731,48,791,46,"isAOE"],[731,53,791,51],[731,68,791,66,"aoeRadius"],[731,77,791,75],[731,89,791,87,"damage"],[731,95,791,93],[731,97,791,95],[731,98,791,96],[732,6,793,4,"console"],[732,13,793,11],[732,14,793,12,"log"],[732,17,793,15],[732,18,793,16],[732,53,793,51,"targetEnemy"],[732,64,793,62],[732,65,793,63,"id"],[732,67,793,65],[732,75,793,73,"damage"],[732,81,793,79],[732,90,793,88],[732,91,793,89],[733,6,794,4,"console"],[733,13,794,11],[733,14,794,12,"log"],[733,17,794,15],[733,18,794,16],[733,53,794,51,"ninjaX"],[733,59,794,57],[733,64,794,62,"ninjaY"],[733,70,794,68],[733,87,794,85,"projectile"],[733,97,794,95],[733,98,794,96,"targetX"],[733,105,794,103],[733,110,794,108,"projectile"],[733,120,794,118],[733,121,794,119,"targetY"],[733,128,794,126],[733,131,794,129],[733,132,794,130],[734,6,796,4,"setProjectiles"],[734,20,796,18],[734,21,796,19,"prev"],[734,25,796,23],[734,29,796,27],[734,30,796,28],[734,33,796,31,"prev"],[734,37,796,35],[734,39,796,37,"projectile"],[734,49,796,47],[734,50,796,48],[734,51,796,49],[736,6,798,4],[737,6,799,4],[739,6,801,4],[739,13,801,11,"projectile"],[739,23,801,21],[740,4,802,2],[740,5,802,3],[742,4,804,2],[743,4,805,2],[743,8,805,8,"spawnTestEnemy"],[743,22,805,22],[743,25,805,26,"state"],[743,30,805,44],[743,34,805,49],[744,6,806,4,"console"],[744,13,806,11],[744,14,806,12,"log"],[744,17,806,15],[744,18,806,16],[744,83,806,81],[744,84,806,82],[746,6,808,4],[747,6,809,4],[747,10,809,10,"zoneEnemy"],[747,19,809,19],[747,22,809,22,"spawnZoneEnemy"],[747,36,809,36],[747,37,809,37],[747,38,809,38],[748,6,810,4],[748,10,810,8],[748,11,810,9,"zoneEnemy"],[748,20,810,18],[748,22,810,20],[749,8,811,6,"console"],[749,15,811,13],[749,16,811,14,"log"],[749,19,811,17],[749,20,811,18],[749,76,811,74],[749,77,811,75],[750,8,812,6],[751,8,813,6,"spawnBasicTestEnemy"],[751,27,813,25],[751,28,813,26,"state"],[751,33,813,31],[751,34,813,32],[752,8,814,6],[753,6,815,4],[754,6,817,4,"console"],[754,13,817,11],[754,14,817,12,"log"],[754,17,817,15],[754,18,817,16],[754,44,817,42,"zoneEnemy"],[754,53,817,51],[754,54,817,52,"name"],[754,58,817,56],[754,63,817,61,"zoneEnemy"],[754,72,817,70],[754,73,817,71,"typeId"],[754,79,817,77],[754,94,817,92,"currentZone"],[754,105,817,103],[754,107,817,105,"id"],[754,109,817,107],[754,119,817,117,"currentZoneLevel"],[754,135,817,133],[754,137,817,135,"level"],[754,142,817,140],[754,144,817,142],[754,145,817,143],[756,6,819,4],[757,6,820,4],[757,10,820,10,"combatEnemy"],[757,21,820,34],[757,24,820,37],[758,8,821,6,"id"],[758,10,821,8],[758,12,821,10,"zoneEnemy"],[758,21,821,19],[758,22,821,20,"id"],[758,24,821,22],[759,8,822,6,"name"],[759,12,822,10],[759,14,822,12,"zoneEnemy"],[759,23,822,21],[759,24,822,22,"name"],[759,28,822,26],[760,8,823,6,"health"],[760,14,823,12],[760,16,823,14,"zoneEnemy"],[760,25,823,23],[760,26,823,24,"hp"],[760,28,823,26],[761,8,824,6,"maxHealth"],[761,17,824,15],[761,19,824,17,"zoneEnemy"],[761,28,824,26],[761,29,824,27,"maxHP"],[761,34,824,32],[762,8,825,6,"stats"],[762,13,825,11],[762,15,825,13],[763,10,826,8,"attack"],[763,16,826,14],[763,18,826,16,"zoneEnemy"],[763,27,826,25],[763,28,826,26,"attack"],[763,34,826,32],[764,10,827,8,"defense"],[764,17,827,15],[764,19,827,17],[764,21,827,19],[765,10,827,21],[766,10,828,8,"health"],[766,16,828,14],[766,18,828,16,"zoneEnemy"],[766,27,828,25],[766,28,828,26,"hp"],[766,30,828,28],[767,10,829,8,"maxHealth"],[767,19,829,17],[767,21,829,19,"zoneEnemy"],[767,30,829,28],[767,31,829,29,"maxHP"],[767,36,829,34],[768,10,830,8,"critChance"],[768,20,830,18],[768,22,830,20],[768,23,830,21],[769,10,831,8,"critDamage"],[769,20,831,18],[769,22,831,20],[769,25,831,23],[770,10,832,8,"cooldownReduction"],[770,27,832,25],[770,29,832,27],[771,8,833,6],[771,9,833,7],[772,8,834,6,"position"],[772,16,834,14],[772,18,834,16,"zoneEnemy"],[772,27,834,25],[772,28,834,26,"position"],[772,36,834,34],[773,8,835,6,"lastDamaged"],[773,19,835,17],[773,21,835,19],[773,22,835,20],[774,8,836,6],[775,8,837,6,"zoneTypeId"],[775,18,837,16],[775,20,837,18,"zoneEnemy"],[775,29,837,27],[775,30,837,28,"typeId"],[775,36,837,34],[776,8,838,6,"zoneXP"],[776,14,838,12],[776,16,838,14,"zoneEnemy"],[776,25,838,23],[776,26,838,24,"xp"],[777,6,839,4],[777,7,839,5],[778,6,841,4,"console"],[778,13,841,11],[778,14,841,12,"log"],[778,17,841,15],[778,18,841,16],[778,42,841,40,"combatEnemy"],[778,53,841,51],[778,54,841,52,"name"],[778,58,841,56],[778,67,841,65,"combatEnemy"],[778,78,841,76],[778,79,841,77,"health"],[778,85,841,83],[778,100,841,98,"currentZone"],[778,111,841,109],[778,113,841,111,"id"],[778,115,841,113],[778,125,841,123,"currentZoneLevel"],[778,141,841,139],[778,143,841,141,"level"],[778,148,841,146],[778,150,841,148],[778,151,841,149],[779,6,842,4,"state"],[779,11,842,9],[779,12,842,10,"enemies"],[779,19,842,17],[779,20,842,18,"push"],[779,24,842,22],[779,25,842,23,"combatEnemy"],[779,36,842,34],[779,37,842,35],[780,4,843,2],[780,5,843,3],[782,4,845,2],[783,4,846,2],[783,8,846,8,"spawnBasicTestEnemy"],[783,27,846,27],[783,30,846,31,"state"],[783,35,846,49],[783,39,846,54],[784,6,847,4],[784,10,847,10,"SCREEN_WIDTH"],[784,22,847,22],[784,25,847,25],[784,28,847,28],[785,6,848,4],[785,10,848,10,"GAME_AREA_HEIGHT"],[785,26,848,26],[785,29,848,29],[785,32,848,32],[785,35,848,35],[785,38,848,38],[786,6,849,4],[786,10,849,10,"ENEMY_SIZE"],[786,20,849,20],[786,23,849,23],[786,25,849,25],[787,6,851,4],[787,10,851,10,"x"],[787,11,851,11],[787,14,851,14,"Math"],[787,18,851,18],[787,19,851,19,"random"],[787,25,851,25],[787,26,851,26],[787,27,851,27],[787,31,851,31,"SCREEN_WIDTH"],[787,43,851,43],[787,46,851,46,"ENEMY_SIZE"],[787,56,851,56],[787,59,851,59],[787,60,851,60],[787,61,851,61],[787,64,851,64,"ENEMY_SIZE"],[787,74,851,74],[788,6,852,4],[788,10,852,10,"y"],[788,11,852,11],[788,14,852,14,"Math"],[788,18,852,18],[788,19,852,19,"random"],[788,25,852,25],[788,26,852,26],[788,27,852,27],[788,31,852,31,"GAME_AREA_HEIGHT"],[788,47,852,47],[788,50,852,50,"ENEMY_SIZE"],[788,60,852,60],[788,63,852,63],[788,64,852,64],[788,65,852,65],[788,68,852,68,"ENEMY_SIZE"],[788,78,852,78],[789,6,854,4],[789,10,854,10,"enemy"],[789,15,854,28],[789,18,854,31],[790,8,855,6,"id"],[790,10,855,8],[790,12,855,10],[790,30,855,28,"Date"],[790,34,855,32],[790,35,855,33,"now"],[790,38,855,36],[790,39,855,37],[790,40,855,38],[790,44,855,42,"Math"],[790,48,855,46],[790,49,855,47,"random"],[790,55,855,53],[790,56,855,54],[790,57,855,55],[790,59,855,57],[791,8,856,6,"name"],[791,12,856,10],[791,14,856,12],[791,26,856,24,"Math"],[791,30,856,28],[791,31,856,29,"floor"],[791,36,856,34],[791,37,856,35,"Math"],[791,41,856,39],[791,42,856,40,"random"],[791,48,856,46],[791,49,856,47],[791,50,856,48],[791,53,856,51],[791,56,856,54],[791,57,856,55],[791,59,856,57],[792,8,857,6,"health"],[792,14,857,12],[792,16,857,14],[792,18,857,16],[793,8,858,6,"maxHealth"],[793,17,858,15],[793,19,858,17],[793,21,858,19],[794,8,859,6,"stats"],[794,13,859,11],[794,15,859,13],[795,10,860,8,"attack"],[795,16,860,14],[795,18,860,16],[795,20,860,18],[796,10,861,8,"defense"],[796,17,861,15],[796,19,861,17],[796,21,861,19],[797,10,862,8,"health"],[797,16,862,14],[797,18,862,16],[797,20,862,18],[798,10,863,8,"maxHealth"],[798,19,863,17],[798,21,863,19],[798,23,863,21],[799,10,864,8,"critChance"],[799,20,864,18],[799,22,864,20],[799,23,864,21],[800,10,865,8,"critDamage"],[800,20,865,18],[800,22,865,20],[800,25,865,23],[801,10,866,8,"cooldownReduction"],[801,27,866,25],[801,29,866,27],[802,8,867,6],[802,9,867,7],[803,8,868,6,"position"],[803,16,868,14],[803,18,868,16],[804,10,868,18,"x"],[804,11,868,19],[805,10,868,21,"y"],[806,8,868,23],[806,9,868,24],[807,8,869,6,"lastDamaged"],[807,19,869,17],[807,21,869,19],[808,6,870,4],[808,7,870,5],[809,6,872,4,"console"],[809,13,872,11],[809,14,872,12,"log"],[809,17,872,15],[809,18,872,16],[809,42,872,40,"enemy"],[809,47,872,45],[809,48,872,46,"name"],[809,52,872,50],[809,60,872,58,"Math"],[809,64,872,62],[809,65,872,63,"round"],[809,70,872,68],[809,71,872,69,"x"],[809,72,872,70],[809,73,872,71],[809,78,872,76,"Math"],[809,82,872,80],[809,83,872,81,"round"],[809,88,872,86],[809,89,872,87,"y"],[809,90,872,88],[809,91,872,89],[809,94,872,92],[809,95,872,93],[810,6,873,4,"state"],[810,11,873,9],[810,12,873,10,"enemies"],[810,19,873,17],[810,20,873,18,"push"],[810,24,873,22],[810,25,873,23,"enemy"],[810,30,873,28],[810,31,873,29],[811,4,874,2],[811,5,874,3],[813,4,876,2],[814,4,877,2],[815,4,878,2],[815,8,878,8,"startCombat"],[815,19,878,19],[815,22,878,22,"React"],[815,27,878,27],[815,28,878,27,"default"],[815,35,878,27],[815,36,878,28,"useCallback"],[815,47,878,39],[815,48,878,40],[815,54,878,46],[816,6,879,4,"console"],[816,13,879,11],[816,14,879,12,"log"],[816,17,879,15],[816,18,879,16],[816,63,879,61],[816,64,879,62],[817,6,880,4,"console"],[817,13,880,11],[817,14,880,12,"log"],[817,17,880,15],[817,18,880,16],[817,37,880,35],[817,39,880,37,"combatEngine"],[817,58,880,49],[817,59,880,49,"combatEngine"],[817,71,880,49],[817,72,880,50],[818,6,881,4,"console"],[818,13,881,11],[818,14,881,12,"log"],[818,17,881,15],[818,18,881,16],[818,51,881,49],[818,53,881,51,"handleCombatTick"],[818,69,881,67],[818,70,881,68],[819,6,882,4,"setCombatState"],[819,20,882,18],[819,21,882,19,"prev"],[819,25,882,23],[819,30,882,28],[820,8,882,30],[820,11,882,33,"prev"],[820,15,882,37],[821,8,882,39,"isInCombat"],[821,18,882,49],[821,20,882,51],[822,6,882,56],[822,7,882,57],[822,8,882,58],[822,9,882,59],[824,6,884,4],[825,6,885,4,"combatEngine"],[825,25,885,16],[825,26,885,16,"combatEngine"],[825,38,885,16],[825,39,885,17,"addTickCallback"],[825,54,885,32],[825,55,885,33,"handleCombatTick"],[825,71,885,49],[825,72,885,50],[826,6,886,4,"console"],[826,13,886,11],[826,14,886,12,"log"],[826,17,886,15],[826,18,886,16],[826,62,886,60],[826,63,886,61],[828,6,888,4],[829,6,889,4,"combatEngine"],[829,25,889,16],[829,26,889,16,"combatEngine"],[829,38,889,16],[829,39,889,17,"start"],[829,44,889,22],[829,45,889,23],[829,46,889,24],[830,6,890,4,"console"],[830,13,890,11],[830,14,890,12,"log"],[830,17,890,15],[830,18,890,16],[830,51,890,49],[830,52,890,50],[831,4,891,2],[831,5,891,3],[831,7,891,5],[831,8,891,6,"combatEngine"],[831,27,891,18],[831,28,891,18,"combatEngine"],[831,40,891,18],[831,42,891,20,"handleCombatTick"],[831,58,891,36],[831,59,891,37],[831,60,891,38],[833,4,893,2],[834,4,894,2],[834,8,894,8,"stopCombat"],[834,18,894,18],[834,21,894,21,"React"],[834,26,894,26],[834,27,894,26,"default"],[834,34,894,26],[834,35,894,27,"useCallback"],[834,46,894,38],[834,47,894,39],[834,53,894,45],[835,6,895,4,"setCombatState"],[835,20,895,18],[835,21,895,19,"prev"],[835,25,895,23],[835,30,895,28],[836,8,895,30],[836,11,895,33,"prev"],[836,15,895,37],[837,8,895,39,"isInCombat"],[837,18,895,49],[837,20,895,51],[838,6,895,57],[838,7,895,58],[838,8,895,59],[838,9,895,60],[839,6,896,4,"combatEngine"],[839,25,896,16],[839,26,896,16,"combatEngine"],[839,38,896,16],[839,39,896,17,"removeTickCallback"],[839,57,896,35],[839,58,896,36,"handleCombatTick"],[839,74,896,52],[839,75,896,53],[840,4,897,2],[840,5,897,3],[840,7,897,5],[840,8,897,6,"combatEngine"],[840,27,897,18],[840,28,897,18,"combatEngine"],[840,40,897,18],[840,42,897,20,"handleCombatTick"],[840,58,897,36],[840,59,897,37],[840,60,897,38],[842,4,899,2],[843,4,900,2],[843,8,900,8,"equipAbility"],[843,20,900,20],[843,23,900,23,"equipAbility"],[843,24,900,24,"abilityId"],[843,33,900,41],[843,35,900,43,"slotIndex"],[843,44,900,60],[843,49,900,74],[844,6,901,4],[844,13,901,11,"combatState"],[844,24,901,22],[844,25,901,23,"abilityManager"],[844,39,901,37],[844,40,901,38,"equipAbility"],[844,52,901,50],[844,53,901,51,"abilityId"],[844,62,901,60],[844,64,901,62,"slotIndex"],[844,73,901,71],[844,74,901,72],[845,4,902,2],[845,5,902,3],[846,4,904,2],[846,8,904,8,"getDeck"],[846,15,904,15],[846,18,904,18,"getDeck"],[846,19,904,18],[846,24,904,24],[847,6,905,4],[847,13,905,11,"combatState"],[847,24,905,22],[847,25,905,23,"abilityManager"],[847,39,905,37],[847,40,905,38,"getDeck"],[847,47,905,45],[847,48,905,46],[847,49,905,47],[848,4,906,2],[848,5,906,3],[849,4,908,2],[849,8,908,8,"getAvailableAbilities"],[849,29,908,29],[849,32,908,32,"getAvailableAbilities"],[849,33,908,32],[849,38,908,38],[850,6,909,4],[850,13,909,11,"combatState"],[850,24,909,22],[850,25,909,23,"abilityManager"],[850,39,909,37],[850,40,909,38,"getAvailableAbilities"],[850,61,909,59],[850,62,909,60],[850,63,909,61],[851,4,910,2],[851,5,910,3],[852,4,912,2],[852,8,912,8,"upgradeAbility"],[852,22,912,22],[852,25,912,26,"abilityId"],[852,34,912,43],[852,38,912,57],[853,6,913,4],[853,13,913,11,"combatState"],[853,24,913,22],[853,25,913,23,"abilityManager"],[853,39,913,37],[853,40,913,38,"upgradeAbility"],[853,54,913,52],[853,55,913,53,"abilityId"],[853,64,913,62],[853,65,913,63],[854,4,914,2],[854,5,914,3],[856,4,916,2],[857,4,917,2],[857,8,917,8,"clearAllEnemies"],[857,23,917,23],[857,26,917,26,"clearAllEnemies"],[857,27,917,26],[857,32,917,32],[858,6,918,4,"console"],[858,13,918,11],[858,14,918,12,"log"],[858,17,918,15],[858,18,918,16],[858,67,918,65],[858,68,918,66],[859,6,919,4,"setCombatState"],[859,20,919,18],[859,21,919,19,"prev"],[859,25,919,23],[859,30,919,28],[860,8,920,6],[860,11,920,9,"prev"],[860,15,920,13],[861,8,921,6,"enemies"],[861,15,921,13],[861,17,921,15],[862,6,922,4],[862,7,922,5],[862,8,922,6],[862,9,922,7],[863,4,923,2],[863,5,923,3],[865,4,925,2],[866,4,926,2],[868,4,928,2],[869,4,929,2],[869,8,929,8,"spawnEnemy"],[869,18,929,18],[869,21,929,22,"position"],[869,29,929,57],[869,33,929,75],[870,6,930,4],[870,10,930,10,"SCREEN_WIDTH"],[870,22,930,22],[870,25,930,25],[870,28,930,28],[871,6,931,4],[871,10,931,10,"GAME_AREA_HEIGHT"],[871,26,931,26],[871,29,931,29],[871,32,931,32],[871,35,931,35],[871,38,931,38],[871,39,931,39],[871,40,931,40],[872,6,932,4],[872,10,932,10,"ENEMY_SIZE"],[872,20,932,20],[872,23,932,23],[872,25,932,25],[874,6,934,4],[875,6,935,4],[875,10,935,10,"x"],[875,11,935,11],[875,14,935,14,"position"],[875,22,935,22],[875,24,935,24,"x"],[875,25,935,25],[875,29,935,29,"Math"],[875,33,935,33],[875,34,935,34,"random"],[875,40,935,40],[875,41,935,41],[875,42,935,42],[875,46,935,46,"SCREEN_WIDTH"],[875,58,935,58],[875,61,935,61,"ENEMY_SIZE"],[875,71,935,71],[875,74,935,74],[875,75,935,75],[875,76,935,76],[875,79,935,79,"ENEMY_SIZE"],[875,89,935,89],[876,6,936,4],[876,10,936,10,"y"],[876,11,936,11],[876,14,936,14,"position"],[876,22,936,22],[876,24,936,24,"y"],[876,25,936,25],[876,29,936,29,"Math"],[876,33,936,33],[876,34,936,34,"random"],[876,40,936,40],[876,41,936,41],[876,42,936,42],[876,46,936,46,"GAME_AREA_HEIGHT"],[876,62,936,62],[876,65,936,65,"ENEMY_SIZE"],[876,75,936,75],[876,78,936,78],[876,79,936,79],[876,80,936,80],[876,83,936,83,"ENEMY_SIZE"],[876,93,936,93],[877,6,938,4],[877,10,938,10,"enemy"],[877,15,938,28],[877,18,938,31],[878,8,939,6,"id"],[878,10,939,8],[878,12,939,10],[878,21,939,19],[878,23,939,21,"enemyCounter"],[878,35,939,33],[878,37,939,35],[879,8,940,6,"name"],[879,12,940,10],[879,14,940,12],[879,24,940,22],[880,8,941,6,"health"],[880,14,941,12],[880,16,941,14],[880,19,941,17],[881,8,942,6,"maxHealth"],[881,17,942,15],[881,19,942,17],[881,22,942,20],[882,8,943,6,"stats"],[882,13,943,11],[882,15,943,13],[883,10,944,8,"attack"],[883,16,944,14],[883,18,944,16],[883,20,944,18],[884,10,945,8,"defense"],[884,17,945,15],[884,19,945,17],[884,21,945,19],[885,10,946,8,"health"],[885,16,946,14],[885,18,946,16],[885,21,946,19],[886,10,947,8,"maxHealth"],[886,19,947,17],[886,21,947,19],[886,24,947,22],[887,10,948,8,"critChance"],[887,20,948,18],[887,22,948,20],[887,23,948,21],[888,10,949,8,"critDamage"],[888,20,949,18],[888,22,949,20],[888,25,949,23],[889,10,950,8,"cooldownReduction"],[889,27,950,25],[889,29,950,27],[890,8,951,6],[890,9,951,7],[891,8,952,6,"position"],[891,16,952,14],[891,18,952,16],[892,10,952,18,"x"],[892,11,952,19],[893,10,952,21,"y"],[894,8,952,23],[894,9,952,24],[895,8,953,6,"lastDamaged"],[895,19,953,17],[895,21,953,19],[896,6,954,4],[896,7,954,5],[897,6,956,4,"setCombatState"],[897,20,956,18],[897,21,956,19,"prev"],[897,25,956,23],[897,30,956,28],[898,8,957,6],[898,11,957,9,"prev"],[898,15,957,13],[899,8,958,6,"enemies"],[899,15,958,13],[899,17,958,15],[899,18,958,16],[899,21,958,19,"prev"],[899,25,958,23],[899,26,958,24,"enemies"],[899,33,958,31],[899,35,958,33,"enemy"],[899,40,958,38],[900,6,959,4],[900,7,959,5],[900,8,959,6],[900,9,959,7],[901,6,961,4],[901,13,961,11,"enemy"],[901,18,961,16],[902,4,962,2],[902,5,962,3],[904,4,964,2],[905,4,965,2],[905,8,965,8,"spawnBoss"],[905,17,965,17],[905,20,965,21,"bossEnemy"],[905,29,965,43],[905,33,965,48],[906,6,966,4,"console"],[906,13,966,11],[906,14,966,12,"log"],[906,17,966,15],[906,18,966,16],[906,39,966,37,"bossEnemy"],[906,48,966,46],[906,49,966,47,"name"],[906,53,966,51],[906,90,966,88],[906,91,966,89],[907,6,967,4,"setCombatState"],[907,20,967,18],[907,21,967,19,"prev"],[907,25,967,23],[907,30,967,28],[908,8,968,6],[908,11,968,9,"prev"],[908,15,968,13],[909,8,969,6,"enemies"],[909,15,969,13],[909,17,969,15],[909,18,969,16,"bossEnemy"],[909,27,969,25],[909,28,969,26],[909,29,969,27],[910,6,970,4],[910,7,970,5],[910,8,970,6],[910,9,970,7],[911,4,971,2],[911,5,971,3],[913,4,973,2],[914,4,974,2],[914,8,974,8,"clearSpecificEnemy"],[914,26,974,26],[914,29,974,30,"enemyId"],[914,36,974,45],[914,40,974,50],[915,6,975,4,"setCombatState"],[915,20,975,18],[915,21,975,19,"prev"],[915,25,975,23],[915,30,975,28],[916,8,976,6],[916,11,976,9,"prev"],[916,15,976,13],[917,8,977,6,"enemies"],[917,15,977,13],[917,17,977,15,"prev"],[917,21,977,19],[917,22,977,20,"enemies"],[917,29,977,27],[917,30,977,28,"filter"],[917,36,977,34],[917,37,977,35,"enemy"],[917,42,977,40],[917,46,977,44,"enemy"],[917,51,977,49],[917,52,977,50,"id"],[917,54,977,52],[917,59,977,57,"enemyId"],[917,66,977,64],[918,6,978,4],[918,7,978,5],[918,8,978,6],[918,9,978,7],[919,4,979,2],[919,5,979,3],[921,4,981,2],[922,4,982,2],[922,8,982,8,"useAbilityManually"],[922,26,982,26],[922,29,982,26,"_s3"],[922,32,982,26],[922,33,982,29],[922,37,982,29,"useCallback"],[922,43,982,40],[922,44,982,40,"useCallback"],[922,55,982,40],[922,57,982,40,"_s3"],[922,60,982,40],[922,61,982,42,"slotIndex"],[922,70,982,59],[922,74,982,73],[923,6,982,73,"_s3"],[923,9,982,73],[924,6,983,4,"console"],[924,13,983,11],[924,14,983,12,"log"],[924,17,983,15],[924,18,983,16],[924,64,983,62,"slotIndex"],[924,73,983,71],[924,82,983,80],[924,83,983,81],[925,6,984,4,"console"],[925,13,984,11],[925,14,984,12,"log"],[925,17,984,15],[925,18,984,16],[925,65,984,63,"slotIndex"],[925,74,984,72],[925,76,984,74],[925,77,984,75],[926,6,985,4,"console"],[926,13,985,11],[926,14,985,12,"log"],[926,17,985,15],[926,18,985,16],[926,53,985,51,"slotIndex"],[926,62,985,60],[926,64,985,62],[926,65,985,63],[928,6,987,4],[929,6,988,4],[929,10,988,8],[929,11,988,9,"game"],[929,15,988,13],[929,16,988,14,"gameState"],[929,25,988,23],[929,26,988,24,"isAlive"],[929,33,988,31],[929,35,988,33],[930,8,989,6,"console"],[930,15,989,13],[930,16,989,14,"log"],[930,19,989,17],[930,20,989,18],[930,70,989,68],[930,71,989,69],[931,8,990,6],[931,15,990,13],[931,20,990,18],[932,6,991,4],[934,6,993,4],[935,6,994,4],[935,10,994,10,"isReady"],[935,17,994,17],[935,20,994,20,"combatState"],[935,31,994,31],[935,32,994,32,"abilityManager"],[935,46,994,46],[935,47,994,47,"isAbilityReady"],[935,61,994,61],[935,62,994,62,"slotIndex"],[935,71,994,71],[935,72,994,72],[936,6,995,4],[936,10,995,8],[936,11,995,9,"isReady"],[936,18,995,16],[936,20,995,18],[937,8,996,6,"console"],[937,15,996,13],[937,16,996,14,"log"],[937,19,996,17],[937,20,996,18],[937,41,996,39,"slotIndex"],[937,50,996,48],[937,85,996,83],[937,86,996,84],[938,8,997,6],[938,15,997,13],[938,20,997,18],[939,6,998,4],[941,6,1000,4],[942,6,1001,4],[942,10,1001,8,"combatState"],[942,21,1001,19],[942,22,1001,20,"enemies"],[942,29,1001,27],[942,30,1001,28,"length"],[942,36,1001,34],[942,41,1001,39],[942,42,1001,40],[942,44,1001,42],[943,8,1002,6,"console"],[943,15,1002,13],[943,16,1002,14,"log"],[943,19,1002,17],[943,20,1002,18],[943,69,1002,67],[943,70,1002,68],[944,8,1003,6],[944,15,1003,13],[944,20,1003,18],[945,6,1004,4],[947,6,1006,4],[948,6,1007,4],[948,10,1007,10,"currentTick"],[948,21,1007,21],[948,24,1007,24,"combatEngine"],[948,43,1007,36],[948,44,1007,36,"combatEngine"],[948,56,1007,36],[948,57,1007,37,"getCurrentTick"],[948,71,1007,51],[948,72,1007,52],[948,73,1007,53],[949,6,1008,4],[949,10,1008,10,"success"],[949,17,1008,17],[949,20,1008,20,"combatState"],[949,31,1008,31],[949,32,1008,32,"abilityManager"],[949,46,1008,46],[949,47,1008,47,"useAbility"],[949,57,1008,57],[949,58,1008,58,"slotIndex"],[949,67,1008,67],[949,69,1008,69,"currentTick"],[949,80,1008,80],[949,81,1008,81],[950,6,1010,4],[950,10,1010,8,"success"],[950,17,1010,15],[950,19,1010,17],[951,8,1011,6],[952,8,1012,6,"setCombatState"],[952,22,1012,20],[952,23,1012,21,"prev"],[952,27,1012,25],[952,31,1012,29],[953,10,1013,8],[953,14,1013,14,"newState"],[953,22,1013,22],[953,25,1013,25],[954,12,1013,27],[954,15,1013,30,"prev"],[955,10,1013,35],[955,11,1013,36],[956,10,1014,8,"castAbility"],[956,21,1014,19],[956,22,1014,20,"newState"],[956,30,1014,28],[956,32,1014,30,"slotIndex"],[956,41,1014,39],[956,42,1014,40],[957,10,1015,8],[957,17,1015,15,"newState"],[957,25,1015,23],[958,8,1016,6],[958,9,1016,7],[958,10,1016,8],[959,8,1018,6,"console"],[959,15,1018,13],[959,16,1018,14,"log"],[959,19,1018,17],[959,20,1018,18],[959,65,1018,63,"slotIndex"],[959,74,1018,72],[959,76,1018,74],[959,77,1018,75],[960,8,1019,6],[960,15,1019,13],[960,19,1019,17],[961,6,1020,4],[961,7,1020,5],[961,13,1020,11],[962,8,1021,6,"console"],[962,15,1021,13],[962,16,1021,14,"log"],[962,19,1021,17],[962,20,1021,18],[962,61,1021,59,"slotIndex"],[962,70,1021,68],[962,72,1021,70],[962,73,1021,71],[963,8,1022,6],[963,15,1022,13],[963,20,1022,18],[964,6,1023,4],[965,4,1024,2],[965,5,1024,3],[965,46,1024,5],[965,47,1024,6,"combatState"],[965,58,1024,17],[965,59,1024,18,"abilityManager"],[965,73,1024,32],[965,75,1024,34,"combatState"],[965,86,1024,45],[965,87,1024,46,"enemies"],[965,94,1024,53],[965,95,1024,54],[965,96,1024,55],[966,4,1025,2],[966,8,1025,2,"useEffect"],[966,14,1025,11],[966,15,1025,11,"useEffect"],[966,24,1025,11],[966,26,1025,12],[966,32,1025,18],[967,6,1026,4,"combatEngine"],[967,25,1026,16],[967,26,1026,16,"combatEngine"],[967,38,1026,16],[967,39,1026,17,"start"],[967,44,1026,22],[967,45,1026,23],[967,46,1026,24],[969,6,1028,4],[970,6,1029,4],[971,6,1030,4,"console"],[971,13,1030,11],[971,14,1030,12,"log"],[971,17,1030,15],[971,18,1030,16],[971,97,1030,95],[971,98,1030,96],[972,6,1032,4],[972,13,1032,11],[972,19,1032,17],[973,8,1033,6,"combatEngine"],[973,27,1033,18],[973,28,1033,18,"combatEngine"],[973,40,1033,18],[973,41,1033,19,"stop"],[973,45,1033,23],[973,46,1033,24],[973,47,1033,25],[974,6,1034,4],[974,7,1034,5],[975,4,1035,2],[975,5,1035,3],[975,7,1035,5],[975,9,1035,7],[975,10,1035,8],[977,4,1037,2],[978,4,1038,2],[978,8,1038,2,"useEffect"],[978,14,1038,11],[978,15,1038,11,"useEffect"],[978,24,1038,11],[978,26,1038,12],[978,32,1038,18],[979,6,1039,4],[979,10,1039,10,"processProjectileImpacts"],[979,34,1039,34],[979,37,1039,37,"processProjectileImpacts"],[979,38,1039,37],[979,43,1039,43],[980,8,1040,6,"setProjectiles"],[980,22,1040,20],[980,23,1040,21,"currentProjectiles"],[980,41,1040,39],[980,45,1040,43],[981,10,1041,8],[981,17,1041,15,"currentProjectiles"],[981,35,1041,33],[981,36,1041,34,"map"],[981,39,1041,37],[981,40,1041,38,"projectile"],[981,50,1041,48],[981,54,1041,52],[982,12,1042,10],[982,16,1042,14],[982,17,1042,15,"projectile"],[982,27,1042,25],[982,29,1042,27],[982,36,1042,34],[982,40,1042,38],[984,12,1044,10],[985,12,1045,10],[985,16,1045,16,"currentTime"],[985,27,1045,27],[985,30,1045,30,"Date"],[985,34,1045,34],[985,35,1045,35,"now"],[985,38,1045,38],[985,39,1045,39],[985,40,1045,40],[986,12,1046,10],[986,16,1046,16,"startTime"],[986,25,1046,25],[986,28,1046,28,"projectile"],[986,38,1046,38],[986,39,1046,39,"startTime"],[986,48,1046,48],[986,52,1046,52,"currentTime"],[986,63,1046,63],[987,12,1047,10],[987,16,1047,16,"elapsedTime"],[987,27,1047,27],[987,30,1047,30,"currentTime"],[987,41,1047,41],[987,44,1047,44,"startTime"],[987,53,1047,53],[988,12,1048,10],[988,16,1048,16,"progress"],[988,24,1048,24],[988,27,1048,27,"Math"],[988,31,1048,31],[988,32,1048,32,"min"],[988,35,1048,35],[988,36,1048,36,"elapsedTime"],[988,47,1048,47],[988,51,1048,51,"projectile"],[988,61,1048,61],[988,62,1048,62,"duration"],[988,70,1048,70],[988,74,1048,74],[988,77,1048,77],[988,78,1048,78],[988,80,1048,80],[988,81,1048,81],[988,82,1048,82],[990,12,1050,10],[991,12,1051,10],[991,16,1051,14,"progress"],[991,24,1051,22],[991,28,1051,26],[991,29,1051,27],[991,33,1051,31],[991,34,1051,32,"projectile"],[991,44,1051,42],[991,45,1051,43,"hasHit"],[991,51,1051,49],[991,53,1051,51],[992,14,1052,12],[993,14,1053,12,"console"],[993,21,1053,19],[993,22,1053,20,"log"],[993,25,1053,23],[993,26,1053,24],[993,51,1053,49,"projectile"],[993,61,1053,59],[993,62,1053,60,"abilityName"],[993,73,1053,71],[993,97,1053,95],[993,98,1053,96],[994,14,1055,12,"setCombatState"],[994,28,1055,26],[994,29,1055,27,"prev"],[994,33,1055,31],[994,37,1055,35],[995,16,1056,14],[995,20,1056,20,"newState"],[995,28,1056,28],[995,31,1056,31],[996,18,1056,33],[996,21,1056,36,"prev"],[997,16,1056,41],[997,17,1056,42],[998,16,1058,14],[998,20,1058,18,"projectile"],[998,30,1058,28],[998,31,1058,29,"isAOE"],[998,36,1058,34],[998,40,1058,38,"projectile"],[998,50,1058,48],[998,51,1058,49,"aoeRadius"],[998,60,1058,58],[998,64,1058,62,"projectile"],[998,74,1058,72],[998,75,1058,73,"aoeRadius"],[998,84,1058,82],[998,87,1058,85],[998,88,1058,86],[998,90,1058,88],[999,18,1059,16],[1000,18,1060,16,"console"],[1000,25,1060,23],[1000,26,1060,24,"log"],[1000,29,1060,27],[1000,30,1060,28],[1000,59,1060,57,"projectile"],[1000,69,1060,67],[1000,70,1060,68,"abilityName"],[1000,81,1060,79],[1000,97,1060,95,"projectile"],[1000,107,1060,105],[1000,108,1060,106,"aoeRadius"],[1000,117,1060,115],[1000,119,1060,117],[1000,120,1060,118],[1001,18,1062,16],[1001,22,1062,22,"impactX"],[1001,29,1062,29],[1001,32,1062,32,"projectile"],[1001,42,1062,42],[1001,43,1062,43,"targetX"],[1001,50,1062,50],[1002,18,1063,16],[1002,22,1063,22,"impactY"],[1002,29,1063,29],[1002,32,1063,32,"projectile"],[1002,42,1063,42],[1002,43,1063,43,"targetY"],[1002,50,1063,50],[1003,18,1064,16],[1003,22,1064,22,"enemiesKilled"],[1003,35,1064,50],[1003,38,1064,53],[1003,40,1064,55],[1005,18,1066,16],[1006,18,1067,16,"newState"],[1006,26,1067,24],[1006,27,1067,25,"enemies"],[1006,34,1067,32],[1006,37,1067,35,"newState"],[1006,45,1067,43],[1006,46,1067,44,"enemies"],[1006,53,1067,51],[1006,54,1067,52,"map"],[1006,57,1067,55],[1006,58,1067,56,"enemy"],[1006,63,1067,61],[1006,67,1067,65],[1007,20,1068,18],[1007,24,1068,22,"enemy"],[1007,29,1068,27],[1007,30,1068,28,"health"],[1007,36,1068,34],[1007,40,1068,38],[1007,41,1068,39],[1007,45,1068,43,"enemy"],[1007,50,1068,48],[1007,51,1068,49,"markedForDeath"],[1007,65,1068,63],[1007,67,1068,65],[1007,74,1068,72,"enemy"],[1007,79,1068,77],[1008,20,1070,18],[1008,24,1070,24,"enemyX"],[1008,30,1070,30],[1008,33,1070,33,"enemy"],[1008,38,1070,38],[1008,39,1070,39,"position"],[1008,47,1070,47],[1008,48,1070,48,"x"],[1008,49,1070,49],[1008,52,1070,52],[1008,56,1070,56],[1008,57,1070,57],[1008,58,1070,58],[1009,20,1071,18],[1009,24,1071,24,"enemyY"],[1009,30,1071,30],[1009,33,1071,33,"enemy"],[1009,38,1071,38],[1009,39,1071,39,"position"],[1009,47,1071,47],[1009,48,1071,48,"y"],[1009,49,1071,49],[1009,52,1071,52],[1009,56,1071,56],[1010,20,1072,18],[1010,24,1072,24,"distance"],[1010,32,1072,32],[1010,35,1072,35,"Math"],[1010,39,1072,39],[1010,40,1072,40,"sqrt"],[1010,44,1072,44],[1010,45,1072,45,"Math"],[1010,49,1072,49],[1010,50,1072,50,"pow"],[1010,53,1072,53],[1010,54,1072,54,"enemyX"],[1010,60,1072,60],[1010,63,1072,63,"impactX"],[1010,70,1072,70],[1010,72,1072,72],[1010,73,1072,73],[1010,74,1072,74],[1010,77,1072,77,"Math"],[1010,81,1072,81],[1010,82,1072,82,"pow"],[1010,85,1072,85],[1010,86,1072,86,"enemyY"],[1010,92,1072,92],[1010,95,1072,95,"impactY"],[1010,102,1072,102],[1010,104,1072,104],[1010,105,1072,105],[1010,106,1072,106],[1010,107,1072,107],[1011,20,1074,18,"console"],[1011,27,1074,25],[1011,28,1074,26,"log"],[1011,31,1074,29],[1011,32,1074,30],[1011,58,1074,56,"enemy"],[1011,63,1074,61],[1011,64,1074,62,"name"],[1011,68,1074,66],[1011,76,1074,74,"enemyX"],[1011,82,1074,80],[1011,87,1074,85,"enemyY"],[1011,93,1074,91],[1011,109,1074,107,"impactX"],[1011,116,1074,114],[1011,121,1074,119,"impactY"],[1011,128,1074,126],[1011,135,1074,133,"distance"],[1011,143,1074,141],[1011,144,1074,142,"toFixed"],[1011,151,1074,149],[1011,152,1074,150],[1011,153,1074,151],[1011,154,1074,152],[1011,169,1074,167,"projectile"],[1011,179,1074,177],[1011,180,1074,178,"aoeRadius"],[1011,189,1074,187],[1011,194,1074,192],[1011,195,1074,193],[1012,20,1076,18],[1012,24,1076,22,"distance"],[1012,32,1076,30],[1012,36,1076,34,"projectile"],[1012,46,1076,44],[1012,47,1076,45,"aoeRadius"],[1012,56,1076,54],[1012,58,1076,56],[1013,22,1077,20],[1014,22,1078,20],[1014,26,1078,26,"newHealth"],[1014,35,1078,35],[1014,38,1078,38,"Math"],[1014,42,1078,42],[1014,43,1078,43,"max"],[1014,46,1078,46],[1014,47,1078,47],[1014,48,1078,48],[1014,50,1078,50,"enemy"],[1014,55,1078,55],[1014,56,1078,56,"health"],[1014,62,1078,62],[1014,65,1078,65,"projectile"],[1014,75,1078,75],[1014,76,1078,76,"damage"],[1014,82,1078,82],[1014,83,1078,83],[1015,22,1080,20,"console"],[1015,29,1080,27],[1015,30,1080,28,"log"],[1015,33,1080,31],[1015,34,1080,32],[1015,52,1080,50,"enemy"],[1015,57,1080,55],[1015,58,1080,56,"name"],[1015,62,1080,60],[1015,74,1080,72,"projectile"],[1015,84,1080,82],[1015,85,1080,83,"damage"],[1015,91,1080,89],[1015,103,1080,101,"enemy"],[1015,108,1080,106],[1015,109,1080,107,"health"],[1015,115,1080,113],[1015,122,1080,120,"newHealth"],[1015,131,1080,129],[1015,134,1080,132],[1015,135,1080,133],[1017,22,1082,20],[1018,22,1083,20],[1018,26,1083,24,"newHealth"],[1018,35,1083,33],[1018,39,1083,37],[1018,40,1083,38],[1018,44,1083,42,"enemy"],[1018,49,1083,47],[1018,50,1083,48,"health"],[1018,56,1083,54],[1018,59,1083,57],[1018,60,1083,58],[1018,62,1083,60],[1019,24,1084,22,"console"],[1019,31,1084,29],[1019,32,1084,30,"log"],[1019,35,1084,33],[1019,36,1084,34],[1019,52,1084,50,"enemy"],[1019,57,1084,55],[1019,58,1084,56,"name"],[1019,62,1084,60],[1019,76,1084,74,"projectile"],[1019,86,1084,84],[1019,87,1084,85,"abilityName"],[1019,98,1084,96],[1019,101,1084,99],[1019,102,1084,100],[1020,24,1085,22,"enemiesKilled"],[1020,37,1085,35],[1020,38,1085,36,"push"],[1020,42,1085,40],[1020,43,1085,41,"enemy"],[1020,48,1085,46],[1020,49,1085,47],[1020,50,1085,48],[1020,51,1085,49],[1022,24,1087,22],[1022,31,1087,29],[1023,26,1088,24],[1023,29,1088,27,"enemy"],[1023,34,1088,32],[1024,26,1089,24,"health"],[1024,32,1089,30],[1024,34,1089,32],[1024,35,1089,33],[1025,26,1090,24,"markedForDeath"],[1025,40,1090,38],[1025,42,1090,40],[1025,46,1090,44],[1026,26,1091,24,"lastDamaged"],[1026,37,1091,35],[1026,39,1091,37,"combatEngine"],[1026,58,1091,49],[1026,59,1091,49,"combatEngine"],[1026,71,1091,49],[1026,72,1091,50,"getCurrentTick"],[1026,86,1091,64],[1026,87,1091,65],[1027,24,1092,22],[1027,25,1092,23],[1028,22,1093,20],[1028,23,1093,21],[1028,29,1093,27],[1029,24,1094,22],[1029,31,1094,29],[1030,26,1095,24],[1030,29,1095,27,"enemy"],[1030,34,1095,32],[1031,26,1096,24,"health"],[1031,32,1096,30],[1031,34,1096,32,"newHealth"],[1031,43,1096,41],[1032,26,1097,24,"lastDamaged"],[1032,37,1097,35],[1032,39,1097,37,"combatEngine"],[1032,58,1097,49],[1032,59,1097,49,"combatEngine"],[1032,71,1097,49],[1032,72,1097,50,"getCurrentTick"],[1032,86,1097,64],[1032,87,1097,65],[1033,24,1098,22],[1033,25,1098,23],[1034,22,1099,20],[1035,20,1100,18],[1036,20,1102,18],[1036,27,1102,25,"enemy"],[1036,32,1102,30],[1036,33,1102,31],[1036,34,1102,32],[1037,18,1103,16],[1037,19,1103,17],[1037,20,1103,18],[1039,18,1105,16],[1040,18,1106,16],[1040,22,1106,20,"enemiesKilled"],[1040,35,1106,33],[1040,36,1106,34,"length"],[1040,42,1106,40],[1040,45,1106,43],[1040,46,1106,44],[1040,48,1106,46],[1041,20,1107,18,"console"],[1041,27,1107,25],[1041,28,1107,26,"log"],[1041,31,1107,29],[1041,32,1107,30],[1041,52,1107,50,"enemiesKilled"],[1041,65,1107,63],[1041,66,1107,64,"length"],[1041,72,1107,70],[1041,94,1107,92,"projectile"],[1041,104,1107,102],[1041,105,1107,103,"abilityName"],[1041,116,1107,114],[1041,118,1107,116],[1041,119,1107,117],[1042,20,1108,18],[1043,20,1109,18,"enemiesKilled"],[1043,33,1109,31],[1043,34,1109,32,"forEach"],[1043,41,1109,39],[1043,42,1109,40,"enemy"],[1043,47,1109,45],[1043,51,1109,49,"handleEnemyKill"],[1043,66,1109,64],[1043,67,1109,65,"enemy"],[1043,72,1109,70],[1043,73,1109,71],[1043,74,1109,72],[1044,18,1110,16],[1045,16,1112,14],[1045,17,1112,15],[1045,23,1112,21],[1046,18,1113,16],[1047,18,1114,16],[1047,22,1114,22,"enemyIndex"],[1047,32,1114,32],[1047,35,1114,35,"newState"],[1047,43,1114,43],[1047,44,1114,44,"enemies"],[1047,51,1114,51],[1047,52,1114,52,"findIndex"],[1047,61,1114,61],[1047,62,1114,62,"e"],[1047,63,1114,63],[1047,67,1114,67,"e"],[1047,68,1114,68],[1047,69,1114,69,"id"],[1047,71,1114,71],[1047,76,1114,76,"projectile"],[1047,86,1114,86],[1047,87,1114,87,"targetEnemyId"],[1047,100,1114,100],[1047,101,1114,101],[1048,18,1116,16],[1048,22,1116,20,"enemyIndex"],[1048,32,1116,30],[1048,36,1116,34],[1048,37,1116,35],[1048,41,1116,39,"newState"],[1048,49,1116,47],[1048,50,1116,48,"enemies"],[1048,57,1116,55],[1048,58,1116,56,"enemyIndex"],[1048,68,1116,66],[1048,69,1116,67],[1048,70,1116,68,"health"],[1048,76,1116,74],[1048,79,1116,77],[1048,80,1116,78],[1048,84,1116,82],[1048,85,1116,83,"newState"],[1048,93,1116,91],[1048,94,1116,92,"enemies"],[1048,101,1116,99],[1048,102,1116,100,"enemyIndex"],[1048,112,1116,110],[1048,113,1116,111],[1048,114,1116,112,"markedForDeath"],[1048,128,1116,126],[1048,130,1116,128],[1049,20,1117,18,"newState"],[1049,28,1117,26],[1049,29,1117,27,"enemies"],[1049,36,1117,34],[1049,39,1117,37],[1049,40,1117,38],[1049,43,1117,41,"newState"],[1049,51,1117,49],[1049,52,1117,50,"enemies"],[1049,59,1117,57],[1049,60,1117,58],[1050,20,1118,18],[1050,24,1118,24,"enemy"],[1050,29,1118,29],[1050,32,1118,32,"newState"],[1050,40,1118,40],[1050,41,1118,41,"enemies"],[1050,48,1118,48],[1050,49,1118,49,"enemyIndex"],[1050,59,1118,59],[1050,60,1118,60],[1051,20,1119,18],[1051,24,1119,24,"newHealth"],[1051,33,1119,33],[1051,36,1119,36,"Math"],[1051,40,1119,40],[1051,41,1119,41,"max"],[1051,44,1119,44],[1051,45,1119,45],[1051,46,1119,46],[1051,48,1119,48,"enemy"],[1051,53,1119,53],[1051,54,1119,54,"health"],[1051,60,1119,60],[1051,63,1119,63,"projectile"],[1051,73,1119,73],[1051,74,1119,74,"damage"],[1051,80,1119,80],[1051,81,1119,81],[1052,20,1121,18,"newState"],[1052,28,1121,26],[1052,29,1121,27,"enemies"],[1052,36,1121,34],[1052,37,1121,35,"enemyIndex"],[1052,47,1121,45],[1052,48,1121,46],[1052,51,1121,49],[1053,22,1122,20],[1053,25,1122,23,"enemy"],[1053,30,1122,28],[1054,22,1123,20,"health"],[1054,28,1123,26],[1054,30,1123,28,"newHealth"],[1054,39,1123,37],[1055,22,1124,20,"lastDamaged"],[1055,33,1124,31],[1055,35,1124,33,"combatEngine"],[1055,54,1124,45],[1055,55,1124,45,"combatEngine"],[1055,67,1124,45],[1055,68,1124,46,"getCurrentTick"],[1055,82,1124,60],[1055,83,1124,61],[1056,20,1125,18],[1056,21,1125,19],[1057,20,1127,18,"console"],[1057,27,1127,25],[1057,28,1127,26,"log"],[1057,31,1127,29],[1057,32,1127,30],[1057,60,1127,58,"enemy"],[1057,65,1127,63],[1057,66,1127,64,"name"],[1057,70,1127,68],[1057,82,1127,80,"newHealth"],[1057,91,1127,89],[1057,95,1127,93,"enemy"],[1057,100,1127,98],[1057,101,1127,99,"maxHealth"],[1057,110,1127,108],[1057,112,1127,110],[1057,113,1127,111],[1059,20,1129,18],[1060,20,1130,18],[1060,24,1130,22,"newHealth"],[1060,33,1130,31],[1060,37,1130,35],[1060,38,1130,36],[1060,42,1130,40,"enemy"],[1060,47,1130,45],[1060,48,1130,46,"health"],[1060,54,1130,52],[1060,57,1130,55],[1060,58,1130,56],[1060,60,1130,58],[1061,22,1131,20,"console"],[1061,29,1131,27],[1061,30,1131,28,"log"],[1061,33,1131,31],[1061,34,1131,32],[1061,54,1131,52,"enemy"],[1061,59,1131,57],[1061,60,1131,58,"name"],[1061,64,1131,62],[1061,78,1131,76,"projectile"],[1061,88,1131,86],[1061,89,1131,87,"abilityName"],[1061,100,1131,98],[1061,136,1131,134],[1061,137,1131,135],[1063,22,1133,20],[1064,22,1134,20,"newState"],[1064,30,1134,28],[1064,31,1134,29,"enemies"],[1064,38,1134,36],[1064,39,1134,37,"enemyIndex"],[1064,49,1134,47],[1064,50,1134,48],[1064,53,1134,51],[1065,24,1135,22],[1065,27,1135,25,"newState"],[1065,35,1135,33],[1065,36,1135,34,"enemies"],[1065,43,1135,41],[1065,44,1135,42,"enemyIndex"],[1065,54,1135,52],[1065,55,1135,53],[1066,24,1136,22,"health"],[1066,30,1136,28],[1066,32,1136,30],[1066,33,1136,31],[1067,24,1137,22,"isDying"],[1067,31,1137,29],[1067,33,1137,31],[1067,37,1137,35],[1068,24,1138,22,"deathStartTime"],[1068,38,1138,36],[1068,40,1138,38,"Date"],[1068,44,1138,42],[1068,45,1138,43,"now"],[1068,48,1138,46],[1068,49,1138,47],[1069,22,1139,20],[1069,23,1139,21],[1070,20,1140,18],[1070,21,1140,19],[1070,27,1140,25],[1070,31,1140,29,"enemy"],[1070,36,1140,34],[1070,37,1140,35,"health"],[1070,43,1140,41],[1070,46,1140,44],[1070,47,1140,45],[1070,49,1140,47],[1071,22,1141,20,"console"],[1071,29,1141,27],[1071,30,1141,28,"log"],[1071,33,1141,31],[1071,34,1141,32],[1071,48,1141,46,"enemy"],[1071,53,1141,51],[1071,54,1141,52,"name"],[1071,58,1141,56],[1071,70,1141,68,"projectile"],[1071,80,1141,78],[1071,81,1141,79,"damage"],[1071,87,1141,85],[1071,99,1141,97,"enemy"],[1071,104,1141,102],[1071,105,1141,103,"health"],[1071,111,1141,109],[1071,117,1141,115,"newHealth"],[1071,126,1141,124],[1071,129,1141,127],[1071,130,1141,128],[1072,20,1142,18],[1073,18,1143,16],[1074,16,1144,14],[1075,16,1146,14],[1075,23,1146,21,"newState"],[1075,31,1146,29],[1076,14,1147,12],[1076,15,1147,13],[1076,16,1147,14],[1078,14,1149,12],[1079,14,1150,12],[1080,12,1151,10],[1082,12,1153,10],[1083,12,1154,10],[1084,12,1155,10],[1084,16,1155,16,"timeBasedCleanup"],[1084,32,1155,32],[1084,35,1155,35,"elapsedTime"],[1084,46,1155,46],[1084,49,1155,49],[1084,53,1155,53],[1084,54,1155,54],[1084,55,1155,55],[1085,12,1156,10],[1085,16,1156,14,"progress"],[1085,24,1156,22],[1085,28,1156,26],[1085,31,1156,29],[1085,35,1156,33,"timeBasedCleanup"],[1085,51,1156,49],[1085,53,1156,51],[1086,14,1157,12],[1086,18,1157,16,"timeBasedCleanup"],[1086,34,1157,32],[1086,36,1157,34],[1087,16,1158,14,"console"],[1087,23,1158,21],[1087,24,1158,22,"log"],[1087,27,1158,25],[1087,28,1158,26],[1087,63,1158,61,"projectile"],[1087,73,1158,71],[1087,74,1158,72,"id"],[1087,76,1158,74],[1087,105,1158,103],[1087,106,1158,104],[1088,14,1159,12],[1089,14,1160,12],[1089,21,1160,19],[1089,25,1160,23],[1090,12,1161,10],[1091,12,1163,10],[1091,19,1163,17,"projectile"],[1091,29,1163,27],[1092,10,1164,8],[1092,11,1164,9],[1092,12,1164,10],[1092,13,1164,11,"filter"],[1092,19,1164,17],[1092,20,1164,18,"Boolean"],[1092,27,1164,25],[1092,28,1164,26],[1093,8,1165,6],[1093,9,1165,7],[1093,10,1165,8],[1094,6,1166,4],[1094,7,1166,5],[1096,6,1168,4],[1097,6,1169,4],[1097,10,1169,10,"impactInterval"],[1097,24,1169,24],[1097,27,1169,27,"setInterval"],[1097,38,1169,38],[1097,39,1169,39,"processProjectileImpacts"],[1097,63,1169,63],[1097,65,1169,65],[1097,67,1169,67],[1097,68,1169,68],[1098,6,1170,4],[1098,13,1170,11],[1098,19,1170,17,"clearInterval"],[1098,32,1170,30],[1098,33,1170,31,"impactInterval"],[1098,47,1170,45],[1098,48,1170,46],[1099,4,1171,2],[1099,5,1171,3],[1099,7,1171,5],[1099,9,1171,7],[1099,10,1171,8],[1099,11,1171,9],[1099,12,1171,10],[1101,4,1173,2],[1102,4,1174,2],[1102,8,1174,8,"saveAbilityData"],[1102,23,1174,23],[1102,26,1174,26],[1102,30,1174,26,"useCallback"],[1102,36,1174,37],[1102,37,1174,37,"useCallback"],[1102,48,1174,37],[1102,50,1174,38],[1102,56,1174,44],[1103,6,1175,4],[1103,10,1175,8,"combatState"],[1103,21,1175,19],[1103,22,1175,20,"abilityManager"],[1103,36,1175,34],[1103,38,1175,36],[1104,8,1176,6],[1104,12,1176,12,"abilityData"],[1104,23,1176,23],[1104,26,1176,26,"combatState"],[1104,37,1176,37],[1104,38,1176,38,"abilityManager"],[1104,52,1176,52],[1104,53,1176,53,"getSaveData"],[1104,64,1176,64],[1104,65,1176,65],[1104,66,1176,66],[1105,8,1177,6,"console"],[1105,15,1177,13],[1105,16,1177,14,"log"],[1105,19,1177,17],[1105,20,1177,18],[1105,70,1177,68],[1105,72,1177,70,"abilityData"],[1105,83,1177,81],[1105,84,1177,82],[1106,8,1178,6,"game"],[1106,12,1178,10],[1106,13,1178,11,"updateAbilityData"],[1106,30,1178,28],[1106,31,1178,29,"abilityData"],[1106,42,1178,40],[1106,43,1178,41],[1107,6,1179,4],[1108,4,1180,2],[1108,5,1180,3],[1108,7,1180,5],[1108,8,1180,6,"combatState"],[1108,19,1180,17],[1108,20,1180,18,"abilityManager"],[1108,34,1180,32],[1108,36,1180,34,"game"],[1108,40,1180,38],[1108,41,1180,39,"updateAbilityData"],[1108,58,1180,56],[1108,59,1180,57],[1108,60,1180,58],[1109,4,1182,2],[1109,8,1182,8,"contextValue"],[1109,20,1182,39],[1109,23,1182,42,"React"],[1109,28,1182,47],[1109,29,1182,47,"default"],[1109,36,1182,47],[1109,37,1182,48,"useMemo"],[1109,44,1182,55],[1109,45,1182,56],[1109,52,1182,63],[1110,6,1183,4,"combatState"],[1110,17,1183,15],[1111,6,1184,4,"projectiles"],[1111,17,1184,15],[1112,6,1185,4,"startCombat"],[1112,17,1185,15],[1113,6,1186,4,"stopCombat"],[1113,16,1186,14],[1114,6,1187,4,"equipAbility"],[1114,18,1187,16],[1115,6,1188,4,"handleEnemyKill"],[1115,21,1188,19],[1116,6,1189,4,"getDeck"],[1116,13,1189,11],[1117,6,1190,4,"getAvailableAbilities"],[1117,27,1190,25],[1118,6,1191,4,"upgradeAbility"],[1118,20,1191,18],[1119,6,1192,4,"spawnEnemy"],[1119,16,1192,14],[1120,6,1193,4,"spawnBoss"],[1120,15,1193,13],[1121,6,1194,4,"clearAllEnemies"],[1121,21,1194,19],[1122,6,1195,4,"clearSpecificEnemy"],[1122,24,1195,22],[1123,6,1196,4],[1124,6,1197,4,"findClosestEnemy"],[1124,22,1197,20],[1125,6,1198,4,"updateNinjaPosition"],[1125,25,1198,23],[1126,6,1199,4,"setManualControlActive"],[1126,28,1199,26],[1127,6,1200,4,"lastExplosionTime"],[1127,23,1200,21],[1128,6,1201,4,"useAbilityManually"],[1128,24,1201,22],[1129,6,1201,24],[1130,6,1202,4,"saveAbilityData"],[1130,21,1202,19],[1131,6,1202,21],[1132,6,1203,4,"shadowClone"],[1132,17,1203,15],[1132,19,1203,17,"combatState"],[1132,30,1203,28],[1132,31,1203,29,"shadowClone"],[1132,42,1203,40],[1132,43,1203,42],[1133,4,1204,2],[1133,5,1204,3],[1133,6,1204,4],[1133,8,1204,6],[1134,4,1205,4],[1135,4,1206,4],[1136,4,1207,4,"combatState"],[1136,15,1207,15],[1136,17,1208,4,"projectiles"],[1136,28,1208,15],[1136,30,1209,4,"lastExplosionTime"],[1136,47,1209,21],[1137,4,1210,4],[1138,4,1211,4,"combatState"],[1138,15,1211,15],[1138,16,1211,16,"abilityManager"],[1138,30,1211,30],[1138,32,1212,4,"combatState"],[1138,43,1212,15],[1138,44,1212,16,"enemies"],[1138,51,1212,23],[1138,53,1213,4,"combatState"],[1138,64,1213,15],[1138,65,1213,16,"shadowClone"],[1138,76,1213,27],[1139,4,1213,29],[1140,4,1214,4,"useAbilityManually"],[1140,22,1214,22],[1141,4,1214,24],[1142,4,1215,4,"saveAbilityData"],[1142,19,1215,19],[1142,20,1215,21],[1143,4,1215,21],[1143,5,1216,3],[1143,6,1216,4],[1144,4,1218,2],[1144,24,1219,4],[1144,28,1219,4,"_reactJsxDevRuntime"],[1144,47,1219,4],[1144,48,1219,4,"jsxDEV"],[1144,54,1219,4],[1144,56,1219,5,"CombatContext"],[1144,69,1219,18],[1144,70,1219,19,"Provider"],[1144,78,1219,27],[1145,6,1219,28,"value"],[1145,11,1219,33],[1145,13,1219,35,"contextValue"],[1145,25,1219,48],[1146,6,1219,48,"children"],[1146,14,1219,48],[1146,16,1220,7,"children"],[1147,4,1220,15],[1148,6,1220,15,"fileName"],[1148,14,1220,15],[1148,16,1220,15,"_jsxFileName"],[1148,28,1220,15],[1149,6,1220,15,"lineNumber"],[1149,16,1220,15],[1150,6,1220,15,"columnNumber"],[1150,18,1220,15],[1151,4,1220,15],[1151,11,1221,28],[1151,12,1221,29],[1152,2,1223,0],[1152,3,1223,1],[1153,2,1223,2,"_s4"],[1153,5,1223,2],[1153,6,106,13,"CombatProvider"],[1153,20,106,27],[1154,4,106,27],[1154,12,107,15,"useGame"],[1154,24,107,22],[1154,25,107,22,"useGame"],[1154,32,107,22],[1154,34,108,77,"useZone"],[1154,46,108,84],[1154,47,108,84,"useZone"],[1154,54,108,84],[1155,2,108,84],[1156,2,108,84,"_c"],[1156,4,108,84],[1156,7,106,13,"CombatProvider"],[1156,21,106,27],[1157,2,106,27],[1157,6,106,27,"_c"],[1157,8,106,27],[1158,2,106,27,"$RefreshReg$"],[1158,14,106,27],[1158,15,106,27,"_c"],[1158,17,106,27],[1159,0,106,27],[1159,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","allDeadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","setProjectiles$argument_0","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCQ;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;ORgG;qDSwD,0BT;sGUI,qDV;iDSQ;OTU;yGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;sDSK,yBT;mCUa;SViB;yBFG;UEG;0BWG,uCX;uBJG;oCgBE;yDCC,sCD;WhBE;UIC;GNG;mCoBG;oBCY;KDU;GpBI;2BsBG;GtBE;0CuBQ;GvBE;6CwBG;GxBG;sByBO;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBC6C,6BD;G/BM;yBiCG;GjCsC;8BkCG;GlC4B;wCmCI;mBjCI,uCiC;GnCS;uCoCG;mBlCC,wCkC;GpCE;uBqCG;GrCE;kBsCE;GtCE;gCuCE;GvCE;yBwCE;GxCE;0ByCG;mBvCE;MuCG;GzCC;qB0CM;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qBhBC;sCiBC;2B/Cc;wDgDY;iBhDoC;wCiDM,+BjD;8DMK,sCN;a+CiC;SjBiB;OgBC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}