{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and smoother  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            var newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            var newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"nwOvpVrt9p9CSB/QS1Y6i0ZA5TI=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":626,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,630,2],[27,6,630,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,630,2],[27,42,630,2,"require"],[27,49,630,2],[27,50,630,2,"_dependencyMap"],[27,64,630,2],[28,2,630,2],[28,6,630,2,"_slicedToArray"],[28,20,630,2],[28,23,630,2,"_interopDefault"],[28,38,630,2],[28,39,630,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,630,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,65,0],[36,6,65,6,"CombatContext"],[36,19,65,19],[36,35,65,22],[36,39,65,22,"createContext"],[36,45,65,35],[36,46,65,35,"createContext"],[36,59,65,35],[36,61,65,67,"undefined"],[36,70,65,76],[36,71,65,77],[37,2,67,7],[37,6,67,13,"useCombat"],[37,15,67,22],[37,18,67,25,"useCombat"],[37,19,67,25],[37,24,67,50],[38,4,67,50,"_s"],[38,6,67,50],[39,4,68,2],[39,8,68,8,"context"],[39,15,68,15],[39,18,68,18],[39,22,68,18,"useContext"],[39,28,68,28],[39,29,68,28,"useContext"],[39,39,68,28],[39,41,68,29,"CombatContext"],[39,54,68,42],[39,55,68,43],[40,4,69,2],[40,8,69,6],[40,9,69,7,"context"],[40,16,69,14],[40,18,69,16],[41,6,70,4],[41,12,70,10],[41,16,70,14,"Error"],[41,21,70,19],[41,22,70,20],[41,70,70,68],[41,71,70,69],[42,4,71,2],[43,4,72,2],[43,11,72,9,"context"],[43,18,72,16],[44,2,73,0],[44,3,73,1],[45,2,73,2,"_s"],[45,4,73,2],[45,5,67,13,"useCombat"],[45,14,67,22],[46,2,75,0],[46,6,75,4,"enemyCounter"],[46,18,75,16],[46,21,75,19],[46,22,75,20],[46,23,75,21],[46,24,75,22],[48,2,77,7],[48,6,77,13,"CombatProvider"],[48,20,77,27],[48,23,77,30,"_ref"],[48,27,77,30],[48,31,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,77,73],[50,8,77,33,"children"],[50,16,77,41],[50,19,77,41,"_ref"],[50,23,77,41],[50,24,77,33,"children"],[50,32,77,41],[51,4,78,2],[51,8,78,2,"_useGame"],[51,16,78,2],[51,19,78,26],[51,23,78,26,"useGame"],[51,35,78,33],[51,36,78,33,"useGame"],[51,43,78,33],[51,45,78,34],[51,46,78,35],[52,6,78,10,"updateNinja"],[52,17,78,21],[52,20,78,21,"_useGame"],[52,28,78,21],[52,29,78,10,"updateNinja"],[52,40,78,21],[53,4,79,2],[53,8,79,2,"_useZone"],[53,16,79,2],[53,19,79,30],[53,23,79,30,"useZone"],[53,35,79,37],[53,36,79,37,"useZone"],[53,43,79,37],[53,45,79,38],[53,46,79,39],[54,6,79,10,"recordEnemyKill"],[54,21,79,25],[54,24,79,25,"_useZone"],[54,32,79,25],[54,33,79,10,"recordEnemyKill"],[54,48,79,25],[55,4,81,2],[55,8,81,2,"_useState"],[55,17,81,2],[55,20,81,40],[55,24,81,40,"useState"],[55,30,81,48],[55,31,81,48,"useState"],[55,39,81,48],[55,41,81,62],[56,8,82,4,"isInCombat"],[56,18,82,14],[56,20,82,16],[56,25,82,21],[57,8,83,4,"currentTick"],[57,19,83,15],[57,21,83,17],[57,22,83,18],[58,8,84,4,"enemies"],[58,15,84,11],[58,17,84,13],[58,19,84,15],[59,8,85,4,"abilityManager"],[59,22,85,18],[59,24,85,20],[59,28,85,24,"AbilityManager"],[59,46,85,38],[59,47,85,38,"AbilityManager"],[59,61,85,38],[59,62,85,39],[59,63,85,40],[60,8,86,4,"statusEffects"],[60,21,86,17],[60,23,86,19],[60,27,86,23,"StatusEffectManager"],[60,46,86,42],[60,47,86,42,"StatusEffectManager"],[60,66,86,42],[60,67,86,43],[60,68,86,44],[61,8,87,4,"playerStats"],[61,19,87,15],[61,21,87,17],[62,10,88,6,"attack"],[62,16,88,12],[62,18,88,14],[62,20,88,16],[63,10,88,18],[64,10,89,6,"defense"],[64,17,89,13],[64,19,89,15],[64,20,89,16],[65,10,90,6,"health"],[65,16,90,12],[65,18,90,14],[65,21,90,17],[66,10,91,6,"maxHealth"],[66,19,91,15],[66,21,91,17],[66,24,91,20],[67,10,92,6,"critChance"],[67,20,92,16],[67,22,92,18],[67,23,92,19],[68,10,93,6,"critDamage"],[68,20,93,16],[68,22,93,18],[68,25,93,21],[69,10,94,6,"cooldownReduction"],[69,27,94,23],[69,29,94,25],[70,8,95,4],[71,6,96,2],[71,7,96,3],[71,8,96,4],[72,6,96,4,"_useState2"],[72,16,96,4],[72,23,96,4,"_slicedToArray"],[72,37,96,4],[72,38,96,4,"default"],[72,45,96,4],[72,47,96,4,"_useState"],[72,56,96,4],[73,6,81,9,"combatState"],[73,17,81,20],[73,20,81,20,"_useState2"],[73,30,81,20],[74,6,81,22,"setCombatState"],[74,20,81,36],[74,23,81,36,"_useState2"],[74,33,81,36],[75,4,98,2],[75,8,98,2,"_useState3"],[75,18,98,2],[75,21,98,40],[75,25,98,40,"useState"],[75,31,98,48],[75,32,98,48,"useState"],[75,40,98,48],[75,42,98,69],[75,44,98,71],[75,45,98,72],[76,6,98,72,"_useState4"],[76,16,98,72],[76,23,98,72,"_slicedToArray"],[76,37,98,72],[76,38,98,72,"default"],[76,45,98,72],[76,47,98,72,"_useState3"],[76,57,98,72],[77,6,98,9,"projectiles"],[77,17,98,20],[77,20,98,20,"_useState4"],[77,30,98,20],[78,6,98,22,"setProjectiles"],[78,20,98,36],[78,23,98,36,"_useState4"],[78,33,98,36],[79,4,99,2],[79,8,99,2,"_useState5"],[79,18,99,2],[79,21,99,52],[79,25,99,52,"useState"],[79,31,99,60],[79,32,99,60,"useState"],[79,40,99,60],[79,42,99,69],[79,43,99,70],[79,44,99,71],[80,6,99,71,"_useState6"],[80,16,99,71],[80,23,99,71,"_slicedToArray"],[80,37,99,71],[80,38,99,71,"default"],[80,45,99,71],[80,47,99,71,"_useState5"],[80,57,99,71],[81,6,99,9,"lastExplosionTime"],[81,23,99,26],[81,26,99,26,"_useState6"],[81,36,99,26],[82,6,99,28,"setLastExplosionTime"],[82,26,99,48],[82,29,99,48,"_useState6"],[82,39,99,48],[83,4,100,2],[84,4,101,2],[86,4,103,2],[87,4,104,2],[87,8,104,8,"handleEnemyKill"],[87,23,104,23],[87,26,104,26],[87,30,104,26,"useCallback"],[87,36,104,37],[87,37,104,37,"useCallback"],[87,48,104,37],[87,50,104,39,"enemy"],[87,55,104,57],[87,59,104,62],[88,6,105,4,"console"],[88,13,105,11],[88,14,105,12,"log"],[88,17,105,15],[88,18,105,16],[88,46,105,44,"enemy"],[88,51,105,49],[88,52,105,50,"maxHealth"],[88,61,105,59],[88,63,105,61],[88,64,105,62],[90,6,107,4],[91,6,108,4],[91,10,108,10,"xpReward"],[91,18,108,18],[91,21,108,21],[91,23,108,23],[91,24,108,24],[91,25,108,25],[92,6,109,4],[92,10,109,10,"goldReward"],[92,20,109,20],[92,23,109,23],[92,25,109,25],[93,6,111,4,"console"],[93,13,111,11],[93,14,111,12,"log"],[93,17,111,15],[93,18,111,16],[93,33,111,31,"xpReward"],[93,41,111,39],[93,52,111,50,"goldReward"],[93,62,111,60],[93,78,111,76],[93,79,111,77],[95,6,113,4],[96,6,114,4],[97,6,115,4,"setTimeout"],[97,16,115,14],[97,17,115,15],[97,23,115,21],[98,8,116,6],[99,8,117,6,"updateNinja"],[99,19,117,17],[99,20,117,19,"prev"],[99,24,117,23],[99,28,117,28],[100,10,118,8,"console"],[100,17,118,15],[100,18,118,16,"log"],[100,21,118,19],[100,22,118,20],[100,39,118,37,"prev"],[100,43,118,41],[100,44,118,42,"experience"],[100,54,118,52],[100,66,118,64,"prev"],[100,70,118,68],[100,71,118,69,"experience"],[100,81,118,79],[100,84,118,82,"xpReward"],[100,92,118,90],[100,94,118,92],[100,95,118,93],[101,10,119,8],[101,17,119,15],[102,12,120,10,"experience"],[102,22,120,20],[102,24,120,22,"prev"],[102,28,120,26],[102,29,120,27,"experience"],[102,39,120,37],[102,42,120,40,"xpReward"],[102,50,120,48],[103,12,121,10,"gold"],[103,16,121,14],[103,18,121,16,"prev"],[103,22,121,20],[103,23,121,21,"gold"],[103,27,121,25],[103,30,121,28,"goldReward"],[104,10,122,8],[104,11,122,9],[105,8,123,6],[105,9,123,7],[105,10,123,8],[107,8,125,6],[108,8,126,6],[108,12,126,12,"zoneEnemy"],[108,21,126,21],[108,24,126,24],[109,10,127,8,"id"],[109,12,127,10],[109,14,127,12,"enemy"],[109,19,127,17],[109,20,127,18,"id"],[109,22,127,20],[110,10,128,8,"typeId"],[110,16,128,14],[110,18,128,16],[110,28,128,26],[111,10,128,28],[112,10,129,8,"name"],[112,14,129,12],[112,16,129,14,"enemy"],[112,21,129,19],[112,22,129,20,"name"],[112,26,129,24],[113,10,130,8,"icon"],[113,14,130,12],[113,16,130,14],[113,20,130,18],[114,10,130,20],[115,10,131,8,"hp"],[115,12,131,10],[115,14,131,12],[115,15,131,13],[116,10,131,15],[117,10,132,8,"maxHP"],[117,15,132,13],[117,17,132,15,"enemy"],[117,22,132,20],[117,23,132,21,"maxHealth"],[117,32,132,30],[118,10,133,8,"attack"],[118,16,133,14],[118,18,133,16,"enemy"],[118,23,133,21],[118,24,133,22,"stats"],[118,29,133,27],[118,30,133,28,"attack"],[118,36,133,34],[119,10,134,8,"xp"],[119,12,134,10],[119,14,134,12],[119,16,134,14],[120,10,134,16],[121,10,135,8,"position"],[121,18,135,16],[121,20,135,18,"enemy"],[121,25,135,23],[121,26,135,24,"position"],[122,8,136,6],[122,9,136,7],[123,8,137,6,"recordEnemyKill"],[123,23,137,21],[123,24,137,22,"zoneEnemy"],[123,33,137,31],[123,34,137,32],[124,6,138,4],[124,7,138,5],[124,9,138,7],[124,10,138,8],[124,11,138,9],[124,12,138,10],[124,13,138,11],[125,4,139,2],[125,5,139,3],[125,7,139,5],[125,8,139,6,"updateNinja"],[125,19,139,17],[125,21,139,19,"recordEnemyKill"],[125,36,139,34],[125,37,139,35],[125,38,139,36],[127,4,141,2],[128,4,142,2],[128,8,142,8,"handleCombatTick"],[128,24,142,24],[128,27,142,27,"React"],[128,32,142,32],[128,33,142,32,"default"],[128,40,142,32],[128,41,142,33,"useCallback"],[128,52,142,44],[128,53,142,45],[128,59,142,51],[129,6,142,51],[129,10,142,51,"_s2"],[129,13,142,51],[129,16,142,51,"$RefreshSig$"],[129,28,142,51],[130,6,143,4,"console"],[130,13,143,11],[130,14,143,12,"log"],[130,17,143,15],[130,18,143,16],[130,45,143,43],[130,46,143,44],[131,6,145,4],[131,10,145,8,"enemiesToKill"],[131,23,145,36],[131,26,145,39],[131,28,145,41],[131,29,145,42],[131,30,145,43],[133,6,147,4,"_s2"],[133,9,147,4],[133,10,147,4,"setCombatState"],[133,24,147,18],[133,25,147,18,"_s2"],[133,28,147,18],[133,29,147,19,"prev"],[133,33,147,23],[133,37,147,27],[134,8,147,27,"_s2"],[134,11,147,27],[135,8,148,6],[135,12,148,12,"newTick"],[135,19,148,19],[135,22,148,22,"combatEngine"],[135,41,148,34],[135,42,148,34,"combatEngine"],[135,54,148,34],[135,55,148,35,"getCurrentTick"],[135,69,148,49],[135,70,148,50],[135,71,148,51],[136,8,149,6],[136,12,149,12,"newState"],[136,20,149,20],[136,23,149,23],[137,10,149,25],[137,13,149,28,"prev"],[137,17,149,32],[138,10,149,34,"currentTick"],[138,21,149,45],[138,23,149,47,"newTick"],[139,8,149,55],[139,9,149,56],[140,8,151,6],[140,12,151,10],[140,13,151,11,"newState"],[140,21,151,19],[140,22,151,20,"isInCombat"],[140,32,151,30],[140,34,151,32],[140,41,151,39,"newState"],[140,49,151,47],[142,8,153,6],[143,8,154,6,"newState"],[143,16,154,14],[143,17,154,15,"abilityManager"],[143,31,154,29],[143,32,154,30,"updateCooldowns"],[143,47,154,45],[143,48,154,46,"newTick"],[143,55,154,53],[143,56,154,54],[145,8,156,6],[146,8,157,6],[146,12,157,12,"effectResults"],[146,25,157,25],[146,28,157,28,"newState"],[146,36,157,36],[146,37,157,37,"statusEffects"],[146,50,157,50],[146,51,157,51,"processTick"],[146,62,157,62],[146,63,157,63,"newTick"],[146,70,157,70],[146,71,157,71],[148,8,159,6],[149,8,160,6,"effectResults"],[149,21,160,19],[149,22,160,20,"forEach"],[149,29,160,27],[149,30,160,28],[149,31,160,29,"results"],[149,38,160,36],[149,40,160,38,"entityId"],[149,48,160,46],[149,53,160,51],[150,10,161,8],[150,14,161,14,"enemyIndex"],[150,24,161,24],[150,27,161,27,"newState"],[150,35,161,35],[150,36,161,36,"enemies"],[150,43,161,43],[150,44,161,44,"findIndex"],[150,53,161,53],[150,54,161,54,"e"],[150,55,161,55],[150,59,161,59,"e"],[150,60,161,60],[150,61,161,61,"id"],[150,63,161,63],[150,68,161,68,"entityId"],[150,76,161,76],[150,77,161,77],[151,10,162,8],[151,14,162,12,"enemyIndex"],[151,24,162,22],[151,28,162,26],[151,29,162,27],[151,31,162,29],[152,12,163,10,"results"],[152,19,163,17],[152,20,163,18,"forEach"],[152,27,163,25],[152,28,163,26,"result"],[152,34,163,32],[152,38,163,36],[153,14,164,12,"newState"],[153,22,164,20],[153,23,164,21,"enemies"],[153,30,164,28],[153,31,164,29,"enemyIndex"],[153,41,164,39],[153,42,164,40],[153,43,164,41,"health"],[153,49,164,47],[153,53,164,51,"result"],[153,59,164,57],[153,60,164,58,"damage"],[153,66,164,64],[154,14,165,12,"newState"],[154,22,165,20],[154,23,165,21,"enemies"],[154,30,165,28],[154,31,165,29,"enemyIndex"],[154,41,165,39],[154,42,165,40],[154,43,165,41,"lastDamaged"],[154,54,165,52],[154,57,165,55,"newTick"],[154,64,165,62],[155,12,166,10],[155,13,166,11],[155,14,166,12],[156,10,167,8],[157,8,168,6],[157,9,168,7],[157,10,168,8],[159,8,170,6],[160,8,171,6,"newState"],[160,16,171,14],[160,17,171,15,"enemies"],[160,24,171,22],[160,25,171,23,"forEach"],[160,32,171,30],[160,33,171,31,"enemy"],[160,38,171,36],[160,42,171,40],[161,10,172,8],[161,14,172,12],[161,15,172,13,"enemy"],[161,20,172,18],[161,21,172,19,"isBoss"],[161,27,172,25],[161,29,172,27],[162,12,172,29],[163,12,173,10],[164,12,174,10],[164,16,174,16,"MOVEMENT_SPEED"],[164,30,174,30],[164,33,174,33],[164,37,174,37],[164,38,174,38],[164,39,174,39],[165,12,175,10],[165,16,175,16,"SCREEN_WIDTH"],[165,28,175,28],[165,31,175,31],[165,34,175,34],[166,12,176,10],[166,16,176,16,"GAME_AREA_HEIGHT"],[166,32,176,32],[166,35,176,35],[166,38,176,38],[166,39,176,39],[166,40,176,40],[167,12,177,10],[167,16,177,16,"ENEMY_SIZE"],[167,26,177,26],[167,29,177,29],[167,31,177,31],[169,12,179,10],[170,12,180,10],[170,16,180,14],[170,17,180,15,"enemy"],[170,22,180,20],[170,23,180,21,"movementDirection"],[170,40,180,38],[170,42,180,40],[171,14,181,12],[172,14,182,12,"enemy"],[172,19,182,17],[172,20,182,18,"movementDirection"],[172,37,182,35],[172,40,182,38],[173,16,183,14,"x"],[173,17,183,15],[173,19,183,17],[173,20,183,18,"Math"],[173,24,183,22],[173,25,183,23,"random"],[173,31,183,29],[173,32,183,30],[173,33,183,31],[173,36,183,34],[173,39,183,37],[173,43,183,41],[173,44,183,42],[174,16,183,44],[175,16,184,14,"y"],[175,17,184,15],[175,19,184,17],[175,20,184,18,"Math"],[175,24,184,22],[175,25,184,23,"random"],[175,31,184,29],[175,32,184,30],[175,33,184,31],[175,36,184,34],[175,39,184,37],[175,43,184,41],[176,14,185,12],[176,15,185,13],[177,12,186,10],[179,12,188,10],[180,12,189,10],[180,16,189,14,"newX"],[180,20,189,18],[180,23,189,21,"enemy"],[180,28,189,26],[180,29,189,27,"position"],[180,37,189,35],[180,38,189,36,"x"],[180,39,189,37],[180,42,189,41,"enemy"],[180,47,189,46],[180,48,189,47,"movementDirection"],[180,65,189,64],[180,66,189,65,"x"],[180,67,189,66],[180,70,189,69,"MOVEMENT_SPEED"],[180,84,189,84],[181,12,190,10],[181,16,190,14,"newY"],[181,20,190,18],[181,23,190,21,"enemy"],[181,28,190,26],[181,29,190,27,"position"],[181,37,190,35],[181,38,190,36,"y"],[181,39,190,37],[181,42,190,41,"enemy"],[181,47,190,46],[181,48,190,47,"movementDirection"],[181,65,190,64],[181,66,190,65,"y"],[181,67,190,66],[181,70,190,69,"MOVEMENT_SPEED"],[181,84,190,84],[183,12,192,10],[184,12,193,10],[184,16,193,14,"newX"],[184,20,193,18],[184,24,193,22],[184,25,193,23],[184,29,193,27,"newX"],[184,33,193,31],[184,37,193,35,"SCREEN_WIDTH"],[184,49,193,47],[184,52,193,50,"ENEMY_SIZE"],[184,62,193,60],[184,64,193,62],[185,14,194,12,"enemy"],[185,19,194,17],[185,20,194,18,"movementDirection"],[185,37,194,35],[185,38,194,36,"x"],[185,39,194,37],[185,43,194,41],[185,44,194,42],[185,45,194,43],[186,14,195,12,"newX"],[186,18,195,16],[186,21,195,19,"Math"],[186,25,195,23],[186,26,195,24,"max"],[186,29,195,27],[186,30,195,28],[186,31,195,29],[186,33,195,31,"Math"],[186,37,195,35],[186,38,195,36,"min"],[186,41,195,39],[186,42,195,40,"SCREEN_WIDTH"],[186,54,195,52],[186,57,195,55,"ENEMY_SIZE"],[186,67,195,65],[186,69,195,67,"newX"],[186,73,195,71],[186,74,195,72],[186,75,195,73],[187,12,196,10],[188,12,197,10],[188,16,197,14,"newY"],[188,20,197,18],[188,24,197,22],[188,25,197,23],[188,29,197,27,"newY"],[188,33,197,31],[188,37,197,35,"GAME_AREA_HEIGHT"],[188,53,197,51],[188,56,197,54,"ENEMY_SIZE"],[188,66,197,64],[188,68,197,66],[189,14,198,12,"enemy"],[189,19,198,17],[189,20,198,18,"movementDirection"],[189,37,198,35],[189,38,198,36,"y"],[189,39,198,37],[189,43,198,41],[189,44,198,42],[189,45,198,43],[190,14,199,12,"newY"],[190,18,199,16],[190,21,199,19,"Math"],[190,25,199,23],[190,26,199,24,"max"],[190,29,199,27],[190,30,199,28],[190,31,199,29],[190,33,199,31,"Math"],[190,37,199,35],[190,38,199,36,"min"],[190,41,199,39],[190,42,199,40,"GAME_AREA_HEIGHT"],[190,58,199,56],[190,61,199,59,"ENEMY_SIZE"],[190,71,199,69],[190,73,199,71,"newY"],[190,77,199,75],[190,78,199,76],[190,79,199,77],[191,12,200,10],[193,12,202,10],[194,12,203,10,"enemy"],[194,17,203,15],[194,18,203,16,"position"],[194,26,203,24],[194,27,203,25,"x"],[194,28,203,26],[194,31,203,29,"newX"],[194,35,203,33],[195,12,204,10,"enemy"],[195,17,204,15],[195,18,204,16,"position"],[195,26,204,24],[195,27,204,25,"y"],[195,28,204,26],[195,31,204,29,"newY"],[195,35,204,33],[197,12,206,10],[198,12,207,10],[198,16,207,14,"Math"],[198,20,207,18],[198,21,207,19,"random"],[198,27,207,25],[198,28,207,26],[198,29,207,27],[198,32,207,30],[198,36,207,34],[198,38,207,36],[199,14,207,38],[200,14,208,12,"enemy"],[200,19,208,17],[200,20,208,18,"movementDirection"],[200,37,208,35],[200,40,208,38],[201,16,209,14,"x"],[201,17,209,15],[201,19,209,17],[201,20,209,18,"Math"],[201,24,209,22],[201,25,209,23,"random"],[201,31,209,29],[201,32,209,30],[201,33,209,31],[201,36,209,34],[201,39,209,37],[201,43,209,41],[201,44,209,42],[202,16,210,14,"y"],[202,17,210,15],[202,19,210,17],[202,20,210,18,"Math"],[202,24,210,22],[202,25,210,23,"random"],[202,31,210,29],[202,32,210,30],[202,33,210,31],[202,36,210,34],[202,39,210,37],[202,43,210,41],[203,14,211,12],[203,15,211,13],[204,12,212,10],[205,10,213,8],[206,8,214,6],[206,9,214,7],[206,10,214,8],[208,8,216,6],[209,8,217,6],[209,12,217,10],[209,13,217,11,"isManualControlActive"],[209,34,217,32],[209,36,217,34],[210,10,218,8],[210,15,218,13],[210,19,218,17,"i"],[210,20,218,18],[210,23,218,21],[210,24,218,22],[210,26,218,24,"i"],[210,27,218,25],[210,30,218,28],[210,31,218,29],[210,33,218,31,"i"],[210,34,218,32],[210,36,218,34],[210,38,218,36],[211,12,219,10],[211,16,219,14,"newState"],[211,24,219,22],[211,25,219,23,"abilityManager"],[211,39,219,37],[211,40,219,38,"isAbilityReady"],[211,54,219,52],[211,55,219,53,"i"],[211,56,219,54],[211,57,219,55],[211,61,219,59,"newState"],[211,69,219,67],[211,70,219,68,"enemies"],[211,77,219,75],[211,78,219,76,"length"],[211,84,219,82],[211,87,219,85],[211,88,219,86],[211,90,219,88],[212,14,220,12],[212,18,220,16,"newState"],[212,26,220,24],[212,27,220,25,"abilityManager"],[212,41,220,39],[212,42,220,40,"useAbility"],[212,52,220,50],[212,53,220,51,"i"],[212,54,220,52],[212,56,220,54,"newTick"],[212,63,220,61],[212,64,220,62],[212,66,220,64],[213,16,221,14,"castAbility"],[213,27,221,25],[213,28,221,26,"newState"],[213,36,221,34],[213,38,221,36,"i"],[213,39,221,37],[213,40,221,38],[214,14,222,12],[215,12,223,10],[216,10,224,8],[217,8,225,6],[219,8,227,6],[220,8,228,6],[220,12,228,12,"deadEnemies"],[220,23,228,23],[220,26,228,26,"newState"],[220,34,228,34],[220,35,228,35,"enemies"],[220,42,228,42],[220,43,228,43,"filter"],[220,49,228,49],[220,50,228,50,"enemy"],[220,55,228,55],[220,59,228,59,"enemy"],[220,64,228,64],[220,65,228,65,"health"],[220,71,228,71],[220,75,228,75],[220,76,228,76],[220,77,228,77],[221,8,229,6,"enemiesToKill"],[221,21,229,19],[221,24,229,22],[221,25,229,23],[221,28,229,26,"deadEnemies"],[221,39,229,37],[221,40,229,38],[221,41,229,39],[221,42,229,40],[223,8,231,6],[224,8,232,6,"newState"],[224,16,232,14],[224,17,232,15,"enemies"],[224,24,232,22],[224,27,232,25,"newState"],[224,35,232,33],[224,36,232,34,"enemies"],[224,43,232,41],[224,44,232,42,"filter"],[224,50,232,48],[224,51,232,49,"enemy"],[224,56,232,54],[224,60,232,58,"enemy"],[224,65,232,63],[224,66,232,64,"health"],[224,72,232,70],[224,75,232,73],[224,76,232,74],[224,77,232,75],[226,8,234,6],[227,8,235,6],[228,8,236,6],[228,12,236,12,"MAX_ENEMIES"],[228,23,236,23],[228,26,236,26],[228,28,236,28],[229,8,237,6],[229,12,237,12,"MIN_SPAWN_DELAY"],[229,27,237,27],[229,30,237,30],[229,33,237,33],[229,34,237,34],[229,35,237,35],[230,8,238,6],[230,12,238,12,"now"],[230,15,238,15],[230,18,238,18,"Date"],[230,22,238,22],[230,23,238,23,"now"],[230,26,238,26],[230,27,238,27],[230,28,238,28],[231,8,239,6],[231,12,239,12,"hasBoss"],[231,19,239,19],[231,22,239,22,"newState"],[231,30,239,30],[231,31,239,31,"enemies"],[231,38,239,38],[231,39,239,39,"some"],[231,43,239,43],[231,44,239,44,"enemy"],[231,49,239,49],[231,53,239,53,"enemy"],[231,58,239,58],[231,59,239,59,"isBoss"],[231,65,239,65],[231,66,239,66],[233,8,241,6],[234,8,242,6],[234,12,242,10],[234,13,242,11,"newState"],[234,21,242,19],[234,22,242,20,"lastSpawnTime"],[234,35,242,33],[234,37,242,35],[235,10,243,8,"newState"],[235,18,243,16],[235,19,243,17,"lastSpawnTime"],[235,32,243,30],[235,35,243,33,"now"],[235,38,243,36],[236,8,244,6],[237,8,246,6,"console"],[237,15,246,13],[237,16,246,14,"log"],[237,19,246,17],[237,20,246,18],[237,53,246,51,"newState"],[237,61,246,59],[237,62,246,60,"enemies"],[237,69,246,67],[237,70,246,68,"length"],[237,76,246,74],[237,85,246,83,"MAX_ENEMIES"],[237,96,246,94],[237,109,246,107,"hasBoss"],[237,116,246,114],[237,118,246,116],[237,119,246,117],[239,8,248,6],[240,8,249,6],[240,12,249,10],[240,13,249,11,"hasBoss"],[240,20,249,18],[240,24,249,22,"newState"],[240,32,249,30],[240,33,249,31,"enemies"],[240,40,249,38],[240,41,249,39,"length"],[240,47,249,45],[240,50,249,48,"MAX_ENEMIES"],[240,61,249,59],[240,65,249,64,"now"],[240,68,249,67],[240,71,249,70,"newState"],[240,79,249,78],[240,80,249,79,"lastSpawnTime"],[240,93,249,92],[240,97,249,97,"MIN_SPAWN_DELAY"],[240,112,249,112],[240,114,249,114],[241,10,250,8,"console"],[241,17,250,15],[241,18,250,16,"log"],[241,21,250,19],[241,22,250,20],[241,43,250,41,"newState"],[241,51,250,49],[241,52,250,50,"enemies"],[241,59,250,57],[241,60,250,58,"length"],[241,66,250,64],[241,69,250,67],[241,70,250,68],[241,74,250,72,"MAX_ENEMIES"],[241,85,250,83],[241,87,250,85],[241,88,250,86],[242,10,251,8,"spawnTestEnemy"],[242,24,251,22],[242,25,251,23,"newState"],[242,33,251,31],[242,34,251,32],[243,10,252,8,"newState"],[243,18,252,16],[243,19,252,17,"lastSpawnTime"],[243,32,252,30],[243,35,252,33,"now"],[243,38,252,36],[244,8,253,6],[245,8,255,6],[245,15,255,13,"newState"],[245,23,255,21],[246,6,256,4],[246,7,256,5],[246,47,256,6],[248,6,258,4],[249,6,259,4,"enemiesToKill"],[249,19,259,17],[249,20,259,18,"forEach"],[249,27,259,25],[249,28,259,26,"enemy"],[249,33,259,31],[249,37,259,35],[250,8,260,6,"handleEnemyKill"],[250,23,260,21],[250,24,260,22,"enemy"],[250,29,260,27],[250,30,260,28],[251,6,261,4],[251,7,261,5],[251,8,261,6],[252,4,262,2],[252,5,262,3],[252,7,262,5],[252,8,262,6,"handleEnemyKill"],[252,23,262,21],[252,24,262,22],[252,25,262,23],[252,26,262,24],[252,27,262,25],[254,4,264,2],[255,4,265,2],[255,8,265,8,"findClosestEnemyInternal"],[255,32,265,32],[255,35,265,36,"enemies"],[255,42,265,58],[255,46,265,83],[256,6,266,4],[256,10,266,8,"enemies"],[256,17,266,15],[256,18,266,16,"length"],[256,24,266,22],[256,29,266,27],[256,30,266,28],[256,32,266,30],[256,39,266,37],[256,43,266,41],[258,6,268,4],[259,6,269,4],[259,10,269,10,"SCREEN_WIDTH"],[259,22,269,22],[259,25,269,25],[259,28,269,28],[260,6,270,4],[260,10,270,10,"GAME_AREA_HEIGHT"],[260,26,270,26],[260,29,270,29],[260,32,270,32],[260,35,270,35],[260,38,270,38],[260,39,270,39],[260,40,270,40],[261,6,271,4],[261,10,271,10,"ninjaX"],[261,16,271,16],[261,19,271,19,"SCREEN_WIDTH"],[261,31,271,31],[261,34,271,34],[261,35,271,35],[262,6,272,4],[262,10,272,10,"ninjaY"],[262,16,272,16],[262,19,272,19,"GAME_AREA_HEIGHT"],[262,35,272,35],[262,38,272,38],[262,39,272,39],[263,6,274,4],[263,10,274,8,"closestEnemy"],[263,22,274,20],[263,25,274,23,"enemies"],[263,32,274,30],[263,33,274,31],[263,34,274,32],[263,35,274,33],[264,6,275,4],[264,10,275,8,"closestDistance"],[264,25,275,23],[264,28,275,26,"Infinity"],[264,36,275,34],[265,6,277,4,"enemies"],[265,13,277,11],[265,14,277,12,"forEach"],[265,21,277,19],[265,22,277,20,"enemy"],[265,27,277,25],[265,31,277,29],[266,8,278,6],[266,12,278,12,"distance"],[266,20,278,20],[266,23,278,23,"Math"],[266,27,278,27],[266,28,278,28,"sqrt"],[266,32,278,32],[266,33,279,8,"Math"],[266,37,279,12],[266,38,279,13,"pow"],[266,41,279,16],[266,42,279,17,"enemy"],[266,47,279,22],[266,48,279,23,"position"],[266,56,279,31],[266,57,279,32,"x"],[266,58,279,33],[266,61,279,36,"ninjaX"],[266,67,279,42],[266,69,279,44],[266,70,279,45],[266,71,279,46],[266,74,280,8,"Math"],[266,78,280,12],[266,79,280,13,"pow"],[266,82,280,16],[266,83,280,17,"enemy"],[266,88,280,22],[266,89,280,23,"position"],[266,97,280,31],[266,98,280,32,"y"],[266,99,280,33],[266,102,280,36,"ninjaY"],[266,108,280,42],[266,110,280,44],[266,111,280,45],[266,112,281,6],[266,113,281,7],[267,8,283,6],[267,12,283,10,"distance"],[267,20,283,18],[267,23,283,21,"closestDistance"],[267,38,283,36],[267,40,283,38],[268,10,284,8,"closestDistance"],[268,25,284,23],[268,28,284,26,"distance"],[268,36,284,34],[269,10,285,8,"closestEnemy"],[269,22,285,20],[269,25,285,23,"enemy"],[269,30,285,28],[270,8,286,6],[271,6,287,4],[271,7,287,5],[271,8,287,6],[272,6,289,4,"console"],[272,13,289,11],[272,14,289,12,"log"],[272,17,289,15],[272,18,289,16],[272,60,289,58,"closestDistance"],[272,75,289,73],[272,76,289,74,"toFixed"],[272,83,289,81],[272,84,289,82],[272,85,289,83],[272,86,289,84],[272,88,289,86],[272,89,289,87],[273,6,290,4],[273,13,290,11,"closestEnemy"],[273,25,290,23],[274,4,291,2],[274,5,291,3],[276,4,293,2],[277,4,294,2],[277,8,294,8,"findClosestEnemy"],[277,24,294,24],[277,27,294,27,"findClosestEnemy"],[277,28,294,27],[277,33,294,53],[278,6,295,4],[278,13,295,11,"findClosestEnemyInternal"],[278,37,295,35],[278,38,295,36,"combatState"],[278,49,295,47],[278,50,295,48,"enemies"],[278,57,295,55],[278,58,295,56],[279,4,296,2],[279,5,296,3],[281,4,298,2],[282,4,299,2],[282,8,299,2,"_useState7"],[282,18,299,2],[282,21,299,58],[282,25,299,58,"useState"],[282,31,299,66],[282,32,299,66,"useState"],[282,40,299,66],[282,42,299,91],[283,8,299,93,"x"],[283,9,299,94],[283,11,299,96],[283,12,299,97],[284,8,299,99,"y"],[284,9,299,100],[284,11,299,102],[285,6,299,104],[285,7,299,105],[285,8,299,106],[286,6,299,106,"_useState8"],[286,16,299,106],[286,23,299,106,"_slicedToArray"],[286,37,299,106],[286,38,299,106,"default"],[286,45,299,106],[286,47,299,106,"_useState7"],[286,57,299,106],[287,6,299,9,"currentNinjaPosition"],[287,26,299,29],[287,29,299,29,"_useState8"],[287,39,299,29],[288,6,299,31,"setCurrentNinjaPosition"],[288,29,299,54],[288,32,299,54,"_useState8"],[288,42,299,54],[289,4,300,2],[289,8,300,2,"_useState9"],[289,18,300,2],[289,21,300,60],[289,25,300,60,"useState"],[289,31,300,68],[289,32,300,68,"useState"],[289,40,300,68],[289,42,300,69],[289,47,300,74],[289,48,300,75],[290,6,300,75,"_useState0"],[290,16,300,75],[290,23,300,75,"_slicedToArray"],[290,37,300,75],[290,38,300,75,"default"],[290,45,300,75],[290,47,300,75,"_useState9"],[290,57,300,75],[291,6,300,9,"isManualControlActive"],[291,27,300,30],[291,30,300,30,"_useState0"],[291,40,300,30],[292,6,300,32,"setIsManualControlActive"],[292,30,300,56],[292,33,300,56,"_useState0"],[292,43,300,56],[294,4,302,2],[295,4,303,2],[295,8,303,8,"updateNinjaPosition"],[295,27,303,27],[295,30,303,30],[295,34,303,30,"useCallback"],[295,40,303,41],[295,41,303,41,"useCallback"],[295,52,303,41],[295,54,303,43,"newPosition"],[295,65,303,78],[295,69,303,83],[296,6,304,4,"setCurrentNinjaPosition"],[296,29,304,27],[296,30,304,28,"newPosition"],[296,41,304,39],[296,42,304,40],[297,4,305,2],[297,5,305,3],[297,7,305,5],[297,9,305,7],[297,10,305,8],[299,4,307,2],[300,4,308,2],[300,8,308,8,"setManualControlActive"],[300,30,308,30],[300,33,308,33],[300,37,308,33,"useCallback"],[300,43,308,44],[300,44,308,44,"useCallback"],[300,55,308,44],[300,57,308,46,"active"],[300,63,308,61],[300,67,308,66],[301,6,309,4,"setIsManualControlActive"],[301,30,309,28],[301,31,309,29,"active"],[301,37,309,35],[301,38,309,36],[302,6,310,4,"console"],[302,13,310,11],[302,14,310,12,"log"],[302,17,310,15],[302,18,310,16],[302,39,310,37,"active"],[302,45,310,43],[302,48,310,46],[302,59,310,57],[302,62,310,60],[302,75,310,73],[302,88,310,86,"active"],[302,94,310,92],[302,97,310,95],[302,105,310,103],[302,108,310,106],[302,117,310,115],[302,119,310,117],[302,120,310,118],[303,4,311,2],[303,5,311,3],[303,7,311,5],[303,9,311,7],[303,10,311,8],[305,4,313,2],[306,4,314,2],[306,8,314,8,"handleProjectileHit"],[306,27,314,27],[306,30,314,31,"projectile"],[306,40,314,59],[306,44,314,64],[307,6,315,4,"console"],[307,13,315,11],[307,14,315,12,"log"],[307,17,315,15],[307,18,315,16],[307,35,315,33,"projectile"],[307,45,315,43],[307,46,315,44,"id"],[307,48,315,46],[307,62,315,60,"projectile"],[307,72,315,70],[307,73,315,71,"targetEnemyId"],[307,86,315,84],[307,94,315,92,"projectile"],[307,104,315,102],[307,105,315,103,"damage"],[307,111,315,109],[307,120,315,118],[307,121,315,119],[308,6,317,4,"setCombatState"],[308,20,317,18],[308,21,317,19,"prev"],[308,25,317,23],[308,29,317,27],[309,8,318,6],[309,12,318,12,"newState"],[309,20,318,20],[309,23,318,23],[310,10,318,25],[310,13,318,28,"prev"],[311,8,318,33],[311,9,318,34],[313,8,320,6],[314,8,321,6],[314,12,321,12,"enemyIndex"],[314,22,321,22],[314,25,321,25,"newState"],[314,33,321,33],[314,34,321,34,"enemies"],[314,41,321,41],[314,42,321,42,"findIndex"],[314,51,321,51],[314,52,321,52,"e"],[314,53,321,53],[314,57,321,57,"e"],[314,58,321,58],[314,59,321,59,"id"],[314,61,321,61],[314,66,321,66,"projectile"],[314,76,321,76],[314,77,321,77,"targetEnemyId"],[314,90,321,90],[314,91,321,91],[315,8,322,6],[315,12,322,10,"enemyIndex"],[315,22,322,20],[315,26,322,24],[315,27,322,25],[315,29,322,27],[316,10,323,8,"newState"],[316,18,323,16],[316,19,323,17,"enemies"],[316,26,323,24],[316,29,323,27],[316,30,323,28],[316,33,323,31,"newState"],[316,41,323,39],[316,42,323,40,"enemies"],[316,49,323,47],[316,50,323,48],[317,10,324,8,"newState"],[317,18,324,16],[317,19,324,17,"enemies"],[317,26,324,24],[317,27,324,25,"enemyIndex"],[317,37,324,35],[317,38,324,36],[317,41,324,39],[318,12,325,10],[318,15,325,13,"newState"],[318,23,325,21],[318,24,325,22,"enemies"],[318,31,325,29],[318,32,325,30,"enemyIndex"],[318,42,325,40],[318,43,325,41],[319,12,326,10,"health"],[319,18,326,16],[319,20,326,18,"newState"],[319,28,326,26],[319,29,326,27,"enemies"],[319,36,326,34],[319,37,326,35,"enemyIndex"],[319,47,326,45],[319,48,326,46],[319,49,326,47,"health"],[319,55,326,53],[319,58,326,56,"projectile"],[319,68,326,66],[319,69,326,67,"damage"],[319,75,326,73],[320,12,327,10,"lastDamaged"],[320,23,327,21],[320,25,327,23,"combatEngine"],[320,44,327,35],[320,45,327,35,"combatEngine"],[320,57,327,35],[320,58,327,36,"getCurrentTick"],[320,72,327,50],[320,73,327,51],[321,10,328,8],[321,11,328,9],[322,10,330,8,"console"],[322,17,330,15],[322,18,330,16,"log"],[322,21,330,19],[322,22,330,20],[322,34,330,32,"projectile"],[322,44,330,42],[322,45,330,43,"targetEnemyId"],[322,58,330,56],[322,70,330,68,"newState"],[322,78,330,76],[322,79,330,77,"enemies"],[322,86,330,84],[322,87,330,85,"enemyIndex"],[322,97,330,95],[322,98,330,96],[322,99,330,97,"health"],[322,105,330,103],[322,109,330,107,"newState"],[322,117,330,115],[322,118,330,116,"enemies"],[322,125,330,123],[322,126,330,124,"enemyIndex"],[322,136,330,134],[322,137,330,135],[322,138,330,136,"maxHealth"],[322,147,330,145],[322,149,330,147],[322,150,330,148],[323,8,331,6],[324,8,333,6],[324,15,333,13,"newState"],[324,23,333,21],[325,6,334,4],[325,7,334,5],[325,8,334,6],[327,6,336,4],[328,6,337,4,"setProjectiles"],[328,20,337,18],[328,21,337,19,"prev"],[328,25,337,23],[328,29,337,27,"prev"],[328,33,337,31],[328,34,337,32,"filter"],[328,40,337,38],[328,41,337,39,"p"],[328,42,337,40],[328,46,337,44,"p"],[328,47,337,45],[328,48,337,46,"id"],[328,50,337,48],[328,55,337,53,"projectile"],[328,65,337,63],[328,66,337,64,"id"],[328,68,337,66],[328,69,337,67],[328,70,337,68],[329,4,338,2],[329,5,338,3],[331,4,340,2],[332,4,341,2],[332,8,341,8,"castAbility"],[332,19,341,19],[332,22,341,22,"castAbility"],[332,23,341,23,"state"],[332,28,341,41],[332,30,341,43,"slotIndex"],[332,39,341,60],[332,44,341,65],[333,6,342,4],[333,10,342,10,"deck"],[333,14,342,14],[333,17,342,17,"state"],[333,22,342,22],[333,23,342,23,"abilityManager"],[333,37,342,37],[333,38,342,38,"getDeck"],[333,45,342,45],[333,46,342,46],[333,47,342,47],[334,6,343,4],[334,10,343,10,"ability"],[334,17,343,17],[334,20,343,20,"deck"],[334,24,343,24],[334,25,343,25,"slots"],[334,30,343,30],[334,31,343,31,"slotIndex"],[334,40,343,40],[334,41,343,41],[335,6,344,4],[335,10,344,8],[335,11,344,9,"ability"],[335,18,344,16],[335,20,344,18],[337,6,346,4],[338,6,347,4],[338,10,347,10,"target"],[338,16,347,16],[338,19,347,19,"findClosestEnemyInternal"],[338,43,347,43],[338,44,347,44,"state"],[338,49,347,49],[338,50,347,50,"enemies"],[338,57,347,57],[338,58,347,58],[339,6,348,4],[339,10,348,8],[339,11,348,9,"target"],[339,17,348,15],[339,19,348,17],[341,6,350,4],[342,6,351,4],[342,10,351,8,"damage"],[342,16,351,14],[342,19,351,17,"ability"],[342,26,351,24],[342,27,351,25,"stats"],[342,32,351,30],[342,33,351,31,"baseDamage"],[342,43,351,41],[344,6,353,4],[345,6,354,4,"deck"],[345,10,354,8],[345,11,354,9,"activeSynergies"],[345,26,354,24],[345,27,354,25,"forEach"],[345,34,354,32],[345,35,354,33,"synergy"],[345,42,354,40],[345,46,354,44],[346,8,355,6],[346,12,355,10,"synergy"],[346,19,355,17],[346,20,355,18,"bonus"],[346,25,355,23],[346,26,355,24,"damageBonus"],[346,37,355,35],[346,41,356,10,"synergy"],[346,48,356,17],[346,49,356,18,"requiredTags"],[346,61,356,30],[346,62,356,31,"some"],[346,66,356,35],[346,67,356,36,"tag"],[346,70,356,39],[346,74,356,43,"ability"],[346,81,356,50],[346,82,356,51,"tags"],[346,86,356,55],[346,87,356,56,"includes"],[346,95,356,64],[346,96,356,65,"tag"],[346,99,356,68],[346,100,356,69],[346,101,356,70],[346,103,356,72],[347,10,357,8,"damage"],[347,16,357,14],[347,20,357,19],[347,21,357,20],[347,24,357,23,"synergy"],[347,31,357,30],[347,32,357,31,"bonus"],[347,37,357,36],[347,38,357,37,"damageBonus"],[347,49,357,48],[347,52,357,51],[347,55,357,55],[348,8,358,6],[349,6,359,4],[349,7,359,5],[349,8,359,6],[351,6,361,4],[352,6,362,4],[352,10,362,10,"damageResult"],[352,22,362,22],[352,25,362,25,"DamageCalculator"],[352,44,362,41],[352,45,362,41,"DamageCalculator"],[352,61,362,41],[352,62,362,42,"calculateDamage"],[352,77,362,57],[352,78,362,58,"damage"],[352,84,362,64],[352,86,362,66,"state"],[352,91,362,71],[352,92,362,72,"playerStats"],[352,103,362,83],[352,105,362,85,"target"],[352,111,362,91],[352,112,362,92,"stats"],[352,117,362,97],[352,118,362,98],[354,6,364,4],[355,6,365,4,"createProjectile"],[355,22,365,20],[355,23,365,21,"target"],[355,29,365,27],[355,31,365,29,"damageResult"],[355,43,365,41],[355,44,365,42,"damage"],[355,50,365,48],[355,52,365,50,"currentNinjaPosition"],[355,72,365,70],[355,73,365,71],[357,6,367,4],[358,6,368,4],[358,10,368,8,"ability"],[358,17,368,15],[358,18,368,16,"effects"],[358,25,368,23],[358,26,368,24,"includes"],[358,34,368,32],[358,35,368,33],[358,40,368,38],[358,41,368,39],[358,45,368,43,"ability"],[358,52,368,50],[358,53,368,51,"stats"],[358,58,368,56],[358,59,368,57,"duration"],[358,67,368,65],[358,69,368,67],[359,8,369,6,"state"],[359,13,369,11],[359,14,369,12,"statusEffects"],[359,27,369,25],[359,28,369,26,"addEffect"],[359,37,369,35],[359,38,369,36,"target"],[359,44,369,42],[359,45,369,43,"id"],[359,47,369,45],[359,49,369,47],[360,10,370,8,"id"],[360,12,370,10],[360,14,370,12],[360,17,370,15,"ability"],[360,24,370,22],[360,25,370,23,"id"],[360,27,370,25],[360,33,370,31],[361,10,371,8,"type"],[361,14,371,12],[361,16,371,14],[361,21,371,19],[362,10,372,8,"remainingTicks"],[362,24,372,22],[362,26,372,24,"Math"],[362,30,372,28],[362,31,372,29,"floor"],[362,36,372,34],[362,37,372,35,"ability"],[362,44,372,42],[362,45,372,43,"stats"],[362,50,372,48],[362,51,372,49,"duration"],[362,59,372,57],[362,62,372,60],[362,64,372,62],[362,65,372,63],[363,10,372,65],[364,10,373,8,"tickInterval"],[364,22,373,20],[364,24,373,22],[364,26,373,24],[365,10,373,26],[366,10,374,8,"lastTick"],[366,18,374,16],[366,20,374,18,"state"],[366,25,374,23],[366,26,374,24,"currentTick"],[366,37,374,35],[367,10,375,8,"value"],[367,15,375,13],[367,17,375,15,"Math"],[367,21,375,19],[367,22,375,20,"floor"],[367,27,375,25],[367,28,375,26,"damage"],[367,34,375,32],[367,37,375,35],[367,40,375,38],[367,41,375,39],[368,10,375,41],[369,10,376,8,"stackable"],[369,19,376,17],[369,21,376,19],[370,8,377,6],[370,9,377,7],[370,10,377,8],[371,6,378,4],[372,6,380,4,"console"],[372,13,380,11],[372,14,380,12,"log"],[372,17,380,15],[372,18,380,16],[372,24,380,22,"ability"],[372,31,380,29],[372,32,380,30,"name"],[372,36,380,34],[372,69,380,67,"damageResult"],[372,81,380,79],[372,82,380,80,"damage"],[372,88,380,86],[372,98,380,96,"damageResult"],[372,110,380,108],[372,111,380,109,"isCritical"],[372,121,380,119],[372,124,380,122],[372,134,380,132],[372,137,380,135],[372,139,380,137],[372,141,380,139],[372,142,380,140],[373,4,381,2],[373,5,381,3],[375,4,383,2],[376,4,384,2],[376,8,384,8,"createProjectile"],[376,24,384,24],[376,27,384,27,"createProjectile"],[376,28,384,28,"targetEnemy"],[376,39,384,52],[376,41,384,54,"damage"],[376,47,384,68],[376,49,384,70,"ninjaPos"],[376,57,384,103],[376,62,384,108],[377,6,385,4],[377,10,385,10,"SCREEN_WIDTH"],[377,22,385,22],[377,25,385,25],[377,28,385,28],[378,6,386,4],[378,10,386,10,"GAME_AREA_HEIGHT"],[378,26,386,26],[378,29,386,29],[378,32,386,32],[378,35,386,35],[378,38,386,38],[378,39,386,39],[378,40,386,40],[379,6,387,4],[379,10,387,10,"NINJA_SIZE"],[379,20,387,20],[379,23,387,23],[379,25,387,25],[381,6,389,4],[382,6,390,4],[382,10,390,10,"ninjaX"],[382,16,390,16],[382,19,390,19,"ninjaPos"],[382,27,390,27],[382,30,390,30,"ninjaPos"],[382,38,390,38],[382,39,390,39,"x"],[382,40,390,40],[382,43,390,43,"NINJA_SIZE"],[382,53,390,53],[382,56,390,56],[382,57,390,57],[382,60,390,60,"SCREEN_WIDTH"],[382,72,390,72],[382,75,390,75],[382,76,390,76],[383,6,391,4],[383,10,391,10,"ninjaY"],[383,16,391,16],[383,19,391,19,"ninjaPos"],[383,27,391,27],[383,30,391,30,"ninjaPos"],[383,38,391,38],[383,39,391,39,"y"],[383,40,391,40],[383,43,391,43,"NINJA_SIZE"],[383,53,391,53],[383,56,391,56],[383,57,391,57],[383,60,391,60,"GAME_AREA_HEIGHT"],[383,76,391,76],[383,79,391,79],[383,80,391,80],[384,6,392,4],[384,10,392,10,"ENEMY_SIZE"],[384,20,392,20],[384,23,392,23],[384,25,392,25],[385,6,394,4],[385,10,394,10,"projectile"],[385,20,394,38],[385,23,394,41],[386,8,395,6,"id"],[386,10,395,8],[386,12,395,10],[386,20,395,18,"Date"],[386,24,395,22],[386,25,395,23,"now"],[386,28,395,26],[386,29,395,27],[386,30,395,28],[386,34,395,32,"Math"],[386,38,395,36],[386,39,395,37,"random"],[386,45,395,43],[386,46,395,44],[386,47,395,45],[386,49,395,47],[387,8,396,6,"x"],[387,9,396,7],[387,11,396,9,"ninjaX"],[387,17,396,15],[388,8,397,6,"y"],[388,9,397,7],[388,11,397,9,"ninjaY"],[388,17,397,15],[389,8,398,6,"targetX"],[389,15,398,13],[389,17,398,15,"targetEnemy"],[389,28,398,26],[389,29,398,27,"position"],[389,37,398,35],[389,38,398,36,"x"],[389,39,398,37],[389,42,398,40,"ENEMY_SIZE"],[389,52,398,50],[389,55,398,53],[389,56,398,54],[390,8,399,6,"targetY"],[390,15,399,13],[390,17,399,15,"targetEnemy"],[390,28,399,26],[390,29,399,27,"position"],[390,37,399,35],[390,38,399,36,"y"],[390,39,399,37],[390,42,399,40,"ENEMY_SIZE"],[390,52,399,50],[390,55,399,53],[390,56,399,54],[391,8,400,6,"targetEnemyId"],[391,21,400,19],[391,23,400,21,"targetEnemy"],[391,34,400,32],[391,35,400,33,"id"],[391,37,400,35],[392,8,401,6,"damage"],[392,14,401,12],[392,16,401,14,"damage"],[392,22,401,20],[393,8,402,6,"startTime"],[393,17,402,15],[393,19,402,17,"Date"],[393,23,402,21],[393,24,402,22,"now"],[393,27,402,25],[393,28,402,26],[393,29,402,27],[394,8,403,6,"duration"],[394,16,403,14],[394,18,403,16],[394,21,403,19],[394,22,403,21],[395,6,404,4],[395,7,404,5],[396,6,406,4,"console"],[396,13,406,11],[396,14,406,12,"log"],[396,17,406,15],[396,18,406,16],[396,53,406,51,"targetEnemy"],[396,64,406,62],[396,65,406,63,"id"],[396,67,406,65],[396,75,406,73,"damage"],[396,81,406,79],[396,90,406,88],[396,91,406,89],[397,6,407,4,"console"],[397,13,407,11],[397,14,407,12,"log"],[397,17,407,15],[397,18,407,16],[397,53,407,51,"ninjaX"],[397,59,407,57],[397,64,407,62,"ninjaY"],[397,70,407,68],[397,87,407,85,"projectile"],[397,97,407,95],[397,98,407,96,"targetX"],[397,105,407,103],[397,110,407,108,"projectile"],[397,120,407,118],[397,121,407,119,"targetY"],[397,128,407,126],[397,131,407,129],[397,132,407,130],[398,6,409,4,"setProjectiles"],[398,20,409,18],[398,21,409,19,"prev"],[398,25,409,23],[398,29,409,27],[398,30,409,28],[398,33,409,31,"prev"],[398,37,409,35],[398,39,409,37,"projectile"],[398,49,409,47],[398,50,409,48],[398,51,409,49],[400,6,411,4],[401,6,412,4,"setTimeout"],[401,16,412,14],[401,17,412,15],[401,23,412,21],[402,8,413,6,"handleProjectileHit"],[402,27,413,25],[402,28,413,26,"projectile"],[402,38,413,36],[402,39,413,37],[403,6,414,4],[403,7,414,5],[403,9,414,7],[403,12,414,10],[403,13,414,11],[404,4,415,2],[404,5,415,3],[406,4,417,2],[407,4,418,2],[407,8,418,8,"spawnTestEnemy"],[407,22,418,22],[407,25,418,26,"state"],[407,30,418,44],[407,34,418,49],[408,6,419,4],[409,6,420,4],[409,10,420,10,"SCREEN_WIDTH"],[409,22,420,22],[409,25,420,25],[409,28,420,28],[409,29,420,29],[409,30,420,30],[410,6,421,4],[410,10,421,10,"GAME_AREA_HEIGHT"],[410,26,421,26],[410,29,421,29],[410,32,421,32],[410,35,421,35],[410,38,421,38],[410,39,421,39],[410,40,421,40],[411,6,422,4],[411,10,422,10,"ENEMY_SIZE"],[411,20,422,20],[411,23,422,23],[411,25,422,25],[413,6,424,4],[414,6,425,4],[414,10,425,10,"x"],[414,11,425,11],[414,14,425,14,"Math"],[414,18,425,18],[414,19,425,19,"random"],[414,25,425,25],[414,26,425,26],[414,27,425,27],[414,31,425,31,"SCREEN_WIDTH"],[414,43,425,43],[414,46,425,46,"ENEMY_SIZE"],[414,56,425,56],[414,59,425,59],[414,60,425,60],[414,61,425,61],[414,64,425,64,"ENEMY_SIZE"],[414,74,425,74],[414,75,425,75],[414,76,425,76],[415,6,426,4],[415,10,426,10,"y"],[415,11,426,11],[415,14,426,14,"Math"],[415,18,426,18],[415,19,426,19,"random"],[415,25,426,25],[415,26,426,26],[415,27,426,27],[415,31,426,31,"GAME_AREA_HEIGHT"],[415,47,426,47],[415,50,426,50,"ENEMY_SIZE"],[415,60,426,60],[415,63,426,63],[415,64,426,64],[415,65,426,65],[415,68,426,68,"ENEMY_SIZE"],[415,78,426,78],[415,79,426,79],[415,80,426,80],[417,6,428,4],[417,10,428,10,"enemy"],[417,15,428,28],[417,18,428,31],[418,8,429,6,"id"],[418,10,429,8],[418,12,429,10],[418,21,429,19],[418,23,429,21,"enemyCounter"],[418,35,429,33],[418,37,429,35],[419,8,430,6,"name"],[419,12,430,10],[419,14,430,12],[419,24,430,22],[420,8,431,6,"health"],[420,14,431,12],[420,16,431,14],[420,19,431,17],[421,8,432,6,"maxHealth"],[421,17,432,15],[421,19,432,17],[421,22,432,20],[422,8,433,6,"stats"],[422,13,433,11],[422,15,433,13],[423,10,434,8,"attack"],[423,16,434,14],[423,18,434,16],[423,20,434,18],[424,10,435,8,"defense"],[424,17,435,15],[424,19,435,17],[424,21,435,19],[425,10,436,8,"health"],[425,16,436,14],[425,18,436,16],[425,21,436,19],[426,10,437,8,"maxHealth"],[426,19,437,17],[426,21,437,19],[426,24,437,22],[427,10,438,8,"critChance"],[427,20,438,18],[427,22,438,20],[427,23,438,21],[428,10,439,8,"critDamage"],[428,20,439,18],[428,22,439,20],[428,25,439,23],[429,10,440,8,"cooldownReduction"],[429,27,440,25],[429,29,440,27],[430,8,441,6],[430,9,441,7],[431,8,442,6,"position"],[431,16,442,14],[431,18,442,16],[432,10,442,18,"x"],[432,11,442,19],[433,10,442,21,"y"],[434,8,442,23],[434,9,442,24],[435,8,443,6,"lastDamaged"],[435,19,443,17],[435,21,443,19],[436,6,444,4],[436,7,444,5],[437,6,446,4,"state"],[437,11,446,9],[437,12,446,10,"enemies"],[437,19,446,17],[437,20,446,18,"push"],[437,24,446,22],[437,25,446,23,"enemy"],[437,30,446,28],[437,31,446,29],[438,4,447,2],[438,5,447,3],[440,4,449,2],[441,4,450,2],[441,8,450,8,"startCombat"],[441,19,450,19],[441,22,450,22,"React"],[441,27,450,27],[441,28,450,27,"default"],[441,35,450,27],[441,36,450,28,"useCallback"],[441,47,450,39],[441,48,450,40],[441,54,450,46],[442,6,451,4,"console"],[442,13,451,11],[442,14,451,12,"log"],[442,17,451,15],[442,18,451,16],[442,63,451,61],[442,64,451,62],[443,6,452,4,"setCombatState"],[443,20,452,18],[443,21,452,19,"prev"],[443,25,452,23],[443,30,452,28],[444,8,452,30],[444,11,452,33,"prev"],[444,15,452,37],[445,8,452,39,"isInCombat"],[445,18,452,49],[445,20,452,51],[446,6,452,56],[446,7,452,57],[446,8,452,58],[446,9,452,59],[448,6,454,4],[449,6,455,4,"combatEngine"],[449,25,455,16],[449,26,455,16,"combatEngine"],[449,38,455,16],[449,39,455,17,"addTickCallback"],[449,54,455,32],[449,55,455,33,"handleCombatTick"],[449,71,455,49],[449,72,455,50],[450,6,456,4,"console"],[450,13,456,11],[450,14,456,12,"log"],[450,17,456,15],[450,18,456,16],[450,62,456,60],[450,63,456,61],[452,6,458,4],[453,6,459,4,"combatEngine"],[453,25,459,16],[453,26,459,16,"combatEngine"],[453,38,459,16],[453,39,459,17,"start"],[453,44,459,22],[453,45,459,23],[453,46,459,24],[454,4,460,2],[454,5,460,3],[454,7,460,5],[454,8,460,6,"combatEngine"],[454,27,460,18],[454,28,460,18,"combatEngine"],[454,40,460,18],[454,42,460,20,"handleCombatTick"],[454,58,460,36],[454,59,460,37],[454,60,460,38],[456,4,462,2],[457,4,463,2],[457,8,463,8,"stopCombat"],[457,18,463,18],[457,21,463,21,"React"],[457,26,463,26],[457,27,463,26,"default"],[457,34,463,26],[457,35,463,27,"useCallback"],[457,46,463,38],[457,47,463,39],[457,53,463,45],[458,6,464,4,"setCombatState"],[458,20,464,18],[458,21,464,19,"prev"],[458,25,464,23],[458,30,464,28],[459,8,464,30],[459,11,464,33,"prev"],[459,15,464,37],[460,8,464,39,"isInCombat"],[460,18,464,49],[460,20,464,51],[461,6,464,57],[461,7,464,58],[461,8,464,59],[461,9,464,60],[462,6,465,4,"combatEngine"],[462,25,465,16],[462,26,465,16,"combatEngine"],[462,38,465,16],[462,39,465,17,"removeTickCallback"],[462,57,465,35],[462,58,465,36,"handleCombatTick"],[462,74,465,52],[462,75,465,53],[463,4,466,2],[463,5,466,3],[463,7,466,5],[463,8,466,6,"combatEngine"],[463,27,466,18],[463,28,466,18,"combatEngine"],[463,40,466,18],[463,42,466,20,"handleCombatTick"],[463,58,466,36],[463,59,466,37],[463,60,466,38],[465,4,468,2],[466,4,469,2],[466,8,469,8,"equipAbility"],[466,20,469,20],[466,23,469,23,"equipAbility"],[466,24,469,24,"abilityId"],[466,33,469,41],[466,35,469,43,"slotIndex"],[466,44,469,60],[466,49,469,74],[467,6,470,4],[467,13,470,11,"combatState"],[467,24,470,22],[467,25,470,23,"abilityManager"],[467,39,470,37],[467,40,470,38,"equipAbility"],[467,52,470,50],[467,53,470,51,"abilityId"],[467,62,470,60],[467,64,470,62,"slotIndex"],[467,73,470,71],[467,74,470,72],[468,4,471,2],[468,5,471,3],[469,4,473,2],[469,8,473,8,"getDeck"],[469,15,473,15],[469,18,473,18,"getDeck"],[469,19,473,18],[469,24,473,24],[470,6,474,4],[470,13,474,11,"combatState"],[470,24,474,22],[470,25,474,23,"abilityManager"],[470,39,474,37],[470,40,474,38,"getDeck"],[470,47,474,45],[470,48,474,46],[470,49,474,47],[471,4,475,2],[471,5,475,3],[472,4,477,2],[472,8,477,8,"getAvailableAbilities"],[472,29,477,29],[472,32,477,32,"getAvailableAbilities"],[472,33,477,32],[472,38,477,38],[473,6,478,4],[473,13,478,11,"combatState"],[473,24,478,22],[473,25,478,23,"abilityManager"],[473,39,478,37],[473,40,478,38,"getAvailableAbilities"],[473,61,478,59],[473,62,478,60],[473,63,478,61],[474,4,479,2],[474,5,479,3],[475,4,481,2],[475,8,481,8,"upgradeAbility"],[475,22,481,22],[475,25,481,26,"abilityId"],[475,34,481,43],[475,38,481,57],[476,6,482,4],[476,13,482,11,"combatState"],[476,24,482,22],[476,25,482,23,"abilityManager"],[476,39,482,37],[476,40,482,38,"upgradeAbility"],[476,54,482,52],[476,55,482,53,"abilityId"],[476,64,482,62],[476,65,482,63],[477,4,483,2],[477,5,483,3],[479,4,485,2],[480,4,486,2],[480,8,486,8,"clearAllEnemies"],[480,23,486,23],[480,26,486,26,"clearAllEnemies"],[480,27,486,26],[480,32,486,32],[481,6,487,4,"console"],[481,13,487,11],[481,14,487,12,"log"],[481,17,487,15],[481,18,487,16],[481,67,487,65],[481,68,487,66],[482,6,488,4,"setCombatState"],[482,20,488,18],[482,21,488,19,"prev"],[482,25,488,23],[482,30,488,28],[483,8,489,6],[483,11,489,9,"prev"],[483,15,489,13],[484,8,490,6,"enemies"],[484,15,490,13],[484,17,490,15],[485,6,491,4],[485,7,491,5],[485,8,491,6],[485,9,491,7],[486,4,492,2],[486,5,492,3],[488,4,494,2],[489,4,495,2],[489,8,495,8,"triggerLevelUpExplosion"],[489,31,495,31],[489,34,495,34,"triggerLevelUpExplosion"],[489,35,495,34],[489,40,495,40],[490,6,496,4,"console"],[490,13,496,11],[490,14,496,12,"log"],[490,17,496,15],[490,18,496,16],[490,70,496,68],[490,71,496,69],[491,6,498,4],[491,10,498,10,"explosionTime"],[491,23,498,23],[491,26,498,26,"Date"],[491,30,498,30],[491,31,498,31,"now"],[491,34,498,34],[491,35,498,35],[491,36,498,36],[492,6,499,4,"setLastExplosionTime"],[492,26,499,24],[492,27,499,25,"explosionTime"],[492,40,499,38],[492,41,499,39],[493,6,501,4,"setCombatState"],[493,20,501,18],[493,21,501,19,"prev"],[493,25,501,23],[493,29,501,27],[494,8,502,6],[495,8,503,6],[495,12,503,12,"enemyCount"],[495,22,503,22],[495,25,503,25,"prev"],[495,29,503,29],[495,30,503,30,"enemies"],[495,37,503,37],[495,38,503,38,"length"],[495,44,503,44],[496,8,504,6],[496,12,504,12,"explosionXP"],[496,23,504,23],[496,26,504,26,"enemyCount"],[496,36,504,36],[496,39,504,39],[496,41,504,41],[496,42,504,42],[496,43,504,43],[497,8,505,6],[497,12,505,12,"explosionGold"],[497,25,505,25],[497,28,505,28,"enemyCount"],[497,38,505,38],[497,41,505,41],[497,42,505,42],[497,43,505,43],[497,44,505,44],[499,8,507,6,"console"],[499,15,507,13],[499,16,507,14,"log"],[499,19,507,17],[499,20,507,18],[499,44,507,42,"enemyCount"],[499,54,507,52],[499,76,507,74,"explosionXP"],[499,87,507,85],[499,98,507,96,"explosionGold"],[499,111,507,109],[499,118,507,116],[499,119,507,117],[501,8,509,6],[502,8,510,6],[502,12,510,10,"explosionXP"],[502,23,510,21],[502,26,510,24],[502,27,510,25],[502,29,510,27],[503,10,511,8,"setTimeout"],[503,20,511,18],[503,21,511,19],[503,27,511,25],[504,12,512,10,"updateNinja"],[504,23,512,21],[504,24,512,23,"ninja"],[504,29,512,28],[504,34,512,34],[505,14,513,12,"experience"],[505,24,513,22],[505,26,513,24,"ninja"],[505,31,513,29],[505,32,513,30,"experience"],[505,42,513,40],[505,45,513,43,"explosionXP"],[505,56,513,54],[506,14,514,12,"gold"],[506,18,514,16],[506,20,514,18,"ninja"],[506,25,514,23],[506,26,514,24,"gold"],[506,30,514,28],[506,33,514,31,"explosionGold"],[507,12,515,10],[507,13,515,11],[507,14,515,12],[507,15,515,13],[508,10,516,8],[508,11,516,9],[508,13,516,11],[508,14,516,12],[508,15,516,13],[508,16,516,14],[508,17,516,15],[509,8,517,6],[511,8,519,6],[512,8,520,6],[513,8,521,6],[513,12,521,12,"damagedEnemies"],[513,26,521,26],[513,29,521,29,"prev"],[513,33,521,33],[513,34,521,34,"enemies"],[513,41,521,41],[513,42,521,42,"map"],[513,45,521,45],[513,46,521,46,"enemy"],[513,51,521,51],[513,56,521,56],[514,10,522,8],[514,13,522,11,"enemy"],[514,18,522,16],[515,10,523,8,"health"],[515,16,523,14],[515,18,523,16],[515,19,523,17],[516,10,523,19],[517,10,524,8,"lastDamaged"],[517,21,524,19],[517,23,524,21,"combatEngine"],[517,42,524,33],[517,43,524,33,"combatEngine"],[517,55,524,33],[517,56,524,34,"getCurrentTick"],[517,70,524,48],[517,71,524,49],[518,8,525,6],[518,9,525,7],[518,10,525,8],[518,11,525,9],[519,8,527,6],[519,15,527,13],[520,10,528,8],[520,13,528,11,"prev"],[520,17,528,15],[521,10,529,8,"enemies"],[521,17,529,15],[521,19,529,17,"damagedEnemies"],[522,8,530,6],[522,9,530,7],[523,6,531,4],[523,7,531,5],[523,8,531,6],[524,4,532,2],[524,5,532,3],[526,4,534,2],[527,4,535,2],[527,8,535,8,"spawnEnemy"],[527,18,535,18],[527,21,535,22,"position"],[527,29,535,57],[527,33,535,75],[528,6,536,4],[528,10,536,10,"SCREEN_WIDTH"],[528,22,536,22],[528,25,536,25],[528,28,536,28],[529,6,537,4],[529,10,537,10,"GAME_AREA_HEIGHT"],[529,26,537,26],[529,29,537,29],[529,32,537,32],[529,35,537,35],[529,38,537,38],[529,39,537,39],[529,40,537,40],[530,6,538,4],[530,10,538,10,"ENEMY_SIZE"],[530,20,538,20],[530,23,538,23],[530,25,538,25],[532,6,540,4],[533,6,541,4],[533,10,541,10,"x"],[533,11,541,11],[533,14,541,14,"position"],[533,22,541,22],[533,24,541,24,"x"],[533,25,541,25],[533,29,541,29,"Math"],[533,33,541,33],[533,34,541,34,"random"],[533,40,541,40],[533,41,541,41],[533,42,541,42],[533,46,541,46,"SCREEN_WIDTH"],[533,58,541,58],[533,61,541,61,"ENEMY_SIZE"],[533,71,541,71],[533,74,541,74],[533,75,541,75],[533,76,541,76],[533,79,541,79,"ENEMY_SIZE"],[533,89,541,89],[534,6,542,4],[534,10,542,10,"y"],[534,11,542,11],[534,14,542,14,"position"],[534,22,542,22],[534,24,542,24,"y"],[534,25,542,25],[534,29,542,29,"Math"],[534,33,542,33],[534,34,542,34,"random"],[534,40,542,40],[534,41,542,41],[534,42,542,42],[534,46,542,46,"GAME_AREA_HEIGHT"],[534,62,542,62],[534,65,542,65,"ENEMY_SIZE"],[534,75,542,75],[534,78,542,78],[534,79,542,79],[534,80,542,80],[534,83,542,83,"ENEMY_SIZE"],[534,93,542,93],[535,6,544,4],[535,10,544,10,"enemy"],[535,15,544,28],[535,18,544,31],[536,8,545,6,"id"],[536,10,545,8],[536,12,545,10],[536,21,545,19],[536,23,545,21,"enemyCounter"],[536,35,545,33],[536,37,545,35],[537,8,546,6,"name"],[537,12,546,10],[537,14,546,12],[537,24,546,22],[538,8,547,6,"health"],[538,14,547,12],[538,16,547,14],[538,19,547,17],[539,8,548,6,"maxHealth"],[539,17,548,15],[539,19,548,17],[539,22,548,20],[540,8,549,6,"stats"],[540,13,549,11],[540,15,549,13],[541,10,550,8,"attack"],[541,16,550,14],[541,18,550,16],[541,20,550,18],[542,10,551,8,"defense"],[542,17,551,15],[542,19,551,17],[542,21,551,19],[543,10,552,8,"health"],[543,16,552,14],[543,18,552,16],[543,21,552,19],[544,10,553,8,"maxHealth"],[544,19,553,17],[544,21,553,19],[544,24,553,22],[545,10,554,8,"critChance"],[545,20,554,18],[545,22,554,20],[545,23,554,21],[546,10,555,8,"critDamage"],[546,20,555,18],[546,22,555,20],[546,25,555,23],[547,10,556,8,"cooldownReduction"],[547,27,556,25],[547,29,556,27],[548,8,557,6],[548,9,557,7],[549,8,558,6,"position"],[549,16,558,14],[549,18,558,16],[550,10,558,18,"x"],[550,11,558,19],[551,10,558,21,"y"],[552,8,558,23],[552,9,558,24],[553,8,559,6,"lastDamaged"],[553,19,559,17],[553,21,559,19],[554,6,560,4],[554,7,560,5],[555,6,562,4,"setCombatState"],[555,20,562,18],[555,21,562,19,"prev"],[555,25,562,23],[555,30,562,28],[556,8,563,6],[556,11,563,9,"prev"],[556,15,563,13],[557,8,564,6,"enemies"],[557,15,564,13],[557,17,564,15],[557,18,564,16],[557,21,564,19,"prev"],[557,25,564,23],[557,26,564,24,"enemies"],[557,33,564,31],[557,35,564,33,"enemy"],[557,40,564,38],[558,6,565,4],[558,7,565,5],[558,8,565,6],[558,9,565,7],[559,6,567,4],[559,13,567,11,"enemy"],[559,18,567,16],[560,4,568,2],[560,5,568,3],[562,4,570,2],[563,4,571,2],[563,8,571,8,"spawnBoss"],[563,17,571,17],[563,20,571,21,"bossEnemy"],[563,29,571,43],[563,33,571,48],[564,6,572,4,"console"],[564,13,572,11],[564,14,572,12,"log"],[564,17,572,15],[564,18,572,16],[564,39,572,37,"bossEnemy"],[564,48,572,46],[564,49,572,47,"name"],[564,53,572,51],[564,90,572,88],[564,91,572,89],[565,6,573,4,"setCombatState"],[565,20,573,18],[565,21,573,19,"prev"],[565,25,573,23],[565,30,573,28],[566,8,574,6],[566,11,574,9,"prev"],[566,15,574,13],[567,8,575,6,"enemies"],[567,15,575,13],[567,17,575,15],[567,18,575,16,"bossEnemy"],[567,27,575,25],[567,28,575,26],[567,29,575,27],[568,6,576,4],[568,7,576,5],[568,8,576,6],[568,9,576,7],[569,4,577,2],[569,5,577,3],[571,4,579,2],[572,4,580,2],[572,8,580,8,"clearSpecificEnemy"],[572,26,580,26],[572,29,580,30,"enemyId"],[572,36,580,45],[572,40,580,50],[573,6,581,4,"setCombatState"],[573,20,581,18],[573,21,581,19,"prev"],[573,25,581,23],[573,30,581,28],[574,8,582,6],[574,11,582,9,"prev"],[574,15,582,13],[575,8,583,6,"enemies"],[575,15,583,13],[575,17,583,15,"prev"],[575,21,583,19],[575,22,583,20,"enemies"],[575,29,583,27],[575,30,583,28,"filter"],[575,36,583,34],[575,37,583,35,"enemy"],[575,42,583,40],[575,46,583,44,"enemy"],[575,51,583,49],[575,52,583,50,"id"],[575,54,583,52],[575,59,583,57,"enemyId"],[575,66,583,64],[576,6,584,4],[576,7,584,5],[576,8,584,6],[576,9,584,7],[577,4,585,2],[577,5,585,3],[578,4,586,2],[578,8,586,2,"useEffect"],[578,14,586,11],[578,15,586,11,"useEffect"],[578,24,586,11],[578,26,586,12],[578,32,586,18],[579,6,587,4,"combatEngine"],[579,25,587,16],[579,26,587,16,"combatEngine"],[579,38,587,16],[579,39,587,17,"start"],[579,44,587,22],[579,45,587,23],[579,46,587,24],[581,6,589,4],[582,6,590,4,"combatState"],[582,17,590,15],[582,18,590,16,"abilityManager"],[582,32,590,30],[582,33,590,31,"equipAbility"],[582,45,590,43],[582,46,590,44],[582,62,590,60],[582,64,590,62],[582,65,590,63],[582,66,590,64],[583,6,591,4,"combatState"],[583,17,591,15],[583,18,591,16,"abilityManager"],[583,32,591,30],[583,33,591,31,"equipAbility"],[583,45,591,43],[583,46,591,44],[583,61,591,59],[583,63,591,61],[583,64,591,62],[583,65,591,63],[584,6,593,4],[584,13,593,11],[584,19,593,17],[585,8,594,6,"combatEngine"],[585,27,594,18],[585,28,594,18,"combatEngine"],[585,40,594,18],[585,41,594,19,"stop"],[585,45,594,23],[585,46,594,24],[585,47,594,25],[586,6,595,4],[586,7,595,5],[587,4,596,2],[587,5,596,3],[587,7,596,5],[587,9,596,7],[587,10,596,8],[588,4,598,2],[588,8,598,8,"contextValue"],[588,20,598,39],[588,23,598,42,"React"],[588,28,598,47],[588,29,598,47,"default"],[588,36,598,47],[588,37,598,48,"useMemo"],[588,44,598,55],[588,45,598,56],[588,52,598,63],[589,6,599,4,"combatState"],[589,17,599,15],[590,6,600,4,"projectiles"],[590,17,600,15],[591,6,601,4,"startCombat"],[591,17,601,15],[592,6,602,4,"stopCombat"],[592,16,602,14],[593,6,603,4,"equipAbility"],[593,18,603,16],[594,6,604,4,"handleEnemyKill"],[594,21,604,19],[595,6,605,4,"getDeck"],[595,13,605,11],[596,6,606,4,"getAvailableAbilities"],[596,27,606,25],[597,6,607,4,"upgradeAbility"],[597,20,607,18],[598,6,608,4,"spawnEnemy"],[598,16,608,14],[599,6,609,4,"spawnBoss"],[599,15,609,13],[600,6,610,4,"clearAllEnemies"],[600,21,610,19],[601,6,611,4,"clearSpecificEnemy"],[601,24,611,22],[602,6,612,4,"triggerLevelUpExplosion"],[602,29,612,27],[603,6,613,4,"findClosestEnemy"],[603,22,613,20],[604,6,614,4,"updateNinjaPosition"],[604,25,614,23],[605,6,615,4,"setManualControlActive"],[605,28,615,26],[606,6,616,4,"lastExplosionTime"],[607,4,617,2],[607,5,617,3],[607,6,617,4],[607,8,617,6],[608,4,618,4],[609,4,619,4],[610,4,620,4,"combatState"],[610,15,620,15],[610,17,621,4,"projectiles"],[610,28,621,15],[610,30,622,4,"lastExplosionTime"],[610,47,622,21],[610,48,623,3],[610,49,623,4],[611,4,625,2],[611,24,626,4],[611,28,626,4,"_reactJsxDevRuntime"],[611,47,626,4],[611,48,626,4,"jsxDEV"],[611,54,626,4],[611,56,626,5,"CombatContext"],[611,69,626,18],[611,70,626,19,"Provider"],[611,78,626,27],[612,6,626,28,"value"],[612,11,626,33],[612,13,626,35,"contextValue"],[612,25,626,48],[613,6,626,48,"children"],[613,14,626,48],[613,16,627,7,"children"],[614,4,627,15],[615,6,627,15,"fileName"],[615,14,627,15],[615,16,627,15,"_jsxFileName"],[615,28,627,15],[616,6,627,15,"lineNumber"],[616,16,627,15],[617,6,627,15,"columnNumber"],[617,18,627,15],[618,4,627,15],[618,11,628,28],[618,12,628,29],[619,2,630,0],[619,3,630,1],[620,2,630,2,"_s3"],[620,5,630,2],[620,6,77,13,"CombatProvider"],[620,20,77,27],[621,4,77,27],[621,12,78,26,"useGame"],[621,24,78,33],[621,25,78,33,"useGame"],[621,32,78,33],[621,34,79,30,"useZone"],[621,46,79,37],[621,47,79,37,"useZone"],[621,54,79,37],[622,2,79,37],[623,2,79,37,"_c"],[623,4,79,37],[623,7,77,13,"CombatProvider"],[623,21,77,27],[624,2,77,27],[624,6,77,27,"_c"],[624,8,77,27],[625,2,77,27,"$RefreshReg$"],[625,14,77,27],[625,15,77,27,"_c"],[625,17,77,27],[626,0,77,27],[626,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;YuCC;WCO;KDE;GvCC;wDyCE;IzCmB;CFa"},"hasCjsExports":false},"type":"js/module"}]}