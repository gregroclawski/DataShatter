{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // For AOE abilities, create a SINGLE projectile targeting the closest enemy\n        // When it hits, it will damage ALL enemies in the AOE radius\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n\n        // Create single AOE projectile\n        createProjectile(target, damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        }, true, ability.stats.aoeRadius); // Pass AOE flags\n\n        console.log(`🎯 ${ability.name} AOE projectile created targeting ${target.name} with ${ability.stats.aoeRadius} radius`);\n      } else {\n        // Single target ability (original logic)\n        var _target = findClosestEnemyInternal(state.enemies);\n        if (!_target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, _target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(_target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    if (distance <= projectile.aoeRadius) {\n                      // Calculate damage for this enemy\n                      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(projectile.damage, prev.playerStats, enemy.stats);\n                      var newHealth = Math.max(0, enemy.health - damageResult.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${damageResult.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1121,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1177,2],[27,6,1177,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1177,2],[27,42,1177,2,"require"],[27,49,1177,2],[27,50,1177,2,"_dependencyMap"],[27,64,1177,2],[28,2,1177,2],[28,6,1177,2,"_slicedToArray"],[28,20,1177,2],[28,23,1177,2,"_interopDefault"],[28,38,1177,2],[28,39,1177,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1177,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,73,173,71],[135,75,173,73,"enemy"],[135,80,173,78],[135,81,173,79,"id"],[135,83,173,81],[135,84,173,82],[137,6,175,4],[138,6,176,4],[138,10,176,10,"baseXpReward"],[138,22,176,22],[138,25,176,25],[138,28,176,28],[138,29,176,29],[138,30,176,30],[139,6,177,4],[139,10,177,10,"xpMultiplier"],[139,22,177,22],[139,25,177,25,"game"],[139,29,177,29],[139,30,177,30,"gameState"],[139,39,177,39],[139,40,177,40,"subscriptionBenefits"],[139,60,177,60],[139,62,177,62,"xp_multiplier"],[139,75,177,75],[139,79,177,79],[139,82,177,82],[140,6,178,4],[140,10,178,10,"dropMultiplier"],[140,24,178,24],[140,27,178,27,"game"],[140,31,178,31],[140,32,178,32,"gameState"],[140,41,178,41],[140,42,178,42,"subscriptionBenefits"],[140,62,178,62],[140,64,178,64,"drop_multiplier"],[140,79,178,79],[140,83,178,83],[140,86,178,86],[141,6,180,4],[141,10,180,10,"xpReward"],[141,18,180,18],[141,21,180,21,"Math"],[141,25,180,25],[141,26,180,26,"floor"],[141,31,180,31],[141,32,180,32,"baseXpReward"],[141,44,180,44],[141,47,180,47,"xpMultiplier"],[141,59,180,59],[141,60,180,60],[142,6,181,4],[142,10,181,10,"goldReward"],[142,20,181,20],[142,23,181,23,"Math"],[142,27,181,27],[142,28,181,28,"floor"],[142,33,181,33],[142,34,181,34],[142,38,181,38],[142,41,181,41,"dropMultiplier"],[142,55,181,55],[142,56,181,56],[142,57,181,57],[142,58,181,58],[144,6,183,4,"console"],[144,13,183,11],[144,14,183,12,"log"],[144,17,183,15],[144,18,183,16],[144,48,183,46,"xpReward"],[144,56,183,54],[144,67,183,65,"goldReward"],[144,77,183,75],[144,93,183,91],[144,94,183,92],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,60,184,58,"xpMultiplier"],[145,72,184,70],[145,94,184,92,"dropMultiplier"],[145,108,184,106],[145,110,184,108],[145,111,184,109],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,54,185,52,"baseXpReward"],[146,66,185,64],[146,81,185,79,"xpReward"],[146,89,185,87],[146,91,185,89],[146,92,185,90],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,58,186,56],[147,60,186,58,"JSON"],[147,64,186,62],[147,65,186,63,"stringify"],[147,74,186,72],[147,75,186,73,"game"],[147,79,186,77],[147,80,186,78,"gameState"],[147,89,186,87],[147,90,186,88,"subscriptionBenefits"],[147,110,186,108],[147,111,186,109],[147,112,186,110],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,49,187,47,"Platform"],[148,61,187,55],[148,62,187,55,"Platform"],[148,70,187,55],[148,71,187,56,"OS"],[148,73,187,58],[148,84,187,69,"Date"],[148,88,187,73],[148,89,187,74,"now"],[148,92,187,77],[148,93,187,78],[148,94,187,79],[148,96,187,81],[148,97,187,82],[150,6,189,4],[151,6,190,4],[152,6,191,4,"setTimeout"],[152,16,191,14],[152,17,191,15],[152,23,191,21],[153,8,192,6,"console"],[153,15,192,13],[153,16,192,14,"log"],[153,19,192,17],[153,20,192,18],[153,78,192,76],[153,79,192,77],[155,8,194,6],[156,8,195,6,"game"],[156,12,195,10],[156,13,195,11,"updateNinja"],[156,24,195,22],[156,25,195,24,"prev"],[156,29,195,28],[156,33,195,33],[157,10,196,8,"console"],[157,17,196,15],[157,18,196,16,"log"],[157,21,196,19],[157,22,196,20],[157,54,196,52,"prev"],[157,58,196,56],[157,59,196,57,"experience"],[157,69,196,67],[157,81,196,79,"prev"],[157,85,196,83],[157,86,196,84,"experience"],[157,96,196,94],[157,99,196,97,"xpReward"],[157,107,196,105],[157,109,196,107],[157,110,196,108],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,56,197,54,"prev"],[158,60,197,58],[158,61,197,59,"gold"],[158,65,197,63],[158,77,197,75,"prev"],[158,81,197,79],[158,82,197,80,"gold"],[158,86,197,84],[158,89,197,87,"goldReward"],[158,99,197,97],[158,101,197,99],[158,102,197,100],[159,10,198,8],[159,17,198,15],[160,12,199,10,"experience"],[160,22,199,20],[160,24,199,22,"prev"],[160,28,199,26],[160,29,199,27,"experience"],[160,39,199,37],[160,42,199,40,"xpReward"],[160,50,199,48],[161,12,200,10,"gold"],[161,16,200,14],[161,18,200,16,"prev"],[161,22,200,20],[161,23,200,21,"gold"],[161,27,200,25],[161,30,200,28,"goldReward"],[162,10,201,8],[162,11,201,9],[163,8,202,6],[163,9,202,7],[163,10,202,8],[165,8,204,6],[166,8,205,6],[166,12,205,12,"zoneEnemy"],[166,21,205,21],[166,24,205,24],[167,10,206,8,"id"],[167,12,206,10],[167,14,206,12,"enemy"],[167,19,206,17],[167,20,206,18,"id"],[167,22,206,20],[168,10,207,8,"typeId"],[168,16,207,14],[168,18,207,16,"enemy"],[168,23,207,21],[168,24,207,22,"zoneTypeId"],[168,34,207,32],[168,38,207,36],[168,48,207,46],[169,10,207,48],[170,10,208,8,"name"],[170,14,208,12],[170,16,208,14,"enemy"],[170,21,208,19],[170,22,208,20,"name"],[170,26,208,24],[171,10,209,8,"icon"],[171,14,209,12],[171,16,209,14],[171,20,209,18],[172,10,209,20],[173,10,210,8,"hp"],[173,12,210,10],[173,14,210,12],[173,15,210,13],[174,10,210,15],[175,10,211,8,"maxHP"],[175,15,211,13],[175,17,211,15,"enemy"],[175,22,211,20],[175,23,211,21,"maxHealth"],[175,32,211,30],[176,10,212,8,"attack"],[176,16,212,14],[176,18,212,16,"enemy"],[176,23,212,21],[176,24,212,22,"stats"],[176,29,212,27],[176,30,212,28,"attack"],[176,36,212,34],[177,10,213,8,"xp"],[177,12,213,10],[177,14,213,12,"enemy"],[177,19,213,17],[177,20,213,18,"zoneXP"],[177,26,213,24],[177,30,213,28],[177,32,213,30],[178,10,213,32],[179,10,214,8,"position"],[179,18,214,16],[179,20,214,18,"enemy"],[179,25,214,23],[179,26,214,24,"position"],[180,8,215,6],[180,9,215,7],[181,8,217,6,"console"],[181,15,217,13],[181,16,217,14,"log"],[181,19,217,17],[181,20,217,18],[181,40,217,38,"zoneEnemy"],[181,49,217,47],[181,50,217,48,"name"],[181,54,217,52],[181,59,217,57,"zoneEnemy"],[181,68,217,66],[181,69,217,67,"typeId"],[181,75,217,73],[181,113,217,111],[181,114,217,112],[182,8,218,6,"recordEnemyKill"],[182,23,218,21],[182,24,218,22,"zoneEnemy"],[182,33,218,31],[182,34,218,32],[183,6,219,4],[183,7,219,5],[183,9,219,7],[183,10,219,8],[183,11,219,9],[183,12,219,10],[183,13,219,11],[184,4,220,2],[184,5,220,3],[184,7,220,5],[184,8,220,6,"game"],[184,12,220,10],[184,13,220,11,"updateNinja"],[184,24,220,22],[184,26,220,24,"recordEnemyKill"],[184,41,220,39],[184,42,220,40],[184,43,220,41],[186,4,222,2],[187,4,223,2],[187,8,223,8,"handleCombatTick"],[187,24,223,24],[187,27,223,27,"React"],[187,32,223,32],[187,33,223,32,"default"],[187,40,223,32],[187,41,223,33,"useCallback"],[187,52,223,44],[187,53,223,45],[187,59,223,51],[188,6,223,51],[188,10,223,51,"_s2"],[188,13,223,51],[188,16,223,51,"$RefreshSig$"],[188,28,223,51],[189,6,224,4,"console"],[189,13,224,11],[189,14,224,12,"log"],[189,17,224,15],[189,18,224,16],[189,87,224,85],[189,88,224,86],[190,6,226,4],[190,10,226,8,"enemiesToKill"],[190,23,226,36],[190,26,226,39],[190,28,226,41],[190,29,226,42],[190,30,226,43],[192,6,228,4,"_s2"],[192,9,228,4],[192,10,228,4,"setCombatState"],[192,24,228,18],[192,25,228,18,"_s2"],[192,28,228,18],[192,29,228,19,"prev"],[192,33,228,23],[192,37,228,27],[193,8,228,27,"_s2"],[193,11,228,27],[194,8,229,6],[194,12,229,12,"newTick"],[194,19,229,19],[194,22,229,22,"combatEngine"],[194,41,229,34],[194,42,229,34,"combatEngine"],[194,54,229,34],[194,55,229,35,"getCurrentTick"],[194,69,229,49],[194,70,229,50],[194,71,229,51],[195,8,230,6],[195,12,230,12,"newState"],[195,20,230,20],[195,23,230,23],[196,10,230,25],[196,13,230,28,"prev"],[196,17,230,32],[197,10,230,34,"currentTick"],[197,21,230,45],[197,23,230,47,"newTick"],[198,8,230,55],[198,9,230,56],[199,8,232,6],[199,12,232,10],[199,13,232,11,"newState"],[199,21,232,19],[199,22,232,20,"isInCombat"],[199,32,232,30],[199,34,232,32],[199,41,232,39,"newState"],[199,49,232,47],[201,8,234,6],[202,8,235,6,"newState"],[202,16,235,14],[202,17,235,15,"abilityManager"],[202,31,235,29],[202,32,235,30,"updateCooldowns"],[202,47,235,45],[202,48,235,46,"newTick"],[202,55,235,53],[202,56,235,54],[204,8,237,6],[205,8,238,6],[205,12,238,12,"effectResults"],[205,25,238,25],[205,28,238,28,"newState"],[205,36,238,36],[205,37,238,37,"statusEffects"],[205,50,238,50],[205,51,238,51,"processTick"],[205,62,238,62],[205,63,238,63,"newTick"],[205,70,238,70],[205,71,238,71],[207,8,240,6],[208,8,241,6,"effectResults"],[208,21,241,19],[208,22,241,20,"forEach"],[208,29,241,27],[208,30,241,28],[208,31,241,29,"results"],[208,38,241,36],[208,40,241,38,"entityId"],[208,48,241,46],[208,53,241,51],[209,10,242,8],[209,14,242,14,"enemyIndex"],[209,24,242,24],[209,27,242,27,"newState"],[209,35,242,35],[209,36,242,36,"enemies"],[209,43,242,43],[209,44,242,44,"findIndex"],[209,53,242,53],[209,54,242,54,"e"],[209,55,242,55],[209,59,242,59,"e"],[209,60,242,60],[209,61,242,61,"id"],[209,63,242,63],[209,68,242,68,"entityId"],[209,76,242,76],[209,77,242,77],[210,10,243,8],[210,14,243,12,"enemyIndex"],[210,24,243,22],[210,28,243,26],[210,29,243,27],[210,31,243,29],[211,12,244,10,"results"],[211,19,244,17],[211,20,244,18,"forEach"],[211,27,244,25],[211,28,244,26,"result"],[211,34,244,32],[211,38,244,36],[212,14,245,12,"newState"],[212,22,245,20],[212,23,245,21,"enemies"],[212,30,245,28],[212,31,245,29,"enemyIndex"],[212,41,245,39],[212,42,245,40],[212,43,245,41,"health"],[212,49,245,47],[212,53,245,51,"result"],[212,59,245,57],[212,60,245,58,"damage"],[212,66,245,64],[213,14,246,12,"newState"],[213,22,246,20],[213,23,246,21,"enemies"],[213,30,246,28],[213,31,246,29,"enemyIndex"],[213,41,246,39],[213,42,246,40],[213,43,246,41,"lastDamaged"],[213,54,246,52],[213,57,246,55,"newTick"],[213,64,246,62],[214,12,247,10],[214,13,247,11],[214,14,247,12],[215,10,248,8],[216,8,249,6],[216,9,249,7],[216,10,249,8],[218,8,251,6],[219,8,252,6],[220,8,253,6],[220,12,253,10,"newState"],[220,20,253,18],[220,21,253,19,"playerStats"],[220,32,253,30],[220,36,253,34,"game"],[220,40,253,38],[220,41,253,39,"gameState"],[220,50,253,48],[220,51,253,49,"ninja"],[220,56,253,54],[220,58,253,56],[221,10,254,8],[221,14,254,14,"effectiveStats"],[221,28,254,28],[221,31,254,31,"game"],[221,35,254,35],[221,36,254,36,"getEffectiveStats"],[221,53,254,53],[221,54,254,54],[221,55,254,55],[223,10,256,8],[224,10,257,8],[224,14,257,12,"newState"],[224,22,257,20],[224,23,257,21,"playerStats"],[224,34,257,32],[224,35,257,33,"attack"],[224,41,257,39],[224,46,257,44,"effectiveStats"],[224,60,257,58],[224,61,257,59,"attack"],[224,67,257,65],[224,71,258,12,"newState"],[224,79,258,20],[224,80,258,21,"playerStats"],[224,91,258,32],[224,92,258,33,"defense"],[224,99,258,40],[224,104,258,45,"effectiveStats"],[224,118,258,59],[224,119,258,60,"defense"],[224,126,258,67],[224,130,259,12,"newState"],[224,138,259,20],[224,139,259,21,"playerStats"],[224,150,259,32],[224,151,259,33,"maxHealth"],[224,160,259,42],[224,165,259,47,"effectiveStats"],[224,179,259,61],[224,180,259,62,"maxHealth"],[224,189,259,71],[224,191,259,73],[225,12,261,10,"console"],[225,19,261,17],[225,20,261,18,"log"],[225,23,261,21],[225,24,261,22],[225,58,261,56,"newState"],[225,66,261,64],[225,67,261,65,"playerStats"],[225,78,261,76],[225,79,261,77,"attack"],[225,85,261,83],[225,91,261,89,"effectiveStats"],[225,105,261,103],[225,106,261,104,"attack"],[225,112,261,110],[225,125,261,123,"newState"],[225,133,261,131],[225,134,261,132,"playerStats"],[225,145,261,143],[225,146,261,144,"defense"],[225,153,261,151],[225,159,261,157,"effectiveStats"],[225,173,261,171],[225,174,261,172,"defense"],[225,181,261,179],[225,192,261,190,"newState"],[225,200,261,198],[225,201,261,199,"playerStats"],[225,212,261,210],[225,213,261,211,"maxHealth"],[225,222,261,220],[225,228,261,226,"effectiveStats"],[225,242,261,240],[225,243,261,241,"maxHealth"],[225,252,261,250],[225,254,261,252],[225,255,261,253],[227,12,263,10],[228,12,264,10],[228,16,264,14,"newHealth"],[228,25,264,23],[228,28,264,26,"newState"],[228,36,264,34],[228,37,264,35,"playerStats"],[228,48,264,46],[228,49,264,47,"health"],[228,55,264,53],[229,12,265,10],[229,16,265,14,"newState"],[229,24,265,22],[229,25,265,23,"playerStats"],[229,36,265,34],[229,37,265,35,"maxHealth"],[229,46,265,44],[229,51,265,49,"effectiveStats"],[229,65,265,63],[229,66,265,64,"maxHealth"],[229,75,265,73],[229,77,265,75],[230,14,266,12],[231,14,267,12],[231,18,267,16,"effectiveStats"],[231,32,267,30],[231,33,267,31,"maxHealth"],[231,42,267,40],[231,45,267,43,"newState"],[231,53,267,51],[231,54,267,52,"playerStats"],[231,65,267,63],[231,66,267,64,"maxHealth"],[231,75,267,73],[231,78,267,76],[231,81,267,79],[231,83,267,81],[232,16,268,14],[233,16,269,14],[233,20,269,20,"healthRatio"],[233,31,269,31],[233,34,269,34,"newState"],[233,42,269,42],[233,43,269,43,"playerStats"],[233,54,269,54],[233,55,269,55,"maxHealth"],[233,64,269,64],[233,67,269,67],[233,68,269,68],[233,71,270,16,"newState"],[233,79,270,24],[233,80,270,25,"playerStats"],[233,91,270,36],[233,92,270,37,"health"],[233,98,270,43],[233,101,270,46,"newState"],[233,109,270,54],[233,110,270,55,"playerStats"],[233,121,270,66],[233,122,270,67,"maxHealth"],[233,131,270,76],[233,134,270,79],[233,135,270,80],[234,16,271,14,"newHealth"],[234,25,271,23],[234,28,271,26,"Math"],[234,32,271,30],[234,33,271,31,"floor"],[234,38,271,36],[234,39,271,37,"effectiveStats"],[234,53,271,51],[234,54,271,52,"maxHealth"],[234,63,271,61],[234,66,271,64,"healthRatio"],[234,77,271,75],[234,78,271,76],[235,14,272,12],[235,15,272,13],[235,21,272,19],[235,25,272,23,"newState"],[235,33,272,31],[235,34,272,32,"playerStats"],[235,45,272,43],[235,46,272,44,"health"],[235,52,272,50],[235,55,272,53,"effectiveStats"],[235,69,272,67],[235,70,272,68,"maxHealth"],[235,79,272,77],[235,81,272,79],[236,16,273,14],[237,16,274,14,"newHealth"],[237,25,274,23],[237,28,274,26,"effectiveStats"],[237,42,274,40],[237,43,274,41,"maxHealth"],[237,52,274,50],[238,14,275,12],[239,14,276,12],[240,12,277,10],[241,12,279,10,"newState"],[241,20,279,18],[241,21,279,19,"playerStats"],[241,32,279,30],[241,35,279,33],[242,14,280,12],[242,17,280,15,"newState"],[242,25,280,23],[242,26,280,24,"playerStats"],[242,37,280,35],[243,14,281,12,"attack"],[243,20,281,18],[243,22,281,20,"effectiveStats"],[243,36,281,34],[243,37,281,35,"attack"],[243,43,281,41],[244,14,282,12,"defense"],[244,21,282,19],[244,23,282,21,"effectiveStats"],[244,37,282,35],[244,38,282,36,"defense"],[244,45,282,43],[245,14,283,12,"maxHealth"],[245,23,283,21],[245,25,283,23,"effectiveStats"],[245,39,283,37],[245,40,283,38,"maxHealth"],[245,49,283,47],[246,14,283,49],[247,14,284,12,"health"],[247,20,284,18],[247,22,284,20,"newHealth"],[247,31,284,29],[248,14,284,31],[249,14,285,12,"critChance"],[249,24,285,22],[249,26,285,24,"effectiveStats"],[249,40,285,38],[249,41,285,39,"critChance"],[249,51,285,49],[249,55,285,53,"newState"],[249,63,285,61],[249,64,285,62,"playerStats"],[249,75,285,73],[249,76,285,74,"critChance"],[249,86,285,84],[250,14,286,12,"critDamage"],[250,24,286,22],[250,26,286,24,"effectiveStats"],[250,40,286,38],[250,41,286,39,"critDamage"],[250,51,286,49],[250,55,286,53,"newState"],[250,63,286,61],[250,64,286,62,"playerStats"],[250,75,286,73],[250,76,286,74,"critDamage"],[250,86,286,84],[251,14,287,12,"cooldownReduction"],[251,31,287,29],[251,33,287,31,"effectiveStats"],[251,47,287,45],[251,48,287,46,"cooldownReduction"],[251,65,287,63],[251,69,287,67,"newState"],[251,77,287,75],[251,78,287,76,"playerStats"],[251,89,287,87],[251,90,287,88,"cooldownReduction"],[252,12,288,10],[252,13,288,11],[253,10,289,8],[255,10,291,8],[256,10,292,8],[256,14,292,12,"game"],[256,18,292,16],[256,19,292,17,"gameState"],[256,28,292,26],[256,29,292,27,"isAlive"],[256,36,292,34],[256,40,293,12,"game"],[256,44,293,16],[256,45,293,17,"gameState"],[256,54,293,26],[256,55,293,27,"ninja"],[256,60,293,32],[256,61,293,33,"health"],[256,67,293,39],[256,72,293,44,"effectiveStats"],[256,86,293,58],[256,87,293,59,"maxHealth"],[256,96,293,68],[256,100,294,12,"newState"],[256,108,294,20],[256,109,294,21,"playerStats"],[256,120,294,32],[256,121,294,33,"health"],[256,127,294,39],[256,130,294,42,"effectiveStats"],[256,144,294,56],[256,145,294,57,"maxHealth"],[256,154,294,66],[256,157,294,69],[256,160,294,72],[256,162,294,74],[257,12,295,10,"console"],[257,19,295,17],[257,20,295,18,"log"],[257,23,295,21],[257,24,295,22],[257,58,295,56,"newState"],[257,66,295,64],[257,67,295,65,"playerStats"],[257,78,295,76],[257,79,295,77,"health"],[257,85,295,83],[257,91,295,89,"game"],[257,95,295,93],[257,96,295,94,"gameState"],[257,105,295,103],[257,106,295,104,"ninja"],[257,111,295,109],[257,112,295,110,"health"],[257,118,295,116],[257,139,295,137],[257,140,295,138],[258,12,296,10,"newState"],[258,20,296,18],[258,21,296,19,"playerStats"],[258,32,296,30],[258,33,296,31,"health"],[258,39,296,37],[258,42,296,40,"game"],[258,46,296,44],[258,47,296,45,"gameState"],[258,56,296,54],[258,57,296,55,"ninja"],[258,62,296,60],[258,63,296,61,"health"],[258,69,296,67],[259,10,297,8],[260,8,298,6],[262,8,300,6],[263,8,301,6,"newState"],[263,16,301,14],[263,17,301,15,"enemies"],[263,24,301,22],[263,25,301,23,"forEach"],[263,32,301,30],[263,33,301,31,"enemy"],[263,38,301,36],[263,42,301,40],[264,10,302,8],[264,14,302,12],[264,15,302,13,"enemy"],[264,20,302,18],[264,21,302,19,"isBoss"],[264,27,302,25],[264,29,302,27],[265,12,302,29],[266,12,303,10],[267,12,304,10],[267,16,304,16,"MOVEMENT_SPEED"],[267,30,304,30],[267,33,304,33],[267,37,304,37],[267,38,304,38],[267,39,304,39],[268,12,305,10],[268,16,305,16,"SCREEN_WIDTH"],[268,28,305,28],[268,31,305,31],[268,34,305,34],[269,12,306,10],[269,16,306,16,"GAME_AREA_HEIGHT"],[269,32,306,32],[269,35,306,35],[269,38,306,38],[269,39,306,39],[269,40,306,40],[270,12,307,10],[270,16,307,16,"ENEMY_SIZE"],[270,26,307,26],[270,29,307,29],[270,31,307,31],[272,12,309,10],[273,12,310,10],[273,16,310,16,"playerX"],[273,23,310,23],[273,26,310,26,"currentNinjaPosition"],[273,46,310,46],[273,47,310,47,"x"],[273,48,310,48],[274,12,311,10],[274,16,311,16,"playerY"],[274,23,311,23],[274,26,311,26,"currentNinjaPosition"],[274,46,311,46],[274,47,311,47,"y"],[274,48,311,48],[276,12,313,10],[277,12,314,10],[277,16,314,16,"deltaX"],[277,22,314,22],[277,25,314,25,"playerX"],[277,32,314,32],[277,35,314,35,"enemy"],[277,40,314,40],[277,41,314,41,"position"],[277,49,314,49],[277,50,314,50,"x"],[277,51,314,51],[278,12,315,10],[278,16,315,16,"deltaY"],[278,22,315,22],[278,25,315,25,"playerY"],[278,32,315,32],[278,35,315,35,"enemy"],[278,40,315,40],[278,41,315,41,"position"],[278,49,315,49],[278,50,315,50,"y"],[278,51,315,51],[279,12,316,10],[279,16,316,16,"distance"],[279,24,316,24],[279,27,316,27,"Math"],[279,31,316,31],[279,32,316,32,"sqrt"],[279,36,316,36],[279,37,316,37,"deltaX"],[279,43,316,43],[279,46,316,46,"deltaX"],[279,52,316,52],[279,55,316,55,"deltaY"],[279,61,316,61],[279,64,316,64,"deltaY"],[279,70,316,70],[279,71,316,71],[281,12,318,10],[282,12,319,10],[282,16,319,16,"ATTACK_RANGE"],[282,28,319,28],[282,31,319,31],[282,33,319,33],[282,34,319,34],[282,35,319,35],[283,12,320,10],[283,16,320,16,"ATTACK_COOLDOWN"],[283,31,320,31],[283,34,320,34],[283,36,320,36],[283,37,320,37],[283,38,320,38],[285,12,322,10],[285,16,322,14,"distance"],[285,24,322,22],[285,28,322,26,"ATTACK_RANGE"],[285,40,322,38],[285,42,322,40],[286,14,323,12],[287,14,324,12],[287,18,324,16],[287,19,324,17,"enemy"],[287,24,324,22],[287,25,324,23,"lastAttackTick"],[287,39,324,37],[287,41,324,39,"enemy"],[287,46,324,44],[287,47,324,45,"lastAttackTick"],[287,61,324,59],[287,64,324,62],[287,65,324,63],[288,14,326,12],[288,18,326,16,"newState"],[288,26,326,24],[288,27,326,25,"currentTick"],[288,38,326,36],[288,41,326,39,"enemy"],[288,46,326,44],[288,47,326,45,"lastAttackTick"],[288,61,326,59],[288,65,326,63,"ATTACK_COOLDOWN"],[288,80,326,78],[288,82,326,80],[289,16,327,14],[290,16,328,14],[290,20,328,18],[290,21,328,19,"game"],[290,25,328,23],[290,26,328,24,"gameState"],[290,35,328,33],[290,36,328,34,"isAlive"],[290,43,328,41],[290,45,328,43],[291,18,329,16,"console"],[291,25,329,23],[291,26,329,24,"log"],[291,29,329,27],[291,30,329,28],[291,49,329,47,"enemy"],[291,54,329,52],[291,55,329,53,"name"],[291,59,329,57],[291,93,329,91],[291,94,329,92],[292,18,330,16],[293,18,331,16,"enemy"],[293,23,331,21],[293,24,331,22,"lastAttackTick"],[293,38,331,36],[293,41,331,39,"newState"],[293,49,331,47],[293,50,331,48,"currentTick"],[293,61,331,59],[294,16,332,14],[294,17,332,15],[294,23,332,21],[295,18,333,16],[296,18,334,16],[296,22,334,22,"isPlayerInvincible"],[296,40,334,40],[296,43,334,43,"game"],[296,47,334,47],[296,48,334,48,"gameState"],[296,57,334,57],[296,58,334,58,"isInvincible"],[296,70,334,70],[296,74,335,41,"game"],[296,78,335,45],[296,79,335,46,"gameState"],[296,88,335,55],[296,89,335,56,"invincibilityEndTime"],[296,109,335,76],[296,113,336,41,"Date"],[296,117,336,45],[296,118,336,46,"now"],[296,121,336,49],[296,122,336,50],[296,123,336,51],[296,126,336,54,"game"],[296,130,336,58],[296,131,336,59,"gameState"],[296,140,336,68],[296,141,336,69,"invincibilityEndTime"],[296,161,336,89],[297,18,338,16],[297,22,338,20,"isPlayerInvincible"],[297,40,338,38],[297,42,338,40],[298,20,339,18,"console"],[298,27,339,25],[298,28,339,26,"log"],[298,31,339,29],[298,32,339,30],[298,51,339,49,"enemy"],[298,56,339,54],[298,57,339,55,"name"],[298,61,339,59],[298,101,339,99],[298,102,339,100],[299,20,340,18],[300,20,341,18,"enemy"],[300,25,341,23],[300,26,341,24,"lastAttackTick"],[300,40,341,38],[300,43,341,41,"newState"],[300,51,341,49],[300,52,341,50,"currentTick"],[300,63,341,61],[301,18,342,16],[301,19,342,17],[301,25,342,23],[302,20,343,16],[303,20,344,16],[303,24,344,22,"baseAttack"],[303,34,344,32],[303,37,344,35,"enemy"],[303,42,344,40],[303,43,344,41,"stats"],[303,48,344,46],[303,49,344,47,"attack"],[303,55,344,53],[303,58,344,56],[303,61,344,59],[303,62,344,60],[303,63,344,61],[304,20,345,16],[304,24,345,22,"attackDamage"],[304,36,345,34],[304,39,345,37,"Math"],[304,43,345,41],[304,44,345,42,"floor"],[304,49,345,47],[304,50,345,48,"baseAttack"],[304,60,345,58],[304,64,345,62],[304,67,345,65],[304,70,345,68,"Math"],[304,74,345,72],[304,75,345,73,"random"],[304,81,345,79],[304,82,345,80],[304,83,345,81],[304,86,345,84],[304,89,345,87],[304,90,345,88],[304,91,345,89],[304,92,345,90],[304,93,345,91],[305,20,346,16],[305,24,346,22,"playerDefense"],[305,37,346,35],[305,40,346,38,"newState"],[305,48,346,46],[305,49,346,47,"playerStats"],[305,60,346,58],[305,61,346,59,"defense"],[305,68,346,66],[306,20,347,16],[306,24,347,22,"finalDamage"],[306,35,347,33],[306,38,347,36,"Math"],[306,42,347,40],[306,43,347,41,"max"],[306,46,347,44],[306,47,347,45],[306,48,347,46],[306,50,347,48,"attackDamage"],[306,62,347,60],[306,65,347,63,"Math"],[306,69,347,67],[306,70,347,68,"floor"],[306,75,347,73],[306,76,347,74,"playerDefense"],[306,89,347,87],[306,92,347,90],[306,95,347,93],[306,96,347,94],[306,97,347,95],[306,98,347,96],[306,99,347,97],[308,20,349,16,"console"],[308,27,349,23],[308,28,349,24,"log"],[308,31,349,27],[308,32,349,28],[308,53,349,49,"enemy"],[308,58,349,54],[308,59,349,55,"name"],[308,63,349,59],[308,86,349,82,"finalDamage"],[308,97,349,93],[308,109,349,105,"attackDamage"],[308,121,349,117],[308,132,349,128,"Math"],[308,136,349,132],[308,137,349,133,"floor"],[308,142,349,138],[308,143,349,139,"playerDefense"],[308,156,349,152],[308,159,349,155],[308,162,349,158],[308,163,349,159],[308,184,349,180],[308,185,349,181],[310,20,351,16],[311,20,352,16],[311,24,352,22,"newPlayerHealth"],[311,39,352,37],[311,42,352,40,"Math"],[311,46,352,44],[311,47,352,45,"max"],[311,50,352,48],[311,51,352,49],[311,52,352,50],[311,54,352,52,"newState"],[311,62,352,60],[311,63,352,61,"playerStats"],[311,74,352,72],[311,75,352,73,"health"],[311,81,352,79],[311,84,352,82,"finalDamage"],[311,95,352,93],[311,96,352,94],[312,20,353,16,"newState"],[312,28,353,24],[312,29,353,25,"playerStats"],[312,40,353,36],[312,41,353,37,"health"],[312,47,353,43],[312,50,353,46,"newPlayerHealth"],[312,65,353,61],[313,20,355,16,"console"],[313,27,355,23],[313,28,355,24,"log"],[313,31,355,27],[313,32,355,28],[313,53,355,49,"newState"],[313,61,355,57],[313,62,355,58,"playerStats"],[313,73,355,69],[313,74,355,70,"health"],[313,80,355,76],[313,84,355,80,"newState"],[313,92,355,88],[313,93,355,89,"playerStats"],[313,104,355,100],[313,105,355,101,"maxHealth"],[313,114,355,110],[313,124,355,120,"finalDamage"],[313,135,355,131],[313,145,355,141],[313,146,355,142],[315,20,357,16],[316,20,358,16,"enemy"],[316,25,358,21],[316,26,358,22,"lastAttackTick"],[316,40,358,36],[316,43,358,39,"newState"],[316,51,358,47],[316,52,358,48,"currentTick"],[316,63,358,59],[318,20,360,16],[319,20,361,16],[319,24,361,20,"newPlayerHealth"],[319,39,361,35],[319,43,361,39],[319,44,361,40],[319,46,361,42],[320,22,362,18,"console"],[320,29,362,25],[320,30,362,26,"log"],[320,33,362,29],[320,34,362,30],[320,84,362,80],[320,85,362,81],[321,22,363,18],[322,22,364,18,"setTimeout"],[322,32,364,28],[322,33,364,29],[322,39,364,35],[323,24,365,20],[324,24,366,20,"game"],[324,28,366,24],[324,29,366,25,"updateGameState"],[324,44,366,40],[324,45,366,41],[325,26,366,43,"isAlive"],[325,33,366,50],[325,35,366,52],[326,24,366,58],[326,25,366,59],[326,26,366,60],[327,22,367,18],[327,23,367,19],[327,25,367,21],[327,28,367,24],[327,29,367,25],[328,20,368,16],[329,18,369,16],[330,16,370,14],[331,14,371,12],[332,12,372,10],[332,13,372,11],[332,19,372,17],[333,14,373,12],[334,14,374,12],[335,14,375,12],[335,18,375,16,"distance"],[335,26,375,24],[335,29,375,27],[335,31,375,29],[335,33,375,31],[336,16,376,14],[337,16,377,14],[337,20,377,20,"normalizedX"],[337,31,377,31],[337,34,377,34,"deltaX"],[337,40,377,40],[337,43,377,43,"distance"],[337,51,377,51],[338,16,378,14],[338,20,378,20,"normalizedY"],[338,31,378,31],[338,34,378,34,"deltaY"],[338,40,378,40],[338,43,378,43,"distance"],[338,51,378,51],[340,16,380,14],[341,16,381,14],[341,20,381,20,"randomFactor"],[341,32,381,32],[341,35,381,35],[341,38,381,38],[341,39,381,39],[341,40,381,40],[342,16,382,14],[342,20,382,20,"finalX"],[342,26,382,26],[342,29,382,29,"normalizedX"],[342,40,382,40],[342,43,382,43],[342,44,382,44,"Math"],[342,48,382,48],[342,49,382,49,"random"],[342,55,382,55],[342,56,382,56],[342,57,382,57],[342,60,382,60],[342,63,382,63],[342,67,382,67,"randomFactor"],[342,79,382,79],[343,16,383,14],[343,20,383,20,"finalY"],[343,26,383,26],[343,29,383,29,"normalizedY"],[343,40,383,40],[343,43,383,43],[343,44,383,44,"Math"],[343,48,383,48],[343,49,383,49,"random"],[343,55,383,55],[343,56,383,56],[343,57,383,57],[343,60,383,60],[343,63,383,63],[343,67,383,67,"randomFactor"],[343,79,383,79],[345,16,385,14],[346,16,386,14],[346,20,386,18,"newX"],[346,24,386,22],[346,27,386,25,"enemy"],[346,32,386,30],[346,33,386,31,"position"],[346,41,386,39],[346,42,386,40,"x"],[346,43,386,41],[346,46,386,45,"finalX"],[346,52,386,51],[346,55,386,54,"MOVEMENT_SPEED"],[346,69,386,69],[347,16,387,14],[347,20,387,18,"newY"],[347,24,387,22],[347,27,387,25,"enemy"],[347,32,387,30],[347,33,387,31,"position"],[347,41,387,39],[347,42,387,40,"y"],[347,43,387,41],[347,46,387,45,"finalY"],[347,52,387,51],[347,55,387,54,"MOVEMENT_SPEED"],[347,69,387,69],[349,16,389,14],[350,16,390,14,"newX"],[350,20,390,18],[350,23,390,21,"Math"],[350,27,390,25],[350,28,390,26,"max"],[350,31,390,29],[350,32,390,30],[350,33,390,31],[350,35,390,33,"Math"],[350,39,390,37],[350,40,390,38,"min"],[350,43,390,41],[350,44,390,42,"SCREEN_WIDTH"],[350,56,390,54],[350,59,390,57,"ENEMY_SIZE"],[350,69,390,67],[350,71,390,69,"newX"],[350,75,390,73],[350,76,390,74],[350,77,390,75],[351,16,391,14,"newY"],[351,20,391,18],[351,23,391,21,"Math"],[351,27,391,25],[351,28,391,26,"max"],[351,31,391,29],[351,32,391,30],[351,33,391,31],[351,35,391,33,"Math"],[351,39,391,37],[351,40,391,38,"min"],[351,43,391,41],[351,44,391,42,"GAME_AREA_HEIGHT"],[351,60,391,58],[351,63,391,61,"ENEMY_SIZE"],[351,73,391,71],[351,75,391,73,"newY"],[351,79,391,77],[351,80,391,78],[351,81,391,79],[353,16,393,14],[354,16,394,14,"enemy"],[354,21,394,19],[354,22,394,20,"position"],[354,30,394,28],[354,31,394,29,"x"],[354,32,394,30],[354,35,394,33,"newX"],[354,39,394,37],[355,16,395,14,"enemy"],[355,21,395,19],[355,22,395,20,"position"],[355,30,395,28],[355,31,395,29,"y"],[355,32,395,30],[355,35,395,33,"newY"],[355,39,395,37],[356,14,396,12],[357,14,397,12],[358,12,398,10],[359,10,399,8],[360,8,400,6],[360,9,400,7],[360,10,400,8],[362,8,402,6],[363,8,403,6],[363,12,403,10,"newState"],[363,20,403,18],[363,21,403,19,"shadowClone"],[363,32,403,30],[363,34,403,32],[364,10,404,8],[365,10,405,8,"newState"],[365,18,405,16],[365,19,405,17,"shadowClone"],[365,30,405,28],[365,31,405,29,"remainingTicks"],[365,45,405,43],[365,47,405,45],[367,10,407,8],[368,10,408,8],[368,14,408,14,"cloneOffset"],[368,25,408,25],[368,28,408,28],[368,30,408,30],[368,31,408,31],[368,32,408,32],[369,10,409,8,"newState"],[369,18,409,16],[369,19,409,17,"shadowClone"],[369,30,409,28],[369,31,409,29,"position"],[369,39,409,37],[369,40,409,38,"x"],[369,41,409,39],[369,44,409,42,"currentNinjaPosition"],[369,64,409,62],[369,65,409,63,"x"],[369,66,409,64],[369,69,409,67,"cloneOffset"],[369,80,409,78],[370,10,410,8,"newState"],[370,18,410,16],[370,19,410,17,"shadowClone"],[370,30,410,28],[370,31,410,29,"position"],[370,39,410,37],[370,40,410,38,"y"],[370,41,410,39],[370,44,410,42,"currentNinjaPosition"],[370,64,410,62],[370,65,410,63,"y"],[370,66,410,64],[370,69,410,67],[370,71,410,69],[372,10,412,8],[373,10,413,8],[373,14,413,12,"newState"],[373,22,413,20],[373,23,413,21,"shadowClone"],[373,34,413,32],[373,35,413,33,"remainingTicks"],[373,49,413,47],[373,53,413,51],[373,54,413,52],[373,56,413,54],[374,12,414,10,"console"],[374,19,414,17],[374,20,414,18,"log"],[374,23,414,21],[374,24,414,22],[374,75,414,73],[374,76,414,74],[375,12,415,10,"newState"],[375,20,415,18],[375,21,415,19,"shadowClone"],[375,32,415,30],[375,35,415,33,"undefined"],[375,44,415,42],[376,10,416,8],[376,11,416,9],[376,17,416,15],[377,12,417,10],[378,12,418,10],[379,12,419,10],[379,16,419,16,"CLONE_ATTACK_INTERVAL"],[379,37,419,37],[379,40,419,40],[379,42,419,42],[380,12,420,10],[380,16,420,14,"newState"],[380,24,420,22],[380,25,420,23,"currentTick"],[380,36,420,34],[380,39,420,37,"CLONE_ATTACK_INTERVAL"],[380,60,420,58],[380,65,420,63],[380,66,420,64],[380,70,420,68,"newState"],[380,78,420,76],[380,79,420,77,"enemies"],[380,86,420,84],[380,87,420,85,"length"],[380,93,420,91],[380,96,420,94],[380,97,420,95],[380,99,420,97],[381,14,421,12,"console"],[381,21,421,19],[381,22,421,20,"log"],[381,25,421,23],[381,26,421,24],[381,83,421,81],[381,84,421,82],[383,14,423,12],[384,14,424,12],[384,18,424,18,"target"],[384,24,424,24],[384,27,424,27,"findClosestEnemyInternal"],[384,51,424,51],[384,52,424,52,"newState"],[384,60,424,60],[384,61,424,61,"enemies"],[384,68,424,68],[384,69,424,69],[385,14,425,12],[385,18,425,16,"target"],[385,24,425,22],[385,26,425,24],[386,16,426,14],[387,16,427,14],[387,20,427,20,"cloneDamage"],[387,31,427,31],[387,34,427,34,"Math"],[387,38,427,38],[387,39,427,39,"floor"],[387,44,427,44],[387,45,427,45,"newState"],[387,53,427,53],[387,54,427,54,"playerStats"],[387,65,427,65],[387,66,427,66,"attack"],[387,72,427,72],[387,75,427,75],[387,78,427,78],[387,79,427,79],[389,16,429,14],[390,16,430,14,"createProjectile"],[390,32,430,30],[390,33,430,31,"target"],[390,39,430,37],[390,41,430,39,"cloneDamage"],[390,52,430,50],[390,54,430,52,"newState"],[390,62,430,60],[390,63,430,61,"shadowClone"],[390,74,430,72],[390,75,430,73,"position"],[390,83,430,81],[390,85,430,83],[391,18,431,16,"id"],[391,20,431,18],[391,22,431,20],[391,43,431,41],[392,18,432,16,"name"],[392,22,432,20],[392,24,432,22],[392,45,432,43],[393,18,433,16,"icon"],[393,22,433,20],[393,24,433,22],[394,16,434,14],[394,17,434,15],[394,18,434,16],[395,14,435,12],[396,12,436,10],[397,10,437,8],[398,8,438,6],[400,8,440,6],[401,8,441,6],[402,8,442,6],[402,12,442,10],[402,13,442,11,"isManualControlActive"],[402,34,442,32],[402,38,442,36,"game"],[402,42,442,40],[402,43,442,41,"gameState"],[402,52,442,50],[402,53,442,51,"isAlive"],[402,60,442,58],[402,62,442,60],[403,10,443,8],[403,15,443,13],[403,19,443,17,"i"],[403,20,443,18],[403,23,443,21],[403,24,443,22],[403,26,443,24,"i"],[403,27,443,25],[403,30,443,28],[403,31,443,29],[403,33,443,31,"i"],[403,34,443,32],[403,36,443,34],[403,38,443,36],[404,12,444,10],[404,16,444,14,"newState"],[404,24,444,22],[404,25,444,23,"abilityManager"],[404,39,444,37],[404,40,444,38,"isAbilityReady"],[404,54,444,52],[404,55,444,53,"i"],[404,56,444,54],[404,57,444,55],[404,61,444,59,"newState"],[404,69,444,67],[404,70,444,68,"enemies"],[404,77,444,75],[404,78,444,76,"length"],[404,84,444,82],[404,87,444,85],[404,88,444,86],[404,90,444,88],[405,14,445,12],[405,18,445,16,"newState"],[405,26,445,24],[405,27,445,25,"abilityManager"],[405,41,445,39],[405,42,445,40,"useAbility"],[405,52,445,50],[405,53,445,51,"i"],[405,54,445,52],[405,56,445,54,"newTick"],[405,63,445,61],[405,64,445,62],[405,66,445,64],[406,16,446,14,"castAbility"],[406,27,446,25],[406,28,446,26,"newState"],[406,36,446,34],[406,38,446,36,"i"],[406,39,446,37],[406,40,446,38],[407,14,447,12],[408,12,448,10],[409,10,449,8],[410,8,450,6],[412,8,452,6],[413,8,453,6],[413,12,453,12,"deadEnemies"],[413,23,453,23],[413,26,453,26,"newState"],[413,34,453,34],[413,35,453,35,"enemies"],[413,42,453,42],[413,43,453,43,"filter"],[413,49,453,49],[413,50,453,50,"enemy"],[413,55,453,55],[413,59,453,59,"enemy"],[413,64,453,64],[413,65,453,65,"health"],[413,71,453,71],[413,75,453,75],[413,76,453,76],[413,77,453,77],[414,8,454,6,"enemiesToKill"],[414,21,454,19],[414,24,454,22],[414,25,454,23],[414,28,454,26,"deadEnemies"],[414,39,454,37],[414,40,454,38],[414,41,454,39],[414,42,454,40],[416,8,456,6],[417,8,457,6],[417,12,457,10,"deadEnemies"],[417,23,457,21],[417,24,457,22,"length"],[417,30,457,28],[417,33,457,31],[417,34,457,32],[417,36,457,34],[418,10,458,8,"console"],[418,17,458,15],[418,18,458,16,"log"],[418,21,458,19],[418,22,458,20],[418,49,458,47,"deadEnemies"],[418,60,458,58],[418,61,458,59,"length"],[418,67,458,65],[418,83,458,81],[418,85,458,83,"deadEnemies"],[418,96,458,94],[418,97,458,95,"map"],[418,100,458,98],[418,101,458,99,"e"],[418,102,458,100],[418,106,458,104],[418,109,458,107,"e"],[418,110,458,108],[418,111,458,109,"id"],[418,113,458,111],[418,117,458,115,"e"],[418,118,458,116],[418,119,458,117,"health"],[418,125,458,123],[418,130,458,128],[418,131,458,129],[418,132,458,130],[419,8,459,6],[421,8,461,6],[422,8,462,6],[422,12,462,12,"lowHealthEnemies"],[422,28,462,28],[422,31,462,31,"newState"],[422,39,462,39],[422,40,462,40,"enemies"],[422,47,462,47],[422,48,462,48,"filter"],[422,54,462,54],[422,55,462,55,"enemy"],[422,60,462,60],[422,64,462,64,"enemy"],[422,69,462,69],[422,70,462,70,"health"],[422,76,462,76],[422,80,462,80],[422,82,462,82],[422,86,462,86,"enemy"],[422,91,462,91],[422,92,462,92,"health"],[422,98,462,98],[422,101,462,101],[422,102,462,102],[422,103,462,103],[423,8,463,6],[423,12,463,10,"lowHealthEnemies"],[423,28,463,26],[423,29,463,27,"length"],[423,35,463,33],[423,38,463,36],[423,39,463,37],[423,41,463,39],[424,10,464,8,"console"],[424,17,464,15],[424,18,464,16,"log"],[424,21,464,19],[424,22,464,20],[424,61,464,59],[424,63,464,61,"lowHealthEnemies"],[424,79,464,77],[424,80,464,78,"map"],[424,83,464,81],[424,84,464,82,"e"],[424,85,464,83],[424,89,464,87],[424,92,464,90,"e"],[424,93,464,91],[424,94,464,92,"id"],[424,96,464,94],[424,100,464,98,"e"],[424,101,464,99],[424,102,464,100,"health"],[424,108,464,106],[424,112,464,110,"e"],[424,113,464,111],[424,114,464,112,"maxHealth"],[424,123,464,121],[424,128,464,126],[424,129,464,127],[424,130,464,128],[425,8,465,6],[427,8,467,6],[428,8,468,6],[428,12,468,12,"beforeCount"],[428,23,468,23],[428,26,468,26,"newState"],[428,34,468,34],[428,35,468,35,"enemies"],[428,42,468,42],[428,43,468,43,"length"],[428,49,468,49],[429,8,469,6,"newState"],[429,16,469,14],[429,17,469,15,"enemies"],[429,24,469,22],[429,27,469,25,"newState"],[429,35,469,33],[429,36,469,34,"enemies"],[429,43,469,41],[429,44,469,42,"filter"],[429,50,469,48],[429,51,469,49,"enemy"],[429,56,469,54],[429,60,469,58,"enemy"],[429,65,469,63],[429,66,469,64,"health"],[429,72,469,70],[429,75,469,73],[429,76,469,74],[429,77,469,75],[430,8,470,6],[430,12,470,12,"afterCount"],[430,22,470,22],[430,25,470,25,"newState"],[430,33,470,33],[430,34,470,34,"enemies"],[430,41,470,41],[430,42,470,42,"length"],[430,48,470,48],[431,8,472,6],[431,12,472,10,"beforeCount"],[431,23,472,21],[431,28,472,26,"afterCount"],[431,38,472,36],[431,40,472,38],[432,10,473,8,"console"],[432,17,473,15],[432,18,473,16,"log"],[432,21,473,19],[432,22,473,20],[432,52,473,50,"beforeCount"],[432,63,473,61],[432,66,473,64,"afterCount"],[432,76,473,74],[432,102,473,100],[432,103,473,101],[433,8,474,6],[435,8,476,6],[436,8,477,6],[437,8,478,6],[437,12,478,12,"MAX_ENEMIES"],[437,23,478,23],[437,26,478,26],[437,28,478,28],[437,29,478,29],[437,30,478,30],[438,8,479,6],[438,12,479,12,"MIN_SPAWN_DELAY"],[438,27,479,27],[438,30,479,30],[438,33,479,33],[438,34,479,34],[438,35,479,35],[439,8,480,6],[439,12,480,12,"now"],[439,15,480,15],[439,18,480,18,"Date"],[439,22,480,22],[439,23,480,23,"now"],[439,26,480,26],[439,27,480,27],[439,28,480,28],[440,8,481,6],[440,12,481,12,"hasBoss"],[440,19,481,19],[440,22,481,22,"newState"],[440,30,481,30],[440,31,481,31,"enemies"],[440,38,481,38],[440,39,481,39,"some"],[440,43,481,43],[440,44,481,44,"enemy"],[440,49,481,49],[440,53,481,53,"enemy"],[440,58,481,58],[440,59,481,59,"isBoss"],[440,65,481,65],[440,66,481,66],[442,8,483,6],[443,8,484,6],[443,12,484,10],[443,13,484,11,"newState"],[443,21,484,19],[443,22,484,20,"lastSpawnTime"],[443,35,484,33],[443,37,484,35],[444,10,485,8,"newState"],[444,18,485,16],[444,19,485,17,"lastSpawnTime"],[444,32,485,30],[444,35,485,33,"now"],[444,38,485,36],[445,8,486,6],[446,8,488,6,"console"],[446,15,488,13],[446,16,488,14,"log"],[446,19,488,17],[446,20,488,18],[446,53,488,51,"newState"],[446,61,488,59],[446,62,488,60,"enemies"],[446,69,488,67],[446,70,488,68,"length"],[446,76,488,74],[446,85,488,83,"MAX_ENEMIES"],[446,96,488,94],[446,109,488,107,"hasBoss"],[446,116,488,114],[446,118,488,116],[446,119,488,117],[448,8,490,6],[449,8,491,6],[449,12,491,10],[449,13,491,11,"hasBoss"],[449,20,491,18],[449,24,491,22,"newState"],[449,32,491,30],[449,33,491,31,"enemies"],[449,40,491,38],[449,41,491,39,"length"],[449,47,491,45],[449,50,491,48,"MAX_ENEMIES"],[449,61,491,59],[449,65,491,64,"now"],[449,68,491,67],[449,71,491,70,"newState"],[449,79,491,78],[449,80,491,79,"lastSpawnTime"],[449,93,491,92],[449,97,491,97,"MIN_SPAWN_DELAY"],[449,112,491,112],[449,114,491,114],[450,10,492,8,"console"],[450,17,492,15],[450,18,492,16,"log"],[450,21,492,19],[450,22,492,20],[450,43,492,41,"newState"],[450,51,492,49],[450,52,492,50,"enemies"],[450,59,492,57],[450,60,492,58,"length"],[450,66,492,64],[450,69,492,67],[450,70,492,68],[450,74,492,72,"MAX_ENEMIES"],[450,85,492,83],[450,87,492,85],[450,88,492,86],[451,10,493,8,"spawnTestEnemy"],[451,24,493,22],[451,25,493,23,"newState"],[451,33,493,31],[451,34,493,32],[452,10,494,8,"newState"],[452,18,494,16],[452,19,494,17,"lastSpawnTime"],[452,32,494,30],[452,35,494,33,"now"],[452,38,494,36],[453,8,495,6],[454,8,497,6],[454,15,497,13,"newState"],[454,23,497,21],[455,6,498,4],[455,7,498,5],[455,47,498,6],[457,6,500,4],[458,6,501,4,"console"],[458,13,501,11],[458,14,501,12,"log"],[458,17,501,15],[458,18,501,16],[458,50,501,48,"enemiesToKill"],[458,63,501,61],[458,64,501,62,"length"],[458,70,501,68],[458,101,501,99],[458,102,501,100],[459,6,503,4,"enemiesToKill"],[459,19,503,17],[459,20,503,18,"forEach"],[459,27,503,25],[459,28,503,26],[459,29,503,27,"enemy"],[459,34,503,32],[459,36,503,34,"index"],[459,41,503,39],[459,46,503,44],[460,8,504,6,"console"],[460,15,504,13],[460,16,504,14,"log"],[460,19,504,17],[460,20,504,18],[460,57,504,55,"index"],[460,62,504,60],[460,65,504,63],[460,66,504,64],[460,70,504,68,"enemiesToKill"],[460,83,504,81],[460,84,504,82,"length"],[460,90,504,88],[460,104,504,102,"enemy"],[460,109,504,107],[460,110,504,108,"id"],[460,112,504,110],[460,114,504,112],[460,115,504,113],[461,8,505,6,"handleEnemyKill"],[461,23,505,21],[461,24,505,22,"enemy"],[461,29,505,27],[461,30,505,28],[462,6,506,4],[462,7,506,5],[462,8,506,6],[463,4,507,2],[463,5,507,3],[463,7,507,5],[463,8,507,6,"handleEnemyKill"],[463,23,507,21],[463,24,507,22],[463,25,507,23],[463,26,507,24],[463,27,507,25],[465,4,509,2],[466,4,510,2],[466,8,510,8,"findClosestEnemyInternal"],[466,32,510,32],[466,35,510,36,"enemies"],[466,42,510,58],[466,46,510,83],[467,6,511,4],[467,10,511,8,"enemies"],[467,17,511,15],[467,18,511,16,"length"],[467,24,511,22],[467,29,511,27],[467,30,511,28],[467,32,511,30],[467,39,511,37],[467,43,511,41],[469,6,513,4],[470,6,514,4],[470,10,514,10,"SCREEN_WIDTH"],[470,22,514,22],[470,25,514,25],[470,28,514,28],[471,6,515,4],[471,10,515,10,"GAME_AREA_HEIGHT"],[471,26,515,26],[471,29,515,29],[471,32,515,32],[471,35,515,35],[471,38,515,38],[471,39,515,39],[471,40,515,40],[472,6,516,4],[472,10,516,10,"ninjaX"],[472,16,516,16],[472,19,516,19,"SCREEN_WIDTH"],[472,31,516,31],[472,34,516,34],[472,35,516,35],[473,6,517,4],[473,10,517,10,"ninjaY"],[473,16,517,16],[473,19,517,19,"GAME_AREA_HEIGHT"],[473,35,517,35],[473,38,517,38],[473,39,517,39],[474,6,519,4],[474,10,519,8,"closestEnemy"],[474,22,519,20],[474,25,519,23,"enemies"],[474,32,519,30],[474,33,519,31],[474,34,519,32],[474,35,519,33],[475,6,520,4],[475,10,520,8,"closestDistance"],[475,25,520,23],[475,28,520,26,"Infinity"],[475,36,520,34],[476,6,522,4,"enemies"],[476,13,522,11],[476,14,522,12,"forEach"],[476,21,522,19],[476,22,522,20,"enemy"],[476,27,522,25],[476,31,522,29],[477,8,523,6],[477,12,523,12,"distance"],[477,20,523,20],[477,23,523,23,"Math"],[477,27,523,27],[477,28,523,28,"sqrt"],[477,32,523,32],[477,33,524,8,"Math"],[477,37,524,12],[477,38,524,13,"pow"],[477,41,524,16],[477,42,524,17,"enemy"],[477,47,524,22],[477,48,524,23,"position"],[477,56,524,31],[477,57,524,32,"x"],[477,58,524,33],[477,61,524,36,"ninjaX"],[477,67,524,42],[477,69,524,44],[477,70,524,45],[477,71,524,46],[477,74,525,8,"Math"],[477,78,525,12],[477,79,525,13,"pow"],[477,82,525,16],[477,83,525,17,"enemy"],[477,88,525,22],[477,89,525,23,"position"],[477,97,525,31],[477,98,525,32,"y"],[477,99,525,33],[477,102,525,36,"ninjaY"],[477,108,525,42],[477,110,525,44],[477,111,525,45],[477,112,526,6],[477,113,526,7],[478,8,528,6],[478,12,528,10,"distance"],[478,20,528,18],[478,23,528,21,"closestDistance"],[478,38,528,36],[478,40,528,38],[479,10,529,8,"closestDistance"],[479,25,529,23],[479,28,529,26,"distance"],[479,36,529,34],[480,10,530,8,"closestEnemy"],[480,22,530,20],[480,25,530,23,"enemy"],[480,30,530,28],[481,8,531,6],[482,6,532,4],[482,7,532,5],[482,8,532,6],[483,6,534,4,"console"],[483,13,534,11],[483,14,534,12,"log"],[483,17,534,15],[483,18,534,16],[483,60,534,58,"closestDistance"],[483,75,534,73],[483,76,534,74,"toFixed"],[483,83,534,81],[483,84,534,82],[483,85,534,83],[483,86,534,84],[483,88,534,86],[483,89,534,87],[484,6,535,4],[484,13,535,11,"closestEnemy"],[484,25,535,23],[485,4,536,2],[485,5,536,3],[487,4,538,2],[488,4,539,2],[488,8,539,8,"findClosestEnemy"],[488,24,539,24],[488,27,539,27,"findClosestEnemy"],[488,28,539,27],[488,33,539,53],[489,6,540,4],[489,13,540,11,"findClosestEnemyInternal"],[489,37,540,35],[489,38,540,36,"combatState"],[489,49,540,47],[489,50,540,48,"enemies"],[489,57,540,55],[489,58,540,56],[490,4,541,2],[490,5,541,3],[492,4,543,2],[493,4,544,2],[493,8,544,2,"_useState7"],[493,18,544,2],[493,21,544,58],[493,25,544,58,"useState"],[493,31,544,66],[493,32,544,66,"useState"],[493,40,544,66],[493,42,544,91],[494,8,544,93,"x"],[494,9,544,94],[494,11,544,96],[494,12,544,97],[495,8,544,99,"y"],[495,9,544,100],[495,11,544,102],[496,6,544,104],[496,7,544,105],[496,8,544,106],[497,6,544,106,"_useState8"],[497,16,544,106],[497,23,544,106,"_slicedToArray"],[497,37,544,106],[497,38,544,106,"default"],[497,45,544,106],[497,47,544,106,"_useState7"],[497,57,544,106],[498,6,544,9,"currentNinjaPosition"],[498,26,544,29],[498,29,544,29,"_useState8"],[498,39,544,29],[499,6,544,31,"setCurrentNinjaPosition"],[499,29,544,54],[499,32,544,54,"_useState8"],[499,42,544,54],[500,4,545,2],[500,8,545,2,"_useState9"],[500,18,545,2],[500,21,545,60],[500,25,545,60,"useState"],[500,31,545,68],[500,32,545,68,"useState"],[500,40,545,68],[500,42,545,69],[500,47,545,74],[500,48,545,75],[501,6,545,75,"_useState0"],[501,16,545,75],[501,23,545,75,"_slicedToArray"],[501,37,545,75],[501,38,545,75,"default"],[501,45,545,75],[501,47,545,75,"_useState9"],[501,57,545,75],[502,6,545,9,"isManualControlActive"],[502,27,545,30],[502,30,545,30,"_useState0"],[502,40,545,30],[503,6,545,32,"setIsManualControlActive"],[503,30,545,56],[503,33,545,56,"_useState0"],[503,43,545,56],[505,4,547,2],[506,4,548,2],[506,8,548,8,"updateNinjaPosition"],[506,27,548,27],[506,30,548,30],[506,34,548,30,"useCallback"],[506,40,548,41],[506,41,548,41,"useCallback"],[506,52,548,41],[506,54,548,43,"newPosition"],[506,65,548,78],[506,69,548,83],[507,6,549,4,"setCurrentNinjaPosition"],[507,29,549,27],[507,30,549,28,"newPosition"],[507,41,549,39],[507,42,549,40],[508,4,550,2],[508,5,550,3],[508,7,550,5],[508,9,550,7],[508,10,550,8],[510,4,552,2],[511,4,553,2],[511,8,553,8,"setManualControlActive"],[511,30,553,30],[511,33,553,33],[511,37,553,33,"useCallback"],[511,43,553,44],[511,44,553,44,"useCallback"],[511,55,553,44],[511,57,553,46,"active"],[511,63,553,61],[511,67,553,66],[512,6,554,4,"setIsManualControlActive"],[512,30,554,28],[512,31,554,29,"active"],[512,37,554,35],[512,38,554,36],[513,6,555,4,"console"],[513,13,555,11],[513,14,555,12,"log"],[513,17,555,15],[513,18,555,16],[513,39,555,37,"active"],[513,45,555,43],[513,48,555,46],[513,59,555,57],[513,62,555,60],[513,75,555,73],[513,88,555,86,"active"],[513,94,555,92],[513,97,555,95],[513,105,555,103],[513,108,555,106],[513,117,555,115],[513,119,555,117],[513,120,555,118],[514,4,556,2],[514,5,556,3],[514,7,556,5],[514,9,556,7],[514,10,556,8],[516,4,558,2],[517,4,559,2],[517,8,559,8,"handleProjectileHit"],[517,27,559,27],[517,30,559,31,"projectile"],[517,40,559,59],[517,44,559,64],[518,6,560,4,"console"],[518,13,560,11],[518,14,560,12,"log"],[518,17,560,15],[518,18,560,16],[518,35,560,33,"projectile"],[518,45,560,43],[518,46,560,44,"id"],[518,48,560,46],[518,62,560,60,"projectile"],[518,72,560,70],[518,73,560,71,"targetEnemyId"],[518,86,560,84],[518,94,560,92,"projectile"],[518,104,560,102],[518,105,560,103,"damage"],[518,111,560,109],[518,120,560,118],[518,121,560,119],[519,6,562,4,"setCombatState"],[519,20,562,18],[519,21,562,19,"prev"],[519,25,562,23],[519,29,562,27],[520,8,563,6],[520,12,563,12,"newState"],[520,20,563,20],[520,23,563,23],[521,10,563,25],[521,13,563,28,"prev"],[522,8,563,33],[522,9,563,34],[524,8,565,6],[525,8,566,6],[525,12,566,12,"enemyIndex"],[525,22,566,22],[525,25,566,25,"newState"],[525,33,566,33],[525,34,566,34,"enemies"],[525,41,566,41],[525,42,566,42,"findIndex"],[525,51,566,51],[525,52,566,52,"e"],[525,53,566,53],[525,57,566,57,"e"],[525,58,566,58],[525,59,566,59,"id"],[525,61,566,61],[525,66,566,66,"projectile"],[525,76,566,76],[525,77,566,77,"targetEnemyId"],[525,90,566,90],[525,91,566,91],[526,8,567,6],[526,12,567,10,"enemyIndex"],[526,22,567,20],[526,26,567,24],[526,27,567,25],[526,29,567,27],[527,10,568,8,"newState"],[527,18,568,16],[527,19,568,17,"enemies"],[527,26,568,24],[527,29,568,27],[527,30,568,28],[527,33,568,31,"newState"],[527,41,568,39],[527,42,568,40,"enemies"],[527,49,568,47],[527,50,568,48],[528,10,569,8,"newState"],[528,18,569,16],[528,19,569,17,"enemies"],[528,26,569,24],[528,27,569,25,"enemyIndex"],[528,37,569,35],[528,38,569,36],[528,41,569,39],[529,12,570,10],[529,15,570,13,"newState"],[529,23,570,21],[529,24,570,22,"enemies"],[529,31,570,29],[529,32,570,30,"enemyIndex"],[529,42,570,40],[529,43,570,41],[530,12,571,10,"health"],[530,18,571,16],[530,20,571,18,"newState"],[530,28,571,26],[530,29,571,27,"enemies"],[530,36,571,34],[530,37,571,35,"enemyIndex"],[530,47,571,45],[530,48,571,46],[530,49,571,47,"health"],[530,55,571,53],[530,58,571,56,"projectile"],[530,68,571,66],[530,69,571,67,"damage"],[530,75,571,73],[531,12,572,10,"lastDamaged"],[531,23,572,21],[531,25,572,23,"combatEngine"],[531,44,572,35],[531,45,572,35,"combatEngine"],[531,57,572,35],[531,58,572,36,"getCurrentTick"],[531,72,572,50],[531,73,572,51],[532,10,573,8],[532,11,573,9],[533,10,575,8,"console"],[533,17,575,15],[533,18,575,16,"log"],[533,21,575,19],[533,22,575,20],[533,34,575,32,"projectile"],[533,44,575,42],[533,45,575,43,"targetEnemyId"],[533,58,575,56],[533,70,575,68,"newState"],[533,78,575,76],[533,79,575,77,"enemies"],[533,86,575,84],[533,87,575,85,"enemyIndex"],[533,97,575,95],[533,98,575,96],[533,99,575,97,"health"],[533,105,575,103],[533,109,575,107,"newState"],[533,117,575,115],[533,118,575,116,"enemies"],[533,125,575,123],[533,126,575,124,"enemyIndex"],[533,136,575,134],[533,137,575,135],[533,138,575,136,"maxHealth"],[533,147,575,145],[533,149,575,147],[533,150,575,148],[534,8,576,6],[535,8,578,6],[535,15,578,13,"newState"],[535,23,578,21],[536,6,579,4],[536,7,579,5],[536,8,579,6],[538,6,581,4],[539,6,582,4,"setProjectiles"],[539,20,582,18],[539,21,582,19,"prev"],[539,25,582,23],[539,29,582,27,"prev"],[539,33,582,31],[539,34,582,32,"filter"],[539,40,582,38],[539,41,582,39,"p"],[539,42,582,40],[539,46,582,44,"p"],[539,47,582,45],[539,48,582,46,"id"],[539,50,582,48],[539,55,582,53,"projectile"],[539,65,582,63],[539,66,582,64,"id"],[539,68,582,66],[539,69,582,67],[539,70,582,68],[540,4,583,2],[540,5,583,3],[542,4,585,2],[543,4,586,2],[543,8,586,8,"castAbility"],[543,19,586,19],[543,22,586,22,"castAbility"],[543,23,586,23,"state"],[543,28,586,41],[543,30,586,43,"slotIndex"],[543,39,586,60],[543,44,586,65],[544,6,587,4],[544,10,587,10,"deck"],[544,14,587,14],[544,17,587,17,"state"],[544,22,587,22],[544,23,587,23,"abilityManager"],[544,37,587,37],[544,38,587,38,"getDeck"],[544,45,587,45],[544,46,587,46],[544,47,587,47],[545,6,588,4],[545,10,588,10,"ability"],[545,17,588,17],[545,20,588,20,"deck"],[545,24,588,24],[545,25,588,25,"slots"],[545,30,588,30],[545,31,588,31,"slotIndex"],[545,40,588,40],[545,41,588,41],[546,6,589,4],[546,10,589,8],[546,11,589,9,"ability"],[546,18,589,16],[546,20,589,18],[548,6,591,4],[549,6,592,4],[549,10,592,8,"damage"],[549,16,592,14],[549,19,592,17,"ability"],[549,26,592,24],[549,27,592,25,"stats"],[549,32,592,30],[549,33,592,31,"baseDamage"],[549,43,592,41],[551,6,594,4],[552,6,595,4,"deck"],[552,10,595,8],[552,11,595,9,"activeSynergies"],[552,26,595,24],[552,27,595,25,"forEach"],[552,34,595,32],[552,35,595,33,"synergy"],[552,42,595,40],[552,46,595,44],[553,8,596,6],[553,12,596,10,"synergy"],[553,19,596,17],[553,20,596,18,"bonus"],[553,25,596,23],[553,26,596,24,"damageBonus"],[553,37,596,35],[553,41,597,10,"synergy"],[553,48,597,17],[553,49,597,18,"requiredTags"],[553,61,597,30],[553,62,597,31,"some"],[553,66,597,35],[553,67,597,36,"tag"],[553,70,597,39],[553,74,597,43,"ability"],[553,81,597,50],[553,82,597,51,"tags"],[553,86,597,55],[553,87,597,56,"includes"],[553,95,597,64],[553,96,597,65,"tag"],[553,99,597,68],[553,100,597,69],[553,101,597,70],[553,103,597,72],[554,10,598,8,"damage"],[554,16,598,14],[554,20,598,19],[554,21,598,20],[554,24,598,23,"synergy"],[554,31,598,30],[554,32,598,31,"bonus"],[554,37,598,36],[554,38,598,37,"damageBonus"],[554,49,598,48],[554,52,598,51],[554,55,598,55],[555,8,599,6],[556,6,600,4],[556,7,600,5],[556,8,600,6],[558,6,602,4],[559,6,603,4],[559,10,603,10,"isAOE"],[559,15,603,15],[559,18,603,18,"ability"],[559,25,603,25],[559,26,603,26,"effects"],[559,33,603,33],[559,34,603,34,"includes"],[559,42,603,42],[559,43,603,43],[559,48,603,48],[559,49,603,49],[559,53,603,53,"ability"],[559,60,603,60],[559,61,603,61,"stats"],[559,66,603,66],[559,67,603,67,"aoeRadius"],[559,76,603,76],[560,6,605,4],[560,10,605,8,"isAOE"],[560,15,605,13],[560,17,605,15],[561,8,606,6,"console"],[561,15,606,13],[561,16,606,14,"log"],[561,19,606,17],[561,20,606,18],[561,39,606,37,"ability"],[561,46,606,44],[561,47,606,45,"name"],[561,51,606,49],[561,67,606,65,"ability"],[561,74,606,72],[561,75,606,73,"stats"],[561,80,606,78],[561,81,606,79,"aoeRadius"],[561,90,606,88],[561,92,606,90],[561,93,606,91],[563,8,608,6],[564,8,609,6],[565,8,610,6],[565,12,610,12,"target"],[565,18,610,18],[565,21,610,21,"findClosestEnemyInternal"],[565,45,610,45],[565,46,610,46,"state"],[565,51,610,51],[565,52,610,52,"enemies"],[565,59,610,59],[565,60,610,60],[566,8,611,6],[566,12,611,10],[566,13,611,11,"target"],[566,19,611,17],[566,21,611,19],[568,8,613,6],[569,8,614,6,"createProjectile"],[569,24,614,22],[569,25,614,23,"target"],[569,31,614,29],[569,33,614,31,"damage"],[569,39,614,37],[569,41,614,39,"currentNinjaPosition"],[569,61,614,59],[569,63,614,61],[570,10,615,8,"id"],[570,12,615,10],[570,14,615,12,"ability"],[570,21,615,19],[570,22,615,20,"id"],[570,24,615,22],[571,10,616,8,"name"],[571,14,616,12],[571,16,616,14,"ability"],[571,23,616,21],[571,24,616,22,"name"],[571,28,616,26],[572,10,617,8,"icon"],[572,14,617,12],[572,16,617,14,"ability"],[572,23,617,21],[572,24,617,22,"icon"],[573,8,618,6],[573,9,618,7],[573,11,618,9],[573,15,618,13],[573,17,618,15,"ability"],[573,24,618,22],[573,25,618,23,"stats"],[573,30,618,28],[573,31,618,29,"aoeRadius"],[573,40,618,38],[573,41,618,39],[573,42,618,40],[573,43,618,41],[575,8,620,6,"console"],[575,15,620,13],[575,16,620,14,"log"],[575,19,620,17],[575,20,620,18],[575,26,620,24,"ability"],[575,33,620,31],[575,34,620,32,"name"],[575,38,620,36],[575,75,620,73,"target"],[575,81,620,79],[575,82,620,80,"name"],[575,86,620,84],[575,95,620,93,"ability"],[575,102,620,100],[575,103,620,101,"stats"],[575,108,620,106],[575,109,620,107,"aoeRadius"],[575,118,620,116],[575,127,620,125],[575,128,620,126],[576,6,622,4],[576,7,622,5],[576,13,622,11],[577,8,623,6],[578,8,624,6],[578,12,624,12,"target"],[578,19,624,18],[578,22,624,21,"findClosestEnemyInternal"],[578,46,624,45],[578,47,624,46,"state"],[578,52,624,51],[578,53,624,52,"enemies"],[578,60,624,59],[578,61,624,60],[579,8,625,6],[579,12,625,10],[579,13,625,11,"target"],[579,20,625,17],[579,22,625,19],[580,8,627,6],[580,12,627,12,"damageResult"],[580,24,627,24],[580,27,627,27,"DamageCalculator"],[580,46,627,43],[580,47,627,43,"DamageCalculator"],[580,63,627,43],[580,64,627,44,"calculateDamage"],[580,79,627,59],[580,80,627,60,"damage"],[580,86,627,66],[580,88,627,68,"state"],[580,93,627,73],[580,94,627,74,"playerStats"],[580,105,627,85],[580,107,627,87,"target"],[580,114,627,93],[580,115,627,94,"stats"],[580,120,627,99],[580,121,627,100],[582,8,629,6],[583,8,630,6,"createProjectile"],[583,24,630,22],[583,25,630,23,"target"],[583,32,630,29],[583,34,630,31,"damageResult"],[583,46,630,43],[583,47,630,44,"damage"],[583,53,630,50],[583,55,630,52,"currentNinjaPosition"],[583,75,630,72],[583,77,630,74],[584,10,631,8,"id"],[584,12,631,10],[584,14,631,12,"ability"],[584,21,631,19],[584,22,631,20,"id"],[584,24,631,22],[585,10,632,8,"name"],[585,14,632,12],[585,16,632,14,"ability"],[585,23,632,21],[585,24,632,22,"name"],[585,28,632,26],[586,10,633,8,"icon"],[586,14,633,12],[586,16,633,14,"ability"],[586,23,633,21],[586,24,633,22,"icon"],[587,8,634,6],[587,9,634,7],[587,10,634,8],[588,8,636,6,"console"],[588,15,636,13],[588,16,636,14,"log"],[588,19,636,17],[588,20,636,18],[588,26,636,24,"ability"],[588,33,636,31],[588,34,636,32,"name"],[588,38,636,36],[588,66,636,64,"damageResult"],[588,78,636,76],[588,79,636,77,"damage"],[588,85,636,83],[588,95,636,93,"damageResult"],[588,107,636,105],[588,108,636,106,"isCritical"],[588,118,636,116],[588,121,636,119],[588,131,636,129],[588,134,636,132],[588,136,636,134],[588,138,636,136],[588,139,636,137],[589,6,637,4],[591,6,639,4],[592,6,640,4],[592,10,640,8,"ability"],[592,17,640,15],[592,18,640,16,"effects"],[592,25,640,23],[592,26,640,24,"includes"],[592,34,640,32],[592,35,640,33],[592,40,640,38],[592,41,640,39],[592,45,640,43,"ability"],[592,52,640,50],[592,53,640,51,"stats"],[592,58,640,56],[592,59,640,57,"duration"],[592,67,640,65],[592,69,640,67],[593,8,641,6],[593,12,641,12,"targets"],[593,19,641,19],[593,22,641,22,"isAOE"],[593,27,641,27],[593,30,642,8,"state"],[593,35,642,13],[593,36,642,14,"enemies"],[593,43,642,21],[593,44,642,22,"filter"],[593,50,642,28],[593,51,642,29,"enemy"],[593,56,642,34],[593,60,642,38],[594,10,643,10],[594,14,643,16,"ninjaX"],[594,20,643,22],[594,23,643,25,"currentNinjaPosition"],[594,43,643,45],[594,44,643,46,"x"],[594,45,643,47],[594,48,643,50],[594,50,643,52],[595,10,644,10],[595,14,644,16,"ninjaY"],[595,20,644,22],[595,23,644,25,"currentNinjaPosition"],[595,43,644,45],[595,44,644,46,"y"],[595,45,644,47],[595,48,644,50],[595,50,644,52],[596,10,645,10],[596,14,645,16,"enemyX"],[596,20,645,22],[596,23,645,25,"enemy"],[596,28,645,30],[596,29,645,31,"position"],[596,37,645,39],[596,38,645,40,"x"],[596,39,645,41],[596,42,645,44],[596,46,645,48],[597,10,646,10],[597,14,646,16,"enemyY"],[597,20,646,22],[597,23,646,25,"enemy"],[597,28,646,30],[597,29,646,31,"position"],[597,37,646,39],[597,38,646,40,"y"],[597,39,646,41],[597,42,646,44],[597,46,646,48],[598,10,647,10],[598,14,647,16,"distance"],[598,22,647,24],[598,25,647,27,"Math"],[598,29,647,31],[598,30,647,32,"sqrt"],[598,34,647,36],[598,35,647,37,"Math"],[598,39,647,41],[598,40,647,42,"pow"],[598,43,647,45],[598,44,647,46,"enemyX"],[598,50,647,52],[598,53,647,55,"ninjaX"],[598,59,647,61],[598,61,647,63],[598,62,647,64],[598,63,647,65],[598,66,647,68,"Math"],[598,70,647,72],[598,71,647,73,"pow"],[598,74,647,76],[598,75,647,77,"enemyY"],[598,81,647,83],[598,84,647,86,"ninjaY"],[598,90,647,92],[598,92,647,94],[598,93,647,95],[598,94,647,96],[598,95,647,97],[599,10,648,10],[599,17,648,17,"distance"],[599,25,648,25],[599,29,648,29,"ability"],[599,36,648,36],[599,37,648,37,"stats"],[599,42,648,42],[599,43,648,43,"aoeRadius"],[599,52,648,52],[600,8,649,8],[600,9,649,9],[600,10,649,10],[600,13,650,8],[600,14,650,9,"findClosestEnemyInternal"],[600,38,650,33],[600,39,650,34,"state"],[600,44,650,39],[600,45,650,40,"enemies"],[600,52,650,47],[600,53,650,48],[600,54,650,49],[600,55,650,50,"filter"],[600,61,650,56],[600,62,650,57,"Boolean"],[600,69,650,64],[600,70,650,65],[601,8,652,6,"targets"],[601,15,652,13],[601,16,652,14,"forEach"],[601,23,652,21],[601,24,652,22,"target"],[601,30,652,28],[601,34,652,32],[602,10,653,8,"state"],[602,15,653,13],[602,16,653,14,"statusEffects"],[602,29,653,27],[602,30,653,28,"addEffect"],[602,39,653,37],[602,40,653,38,"target"],[602,46,653,44],[602,47,653,45,"id"],[602,49,653,47],[602,51,653,49],[603,12,654,10,"id"],[603,14,654,12],[603,16,654,14],[603,19,654,17,"ability"],[603,26,654,24],[603,27,654,25,"id"],[603,29,654,27],[603,35,654,33],[604,12,655,10,"type"],[604,16,655,14],[604,18,655,16],[604,23,655,21],[605,12,656,10,"remainingTicks"],[605,26,656,24],[605,28,656,26,"Math"],[605,32,656,30],[605,33,656,31,"floor"],[605,38,656,36],[605,39,656,37,"ability"],[605,46,656,44],[605,47,656,45,"stats"],[605,52,656,50],[605,53,656,51,"duration"],[605,61,656,59],[605,64,656,62],[605,66,656,64],[605,67,656,65],[606,12,657,10,"tickInterval"],[606,24,657,22],[606,26,657,24],[606,28,657,26],[607,12,658,10,"lastTick"],[607,20,658,18],[607,22,658,20,"state"],[607,27,658,25],[607,28,658,26,"currentTick"],[607,39,658,37],[608,12,659,10,"value"],[608,17,659,15],[608,19,659,17,"Math"],[608,23,659,21],[608,24,659,22,"floor"],[608,29,659,27],[608,30,659,28,"damage"],[608,36,659,34],[608,39,659,37],[608,42,659,40],[608,43,659,41],[609,12,660,10,"stackable"],[609,21,660,19],[609,23,660,21],[610,10,661,8],[610,11,661,9],[610,12,661,10],[611,8,662,6],[611,9,662,7],[611,10,662,8],[612,6,663,4],[614,6,665,4],[615,6,666,4],[615,10,666,8,"ability"],[615,17,666,15],[615,18,666,16,"effects"],[615,25,666,23],[615,26,666,24,"includes"],[615,34,666,32],[615,35,666,33],[615,41,666,39],[615,42,666,40],[615,46,666,44,"ability"],[615,53,666,51],[615,54,666,52,"id"],[615,56,666,54],[615,61,666,59],[615,75,666,73],[615,77,666,75],[616,8,667,6,"console"],[616,15,667,13],[616,16,667,14,"log"],[616,19,667,17],[616,20,667,18],[616,66,667,64,"ability"],[616,73,667,71],[616,74,667,72,"stats"],[616,79,667,77],[616,80,667,78,"duration"],[616,88,667,86],[616,98,667,96],[616,99,667,97],[618,8,669,6],[619,8,670,6],[619,12,670,12,"cloneX"],[619,18,670,18],[619,21,670,21,"currentNinjaPosition"],[619,41,670,41],[619,42,670,42,"x"],[619,43,670,43],[619,46,670,46],[619,48,670,48],[619,49,670,49],[619,50,670,50],[620,8,671,6],[620,12,671,12,"cloneY"],[620,18,671,18],[620,21,671,21,"currentNinjaPosition"],[620,41,671,41],[620,42,671,42,"y"],[620,43,671,43],[620,46,671,46],[620,48,671,48],[620,49,671,49],[620,50,671,50],[622,8,673,6,"state"],[622,13,673,11],[622,14,673,12,"shadowClone"],[622,25,673,23],[622,28,673,26],[623,10,674,8,"id"],[623,12,674,10],[623,14,674,12],[623,30,674,28,"Date"],[623,34,674,32],[623,35,674,33,"now"],[623,38,674,36],[623,39,674,37],[623,40,674,38],[623,42,674,40],[624,10,675,8,"remainingTicks"],[624,24,675,22],[624,26,675,24,"Math"],[624,30,675,28],[624,31,675,29,"floor"],[624,36,675,34],[624,37,675,35,"ability"],[624,44,675,42],[624,45,675,43,"stats"],[624,50,675,48],[624,51,675,49,"duration"],[624,59,675,57],[624,62,675,60],[624,64,675,62],[624,65,675,63],[625,10,675,65],[626,10,676,8,"position"],[626,18,676,16],[626,20,676,18],[627,12,676,20,"x"],[627,13,676,21],[627,15,676,23,"cloneX"],[627,21,676,29],[628,12,676,31,"y"],[628,13,676,32],[628,15,676,34,"cloneY"],[629,10,676,41],[629,11,676,42],[630,10,677,8,"damageMultiplier"],[630,26,677,24],[630,28,677,26],[630,31,677,29],[630,32,677,31],[631,8,678,6],[631,9,678,7],[632,8,680,6,"console"],[632,15,680,13],[632,16,680,14,"log"],[632,19,680,17],[632,20,680,18],[632,63,680,61,"ability"],[632,70,680,68],[632,71,680,69,"stats"],[632,76,680,74],[632,77,680,75,"duration"],[632,85,680,83],[632,108,680,106],[632,109,680,107],[633,6,681,4],[634,4,682,2],[634,5,682,3],[636,4,684,2],[637,4,685,2],[637,8,685,8,"createProjectile"],[637,24,685,24],[637,27,685,27,"createProjectile"],[637,28,685,28,"targetEnemy"],[637,39,685,52],[637,41,685,54,"damage"],[637,47,685,68],[637,49,685,70,"ninjaPos"],[637,57,685,103],[637,59,685,105,"abilityInfo"],[637,70,685,159],[637,72,685,161,"isAOE"],[637,77,685,176],[637,79,685,178,"aoeRadius"],[637,88,685,196],[637,93,685,201],[638,6,686,4],[638,10,686,8],[638,11,686,9,"targetEnemy"],[638,22,686,20],[638,24,686,22],[639,8,687,6,"console"],[639,15,687,13],[639,16,687,14,"log"],[639,19,687,17],[639,20,687,18],[639,65,687,63],[639,66,687,64],[640,8,688,6],[640,15,688,13],[640,19,688,17],[641,6,689,4],[642,6,691,4],[642,10,691,10,"SCREEN_WIDTH"],[642,22,691,22],[642,25,691,25],[642,28,691,28],[643,6,692,4],[643,10,692,10,"GAME_AREA_HEIGHT"],[643,26,692,26],[643,29,692,29],[643,32,692,32],[643,35,692,35],[643,38,692,38],[643,39,692,39],[643,40,692,40],[644,6,693,4],[644,10,693,10,"NINJA_SIZE"],[644,20,693,20],[644,23,693,23],[644,25,693,25],[646,6,695,4],[647,6,696,4],[647,10,696,10,"ninjaX"],[647,16,696,16],[647,19,696,19,"ninjaPos"],[647,27,696,27],[647,30,696,30,"ninjaPos"],[647,38,696,38],[647,39,696,39,"x"],[647,40,696,40],[647,43,696,43,"NINJA_SIZE"],[647,53,696,53],[647,56,696,56],[647,57,696,57],[647,60,696,60,"SCREEN_WIDTH"],[647,72,696,72],[647,75,696,75],[647,76,696,76],[648,6,697,4],[648,10,697,10,"ninjaY"],[648,16,697,16],[648,19,697,19,"ninjaPos"],[648,27,697,27],[648,30,697,30,"ninjaPos"],[648,38,697,38],[648,39,697,39,"y"],[648,40,697,40],[648,43,697,43,"NINJA_SIZE"],[648,53,697,53],[648,56,697,56],[648,57,697,57],[648,60,697,60,"GAME_AREA_HEIGHT"],[648,76,697,76],[648,79,697,79],[648,80,697,80],[649,6,698,4],[649,10,698,10,"ENEMY_SIZE"],[649,20,698,20],[649,23,698,23],[649,25,698,25],[650,6,700,4],[650,10,700,10,"projectileId"],[650,22,700,22],[650,25,700,25],[650,33,700,33,"Date"],[650,37,700,37],[650,38,700,38,"now"],[650,41,700,41],[650,42,700,42],[650,43,700,43],[650,47,700,47,"Math"],[650,51,700,51],[650,52,700,52,"random"],[650,58,700,58],[650,59,700,59],[650,60,700,60],[650,62,700,62],[651,6,702,4],[651,10,702,10,"projectile"],[651,20,702,38],[651,23,702,41],[652,8,703,6,"id"],[652,10,703,8],[652,12,703,10,"projectileId"],[652,24,703,22],[653,8,704,6,"x"],[653,9,704,7],[653,11,704,9,"ninjaX"],[653,17,704,15],[654,8,705,6,"y"],[654,9,705,7],[654,11,705,9,"ninjaY"],[654,17,705,15],[655,8,706,6,"targetX"],[655,15,706,13],[655,17,706,15,"targetEnemy"],[655,28,706,26],[655,29,706,27,"position"],[655,37,706,35],[655,38,706,36,"x"],[655,39,706,37],[655,42,706,40,"ENEMY_SIZE"],[655,52,706,50],[655,55,706,53],[655,56,706,54],[656,8,707,6,"targetY"],[656,15,707,13],[656,17,707,15,"targetEnemy"],[656,28,707,26],[656,29,707,27,"position"],[656,37,707,35],[656,38,707,36,"y"],[656,39,707,37],[656,42,707,40,"ENEMY_SIZE"],[656,52,707,50],[656,55,707,53],[656,56,707,54],[657,8,708,6,"targetEnemyId"],[657,21,708,19],[657,23,708,21,"targetEnemy"],[657,34,708,32],[657,35,708,33,"id"],[657,37,708,35],[658,8,709,6,"damage"],[658,14,709,12],[658,16,709,14,"damage"],[658,22,709,20],[659,8,710,6,"startTime"],[659,17,710,15],[659,19,710,17,"Date"],[659,23,710,21],[659,24,710,22,"now"],[659,27,710,25],[659,28,710,26],[659,29,710,27],[660,8,711,6,"duration"],[660,16,711,14],[660,18,711,16],[660,21,711,19],[661,8,711,21],[662,8,712,6],[663,8,713,6,"abilityId"],[663,17,713,15],[663,19,713,17,"abilityInfo"],[663,30,713,28],[663,32,713,30,"id"],[663,34,713,32],[663,38,713,36],[663,54,713,52],[664,8,714,6,"abilityName"],[664,19,714,17],[664,21,714,19,"abilityInfo"],[664,32,714,30],[664,34,714,32,"name"],[664,38,714,36],[664,42,714,40],[664,58,714,56],[665,8,715,6,"abilityIcon"],[665,19,715,17],[665,21,715,19,"abilityInfo"],[665,32,715,30],[665,34,715,32,"icon"],[665,38,715,36],[665,42,715,40],[665,46,715,44],[666,8,715,46],[667,8,716,6],[668,8,717,6,"isAOE"],[668,13,717,11],[668,15,717,13,"isAOE"],[668,20,717,18],[668,24,717,22],[668,29,717,27],[669,8,718,6,"aoeRadius"],[669,17,718,15],[669,19,718,17,"aoeRadius"],[669,28,718,26],[669,32,718,30],[670,6,719,4],[670,7,719,5],[671,6,721,4,"console"],[671,13,721,11],[671,14,721,12,"log"],[671,17,721,15],[671,18,721,16],[671,44,721,42,"abilityInfo"],[671,55,721,53],[671,57,721,55,"name"],[671,61,721,59],[671,65,721,63],[671,81,721,79],[671,101,721,99,"projectileId"],[671,113,721,111],[671,128,721,126,"targetEnemy"],[671,139,721,137],[671,140,721,138,"name"],[671,144,721,142],[671,152,721,150,"damage"],[671,158,721,156],[671,167,721,165],[671,168,721,166],[672,6,723,4,"console"],[672,13,723,11],[672,14,723,12,"log"],[672,17,723,15],[672,18,723,16],[672,53,723,51,"targetEnemy"],[672,64,723,62],[672,65,723,63,"id"],[672,67,723,65],[672,75,723,73,"damage"],[672,81,723,79],[672,90,723,88],[672,91,723,89],[673,6,724,4,"console"],[673,13,724,11],[673,14,724,12,"log"],[673,17,724,15],[673,18,724,16],[673,53,724,51,"ninjaX"],[673,59,724,57],[673,64,724,62,"ninjaY"],[673,70,724,68],[673,87,724,85,"projectile"],[673,97,724,95],[673,98,724,96,"targetX"],[673,105,724,103],[673,110,724,108,"projectile"],[673,120,724,118],[673,121,724,119,"targetY"],[673,128,724,126],[673,131,724,129],[673,132,724,130],[674,6,726,4,"setProjectiles"],[674,20,726,18],[674,21,726,19,"prev"],[674,25,726,23],[674,29,726,27],[674,30,726,28],[674,33,726,31,"prev"],[674,37,726,35],[674,39,726,37,"projectile"],[674,49,726,47],[674,50,726,48],[674,51,726,49],[676,6,728,4],[677,6,729,4,"setTimeout"],[677,16,729,14],[677,17,729,15],[677,23,729,21],[678,8,730,6,"handleProjectileHit"],[678,27,730,25],[678,28,730,26,"projectile"],[678,38,730,36],[678,39,730,37],[679,6,731,4],[679,7,731,5],[679,9,731,7],[679,12,731,10],[679,13,731,11],[680,6,733,4],[680,13,733,11,"projectile"],[680,23,733,21],[681,4,734,2],[681,5,734,3],[683,4,736,2],[684,4,737,2],[684,8,737,8,"spawnTestEnemy"],[684,22,737,22],[684,25,737,26,"state"],[684,30,737,44],[684,34,737,49],[685,6,738,4,"console"],[685,13,738,11],[685,14,738,12,"log"],[685,17,738,15],[685,18,738,16],[685,83,738,81],[685,84,738,82],[687,6,740,4],[688,6,741,4],[688,10,741,10,"zoneEnemy"],[688,19,741,19],[688,22,741,22,"spawnZoneEnemy"],[688,36,741,36],[688,37,741,37],[688,38,741,38],[689,6,742,4],[689,10,742,8],[689,11,742,9,"zoneEnemy"],[689,20,742,18],[689,22,742,20],[690,8,743,6,"console"],[690,15,743,13],[690,16,743,14,"log"],[690,19,743,17],[690,20,743,18],[690,76,743,74],[690,77,743,75],[691,8,744,6],[692,8,745,6,"spawnBasicTestEnemy"],[692,27,745,25],[692,28,745,26,"state"],[692,33,745,31],[692,34,745,32],[693,8,746,6],[694,6,747,4],[695,6,749,4,"console"],[695,13,749,11],[695,14,749,12,"log"],[695,17,749,15],[695,18,749,16],[695,44,749,42,"zoneEnemy"],[695,53,749,51],[695,54,749,52,"name"],[695,58,749,56],[695,63,749,61,"zoneEnemy"],[695,72,749,70],[695,73,749,71,"typeId"],[695,79,749,77],[695,94,749,92,"currentZone"],[695,105,749,103],[695,107,749,105,"id"],[695,109,749,107],[695,119,749,117,"currentZoneLevel"],[695,135,749,133],[695,137,749,135,"level"],[695,142,749,140],[695,144,749,142],[695,145,749,143],[697,6,751,4],[698,6,752,4],[698,10,752,10,"combatEnemy"],[698,21,752,34],[698,24,752,37],[699,8,753,6,"id"],[699,10,753,8],[699,12,753,10,"zoneEnemy"],[699,21,753,19],[699,22,753,20,"id"],[699,24,753,22],[700,8,754,6,"name"],[700,12,754,10],[700,14,754,12,"zoneEnemy"],[700,23,754,21],[700,24,754,22,"name"],[700,28,754,26],[701,8,755,6,"health"],[701,14,755,12],[701,16,755,14,"zoneEnemy"],[701,25,755,23],[701,26,755,24,"hp"],[701,28,755,26],[702,8,756,6,"maxHealth"],[702,17,756,15],[702,19,756,17,"zoneEnemy"],[702,28,756,26],[702,29,756,27,"maxHP"],[702,34,756,32],[703,8,757,6,"stats"],[703,13,757,11],[703,15,757,13],[704,10,758,8,"attack"],[704,16,758,14],[704,18,758,16,"zoneEnemy"],[704,27,758,25],[704,28,758,26,"attack"],[704,34,758,32],[705,10,759,8,"defense"],[705,17,759,15],[705,19,759,17],[705,21,759,19],[706,10,759,21],[707,10,760,8,"health"],[707,16,760,14],[707,18,760,16,"zoneEnemy"],[707,27,760,25],[707,28,760,26,"hp"],[707,30,760,28],[708,10,761,8,"maxHealth"],[708,19,761,17],[708,21,761,19,"zoneEnemy"],[708,30,761,28],[708,31,761,29,"maxHP"],[708,36,761,34],[709,10,762,8,"critChance"],[709,20,762,18],[709,22,762,20],[709,23,762,21],[710,10,763,8,"critDamage"],[710,20,763,18],[710,22,763,20],[710,25,763,23],[711,10,764,8,"cooldownReduction"],[711,27,764,25],[711,29,764,27],[712,8,765,6],[712,9,765,7],[713,8,766,6,"position"],[713,16,766,14],[713,18,766,16,"zoneEnemy"],[713,27,766,25],[713,28,766,26,"position"],[713,36,766,34],[714,8,767,6,"lastDamaged"],[714,19,767,17],[714,21,767,19],[714,22,767,20],[715,8,768,6],[716,8,769,6,"zoneTypeId"],[716,18,769,16],[716,20,769,18,"zoneEnemy"],[716,29,769,27],[716,30,769,28,"typeId"],[716,36,769,34],[717,8,770,6,"zoneXP"],[717,14,770,12],[717,16,770,14,"zoneEnemy"],[717,25,770,23],[717,26,770,24,"xp"],[718,6,771,4],[718,7,771,5],[719,6,773,4,"console"],[719,13,773,11],[719,14,773,12,"log"],[719,17,773,15],[719,18,773,16],[719,42,773,40,"combatEnemy"],[719,53,773,51],[719,54,773,52,"name"],[719,58,773,56],[719,67,773,65,"combatEnemy"],[719,78,773,76],[719,79,773,77,"health"],[719,85,773,83],[719,100,773,98,"currentZone"],[719,111,773,109],[719,113,773,111,"id"],[719,115,773,113],[719,125,773,123,"currentZoneLevel"],[719,141,773,139],[719,143,773,141,"level"],[719,148,773,146],[719,150,773,148],[719,151,773,149],[720,6,774,4,"state"],[720,11,774,9],[720,12,774,10,"enemies"],[720,19,774,17],[720,20,774,18,"push"],[720,24,774,22],[720,25,774,23,"combatEnemy"],[720,36,774,34],[720,37,774,35],[721,4,775,2],[721,5,775,3],[723,4,777,2],[724,4,778,2],[724,8,778,8,"spawnBasicTestEnemy"],[724,27,778,27],[724,30,778,31,"state"],[724,35,778,49],[724,39,778,54],[725,6,779,4],[725,10,779,10,"SCREEN_WIDTH"],[725,22,779,22],[725,25,779,25],[725,28,779,28],[726,6,780,4],[726,10,780,10,"GAME_AREA_HEIGHT"],[726,26,780,26],[726,29,780,29],[726,32,780,32],[726,35,780,35],[726,38,780,38],[727,6,781,4],[727,10,781,10,"ENEMY_SIZE"],[727,20,781,20],[727,23,781,23],[727,25,781,25],[728,6,783,4],[728,10,783,10,"x"],[728,11,783,11],[728,14,783,14,"Math"],[728,18,783,18],[728,19,783,19,"random"],[728,25,783,25],[728,26,783,26],[728,27,783,27],[728,31,783,31,"SCREEN_WIDTH"],[728,43,783,43],[728,46,783,46,"ENEMY_SIZE"],[728,56,783,56],[728,59,783,59],[728,60,783,60],[728,61,783,61],[728,64,783,64,"ENEMY_SIZE"],[728,74,783,74],[729,6,784,4],[729,10,784,10,"y"],[729,11,784,11],[729,14,784,14,"Math"],[729,18,784,18],[729,19,784,19,"random"],[729,25,784,25],[729,26,784,26],[729,27,784,27],[729,31,784,31,"GAME_AREA_HEIGHT"],[729,47,784,47],[729,50,784,50,"ENEMY_SIZE"],[729,60,784,60],[729,63,784,63],[729,64,784,64],[729,65,784,65],[729,68,784,68,"ENEMY_SIZE"],[729,78,784,78],[730,6,786,4],[730,10,786,10,"enemy"],[730,15,786,28],[730,18,786,31],[731,8,787,6,"id"],[731,10,787,8],[731,12,787,10],[731,30,787,28,"Date"],[731,34,787,32],[731,35,787,33,"now"],[731,38,787,36],[731,39,787,37],[731,40,787,38],[731,44,787,42,"Math"],[731,48,787,46],[731,49,787,47,"random"],[731,55,787,53],[731,56,787,54],[731,57,787,55],[731,59,787,57],[732,8,788,6,"name"],[732,12,788,10],[732,14,788,12],[732,26,788,24,"Math"],[732,30,788,28],[732,31,788,29,"floor"],[732,36,788,34],[732,37,788,35,"Math"],[732,41,788,39],[732,42,788,40,"random"],[732,48,788,46],[732,49,788,47],[732,50,788,48],[732,53,788,51],[732,56,788,54],[732,57,788,55],[732,59,788,57],[733,8,789,6,"health"],[733,14,789,12],[733,16,789,14],[733,18,789,16],[734,8,790,6,"maxHealth"],[734,17,790,15],[734,19,790,17],[734,21,790,19],[735,8,791,6,"stats"],[735,13,791,11],[735,15,791,13],[736,10,792,8,"attack"],[736,16,792,14],[736,18,792,16],[736,20,792,18],[737,10,793,8,"defense"],[737,17,793,15],[737,19,793,17],[737,21,793,19],[738,10,794,8,"health"],[738,16,794,14],[738,18,794,16],[738,20,794,18],[739,10,795,8,"maxHealth"],[739,19,795,17],[739,21,795,19],[739,23,795,21],[740,10,796,8,"critChance"],[740,20,796,18],[740,22,796,20],[740,23,796,21],[741,10,797,8,"critDamage"],[741,20,797,18],[741,22,797,20],[741,25,797,23],[742,10,798,8,"cooldownReduction"],[742,27,798,25],[742,29,798,27],[743,8,799,6],[743,9,799,7],[744,8,800,6,"position"],[744,16,800,14],[744,18,800,16],[745,10,800,18,"x"],[745,11,800,19],[746,10,800,21,"y"],[747,8,800,23],[747,9,800,24],[748,8,801,6,"lastDamaged"],[748,19,801,17],[748,21,801,19],[749,6,802,4],[749,7,802,5],[750,6,804,4,"console"],[750,13,804,11],[750,14,804,12,"log"],[750,17,804,15],[750,18,804,16],[750,42,804,40,"enemy"],[750,47,804,45],[750,48,804,46,"name"],[750,52,804,50],[750,60,804,58,"Math"],[750,64,804,62],[750,65,804,63,"round"],[750,70,804,68],[750,71,804,69,"x"],[750,72,804,70],[750,73,804,71],[750,78,804,76,"Math"],[750,82,804,80],[750,83,804,81,"round"],[750,88,804,86],[750,89,804,87,"y"],[750,90,804,88],[750,91,804,89],[750,94,804,92],[750,95,804,93],[751,6,805,4,"state"],[751,11,805,9],[751,12,805,10,"enemies"],[751,19,805,17],[751,20,805,18,"push"],[751,24,805,22],[751,25,805,23,"enemy"],[751,30,805,28],[751,31,805,29],[752,4,806,2],[752,5,806,3],[754,4,808,2],[755,4,809,2],[755,8,809,8,"startCombat"],[755,19,809,19],[755,22,809,22,"React"],[755,27,809,27],[755,28,809,27,"default"],[755,35,809,27],[755,36,809,28,"useCallback"],[755,47,809,39],[755,48,809,40],[755,54,809,46],[756,6,810,4,"console"],[756,13,810,11],[756,14,810,12,"log"],[756,17,810,15],[756,18,810,16],[756,63,810,61],[756,64,810,62],[757,6,811,4,"setCombatState"],[757,20,811,18],[757,21,811,19,"prev"],[757,25,811,23],[757,30,811,28],[758,8,811,30],[758,11,811,33,"prev"],[758,15,811,37],[759,8,811,39,"isInCombat"],[759,18,811,49],[759,20,811,51],[760,6,811,56],[760,7,811,57],[760,8,811,58],[760,9,811,59],[762,6,813,4],[763,6,814,4,"combatEngine"],[763,25,814,16],[763,26,814,16,"combatEngine"],[763,38,814,16],[763,39,814,17,"addTickCallback"],[763,54,814,32],[763,55,814,33,"handleCombatTick"],[763,71,814,49],[763,72,814,50],[764,6,815,4,"console"],[764,13,815,11],[764,14,815,12,"log"],[764,17,815,15],[764,18,815,16],[764,62,815,60],[764,63,815,61],[766,6,817,4],[767,6,818,4,"combatEngine"],[767,25,818,16],[767,26,818,16,"combatEngine"],[767,38,818,16],[767,39,818,17,"start"],[767,44,818,22],[767,45,818,23],[767,46,818,24],[768,4,819,2],[768,5,819,3],[768,7,819,5],[768,8,819,6,"combatEngine"],[768,27,819,18],[768,28,819,18,"combatEngine"],[768,40,819,18],[768,42,819,20,"handleCombatTick"],[768,58,819,36],[768,59,819,37],[768,60,819,38],[770,4,821,2],[771,4,822,2],[771,8,822,8,"stopCombat"],[771,18,822,18],[771,21,822,21,"React"],[771,26,822,26],[771,27,822,26,"default"],[771,34,822,26],[771,35,822,27,"useCallback"],[771,46,822,38],[771,47,822,39],[771,53,822,45],[772,6,823,4,"setCombatState"],[772,20,823,18],[772,21,823,19,"prev"],[772,25,823,23],[772,30,823,28],[773,8,823,30],[773,11,823,33,"prev"],[773,15,823,37],[774,8,823,39,"isInCombat"],[774,18,823,49],[774,20,823,51],[775,6,823,57],[775,7,823,58],[775,8,823,59],[775,9,823,60],[776,6,824,4,"combatEngine"],[776,25,824,16],[776,26,824,16,"combatEngine"],[776,38,824,16],[776,39,824,17,"removeTickCallback"],[776,57,824,35],[776,58,824,36,"handleCombatTick"],[776,74,824,52],[776,75,824,53],[777,4,825,2],[777,5,825,3],[777,7,825,5],[777,8,825,6,"combatEngine"],[777,27,825,18],[777,28,825,18,"combatEngine"],[777,40,825,18],[777,42,825,20,"handleCombatTick"],[777,58,825,36],[777,59,825,37],[777,60,825,38],[779,4,827,2],[780,4,828,2],[780,8,828,8,"equipAbility"],[780,20,828,20],[780,23,828,23,"equipAbility"],[780,24,828,24,"abilityId"],[780,33,828,41],[780,35,828,43,"slotIndex"],[780,44,828,60],[780,49,828,74],[781,6,829,4],[781,13,829,11,"combatState"],[781,24,829,22],[781,25,829,23,"abilityManager"],[781,39,829,37],[781,40,829,38,"equipAbility"],[781,52,829,50],[781,53,829,51,"abilityId"],[781,62,829,60],[781,64,829,62,"slotIndex"],[781,73,829,71],[781,74,829,72],[782,4,830,2],[782,5,830,3],[783,4,832,2],[783,8,832,8,"getDeck"],[783,15,832,15],[783,18,832,18,"getDeck"],[783,19,832,18],[783,24,832,24],[784,6,833,4],[784,13,833,11,"combatState"],[784,24,833,22],[784,25,833,23,"abilityManager"],[784,39,833,37],[784,40,833,38,"getDeck"],[784,47,833,45],[784,48,833,46],[784,49,833,47],[785,4,834,2],[785,5,834,3],[786,4,836,2],[786,8,836,8,"getAvailableAbilities"],[786,29,836,29],[786,32,836,32,"getAvailableAbilities"],[786,33,836,32],[786,38,836,38],[787,6,837,4],[787,13,837,11,"combatState"],[787,24,837,22],[787,25,837,23,"abilityManager"],[787,39,837,37],[787,40,837,38,"getAvailableAbilities"],[787,61,837,59],[787,62,837,60],[787,63,837,61],[788,4,838,2],[788,5,838,3],[789,4,840,2],[789,8,840,8,"upgradeAbility"],[789,22,840,22],[789,25,840,26,"abilityId"],[789,34,840,43],[789,38,840,57],[790,6,841,4],[790,13,841,11,"combatState"],[790,24,841,22],[790,25,841,23,"abilityManager"],[790,39,841,37],[790,40,841,38,"upgradeAbility"],[790,54,841,52],[790,55,841,53,"abilityId"],[790,64,841,62],[790,65,841,63],[791,4,842,2],[791,5,842,3],[793,4,844,2],[794,4,845,2],[794,8,845,8,"clearAllEnemies"],[794,23,845,23],[794,26,845,26,"clearAllEnemies"],[794,27,845,26],[794,32,845,32],[795,6,846,4,"console"],[795,13,846,11],[795,14,846,12,"log"],[795,17,846,15],[795,18,846,16],[795,67,846,65],[795,68,846,66],[796,6,847,4,"setCombatState"],[796,20,847,18],[796,21,847,19,"prev"],[796,25,847,23],[796,30,847,28],[797,8,848,6],[797,11,848,9,"prev"],[797,15,848,13],[798,8,849,6,"enemies"],[798,15,849,13],[798,17,849,15],[799,6,850,4],[799,7,850,5],[799,8,850,6],[799,9,850,7],[800,4,851,2],[800,5,851,3],[802,4,853,2],[803,4,854,2],[803,8,854,8,"triggerLevelUpExplosion"],[803,31,854,31],[803,34,854,34,"triggerLevelUpExplosion"],[803,35,854,34],[803,40,854,40],[804,6,855,4,"console"],[804,13,855,11],[804,14,855,12,"log"],[804,17,855,15],[804,18,855,16],[804,70,855,68],[804,71,855,69],[805,6,857,4],[805,10,857,10,"explosionTime"],[805,23,857,23],[805,26,857,26,"Date"],[805,30,857,30],[805,31,857,31,"now"],[805,34,857,34],[805,35,857,35],[805,36,857,36],[806,6,858,4,"setLastExplosionTime"],[806,26,858,24],[806,27,858,25,"explosionTime"],[806,40,858,38],[806,41,858,39],[807,6,860,4,"setCombatState"],[807,20,860,18],[807,21,860,19,"prev"],[807,25,860,23],[807,29,860,27],[808,8,861,6],[809,8,862,6],[809,12,862,12,"enemyCount"],[809,22,862,22],[809,25,862,25,"prev"],[809,29,862,29],[809,30,862,30,"enemies"],[809,37,862,37],[809,38,862,38,"length"],[809,44,862,44],[810,8,863,6],[810,12,863,12,"explosionXP"],[810,23,863,23],[810,26,863,26,"enemyCount"],[810,36,863,36],[810,39,863,39],[810,42,863,42],[810,43,863,43],[810,44,863,44],[811,8,864,6],[811,12,864,12,"explosionGold"],[811,25,864,25],[811,28,864,28,"enemyCount"],[811,38,864,38],[811,41,864,41],[811,44,864,44],[811,45,864,45],[811,46,864,46],[813,8,866,6,"console"],[813,15,866,13],[813,16,866,14,"log"],[813,19,866,17],[813,20,866,18],[813,44,866,42,"enemyCount"],[813,54,866,52],[813,76,866,74,"explosionXP"],[813,87,866,85],[813,98,866,96,"explosionGold"],[813,111,866,109],[813,118,866,116],[813,119,866,117],[815,8,868,6],[816,8,869,6],[816,12,869,10,"explosionXP"],[816,23,869,21],[816,26,869,24],[816,27,869,25],[816,29,869,27],[817,10,870,8,"setTimeout"],[817,20,870,18],[817,21,870,19],[817,27,870,25],[818,12,871,10,"game"],[818,16,871,14],[818,17,871,15,"updateNinja"],[818,28,871,26],[818,29,871,28,"ninja"],[818,34,871,33],[818,39,871,39],[819,14,872,12,"experience"],[819,24,872,22],[819,26,872,24,"ninja"],[819,31,872,29],[819,32,872,30,"experience"],[819,42,872,40],[819,45,872,43,"explosionXP"],[819,56,872,54],[820,14,873,12,"gold"],[820,18,873,16],[820,20,873,18,"ninja"],[820,25,873,23],[820,26,873,24,"gold"],[820,30,873,28],[820,33,873,31,"explosionGold"],[821,12,874,10],[821,13,874,11],[821,14,874,12],[821,15,874,13],[822,10,875,8],[822,11,875,9],[822,13,875,11],[822,14,875,12],[822,15,875,13],[822,16,875,14],[822,17,875,15],[823,8,876,6],[825,8,878,6],[826,8,879,6],[827,8,880,6],[827,12,880,12,"damagedEnemies"],[827,26,880,26],[827,29,880,29,"prev"],[827,33,880,33],[827,34,880,34,"enemies"],[827,41,880,41],[827,42,880,42,"map"],[827,45,880,45],[827,46,880,46,"enemy"],[827,51,880,51],[827,56,880,56],[828,10,881,8],[828,13,881,11,"enemy"],[828,18,881,16],[829,10,882,8,"health"],[829,16,882,14],[829,18,882,16],[829,19,882,17],[830,10,882,19],[831,10,883,8,"lastDamaged"],[831,21,883,19],[831,23,883,21,"combatEngine"],[831,42,883,33],[831,43,883,33,"combatEngine"],[831,55,883,33],[831,56,883,34,"getCurrentTick"],[831,70,883,48],[831,71,883,49],[832,8,884,6],[832,9,884,7],[832,10,884,8],[832,11,884,9],[833,8,886,6],[833,15,886,13],[834,10,887,8],[834,13,887,11,"prev"],[834,17,887,15],[835,10,888,8,"enemies"],[835,17,888,15],[835,19,888,17,"damagedEnemies"],[836,8,889,6],[836,9,889,7],[837,6,890,4],[837,7,890,5],[837,8,890,6],[838,4,891,2],[838,5,891,3],[840,4,893,2],[841,4,894,2],[841,8,894,8,"spawnEnemy"],[841,18,894,18],[841,21,894,22,"position"],[841,29,894,57],[841,33,894,75],[842,6,895,4],[842,10,895,10,"SCREEN_WIDTH"],[842,22,895,22],[842,25,895,25],[842,28,895,28],[843,6,896,4],[843,10,896,10,"GAME_AREA_HEIGHT"],[843,26,896,26],[843,29,896,29],[843,32,896,32],[843,35,896,35],[843,38,896,38],[843,39,896,39],[843,40,896,40],[844,6,897,4],[844,10,897,10,"ENEMY_SIZE"],[844,20,897,20],[844,23,897,23],[844,25,897,25],[846,6,899,4],[847,6,900,4],[847,10,900,10,"x"],[847,11,900,11],[847,14,900,14,"position"],[847,22,900,22],[847,24,900,24,"x"],[847,25,900,25],[847,29,900,29,"Math"],[847,33,900,33],[847,34,900,34,"random"],[847,40,900,40],[847,41,900,41],[847,42,900,42],[847,46,900,46,"SCREEN_WIDTH"],[847,58,900,58],[847,61,900,61,"ENEMY_SIZE"],[847,71,900,71],[847,74,900,74],[847,75,900,75],[847,76,900,76],[847,79,900,79,"ENEMY_SIZE"],[847,89,900,89],[848,6,901,4],[848,10,901,10,"y"],[848,11,901,11],[848,14,901,14,"position"],[848,22,901,22],[848,24,901,24,"y"],[848,25,901,25],[848,29,901,29,"Math"],[848,33,901,33],[848,34,901,34,"random"],[848,40,901,40],[848,41,901,41],[848,42,901,42],[848,46,901,46,"GAME_AREA_HEIGHT"],[848,62,901,62],[848,65,901,65,"ENEMY_SIZE"],[848,75,901,75],[848,78,901,78],[848,79,901,79],[848,80,901,80],[848,83,901,83,"ENEMY_SIZE"],[848,93,901,93],[849,6,903,4],[849,10,903,10,"enemy"],[849,15,903,28],[849,18,903,31],[850,8,904,6,"id"],[850,10,904,8],[850,12,904,10],[850,21,904,19],[850,23,904,21,"enemyCounter"],[850,35,904,33],[850,37,904,35],[851,8,905,6,"name"],[851,12,905,10],[851,14,905,12],[851,24,905,22],[852,8,906,6,"health"],[852,14,906,12],[852,16,906,14],[852,19,906,17],[853,8,907,6,"maxHealth"],[853,17,907,15],[853,19,907,17],[853,22,907,20],[854,8,908,6,"stats"],[854,13,908,11],[854,15,908,13],[855,10,909,8,"attack"],[855,16,909,14],[855,18,909,16],[855,20,909,18],[856,10,910,8,"defense"],[856,17,910,15],[856,19,910,17],[856,21,910,19],[857,10,911,8,"health"],[857,16,911,14],[857,18,911,16],[857,21,911,19],[858,10,912,8,"maxHealth"],[858,19,912,17],[858,21,912,19],[858,24,912,22],[859,10,913,8,"critChance"],[859,20,913,18],[859,22,913,20],[859,23,913,21],[860,10,914,8,"critDamage"],[860,20,914,18],[860,22,914,20],[860,25,914,23],[861,10,915,8,"cooldownReduction"],[861,27,915,25],[861,29,915,27],[862,8,916,6],[862,9,916,7],[863,8,917,6,"position"],[863,16,917,14],[863,18,917,16],[864,10,917,18,"x"],[864,11,917,19],[865,10,917,21,"y"],[866,8,917,23],[866,9,917,24],[867,8,918,6,"lastDamaged"],[867,19,918,17],[867,21,918,19],[868,6,919,4],[868,7,919,5],[869,6,921,4,"setCombatState"],[869,20,921,18],[869,21,921,19,"prev"],[869,25,921,23],[869,30,921,28],[870,8,922,6],[870,11,922,9,"prev"],[870,15,922,13],[871,8,923,6,"enemies"],[871,15,923,13],[871,17,923,15],[871,18,923,16],[871,21,923,19,"prev"],[871,25,923,23],[871,26,923,24,"enemies"],[871,33,923,31],[871,35,923,33,"enemy"],[871,40,923,38],[872,6,924,4],[872,7,924,5],[872,8,924,6],[872,9,924,7],[873,6,926,4],[873,13,926,11,"enemy"],[873,18,926,16],[874,4,927,2],[874,5,927,3],[876,4,929,2],[877,4,930,2],[877,8,930,8,"spawnBoss"],[877,17,930,17],[877,20,930,21,"bossEnemy"],[877,29,930,43],[877,33,930,48],[878,6,931,4,"console"],[878,13,931,11],[878,14,931,12,"log"],[878,17,931,15],[878,18,931,16],[878,39,931,37,"bossEnemy"],[878,48,931,46],[878,49,931,47,"name"],[878,53,931,51],[878,90,931,88],[878,91,931,89],[879,6,932,4,"setCombatState"],[879,20,932,18],[879,21,932,19,"prev"],[879,25,932,23],[879,30,932,28],[880,8,933,6],[880,11,933,9,"prev"],[880,15,933,13],[881,8,934,6,"enemies"],[881,15,934,13],[881,17,934,15],[881,18,934,16,"bossEnemy"],[881,27,934,25],[881,28,934,26],[881,29,934,27],[882,6,935,4],[882,7,935,5],[882,8,935,6],[882,9,935,7],[883,4,936,2],[883,5,936,3],[885,4,938,2],[886,4,939,2],[886,8,939,8,"clearSpecificEnemy"],[886,26,939,26],[886,29,939,30,"enemyId"],[886,36,939,45],[886,40,939,50],[887,6,940,4,"setCombatState"],[887,20,940,18],[887,21,940,19,"prev"],[887,25,940,23],[887,30,940,28],[888,8,941,6],[888,11,941,9,"prev"],[888,15,941,13],[889,8,942,6,"enemies"],[889,15,942,13],[889,17,942,15,"prev"],[889,21,942,19],[889,22,942,20,"enemies"],[889,29,942,27],[889,30,942,28,"filter"],[889,36,942,34],[889,37,942,35,"enemy"],[889,42,942,40],[889,46,942,44,"enemy"],[889,51,942,49],[889,52,942,50,"id"],[889,54,942,52],[889,59,942,57,"enemyId"],[889,66,942,64],[890,6,943,4],[890,7,943,5],[890,8,943,6],[890,9,943,7],[891,4,944,2],[891,5,944,3],[893,4,946,2],[894,4,947,2],[894,8,947,8,"useAbilityManually"],[894,26,947,26],[894,29,947,26,"_s3"],[894,32,947,26],[894,33,947,29],[894,37,947,29,"useCallback"],[894,43,947,40],[894,44,947,40,"useCallback"],[894,55,947,40],[894,57,947,40,"_s3"],[894,60,947,40],[894,61,947,42,"slotIndex"],[894,70,947,59],[894,74,947,73],[895,6,947,73,"_s3"],[895,9,947,73],[896,6,948,4,"console"],[896,13,948,11],[896,14,948,12,"log"],[896,17,948,15],[896,18,948,16],[896,53,948,51,"slotIndex"],[896,62,948,60],[896,64,948,62],[896,65,948,63],[898,6,950,4],[899,6,951,4],[899,10,951,8],[899,11,951,9,"game"],[899,15,951,13],[899,16,951,14,"gameState"],[899,25,951,23],[899,26,951,24,"isAlive"],[899,33,951,31],[899,35,951,33],[900,8,952,6,"console"],[900,15,952,13],[900,16,952,14,"log"],[900,19,952,17],[900,20,952,18],[900,70,952,68],[900,71,952,69],[901,8,953,6],[901,15,953,13],[901,20,953,18],[902,6,954,4],[904,6,956,4],[905,6,957,4],[905,10,957,10,"isReady"],[905,17,957,17],[905,20,957,20,"combatState"],[905,31,957,31],[905,32,957,32,"abilityManager"],[905,46,957,46],[905,47,957,47,"isAbilityReady"],[905,61,957,61],[905,62,957,62,"slotIndex"],[905,71,957,71],[905,72,957,72],[906,6,958,4],[906,10,958,8],[906,11,958,9,"isReady"],[906,18,958,16],[906,20,958,18],[907,8,959,6,"console"],[907,15,959,13],[907,16,959,14,"log"],[907,19,959,17],[907,20,959,18],[907,41,959,39,"slotIndex"],[907,50,959,48],[907,85,959,83],[907,86,959,84],[908,8,960,6],[908,15,960,13],[908,20,960,18],[909,6,961,4],[911,6,963,4],[912,6,964,4],[912,10,964,8,"combatState"],[912,21,964,19],[912,22,964,20,"enemies"],[912,29,964,27],[912,30,964,28,"length"],[912,36,964,34],[912,41,964,39],[912,42,964,40],[912,44,964,42],[913,8,965,6,"console"],[913,15,965,13],[913,16,965,14,"log"],[913,19,965,17],[913,20,965,18],[913,69,965,67],[913,70,965,68],[914,8,966,6],[914,15,966,13],[914,20,966,18],[915,6,967,4],[917,6,969,4],[918,6,970,4],[918,10,970,10,"currentTick"],[918,21,970,21],[918,24,970,24,"combatEngine"],[918,43,970,36],[918,44,970,36,"combatEngine"],[918,56,970,36],[918,57,970,37,"getCurrentTick"],[918,71,970,51],[918,72,970,52],[918,73,970,53],[919,6,971,4],[919,10,971,10,"success"],[919,17,971,17],[919,20,971,20,"combatState"],[919,31,971,31],[919,32,971,32,"abilityManager"],[919,46,971,46],[919,47,971,47,"useAbility"],[919,57,971,57],[919,58,971,58,"slotIndex"],[919,67,971,67],[919,69,971,69,"currentTick"],[919,80,971,80],[919,81,971,81],[920,6,973,4],[920,10,973,8,"success"],[920,17,973,15],[920,19,973,17],[921,8,974,6],[922,8,975,6,"setCombatState"],[922,22,975,20],[922,23,975,21,"prev"],[922,27,975,25],[922,31,975,29],[923,10,976,8],[923,14,976,14,"newState"],[923,22,976,22],[923,25,976,25],[924,12,976,27],[924,15,976,30,"prev"],[925,10,976,35],[925,11,976,36],[926,10,977,8,"castAbility"],[926,21,977,19],[926,22,977,20,"newState"],[926,30,977,28],[926,32,977,30,"slotIndex"],[926,41,977,39],[926,42,977,40],[927,10,978,8],[927,17,978,15,"newState"],[927,25,978,23],[928,8,979,6],[928,9,979,7],[928,10,979,8],[929,8,981,6,"console"],[929,15,981,13],[929,16,981,14,"log"],[929,19,981,17],[929,20,981,18],[929,65,981,63,"slotIndex"],[929,74,981,72],[929,76,981,74],[929,77,981,75],[930,8,982,6],[930,15,982,13],[930,19,982,17],[931,6,983,4],[931,7,983,5],[931,13,983,11],[932,8,984,6,"console"],[932,15,984,13],[932,16,984,14,"log"],[932,19,984,17],[932,20,984,18],[932,61,984,59,"slotIndex"],[932,70,984,68],[932,72,984,70],[932,73,984,71],[933,8,985,6],[933,15,985,13],[933,20,985,18],[934,6,986,4],[935,4,987,2],[935,5,987,3],[935,46,987,5],[935,47,987,6,"combatState"],[935,58,987,17],[935,59,987,18,"abilityManager"],[935,73,987,32],[935,75,987,34,"combatState"],[935,86,987,45],[935,87,987,46,"enemies"],[935,94,987,53],[935,95,987,54],[935,96,987,55],[936,4,988,2],[936,8,988,2,"useEffect"],[936,14,988,11],[936,15,988,11,"useEffect"],[936,24,988,11],[936,26,988,12],[936,32,988,18],[937,6,989,4,"combatEngine"],[937,25,989,16],[937,26,989,16,"combatEngine"],[937,38,989,16],[937,39,989,17,"start"],[937,44,989,22],[937,45,989,23],[937,46,989,24],[939,6,991,4],[940,6,992,4],[941,6,993,4,"console"],[941,13,993,11],[941,14,993,12,"log"],[941,17,993,15],[941,18,993,16],[941,97,993,95],[941,98,993,96],[942,6,995,4],[942,13,995,11],[942,19,995,17],[943,8,996,6,"combatEngine"],[943,27,996,18],[943,28,996,18,"combatEngine"],[943,40,996,18],[943,41,996,19,"stop"],[943,45,996,23],[943,46,996,24],[943,47,996,25],[944,6,997,4],[944,7,997,5],[945,4,998,2],[945,5,998,3],[945,7,998,5],[945,9,998,7],[945,10,998,8],[947,4,1000,2],[948,4,1001,2],[948,8,1001,2,"useEffect"],[948,14,1001,11],[948,15,1001,11,"useEffect"],[948,24,1001,11],[948,26,1001,12],[948,32,1001,18],[949,6,1002,4],[949,10,1002,10,"processProjectileImpacts"],[949,34,1002,34],[949,37,1002,37,"processProjectileImpacts"],[949,38,1002,37],[949,43,1002,43],[950,8,1003,6,"setProjectiles"],[950,22,1003,20],[950,23,1003,21,"currentProjectiles"],[950,41,1003,39],[950,45,1003,43],[951,10,1004,8],[951,17,1004,15,"currentProjectiles"],[951,35,1004,33],[951,36,1004,34,"map"],[951,39,1004,37],[951,40,1004,38,"projectile"],[951,50,1004,48],[951,54,1004,52],[952,12,1005,10],[952,16,1005,14],[952,17,1005,15,"projectile"],[952,27,1005,25],[952,29,1005,27],[952,36,1005,34],[952,40,1005,38],[954,12,1007,10],[955,12,1008,10],[955,16,1008,16,"currentTime"],[955,27,1008,27],[955,30,1008,30,"Date"],[955,34,1008,34],[955,35,1008,35,"now"],[955,38,1008,38],[955,39,1008,39],[955,40,1008,40],[956,12,1009,10],[956,16,1009,16,"startTime"],[956,25,1009,25],[956,28,1009,28,"projectile"],[956,38,1009,38],[956,39,1009,39,"startTime"],[956,48,1009,48],[956,52,1009,52,"currentTime"],[956,63,1009,63],[957,12,1010,10],[957,16,1010,16,"elapsedTime"],[957,27,1010,27],[957,30,1010,30,"currentTime"],[957,41,1010,41],[957,44,1010,44,"startTime"],[957,53,1010,53],[958,12,1011,10],[958,16,1011,16,"progress"],[958,24,1011,24],[958,27,1011,27,"Math"],[958,31,1011,31],[958,32,1011,32,"min"],[958,35,1011,35],[958,36,1011,36,"elapsedTime"],[958,47,1011,47],[958,51,1011,51,"projectile"],[958,61,1011,61],[958,62,1011,62,"duration"],[958,70,1011,70],[958,74,1011,74],[958,77,1011,77],[958,78,1011,78],[958,80,1011,80],[958,81,1011,81],[958,82,1011,82],[960,12,1013,10],[961,12,1014,10],[961,16,1014,14,"progress"],[961,24,1014,22],[961,28,1014,26],[961,29,1014,27],[961,33,1014,31],[961,34,1014,32,"projectile"],[961,44,1014,42],[961,45,1014,43,"hasHit"],[961,51,1014,49],[961,53,1014,51],[962,14,1015,12,"projectile"],[962,24,1015,22],[962,25,1015,23,"hasHit"],[962,31,1015,29],[962,34,1015,32],[962,38,1015,36],[963,14,1017,12,"setCombatState"],[963,28,1017,26],[963,29,1017,27,"prev"],[963,33,1017,31],[963,37,1017,35],[964,16,1018,14],[964,20,1018,20,"newState"],[964,28,1018,28],[964,31,1018,31],[965,18,1018,33],[965,21,1018,36,"prev"],[966,16,1018,41],[966,17,1018,42],[967,16,1020,14],[967,20,1020,18,"projectile"],[967,30,1020,28],[967,31,1020,29,"isAOE"],[967,36,1020,34],[967,40,1020,38,"projectile"],[967,50,1020,48],[967,51,1020,49,"aoeRadius"],[967,60,1020,58],[967,64,1020,62,"projectile"],[967,74,1020,72],[967,75,1020,73,"aoeRadius"],[967,84,1020,82],[967,87,1020,85],[967,88,1020,86],[967,90,1020,88],[968,18,1021,16],[969,18,1022,16,"console"],[969,25,1022,23],[969,26,1022,24,"log"],[969,29,1022,27],[969,30,1022,28],[969,59,1022,57,"projectile"],[969,69,1022,67],[969,70,1022,68,"abilityName"],[969,81,1022,79],[969,97,1022,95,"projectile"],[969,107,1022,105],[969,108,1022,106,"aoeRadius"],[969,117,1022,115],[969,119,1022,117],[969,120,1022,118],[970,18,1024,16],[970,22,1024,22,"impactX"],[970,29,1024,29],[970,32,1024,32,"projectile"],[970,42,1024,42],[970,43,1024,43,"targetX"],[970,50,1024,50],[971,18,1025,16],[971,22,1025,22,"impactY"],[971,29,1025,29],[971,32,1025,32,"projectile"],[971,42,1025,42],[971,43,1025,43,"targetY"],[971,50,1025,50],[972,18,1026,16],[972,22,1026,22,"enemiesKilled"],[972,35,1026,50],[972,38,1026,53],[972,40,1026,55],[974,18,1028,16],[975,18,1029,16,"newState"],[975,26,1029,24],[975,27,1029,25,"enemies"],[975,34,1029,32],[975,37,1029,35,"newState"],[975,45,1029,43],[975,46,1029,44,"enemies"],[975,53,1029,51],[975,54,1029,52,"map"],[975,57,1029,55],[975,58,1029,56,"enemy"],[975,63,1029,61],[975,67,1029,65],[976,20,1030,18],[976,24,1030,22,"enemy"],[976,29,1030,27],[976,30,1030,28,"health"],[976,36,1030,34],[976,40,1030,38],[976,41,1030,39],[976,45,1030,43,"enemy"],[976,50,1030,48],[976,51,1030,49,"markedForDeath"],[976,65,1030,63],[976,67,1030,65],[976,74,1030,72,"enemy"],[976,79,1030,77],[977,20,1032,18],[977,24,1032,24,"enemyX"],[977,30,1032,30],[977,33,1032,33,"enemy"],[977,38,1032,38],[977,39,1032,39,"position"],[977,47,1032,47],[977,48,1032,48,"x"],[977,49,1032,49],[977,52,1032,52],[977,56,1032,56],[977,57,1032,57],[977,58,1032,58],[978,20,1033,18],[978,24,1033,24,"enemyY"],[978,30,1033,30],[978,33,1033,33,"enemy"],[978,38,1033,38],[978,39,1033,39,"position"],[978,47,1033,47],[978,48,1033,48,"y"],[978,49,1033,49],[978,52,1033,52],[978,56,1033,56],[979,20,1034,18],[979,24,1034,24,"distance"],[979,32,1034,32],[979,35,1034,35,"Math"],[979,39,1034,39],[979,40,1034,40,"sqrt"],[979,44,1034,44],[979,45,1034,45,"Math"],[979,49,1034,49],[979,50,1034,50,"pow"],[979,53,1034,53],[979,54,1034,54,"enemyX"],[979,60,1034,60],[979,63,1034,63,"impactX"],[979,70,1034,70],[979,72,1034,72],[979,73,1034,73],[979,74,1034,74],[979,77,1034,77,"Math"],[979,81,1034,81],[979,82,1034,82,"pow"],[979,85,1034,85],[979,86,1034,86,"enemyY"],[979,92,1034,92],[979,95,1034,95,"impactY"],[979,102,1034,102],[979,104,1034,104],[979,105,1034,105],[979,106,1034,106],[979,107,1034,107],[980,20,1036,18],[980,24,1036,22,"distance"],[980,32,1036,30],[980,36,1036,34,"projectile"],[980,46,1036,44],[980,47,1036,45,"aoeRadius"],[980,56,1036,54],[980,58,1036,56],[981,22,1037,20],[982,22,1038,20],[982,26,1038,26,"damageResult"],[982,38,1038,38],[982,41,1038,41,"DamageCalculator"],[982,60,1038,57],[982,61,1038,57,"DamageCalculator"],[982,77,1038,57],[982,78,1038,58,"calculateDamage"],[982,93,1038,73],[982,94,1038,74,"projectile"],[982,104,1038,84],[982,105,1038,85,"damage"],[982,111,1038,91],[982,113,1038,93,"prev"],[982,117,1038,97],[982,118,1038,98,"playerStats"],[982,129,1038,109],[982,131,1038,111,"enemy"],[982,136,1038,116],[982,137,1038,117,"stats"],[982,142,1038,122],[982,143,1038,123],[983,22,1039,20],[983,26,1039,26,"newHealth"],[983,35,1039,35],[983,38,1039,38,"Math"],[983,42,1039,42],[983,43,1039,43,"max"],[983,46,1039,46],[983,47,1039,47],[983,48,1039,48],[983,50,1039,50,"enemy"],[983,55,1039,55],[983,56,1039,56,"health"],[983,62,1039,62],[983,65,1039,65,"damageResult"],[983,77,1039,77],[983,78,1039,78,"damage"],[983,84,1039,84],[983,85,1039,85],[984,22,1041,20,"console"],[984,29,1041,27],[984,30,1041,28,"log"],[984,33,1041,31],[984,34,1041,32],[984,52,1041,50,"enemy"],[984,57,1041,55],[984,58,1041,56,"name"],[984,62,1041,60],[984,74,1041,72,"damageResult"],[984,86,1041,84],[984,87,1041,85,"damage"],[984,93,1041,91],[984,105,1041,103,"enemy"],[984,110,1041,108],[984,111,1041,109,"health"],[984,117,1041,115],[984,124,1041,122,"newHealth"],[984,133,1041,131],[984,136,1041,134],[984,137,1041,135],[986,22,1043,20],[987,22,1044,20],[987,26,1044,24,"newHealth"],[987,35,1044,33],[987,39,1044,37],[987,40,1044,38],[987,44,1044,42,"enemy"],[987,49,1044,47],[987,50,1044,48,"health"],[987,56,1044,54],[987,59,1044,57],[987,60,1044,58],[987,62,1044,60],[988,24,1045,22,"console"],[988,31,1045,29],[988,32,1045,30,"log"],[988,35,1045,33],[988,36,1045,34],[988,52,1045,50,"enemy"],[988,57,1045,55],[988,58,1045,56,"name"],[988,62,1045,60],[988,76,1045,74,"projectile"],[988,86,1045,84],[988,87,1045,85,"abilityName"],[988,98,1045,96],[988,101,1045,99],[988,102,1045,100],[989,24,1046,22,"enemiesKilled"],[989,37,1046,35],[989,38,1046,36,"push"],[989,42,1046,40],[989,43,1046,41,"enemy"],[989,48,1046,46],[989,49,1046,47],[989,50,1046,48],[989,51,1046,49],[991,24,1048,22],[991,31,1048,29],[992,26,1049,24],[992,29,1049,27,"enemy"],[992,34,1049,32],[993,26,1050,24,"health"],[993,32,1050,30],[993,34,1050,32],[993,35,1050,33],[994,26,1051,24,"markedForDeath"],[994,40,1051,38],[994,42,1051,40],[994,46,1051,44],[995,26,1052,24,"lastDamaged"],[995,37,1052,35],[995,39,1052,37,"combatEngine"],[995,58,1052,49],[995,59,1052,49,"combatEngine"],[995,71,1052,49],[995,72,1052,50,"getCurrentTick"],[995,86,1052,64],[995,87,1052,65],[996,24,1053,22],[996,25,1053,23],[997,22,1054,20],[997,23,1054,21],[997,29,1054,27],[998,24,1055,22],[998,31,1055,29],[999,26,1056,24],[999,29,1056,27,"enemy"],[999,34,1056,32],[1000,26,1057,24,"health"],[1000,32,1057,30],[1000,34,1057,32,"newHealth"],[1000,43,1057,41],[1001,26,1058,24,"lastDamaged"],[1001,37,1058,35],[1001,39,1058,37,"combatEngine"],[1001,58,1058,49],[1001,59,1058,49,"combatEngine"],[1001,71,1058,49],[1001,72,1058,50,"getCurrentTick"],[1001,86,1058,64],[1001,87,1058,65],[1002,24,1059,22],[1002,25,1059,23],[1003,22,1060,20],[1004,20,1061,18],[1005,20,1063,18],[1005,27,1063,25,"enemy"],[1005,32,1063,30],[1005,33,1063,31],[1005,34,1063,32],[1006,18,1064,16],[1006,19,1064,17],[1006,20,1064,18],[1008,18,1066,16],[1009,18,1067,16],[1009,22,1067,20,"enemiesKilled"],[1009,35,1067,33],[1009,36,1067,34,"length"],[1009,42,1067,40],[1009,45,1067,43],[1009,46,1067,44],[1009,48,1067,46],[1010,20,1068,18,"console"],[1010,27,1068,25],[1010,28,1068,26,"log"],[1010,31,1068,29],[1010,32,1068,30],[1010,52,1068,50,"enemiesKilled"],[1010,65,1068,63],[1010,66,1068,64,"length"],[1010,72,1068,70],[1010,94,1068,92,"projectile"],[1010,104,1068,102],[1010,105,1068,103,"abilityName"],[1010,116,1068,114],[1010,118,1068,116],[1010,119,1068,117],[1011,20,1069,18,"setTimeout"],[1011,30,1069,28],[1011,31,1069,29],[1011,37,1069,35],[1012,22,1070,20,"enemiesKilled"],[1012,35,1070,33],[1012,36,1070,34,"forEach"],[1012,43,1070,41],[1012,44,1070,42,"enemy"],[1012,49,1070,47],[1012,53,1070,51,"handleEnemyKill"],[1012,68,1070,66],[1012,69,1070,67,"enemy"],[1012,74,1070,72],[1012,75,1070,73],[1012,76,1070,74],[1013,20,1071,18],[1013,21,1071,19],[1013,23,1071,21],[1013,24,1071,22],[1013,25,1071,23],[1014,18,1072,16],[1015,16,1074,14],[1015,17,1074,15],[1015,23,1074,21],[1016,18,1075,16],[1017,18,1076,16],[1017,22,1076,22,"enemyIndex"],[1017,32,1076,32],[1017,35,1076,35,"newState"],[1017,43,1076,43],[1017,44,1076,44,"enemies"],[1017,51,1076,51],[1017,52,1076,52,"findIndex"],[1017,61,1076,61],[1017,62,1076,62,"e"],[1017,63,1076,63],[1017,67,1076,67,"e"],[1017,68,1076,68],[1017,69,1076,69,"id"],[1017,71,1076,71],[1017,76,1076,76,"projectile"],[1017,86,1076,86],[1017,87,1076,87,"targetEnemyId"],[1017,100,1076,100],[1017,101,1076,101],[1018,18,1078,16],[1018,22,1078,20,"enemyIndex"],[1018,32,1078,30],[1018,36,1078,34],[1018,37,1078,35],[1018,41,1078,39,"newState"],[1018,49,1078,47],[1018,50,1078,48,"enemies"],[1018,57,1078,55],[1018,58,1078,56,"enemyIndex"],[1018,68,1078,66],[1018,69,1078,67],[1018,70,1078,68,"health"],[1018,76,1078,74],[1018,79,1078,77],[1018,80,1078,78],[1018,84,1078,82],[1018,85,1078,83,"newState"],[1018,93,1078,91],[1018,94,1078,92,"enemies"],[1018,101,1078,99],[1018,102,1078,100,"enemyIndex"],[1018,112,1078,110],[1018,113,1078,111],[1018,114,1078,112,"markedForDeath"],[1018,128,1078,126],[1018,130,1078,128],[1019,20,1079,18,"newState"],[1019,28,1079,26],[1019,29,1079,27,"enemies"],[1019,36,1079,34],[1019,39,1079,37],[1019,40,1079,38],[1019,43,1079,41,"newState"],[1019,51,1079,49],[1019,52,1079,50,"enemies"],[1019,59,1079,57],[1019,60,1079,58],[1020,20,1080,18],[1020,24,1080,24,"enemy"],[1020,29,1080,29],[1020,32,1080,32,"newState"],[1020,40,1080,40],[1020,41,1080,41,"enemies"],[1020,48,1080,48],[1020,49,1080,49,"enemyIndex"],[1020,59,1080,59],[1020,60,1080,60],[1021,20,1081,18],[1021,24,1081,24,"newHealth"],[1021,33,1081,33],[1021,36,1081,36,"Math"],[1021,40,1081,40],[1021,41,1081,41,"max"],[1021,44,1081,44],[1021,45,1081,45],[1021,46,1081,46],[1021,48,1081,48,"enemy"],[1021,53,1081,53],[1021,54,1081,54,"health"],[1021,60,1081,60],[1021,63,1081,63,"projectile"],[1021,73,1081,73],[1021,74,1081,74,"damage"],[1021,80,1081,80],[1021,81,1081,81],[1022,20,1083,18,"newState"],[1022,28,1083,26],[1022,29,1083,27,"enemies"],[1022,36,1083,34],[1022,37,1083,35,"enemyIndex"],[1022,47,1083,45],[1022,48,1083,46],[1022,51,1083,49],[1023,22,1084,20],[1023,25,1084,23,"enemy"],[1023,30,1084,28],[1024,22,1085,20,"health"],[1024,28,1085,26],[1024,30,1085,28,"newHealth"],[1024,39,1085,37],[1025,22,1086,20,"lastDamaged"],[1025,33,1086,31],[1025,35,1086,33,"combatEngine"],[1025,54,1086,45],[1025,55,1086,45,"combatEngine"],[1025,67,1086,45],[1025,68,1086,46,"getCurrentTick"],[1025,82,1086,60],[1025,83,1086,61],[1026,20,1087,18],[1026,21,1087,19],[1027,20,1089,18,"console"],[1027,27,1089,25],[1027,28,1089,26,"log"],[1027,31,1089,29],[1027,32,1089,30],[1027,60,1089,58,"enemy"],[1027,65,1089,63],[1027,66,1089,64,"name"],[1027,70,1089,68],[1027,82,1089,80,"newHealth"],[1027,91,1089,89],[1027,95,1089,93,"enemy"],[1027,100,1089,98],[1027,101,1089,99,"maxHealth"],[1027,110,1089,108],[1027,112,1089,110],[1027,113,1089,111],[1029,20,1091,18],[1030,20,1092,18],[1030,24,1092,22,"newHealth"],[1030,33,1092,31],[1030,37,1092,35],[1030,38,1092,36],[1030,42,1092,40,"enemy"],[1030,47,1092,45],[1030,48,1092,46,"health"],[1030,54,1092,52],[1030,57,1092,55],[1030,58,1092,56],[1030,60,1092,58],[1031,22,1093,20,"console"],[1031,29,1093,27],[1031,30,1093,28,"log"],[1031,33,1093,31],[1031,34,1093,32],[1031,60,1093,58,"enemy"],[1031,65,1093,63],[1031,66,1093,64,"name"],[1031,70,1093,68],[1031,84,1093,82,"projectile"],[1031,94,1093,92],[1031,95,1093,93,"abilityName"],[1031,106,1093,104],[1031,109,1093,107],[1031,110,1093,108],[1033,22,1095,20],[1034,22,1096,20,"newState"],[1034,30,1096,28],[1034,31,1096,29,"enemies"],[1034,38,1096,36],[1034,39,1096,37,"enemyIndex"],[1034,49,1096,47],[1034,50,1096,48],[1034,53,1096,51],[1035,24,1097,22],[1035,27,1097,25,"newState"],[1035,35,1097,33],[1035,36,1097,34,"enemies"],[1035,43,1097,41],[1035,44,1097,42,"enemyIndex"],[1035,54,1097,52],[1035,55,1097,53],[1036,24,1098,22,"health"],[1036,30,1098,28],[1036,32,1098,30],[1036,33,1098,31],[1037,24,1099,22,"markedForDeath"],[1037,38,1099,36],[1037,40,1099,38],[1038,22,1100,20],[1038,23,1100,21],[1040,22,1102,20],[1041,22,1103,20,"setTimeout"],[1041,32,1103,30],[1041,33,1103,31],[1041,39,1103,37,"handleEnemyKill"],[1041,54,1103,52],[1041,55,1103,53,"enemy"],[1041,60,1103,58],[1041,61,1103,59],[1041,63,1103,61],[1041,64,1103,62],[1041,65,1103,63],[1042,20,1104,18],[1043,18,1105,16],[1044,16,1106,14],[1045,16,1108,14],[1045,23,1108,21,"newState"],[1045,31,1108,29],[1046,14,1109,12],[1046,15,1109,13],[1046,16,1109,14],[1047,12,1110,10],[1049,12,1112,10],[1050,12,1113,10],[1050,16,1113,14,"progress"],[1050,24,1113,22],[1050,28,1113,26],[1050,31,1113,29],[1050,33,1113,31],[1051,14,1114,12],[1051,21,1114,19],[1051,25,1114,23],[1052,12,1115,10],[1053,12,1117,10],[1053,19,1117,17,"projectile"],[1053,29,1117,27],[1054,10,1118,8],[1054,11,1118,9],[1054,12,1118,10],[1054,13,1118,11,"filter"],[1054,19,1118,17],[1054,20,1118,18,"Boolean"],[1054,27,1118,25],[1054,28,1118,26],[1055,8,1119,6],[1055,9,1119,7],[1055,10,1119,8],[1056,6,1120,4],[1056,7,1120,5],[1058,6,1122,4],[1059,6,1123,4],[1059,10,1123,10,"impactInterval"],[1059,24,1123,24],[1059,27,1123,27,"setInterval"],[1059,38,1123,38],[1059,39,1123,39,"processProjectileImpacts"],[1059,63,1123,63],[1059,65,1123,65],[1059,67,1123,67],[1059,68,1123,68],[1060,6,1124,4],[1060,13,1124,11],[1060,19,1124,17,"clearInterval"],[1060,32,1124,30],[1060,33,1124,31,"impactInterval"],[1060,47,1124,45],[1060,48,1124,46],[1061,4,1125,2],[1061,5,1125,3],[1061,7,1125,5],[1061,8,1125,6,"handleEnemyKill"],[1061,23,1125,21],[1061,24,1125,22],[1061,25,1125,23],[1063,4,1127,2],[1064,4,1128,2],[1064,8,1128,8,"saveAbilityData"],[1064,23,1128,23],[1064,26,1128,26],[1064,30,1128,26,"useCallback"],[1064,36,1128,37],[1064,37,1128,37,"useCallback"],[1064,48,1128,37],[1064,50,1128,38],[1064,56,1128,44],[1065,6,1129,4],[1065,10,1129,8,"combatState"],[1065,21,1129,19],[1065,22,1129,20,"abilityManager"],[1065,36,1129,34],[1065,38,1129,36],[1066,8,1130,6],[1066,12,1130,12,"abilityData"],[1066,23,1130,23],[1066,26,1130,26,"combatState"],[1066,37,1130,37],[1066,38,1130,38,"abilityManager"],[1066,52,1130,52],[1066,53,1130,53,"getSaveData"],[1066,64,1130,64],[1066,65,1130,65],[1066,66,1130,66],[1067,8,1131,6,"console"],[1067,15,1131,13],[1067,16,1131,14,"log"],[1067,19,1131,17],[1067,20,1131,18],[1067,70,1131,68],[1067,72,1131,70,"abilityData"],[1067,83,1131,81],[1067,84,1131,82],[1068,8,1132,6,"game"],[1068,12,1132,10],[1068,13,1132,11,"updateAbilityData"],[1068,30,1132,28],[1068,31,1132,29,"abilityData"],[1068,42,1132,40],[1068,43,1132,41],[1069,6,1133,4],[1070,4,1134,2],[1070,5,1134,3],[1070,7,1134,5],[1070,8,1134,6,"combatState"],[1070,19,1134,17],[1070,20,1134,18,"abilityManager"],[1070,34,1134,32],[1070,36,1134,34,"game"],[1070,40,1134,38],[1070,41,1134,39,"updateAbilityData"],[1070,58,1134,56],[1070,59,1134,57],[1070,60,1134,58],[1071,4,1136,2],[1071,8,1136,8,"contextValue"],[1071,20,1136,39],[1071,23,1136,42,"React"],[1071,28,1136,47],[1071,29,1136,47,"default"],[1071,36,1136,47],[1071,37,1136,48,"useMemo"],[1071,44,1136,55],[1071,45,1136,56],[1071,52,1136,63],[1072,6,1137,4,"combatState"],[1072,17,1137,15],[1073,6,1138,4,"projectiles"],[1073,17,1138,15],[1074,6,1139,4,"startCombat"],[1074,17,1139,15],[1075,6,1140,4,"stopCombat"],[1075,16,1140,14],[1076,6,1141,4,"equipAbility"],[1076,18,1141,16],[1077,6,1142,4,"handleEnemyKill"],[1077,21,1142,19],[1078,6,1143,4,"getDeck"],[1078,13,1143,11],[1079,6,1144,4,"getAvailableAbilities"],[1079,27,1144,25],[1080,6,1145,4,"upgradeAbility"],[1080,20,1145,18],[1081,6,1146,4,"spawnEnemy"],[1081,16,1146,14],[1082,6,1147,4,"spawnBoss"],[1082,15,1147,13],[1083,6,1148,4,"clearAllEnemies"],[1083,21,1148,19],[1084,6,1149,4,"clearSpecificEnemy"],[1084,24,1149,22],[1085,6,1150,4,"triggerLevelUpExplosion"],[1085,29,1150,27],[1086,6,1151,4,"findClosestEnemy"],[1086,22,1151,20],[1087,6,1152,4,"updateNinjaPosition"],[1087,25,1152,23],[1088,6,1153,4,"setManualControlActive"],[1088,28,1153,26],[1089,6,1154,4,"lastExplosionTime"],[1089,23,1154,21],[1090,6,1155,4,"useAbilityManually"],[1090,24,1155,22],[1091,6,1155,24],[1092,6,1156,4,"saveAbilityData"],[1092,21,1156,19],[1093,6,1156,21],[1094,6,1157,4,"shadowClone"],[1094,17,1157,15],[1094,19,1157,17,"combatState"],[1094,30,1157,28],[1094,31,1157,29,"shadowClone"],[1094,42,1157,40],[1094,43,1157,42],[1095,4,1158,2],[1095,5,1158,3],[1095,6,1158,4],[1095,8,1158,6],[1096,4,1159,4],[1097,4,1160,4],[1098,4,1161,4,"combatState"],[1098,15,1161,15],[1098,17,1162,4,"projectiles"],[1098,28,1162,15],[1098,30,1163,4,"lastExplosionTime"],[1098,47,1163,21],[1099,4,1164,4],[1100,4,1165,4,"combatState"],[1100,15,1165,15],[1100,16,1165,16,"abilityManager"],[1100,30,1165,30],[1100,32,1166,4,"combatState"],[1100,43,1166,15],[1100,44,1166,16,"enemies"],[1100,51,1166,23],[1100,53,1167,4,"combatState"],[1100,64,1167,15],[1100,65,1167,16,"shadowClone"],[1100,76,1167,27],[1101,4,1167,29],[1102,4,1168,4,"useAbilityManually"],[1102,22,1168,22],[1103,4,1168,24],[1104,4,1169,4,"saveAbilityData"],[1104,19,1169,19],[1104,20,1169,21],[1105,4,1169,21],[1105,5,1170,3],[1105,6,1170,4],[1106,4,1172,2],[1106,24,1173,4],[1106,28,1173,4,"_reactJsxDevRuntime"],[1106,47,1173,4],[1106,48,1173,4,"jsxDEV"],[1106,54,1173,4],[1106,56,1173,5,"CombatContext"],[1106,69,1173,18],[1106,70,1173,19,"Provider"],[1106,78,1173,27],[1107,6,1173,28,"value"],[1107,11,1173,33],[1107,13,1173,35,"contextValue"],[1107,25,1173,48],[1108,6,1173,48,"children"],[1108,14,1173,48],[1108,16,1174,7,"children"],[1109,4,1174,15],[1110,6,1174,15,"fileName"],[1110,14,1174,15],[1110,16,1174,15,"_jsxFileName"],[1110,28,1174,15],[1111,6,1174,15,"lineNumber"],[1111,16,1174,15],[1112,6,1174,15,"columnNumber"],[1112,18,1174,15],[1113,4,1174,15],[1113,11,1175,28],[1113,12,1175,29],[1114,2,1177,0],[1114,3,1177,1],[1115,2,1177,2,"_s4"],[1115,5,1177,2],[1115,6,103,13,"CombatProvider"],[1115,20,103,27],[1116,4,103,27],[1116,12,104,15,"useGame"],[1116,24,104,22],[1116,25,104,22,"useGame"],[1116,32,104,22],[1116,34,105,77,"useZone"],[1116,46,105,84],[1116,47,105,84,"useZone"],[1116,54,105,84],[1117,2,105,84],[1118,2,105,84,"_c"],[1118,4,105,84],[1118,7,103,13,"CombatProvider"],[1118,21,103,27],[1119,2,103,27],[1119,6,103,27,"_c"],[1119,8,103,27],[1120,2,103,27,"$RefreshReg$"],[1120,14,103,27],[1120,15,103,27,"_c"],[1120,17,103,27],[1121,0,103,27],[1121,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;6BG0C;SHO;sBIG;OJU;GxBoB;2B6BG;mBPyC,6BO;ezBG;KyBE;G7BG;yB8BG;G9BsC;8B+BG;G/B4B;wCgCG;mB9BE,uC8B;GhCQ;uCiCG;mB/BC,wC+B;GjCE;uBkCG;GlCE;kBmCE;GnCE;gCoCE;GpCE;yBqCE;GrCE;0BsCG;mBpCE;MoCG;GtCC;kCuCG;mBrCM;mBEU;2BCC;YDG;SFC;8CsCK;QtCI;KqCM;GvCC;qByCG;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C4B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBzBC;sC0BC;2B9Ca;wD+CY;iB/CmC;6BEK;0C8CC,+B9C;mBFC;8DMK,sCN;+BE2B,4BF;a8CM;S1BS;OyBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}