{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // Initialize ninja position to match game's starting position (center of map)\n    var SCREEN_WIDTH = 390;\n    var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    var NINJA_SIZE = 40;\n    var _useState7 = (0, _react.useState)({\n        x: (SCREEN_WIDTH - NINJA_SIZE) / 2,\n        // Center horizontally\n        y: (GAME_AREA_HEIGHT - NINJA_SIZE) / 2 // Center vertically\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      ninjaPosition = _useState8[0],\n      setNinjaPosition = _useState8[1];\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            var MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            var _SCREEN_WIDTH = 390;\n            var _GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            var newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            var newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= _SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(_SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= _GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(_GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (var i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    var updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"FsaD8NgS44PK3K5AiU/ZHpy2ixg=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":615,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,624,2],[27,6,624,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,624,2],[27,42,624,2,"require"],[27,49,624,2],[27,50,624,2,"_dependencyMap"],[27,64,624,2],[28,2,624,2],[28,6,624,2,"_slicedToArray"],[28,20,624,2],[28,23,624,2,"_interopDefault"],[28,38,624,2],[28,39,624,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,624,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,65,0],[36,6,65,6,"CombatContext"],[36,19,65,19],[36,35,65,22],[36,39,65,22,"createContext"],[36,45,65,35],[36,46,65,35,"createContext"],[36,59,65,35],[36,61,65,67,"undefined"],[36,70,65,76],[36,71,65,77],[37,2,67,7],[37,6,67,13,"useCombat"],[37,15,67,22],[37,18,67,25,"useCombat"],[37,19,67,25],[37,24,67,50],[38,4,67,50,"_s"],[38,6,67,50],[39,4,68,2],[39,8,68,8,"context"],[39,15,68,15],[39,18,68,18],[39,22,68,18,"useContext"],[39,28,68,28],[39,29,68,28,"useContext"],[39,39,68,28],[39,41,68,29,"CombatContext"],[39,54,68,42],[39,55,68,43],[40,4,69,2],[40,8,69,6],[40,9,69,7,"context"],[40,16,69,14],[40,18,69,16],[41,6,70,4],[41,12,70,10],[41,16,70,14,"Error"],[41,21,70,19],[41,22,70,20],[41,70,70,68],[41,71,70,69],[42,4,71,2],[43,4,72,2],[43,11,72,9,"context"],[43,18,72,16],[44,2,73,0],[44,3,73,1],[45,2,73,2,"_s"],[45,4,73,2],[45,5,67,13,"useCombat"],[45,14,67,22],[46,2,75,0],[46,6,75,4,"enemyCounter"],[46,18,75,16],[46,21,75,19],[46,22,75,20],[46,23,75,21],[46,24,75,22],[48,2,77,7],[48,6,77,13,"CombatProvider"],[48,20,77,27],[48,23,77,30,"_ref"],[48,27,77,30],[48,31,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,77,73],[50,8,77,33,"children"],[50,16,77,41],[50,19,77,41,"_ref"],[50,23,77,41],[50,24,77,33,"children"],[50,32,77,41],[51,4,78,2],[51,8,78,2,"_useGame"],[51,16,78,2],[51,19,78,26],[51,23,78,26,"useGame"],[51,35,78,33],[51,36,78,33,"useGame"],[51,43,78,33],[51,45,78,34],[51,46,78,35],[52,6,78,10,"updateNinja"],[52,17,78,21],[52,20,78,21,"_useGame"],[52,28,78,21],[52,29,78,10,"updateNinja"],[52,40,78,21],[53,4,79,2],[53,8,79,2,"_useZone"],[53,16,79,2],[53,19,79,30],[53,23,79,30,"useZone"],[53,35,79,37],[53,36,79,37,"useZone"],[53,43,79,37],[53,45,79,38],[53,46,79,39],[54,6,79,10,"recordEnemyKill"],[54,21,79,25],[54,24,79,25,"_useZone"],[54,32,79,25],[54,33,79,10,"recordEnemyKill"],[54,48,79,25],[55,4,81,2],[55,8,81,2,"_useState"],[55,17,81,2],[55,20,81,40],[55,24,81,40,"useState"],[55,30,81,48],[55,31,81,48,"useState"],[55,39,81,48],[55,41,81,62],[56,8,82,4,"isInCombat"],[56,18,82,14],[56,20,82,16],[56,25,82,21],[57,8,83,4,"currentTick"],[57,19,83,15],[57,21,83,17],[57,22,83,18],[58,8,84,4,"enemies"],[58,15,84,11],[58,17,84,13],[58,19,84,15],[59,8,85,4,"abilityManager"],[59,22,85,18],[59,24,85,20],[59,28,85,24,"AbilityManager"],[59,46,85,38],[59,47,85,38,"AbilityManager"],[59,61,85,38],[59,62,85,39],[59,63,85,40],[60,8,86,4,"statusEffects"],[60,21,86,17],[60,23,86,19],[60,27,86,23,"StatusEffectManager"],[60,46,86,42],[60,47,86,42,"StatusEffectManager"],[60,66,86,42],[60,67,86,43],[60,68,86,44],[61,8,87,4,"playerStats"],[61,19,87,15],[61,21,87,17],[62,10,88,6,"attack"],[62,16,88,12],[62,18,88,14],[62,20,88,16],[63,10,88,18],[64,10,89,6,"defense"],[64,17,89,13],[64,19,89,15],[64,20,89,16],[65,10,90,6,"health"],[65,16,90,12],[65,18,90,14],[65,21,90,17],[66,10,91,6,"maxHealth"],[66,19,91,15],[66,21,91,17],[66,24,91,20],[67,10,92,6,"critChance"],[67,20,92,16],[67,22,92,18],[67,23,92,19],[68,10,93,6,"critDamage"],[68,20,93,16],[68,22,93,18],[68,25,93,21],[69,10,94,6,"cooldownReduction"],[69,27,94,23],[69,29,94,25],[70,8,95,4],[71,6,96,2],[71,7,96,3],[71,8,96,4],[72,6,96,4,"_useState2"],[72,16,96,4],[72,23,96,4,"_slicedToArray"],[72,37,96,4],[72,38,96,4,"default"],[72,45,96,4],[72,47,96,4,"_useState"],[72,56,96,4],[73,6,81,9,"combatState"],[73,17,81,20],[73,20,81,20,"_useState2"],[73,30,81,20],[74,6,81,22,"setCombatState"],[74,20,81,36],[74,23,81,36,"_useState2"],[74,33,81,36],[75,4,98,2],[75,8,98,2,"_useState3"],[75,18,98,2],[75,21,98,40],[75,25,98,40,"useState"],[75,31,98,48],[75,32,98,48,"useState"],[75,40,98,48],[75,42,98,69],[75,44,98,71],[75,45,98,72],[76,6,98,72,"_useState4"],[76,16,98,72],[76,23,98,72,"_slicedToArray"],[76,37,98,72],[76,38,98,72,"default"],[76,45,98,72],[76,47,98,72,"_useState3"],[76,57,98,72],[77,6,98,9,"projectiles"],[77,17,98,20],[77,20,98,20,"_useState4"],[77,30,98,20],[78,6,98,22,"setProjectiles"],[78,20,98,36],[78,23,98,36,"_useState4"],[78,33,98,36],[79,4,99,2],[79,8,99,2,"_useState5"],[79,18,99,2],[79,21,99,52],[79,25,99,52,"useState"],[79,31,99,60],[79,32,99,60,"useState"],[79,40,99,60],[79,42,99,69],[79,43,99,70],[79,44,99,71],[80,6,99,71,"_useState6"],[80,16,99,71],[80,23,99,71,"_slicedToArray"],[80,37,99,71],[80,38,99,71,"default"],[80,45,99,71],[80,47,99,71,"_useState5"],[80,57,99,71],[81,6,99,9,"lastExplosionTime"],[81,23,99,26],[81,26,99,26,"_useState6"],[81,36,99,26],[82,6,99,28,"setLastExplosionTime"],[82,26,99,48],[82,29,99,48,"_useState6"],[82,39,99,48],[83,4,100,2],[84,4,101,2],[84,8,101,8,"SCREEN_WIDTH"],[84,20,101,20],[84,23,101,23],[84,26,101,26],[85,4,102,2],[85,8,102,8,"GAME_AREA_HEIGHT"],[85,24,102,24],[85,27,102,27],[85,30,102,30],[85,33,102,33],[85,36,102,36],[85,37,102,37],[85,38,102,38],[86,4,103,2],[86,8,103,8,"NINJA_SIZE"],[86,18,103,18],[86,21,103,21],[86,23,103,23],[87,4,104,2],[87,8,104,2,"_useState7"],[87,18,104,2],[87,21,104,44],[87,25,104,44,"useState"],[87,31,104,52],[87,32,104,52,"useState"],[87,40,104,52],[87,42,104,77],[88,8,105,4,"x"],[88,9,105,5],[88,11,105,7],[88,12,105,8,"SCREEN_WIDTH"],[88,24,105,20],[88,27,105,23,"NINJA_SIZE"],[88,37,105,33],[88,41,105,37],[88,42,105,38],[89,8,105,40],[90,8,106,4,"y"],[90,9,106,5],[90,11,106,7],[90,12,106,8,"GAME_AREA_HEIGHT"],[90,28,106,24],[90,31,106,27,"NINJA_SIZE"],[90,41,106,37],[90,45,106,41],[90,46,106,42],[90,47,106,43],[91,6,107,2],[91,7,107,3],[91,8,107,4],[92,6,107,4,"_useState8"],[92,16,107,4],[92,23,107,4,"_slicedToArray"],[92,37,107,4],[92,38,107,4,"default"],[92,45,107,4],[92,47,107,4,"_useState7"],[92,57,107,4],[93,6,104,9,"ninjaPosition"],[93,19,104,22],[93,22,104,22,"_useState8"],[93,32,104,22],[94,6,104,24,"setNinjaPosition"],[94,22,104,40],[94,25,104,40,"_useState8"],[94,35,104,40],[96,4,109,2],[97,4,110,2],[97,8,110,8,"handleEnemyKill"],[97,23,110,23],[97,26,110,26],[97,30,110,26,"useCallback"],[97,36,110,37],[97,37,110,37,"useCallback"],[97,48,110,37],[97,50,110,39,"enemy"],[97,55,110,57],[97,59,110,62],[98,6,111,4,"console"],[98,13,111,11],[98,14,111,12,"log"],[98,17,111,15],[98,18,111,16],[98,46,111,44,"enemy"],[98,51,111,49],[98,52,111,50,"maxHealth"],[98,61,111,59],[98,63,111,61],[98,64,111,62],[100,6,113,4],[101,6,114,4],[101,10,114,10,"xpReward"],[101,18,114,18],[101,21,114,21],[101,23,114,23],[101,24,114,24],[101,25,114,25],[102,6,115,4],[102,10,115,10,"goldReward"],[102,20,115,20],[102,23,115,23],[102,25,115,25],[103,6,117,4,"console"],[103,13,117,11],[103,14,117,12,"log"],[103,17,117,15],[103,18,117,16],[103,33,117,31,"xpReward"],[103,41,117,39],[103,52,117,50,"goldReward"],[103,62,117,60],[103,78,117,76],[103,79,117,77],[105,6,119,4],[106,6,120,4],[107,6,121,4,"setTimeout"],[107,16,121,14],[107,17,121,15],[107,23,121,21],[108,8,122,6],[109,8,123,6,"updateNinja"],[109,19,123,17],[109,20,123,19,"prev"],[109,24,123,23],[109,28,123,28],[110,10,124,8,"console"],[110,17,124,15],[110,18,124,16,"log"],[110,21,124,19],[110,22,124,20],[110,39,124,37,"prev"],[110,43,124,41],[110,44,124,42,"experience"],[110,54,124,52],[110,66,124,64,"prev"],[110,70,124,68],[110,71,124,69,"experience"],[110,81,124,79],[110,84,124,82,"xpReward"],[110,92,124,90],[110,94,124,92],[110,95,124,93],[111,10,125,8],[111,17,125,15],[112,12,126,10,"experience"],[112,22,126,20],[112,24,126,22,"prev"],[112,28,126,26],[112,29,126,27,"experience"],[112,39,126,37],[112,42,126,40,"xpReward"],[112,50,126,48],[113,12,127,10,"gold"],[113,16,127,14],[113,18,127,16,"prev"],[113,22,127,20],[113,23,127,21,"gold"],[113,27,127,25],[113,30,127,28,"goldReward"],[114,10,128,8],[114,11,128,9],[115,8,129,6],[115,9,129,7],[115,10,129,8],[117,8,131,6],[118,8,132,6],[118,12,132,12,"zoneEnemy"],[118,21,132,21],[118,24,132,24],[119,10,133,8,"id"],[119,12,133,10],[119,14,133,12,"enemy"],[119,19,133,17],[119,20,133,18,"id"],[119,22,133,20],[120,10,134,8,"typeId"],[120,16,134,14],[120,18,134,16],[120,28,134,26],[121,10,134,28],[122,10,135,8,"name"],[122,14,135,12],[122,16,135,14,"enemy"],[122,21,135,19],[122,22,135,20,"name"],[122,26,135,24],[123,10,136,8,"icon"],[123,14,136,12],[123,16,136,14],[123,20,136,18],[124,10,136,20],[125,10,137,8,"hp"],[125,12,137,10],[125,14,137,12],[125,15,137,13],[126,10,137,15],[127,10,138,8,"maxHP"],[127,15,138,13],[127,17,138,15,"enemy"],[127,22,138,20],[127,23,138,21,"maxHealth"],[127,32,138,30],[128,10,139,8,"attack"],[128,16,139,14],[128,18,139,16,"enemy"],[128,23,139,21],[128,24,139,22,"stats"],[128,29,139,27],[128,30,139,28,"attack"],[128,36,139,34],[129,10,140,8,"xp"],[129,12,140,10],[129,14,140,12],[129,16,140,14],[130,10,140,16],[131,10,141,8,"position"],[131,18,141,16],[131,20,141,18,"enemy"],[131,25,141,23],[131,26,141,24,"position"],[132,8,142,6],[132,9,142,7],[133,8,143,6,"recordEnemyKill"],[133,23,143,21],[133,24,143,22,"zoneEnemy"],[133,33,143,31],[133,34,143,32],[134,6,144,4],[134,7,144,5],[134,9,144,7],[134,10,144,8],[134,11,144,9],[134,12,144,10],[134,13,144,11],[135,4,145,2],[135,5,145,3],[135,7,145,5],[135,8,145,6,"updateNinja"],[135,19,145,17],[135,21,145,19,"recordEnemyKill"],[135,36,145,34],[135,37,145,35],[135,38,145,36],[137,4,147,2],[138,4,148,2],[138,8,148,8,"handleCombatTick"],[138,24,148,24],[138,27,148,27,"React"],[138,32,148,32],[138,33,148,32,"default"],[138,40,148,32],[138,41,148,33,"useCallback"],[138,52,148,44],[138,53,148,45],[138,59,148,51],[139,6,148,51],[139,10,148,51,"_s2"],[139,13,148,51],[139,16,148,51,"$RefreshSig$"],[139,28,148,51],[140,6,149,4,"console"],[140,13,149,11],[140,14,149,12,"log"],[140,17,149,15],[140,18,149,16],[140,45,149,43],[140,46,149,44],[141,6,151,4],[141,10,151,8,"enemiesToKill"],[141,23,151,36],[141,26,151,39],[141,28,151,41],[141,29,151,42],[141,30,151,43],[143,6,153,4,"_s2"],[143,9,153,4],[143,10,153,4,"setCombatState"],[143,24,153,18],[143,25,153,18,"_s2"],[143,28,153,18],[143,29,153,19,"prev"],[143,33,153,23],[143,37,153,27],[144,8,153,27,"_s2"],[144,11,153,27],[145,8,154,6],[145,12,154,12,"newTick"],[145,19,154,19],[145,22,154,22,"combatEngine"],[145,41,154,34],[145,42,154,34,"combatEngine"],[145,54,154,34],[145,55,154,35,"getCurrentTick"],[145,69,154,49],[145,70,154,50],[145,71,154,51],[146,8,155,6],[146,12,155,12,"newState"],[146,20,155,20],[146,23,155,23],[147,10,155,25],[147,13,155,28,"prev"],[147,17,155,32],[148,10,155,34,"currentTick"],[148,21,155,45],[148,23,155,47,"newTick"],[149,8,155,55],[149,9,155,56],[150,8,157,6],[150,12,157,10],[150,13,157,11,"newState"],[150,21,157,19],[150,22,157,20,"isInCombat"],[150,32,157,30],[150,34,157,32],[150,41,157,39,"newState"],[150,49,157,47],[152,8,159,6],[153,8,160,6,"newState"],[153,16,160,14],[153,17,160,15,"abilityManager"],[153,31,160,29],[153,32,160,30,"updateCooldowns"],[153,47,160,45],[153,48,160,46,"newTick"],[153,55,160,53],[153,56,160,54],[155,8,162,6],[156,8,163,6],[156,12,163,12,"effectResults"],[156,25,163,25],[156,28,163,28,"newState"],[156,36,163,36],[156,37,163,37,"statusEffects"],[156,50,163,50],[156,51,163,51,"processTick"],[156,62,163,62],[156,63,163,63,"newTick"],[156,70,163,70],[156,71,163,71],[158,8,165,6],[159,8,166,6,"effectResults"],[159,21,166,19],[159,22,166,20,"forEach"],[159,29,166,27],[159,30,166,28],[159,31,166,29,"results"],[159,38,166,36],[159,40,166,38,"entityId"],[159,48,166,46],[159,53,166,51],[160,10,167,8],[160,14,167,14,"enemyIndex"],[160,24,167,24],[160,27,167,27,"newState"],[160,35,167,35],[160,36,167,36,"enemies"],[160,43,167,43],[160,44,167,44,"findIndex"],[160,53,167,53],[160,54,167,54,"e"],[160,55,167,55],[160,59,167,59,"e"],[160,60,167,60],[160,61,167,61,"id"],[160,63,167,63],[160,68,167,68,"entityId"],[160,76,167,76],[160,77,167,77],[161,10,168,8],[161,14,168,12,"enemyIndex"],[161,24,168,22],[161,28,168,26],[161,29,168,27],[161,31,168,29],[162,12,169,10,"results"],[162,19,169,17],[162,20,169,18,"forEach"],[162,27,169,25],[162,28,169,26,"result"],[162,34,169,32],[162,38,169,36],[163,14,170,12,"newState"],[163,22,170,20],[163,23,170,21,"enemies"],[163,30,170,28],[163,31,170,29,"enemyIndex"],[163,41,170,39],[163,42,170,40],[163,43,170,41,"health"],[163,49,170,47],[163,53,170,51,"result"],[163,59,170,57],[163,60,170,58,"damage"],[163,66,170,64],[164,14,171,12,"newState"],[164,22,171,20],[164,23,171,21,"enemies"],[164,30,171,28],[164,31,171,29,"enemyIndex"],[164,41,171,39],[164,42,171,40],[164,43,171,41,"lastDamaged"],[164,54,171,52],[164,57,171,55,"newTick"],[164,64,171,62],[165,12,172,10],[165,13,172,11],[165,14,172,12],[166,10,173,8],[167,8,174,6],[167,9,174,7],[167,10,174,8],[169,8,176,6],[170,8,177,6,"newState"],[170,16,177,14],[170,17,177,15,"enemies"],[170,24,177,22],[170,25,177,23,"forEach"],[170,32,177,30],[170,33,177,31,"enemy"],[170,38,177,36],[170,42,177,40],[171,10,178,8],[171,14,178,12],[171,15,178,13,"enemy"],[171,20,178,18],[171,21,178,19,"isBoss"],[171,27,178,25],[171,29,178,27],[172,12,178,29],[173,12,179,10],[174,12,180,10],[174,16,180,16,"MOVEMENT_SPEED"],[174,30,180,30],[174,33,180,33],[174,36,180,36],[174,37,180,37],[174,38,180,38],[175,12,181,10],[175,16,181,16,"SCREEN_WIDTH"],[175,29,181,28],[175,32,181,31],[175,35,181,34],[176,12,182,10],[176,16,182,16,"GAME_AREA_HEIGHT"],[176,33,182,32],[176,36,182,35],[176,39,182,38],[176,40,182,39],[176,41,182,40],[177,12,183,10],[177,16,183,16,"ENEMY_SIZE"],[177,26,183,26],[177,29,183,29],[177,31,183,31],[179,12,185,10],[180,12,186,10],[180,16,186,14],[180,17,186,15,"enemy"],[180,22,186,20],[180,23,186,21,"movementDirection"],[180,40,186,38],[180,42,186,40],[181,14,187,12],[182,14,188,12,"enemy"],[182,19,188,17],[182,20,188,18,"movementDirection"],[182,37,188,35],[182,40,188,38],[183,16,189,14,"x"],[183,17,189,15],[183,19,189,17],[183,20,189,18,"Math"],[183,24,189,22],[183,25,189,23,"random"],[183,31,189,29],[183,32,189,30],[183,33,189,31],[183,36,189,34],[183,39,189,37],[183,43,189,41],[183,44,189,42],[184,16,189,44],[185,16,190,14,"y"],[185,17,190,15],[185,19,190,17],[185,20,190,18,"Math"],[185,24,190,22],[185,25,190,23,"random"],[185,31,190,29],[185,32,190,30],[185,33,190,31],[185,36,190,34],[185,39,190,37],[185,43,190,41],[186,14,191,12],[186,15,191,13],[187,12,192,10],[189,12,194,10],[190,12,195,10],[190,16,195,14,"newX"],[190,20,195,18],[190,23,195,21,"enemy"],[190,28,195,26],[190,29,195,27,"position"],[190,37,195,35],[190,38,195,36,"x"],[190,39,195,37],[190,42,195,41,"enemy"],[190,47,195,46],[190,48,195,47,"movementDirection"],[190,65,195,64],[190,66,195,65,"x"],[190,67,195,66],[190,70,195,69,"MOVEMENT_SPEED"],[190,84,195,84],[191,12,196,10],[191,16,196,14,"newY"],[191,20,196,18],[191,23,196,21,"enemy"],[191,28,196,26],[191,29,196,27,"position"],[191,37,196,35],[191,38,196,36,"y"],[191,39,196,37],[191,42,196,41,"enemy"],[191,47,196,46],[191,48,196,47,"movementDirection"],[191,65,196,64],[191,66,196,65,"y"],[191,67,196,66],[191,70,196,69,"MOVEMENT_SPEED"],[191,84,196,84],[193,12,198,10],[194,12,199,10],[194,16,199,14,"newX"],[194,20,199,18],[194,24,199,22],[194,25,199,23],[194,29,199,27,"newX"],[194,33,199,31],[194,37,199,35,"SCREEN_WIDTH"],[194,50,199,47],[194,53,199,50,"ENEMY_SIZE"],[194,63,199,60],[194,65,199,62],[195,14,200,12,"enemy"],[195,19,200,17],[195,20,200,18,"movementDirection"],[195,37,200,35],[195,38,200,36,"x"],[195,39,200,37],[195,43,200,41],[195,44,200,42],[195,45,200,43],[196,14,201,12,"newX"],[196,18,201,16],[196,21,201,19,"Math"],[196,25,201,23],[196,26,201,24,"max"],[196,29,201,27],[196,30,201,28],[196,31,201,29],[196,33,201,31,"Math"],[196,37,201,35],[196,38,201,36,"min"],[196,41,201,39],[196,42,201,40,"SCREEN_WIDTH"],[196,55,201,52],[196,58,201,55,"ENEMY_SIZE"],[196,68,201,65],[196,70,201,67,"newX"],[196,74,201,71],[196,75,201,72],[196,76,201,73],[197,12,202,10],[198,12,203,10],[198,16,203,14,"newY"],[198,20,203,18],[198,24,203,22],[198,25,203,23],[198,29,203,27,"newY"],[198,33,203,31],[198,37,203,35,"GAME_AREA_HEIGHT"],[198,54,203,51],[198,57,203,54,"ENEMY_SIZE"],[198,67,203,64],[198,69,203,66],[199,14,204,12,"enemy"],[199,19,204,17],[199,20,204,18,"movementDirection"],[199,37,204,35],[199,38,204,36,"y"],[199,39,204,37],[199,43,204,41],[199,44,204,42],[199,45,204,43],[200,14,205,12,"newY"],[200,18,205,16],[200,21,205,19,"Math"],[200,25,205,23],[200,26,205,24,"max"],[200,29,205,27],[200,30,205,28],[200,31,205,29],[200,33,205,31,"Math"],[200,37,205,35],[200,38,205,36,"min"],[200,41,205,39],[200,42,205,40,"GAME_AREA_HEIGHT"],[200,59,205,56],[200,62,205,59,"ENEMY_SIZE"],[200,72,205,69],[200,74,205,71,"newY"],[200,78,205,75],[200,79,205,76],[200,80,205,77],[201,12,206,10],[203,12,208,10],[204,12,209,10,"enemy"],[204,17,209,15],[204,18,209,16,"position"],[204,26,209,24],[204,27,209,25,"x"],[204,28,209,26],[204,31,209,29,"newX"],[204,35,209,33],[205,12,210,10,"enemy"],[205,17,210,15],[205,18,210,16,"position"],[205,26,210,24],[205,27,210,25,"y"],[205,28,210,26],[205,31,210,29,"newY"],[205,35,210,33],[207,12,212,10],[208,12,213,10],[208,16,213,14,"Math"],[208,20,213,18],[208,21,213,19,"random"],[208,27,213,25],[208,28,213,26],[208,29,213,27],[208,32,213,30],[208,36,213,34],[208,38,213,36],[209,14,213,38],[210,14,214,12,"enemy"],[210,19,214,17],[210,20,214,18,"movementDirection"],[210,37,214,35],[210,40,214,38],[211,16,215,14,"x"],[211,17,215,15],[211,19,215,17],[211,20,215,18,"Math"],[211,24,215,22],[211,25,215,23,"random"],[211,31,215,29],[211,32,215,30],[211,33,215,31],[211,36,215,34],[211,39,215,37],[211,43,215,41],[211,44,215,42],[212,16,216,14,"y"],[212,17,216,15],[212,19,216,17],[212,20,216,18,"Math"],[212,24,216,22],[212,25,216,23,"random"],[212,31,216,29],[212,32,216,30],[212,33,216,31],[212,36,216,34],[212,39,216,37],[212,43,216,41],[213,14,217,12],[213,15,217,13],[214,12,218,10],[215,10,219,8],[216,8,220,6],[216,9,220,7],[216,10,220,8],[218,8,222,6],[219,8,223,6],[219,13,223,11],[219,17,223,15,"i"],[219,18,223,16],[219,21,223,19],[219,22,223,20],[219,24,223,22,"i"],[219,25,223,23],[219,28,223,26],[219,29,223,27],[219,31,223,29,"i"],[219,32,223,30],[219,34,223,32],[219,36,223,34],[220,10,224,8],[220,14,224,12,"newState"],[220,22,224,20],[220,23,224,21,"abilityManager"],[220,37,224,35],[220,38,224,36,"isAbilityReady"],[220,52,224,50],[220,53,224,51,"i"],[220,54,224,52],[220,55,224,53],[220,59,224,57,"newState"],[220,67,224,65],[220,68,224,66,"enemies"],[220,75,224,73],[220,76,224,74,"length"],[220,82,224,80],[220,85,224,83],[220,86,224,84],[220,88,224,86],[221,12,225,10],[221,16,225,14,"newState"],[221,24,225,22],[221,25,225,23,"abilityManager"],[221,39,225,37],[221,40,225,38,"useAbility"],[221,50,225,48],[221,51,225,49,"i"],[221,52,225,50],[221,54,225,52,"newTick"],[221,61,225,59],[221,62,225,60],[221,64,225,62],[222,14,226,12,"castAbility"],[222,25,226,23],[222,26,226,24,"newState"],[222,34,226,32],[222,36,226,34,"i"],[222,37,226,35],[222,38,226,36],[223,12,227,10],[224,10,228,8],[225,8,229,6],[227,8,231,6],[228,8,232,6],[228,12,232,12,"deadEnemies"],[228,23,232,23],[228,26,232,26,"newState"],[228,34,232,34],[228,35,232,35,"enemies"],[228,42,232,42],[228,43,232,43,"filter"],[228,49,232,49],[228,50,232,50,"enemy"],[228,55,232,55],[228,59,232,59,"enemy"],[228,64,232,64],[228,65,232,65,"health"],[228,71,232,71],[228,75,232,75],[228,76,232,76],[228,77,232,77],[229,8,233,6,"enemiesToKill"],[229,21,233,19],[229,24,233,22],[229,25,233,23],[229,28,233,26,"deadEnemies"],[229,39,233,37],[229,40,233,38],[229,41,233,39],[229,42,233,40],[231,8,235,6],[232,8,236,6,"newState"],[232,16,236,14],[232,17,236,15,"enemies"],[232,24,236,22],[232,27,236,25,"newState"],[232,35,236,33],[232,36,236,34,"enemies"],[232,43,236,41],[232,44,236,42,"filter"],[232,50,236,48],[232,51,236,49,"enemy"],[232,56,236,54],[232,60,236,58,"enemy"],[232,65,236,63],[232,66,236,64,"health"],[232,72,236,70],[232,75,236,73],[232,76,236,74],[232,77,236,75],[234,8,238,6],[235,8,239,6],[236,8,240,6],[236,12,240,12,"MAX_ENEMIES"],[236,23,240,23],[236,26,240,26],[236,28,240,28],[237,8,241,6],[237,12,241,12,"MIN_SPAWN_DELAY"],[237,27,241,27],[237,30,241,30],[237,33,241,33],[237,34,241,34],[237,35,241,35],[238,8,242,6],[238,12,242,12,"now"],[238,15,242,15],[238,18,242,18,"Date"],[238,22,242,22],[238,23,242,23,"now"],[238,26,242,26],[238,27,242,27],[238,28,242,28],[239,8,243,6],[239,12,243,12,"hasBoss"],[239,19,243,19],[239,22,243,22,"newState"],[239,30,243,30],[239,31,243,31,"enemies"],[239,38,243,38],[239,39,243,39,"some"],[239,43,243,43],[239,44,243,44,"enemy"],[239,49,243,49],[239,53,243,53,"enemy"],[239,58,243,58],[239,59,243,59,"isBoss"],[239,65,243,65],[239,66,243,66],[241,8,245,6],[242,8,246,6],[242,12,246,10],[242,13,246,11,"newState"],[242,21,246,19],[242,22,246,20,"lastSpawnTime"],[242,35,246,33],[242,37,246,35],[243,10,247,8,"newState"],[243,18,247,16],[243,19,247,17,"lastSpawnTime"],[243,32,247,30],[243,35,247,33,"now"],[243,38,247,36],[244,8,248,6],[245,8,250,6,"console"],[245,15,250,13],[245,16,250,14,"log"],[245,19,250,17],[245,20,250,18],[245,53,250,51,"newState"],[245,61,250,59],[245,62,250,60,"enemies"],[245,69,250,67],[245,70,250,68,"length"],[245,76,250,74],[245,85,250,83,"MAX_ENEMIES"],[245,96,250,94],[245,109,250,107,"hasBoss"],[245,116,250,114],[245,118,250,116],[245,119,250,117],[247,8,252,6],[248,8,253,6],[248,12,253,10],[248,13,253,11,"hasBoss"],[248,20,253,18],[248,24,253,22,"newState"],[248,32,253,30],[248,33,253,31,"enemies"],[248,40,253,38],[248,41,253,39,"length"],[248,47,253,45],[248,50,253,48,"MAX_ENEMIES"],[248,61,253,59],[248,65,253,64,"now"],[248,68,253,67],[248,71,253,70,"newState"],[248,79,253,78],[248,80,253,79,"lastSpawnTime"],[248,93,253,92],[248,97,253,97,"MIN_SPAWN_DELAY"],[248,112,253,112],[248,114,253,114],[249,10,254,8,"console"],[249,17,254,15],[249,18,254,16,"log"],[249,21,254,19],[249,22,254,20],[249,43,254,41,"newState"],[249,51,254,49],[249,52,254,50,"enemies"],[249,59,254,57],[249,60,254,58,"length"],[249,66,254,64],[249,69,254,67],[249,70,254,68],[249,74,254,72,"MAX_ENEMIES"],[249,85,254,83],[249,87,254,85],[249,88,254,86],[250,10,255,8,"spawnTestEnemy"],[250,24,255,22],[250,25,255,23,"newState"],[250,33,255,31],[250,34,255,32],[251,10,256,8,"newState"],[251,18,256,16],[251,19,256,17,"lastSpawnTime"],[251,32,256,30],[251,35,256,33,"now"],[251,38,256,36],[252,8,257,6],[253,8,259,6],[253,15,259,13,"newState"],[253,23,259,21],[254,6,260,4],[254,7,260,5],[254,47,260,6],[256,6,262,4],[257,6,263,4,"enemiesToKill"],[257,19,263,17],[257,20,263,18,"forEach"],[257,27,263,25],[257,28,263,26,"enemy"],[257,33,263,31],[257,37,263,35],[258,8,264,6,"handleEnemyKill"],[258,23,264,21],[258,24,264,22,"enemy"],[258,29,264,27],[258,30,264,28],[259,6,265,4],[259,7,265,5],[259,8,265,6],[260,4,266,2],[260,5,266,3],[260,7,266,5],[260,8,266,6,"handleEnemyKill"],[260,23,266,21],[260,24,266,22],[260,25,266,23],[260,26,266,24],[260,27,266,25],[262,4,268,2],[263,4,269,2],[263,8,269,8,"findClosestEnemyInternal"],[263,32,269,32],[263,35,269,36,"enemies"],[263,42,269,58],[263,46,269,83],[264,6,270,4],[264,10,270,8,"enemies"],[264,17,270,15],[264,18,270,16,"length"],[264,24,270,22],[264,29,270,27],[264,30,270,28],[264,32,270,30],[264,39,270,37],[264,43,270,41],[266,6,272,4],[267,6,273,4],[267,10,273,10,"SCREEN_WIDTH"],[267,22,273,22],[267,25,273,25],[267,28,273,28],[268,6,274,4],[268,10,274,10,"GAME_AREA_HEIGHT"],[268,26,274,26],[268,29,274,29],[268,32,274,32],[268,35,274,35],[268,38,274,38],[268,39,274,39],[268,40,274,40],[269,6,275,4],[269,10,275,10,"ninjaX"],[269,16,275,16],[269,19,275,19,"SCREEN_WIDTH"],[269,31,275,31],[269,34,275,34],[269,35,275,35],[270,6,276,4],[270,10,276,10,"ninjaY"],[270,16,276,16],[270,19,276,19,"GAME_AREA_HEIGHT"],[270,35,276,35],[270,38,276,38],[270,39,276,39],[271,6,278,4],[271,10,278,8,"closestEnemy"],[271,22,278,20],[271,25,278,23,"enemies"],[271,32,278,30],[271,33,278,31],[271,34,278,32],[271,35,278,33],[272,6,279,4],[272,10,279,8,"closestDistance"],[272,25,279,23],[272,28,279,26,"Infinity"],[272,36,279,34],[273,6,281,4,"enemies"],[273,13,281,11],[273,14,281,12,"forEach"],[273,21,281,19],[273,22,281,20,"enemy"],[273,27,281,25],[273,31,281,29],[274,8,282,6],[274,12,282,12,"distance"],[274,20,282,20],[274,23,282,23,"Math"],[274,27,282,27],[274,28,282,28,"sqrt"],[274,32,282,32],[274,33,283,8,"Math"],[274,37,283,12],[274,38,283,13,"pow"],[274,41,283,16],[274,42,283,17,"enemy"],[274,47,283,22],[274,48,283,23,"position"],[274,56,283,31],[274,57,283,32,"x"],[274,58,283,33],[274,61,283,36,"ninjaX"],[274,67,283,42],[274,69,283,44],[274,70,283,45],[274,71,283,46],[274,74,284,8,"Math"],[274,78,284,12],[274,79,284,13,"pow"],[274,82,284,16],[274,83,284,17,"enemy"],[274,88,284,22],[274,89,284,23,"position"],[274,97,284,31],[274,98,284,32,"y"],[274,99,284,33],[274,102,284,36,"ninjaY"],[274,108,284,42],[274,110,284,44],[274,111,284,45],[274,112,285,6],[274,113,285,7],[275,8,287,6],[275,12,287,10,"distance"],[275,20,287,18],[275,23,287,21,"closestDistance"],[275,38,287,36],[275,40,287,38],[276,10,288,8,"closestDistance"],[276,25,288,23],[276,28,288,26,"distance"],[276,36,288,34],[277,10,289,8,"closestEnemy"],[277,22,289,20],[277,25,289,23,"enemy"],[277,30,289,28],[278,8,290,6],[279,6,291,4],[279,7,291,5],[279,8,291,6],[280,6,293,4,"console"],[280,13,293,11],[280,14,293,12,"log"],[280,17,293,15],[280,18,293,16],[280,60,293,58,"closestDistance"],[280,75,293,73],[280,76,293,74,"toFixed"],[280,83,293,81],[280,84,293,82],[280,85,293,83],[280,86,293,84],[280,88,293,86],[280,89,293,87],[281,6,294,4],[281,13,294,11,"closestEnemy"],[281,25,294,23],[282,4,295,2],[282,5,295,3],[284,4,297,2],[285,4,298,2],[285,8,298,8,"findClosestEnemy"],[285,24,298,24],[285,27,298,27,"findClosestEnemy"],[285,28,298,27],[285,33,298,53],[286,6,299,4],[286,13,299,11,"findClosestEnemyInternal"],[286,37,299,35],[286,38,299,36,"combatState"],[286,49,299,47],[286,50,299,48,"enemies"],[286,57,299,55],[286,58,299,56],[287,4,300,2],[287,5,300,3],[289,4,302,2],[290,4,303,2],[290,8,303,8,"updateNinjaPosition"],[290,27,303,27],[290,30,303,31,"position"],[290,38,303,63],[290,42,303,68],[291,6,304,4,"console"],[291,13,304,11],[291,14,304,12,"log"],[291,17,304,15],[291,18,304,16],[291,67,304,65,"position"],[291,75,304,73],[291,76,304,74,"x"],[291,77,304,75],[291,78,304,76,"toFixed"],[291,85,304,83],[291,86,304,84],[291,87,304,85],[291,88,304,86],[291,93,304,91,"position"],[291,101,304,99],[291,102,304,100,"y"],[291,103,304,101],[291,104,304,102,"toFixed"],[291,111,304,109],[291,112,304,110],[291,113,304,111],[291,114,304,112],[291,117,304,115],[291,118,304,116],[292,6,305,4,"setNinjaPosition"],[292,22,305,20],[292,23,305,21,"position"],[292,31,305,29],[292,32,305,30],[293,4,306,2],[293,5,306,3],[295,4,308,2],[296,4,309,2],[296,8,309,8,"handleProjectileHit"],[296,27,309,27],[296,30,309,31,"projectile"],[296,40,309,59],[296,44,309,64],[297,6,310,4,"console"],[297,13,310,11],[297,14,310,12,"log"],[297,17,310,15],[297,18,310,16],[297,35,310,33,"projectile"],[297,45,310,43],[297,46,310,44,"id"],[297,48,310,46],[297,62,310,60,"projectile"],[297,72,310,70],[297,73,310,71,"targetEnemyId"],[297,86,310,84],[297,94,310,92,"projectile"],[297,104,310,102],[297,105,310,103,"damage"],[297,111,310,109],[297,120,310,118],[297,121,310,119],[298,6,312,4,"setCombatState"],[298,20,312,18],[298,21,312,19,"prev"],[298,25,312,23],[298,29,312,27],[299,8,313,6],[299,12,313,12,"newState"],[299,20,313,20],[299,23,313,23],[300,10,313,25],[300,13,313,28,"prev"],[301,8,313,33],[301,9,313,34],[303,8,315,6],[304,8,316,6],[304,12,316,12,"enemyIndex"],[304,22,316,22],[304,25,316,25,"newState"],[304,33,316,33],[304,34,316,34,"enemies"],[304,41,316,41],[304,42,316,42,"findIndex"],[304,51,316,51],[304,52,316,52,"e"],[304,53,316,53],[304,57,316,57,"e"],[304,58,316,58],[304,59,316,59,"id"],[304,61,316,61],[304,66,316,66,"projectile"],[304,76,316,76],[304,77,316,77,"targetEnemyId"],[304,90,316,90],[304,91,316,91],[305,8,317,6],[305,12,317,10,"enemyIndex"],[305,22,317,20],[305,26,317,24],[305,27,317,25],[305,29,317,27],[306,10,318,8,"newState"],[306,18,318,16],[306,19,318,17,"enemies"],[306,26,318,24],[306,29,318,27],[306,30,318,28],[306,33,318,31,"newState"],[306,41,318,39],[306,42,318,40,"enemies"],[306,49,318,47],[306,50,318,48],[307,10,319,8,"newState"],[307,18,319,16],[307,19,319,17,"enemies"],[307,26,319,24],[307,27,319,25,"enemyIndex"],[307,37,319,35],[307,38,319,36],[307,41,319,39],[308,12,320,10],[308,15,320,13,"newState"],[308,23,320,21],[308,24,320,22,"enemies"],[308,31,320,29],[308,32,320,30,"enemyIndex"],[308,42,320,40],[308,43,320,41],[309,12,321,10,"health"],[309,18,321,16],[309,20,321,18,"newState"],[309,28,321,26],[309,29,321,27,"enemies"],[309,36,321,34],[309,37,321,35,"enemyIndex"],[309,47,321,45],[309,48,321,46],[309,49,321,47,"health"],[309,55,321,53],[309,58,321,56,"projectile"],[309,68,321,66],[309,69,321,67,"damage"],[309,75,321,73],[310,12,322,10,"lastDamaged"],[310,23,322,21],[310,25,322,23,"combatEngine"],[310,44,322,35],[310,45,322,35,"combatEngine"],[310,57,322,35],[310,58,322,36,"getCurrentTick"],[310,72,322,50],[310,73,322,51],[311,10,323,8],[311,11,323,9],[312,10,325,8,"console"],[312,17,325,15],[312,18,325,16,"log"],[312,21,325,19],[312,22,325,20],[312,34,325,32,"projectile"],[312,44,325,42],[312,45,325,43,"targetEnemyId"],[312,58,325,56],[312,70,325,68,"newState"],[312,78,325,76],[312,79,325,77,"enemies"],[312,86,325,84],[312,87,325,85,"enemyIndex"],[312,97,325,95],[312,98,325,96],[312,99,325,97,"health"],[312,105,325,103],[312,109,325,107,"newState"],[312,117,325,115],[312,118,325,116,"enemies"],[312,125,325,123],[312,126,325,124,"enemyIndex"],[312,136,325,134],[312,137,325,135],[312,138,325,136,"maxHealth"],[312,147,325,145],[312,149,325,147],[312,150,325,148],[313,8,326,6],[314,8,328,6],[314,15,328,13,"newState"],[314,23,328,21],[315,6,329,4],[315,7,329,5],[315,8,329,6],[317,6,331,4],[318,6,332,4,"setProjectiles"],[318,20,332,18],[318,21,332,19,"prev"],[318,25,332,23],[318,29,332,27,"prev"],[318,33,332,31],[318,34,332,32,"filter"],[318,40,332,38],[318,41,332,39,"p"],[318,42,332,40],[318,46,332,44,"p"],[318,47,332,45],[318,48,332,46,"id"],[318,50,332,48],[318,55,332,53,"projectile"],[318,65,332,63],[318,66,332,64,"id"],[318,68,332,66],[318,69,332,67],[318,70,332,68],[319,4,333,2],[319,5,333,3],[321,4,335,2],[322,4,336,2],[322,8,336,8,"castAbility"],[322,19,336,19],[322,22,336,22,"castAbility"],[322,23,336,23,"state"],[322,28,336,41],[322,30,336,43,"slotIndex"],[322,39,336,60],[322,44,336,65],[323,6,337,4],[323,10,337,10,"deck"],[323,14,337,14],[323,17,337,17,"state"],[323,22,337,22],[323,23,337,23,"abilityManager"],[323,37,337,37],[323,38,337,38,"getDeck"],[323,45,337,45],[323,46,337,46],[323,47,337,47],[324,6,338,4],[324,10,338,10,"ability"],[324,17,338,17],[324,20,338,20,"deck"],[324,24,338,24],[324,25,338,25,"slots"],[324,30,338,30],[324,31,338,31,"slotIndex"],[324,40,338,40],[324,41,338,41],[325,6,339,4],[325,10,339,8],[325,11,339,9,"ability"],[325,18,339,16],[325,20,339,18],[327,6,341,4],[328,6,342,4],[328,10,342,10,"target"],[328,16,342,16],[328,19,342,19,"findClosestEnemyInternal"],[328,43,342,43],[328,44,342,44,"state"],[328,49,342,49],[328,50,342,50,"enemies"],[328,57,342,57],[328,58,342,58],[329,6,343,4],[329,10,343,8],[329,11,343,9,"target"],[329,17,343,15],[329,19,343,17],[331,6,345,4],[332,6,346,4],[332,10,346,8,"damage"],[332,16,346,14],[332,19,346,17,"ability"],[332,26,346,24],[332,27,346,25,"stats"],[332,32,346,30],[332,33,346,31,"baseDamage"],[332,43,346,41],[334,6,348,4],[335,6,349,4,"deck"],[335,10,349,8],[335,11,349,9,"activeSynergies"],[335,26,349,24],[335,27,349,25,"forEach"],[335,34,349,32],[335,35,349,33,"synergy"],[335,42,349,40],[335,46,349,44],[336,8,350,6],[336,12,350,10,"synergy"],[336,19,350,17],[336,20,350,18,"bonus"],[336,25,350,23],[336,26,350,24,"damageBonus"],[336,37,350,35],[336,41,351,10,"synergy"],[336,48,351,17],[336,49,351,18,"requiredTags"],[336,61,351,30],[336,62,351,31,"some"],[336,66,351,35],[336,67,351,36,"tag"],[336,70,351,39],[336,74,351,43,"ability"],[336,81,351,50],[336,82,351,51,"tags"],[336,86,351,55],[336,87,351,56,"includes"],[336,95,351,64],[336,96,351,65,"tag"],[336,99,351,68],[336,100,351,69],[336,101,351,70],[336,103,351,72],[337,10,352,8,"damage"],[337,16,352,14],[337,20,352,19],[337,21,352,20],[337,24,352,23,"synergy"],[337,31,352,30],[337,32,352,31,"bonus"],[337,37,352,36],[337,38,352,37,"damageBonus"],[337,49,352,48],[337,52,352,51],[337,55,352,55],[338,8,353,6],[339,6,354,4],[339,7,354,5],[339,8,354,6],[341,6,356,4],[342,6,357,4],[342,10,357,10,"damageResult"],[342,22,357,22],[342,25,357,25,"DamageCalculator"],[342,44,357,41],[342,45,357,41,"DamageCalculator"],[342,61,357,41],[342,62,357,42,"calculateDamage"],[342,77,357,57],[342,78,357,58,"damage"],[342,84,357,64],[342,86,357,66,"state"],[342,91,357,71],[342,92,357,72,"playerStats"],[342,103,357,83],[342,105,357,85,"target"],[342,111,357,91],[342,112,357,92,"stats"],[342,117,357,97],[342,118,357,98],[344,6,359,4],[345,6,360,4,"createProjectile"],[345,22,360,20],[345,23,360,21,"target"],[345,29,360,27],[345,31,360,29,"damageResult"],[345,43,360,41],[345,44,360,42,"damage"],[345,50,360,48],[345,52,360,50,"ninjaPosition"],[345,65,360,63],[345,66,360,64],[347,6,362,4],[348,6,363,4],[348,10,363,8,"ability"],[348,17,363,15],[348,18,363,16,"effects"],[348,25,363,23],[348,26,363,24,"includes"],[348,34,363,32],[348,35,363,33],[348,40,363,38],[348,41,363,39],[348,45,363,43,"ability"],[348,52,363,50],[348,53,363,51,"stats"],[348,58,363,56],[348,59,363,57,"duration"],[348,67,363,65],[348,69,363,67],[349,8,364,6,"state"],[349,13,364,11],[349,14,364,12,"statusEffects"],[349,27,364,25],[349,28,364,26,"addEffect"],[349,37,364,35],[349,38,364,36,"target"],[349,44,364,42],[349,45,364,43,"id"],[349,47,364,45],[349,49,364,47],[350,10,365,8,"id"],[350,12,365,10],[350,14,365,12],[350,17,365,15,"ability"],[350,24,365,22],[350,25,365,23,"id"],[350,27,365,25],[350,33,365,31],[351,10,366,8,"type"],[351,14,366,12],[351,16,366,14],[351,21,366,19],[352,10,367,8,"remainingTicks"],[352,24,367,22],[352,26,367,24,"Math"],[352,30,367,28],[352,31,367,29,"floor"],[352,36,367,34],[352,37,367,35,"ability"],[352,44,367,42],[352,45,367,43,"stats"],[352,50,367,48],[352,51,367,49,"duration"],[352,59,367,57],[352,62,367,60],[352,64,367,62],[352,65,367,63],[353,10,367,65],[354,10,368,8,"tickInterval"],[354,22,368,20],[354,24,368,22],[354,26,368,24],[355,10,368,26],[356,10,369,8,"lastTick"],[356,18,369,16],[356,20,369,18,"state"],[356,25,369,23],[356,26,369,24,"currentTick"],[356,37,369,35],[357,10,370,8,"value"],[357,15,370,13],[357,17,370,15,"Math"],[357,21,370,19],[357,22,370,20,"floor"],[357,27,370,25],[357,28,370,26,"damage"],[357,34,370,32],[357,37,370,35],[357,40,370,38],[357,41,370,39],[358,10,370,41],[359,10,371,8,"stackable"],[359,19,371,17],[359,21,371,19],[360,8,372,6],[360,9,372,7],[360,10,372,8],[361,6,373,4],[362,6,375,4,"console"],[362,13,375,11],[362,14,375,12,"log"],[362,17,375,15],[362,18,375,16],[362,24,375,22,"ability"],[362,31,375,29],[362,32,375,30,"name"],[362,36,375,34],[362,69,375,67,"damageResult"],[362,81,375,79],[362,82,375,80,"damage"],[362,88,375,86],[362,98,375,96,"damageResult"],[362,110,375,108],[362,111,375,109,"isCritical"],[362,121,375,119],[362,124,375,122],[362,134,375,132],[362,137,375,135],[362,139,375,137],[362,141,375,139],[362,142,375,140],[363,4,376,2],[363,5,376,3],[365,4,378,2],[366,4,379,2],[366,8,379,8,"createProjectile"],[366,24,379,24],[366,27,379,27,"createProjectile"],[366,28,379,28,"targetEnemy"],[366,39,379,52],[366,41,379,54,"damage"],[366,47,379,68],[366,49,379,70,"ninjaPos"],[366,57,379,103],[366,62,379,108],[367,6,380,4],[367,10,380,10,"SCREEN_WIDTH"],[367,22,380,22],[367,25,380,25],[367,28,380,28],[368,6,381,4],[368,10,381,10,"GAME_AREA_HEIGHT"],[368,26,381,26],[368,29,381,29],[368,32,381,32],[368,35,381,35],[368,38,381,38],[368,39,381,39],[368,40,381,40],[369,6,382,4],[369,10,382,10,"NINJA_SIZE"],[369,20,382,20],[369,23,382,23],[369,25,382,25],[371,6,384,4],[372,6,385,4],[372,10,385,10,"ninjaX"],[372,16,385,16],[372,19,385,19,"ninjaPos"],[372,27,385,27],[372,30,385,30,"ninjaPos"],[372,38,385,38],[372,39,385,39,"x"],[372,40,385,40],[372,43,385,43,"NINJA_SIZE"],[372,53,385,53],[372,56,385,56],[372,57,385,57],[372,60,385,60,"SCREEN_WIDTH"],[372,72,385,72],[372,75,385,75],[372,76,385,76],[373,6,386,4],[373,10,386,10,"ninjaY"],[373,16,386,16],[373,19,386,19,"ninjaPos"],[373,27,386,27],[373,30,386,30,"ninjaPos"],[373,38,386,38],[373,39,386,39,"y"],[373,40,386,40],[373,43,386,43,"NINJA_SIZE"],[373,53,386,53],[373,56,386,56],[373,57,386,57],[373,60,386,60,"GAME_AREA_HEIGHT"],[373,76,386,76],[373,79,386,79],[373,80,386,80],[374,6,387,4],[374,10,387,10,"ENEMY_SIZE"],[374,20,387,20],[374,23,387,23],[374,25,387,25],[375,6,389,4],[375,10,389,10,"projectile"],[375,20,389,38],[375,23,389,41],[376,8,390,6,"id"],[376,10,390,8],[376,12,390,10],[376,20,390,18,"Date"],[376,24,390,22],[376,25,390,23,"now"],[376,28,390,26],[376,29,390,27],[376,30,390,28],[376,34,390,32,"Math"],[376,38,390,36],[376,39,390,37,"random"],[376,45,390,43],[376,46,390,44],[376,47,390,45],[376,49,390,47],[377,8,391,6,"x"],[377,9,391,7],[377,11,391,9,"ninjaX"],[377,17,391,15],[378,8,392,6,"y"],[378,9,392,7],[378,11,392,9,"ninjaY"],[378,17,392,15],[379,8,393,6,"targetX"],[379,15,393,13],[379,17,393,15,"targetEnemy"],[379,28,393,26],[379,29,393,27,"position"],[379,37,393,35],[379,38,393,36,"x"],[379,39,393,37],[379,42,393,40,"ENEMY_SIZE"],[379,52,393,50],[379,55,393,53],[379,56,393,54],[380,8,394,6,"targetY"],[380,15,394,13],[380,17,394,15,"targetEnemy"],[380,28,394,26],[380,29,394,27,"position"],[380,37,394,35],[380,38,394,36,"y"],[380,39,394,37],[380,42,394,40,"ENEMY_SIZE"],[380,52,394,50],[380,55,394,53],[380,56,394,54],[381,8,395,6,"targetEnemyId"],[381,21,395,19],[381,23,395,21,"targetEnemy"],[381,34,395,32],[381,35,395,33,"id"],[381,37,395,35],[382,8,396,6,"damage"],[382,14,396,12],[382,16,396,14,"damage"],[382,22,396,20],[383,8,397,6,"startTime"],[383,17,397,15],[383,19,397,17,"Date"],[383,23,397,21],[383,24,397,22,"now"],[383,27,397,25],[383,28,397,26],[383,29,397,27],[384,8,398,6,"duration"],[384,16,398,14],[384,18,398,16],[384,21,398,19],[384,22,398,21],[385,6,399,4],[385,7,399,5],[386,6,401,4,"console"],[386,13,401,11],[386,14,401,12,"log"],[386,17,401,15],[386,18,401,16],[386,53,401,51,"targetEnemy"],[386,64,401,62],[386,65,401,63,"id"],[386,67,401,65],[386,75,401,73,"damage"],[386,81,401,79],[386,90,401,88],[386,91,401,89],[387,6,402,4,"console"],[387,13,402,11],[387,14,402,12,"log"],[387,17,402,15],[387,18,402,16],[387,53,402,51,"ninjaX"],[387,59,402,57],[387,64,402,62,"ninjaY"],[387,70,402,68],[387,87,402,85,"projectile"],[387,97,402,95],[387,98,402,96,"targetX"],[387,105,402,103],[387,110,402,108,"projectile"],[387,120,402,118],[387,121,402,119,"targetY"],[387,128,402,126],[387,131,402,129],[387,132,402,130],[388,6,404,4,"setProjectiles"],[388,20,404,18],[388,21,404,19,"prev"],[388,25,404,23],[388,29,404,27],[388,30,404,28],[388,33,404,31,"prev"],[388,37,404,35],[388,39,404,37,"projectile"],[388,49,404,47],[388,50,404,48],[388,51,404,49],[390,6,406,4],[391,6,407,4,"setTimeout"],[391,16,407,14],[391,17,407,15],[391,23,407,21],[392,8,408,6,"handleProjectileHit"],[392,27,408,25],[392,28,408,26,"projectile"],[392,38,408,36],[392,39,408,37],[393,6,409,4],[393,7,409,5],[393,9,409,7],[393,12,409,10],[393,13,409,11],[394,4,410,2],[394,5,410,3],[396,4,412,2],[397,4,413,2],[397,8,413,8,"spawnTestEnemy"],[397,22,413,22],[397,25,413,26,"state"],[397,30,413,44],[397,34,413,49],[398,6,414,4],[399,6,415,4],[399,10,415,10,"SCREEN_WIDTH"],[399,22,415,22],[399,25,415,25],[399,28,415,28],[399,29,415,29],[399,30,415,30],[400,6,416,4],[400,10,416,10,"GAME_AREA_HEIGHT"],[400,26,416,26],[400,29,416,29],[400,32,416,32],[400,35,416,35],[400,38,416,38],[400,39,416,39],[400,40,416,40],[401,6,417,4],[401,10,417,10,"ENEMY_SIZE"],[401,20,417,20],[401,23,417,23],[401,25,417,25],[403,6,419,4],[404,6,420,4],[404,10,420,10,"x"],[404,11,420,11],[404,14,420,14,"Math"],[404,18,420,18],[404,19,420,19,"random"],[404,25,420,25],[404,26,420,26],[404,27,420,27],[404,31,420,31,"SCREEN_WIDTH"],[404,43,420,43],[404,46,420,46,"ENEMY_SIZE"],[404,56,420,56],[404,59,420,59],[404,60,420,60],[404,61,420,61],[404,64,420,64,"ENEMY_SIZE"],[404,74,420,74],[404,75,420,75],[404,76,420,76],[405,6,421,4],[405,10,421,10,"y"],[405,11,421,11],[405,14,421,14,"Math"],[405,18,421,18],[405,19,421,19,"random"],[405,25,421,25],[405,26,421,26],[405,27,421,27],[405,31,421,31,"GAME_AREA_HEIGHT"],[405,47,421,47],[405,50,421,50,"ENEMY_SIZE"],[405,60,421,60],[405,63,421,63],[405,64,421,64],[405,65,421,65],[405,68,421,68,"ENEMY_SIZE"],[405,78,421,78],[405,79,421,79],[405,80,421,80],[407,6,423,4],[407,10,423,10,"enemy"],[407,15,423,28],[407,18,423,31],[408,8,424,6,"id"],[408,10,424,8],[408,12,424,10],[408,21,424,19],[408,23,424,21,"enemyCounter"],[408,35,424,33],[408,37,424,35],[409,8,425,6,"name"],[409,12,425,10],[409,14,425,12],[409,24,425,22],[410,8,426,6,"health"],[410,14,426,12],[410,16,426,14],[410,19,426,17],[411,8,427,6,"maxHealth"],[411,17,427,15],[411,19,427,17],[411,22,427,20],[412,8,428,6,"stats"],[412,13,428,11],[412,15,428,13],[413,10,429,8,"attack"],[413,16,429,14],[413,18,429,16],[413,20,429,18],[414,10,430,8,"defense"],[414,17,430,15],[414,19,430,17],[414,21,430,19],[415,10,431,8,"health"],[415,16,431,14],[415,18,431,16],[415,21,431,19],[416,10,432,8,"maxHealth"],[416,19,432,17],[416,21,432,19],[416,24,432,22],[417,10,433,8,"critChance"],[417,20,433,18],[417,22,433,20],[417,23,433,21],[418,10,434,8,"critDamage"],[418,20,434,18],[418,22,434,20],[418,25,434,23],[419,10,435,8,"cooldownReduction"],[419,27,435,25],[419,29,435,27],[420,8,436,6],[420,9,436,7],[421,8,437,6,"position"],[421,16,437,14],[421,18,437,16],[422,10,437,18,"x"],[422,11,437,19],[423,10,437,21,"y"],[424,8,437,23],[424,9,437,24],[425,8,438,6,"lastDamaged"],[425,19,438,17],[425,21,438,19],[426,6,439,4],[426,7,439,5],[427,6,441,4,"state"],[427,11,441,9],[427,12,441,10,"enemies"],[427,19,441,17],[427,20,441,18,"push"],[427,24,441,22],[427,25,441,23,"enemy"],[427,30,441,28],[427,31,441,29],[428,4,442,2],[428,5,442,3],[430,4,444,2],[431,4,445,2],[431,8,445,8,"startCombat"],[431,19,445,19],[431,22,445,22,"React"],[431,27,445,27],[431,28,445,27,"default"],[431,35,445,27],[431,36,445,28,"useCallback"],[431,47,445,39],[431,48,445,40],[431,54,445,46],[432,6,446,4,"console"],[432,13,446,11],[432,14,446,12,"log"],[432,17,446,15],[432,18,446,16],[432,63,446,61],[432,64,446,62],[433,6,447,4,"setCombatState"],[433,20,447,18],[433,21,447,19,"prev"],[433,25,447,23],[433,30,447,28],[434,8,447,30],[434,11,447,33,"prev"],[434,15,447,37],[435,8,447,39,"isInCombat"],[435,18,447,49],[435,20,447,51],[436,6,447,56],[436,7,447,57],[436,8,447,58],[436,9,447,59],[438,6,449,4],[439,6,450,4,"combatEngine"],[439,25,450,16],[439,26,450,16,"combatEngine"],[439,38,450,16],[439,39,450,17,"addTickCallback"],[439,54,450,32],[439,55,450,33,"handleCombatTick"],[439,71,450,49],[439,72,450,50],[440,6,451,4,"console"],[440,13,451,11],[440,14,451,12,"log"],[440,17,451,15],[440,18,451,16],[440,62,451,60],[440,63,451,61],[442,6,453,4],[443,6,454,4,"combatEngine"],[443,25,454,16],[443,26,454,16,"combatEngine"],[443,38,454,16],[443,39,454,17,"start"],[443,44,454,22],[443,45,454,23],[443,46,454,24],[444,4,455,2],[444,5,455,3],[444,7,455,5],[444,8,455,6,"combatEngine"],[444,27,455,18],[444,28,455,18,"combatEngine"],[444,40,455,18],[444,42,455,20,"handleCombatTick"],[444,58,455,36],[444,59,455,37],[444,60,455,38],[446,4,457,2],[447,4,458,2],[447,8,458,8,"stopCombat"],[447,18,458,18],[447,21,458,21,"React"],[447,26,458,26],[447,27,458,26,"default"],[447,34,458,26],[447,35,458,27,"useCallback"],[447,46,458,38],[447,47,458,39],[447,53,458,45],[448,6,459,4,"setCombatState"],[448,20,459,18],[448,21,459,19,"prev"],[448,25,459,23],[448,30,459,28],[449,8,459,30],[449,11,459,33,"prev"],[449,15,459,37],[450,8,459,39,"isInCombat"],[450,18,459,49],[450,20,459,51],[451,6,459,57],[451,7,459,58],[451,8,459,59],[451,9,459,60],[452,6,460,4,"combatEngine"],[452,25,460,16],[452,26,460,16,"combatEngine"],[452,38,460,16],[452,39,460,17,"removeTickCallback"],[452,57,460,35],[452,58,460,36,"handleCombatTick"],[452,74,460,52],[452,75,460,53],[453,4,461,2],[453,5,461,3],[453,7,461,5],[453,8,461,6,"combatEngine"],[453,27,461,18],[453,28,461,18,"combatEngine"],[453,40,461,18],[453,42,461,20,"handleCombatTick"],[453,58,461,36],[453,59,461,37],[453,60,461,38],[455,4,463,2],[456,4,464,2],[456,8,464,8,"equipAbility"],[456,20,464,20],[456,23,464,23,"equipAbility"],[456,24,464,24,"abilityId"],[456,33,464,41],[456,35,464,43,"slotIndex"],[456,44,464,60],[456,49,464,74],[457,6,465,4],[457,13,465,11,"combatState"],[457,24,465,22],[457,25,465,23,"abilityManager"],[457,39,465,37],[457,40,465,38,"equipAbility"],[457,52,465,50],[457,53,465,51,"abilityId"],[457,62,465,60],[457,64,465,62,"slotIndex"],[457,73,465,71],[457,74,465,72],[458,4,466,2],[458,5,466,3],[459,4,468,2],[459,8,468,8,"getDeck"],[459,15,468,15],[459,18,468,18,"getDeck"],[459,19,468,18],[459,24,468,24],[460,6,469,4],[460,13,469,11,"combatState"],[460,24,469,22],[460,25,469,23,"abilityManager"],[460,39,469,37],[460,40,469,38,"getDeck"],[460,47,469,45],[460,48,469,46],[460,49,469,47],[461,4,470,2],[461,5,470,3],[462,4,472,2],[462,8,472,8,"getAvailableAbilities"],[462,29,472,29],[462,32,472,32,"getAvailableAbilities"],[462,33,472,32],[462,38,472,38],[463,6,473,4],[463,13,473,11,"combatState"],[463,24,473,22],[463,25,473,23,"abilityManager"],[463,39,473,37],[463,40,473,38,"getAvailableAbilities"],[463,61,473,59],[463,62,473,60],[463,63,473,61],[464,4,474,2],[464,5,474,3],[465,4,476,2],[465,8,476,8,"upgradeAbility"],[465,22,476,22],[465,25,476,26,"abilityId"],[465,34,476,43],[465,38,476,57],[466,6,477,4],[466,13,477,11,"combatState"],[466,24,477,22],[466,25,477,23,"abilityManager"],[466,39,477,37],[466,40,477,38,"upgradeAbility"],[466,54,477,52],[466,55,477,53,"abilityId"],[466,64,477,62],[466,65,477,63],[467,4,478,2],[467,5,478,3],[469,4,480,2],[470,4,481,2],[470,8,481,8,"clearAllEnemies"],[470,23,481,23],[470,26,481,26,"clearAllEnemies"],[470,27,481,26],[470,32,481,32],[471,6,482,4,"console"],[471,13,482,11],[471,14,482,12,"log"],[471,17,482,15],[471,18,482,16],[471,67,482,65],[471,68,482,66],[472,6,483,4,"setCombatState"],[472,20,483,18],[472,21,483,19,"prev"],[472,25,483,23],[472,30,483,28],[473,8,484,6],[473,11,484,9,"prev"],[473,15,484,13],[474,8,485,6,"enemies"],[474,15,485,13],[474,17,485,15],[475,6,486,4],[475,7,486,5],[475,8,486,6],[475,9,486,7],[476,4,487,2],[476,5,487,3],[478,4,489,2],[479,4,490,2],[479,8,490,8,"triggerLevelUpExplosion"],[479,31,490,31],[479,34,490,34,"triggerLevelUpExplosion"],[479,35,490,34],[479,40,490,40],[480,6,491,4,"console"],[480,13,491,11],[480,14,491,12,"log"],[480,17,491,15],[480,18,491,16],[480,70,491,68],[480,71,491,69],[481,6,493,4],[481,10,493,10,"explosionTime"],[481,23,493,23],[481,26,493,26,"Date"],[481,30,493,30],[481,31,493,31,"now"],[481,34,493,34],[481,35,493,35],[481,36,493,36],[482,6,494,4,"setLastExplosionTime"],[482,26,494,24],[482,27,494,25,"explosionTime"],[482,40,494,38],[482,41,494,39],[483,6,496,4,"setCombatState"],[483,20,496,18],[483,21,496,19,"prev"],[483,25,496,23],[483,29,496,27],[484,8,497,6],[485,8,498,6],[485,12,498,12,"enemyCount"],[485,22,498,22],[485,25,498,25,"prev"],[485,29,498,29],[485,30,498,30,"enemies"],[485,37,498,37],[485,38,498,38,"length"],[485,44,498,44],[486,8,499,6],[486,12,499,12,"explosionXP"],[486,23,499,23],[486,26,499,26,"enemyCount"],[486,36,499,36],[486,39,499,39],[486,41,499,41],[486,42,499,42],[486,43,499,43],[487,8,500,6],[487,12,500,12,"explosionGold"],[487,25,500,25],[487,28,500,28,"enemyCount"],[487,38,500,38],[487,41,500,41],[487,42,500,42],[487,43,500,43],[487,44,500,44],[489,8,502,6,"console"],[489,15,502,13],[489,16,502,14,"log"],[489,19,502,17],[489,20,502,18],[489,44,502,42,"enemyCount"],[489,54,502,52],[489,76,502,74,"explosionXP"],[489,87,502,85],[489,98,502,96,"explosionGold"],[489,111,502,109],[489,118,502,116],[489,119,502,117],[491,8,504,6],[492,8,505,6],[492,12,505,10,"explosionXP"],[492,23,505,21],[492,26,505,24],[492,27,505,25],[492,29,505,27],[493,10,506,8,"setTimeout"],[493,20,506,18],[493,21,506,19],[493,27,506,25],[494,12,507,10,"updateNinja"],[494,23,507,21],[494,24,507,23,"ninja"],[494,29,507,28],[494,34,507,34],[495,14,508,12,"experience"],[495,24,508,22],[495,26,508,24,"ninja"],[495,31,508,29],[495,32,508,30,"experience"],[495,42,508,40],[495,45,508,43,"explosionXP"],[495,56,508,54],[496,14,509,12,"gold"],[496,18,509,16],[496,20,509,18,"ninja"],[496,25,509,23],[496,26,509,24,"gold"],[496,30,509,28],[496,33,509,31,"explosionGold"],[497,12,510,10],[497,13,510,11],[497,14,510,12],[497,15,510,13],[498,10,511,8],[498,11,511,9],[498,13,511,11],[498,14,511,12],[498,15,511,13],[498,16,511,14],[498,17,511,15],[499,8,512,6],[501,8,514,6],[502,8,515,6],[503,8,516,6],[503,12,516,12,"damagedEnemies"],[503,26,516,26],[503,29,516,29,"prev"],[503,33,516,33],[503,34,516,34,"enemies"],[503,41,516,41],[503,42,516,42,"map"],[503,45,516,45],[503,46,516,46,"enemy"],[503,51,516,51],[503,56,516,56],[504,10,517,8],[504,13,517,11,"enemy"],[504,18,517,16],[505,10,518,8,"health"],[505,16,518,14],[505,18,518,16],[505,19,518,17],[506,10,518,19],[507,10,519,8,"lastDamaged"],[507,21,519,19],[507,23,519,21,"combatEngine"],[507,42,519,33],[507,43,519,33,"combatEngine"],[507,55,519,33],[507,56,519,34,"getCurrentTick"],[507,70,519,48],[507,71,519,49],[508,8,520,6],[508,9,520,7],[508,10,520,8],[508,11,520,9],[509,8,522,6],[509,15,522,13],[510,10,523,8],[510,13,523,11,"prev"],[510,17,523,15],[511,10,524,8,"enemies"],[511,17,524,15],[511,19,524,17,"damagedEnemies"],[512,8,525,6],[512,9,525,7],[513,6,526,4],[513,7,526,5],[513,8,526,6],[514,4,527,2],[514,5,527,3],[516,4,529,2],[517,4,530,2],[517,8,530,8,"spawnEnemy"],[517,18,530,18],[517,21,530,22,"position"],[517,29,530,57],[517,33,530,75],[518,6,531,4],[518,10,531,10,"SCREEN_WIDTH"],[518,22,531,22],[518,25,531,25],[518,28,531,28],[519,6,532,4],[519,10,532,10,"GAME_AREA_HEIGHT"],[519,26,532,26],[519,29,532,29],[519,32,532,32],[519,35,532,35],[519,38,532,38],[519,39,532,39],[519,40,532,40],[520,6,533,4],[520,10,533,10,"ENEMY_SIZE"],[520,20,533,20],[520,23,533,23],[520,25,533,25],[522,6,535,4],[523,6,536,4],[523,10,536,10,"x"],[523,11,536,11],[523,14,536,14,"position"],[523,22,536,22],[523,24,536,24,"x"],[523,25,536,25],[523,29,536,29,"Math"],[523,33,536,33],[523,34,536,34,"random"],[523,40,536,40],[523,41,536,41],[523,42,536,42],[523,46,536,46,"SCREEN_WIDTH"],[523,58,536,58],[523,61,536,61,"ENEMY_SIZE"],[523,71,536,71],[523,74,536,74],[523,75,536,75],[523,76,536,76],[523,79,536,79,"ENEMY_SIZE"],[523,89,536,89],[524,6,537,4],[524,10,537,10,"y"],[524,11,537,11],[524,14,537,14,"position"],[524,22,537,22],[524,24,537,24,"y"],[524,25,537,25],[524,29,537,29,"Math"],[524,33,537,33],[524,34,537,34,"random"],[524,40,537,40],[524,41,537,41],[524,42,537,42],[524,46,537,46,"GAME_AREA_HEIGHT"],[524,62,537,62],[524,65,537,65,"ENEMY_SIZE"],[524,75,537,75],[524,78,537,78],[524,79,537,79],[524,80,537,80],[524,83,537,83,"ENEMY_SIZE"],[524,93,537,93],[525,6,539,4],[525,10,539,10,"enemy"],[525,15,539,28],[525,18,539,31],[526,8,540,6,"id"],[526,10,540,8],[526,12,540,10],[526,21,540,19],[526,23,540,21,"enemyCounter"],[526,35,540,33],[526,37,540,35],[527,8,541,6,"name"],[527,12,541,10],[527,14,541,12],[527,24,541,22],[528,8,542,6,"health"],[528,14,542,12],[528,16,542,14],[528,19,542,17],[529,8,543,6,"maxHealth"],[529,17,543,15],[529,19,543,17],[529,22,543,20],[530,8,544,6,"stats"],[530,13,544,11],[530,15,544,13],[531,10,545,8,"attack"],[531,16,545,14],[531,18,545,16],[531,20,545,18],[532,10,546,8,"defense"],[532,17,546,15],[532,19,546,17],[532,21,546,19],[533,10,547,8,"health"],[533,16,547,14],[533,18,547,16],[533,21,547,19],[534,10,548,8,"maxHealth"],[534,19,548,17],[534,21,548,19],[534,24,548,22],[535,10,549,8,"critChance"],[535,20,549,18],[535,22,549,20],[535,23,549,21],[536,10,550,8,"critDamage"],[536,20,550,18],[536,22,550,20],[536,25,550,23],[537,10,551,8,"cooldownReduction"],[537,27,551,25],[537,29,551,27],[538,8,552,6],[538,9,552,7],[539,8,553,6,"position"],[539,16,553,14],[539,18,553,16],[540,10,553,18,"x"],[540,11,553,19],[541,10,553,21,"y"],[542,8,553,23],[542,9,553,24],[543,8,554,6,"lastDamaged"],[543,19,554,17],[543,21,554,19],[544,6,555,4],[544,7,555,5],[545,6,557,4,"setCombatState"],[545,20,557,18],[545,21,557,19,"prev"],[545,25,557,23],[545,30,557,28],[546,8,558,6],[546,11,558,9,"prev"],[546,15,558,13],[547,8,559,6,"enemies"],[547,15,559,13],[547,17,559,15],[547,18,559,16],[547,21,559,19,"prev"],[547,25,559,23],[547,26,559,24,"enemies"],[547,33,559,31],[547,35,559,33,"enemy"],[547,40,559,38],[548,6,560,4],[548,7,560,5],[548,8,560,6],[548,9,560,7],[549,6,562,4],[549,13,562,11,"enemy"],[549,18,562,16],[550,4,563,2],[550,5,563,3],[552,4,565,2],[553,4,566,2],[553,8,566,8,"spawnBoss"],[553,17,566,17],[553,20,566,21,"bossEnemy"],[553,29,566,43],[553,33,566,48],[554,6,567,4,"console"],[554,13,567,11],[554,14,567,12,"log"],[554,17,567,15],[554,18,567,16],[554,39,567,37,"bossEnemy"],[554,48,567,46],[554,49,567,47,"name"],[554,53,567,51],[554,90,567,88],[554,91,567,89],[555,6,568,4,"setCombatState"],[555,20,568,18],[555,21,568,19,"prev"],[555,25,568,23],[555,30,568,28],[556,8,569,6],[556,11,569,9,"prev"],[556,15,569,13],[557,8,570,6,"enemies"],[557,15,570,13],[557,17,570,15],[557,18,570,16,"bossEnemy"],[557,27,570,25],[557,28,570,26],[557,29,570,27],[558,6,571,4],[558,7,571,5],[558,8,571,6],[558,9,571,7],[559,4,572,2],[559,5,572,3],[561,4,574,2],[562,4,575,2],[562,8,575,8,"clearSpecificEnemy"],[562,26,575,26],[562,29,575,30,"enemyId"],[562,36,575,45],[562,40,575,50],[563,6,576,4,"setCombatState"],[563,20,576,18],[563,21,576,19,"prev"],[563,25,576,23],[563,30,576,28],[564,8,577,6],[564,11,577,9,"prev"],[564,15,577,13],[565,8,578,6,"enemies"],[565,15,578,13],[565,17,578,15,"prev"],[565,21,578,19],[565,22,578,20,"enemies"],[565,29,578,27],[565,30,578,28,"filter"],[565,36,578,34],[565,37,578,35,"enemy"],[565,42,578,40],[565,46,578,44,"enemy"],[565,51,578,49],[565,52,578,50,"id"],[565,54,578,52],[565,59,578,57,"enemyId"],[565,66,578,64],[566,6,579,4],[566,7,579,5],[566,8,579,6],[566,9,579,7],[567,4,580,2],[567,5,580,3],[568,4,581,2],[568,8,581,2,"useEffect"],[568,14,581,11],[568,15,581,11,"useEffect"],[568,24,581,11],[568,26,581,12],[568,32,581,18],[569,6,582,4,"combatEngine"],[569,25,582,16],[569,26,582,16,"combatEngine"],[569,38,582,16],[569,39,582,17,"start"],[569,44,582,22],[569,45,582,23],[569,46,582,24],[571,6,584,4],[572,6,585,4,"combatState"],[572,17,585,15],[572,18,585,16,"abilityManager"],[572,32,585,30],[572,33,585,31,"equipAbility"],[572,45,585,43],[572,46,585,44],[572,62,585,60],[572,64,585,62],[572,65,585,63],[572,66,585,64],[573,6,586,4,"combatState"],[573,17,586,15],[573,18,586,16,"abilityManager"],[573,32,586,30],[573,33,586,31,"equipAbility"],[573,45,586,43],[573,46,586,44],[573,61,586,59],[573,63,586,61],[573,64,586,62],[573,65,586,63],[574,6,588,4],[574,13,588,11],[574,19,588,17],[575,8,589,6,"combatEngine"],[575,27,589,18],[575,28,589,18,"combatEngine"],[575,40,589,18],[575,41,589,19,"stop"],[575,45,589,23],[575,46,589,24],[575,47,589,25],[576,6,590,4],[576,7,590,5],[577,4,591,2],[577,5,591,3],[577,7,591,5],[577,9,591,7],[577,10,591,8],[578,4,593,2],[578,8,593,8,"contextValue"],[578,20,593,39],[578,23,593,42,"React"],[578,28,593,47],[578,29,593,47,"default"],[578,36,593,47],[578,37,593,48,"useMemo"],[578,44,593,55],[578,45,593,56],[578,52,593,63],[579,6,594,4,"combatState"],[579,17,594,15],[580,6,595,4,"projectiles"],[580,17,595,15],[581,6,596,4,"startCombat"],[581,17,596,15],[582,6,597,4,"stopCombat"],[582,16,597,14],[583,6,598,4,"equipAbility"],[583,18,598,16],[584,6,599,4,"handleEnemyKill"],[584,21,599,19],[585,6,600,4,"getDeck"],[585,13,600,11],[586,6,601,4,"getAvailableAbilities"],[586,27,601,25],[587,6,602,4,"upgradeAbility"],[587,20,602,18],[588,6,603,4,"spawnEnemy"],[588,16,603,14],[589,6,604,4,"spawnBoss"],[589,15,604,13],[590,6,605,4,"clearAllEnemies"],[590,21,605,19],[591,6,606,4,"clearSpecificEnemy"],[591,24,606,22],[592,6,607,4,"triggerLevelUpExplosion"],[592,29,607,27],[593,6,608,4,"findClosestEnemy"],[593,22,608,20],[594,6,609,4,"updateNinjaPosition"],[594,25,609,23],[595,6,610,4,"lastExplosionTime"],[596,4,611,2],[596,5,611,3],[596,6,611,4],[596,8,611,6],[597,4,612,4],[598,4,613,4],[599,4,614,4,"combatState"],[599,15,614,15],[599,17,615,4,"projectiles"],[599,28,615,15],[599,30,616,4,"lastExplosionTime"],[599,47,616,21],[599,48,617,3],[599,49,617,4],[600,4,619,2],[600,24,620,4],[600,28,620,4,"_reactJsxDevRuntime"],[600,47,620,4],[600,48,620,4,"jsxDEV"],[600,54,620,4],[600,56,620,5,"CombatContext"],[600,69,620,18],[600,70,620,19,"Provider"],[600,78,620,27],[601,6,620,28,"value"],[601,11,620,33],[601,13,620,35,"contextValue"],[601,25,620,48],[602,6,620,48,"children"],[602,14,620,48],[602,16,621,7,"children"],[603,4,621,15],[604,6,621,15,"fileName"],[604,14,621,15],[604,16,621,15,"_jsxFileName"],[604,28,621,15],[605,6,621,15,"lineNumber"],[605,16,621,15],[606,6,621,15,"columnNumber"],[606,18,621,15],[607,4,621,15],[607,11,622,28],[607,12,622,29],[608,2,624,0],[608,3,624,1],[609,2,624,2,"_s3"],[609,5,624,2],[609,6,77,13,"CombatProvider"],[609,20,77,27],[610,4,77,27],[610,12,78,26,"useGame"],[610,24,78,33],[610,25,78,33,"useGame"],[610,32,78,33],[610,34,79,30,"useZone"],[610,46,79,37],[610,47,79,37,"useZone"],[610,54,79,37],[611,2,79,37],[612,2,79,37,"_c"],[612,4,79,37],[612,7,77,13,"CombatProvider"],[612,21,77,27],[613,2,77,27],[613,6,77,27,"_c"],[613,8,77,27],[614,2,77,27,"$RefreshReg$"],[614,14,77,27],[614,15,77,27,"_c"],[614,17,77,27],[615,0,77,27],[615,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}