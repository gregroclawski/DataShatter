{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Use zone-based XP system instead of base XP to avoid conflicts\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n\n      // Use zone XP if available, otherwise fallback to ultra boosted base XP\n      var baseXpReward = enemy.zoneXP || 5000; // Use zone XP system, fallback to 5000 for non-zone enemies\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1137,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1198,2],[27,6,1198,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1198,2],[27,42,1198,2,"require"],[27,49,1198,2],[27,50,1198,2,"_dependencyMap"],[27,64,1198,2],[28,2,1198,2],[28,6,1198,2,"_slicedToArray"],[28,20,1198,2],[28,23,1198,2,"_interopDefault"],[28,38,1198,2],[28,39,1198,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1198,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,94,0],[37,6,94,6,"CombatContext"],[37,19,94,19],[37,35,94,22],[37,39,94,22,"createContext"],[37,45,94,35],[37,46,94,35,"createContext"],[37,59,94,35],[37,61,94,67,"undefined"],[37,70,94,76],[37,71,94,77],[38,2,96,7],[38,6,96,13,"useCombat"],[38,15,96,22],[38,18,96,25,"useCombat"],[38,19,96,25],[38,24,96,50],[39,4,96,50,"_s"],[39,6,96,50],[40,4,97,2],[40,8,97,8,"context"],[40,15,97,15],[40,18,97,18],[40,22,97,18,"useContext"],[40,28,97,28],[40,29,97,28,"useContext"],[40,39,97,28],[40,41,97,29,"CombatContext"],[40,54,97,42],[40,55,97,43],[41,4,98,2],[41,8,98,6],[41,9,98,7,"context"],[41,16,98,14],[41,18,98,16],[42,6,99,4],[42,12,99,10],[42,16,99,14,"Error"],[42,21,99,19],[42,22,99,20],[42,70,99,68],[42,71,99,69],[43,4,100,2],[44,4,101,2],[44,11,101,9,"context"],[44,18,101,16],[45,2,102,0],[45,3,102,1],[46,2,102,2,"_s"],[46,4,102,2],[46,5,96,13,"useCombat"],[46,14,96,22],[47,2,104,0],[47,6,104,4,"enemyCounter"],[47,18,104,16],[47,21,104,19],[47,22,104,20],[47,23,104,21],[47,24,104,22],[49,2,106,7],[49,6,106,13,"CombatProvider"],[49,20,106,27],[49,23,106,30,"_ref"],[49,27,106,30],[49,31,106,73],[50,4,106,73,"_s4"],[50,7,106,73],[51,4,106,73],[51,8,106,73,"_s3"],[51,11,106,73],[51,14,106,73,"$RefreshSig$"],[51,26,106,73],[52,4,106,73],[52,8,106,33,"children"],[52,16,106,41],[52,19,106,41,"_ref"],[52,23,106,41],[52,24,106,33,"children"],[52,32,106,41],[53,4,107,2],[53,8,107,8,"game"],[53,12,107,12],[53,15,107,15],[53,19,107,15,"useGame"],[53,31,107,22],[53,32,107,22,"useGame"],[53,39,107,22],[53,41,107,23],[53,42,107,24],[54,4,108,2],[54,8,108,2,"_useZone"],[54,16,108,2],[54,19,108,77],[54,23,108,77,"useZone"],[54,35,108,84],[54,36,108,84,"useZone"],[54,43,108,84],[54,45,108,85],[54,46,108,86],[55,6,108,10,"currentZone"],[55,17,108,21],[55,20,108,21,"_useZone"],[55,28,108,21],[55,29,108,10,"currentZone"],[55,40,108,21],[56,6,108,23,"currentZoneLevel"],[56,22,108,39],[56,25,108,39,"_useZone"],[56,33,108,39],[56,34,108,23,"currentZoneLevel"],[56,50,108,39],[57,6,108,41,"recordEnemyKill"],[57,21,108,56],[57,24,108,56,"_useZone"],[57,32,108,56],[57,33,108,41,"recordEnemyKill"],[57,48,108,56],[58,6,108,58,"spawnZoneEnemy"],[58,20,108,72],[58,23,108,72,"_useZone"],[58,31,108,72],[58,32,108,58,"spawnZoneEnemy"],[58,46,108,72],[60,4,110,2],[61,4,111,2],[61,8,111,8,"initialCombatState"],[61,26,111,39],[61,29,111,42],[62,6,112,4,"isInCombat"],[62,16,112,14],[62,18,112,16],[62,23,112,21],[63,6,113,4,"currentTick"],[63,17,113,15],[63,19,113,17],[63,20,113,18],[64,6,114,4,"enemies"],[64,13,114,11],[64,15,114,13],[64,17,114,15],[65,6,115,4,"abilityManager"],[65,20,115,18],[65,22,115,20],[65,26,115,24,"AbilityManager"],[65,44,115,38],[65,45,115,38,"AbilityManager"],[65,59,115,38],[65,60,115,39],[65,61,115,40],[66,6,116,4,"statusEffects"],[66,19,116,17],[66,21,116,19],[66,25,116,23,"StatusEffectManager"],[66,44,116,42],[66,45,116,42,"StatusEffectManager"],[66,64,116,42],[66,65,116,43],[66,66,116,44],[67,6,117,4,"playerStats"],[67,17,117,15],[67,19,117,17],[68,8,118,6,"attack"],[68,14,118,12],[68,16,118,14],[68,18,118,16],[69,8,118,18],[70,8,119,6,"defense"],[70,15,119,13],[70,17,119,15],[70,18,119,16],[71,8,120,6,"health"],[71,14,120,12],[71,16,120,14],[71,19,120,17],[72,8,121,6,"maxHealth"],[72,17,121,15],[72,19,121,17],[72,22,121,20],[73,8,122,6,"critChance"],[73,18,122,16],[73,20,122,18],[73,21,122,19],[74,8,123,6,"critDamage"],[74,18,123,16],[74,20,123,18],[74,23,123,21],[75,8,124,6,"cooldownReduction"],[75,25,124,23],[75,27,124,25],[76,6,125,4],[77,4,126,2],[77,5,126,3],[78,4,128,2],[78,8,128,2,"_useState"],[78,17,128,2],[78,20,128,40],[78,24,128,40,"useState"],[78,30,128,48],[78,31,128,48,"useState"],[78,39,128,48],[78,41,128,62,"initialCombatState"],[78,59,128,80],[78,60,128,81],[79,6,128,81,"_useState2"],[79,16,128,81],[79,23,128,81,"_slicedToArray"],[79,37,128,81],[79,38,128,81,"default"],[79,45,128,81],[79,47,128,81,"_useState"],[79,56,128,81],[80,6,128,9,"combatState"],[80,17,128,20],[80,20,128,20,"_useState2"],[80,30,128,20],[81,6,128,22,"setCombatState"],[81,20,128,36],[81,23,128,36,"_useState2"],[81,33,128,36],[83,4,130,2],[84,4,131,2],[84,8,131,2,"useEffect"],[84,14,131,11],[84,15,131,11,"useEffect"],[84,24,131,11],[84,26,131,12],[84,32,131,18],[85,6,132,4],[85,10,132,8,"game"],[85,14,132,12],[85,15,132,13,"gameState"],[85,24,132,22],[85,25,132,23,"abilityData"],[85,36,132,34],[85,40,132,38,"combatState"],[85,51,132,49],[85,52,132,50,"abilityManager"],[85,66,132,64],[85,68,132,66],[86,8,133,6,"console"],[86,15,133,13],[86,16,133,14,"log"],[86,19,133,17],[86,20,133,18],[86,68,133,66],[86,70,133,68,"game"],[86,74,133,72],[86,75,133,73,"gameState"],[86,84,133,82],[86,85,133,83,"abilityData"],[86,96,133,94],[86,97,133,95],[87,8,134,6,"combatState"],[87,19,134,17],[87,20,134,18,"abilityManager"],[87,34,134,32],[87,35,134,33,"restoreFromSaveData"],[87,54,134,52],[87,55,134,53,"game"],[87,59,134,57],[87,60,134,58,"gameState"],[87,69,134,67],[87,70,134,68,"abilityData"],[87,81,134,79],[87,82,134,80],[89,8,136,6],[90,8,137,6,"setCombatState"],[90,22,137,20],[90,23,137,21,"prev"],[90,27,137,25],[90,32,137,30],[91,10,137,32],[91,13,137,35,"prev"],[92,8,137,40],[92,9,137,41],[92,10,137,42],[92,11,137,43],[93,6,138,4],[94,4,139,2],[94,5,139,3],[94,7,139,5],[94,8,139,6,"game"],[94,12,139,10],[94,13,139,11,"gameState"],[94,22,139,20],[94,23,139,21,"abilityData"],[94,34,139,32],[94,36,139,34,"combatState"],[94,47,139,45],[94,48,139,46,"abilityManager"],[94,62,139,60],[94,63,139,61],[94,64,139,62],[96,4,141,2],[97,4,142,2],[97,8,142,2,"useEffect"],[97,14,142,11],[97,15,142,11,"useEffect"],[97,24,142,11],[97,26,142,12],[97,32,142,18],[98,6,143,4],[98,10,143,8,"game"],[98,14,143,12],[98,15,143,13,"gameState"],[98,24,143,22],[98,25,143,23,"ninja"],[98,30,143,28],[98,32,143,30],[99,8,144,6],[99,12,144,12,"effectiveStats"],[99,26,144,26],[99,29,144,29,"game"],[99,33,144,33],[99,34,144,34,"getEffectiveStats"],[99,51,144,51],[99,52,144,52],[99,53,144,53],[100,8,146,6,"setCombatState"],[100,22,146,20],[100,23,146,21,"prev"],[100,27,146,25],[100,31,146,29],[101,10,147,8],[102,10,148,8],[102,14,148,12,"prev"],[102,18,148,16],[102,19,148,17,"playerStats"],[102,30,148,28],[102,31,148,29,"maxHealth"],[102,40,148,38],[102,45,148,43],[102,48,148,46],[102,52,148,50,"prev"],[102,56,148,54],[102,57,148,55,"playerStats"],[102,68,148,66],[102,69,148,67,"attack"],[102,75,148,73],[102,80,148,78],[102,82,148,80],[102,84,148,82],[103,12,149,10,"console"],[103,19,149,17],[103,20,149,18,"log"],[103,23,149,21],[103,24,149,22],[103,60,149,58,"effectiveStats"],[103,74,149,72],[103,75,149,73,"health"],[103,81,149,79],[103,93,149,91,"effectiveStats"],[103,107,149,105],[103,108,149,106,"attack"],[103,114,149,112],[103,127,149,125,"effectiveStats"],[103,141,149,139],[103,142,149,140,"defense"],[103,149,149,147],[103,151,149,149],[103,152,149,150],[104,12,151,10],[104,19,151,17],[105,14,152,12],[105,17,152,15,"prev"],[105,21,152,19],[106,14,153,12,"playerStats"],[106,25,153,23],[106,27,153,25],[107,16,154,14,"attack"],[107,22,154,20],[107,24,154,22,"effectiveStats"],[107,38,154,36],[107,39,154,37,"attack"],[107,45,154,43],[108,16,155,14,"defense"],[108,23,155,21],[108,25,155,23,"effectiveStats"],[108,39,155,37],[108,40,155,38,"defense"],[108,47,155,45],[109,16,156,14,"health"],[109,22,156,20],[109,24,156,22,"effectiveStats"],[109,38,156,36],[109,39,156,37,"health"],[109,45,156,43],[110,16,156,45],[111,16,157,14,"maxHealth"],[111,25,157,23],[111,27,157,25,"effectiveStats"],[111,41,157,39],[111,42,157,40,"health"],[111,48,157,46],[112,16,158,14,"critChance"],[112,26,158,24],[112,28,158,26,"effectiveStats"],[112,42,158,40],[112,43,158,41,"critChance"],[112,53,158,51],[112,57,158,55],[112,58,158,56],[113,16,159,14,"critDamage"],[113,26,159,24],[113,28,159,26,"effectiveStats"],[113,42,159,40],[113,43,159,41,"critDamage"],[113,53,159,51],[113,57,159,55],[113,60,159,58],[114,16,160,14,"cooldownReduction"],[114,33,160,31],[114,35,160,33,"effectiveStats"],[114,49,160,47],[114,50,160,48,"cooldownReduction"],[114,67,160,65],[114,71,160,69],[115,14,161,12],[116,12,162,10],[116,13,162,11],[117,10,163,8],[118,10,164,8],[118,17,164,15,"prev"],[118,21,164,19],[119,8,165,6],[119,9,165,7],[119,10,165,8],[120,6,166,4],[121,4,167,2],[121,5,167,3],[121,7,167,5],[121,8,167,6,"game"],[121,12,167,10],[121,13,167,11,"gameState"],[121,22,167,20],[121,23,167,21,"ninja"],[121,28,167,26],[121,29,167,27],[121,30,167,28],[122,4,169,2],[122,8,169,2,"_useState3"],[122,18,169,2],[122,21,169,40],[122,25,169,40,"useState"],[122,31,169,48],[122,32,169,48,"useState"],[122,40,169,48],[122,42,169,69],[122,44,169,71],[122,45,169,72],[123,6,169,72,"_useState4"],[123,16,169,72],[123,23,169,72,"_slicedToArray"],[123,37,169,72],[123,38,169,72,"default"],[123,45,169,72],[123,47,169,72,"_useState3"],[123,57,169,72],[124,6,169,9,"projectiles"],[124,17,169,20],[124,20,169,20,"_useState4"],[124,30,169,20],[125,6,169,22,"setProjectiles"],[125,20,169,36],[125,23,169,36,"_useState4"],[125,33,169,36],[126,4,170,2],[126,8,170,2,"_useState5"],[126,18,170,2],[126,21,170,52],[126,25,170,52,"useState"],[126,31,170,60],[126,32,170,60,"useState"],[126,40,170,60],[126,42,170,69],[126,43,170,70],[126,44,170,71],[127,6,170,71,"_useState6"],[127,16,170,71],[127,23,170,71,"_slicedToArray"],[127,37,170,71],[127,38,170,71,"default"],[127,45,170,71],[127,47,170,71,"_useState5"],[127,57,170,71],[128,6,170,9,"lastExplosionTime"],[128,23,170,26],[128,26,170,26,"_useState6"],[128,36,170,26],[129,6,170,28,"setLastExplosionTime"],[129,26,170,48],[129,29,170,48,"_useState6"],[129,39,170,48],[130,4,171,2],[131,4,172,2],[133,4,174,2],[134,4,175,2],[134,8,175,8,"handleEnemyKill"],[134,23,175,23],[134,26,175,26],[134,30,175,26,"useCallback"],[134,36,175,37],[134,37,175,37,"useCallback"],[134,48,175,37],[134,50,175,39,"enemy"],[134,55,175,57],[134,59,175,62],[135,6,176,4,"console"],[135,13,176,11],[135,14,176,12,"log"],[135,17,176,15],[135,18,176,16],[135,61,176,59,"enemy"],[135,66,176,64],[135,67,176,65,"name"],[135,71,176,69],[135,80,176,78,"enemy"],[135,85,176,83],[135,86,176,84,"id"],[135,88,176,86],[135,91,176,89],[135,92,176,90],[136,6,177,4,"console"],[136,13,177,11],[136,14,177,12,"log"],[136,17,177,15],[136,18,177,16],[136,73,177,71],[136,75,177,73,"enemy"],[136,80,177,78],[136,81,177,79,"id"],[136,83,177,81],[136,84,177,82],[138,6,179,4],[139,6,180,4],[139,10,180,10,"xpMultiplier"],[139,22,180,22],[139,25,180,25,"game"],[139,29,180,29],[139,30,180,30,"gameState"],[139,39,180,39],[139,40,180,40,"subscriptionBenefits"],[139,60,180,60],[139,62,180,62,"xp_multiplier"],[139,75,180,75],[139,79,180,79],[139,82,180,82],[140,6,181,4],[140,10,181,10,"dropMultiplier"],[140,24,181,24],[140,27,181,27,"game"],[140,31,181,31],[140,32,181,32,"gameState"],[140,41,181,41],[140,42,181,42,"subscriptionBenefits"],[140,62,181,62],[140,64,181,64,"drop_multiplier"],[140,79,181,79],[140,83,181,83],[140,86,181,86],[142,6,183,4],[143,6,184,4],[143,10,184,10,"baseXpReward"],[143,22,184,22],[143,25,184,25,"enemy"],[143,30,184,30],[143,31,184,31,"zoneXP"],[143,37,184,37],[143,41,184,41],[143,45,184,45],[143,46,184,46],[143,47,184,47],[144,6,185,4],[144,10,185,10,"xpReward"],[144,18,185,18],[144,21,185,21,"Math"],[144,25,185,25],[144,26,185,26,"floor"],[144,31,185,31],[144,32,185,32,"baseXpReward"],[144,44,185,44],[144,47,185,47,"xpMultiplier"],[144,59,185,59],[144,60,185,60],[145,6,186,4],[145,10,186,10,"goldReward"],[145,20,186,20],[145,23,186,23,"Math"],[145,27,186,27],[145,28,186,28,"floor"],[145,33,186,33],[145,34,186,34],[145,39,186,39],[145,42,186,42,"dropMultiplier"],[145,56,186,56],[145,57,186,57],[145,58,186,58],[145,59,186,59],[147,6,188,4,"console"],[147,13,188,11],[147,14,188,12,"log"],[147,17,188,15],[147,18,188,16],[147,48,188,46,"xpReward"],[147,56,188,54],[147,67,188,65,"goldReward"],[147,77,188,75],[147,93,188,91],[147,94,188,92],[148,6,189,4,"console"],[148,13,189,11],[148,14,189,12,"log"],[148,17,189,15],[148,18,189,16],[148,60,189,58,"xpMultiplier"],[148,72,189,70],[148,94,189,92,"dropMultiplier"],[148,108,189,106],[148,110,189,108],[148,111,189,109],[149,6,190,4,"console"],[149,13,190,11],[149,14,190,12,"log"],[149,17,190,15],[149,18,190,16],[149,54,190,52,"baseXpReward"],[149,66,190,64],[149,81,190,79,"xpReward"],[149,89,190,87],[149,91,190,89],[149,92,190,90],[150,6,191,4,"console"],[150,13,191,11],[150,14,191,12,"log"],[150,17,191,15],[150,18,191,16],[150,58,191,56],[150,60,191,58,"JSON"],[150,64,191,62],[150,65,191,63,"stringify"],[150,74,191,72],[150,75,191,73,"game"],[150,79,191,77],[150,80,191,78,"gameState"],[150,89,191,87],[150,90,191,88,"subscriptionBenefits"],[150,110,191,108],[150,111,191,109],[150,112,191,110],[151,6,192,4,"console"],[151,13,192,11],[151,14,192,12,"log"],[151,17,192,15],[151,18,192,16],[151,49,192,47,"Platform"],[151,61,192,55],[151,62,192,55,"Platform"],[151,70,192,55],[151,71,192,56,"OS"],[151,73,192,58],[151,84,192,69,"Date"],[151,88,192,73],[151,89,192,74,"now"],[151,92,192,77],[151,93,192,78],[151,94,192,79],[151,96,192,81],[151,97,192,82],[153,6,194,4],[154,6,195,4],[155,6,196,4,"setTimeout"],[155,16,196,14],[155,17,196,15],[155,23,196,21],[156,8,197,6,"console"],[156,15,197,13],[156,16,197,14,"log"],[156,19,197,17],[156,20,197,18],[156,78,197,76],[156,79,197,77],[158,8,199,6],[159,8,200,6,"game"],[159,12,200,10],[159,13,200,11,"updateNinja"],[159,24,200,22],[159,25,200,24,"prev"],[159,29,200,28],[159,33,200,33],[160,10,201,8,"console"],[160,17,201,15],[160,18,201,16,"log"],[160,21,201,19],[160,22,201,20],[160,54,201,52,"prev"],[160,58,201,56],[160,59,201,57,"experience"],[160,69,201,67],[160,81,201,79,"prev"],[160,85,201,83],[160,86,201,84,"experience"],[160,96,201,94],[160,99,201,97,"xpReward"],[160,107,201,105],[160,109,201,107],[160,110,201,108],[161,10,202,8,"console"],[161,17,202,15],[161,18,202,16,"log"],[161,21,202,19],[161,22,202,20],[161,56,202,54,"prev"],[161,60,202,58],[161,61,202,59,"gold"],[161,65,202,63],[161,77,202,75,"prev"],[161,81,202,79],[161,82,202,80,"gold"],[161,86,202,84],[161,89,202,87,"goldReward"],[161,99,202,97],[161,101,202,99],[161,102,202,100],[162,10,203,8],[162,17,203,15],[163,12,204,10,"experience"],[163,22,204,20],[163,24,204,22,"prev"],[163,28,204,26],[163,29,204,27,"experience"],[163,39,204,37],[163,42,204,40,"xpReward"],[163,50,204,48],[164,12,205,10,"gold"],[164,16,205,14],[164,18,205,16,"prev"],[164,22,205,20],[164,23,205,21,"gold"],[164,27,205,25],[164,30,205,28,"goldReward"],[165,10,206,8],[165,11,206,9],[166,8,207,6],[166,9,207,7],[166,10,207,8],[168,8,209,6],[169,8,210,6],[169,12,210,12,"zoneEnemy"],[169,21,210,21],[169,24,210,24],[170,10,211,8,"id"],[170,12,211,10],[170,14,211,12,"enemy"],[170,19,211,17],[170,20,211,18,"id"],[170,22,211,20],[171,10,212,8,"typeId"],[171,16,212,14],[171,18,212,16,"enemy"],[171,23,212,21],[171,24,212,22,"zoneTypeId"],[171,34,212,32],[171,38,212,36],[171,48,212,46],[172,10,212,48],[173,10,213,8,"name"],[173,14,213,12],[173,16,213,14,"enemy"],[173,21,213,19],[173,22,213,20,"name"],[173,26,213,24],[174,10,214,8,"icon"],[174,14,214,12],[174,16,214,14],[174,20,214,18],[175,10,214,20],[176,10,215,8,"hp"],[176,12,215,10],[176,14,215,12],[176,15,215,13],[177,10,215,15],[178,10,216,8,"maxHP"],[178,15,216,13],[178,17,216,15,"enemy"],[178,22,216,20],[178,23,216,21,"maxHealth"],[178,32,216,30],[179,10,217,8,"attack"],[179,16,217,14],[179,18,217,16,"enemy"],[179,23,217,21],[179,24,217,22,"stats"],[179,29,217,27],[179,30,217,28,"attack"],[179,36,217,34],[180,10,218,8,"xp"],[180,12,218,10],[180,14,218,12,"enemy"],[180,19,218,17],[180,20,218,18,"zoneXP"],[180,26,218,24],[180,30,218,28],[180,32,218,30],[181,10,218,32],[182,10,219,8,"position"],[182,18,219,16],[182,20,219,18,"enemy"],[182,25,219,23],[182,26,219,24,"position"],[183,8,220,6],[183,9,220,7],[184,8,222,6,"console"],[184,15,222,13],[184,16,222,14,"log"],[184,19,222,17],[184,20,222,18],[184,40,222,38,"zoneEnemy"],[184,49,222,47],[184,50,222,48,"name"],[184,54,222,52],[184,59,222,57,"zoneEnemy"],[184,68,222,66],[184,69,222,67,"typeId"],[184,75,222,73],[184,113,222,111],[184,114,222,112],[185,8,223,6,"recordEnemyKill"],[185,23,223,21],[185,24,223,22,"zoneEnemy"],[185,33,223,31],[185,34,223,32],[186,6,224,4],[186,7,224,5],[186,9,224,7],[186,10,224,8],[186,11,224,9],[186,12,224,10],[186,13,224,11],[187,4,225,2],[187,5,225,3],[187,7,225,5],[187,8,225,6,"game"],[187,12,225,10],[187,13,225,11,"updateNinja"],[187,24,225,22],[187,26,225,24,"recordEnemyKill"],[187,41,225,39],[187,42,225,40],[187,43,225,41],[189,4,227,2],[190,4,228,2],[190,8,228,8,"handleCombatTick"],[190,24,228,24],[190,27,228,27,"React"],[190,32,228,32],[190,33,228,32,"default"],[190,40,228,32],[190,41,228,33,"useCallback"],[190,52,228,44],[190,53,228,45],[190,59,228,51],[191,6,228,51],[191,10,228,51,"_s2"],[191,13,228,51],[191,16,228,51,"$RefreshSig$"],[191,28,228,51],[192,6,229,4,"console"],[192,13,229,11],[192,14,229,12,"log"],[192,17,229,15],[192,18,229,16],[192,87,229,85],[192,88,229,86],[193,6,230,4,"console"],[193,13,230,11],[193,14,230,12,"log"],[193,17,230,15],[193,18,230,16],[193,65,230,63,"isManualControlActive"],[193,86,230,84],[193,99,230,97,"game"],[193,103,230,101],[193,104,230,102,"gameState"],[193,113,230,111],[193,114,230,112,"isAlive"],[193,121,230,119],[193,123,230,121],[193,124,230,122],[194,6,232,4],[194,10,232,8,"enemiesToKill"],[194,23,232,36],[194,26,232,39],[194,28,232,41],[194,29,232,42],[194,30,232,43],[196,6,234,4,"_s2"],[196,9,234,4],[196,10,234,4,"setCombatState"],[196,24,234,18],[196,25,234,18,"_s2"],[196,28,234,18],[196,29,234,19,"prev"],[196,33,234,23],[196,37,234,27],[197,8,234,27,"_s2"],[197,11,234,27],[198,8,235,6],[198,12,235,12,"newTick"],[198,19,235,19],[198,22,235,22,"combatEngine"],[198,41,235,34],[198,42,235,34,"combatEngine"],[198,54,235,34],[198,55,235,35,"getCurrentTick"],[198,69,235,49],[198,70,235,50],[198,71,235,51],[199,8,236,6],[199,12,236,12,"newState"],[199,20,236,20],[199,23,236,23],[200,10,236,25],[200,13,236,28,"prev"],[200,17,236,32],[201,10,236,34,"currentTick"],[201,21,236,45],[201,23,236,47,"newTick"],[202,8,236,55],[202,9,236,56],[203,8,238,6],[203,12,238,10],[203,13,238,11,"newState"],[203,21,238,19],[203,22,238,20,"isInCombat"],[203,32,238,30],[203,34,238,32],[203,41,238,39,"newState"],[203,49,238,47],[205,8,240,6],[206,8,241,6,"newState"],[206,16,241,14],[206,17,241,15,"abilityManager"],[206,31,241,29],[206,32,241,30,"updateCooldowns"],[206,47,241,45],[206,48,241,46,"newTick"],[206,55,241,53],[206,56,241,54],[208,8,243,6],[209,8,244,6],[209,12,244,12,"effectResults"],[209,25,244,25],[209,28,244,28,"newState"],[209,36,244,36],[209,37,244,37,"statusEffects"],[209,50,244,50],[209,51,244,51,"processTick"],[209,62,244,62],[209,63,244,63,"newTick"],[209,70,244,70],[209,71,244,71],[211,8,246,6],[212,8,247,6,"effectResults"],[212,21,247,19],[212,22,247,20,"forEach"],[212,29,247,27],[212,30,247,28],[212,31,247,29,"results"],[212,38,247,36],[212,40,247,38,"entityId"],[212,48,247,46],[212,53,247,51],[213,10,248,8],[213,14,248,14,"enemyIndex"],[213,24,248,24],[213,27,248,27,"newState"],[213,35,248,35],[213,36,248,36,"enemies"],[213,43,248,43],[213,44,248,44,"findIndex"],[213,53,248,53],[213,54,248,54,"e"],[213,55,248,55],[213,59,248,59,"e"],[213,60,248,60],[213,61,248,61,"id"],[213,63,248,63],[213,68,248,68,"entityId"],[213,76,248,76],[213,77,248,77],[214,10,249,8],[214,14,249,12,"enemyIndex"],[214,24,249,22],[214,28,249,26],[214,29,249,27],[214,31,249,29],[215,12,250,10,"results"],[215,19,250,17],[215,20,250,18,"forEach"],[215,27,250,25],[215,28,250,26,"result"],[215,34,250,32],[215,38,250,36],[216,14,251,12,"newState"],[216,22,251,20],[216,23,251,21,"enemies"],[216,30,251,28],[216,31,251,29,"enemyIndex"],[216,41,251,39],[216,42,251,40],[216,43,251,41,"health"],[216,49,251,47],[216,53,251,51,"result"],[216,59,251,57],[216,60,251,58,"damage"],[216,66,251,64],[217,14,252,12,"newState"],[217,22,252,20],[217,23,252,21,"enemies"],[217,30,252,28],[217,31,252,29,"enemyIndex"],[217,41,252,39],[217,42,252,40],[217,43,252,41,"lastDamaged"],[217,54,252,52],[217,57,252,55,"newTick"],[217,64,252,62],[218,12,253,10],[218,13,253,11],[218,14,253,12],[219,10,254,8],[220,8,255,6],[220,9,255,7],[220,10,255,8],[222,8,257,6],[223,8,258,6],[224,8,259,6],[224,12,259,10,"newState"],[224,20,259,18],[224,21,259,19,"playerStats"],[224,32,259,30],[224,36,259,34,"game"],[224,40,259,38],[224,41,259,39,"gameState"],[224,50,259,48],[224,51,259,49,"ninja"],[224,56,259,54],[224,58,259,56],[225,10,260,8],[225,14,260,14,"effectiveStats"],[225,28,260,28],[225,31,260,31,"game"],[225,35,260,35],[225,36,260,36,"getEffectiveStats"],[225,53,260,53],[225,54,260,54],[225,55,260,55],[227,10,262,8],[228,10,263,8],[228,14,263,12,"newState"],[228,22,263,20],[228,23,263,21,"playerStats"],[228,34,263,32],[228,35,263,33,"attack"],[228,41,263,39],[228,46,263,44,"effectiveStats"],[228,60,263,58],[228,61,263,59,"attack"],[228,67,263,65],[228,71,264,12,"newState"],[228,79,264,20],[228,80,264,21,"playerStats"],[228,91,264,32],[228,92,264,33,"defense"],[228,99,264,40],[228,104,264,45,"effectiveStats"],[228,118,264,59],[228,119,264,60,"defense"],[228,126,264,67],[228,130,265,12,"newState"],[228,138,265,20],[228,139,265,21,"playerStats"],[228,150,265,32],[228,151,265,33,"maxHealth"],[228,160,265,42],[228,165,265,47,"effectiveStats"],[228,179,265,61],[228,180,265,62,"maxHealth"],[228,189,265,71],[228,191,265,73],[229,12,267,10,"console"],[229,19,267,17],[229,20,267,18,"log"],[229,23,267,21],[229,24,267,22],[229,58,267,56,"newState"],[229,66,267,64],[229,67,267,65,"playerStats"],[229,78,267,76],[229,79,267,77,"attack"],[229,85,267,83],[229,91,267,89,"effectiveStats"],[229,105,267,103],[229,106,267,104,"attack"],[229,112,267,110],[229,125,267,123,"newState"],[229,133,267,131],[229,134,267,132,"playerStats"],[229,145,267,143],[229,146,267,144,"defense"],[229,153,267,151],[229,159,267,157,"effectiveStats"],[229,173,267,171],[229,174,267,172,"defense"],[229,181,267,179],[229,192,267,190,"newState"],[229,200,267,198],[229,201,267,199,"playerStats"],[229,212,267,210],[229,213,267,211,"maxHealth"],[229,222,267,220],[229,228,267,226,"effectiveStats"],[229,242,267,240],[229,243,267,241,"maxHealth"],[229,252,267,250],[229,254,267,252],[229,255,267,253],[231,12,269,10],[232,12,270,10],[232,16,270,14,"newHealth"],[232,25,270,23],[232,28,270,26,"newState"],[232,36,270,34],[232,37,270,35,"playerStats"],[232,48,270,46],[232,49,270,47,"health"],[232,55,270,53],[233,12,271,10],[233,16,271,14,"newState"],[233,24,271,22],[233,25,271,23,"playerStats"],[233,36,271,34],[233,37,271,35,"maxHealth"],[233,46,271,44],[233,51,271,49,"effectiveStats"],[233,65,271,63],[233,66,271,64,"maxHealth"],[233,75,271,73],[233,77,271,75],[234,14,272,12],[235,14,273,12],[235,18,273,16,"effectiveStats"],[235,32,273,30],[235,33,273,31,"maxHealth"],[235,42,273,40],[235,45,273,43,"newState"],[235,53,273,51],[235,54,273,52,"playerStats"],[235,65,273,63],[235,66,273,64,"maxHealth"],[235,75,273,73],[235,78,273,76],[235,81,273,79],[235,83,273,81],[236,16,274,14],[237,16,275,14],[237,20,275,20,"healthRatio"],[237,31,275,31],[237,34,275,34,"newState"],[237,42,275,42],[237,43,275,43,"playerStats"],[237,54,275,54],[237,55,275,55,"maxHealth"],[237,64,275,64],[237,67,275,67],[237,68,275,68],[237,71,276,16,"newState"],[237,79,276,24],[237,80,276,25,"playerStats"],[237,91,276,36],[237,92,276,37,"health"],[237,98,276,43],[237,101,276,46,"newState"],[237,109,276,54],[237,110,276,55,"playerStats"],[237,121,276,66],[237,122,276,67,"maxHealth"],[237,131,276,76],[237,134,276,79],[237,135,276,80],[238,16,277,14,"newHealth"],[238,25,277,23],[238,28,277,26,"Math"],[238,32,277,30],[238,33,277,31,"floor"],[238,38,277,36],[238,39,277,37,"effectiveStats"],[238,53,277,51],[238,54,277,52,"maxHealth"],[238,63,277,61],[238,66,277,64,"healthRatio"],[238,77,277,75],[238,78,277,76],[239,14,278,12],[239,15,278,13],[239,21,278,19],[239,25,278,23,"newState"],[239,33,278,31],[239,34,278,32,"playerStats"],[239,45,278,43],[239,46,278,44,"health"],[239,52,278,50],[239,55,278,53,"effectiveStats"],[239,69,278,67],[239,70,278,68,"maxHealth"],[239,79,278,77],[239,81,278,79],[240,16,279,14],[241,16,280,14,"newHealth"],[241,25,280,23],[241,28,280,26,"effectiveStats"],[241,42,280,40],[241,43,280,41,"maxHealth"],[241,52,280,50],[242,14,281,12],[243,14,282,12],[244,12,283,10],[245,12,285,10,"newState"],[245,20,285,18],[245,21,285,19,"playerStats"],[245,32,285,30],[245,35,285,33],[246,14,286,12],[246,17,286,15,"newState"],[246,25,286,23],[246,26,286,24,"playerStats"],[246,37,286,35],[247,14,287,12,"attack"],[247,20,287,18],[247,22,287,20,"effectiveStats"],[247,36,287,34],[247,37,287,35,"attack"],[247,43,287,41],[248,14,288,12,"defense"],[248,21,288,19],[248,23,288,21,"effectiveStats"],[248,37,288,35],[248,38,288,36,"defense"],[248,45,288,43],[249,14,289,12,"maxHealth"],[249,23,289,21],[249,25,289,23,"effectiveStats"],[249,39,289,37],[249,40,289,38,"maxHealth"],[249,49,289,47],[250,14,289,49],[251,14,290,12,"health"],[251,20,290,18],[251,22,290,20,"newHealth"],[251,31,290,29],[252,14,290,31],[253,14,291,12,"critChance"],[253,24,291,22],[253,26,291,24,"effectiveStats"],[253,40,291,38],[253,41,291,39,"critChance"],[253,51,291,49],[253,55,291,53,"newState"],[253,63,291,61],[253,64,291,62,"playerStats"],[253,75,291,73],[253,76,291,74,"critChance"],[253,86,291,84],[254,14,292,12,"critDamage"],[254,24,292,22],[254,26,292,24,"effectiveStats"],[254,40,292,38],[254,41,292,39,"critDamage"],[254,51,292,49],[254,55,292,53,"newState"],[254,63,292,61],[254,64,292,62,"playerStats"],[254,75,292,73],[254,76,292,74,"critDamage"],[254,86,292,84],[255,14,293,12,"cooldownReduction"],[255,31,293,29],[255,33,293,31,"effectiveStats"],[255,47,293,45],[255,48,293,46,"cooldownReduction"],[255,65,293,63],[255,69,293,67,"newState"],[255,77,293,75],[255,78,293,76,"playerStats"],[255,89,293,87],[255,90,293,88,"cooldownReduction"],[256,12,294,10],[256,13,294,11],[257,10,295,8],[259,10,297,8],[260,10,298,8],[260,14,298,12,"game"],[260,18,298,16],[260,19,298,17,"gameState"],[260,28,298,26],[260,29,298,27,"isAlive"],[260,36,298,34],[260,40,299,12,"game"],[260,44,299,16],[260,45,299,17,"gameState"],[260,54,299,26],[260,55,299,27,"ninja"],[260,60,299,32],[260,61,299,33,"health"],[260,67,299,39],[260,72,299,44,"effectiveStats"],[260,86,299,58],[260,87,299,59,"maxHealth"],[260,96,299,68],[260,100,300,12,"newState"],[260,108,300,20],[260,109,300,21,"playerStats"],[260,120,300,32],[260,121,300,33,"health"],[260,127,300,39],[260,130,300,42,"effectiveStats"],[260,144,300,56],[260,145,300,57,"maxHealth"],[260,154,300,66],[260,157,300,69],[260,160,300,72],[260,162,300,74],[261,12,301,10,"console"],[261,19,301,17],[261,20,301,18,"log"],[261,23,301,21],[261,24,301,22],[261,58,301,56,"newState"],[261,66,301,64],[261,67,301,65,"playerStats"],[261,78,301,76],[261,79,301,77,"health"],[261,85,301,83],[261,91,301,89,"game"],[261,95,301,93],[261,96,301,94,"gameState"],[261,105,301,103],[261,106,301,104,"ninja"],[261,111,301,109],[261,112,301,110,"health"],[261,118,301,116],[261,139,301,137],[261,140,301,138],[262,12,302,10,"newState"],[262,20,302,18],[262,21,302,19,"playerStats"],[262,32,302,30],[262,33,302,31,"health"],[262,39,302,37],[262,42,302,40,"game"],[262,46,302,44],[262,47,302,45,"gameState"],[262,56,302,54],[262,57,302,55,"ninja"],[262,62,302,60],[262,63,302,61,"health"],[262,69,302,67],[263,10,303,8],[264,8,304,6],[266,8,306,6],[267,8,307,6,"newState"],[267,16,307,14],[267,17,307,15,"enemies"],[267,24,307,22],[267,25,307,23,"forEach"],[267,32,307,30],[267,33,307,31,"enemy"],[267,38,307,36],[267,42,307,40],[268,10,308,8],[268,14,308,12],[268,15,308,13,"enemy"],[268,20,308,18],[268,21,308,19,"isBoss"],[268,27,308,25],[268,29,308,27],[269,12,308,29],[270,12,309,10],[271,12,310,10],[271,16,310,16,"MOVEMENT_SPEED"],[271,30,310,30],[271,33,310,33],[271,37,310,37],[271,38,310,38],[271,39,310,39],[272,12,311,10],[272,16,311,16,"SCREEN_WIDTH"],[272,28,311,28],[272,31,311,31],[272,34,311,34],[273,12,312,10],[273,16,312,16,"GAME_AREA_HEIGHT"],[273,32,312,32],[273,35,312,35],[273,38,312,38],[273,39,312,39],[273,40,312,40],[274,12,313,10],[274,16,313,16,"ENEMY_SIZE"],[274,26,313,26],[274,29,313,29],[274,31,313,31],[276,12,315,10],[277,12,316,10],[277,16,316,16,"playerX"],[277,23,316,23],[277,26,316,26,"currentNinjaPosition"],[277,46,316,46],[277,47,316,47,"x"],[277,48,316,48],[278,12,317,10],[278,16,317,16,"playerY"],[278,23,317,23],[278,26,317,26,"currentNinjaPosition"],[278,46,317,46],[278,47,317,47,"y"],[278,48,317,48],[280,12,319,10],[281,12,320,10],[281,16,320,16,"deltaX"],[281,22,320,22],[281,25,320,25,"playerX"],[281,32,320,32],[281,35,320,35,"enemy"],[281,40,320,40],[281,41,320,41,"position"],[281,49,320,49],[281,50,320,50,"x"],[281,51,320,51],[282,12,321,10],[282,16,321,16,"deltaY"],[282,22,321,22],[282,25,321,25,"playerY"],[282,32,321,32],[282,35,321,35,"enemy"],[282,40,321,40],[282,41,321,41,"position"],[282,49,321,49],[282,50,321,50,"y"],[282,51,321,51],[283,12,322,10],[283,16,322,16,"distance"],[283,24,322,24],[283,27,322,27,"Math"],[283,31,322,31],[283,32,322,32,"sqrt"],[283,36,322,36],[283,37,322,37,"deltaX"],[283,43,322,43],[283,46,322,46,"deltaX"],[283,52,322,52],[283,55,322,55,"deltaY"],[283,61,322,61],[283,64,322,64,"deltaY"],[283,70,322,70],[283,71,322,71],[285,12,324,10],[286,12,325,10],[286,16,325,16,"ATTACK_RANGE"],[286,28,325,28],[286,31,325,31],[286,33,325,33],[286,34,325,34],[286,35,325,35],[287,12,326,10],[287,16,326,16,"ATTACK_COOLDOWN"],[287,31,326,31],[287,34,326,34],[287,36,326,36],[287,37,326,37],[287,38,326,38],[289,12,328,10],[289,16,328,14,"distance"],[289,24,328,22],[289,28,328,26,"ATTACK_RANGE"],[289,40,328,38],[289,42,328,40],[290,14,329,12],[291,14,330,12],[291,18,330,16],[291,19,330,17,"enemy"],[291,24,330,22],[291,25,330,23,"lastAttackTick"],[291,39,330,37],[291,41,330,39,"enemy"],[291,46,330,44],[291,47,330,45,"lastAttackTick"],[291,61,330,59],[291,64,330,62],[291,65,330,63],[292,14,332,12],[292,18,332,16,"newState"],[292,26,332,24],[292,27,332,25,"currentTick"],[292,38,332,36],[292,41,332,39,"enemy"],[292,46,332,44],[292,47,332,45,"lastAttackTick"],[292,61,332,59],[292,65,332,63,"ATTACK_COOLDOWN"],[292,80,332,78],[292,82,332,80],[293,16,333,14],[294,16,334,14],[294,20,334,18],[294,21,334,19,"game"],[294,25,334,23],[294,26,334,24,"gameState"],[294,35,334,33],[294,36,334,34,"isAlive"],[294,43,334,41],[294,45,334,43],[295,18,335,16,"console"],[295,25,335,23],[295,26,335,24,"log"],[295,29,335,27],[295,30,335,28],[295,49,335,47,"enemy"],[295,54,335,52],[295,55,335,53,"name"],[295,59,335,57],[295,93,335,91],[295,94,335,92],[296,18,336,16],[297,18,337,16,"enemy"],[297,23,337,21],[297,24,337,22,"lastAttackTick"],[297,38,337,36],[297,41,337,39,"newState"],[297,49,337,47],[297,50,337,48,"currentTick"],[297,61,337,59],[298,16,338,14],[298,17,338,15],[298,23,338,21],[299,18,339,16],[300,18,340,16],[300,22,340,22,"isPlayerInvincible"],[300,40,340,40],[300,43,340,43,"game"],[300,47,340,47],[300,48,340,48,"gameState"],[300,57,340,57],[300,58,340,58,"isInvincible"],[300,70,340,70],[300,74,341,41,"game"],[300,78,341,45],[300,79,341,46,"gameState"],[300,88,341,55],[300,89,341,56,"invincibilityEndTime"],[300,109,341,76],[300,113,342,41,"Date"],[300,117,342,45],[300,118,342,46,"now"],[300,121,342,49],[300,122,342,50],[300,123,342,51],[300,126,342,54,"game"],[300,130,342,58],[300,131,342,59,"gameState"],[300,140,342,68],[300,141,342,69,"invincibilityEndTime"],[300,161,342,89],[301,18,344,16],[301,22,344,20,"isPlayerInvincible"],[301,40,344,38],[301,42,344,40],[302,20,345,18,"console"],[302,27,345,25],[302,28,345,26,"log"],[302,31,345,29],[302,32,345,30],[302,51,345,49,"enemy"],[302,56,345,54],[302,57,345,55,"name"],[302,61,345,59],[302,101,345,99],[302,102,345,100],[303,20,346,18],[304,20,347,18,"enemy"],[304,25,347,23],[304,26,347,24,"lastAttackTick"],[304,40,347,38],[304,43,347,41,"newState"],[304,51,347,49],[304,52,347,50,"currentTick"],[304,63,347,61],[305,18,348,16],[305,19,348,17],[305,25,348,23],[306,20,349,16],[307,20,350,16],[307,24,350,22,"baseAttack"],[307,34,350,32],[307,37,350,35,"enemy"],[307,42,350,40],[307,43,350,41,"stats"],[307,48,350,46],[307,49,350,47,"attack"],[307,55,350,53],[307,58,350,56],[307,61,350,59],[307,62,350,60],[307,63,350,61],[308,20,351,16],[308,24,351,22,"attackDamage"],[308,36,351,34],[308,39,351,37,"Math"],[308,43,351,41],[308,44,351,42,"floor"],[308,49,351,47],[308,50,351,48,"baseAttack"],[308,60,351,58],[308,64,351,62],[308,67,351,65],[308,70,351,68,"Math"],[308,74,351,72],[308,75,351,73,"random"],[308,81,351,79],[308,82,351,80],[308,83,351,81],[308,86,351,84],[308,89,351,87],[308,90,351,88],[308,91,351,89],[308,92,351,90],[308,93,351,91],[309,20,352,16],[309,24,352,22,"playerDefense"],[309,37,352,35],[309,40,352,38,"newState"],[309,48,352,46],[309,49,352,47,"playerStats"],[309,60,352,58],[309,61,352,59,"defense"],[309,68,352,66],[310,20,353,16],[310,24,353,22,"finalDamage"],[310,35,353,33],[310,38,353,36,"Math"],[310,42,353,40],[310,43,353,41,"max"],[310,46,353,44],[310,47,353,45],[310,48,353,46],[310,50,353,48,"attackDamage"],[310,62,353,60],[310,65,353,63,"Math"],[310,69,353,67],[310,70,353,68,"floor"],[310,75,353,73],[310,76,353,74,"playerDefense"],[310,89,353,87],[310,92,353,90],[310,95,353,93],[310,96,353,94],[310,97,353,95],[310,98,353,96],[310,99,353,97],[312,20,355,16,"console"],[312,27,355,23],[312,28,355,24,"log"],[312,31,355,27],[312,32,355,28],[312,53,355,49,"enemy"],[312,58,355,54],[312,59,355,55,"name"],[312,63,355,59],[312,86,355,82,"finalDamage"],[312,97,355,93],[312,109,355,105,"attackDamage"],[312,121,355,117],[312,132,355,128,"Math"],[312,136,355,132],[312,137,355,133,"floor"],[312,142,355,138],[312,143,355,139,"playerDefense"],[312,156,355,152],[312,159,355,155],[312,162,355,158],[312,163,355,159],[312,184,355,180],[312,185,355,181],[314,20,357,16],[315,20,358,16],[315,24,358,22,"newPlayerHealth"],[315,39,358,37],[315,42,358,40,"Math"],[315,46,358,44],[315,47,358,45,"max"],[315,50,358,48],[315,51,358,49],[315,52,358,50],[315,54,358,52,"newState"],[315,62,358,60],[315,63,358,61,"playerStats"],[315,74,358,72],[315,75,358,73,"health"],[315,81,358,79],[315,84,358,82,"finalDamage"],[315,95,358,93],[315,96,358,94],[316,20,359,16,"newState"],[316,28,359,24],[316,29,359,25,"playerStats"],[316,40,359,36],[316,41,359,37,"health"],[316,47,359,43],[316,50,359,46,"newPlayerHealth"],[316,65,359,61],[317,20,361,16,"console"],[317,27,361,23],[317,28,361,24,"log"],[317,31,361,27],[317,32,361,28],[317,53,361,49,"newState"],[317,61,361,57],[317,62,361,58,"playerStats"],[317,73,361,69],[317,74,361,70,"health"],[317,80,361,76],[317,84,361,80,"newState"],[317,92,361,88],[317,93,361,89,"playerStats"],[317,104,361,100],[317,105,361,101,"maxHealth"],[317,114,361,110],[317,124,361,120,"finalDamage"],[317,135,361,131],[317,145,361,141],[317,146,361,142],[319,20,363,16],[320,20,364,16,"enemy"],[320,25,364,21],[320,26,364,22,"lastAttackTick"],[320,40,364,36],[320,43,364,39,"newState"],[320,51,364,47],[320,52,364,48,"currentTick"],[320,63,364,59],[322,20,366,16],[323,20,367,16],[323,24,367,20,"newPlayerHealth"],[323,39,367,35],[323,43,367,39],[323,44,367,40],[323,46,367,42],[324,22,368,18,"console"],[324,29,368,25],[324,30,368,26,"log"],[324,33,368,29],[324,34,368,30],[324,84,368,80],[324,85,368,81],[325,22,369,18],[326,22,370,18,"setTimeout"],[326,32,370,28],[326,33,370,29],[326,39,370,35],[327,24,371,20],[328,24,372,20,"game"],[328,28,372,24],[328,29,372,25,"updateGameState"],[328,44,372,40],[328,45,372,41],[329,26,372,43,"isAlive"],[329,33,372,50],[329,35,372,52],[330,24,372,58],[330,25,372,59],[330,26,372,60],[331,22,373,18],[331,23,373,19],[331,25,373,21],[331,28,373,24],[331,29,373,25],[332,20,374,16],[333,18,375,16],[334,16,376,14],[335,14,377,12],[336,12,378,10],[336,13,378,11],[336,19,378,17],[337,14,379,12],[338,14,380,12],[339,14,381,12],[339,18,381,16,"distance"],[339,26,381,24],[339,29,381,27],[339,31,381,29],[339,33,381,31],[340,16,382,14],[341,16,383,14],[341,20,383,20,"normalizedX"],[341,31,383,31],[341,34,383,34,"deltaX"],[341,40,383,40],[341,43,383,43,"distance"],[341,51,383,51],[342,16,384,14],[342,20,384,20,"normalizedY"],[342,31,384,31],[342,34,384,34,"deltaY"],[342,40,384,40],[342,43,384,43,"distance"],[342,51,384,51],[344,16,386,14],[345,16,387,14],[345,20,387,20,"randomFactor"],[345,32,387,32],[345,35,387,35],[345,38,387,38],[345,39,387,39],[345,40,387,40],[346,16,388,14],[346,20,388,20,"finalX"],[346,26,388,26],[346,29,388,29,"normalizedX"],[346,40,388,40],[346,43,388,43],[346,44,388,44,"Math"],[346,48,388,48],[346,49,388,49,"random"],[346,55,388,55],[346,56,388,56],[346,57,388,57],[346,60,388,60],[346,63,388,63],[346,67,388,67,"randomFactor"],[346,79,388,79],[347,16,389,14],[347,20,389,20,"finalY"],[347,26,389,26],[347,29,389,29,"normalizedY"],[347,40,389,40],[347,43,389,43],[347,44,389,44,"Math"],[347,48,389,48],[347,49,389,49,"random"],[347,55,389,55],[347,56,389,56],[347,57,389,57],[347,60,389,60],[347,63,389,63],[347,67,389,67,"randomFactor"],[347,79,389,79],[349,16,391,14],[350,16,392,14],[350,20,392,18,"newX"],[350,24,392,22],[350,27,392,25,"enemy"],[350,32,392,30],[350,33,392,31,"position"],[350,41,392,39],[350,42,392,40,"x"],[350,43,392,41],[350,46,392,45,"finalX"],[350,52,392,51],[350,55,392,54,"MOVEMENT_SPEED"],[350,69,392,69],[351,16,393,14],[351,20,393,18,"newY"],[351,24,393,22],[351,27,393,25,"enemy"],[351,32,393,30],[351,33,393,31,"position"],[351,41,393,39],[351,42,393,40,"y"],[351,43,393,41],[351,46,393,45,"finalY"],[351,52,393,51],[351,55,393,54,"MOVEMENT_SPEED"],[351,69,393,69],[353,16,395,14],[354,16,396,14,"newX"],[354,20,396,18],[354,23,396,21,"Math"],[354,27,396,25],[354,28,396,26,"max"],[354,31,396,29],[354,32,396,30],[354,33,396,31],[354,35,396,33,"Math"],[354,39,396,37],[354,40,396,38,"min"],[354,43,396,41],[354,44,396,42,"SCREEN_WIDTH"],[354,56,396,54],[354,59,396,57,"ENEMY_SIZE"],[354,69,396,67],[354,71,396,69,"newX"],[354,75,396,73],[354,76,396,74],[354,77,396,75],[355,16,397,14,"newY"],[355,20,397,18],[355,23,397,21,"Math"],[355,27,397,25],[355,28,397,26,"max"],[355,31,397,29],[355,32,397,30],[355,33,397,31],[355,35,397,33,"Math"],[355,39,397,37],[355,40,397,38,"min"],[355,43,397,41],[355,44,397,42,"GAME_AREA_HEIGHT"],[355,60,397,58],[355,63,397,61,"ENEMY_SIZE"],[355,73,397,71],[355,75,397,73,"newY"],[355,79,397,77],[355,80,397,78],[355,81,397,79],[357,16,399,14],[358,16,400,14,"enemy"],[358,21,400,19],[358,22,400,20,"position"],[358,30,400,28],[358,31,400,29,"x"],[358,32,400,30],[358,35,400,33,"newX"],[358,39,400,37],[359,16,401,14,"enemy"],[359,21,401,19],[359,22,401,20,"position"],[359,30,401,28],[359,31,401,29,"y"],[359,32,401,30],[359,35,401,33,"newY"],[359,39,401,37],[360,14,402,12],[361,14,403,12],[362,12,404,10],[363,10,405,8],[364,8,406,6],[364,9,406,7],[364,10,406,8],[366,8,408,6],[367,8,409,6],[367,12,409,10,"newState"],[367,20,409,18],[367,21,409,19,"shadowClone"],[367,32,409,30],[367,34,409,32],[368,10,410,8],[369,10,411,8,"newState"],[369,18,411,16],[369,19,411,17,"shadowClone"],[369,30,411,28],[369,31,411,29,"remainingTicks"],[369,45,411,43],[369,47,411,45],[371,10,413,8],[372,10,414,8],[372,14,414,14,"cloneOffset"],[372,25,414,25],[372,28,414,28],[372,30,414,30],[372,31,414,31],[372,32,414,32],[373,10,415,8,"newState"],[373,18,415,16],[373,19,415,17,"shadowClone"],[373,30,415,28],[373,31,415,29,"position"],[373,39,415,37],[373,40,415,38,"x"],[373,41,415,39],[373,44,415,42,"currentNinjaPosition"],[373,64,415,62],[373,65,415,63,"x"],[373,66,415,64],[373,69,415,67,"cloneOffset"],[373,80,415,78],[374,10,416,8,"newState"],[374,18,416,16],[374,19,416,17,"shadowClone"],[374,30,416,28],[374,31,416,29,"position"],[374,39,416,37],[374,40,416,38,"y"],[374,41,416,39],[374,44,416,42,"currentNinjaPosition"],[374,64,416,62],[374,65,416,63,"y"],[374,66,416,64],[374,69,416,67],[374,71,416,69],[376,10,418,8],[377,10,419,8],[377,14,419,12,"newState"],[377,22,419,20],[377,23,419,21,"shadowClone"],[377,34,419,32],[377,35,419,33,"remainingTicks"],[377,49,419,47],[377,53,419,51],[377,54,419,52],[377,56,419,54],[378,12,420,10,"console"],[378,19,420,17],[378,20,420,18,"log"],[378,23,420,21],[378,24,420,22],[378,75,420,73],[378,76,420,74],[379,12,421,10,"newState"],[379,20,421,18],[379,21,421,19,"shadowClone"],[379,32,421,30],[379,35,421,33,"undefined"],[379,44,421,42],[380,10,422,8],[380,11,422,9],[380,17,422,15],[381,12,423,10],[382,12,424,10],[383,12,425,10],[383,16,425,16,"CLONE_ATTACK_INTERVAL"],[383,37,425,37],[383,40,425,40],[383,42,425,42],[384,12,426,10],[384,16,426,14,"newState"],[384,24,426,22],[384,25,426,23,"currentTick"],[384,36,426,34],[384,39,426,37,"CLONE_ATTACK_INTERVAL"],[384,60,426,58],[384,65,426,63],[384,66,426,64],[384,70,426,68,"newState"],[384,78,426,76],[384,79,426,77,"enemies"],[384,86,426,84],[384,87,426,85,"length"],[384,93,426,91],[384,96,426,94],[384,97,426,95],[384,99,426,97],[385,14,427,12,"console"],[385,21,427,19],[385,22,427,20,"log"],[385,25,427,23],[385,26,427,24],[385,83,427,81],[385,84,427,82],[387,14,429,12],[388,14,430,12],[388,18,430,18,"target"],[388,24,430,24],[388,27,430,27,"findClosestEnemyInternal"],[388,51,430,51],[388,52,430,52,"newState"],[388,60,430,60],[388,61,430,61,"enemies"],[388,68,430,68],[388,69,430,69],[389,14,431,12],[389,18,431,16,"target"],[389,24,431,22],[389,26,431,24],[390,16,432,14],[391,16,433,14],[391,20,433,20,"cloneDamage"],[391,31,433,31],[391,34,433,34,"Math"],[391,38,433,38],[391,39,433,39,"floor"],[391,44,433,44],[391,45,433,45,"newState"],[391,53,433,53],[391,54,433,54,"playerStats"],[391,65,433,65],[391,66,433,66,"attack"],[391,72,433,72],[391,75,433,75],[391,78,433,78],[391,79,433,79],[393,16,435,14],[394,16,436,14,"createProjectile"],[394,32,436,30],[394,33,436,31,"target"],[394,39,436,37],[394,41,436,39,"cloneDamage"],[394,52,436,50],[394,54,436,52,"newState"],[394,62,436,60],[394,63,436,61,"shadowClone"],[394,74,436,72],[394,75,436,73,"position"],[394,83,436,81],[394,85,436,83],[395,18,437,16,"id"],[395,20,437,18],[395,22,437,20],[395,43,437,41],[396,18,438,16,"name"],[396,22,438,20],[396,24,438,22],[396,45,438,43],[397,18,439,16,"icon"],[397,22,439,20],[397,24,439,22],[398,16,440,14],[398,17,440,15],[398,18,440,16],[399,14,441,12],[400,12,442,10],[401,10,443,8],[402,8,444,6],[404,8,446,6],[405,8,447,6],[406,8,448,6,"console"],[406,15,448,13],[406,16,448,14,"log"],[406,19,448,17],[406,20,448,18],[406,63,448,61,"isManualControlActive"],[406,84,448,82],[406,97,448,95,"game"],[406,101,448,99],[406,102,448,100,"gameState"],[406,111,448,109],[406,112,448,110,"isAlive"],[406,119,448,117],[406,121,448,119],[406,122,448,120],[407,8,449,6],[407,12,449,10],[407,13,449,11,"isManualControlActive"],[407,34,449,32],[407,38,449,36,"game"],[407,42,449,40],[407,43,449,41,"gameState"],[407,52,449,50],[407,53,449,51,"isAlive"],[407,60,449,58],[407,62,449,60],[408,10,450,8],[408,15,450,13],[408,19,450,17,"i"],[408,20,450,18],[408,23,450,21],[408,24,450,22],[408,26,450,24,"i"],[408,27,450,25],[408,30,450,28],[408,31,450,29],[408,33,450,31,"i"],[408,34,450,32],[408,36,450,34],[408,38,450,36],[409,12,451,10],[409,16,451,14,"newState"],[409,24,451,22],[409,25,451,23,"abilityManager"],[409,39,451,37],[409,40,451,38,"isAbilityReady"],[409,54,451,52],[409,55,451,53,"i"],[409,56,451,54],[409,57,451,55],[409,61,451,59,"newState"],[409,69,451,67],[409,70,451,68,"enemies"],[409,77,451,75],[409,78,451,76,"length"],[409,84,451,82],[409,87,451,85],[409,88,451,86],[409,90,451,88],[410,14,452,12],[410,18,452,16,"newState"],[410,26,452,24],[410,27,452,25,"abilityManager"],[410,41,452,39],[410,42,452,40,"useAbility"],[410,52,452,50],[410,53,452,51,"i"],[410,54,452,52],[410,56,452,54,"newTick"],[410,63,452,61],[410,64,452,62],[410,66,452,64],[411,16,453,14,"console"],[411,23,453,21],[411,24,453,22,"log"],[411,27,453,25],[411,28,453,26],[411,73,453,71,"i"],[411,74,453,72],[411,76,453,74],[411,77,453,75],[412,16,454,14,"castAbility"],[412,27,454,25],[412,28,454,26,"newState"],[412,36,454,34],[412,38,454,36,"i"],[412,39,454,37],[412,40,454,38],[413,14,455,12],[414,12,456,10],[415,10,457,8],[416,8,458,6],[418,8,460,6],[419,8,461,6],[419,12,461,12,"dyingEnemies"],[419,24,461,24],[419,27,461,27,"newState"],[419,35,461,35],[419,36,461,36,"enemies"],[419,43,461,43],[419,44,461,44,"filter"],[419,50,461,50],[419,51,461,51,"enemy"],[419,56,461,56],[419,60,461,60,"enemy"],[419,65,461,65],[419,66,461,66,"isDying"],[419,73,461,73],[419,77,461,77,"enemy"],[419,82,461,82],[419,83,461,83,"health"],[419,89,461,89],[419,93,461,93],[419,94,461,94],[419,95,461,95],[420,8,462,6],[420,12,462,12,"deadEnemies"],[420,23,462,23],[420,26,462,26,"newState"],[420,34,462,34],[420,35,462,35,"enemies"],[420,42,462,42],[420,43,462,43,"filter"],[420,49,462,49],[420,50,462,50,"enemy"],[420,55,462,55],[420,59,462,59,"enemy"],[420,64,462,64],[420,65,462,65,"health"],[420,71,462,71],[420,75,462,75],[420,76,462,76],[420,80,462,80],[420,81,462,81,"enemy"],[420,86,462,86],[420,87,462,87,"isDying"],[420,94,462,94],[420,95,462,95],[422,8,464,6],[423,8,465,6,"enemiesToKill"],[423,21,465,19],[423,24,465,22],[423,25,465,23],[423,28,465,26,"deadEnemies"],[423,39,465,37],[423,41,465,39],[423,44,465,42,"dyingEnemies"],[423,56,465,54],[423,57,465,55],[423,58,465,56],[423,59,465,57],[425,8,467,6],[426,8,468,6],[426,12,468,12,"currentTime"],[426,23,468,23],[426,26,468,26,"Date"],[426,30,468,30],[426,31,468,31,"now"],[426,34,468,34],[426,35,468,35],[426,36,468,36],[427,8,469,6,"newState"],[427,16,469,14],[427,17,469,15,"enemies"],[427,24,469,22],[427,27,469,25,"newState"],[427,35,469,33],[427,36,469,34,"enemies"],[427,43,469,41],[427,44,469,42,"filter"],[427,50,469,48],[427,51,469,49,"enemy"],[427,56,469,54],[427,60,469,58],[428,10,470,8],[428,14,470,12,"enemy"],[428,19,470,17],[428,20,470,18,"isDying"],[428,27,470,25],[428,31,470,29,"enemy"],[428,36,470,34],[428,37,470,35,"deathStartTime"],[428,51,470,49],[428,53,470,51],[429,12,471,10],[429,16,471,16,"animationDuration"],[429,33,471,33],[429,36,471,36],[429,39,471,39],[429,40,471,40],[429,41,471,41],[430,12,472,10],[430,16,472,16,"isAnimationComplete"],[430,35,472,35],[430,38,472,38,"currentTime"],[430,49,472,49],[430,52,472,52,"enemy"],[430,57,472,57],[430,58,472,58,"deathStartTime"],[430,72,472,72],[430,76,472,76,"animationDuration"],[430,93,472,93],[431,12,473,10],[431,16,473,14,"isAnimationComplete"],[431,35,473,33],[431,37,473,35],[432,14,474,12,"console"],[432,21,474,19],[432,22,474,20,"log"],[432,25,474,23],[432,26,474,24],[432,58,474,56,"enemy"],[432,63,474,61],[432,64,474,62,"name"],[432,68,474,66],[432,86,474,84,"currentTime"],[432,97,474,95],[432,100,474,98,"enemy"],[432,105,474,103],[432,106,474,104,"deathStartTime"],[432,120,474,118],[432,129,474,127],[432,130,474,128],[433,14,475,12],[433,21,475,19],[433,26,475,24],[433,27,475,25],[433,28,475,26],[434,12,476,10],[435,10,477,8],[436,10,478,8],[436,17,478,15],[436,21,478,19],[436,22,478,20],[436,23,478,21],[437,8,479,6],[437,9,479,7],[437,10,479,8],[439,8,481,6],[440,8,482,6],[440,12,482,10,"deadEnemies"],[440,23,482,21],[440,24,482,22,"length"],[440,30,482,28],[440,33,482,31],[440,34,482,32],[440,36,482,34],[441,10,483,8,"console"],[441,17,483,15],[441,18,483,16,"log"],[441,21,483,19],[441,22,483,20],[441,49,483,47,"deadEnemies"],[441,60,483,58],[441,61,483,59,"length"],[441,67,483,65],[441,83,483,81],[441,85,483,83,"deadEnemies"],[441,96,483,94],[441,97,483,95,"map"],[441,100,483,98],[441,101,483,99,"e"],[441,102,483,100],[441,106,483,104],[441,109,483,107,"e"],[441,110,483,108],[441,111,483,109,"id"],[441,113,483,111],[441,117,483,115,"e"],[441,118,483,116],[441,119,483,117,"health"],[441,125,483,123],[441,130,483,128],[441,131,483,129],[441,132,483,130],[442,8,484,6],[444,8,486,6],[445,8,487,6],[445,12,487,12,"lowHealthEnemies"],[445,28,487,28],[445,31,487,31,"newState"],[445,39,487,39],[445,40,487,40,"enemies"],[445,47,487,47],[445,48,487,48,"filter"],[445,54,487,54],[445,55,487,55,"enemy"],[445,60,487,60],[445,64,487,64,"enemy"],[445,69,487,69],[445,70,487,70,"health"],[445,76,487,76],[445,80,487,80],[445,82,487,82],[445,86,487,86,"enemy"],[445,91,487,91],[445,92,487,92,"health"],[445,98,487,98],[445,101,487,101],[445,102,487,102],[445,103,487,103],[446,8,488,6],[446,12,488,10,"lowHealthEnemies"],[446,28,488,26],[446,29,488,27,"length"],[446,35,488,33],[446,38,488,36],[446,39,488,37],[446,41,488,39],[447,10,489,8,"console"],[447,17,489,15],[447,18,489,16,"log"],[447,21,489,19],[447,22,489,20],[447,61,489,59],[447,63,489,61,"lowHealthEnemies"],[447,79,489,77],[447,80,489,78,"map"],[447,83,489,81],[447,84,489,82,"e"],[447,85,489,83],[447,89,489,87],[447,92,489,90,"e"],[447,93,489,91],[447,94,489,92,"id"],[447,96,489,94],[447,100,489,98,"e"],[447,101,489,99],[447,102,489,100,"health"],[447,108,489,106],[447,112,489,110,"e"],[447,113,489,111],[447,114,489,112,"maxHealth"],[447,123,489,121],[447,128,489,126],[447,129,489,127],[447,130,489,128],[448,8,490,6],[450,8,492,6],[451,8,493,6],[451,12,493,12,"beforeCount"],[451,23,493,23],[451,26,493,26,"newState"],[451,34,493,34],[451,35,493,35,"enemies"],[451,42,493,42],[451,43,493,43,"length"],[451,49,493,49],[452,8,494,6,"newState"],[452,16,494,14],[452,17,494,15,"enemies"],[452,24,494,22],[452,27,494,25,"newState"],[452,35,494,33],[452,36,494,34,"enemies"],[452,43,494,41],[452,44,494,42,"filter"],[452,50,494,48],[452,51,494,49,"enemy"],[452,56,494,54],[452,60,494,58,"enemy"],[452,65,494,63],[452,66,494,64,"health"],[452,72,494,70],[452,75,494,73],[452,76,494,74],[452,77,494,75],[453,8,495,6],[453,12,495,12,"afterCount"],[453,22,495,22],[453,25,495,25,"newState"],[453,33,495,33],[453,34,495,34,"enemies"],[453,41,495,41],[453,42,495,42,"length"],[453,48,495,48],[454,8,497,6],[454,12,497,10,"beforeCount"],[454,23,497,21],[454,28,497,26,"afterCount"],[454,38,497,36],[454,40,497,38],[455,10,498,8,"console"],[455,17,498,15],[455,18,498,16,"log"],[455,21,498,19],[455,22,498,20],[455,52,498,50,"beforeCount"],[455,63,498,61],[455,66,498,64,"afterCount"],[455,76,498,74],[455,102,498,100],[455,103,498,101],[456,8,499,6],[458,8,501,6],[459,8,502,6],[460,8,503,6],[460,12,503,12,"MAX_ENEMIES"],[460,23,503,23],[460,26,503,26],[460,28,503,28],[460,29,503,29],[460,30,503,30],[461,8,504,6],[461,12,504,12,"MIN_SPAWN_DELAY"],[461,27,504,27],[461,30,504,30],[461,33,504,33],[461,34,504,34],[461,35,504,35],[462,8,505,6],[462,12,505,12,"now"],[462,15,505,15],[462,18,505,18,"Date"],[462,22,505,22],[462,23,505,23,"now"],[462,26,505,26],[462,27,505,27],[462,28,505,28],[463,8,506,6],[463,12,506,12,"hasBoss"],[463,19,506,19],[463,22,506,22,"newState"],[463,30,506,30],[463,31,506,31,"enemies"],[463,38,506,38],[463,39,506,39,"some"],[463,43,506,43],[463,44,506,44,"enemy"],[463,49,506,49],[463,53,506,53,"enemy"],[463,58,506,58],[463,59,506,59,"isBoss"],[463,65,506,65],[463,66,506,66],[465,8,508,6],[466,8,509,6],[466,12,509,10],[466,13,509,11,"newState"],[466,21,509,19],[466,22,509,20,"lastSpawnTime"],[466,35,509,33],[466,37,509,35],[467,10,510,8,"newState"],[467,18,510,16],[467,19,510,17,"lastSpawnTime"],[467,32,510,30],[467,35,510,33,"now"],[467,38,510,36],[468,8,511,6],[469,8,513,6,"console"],[469,15,513,13],[469,16,513,14,"log"],[469,19,513,17],[469,20,513,18],[469,53,513,51,"newState"],[469,61,513,59],[469,62,513,60,"enemies"],[469,69,513,67],[469,70,513,68,"length"],[469,76,513,74],[469,85,513,83,"MAX_ENEMIES"],[469,96,513,94],[469,109,513,107,"hasBoss"],[469,116,513,114],[469,118,513,116],[469,119,513,117],[471,8,515,6],[472,8,516,6],[472,12,516,10],[472,13,516,11,"hasBoss"],[472,20,516,18],[472,24,516,22,"newState"],[472,32,516,30],[472,33,516,31,"enemies"],[472,40,516,38],[472,41,516,39,"length"],[472,47,516,45],[472,50,516,48,"MAX_ENEMIES"],[472,61,516,59],[472,65,516,64,"now"],[472,68,516,67],[472,71,516,70,"newState"],[472,79,516,78],[472,80,516,79,"lastSpawnTime"],[472,93,516,92],[472,97,516,97,"MIN_SPAWN_DELAY"],[472,112,516,112],[472,114,516,114],[473,10,517,8,"console"],[473,17,517,15],[473,18,517,16,"log"],[473,21,517,19],[473,22,517,20],[473,43,517,41,"newState"],[473,51,517,49],[473,52,517,50,"enemies"],[473,59,517,57],[473,60,517,58,"length"],[473,66,517,64],[473,69,517,67],[473,70,517,68],[473,74,517,72,"MAX_ENEMIES"],[473,85,517,83],[473,87,517,85],[473,88,517,86],[474,10,518,8,"spawnTestEnemy"],[474,24,518,22],[474,25,518,23,"newState"],[474,33,518,31],[474,34,518,32],[475,10,519,8,"newState"],[475,18,519,16],[475,19,519,17,"lastSpawnTime"],[475,32,519,30],[475,35,519,33,"now"],[475,38,519,36],[476,8,520,6],[477,8,522,6],[477,15,522,13,"newState"],[477,23,522,21],[478,6,523,4],[478,7,523,5],[478,47,523,6],[480,6,525,4],[481,6,526,4,"console"],[481,13,526,11],[481,14,526,12,"log"],[481,17,526,15],[481,18,526,16],[481,50,526,48,"enemiesToKill"],[481,63,526,61],[481,64,526,62,"length"],[481,70,526,68],[481,101,526,99],[481,102,526,100],[482,6,528,4,"enemiesToKill"],[482,19,528,17],[482,20,528,18,"forEach"],[482,27,528,25],[482,28,528,26],[482,29,528,27,"enemy"],[482,34,528,32],[482,36,528,34,"index"],[482,41,528,39],[482,46,528,44],[483,8,529,6,"console"],[483,15,529,13],[483,16,529,14,"log"],[483,19,529,17],[483,20,529,18],[483,57,529,55,"index"],[483,62,529,60],[483,65,529,63],[483,66,529,64],[483,70,529,68,"enemiesToKill"],[483,83,529,81],[483,84,529,82,"length"],[483,90,529,88],[483,104,529,102,"enemy"],[483,109,529,107],[483,110,529,108,"id"],[483,112,529,110],[483,114,529,112],[483,115,529,113],[484,8,530,6,"handleEnemyKill"],[484,23,530,21],[484,24,530,22,"enemy"],[484,29,530,27],[484,30,530,28],[485,6,531,4],[485,7,531,5],[485,8,531,6],[486,4,532,2],[486,5,532,3],[486,7,532,5],[486,8,532,6,"handleEnemyKill"],[486,23,532,21],[486,24,532,22],[486,25,532,23],[486,26,532,24],[486,27,532,25],[488,4,534,2],[489,4,535,2],[489,8,535,8,"findClosestEnemyInternal"],[489,32,535,32],[489,35,535,36,"enemies"],[489,42,535,58],[489,46,535,83],[490,6,536,4],[490,10,536,8,"enemies"],[490,17,536,15],[490,18,536,16,"length"],[490,24,536,22],[490,29,536,27],[490,30,536,28],[490,32,536,30],[490,39,536,37],[490,43,536,41],[492,6,538,4],[493,6,539,4],[493,10,539,10,"SCREEN_WIDTH"],[493,22,539,22],[493,25,539,25],[493,28,539,28],[494,6,540,4],[494,10,540,10,"GAME_AREA_HEIGHT"],[494,26,540,26],[494,29,540,29],[494,32,540,32],[494,35,540,35],[494,38,540,38],[494,39,540,39],[494,40,540,40],[495,6,541,4],[495,10,541,10,"ninjaX"],[495,16,541,16],[495,19,541,19,"SCREEN_WIDTH"],[495,31,541,31],[495,34,541,34],[495,35,541,35],[496,6,542,4],[496,10,542,10,"ninjaY"],[496,16,542,16],[496,19,542,19,"GAME_AREA_HEIGHT"],[496,35,542,35],[496,38,542,38],[496,39,542,39],[497,6,544,4],[497,10,544,8,"closestEnemy"],[497,22,544,20],[497,25,544,23,"enemies"],[497,32,544,30],[497,33,544,31],[497,34,544,32],[497,35,544,33],[498,6,545,4],[498,10,545,8,"closestDistance"],[498,25,545,23],[498,28,545,26,"Infinity"],[498,36,545,34],[499,6,547,4,"enemies"],[499,13,547,11],[499,14,547,12,"forEach"],[499,21,547,19],[499,22,547,20,"enemy"],[499,27,547,25],[499,31,547,29],[500,8,548,6],[500,12,548,12,"distance"],[500,20,548,20],[500,23,548,23,"Math"],[500,27,548,27],[500,28,548,28,"sqrt"],[500,32,548,32],[500,33,549,8,"Math"],[500,37,549,12],[500,38,549,13,"pow"],[500,41,549,16],[500,42,549,17,"enemy"],[500,47,549,22],[500,48,549,23,"position"],[500,56,549,31],[500,57,549,32,"x"],[500,58,549,33],[500,61,549,36,"ninjaX"],[500,67,549,42],[500,69,549,44],[500,70,549,45],[500,71,549,46],[500,74,550,8,"Math"],[500,78,550,12],[500,79,550,13,"pow"],[500,82,550,16],[500,83,550,17,"enemy"],[500,88,550,22],[500,89,550,23,"position"],[500,97,550,31],[500,98,550,32,"y"],[500,99,550,33],[500,102,550,36,"ninjaY"],[500,108,550,42],[500,110,550,44],[500,111,550,45],[500,112,551,6],[500,113,551,7],[501,8,553,6],[501,12,553,10,"distance"],[501,20,553,18],[501,23,553,21,"closestDistance"],[501,38,553,36],[501,40,553,38],[502,10,554,8,"closestDistance"],[502,25,554,23],[502,28,554,26,"distance"],[502,36,554,34],[503,10,555,8,"closestEnemy"],[503,22,555,20],[503,25,555,23,"enemy"],[503,30,555,28],[504,8,556,6],[505,6,557,4],[505,7,557,5],[505,8,557,6],[506,6,559,4,"console"],[506,13,559,11],[506,14,559,12,"log"],[506,17,559,15],[506,18,559,16],[506,60,559,58,"closestDistance"],[506,75,559,73],[506,76,559,74,"toFixed"],[506,83,559,81],[506,84,559,82],[506,85,559,83],[506,86,559,84],[506,88,559,86],[506,89,559,87],[507,6,560,4],[507,13,560,11,"closestEnemy"],[507,25,560,23],[508,4,561,2],[508,5,561,3],[510,4,563,2],[511,4,564,2],[511,8,564,8,"findClosestEnemy"],[511,24,564,24],[511,27,564,27,"findClosestEnemy"],[511,28,564,27],[511,33,564,53],[512,6,565,4],[512,13,565,11,"findClosestEnemyInternal"],[512,37,565,35],[512,38,565,36,"combatState"],[512,49,565,47],[512,50,565,48,"enemies"],[512,57,565,55],[512,58,565,56],[513,4,566,2],[513,5,566,3],[515,4,568,2],[516,4,569,2],[516,8,569,2,"_useState7"],[516,18,569,2],[516,21,569,58],[516,25,569,58,"useState"],[516,31,569,66],[516,32,569,66,"useState"],[516,40,569,66],[516,42,569,91],[517,8,569,93,"x"],[517,9,569,94],[517,11,569,96],[517,12,569,97],[518,8,569,99,"y"],[518,9,569,100],[518,11,569,102],[519,6,569,104],[519,7,569,105],[519,8,569,106],[520,6,569,106,"_useState8"],[520,16,569,106],[520,23,569,106,"_slicedToArray"],[520,37,569,106],[520,38,569,106,"default"],[520,45,569,106],[520,47,569,106,"_useState7"],[520,57,569,106],[521,6,569,9,"currentNinjaPosition"],[521,26,569,29],[521,29,569,29,"_useState8"],[521,39,569,29],[522,6,569,31,"setCurrentNinjaPosition"],[522,29,569,54],[522,32,569,54,"_useState8"],[522,42,569,54],[523,4,570,2],[523,8,570,2,"_useState9"],[523,18,570,2],[523,21,570,60],[523,25,570,60,"useState"],[523,31,570,68],[523,32,570,68,"useState"],[523,40,570,68],[523,42,570,69],[523,47,570,74],[523,48,570,75],[524,6,570,75,"_useState0"],[524,16,570,75],[524,23,570,75,"_slicedToArray"],[524,37,570,75],[524,38,570,75,"default"],[524,45,570,75],[524,47,570,75,"_useState9"],[524,57,570,75],[525,6,570,9,"isManualControlActive"],[525,27,570,30],[525,30,570,30,"_useState0"],[525,40,570,30],[526,6,570,32,"setIsManualControlActive"],[526,30,570,56],[526,33,570,56,"_useState0"],[526,43,570,56],[528,4,572,2],[529,4,573,2],[529,8,573,8,"updateNinjaPosition"],[529,27,573,27],[529,30,573,30],[529,34,573,30,"useCallback"],[529,40,573,41],[529,41,573,41,"useCallback"],[529,52,573,41],[529,54,573,43,"newPosition"],[529,65,573,78],[529,69,573,83],[530,6,574,4,"setCurrentNinjaPosition"],[530,29,574,27],[530,30,574,28,"newPosition"],[530,41,574,39],[530,42,574,40],[531,4,575,2],[531,5,575,3],[531,7,575,5],[531,9,575,7],[531,10,575,8],[533,4,577,2],[534,4,578,2],[534,8,578,8,"setManualControlActive"],[534,30,578,30],[534,33,578,33],[534,37,578,33,"useCallback"],[534,43,578,44],[534,44,578,44,"useCallback"],[534,55,578,44],[534,57,578,46,"active"],[534,63,578,61],[534,67,578,66],[535,6,579,4,"setIsManualControlActive"],[535,30,579,28],[535,31,579,29,"active"],[535,37,579,35],[535,38,579,36],[536,6,580,4,"console"],[536,13,580,11],[536,14,580,12,"log"],[536,17,580,15],[536,18,580,16],[536,39,580,37,"active"],[536,45,580,43],[536,48,580,46],[536,59,580,57],[536,62,580,60],[536,75,580,73],[536,88,580,86,"active"],[536,94,580,92],[536,97,580,95],[536,105,580,103],[536,108,580,106],[536,117,580,115],[536,119,580,117],[536,120,580,118],[537,4,581,2],[537,5,581,3],[537,7,581,5],[537,9,581,7],[537,10,581,8],[539,4,583,2],[540,4,584,2],[540,8,584,8,"handleProjectileHit"],[540,27,584,27],[540,30,584,31,"projectile"],[540,40,584,59],[540,44,584,64],[541,6,585,4,"console"],[541,13,585,11],[541,14,585,12,"log"],[541,17,585,15],[541,18,585,16],[541,35,585,33,"projectile"],[541,45,585,43],[541,46,585,44,"id"],[541,48,585,46],[541,62,585,60,"projectile"],[541,72,585,70],[541,73,585,71,"targetEnemyId"],[541,86,585,84],[541,94,585,92,"projectile"],[541,104,585,102],[541,105,585,103,"damage"],[541,111,585,109],[541,120,585,118],[541,121,585,119],[542,6,587,4,"setCombatState"],[542,20,587,18],[542,21,587,19,"prev"],[542,25,587,23],[542,29,587,27],[543,8,588,6],[543,12,588,12,"newState"],[543,20,588,20],[543,23,588,23],[544,10,588,25],[544,13,588,28,"prev"],[545,8,588,33],[545,9,588,34],[547,8,590,6],[548,8,591,6],[548,12,591,12,"enemyIndex"],[548,22,591,22],[548,25,591,25,"newState"],[548,33,591,33],[548,34,591,34,"enemies"],[548,41,591,41],[548,42,591,42,"findIndex"],[548,51,591,51],[548,52,591,52,"e"],[548,53,591,53],[548,57,591,57,"e"],[548,58,591,58],[548,59,591,59,"id"],[548,61,591,61],[548,66,591,66,"projectile"],[548,76,591,76],[548,77,591,77,"targetEnemyId"],[548,90,591,90],[548,91,591,91],[549,8,592,6],[549,12,592,10,"enemyIndex"],[549,22,592,20],[549,26,592,24],[549,27,592,25],[549,29,592,27],[550,10,593,8,"newState"],[550,18,593,16],[550,19,593,17,"enemies"],[550,26,593,24],[550,29,593,27],[550,30,593,28],[550,33,593,31,"newState"],[550,41,593,39],[550,42,593,40,"enemies"],[550,49,593,47],[550,50,593,48],[551,10,594,8,"newState"],[551,18,594,16],[551,19,594,17,"enemies"],[551,26,594,24],[551,27,594,25,"enemyIndex"],[551,37,594,35],[551,38,594,36],[551,41,594,39],[552,12,595,10],[552,15,595,13,"newState"],[552,23,595,21],[552,24,595,22,"enemies"],[552,31,595,29],[552,32,595,30,"enemyIndex"],[552,42,595,40],[552,43,595,41],[553,12,596,10,"health"],[553,18,596,16],[553,20,596,18,"newState"],[553,28,596,26],[553,29,596,27,"enemies"],[553,36,596,34],[553,37,596,35,"enemyIndex"],[553,47,596,45],[553,48,596,46],[553,49,596,47,"health"],[553,55,596,53],[553,58,596,56,"projectile"],[553,68,596,66],[553,69,596,67,"damage"],[553,75,596,73],[554,12,597,10,"lastDamaged"],[554,23,597,21],[554,25,597,23,"combatEngine"],[554,44,597,35],[554,45,597,35,"combatEngine"],[554,57,597,35],[554,58,597,36,"getCurrentTick"],[554,72,597,50],[554,73,597,51],[555,10,598,8],[555,11,598,9],[556,10,600,8,"console"],[556,17,600,15],[556,18,600,16,"log"],[556,21,600,19],[556,22,600,20],[556,34,600,32,"projectile"],[556,44,600,42],[556,45,600,43,"targetEnemyId"],[556,58,600,56],[556,70,600,68,"newState"],[556,78,600,76],[556,79,600,77,"enemies"],[556,86,600,84],[556,87,600,85,"enemyIndex"],[556,97,600,95],[556,98,600,96],[556,99,600,97,"health"],[556,105,600,103],[556,109,600,107,"newState"],[556,117,600,115],[556,118,600,116,"enemies"],[556,125,600,123],[556,126,600,124,"enemyIndex"],[556,136,600,134],[556,137,600,135],[556,138,600,136,"maxHealth"],[556,147,600,145],[556,149,600,147],[556,150,600,148],[557,8,601,6],[558,8,603,6],[558,15,603,13,"newState"],[558,23,603,21],[559,6,604,4],[559,7,604,5],[559,8,604,6],[561,6,606,4],[562,6,607,4,"setProjectiles"],[562,20,607,18],[562,21,607,19,"prev"],[562,25,607,23],[562,29,607,27,"prev"],[562,33,607,31],[562,34,607,32,"filter"],[562,40,607,38],[562,41,607,39,"p"],[562,42,607,40],[562,46,607,44,"p"],[562,47,607,45],[562,48,607,46,"id"],[562,50,607,48],[562,55,607,53,"projectile"],[562,65,607,63],[562,66,607,64,"id"],[562,68,607,66],[562,69,607,67],[562,70,607,68],[563,4,608,2],[563,5,608,3],[565,4,610,2],[566,4,611,2],[566,8,611,8,"castAbility"],[566,19,611,19],[566,22,611,22,"castAbility"],[566,23,611,23,"state"],[566,28,611,41],[566,30,611,43,"slotIndex"],[566,39,611,60],[566,44,611,65],[567,6,612,4],[567,10,612,10,"deck"],[567,14,612,14],[567,17,612,17,"state"],[567,22,612,22],[567,23,612,23,"abilityManager"],[567,37,612,37],[567,38,612,38,"getDeck"],[567,45,612,45],[567,46,612,46],[567,47,612,47],[568,6,613,4],[568,10,613,10,"ability"],[568,17,613,17],[568,20,613,20,"deck"],[568,24,613,24],[568,25,613,25,"slots"],[568,30,613,30],[568,31,613,31,"slotIndex"],[568,40,613,40],[568,41,613,41],[569,6,614,4],[569,10,614,8],[569,11,614,9,"ability"],[569,18,614,16],[569,20,614,18],[570,6,616,4,"console"],[570,13,616,11],[570,14,616,12,"log"],[570,17,616,15],[570,18,616,16],[570,43,616,41,"ability"],[570,50,616,48],[570,51,616,49,"id"],[570,53,616,51],[570,67,616,65,"slotIndex"],[570,76,616,74],[570,78,616,76],[570,79,616,77],[572,6,618,4],[573,6,619,4],[573,10,619,8,"damage"],[573,16,619,14],[573,19,619,17,"ability"],[573,26,619,24],[573,27,619,25,"stats"],[573,32,619,30],[573,33,619,31,"baseDamage"],[573,43,619,41],[575,6,621,4],[576,6,622,4,"deck"],[576,10,622,8],[576,11,622,9,"activeSynergies"],[576,26,622,24],[576,27,622,25,"forEach"],[576,34,622,32],[576,35,622,33,"synergy"],[576,42,622,40],[576,46,622,44],[577,8,623,6],[577,12,623,10,"synergy"],[577,19,623,17],[577,20,623,18,"bonus"],[577,25,623,23],[577,26,623,24,"damageBonus"],[577,37,623,35],[577,41,624,10,"synergy"],[577,48,624,17],[577,49,624,18,"requiredTags"],[577,61,624,30],[577,62,624,31,"some"],[577,66,624,35],[577,67,624,36,"tag"],[577,70,624,39],[577,74,624,43,"ability"],[577,81,624,50],[577,82,624,51,"tags"],[577,86,624,55],[577,87,624,56,"includes"],[577,95,624,64],[577,96,624,65,"tag"],[577,99,624,68],[577,100,624,69],[577,101,624,70],[577,103,624,72],[578,10,625,8,"damage"],[578,16,625,14],[578,20,625,19],[578,21,625,20],[578,24,625,23,"synergy"],[578,31,625,30],[578,32,625,31,"bonus"],[578,37,625,36],[578,38,625,37,"damageBonus"],[578,49,625,48],[578,52,625,51],[578,55,625,55],[579,8,626,6],[580,6,627,4],[580,7,627,5],[580,8,627,6],[582,6,629,4],[583,6,630,4],[583,10,630,10,"isAOE"],[583,15,630,15],[583,18,630,18,"ability"],[583,25,630,25],[583,26,630,26,"effects"],[583,33,630,33],[583,34,630,34,"includes"],[583,42,630,42],[583,43,630,43],[583,48,630,48],[583,49,630,49],[583,53,630,53,"ability"],[583,60,630,60],[583,61,630,61,"stats"],[583,66,630,66],[583,67,630,67,"aoeRadius"],[583,76,630,76],[584,6,631,4,"console"],[584,13,631,11],[584,14,631,12,"log"],[584,17,631,15],[584,18,631,16],[584,39,631,37,"ability"],[584,46,631,44],[584,47,631,45,"name"],[584,51,631,49],[584,66,631,64,"JSON"],[584,70,631,68],[584,71,631,69,"stringify"],[584,80,631,78],[584,81,631,79,"ability"],[584,88,631,86],[584,89,631,87,"effects"],[584,96,631,94],[584,97,631,95],[584,113,631,111,"ability"],[584,120,631,118],[584,121,631,119,"stats"],[584,126,631,124],[584,127,631,125,"aoeRadius"],[584,136,631,134],[584,148,631,146,"isAOE"],[584,153,631,151],[584,155,631,153],[584,156,631,154],[585,6,633,4],[585,10,633,8,"isAOE"],[585,15,633,13],[585,17,633,15],[586,8,634,6,"console"],[586,15,634,13],[586,16,634,14,"log"],[586,19,634,17],[586,20,634,18],[586,39,634,37,"ability"],[586,46,634,44],[586,47,634,45,"name"],[586,51,634,49],[586,67,634,65,"ability"],[586,74,634,72],[586,75,634,73,"stats"],[586,80,634,78],[586,81,634,79,"aoeRadius"],[586,90,634,88],[586,92,634,90],[586,93,634,91],[588,8,636,6],[589,8,637,6],[590,8,638,6],[590,12,638,12,"ninjaX"],[590,18,638,18],[590,21,638,21,"currentNinjaPosition"],[590,41,638,41],[590,42,638,42,"x"],[590,43,638,43],[590,46,638,46],[590,48,638,48],[590,49,638,49],[590,50,638,50],[591,8,639,6],[591,12,639,12,"ninjaY"],[591,18,639,18],[591,21,639,21,"currentNinjaPosition"],[591,41,639,41],[591,42,639,42,"y"],[591,43,639,43],[591,46,639,46],[591,48,639,48],[592,8,640,6],[592,12,640,12,"aoeRadius"],[592,21,640,21],[592,24,640,24,"ability"],[592,31,640,31],[592,32,640,32,"stats"],[592,37,640,37],[592,38,640,38,"aoeRadius"],[592,47,640,47],[593,8,642,6],[593,12,642,12,"enemiesInRange"],[593,26,642,26],[593,29,642,29,"state"],[593,34,642,34],[593,35,642,35,"enemies"],[593,42,642,42],[593,43,642,43,"filter"],[593,49,642,49],[593,50,642,50,"enemy"],[593,55,642,55],[593,59,642,59],[594,10,643,8],[594,14,643,14,"enemyX"],[594,20,643,20],[594,23,643,23,"enemy"],[594,28,643,28],[594,29,643,29,"position"],[594,37,643,37],[594,38,643,38,"x"],[594,39,643,39],[594,42,643,42],[594,46,643,46],[594,47,643,47],[594,48,643,48],[595,10,644,8],[595,14,644,14,"enemyY"],[595,20,644,20],[595,23,644,23,"enemy"],[595,28,644,28],[595,29,644,29,"position"],[595,37,644,37],[595,38,644,38,"y"],[595,39,644,39],[595,42,644,42],[595,46,644,46],[596,10,645,8],[596,14,645,14,"distance"],[596,22,645,22],[596,25,645,25,"Math"],[596,29,645,29],[596,30,645,30,"sqrt"],[596,34,645,34],[596,35,645,35,"Math"],[596,39,645,39],[596,40,645,40,"pow"],[596,43,645,43],[596,44,645,44,"enemyX"],[596,50,645,50],[596,53,645,53,"ninjaX"],[596,59,645,59],[596,61,645,61],[596,62,645,62],[596,63,645,63],[596,66,645,66,"Math"],[596,70,645,70],[596,71,645,71,"pow"],[596,74,645,74],[596,75,645,75,"enemyY"],[596,81,645,81],[596,84,645,84,"ninjaY"],[596,90,645,90],[596,92,645,92],[596,93,645,93],[596,94,645,94],[596,95,645,95],[597,10,646,8],[597,17,646,15,"distance"],[597,25,646,23],[597,29,646,27,"aoeRadius"],[597,38,646,36],[598,8,647,6],[598,9,647,7],[598,10,647,8],[599,8,649,6,"console"],[599,15,649,13],[599,16,649,14,"log"],[599,19,649,17],[599,20,649,18],[599,45,649,43,"enemiesInRange"],[599,59,649,57],[599,60,649,58,"length"],[599,66,649,64],[599,88,649,86,"aoeRadius"],[599,97,649,95],[599,107,649,105],[599,108,649,106],[601,8,651,6],[602,8,652,6,"enemiesInRange"],[602,22,652,20],[602,23,652,21,"forEach"],[602,30,652,28],[602,31,652,29,"enemy"],[602,36,652,34],[602,40,652,38],[603,10,653,8],[603,14,653,14,"damageResult"],[603,26,653,26],[603,29,653,29,"DamageCalculator"],[603,48,653,45],[603,49,653,45,"DamageCalculator"],[603,65,653,45],[603,66,653,46,"calculateDamage"],[603,81,653,61],[603,82,653,62,"damage"],[603,88,653,68],[603,90,653,70,"state"],[603,95,653,75],[603,96,653,76,"playerStats"],[603,107,653,87],[603,109,653,89,"enemy"],[603,114,653,94],[603,115,653,95,"stats"],[603,120,653,100],[603,121,653,101],[604,10,654,8,"createProjectile"],[604,26,654,24],[604,27,654,25,"enemy"],[604,32,654,30],[604,34,654,32,"damageResult"],[604,46,654,44],[604,47,654,45,"damage"],[604,53,654,51],[604,55,654,53,"currentNinjaPosition"],[604,75,654,73],[604,77,654,75],[605,12,655,10,"id"],[605,14,655,12],[605,16,655,14,"ability"],[605,23,655,21],[605,24,655,22,"id"],[605,26,655,24],[606,12,656,10,"name"],[606,16,656,14],[606,18,656,16,"ability"],[606,25,656,23],[606,26,656,24,"name"],[606,30,656,28],[607,12,657,10,"icon"],[607,16,657,14],[607,18,657,16,"ability"],[607,25,657,23],[607,26,657,24,"icon"],[608,10,658,8],[608,11,658,9],[608,12,658,10],[609,10,659,8,"console"],[609,17,659,15],[609,18,659,16,"log"],[609,21,659,19],[609,22,659,20],[609,37,659,35,"enemy"],[609,42,659,40],[609,43,659,41,"name"],[609,47,659,45],[609,55,659,53,"damageResult"],[609,67,659,65],[609,68,659,66,"damage"],[609,74,659,72],[609,83,659,81],[609,84,659,82],[611,10,661,8],[612,10,662,8],[612,14,662,12,"damageResult"],[612,26,662,24],[612,27,662,25,"damage"],[612,33,662,31],[612,37,662,35,"enemy"],[612,42,662,40],[612,43,662,41,"health"],[612,49,662,47],[612,51,662,49],[613,12,663,10,"console"],[613,19,663,17],[613,20,663,18,"log"],[613,23,663,21],[613,24,663,22],[613,67,663,65,"enemy"],[613,72,663,70],[613,73,663,71,"name"],[613,77,663,75],[613,90,663,88,"damageResult"],[613,102,663,100],[613,103,663,101,"damage"],[613,109,663,107],[613,124,663,122,"enemy"],[613,129,663,127],[613,130,663,128,"health"],[613,136,663,134],[613,139,663,137],[613,140,663,138],[614,10,664,8],[615,8,665,6],[615,9,665,7],[615,10,665,8],[616,8,667,6,"console"],[616,15,667,13],[616,16,667,14,"log"],[616,19,667,17],[616,20,667,18],[616,26,667,24,"ability"],[616,33,667,31],[616,34,667,32,"name"],[616,38,667,36],[616,56,667,54,"enemiesInRange"],[616,70,667,68],[616,71,667,69,"length"],[616,77,667,75],[616,93,667,91,"damage"],[616,99,667,97],[616,118,667,116],[616,119,667,117],[617,6,669,4],[617,7,669,5],[617,13,669,11],[618,8,670,6],[619,8,671,6],[619,12,671,12,"target"],[619,18,671,18],[619,21,671,21,"findClosestEnemyInternal"],[619,45,671,45],[619,46,671,46,"state"],[619,51,671,51],[619,52,671,52,"enemies"],[619,59,671,59],[619,60,671,60],[620,8,672,6],[620,12,672,10],[620,13,672,11,"target"],[620,19,672,17],[620,21,672,19],[621,8,674,6],[621,12,674,12,"damageResult"],[621,24,674,24],[621,27,674,27,"DamageCalculator"],[621,46,674,43],[621,47,674,43,"DamageCalculator"],[621,63,674,43],[621,64,674,44,"calculateDamage"],[621,79,674,59],[621,80,674,60,"damage"],[621,86,674,66],[621,88,674,68,"state"],[621,93,674,73],[621,94,674,74,"playerStats"],[621,105,674,85],[621,107,674,87,"target"],[621,113,674,93],[621,114,674,94,"stats"],[621,119,674,99],[621,120,674,100],[623,8,676,6],[624,8,677,6,"console"],[624,15,677,13],[624,16,677,14,"log"],[624,19,677,17],[624,20,677,18],[624,71,677,69,"target"],[624,77,677,75],[624,78,677,76,"name"],[624,82,677,80],[624,91,677,89,"damageResult"],[624,103,677,101],[624,104,677,102,"damage"],[624,110,677,108],[624,119,677,117],[624,120,677,118],[625,8,678,6,"createProjectile"],[625,24,678,22],[625,25,678,23,"target"],[625,31,678,29],[625,33,678,31,"damageResult"],[625,45,678,43],[625,46,678,44,"damage"],[625,52,678,50],[625,54,678,52,"currentNinjaPosition"],[625,74,678,72],[625,76,678,74],[626,10,679,8,"id"],[626,12,679,10],[626,14,679,12,"ability"],[626,21,679,19],[626,22,679,20,"id"],[626,24,679,22],[627,10,680,8,"name"],[627,14,680,12],[627,16,680,14,"ability"],[627,23,680,21],[627,24,680,22,"name"],[627,28,680,26],[628,10,681,8,"icon"],[628,14,681,12],[628,16,681,14,"ability"],[628,23,681,21],[628,24,681,22,"icon"],[629,8,682,6],[629,9,682,7],[629,10,682,8],[630,8,684,6,"console"],[630,15,684,13],[630,16,684,14,"log"],[630,19,684,17],[630,20,684,18],[630,26,684,24,"ability"],[630,33,684,31],[630,34,684,32,"name"],[630,38,684,36],[630,66,684,64,"damageResult"],[630,78,684,76],[630,79,684,77,"damage"],[630,85,684,83],[630,95,684,93,"damageResult"],[630,107,684,105],[630,108,684,106,"isCritical"],[630,118,684,116],[630,121,684,119],[630,131,684,129],[630,134,684,132],[630,136,684,134],[630,138,684,136],[630,139,684,137],[632,8,686,6],[633,8,687,6],[633,12,687,10,"damageResult"],[633,24,687,22],[633,25,687,23,"damage"],[633,31,687,29],[633,35,687,33,"target"],[633,41,687,39],[633,42,687,40,"health"],[633,48,687,46],[633,50,687,48],[634,10,688,8,"console"],[634,17,688,15],[634,18,688,16,"log"],[634,21,688,19],[634,22,688,20],[634,75,688,73,"target"],[634,81,688,79],[634,82,688,80,"name"],[634,86,688,84],[634,99,688,97,"damageResult"],[634,111,688,109],[634,112,688,110,"damage"],[634,118,688,116],[634,133,688,131,"target"],[634,139,688,137],[634,140,688,138,"health"],[634,146,688,144],[634,149,688,147],[634,150,688,148],[635,8,689,6],[636,6,690,4],[638,6,692,4],[639,6,693,4],[639,10,693,8,"ability"],[639,17,693,15],[639,18,693,16,"effects"],[639,25,693,23],[639,26,693,24,"includes"],[639,34,693,32],[639,35,693,33],[639,40,693,38],[639,41,693,39],[639,45,693,43,"ability"],[639,52,693,50],[639,53,693,51,"stats"],[639,58,693,56],[639,59,693,57,"duration"],[639,67,693,65],[639,69,693,67],[640,8,694,6],[640,12,694,12,"targets"],[640,19,694,19],[640,22,694,22,"isAOE"],[640,27,694,27],[640,30,695,8,"state"],[640,35,695,13],[640,36,695,14,"enemies"],[640,43,695,21],[640,44,695,22,"filter"],[640,50,695,28],[640,51,695,29,"enemy"],[640,56,695,34],[640,60,695,38],[641,10,696,10],[641,14,696,16,"ninjaX"],[641,20,696,22],[641,23,696,25,"currentNinjaPosition"],[641,43,696,45],[641,44,696,46,"x"],[641,45,696,47],[641,48,696,50],[641,50,696,52],[642,10,697,10],[642,14,697,16,"ninjaY"],[642,20,697,22],[642,23,697,25,"currentNinjaPosition"],[642,43,697,45],[642,44,697,46,"y"],[642,45,697,47],[642,48,697,50],[642,50,697,52],[643,10,698,10],[643,14,698,16,"enemyX"],[643,20,698,22],[643,23,698,25,"enemy"],[643,28,698,30],[643,29,698,31,"position"],[643,37,698,39],[643,38,698,40,"x"],[643,39,698,41],[643,42,698,44],[643,46,698,48],[644,10,699,10],[644,14,699,16,"enemyY"],[644,20,699,22],[644,23,699,25,"enemy"],[644,28,699,30],[644,29,699,31,"position"],[644,37,699,39],[644,38,699,40,"y"],[644,39,699,41],[644,42,699,44],[644,46,699,48],[645,10,700,10],[645,14,700,16,"distance"],[645,22,700,24],[645,25,700,27,"Math"],[645,29,700,31],[645,30,700,32,"sqrt"],[645,34,700,36],[645,35,700,37,"Math"],[645,39,700,41],[645,40,700,42,"pow"],[645,43,700,45],[645,44,700,46,"enemyX"],[645,50,700,52],[645,53,700,55,"ninjaX"],[645,59,700,61],[645,61,700,63],[645,62,700,64],[645,63,700,65],[645,66,700,68,"Math"],[645,70,700,72],[645,71,700,73,"pow"],[645,74,700,76],[645,75,700,77,"enemyY"],[645,81,700,83],[645,84,700,86,"ninjaY"],[645,90,700,92],[645,92,700,94],[645,93,700,95],[645,94,700,96],[645,95,700,97],[646,10,701,10],[646,17,701,17,"distance"],[646,25,701,25],[646,29,701,29,"ability"],[646,36,701,36],[646,37,701,37,"stats"],[646,42,701,42],[646,43,701,43,"aoeRadius"],[646,52,701,52],[647,8,702,8],[647,9,702,9],[647,10,702,10],[647,13,703,8],[647,14,703,9,"findClosestEnemyInternal"],[647,38,703,33],[647,39,703,34,"state"],[647,44,703,39],[647,45,703,40,"enemies"],[647,52,703,47],[647,53,703,48],[647,54,703,49],[647,55,703,50,"filter"],[647,61,703,56],[647,62,703,57,"Boolean"],[647,69,703,64],[647,70,703,65],[648,8,705,6,"targets"],[648,15,705,13],[648,16,705,14,"forEach"],[648,23,705,21],[648,24,705,22,"target"],[648,30,705,28],[648,34,705,32],[649,10,706,8,"state"],[649,15,706,13],[649,16,706,14,"statusEffects"],[649,29,706,27],[649,30,706,28,"addEffect"],[649,39,706,37],[649,40,706,38,"target"],[649,46,706,44],[649,47,706,45,"id"],[649,49,706,47],[649,51,706,49],[650,12,707,10,"id"],[650,14,707,12],[650,16,707,14],[650,19,707,17,"ability"],[650,26,707,24],[650,27,707,25,"id"],[650,29,707,27],[650,35,707,33],[651,12,708,10,"type"],[651,16,708,14],[651,18,708,16],[651,23,708,21],[652,12,709,10,"remainingTicks"],[652,26,709,24],[652,28,709,26,"Math"],[652,32,709,30],[652,33,709,31,"floor"],[652,38,709,36],[652,39,709,37,"ability"],[652,46,709,44],[652,47,709,45,"stats"],[652,52,709,50],[652,53,709,51,"duration"],[652,61,709,59],[652,64,709,62],[652,66,709,64],[652,67,709,65],[653,12,710,10,"tickInterval"],[653,24,710,22],[653,26,710,24],[653,28,710,26],[654,12,711,10,"lastTick"],[654,20,711,18],[654,22,711,20,"state"],[654,27,711,25],[654,28,711,26,"currentTick"],[654,39,711,37],[655,12,712,10,"value"],[655,17,712,15],[655,19,712,17,"Math"],[655,23,712,21],[655,24,712,22,"floor"],[655,29,712,27],[655,30,712,28,"damage"],[655,36,712,34],[655,39,712,37],[655,42,712,40],[655,43,712,41],[656,12,713,10,"stackable"],[656,21,713,19],[656,23,713,21],[657,10,714,8],[657,11,714,9],[657,12,714,10],[658,8,715,6],[658,9,715,7],[658,10,715,8],[659,6,716,4],[661,6,718,4],[662,6,719,4],[662,10,719,8,"ability"],[662,17,719,15],[662,18,719,16,"effects"],[662,25,719,23],[662,26,719,24,"includes"],[662,34,719,32],[662,35,719,33],[662,41,719,39],[662,42,719,40],[662,46,719,44,"ability"],[662,53,719,51],[662,54,719,52,"id"],[662,56,719,54],[662,61,719,59],[662,75,719,73],[662,77,719,75],[663,8,720,6,"console"],[663,15,720,13],[663,16,720,14,"log"],[663,19,720,17],[663,20,720,18],[663,66,720,64,"ability"],[663,73,720,71],[663,74,720,72,"stats"],[663,79,720,77],[663,80,720,78,"duration"],[663,88,720,86],[663,98,720,96],[663,99,720,97],[665,8,722,6],[666,8,723,6],[666,12,723,12,"cloneX"],[666,18,723,18],[666,21,723,21,"currentNinjaPosition"],[666,41,723,41],[666,42,723,42,"x"],[666,43,723,43],[666,46,723,46],[666,48,723,48],[666,49,723,49],[666,50,723,50],[667,8,724,6],[667,12,724,12,"cloneY"],[667,18,724,18],[667,21,724,21,"currentNinjaPosition"],[667,41,724,41],[667,42,724,42,"y"],[667,43,724,43],[667,46,724,46],[667,48,724,48],[667,49,724,49],[667,50,724,50],[669,8,726,6,"state"],[669,13,726,11],[669,14,726,12,"shadowClone"],[669,25,726,23],[669,28,726,26],[670,10,727,8,"id"],[670,12,727,10],[670,14,727,12],[670,30,727,28,"Date"],[670,34,727,32],[670,35,727,33,"now"],[670,38,727,36],[670,39,727,37],[670,40,727,38],[670,42,727,40],[671,10,728,8,"remainingTicks"],[671,24,728,22],[671,26,728,24,"Math"],[671,30,728,28],[671,31,728,29,"floor"],[671,36,728,34],[671,37,728,35,"ability"],[671,44,728,42],[671,45,728,43,"stats"],[671,50,728,48],[671,51,728,49,"duration"],[671,59,728,57],[671,62,728,60],[671,64,728,62],[671,65,728,63],[672,10,728,65],[673,10,729,8,"position"],[673,18,729,16],[673,20,729,18],[674,12,729,20,"x"],[674,13,729,21],[674,15,729,23,"cloneX"],[674,21,729,29],[675,12,729,31,"y"],[675,13,729,32],[675,15,729,34,"cloneY"],[676,10,729,41],[676,11,729,42],[677,10,730,8,"damageMultiplier"],[677,26,730,24],[677,28,730,26],[677,31,730,29],[677,32,730,31],[678,8,731,6],[678,9,731,7],[679,8,733,6,"console"],[679,15,733,13],[679,16,733,14,"log"],[679,19,733,17],[679,20,733,18],[679,63,733,61,"ability"],[679,70,733,68],[679,71,733,69,"stats"],[679,76,733,74],[679,77,733,75,"duration"],[679,85,733,83],[679,108,733,106],[679,109,733,107],[680,6,734,4],[681,4,735,2],[681,5,735,3],[683,4,737,2],[684,4,738,2],[684,8,738,8,"createProjectile"],[684,24,738,24],[684,27,738,27,"createProjectile"],[684,28,738,28,"targetEnemy"],[684,39,738,52],[684,41,738,54,"damage"],[684,47,738,68],[684,49,738,70,"ninjaPos"],[684,57,738,103],[684,59,738,105,"abilityInfo"],[684,70,738,159],[684,72,738,161,"isAOE"],[684,77,738,176],[684,79,738,178,"aoeRadius"],[684,88,738,196],[684,93,738,201],[685,6,739,4],[685,10,739,8],[685,11,739,9,"targetEnemy"],[685,22,739,20],[685,24,739,22],[686,8,740,6,"console"],[686,15,740,13],[686,16,740,14,"log"],[686,19,740,17],[686,20,740,18],[686,65,740,63],[686,66,740,64],[687,8,741,6],[687,15,741,13],[687,19,741,17],[688,6,742,4],[689,6,744,4],[689,10,744,10,"SCREEN_WIDTH"],[689,22,744,22],[689,25,744,25],[689,28,744,28],[690,6,745,4],[690,10,745,10,"GAME_AREA_HEIGHT"],[690,26,745,26],[690,29,745,29],[690,32,745,32],[690,35,745,35],[690,38,745,38],[690,39,745,39],[690,40,745,40],[691,6,746,4],[691,10,746,10,"NINJA_SIZE"],[691,20,746,20],[691,23,746,23],[691,25,746,25],[693,6,748,4],[694,6,749,4],[694,10,749,10,"ninjaX"],[694,16,749,16],[694,19,749,19,"ninjaPos"],[694,27,749,27],[694,30,749,30,"ninjaPos"],[694,38,749,38],[694,39,749,39,"x"],[694,40,749,40],[694,43,749,43,"NINJA_SIZE"],[694,53,749,53],[694,56,749,56],[694,57,749,57],[694,60,749,60,"SCREEN_WIDTH"],[694,72,749,72],[694,75,749,75],[694,76,749,76],[695,6,750,4],[695,10,750,10,"ninjaY"],[695,16,750,16],[695,19,750,19,"ninjaPos"],[695,27,750,27],[695,30,750,30,"ninjaPos"],[695,38,750,38],[695,39,750,39,"y"],[695,40,750,40],[695,43,750,43,"NINJA_SIZE"],[695,53,750,53],[695,56,750,56],[695,57,750,57],[695,60,750,60,"GAME_AREA_HEIGHT"],[695,76,750,76],[695,79,750,79],[695,80,750,80],[696,6,751,4],[696,10,751,10,"ENEMY_SIZE"],[696,20,751,20],[696,23,751,23],[696,25,751,25],[697,6,753,4],[697,10,753,10,"projectileId"],[697,22,753,22],[697,25,753,25],[697,33,753,33,"Date"],[697,37,753,37],[697,38,753,38,"now"],[697,41,753,41],[697,42,753,42],[697,43,753,43],[697,47,753,47,"Math"],[697,51,753,51],[697,52,753,52,"random"],[697,58,753,58],[697,59,753,59],[697,60,753,60],[697,62,753,62],[698,6,755,4],[698,10,755,10,"projectile"],[698,20,755,38],[698,23,755,41],[699,8,756,6,"id"],[699,10,756,8],[699,12,756,10,"projectileId"],[699,24,756,22],[700,8,757,6,"x"],[700,9,757,7],[700,11,757,9,"ninjaX"],[700,17,757,15],[701,8,758,6,"y"],[701,9,758,7],[701,11,758,9,"ninjaY"],[701,17,758,15],[702,8,759,6,"targetX"],[702,15,759,13],[702,17,759,15,"targetEnemy"],[702,28,759,26],[702,29,759,27,"position"],[702,37,759,35],[702,38,759,36,"x"],[702,39,759,37],[702,42,759,40,"ENEMY_SIZE"],[702,52,759,50],[702,55,759,53],[702,56,759,54],[703,8,760,6,"targetY"],[703,15,760,13],[703,17,760,15,"targetEnemy"],[703,28,760,26],[703,29,760,27,"position"],[703,37,760,35],[703,38,760,36,"y"],[703,39,760,37],[703,42,760,40,"ENEMY_SIZE"],[703,52,760,50],[703,55,760,53],[703,56,760,54],[704,8,761,6,"targetEnemyId"],[704,21,761,19],[704,23,761,21,"targetEnemy"],[704,34,761,32],[704,35,761,33,"id"],[704,37,761,35],[705,8,762,6,"damage"],[705,14,762,12],[705,16,762,14,"damage"],[705,22,762,20],[706,8,763,6,"startTime"],[706,17,763,15],[706,19,763,17,"Date"],[706,23,763,21],[706,24,763,22,"now"],[706,27,763,25],[706,28,763,26],[706,29,763,27],[707,8,764,6,"duration"],[707,16,764,14],[707,18,764,16],[707,21,764,19],[708,8,764,21],[709,8,765,6],[710,8,766,6,"abilityId"],[710,17,766,15],[710,19,766,17,"abilityInfo"],[710,30,766,28],[710,32,766,30,"id"],[710,34,766,32],[710,38,766,36],[710,54,766,52],[711,8,767,6,"abilityName"],[711,19,767,17],[711,21,767,19,"abilityInfo"],[711,32,767,30],[711,34,767,32,"name"],[711,38,767,36],[711,42,767,40],[711,58,767,56],[712,8,768,6,"abilityIcon"],[712,19,768,17],[712,21,768,19,"abilityInfo"],[712,32,768,30],[712,34,768,32,"icon"],[712,38,768,36],[712,42,768,40],[712,46,768,44],[713,8,768,46],[714,8,769,6],[715,8,770,6,"isAOE"],[715,13,770,11],[715,15,770,13,"isAOE"],[715,20,770,18],[715,24,770,22],[715,29,770,27],[716,8,771,6,"aoeRadius"],[716,17,771,15],[716,19,771,17,"aoeRadius"],[716,28,771,26],[716,32,771,30],[717,6,772,4],[717,7,772,5],[718,6,774,4,"console"],[718,13,774,11],[718,14,774,12,"log"],[718,17,774,15],[718,18,774,16],[718,44,774,42,"abilityInfo"],[718,55,774,53],[718,57,774,55,"name"],[718,61,774,59],[718,65,774,63],[718,81,774,79],[718,101,774,99,"projectileId"],[718,113,774,111],[718,128,774,126,"targetEnemy"],[718,139,774,137],[718,140,774,138,"name"],[718,144,774,142],[718,152,774,150,"damage"],[718,158,774,156],[718,167,774,165],[718,168,774,166],[719,6,775,4,"console"],[719,13,775,11],[719,14,775,12,"log"],[719,17,775,15],[719,18,775,16],[719,48,775,46,"isAOE"],[719,53,775,51],[719,68,775,66,"aoeRadius"],[719,77,775,75],[719,89,775,87,"damage"],[719,95,775,93],[719,97,775,95],[719,98,775,96],[720,6,777,4,"console"],[720,13,777,11],[720,14,777,12,"log"],[720,17,777,15],[720,18,777,16],[720,53,777,51,"targetEnemy"],[720,64,777,62],[720,65,777,63,"id"],[720,67,777,65],[720,75,777,73,"damage"],[720,81,777,79],[720,90,777,88],[720,91,777,89],[721,6,778,4,"console"],[721,13,778,11],[721,14,778,12,"log"],[721,17,778,15],[721,18,778,16],[721,53,778,51,"ninjaX"],[721,59,778,57],[721,64,778,62,"ninjaY"],[721,70,778,68],[721,87,778,85,"projectile"],[721,97,778,95],[721,98,778,96,"targetX"],[721,105,778,103],[721,110,778,108,"projectile"],[721,120,778,118],[721,121,778,119,"targetY"],[721,128,778,126],[721,131,778,129],[721,132,778,130],[722,6,780,4,"setProjectiles"],[722,20,780,18],[722,21,780,19,"prev"],[722,25,780,23],[722,29,780,27],[722,30,780,28],[722,33,780,31,"prev"],[722,37,780,35],[722,39,780,37,"projectile"],[722,49,780,47],[722,50,780,48],[722,51,780,49],[724,6,782,4],[725,6,783,4,"setTimeout"],[725,16,783,14],[725,17,783,15],[725,23,783,21],[726,8,784,6,"handleProjectileHit"],[726,27,784,25],[726,28,784,26,"projectile"],[726,38,784,36],[726,39,784,37],[727,6,785,4],[727,7,785,5],[727,9,785,7],[727,12,785,10],[727,13,785,11],[728,6,787,4],[728,13,787,11,"projectile"],[728,23,787,21],[729,4,788,2],[729,5,788,3],[731,4,790,2],[732,4,791,2],[732,8,791,8,"spawnTestEnemy"],[732,22,791,22],[732,25,791,26,"state"],[732,30,791,44],[732,34,791,49],[733,6,792,4,"console"],[733,13,792,11],[733,14,792,12,"log"],[733,17,792,15],[733,18,792,16],[733,83,792,81],[733,84,792,82],[735,6,794,4],[736,6,795,4],[736,10,795,10,"zoneEnemy"],[736,19,795,19],[736,22,795,22,"spawnZoneEnemy"],[736,36,795,36],[736,37,795,37],[736,38,795,38],[737,6,796,4],[737,10,796,8],[737,11,796,9,"zoneEnemy"],[737,20,796,18],[737,22,796,20],[738,8,797,6,"console"],[738,15,797,13],[738,16,797,14,"log"],[738,19,797,17],[738,20,797,18],[738,76,797,74],[738,77,797,75],[739,8,798,6],[740,8,799,6,"spawnBasicTestEnemy"],[740,27,799,25],[740,28,799,26,"state"],[740,33,799,31],[740,34,799,32],[741,8,800,6],[742,6,801,4],[743,6,803,4,"console"],[743,13,803,11],[743,14,803,12,"log"],[743,17,803,15],[743,18,803,16],[743,44,803,42,"zoneEnemy"],[743,53,803,51],[743,54,803,52,"name"],[743,58,803,56],[743,63,803,61,"zoneEnemy"],[743,72,803,70],[743,73,803,71,"typeId"],[743,79,803,77],[743,94,803,92,"currentZone"],[743,105,803,103],[743,107,803,105,"id"],[743,109,803,107],[743,119,803,117,"currentZoneLevel"],[743,135,803,133],[743,137,803,135,"level"],[743,142,803,140],[743,144,803,142],[743,145,803,143],[745,6,805,4],[746,6,806,4],[746,10,806,10,"combatEnemy"],[746,21,806,34],[746,24,806,37],[747,8,807,6,"id"],[747,10,807,8],[747,12,807,10,"zoneEnemy"],[747,21,807,19],[747,22,807,20,"id"],[747,24,807,22],[748,8,808,6,"name"],[748,12,808,10],[748,14,808,12,"zoneEnemy"],[748,23,808,21],[748,24,808,22,"name"],[748,28,808,26],[749,8,809,6,"health"],[749,14,809,12],[749,16,809,14,"zoneEnemy"],[749,25,809,23],[749,26,809,24,"hp"],[749,28,809,26],[750,8,810,6,"maxHealth"],[750,17,810,15],[750,19,810,17,"zoneEnemy"],[750,28,810,26],[750,29,810,27,"maxHP"],[750,34,810,32],[751,8,811,6,"stats"],[751,13,811,11],[751,15,811,13],[752,10,812,8,"attack"],[752,16,812,14],[752,18,812,16,"zoneEnemy"],[752,27,812,25],[752,28,812,26,"attack"],[752,34,812,32],[753,10,813,8,"defense"],[753,17,813,15],[753,19,813,17],[753,21,813,19],[754,10,813,21],[755,10,814,8,"health"],[755,16,814,14],[755,18,814,16,"zoneEnemy"],[755,27,814,25],[755,28,814,26,"hp"],[755,30,814,28],[756,10,815,8,"maxHealth"],[756,19,815,17],[756,21,815,19,"zoneEnemy"],[756,30,815,28],[756,31,815,29,"maxHP"],[756,36,815,34],[757,10,816,8,"critChance"],[757,20,816,18],[757,22,816,20],[757,23,816,21],[758,10,817,8,"critDamage"],[758,20,817,18],[758,22,817,20],[758,25,817,23],[759,10,818,8,"cooldownReduction"],[759,27,818,25],[759,29,818,27],[760,8,819,6],[760,9,819,7],[761,8,820,6,"position"],[761,16,820,14],[761,18,820,16,"zoneEnemy"],[761,27,820,25],[761,28,820,26,"position"],[761,36,820,34],[762,8,821,6,"lastDamaged"],[762,19,821,17],[762,21,821,19],[762,22,821,20],[763,8,822,6],[764,8,823,6,"zoneTypeId"],[764,18,823,16],[764,20,823,18,"zoneEnemy"],[764,29,823,27],[764,30,823,28,"typeId"],[764,36,823,34],[765,8,824,6,"zoneXP"],[765,14,824,12],[765,16,824,14,"zoneEnemy"],[765,25,824,23],[765,26,824,24,"xp"],[766,6,825,4],[766,7,825,5],[767,6,827,4,"console"],[767,13,827,11],[767,14,827,12,"log"],[767,17,827,15],[767,18,827,16],[767,42,827,40,"combatEnemy"],[767,53,827,51],[767,54,827,52,"name"],[767,58,827,56],[767,67,827,65,"combatEnemy"],[767,78,827,76],[767,79,827,77,"health"],[767,85,827,83],[767,100,827,98,"currentZone"],[767,111,827,109],[767,113,827,111,"id"],[767,115,827,113],[767,125,827,123,"currentZoneLevel"],[767,141,827,139],[767,143,827,141,"level"],[767,148,827,146],[767,150,827,148],[767,151,827,149],[768,6,828,4,"state"],[768,11,828,9],[768,12,828,10,"enemies"],[768,19,828,17],[768,20,828,18,"push"],[768,24,828,22],[768,25,828,23,"combatEnemy"],[768,36,828,34],[768,37,828,35],[769,4,829,2],[769,5,829,3],[771,4,831,2],[772,4,832,2],[772,8,832,8,"spawnBasicTestEnemy"],[772,27,832,27],[772,30,832,31,"state"],[772,35,832,49],[772,39,832,54],[773,6,833,4],[773,10,833,10,"SCREEN_WIDTH"],[773,22,833,22],[773,25,833,25],[773,28,833,28],[774,6,834,4],[774,10,834,10,"GAME_AREA_HEIGHT"],[774,26,834,26],[774,29,834,29],[774,32,834,32],[774,35,834,35],[774,38,834,38],[775,6,835,4],[775,10,835,10,"ENEMY_SIZE"],[775,20,835,20],[775,23,835,23],[775,25,835,25],[776,6,837,4],[776,10,837,10,"x"],[776,11,837,11],[776,14,837,14,"Math"],[776,18,837,18],[776,19,837,19,"random"],[776,25,837,25],[776,26,837,26],[776,27,837,27],[776,31,837,31,"SCREEN_WIDTH"],[776,43,837,43],[776,46,837,46,"ENEMY_SIZE"],[776,56,837,56],[776,59,837,59],[776,60,837,60],[776,61,837,61],[776,64,837,64,"ENEMY_SIZE"],[776,74,837,74],[777,6,838,4],[777,10,838,10,"y"],[777,11,838,11],[777,14,838,14,"Math"],[777,18,838,18],[777,19,838,19,"random"],[777,25,838,25],[777,26,838,26],[777,27,838,27],[777,31,838,31,"GAME_AREA_HEIGHT"],[777,47,838,47],[777,50,838,50,"ENEMY_SIZE"],[777,60,838,60],[777,63,838,63],[777,64,838,64],[777,65,838,65],[777,68,838,68,"ENEMY_SIZE"],[777,78,838,78],[778,6,840,4],[778,10,840,10,"enemy"],[778,15,840,28],[778,18,840,31],[779,8,841,6,"id"],[779,10,841,8],[779,12,841,10],[779,30,841,28,"Date"],[779,34,841,32],[779,35,841,33,"now"],[779,38,841,36],[779,39,841,37],[779,40,841,38],[779,44,841,42,"Math"],[779,48,841,46],[779,49,841,47,"random"],[779,55,841,53],[779,56,841,54],[779,57,841,55],[779,59,841,57],[780,8,842,6,"name"],[780,12,842,10],[780,14,842,12],[780,26,842,24,"Math"],[780,30,842,28],[780,31,842,29,"floor"],[780,36,842,34],[780,37,842,35,"Math"],[780,41,842,39],[780,42,842,40,"random"],[780,48,842,46],[780,49,842,47],[780,50,842,48],[780,53,842,51],[780,56,842,54],[780,57,842,55],[780,59,842,57],[781,8,843,6,"health"],[781,14,843,12],[781,16,843,14],[781,18,843,16],[782,8,844,6,"maxHealth"],[782,17,844,15],[782,19,844,17],[782,21,844,19],[783,8,845,6,"stats"],[783,13,845,11],[783,15,845,13],[784,10,846,8,"attack"],[784,16,846,14],[784,18,846,16],[784,20,846,18],[785,10,847,8,"defense"],[785,17,847,15],[785,19,847,17],[785,21,847,19],[786,10,848,8,"health"],[786,16,848,14],[786,18,848,16],[786,20,848,18],[787,10,849,8,"maxHealth"],[787,19,849,17],[787,21,849,19],[787,23,849,21],[788,10,850,8,"critChance"],[788,20,850,18],[788,22,850,20],[788,23,850,21],[789,10,851,8,"critDamage"],[789,20,851,18],[789,22,851,20],[789,25,851,23],[790,10,852,8,"cooldownReduction"],[790,27,852,25],[790,29,852,27],[791,8,853,6],[791,9,853,7],[792,8,854,6,"position"],[792,16,854,14],[792,18,854,16],[793,10,854,18,"x"],[793,11,854,19],[794,10,854,21,"y"],[795,8,854,23],[795,9,854,24],[796,8,855,6,"lastDamaged"],[796,19,855,17],[796,21,855,19],[797,6,856,4],[797,7,856,5],[798,6,858,4,"console"],[798,13,858,11],[798,14,858,12,"log"],[798,17,858,15],[798,18,858,16],[798,42,858,40,"enemy"],[798,47,858,45],[798,48,858,46,"name"],[798,52,858,50],[798,60,858,58,"Math"],[798,64,858,62],[798,65,858,63,"round"],[798,70,858,68],[798,71,858,69,"x"],[798,72,858,70],[798,73,858,71],[798,78,858,76,"Math"],[798,82,858,80],[798,83,858,81,"round"],[798,88,858,86],[798,89,858,87,"y"],[798,90,858,88],[798,91,858,89],[798,94,858,92],[798,95,858,93],[799,6,859,4,"state"],[799,11,859,9],[799,12,859,10,"enemies"],[799,19,859,17],[799,20,859,18,"push"],[799,24,859,22],[799,25,859,23,"enemy"],[799,30,859,28],[799,31,859,29],[800,4,860,2],[800,5,860,3],[802,4,862,2],[803,4,863,2],[803,8,863,8,"startCombat"],[803,19,863,19],[803,22,863,22,"React"],[803,27,863,27],[803,28,863,27,"default"],[803,35,863,27],[803,36,863,28,"useCallback"],[803,47,863,39],[803,48,863,40],[803,54,863,46],[804,6,864,4,"console"],[804,13,864,11],[804,14,864,12,"log"],[804,17,864,15],[804,18,864,16],[804,63,864,61],[804,64,864,62],[805,6,865,4,"setCombatState"],[805,20,865,18],[805,21,865,19,"prev"],[805,25,865,23],[805,30,865,28],[806,8,865,30],[806,11,865,33,"prev"],[806,15,865,37],[807,8,865,39,"isInCombat"],[807,18,865,49],[807,20,865,51],[808,6,865,56],[808,7,865,57],[808,8,865,58],[808,9,865,59],[810,6,867,4],[811,6,868,4,"combatEngine"],[811,25,868,16],[811,26,868,16,"combatEngine"],[811,38,868,16],[811,39,868,17,"addTickCallback"],[811,54,868,32],[811,55,868,33,"handleCombatTick"],[811,71,868,49],[811,72,868,50],[812,6,869,4,"console"],[812,13,869,11],[812,14,869,12,"log"],[812,17,869,15],[812,18,869,16],[812,62,869,60],[812,63,869,61],[814,6,871,4],[815,6,872,4,"combatEngine"],[815,25,872,16],[815,26,872,16,"combatEngine"],[815,38,872,16],[815,39,872,17,"start"],[815,44,872,22],[815,45,872,23],[815,46,872,24],[816,4,873,2],[816,5,873,3],[816,7,873,5],[816,8,873,6,"combatEngine"],[816,27,873,18],[816,28,873,18,"combatEngine"],[816,40,873,18],[816,42,873,20,"handleCombatTick"],[816,58,873,36],[816,59,873,37],[816,60,873,38],[818,4,875,2],[819,4,876,2],[819,8,876,8,"stopCombat"],[819,18,876,18],[819,21,876,21,"React"],[819,26,876,26],[819,27,876,26,"default"],[819,34,876,26],[819,35,876,27,"useCallback"],[819,46,876,38],[819,47,876,39],[819,53,876,45],[820,6,877,4,"setCombatState"],[820,20,877,18],[820,21,877,19,"prev"],[820,25,877,23],[820,30,877,28],[821,8,877,30],[821,11,877,33,"prev"],[821,15,877,37],[822,8,877,39,"isInCombat"],[822,18,877,49],[822,20,877,51],[823,6,877,57],[823,7,877,58],[823,8,877,59],[823,9,877,60],[824,6,878,4,"combatEngine"],[824,25,878,16],[824,26,878,16,"combatEngine"],[824,38,878,16],[824,39,878,17,"removeTickCallback"],[824,57,878,35],[824,58,878,36,"handleCombatTick"],[824,74,878,52],[824,75,878,53],[825,4,879,2],[825,5,879,3],[825,7,879,5],[825,8,879,6,"combatEngine"],[825,27,879,18],[825,28,879,18,"combatEngine"],[825,40,879,18],[825,42,879,20,"handleCombatTick"],[825,58,879,36],[825,59,879,37],[825,60,879,38],[827,4,881,2],[828,4,882,2],[828,8,882,8,"equipAbility"],[828,20,882,20],[828,23,882,23,"equipAbility"],[828,24,882,24,"abilityId"],[828,33,882,41],[828,35,882,43,"slotIndex"],[828,44,882,60],[828,49,882,74],[829,6,883,4],[829,13,883,11,"combatState"],[829,24,883,22],[829,25,883,23,"abilityManager"],[829,39,883,37],[829,40,883,38,"equipAbility"],[829,52,883,50],[829,53,883,51,"abilityId"],[829,62,883,60],[829,64,883,62,"slotIndex"],[829,73,883,71],[829,74,883,72],[830,4,884,2],[830,5,884,3],[831,4,886,2],[831,8,886,8,"getDeck"],[831,15,886,15],[831,18,886,18,"getDeck"],[831,19,886,18],[831,24,886,24],[832,6,887,4],[832,13,887,11,"combatState"],[832,24,887,22],[832,25,887,23,"abilityManager"],[832,39,887,37],[832,40,887,38,"getDeck"],[832,47,887,45],[832,48,887,46],[832,49,887,47],[833,4,888,2],[833,5,888,3],[834,4,890,2],[834,8,890,8,"getAvailableAbilities"],[834,29,890,29],[834,32,890,32,"getAvailableAbilities"],[834,33,890,32],[834,38,890,38],[835,6,891,4],[835,13,891,11,"combatState"],[835,24,891,22],[835,25,891,23,"abilityManager"],[835,39,891,37],[835,40,891,38,"getAvailableAbilities"],[835,61,891,59],[835,62,891,60],[835,63,891,61],[836,4,892,2],[836,5,892,3],[837,4,894,2],[837,8,894,8,"upgradeAbility"],[837,22,894,22],[837,25,894,26,"abilityId"],[837,34,894,43],[837,38,894,57],[838,6,895,4],[838,13,895,11,"combatState"],[838,24,895,22],[838,25,895,23,"abilityManager"],[838,39,895,37],[838,40,895,38,"upgradeAbility"],[838,54,895,52],[838,55,895,53,"abilityId"],[838,64,895,62],[838,65,895,63],[839,4,896,2],[839,5,896,3],[841,4,898,2],[842,4,899,2],[842,8,899,8,"clearAllEnemies"],[842,23,899,23],[842,26,899,26,"clearAllEnemies"],[842,27,899,26],[842,32,899,32],[843,6,900,4,"console"],[843,13,900,11],[843,14,900,12,"log"],[843,17,900,15],[843,18,900,16],[843,67,900,65],[843,68,900,66],[844,6,901,4,"setCombatState"],[844,20,901,18],[844,21,901,19,"prev"],[844,25,901,23],[844,30,901,28],[845,8,902,6],[845,11,902,9,"prev"],[845,15,902,13],[846,8,903,6,"enemies"],[846,15,903,13],[846,17,903,15],[847,6,904,4],[847,7,904,5],[847,8,904,6],[847,9,904,7],[848,4,905,2],[848,5,905,3],[850,4,907,2],[851,4,908,2],[853,4,910,2],[854,4,911,2],[854,8,911,8,"spawnEnemy"],[854,18,911,18],[854,21,911,22,"position"],[854,29,911,57],[854,33,911,75],[855,6,912,4],[855,10,912,10,"SCREEN_WIDTH"],[855,22,912,22],[855,25,912,25],[855,28,912,28],[856,6,913,4],[856,10,913,10,"GAME_AREA_HEIGHT"],[856,26,913,26],[856,29,913,29],[856,32,913,32],[856,35,913,35],[856,38,913,38],[856,39,913,39],[856,40,913,40],[857,6,914,4],[857,10,914,10,"ENEMY_SIZE"],[857,20,914,20],[857,23,914,23],[857,25,914,25],[859,6,916,4],[860,6,917,4],[860,10,917,10,"x"],[860,11,917,11],[860,14,917,14,"position"],[860,22,917,22],[860,24,917,24,"x"],[860,25,917,25],[860,29,917,29,"Math"],[860,33,917,33],[860,34,917,34,"random"],[860,40,917,40],[860,41,917,41],[860,42,917,42],[860,46,917,46,"SCREEN_WIDTH"],[860,58,917,58],[860,61,917,61,"ENEMY_SIZE"],[860,71,917,71],[860,74,917,74],[860,75,917,75],[860,76,917,76],[860,79,917,79,"ENEMY_SIZE"],[860,89,917,89],[861,6,918,4],[861,10,918,10,"y"],[861,11,918,11],[861,14,918,14,"position"],[861,22,918,22],[861,24,918,24,"y"],[861,25,918,25],[861,29,918,29,"Math"],[861,33,918,33],[861,34,918,34,"random"],[861,40,918,40],[861,41,918,41],[861,42,918,42],[861,46,918,46,"GAME_AREA_HEIGHT"],[861,62,918,62],[861,65,918,65,"ENEMY_SIZE"],[861,75,918,75],[861,78,918,78],[861,79,918,79],[861,80,918,80],[861,83,918,83,"ENEMY_SIZE"],[861,93,918,93],[862,6,920,4],[862,10,920,10,"enemy"],[862,15,920,28],[862,18,920,31],[863,8,921,6,"id"],[863,10,921,8],[863,12,921,10],[863,21,921,19],[863,23,921,21,"enemyCounter"],[863,35,921,33],[863,37,921,35],[864,8,922,6,"name"],[864,12,922,10],[864,14,922,12],[864,24,922,22],[865,8,923,6,"health"],[865,14,923,12],[865,16,923,14],[865,19,923,17],[866,8,924,6,"maxHealth"],[866,17,924,15],[866,19,924,17],[866,22,924,20],[867,8,925,6,"stats"],[867,13,925,11],[867,15,925,13],[868,10,926,8,"attack"],[868,16,926,14],[868,18,926,16],[868,20,926,18],[869,10,927,8,"defense"],[869,17,927,15],[869,19,927,17],[869,21,927,19],[870,10,928,8,"health"],[870,16,928,14],[870,18,928,16],[870,21,928,19],[871,10,929,8,"maxHealth"],[871,19,929,17],[871,21,929,19],[871,24,929,22],[872,10,930,8,"critChance"],[872,20,930,18],[872,22,930,20],[872,23,930,21],[873,10,931,8,"critDamage"],[873,20,931,18],[873,22,931,20],[873,25,931,23],[874,10,932,8,"cooldownReduction"],[874,27,932,25],[874,29,932,27],[875,8,933,6],[875,9,933,7],[876,8,934,6,"position"],[876,16,934,14],[876,18,934,16],[877,10,934,18,"x"],[877,11,934,19],[878,10,934,21,"y"],[879,8,934,23],[879,9,934,24],[880,8,935,6,"lastDamaged"],[880,19,935,17],[880,21,935,19],[881,6,936,4],[881,7,936,5],[882,6,938,4,"setCombatState"],[882,20,938,18],[882,21,938,19,"prev"],[882,25,938,23],[882,30,938,28],[883,8,939,6],[883,11,939,9,"prev"],[883,15,939,13],[884,8,940,6,"enemies"],[884,15,940,13],[884,17,940,15],[884,18,940,16],[884,21,940,19,"prev"],[884,25,940,23],[884,26,940,24,"enemies"],[884,33,940,31],[884,35,940,33,"enemy"],[884,40,940,38],[885,6,941,4],[885,7,941,5],[885,8,941,6],[885,9,941,7],[886,6,943,4],[886,13,943,11,"enemy"],[886,18,943,16],[887,4,944,2],[887,5,944,3],[889,4,946,2],[890,4,947,2],[890,8,947,8,"spawnBoss"],[890,17,947,17],[890,20,947,21,"bossEnemy"],[890,29,947,43],[890,33,947,48],[891,6,948,4,"console"],[891,13,948,11],[891,14,948,12,"log"],[891,17,948,15],[891,18,948,16],[891,39,948,37,"bossEnemy"],[891,48,948,46],[891,49,948,47,"name"],[891,53,948,51],[891,90,948,88],[891,91,948,89],[892,6,949,4,"setCombatState"],[892,20,949,18],[892,21,949,19,"prev"],[892,25,949,23],[892,30,949,28],[893,8,950,6],[893,11,950,9,"prev"],[893,15,950,13],[894,8,951,6,"enemies"],[894,15,951,13],[894,17,951,15],[894,18,951,16,"bossEnemy"],[894,27,951,25],[894,28,951,26],[894,29,951,27],[895,6,952,4],[895,7,952,5],[895,8,952,6],[895,9,952,7],[896,4,953,2],[896,5,953,3],[898,4,955,2],[899,4,956,2],[899,8,956,8,"clearSpecificEnemy"],[899,26,956,26],[899,29,956,30,"enemyId"],[899,36,956,45],[899,40,956,50],[900,6,957,4,"setCombatState"],[900,20,957,18],[900,21,957,19,"prev"],[900,25,957,23],[900,30,957,28],[901,8,958,6],[901,11,958,9,"prev"],[901,15,958,13],[902,8,959,6,"enemies"],[902,15,959,13],[902,17,959,15,"prev"],[902,21,959,19],[902,22,959,20,"enemies"],[902,29,959,27],[902,30,959,28,"filter"],[902,36,959,34],[902,37,959,35,"enemy"],[902,42,959,40],[902,46,959,44,"enemy"],[902,51,959,49],[902,52,959,50,"id"],[902,54,959,52],[902,59,959,57,"enemyId"],[902,66,959,64],[903,6,960,4],[903,7,960,5],[903,8,960,6],[903,9,960,7],[904,4,961,2],[904,5,961,3],[906,4,963,2],[907,4,964,2],[907,8,964,8,"useAbilityManually"],[907,26,964,26],[907,29,964,26,"_s3"],[907,32,964,26],[907,33,964,29],[907,37,964,29,"useCallback"],[907,43,964,40],[907,44,964,40,"useCallback"],[907,55,964,40],[907,57,964,40,"_s3"],[907,60,964,40],[907,61,964,42,"slotIndex"],[907,70,964,59],[907,74,964,73],[908,6,964,73,"_s3"],[908,9,964,73],[909,6,965,4,"console"],[909,13,965,11],[909,14,965,12,"log"],[909,17,965,15],[909,18,965,16],[909,64,965,62,"slotIndex"],[909,73,965,71],[909,82,965,80],[909,83,965,81],[910,6,966,4,"console"],[910,13,966,11],[910,14,966,12,"log"],[910,17,966,15],[910,18,966,16],[910,65,966,63,"slotIndex"],[910,74,966,72],[910,76,966,74],[910,77,966,75],[911,6,967,4,"console"],[911,13,967,11],[911,14,967,12,"log"],[911,17,967,15],[911,18,967,16],[911,53,967,51,"slotIndex"],[911,62,967,60],[911,64,967,62],[911,65,967,63],[913,6,969,4],[914,6,970,4],[914,10,970,8],[914,11,970,9,"game"],[914,15,970,13],[914,16,970,14,"gameState"],[914,25,970,23],[914,26,970,24,"isAlive"],[914,33,970,31],[914,35,970,33],[915,8,971,6,"console"],[915,15,971,13],[915,16,971,14,"log"],[915,19,971,17],[915,20,971,18],[915,70,971,68],[915,71,971,69],[916,8,972,6],[916,15,972,13],[916,20,972,18],[917,6,973,4],[919,6,975,4],[920,6,976,4],[920,10,976,10,"isReady"],[920,17,976,17],[920,20,976,20,"combatState"],[920,31,976,31],[920,32,976,32,"abilityManager"],[920,46,976,46],[920,47,976,47,"isAbilityReady"],[920,61,976,61],[920,62,976,62,"slotIndex"],[920,71,976,71],[920,72,976,72],[921,6,977,4],[921,10,977,8],[921,11,977,9,"isReady"],[921,18,977,16],[921,20,977,18],[922,8,978,6,"console"],[922,15,978,13],[922,16,978,14,"log"],[922,19,978,17],[922,20,978,18],[922,41,978,39,"slotIndex"],[922,50,978,48],[922,85,978,83],[922,86,978,84],[923,8,979,6],[923,15,979,13],[923,20,979,18],[924,6,980,4],[926,6,982,4],[927,6,983,4],[927,10,983,8,"combatState"],[927,21,983,19],[927,22,983,20,"enemies"],[927,29,983,27],[927,30,983,28,"length"],[927,36,983,34],[927,41,983,39],[927,42,983,40],[927,44,983,42],[928,8,984,6,"console"],[928,15,984,13],[928,16,984,14,"log"],[928,19,984,17],[928,20,984,18],[928,69,984,67],[928,70,984,68],[929,8,985,6],[929,15,985,13],[929,20,985,18],[930,6,986,4],[932,6,988,4],[933,6,989,4],[933,10,989,10,"currentTick"],[933,21,989,21],[933,24,989,24,"combatEngine"],[933,43,989,36],[933,44,989,36,"combatEngine"],[933,56,989,36],[933,57,989,37,"getCurrentTick"],[933,71,989,51],[933,72,989,52],[933,73,989,53],[934,6,990,4],[934,10,990,10,"success"],[934,17,990,17],[934,20,990,20,"combatState"],[934,31,990,31],[934,32,990,32,"abilityManager"],[934,46,990,46],[934,47,990,47,"useAbility"],[934,57,990,57],[934,58,990,58,"slotIndex"],[934,67,990,67],[934,69,990,69,"currentTick"],[934,80,990,80],[934,81,990,81],[935,6,992,4],[935,10,992,8,"success"],[935,17,992,15],[935,19,992,17],[936,8,993,6],[937,8,994,6,"setCombatState"],[937,22,994,20],[937,23,994,21,"prev"],[937,27,994,25],[937,31,994,29],[938,10,995,8],[938,14,995,14,"newState"],[938,22,995,22],[938,25,995,25],[939,12,995,27],[939,15,995,30,"prev"],[940,10,995,35],[940,11,995,36],[941,10,996,8,"castAbility"],[941,21,996,19],[941,22,996,20,"newState"],[941,30,996,28],[941,32,996,30,"slotIndex"],[941,41,996,39],[941,42,996,40],[942,10,997,8],[942,17,997,15,"newState"],[942,25,997,23],[943,8,998,6],[943,9,998,7],[943,10,998,8],[944,8,1000,6,"console"],[944,15,1000,13],[944,16,1000,14,"log"],[944,19,1000,17],[944,20,1000,18],[944,65,1000,63,"slotIndex"],[944,74,1000,72],[944,76,1000,74],[944,77,1000,75],[945,8,1001,6],[945,15,1001,13],[945,19,1001,17],[946,6,1002,4],[946,7,1002,5],[946,13,1002,11],[947,8,1003,6,"console"],[947,15,1003,13],[947,16,1003,14,"log"],[947,19,1003,17],[947,20,1003,18],[947,61,1003,59,"slotIndex"],[947,70,1003,68],[947,72,1003,70],[947,73,1003,71],[948,8,1004,6],[948,15,1004,13],[948,20,1004,18],[949,6,1005,4],[950,4,1006,2],[950,5,1006,3],[950,46,1006,5],[950,47,1006,6,"combatState"],[950,58,1006,17],[950,59,1006,18,"abilityManager"],[950,73,1006,32],[950,75,1006,34,"combatState"],[950,86,1006,45],[950,87,1006,46,"enemies"],[950,94,1006,53],[950,95,1006,54],[950,96,1006,55],[951,4,1007,2],[951,8,1007,2,"useEffect"],[951,14,1007,11],[951,15,1007,11,"useEffect"],[951,24,1007,11],[951,26,1007,12],[951,32,1007,18],[952,6,1008,4,"combatEngine"],[952,25,1008,16],[952,26,1008,16,"combatEngine"],[952,38,1008,16],[952,39,1008,17,"start"],[952,44,1008,22],[952,45,1008,23],[952,46,1008,24],[954,6,1010,4],[955,6,1011,4],[956,6,1012,4,"console"],[956,13,1012,11],[956,14,1012,12,"log"],[956,17,1012,15],[956,18,1012,16],[956,97,1012,95],[956,98,1012,96],[957,6,1014,4],[957,13,1014,11],[957,19,1014,17],[958,8,1015,6,"combatEngine"],[958,27,1015,18],[958,28,1015,18,"combatEngine"],[958,40,1015,18],[958,41,1015,19,"stop"],[958,45,1015,23],[958,46,1015,24],[958,47,1015,25],[959,6,1016,4],[959,7,1016,5],[960,4,1017,2],[960,5,1017,3],[960,7,1017,5],[960,9,1017,7],[960,10,1017,8],[962,4,1019,2],[963,4,1020,2],[963,8,1020,2,"useEffect"],[963,14,1020,11],[963,15,1020,11,"useEffect"],[963,24,1020,11],[963,26,1020,12],[963,32,1020,18],[964,6,1021,4],[964,10,1021,10,"processProjectileImpacts"],[964,34,1021,34],[964,37,1021,37,"processProjectileImpacts"],[964,38,1021,37],[964,43,1021,43],[965,8,1022,6,"setProjectiles"],[965,22,1022,20],[965,23,1022,21,"currentProjectiles"],[965,41,1022,39],[965,45,1022,43],[966,10,1023,8],[966,17,1023,15,"currentProjectiles"],[966,35,1023,33],[966,36,1023,34,"map"],[966,39,1023,37],[966,40,1023,38,"projectile"],[966,50,1023,48],[966,54,1023,52],[967,12,1024,10],[967,16,1024,14],[967,17,1024,15,"projectile"],[967,27,1024,25],[967,29,1024,27],[967,36,1024,34],[967,40,1024,38],[969,12,1026,10],[970,12,1027,10],[970,16,1027,16,"currentTime"],[970,27,1027,27],[970,30,1027,30,"Date"],[970,34,1027,34],[970,35,1027,35,"now"],[970,38,1027,38],[970,39,1027,39],[970,40,1027,40],[971,12,1028,10],[971,16,1028,16,"startTime"],[971,25,1028,25],[971,28,1028,28,"projectile"],[971,38,1028,38],[971,39,1028,39,"startTime"],[971,48,1028,48],[971,52,1028,52,"currentTime"],[971,63,1028,63],[972,12,1029,10],[972,16,1029,16,"elapsedTime"],[972,27,1029,27],[972,30,1029,30,"currentTime"],[972,41,1029,41],[972,44,1029,44,"startTime"],[972,53,1029,53],[973,12,1030,10],[973,16,1030,16,"progress"],[973,24,1030,24],[973,27,1030,27,"Math"],[973,31,1030,31],[973,32,1030,32,"min"],[973,35,1030,35],[973,36,1030,36,"elapsedTime"],[973,47,1030,47],[973,51,1030,51,"projectile"],[973,61,1030,61],[973,62,1030,62,"duration"],[973,70,1030,70],[973,74,1030,74],[973,77,1030,77],[973,78,1030,78],[973,80,1030,80],[973,81,1030,81],[973,82,1030,82],[975,12,1032,10],[976,12,1033,10],[976,16,1033,14,"progress"],[976,24,1033,22],[976,28,1033,26],[976,29,1033,27],[976,33,1033,31],[976,34,1033,32,"projectile"],[976,44,1033,42],[976,45,1033,43,"hasHit"],[976,51,1033,49],[976,53,1033,51],[977,14,1034,12,"projectile"],[977,24,1034,22],[977,25,1034,23,"hasHit"],[977,31,1034,29],[977,34,1034,32],[977,38,1034,36],[978,14,1036,12,"console"],[978,21,1036,19],[978,22,1036,20,"log"],[978,25,1036,23],[978,26,1036,24],[978,51,1036,49,"projectile"],[978,61,1036,59],[978,62,1036,60,"abilityName"],[978,73,1036,71],[978,97,1036,95],[978,98,1036,96],[979,14,1037,12,"setCombatState"],[979,28,1037,26],[979,29,1037,27,"prev"],[979,33,1037,31],[979,37,1037,35],[980,16,1038,14],[980,20,1038,20,"newState"],[980,28,1038,28],[980,31,1038,31],[981,18,1038,33],[981,21,1038,36,"prev"],[982,16,1038,41],[982,17,1038,42],[983,16,1040,14],[983,20,1040,18,"projectile"],[983,30,1040,28],[983,31,1040,29,"isAOE"],[983,36,1040,34],[983,40,1040,38,"projectile"],[983,50,1040,48],[983,51,1040,49,"aoeRadius"],[983,60,1040,58],[983,64,1040,62,"projectile"],[983,74,1040,72],[983,75,1040,73,"aoeRadius"],[983,84,1040,82],[983,87,1040,85],[983,88,1040,86],[983,90,1040,88],[984,18,1041,16],[985,18,1042,16,"console"],[985,25,1042,23],[985,26,1042,24,"log"],[985,29,1042,27],[985,30,1042,28],[985,59,1042,57,"projectile"],[985,69,1042,67],[985,70,1042,68,"abilityName"],[985,81,1042,79],[985,97,1042,95,"projectile"],[985,107,1042,105],[985,108,1042,106,"aoeRadius"],[985,117,1042,115],[985,119,1042,117],[985,120,1042,118],[986,18,1044,16],[986,22,1044,22,"impactX"],[986,29,1044,29],[986,32,1044,32,"projectile"],[986,42,1044,42],[986,43,1044,43,"targetX"],[986,50,1044,50],[987,18,1045,16],[987,22,1045,22,"impactY"],[987,29,1045,29],[987,32,1045,32,"projectile"],[987,42,1045,42],[987,43,1045,43,"targetY"],[987,50,1045,50],[988,18,1046,16],[988,22,1046,22,"enemiesKilled"],[988,35,1046,50],[988,38,1046,53],[988,40,1046,55],[990,18,1048,16],[991,18,1049,16,"newState"],[991,26,1049,24],[991,27,1049,25,"enemies"],[991,34,1049,32],[991,37,1049,35,"newState"],[991,45,1049,43],[991,46,1049,44,"enemies"],[991,53,1049,51],[991,54,1049,52,"map"],[991,57,1049,55],[991,58,1049,56,"enemy"],[991,63,1049,61],[991,67,1049,65],[992,20,1050,18],[992,24,1050,22,"enemy"],[992,29,1050,27],[992,30,1050,28,"health"],[992,36,1050,34],[992,40,1050,38],[992,41,1050,39],[992,45,1050,43,"enemy"],[992,50,1050,48],[992,51,1050,49,"markedForDeath"],[992,65,1050,63],[992,67,1050,65],[992,74,1050,72,"enemy"],[992,79,1050,77],[993,20,1052,18],[993,24,1052,24,"enemyX"],[993,30,1052,30],[993,33,1052,33,"enemy"],[993,38,1052,38],[993,39,1052,39,"position"],[993,47,1052,47],[993,48,1052,48,"x"],[993,49,1052,49],[993,52,1052,52],[993,56,1052,56],[993,57,1052,57],[993,58,1052,58],[994,20,1053,18],[994,24,1053,24,"enemyY"],[994,30,1053,30],[994,33,1053,33,"enemy"],[994,38,1053,38],[994,39,1053,39,"position"],[994,47,1053,47],[994,48,1053,48,"y"],[994,49,1053,49],[994,52,1053,52],[994,56,1053,56],[995,20,1054,18],[995,24,1054,24,"distance"],[995,32,1054,32],[995,35,1054,35,"Math"],[995,39,1054,39],[995,40,1054,40,"sqrt"],[995,44,1054,44],[995,45,1054,45,"Math"],[995,49,1054,49],[995,50,1054,50,"pow"],[995,53,1054,53],[995,54,1054,54,"enemyX"],[995,60,1054,60],[995,63,1054,63,"impactX"],[995,70,1054,70],[995,72,1054,72],[995,73,1054,73],[995,74,1054,74],[995,77,1054,77,"Math"],[995,81,1054,81],[995,82,1054,82,"pow"],[995,85,1054,85],[995,86,1054,86,"enemyY"],[995,92,1054,92],[995,95,1054,95,"impactY"],[995,102,1054,102],[995,104,1054,104],[995,105,1054,105],[995,106,1054,106],[995,107,1054,107],[996,20,1056,18,"console"],[996,27,1056,25],[996,28,1056,26,"log"],[996,31,1056,29],[996,32,1056,30],[996,58,1056,56,"enemy"],[996,63,1056,61],[996,64,1056,62,"name"],[996,68,1056,66],[996,76,1056,74,"enemyX"],[996,82,1056,80],[996,87,1056,85,"enemyY"],[996,93,1056,91],[996,109,1056,107,"impactX"],[996,116,1056,114],[996,121,1056,119,"impactY"],[996,128,1056,126],[996,135,1056,133,"distance"],[996,143,1056,141],[996,144,1056,142,"toFixed"],[996,151,1056,149],[996,152,1056,150],[996,153,1056,151],[996,154,1056,152],[996,169,1056,167,"projectile"],[996,179,1056,177],[996,180,1056,178,"aoeRadius"],[996,189,1056,187],[996,194,1056,192],[996,195,1056,193],[997,20,1058,18],[997,24,1058,22,"distance"],[997,32,1058,30],[997,36,1058,34,"projectile"],[997,46,1058,44],[997,47,1058,45,"aoeRadius"],[997,56,1058,54],[997,58,1058,56],[998,22,1059,20],[999,22,1060,20],[999,26,1060,26,"newHealth"],[999,35,1060,35],[999,38,1060,38,"Math"],[999,42,1060,42],[999,43,1060,43,"max"],[999,46,1060,46],[999,47,1060,47],[999,48,1060,48],[999,50,1060,50,"enemy"],[999,55,1060,55],[999,56,1060,56,"health"],[999,62,1060,62],[999,65,1060,65,"projectile"],[999,75,1060,75],[999,76,1060,76,"damage"],[999,82,1060,82],[999,83,1060,83],[1000,22,1062,20,"console"],[1000,29,1062,27],[1000,30,1062,28,"log"],[1000,33,1062,31],[1000,34,1062,32],[1000,52,1062,50,"enemy"],[1000,57,1062,55],[1000,58,1062,56,"name"],[1000,62,1062,60],[1000,74,1062,72,"projectile"],[1000,84,1062,82],[1000,85,1062,83,"damage"],[1000,91,1062,89],[1000,103,1062,101,"enemy"],[1000,108,1062,106],[1000,109,1062,107,"health"],[1000,115,1062,113],[1000,122,1062,120,"newHealth"],[1000,131,1062,129],[1000,134,1062,132],[1000,135,1062,133],[1002,22,1064,20],[1003,22,1065,20],[1003,26,1065,24,"newHealth"],[1003,35,1065,33],[1003,39,1065,37],[1003,40,1065,38],[1003,44,1065,42,"enemy"],[1003,49,1065,47],[1003,50,1065,48,"health"],[1003,56,1065,54],[1003,59,1065,57],[1003,60,1065,58],[1003,62,1065,60],[1004,24,1066,22,"console"],[1004,31,1066,29],[1004,32,1066,30,"log"],[1004,35,1066,33],[1004,36,1066,34],[1004,52,1066,50,"enemy"],[1004,57,1066,55],[1004,58,1066,56,"name"],[1004,62,1066,60],[1004,76,1066,74,"projectile"],[1004,86,1066,84],[1004,87,1066,85,"abilityName"],[1004,98,1066,96],[1004,101,1066,99],[1004,102,1066,100],[1005,24,1067,22,"enemiesKilled"],[1005,37,1067,35],[1005,38,1067,36,"push"],[1005,42,1067,40],[1005,43,1067,41,"enemy"],[1005,48,1067,46],[1005,49,1067,47],[1005,50,1067,48],[1005,51,1067,49],[1007,24,1069,22],[1007,31,1069,29],[1008,26,1070,24],[1008,29,1070,27,"enemy"],[1008,34,1070,32],[1009,26,1071,24,"health"],[1009,32,1071,30],[1009,34,1071,32],[1009,35,1071,33],[1010,26,1072,24,"markedForDeath"],[1010,40,1072,38],[1010,42,1072,40],[1010,46,1072,44],[1011,26,1073,24,"lastDamaged"],[1011,37,1073,35],[1011,39,1073,37,"combatEngine"],[1011,58,1073,49],[1011,59,1073,49,"combatEngine"],[1011,71,1073,49],[1011,72,1073,50,"getCurrentTick"],[1011,86,1073,64],[1011,87,1073,65],[1012,24,1074,22],[1012,25,1074,23],[1013,22,1075,20],[1013,23,1075,21],[1013,29,1075,27],[1014,24,1076,22],[1014,31,1076,29],[1015,26,1077,24],[1015,29,1077,27,"enemy"],[1015,34,1077,32],[1016,26,1078,24,"health"],[1016,32,1078,30],[1016,34,1078,32,"newHealth"],[1016,43,1078,41],[1017,26,1079,24,"lastDamaged"],[1017,37,1079,35],[1017,39,1079,37,"combatEngine"],[1017,58,1079,49],[1017,59,1079,49,"combatEngine"],[1017,71,1079,49],[1017,72,1079,50,"getCurrentTick"],[1017,86,1079,64],[1017,87,1079,65],[1018,24,1080,22],[1018,25,1080,23],[1019,22,1081,20],[1020,20,1082,18],[1021,20,1084,18],[1021,27,1084,25,"enemy"],[1021,32,1084,30],[1021,33,1084,31],[1021,34,1084,32],[1022,18,1085,16],[1022,19,1085,17],[1022,20,1085,18],[1024,18,1087,16],[1025,18,1088,16],[1025,22,1088,20,"enemiesKilled"],[1025,35,1088,33],[1025,36,1088,34,"length"],[1025,42,1088,40],[1025,45,1088,43],[1025,46,1088,44],[1025,48,1088,46],[1026,20,1089,18,"console"],[1026,27,1089,25],[1026,28,1089,26,"log"],[1026,31,1089,29],[1026,32,1089,30],[1026,52,1089,50,"enemiesKilled"],[1026,65,1089,63],[1026,66,1089,64,"length"],[1026,72,1089,70],[1026,94,1089,92,"projectile"],[1026,104,1089,102],[1026,105,1089,103,"abilityName"],[1026,116,1089,114],[1026,118,1089,116],[1026,119,1089,117],[1027,20,1090,18,"setTimeout"],[1027,30,1090,28],[1027,31,1090,29],[1027,37,1090,35],[1028,22,1091,20,"enemiesKilled"],[1028,35,1091,33],[1028,36,1091,34,"forEach"],[1028,43,1091,41],[1028,44,1091,42,"enemy"],[1028,49,1091,47],[1028,53,1091,51,"handleEnemyKill"],[1028,68,1091,66],[1028,69,1091,67,"enemy"],[1028,74,1091,72],[1028,75,1091,73],[1028,76,1091,74],[1029,20,1092,18],[1029,21,1092,19],[1029,23,1092,21],[1029,24,1092,22],[1029,25,1092,23],[1030,18,1093,16],[1031,16,1095,14],[1031,17,1095,15],[1031,23,1095,21],[1032,18,1096,16],[1033,18,1097,16],[1033,22,1097,22,"enemyIndex"],[1033,32,1097,32],[1033,35,1097,35,"newState"],[1033,43,1097,43],[1033,44,1097,44,"enemies"],[1033,51,1097,51],[1033,52,1097,52,"findIndex"],[1033,61,1097,61],[1033,62,1097,62,"e"],[1033,63,1097,63],[1033,67,1097,67,"e"],[1033,68,1097,68],[1033,69,1097,69,"id"],[1033,71,1097,71],[1033,76,1097,76,"projectile"],[1033,86,1097,86],[1033,87,1097,87,"targetEnemyId"],[1033,100,1097,100],[1033,101,1097,101],[1034,18,1099,16],[1034,22,1099,20,"enemyIndex"],[1034,32,1099,30],[1034,36,1099,34],[1034,37,1099,35],[1034,41,1099,39,"newState"],[1034,49,1099,47],[1034,50,1099,48,"enemies"],[1034,57,1099,55],[1034,58,1099,56,"enemyIndex"],[1034,68,1099,66],[1034,69,1099,67],[1034,70,1099,68,"health"],[1034,76,1099,74],[1034,79,1099,77],[1034,80,1099,78],[1034,84,1099,82],[1034,85,1099,83,"newState"],[1034,93,1099,91],[1034,94,1099,92,"enemies"],[1034,101,1099,99],[1034,102,1099,100,"enemyIndex"],[1034,112,1099,110],[1034,113,1099,111],[1034,114,1099,112,"markedForDeath"],[1034,128,1099,126],[1034,130,1099,128],[1035,20,1100,18,"newState"],[1035,28,1100,26],[1035,29,1100,27,"enemies"],[1035,36,1100,34],[1035,39,1100,37],[1035,40,1100,38],[1035,43,1100,41,"newState"],[1035,51,1100,49],[1035,52,1100,50,"enemies"],[1035,59,1100,57],[1035,60,1100,58],[1036,20,1101,18],[1036,24,1101,24,"enemy"],[1036,29,1101,29],[1036,32,1101,32,"newState"],[1036,40,1101,40],[1036,41,1101,41,"enemies"],[1036,48,1101,48],[1036,49,1101,49,"enemyIndex"],[1036,59,1101,59],[1036,60,1101,60],[1037,20,1102,18],[1037,24,1102,24,"newHealth"],[1037,33,1102,33],[1037,36,1102,36,"Math"],[1037,40,1102,40],[1037,41,1102,41,"max"],[1037,44,1102,44],[1037,45,1102,45],[1037,46,1102,46],[1037,48,1102,48,"enemy"],[1037,53,1102,53],[1037,54,1102,54,"health"],[1037,60,1102,60],[1037,63,1102,63,"projectile"],[1037,73,1102,73],[1037,74,1102,74,"damage"],[1037,80,1102,80],[1037,81,1102,81],[1038,20,1104,18,"newState"],[1038,28,1104,26],[1038,29,1104,27,"enemies"],[1038,36,1104,34],[1038,37,1104,35,"enemyIndex"],[1038,47,1104,45],[1038,48,1104,46],[1038,51,1104,49],[1039,22,1105,20],[1039,25,1105,23,"enemy"],[1039,30,1105,28],[1040,22,1106,20,"health"],[1040,28,1106,26],[1040,30,1106,28,"newHealth"],[1040,39,1106,37],[1041,22,1107,20,"lastDamaged"],[1041,33,1107,31],[1041,35,1107,33,"combatEngine"],[1041,54,1107,45],[1041,55,1107,45,"combatEngine"],[1041,67,1107,45],[1041,68,1107,46,"getCurrentTick"],[1041,82,1107,60],[1041,83,1107,61],[1042,20,1108,18],[1042,21,1108,19],[1043,20,1110,18,"console"],[1043,27,1110,25],[1043,28,1110,26,"log"],[1043,31,1110,29],[1043,32,1110,30],[1043,60,1110,58,"enemy"],[1043,65,1110,63],[1043,66,1110,64,"name"],[1043,70,1110,68],[1043,82,1110,80,"newHealth"],[1043,91,1110,89],[1043,95,1110,93,"enemy"],[1043,100,1110,98],[1043,101,1110,99,"maxHealth"],[1043,110,1110,108],[1043,112,1110,110],[1043,113,1110,111],[1045,20,1112,18],[1046,20,1113,18],[1046,24,1113,22,"newHealth"],[1046,33,1113,31],[1046,37,1113,35],[1046,38,1113,36],[1046,42,1113,40,"enemy"],[1046,47,1113,45],[1046,48,1113,46,"health"],[1046,54,1113,52],[1046,57,1113,55],[1046,58,1113,56],[1046,60,1113,58],[1047,22,1114,20,"console"],[1047,29,1114,27],[1047,30,1114,28,"log"],[1047,33,1114,31],[1047,34,1114,32],[1047,54,1114,52,"enemy"],[1047,59,1114,57],[1047,60,1114,58,"name"],[1047,64,1114,62],[1047,78,1114,76,"projectile"],[1047,88,1114,86],[1047,89,1114,87,"abilityName"],[1047,100,1114,98],[1047,136,1114,134],[1047,137,1114,135],[1049,22,1116,20],[1050,22,1117,20,"newState"],[1050,30,1117,28],[1050,31,1117,29,"enemies"],[1050,38,1117,36],[1050,39,1117,37,"enemyIndex"],[1050,49,1117,47],[1050,50,1117,48],[1050,53,1117,51],[1051,24,1118,22],[1051,27,1118,25,"newState"],[1051,35,1118,33],[1051,36,1118,34,"enemies"],[1051,43,1118,41],[1051,44,1118,42,"enemyIndex"],[1051,54,1118,52],[1051,55,1118,53],[1052,24,1119,22,"health"],[1052,30,1119,28],[1052,32,1119,30],[1052,33,1119,31],[1053,24,1120,22,"isDying"],[1053,31,1120,29],[1053,33,1120,31],[1053,37,1120,35],[1054,24,1121,22,"deathStartTime"],[1054,38,1121,36],[1054,40,1121,38,"Date"],[1054,44,1121,42],[1054,45,1121,43,"now"],[1054,48,1121,46],[1054,49,1121,47],[1055,22,1122,20],[1055,23,1122,21],[1056,20,1123,18],[1056,21,1123,19],[1056,27,1123,25],[1056,31,1123,29,"enemy"],[1056,36,1123,34],[1056,37,1123,35,"health"],[1056,43,1123,41],[1056,46,1123,44],[1056,47,1123,45],[1056,49,1123,47],[1057,22,1124,20,"console"],[1057,29,1124,27],[1057,30,1124,28,"log"],[1057,33,1124,31],[1057,34,1124,32],[1057,48,1124,46,"enemy"],[1057,53,1124,51],[1057,54,1124,52,"name"],[1057,58,1124,56],[1057,70,1124,68,"projectile"],[1057,80,1124,78],[1057,81,1124,79,"damage"],[1057,87,1124,85],[1057,99,1124,97,"enemy"],[1057,104,1124,102],[1057,105,1124,103,"health"],[1057,111,1124,109],[1057,117,1124,115,"newHealth"],[1057,126,1124,124],[1057,129,1124,127],[1057,130,1124,128],[1058,20,1125,18],[1059,18,1126,16],[1060,16,1127,14],[1061,16,1129,14],[1061,23,1129,21,"newState"],[1061,31,1129,29],[1062,14,1130,12],[1062,15,1130,13],[1062,16,1130,14],[1063,12,1131,10],[1065,12,1133,10],[1066,12,1134,10],[1066,16,1134,14,"progress"],[1066,24,1134,22],[1066,28,1134,26],[1066,31,1134,29],[1066,33,1134,31],[1067,14,1135,12],[1067,21,1135,19],[1067,25,1135,23],[1068,12,1136,10],[1069,12,1138,10],[1069,19,1138,17,"projectile"],[1069,29,1138,27],[1070,10,1139,8],[1070,11,1139,9],[1070,12,1139,10],[1070,13,1139,11,"filter"],[1070,19,1139,17],[1070,20,1139,18,"Boolean"],[1070,27,1139,25],[1070,28,1139,26],[1071,8,1140,6],[1071,9,1140,7],[1071,10,1140,8],[1072,6,1141,4],[1072,7,1141,5],[1074,6,1143,4],[1075,6,1144,4],[1075,10,1144,10,"impactInterval"],[1075,24,1144,24],[1075,27,1144,27,"setInterval"],[1075,38,1144,38],[1075,39,1144,39,"processProjectileImpacts"],[1075,63,1144,63],[1075,65,1144,65],[1075,67,1144,67],[1075,68,1144,68],[1076,6,1145,4],[1076,13,1145,11],[1076,19,1145,17,"clearInterval"],[1076,32,1145,30],[1076,33,1145,31,"impactInterval"],[1076,47,1145,45],[1076,48,1145,46],[1077,4,1146,2],[1077,5,1146,3],[1077,7,1146,5],[1077,8,1146,6,"handleEnemyKill"],[1077,23,1146,21],[1077,24,1146,22],[1077,25,1146,23],[1079,4,1148,2],[1080,4,1149,2],[1080,8,1149,8,"saveAbilityData"],[1080,23,1149,23],[1080,26,1149,26],[1080,30,1149,26,"useCallback"],[1080,36,1149,37],[1080,37,1149,37,"useCallback"],[1080,48,1149,37],[1080,50,1149,38],[1080,56,1149,44],[1081,6,1150,4],[1081,10,1150,8,"combatState"],[1081,21,1150,19],[1081,22,1150,20,"abilityManager"],[1081,36,1150,34],[1081,38,1150,36],[1082,8,1151,6],[1082,12,1151,12,"abilityData"],[1082,23,1151,23],[1082,26,1151,26,"combatState"],[1082,37,1151,37],[1082,38,1151,38,"abilityManager"],[1082,52,1151,52],[1082,53,1151,53,"getSaveData"],[1082,64,1151,64],[1082,65,1151,65],[1082,66,1151,66],[1083,8,1152,6,"console"],[1083,15,1152,13],[1083,16,1152,14,"log"],[1083,19,1152,17],[1083,20,1152,18],[1083,70,1152,68],[1083,72,1152,70,"abilityData"],[1083,83,1152,81],[1083,84,1152,82],[1084,8,1153,6,"game"],[1084,12,1153,10],[1084,13,1153,11,"updateAbilityData"],[1084,30,1153,28],[1084,31,1153,29,"abilityData"],[1084,42,1153,40],[1084,43,1153,41],[1085,6,1154,4],[1086,4,1155,2],[1086,5,1155,3],[1086,7,1155,5],[1086,8,1155,6,"combatState"],[1086,19,1155,17],[1086,20,1155,18,"abilityManager"],[1086,34,1155,32],[1086,36,1155,34,"game"],[1086,40,1155,38],[1086,41,1155,39,"updateAbilityData"],[1086,58,1155,56],[1086,59,1155,57],[1086,60,1155,58],[1087,4,1157,2],[1087,8,1157,8,"contextValue"],[1087,20,1157,39],[1087,23,1157,42,"React"],[1087,28,1157,47],[1087,29,1157,47,"default"],[1087,36,1157,47],[1087,37,1157,48,"useMemo"],[1087,44,1157,55],[1087,45,1157,56],[1087,52,1157,63],[1088,6,1158,4,"combatState"],[1088,17,1158,15],[1089,6,1159,4,"projectiles"],[1089,17,1159,15],[1090,6,1160,4,"startCombat"],[1090,17,1160,15],[1091,6,1161,4,"stopCombat"],[1091,16,1161,14],[1092,6,1162,4,"equipAbility"],[1092,18,1162,16],[1093,6,1163,4,"handleEnemyKill"],[1093,21,1163,19],[1094,6,1164,4,"getDeck"],[1094,13,1164,11],[1095,6,1165,4,"getAvailableAbilities"],[1095,27,1165,25],[1096,6,1166,4,"upgradeAbility"],[1096,20,1166,18],[1097,6,1167,4,"spawnEnemy"],[1097,16,1167,14],[1098,6,1168,4,"spawnBoss"],[1098,15,1168,13],[1099,6,1169,4,"clearAllEnemies"],[1099,21,1169,19],[1100,6,1170,4,"clearSpecificEnemy"],[1100,24,1170,22],[1101,6,1171,4],[1102,6,1172,4,"findClosestEnemy"],[1102,22,1172,20],[1103,6,1173,4,"updateNinjaPosition"],[1103,25,1173,23],[1104,6,1174,4,"setManualControlActive"],[1104,28,1174,26],[1105,6,1175,4,"lastExplosionTime"],[1105,23,1175,21],[1106,6,1176,4,"useAbilityManually"],[1106,24,1176,22],[1107,6,1176,24],[1108,6,1177,4,"saveAbilityData"],[1108,21,1177,19],[1109,6,1177,21],[1110,6,1178,4,"shadowClone"],[1110,17,1178,15],[1110,19,1178,17,"combatState"],[1110,30,1178,28],[1110,31,1178,29,"shadowClone"],[1110,42,1178,40],[1110,43,1178,42],[1111,4,1179,2],[1111,5,1179,3],[1111,6,1179,4],[1111,8,1179,6],[1112,4,1180,4],[1113,4,1181,4],[1114,4,1182,4,"combatState"],[1114,15,1182,15],[1114,17,1183,4,"projectiles"],[1114,28,1183,15],[1114,30,1184,4,"lastExplosionTime"],[1114,47,1184,21],[1115,4,1185,4],[1116,4,1186,4,"combatState"],[1116,15,1186,15],[1116,16,1186,16,"abilityManager"],[1116,30,1186,30],[1116,32,1187,4,"combatState"],[1116,43,1187,15],[1116,44,1187,16,"enemies"],[1116,51,1187,23],[1116,53,1188,4,"combatState"],[1116,64,1188,15],[1116,65,1188,16,"shadowClone"],[1116,76,1188,27],[1117,4,1188,29],[1118,4,1189,4,"useAbilityManually"],[1118,22,1189,22],[1119,4,1189,24],[1120,4,1190,4,"saveAbilityData"],[1120,19,1190,19],[1120,20,1190,21],[1121,4,1190,21],[1121,5,1191,3],[1121,6,1191,4],[1122,4,1193,2],[1122,24,1194,4],[1122,28,1194,4,"_reactJsxDevRuntime"],[1122,47,1194,4],[1122,48,1194,4,"jsxDEV"],[1122,54,1194,4],[1122,56,1194,5,"CombatContext"],[1122,69,1194,18],[1122,70,1194,19,"Provider"],[1122,78,1194,27],[1123,6,1194,28,"value"],[1123,11,1194,33],[1123,13,1194,35,"contextValue"],[1123,25,1194,48],[1124,6,1194,48,"children"],[1124,14,1194,48],[1124,16,1195,7,"children"],[1125,4,1195,15],[1126,6,1195,15,"fileName"],[1126,14,1195,15],[1126,16,1195,15,"_jsxFileName"],[1126,28,1195,15],[1127,6,1195,15,"lineNumber"],[1127,16,1195,15],[1128,6,1195,15,"columnNumber"],[1128,18,1195,15],[1129,4,1195,15],[1129,11,1196,28],[1129,12,1196,29],[1130,2,1198,0],[1130,3,1198,1],[1131,2,1198,2,"_s4"],[1131,5,1198,2],[1131,6,106,13,"CombatProvider"],[1131,20,106,27],[1132,4,106,27],[1132,12,107,15,"useGame"],[1132,24,107,22],[1132,25,107,22,"useGame"],[1132,32,107,22],[1132,34,108,77,"useZone"],[1132,46,108,84],[1132,47,108,84,"useZone"],[1132,54,108,84],[1133,2,108,84],[1134,2,108,84,"_c"],[1134,4,108,84],[1134,7,106,13,"CombatProvider"],[1134,21,106,27],[1135,2,106,27],[1135,6,106,27,"_c"],[1135,8,106,27],[1136,2,106,27,"$RefreshReg$"],[1136,14,106,27],[1136,15,106,27,"_c"],[1136,17,106,27],[1137,0,106,27],[1137,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCqB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;qBwCM;mBtC2B;MsCG;GxCG;oByCG;mBvCE;MuCG;GzCC;6B0CG;mBxCC;mCyCE,6BzC;MwCC;G1CC;yC4CG;qB1C8B;O0CI;G5CQ;YCC;W4CO;K5CE;GDC;YCG;qC6CC;qBxBC;sCyBC;2B7Cc;wD8CY;iB9CoC;6BEK;0C6CC,+B7C;mBFC;8DMK,sCN;a6CiC;SzBS;OwBC;K7CC;W4CI,mC5C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}