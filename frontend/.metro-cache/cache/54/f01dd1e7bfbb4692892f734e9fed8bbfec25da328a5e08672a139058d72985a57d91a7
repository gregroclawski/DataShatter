{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range - FIXED: Ensure reliable XP awarding\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n\n          // For AOE abilities, create a slightly delayed projectile to prevent simultaneous hits\n          var delay = Math.random() * 100; // 0-100ms random delay to prevent race conditions\n          setTimeout(() => {\n            createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n              id: ability.id,\n              name: ability.name,\n              icon: ability.icon\n            });\n          }, delay);\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage (delayed by ${delay.toFixed(0)}ms)`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies - FIXED: Prevent duplicate XP from AOE abilities\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}! (Health: ${enemy.health} -> ${newHealth})`);\n\n                    // Mark enemy as killed immediately to prevent duplicate processing\n                    newState.enemies[enemyIndex] = {\n                      ...newState.enemies[enemyIndex],\n                      health: 0,\n                      markedForDeath: true // Add flag to prevent duplicate processing\n                    };\n\n                    // Call handleEnemyKill with original enemy stats before damage\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1084,"map":[[15,2,91,0,"Object"],[15,8,91,0],[15,9,91,0,"defineProperty"],[15,23,91,0],[15,24,91,0,"exports"],[15,31,91,0],[16,4,91,0,"enumerable"],[16,14,91,0],[17,4,91,0,"get"],[17,7,91,0],[17,18,91,0,"get"],[17,19,91,0],[18,6,91,0],[18,13,91,0,"useCombat"],[18,22,91,0],[19,4,91,0],[20,2,91,0],[21,2,101,0,"Object"],[21,8,101,0],[21,9,101,0,"defineProperty"],[21,23,101,0],[21,24,101,0,"exports"],[21,31,101,0],[22,4,101,0,"enumerable"],[22,14,101,0],[23,4,101,0,"get"],[23,7,101,0],[23,18,101,0,"get"],[23,19,101,0],[24,6,101,0],[24,13,101,0,"CombatProvider"],[24,27,101,0],[25,4,101,0],[26,2,101,0],[27,2,1136,2],[27,6,1136,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1136,2],[27,42,1136,2,"require"],[27,49,1136,2],[27,50,1136,2,"_dependencyMap"],[27,64,1136,2],[28,2,1136,2],[28,6,1136,2,"_slicedToArray"],[28,20,1136,2],[28,23,1136,2,"_interopDefault"],[28,38,1136,2],[28,39,1136,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1136,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,89,0],[37,6,89,6,"CombatContext"],[37,19,89,19],[37,35,89,22],[37,39,89,22,"createContext"],[37,45,89,35],[37,46,89,35,"createContext"],[37,59,89,35],[37,61,89,67,"undefined"],[37,70,89,76],[37,71,89,77],[38,2,91,7],[38,6,91,13,"useCombat"],[38,15,91,22],[38,18,91,25,"useCombat"],[38,19,91,25],[38,24,91,50],[39,4,91,50,"_s"],[39,6,91,50],[40,4,92,2],[40,8,92,8,"context"],[40,15,92,15],[40,18,92,18],[40,22,92,18,"useContext"],[40,28,92,28],[40,29,92,28,"useContext"],[40,39,92,28],[40,41,92,29,"CombatContext"],[40,54,92,42],[40,55,92,43],[41,4,93,2],[41,8,93,6],[41,9,93,7,"context"],[41,16,93,14],[41,18,93,16],[42,6,94,4],[42,12,94,10],[42,16,94,14,"Error"],[42,21,94,19],[42,22,94,20],[42,70,94,68],[42,71,94,69],[43,4,95,2],[44,4,96,2],[44,11,96,9,"context"],[44,18,96,16],[45,2,97,0],[45,3,97,1],[46,2,97,2,"_s"],[46,4,97,2],[46,5,91,13,"useCombat"],[46,14,91,22],[47,2,99,0],[47,6,99,4,"enemyCounter"],[47,18,99,16],[47,21,99,19],[47,22,99,20],[47,23,99,21],[47,24,99,22],[49,2,101,7],[49,6,101,13,"CombatProvider"],[49,20,101,27],[49,23,101,30,"_ref"],[49,27,101,30],[49,31,101,73],[50,4,101,73,"_s4"],[50,7,101,73],[51,4,101,73],[51,8,101,73,"_s3"],[51,11,101,73],[51,14,101,73,"$RefreshSig$"],[51,26,101,73],[52,4,101,73],[52,8,101,33,"children"],[52,16,101,41],[52,19,101,41,"_ref"],[52,23,101,41],[52,24,101,33,"children"],[52,32,101,41],[53,4,102,2],[53,8,102,8,"game"],[53,12,102,12],[53,15,102,15],[53,19,102,15,"useGame"],[53,31,102,22],[53,32,102,22,"useGame"],[53,39,102,22],[53,41,102,23],[53,42,102,24],[54,4,103,2],[54,8,103,2,"_useZone"],[54,16,103,2],[54,19,103,77],[54,23,103,77,"useZone"],[54,35,103,84],[54,36,103,84,"useZone"],[54,43,103,84],[54,45,103,85],[54,46,103,86],[55,6,103,10,"currentZone"],[55,17,103,21],[55,20,103,21,"_useZone"],[55,28,103,21],[55,29,103,10,"currentZone"],[55,40,103,21],[56,6,103,23,"currentZoneLevel"],[56,22,103,39],[56,25,103,39,"_useZone"],[56,33,103,39],[56,34,103,23,"currentZoneLevel"],[56,50,103,39],[57,6,103,41,"recordEnemyKill"],[57,21,103,56],[57,24,103,56,"_useZone"],[57,32,103,56],[57,33,103,41,"recordEnemyKill"],[57,48,103,56],[58,6,103,58,"spawnZoneEnemy"],[58,20,103,72],[58,23,103,72,"_useZone"],[58,31,103,72],[58,32,103,58,"spawnZoneEnemy"],[58,46,103,72],[60,4,105,2],[61,4,106,2],[61,8,106,8,"initialCombatState"],[61,26,106,39],[61,29,106,42],[62,6,107,4,"isInCombat"],[62,16,107,14],[62,18,107,16],[62,23,107,21],[63,6,108,4,"currentTick"],[63,17,108,15],[63,19,108,17],[63,20,108,18],[64,6,109,4,"enemies"],[64,13,109,11],[64,15,109,13],[64,17,109,15],[65,6,110,4,"abilityManager"],[65,20,110,18],[65,22,110,20],[65,26,110,24,"AbilityManager"],[65,44,110,38],[65,45,110,38,"AbilityManager"],[65,59,110,38],[65,60,110,39],[65,61,110,40],[66,6,111,4,"statusEffects"],[66,19,111,17],[66,21,111,19],[66,25,111,23,"StatusEffectManager"],[66,44,111,42],[66,45,111,42,"StatusEffectManager"],[66,64,111,42],[66,65,111,43],[66,66,111,44],[67,6,112,4,"playerStats"],[67,17,112,15],[67,19,112,17],[68,8,113,6,"attack"],[68,14,113,12],[68,16,113,14],[68,18,113,16],[69,8,113,18],[70,8,114,6,"defense"],[70,15,114,13],[70,17,114,15],[70,18,114,16],[71,8,115,6,"health"],[71,14,115,12],[71,16,115,14],[71,19,115,17],[72,8,116,6,"maxHealth"],[72,17,116,15],[72,19,116,17],[72,22,116,20],[73,8,117,6,"critChance"],[73,18,117,16],[73,20,117,18],[73,21,117,19],[74,8,118,6,"critDamage"],[74,18,118,16],[74,20,118,18],[74,23,118,21],[75,8,119,6,"cooldownReduction"],[75,25,119,23],[75,27,119,25],[76,6,120,4],[77,4,121,2],[77,5,121,3],[78,4,123,2],[78,8,123,2,"_useState"],[78,17,123,2],[78,20,123,40],[78,24,123,40,"useState"],[78,30,123,48],[78,31,123,48,"useState"],[78,39,123,48],[78,41,123,62,"initialCombatState"],[78,59,123,80],[78,60,123,81],[79,6,123,81,"_useState2"],[79,16,123,81],[79,23,123,81,"_slicedToArray"],[79,37,123,81],[79,38,123,81,"default"],[79,45,123,81],[79,47,123,81,"_useState"],[79,56,123,81],[80,6,123,9,"combatState"],[80,17,123,20],[80,20,123,20,"_useState2"],[80,30,123,20],[81,6,123,22,"setCombatState"],[81,20,123,36],[81,23,123,36,"_useState2"],[81,33,123,36],[83,4,125,2],[84,4,126,2],[84,8,126,2,"useEffect"],[84,14,126,11],[84,15,126,11,"useEffect"],[84,24,126,11],[84,26,126,12],[84,32,126,18],[85,6,127,4],[85,10,127,8,"game"],[85,14,127,12],[85,15,127,13,"gameState"],[85,24,127,22],[85,25,127,23,"abilityData"],[85,36,127,34],[85,40,127,38,"combatState"],[85,51,127,49],[85,52,127,50,"abilityManager"],[85,66,127,64],[85,68,127,66],[86,8,128,6,"console"],[86,15,128,13],[86,16,128,14,"log"],[86,19,128,17],[86,20,128,18],[86,68,128,66],[86,70,128,68,"game"],[86,74,128,72],[86,75,128,73,"gameState"],[86,84,128,82],[86,85,128,83,"abilityData"],[86,96,128,94],[86,97,128,95],[87,8,129,6,"combatState"],[87,19,129,17],[87,20,129,18,"abilityManager"],[87,34,129,32],[87,35,129,33,"restoreFromSaveData"],[87,54,129,52],[87,55,129,53,"game"],[87,59,129,57],[87,60,129,58,"gameState"],[87,69,129,67],[87,70,129,68,"abilityData"],[87,81,129,79],[87,82,129,80],[89,8,131,6],[90,8,132,6,"setCombatState"],[90,22,132,20],[90,23,132,21,"prev"],[90,27,132,25],[90,32,132,30],[91,10,132,32],[91,13,132,35,"prev"],[92,8,132,40],[92,9,132,41],[92,10,132,42],[92,11,132,43],[93,6,133,4],[94,4,134,2],[94,5,134,3],[94,7,134,5],[94,8,134,6,"game"],[94,12,134,10],[94,13,134,11,"gameState"],[94,22,134,20],[94,23,134,21,"abilityData"],[94,34,134,32],[94,36,134,34,"combatState"],[94,47,134,45],[94,48,134,46,"abilityManager"],[94,62,134,60],[94,63,134,61],[94,64,134,62],[96,4,136,2],[97,4,137,2],[97,8,137,2,"useEffect"],[97,14,137,11],[97,15,137,11,"useEffect"],[97,24,137,11],[97,26,137,12],[97,32,137,18],[98,6,138,4],[98,10,138,8,"game"],[98,14,138,12],[98,15,138,13,"gameState"],[98,24,138,22],[98,25,138,23,"ninja"],[98,30,138,28],[98,32,138,30],[99,8,139,6],[99,12,139,12,"effectiveStats"],[99,26,139,26],[99,29,139,29,"game"],[99,33,139,33],[99,34,139,34,"getEffectiveStats"],[99,51,139,51],[99,52,139,52],[99,53,139,53],[100,8,141,6,"setCombatState"],[100,22,141,20],[100,23,141,21,"prev"],[100,27,141,25],[100,31,141,29],[101,10,142,8],[102,10,143,8],[102,14,143,12,"prev"],[102,18,143,16],[102,19,143,17,"playerStats"],[102,30,143,28],[102,31,143,29,"maxHealth"],[102,40,143,38],[102,45,143,43],[102,48,143,46],[102,52,143,50,"prev"],[102,56,143,54],[102,57,143,55,"playerStats"],[102,68,143,66],[102,69,143,67,"attack"],[102,75,143,73],[102,80,143,78],[102,82,143,80],[102,84,143,82],[103,12,144,10,"console"],[103,19,144,17],[103,20,144,18,"log"],[103,23,144,21],[103,24,144,22],[103,60,144,58,"effectiveStats"],[103,74,144,72],[103,75,144,73,"health"],[103,81,144,79],[103,93,144,91,"effectiveStats"],[103,107,144,105],[103,108,144,106,"attack"],[103,114,144,112],[103,127,144,125,"effectiveStats"],[103,141,144,139],[103,142,144,140,"defense"],[103,149,144,147],[103,151,144,149],[103,152,144,150],[104,12,146,10],[104,19,146,17],[105,14,147,12],[105,17,147,15,"prev"],[105,21,147,19],[106,14,148,12,"playerStats"],[106,25,148,23],[106,27,148,25],[107,16,149,14,"attack"],[107,22,149,20],[107,24,149,22,"effectiveStats"],[107,38,149,36],[107,39,149,37,"attack"],[107,45,149,43],[108,16,150,14,"defense"],[108,23,150,21],[108,25,150,23,"effectiveStats"],[108,39,150,37],[108,40,150,38,"defense"],[108,47,150,45],[109,16,151,14,"health"],[109,22,151,20],[109,24,151,22,"effectiveStats"],[109,38,151,36],[109,39,151,37,"health"],[109,45,151,43],[110,16,151,45],[111,16,152,14,"maxHealth"],[111,25,152,23],[111,27,152,25,"effectiveStats"],[111,41,152,39],[111,42,152,40,"health"],[111,48,152,46],[112,16,153,14,"critChance"],[112,26,153,24],[112,28,153,26,"effectiveStats"],[112,42,153,40],[112,43,153,41,"critChance"],[112,53,153,51],[112,57,153,55],[112,58,153,56],[113,16,154,14,"critDamage"],[113,26,154,24],[113,28,154,26,"effectiveStats"],[113,42,154,40],[113,43,154,41,"critDamage"],[113,53,154,51],[113,57,154,55],[113,60,154,58],[114,16,155,14,"cooldownReduction"],[114,33,155,31],[114,35,155,33,"effectiveStats"],[114,49,155,47],[114,50,155,48,"cooldownReduction"],[114,67,155,65],[114,71,155,69],[115,14,156,12],[116,12,157,10],[116,13,157,11],[117,10,158,8],[118,10,159,8],[118,17,159,15,"prev"],[118,21,159,19],[119,8,160,6],[119,9,160,7],[119,10,160,8],[120,6,161,4],[121,4,162,2],[121,5,162,3],[121,7,162,5],[121,8,162,6,"game"],[121,12,162,10],[121,13,162,11,"gameState"],[121,22,162,20],[121,23,162,21,"ninja"],[121,28,162,26],[121,29,162,27],[121,30,162,28],[122,4,164,2],[122,8,164,2,"_useState3"],[122,18,164,2],[122,21,164,40],[122,25,164,40,"useState"],[122,31,164,48],[122,32,164,48,"useState"],[122,40,164,48],[122,42,164,69],[122,44,164,71],[122,45,164,72],[123,6,164,72,"_useState4"],[123,16,164,72],[123,23,164,72,"_slicedToArray"],[123,37,164,72],[123,38,164,72,"default"],[123,45,164,72],[123,47,164,72,"_useState3"],[123,57,164,72],[124,6,164,9,"projectiles"],[124,17,164,20],[124,20,164,20,"_useState4"],[124,30,164,20],[125,6,164,22,"setProjectiles"],[125,20,164,36],[125,23,164,36,"_useState4"],[125,33,164,36],[126,4,165,2],[126,8,165,2,"_useState5"],[126,18,165,2],[126,21,165,52],[126,25,165,52,"useState"],[126,31,165,60],[126,32,165,60,"useState"],[126,40,165,60],[126,42,165,69],[126,43,165,70],[126,44,165,71],[127,6,165,71,"_useState6"],[127,16,165,71],[127,23,165,71,"_slicedToArray"],[127,37,165,71],[127,38,165,71,"default"],[127,45,165,71],[127,47,165,71,"_useState5"],[127,57,165,71],[128,6,165,9,"lastExplosionTime"],[128,23,165,26],[128,26,165,26,"_useState6"],[128,36,165,26],[129,6,165,28,"setLastExplosionTime"],[129,26,165,48],[129,29,165,48,"_useState6"],[129,39,165,48],[130,4,166,2],[131,4,167,2],[133,4,169,2],[134,4,170,2],[134,8,170,8,"handleEnemyKill"],[134,23,170,23],[134,26,170,26],[134,30,170,26,"useCallback"],[134,36,170,37],[134,37,170,37,"useCallback"],[134,48,170,37],[134,50,170,39,"enemy"],[134,55,170,57],[134,59,170,62],[135,6,171,4,"console"],[135,13,171,11],[135,14,171,12,"log"],[135,17,171,15],[135,18,171,16],[135,73,171,71],[135,75,171,73,"enemy"],[135,80,171,78],[135,81,171,79,"id"],[135,83,171,81],[135,84,171,82],[137,6,173,4],[138,6,174,4],[138,10,174,10,"baseXpReward"],[138,22,174,22],[138,25,174,25],[138,28,174,28],[138,29,174,29],[138,30,174,30],[139,6,175,4],[139,10,175,10,"xpMultiplier"],[139,22,175,22],[139,25,175,25,"game"],[139,29,175,29],[139,30,175,30,"gameState"],[139,39,175,39],[139,40,175,40,"subscriptionBenefits"],[139,60,175,60],[139,62,175,62,"xp_multiplier"],[139,75,175,75],[139,79,175,79],[139,82,175,82],[140,6,176,4],[140,10,176,10,"dropMultiplier"],[140,24,176,24],[140,27,176,27,"game"],[140,31,176,31],[140,32,176,32,"gameState"],[140,41,176,41],[140,42,176,42,"subscriptionBenefits"],[140,62,176,62],[140,64,176,64,"drop_multiplier"],[140,79,176,79],[140,83,176,83],[140,86,176,86],[141,6,178,4],[141,10,178,10,"xpReward"],[141,18,178,18],[141,21,178,21,"Math"],[141,25,178,25],[141,26,178,26,"floor"],[141,31,178,31],[141,32,178,32,"baseXpReward"],[141,44,178,44],[141,47,178,47,"xpMultiplier"],[141,59,178,59],[141,60,178,60],[142,6,179,4],[142,10,179,10,"goldReward"],[142,20,179,20],[142,23,179,23,"Math"],[142,27,179,27],[142,28,179,28,"floor"],[142,33,179,33],[142,34,179,34],[142,38,179,38],[142,41,179,41,"dropMultiplier"],[142,55,179,55],[142,56,179,56],[142,57,179,57],[142,58,179,58],[144,6,181,4,"console"],[144,13,181,11],[144,14,181,12,"log"],[144,17,181,15],[144,18,181,16],[144,48,181,46,"xpReward"],[144,56,181,54],[144,67,181,65,"goldReward"],[144,77,181,75],[144,93,181,91],[144,94,181,92],[145,6,182,4,"console"],[145,13,182,11],[145,14,182,12,"log"],[145,17,182,15],[145,18,182,16],[145,60,182,58,"xpMultiplier"],[145,72,182,70],[145,94,182,92,"dropMultiplier"],[145,108,182,106],[145,110,182,108],[145,111,182,109],[146,6,183,4,"console"],[146,13,183,11],[146,14,183,12,"log"],[146,17,183,15],[146,18,183,16],[146,54,183,52,"baseXpReward"],[146,66,183,64],[146,81,183,79,"xpReward"],[146,89,183,87],[146,91,183,89],[146,92,183,90],[147,6,184,4,"console"],[147,13,184,11],[147,14,184,12,"log"],[147,17,184,15],[147,18,184,16],[147,58,184,56],[147,60,184,58,"JSON"],[147,64,184,62],[147,65,184,63,"stringify"],[147,74,184,72],[147,75,184,73,"game"],[147,79,184,77],[147,80,184,78,"gameState"],[147,89,184,87],[147,90,184,88,"subscriptionBenefits"],[147,110,184,108],[147,111,184,109],[147,112,184,110],[148,6,185,4,"console"],[148,13,185,11],[148,14,185,12,"log"],[148,17,185,15],[148,18,185,16],[148,49,185,47,"Platform"],[148,61,185,55],[148,62,185,55,"Platform"],[148,70,185,55],[148,71,185,56,"OS"],[148,73,185,58],[148,84,185,69,"Date"],[148,88,185,73],[148,89,185,74,"now"],[148,92,185,77],[148,93,185,78],[148,94,185,79],[148,96,185,81],[148,97,185,82],[150,6,187,4],[151,6,188,4],[152,6,189,4,"setTimeout"],[152,16,189,14],[152,17,189,15],[152,23,189,21],[153,8,190,6,"console"],[153,15,190,13],[153,16,190,14,"log"],[153,19,190,17],[153,20,190,18],[153,78,190,76],[153,79,190,77],[155,8,192,6],[156,8,193,6,"game"],[156,12,193,10],[156,13,193,11,"updateNinja"],[156,24,193,22],[156,25,193,24,"prev"],[156,29,193,28],[156,33,193,33],[157,10,194,8,"console"],[157,17,194,15],[157,18,194,16,"log"],[157,21,194,19],[157,22,194,20],[157,54,194,52,"prev"],[157,58,194,56],[157,59,194,57,"experience"],[157,69,194,67],[157,81,194,79,"prev"],[157,85,194,83],[157,86,194,84,"experience"],[157,96,194,94],[157,99,194,97,"xpReward"],[157,107,194,105],[157,109,194,107],[157,110,194,108],[158,10,195,8,"console"],[158,17,195,15],[158,18,195,16,"log"],[158,21,195,19],[158,22,195,20],[158,56,195,54,"prev"],[158,60,195,58],[158,61,195,59,"gold"],[158,65,195,63],[158,77,195,75,"prev"],[158,81,195,79],[158,82,195,80,"gold"],[158,86,195,84],[158,89,195,87,"goldReward"],[158,99,195,97],[158,101,195,99],[158,102,195,100],[159,10,196,8],[159,17,196,15],[160,12,197,10,"experience"],[160,22,197,20],[160,24,197,22,"prev"],[160,28,197,26],[160,29,197,27,"experience"],[160,39,197,37],[160,42,197,40,"xpReward"],[160,50,197,48],[161,12,198,10,"gold"],[161,16,198,14],[161,18,198,16,"prev"],[161,22,198,20],[161,23,198,21,"gold"],[161,27,198,25],[161,30,198,28,"goldReward"],[162,10,199,8],[162,11,199,9],[163,8,200,6],[163,9,200,7],[163,10,200,8],[165,8,202,6],[166,8,203,6],[166,12,203,12,"zoneEnemy"],[166,21,203,21],[166,24,203,24],[167,10,204,8,"id"],[167,12,204,10],[167,14,204,12,"enemy"],[167,19,204,17],[167,20,204,18,"id"],[167,22,204,20],[168,10,205,8,"typeId"],[168,16,205,14],[168,18,205,16,"enemy"],[168,23,205,21],[168,24,205,22,"zoneTypeId"],[168,34,205,32],[168,38,205,36],[168,48,205,46],[169,10,205,48],[170,10,206,8,"name"],[170,14,206,12],[170,16,206,14,"enemy"],[170,21,206,19],[170,22,206,20,"name"],[170,26,206,24],[171,10,207,8,"icon"],[171,14,207,12],[171,16,207,14],[171,20,207,18],[172,10,207,20],[173,10,208,8,"hp"],[173,12,208,10],[173,14,208,12],[173,15,208,13],[174,10,208,15],[175,10,209,8,"maxHP"],[175,15,209,13],[175,17,209,15,"enemy"],[175,22,209,20],[175,23,209,21,"maxHealth"],[175,32,209,30],[176,10,210,8,"attack"],[176,16,210,14],[176,18,210,16,"enemy"],[176,23,210,21],[176,24,210,22,"stats"],[176,29,210,27],[176,30,210,28,"attack"],[176,36,210,34],[177,10,211,8,"xp"],[177,12,211,10],[177,14,211,12,"enemy"],[177,19,211,17],[177,20,211,18,"zoneXP"],[177,26,211,24],[177,30,211,28],[177,32,211,30],[178,10,211,32],[179,10,212,8,"position"],[179,18,212,16],[179,20,212,18,"enemy"],[179,25,212,23],[179,26,212,24,"position"],[180,8,213,6],[180,9,213,7],[181,8,215,6,"console"],[181,15,215,13],[181,16,215,14,"log"],[181,19,215,17],[181,20,215,18],[181,40,215,38,"zoneEnemy"],[181,49,215,47],[181,50,215,48,"name"],[181,54,215,52],[181,59,215,57,"zoneEnemy"],[181,68,215,66],[181,69,215,67,"typeId"],[181,75,215,73],[181,113,215,111],[181,114,215,112],[182,8,216,6,"recordEnemyKill"],[182,23,216,21],[182,24,216,22,"zoneEnemy"],[182,33,216,31],[182,34,216,32],[183,6,217,4],[183,7,217,5],[183,9,217,7],[183,10,217,8],[183,11,217,9],[183,12,217,10],[183,13,217,11],[184,4,218,2],[184,5,218,3],[184,7,218,5],[184,8,218,6,"game"],[184,12,218,10],[184,13,218,11,"updateNinja"],[184,24,218,22],[184,26,218,24,"recordEnemyKill"],[184,41,218,39],[184,42,218,40],[184,43,218,41],[186,4,220,2],[187,4,221,2],[187,8,221,8,"handleCombatTick"],[187,24,221,24],[187,27,221,27,"React"],[187,32,221,32],[187,33,221,32,"default"],[187,40,221,32],[187,41,221,33,"useCallback"],[187,52,221,44],[187,53,221,45],[187,59,221,51],[188,6,221,51],[188,10,221,51,"_s2"],[188,13,221,51],[188,16,221,51,"$RefreshSig$"],[188,28,221,51],[189,6,222,4,"console"],[189,13,222,11],[189,14,222,12,"log"],[189,17,222,15],[189,18,222,16],[189,87,222,85],[189,88,222,86],[190,6,224,4],[190,10,224,8,"enemiesToKill"],[190,23,224,36],[190,26,224,39],[190,28,224,41],[190,29,224,42],[190,30,224,43],[192,6,226,4,"_s2"],[192,9,226,4],[192,10,226,4,"setCombatState"],[192,24,226,18],[192,25,226,18,"_s2"],[192,28,226,18],[192,29,226,19,"prev"],[192,33,226,23],[192,37,226,27],[193,8,226,27,"_s2"],[193,11,226,27],[194,8,227,6],[194,12,227,12,"newTick"],[194,19,227,19],[194,22,227,22,"combatEngine"],[194,41,227,34],[194,42,227,34,"combatEngine"],[194,54,227,34],[194,55,227,35,"getCurrentTick"],[194,69,227,49],[194,70,227,50],[194,71,227,51],[195,8,228,6],[195,12,228,12,"newState"],[195,20,228,20],[195,23,228,23],[196,10,228,25],[196,13,228,28,"prev"],[196,17,228,32],[197,10,228,34,"currentTick"],[197,21,228,45],[197,23,228,47,"newTick"],[198,8,228,55],[198,9,228,56],[199,8,230,6],[199,12,230,10],[199,13,230,11,"newState"],[199,21,230,19],[199,22,230,20,"isInCombat"],[199,32,230,30],[199,34,230,32],[199,41,230,39,"newState"],[199,49,230,47],[201,8,232,6],[202,8,233,6,"newState"],[202,16,233,14],[202,17,233,15,"abilityManager"],[202,31,233,29],[202,32,233,30,"updateCooldowns"],[202,47,233,45],[202,48,233,46,"newTick"],[202,55,233,53],[202,56,233,54],[204,8,235,6],[205,8,236,6],[205,12,236,12,"effectResults"],[205,25,236,25],[205,28,236,28,"newState"],[205,36,236,36],[205,37,236,37,"statusEffects"],[205,50,236,50],[205,51,236,51,"processTick"],[205,62,236,62],[205,63,236,63,"newTick"],[205,70,236,70],[205,71,236,71],[207,8,238,6],[208,8,239,6,"effectResults"],[208,21,239,19],[208,22,239,20,"forEach"],[208,29,239,27],[208,30,239,28],[208,31,239,29,"results"],[208,38,239,36],[208,40,239,38,"entityId"],[208,48,239,46],[208,53,239,51],[209,10,240,8],[209,14,240,14,"enemyIndex"],[209,24,240,24],[209,27,240,27,"newState"],[209,35,240,35],[209,36,240,36,"enemies"],[209,43,240,43],[209,44,240,44,"findIndex"],[209,53,240,53],[209,54,240,54,"e"],[209,55,240,55],[209,59,240,59,"e"],[209,60,240,60],[209,61,240,61,"id"],[209,63,240,63],[209,68,240,68,"entityId"],[209,76,240,76],[209,77,240,77],[210,10,241,8],[210,14,241,12,"enemyIndex"],[210,24,241,22],[210,28,241,26],[210,29,241,27],[210,31,241,29],[211,12,242,10,"results"],[211,19,242,17],[211,20,242,18,"forEach"],[211,27,242,25],[211,28,242,26,"result"],[211,34,242,32],[211,38,242,36],[212,14,243,12,"newState"],[212,22,243,20],[212,23,243,21,"enemies"],[212,30,243,28],[212,31,243,29,"enemyIndex"],[212,41,243,39],[212,42,243,40],[212,43,243,41,"health"],[212,49,243,47],[212,53,243,51,"result"],[212,59,243,57],[212,60,243,58,"damage"],[212,66,243,64],[213,14,244,12,"newState"],[213,22,244,20],[213,23,244,21,"enemies"],[213,30,244,28],[213,31,244,29,"enemyIndex"],[213,41,244,39],[213,42,244,40],[213,43,244,41,"lastDamaged"],[213,54,244,52],[213,57,244,55,"newTick"],[213,64,244,62],[214,12,245,10],[214,13,245,11],[214,14,245,12],[215,10,246,8],[216,8,247,6],[216,9,247,7],[216,10,247,8],[218,8,249,6],[219,8,250,6],[220,8,251,6],[220,12,251,10,"newState"],[220,20,251,18],[220,21,251,19,"playerStats"],[220,32,251,30],[220,36,251,34,"game"],[220,40,251,38],[220,41,251,39,"gameState"],[220,50,251,48],[220,51,251,49,"ninja"],[220,56,251,54],[220,58,251,56],[221,10,252,8],[221,14,252,14,"effectiveStats"],[221,28,252,28],[221,31,252,31,"game"],[221,35,252,35],[221,36,252,36,"getEffectiveStats"],[221,53,252,53],[221,54,252,54],[221,55,252,55],[223,10,254,8],[224,10,255,8],[224,14,255,12,"newState"],[224,22,255,20],[224,23,255,21,"playerStats"],[224,34,255,32],[224,35,255,33,"attack"],[224,41,255,39],[224,46,255,44,"effectiveStats"],[224,60,255,58],[224,61,255,59,"attack"],[224,67,255,65],[224,71,256,12,"newState"],[224,79,256,20],[224,80,256,21,"playerStats"],[224,91,256,32],[224,92,256,33,"defense"],[224,99,256,40],[224,104,256,45,"effectiveStats"],[224,118,256,59],[224,119,256,60,"defense"],[224,126,256,67],[224,130,257,12,"newState"],[224,138,257,20],[224,139,257,21,"playerStats"],[224,150,257,32],[224,151,257,33,"maxHealth"],[224,160,257,42],[224,165,257,47,"effectiveStats"],[224,179,257,61],[224,180,257,62,"maxHealth"],[224,189,257,71],[224,191,257,73],[225,12,259,10,"console"],[225,19,259,17],[225,20,259,18,"log"],[225,23,259,21],[225,24,259,22],[225,58,259,56,"newState"],[225,66,259,64],[225,67,259,65,"playerStats"],[225,78,259,76],[225,79,259,77,"attack"],[225,85,259,83],[225,91,259,89,"effectiveStats"],[225,105,259,103],[225,106,259,104,"attack"],[225,112,259,110],[225,125,259,123,"newState"],[225,133,259,131],[225,134,259,132,"playerStats"],[225,145,259,143],[225,146,259,144,"defense"],[225,153,259,151],[225,159,259,157,"effectiveStats"],[225,173,259,171],[225,174,259,172,"defense"],[225,181,259,179],[225,192,259,190,"newState"],[225,200,259,198],[225,201,259,199,"playerStats"],[225,212,259,210],[225,213,259,211,"maxHealth"],[225,222,259,220],[225,228,259,226,"effectiveStats"],[225,242,259,240],[225,243,259,241,"maxHealth"],[225,252,259,250],[225,254,259,252],[225,255,259,253],[227,12,261,10],[228,12,262,10],[228,16,262,14,"newHealth"],[228,25,262,23],[228,28,262,26,"newState"],[228,36,262,34],[228,37,262,35,"playerStats"],[228,48,262,46],[228,49,262,47,"health"],[228,55,262,53],[229,12,263,10],[229,16,263,14,"newState"],[229,24,263,22],[229,25,263,23,"playerStats"],[229,36,263,34],[229,37,263,35,"maxHealth"],[229,46,263,44],[229,51,263,49,"effectiveStats"],[229,65,263,63],[229,66,263,64,"maxHealth"],[229,75,263,73],[229,77,263,75],[230,14,264,12],[231,14,265,12],[231,18,265,16,"effectiveStats"],[231,32,265,30],[231,33,265,31,"maxHealth"],[231,42,265,40],[231,45,265,43,"newState"],[231,53,265,51],[231,54,265,52,"playerStats"],[231,65,265,63],[231,66,265,64,"maxHealth"],[231,75,265,73],[231,78,265,76],[231,81,265,79],[231,83,265,81],[232,16,266,14],[233,16,267,14],[233,20,267,20,"healthRatio"],[233,31,267,31],[233,34,267,34,"newState"],[233,42,267,42],[233,43,267,43,"playerStats"],[233,54,267,54],[233,55,267,55,"maxHealth"],[233,64,267,64],[233,67,267,67],[233,68,267,68],[233,71,268,16,"newState"],[233,79,268,24],[233,80,268,25,"playerStats"],[233,91,268,36],[233,92,268,37,"health"],[233,98,268,43],[233,101,268,46,"newState"],[233,109,268,54],[233,110,268,55,"playerStats"],[233,121,268,66],[233,122,268,67,"maxHealth"],[233,131,268,76],[233,134,268,79],[233,135,268,80],[234,16,269,14,"newHealth"],[234,25,269,23],[234,28,269,26,"Math"],[234,32,269,30],[234,33,269,31,"floor"],[234,38,269,36],[234,39,269,37,"effectiveStats"],[234,53,269,51],[234,54,269,52,"maxHealth"],[234,63,269,61],[234,66,269,64,"healthRatio"],[234,77,269,75],[234,78,269,76],[235,14,270,12],[235,15,270,13],[235,21,270,19],[235,25,270,23,"newState"],[235,33,270,31],[235,34,270,32,"playerStats"],[235,45,270,43],[235,46,270,44,"health"],[235,52,270,50],[235,55,270,53,"effectiveStats"],[235,69,270,67],[235,70,270,68,"maxHealth"],[235,79,270,77],[235,81,270,79],[236,16,271,14],[237,16,272,14,"newHealth"],[237,25,272,23],[237,28,272,26,"effectiveStats"],[237,42,272,40],[237,43,272,41,"maxHealth"],[237,52,272,50],[238,14,273,12],[239,14,274,12],[240,12,275,10],[241,12,277,10,"newState"],[241,20,277,18],[241,21,277,19,"playerStats"],[241,32,277,30],[241,35,277,33],[242,14,278,12],[242,17,278,15,"newState"],[242,25,278,23],[242,26,278,24,"playerStats"],[242,37,278,35],[243,14,279,12,"attack"],[243,20,279,18],[243,22,279,20,"effectiveStats"],[243,36,279,34],[243,37,279,35,"attack"],[243,43,279,41],[244,14,280,12,"defense"],[244,21,280,19],[244,23,280,21,"effectiveStats"],[244,37,280,35],[244,38,280,36,"defense"],[244,45,280,43],[245,14,281,12,"maxHealth"],[245,23,281,21],[245,25,281,23,"effectiveStats"],[245,39,281,37],[245,40,281,38,"maxHealth"],[245,49,281,47],[246,14,281,49],[247,14,282,12,"health"],[247,20,282,18],[247,22,282,20,"newHealth"],[247,31,282,29],[248,14,282,31],[249,14,283,12,"critChance"],[249,24,283,22],[249,26,283,24,"effectiveStats"],[249,40,283,38],[249,41,283,39,"critChance"],[249,51,283,49],[249,55,283,53,"newState"],[249,63,283,61],[249,64,283,62,"playerStats"],[249,75,283,73],[249,76,283,74,"critChance"],[249,86,283,84],[250,14,284,12,"critDamage"],[250,24,284,22],[250,26,284,24,"effectiveStats"],[250,40,284,38],[250,41,284,39,"critDamage"],[250,51,284,49],[250,55,284,53,"newState"],[250,63,284,61],[250,64,284,62,"playerStats"],[250,75,284,73],[250,76,284,74,"critDamage"],[250,86,284,84],[251,14,285,12,"cooldownReduction"],[251,31,285,29],[251,33,285,31,"effectiveStats"],[251,47,285,45],[251,48,285,46,"cooldownReduction"],[251,65,285,63],[251,69,285,67,"newState"],[251,77,285,75],[251,78,285,76,"playerStats"],[251,89,285,87],[251,90,285,88,"cooldownReduction"],[252,12,286,10],[252,13,286,11],[253,10,287,8],[255,10,289,8],[256,10,290,8],[256,14,290,12,"game"],[256,18,290,16],[256,19,290,17,"gameState"],[256,28,290,26],[256,29,290,27,"isAlive"],[256,36,290,34],[256,40,291,12,"game"],[256,44,291,16],[256,45,291,17,"gameState"],[256,54,291,26],[256,55,291,27,"ninja"],[256,60,291,32],[256,61,291,33,"health"],[256,67,291,39],[256,72,291,44,"effectiveStats"],[256,86,291,58],[256,87,291,59,"maxHealth"],[256,96,291,68],[256,100,292,12,"newState"],[256,108,292,20],[256,109,292,21,"playerStats"],[256,120,292,32],[256,121,292,33,"health"],[256,127,292,39],[256,130,292,42,"effectiveStats"],[256,144,292,56],[256,145,292,57,"maxHealth"],[256,154,292,66],[256,157,292,69],[256,160,292,72],[256,162,292,74],[257,12,293,10,"console"],[257,19,293,17],[257,20,293,18,"log"],[257,23,293,21],[257,24,293,22],[257,58,293,56,"newState"],[257,66,293,64],[257,67,293,65,"playerStats"],[257,78,293,76],[257,79,293,77,"health"],[257,85,293,83],[257,91,293,89,"game"],[257,95,293,93],[257,96,293,94,"gameState"],[257,105,293,103],[257,106,293,104,"ninja"],[257,111,293,109],[257,112,293,110,"health"],[257,118,293,116],[257,139,293,137],[257,140,293,138],[258,12,294,10,"newState"],[258,20,294,18],[258,21,294,19,"playerStats"],[258,32,294,30],[258,33,294,31,"health"],[258,39,294,37],[258,42,294,40,"game"],[258,46,294,44],[258,47,294,45,"gameState"],[258,56,294,54],[258,57,294,55,"ninja"],[258,62,294,60],[258,63,294,61,"health"],[258,69,294,67],[259,10,295,8],[260,8,296,6],[262,8,298,6],[263,8,299,6,"newState"],[263,16,299,14],[263,17,299,15,"enemies"],[263,24,299,22],[263,25,299,23,"forEach"],[263,32,299,30],[263,33,299,31,"enemy"],[263,38,299,36],[263,42,299,40],[264,10,300,8],[264,14,300,12],[264,15,300,13,"enemy"],[264,20,300,18],[264,21,300,19,"isBoss"],[264,27,300,25],[264,29,300,27],[265,12,300,29],[266,12,301,10],[267,12,302,10],[267,16,302,16,"MOVEMENT_SPEED"],[267,30,302,30],[267,33,302,33],[267,37,302,37],[267,38,302,38],[267,39,302,39],[268,12,303,10],[268,16,303,16,"SCREEN_WIDTH"],[268,28,303,28],[268,31,303,31],[268,34,303,34],[269,12,304,10],[269,16,304,16,"GAME_AREA_HEIGHT"],[269,32,304,32],[269,35,304,35],[269,38,304,38],[269,39,304,39],[269,40,304,40],[270,12,305,10],[270,16,305,16,"ENEMY_SIZE"],[270,26,305,26],[270,29,305,29],[270,31,305,31],[272,12,307,10],[273,12,308,10],[273,16,308,16,"playerX"],[273,23,308,23],[273,26,308,26,"currentNinjaPosition"],[273,46,308,46],[273,47,308,47,"x"],[273,48,308,48],[274,12,309,10],[274,16,309,16,"playerY"],[274,23,309,23],[274,26,309,26,"currentNinjaPosition"],[274,46,309,46],[274,47,309,47,"y"],[274,48,309,48],[276,12,311,10],[277,12,312,10],[277,16,312,16,"deltaX"],[277,22,312,22],[277,25,312,25,"playerX"],[277,32,312,32],[277,35,312,35,"enemy"],[277,40,312,40],[277,41,312,41,"position"],[277,49,312,49],[277,50,312,50,"x"],[277,51,312,51],[278,12,313,10],[278,16,313,16,"deltaY"],[278,22,313,22],[278,25,313,25,"playerY"],[278,32,313,32],[278,35,313,35,"enemy"],[278,40,313,40],[278,41,313,41,"position"],[278,49,313,49],[278,50,313,50,"y"],[278,51,313,51],[279,12,314,10],[279,16,314,16,"distance"],[279,24,314,24],[279,27,314,27,"Math"],[279,31,314,31],[279,32,314,32,"sqrt"],[279,36,314,36],[279,37,314,37,"deltaX"],[279,43,314,43],[279,46,314,46,"deltaX"],[279,52,314,52],[279,55,314,55,"deltaY"],[279,61,314,61],[279,64,314,64,"deltaY"],[279,70,314,70],[279,71,314,71],[281,12,316,10],[282,12,317,10],[282,16,317,16,"ATTACK_RANGE"],[282,28,317,28],[282,31,317,31],[282,33,317,33],[282,34,317,34],[282,35,317,35],[283,12,318,10],[283,16,318,16,"ATTACK_COOLDOWN"],[283,31,318,31],[283,34,318,34],[283,36,318,36],[283,37,318,37],[283,38,318,38],[285,12,320,10],[285,16,320,14,"distance"],[285,24,320,22],[285,28,320,26,"ATTACK_RANGE"],[285,40,320,38],[285,42,320,40],[286,14,321,12],[287,14,322,12],[287,18,322,16],[287,19,322,17,"enemy"],[287,24,322,22],[287,25,322,23,"lastAttackTick"],[287,39,322,37],[287,41,322,39,"enemy"],[287,46,322,44],[287,47,322,45,"lastAttackTick"],[287,61,322,59],[287,64,322,62],[287,65,322,63],[288,14,324,12],[288,18,324,16,"newState"],[288,26,324,24],[288,27,324,25,"currentTick"],[288,38,324,36],[288,41,324,39,"enemy"],[288,46,324,44],[288,47,324,45,"lastAttackTick"],[288,61,324,59],[288,65,324,63,"ATTACK_COOLDOWN"],[288,80,324,78],[288,82,324,80],[289,16,325,14],[290,16,326,14],[290,20,326,18],[290,21,326,19,"game"],[290,25,326,23],[290,26,326,24,"gameState"],[290,35,326,33],[290,36,326,34,"isAlive"],[290,43,326,41],[290,45,326,43],[291,18,327,16,"console"],[291,25,327,23],[291,26,327,24,"log"],[291,29,327,27],[291,30,327,28],[291,49,327,47,"enemy"],[291,54,327,52],[291,55,327,53,"name"],[291,59,327,57],[291,93,327,91],[291,94,327,92],[292,18,328,16],[293,18,329,16,"enemy"],[293,23,329,21],[293,24,329,22,"lastAttackTick"],[293,38,329,36],[293,41,329,39,"newState"],[293,49,329,47],[293,50,329,48,"currentTick"],[293,61,329,59],[294,16,330,14],[294,17,330,15],[294,23,330,21],[295,18,331,16],[296,18,332,16],[296,22,332,22,"isPlayerInvincible"],[296,40,332,40],[296,43,332,43,"game"],[296,47,332,47],[296,48,332,48,"gameState"],[296,57,332,57],[296,58,332,58,"isInvincible"],[296,70,332,70],[296,74,333,41,"game"],[296,78,333,45],[296,79,333,46,"gameState"],[296,88,333,55],[296,89,333,56,"invincibilityEndTime"],[296,109,333,76],[296,113,334,41,"Date"],[296,117,334,45],[296,118,334,46,"now"],[296,121,334,49],[296,122,334,50],[296,123,334,51],[296,126,334,54,"game"],[296,130,334,58],[296,131,334,59,"gameState"],[296,140,334,68],[296,141,334,69,"invincibilityEndTime"],[296,161,334,89],[297,18,336,16],[297,22,336,20,"isPlayerInvincible"],[297,40,336,38],[297,42,336,40],[298,20,337,18,"console"],[298,27,337,25],[298,28,337,26,"log"],[298,31,337,29],[298,32,337,30],[298,51,337,49,"enemy"],[298,56,337,54],[298,57,337,55,"name"],[298,61,337,59],[298,101,337,99],[298,102,337,100],[299,20,338,18],[300,20,339,18,"enemy"],[300,25,339,23],[300,26,339,24,"lastAttackTick"],[300,40,339,38],[300,43,339,41,"newState"],[300,51,339,49],[300,52,339,50,"currentTick"],[300,63,339,61],[301,18,340,16],[301,19,340,17],[301,25,340,23],[302,20,341,16],[303,20,342,16],[303,24,342,22,"baseAttack"],[303,34,342,32],[303,37,342,35,"enemy"],[303,42,342,40],[303,43,342,41,"stats"],[303,48,342,46],[303,49,342,47,"attack"],[303,55,342,53],[303,58,342,56],[303,61,342,59],[303,62,342,60],[303,63,342,61],[304,20,343,16],[304,24,343,22,"attackDamage"],[304,36,343,34],[304,39,343,37,"Math"],[304,43,343,41],[304,44,343,42,"floor"],[304,49,343,47],[304,50,343,48,"baseAttack"],[304,60,343,58],[304,64,343,62],[304,67,343,65],[304,70,343,68,"Math"],[304,74,343,72],[304,75,343,73,"random"],[304,81,343,79],[304,82,343,80],[304,83,343,81],[304,86,343,84],[304,89,343,87],[304,90,343,88],[304,91,343,89],[304,92,343,90],[304,93,343,91],[305,20,344,16],[305,24,344,22,"playerDefense"],[305,37,344,35],[305,40,344,38,"newState"],[305,48,344,46],[305,49,344,47,"playerStats"],[305,60,344,58],[305,61,344,59,"defense"],[305,68,344,66],[306,20,345,16],[306,24,345,22,"finalDamage"],[306,35,345,33],[306,38,345,36,"Math"],[306,42,345,40],[306,43,345,41,"max"],[306,46,345,44],[306,47,345,45],[306,48,345,46],[306,50,345,48,"attackDamage"],[306,62,345,60],[306,65,345,63,"Math"],[306,69,345,67],[306,70,345,68,"floor"],[306,75,345,73],[306,76,345,74,"playerDefense"],[306,89,345,87],[306,92,345,90],[306,95,345,93],[306,96,345,94],[306,97,345,95],[306,98,345,96],[306,99,345,97],[308,20,347,16,"console"],[308,27,347,23],[308,28,347,24,"log"],[308,31,347,27],[308,32,347,28],[308,53,347,49,"enemy"],[308,58,347,54],[308,59,347,55,"name"],[308,63,347,59],[308,86,347,82,"finalDamage"],[308,97,347,93],[308,109,347,105,"attackDamage"],[308,121,347,117],[308,132,347,128,"Math"],[308,136,347,132],[308,137,347,133,"floor"],[308,142,347,138],[308,143,347,139,"playerDefense"],[308,156,347,152],[308,159,347,155],[308,162,347,158],[308,163,347,159],[308,184,347,180],[308,185,347,181],[310,20,349,16],[311,20,350,16],[311,24,350,22,"newPlayerHealth"],[311,39,350,37],[311,42,350,40,"Math"],[311,46,350,44],[311,47,350,45,"max"],[311,50,350,48],[311,51,350,49],[311,52,350,50],[311,54,350,52,"newState"],[311,62,350,60],[311,63,350,61,"playerStats"],[311,74,350,72],[311,75,350,73,"health"],[311,81,350,79],[311,84,350,82,"finalDamage"],[311,95,350,93],[311,96,350,94],[312,20,351,16,"newState"],[312,28,351,24],[312,29,351,25,"playerStats"],[312,40,351,36],[312,41,351,37,"health"],[312,47,351,43],[312,50,351,46,"newPlayerHealth"],[312,65,351,61],[313,20,353,16,"console"],[313,27,353,23],[313,28,353,24,"log"],[313,31,353,27],[313,32,353,28],[313,53,353,49,"newState"],[313,61,353,57],[313,62,353,58,"playerStats"],[313,73,353,69],[313,74,353,70,"health"],[313,80,353,76],[313,84,353,80,"newState"],[313,92,353,88],[313,93,353,89,"playerStats"],[313,104,353,100],[313,105,353,101,"maxHealth"],[313,114,353,110],[313,124,353,120,"finalDamage"],[313,135,353,131],[313,145,353,141],[313,146,353,142],[315,20,355,16],[316,20,356,16,"enemy"],[316,25,356,21],[316,26,356,22,"lastAttackTick"],[316,40,356,36],[316,43,356,39,"newState"],[316,51,356,47],[316,52,356,48,"currentTick"],[316,63,356,59],[318,20,358,16],[319,20,359,16],[319,24,359,20,"newPlayerHealth"],[319,39,359,35],[319,43,359,39],[319,44,359,40],[319,46,359,42],[320,22,360,18,"console"],[320,29,360,25],[320,30,360,26,"log"],[320,33,360,29],[320,34,360,30],[320,84,360,80],[320,85,360,81],[321,22,361,18],[322,22,362,18,"setTimeout"],[322,32,362,28],[322,33,362,29],[322,39,362,35],[323,24,363,20],[324,24,364,20,"game"],[324,28,364,24],[324,29,364,25,"updateGameState"],[324,44,364,40],[324,45,364,41],[325,26,364,43,"isAlive"],[325,33,364,50],[325,35,364,52],[326,24,364,58],[326,25,364,59],[326,26,364,60],[327,22,365,18],[327,23,365,19],[327,25,365,21],[327,28,365,24],[327,29,365,25],[328,20,366,16],[329,18,367,16],[330,16,368,14],[331,14,369,12],[332,12,370,10],[332,13,370,11],[332,19,370,17],[333,14,371,12],[334,14,372,12],[335,14,373,12],[335,18,373,16,"distance"],[335,26,373,24],[335,29,373,27],[335,31,373,29],[335,33,373,31],[336,16,374,14],[337,16,375,14],[337,20,375,20,"normalizedX"],[337,31,375,31],[337,34,375,34,"deltaX"],[337,40,375,40],[337,43,375,43,"distance"],[337,51,375,51],[338,16,376,14],[338,20,376,20,"normalizedY"],[338,31,376,31],[338,34,376,34,"deltaY"],[338,40,376,40],[338,43,376,43,"distance"],[338,51,376,51],[340,16,378,14],[341,16,379,14],[341,20,379,20,"randomFactor"],[341,32,379,32],[341,35,379,35],[341,38,379,38],[341,39,379,39],[341,40,379,40],[342,16,380,14],[342,20,380,20,"finalX"],[342,26,380,26],[342,29,380,29,"normalizedX"],[342,40,380,40],[342,43,380,43],[342,44,380,44,"Math"],[342,48,380,48],[342,49,380,49,"random"],[342,55,380,55],[342,56,380,56],[342,57,380,57],[342,60,380,60],[342,63,380,63],[342,67,380,67,"randomFactor"],[342,79,380,79],[343,16,381,14],[343,20,381,20,"finalY"],[343,26,381,26],[343,29,381,29,"normalizedY"],[343,40,381,40],[343,43,381,43],[343,44,381,44,"Math"],[343,48,381,48],[343,49,381,49,"random"],[343,55,381,55],[343,56,381,56],[343,57,381,57],[343,60,381,60],[343,63,381,63],[343,67,381,67,"randomFactor"],[343,79,381,79],[345,16,383,14],[346,16,384,14],[346,20,384,18,"newX"],[346,24,384,22],[346,27,384,25,"enemy"],[346,32,384,30],[346,33,384,31,"position"],[346,41,384,39],[346,42,384,40,"x"],[346,43,384,41],[346,46,384,45,"finalX"],[346,52,384,51],[346,55,384,54,"MOVEMENT_SPEED"],[346,69,384,69],[347,16,385,14],[347,20,385,18,"newY"],[347,24,385,22],[347,27,385,25,"enemy"],[347,32,385,30],[347,33,385,31,"position"],[347,41,385,39],[347,42,385,40,"y"],[347,43,385,41],[347,46,385,45,"finalY"],[347,52,385,51],[347,55,385,54,"MOVEMENT_SPEED"],[347,69,385,69],[349,16,387,14],[350,16,388,14,"newX"],[350,20,388,18],[350,23,388,21,"Math"],[350,27,388,25],[350,28,388,26,"max"],[350,31,388,29],[350,32,388,30],[350,33,388,31],[350,35,388,33,"Math"],[350,39,388,37],[350,40,388,38,"min"],[350,43,388,41],[350,44,388,42,"SCREEN_WIDTH"],[350,56,388,54],[350,59,388,57,"ENEMY_SIZE"],[350,69,388,67],[350,71,388,69,"newX"],[350,75,388,73],[350,76,388,74],[350,77,388,75],[351,16,389,14,"newY"],[351,20,389,18],[351,23,389,21,"Math"],[351,27,389,25],[351,28,389,26,"max"],[351,31,389,29],[351,32,389,30],[351,33,389,31],[351,35,389,33,"Math"],[351,39,389,37],[351,40,389,38,"min"],[351,43,389,41],[351,44,389,42,"GAME_AREA_HEIGHT"],[351,60,389,58],[351,63,389,61,"ENEMY_SIZE"],[351,73,389,71],[351,75,389,73,"newY"],[351,79,389,77],[351,80,389,78],[351,81,389,79],[353,16,391,14],[354,16,392,14,"enemy"],[354,21,392,19],[354,22,392,20,"position"],[354,30,392,28],[354,31,392,29,"x"],[354,32,392,30],[354,35,392,33,"newX"],[354,39,392,37],[355,16,393,14,"enemy"],[355,21,393,19],[355,22,393,20,"position"],[355,30,393,28],[355,31,393,29,"y"],[355,32,393,30],[355,35,393,33,"newY"],[355,39,393,37],[356,14,394,12],[357,14,395,12],[358,12,396,10],[359,10,397,8],[360,8,398,6],[360,9,398,7],[360,10,398,8],[362,8,400,6],[363,8,401,6],[363,12,401,10,"newState"],[363,20,401,18],[363,21,401,19,"shadowClone"],[363,32,401,30],[363,34,401,32],[364,10,402,8],[365,10,403,8,"newState"],[365,18,403,16],[365,19,403,17,"shadowClone"],[365,30,403,28],[365,31,403,29,"remainingTicks"],[365,45,403,43],[365,47,403,45],[367,10,405,8],[368,10,406,8],[368,14,406,14,"cloneOffset"],[368,25,406,25],[368,28,406,28],[368,30,406,30],[368,31,406,31],[368,32,406,32],[369,10,407,8,"newState"],[369,18,407,16],[369,19,407,17,"shadowClone"],[369,30,407,28],[369,31,407,29,"position"],[369,39,407,37],[369,40,407,38,"x"],[369,41,407,39],[369,44,407,42,"currentNinjaPosition"],[369,64,407,62],[369,65,407,63,"x"],[369,66,407,64],[369,69,407,67,"cloneOffset"],[369,80,407,78],[370,10,408,8,"newState"],[370,18,408,16],[370,19,408,17,"shadowClone"],[370,30,408,28],[370,31,408,29,"position"],[370,39,408,37],[370,40,408,38,"y"],[370,41,408,39],[370,44,408,42,"currentNinjaPosition"],[370,64,408,62],[370,65,408,63,"y"],[370,66,408,64],[370,69,408,67],[370,71,408,69],[372,10,410,8],[373,10,411,8],[373,14,411,12,"newState"],[373,22,411,20],[373,23,411,21,"shadowClone"],[373,34,411,32],[373,35,411,33,"remainingTicks"],[373,49,411,47],[373,53,411,51],[373,54,411,52],[373,56,411,54],[374,12,412,10,"console"],[374,19,412,17],[374,20,412,18,"log"],[374,23,412,21],[374,24,412,22],[374,75,412,73],[374,76,412,74],[375,12,413,10,"newState"],[375,20,413,18],[375,21,413,19,"shadowClone"],[375,32,413,30],[375,35,413,33,"undefined"],[375,44,413,42],[376,10,414,8],[376,11,414,9],[376,17,414,15],[377,12,415,10],[378,12,416,10],[379,12,417,10],[379,16,417,16,"CLONE_ATTACK_INTERVAL"],[379,37,417,37],[379,40,417,40],[379,42,417,42],[380,12,418,10],[380,16,418,14,"newState"],[380,24,418,22],[380,25,418,23,"currentTick"],[380,36,418,34],[380,39,418,37,"CLONE_ATTACK_INTERVAL"],[380,60,418,58],[380,65,418,63],[380,66,418,64],[380,70,418,68,"newState"],[380,78,418,76],[380,79,418,77,"enemies"],[380,86,418,84],[380,87,418,85,"length"],[380,93,418,91],[380,96,418,94],[380,97,418,95],[380,99,418,97],[381,14,419,12,"console"],[381,21,419,19],[381,22,419,20,"log"],[381,25,419,23],[381,26,419,24],[381,83,419,81],[381,84,419,82],[383,14,421,12],[384,14,422,12],[384,18,422,18,"target"],[384,24,422,24],[384,27,422,27,"findClosestEnemyInternal"],[384,51,422,51],[384,52,422,52,"newState"],[384,60,422,60],[384,61,422,61,"enemies"],[384,68,422,68],[384,69,422,69],[385,14,423,12],[385,18,423,16,"target"],[385,24,423,22],[385,26,423,24],[386,16,424,14],[387,16,425,14],[387,20,425,20,"cloneDamage"],[387,31,425,31],[387,34,425,34,"Math"],[387,38,425,38],[387,39,425,39,"floor"],[387,44,425,44],[387,45,425,45,"newState"],[387,53,425,53],[387,54,425,54,"playerStats"],[387,65,425,65],[387,66,425,66,"attack"],[387,72,425,72],[387,75,425,75],[387,78,425,78],[387,79,425,79],[389,16,427,14],[390,16,428,14,"createProjectile"],[390,32,428,30],[390,33,428,31,"target"],[390,39,428,37],[390,41,428,39,"cloneDamage"],[390,52,428,50],[390,54,428,52,"newState"],[390,62,428,60],[390,63,428,61,"shadowClone"],[390,74,428,72],[390,75,428,73,"position"],[390,83,428,81],[390,85,428,83],[391,18,429,16,"id"],[391,20,429,18],[391,22,429,20],[391,43,429,41],[392,18,430,16,"name"],[392,22,430,20],[392,24,430,22],[392,45,430,43],[393,18,431,16,"icon"],[393,22,431,20],[393,24,431,22],[394,16,432,14],[394,17,432,15],[394,18,432,16],[395,14,433,12],[396,12,434,10],[397,10,435,8],[398,8,436,6],[400,8,438,6],[401,8,439,6],[402,8,440,6],[402,12,440,10],[402,13,440,11,"isManualControlActive"],[402,34,440,32],[402,38,440,36,"game"],[402,42,440,40],[402,43,440,41,"gameState"],[402,52,440,50],[402,53,440,51,"isAlive"],[402,60,440,58],[402,62,440,60],[403,10,441,8],[403,15,441,13],[403,19,441,17,"i"],[403,20,441,18],[403,23,441,21],[403,24,441,22],[403,26,441,24,"i"],[403,27,441,25],[403,30,441,28],[403,31,441,29],[403,33,441,31,"i"],[403,34,441,32],[403,36,441,34],[403,38,441,36],[404,12,442,10],[404,16,442,14,"newState"],[404,24,442,22],[404,25,442,23,"abilityManager"],[404,39,442,37],[404,40,442,38,"isAbilityReady"],[404,54,442,52],[404,55,442,53,"i"],[404,56,442,54],[404,57,442,55],[404,61,442,59,"newState"],[404,69,442,67],[404,70,442,68,"enemies"],[404,77,442,75],[404,78,442,76,"length"],[404,84,442,82],[404,87,442,85],[404,88,442,86],[404,90,442,88],[405,14,443,12],[405,18,443,16,"newState"],[405,26,443,24],[405,27,443,25,"abilityManager"],[405,41,443,39],[405,42,443,40,"useAbility"],[405,52,443,50],[405,53,443,51,"i"],[405,54,443,52],[405,56,443,54,"newTick"],[405,63,443,61],[405,64,443,62],[405,66,443,64],[406,16,444,14,"castAbility"],[406,27,444,25],[406,28,444,26,"newState"],[406,36,444,34],[406,38,444,36,"i"],[406,39,444,37],[406,40,444,38],[407,14,445,12],[408,12,446,10],[409,10,447,8],[410,8,448,6],[412,8,450,6],[413,8,451,6],[413,12,451,12,"deadEnemies"],[413,23,451,23],[413,26,451,26,"newState"],[413,34,451,34],[413,35,451,35,"enemies"],[413,42,451,42],[413,43,451,43,"filter"],[413,49,451,49],[413,50,451,50,"enemy"],[413,55,451,55],[413,59,451,59,"enemy"],[413,64,451,64],[413,65,451,65,"health"],[413,71,451,71],[413,75,451,75],[413,76,451,76],[413,77,451,77],[414,8,452,6,"enemiesToKill"],[414,21,452,19],[414,24,452,22],[414,25,452,23],[414,28,452,26,"deadEnemies"],[414,39,452,37],[414,40,452,38],[414,41,452,39],[414,42,452,40],[416,8,454,6],[417,8,455,6],[417,12,455,10,"deadEnemies"],[417,23,455,21],[417,24,455,22,"length"],[417,30,455,28],[417,33,455,31],[417,34,455,32],[417,36,455,34],[418,10,456,8,"console"],[418,17,456,15],[418,18,456,16,"log"],[418,21,456,19],[418,22,456,20],[418,49,456,47,"deadEnemies"],[418,60,456,58],[418,61,456,59,"length"],[418,67,456,65],[418,83,456,81],[418,85,456,83,"deadEnemies"],[418,96,456,94],[418,97,456,95,"map"],[418,100,456,98],[418,101,456,99,"e"],[418,102,456,100],[418,106,456,104],[418,109,456,107,"e"],[418,110,456,108],[418,111,456,109,"id"],[418,113,456,111],[418,117,456,115,"e"],[418,118,456,116],[418,119,456,117,"health"],[418,125,456,123],[418,130,456,128],[418,131,456,129],[418,132,456,130],[419,8,457,6],[421,8,459,6],[422,8,460,6],[422,12,460,12,"lowHealthEnemies"],[422,28,460,28],[422,31,460,31,"newState"],[422,39,460,39],[422,40,460,40,"enemies"],[422,47,460,47],[422,48,460,48,"filter"],[422,54,460,54],[422,55,460,55,"enemy"],[422,60,460,60],[422,64,460,64,"enemy"],[422,69,460,69],[422,70,460,70,"health"],[422,76,460,76],[422,80,460,80],[422,82,460,82],[422,86,460,86,"enemy"],[422,91,460,91],[422,92,460,92,"health"],[422,98,460,98],[422,101,460,101],[422,102,460,102],[422,103,460,103],[423,8,461,6],[423,12,461,10,"lowHealthEnemies"],[423,28,461,26],[423,29,461,27,"length"],[423,35,461,33],[423,38,461,36],[423,39,461,37],[423,41,461,39],[424,10,462,8,"console"],[424,17,462,15],[424,18,462,16,"log"],[424,21,462,19],[424,22,462,20],[424,61,462,59],[424,63,462,61,"lowHealthEnemies"],[424,79,462,77],[424,80,462,78,"map"],[424,83,462,81],[424,84,462,82,"e"],[424,85,462,83],[424,89,462,87],[424,92,462,90,"e"],[424,93,462,91],[424,94,462,92,"id"],[424,96,462,94],[424,100,462,98,"e"],[424,101,462,99],[424,102,462,100,"health"],[424,108,462,106],[424,112,462,110,"e"],[424,113,462,111],[424,114,462,112,"maxHealth"],[424,123,462,121],[424,128,462,126],[424,129,462,127],[424,130,462,128],[425,8,463,6],[427,8,465,6],[428,8,466,6],[428,12,466,12,"beforeCount"],[428,23,466,23],[428,26,466,26,"newState"],[428,34,466,34],[428,35,466,35,"enemies"],[428,42,466,42],[428,43,466,43,"length"],[428,49,466,49],[429,8,467,6,"newState"],[429,16,467,14],[429,17,467,15,"enemies"],[429,24,467,22],[429,27,467,25,"newState"],[429,35,467,33],[429,36,467,34,"enemies"],[429,43,467,41],[429,44,467,42,"filter"],[429,50,467,48],[429,51,467,49,"enemy"],[429,56,467,54],[429,60,467,58,"enemy"],[429,65,467,63],[429,66,467,64,"health"],[429,72,467,70],[429,75,467,73],[429,76,467,74],[429,77,467,75],[430,8,468,6],[430,12,468,12,"afterCount"],[430,22,468,22],[430,25,468,25,"newState"],[430,33,468,33],[430,34,468,34,"enemies"],[430,41,468,41],[430,42,468,42,"length"],[430,48,468,48],[431,8,470,6],[431,12,470,10,"beforeCount"],[431,23,470,21],[431,28,470,26,"afterCount"],[431,38,470,36],[431,40,470,38],[432,10,471,8,"console"],[432,17,471,15],[432,18,471,16,"log"],[432,21,471,19],[432,22,471,20],[432,52,471,50,"beforeCount"],[432,63,471,61],[432,66,471,64,"afterCount"],[432,76,471,74],[432,102,471,100],[432,103,471,101],[433,8,472,6],[435,8,474,6],[436,8,475,6],[437,8,476,6],[437,12,476,12,"MAX_ENEMIES"],[437,23,476,23],[437,26,476,26],[437,28,476,28],[437,29,476,29],[437,30,476,30],[438,8,477,6],[438,12,477,12,"MIN_SPAWN_DELAY"],[438,27,477,27],[438,30,477,30],[438,33,477,33],[438,34,477,34],[438,35,477,35],[439,8,478,6],[439,12,478,12,"now"],[439,15,478,15],[439,18,478,18,"Date"],[439,22,478,22],[439,23,478,23,"now"],[439,26,478,26],[439,27,478,27],[439,28,478,28],[440,8,479,6],[440,12,479,12,"hasBoss"],[440,19,479,19],[440,22,479,22,"newState"],[440,30,479,30],[440,31,479,31,"enemies"],[440,38,479,38],[440,39,479,39,"some"],[440,43,479,43],[440,44,479,44,"enemy"],[440,49,479,49],[440,53,479,53,"enemy"],[440,58,479,58],[440,59,479,59,"isBoss"],[440,65,479,65],[440,66,479,66],[442,8,481,6],[443,8,482,6],[443,12,482,10],[443,13,482,11,"newState"],[443,21,482,19],[443,22,482,20,"lastSpawnTime"],[443,35,482,33],[443,37,482,35],[444,10,483,8,"newState"],[444,18,483,16],[444,19,483,17,"lastSpawnTime"],[444,32,483,30],[444,35,483,33,"now"],[444,38,483,36],[445,8,484,6],[446,8,486,6,"console"],[446,15,486,13],[446,16,486,14,"log"],[446,19,486,17],[446,20,486,18],[446,53,486,51,"newState"],[446,61,486,59],[446,62,486,60,"enemies"],[446,69,486,67],[446,70,486,68,"length"],[446,76,486,74],[446,85,486,83,"MAX_ENEMIES"],[446,96,486,94],[446,109,486,107,"hasBoss"],[446,116,486,114],[446,118,486,116],[446,119,486,117],[448,8,488,6],[449,8,489,6],[449,12,489,10],[449,13,489,11,"hasBoss"],[449,20,489,18],[449,24,489,22,"newState"],[449,32,489,30],[449,33,489,31,"enemies"],[449,40,489,38],[449,41,489,39,"length"],[449,47,489,45],[449,50,489,48,"MAX_ENEMIES"],[449,61,489,59],[449,65,489,64,"now"],[449,68,489,67],[449,71,489,70,"newState"],[449,79,489,78],[449,80,489,79,"lastSpawnTime"],[449,93,489,92],[449,97,489,97,"MIN_SPAWN_DELAY"],[449,112,489,112],[449,114,489,114],[450,10,490,8,"console"],[450,17,490,15],[450,18,490,16,"log"],[450,21,490,19],[450,22,490,20],[450,43,490,41,"newState"],[450,51,490,49],[450,52,490,50,"enemies"],[450,59,490,57],[450,60,490,58,"length"],[450,66,490,64],[450,69,490,67],[450,70,490,68],[450,74,490,72,"MAX_ENEMIES"],[450,85,490,83],[450,87,490,85],[450,88,490,86],[451,10,491,8,"spawnTestEnemy"],[451,24,491,22],[451,25,491,23,"newState"],[451,33,491,31],[451,34,491,32],[452,10,492,8,"newState"],[452,18,492,16],[452,19,492,17,"lastSpawnTime"],[452,32,492,30],[452,35,492,33,"now"],[452,38,492,36],[453,8,493,6],[454,8,495,6],[454,15,495,13,"newState"],[454,23,495,21],[455,6,496,4],[455,7,496,5],[455,47,496,6],[457,6,498,4],[458,6,499,4,"console"],[458,13,499,11],[458,14,499,12,"log"],[458,17,499,15],[458,18,499,16],[458,50,499,48,"enemiesToKill"],[458,63,499,61],[458,64,499,62,"length"],[458,70,499,68],[458,101,499,99],[458,102,499,100],[459,6,501,4,"enemiesToKill"],[459,19,501,17],[459,20,501,18,"forEach"],[459,27,501,25],[459,28,501,26],[459,29,501,27,"enemy"],[459,34,501,32],[459,36,501,34,"index"],[459,41,501,39],[459,46,501,44],[460,8,502,6,"console"],[460,15,502,13],[460,16,502,14,"log"],[460,19,502,17],[460,20,502,18],[460,57,502,55,"index"],[460,62,502,60],[460,65,502,63],[460,66,502,64],[460,70,502,68,"enemiesToKill"],[460,83,502,81],[460,84,502,82,"length"],[460,90,502,88],[460,104,502,102,"enemy"],[460,109,502,107],[460,110,502,108,"id"],[460,112,502,110],[460,114,502,112],[460,115,502,113],[461,8,503,6,"handleEnemyKill"],[461,23,503,21],[461,24,503,22,"enemy"],[461,29,503,27],[461,30,503,28],[462,6,504,4],[462,7,504,5],[462,8,504,6],[463,4,505,2],[463,5,505,3],[463,7,505,5],[463,8,505,6,"handleEnemyKill"],[463,23,505,21],[463,24,505,22],[463,25,505,23],[463,26,505,24],[463,27,505,25],[465,4,507,2],[466,4,508,2],[466,8,508,8,"findClosestEnemyInternal"],[466,32,508,32],[466,35,508,36,"enemies"],[466,42,508,58],[466,46,508,83],[467,6,509,4],[467,10,509,8,"enemies"],[467,17,509,15],[467,18,509,16,"length"],[467,24,509,22],[467,29,509,27],[467,30,509,28],[467,32,509,30],[467,39,509,37],[467,43,509,41],[469,6,511,4],[470,6,512,4],[470,10,512,10,"SCREEN_WIDTH"],[470,22,512,22],[470,25,512,25],[470,28,512,28],[471,6,513,4],[471,10,513,10,"GAME_AREA_HEIGHT"],[471,26,513,26],[471,29,513,29],[471,32,513,32],[471,35,513,35],[471,38,513,38],[471,39,513,39],[471,40,513,40],[472,6,514,4],[472,10,514,10,"ninjaX"],[472,16,514,16],[472,19,514,19,"SCREEN_WIDTH"],[472,31,514,31],[472,34,514,34],[472,35,514,35],[473,6,515,4],[473,10,515,10,"ninjaY"],[473,16,515,16],[473,19,515,19,"GAME_AREA_HEIGHT"],[473,35,515,35],[473,38,515,38],[473,39,515,39],[474,6,517,4],[474,10,517,8,"closestEnemy"],[474,22,517,20],[474,25,517,23,"enemies"],[474,32,517,30],[474,33,517,31],[474,34,517,32],[474,35,517,33],[475,6,518,4],[475,10,518,8,"closestDistance"],[475,25,518,23],[475,28,518,26,"Infinity"],[475,36,518,34],[476,6,520,4,"enemies"],[476,13,520,11],[476,14,520,12,"forEach"],[476,21,520,19],[476,22,520,20,"enemy"],[476,27,520,25],[476,31,520,29],[477,8,521,6],[477,12,521,12,"distance"],[477,20,521,20],[477,23,521,23,"Math"],[477,27,521,27],[477,28,521,28,"sqrt"],[477,32,521,32],[477,33,522,8,"Math"],[477,37,522,12],[477,38,522,13,"pow"],[477,41,522,16],[477,42,522,17,"enemy"],[477,47,522,22],[477,48,522,23,"position"],[477,56,522,31],[477,57,522,32,"x"],[477,58,522,33],[477,61,522,36,"ninjaX"],[477,67,522,42],[477,69,522,44],[477,70,522,45],[477,71,522,46],[477,74,523,8,"Math"],[477,78,523,12],[477,79,523,13,"pow"],[477,82,523,16],[477,83,523,17,"enemy"],[477,88,523,22],[477,89,523,23,"position"],[477,97,523,31],[477,98,523,32,"y"],[477,99,523,33],[477,102,523,36,"ninjaY"],[477,108,523,42],[477,110,523,44],[477,111,523,45],[477,112,524,6],[477,113,524,7],[478,8,526,6],[478,12,526,10,"distance"],[478,20,526,18],[478,23,526,21,"closestDistance"],[478,38,526,36],[478,40,526,38],[479,10,527,8,"closestDistance"],[479,25,527,23],[479,28,527,26,"distance"],[479,36,527,34],[480,10,528,8,"closestEnemy"],[480,22,528,20],[480,25,528,23,"enemy"],[480,30,528,28],[481,8,529,6],[482,6,530,4],[482,7,530,5],[482,8,530,6],[483,6,532,4,"console"],[483,13,532,11],[483,14,532,12,"log"],[483,17,532,15],[483,18,532,16],[483,60,532,58,"closestDistance"],[483,75,532,73],[483,76,532,74,"toFixed"],[483,83,532,81],[483,84,532,82],[483,85,532,83],[483,86,532,84],[483,88,532,86],[483,89,532,87],[484,6,533,4],[484,13,533,11,"closestEnemy"],[484,25,533,23],[485,4,534,2],[485,5,534,3],[487,4,536,2],[488,4,537,2],[488,8,537,8,"findClosestEnemy"],[488,24,537,24],[488,27,537,27,"findClosestEnemy"],[488,28,537,27],[488,33,537,53],[489,6,538,4],[489,13,538,11,"findClosestEnemyInternal"],[489,37,538,35],[489,38,538,36,"combatState"],[489,49,538,47],[489,50,538,48,"enemies"],[489,57,538,55],[489,58,538,56],[490,4,539,2],[490,5,539,3],[492,4,541,2],[493,4,542,2],[493,8,542,2,"_useState7"],[493,18,542,2],[493,21,542,58],[493,25,542,58,"useState"],[493,31,542,66],[493,32,542,66,"useState"],[493,40,542,66],[493,42,542,91],[494,8,542,93,"x"],[494,9,542,94],[494,11,542,96],[494,12,542,97],[495,8,542,99,"y"],[495,9,542,100],[495,11,542,102],[496,6,542,104],[496,7,542,105],[496,8,542,106],[497,6,542,106,"_useState8"],[497,16,542,106],[497,23,542,106,"_slicedToArray"],[497,37,542,106],[497,38,542,106,"default"],[497,45,542,106],[497,47,542,106,"_useState7"],[497,57,542,106],[498,6,542,9,"currentNinjaPosition"],[498,26,542,29],[498,29,542,29,"_useState8"],[498,39,542,29],[499,6,542,31,"setCurrentNinjaPosition"],[499,29,542,54],[499,32,542,54,"_useState8"],[499,42,542,54],[500,4,543,2],[500,8,543,2,"_useState9"],[500,18,543,2],[500,21,543,60],[500,25,543,60,"useState"],[500,31,543,68],[500,32,543,68,"useState"],[500,40,543,68],[500,42,543,69],[500,47,543,74],[500,48,543,75],[501,6,543,75,"_useState0"],[501,16,543,75],[501,23,543,75,"_slicedToArray"],[501,37,543,75],[501,38,543,75,"default"],[501,45,543,75],[501,47,543,75,"_useState9"],[501,57,543,75],[502,6,543,9,"isManualControlActive"],[502,27,543,30],[502,30,543,30,"_useState0"],[502,40,543,30],[503,6,543,32,"setIsManualControlActive"],[503,30,543,56],[503,33,543,56,"_useState0"],[503,43,543,56],[505,4,545,2],[506,4,546,2],[506,8,546,8,"updateNinjaPosition"],[506,27,546,27],[506,30,546,30],[506,34,546,30,"useCallback"],[506,40,546,41],[506,41,546,41,"useCallback"],[506,52,546,41],[506,54,546,43,"newPosition"],[506,65,546,78],[506,69,546,83],[507,6,547,4,"setCurrentNinjaPosition"],[507,29,547,27],[507,30,547,28,"newPosition"],[507,41,547,39],[507,42,547,40],[508,4,548,2],[508,5,548,3],[508,7,548,5],[508,9,548,7],[508,10,548,8],[510,4,550,2],[511,4,551,2],[511,8,551,8,"setManualControlActive"],[511,30,551,30],[511,33,551,33],[511,37,551,33,"useCallback"],[511,43,551,44],[511,44,551,44,"useCallback"],[511,55,551,44],[511,57,551,46,"active"],[511,63,551,61],[511,67,551,66],[512,6,552,4,"setIsManualControlActive"],[512,30,552,28],[512,31,552,29,"active"],[512,37,552,35],[512,38,552,36],[513,6,553,4,"console"],[513,13,553,11],[513,14,553,12,"log"],[513,17,553,15],[513,18,553,16],[513,39,553,37,"active"],[513,45,553,43],[513,48,553,46],[513,59,553,57],[513,62,553,60],[513,75,553,73],[513,88,553,86,"active"],[513,94,553,92],[513,97,553,95],[513,105,553,103],[513,108,553,106],[513,117,553,115],[513,119,553,117],[513,120,553,118],[514,4,554,2],[514,5,554,3],[514,7,554,5],[514,9,554,7],[514,10,554,8],[516,4,556,2],[517,4,557,2],[517,8,557,8,"handleProjectileHit"],[517,27,557,27],[517,30,557,31,"projectile"],[517,40,557,59],[517,44,557,64],[518,6,558,4,"console"],[518,13,558,11],[518,14,558,12,"log"],[518,17,558,15],[518,18,558,16],[518,35,558,33,"projectile"],[518,45,558,43],[518,46,558,44,"id"],[518,48,558,46],[518,62,558,60,"projectile"],[518,72,558,70],[518,73,558,71,"targetEnemyId"],[518,86,558,84],[518,94,558,92,"projectile"],[518,104,558,102],[518,105,558,103,"damage"],[518,111,558,109],[518,120,558,118],[518,121,558,119],[519,6,560,4,"setCombatState"],[519,20,560,18],[519,21,560,19,"prev"],[519,25,560,23],[519,29,560,27],[520,8,561,6],[520,12,561,12,"newState"],[520,20,561,20],[520,23,561,23],[521,10,561,25],[521,13,561,28,"prev"],[522,8,561,33],[522,9,561,34],[524,8,563,6],[525,8,564,6],[525,12,564,12,"enemyIndex"],[525,22,564,22],[525,25,564,25,"newState"],[525,33,564,33],[525,34,564,34,"enemies"],[525,41,564,41],[525,42,564,42,"findIndex"],[525,51,564,51],[525,52,564,52,"e"],[525,53,564,53],[525,57,564,57,"e"],[525,58,564,58],[525,59,564,59,"id"],[525,61,564,61],[525,66,564,66,"projectile"],[525,76,564,76],[525,77,564,77,"targetEnemyId"],[525,90,564,90],[525,91,564,91],[526,8,565,6],[526,12,565,10,"enemyIndex"],[526,22,565,20],[526,26,565,24],[526,27,565,25],[526,29,565,27],[527,10,566,8,"newState"],[527,18,566,16],[527,19,566,17,"enemies"],[527,26,566,24],[527,29,566,27],[527,30,566,28],[527,33,566,31,"newState"],[527,41,566,39],[527,42,566,40,"enemies"],[527,49,566,47],[527,50,566,48],[528,10,567,8,"newState"],[528,18,567,16],[528,19,567,17,"enemies"],[528,26,567,24],[528,27,567,25,"enemyIndex"],[528,37,567,35],[528,38,567,36],[528,41,567,39],[529,12,568,10],[529,15,568,13,"newState"],[529,23,568,21],[529,24,568,22,"enemies"],[529,31,568,29],[529,32,568,30,"enemyIndex"],[529,42,568,40],[529,43,568,41],[530,12,569,10,"health"],[530,18,569,16],[530,20,569,18,"newState"],[530,28,569,26],[530,29,569,27,"enemies"],[530,36,569,34],[530,37,569,35,"enemyIndex"],[530,47,569,45],[530,48,569,46],[530,49,569,47,"health"],[530,55,569,53],[530,58,569,56,"projectile"],[530,68,569,66],[530,69,569,67,"damage"],[530,75,569,73],[531,12,570,10,"lastDamaged"],[531,23,570,21],[531,25,570,23,"combatEngine"],[531,44,570,35],[531,45,570,35,"combatEngine"],[531,57,570,35],[531,58,570,36,"getCurrentTick"],[531,72,570,50],[531,73,570,51],[532,10,571,8],[532,11,571,9],[533,10,573,8,"console"],[533,17,573,15],[533,18,573,16,"log"],[533,21,573,19],[533,22,573,20],[533,34,573,32,"projectile"],[533,44,573,42],[533,45,573,43,"targetEnemyId"],[533,58,573,56],[533,70,573,68,"newState"],[533,78,573,76],[533,79,573,77,"enemies"],[533,86,573,84],[533,87,573,85,"enemyIndex"],[533,97,573,95],[533,98,573,96],[533,99,573,97,"health"],[533,105,573,103],[533,109,573,107,"newState"],[533,117,573,115],[533,118,573,116,"enemies"],[533,125,573,123],[533,126,573,124,"enemyIndex"],[533,136,573,134],[533,137,573,135],[533,138,573,136,"maxHealth"],[533,147,573,145],[533,149,573,147],[533,150,573,148],[534,8,574,6],[535,8,576,6],[535,15,576,13,"newState"],[535,23,576,21],[536,6,577,4],[536,7,577,5],[536,8,577,6],[538,6,579,4],[539,6,580,4,"setProjectiles"],[539,20,580,18],[539,21,580,19,"prev"],[539,25,580,23],[539,29,580,27,"prev"],[539,33,580,31],[539,34,580,32,"filter"],[539,40,580,38],[539,41,580,39,"p"],[539,42,580,40],[539,46,580,44,"p"],[539,47,580,45],[539,48,580,46,"id"],[539,50,580,48],[539,55,580,53,"projectile"],[539,65,580,63],[539,66,580,64,"id"],[539,68,580,66],[539,69,580,67],[539,70,580,68],[540,4,581,2],[540,5,581,3],[542,4,583,2],[543,4,584,2],[543,8,584,8,"castAbility"],[543,19,584,19],[543,22,584,22,"castAbility"],[543,23,584,23,"state"],[543,28,584,41],[543,30,584,43,"slotIndex"],[543,39,584,60],[543,44,584,65],[544,6,585,4],[544,10,585,10,"deck"],[544,14,585,14],[544,17,585,17,"state"],[544,22,585,22],[544,23,585,23,"abilityManager"],[544,37,585,37],[544,38,585,38,"getDeck"],[544,45,585,45],[544,46,585,46],[544,47,585,47],[545,6,586,4],[545,10,586,10,"ability"],[545,17,586,17],[545,20,586,20,"deck"],[545,24,586,24],[545,25,586,25,"slots"],[545,30,586,30],[545,31,586,31,"slotIndex"],[545,40,586,40],[545,41,586,41],[546,6,587,4],[546,10,587,8],[546,11,587,9,"ability"],[546,18,587,16],[546,20,587,18],[548,6,589,4],[549,6,590,4],[549,10,590,8,"damage"],[549,16,590,14],[549,19,590,17,"ability"],[549,26,590,24],[549,27,590,25,"stats"],[549,32,590,30],[549,33,590,31,"baseDamage"],[549,43,590,41],[551,6,592,4],[552,6,593,4,"deck"],[552,10,593,8],[552,11,593,9,"activeSynergies"],[552,26,593,24],[552,27,593,25,"forEach"],[552,34,593,32],[552,35,593,33,"synergy"],[552,42,593,40],[552,46,593,44],[553,8,594,6],[553,12,594,10,"synergy"],[553,19,594,17],[553,20,594,18,"bonus"],[553,25,594,23],[553,26,594,24,"damageBonus"],[553,37,594,35],[553,41,595,10,"synergy"],[553,48,595,17],[553,49,595,18,"requiredTags"],[553,61,595,30],[553,62,595,31,"some"],[553,66,595,35],[553,67,595,36,"tag"],[553,70,595,39],[553,74,595,43,"ability"],[553,81,595,50],[553,82,595,51,"tags"],[553,86,595,55],[553,87,595,56,"includes"],[553,95,595,64],[553,96,595,65,"tag"],[553,99,595,68],[553,100,595,69],[553,101,595,70],[553,103,595,72],[554,10,596,8,"damage"],[554,16,596,14],[554,20,596,19],[554,21,596,20],[554,24,596,23,"synergy"],[554,31,596,30],[554,32,596,31,"bonus"],[554,37,596,36],[554,38,596,37,"damageBonus"],[554,49,596,48],[554,52,596,51],[554,55,596,55],[555,8,597,6],[556,6,598,4],[556,7,598,5],[556,8,598,6],[558,6,600,4],[559,6,601,4],[559,10,601,10,"isAOE"],[559,15,601,15],[559,18,601,18,"ability"],[559,25,601,25],[559,26,601,26,"effects"],[559,33,601,33],[559,34,601,34,"includes"],[559,42,601,42],[559,43,601,43],[559,48,601,48],[559,49,601,49],[559,53,601,53,"ability"],[559,60,601,60],[559,61,601,61,"stats"],[559,66,601,66],[559,67,601,67,"aoeRadius"],[559,76,601,76],[560,6,603,4],[560,10,603,8,"isAOE"],[560,15,603,13],[560,17,603,15],[561,8,604,6,"console"],[561,15,604,13],[561,16,604,14,"log"],[561,19,604,17],[561,20,604,18],[561,39,604,37,"ability"],[561,46,604,44],[561,47,604,45,"name"],[561,51,604,49],[561,67,604,65,"ability"],[561,74,604,72],[561,75,604,73,"stats"],[561,80,604,78],[561,81,604,79,"aoeRadius"],[561,90,604,88],[561,92,604,90],[561,93,604,91],[563,8,606,6],[564,8,607,6],[564,12,607,12,"ninjaX"],[564,18,607,18],[564,21,607,21,"currentNinjaPosition"],[564,41,607,41],[564,42,607,42,"x"],[564,43,607,43],[564,46,607,46],[564,48,607,48],[564,49,607,49],[564,50,607,50],[565,8,608,6],[565,12,608,12,"ninjaY"],[565,18,608,18],[565,21,608,21,"currentNinjaPosition"],[565,41,608,41],[565,42,608,42,"y"],[565,43,608,43],[565,46,608,46],[565,48,608,48],[566,8,609,6],[566,12,609,12,"aoeRadius"],[566,21,609,21],[566,24,609,24,"ability"],[566,31,609,31],[566,32,609,32,"stats"],[566,37,609,37],[566,38,609,38,"aoeRadius"],[566,47,609,47],[567,8,611,6],[567,12,611,12,"enemiesInRange"],[567,26,611,26],[567,29,611,29,"state"],[567,34,611,34],[567,35,611,35,"enemies"],[567,42,611,42],[567,43,611,43,"filter"],[567,49,611,49],[567,50,611,50,"enemy"],[567,55,611,55],[567,59,611,59],[568,10,612,8],[568,14,612,14,"enemyX"],[568,20,612,20],[568,23,612,23,"enemy"],[568,28,612,28],[568,29,612,29,"position"],[568,37,612,37],[568,38,612,38,"x"],[568,39,612,39],[568,42,612,42],[568,46,612,46],[568,47,612,47],[568,48,612,48],[569,10,613,8],[569,14,613,14,"enemyY"],[569,20,613,20],[569,23,613,23,"enemy"],[569,28,613,28],[569,29,613,29,"position"],[569,37,613,37],[569,38,613,38,"y"],[569,39,613,39],[569,42,613,42],[569,46,613,46],[570,10,614,8],[570,14,614,14,"distance"],[570,22,614,22],[570,25,614,25,"Math"],[570,29,614,29],[570,30,614,30,"sqrt"],[570,34,614,34],[570,35,614,35,"Math"],[570,39,614,39],[570,40,614,40,"pow"],[570,43,614,43],[570,44,614,44,"enemyX"],[570,50,614,50],[570,53,614,53,"ninjaX"],[570,59,614,59],[570,61,614,61],[570,62,614,62],[570,63,614,63],[570,66,614,66,"Math"],[570,70,614,70],[570,71,614,71,"pow"],[570,74,614,74],[570,75,614,75,"enemyY"],[570,81,614,81],[570,84,614,84,"ninjaY"],[570,90,614,90],[570,92,614,92],[570,93,614,93],[570,94,614,94],[570,95,614,95],[571,10,615,8],[571,17,615,15,"distance"],[571,25,615,23],[571,29,615,27,"aoeRadius"],[571,38,615,36],[572,8,616,6],[572,9,616,7],[572,10,616,8],[573,8,618,6,"console"],[573,15,618,13],[573,16,618,14,"log"],[573,19,618,17],[573,20,618,18],[573,45,618,43,"enemiesInRange"],[573,59,618,57],[573,60,618,58,"length"],[573,66,618,64],[573,88,618,86,"aoeRadius"],[573,97,618,95],[573,107,618,105],[573,108,618,106],[575,8,620,6],[576,8,621,6,"enemiesInRange"],[576,22,621,20],[576,23,621,21,"forEach"],[576,30,621,28],[576,31,621,29,"enemy"],[576,36,621,34],[576,40,621,38],[577,10,622,8],[577,14,622,14,"damageResult"],[577,26,622,26],[577,29,622,29,"DamageCalculator"],[577,48,622,45],[577,49,622,45,"DamageCalculator"],[577,65,622,45],[577,66,622,46,"calculateDamage"],[577,81,622,61],[577,82,622,62,"damage"],[577,88,622,68],[577,90,622,70,"state"],[577,95,622,75],[577,96,622,76,"playerStats"],[577,107,622,87],[577,109,622,89,"enemy"],[577,114,622,94],[577,115,622,95,"stats"],[577,120,622,100],[577,121,622,101],[579,10,624,8],[580,10,625,8],[580,14,625,14,"delay"],[580,19,625,19],[580,22,625,22,"Math"],[580,26,625,26],[580,27,625,27,"random"],[580,33,625,33],[580,34,625,34],[580,35,625,35],[580,38,625,38],[580,41,625,41],[580,42,625,42],[580,43,625,43],[581,10,626,8,"setTimeout"],[581,20,626,18],[581,21,626,19],[581,27,626,25],[582,12,627,10,"createProjectile"],[582,28,627,26],[582,29,627,27,"enemy"],[582,34,627,32],[582,36,627,34,"damageResult"],[582,48,627,46],[582,49,627,47,"damage"],[582,55,627,53],[582,57,627,55,"currentNinjaPosition"],[582,77,627,75],[582,79,627,77],[583,14,628,12,"id"],[583,16,628,14],[583,18,628,16,"ability"],[583,25,628,23],[583,26,628,24,"id"],[583,28,628,26],[584,14,629,12,"name"],[584,18,629,16],[584,20,629,18,"ability"],[584,27,629,25],[584,28,629,26,"name"],[584,32,629,30],[585,14,630,12,"icon"],[585,18,630,16],[585,20,630,18,"ability"],[585,27,630,25],[585,28,630,26,"icon"],[586,12,631,10],[586,13,631,11],[586,14,631,12],[587,10,632,8],[587,11,632,9],[587,13,632,11,"delay"],[587,18,632,16],[587,19,632,17],[588,10,634,8,"console"],[588,17,634,15],[588,18,634,16,"log"],[588,21,634,19],[588,22,634,20],[588,37,634,35,"enemy"],[588,42,634,40],[588,43,634,41,"name"],[588,47,634,45],[588,55,634,53,"damageResult"],[588,67,634,65],[588,68,634,66,"damage"],[588,74,634,72],[588,97,634,95,"delay"],[588,102,634,100],[588,103,634,101,"toFixed"],[588,110,634,108],[588,111,634,109],[588,112,634,110],[588,113,634,111],[588,118,634,116],[588,119,634,117],[589,8,635,6],[589,9,635,7],[589,10,635,8],[590,8,637,6,"console"],[590,15,637,13],[590,16,637,14,"log"],[590,19,637,17],[590,20,637,18],[590,26,637,24,"ability"],[590,33,637,31],[590,34,637,32,"name"],[590,38,637,36],[590,56,637,54,"enemiesInRange"],[590,70,637,68],[590,71,637,69,"length"],[590,77,637,75],[590,93,637,91,"damage"],[590,99,637,97],[590,118,637,116],[590,119,637,117],[591,6,639,4],[591,7,639,5],[591,13,639,11],[592,8,640,6],[593,8,641,6],[593,12,641,12,"target"],[593,18,641,18],[593,21,641,21,"findClosestEnemyInternal"],[593,45,641,45],[593,46,641,46,"state"],[593,51,641,51],[593,52,641,52,"enemies"],[593,59,641,59],[593,60,641,60],[594,8,642,6],[594,12,642,10],[594,13,642,11,"target"],[594,19,642,17],[594,21,642,19],[595,8,644,6],[595,12,644,12,"damageResult"],[595,24,644,24],[595,27,644,27,"DamageCalculator"],[595,46,644,43],[595,47,644,43,"DamageCalculator"],[595,63,644,43],[595,64,644,44,"calculateDamage"],[595,79,644,59],[595,80,644,60,"damage"],[595,86,644,66],[595,88,644,68,"state"],[595,93,644,73],[595,94,644,74,"playerStats"],[595,105,644,85],[595,107,644,87,"target"],[595,113,644,93],[595,114,644,94,"stats"],[595,119,644,99],[595,120,644,100],[597,8,646,6],[598,8,647,6,"createProjectile"],[598,24,647,22],[598,25,647,23,"target"],[598,31,647,29],[598,33,647,31,"damageResult"],[598,45,647,43],[598,46,647,44,"damage"],[598,52,647,50],[598,54,647,52,"currentNinjaPosition"],[598,74,647,72],[598,76,647,74],[599,10,648,8,"id"],[599,12,648,10],[599,14,648,12,"ability"],[599,21,648,19],[599,22,648,20,"id"],[599,24,648,22],[600,10,649,8,"name"],[600,14,649,12],[600,16,649,14,"ability"],[600,23,649,21],[600,24,649,22,"name"],[600,28,649,26],[601,10,650,8,"icon"],[601,14,650,12],[601,16,650,14,"ability"],[601,23,650,21],[601,24,650,22,"icon"],[602,8,651,6],[602,9,651,7],[602,10,651,8],[603,8,653,6,"console"],[603,15,653,13],[603,16,653,14,"log"],[603,19,653,17],[603,20,653,18],[603,26,653,24,"ability"],[603,33,653,31],[603,34,653,32,"name"],[603,38,653,36],[603,66,653,64,"damageResult"],[603,78,653,76],[603,79,653,77,"damage"],[603,85,653,83],[603,95,653,93,"damageResult"],[603,107,653,105],[603,108,653,106,"isCritical"],[603,118,653,116],[603,121,653,119],[603,131,653,129],[603,134,653,132],[603,136,653,134],[603,138,653,136],[603,139,653,137],[604,6,654,4],[606,6,656,4],[607,6,657,4],[607,10,657,8,"ability"],[607,17,657,15],[607,18,657,16,"effects"],[607,25,657,23],[607,26,657,24,"includes"],[607,34,657,32],[607,35,657,33],[607,40,657,38],[607,41,657,39],[607,45,657,43,"ability"],[607,52,657,50],[607,53,657,51,"stats"],[607,58,657,56],[607,59,657,57,"duration"],[607,67,657,65],[607,69,657,67],[608,8,658,6],[608,12,658,12,"targets"],[608,19,658,19],[608,22,658,22,"isAOE"],[608,27,658,27],[608,30,659,8,"state"],[608,35,659,13],[608,36,659,14,"enemies"],[608,43,659,21],[608,44,659,22,"filter"],[608,50,659,28],[608,51,659,29,"enemy"],[608,56,659,34],[608,60,659,38],[609,10,660,10],[609,14,660,16,"ninjaX"],[609,20,660,22],[609,23,660,25,"currentNinjaPosition"],[609,43,660,45],[609,44,660,46,"x"],[609,45,660,47],[609,48,660,50],[609,50,660,52],[610,10,661,10],[610,14,661,16,"ninjaY"],[610,20,661,22],[610,23,661,25,"currentNinjaPosition"],[610,43,661,45],[610,44,661,46,"y"],[610,45,661,47],[610,48,661,50],[610,50,661,52],[611,10,662,10],[611,14,662,16,"enemyX"],[611,20,662,22],[611,23,662,25,"enemy"],[611,28,662,30],[611,29,662,31,"position"],[611,37,662,39],[611,38,662,40,"x"],[611,39,662,41],[611,42,662,44],[611,46,662,48],[612,10,663,10],[612,14,663,16,"enemyY"],[612,20,663,22],[612,23,663,25,"enemy"],[612,28,663,30],[612,29,663,31,"position"],[612,37,663,39],[612,38,663,40,"y"],[612,39,663,41],[612,42,663,44],[612,46,663,48],[613,10,664,10],[613,14,664,16,"distance"],[613,22,664,24],[613,25,664,27,"Math"],[613,29,664,31],[613,30,664,32,"sqrt"],[613,34,664,36],[613,35,664,37,"Math"],[613,39,664,41],[613,40,664,42,"pow"],[613,43,664,45],[613,44,664,46,"enemyX"],[613,50,664,52],[613,53,664,55,"ninjaX"],[613,59,664,61],[613,61,664,63],[613,62,664,64],[613,63,664,65],[613,66,664,68,"Math"],[613,70,664,72],[613,71,664,73,"pow"],[613,74,664,76],[613,75,664,77,"enemyY"],[613,81,664,83],[613,84,664,86,"ninjaY"],[613,90,664,92],[613,92,664,94],[613,93,664,95],[613,94,664,96],[613,95,664,97],[614,10,665,10],[614,17,665,17,"distance"],[614,25,665,25],[614,29,665,29,"ability"],[614,36,665,36],[614,37,665,37,"stats"],[614,42,665,42],[614,43,665,43,"aoeRadius"],[614,52,665,52],[615,8,666,8],[615,9,666,9],[615,10,666,10],[615,13,667,8],[615,14,667,9,"findClosestEnemyInternal"],[615,38,667,33],[615,39,667,34,"state"],[615,44,667,39],[615,45,667,40,"enemies"],[615,52,667,47],[615,53,667,48],[615,54,667,49],[615,55,667,50,"filter"],[615,61,667,56],[615,62,667,57,"Boolean"],[615,69,667,64],[615,70,667,65],[616,8,669,6,"targets"],[616,15,669,13],[616,16,669,14,"forEach"],[616,23,669,21],[616,24,669,22,"target"],[616,30,669,28],[616,34,669,32],[617,10,670,8,"state"],[617,15,670,13],[617,16,670,14,"statusEffects"],[617,29,670,27],[617,30,670,28,"addEffect"],[617,39,670,37],[617,40,670,38,"target"],[617,46,670,44],[617,47,670,45,"id"],[617,49,670,47],[617,51,670,49],[618,12,671,10,"id"],[618,14,671,12],[618,16,671,14],[618,19,671,17,"ability"],[618,26,671,24],[618,27,671,25,"id"],[618,29,671,27],[618,35,671,33],[619,12,672,10,"type"],[619,16,672,14],[619,18,672,16],[619,23,672,21],[620,12,673,10,"remainingTicks"],[620,26,673,24],[620,28,673,26,"Math"],[620,32,673,30],[620,33,673,31,"floor"],[620,38,673,36],[620,39,673,37,"ability"],[620,46,673,44],[620,47,673,45,"stats"],[620,52,673,50],[620,53,673,51,"duration"],[620,61,673,59],[620,64,673,62],[620,66,673,64],[620,67,673,65],[621,12,674,10,"tickInterval"],[621,24,674,22],[621,26,674,24],[621,28,674,26],[622,12,675,10,"lastTick"],[622,20,675,18],[622,22,675,20,"state"],[622,27,675,25],[622,28,675,26,"currentTick"],[622,39,675,37],[623,12,676,10,"value"],[623,17,676,15],[623,19,676,17,"Math"],[623,23,676,21],[623,24,676,22,"floor"],[623,29,676,27],[623,30,676,28,"damage"],[623,36,676,34],[623,39,676,37],[623,42,676,40],[623,43,676,41],[624,12,677,10,"stackable"],[624,21,677,19],[624,23,677,21],[625,10,678,8],[625,11,678,9],[625,12,678,10],[626,8,679,6],[626,9,679,7],[626,10,679,8],[627,6,680,4],[629,6,682,4],[630,6,683,4],[630,10,683,8,"ability"],[630,17,683,15],[630,18,683,16,"effects"],[630,25,683,23],[630,26,683,24,"includes"],[630,34,683,32],[630,35,683,33],[630,41,683,39],[630,42,683,40],[630,46,683,44,"ability"],[630,53,683,51],[630,54,683,52,"id"],[630,56,683,54],[630,61,683,59],[630,75,683,73],[630,77,683,75],[631,8,684,6,"console"],[631,15,684,13],[631,16,684,14,"log"],[631,19,684,17],[631,20,684,18],[631,66,684,64,"ability"],[631,73,684,71],[631,74,684,72,"stats"],[631,79,684,77],[631,80,684,78,"duration"],[631,88,684,86],[631,98,684,96],[631,99,684,97],[633,8,686,6],[634,8,687,6],[634,12,687,12,"cloneX"],[634,18,687,18],[634,21,687,21,"currentNinjaPosition"],[634,41,687,41],[634,42,687,42,"x"],[634,43,687,43],[634,46,687,46],[634,48,687,48],[634,49,687,49],[634,50,687,50],[635,8,688,6],[635,12,688,12,"cloneY"],[635,18,688,18],[635,21,688,21,"currentNinjaPosition"],[635,41,688,41],[635,42,688,42,"y"],[635,43,688,43],[635,46,688,46],[635,48,688,48],[635,49,688,49],[635,50,688,50],[637,8,690,6,"state"],[637,13,690,11],[637,14,690,12,"shadowClone"],[637,25,690,23],[637,28,690,26],[638,10,691,8,"id"],[638,12,691,10],[638,14,691,12],[638,30,691,28,"Date"],[638,34,691,32],[638,35,691,33,"now"],[638,38,691,36],[638,39,691,37],[638,40,691,38],[638,42,691,40],[639,10,692,8,"remainingTicks"],[639,24,692,22],[639,26,692,24,"Math"],[639,30,692,28],[639,31,692,29,"floor"],[639,36,692,34],[639,37,692,35,"ability"],[639,44,692,42],[639,45,692,43,"stats"],[639,50,692,48],[639,51,692,49,"duration"],[639,59,692,57],[639,62,692,60],[639,64,692,62],[639,65,692,63],[640,10,692,65],[641,10,693,8,"position"],[641,18,693,16],[641,20,693,18],[642,12,693,20,"x"],[642,13,693,21],[642,15,693,23,"cloneX"],[642,21,693,29],[643,12,693,31,"y"],[643,13,693,32],[643,15,693,34,"cloneY"],[644,10,693,41],[644,11,693,42],[645,10,694,8,"damageMultiplier"],[645,26,694,24],[645,28,694,26],[645,31,694,29],[645,32,694,31],[646,8,695,6],[646,9,695,7],[647,8,697,6,"console"],[647,15,697,13],[647,16,697,14,"log"],[647,19,697,17],[647,20,697,18],[647,63,697,61,"ability"],[647,70,697,68],[647,71,697,69,"stats"],[647,76,697,74],[647,77,697,75,"duration"],[647,85,697,83],[647,108,697,106],[647,109,697,107],[648,6,698,4],[649,4,699,2],[649,5,699,3],[651,4,701,2],[652,4,702,2],[652,8,702,8,"createProjectile"],[652,24,702,24],[652,27,702,27,"createProjectile"],[652,28,702,28,"targetEnemy"],[652,39,702,52],[652,41,702,54,"damage"],[652,47,702,68],[652,49,702,70,"ninjaPos"],[652,57,702,103],[652,59,702,105,"abilityInfo"],[652,70,702,159],[652,75,702,164],[653,6,703,4],[653,10,703,8],[653,11,703,9,"targetEnemy"],[653,22,703,20],[653,24,703,22],[654,8,704,6,"console"],[654,15,704,13],[654,16,704,14,"log"],[654,19,704,17],[654,20,704,18],[654,65,704,63],[654,66,704,64],[655,8,705,6],[655,15,705,13],[655,19,705,17],[656,6,706,4],[657,6,708,4],[657,10,708,10,"SCREEN_WIDTH"],[657,22,708,22],[657,25,708,25],[657,28,708,28],[658,6,709,4],[658,10,709,10,"GAME_AREA_HEIGHT"],[658,26,709,26],[658,29,709,29],[658,32,709,32],[658,35,709,35],[658,38,709,38],[658,39,709,39],[658,40,709,40],[659,6,710,4],[659,10,710,10,"NINJA_SIZE"],[659,20,710,20],[659,23,710,23],[659,25,710,25],[661,6,712,4],[662,6,713,4],[662,10,713,10,"ninjaX"],[662,16,713,16],[662,19,713,19,"ninjaPos"],[662,27,713,27],[662,30,713,30,"ninjaPos"],[662,38,713,38],[662,39,713,39,"x"],[662,40,713,40],[662,43,713,43,"NINJA_SIZE"],[662,53,713,53],[662,56,713,56],[662,57,713,57],[662,60,713,60,"SCREEN_WIDTH"],[662,72,713,72],[662,75,713,75],[662,76,713,76],[663,6,714,4],[663,10,714,10,"ninjaY"],[663,16,714,16],[663,19,714,19,"ninjaPos"],[663,27,714,27],[663,30,714,30,"ninjaPos"],[663,38,714,38],[663,39,714,39,"y"],[663,40,714,40],[663,43,714,43,"NINJA_SIZE"],[663,53,714,53],[663,56,714,56],[663,57,714,57],[663,60,714,60,"GAME_AREA_HEIGHT"],[663,76,714,76],[663,79,714,79],[663,80,714,80],[664,6,715,4],[664,10,715,10,"ENEMY_SIZE"],[664,20,715,20],[664,23,715,23],[664,25,715,25],[665,6,717,4],[665,10,717,10,"projectileId"],[665,22,717,22],[665,25,717,25],[665,33,717,33,"Date"],[665,37,717,37],[665,38,717,38,"now"],[665,41,717,41],[665,42,717,42],[665,43,717,43],[665,47,717,47,"Math"],[665,51,717,51],[665,52,717,52,"random"],[665,58,717,58],[665,59,717,59],[665,60,717,60],[665,62,717,62],[666,6,719,4],[666,10,719,10,"projectile"],[666,20,719,38],[666,23,719,41],[667,8,720,6,"id"],[667,10,720,8],[667,12,720,10,"projectileId"],[667,24,720,22],[668,8,721,6,"x"],[668,9,721,7],[668,11,721,9,"ninjaX"],[668,17,721,15],[669,8,722,6,"y"],[669,9,722,7],[669,11,722,9,"ninjaY"],[669,17,722,15],[670,8,723,6,"targetX"],[670,15,723,13],[670,17,723,15,"targetEnemy"],[670,28,723,26],[670,29,723,27,"position"],[670,37,723,35],[670,38,723,36,"x"],[670,39,723,37],[670,42,723,40,"ENEMY_SIZE"],[670,52,723,50],[670,55,723,53],[670,56,723,54],[671,8,724,6,"targetY"],[671,15,724,13],[671,17,724,15,"targetEnemy"],[671,28,724,26],[671,29,724,27,"position"],[671,37,724,35],[671,38,724,36,"y"],[671,39,724,37],[671,42,724,40,"ENEMY_SIZE"],[671,52,724,50],[671,55,724,53],[671,56,724,54],[672,8,725,6,"targetEnemyId"],[672,21,725,19],[672,23,725,21,"targetEnemy"],[672,34,725,32],[672,35,725,33,"id"],[672,37,725,35],[673,8,726,6,"damage"],[673,14,726,12],[673,16,726,14,"damage"],[673,22,726,20],[674,8,727,6,"startTime"],[674,17,727,15],[674,19,727,17,"Date"],[674,23,727,21],[674,24,727,22,"now"],[674,27,727,25],[674,28,727,26],[674,29,727,27],[675,8,728,6,"duration"],[675,16,728,14],[675,18,728,16],[675,21,728,19],[676,8,728,21],[677,8,729,6],[678,8,730,6,"abilityId"],[678,17,730,15],[678,19,730,17,"abilityInfo"],[678,30,730,28],[678,32,730,30,"id"],[678,34,730,32],[678,38,730,36],[678,54,730,52],[679,8,731,6,"abilityName"],[679,19,731,17],[679,21,731,19,"abilityInfo"],[679,32,731,30],[679,34,731,32,"name"],[679,38,731,36],[679,42,731,40],[679,58,731,56],[680,8,732,6,"abilityIcon"],[680,19,732,17],[680,21,732,19,"abilityInfo"],[680,32,732,30],[680,34,732,32,"icon"],[680,38,732,36],[680,42,732,40],[680,46,732,44],[680,47,732,46],[681,6,733,4],[681,7,733,5],[682,6,735,4,"console"],[682,13,735,11],[682,14,735,12,"log"],[682,17,735,15],[682,18,735,16],[682,44,735,42,"abilityInfo"],[682,55,735,53],[682,57,735,55,"name"],[682,61,735,59],[682,65,735,63],[682,81,735,79],[682,101,735,99,"projectileId"],[682,113,735,111],[682,128,735,126,"targetEnemy"],[682,139,735,137],[682,140,735,138,"name"],[682,144,735,142],[682,152,735,150,"damage"],[682,158,735,156],[682,167,735,165],[682,168,735,166],[683,6,737,4,"console"],[683,13,737,11],[683,14,737,12,"log"],[683,17,737,15],[683,18,737,16],[683,53,737,51,"targetEnemy"],[683,64,737,62],[683,65,737,63,"id"],[683,67,737,65],[683,75,737,73,"damage"],[683,81,737,79],[683,90,737,88],[683,91,737,89],[684,6,738,4,"console"],[684,13,738,11],[684,14,738,12,"log"],[684,17,738,15],[684,18,738,16],[684,53,738,51,"ninjaX"],[684,59,738,57],[684,64,738,62,"ninjaY"],[684,70,738,68],[684,87,738,85,"projectile"],[684,97,738,95],[684,98,738,96,"targetX"],[684,105,738,103],[684,110,738,108,"projectile"],[684,120,738,118],[684,121,738,119,"targetY"],[684,128,738,126],[684,131,738,129],[684,132,738,130],[685,6,740,4,"setProjectiles"],[685,20,740,18],[685,21,740,19,"prev"],[685,25,740,23],[685,29,740,27],[685,30,740,28],[685,33,740,31,"prev"],[685,37,740,35],[685,39,740,37,"projectile"],[685,49,740,47],[685,50,740,48],[685,51,740,49],[687,6,742,4],[688,6,743,4,"setTimeout"],[688,16,743,14],[688,17,743,15],[688,23,743,21],[689,8,744,6,"handleProjectileHit"],[689,27,744,25],[689,28,744,26,"projectile"],[689,38,744,36],[689,39,744,37],[690,6,745,4],[690,7,745,5],[690,9,745,7],[690,12,745,10],[690,13,745,11],[691,6,747,4],[691,13,747,11,"projectile"],[691,23,747,21],[692,4,748,2],[692,5,748,3],[694,4,750,2],[695,4,751,2],[695,8,751,8,"spawnTestEnemy"],[695,22,751,22],[695,25,751,26,"state"],[695,30,751,44],[695,34,751,49],[696,6,752,4,"console"],[696,13,752,11],[696,14,752,12,"log"],[696,17,752,15],[696,18,752,16],[696,83,752,81],[696,84,752,82],[698,6,754,4],[699,6,755,4],[699,10,755,10,"zoneEnemy"],[699,19,755,19],[699,22,755,22,"spawnZoneEnemy"],[699,36,755,36],[699,37,755,37],[699,38,755,38],[700,6,756,4],[700,10,756,8],[700,11,756,9,"zoneEnemy"],[700,20,756,18],[700,22,756,20],[701,8,757,6,"console"],[701,15,757,13],[701,16,757,14,"log"],[701,19,757,17],[701,20,757,18],[701,76,757,74],[701,77,757,75],[702,8,758,6],[703,8,759,6,"spawnBasicTestEnemy"],[703,27,759,25],[703,28,759,26,"state"],[703,33,759,31],[703,34,759,32],[704,8,760,6],[705,6,761,4],[706,6,763,4,"console"],[706,13,763,11],[706,14,763,12,"log"],[706,17,763,15],[706,18,763,16],[706,44,763,42,"zoneEnemy"],[706,53,763,51],[706,54,763,52,"name"],[706,58,763,56],[706,63,763,61,"zoneEnemy"],[706,72,763,70],[706,73,763,71,"typeId"],[706,79,763,77],[706,94,763,92,"currentZone"],[706,105,763,103],[706,107,763,105,"id"],[706,109,763,107],[706,119,763,117,"currentZoneLevel"],[706,135,763,133],[706,137,763,135,"level"],[706,142,763,140],[706,144,763,142],[706,145,763,143],[708,6,765,4],[709,6,766,4],[709,10,766,10,"combatEnemy"],[709,21,766,34],[709,24,766,37],[710,8,767,6,"id"],[710,10,767,8],[710,12,767,10,"zoneEnemy"],[710,21,767,19],[710,22,767,20,"id"],[710,24,767,22],[711,8,768,6,"name"],[711,12,768,10],[711,14,768,12,"zoneEnemy"],[711,23,768,21],[711,24,768,22,"name"],[711,28,768,26],[712,8,769,6,"health"],[712,14,769,12],[712,16,769,14,"zoneEnemy"],[712,25,769,23],[712,26,769,24,"hp"],[712,28,769,26],[713,8,770,6,"maxHealth"],[713,17,770,15],[713,19,770,17,"zoneEnemy"],[713,28,770,26],[713,29,770,27,"maxHP"],[713,34,770,32],[714,8,771,6,"stats"],[714,13,771,11],[714,15,771,13],[715,10,772,8,"attack"],[715,16,772,14],[715,18,772,16,"zoneEnemy"],[715,27,772,25],[715,28,772,26,"attack"],[715,34,772,32],[716,10,773,8,"defense"],[716,17,773,15],[716,19,773,17],[716,21,773,19],[717,10,773,21],[718,10,774,8,"health"],[718,16,774,14],[718,18,774,16,"zoneEnemy"],[718,27,774,25],[718,28,774,26,"hp"],[718,30,774,28],[719,10,775,8,"maxHealth"],[719,19,775,17],[719,21,775,19,"zoneEnemy"],[719,30,775,28],[719,31,775,29,"maxHP"],[719,36,775,34],[720,10,776,8,"critChance"],[720,20,776,18],[720,22,776,20],[720,23,776,21],[721,10,777,8,"critDamage"],[721,20,777,18],[721,22,777,20],[721,25,777,23],[722,10,778,8,"cooldownReduction"],[722,27,778,25],[722,29,778,27],[723,8,779,6],[723,9,779,7],[724,8,780,6,"position"],[724,16,780,14],[724,18,780,16,"zoneEnemy"],[724,27,780,25],[724,28,780,26,"position"],[724,36,780,34],[725,8,781,6,"lastDamaged"],[725,19,781,17],[725,21,781,19],[725,22,781,20],[726,8,782,6],[727,8,783,6,"zoneTypeId"],[727,18,783,16],[727,20,783,18,"zoneEnemy"],[727,29,783,27],[727,30,783,28,"typeId"],[727,36,783,34],[728,8,784,6,"zoneXP"],[728,14,784,12],[728,16,784,14,"zoneEnemy"],[728,25,784,23],[728,26,784,24,"xp"],[729,6,785,4],[729,7,785,5],[730,6,787,4,"console"],[730,13,787,11],[730,14,787,12,"log"],[730,17,787,15],[730,18,787,16],[730,42,787,40,"combatEnemy"],[730,53,787,51],[730,54,787,52,"name"],[730,58,787,56],[730,67,787,65,"combatEnemy"],[730,78,787,76],[730,79,787,77,"health"],[730,85,787,83],[730,100,787,98,"currentZone"],[730,111,787,109],[730,113,787,111,"id"],[730,115,787,113],[730,125,787,123,"currentZoneLevel"],[730,141,787,139],[730,143,787,141,"level"],[730,148,787,146],[730,150,787,148],[730,151,787,149],[731,6,788,4,"state"],[731,11,788,9],[731,12,788,10,"enemies"],[731,19,788,17],[731,20,788,18,"push"],[731,24,788,22],[731,25,788,23,"combatEnemy"],[731,36,788,34],[731,37,788,35],[732,4,789,2],[732,5,789,3],[734,4,791,2],[735,4,792,2],[735,8,792,8,"spawnBasicTestEnemy"],[735,27,792,27],[735,30,792,31,"state"],[735,35,792,49],[735,39,792,54],[736,6,793,4],[736,10,793,10,"SCREEN_WIDTH"],[736,22,793,22],[736,25,793,25],[736,28,793,28],[737,6,794,4],[737,10,794,10,"GAME_AREA_HEIGHT"],[737,26,794,26],[737,29,794,29],[737,32,794,32],[737,35,794,35],[737,38,794,38],[738,6,795,4],[738,10,795,10,"ENEMY_SIZE"],[738,20,795,20],[738,23,795,23],[738,25,795,25],[739,6,797,4],[739,10,797,10,"x"],[739,11,797,11],[739,14,797,14,"Math"],[739,18,797,18],[739,19,797,19,"random"],[739,25,797,25],[739,26,797,26],[739,27,797,27],[739,31,797,31,"SCREEN_WIDTH"],[739,43,797,43],[739,46,797,46,"ENEMY_SIZE"],[739,56,797,56],[739,59,797,59],[739,60,797,60],[739,61,797,61],[739,64,797,64,"ENEMY_SIZE"],[739,74,797,74],[740,6,798,4],[740,10,798,10,"y"],[740,11,798,11],[740,14,798,14,"Math"],[740,18,798,18],[740,19,798,19,"random"],[740,25,798,25],[740,26,798,26],[740,27,798,27],[740,31,798,31,"GAME_AREA_HEIGHT"],[740,47,798,47],[740,50,798,50,"ENEMY_SIZE"],[740,60,798,60],[740,63,798,63],[740,64,798,64],[740,65,798,65],[740,68,798,68,"ENEMY_SIZE"],[740,78,798,78],[741,6,800,4],[741,10,800,10,"enemy"],[741,15,800,28],[741,18,800,31],[742,8,801,6,"id"],[742,10,801,8],[742,12,801,10],[742,30,801,28,"Date"],[742,34,801,32],[742,35,801,33,"now"],[742,38,801,36],[742,39,801,37],[742,40,801,38],[742,44,801,42,"Math"],[742,48,801,46],[742,49,801,47,"random"],[742,55,801,53],[742,56,801,54],[742,57,801,55],[742,59,801,57],[743,8,802,6,"name"],[743,12,802,10],[743,14,802,12],[743,26,802,24,"Math"],[743,30,802,28],[743,31,802,29,"floor"],[743,36,802,34],[743,37,802,35,"Math"],[743,41,802,39],[743,42,802,40,"random"],[743,48,802,46],[743,49,802,47],[743,50,802,48],[743,53,802,51],[743,56,802,54],[743,57,802,55],[743,59,802,57],[744,8,803,6,"health"],[744,14,803,12],[744,16,803,14],[744,18,803,16],[745,8,804,6,"maxHealth"],[745,17,804,15],[745,19,804,17],[745,21,804,19],[746,8,805,6,"stats"],[746,13,805,11],[746,15,805,13],[747,10,806,8,"attack"],[747,16,806,14],[747,18,806,16],[747,20,806,18],[748,10,807,8,"defense"],[748,17,807,15],[748,19,807,17],[748,21,807,19],[749,10,808,8,"health"],[749,16,808,14],[749,18,808,16],[749,20,808,18],[750,10,809,8,"maxHealth"],[750,19,809,17],[750,21,809,19],[750,23,809,21],[751,10,810,8,"critChance"],[751,20,810,18],[751,22,810,20],[751,23,810,21],[752,10,811,8,"critDamage"],[752,20,811,18],[752,22,811,20],[752,25,811,23],[753,10,812,8,"cooldownReduction"],[753,27,812,25],[753,29,812,27],[754,8,813,6],[754,9,813,7],[755,8,814,6,"position"],[755,16,814,14],[755,18,814,16],[756,10,814,18,"x"],[756,11,814,19],[757,10,814,21,"y"],[758,8,814,23],[758,9,814,24],[759,8,815,6,"lastDamaged"],[759,19,815,17],[759,21,815,19],[760,6,816,4],[760,7,816,5],[761,6,818,4,"console"],[761,13,818,11],[761,14,818,12,"log"],[761,17,818,15],[761,18,818,16],[761,42,818,40,"enemy"],[761,47,818,45],[761,48,818,46,"name"],[761,52,818,50],[761,60,818,58,"Math"],[761,64,818,62],[761,65,818,63,"round"],[761,70,818,68],[761,71,818,69,"x"],[761,72,818,70],[761,73,818,71],[761,78,818,76,"Math"],[761,82,818,80],[761,83,818,81,"round"],[761,88,818,86],[761,89,818,87,"y"],[761,90,818,88],[761,91,818,89],[761,94,818,92],[761,95,818,93],[762,6,819,4,"state"],[762,11,819,9],[762,12,819,10,"enemies"],[762,19,819,17],[762,20,819,18,"push"],[762,24,819,22],[762,25,819,23,"enemy"],[762,30,819,28],[762,31,819,29],[763,4,820,2],[763,5,820,3],[765,4,822,2],[766,4,823,2],[766,8,823,8,"startCombat"],[766,19,823,19],[766,22,823,22,"React"],[766,27,823,27],[766,28,823,27,"default"],[766,35,823,27],[766,36,823,28,"useCallback"],[766,47,823,39],[766,48,823,40],[766,54,823,46],[767,6,824,4,"console"],[767,13,824,11],[767,14,824,12,"log"],[767,17,824,15],[767,18,824,16],[767,63,824,61],[767,64,824,62],[768,6,825,4,"setCombatState"],[768,20,825,18],[768,21,825,19,"prev"],[768,25,825,23],[768,30,825,28],[769,8,825,30],[769,11,825,33,"prev"],[769,15,825,37],[770,8,825,39,"isInCombat"],[770,18,825,49],[770,20,825,51],[771,6,825,56],[771,7,825,57],[771,8,825,58],[771,9,825,59],[773,6,827,4],[774,6,828,4,"combatEngine"],[774,25,828,16],[774,26,828,16,"combatEngine"],[774,38,828,16],[774,39,828,17,"addTickCallback"],[774,54,828,32],[774,55,828,33,"handleCombatTick"],[774,71,828,49],[774,72,828,50],[775,6,829,4,"console"],[775,13,829,11],[775,14,829,12,"log"],[775,17,829,15],[775,18,829,16],[775,62,829,60],[775,63,829,61],[777,6,831,4],[778,6,832,4,"combatEngine"],[778,25,832,16],[778,26,832,16,"combatEngine"],[778,38,832,16],[778,39,832,17,"start"],[778,44,832,22],[778,45,832,23],[778,46,832,24],[779,4,833,2],[779,5,833,3],[779,7,833,5],[779,8,833,6,"combatEngine"],[779,27,833,18],[779,28,833,18,"combatEngine"],[779,40,833,18],[779,42,833,20,"handleCombatTick"],[779,58,833,36],[779,59,833,37],[779,60,833,38],[781,4,835,2],[782,4,836,2],[782,8,836,8,"stopCombat"],[782,18,836,18],[782,21,836,21,"React"],[782,26,836,26],[782,27,836,26,"default"],[782,34,836,26],[782,35,836,27,"useCallback"],[782,46,836,38],[782,47,836,39],[782,53,836,45],[783,6,837,4,"setCombatState"],[783,20,837,18],[783,21,837,19,"prev"],[783,25,837,23],[783,30,837,28],[784,8,837,30],[784,11,837,33,"prev"],[784,15,837,37],[785,8,837,39,"isInCombat"],[785,18,837,49],[785,20,837,51],[786,6,837,57],[786,7,837,58],[786,8,837,59],[786,9,837,60],[787,6,838,4,"combatEngine"],[787,25,838,16],[787,26,838,16,"combatEngine"],[787,38,838,16],[787,39,838,17,"removeTickCallback"],[787,57,838,35],[787,58,838,36,"handleCombatTick"],[787,74,838,52],[787,75,838,53],[788,4,839,2],[788,5,839,3],[788,7,839,5],[788,8,839,6,"combatEngine"],[788,27,839,18],[788,28,839,18,"combatEngine"],[788,40,839,18],[788,42,839,20,"handleCombatTick"],[788,58,839,36],[788,59,839,37],[788,60,839,38],[790,4,841,2],[791,4,842,2],[791,8,842,8,"equipAbility"],[791,20,842,20],[791,23,842,23,"equipAbility"],[791,24,842,24,"abilityId"],[791,33,842,41],[791,35,842,43,"slotIndex"],[791,44,842,60],[791,49,842,74],[792,6,843,4],[792,13,843,11,"combatState"],[792,24,843,22],[792,25,843,23,"abilityManager"],[792,39,843,37],[792,40,843,38,"equipAbility"],[792,52,843,50],[792,53,843,51,"abilityId"],[792,62,843,60],[792,64,843,62,"slotIndex"],[792,73,843,71],[792,74,843,72],[793,4,844,2],[793,5,844,3],[794,4,846,2],[794,8,846,8,"getDeck"],[794,15,846,15],[794,18,846,18,"getDeck"],[794,19,846,18],[794,24,846,24],[795,6,847,4],[795,13,847,11,"combatState"],[795,24,847,22],[795,25,847,23,"abilityManager"],[795,39,847,37],[795,40,847,38,"getDeck"],[795,47,847,45],[795,48,847,46],[795,49,847,47],[796,4,848,2],[796,5,848,3],[797,4,850,2],[797,8,850,8,"getAvailableAbilities"],[797,29,850,29],[797,32,850,32,"getAvailableAbilities"],[797,33,850,32],[797,38,850,38],[798,6,851,4],[798,13,851,11,"combatState"],[798,24,851,22],[798,25,851,23,"abilityManager"],[798,39,851,37],[798,40,851,38,"getAvailableAbilities"],[798,61,851,59],[798,62,851,60],[798,63,851,61],[799,4,852,2],[799,5,852,3],[800,4,854,2],[800,8,854,8,"upgradeAbility"],[800,22,854,22],[800,25,854,26,"abilityId"],[800,34,854,43],[800,38,854,57],[801,6,855,4],[801,13,855,11,"combatState"],[801,24,855,22],[801,25,855,23,"abilityManager"],[801,39,855,37],[801,40,855,38,"upgradeAbility"],[801,54,855,52],[801,55,855,53,"abilityId"],[801,64,855,62],[801,65,855,63],[802,4,856,2],[802,5,856,3],[804,4,858,2],[805,4,859,2],[805,8,859,8,"clearAllEnemies"],[805,23,859,23],[805,26,859,26,"clearAllEnemies"],[805,27,859,26],[805,32,859,32],[806,6,860,4,"console"],[806,13,860,11],[806,14,860,12,"log"],[806,17,860,15],[806,18,860,16],[806,67,860,65],[806,68,860,66],[807,6,861,4,"setCombatState"],[807,20,861,18],[807,21,861,19,"prev"],[807,25,861,23],[807,30,861,28],[808,8,862,6],[808,11,862,9,"prev"],[808,15,862,13],[809,8,863,6,"enemies"],[809,15,863,13],[809,17,863,15],[810,6,864,4],[810,7,864,5],[810,8,864,6],[810,9,864,7],[811,4,865,2],[811,5,865,3],[813,4,867,2],[814,4,868,2],[814,8,868,8,"triggerLevelUpExplosion"],[814,31,868,31],[814,34,868,34,"triggerLevelUpExplosion"],[814,35,868,34],[814,40,868,40],[815,6,869,4,"console"],[815,13,869,11],[815,14,869,12,"log"],[815,17,869,15],[815,18,869,16],[815,70,869,68],[815,71,869,69],[816,6,871,4],[816,10,871,10,"explosionTime"],[816,23,871,23],[816,26,871,26,"Date"],[816,30,871,30],[816,31,871,31,"now"],[816,34,871,34],[816,35,871,35],[816,36,871,36],[817,6,872,4,"setLastExplosionTime"],[817,26,872,24],[817,27,872,25,"explosionTime"],[817,40,872,38],[817,41,872,39],[818,6,874,4,"setCombatState"],[818,20,874,18],[818,21,874,19,"prev"],[818,25,874,23],[818,29,874,27],[819,8,875,6],[820,8,876,6],[820,12,876,12,"enemyCount"],[820,22,876,22],[820,25,876,25,"prev"],[820,29,876,29],[820,30,876,30,"enemies"],[820,37,876,37],[820,38,876,38,"length"],[820,44,876,44],[821,8,877,6],[821,12,877,12,"explosionXP"],[821,23,877,23],[821,26,877,26,"enemyCount"],[821,36,877,36],[821,39,877,39],[821,42,877,42],[821,43,877,43],[821,44,877,44],[822,8,878,6],[822,12,878,12,"explosionGold"],[822,25,878,25],[822,28,878,28,"enemyCount"],[822,38,878,38],[822,41,878,41],[822,44,878,44],[822,45,878,45],[822,46,878,46],[824,8,880,6,"console"],[824,15,880,13],[824,16,880,14,"log"],[824,19,880,17],[824,20,880,18],[824,44,880,42,"enemyCount"],[824,54,880,52],[824,76,880,74,"explosionXP"],[824,87,880,85],[824,98,880,96,"explosionGold"],[824,111,880,109],[824,118,880,116],[824,119,880,117],[826,8,882,6],[827,8,883,6],[827,12,883,10,"explosionXP"],[827,23,883,21],[827,26,883,24],[827,27,883,25],[827,29,883,27],[828,10,884,8,"setTimeout"],[828,20,884,18],[828,21,884,19],[828,27,884,25],[829,12,885,10,"game"],[829,16,885,14],[829,17,885,15,"updateNinja"],[829,28,885,26],[829,29,885,28,"ninja"],[829,34,885,33],[829,39,885,39],[830,14,886,12,"experience"],[830,24,886,22],[830,26,886,24,"ninja"],[830,31,886,29],[830,32,886,30,"experience"],[830,42,886,40],[830,45,886,43,"explosionXP"],[830,56,886,54],[831,14,887,12,"gold"],[831,18,887,16],[831,20,887,18,"ninja"],[831,25,887,23],[831,26,887,24,"gold"],[831,30,887,28],[831,33,887,31,"explosionGold"],[832,12,888,10],[832,13,888,11],[832,14,888,12],[832,15,888,13],[833,10,889,8],[833,11,889,9],[833,13,889,11],[833,14,889,12],[833,15,889,13],[833,16,889,14],[833,17,889,15],[834,8,890,6],[836,8,892,6],[837,8,893,6],[838,8,894,6],[838,12,894,12,"damagedEnemies"],[838,26,894,26],[838,29,894,29,"prev"],[838,33,894,33],[838,34,894,34,"enemies"],[838,41,894,41],[838,42,894,42,"map"],[838,45,894,45],[838,46,894,46,"enemy"],[838,51,894,51],[838,56,894,56],[839,10,895,8],[839,13,895,11,"enemy"],[839,18,895,16],[840,10,896,8,"health"],[840,16,896,14],[840,18,896,16],[840,19,896,17],[841,10,896,19],[842,10,897,8,"lastDamaged"],[842,21,897,19],[842,23,897,21,"combatEngine"],[842,42,897,33],[842,43,897,33,"combatEngine"],[842,55,897,33],[842,56,897,34,"getCurrentTick"],[842,70,897,48],[842,71,897,49],[843,8,898,6],[843,9,898,7],[843,10,898,8],[843,11,898,9],[844,8,900,6],[844,15,900,13],[845,10,901,8],[845,13,901,11,"prev"],[845,17,901,15],[846,10,902,8,"enemies"],[846,17,902,15],[846,19,902,17,"damagedEnemies"],[847,8,903,6],[847,9,903,7],[848,6,904,4],[848,7,904,5],[848,8,904,6],[849,4,905,2],[849,5,905,3],[851,4,907,2],[852,4,908,2],[852,8,908,8,"spawnEnemy"],[852,18,908,18],[852,21,908,22,"position"],[852,29,908,57],[852,33,908,75],[853,6,909,4],[853,10,909,10,"SCREEN_WIDTH"],[853,22,909,22],[853,25,909,25],[853,28,909,28],[854,6,910,4],[854,10,910,10,"GAME_AREA_HEIGHT"],[854,26,910,26],[854,29,910,29],[854,32,910,32],[854,35,910,35],[854,38,910,38],[854,39,910,39],[854,40,910,40],[855,6,911,4],[855,10,911,10,"ENEMY_SIZE"],[855,20,911,20],[855,23,911,23],[855,25,911,25],[857,6,913,4],[858,6,914,4],[858,10,914,10,"x"],[858,11,914,11],[858,14,914,14,"position"],[858,22,914,22],[858,24,914,24,"x"],[858,25,914,25],[858,29,914,29,"Math"],[858,33,914,33],[858,34,914,34,"random"],[858,40,914,40],[858,41,914,41],[858,42,914,42],[858,46,914,46,"SCREEN_WIDTH"],[858,58,914,58],[858,61,914,61,"ENEMY_SIZE"],[858,71,914,71],[858,74,914,74],[858,75,914,75],[858,76,914,76],[858,79,914,79,"ENEMY_SIZE"],[858,89,914,89],[859,6,915,4],[859,10,915,10,"y"],[859,11,915,11],[859,14,915,14,"position"],[859,22,915,22],[859,24,915,24,"y"],[859,25,915,25],[859,29,915,29,"Math"],[859,33,915,33],[859,34,915,34,"random"],[859,40,915,40],[859,41,915,41],[859,42,915,42],[859,46,915,46,"GAME_AREA_HEIGHT"],[859,62,915,62],[859,65,915,65,"ENEMY_SIZE"],[859,75,915,75],[859,78,915,78],[859,79,915,79],[859,80,915,80],[859,83,915,83,"ENEMY_SIZE"],[859,93,915,93],[860,6,917,4],[860,10,917,10,"enemy"],[860,15,917,28],[860,18,917,31],[861,8,918,6,"id"],[861,10,918,8],[861,12,918,10],[861,21,918,19],[861,23,918,21,"enemyCounter"],[861,35,918,33],[861,37,918,35],[862,8,919,6,"name"],[862,12,919,10],[862,14,919,12],[862,24,919,22],[863,8,920,6,"health"],[863,14,920,12],[863,16,920,14],[863,19,920,17],[864,8,921,6,"maxHealth"],[864,17,921,15],[864,19,921,17],[864,22,921,20],[865,8,922,6,"stats"],[865,13,922,11],[865,15,922,13],[866,10,923,8,"attack"],[866,16,923,14],[866,18,923,16],[866,20,923,18],[867,10,924,8,"defense"],[867,17,924,15],[867,19,924,17],[867,21,924,19],[868,10,925,8,"health"],[868,16,925,14],[868,18,925,16],[868,21,925,19],[869,10,926,8,"maxHealth"],[869,19,926,17],[869,21,926,19],[869,24,926,22],[870,10,927,8,"critChance"],[870,20,927,18],[870,22,927,20],[870,23,927,21],[871,10,928,8,"critDamage"],[871,20,928,18],[871,22,928,20],[871,25,928,23],[872,10,929,8,"cooldownReduction"],[872,27,929,25],[872,29,929,27],[873,8,930,6],[873,9,930,7],[874,8,931,6,"position"],[874,16,931,14],[874,18,931,16],[875,10,931,18,"x"],[875,11,931,19],[876,10,931,21,"y"],[877,8,931,23],[877,9,931,24],[878,8,932,6,"lastDamaged"],[878,19,932,17],[878,21,932,19],[879,6,933,4],[879,7,933,5],[880,6,935,4,"setCombatState"],[880,20,935,18],[880,21,935,19,"prev"],[880,25,935,23],[880,30,935,28],[881,8,936,6],[881,11,936,9,"prev"],[881,15,936,13],[882,8,937,6,"enemies"],[882,15,937,13],[882,17,937,15],[882,18,937,16],[882,21,937,19,"prev"],[882,25,937,23],[882,26,937,24,"enemies"],[882,33,937,31],[882,35,937,33,"enemy"],[882,40,937,38],[883,6,938,4],[883,7,938,5],[883,8,938,6],[883,9,938,7],[884,6,940,4],[884,13,940,11,"enemy"],[884,18,940,16],[885,4,941,2],[885,5,941,3],[887,4,943,2],[888,4,944,2],[888,8,944,8,"spawnBoss"],[888,17,944,17],[888,20,944,21,"bossEnemy"],[888,29,944,43],[888,33,944,48],[889,6,945,4,"console"],[889,13,945,11],[889,14,945,12,"log"],[889,17,945,15],[889,18,945,16],[889,39,945,37,"bossEnemy"],[889,48,945,46],[889,49,945,47,"name"],[889,53,945,51],[889,90,945,88],[889,91,945,89],[890,6,946,4,"setCombatState"],[890,20,946,18],[890,21,946,19,"prev"],[890,25,946,23],[890,30,946,28],[891,8,947,6],[891,11,947,9,"prev"],[891,15,947,13],[892,8,948,6,"enemies"],[892,15,948,13],[892,17,948,15],[892,18,948,16,"bossEnemy"],[892,27,948,25],[892,28,948,26],[892,29,948,27],[893,6,949,4],[893,7,949,5],[893,8,949,6],[893,9,949,7],[894,4,950,2],[894,5,950,3],[896,4,952,2],[897,4,953,2],[897,8,953,8,"clearSpecificEnemy"],[897,26,953,26],[897,29,953,30,"enemyId"],[897,36,953,45],[897,40,953,50],[898,6,954,4,"setCombatState"],[898,20,954,18],[898,21,954,19,"prev"],[898,25,954,23],[898,30,954,28],[899,8,955,6],[899,11,955,9,"prev"],[899,15,955,13],[900,8,956,6,"enemies"],[900,15,956,13],[900,17,956,15,"prev"],[900,21,956,19],[900,22,956,20,"enemies"],[900,29,956,27],[900,30,956,28,"filter"],[900,36,956,34],[900,37,956,35,"enemy"],[900,42,956,40],[900,46,956,44,"enemy"],[900,51,956,49],[900,52,956,50,"id"],[900,54,956,52],[900,59,956,57,"enemyId"],[900,66,956,64],[901,6,957,4],[901,7,957,5],[901,8,957,6],[901,9,957,7],[902,4,958,2],[902,5,958,3],[904,4,960,2],[905,4,961,2],[905,8,961,8,"useAbilityManually"],[905,26,961,26],[905,29,961,26,"_s3"],[905,32,961,26],[905,33,961,29],[905,37,961,29,"useCallback"],[905,43,961,40],[905,44,961,40,"useCallback"],[905,55,961,40],[905,57,961,40,"_s3"],[905,60,961,40],[905,61,961,42,"slotIndex"],[905,70,961,59],[905,74,961,73],[906,6,961,73,"_s3"],[906,9,961,73],[907,6,962,4,"console"],[907,13,962,11],[907,14,962,12,"log"],[907,17,962,15],[907,18,962,16],[907,53,962,51,"slotIndex"],[907,62,962,60],[907,64,962,62],[907,65,962,63],[909,6,964,4],[910,6,965,4],[910,10,965,8],[910,11,965,9,"game"],[910,15,965,13],[910,16,965,14,"gameState"],[910,25,965,23],[910,26,965,24,"isAlive"],[910,33,965,31],[910,35,965,33],[911,8,966,6,"console"],[911,15,966,13],[911,16,966,14,"log"],[911,19,966,17],[911,20,966,18],[911,70,966,68],[911,71,966,69],[912,8,967,6],[912,15,967,13],[912,20,967,18],[913,6,968,4],[915,6,970,4],[916,6,971,4],[916,10,971,10,"isReady"],[916,17,971,17],[916,20,971,20,"combatState"],[916,31,971,31],[916,32,971,32,"abilityManager"],[916,46,971,46],[916,47,971,47,"isAbilityReady"],[916,61,971,61],[916,62,971,62,"slotIndex"],[916,71,971,71],[916,72,971,72],[917,6,972,4],[917,10,972,8],[917,11,972,9,"isReady"],[917,18,972,16],[917,20,972,18],[918,8,973,6,"console"],[918,15,973,13],[918,16,973,14,"log"],[918,19,973,17],[918,20,973,18],[918,41,973,39,"slotIndex"],[918,50,973,48],[918,85,973,83],[918,86,973,84],[919,8,974,6],[919,15,974,13],[919,20,974,18],[920,6,975,4],[922,6,977,4],[923,6,978,4],[923,10,978,8,"combatState"],[923,21,978,19],[923,22,978,20,"enemies"],[923,29,978,27],[923,30,978,28,"length"],[923,36,978,34],[923,41,978,39],[923,42,978,40],[923,44,978,42],[924,8,979,6,"console"],[924,15,979,13],[924,16,979,14,"log"],[924,19,979,17],[924,20,979,18],[924,69,979,67],[924,70,979,68],[925,8,980,6],[925,15,980,13],[925,20,980,18],[926,6,981,4],[928,6,983,4],[929,6,984,4],[929,10,984,10,"currentTick"],[929,21,984,21],[929,24,984,24,"combatEngine"],[929,43,984,36],[929,44,984,36,"combatEngine"],[929,56,984,36],[929,57,984,37,"getCurrentTick"],[929,71,984,51],[929,72,984,52],[929,73,984,53],[930,6,985,4],[930,10,985,10,"success"],[930,17,985,17],[930,20,985,20,"combatState"],[930,31,985,31],[930,32,985,32,"abilityManager"],[930,46,985,46],[930,47,985,47,"useAbility"],[930,57,985,57],[930,58,985,58,"slotIndex"],[930,67,985,67],[930,69,985,69,"currentTick"],[930,80,985,80],[930,81,985,81],[931,6,987,4],[931,10,987,8,"success"],[931,17,987,15],[931,19,987,17],[932,8,988,6],[933,8,989,6,"setCombatState"],[933,22,989,20],[933,23,989,21,"prev"],[933,27,989,25],[933,31,989,29],[934,10,990,8],[934,14,990,14,"newState"],[934,22,990,22],[934,25,990,25],[935,12,990,27],[935,15,990,30,"prev"],[936,10,990,35],[936,11,990,36],[937,10,991,8,"castAbility"],[937,21,991,19],[937,22,991,20,"newState"],[937,30,991,28],[937,32,991,30,"slotIndex"],[937,41,991,39],[937,42,991,40],[938,10,992,8],[938,17,992,15,"newState"],[938,25,992,23],[939,8,993,6],[939,9,993,7],[939,10,993,8],[940,8,995,6,"console"],[940,15,995,13],[940,16,995,14,"log"],[940,19,995,17],[940,20,995,18],[940,65,995,63,"slotIndex"],[940,74,995,72],[940,76,995,74],[940,77,995,75],[941,8,996,6],[941,15,996,13],[941,19,996,17],[942,6,997,4],[942,7,997,5],[942,13,997,11],[943,8,998,6,"console"],[943,15,998,13],[943,16,998,14,"log"],[943,19,998,17],[943,20,998,18],[943,61,998,59,"slotIndex"],[943,70,998,68],[943,72,998,70],[943,73,998,71],[944,8,999,6],[944,15,999,13],[944,20,999,18],[945,6,1000,4],[946,4,1001,2],[946,5,1001,3],[946,46,1001,5],[946,47,1001,6,"combatState"],[946,58,1001,17],[946,59,1001,18,"abilityManager"],[946,73,1001,32],[946,75,1001,34,"combatState"],[946,86,1001,45],[946,87,1001,46,"enemies"],[946,94,1001,53],[946,95,1001,54],[946,96,1001,55],[947,4,1002,2],[947,8,1002,2,"useEffect"],[947,14,1002,11],[947,15,1002,11,"useEffect"],[947,24,1002,11],[947,26,1002,12],[947,32,1002,18],[948,6,1003,4,"combatEngine"],[948,25,1003,16],[948,26,1003,16,"combatEngine"],[948,38,1003,16],[948,39,1003,17,"start"],[948,44,1003,22],[948,45,1003,23],[948,46,1003,24],[950,6,1005,4],[951,6,1006,4],[952,6,1007,4,"console"],[952,13,1007,11],[952,14,1007,12,"log"],[952,17,1007,15],[952,18,1007,16],[952,97,1007,95],[952,98,1007,96],[953,6,1009,4],[953,13,1009,11],[953,19,1009,17],[954,8,1010,6,"combatEngine"],[954,27,1010,18],[954,28,1010,18,"combatEngine"],[954,40,1010,18],[954,41,1010,19,"stop"],[954,45,1010,23],[954,46,1010,24],[954,47,1010,25],[955,6,1011,4],[955,7,1011,5],[956,4,1012,2],[956,5,1012,3],[956,7,1012,5],[956,9,1012,7],[956,10,1012,8],[958,4,1014,2],[959,4,1015,2],[959,8,1015,2,"useEffect"],[959,14,1015,11],[959,15,1015,11,"useEffect"],[959,24,1015,11],[959,26,1015,12],[959,32,1015,18],[960,6,1016,4],[960,10,1016,10,"processProjectileImpacts"],[960,34,1016,34],[960,37,1016,37,"processProjectileImpacts"],[960,38,1016,37],[960,43,1016,43],[961,8,1017,6,"setProjectiles"],[961,22,1017,20],[961,23,1017,21,"currentProjectiles"],[961,41,1017,39],[961,45,1017,43],[962,10,1018,8],[962,17,1018,15,"currentProjectiles"],[962,35,1018,33],[962,36,1018,34,"map"],[962,39,1018,37],[962,40,1018,38,"projectile"],[962,50,1018,48],[962,54,1018,52],[963,12,1019,10],[963,16,1019,14],[963,17,1019,15,"projectile"],[963,27,1019,25],[963,29,1019,27],[963,36,1019,34],[963,40,1019,38],[965,12,1021,10],[966,12,1022,10],[966,16,1022,16,"currentTime"],[966,27,1022,27],[966,30,1022,30,"Date"],[966,34,1022,34],[966,35,1022,35,"now"],[966,38,1022,38],[966,39,1022,39],[966,40,1022,40],[967,12,1023,10],[967,16,1023,16,"startTime"],[967,25,1023,25],[967,28,1023,28,"projectile"],[967,38,1023,38],[967,39,1023,39,"startTime"],[967,48,1023,48],[967,52,1023,52,"currentTime"],[967,63,1023,63],[968,12,1024,10],[968,16,1024,16,"elapsedTime"],[968,27,1024,27],[968,30,1024,30,"currentTime"],[968,41,1024,41],[968,44,1024,44,"startTime"],[968,53,1024,53],[969,12,1025,10],[969,16,1025,16,"progress"],[969,24,1025,24],[969,27,1025,27,"Math"],[969,31,1025,31],[969,32,1025,32,"min"],[969,35,1025,35],[969,36,1025,36,"elapsedTime"],[969,47,1025,47],[969,51,1025,51,"projectile"],[969,61,1025,61],[969,62,1025,62,"duration"],[969,70,1025,70],[969,74,1025,74],[969,77,1025,77],[969,78,1025,78],[969,80,1025,80],[969,81,1025,81],[969,82,1025,82],[971,12,1027,10],[972,12,1028,10],[972,16,1028,14,"progress"],[972,24,1028,22],[972,28,1028,26],[972,29,1028,27],[972,33,1028,31],[972,34,1028,32,"projectile"],[972,44,1028,42],[972,45,1028,43,"hasHit"],[972,51,1028,49],[972,53,1028,51],[973,14,1029,12,"projectile"],[973,24,1029,22],[973,25,1029,23,"hasHit"],[973,31,1029,29],[973,34,1029,32],[973,38,1029,36],[974,14,1031,12,"console"],[974,21,1031,19],[974,22,1031,20,"log"],[974,25,1031,23],[974,26,1031,24],[974,51,1031,49,"projectile"],[974,61,1031,59],[974,62,1031,60,"abilityName"],[974,73,1031,71],[974,87,1031,85,"projectile"],[974,97,1031,95],[974,98,1031,96,"targetEnemyId"],[974,111,1031,109],[974,119,1031,117,"projectile"],[974,129,1031,127],[974,130,1031,128,"damage"],[974,136,1031,134],[974,145,1031,143],[974,146,1031,144],[976,14,1033,12],[977,14,1034,12,"setCombatState"],[977,28,1034,26],[977,29,1034,27,"prev"],[977,33,1034,31],[977,37,1034,35],[978,16,1035,14],[978,20,1035,20,"newState"],[978,28,1035,28],[978,31,1035,31],[979,18,1035,33],[979,21,1035,36,"prev"],[980,16,1035,41],[980,17,1035,42],[981,16,1036,14],[981,20,1036,20,"enemyIndex"],[981,30,1036,30],[981,33,1036,33,"newState"],[981,41,1036,41],[981,42,1036,42,"enemies"],[981,49,1036,49],[981,50,1036,50,"findIndex"],[981,59,1036,59],[981,60,1036,60,"e"],[981,61,1036,61],[981,65,1036,65,"e"],[981,66,1036,66],[981,67,1036,67,"id"],[981,69,1036,69],[981,74,1036,74,"projectile"],[981,84,1036,84],[981,85,1036,85,"targetEnemyId"],[981,98,1036,98],[981,99,1036,99],[982,16,1038,14],[982,20,1038,18,"enemyIndex"],[982,30,1038,28],[982,34,1038,32],[982,35,1038,33],[982,39,1038,37,"newState"],[982,47,1038,45],[982,48,1038,46,"enemies"],[982,55,1038,53],[982,56,1038,54,"enemyIndex"],[982,66,1038,64],[982,67,1038,65],[982,68,1038,66,"health"],[982,74,1038,72],[982,77,1038,75],[982,78,1038,76],[982,82,1038,80],[982,83,1038,81,"newState"],[982,91,1038,89],[982,92,1038,90,"enemies"],[982,99,1038,97],[982,100,1038,98,"enemyIndex"],[982,110,1038,108],[982,111,1038,109],[982,112,1038,110,"markedForDeath"],[982,126,1038,124],[982,128,1038,126],[983,18,1039,16,"newState"],[983,26,1039,24],[983,27,1039,25,"enemies"],[983,34,1039,32],[983,37,1039,35],[983,38,1039,36],[983,41,1039,39,"newState"],[983,49,1039,47],[983,50,1039,48,"enemies"],[983,57,1039,55],[983,58,1039,56],[984,18,1040,16],[984,22,1040,22,"enemy"],[984,27,1040,27],[984,30,1040,30,"newState"],[984,38,1040,38],[984,39,1040,39,"enemies"],[984,46,1040,46],[984,47,1040,47,"enemyIndex"],[984,57,1040,57],[984,58,1040,58],[985,18,1041,16],[985,22,1041,22,"newHealth"],[985,31,1041,31],[985,34,1041,34,"Math"],[985,38,1041,38],[985,39,1041,39,"max"],[985,42,1041,42],[985,43,1041,43],[985,44,1041,44],[985,46,1041,46,"enemy"],[985,51,1041,51],[985,52,1041,52,"health"],[985,58,1041,58],[985,61,1041,61,"projectile"],[985,71,1041,71],[985,72,1041,72,"damage"],[985,78,1041,78],[985,79,1041,79],[986,18,1043,16,"newState"],[986,26,1043,24],[986,27,1043,25,"enemies"],[986,34,1043,32],[986,35,1043,33,"enemyIndex"],[986,45,1043,43],[986,46,1043,44],[986,49,1043,47],[987,20,1044,18],[987,23,1044,21,"enemy"],[987,28,1044,26],[988,20,1045,18,"health"],[988,26,1045,24],[988,28,1045,26,"newHealth"],[988,37,1045,35],[989,20,1046,18,"lastDamaged"],[989,31,1046,29],[989,33,1046,31,"combatEngine"],[989,52,1046,43],[989,53,1046,43,"combatEngine"],[989,65,1046,43],[989,66,1046,44,"getCurrentTick"],[989,80,1046,58],[989,81,1046,59],[990,18,1047,16],[990,19,1047,17],[991,18,1049,16,"console"],[991,25,1049,23],[991,26,1049,24,"log"],[991,29,1049,27],[991,30,1049,28],[991,52,1049,50,"enemy"],[991,57,1049,55],[991,58,1049,56,"name"],[991,62,1049,60],[991,74,1049,72,"newHealth"],[991,83,1049,81],[991,87,1049,85,"enemy"],[991,92,1049,90],[991,93,1049,91,"maxHealth"],[991,102,1049,100],[991,104,1049,102],[991,105,1049,103],[993,18,1051,16],[994,18,1052,16],[994,22,1052,20,"newHealth"],[994,31,1052,29],[994,35,1052,33],[994,36,1052,34],[994,40,1052,38,"enemy"],[994,45,1052,43],[994,46,1052,44,"health"],[994,52,1052,50],[994,55,1052,53],[994,56,1052,54],[994,58,1052,56],[995,20,1053,18,"console"],[995,27,1053,25],[995,28,1053,26,"log"],[995,31,1053,29],[995,32,1053,30],[995,55,1053,53,"enemy"],[995,60,1053,58],[995,61,1053,59,"name"],[995,65,1053,63],[995,79,1053,77,"projectile"],[995,89,1053,87],[995,90,1053,88,"abilityName"],[995,101,1053,99],[995,115,1053,113,"enemy"],[995,120,1053,118],[995,121,1053,119,"health"],[995,127,1053,125],[995,134,1053,132,"newHealth"],[995,143,1053,141],[995,146,1053,144],[995,147,1053,145],[997,20,1055,18],[998,20,1056,18,"newState"],[998,28,1056,26],[998,29,1056,27,"enemies"],[998,36,1056,34],[998,37,1056,35,"enemyIndex"],[998,47,1056,45],[998,48,1056,46],[998,51,1056,49],[999,22,1057,20],[999,25,1057,23,"newState"],[999,33,1057,31],[999,34,1057,32,"enemies"],[999,41,1057,39],[999,42,1057,40,"enemyIndex"],[999,52,1057,50],[999,53,1057,51],[1000,22,1058,20,"health"],[1000,28,1058,26],[1000,30,1058,28],[1000,31,1058,29],[1001,22,1059,20,"markedForDeath"],[1001,36,1059,34],[1001,38,1059,36],[1001,42,1059,40],[1001,43,1059,41],[1002,20,1060,18],[1002,21,1060,19],[1004,20,1062,18],[1005,20,1063,18,"setTimeout"],[1005,30,1063,28],[1005,31,1063,29],[1005,37,1063,35,"handleEnemyKill"],[1005,52,1063,50],[1005,53,1063,51,"enemy"],[1005,58,1063,56],[1005,59,1063,57],[1005,61,1063,59],[1005,62,1063,60],[1005,63,1063,61],[1006,18,1064,16],[1007,16,1065,14],[1008,16,1067,14],[1008,23,1067,21,"newState"],[1008,31,1067,29],[1009,14,1068,12],[1009,15,1068,13],[1009,16,1068,14],[1010,12,1069,10],[1012,12,1071,10],[1013,12,1072,10],[1013,16,1072,14,"progress"],[1013,24,1072,22],[1013,28,1072,26],[1013,31,1072,29],[1013,33,1072,31],[1014,14,1073,12],[1014,21,1073,19],[1014,25,1073,23],[1015,12,1074,10],[1016,12,1076,10],[1016,19,1076,17,"projectile"],[1016,29,1076,27],[1017,10,1077,8],[1017,11,1077,9],[1017,12,1077,10],[1017,13,1077,11,"filter"],[1017,19,1077,17],[1017,20,1077,18,"Boolean"],[1017,27,1077,25],[1017,28,1077,26],[1018,8,1078,6],[1018,9,1078,7],[1018,10,1078,8],[1019,6,1079,4],[1019,7,1079,5],[1021,6,1081,4],[1022,6,1082,4],[1022,10,1082,10,"impactInterval"],[1022,24,1082,24],[1022,27,1082,27,"setInterval"],[1022,38,1082,38],[1022,39,1082,39,"processProjectileImpacts"],[1022,63,1082,63],[1022,65,1082,65],[1022,67,1082,67],[1022,68,1082,68],[1023,6,1083,4],[1023,13,1083,11],[1023,19,1083,17,"clearInterval"],[1023,32,1083,30],[1023,33,1083,31,"impactInterval"],[1023,47,1083,45],[1023,48,1083,46],[1024,4,1084,2],[1024,5,1084,3],[1024,7,1084,5],[1024,8,1084,6,"handleEnemyKill"],[1024,23,1084,21],[1024,24,1084,22],[1024,25,1084,23],[1026,4,1086,2],[1027,4,1087,2],[1027,8,1087,8,"saveAbilityData"],[1027,23,1087,23],[1027,26,1087,26],[1027,30,1087,26,"useCallback"],[1027,36,1087,37],[1027,37,1087,37,"useCallback"],[1027,48,1087,37],[1027,50,1087,38],[1027,56,1087,44],[1028,6,1088,4],[1028,10,1088,8,"combatState"],[1028,21,1088,19],[1028,22,1088,20,"abilityManager"],[1028,36,1088,34],[1028,38,1088,36],[1029,8,1089,6],[1029,12,1089,12,"abilityData"],[1029,23,1089,23],[1029,26,1089,26,"combatState"],[1029,37,1089,37],[1029,38,1089,38,"abilityManager"],[1029,52,1089,52],[1029,53,1089,53,"getSaveData"],[1029,64,1089,64],[1029,65,1089,65],[1029,66,1089,66],[1030,8,1090,6,"console"],[1030,15,1090,13],[1030,16,1090,14,"log"],[1030,19,1090,17],[1030,20,1090,18],[1030,70,1090,68],[1030,72,1090,70,"abilityData"],[1030,83,1090,81],[1030,84,1090,82],[1031,8,1091,6,"game"],[1031,12,1091,10],[1031,13,1091,11,"updateAbilityData"],[1031,30,1091,28],[1031,31,1091,29,"abilityData"],[1031,42,1091,40],[1031,43,1091,41],[1032,6,1092,4],[1033,4,1093,2],[1033,5,1093,3],[1033,7,1093,5],[1033,8,1093,6,"combatState"],[1033,19,1093,17],[1033,20,1093,18,"abilityManager"],[1033,34,1093,32],[1033,36,1093,34,"game"],[1033,40,1093,38],[1033,41,1093,39,"updateAbilityData"],[1033,58,1093,56],[1033,59,1093,57],[1033,60,1093,58],[1034,4,1095,2],[1034,8,1095,8,"contextValue"],[1034,20,1095,39],[1034,23,1095,42,"React"],[1034,28,1095,47],[1034,29,1095,47,"default"],[1034,36,1095,47],[1034,37,1095,48,"useMemo"],[1034,44,1095,55],[1034,45,1095,56],[1034,52,1095,63],[1035,6,1096,4,"combatState"],[1035,17,1096,15],[1036,6,1097,4,"projectiles"],[1036,17,1097,15],[1037,6,1098,4,"startCombat"],[1037,17,1098,15],[1038,6,1099,4,"stopCombat"],[1038,16,1099,14],[1039,6,1100,4,"equipAbility"],[1039,18,1100,16],[1040,6,1101,4,"handleEnemyKill"],[1040,21,1101,19],[1041,6,1102,4,"getDeck"],[1041,13,1102,11],[1042,6,1103,4,"getAvailableAbilities"],[1042,27,1103,25],[1043,6,1104,4,"upgradeAbility"],[1043,20,1104,18],[1044,6,1105,4,"spawnEnemy"],[1044,16,1105,14],[1045,6,1106,4,"spawnBoss"],[1045,15,1106,13],[1046,6,1107,4,"clearAllEnemies"],[1046,21,1107,19],[1047,6,1108,4,"clearSpecificEnemy"],[1047,24,1108,22],[1048,6,1109,4,"triggerLevelUpExplosion"],[1048,29,1109,27],[1049,6,1110,4,"findClosestEnemy"],[1049,22,1110,20],[1050,6,1111,4,"updateNinjaPosition"],[1050,25,1111,23],[1051,6,1112,4,"setManualControlActive"],[1051,28,1112,26],[1052,6,1113,4,"lastExplosionTime"],[1052,23,1113,21],[1053,6,1114,4,"useAbilityManually"],[1053,24,1114,22],[1054,6,1114,24],[1055,6,1115,4,"saveAbilityData"],[1055,21,1115,19],[1056,6,1115,21],[1057,6,1116,4,"shadowClone"],[1057,17,1116,15],[1057,19,1116,17,"combatState"],[1057,30,1116,28],[1057,31,1116,29,"shadowClone"],[1057,42,1116,40],[1057,43,1116,42],[1058,4,1117,2],[1058,5,1117,3],[1058,6,1117,4],[1058,8,1117,6],[1059,4,1118,4],[1060,4,1119,4],[1061,4,1120,4,"combatState"],[1061,15,1120,15],[1061,17,1121,4,"projectiles"],[1061,28,1121,15],[1061,30,1122,4,"lastExplosionTime"],[1061,47,1122,21],[1062,4,1123,4],[1063,4,1124,4,"combatState"],[1063,15,1124,15],[1063,16,1124,16,"abilityManager"],[1063,30,1124,30],[1063,32,1125,4,"combatState"],[1063,43,1125,15],[1063,44,1125,16,"enemies"],[1063,51,1125,23],[1063,53,1126,4,"combatState"],[1063,64,1126,15],[1063,65,1126,16,"shadowClone"],[1063,76,1126,27],[1064,4,1126,29],[1065,4,1127,4,"useAbilityManually"],[1065,22,1127,22],[1066,4,1127,24],[1067,4,1128,4,"saveAbilityData"],[1067,19,1128,19],[1067,20,1128,21],[1068,4,1128,21],[1068,5,1129,3],[1068,6,1129,4],[1069,4,1131,2],[1069,24,1132,4],[1069,28,1132,4,"_reactJsxDevRuntime"],[1069,47,1132,4],[1069,48,1132,4,"jsxDEV"],[1069,54,1132,4],[1069,56,1132,5,"CombatContext"],[1069,69,1132,18],[1069,70,1132,19,"Provider"],[1069,78,1132,27],[1070,6,1132,28,"value"],[1070,11,1132,33],[1070,13,1132,35,"contextValue"],[1070,25,1132,48],[1071,6,1132,48,"children"],[1071,14,1132,48],[1071,16,1133,7,"children"],[1072,4,1133,15],[1073,6,1133,15,"fileName"],[1073,14,1133,15],[1073,16,1133,15,"_jsxFileName"],[1073,28,1133,15],[1074,6,1133,15,"lineNumber"],[1074,16,1133,15],[1075,6,1133,15,"columnNumber"],[1075,18,1133,15],[1076,4,1133,15],[1076,11,1134,28],[1076,12,1134,29],[1077,2,1136,0],[1077,3,1136,1],[1078,2,1136,2,"_s4"],[1078,5,1136,2],[1078,6,101,13,"CombatProvider"],[1078,20,101,27],[1079,4,101,27],[1079,12,102,15,"useGame"],[1079,24,102,22],[1079,25,102,22,"useGame"],[1079,32,102,22],[1079,34,103,77,"useZone"],[1079,46,103,84],[1079,47,103,84,"useZone"],[1079,54,103,84],[1080,2,103,84],[1081,2,103,84,"_c"],[1081,4,103,84],[1081,7,101,13,"CombatProvider"],[1081,21,101,27],[1082,2,101,27],[1082,6,101,27,"_c"],[1082,8,101,27],[1083,2,101,27,"$RefreshReg$"],[1083,14,101,27],[1083,15,101,27,"_c"],[1083,17,101,27],[1084,0,101,27],[1084,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC0F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;mBxBK;SwBM;OJG;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C4B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BE2B,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}