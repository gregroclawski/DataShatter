{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // For AOE abilities, create a SINGLE projectile targeting the closest enemy\n        // When it hits, it will damage ALL enemies in the AOE radius\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n\n        // Create single AOE projectile\n        createProjectile(target, damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        }, true, ability.stats.aoeRadius); // Pass AOE flags\n\n        console.log(`🎯 ${ability.name} AOE projectile created targeting ${target.name} with ${ability.stats.aoeRadius} radius`);\n        console.log(`🎯 AOE DEBUG: damage=${damage}, isAOE=true, aoeRadius=${ability.stats.aoeRadius}`);\n      } else {\n        // Single target ability (original logic)\n        var _target = findClosestEnemyInternal(state.enemies);\n        if (!_target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, _target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(_target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1129,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1187,2],[27,6,1187,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1187,2],[27,42,1187,2,"require"],[27,49,1187,2],[27,50,1187,2,"_dependencyMap"],[27,64,1187,2],[28,2,1187,2],[28,6,1187,2,"_slicedToArray"],[28,20,1187,2],[28,23,1187,2,"_interopDefault"],[28,38,1187,2],[28,39,1187,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1187,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,73,173,71],[135,75,173,73,"enemy"],[135,80,173,78],[135,81,173,79,"id"],[135,83,173,81],[135,84,173,82],[137,6,175,4],[138,6,176,4],[138,10,176,10,"baseXpReward"],[138,22,176,22],[138,25,176,25],[138,28,176,28],[138,29,176,29],[138,30,176,30],[139,6,177,4],[139,10,177,10,"xpMultiplier"],[139,22,177,22],[139,25,177,25,"game"],[139,29,177,29],[139,30,177,30,"gameState"],[139,39,177,39],[139,40,177,40,"subscriptionBenefits"],[139,60,177,60],[139,62,177,62,"xp_multiplier"],[139,75,177,75],[139,79,177,79],[139,82,177,82],[140,6,178,4],[140,10,178,10,"dropMultiplier"],[140,24,178,24],[140,27,178,27,"game"],[140,31,178,31],[140,32,178,32,"gameState"],[140,41,178,41],[140,42,178,42,"subscriptionBenefits"],[140,62,178,62],[140,64,178,64,"drop_multiplier"],[140,79,178,79],[140,83,178,83],[140,86,178,86],[141,6,180,4],[141,10,180,10,"xpReward"],[141,18,180,18],[141,21,180,21,"Math"],[141,25,180,25],[141,26,180,26,"floor"],[141,31,180,31],[141,32,180,32,"baseXpReward"],[141,44,180,44],[141,47,180,47,"xpMultiplier"],[141,59,180,59],[141,60,180,60],[142,6,181,4],[142,10,181,10,"goldReward"],[142,20,181,20],[142,23,181,23,"Math"],[142,27,181,27],[142,28,181,28,"floor"],[142,33,181,33],[142,34,181,34],[142,38,181,38],[142,41,181,41,"dropMultiplier"],[142,55,181,55],[142,56,181,56],[142,57,181,57],[142,58,181,58],[144,6,183,4,"console"],[144,13,183,11],[144,14,183,12,"log"],[144,17,183,15],[144,18,183,16],[144,48,183,46,"xpReward"],[144,56,183,54],[144,67,183,65,"goldReward"],[144,77,183,75],[144,93,183,91],[144,94,183,92],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,60,184,58,"xpMultiplier"],[145,72,184,70],[145,94,184,92,"dropMultiplier"],[145,108,184,106],[145,110,184,108],[145,111,184,109],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,54,185,52,"baseXpReward"],[146,66,185,64],[146,81,185,79,"xpReward"],[146,89,185,87],[146,91,185,89],[146,92,185,90],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,58,186,56],[147,60,186,58,"JSON"],[147,64,186,62],[147,65,186,63,"stringify"],[147,74,186,72],[147,75,186,73,"game"],[147,79,186,77],[147,80,186,78,"gameState"],[147,89,186,87],[147,90,186,88,"subscriptionBenefits"],[147,110,186,108],[147,111,186,109],[147,112,186,110],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,49,187,47,"Platform"],[148,61,187,55],[148,62,187,55,"Platform"],[148,70,187,55],[148,71,187,56,"OS"],[148,73,187,58],[148,84,187,69,"Date"],[148,88,187,73],[148,89,187,74,"now"],[148,92,187,77],[148,93,187,78],[148,94,187,79],[148,96,187,81],[148,97,187,82],[150,6,189,4],[151,6,190,4],[152,6,191,4,"setTimeout"],[152,16,191,14],[152,17,191,15],[152,23,191,21],[153,8,192,6,"console"],[153,15,192,13],[153,16,192,14,"log"],[153,19,192,17],[153,20,192,18],[153,78,192,76],[153,79,192,77],[155,8,194,6],[156,8,195,6,"game"],[156,12,195,10],[156,13,195,11,"updateNinja"],[156,24,195,22],[156,25,195,24,"prev"],[156,29,195,28],[156,33,195,33],[157,10,196,8,"console"],[157,17,196,15],[157,18,196,16,"log"],[157,21,196,19],[157,22,196,20],[157,54,196,52,"prev"],[157,58,196,56],[157,59,196,57,"experience"],[157,69,196,67],[157,81,196,79,"prev"],[157,85,196,83],[157,86,196,84,"experience"],[157,96,196,94],[157,99,196,97,"xpReward"],[157,107,196,105],[157,109,196,107],[157,110,196,108],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,56,197,54,"prev"],[158,60,197,58],[158,61,197,59,"gold"],[158,65,197,63],[158,77,197,75,"prev"],[158,81,197,79],[158,82,197,80,"gold"],[158,86,197,84],[158,89,197,87,"goldReward"],[158,99,197,97],[158,101,197,99],[158,102,197,100],[159,10,198,8],[159,17,198,15],[160,12,199,10,"experience"],[160,22,199,20],[160,24,199,22,"prev"],[160,28,199,26],[160,29,199,27,"experience"],[160,39,199,37],[160,42,199,40,"xpReward"],[160,50,199,48],[161,12,200,10,"gold"],[161,16,200,14],[161,18,200,16,"prev"],[161,22,200,20],[161,23,200,21,"gold"],[161,27,200,25],[161,30,200,28,"goldReward"],[162,10,201,8],[162,11,201,9],[163,8,202,6],[163,9,202,7],[163,10,202,8],[165,8,204,6],[166,8,205,6],[166,12,205,12,"zoneEnemy"],[166,21,205,21],[166,24,205,24],[167,10,206,8,"id"],[167,12,206,10],[167,14,206,12,"enemy"],[167,19,206,17],[167,20,206,18,"id"],[167,22,206,20],[168,10,207,8,"typeId"],[168,16,207,14],[168,18,207,16,"enemy"],[168,23,207,21],[168,24,207,22,"zoneTypeId"],[168,34,207,32],[168,38,207,36],[168,48,207,46],[169,10,207,48],[170,10,208,8,"name"],[170,14,208,12],[170,16,208,14,"enemy"],[170,21,208,19],[170,22,208,20,"name"],[170,26,208,24],[171,10,209,8,"icon"],[171,14,209,12],[171,16,209,14],[171,20,209,18],[172,10,209,20],[173,10,210,8,"hp"],[173,12,210,10],[173,14,210,12],[173,15,210,13],[174,10,210,15],[175,10,211,8,"maxHP"],[175,15,211,13],[175,17,211,15,"enemy"],[175,22,211,20],[175,23,211,21,"maxHealth"],[175,32,211,30],[176,10,212,8,"attack"],[176,16,212,14],[176,18,212,16,"enemy"],[176,23,212,21],[176,24,212,22,"stats"],[176,29,212,27],[176,30,212,28,"attack"],[176,36,212,34],[177,10,213,8,"xp"],[177,12,213,10],[177,14,213,12,"enemy"],[177,19,213,17],[177,20,213,18,"zoneXP"],[177,26,213,24],[177,30,213,28],[177,32,213,30],[178,10,213,32],[179,10,214,8,"position"],[179,18,214,16],[179,20,214,18,"enemy"],[179,25,214,23],[179,26,214,24,"position"],[180,8,215,6],[180,9,215,7],[181,8,217,6,"console"],[181,15,217,13],[181,16,217,14,"log"],[181,19,217,17],[181,20,217,18],[181,40,217,38,"zoneEnemy"],[181,49,217,47],[181,50,217,48,"name"],[181,54,217,52],[181,59,217,57,"zoneEnemy"],[181,68,217,66],[181,69,217,67,"typeId"],[181,75,217,73],[181,113,217,111],[181,114,217,112],[182,8,218,6,"recordEnemyKill"],[182,23,218,21],[182,24,218,22,"zoneEnemy"],[182,33,218,31],[182,34,218,32],[183,6,219,4],[183,7,219,5],[183,9,219,7],[183,10,219,8],[183,11,219,9],[183,12,219,10],[183,13,219,11],[184,4,220,2],[184,5,220,3],[184,7,220,5],[184,8,220,6,"game"],[184,12,220,10],[184,13,220,11,"updateNinja"],[184,24,220,22],[184,26,220,24,"recordEnemyKill"],[184,41,220,39],[184,42,220,40],[184,43,220,41],[186,4,222,2],[187,4,223,2],[187,8,223,8,"handleCombatTick"],[187,24,223,24],[187,27,223,27,"React"],[187,32,223,32],[187,33,223,32,"default"],[187,40,223,32],[187,41,223,33,"useCallback"],[187,52,223,44],[187,53,223,45],[187,59,223,51],[188,6,223,51],[188,10,223,51,"_s2"],[188,13,223,51],[188,16,223,51,"$RefreshSig$"],[188,28,223,51],[189,6,224,4,"console"],[189,13,224,11],[189,14,224,12,"log"],[189,17,224,15],[189,18,224,16],[189,87,224,85],[189,88,224,86],[190,6,225,4,"console"],[190,13,225,11],[190,14,225,12,"log"],[190,17,225,15],[190,18,225,16],[190,65,225,63,"isManualControlActive"],[190,86,225,84],[190,99,225,97,"game"],[190,103,225,101],[190,104,225,102,"gameState"],[190,113,225,111],[190,114,225,112,"isAlive"],[190,121,225,119],[190,123,225,121],[190,124,225,122],[191,6,227,4],[191,10,227,8,"enemiesToKill"],[191,23,227,36],[191,26,227,39],[191,28,227,41],[191,29,227,42],[191,30,227,43],[193,6,229,4,"_s2"],[193,9,229,4],[193,10,229,4,"setCombatState"],[193,24,229,18],[193,25,229,18,"_s2"],[193,28,229,18],[193,29,229,19,"prev"],[193,33,229,23],[193,37,229,27],[194,8,229,27,"_s2"],[194,11,229,27],[195,8,230,6],[195,12,230,12,"newTick"],[195,19,230,19],[195,22,230,22,"combatEngine"],[195,41,230,34],[195,42,230,34,"combatEngine"],[195,54,230,34],[195,55,230,35,"getCurrentTick"],[195,69,230,49],[195,70,230,50],[195,71,230,51],[196,8,231,6],[196,12,231,12,"newState"],[196,20,231,20],[196,23,231,23],[197,10,231,25],[197,13,231,28,"prev"],[197,17,231,32],[198,10,231,34,"currentTick"],[198,21,231,45],[198,23,231,47,"newTick"],[199,8,231,55],[199,9,231,56],[200,8,233,6],[200,12,233,10],[200,13,233,11,"newState"],[200,21,233,19],[200,22,233,20,"isInCombat"],[200,32,233,30],[200,34,233,32],[200,41,233,39,"newState"],[200,49,233,47],[202,8,235,6],[203,8,236,6,"newState"],[203,16,236,14],[203,17,236,15,"abilityManager"],[203,31,236,29],[203,32,236,30,"updateCooldowns"],[203,47,236,45],[203,48,236,46,"newTick"],[203,55,236,53],[203,56,236,54],[205,8,238,6],[206,8,239,6],[206,12,239,12,"effectResults"],[206,25,239,25],[206,28,239,28,"newState"],[206,36,239,36],[206,37,239,37,"statusEffects"],[206,50,239,50],[206,51,239,51,"processTick"],[206,62,239,62],[206,63,239,63,"newTick"],[206,70,239,70],[206,71,239,71],[208,8,241,6],[209,8,242,6,"effectResults"],[209,21,242,19],[209,22,242,20,"forEach"],[209,29,242,27],[209,30,242,28],[209,31,242,29,"results"],[209,38,242,36],[209,40,242,38,"entityId"],[209,48,242,46],[209,53,242,51],[210,10,243,8],[210,14,243,14,"enemyIndex"],[210,24,243,24],[210,27,243,27,"newState"],[210,35,243,35],[210,36,243,36,"enemies"],[210,43,243,43],[210,44,243,44,"findIndex"],[210,53,243,53],[210,54,243,54,"e"],[210,55,243,55],[210,59,243,59,"e"],[210,60,243,60],[210,61,243,61,"id"],[210,63,243,63],[210,68,243,68,"entityId"],[210,76,243,76],[210,77,243,77],[211,10,244,8],[211,14,244,12,"enemyIndex"],[211,24,244,22],[211,28,244,26],[211,29,244,27],[211,31,244,29],[212,12,245,10,"results"],[212,19,245,17],[212,20,245,18,"forEach"],[212,27,245,25],[212,28,245,26,"result"],[212,34,245,32],[212,38,245,36],[213,14,246,12,"newState"],[213,22,246,20],[213,23,246,21,"enemies"],[213,30,246,28],[213,31,246,29,"enemyIndex"],[213,41,246,39],[213,42,246,40],[213,43,246,41,"health"],[213,49,246,47],[213,53,246,51,"result"],[213,59,246,57],[213,60,246,58,"damage"],[213,66,246,64],[214,14,247,12,"newState"],[214,22,247,20],[214,23,247,21,"enemies"],[214,30,247,28],[214,31,247,29,"enemyIndex"],[214,41,247,39],[214,42,247,40],[214,43,247,41,"lastDamaged"],[214,54,247,52],[214,57,247,55,"newTick"],[214,64,247,62],[215,12,248,10],[215,13,248,11],[215,14,248,12],[216,10,249,8],[217,8,250,6],[217,9,250,7],[217,10,250,8],[219,8,252,6],[220,8,253,6],[221,8,254,6],[221,12,254,10,"newState"],[221,20,254,18],[221,21,254,19,"playerStats"],[221,32,254,30],[221,36,254,34,"game"],[221,40,254,38],[221,41,254,39,"gameState"],[221,50,254,48],[221,51,254,49,"ninja"],[221,56,254,54],[221,58,254,56],[222,10,255,8],[222,14,255,14,"effectiveStats"],[222,28,255,28],[222,31,255,31,"game"],[222,35,255,35],[222,36,255,36,"getEffectiveStats"],[222,53,255,53],[222,54,255,54],[222,55,255,55],[224,10,257,8],[225,10,258,8],[225,14,258,12,"newState"],[225,22,258,20],[225,23,258,21,"playerStats"],[225,34,258,32],[225,35,258,33,"attack"],[225,41,258,39],[225,46,258,44,"effectiveStats"],[225,60,258,58],[225,61,258,59,"attack"],[225,67,258,65],[225,71,259,12,"newState"],[225,79,259,20],[225,80,259,21,"playerStats"],[225,91,259,32],[225,92,259,33,"defense"],[225,99,259,40],[225,104,259,45,"effectiveStats"],[225,118,259,59],[225,119,259,60,"defense"],[225,126,259,67],[225,130,260,12,"newState"],[225,138,260,20],[225,139,260,21,"playerStats"],[225,150,260,32],[225,151,260,33,"maxHealth"],[225,160,260,42],[225,165,260,47,"effectiveStats"],[225,179,260,61],[225,180,260,62,"maxHealth"],[225,189,260,71],[225,191,260,73],[226,12,262,10,"console"],[226,19,262,17],[226,20,262,18,"log"],[226,23,262,21],[226,24,262,22],[226,58,262,56,"newState"],[226,66,262,64],[226,67,262,65,"playerStats"],[226,78,262,76],[226,79,262,77,"attack"],[226,85,262,83],[226,91,262,89,"effectiveStats"],[226,105,262,103],[226,106,262,104,"attack"],[226,112,262,110],[226,125,262,123,"newState"],[226,133,262,131],[226,134,262,132,"playerStats"],[226,145,262,143],[226,146,262,144,"defense"],[226,153,262,151],[226,159,262,157,"effectiveStats"],[226,173,262,171],[226,174,262,172,"defense"],[226,181,262,179],[226,192,262,190,"newState"],[226,200,262,198],[226,201,262,199,"playerStats"],[226,212,262,210],[226,213,262,211,"maxHealth"],[226,222,262,220],[226,228,262,226,"effectiveStats"],[226,242,262,240],[226,243,262,241,"maxHealth"],[226,252,262,250],[226,254,262,252],[226,255,262,253],[228,12,264,10],[229,12,265,10],[229,16,265,14,"newHealth"],[229,25,265,23],[229,28,265,26,"newState"],[229,36,265,34],[229,37,265,35,"playerStats"],[229,48,265,46],[229,49,265,47,"health"],[229,55,265,53],[230,12,266,10],[230,16,266,14,"newState"],[230,24,266,22],[230,25,266,23,"playerStats"],[230,36,266,34],[230,37,266,35,"maxHealth"],[230,46,266,44],[230,51,266,49,"effectiveStats"],[230,65,266,63],[230,66,266,64,"maxHealth"],[230,75,266,73],[230,77,266,75],[231,14,267,12],[232,14,268,12],[232,18,268,16,"effectiveStats"],[232,32,268,30],[232,33,268,31,"maxHealth"],[232,42,268,40],[232,45,268,43,"newState"],[232,53,268,51],[232,54,268,52,"playerStats"],[232,65,268,63],[232,66,268,64,"maxHealth"],[232,75,268,73],[232,78,268,76],[232,81,268,79],[232,83,268,81],[233,16,269,14],[234,16,270,14],[234,20,270,20,"healthRatio"],[234,31,270,31],[234,34,270,34,"newState"],[234,42,270,42],[234,43,270,43,"playerStats"],[234,54,270,54],[234,55,270,55,"maxHealth"],[234,64,270,64],[234,67,270,67],[234,68,270,68],[234,71,271,16,"newState"],[234,79,271,24],[234,80,271,25,"playerStats"],[234,91,271,36],[234,92,271,37,"health"],[234,98,271,43],[234,101,271,46,"newState"],[234,109,271,54],[234,110,271,55,"playerStats"],[234,121,271,66],[234,122,271,67,"maxHealth"],[234,131,271,76],[234,134,271,79],[234,135,271,80],[235,16,272,14,"newHealth"],[235,25,272,23],[235,28,272,26,"Math"],[235,32,272,30],[235,33,272,31,"floor"],[235,38,272,36],[235,39,272,37,"effectiveStats"],[235,53,272,51],[235,54,272,52,"maxHealth"],[235,63,272,61],[235,66,272,64,"healthRatio"],[235,77,272,75],[235,78,272,76],[236,14,273,12],[236,15,273,13],[236,21,273,19],[236,25,273,23,"newState"],[236,33,273,31],[236,34,273,32,"playerStats"],[236,45,273,43],[236,46,273,44,"health"],[236,52,273,50],[236,55,273,53,"effectiveStats"],[236,69,273,67],[236,70,273,68,"maxHealth"],[236,79,273,77],[236,81,273,79],[237,16,274,14],[238,16,275,14,"newHealth"],[238,25,275,23],[238,28,275,26,"effectiveStats"],[238,42,275,40],[238,43,275,41,"maxHealth"],[238,52,275,50],[239,14,276,12],[240,14,277,12],[241,12,278,10],[242,12,280,10,"newState"],[242,20,280,18],[242,21,280,19,"playerStats"],[242,32,280,30],[242,35,280,33],[243,14,281,12],[243,17,281,15,"newState"],[243,25,281,23],[243,26,281,24,"playerStats"],[243,37,281,35],[244,14,282,12,"attack"],[244,20,282,18],[244,22,282,20,"effectiveStats"],[244,36,282,34],[244,37,282,35,"attack"],[244,43,282,41],[245,14,283,12,"defense"],[245,21,283,19],[245,23,283,21,"effectiveStats"],[245,37,283,35],[245,38,283,36,"defense"],[245,45,283,43],[246,14,284,12,"maxHealth"],[246,23,284,21],[246,25,284,23,"effectiveStats"],[246,39,284,37],[246,40,284,38,"maxHealth"],[246,49,284,47],[247,14,284,49],[248,14,285,12,"health"],[248,20,285,18],[248,22,285,20,"newHealth"],[248,31,285,29],[249,14,285,31],[250,14,286,12,"critChance"],[250,24,286,22],[250,26,286,24,"effectiveStats"],[250,40,286,38],[250,41,286,39,"critChance"],[250,51,286,49],[250,55,286,53,"newState"],[250,63,286,61],[250,64,286,62,"playerStats"],[250,75,286,73],[250,76,286,74,"critChance"],[250,86,286,84],[251,14,287,12,"critDamage"],[251,24,287,22],[251,26,287,24,"effectiveStats"],[251,40,287,38],[251,41,287,39,"critDamage"],[251,51,287,49],[251,55,287,53,"newState"],[251,63,287,61],[251,64,287,62,"playerStats"],[251,75,287,73],[251,76,287,74,"critDamage"],[251,86,287,84],[252,14,288,12,"cooldownReduction"],[252,31,288,29],[252,33,288,31,"effectiveStats"],[252,47,288,45],[252,48,288,46,"cooldownReduction"],[252,65,288,63],[252,69,288,67,"newState"],[252,77,288,75],[252,78,288,76,"playerStats"],[252,89,288,87],[252,90,288,88,"cooldownReduction"],[253,12,289,10],[253,13,289,11],[254,10,290,8],[256,10,292,8],[257,10,293,8],[257,14,293,12,"game"],[257,18,293,16],[257,19,293,17,"gameState"],[257,28,293,26],[257,29,293,27,"isAlive"],[257,36,293,34],[257,40,294,12,"game"],[257,44,294,16],[257,45,294,17,"gameState"],[257,54,294,26],[257,55,294,27,"ninja"],[257,60,294,32],[257,61,294,33,"health"],[257,67,294,39],[257,72,294,44,"effectiveStats"],[257,86,294,58],[257,87,294,59,"maxHealth"],[257,96,294,68],[257,100,295,12,"newState"],[257,108,295,20],[257,109,295,21,"playerStats"],[257,120,295,32],[257,121,295,33,"health"],[257,127,295,39],[257,130,295,42,"effectiveStats"],[257,144,295,56],[257,145,295,57,"maxHealth"],[257,154,295,66],[257,157,295,69],[257,160,295,72],[257,162,295,74],[258,12,296,10,"console"],[258,19,296,17],[258,20,296,18,"log"],[258,23,296,21],[258,24,296,22],[258,58,296,56,"newState"],[258,66,296,64],[258,67,296,65,"playerStats"],[258,78,296,76],[258,79,296,77,"health"],[258,85,296,83],[258,91,296,89,"game"],[258,95,296,93],[258,96,296,94,"gameState"],[258,105,296,103],[258,106,296,104,"ninja"],[258,111,296,109],[258,112,296,110,"health"],[258,118,296,116],[258,139,296,137],[258,140,296,138],[259,12,297,10,"newState"],[259,20,297,18],[259,21,297,19,"playerStats"],[259,32,297,30],[259,33,297,31,"health"],[259,39,297,37],[259,42,297,40,"game"],[259,46,297,44],[259,47,297,45,"gameState"],[259,56,297,54],[259,57,297,55,"ninja"],[259,62,297,60],[259,63,297,61,"health"],[259,69,297,67],[260,10,298,8],[261,8,299,6],[263,8,301,6],[264,8,302,6,"newState"],[264,16,302,14],[264,17,302,15,"enemies"],[264,24,302,22],[264,25,302,23,"forEach"],[264,32,302,30],[264,33,302,31,"enemy"],[264,38,302,36],[264,42,302,40],[265,10,303,8],[265,14,303,12],[265,15,303,13,"enemy"],[265,20,303,18],[265,21,303,19,"isBoss"],[265,27,303,25],[265,29,303,27],[266,12,303,29],[267,12,304,10],[268,12,305,10],[268,16,305,16,"MOVEMENT_SPEED"],[268,30,305,30],[268,33,305,33],[268,37,305,37],[268,38,305,38],[268,39,305,39],[269,12,306,10],[269,16,306,16,"SCREEN_WIDTH"],[269,28,306,28],[269,31,306,31],[269,34,306,34],[270,12,307,10],[270,16,307,16,"GAME_AREA_HEIGHT"],[270,32,307,32],[270,35,307,35],[270,38,307,38],[270,39,307,39],[270,40,307,40],[271,12,308,10],[271,16,308,16,"ENEMY_SIZE"],[271,26,308,26],[271,29,308,29],[271,31,308,31],[273,12,310,10],[274,12,311,10],[274,16,311,16,"playerX"],[274,23,311,23],[274,26,311,26,"currentNinjaPosition"],[274,46,311,46],[274,47,311,47,"x"],[274,48,311,48],[275,12,312,10],[275,16,312,16,"playerY"],[275,23,312,23],[275,26,312,26,"currentNinjaPosition"],[275,46,312,46],[275,47,312,47,"y"],[275,48,312,48],[277,12,314,10],[278,12,315,10],[278,16,315,16,"deltaX"],[278,22,315,22],[278,25,315,25,"playerX"],[278,32,315,32],[278,35,315,35,"enemy"],[278,40,315,40],[278,41,315,41,"position"],[278,49,315,49],[278,50,315,50,"x"],[278,51,315,51],[279,12,316,10],[279,16,316,16,"deltaY"],[279,22,316,22],[279,25,316,25,"playerY"],[279,32,316,32],[279,35,316,35,"enemy"],[279,40,316,40],[279,41,316,41,"position"],[279,49,316,49],[279,50,316,50,"y"],[279,51,316,51],[280,12,317,10],[280,16,317,16,"distance"],[280,24,317,24],[280,27,317,27,"Math"],[280,31,317,31],[280,32,317,32,"sqrt"],[280,36,317,36],[280,37,317,37,"deltaX"],[280,43,317,43],[280,46,317,46,"deltaX"],[280,52,317,52],[280,55,317,55,"deltaY"],[280,61,317,61],[280,64,317,64,"deltaY"],[280,70,317,70],[280,71,317,71],[282,12,319,10],[283,12,320,10],[283,16,320,16,"ATTACK_RANGE"],[283,28,320,28],[283,31,320,31],[283,33,320,33],[283,34,320,34],[283,35,320,35],[284,12,321,10],[284,16,321,16,"ATTACK_COOLDOWN"],[284,31,321,31],[284,34,321,34],[284,36,321,36],[284,37,321,37],[284,38,321,38],[286,12,323,10],[286,16,323,14,"distance"],[286,24,323,22],[286,28,323,26,"ATTACK_RANGE"],[286,40,323,38],[286,42,323,40],[287,14,324,12],[288,14,325,12],[288,18,325,16],[288,19,325,17,"enemy"],[288,24,325,22],[288,25,325,23,"lastAttackTick"],[288,39,325,37],[288,41,325,39,"enemy"],[288,46,325,44],[288,47,325,45,"lastAttackTick"],[288,61,325,59],[288,64,325,62],[288,65,325,63],[289,14,327,12],[289,18,327,16,"newState"],[289,26,327,24],[289,27,327,25,"currentTick"],[289,38,327,36],[289,41,327,39,"enemy"],[289,46,327,44],[289,47,327,45,"lastAttackTick"],[289,61,327,59],[289,65,327,63,"ATTACK_COOLDOWN"],[289,80,327,78],[289,82,327,80],[290,16,328,14],[291,16,329,14],[291,20,329,18],[291,21,329,19,"game"],[291,25,329,23],[291,26,329,24,"gameState"],[291,35,329,33],[291,36,329,34,"isAlive"],[291,43,329,41],[291,45,329,43],[292,18,330,16,"console"],[292,25,330,23],[292,26,330,24,"log"],[292,29,330,27],[292,30,330,28],[292,49,330,47,"enemy"],[292,54,330,52],[292,55,330,53,"name"],[292,59,330,57],[292,93,330,91],[292,94,330,92],[293,18,331,16],[294,18,332,16,"enemy"],[294,23,332,21],[294,24,332,22,"lastAttackTick"],[294,38,332,36],[294,41,332,39,"newState"],[294,49,332,47],[294,50,332,48,"currentTick"],[294,61,332,59],[295,16,333,14],[295,17,333,15],[295,23,333,21],[296,18,334,16],[297,18,335,16],[297,22,335,22,"isPlayerInvincible"],[297,40,335,40],[297,43,335,43,"game"],[297,47,335,47],[297,48,335,48,"gameState"],[297,57,335,57],[297,58,335,58,"isInvincible"],[297,70,335,70],[297,74,336,41,"game"],[297,78,336,45],[297,79,336,46,"gameState"],[297,88,336,55],[297,89,336,56,"invincibilityEndTime"],[297,109,336,76],[297,113,337,41,"Date"],[297,117,337,45],[297,118,337,46,"now"],[297,121,337,49],[297,122,337,50],[297,123,337,51],[297,126,337,54,"game"],[297,130,337,58],[297,131,337,59,"gameState"],[297,140,337,68],[297,141,337,69,"invincibilityEndTime"],[297,161,337,89],[298,18,339,16],[298,22,339,20,"isPlayerInvincible"],[298,40,339,38],[298,42,339,40],[299,20,340,18,"console"],[299,27,340,25],[299,28,340,26,"log"],[299,31,340,29],[299,32,340,30],[299,51,340,49,"enemy"],[299,56,340,54],[299,57,340,55,"name"],[299,61,340,59],[299,101,340,99],[299,102,340,100],[300,20,341,18],[301,20,342,18,"enemy"],[301,25,342,23],[301,26,342,24,"lastAttackTick"],[301,40,342,38],[301,43,342,41,"newState"],[301,51,342,49],[301,52,342,50,"currentTick"],[301,63,342,61],[302,18,343,16],[302,19,343,17],[302,25,343,23],[303,20,344,16],[304,20,345,16],[304,24,345,22,"baseAttack"],[304,34,345,32],[304,37,345,35,"enemy"],[304,42,345,40],[304,43,345,41,"stats"],[304,48,345,46],[304,49,345,47,"attack"],[304,55,345,53],[304,58,345,56],[304,61,345,59],[304,62,345,60],[304,63,345,61],[305,20,346,16],[305,24,346,22,"attackDamage"],[305,36,346,34],[305,39,346,37,"Math"],[305,43,346,41],[305,44,346,42,"floor"],[305,49,346,47],[305,50,346,48,"baseAttack"],[305,60,346,58],[305,64,346,62],[305,67,346,65],[305,70,346,68,"Math"],[305,74,346,72],[305,75,346,73,"random"],[305,81,346,79],[305,82,346,80],[305,83,346,81],[305,86,346,84],[305,89,346,87],[305,90,346,88],[305,91,346,89],[305,92,346,90],[305,93,346,91],[306,20,347,16],[306,24,347,22,"playerDefense"],[306,37,347,35],[306,40,347,38,"newState"],[306,48,347,46],[306,49,347,47,"playerStats"],[306,60,347,58],[306,61,347,59,"defense"],[306,68,347,66],[307,20,348,16],[307,24,348,22,"finalDamage"],[307,35,348,33],[307,38,348,36,"Math"],[307,42,348,40],[307,43,348,41,"max"],[307,46,348,44],[307,47,348,45],[307,48,348,46],[307,50,348,48,"attackDamage"],[307,62,348,60],[307,65,348,63,"Math"],[307,69,348,67],[307,70,348,68,"floor"],[307,75,348,73],[307,76,348,74,"playerDefense"],[307,89,348,87],[307,92,348,90],[307,95,348,93],[307,96,348,94],[307,97,348,95],[307,98,348,96],[307,99,348,97],[309,20,350,16,"console"],[309,27,350,23],[309,28,350,24,"log"],[309,31,350,27],[309,32,350,28],[309,53,350,49,"enemy"],[309,58,350,54],[309,59,350,55,"name"],[309,63,350,59],[309,86,350,82,"finalDamage"],[309,97,350,93],[309,109,350,105,"attackDamage"],[309,121,350,117],[309,132,350,128,"Math"],[309,136,350,132],[309,137,350,133,"floor"],[309,142,350,138],[309,143,350,139,"playerDefense"],[309,156,350,152],[309,159,350,155],[309,162,350,158],[309,163,350,159],[309,184,350,180],[309,185,350,181],[311,20,352,16],[312,20,353,16],[312,24,353,22,"newPlayerHealth"],[312,39,353,37],[312,42,353,40,"Math"],[312,46,353,44],[312,47,353,45,"max"],[312,50,353,48],[312,51,353,49],[312,52,353,50],[312,54,353,52,"newState"],[312,62,353,60],[312,63,353,61,"playerStats"],[312,74,353,72],[312,75,353,73,"health"],[312,81,353,79],[312,84,353,82,"finalDamage"],[312,95,353,93],[312,96,353,94],[313,20,354,16,"newState"],[313,28,354,24],[313,29,354,25,"playerStats"],[313,40,354,36],[313,41,354,37,"health"],[313,47,354,43],[313,50,354,46,"newPlayerHealth"],[313,65,354,61],[314,20,356,16,"console"],[314,27,356,23],[314,28,356,24,"log"],[314,31,356,27],[314,32,356,28],[314,53,356,49,"newState"],[314,61,356,57],[314,62,356,58,"playerStats"],[314,73,356,69],[314,74,356,70,"health"],[314,80,356,76],[314,84,356,80,"newState"],[314,92,356,88],[314,93,356,89,"playerStats"],[314,104,356,100],[314,105,356,101,"maxHealth"],[314,114,356,110],[314,124,356,120,"finalDamage"],[314,135,356,131],[314,145,356,141],[314,146,356,142],[316,20,358,16],[317,20,359,16,"enemy"],[317,25,359,21],[317,26,359,22,"lastAttackTick"],[317,40,359,36],[317,43,359,39,"newState"],[317,51,359,47],[317,52,359,48,"currentTick"],[317,63,359,59],[319,20,361,16],[320,20,362,16],[320,24,362,20,"newPlayerHealth"],[320,39,362,35],[320,43,362,39],[320,44,362,40],[320,46,362,42],[321,22,363,18,"console"],[321,29,363,25],[321,30,363,26,"log"],[321,33,363,29],[321,34,363,30],[321,84,363,80],[321,85,363,81],[322,22,364,18],[323,22,365,18,"setTimeout"],[323,32,365,28],[323,33,365,29],[323,39,365,35],[324,24,366,20],[325,24,367,20,"game"],[325,28,367,24],[325,29,367,25,"updateGameState"],[325,44,367,40],[325,45,367,41],[326,26,367,43,"isAlive"],[326,33,367,50],[326,35,367,52],[327,24,367,58],[327,25,367,59],[327,26,367,60],[328,22,368,18],[328,23,368,19],[328,25,368,21],[328,28,368,24],[328,29,368,25],[329,20,369,16],[330,18,370,16],[331,16,371,14],[332,14,372,12],[333,12,373,10],[333,13,373,11],[333,19,373,17],[334,14,374,12],[335,14,375,12],[336,14,376,12],[336,18,376,16,"distance"],[336,26,376,24],[336,29,376,27],[336,31,376,29],[336,33,376,31],[337,16,377,14],[338,16,378,14],[338,20,378,20,"normalizedX"],[338,31,378,31],[338,34,378,34,"deltaX"],[338,40,378,40],[338,43,378,43,"distance"],[338,51,378,51],[339,16,379,14],[339,20,379,20,"normalizedY"],[339,31,379,31],[339,34,379,34,"deltaY"],[339,40,379,40],[339,43,379,43,"distance"],[339,51,379,51],[341,16,381,14],[342,16,382,14],[342,20,382,20,"randomFactor"],[342,32,382,32],[342,35,382,35],[342,38,382,38],[342,39,382,39],[342,40,382,40],[343,16,383,14],[343,20,383,20,"finalX"],[343,26,383,26],[343,29,383,29,"normalizedX"],[343,40,383,40],[343,43,383,43],[343,44,383,44,"Math"],[343,48,383,48],[343,49,383,49,"random"],[343,55,383,55],[343,56,383,56],[343,57,383,57],[343,60,383,60],[343,63,383,63],[343,67,383,67,"randomFactor"],[343,79,383,79],[344,16,384,14],[344,20,384,20,"finalY"],[344,26,384,26],[344,29,384,29,"normalizedY"],[344,40,384,40],[344,43,384,43],[344,44,384,44,"Math"],[344,48,384,48],[344,49,384,49,"random"],[344,55,384,55],[344,56,384,56],[344,57,384,57],[344,60,384,60],[344,63,384,63],[344,67,384,67,"randomFactor"],[344,79,384,79],[346,16,386,14],[347,16,387,14],[347,20,387,18,"newX"],[347,24,387,22],[347,27,387,25,"enemy"],[347,32,387,30],[347,33,387,31,"position"],[347,41,387,39],[347,42,387,40,"x"],[347,43,387,41],[347,46,387,45,"finalX"],[347,52,387,51],[347,55,387,54,"MOVEMENT_SPEED"],[347,69,387,69],[348,16,388,14],[348,20,388,18,"newY"],[348,24,388,22],[348,27,388,25,"enemy"],[348,32,388,30],[348,33,388,31,"position"],[348,41,388,39],[348,42,388,40,"y"],[348,43,388,41],[348,46,388,45,"finalY"],[348,52,388,51],[348,55,388,54,"MOVEMENT_SPEED"],[348,69,388,69],[350,16,390,14],[351,16,391,14,"newX"],[351,20,391,18],[351,23,391,21,"Math"],[351,27,391,25],[351,28,391,26,"max"],[351,31,391,29],[351,32,391,30],[351,33,391,31],[351,35,391,33,"Math"],[351,39,391,37],[351,40,391,38,"min"],[351,43,391,41],[351,44,391,42,"SCREEN_WIDTH"],[351,56,391,54],[351,59,391,57,"ENEMY_SIZE"],[351,69,391,67],[351,71,391,69,"newX"],[351,75,391,73],[351,76,391,74],[351,77,391,75],[352,16,392,14,"newY"],[352,20,392,18],[352,23,392,21,"Math"],[352,27,392,25],[352,28,392,26,"max"],[352,31,392,29],[352,32,392,30],[352,33,392,31],[352,35,392,33,"Math"],[352,39,392,37],[352,40,392,38,"min"],[352,43,392,41],[352,44,392,42,"GAME_AREA_HEIGHT"],[352,60,392,58],[352,63,392,61,"ENEMY_SIZE"],[352,73,392,71],[352,75,392,73,"newY"],[352,79,392,77],[352,80,392,78],[352,81,392,79],[354,16,394,14],[355,16,395,14,"enemy"],[355,21,395,19],[355,22,395,20,"position"],[355,30,395,28],[355,31,395,29,"x"],[355,32,395,30],[355,35,395,33,"newX"],[355,39,395,37],[356,16,396,14,"enemy"],[356,21,396,19],[356,22,396,20,"position"],[356,30,396,28],[356,31,396,29,"y"],[356,32,396,30],[356,35,396,33,"newY"],[356,39,396,37],[357,14,397,12],[358,14,398,12],[359,12,399,10],[360,10,400,8],[361,8,401,6],[361,9,401,7],[361,10,401,8],[363,8,403,6],[364,8,404,6],[364,12,404,10,"newState"],[364,20,404,18],[364,21,404,19,"shadowClone"],[364,32,404,30],[364,34,404,32],[365,10,405,8],[366,10,406,8,"newState"],[366,18,406,16],[366,19,406,17,"shadowClone"],[366,30,406,28],[366,31,406,29,"remainingTicks"],[366,45,406,43],[366,47,406,45],[368,10,408,8],[369,10,409,8],[369,14,409,14,"cloneOffset"],[369,25,409,25],[369,28,409,28],[369,30,409,30],[369,31,409,31],[369,32,409,32],[370,10,410,8,"newState"],[370,18,410,16],[370,19,410,17,"shadowClone"],[370,30,410,28],[370,31,410,29,"position"],[370,39,410,37],[370,40,410,38,"x"],[370,41,410,39],[370,44,410,42,"currentNinjaPosition"],[370,64,410,62],[370,65,410,63,"x"],[370,66,410,64],[370,69,410,67,"cloneOffset"],[370,80,410,78],[371,10,411,8,"newState"],[371,18,411,16],[371,19,411,17,"shadowClone"],[371,30,411,28],[371,31,411,29,"position"],[371,39,411,37],[371,40,411,38,"y"],[371,41,411,39],[371,44,411,42,"currentNinjaPosition"],[371,64,411,62],[371,65,411,63,"y"],[371,66,411,64],[371,69,411,67],[371,71,411,69],[373,10,413,8],[374,10,414,8],[374,14,414,12,"newState"],[374,22,414,20],[374,23,414,21,"shadowClone"],[374,34,414,32],[374,35,414,33,"remainingTicks"],[374,49,414,47],[374,53,414,51],[374,54,414,52],[374,56,414,54],[375,12,415,10,"console"],[375,19,415,17],[375,20,415,18,"log"],[375,23,415,21],[375,24,415,22],[375,75,415,73],[375,76,415,74],[376,12,416,10,"newState"],[376,20,416,18],[376,21,416,19,"shadowClone"],[376,32,416,30],[376,35,416,33,"undefined"],[376,44,416,42],[377,10,417,8],[377,11,417,9],[377,17,417,15],[378,12,418,10],[379,12,419,10],[380,12,420,10],[380,16,420,16,"CLONE_ATTACK_INTERVAL"],[380,37,420,37],[380,40,420,40],[380,42,420,42],[381,12,421,10],[381,16,421,14,"newState"],[381,24,421,22],[381,25,421,23,"currentTick"],[381,36,421,34],[381,39,421,37,"CLONE_ATTACK_INTERVAL"],[381,60,421,58],[381,65,421,63],[381,66,421,64],[381,70,421,68,"newState"],[381,78,421,76],[381,79,421,77,"enemies"],[381,86,421,84],[381,87,421,85,"length"],[381,93,421,91],[381,96,421,94],[381,97,421,95],[381,99,421,97],[382,14,422,12,"console"],[382,21,422,19],[382,22,422,20,"log"],[382,25,422,23],[382,26,422,24],[382,83,422,81],[382,84,422,82],[384,14,424,12],[385,14,425,12],[385,18,425,18,"target"],[385,24,425,24],[385,27,425,27,"findClosestEnemyInternal"],[385,51,425,51],[385,52,425,52,"newState"],[385,60,425,60],[385,61,425,61,"enemies"],[385,68,425,68],[385,69,425,69],[386,14,426,12],[386,18,426,16,"target"],[386,24,426,22],[386,26,426,24],[387,16,427,14],[388,16,428,14],[388,20,428,20,"cloneDamage"],[388,31,428,31],[388,34,428,34,"Math"],[388,38,428,38],[388,39,428,39,"floor"],[388,44,428,44],[388,45,428,45,"newState"],[388,53,428,53],[388,54,428,54,"playerStats"],[388,65,428,65],[388,66,428,66,"attack"],[388,72,428,72],[388,75,428,75],[388,78,428,78],[388,79,428,79],[390,16,430,14],[391,16,431,14,"createProjectile"],[391,32,431,30],[391,33,431,31,"target"],[391,39,431,37],[391,41,431,39,"cloneDamage"],[391,52,431,50],[391,54,431,52,"newState"],[391,62,431,60],[391,63,431,61,"shadowClone"],[391,74,431,72],[391,75,431,73,"position"],[391,83,431,81],[391,85,431,83],[392,18,432,16,"id"],[392,20,432,18],[392,22,432,20],[392,43,432,41],[393,18,433,16,"name"],[393,22,433,20],[393,24,433,22],[393,45,433,43],[394,18,434,16,"icon"],[394,22,434,20],[394,24,434,22],[395,16,435,14],[395,17,435,15],[395,18,435,16],[396,14,436,12],[397,12,437,10],[398,10,438,8],[399,8,439,6],[401,8,441,6],[402,8,442,6],[403,8,443,6,"console"],[403,15,443,13],[403,16,443,14,"log"],[403,19,443,17],[403,20,443,18],[403,63,443,61,"isManualControlActive"],[403,84,443,82],[403,97,443,95,"game"],[403,101,443,99],[403,102,443,100,"gameState"],[403,111,443,109],[403,112,443,110,"isAlive"],[403,119,443,117],[403,121,443,119],[403,122,443,120],[404,8,444,6],[404,12,444,10],[404,13,444,11,"isManualControlActive"],[404,34,444,32],[404,38,444,36,"game"],[404,42,444,40],[404,43,444,41,"gameState"],[404,52,444,50],[404,53,444,51,"isAlive"],[404,60,444,58],[404,62,444,60],[405,10,445,8],[405,15,445,13],[405,19,445,17,"i"],[405,20,445,18],[405,23,445,21],[405,24,445,22],[405,26,445,24,"i"],[405,27,445,25],[405,30,445,28],[405,31,445,29],[405,33,445,31,"i"],[405,34,445,32],[405,36,445,34],[405,38,445,36],[406,12,446,10],[406,16,446,14,"newState"],[406,24,446,22],[406,25,446,23,"abilityManager"],[406,39,446,37],[406,40,446,38,"isAbilityReady"],[406,54,446,52],[406,55,446,53,"i"],[406,56,446,54],[406,57,446,55],[406,61,446,59,"newState"],[406,69,446,67],[406,70,446,68,"enemies"],[406,77,446,75],[406,78,446,76,"length"],[406,84,446,82],[406,87,446,85],[406,88,446,86],[406,90,446,88],[407,14,447,12],[407,18,447,16,"newState"],[407,26,447,24],[407,27,447,25,"abilityManager"],[407,41,447,39],[407,42,447,40,"useAbility"],[407,52,447,50],[407,53,447,51,"i"],[407,54,447,52],[407,56,447,54,"newTick"],[407,63,447,61],[407,64,447,62],[407,66,447,64],[408,16,448,14,"console"],[408,23,448,21],[408,24,448,22,"log"],[408,27,448,25],[408,28,448,26],[408,73,448,71,"i"],[408,74,448,72],[408,76,448,74],[408,77,448,75],[409,16,449,14,"castAbility"],[409,27,449,25],[409,28,449,26,"newState"],[409,36,449,34],[409,38,449,36,"i"],[409,39,449,37],[409,40,449,38],[410,14,450,12],[411,12,451,10],[412,10,452,8],[413,8,453,6],[415,8,455,6],[416,8,456,6],[416,12,456,12,"deadEnemies"],[416,23,456,23],[416,26,456,26,"newState"],[416,34,456,34],[416,35,456,35,"enemies"],[416,42,456,42],[416,43,456,43,"filter"],[416,49,456,49],[416,50,456,50,"enemy"],[416,55,456,55],[416,59,456,59,"enemy"],[416,64,456,64],[416,65,456,65,"health"],[416,71,456,71],[416,75,456,75],[416,76,456,76],[416,77,456,77],[417,8,457,6,"enemiesToKill"],[417,21,457,19],[417,24,457,22],[417,25,457,23],[417,28,457,26,"deadEnemies"],[417,39,457,37],[417,40,457,38],[417,41,457,39],[417,42,457,40],[419,8,459,6],[420,8,460,6],[420,12,460,10,"deadEnemies"],[420,23,460,21],[420,24,460,22,"length"],[420,30,460,28],[420,33,460,31],[420,34,460,32],[420,36,460,34],[421,10,461,8,"console"],[421,17,461,15],[421,18,461,16,"log"],[421,21,461,19],[421,22,461,20],[421,49,461,47,"deadEnemies"],[421,60,461,58],[421,61,461,59,"length"],[421,67,461,65],[421,83,461,81],[421,85,461,83,"deadEnemies"],[421,96,461,94],[421,97,461,95,"map"],[421,100,461,98],[421,101,461,99,"e"],[421,102,461,100],[421,106,461,104],[421,109,461,107,"e"],[421,110,461,108],[421,111,461,109,"id"],[421,113,461,111],[421,117,461,115,"e"],[421,118,461,116],[421,119,461,117,"health"],[421,125,461,123],[421,130,461,128],[421,131,461,129],[421,132,461,130],[422,8,462,6],[424,8,464,6],[425,8,465,6],[425,12,465,12,"lowHealthEnemies"],[425,28,465,28],[425,31,465,31,"newState"],[425,39,465,39],[425,40,465,40,"enemies"],[425,47,465,47],[425,48,465,48,"filter"],[425,54,465,54],[425,55,465,55,"enemy"],[425,60,465,60],[425,64,465,64,"enemy"],[425,69,465,69],[425,70,465,70,"health"],[425,76,465,76],[425,80,465,80],[425,82,465,82],[425,86,465,86,"enemy"],[425,91,465,91],[425,92,465,92,"health"],[425,98,465,98],[425,101,465,101],[425,102,465,102],[425,103,465,103],[426,8,466,6],[426,12,466,10,"lowHealthEnemies"],[426,28,466,26],[426,29,466,27,"length"],[426,35,466,33],[426,38,466,36],[426,39,466,37],[426,41,466,39],[427,10,467,8,"console"],[427,17,467,15],[427,18,467,16,"log"],[427,21,467,19],[427,22,467,20],[427,61,467,59],[427,63,467,61,"lowHealthEnemies"],[427,79,467,77],[427,80,467,78,"map"],[427,83,467,81],[427,84,467,82,"e"],[427,85,467,83],[427,89,467,87],[427,92,467,90,"e"],[427,93,467,91],[427,94,467,92,"id"],[427,96,467,94],[427,100,467,98,"e"],[427,101,467,99],[427,102,467,100,"health"],[427,108,467,106],[427,112,467,110,"e"],[427,113,467,111],[427,114,467,112,"maxHealth"],[427,123,467,121],[427,128,467,126],[427,129,467,127],[427,130,467,128],[428,8,468,6],[430,8,470,6],[431,8,471,6],[431,12,471,12,"beforeCount"],[431,23,471,23],[431,26,471,26,"newState"],[431,34,471,34],[431,35,471,35,"enemies"],[431,42,471,42],[431,43,471,43,"length"],[431,49,471,49],[432,8,472,6,"newState"],[432,16,472,14],[432,17,472,15,"enemies"],[432,24,472,22],[432,27,472,25,"newState"],[432,35,472,33],[432,36,472,34,"enemies"],[432,43,472,41],[432,44,472,42,"filter"],[432,50,472,48],[432,51,472,49,"enemy"],[432,56,472,54],[432,60,472,58,"enemy"],[432,65,472,63],[432,66,472,64,"health"],[432,72,472,70],[432,75,472,73],[432,76,472,74],[432,77,472,75],[433,8,473,6],[433,12,473,12,"afterCount"],[433,22,473,22],[433,25,473,25,"newState"],[433,33,473,33],[433,34,473,34,"enemies"],[433,41,473,41],[433,42,473,42,"length"],[433,48,473,48],[434,8,475,6],[434,12,475,10,"beforeCount"],[434,23,475,21],[434,28,475,26,"afterCount"],[434,38,475,36],[434,40,475,38],[435,10,476,8,"console"],[435,17,476,15],[435,18,476,16,"log"],[435,21,476,19],[435,22,476,20],[435,52,476,50,"beforeCount"],[435,63,476,61],[435,66,476,64,"afterCount"],[435,76,476,74],[435,102,476,100],[435,103,476,101],[436,8,477,6],[438,8,479,6],[439,8,480,6],[440,8,481,6],[440,12,481,12,"MAX_ENEMIES"],[440,23,481,23],[440,26,481,26],[440,28,481,28],[440,29,481,29],[440,30,481,30],[441,8,482,6],[441,12,482,12,"MIN_SPAWN_DELAY"],[441,27,482,27],[441,30,482,30],[441,33,482,33],[441,34,482,34],[441,35,482,35],[442,8,483,6],[442,12,483,12,"now"],[442,15,483,15],[442,18,483,18,"Date"],[442,22,483,22],[442,23,483,23,"now"],[442,26,483,26],[442,27,483,27],[442,28,483,28],[443,8,484,6],[443,12,484,12,"hasBoss"],[443,19,484,19],[443,22,484,22,"newState"],[443,30,484,30],[443,31,484,31,"enemies"],[443,38,484,38],[443,39,484,39,"some"],[443,43,484,43],[443,44,484,44,"enemy"],[443,49,484,49],[443,53,484,53,"enemy"],[443,58,484,58],[443,59,484,59,"isBoss"],[443,65,484,65],[443,66,484,66],[445,8,486,6],[446,8,487,6],[446,12,487,10],[446,13,487,11,"newState"],[446,21,487,19],[446,22,487,20,"lastSpawnTime"],[446,35,487,33],[446,37,487,35],[447,10,488,8,"newState"],[447,18,488,16],[447,19,488,17,"lastSpawnTime"],[447,32,488,30],[447,35,488,33,"now"],[447,38,488,36],[448,8,489,6],[449,8,491,6,"console"],[449,15,491,13],[449,16,491,14,"log"],[449,19,491,17],[449,20,491,18],[449,53,491,51,"newState"],[449,61,491,59],[449,62,491,60,"enemies"],[449,69,491,67],[449,70,491,68,"length"],[449,76,491,74],[449,85,491,83,"MAX_ENEMIES"],[449,96,491,94],[449,109,491,107,"hasBoss"],[449,116,491,114],[449,118,491,116],[449,119,491,117],[451,8,493,6],[452,8,494,6],[452,12,494,10],[452,13,494,11,"hasBoss"],[452,20,494,18],[452,24,494,22,"newState"],[452,32,494,30],[452,33,494,31,"enemies"],[452,40,494,38],[452,41,494,39,"length"],[452,47,494,45],[452,50,494,48,"MAX_ENEMIES"],[452,61,494,59],[452,65,494,64,"now"],[452,68,494,67],[452,71,494,70,"newState"],[452,79,494,78],[452,80,494,79,"lastSpawnTime"],[452,93,494,92],[452,97,494,97,"MIN_SPAWN_DELAY"],[452,112,494,112],[452,114,494,114],[453,10,495,8,"console"],[453,17,495,15],[453,18,495,16,"log"],[453,21,495,19],[453,22,495,20],[453,43,495,41,"newState"],[453,51,495,49],[453,52,495,50,"enemies"],[453,59,495,57],[453,60,495,58,"length"],[453,66,495,64],[453,69,495,67],[453,70,495,68],[453,74,495,72,"MAX_ENEMIES"],[453,85,495,83],[453,87,495,85],[453,88,495,86],[454,10,496,8,"spawnTestEnemy"],[454,24,496,22],[454,25,496,23,"newState"],[454,33,496,31],[454,34,496,32],[455,10,497,8,"newState"],[455,18,497,16],[455,19,497,17,"lastSpawnTime"],[455,32,497,30],[455,35,497,33,"now"],[455,38,497,36],[456,8,498,6],[457,8,500,6],[457,15,500,13,"newState"],[457,23,500,21],[458,6,501,4],[458,7,501,5],[458,47,501,6],[460,6,503,4],[461,6,504,4,"console"],[461,13,504,11],[461,14,504,12,"log"],[461,17,504,15],[461,18,504,16],[461,50,504,48,"enemiesToKill"],[461,63,504,61],[461,64,504,62,"length"],[461,70,504,68],[461,101,504,99],[461,102,504,100],[462,6,506,4,"enemiesToKill"],[462,19,506,17],[462,20,506,18,"forEach"],[462,27,506,25],[462,28,506,26],[462,29,506,27,"enemy"],[462,34,506,32],[462,36,506,34,"index"],[462,41,506,39],[462,46,506,44],[463,8,507,6,"console"],[463,15,507,13],[463,16,507,14,"log"],[463,19,507,17],[463,20,507,18],[463,57,507,55,"index"],[463,62,507,60],[463,65,507,63],[463,66,507,64],[463,70,507,68,"enemiesToKill"],[463,83,507,81],[463,84,507,82,"length"],[463,90,507,88],[463,104,507,102,"enemy"],[463,109,507,107],[463,110,507,108,"id"],[463,112,507,110],[463,114,507,112],[463,115,507,113],[464,8,508,6,"handleEnemyKill"],[464,23,508,21],[464,24,508,22,"enemy"],[464,29,508,27],[464,30,508,28],[465,6,509,4],[465,7,509,5],[465,8,509,6],[466,4,510,2],[466,5,510,3],[466,7,510,5],[466,8,510,6,"handleEnemyKill"],[466,23,510,21],[466,24,510,22],[466,25,510,23],[466,26,510,24],[466,27,510,25],[468,4,512,2],[469,4,513,2],[469,8,513,8,"findClosestEnemyInternal"],[469,32,513,32],[469,35,513,36,"enemies"],[469,42,513,58],[469,46,513,83],[470,6,514,4],[470,10,514,8,"enemies"],[470,17,514,15],[470,18,514,16,"length"],[470,24,514,22],[470,29,514,27],[470,30,514,28],[470,32,514,30],[470,39,514,37],[470,43,514,41],[472,6,516,4],[473,6,517,4],[473,10,517,10,"SCREEN_WIDTH"],[473,22,517,22],[473,25,517,25],[473,28,517,28],[474,6,518,4],[474,10,518,10,"GAME_AREA_HEIGHT"],[474,26,518,26],[474,29,518,29],[474,32,518,32],[474,35,518,35],[474,38,518,38],[474,39,518,39],[474,40,518,40],[475,6,519,4],[475,10,519,10,"ninjaX"],[475,16,519,16],[475,19,519,19,"SCREEN_WIDTH"],[475,31,519,31],[475,34,519,34],[475,35,519,35],[476,6,520,4],[476,10,520,10,"ninjaY"],[476,16,520,16],[476,19,520,19,"GAME_AREA_HEIGHT"],[476,35,520,35],[476,38,520,38],[476,39,520,39],[477,6,522,4],[477,10,522,8,"closestEnemy"],[477,22,522,20],[477,25,522,23,"enemies"],[477,32,522,30],[477,33,522,31],[477,34,522,32],[477,35,522,33],[478,6,523,4],[478,10,523,8,"closestDistance"],[478,25,523,23],[478,28,523,26,"Infinity"],[478,36,523,34],[479,6,525,4,"enemies"],[479,13,525,11],[479,14,525,12,"forEach"],[479,21,525,19],[479,22,525,20,"enemy"],[479,27,525,25],[479,31,525,29],[480,8,526,6],[480,12,526,12,"distance"],[480,20,526,20],[480,23,526,23,"Math"],[480,27,526,27],[480,28,526,28,"sqrt"],[480,32,526,32],[480,33,527,8,"Math"],[480,37,527,12],[480,38,527,13,"pow"],[480,41,527,16],[480,42,527,17,"enemy"],[480,47,527,22],[480,48,527,23,"position"],[480,56,527,31],[480,57,527,32,"x"],[480,58,527,33],[480,61,527,36,"ninjaX"],[480,67,527,42],[480,69,527,44],[480,70,527,45],[480,71,527,46],[480,74,528,8,"Math"],[480,78,528,12],[480,79,528,13,"pow"],[480,82,528,16],[480,83,528,17,"enemy"],[480,88,528,22],[480,89,528,23,"position"],[480,97,528,31],[480,98,528,32,"y"],[480,99,528,33],[480,102,528,36,"ninjaY"],[480,108,528,42],[480,110,528,44],[480,111,528,45],[480,112,529,6],[480,113,529,7],[481,8,531,6],[481,12,531,10,"distance"],[481,20,531,18],[481,23,531,21,"closestDistance"],[481,38,531,36],[481,40,531,38],[482,10,532,8,"closestDistance"],[482,25,532,23],[482,28,532,26,"distance"],[482,36,532,34],[483,10,533,8,"closestEnemy"],[483,22,533,20],[483,25,533,23,"enemy"],[483,30,533,28],[484,8,534,6],[485,6,535,4],[485,7,535,5],[485,8,535,6],[486,6,537,4,"console"],[486,13,537,11],[486,14,537,12,"log"],[486,17,537,15],[486,18,537,16],[486,60,537,58,"closestDistance"],[486,75,537,73],[486,76,537,74,"toFixed"],[486,83,537,81],[486,84,537,82],[486,85,537,83],[486,86,537,84],[486,88,537,86],[486,89,537,87],[487,6,538,4],[487,13,538,11,"closestEnemy"],[487,25,538,23],[488,4,539,2],[488,5,539,3],[490,4,541,2],[491,4,542,2],[491,8,542,8,"findClosestEnemy"],[491,24,542,24],[491,27,542,27,"findClosestEnemy"],[491,28,542,27],[491,33,542,53],[492,6,543,4],[492,13,543,11,"findClosestEnemyInternal"],[492,37,543,35],[492,38,543,36,"combatState"],[492,49,543,47],[492,50,543,48,"enemies"],[492,57,543,55],[492,58,543,56],[493,4,544,2],[493,5,544,3],[495,4,546,2],[496,4,547,2],[496,8,547,2,"_useState7"],[496,18,547,2],[496,21,547,58],[496,25,547,58,"useState"],[496,31,547,66],[496,32,547,66,"useState"],[496,40,547,66],[496,42,547,91],[497,8,547,93,"x"],[497,9,547,94],[497,11,547,96],[497,12,547,97],[498,8,547,99,"y"],[498,9,547,100],[498,11,547,102],[499,6,547,104],[499,7,547,105],[499,8,547,106],[500,6,547,106,"_useState8"],[500,16,547,106],[500,23,547,106,"_slicedToArray"],[500,37,547,106],[500,38,547,106,"default"],[500,45,547,106],[500,47,547,106,"_useState7"],[500,57,547,106],[501,6,547,9,"currentNinjaPosition"],[501,26,547,29],[501,29,547,29,"_useState8"],[501,39,547,29],[502,6,547,31,"setCurrentNinjaPosition"],[502,29,547,54],[502,32,547,54,"_useState8"],[502,42,547,54],[503,4,548,2],[503,8,548,2,"_useState9"],[503,18,548,2],[503,21,548,60],[503,25,548,60,"useState"],[503,31,548,68],[503,32,548,68,"useState"],[503,40,548,68],[503,42,548,69],[503,47,548,74],[503,48,548,75],[504,6,548,75,"_useState0"],[504,16,548,75],[504,23,548,75,"_slicedToArray"],[504,37,548,75],[504,38,548,75,"default"],[504,45,548,75],[504,47,548,75,"_useState9"],[504,57,548,75],[505,6,548,9,"isManualControlActive"],[505,27,548,30],[505,30,548,30,"_useState0"],[505,40,548,30],[506,6,548,32,"setIsManualControlActive"],[506,30,548,56],[506,33,548,56,"_useState0"],[506,43,548,56],[508,4,550,2],[509,4,551,2],[509,8,551,8,"updateNinjaPosition"],[509,27,551,27],[509,30,551,30],[509,34,551,30,"useCallback"],[509,40,551,41],[509,41,551,41,"useCallback"],[509,52,551,41],[509,54,551,43,"newPosition"],[509,65,551,78],[509,69,551,83],[510,6,552,4,"setCurrentNinjaPosition"],[510,29,552,27],[510,30,552,28,"newPosition"],[510,41,552,39],[510,42,552,40],[511,4,553,2],[511,5,553,3],[511,7,553,5],[511,9,553,7],[511,10,553,8],[513,4,555,2],[514,4,556,2],[514,8,556,8,"setManualControlActive"],[514,30,556,30],[514,33,556,33],[514,37,556,33,"useCallback"],[514,43,556,44],[514,44,556,44,"useCallback"],[514,55,556,44],[514,57,556,46,"active"],[514,63,556,61],[514,67,556,66],[515,6,557,4,"setIsManualControlActive"],[515,30,557,28],[515,31,557,29,"active"],[515,37,557,35],[515,38,557,36],[516,6,558,4,"console"],[516,13,558,11],[516,14,558,12,"log"],[516,17,558,15],[516,18,558,16],[516,39,558,37,"active"],[516,45,558,43],[516,48,558,46],[516,59,558,57],[516,62,558,60],[516,75,558,73],[516,88,558,86,"active"],[516,94,558,92],[516,97,558,95],[516,105,558,103],[516,108,558,106],[516,117,558,115],[516,119,558,117],[516,120,558,118],[517,4,559,2],[517,5,559,3],[517,7,559,5],[517,9,559,7],[517,10,559,8],[519,4,561,2],[520,4,562,2],[520,8,562,8,"handleProjectileHit"],[520,27,562,27],[520,30,562,31,"projectile"],[520,40,562,59],[520,44,562,64],[521,6,563,4,"console"],[521,13,563,11],[521,14,563,12,"log"],[521,17,563,15],[521,18,563,16],[521,35,563,33,"projectile"],[521,45,563,43],[521,46,563,44,"id"],[521,48,563,46],[521,62,563,60,"projectile"],[521,72,563,70],[521,73,563,71,"targetEnemyId"],[521,86,563,84],[521,94,563,92,"projectile"],[521,104,563,102],[521,105,563,103,"damage"],[521,111,563,109],[521,120,563,118],[521,121,563,119],[522,6,565,4,"setCombatState"],[522,20,565,18],[522,21,565,19,"prev"],[522,25,565,23],[522,29,565,27],[523,8,566,6],[523,12,566,12,"newState"],[523,20,566,20],[523,23,566,23],[524,10,566,25],[524,13,566,28,"prev"],[525,8,566,33],[525,9,566,34],[527,8,568,6],[528,8,569,6],[528,12,569,12,"enemyIndex"],[528,22,569,22],[528,25,569,25,"newState"],[528,33,569,33],[528,34,569,34,"enemies"],[528,41,569,41],[528,42,569,42,"findIndex"],[528,51,569,51],[528,52,569,52,"e"],[528,53,569,53],[528,57,569,57,"e"],[528,58,569,58],[528,59,569,59,"id"],[528,61,569,61],[528,66,569,66,"projectile"],[528,76,569,76],[528,77,569,77,"targetEnemyId"],[528,90,569,90],[528,91,569,91],[529,8,570,6],[529,12,570,10,"enemyIndex"],[529,22,570,20],[529,26,570,24],[529,27,570,25],[529,29,570,27],[530,10,571,8,"newState"],[530,18,571,16],[530,19,571,17,"enemies"],[530,26,571,24],[530,29,571,27],[530,30,571,28],[530,33,571,31,"newState"],[530,41,571,39],[530,42,571,40,"enemies"],[530,49,571,47],[530,50,571,48],[531,10,572,8,"newState"],[531,18,572,16],[531,19,572,17,"enemies"],[531,26,572,24],[531,27,572,25,"enemyIndex"],[531,37,572,35],[531,38,572,36],[531,41,572,39],[532,12,573,10],[532,15,573,13,"newState"],[532,23,573,21],[532,24,573,22,"enemies"],[532,31,573,29],[532,32,573,30,"enemyIndex"],[532,42,573,40],[532,43,573,41],[533,12,574,10,"health"],[533,18,574,16],[533,20,574,18,"newState"],[533,28,574,26],[533,29,574,27,"enemies"],[533,36,574,34],[533,37,574,35,"enemyIndex"],[533,47,574,45],[533,48,574,46],[533,49,574,47,"health"],[533,55,574,53],[533,58,574,56,"projectile"],[533,68,574,66],[533,69,574,67,"damage"],[533,75,574,73],[534,12,575,10,"lastDamaged"],[534,23,575,21],[534,25,575,23,"combatEngine"],[534,44,575,35],[534,45,575,35,"combatEngine"],[534,57,575,35],[534,58,575,36,"getCurrentTick"],[534,72,575,50],[534,73,575,51],[535,10,576,8],[535,11,576,9],[536,10,578,8,"console"],[536,17,578,15],[536,18,578,16,"log"],[536,21,578,19],[536,22,578,20],[536,34,578,32,"projectile"],[536,44,578,42],[536,45,578,43,"targetEnemyId"],[536,58,578,56],[536,70,578,68,"newState"],[536,78,578,76],[536,79,578,77,"enemies"],[536,86,578,84],[536,87,578,85,"enemyIndex"],[536,97,578,95],[536,98,578,96],[536,99,578,97,"health"],[536,105,578,103],[536,109,578,107,"newState"],[536,117,578,115],[536,118,578,116,"enemies"],[536,125,578,123],[536,126,578,124,"enemyIndex"],[536,136,578,134],[536,137,578,135],[536,138,578,136,"maxHealth"],[536,147,578,145],[536,149,578,147],[536,150,578,148],[537,8,579,6],[538,8,581,6],[538,15,581,13,"newState"],[538,23,581,21],[539,6,582,4],[539,7,582,5],[539,8,582,6],[541,6,584,4],[542,6,585,4,"setProjectiles"],[542,20,585,18],[542,21,585,19,"prev"],[542,25,585,23],[542,29,585,27,"prev"],[542,33,585,31],[542,34,585,32,"filter"],[542,40,585,38],[542,41,585,39,"p"],[542,42,585,40],[542,46,585,44,"p"],[542,47,585,45],[542,48,585,46,"id"],[542,50,585,48],[542,55,585,53,"projectile"],[542,65,585,63],[542,66,585,64,"id"],[542,68,585,66],[542,69,585,67],[542,70,585,68],[543,4,586,2],[543,5,586,3],[545,4,588,2],[546,4,589,2],[546,8,589,8,"castAbility"],[546,19,589,19],[546,22,589,22,"castAbility"],[546,23,589,23,"state"],[546,28,589,41],[546,30,589,43,"slotIndex"],[546,39,589,60],[546,44,589,65],[547,6,590,4],[547,10,590,10,"deck"],[547,14,590,14],[547,17,590,17,"state"],[547,22,590,22],[547,23,590,23,"abilityManager"],[547,37,590,37],[547,38,590,38,"getDeck"],[547,45,590,45],[547,46,590,46],[547,47,590,47],[548,6,591,4],[548,10,591,10,"ability"],[548,17,591,17],[548,20,591,20,"deck"],[548,24,591,24],[548,25,591,25,"slots"],[548,30,591,30],[548,31,591,31,"slotIndex"],[548,40,591,40],[548,41,591,41],[549,6,592,4],[549,10,592,8],[549,11,592,9,"ability"],[549,18,592,16],[549,20,592,18],[550,6,594,4,"console"],[550,13,594,11],[550,14,594,12,"log"],[550,17,594,15],[550,18,594,16],[550,43,594,41,"ability"],[550,50,594,48],[550,51,594,49,"id"],[550,53,594,51],[550,67,594,65,"slotIndex"],[550,76,594,74],[550,78,594,76],[550,79,594,77],[552,6,596,4],[553,6,597,4],[553,10,597,8,"damage"],[553,16,597,14],[553,19,597,17,"ability"],[553,26,597,24],[553,27,597,25,"stats"],[553,32,597,30],[553,33,597,31,"baseDamage"],[553,43,597,41],[555,6,599,4],[556,6,600,4,"deck"],[556,10,600,8],[556,11,600,9,"activeSynergies"],[556,26,600,24],[556,27,600,25,"forEach"],[556,34,600,32],[556,35,600,33,"synergy"],[556,42,600,40],[556,46,600,44],[557,8,601,6],[557,12,601,10,"synergy"],[557,19,601,17],[557,20,601,18,"bonus"],[557,25,601,23],[557,26,601,24,"damageBonus"],[557,37,601,35],[557,41,602,10,"synergy"],[557,48,602,17],[557,49,602,18,"requiredTags"],[557,61,602,30],[557,62,602,31,"some"],[557,66,602,35],[557,67,602,36,"tag"],[557,70,602,39],[557,74,602,43,"ability"],[557,81,602,50],[557,82,602,51,"tags"],[557,86,602,55],[557,87,602,56,"includes"],[557,95,602,64],[557,96,602,65,"tag"],[557,99,602,68],[557,100,602,69],[557,101,602,70],[557,103,602,72],[558,10,603,8,"damage"],[558,16,603,14],[558,20,603,19],[558,21,603,20],[558,24,603,23,"synergy"],[558,31,603,30],[558,32,603,31,"bonus"],[558,37,603,36],[558,38,603,37,"damageBonus"],[558,49,603,48],[558,52,603,51],[558,55,603,55],[559,8,604,6],[560,6,605,4],[560,7,605,5],[560,8,605,6],[562,6,607,4],[563,6,608,4],[563,10,608,10,"isAOE"],[563,15,608,15],[563,18,608,18,"ability"],[563,25,608,25],[563,26,608,26,"effects"],[563,33,608,33],[563,34,608,34,"includes"],[563,42,608,42],[563,43,608,43],[563,48,608,48],[563,49,608,49],[563,53,608,53,"ability"],[563,60,608,60],[563,61,608,61,"stats"],[563,66,608,66],[563,67,608,67,"aoeRadius"],[563,76,608,76],[564,6,609,4,"console"],[564,13,609,11],[564,14,609,12,"log"],[564,17,609,15],[564,18,609,16],[564,39,609,37,"ability"],[564,46,609,44],[564,47,609,45,"name"],[564,51,609,49],[564,66,609,64,"JSON"],[564,70,609,68],[564,71,609,69,"stringify"],[564,80,609,78],[564,81,609,79,"ability"],[564,88,609,86],[564,89,609,87,"effects"],[564,96,609,94],[564,97,609,95],[564,113,609,111,"ability"],[564,120,609,118],[564,121,609,119,"stats"],[564,126,609,124],[564,127,609,125,"aoeRadius"],[564,136,609,134],[564,148,609,146,"isAOE"],[564,153,609,151],[564,155,609,153],[564,156,609,154],[565,6,611,4],[565,10,611,8,"isAOE"],[565,15,611,13],[565,17,611,15],[566,8,612,6,"console"],[566,15,612,13],[566,16,612,14,"log"],[566,19,612,17],[566,20,612,18],[566,39,612,37,"ability"],[566,46,612,44],[566,47,612,45,"name"],[566,51,612,49],[566,67,612,65,"ability"],[566,74,612,72],[566,75,612,73,"stats"],[566,80,612,78],[566,81,612,79,"aoeRadius"],[566,90,612,88],[566,92,612,90],[566,93,612,91],[568,8,614,6],[569,8,615,6],[570,8,616,6],[570,12,616,12,"target"],[570,18,616,18],[570,21,616,21,"findClosestEnemyInternal"],[570,45,616,45],[570,46,616,46,"state"],[570,51,616,51],[570,52,616,52,"enemies"],[570,59,616,59],[570,60,616,60],[571,8,617,6],[571,12,617,10],[571,13,617,11,"target"],[571,19,617,17],[571,21,617,19],[573,8,619,6],[574,8,620,6,"createProjectile"],[574,24,620,22],[574,25,620,23,"target"],[574,31,620,29],[574,33,620,31,"damage"],[574,39,620,37],[574,41,620,39,"currentNinjaPosition"],[574,61,620,59],[574,63,620,61],[575,10,621,8,"id"],[575,12,621,10],[575,14,621,12,"ability"],[575,21,621,19],[575,22,621,20,"id"],[575,24,621,22],[576,10,622,8,"name"],[576,14,622,12],[576,16,622,14,"ability"],[576,23,622,21],[576,24,622,22,"name"],[576,28,622,26],[577,10,623,8,"icon"],[577,14,623,12],[577,16,623,14,"ability"],[577,23,623,21],[577,24,623,22,"icon"],[578,8,624,6],[578,9,624,7],[578,11,624,9],[578,15,624,13],[578,17,624,15,"ability"],[578,24,624,22],[578,25,624,23,"stats"],[578,30,624,28],[578,31,624,29,"aoeRadius"],[578,40,624,38],[578,41,624,39],[578,42,624,40],[578,43,624,41],[580,8,626,6,"console"],[580,15,626,13],[580,16,626,14,"log"],[580,19,626,17],[580,20,626,18],[580,26,626,24,"ability"],[580,33,626,31],[580,34,626,32,"name"],[580,38,626,36],[580,75,626,73,"target"],[580,81,626,79],[580,82,626,80,"name"],[580,86,626,84],[580,95,626,93,"ability"],[580,102,626,100],[580,103,626,101,"stats"],[580,108,626,106],[580,109,626,107,"aoeRadius"],[580,118,626,116],[580,127,626,125],[580,128,626,126],[581,8,627,6,"console"],[581,15,627,13],[581,16,627,14,"log"],[581,19,627,17],[581,20,627,18],[581,44,627,42,"damage"],[581,50,627,48],[581,77,627,75,"ability"],[581,84,627,82],[581,85,627,83,"stats"],[581,90,627,88],[581,91,627,89,"aoeRadius"],[581,100,627,98],[581,102,627,100],[581,103,627,101],[582,6,629,4],[582,7,629,5],[582,13,629,11],[583,8,630,6],[584,8,631,6],[584,12,631,12,"target"],[584,19,631,18],[584,22,631,21,"findClosestEnemyInternal"],[584,46,631,45],[584,47,631,46,"state"],[584,52,631,51],[584,53,631,52,"enemies"],[584,60,631,59],[584,61,631,60],[585,8,632,6],[585,12,632,10],[585,13,632,11,"target"],[585,20,632,17],[585,22,632,19],[586,8,634,6],[586,12,634,12,"damageResult"],[586,24,634,24],[586,27,634,27,"DamageCalculator"],[586,46,634,43],[586,47,634,43,"DamageCalculator"],[586,63,634,43],[586,64,634,44,"calculateDamage"],[586,79,634,59],[586,80,634,60,"damage"],[586,86,634,66],[586,88,634,68,"state"],[586,93,634,73],[586,94,634,74,"playerStats"],[586,105,634,85],[586,107,634,87,"target"],[586,114,634,93],[586,115,634,94,"stats"],[586,120,634,99],[586,121,634,100],[588,8,636,6],[589,8,637,6,"createProjectile"],[589,24,637,22],[589,25,637,23,"target"],[589,32,637,29],[589,34,637,31,"damageResult"],[589,46,637,43],[589,47,637,44,"damage"],[589,53,637,50],[589,55,637,52,"currentNinjaPosition"],[589,75,637,72],[589,77,637,74],[590,10,638,8,"id"],[590,12,638,10],[590,14,638,12,"ability"],[590,21,638,19],[590,22,638,20,"id"],[590,24,638,22],[591,10,639,8,"name"],[591,14,639,12],[591,16,639,14,"ability"],[591,23,639,21],[591,24,639,22,"name"],[591,28,639,26],[592,10,640,8,"icon"],[592,14,640,12],[592,16,640,14,"ability"],[592,23,640,21],[592,24,640,22,"icon"],[593,8,641,6],[593,9,641,7],[593,10,641,8],[594,8,643,6,"console"],[594,15,643,13],[594,16,643,14,"log"],[594,19,643,17],[594,20,643,18],[594,26,643,24,"ability"],[594,33,643,31],[594,34,643,32,"name"],[594,38,643,36],[594,66,643,64,"damageResult"],[594,78,643,76],[594,79,643,77,"damage"],[594,85,643,83],[594,95,643,93,"damageResult"],[594,107,643,105],[594,108,643,106,"isCritical"],[594,118,643,116],[594,121,643,119],[594,131,643,129],[594,134,643,132],[594,136,643,134],[594,138,643,136],[594,139,643,137],[595,6,644,4],[597,6,646,4],[598,6,647,4],[598,10,647,8,"ability"],[598,17,647,15],[598,18,647,16,"effects"],[598,25,647,23],[598,26,647,24,"includes"],[598,34,647,32],[598,35,647,33],[598,40,647,38],[598,41,647,39],[598,45,647,43,"ability"],[598,52,647,50],[598,53,647,51,"stats"],[598,58,647,56],[598,59,647,57,"duration"],[598,67,647,65],[598,69,647,67],[599,8,648,6],[599,12,648,12,"targets"],[599,19,648,19],[599,22,648,22,"isAOE"],[599,27,648,27],[599,30,649,8,"state"],[599,35,649,13],[599,36,649,14,"enemies"],[599,43,649,21],[599,44,649,22,"filter"],[599,50,649,28],[599,51,649,29,"enemy"],[599,56,649,34],[599,60,649,38],[600,10,650,10],[600,14,650,16,"ninjaX"],[600,20,650,22],[600,23,650,25,"currentNinjaPosition"],[600,43,650,45],[600,44,650,46,"x"],[600,45,650,47],[600,48,650,50],[600,50,650,52],[601,10,651,10],[601,14,651,16,"ninjaY"],[601,20,651,22],[601,23,651,25,"currentNinjaPosition"],[601,43,651,45],[601,44,651,46,"y"],[601,45,651,47],[601,48,651,50],[601,50,651,52],[602,10,652,10],[602,14,652,16,"enemyX"],[602,20,652,22],[602,23,652,25,"enemy"],[602,28,652,30],[602,29,652,31,"position"],[602,37,652,39],[602,38,652,40,"x"],[602,39,652,41],[602,42,652,44],[602,46,652,48],[603,10,653,10],[603,14,653,16,"enemyY"],[603,20,653,22],[603,23,653,25,"enemy"],[603,28,653,30],[603,29,653,31,"position"],[603,37,653,39],[603,38,653,40,"y"],[603,39,653,41],[603,42,653,44],[603,46,653,48],[604,10,654,10],[604,14,654,16,"distance"],[604,22,654,24],[604,25,654,27,"Math"],[604,29,654,31],[604,30,654,32,"sqrt"],[604,34,654,36],[604,35,654,37,"Math"],[604,39,654,41],[604,40,654,42,"pow"],[604,43,654,45],[604,44,654,46,"enemyX"],[604,50,654,52],[604,53,654,55,"ninjaX"],[604,59,654,61],[604,61,654,63],[604,62,654,64],[604,63,654,65],[604,66,654,68,"Math"],[604,70,654,72],[604,71,654,73,"pow"],[604,74,654,76],[604,75,654,77,"enemyY"],[604,81,654,83],[604,84,654,86,"ninjaY"],[604,90,654,92],[604,92,654,94],[604,93,654,95],[604,94,654,96],[604,95,654,97],[605,10,655,10],[605,17,655,17,"distance"],[605,25,655,25],[605,29,655,29,"ability"],[605,36,655,36],[605,37,655,37,"stats"],[605,42,655,42],[605,43,655,43,"aoeRadius"],[605,52,655,52],[606,8,656,8],[606,9,656,9],[606,10,656,10],[606,13,657,8],[606,14,657,9,"findClosestEnemyInternal"],[606,38,657,33],[606,39,657,34,"state"],[606,44,657,39],[606,45,657,40,"enemies"],[606,52,657,47],[606,53,657,48],[606,54,657,49],[606,55,657,50,"filter"],[606,61,657,56],[606,62,657,57,"Boolean"],[606,69,657,64],[606,70,657,65],[607,8,659,6,"targets"],[607,15,659,13],[607,16,659,14,"forEach"],[607,23,659,21],[607,24,659,22,"target"],[607,30,659,28],[607,34,659,32],[608,10,660,8,"state"],[608,15,660,13],[608,16,660,14,"statusEffects"],[608,29,660,27],[608,30,660,28,"addEffect"],[608,39,660,37],[608,40,660,38,"target"],[608,46,660,44],[608,47,660,45,"id"],[608,49,660,47],[608,51,660,49],[609,12,661,10,"id"],[609,14,661,12],[609,16,661,14],[609,19,661,17,"ability"],[609,26,661,24],[609,27,661,25,"id"],[609,29,661,27],[609,35,661,33],[610,12,662,10,"type"],[610,16,662,14],[610,18,662,16],[610,23,662,21],[611,12,663,10,"remainingTicks"],[611,26,663,24],[611,28,663,26,"Math"],[611,32,663,30],[611,33,663,31,"floor"],[611,38,663,36],[611,39,663,37,"ability"],[611,46,663,44],[611,47,663,45,"stats"],[611,52,663,50],[611,53,663,51,"duration"],[611,61,663,59],[611,64,663,62],[611,66,663,64],[611,67,663,65],[612,12,664,10,"tickInterval"],[612,24,664,22],[612,26,664,24],[612,28,664,26],[613,12,665,10,"lastTick"],[613,20,665,18],[613,22,665,20,"state"],[613,27,665,25],[613,28,665,26,"currentTick"],[613,39,665,37],[614,12,666,10,"value"],[614,17,666,15],[614,19,666,17,"Math"],[614,23,666,21],[614,24,666,22,"floor"],[614,29,666,27],[614,30,666,28,"damage"],[614,36,666,34],[614,39,666,37],[614,42,666,40],[614,43,666,41],[615,12,667,10,"stackable"],[615,21,667,19],[615,23,667,21],[616,10,668,8],[616,11,668,9],[616,12,668,10],[617,8,669,6],[617,9,669,7],[617,10,669,8],[618,6,670,4],[620,6,672,4],[621,6,673,4],[621,10,673,8,"ability"],[621,17,673,15],[621,18,673,16,"effects"],[621,25,673,23],[621,26,673,24,"includes"],[621,34,673,32],[621,35,673,33],[621,41,673,39],[621,42,673,40],[621,46,673,44,"ability"],[621,53,673,51],[621,54,673,52,"id"],[621,56,673,54],[621,61,673,59],[621,75,673,73],[621,77,673,75],[622,8,674,6,"console"],[622,15,674,13],[622,16,674,14,"log"],[622,19,674,17],[622,20,674,18],[622,66,674,64,"ability"],[622,73,674,71],[622,74,674,72,"stats"],[622,79,674,77],[622,80,674,78,"duration"],[622,88,674,86],[622,98,674,96],[622,99,674,97],[624,8,676,6],[625,8,677,6],[625,12,677,12,"cloneX"],[625,18,677,18],[625,21,677,21,"currentNinjaPosition"],[625,41,677,41],[625,42,677,42,"x"],[625,43,677,43],[625,46,677,46],[625,48,677,48],[625,49,677,49],[625,50,677,50],[626,8,678,6],[626,12,678,12,"cloneY"],[626,18,678,18],[626,21,678,21,"currentNinjaPosition"],[626,41,678,41],[626,42,678,42,"y"],[626,43,678,43],[626,46,678,46],[626,48,678,48],[626,49,678,49],[626,50,678,50],[628,8,680,6,"state"],[628,13,680,11],[628,14,680,12,"shadowClone"],[628,25,680,23],[628,28,680,26],[629,10,681,8,"id"],[629,12,681,10],[629,14,681,12],[629,30,681,28,"Date"],[629,34,681,32],[629,35,681,33,"now"],[629,38,681,36],[629,39,681,37],[629,40,681,38],[629,42,681,40],[630,10,682,8,"remainingTicks"],[630,24,682,22],[630,26,682,24,"Math"],[630,30,682,28],[630,31,682,29,"floor"],[630,36,682,34],[630,37,682,35,"ability"],[630,44,682,42],[630,45,682,43,"stats"],[630,50,682,48],[630,51,682,49,"duration"],[630,59,682,57],[630,62,682,60],[630,64,682,62],[630,65,682,63],[631,10,682,65],[632,10,683,8,"position"],[632,18,683,16],[632,20,683,18],[633,12,683,20,"x"],[633,13,683,21],[633,15,683,23,"cloneX"],[633,21,683,29],[634,12,683,31,"y"],[634,13,683,32],[634,15,683,34,"cloneY"],[635,10,683,41],[635,11,683,42],[636,10,684,8,"damageMultiplier"],[636,26,684,24],[636,28,684,26],[636,31,684,29],[636,32,684,31],[637,8,685,6],[637,9,685,7],[638,8,687,6,"console"],[638,15,687,13],[638,16,687,14,"log"],[638,19,687,17],[638,20,687,18],[638,63,687,61,"ability"],[638,70,687,68],[638,71,687,69,"stats"],[638,76,687,74],[638,77,687,75,"duration"],[638,85,687,83],[638,108,687,106],[638,109,687,107],[639,6,688,4],[640,4,689,2],[640,5,689,3],[642,4,691,2],[643,4,692,2],[643,8,692,8,"createProjectile"],[643,24,692,24],[643,27,692,27,"createProjectile"],[643,28,692,28,"targetEnemy"],[643,39,692,52],[643,41,692,54,"damage"],[643,47,692,68],[643,49,692,70,"ninjaPos"],[643,57,692,103],[643,59,692,105,"abilityInfo"],[643,70,692,159],[643,72,692,161,"isAOE"],[643,77,692,176],[643,79,692,178,"aoeRadius"],[643,88,692,196],[643,93,692,201],[644,6,693,4],[644,10,693,8],[644,11,693,9,"targetEnemy"],[644,22,693,20],[644,24,693,22],[645,8,694,6,"console"],[645,15,694,13],[645,16,694,14,"log"],[645,19,694,17],[645,20,694,18],[645,65,694,63],[645,66,694,64],[646,8,695,6],[646,15,695,13],[646,19,695,17],[647,6,696,4],[648,6,698,4],[648,10,698,10,"SCREEN_WIDTH"],[648,22,698,22],[648,25,698,25],[648,28,698,28],[649,6,699,4],[649,10,699,10,"GAME_AREA_HEIGHT"],[649,26,699,26],[649,29,699,29],[649,32,699,32],[649,35,699,35],[649,38,699,38],[649,39,699,39],[649,40,699,40],[650,6,700,4],[650,10,700,10,"NINJA_SIZE"],[650,20,700,20],[650,23,700,23],[650,25,700,25],[652,6,702,4],[653,6,703,4],[653,10,703,10,"ninjaX"],[653,16,703,16],[653,19,703,19,"ninjaPos"],[653,27,703,27],[653,30,703,30,"ninjaPos"],[653,38,703,38],[653,39,703,39,"x"],[653,40,703,40],[653,43,703,43,"NINJA_SIZE"],[653,53,703,53],[653,56,703,56],[653,57,703,57],[653,60,703,60,"SCREEN_WIDTH"],[653,72,703,72],[653,75,703,75],[653,76,703,76],[654,6,704,4],[654,10,704,10,"ninjaY"],[654,16,704,16],[654,19,704,19,"ninjaPos"],[654,27,704,27],[654,30,704,30,"ninjaPos"],[654,38,704,38],[654,39,704,39,"y"],[654,40,704,40],[654,43,704,43,"NINJA_SIZE"],[654,53,704,53],[654,56,704,56],[654,57,704,57],[654,60,704,60,"GAME_AREA_HEIGHT"],[654,76,704,76],[654,79,704,79],[654,80,704,80],[655,6,705,4],[655,10,705,10,"ENEMY_SIZE"],[655,20,705,20],[655,23,705,23],[655,25,705,25],[656,6,707,4],[656,10,707,10,"projectileId"],[656,22,707,22],[656,25,707,25],[656,33,707,33,"Date"],[656,37,707,37],[656,38,707,38,"now"],[656,41,707,41],[656,42,707,42],[656,43,707,43],[656,47,707,47,"Math"],[656,51,707,51],[656,52,707,52,"random"],[656,58,707,58],[656,59,707,59],[656,60,707,60],[656,62,707,62],[657,6,709,4],[657,10,709,10,"projectile"],[657,20,709,38],[657,23,709,41],[658,8,710,6,"id"],[658,10,710,8],[658,12,710,10,"projectileId"],[658,24,710,22],[659,8,711,6,"x"],[659,9,711,7],[659,11,711,9,"ninjaX"],[659,17,711,15],[660,8,712,6,"y"],[660,9,712,7],[660,11,712,9,"ninjaY"],[660,17,712,15],[661,8,713,6,"targetX"],[661,15,713,13],[661,17,713,15,"targetEnemy"],[661,28,713,26],[661,29,713,27,"position"],[661,37,713,35],[661,38,713,36,"x"],[661,39,713,37],[661,42,713,40,"ENEMY_SIZE"],[661,52,713,50],[661,55,713,53],[661,56,713,54],[662,8,714,6,"targetY"],[662,15,714,13],[662,17,714,15,"targetEnemy"],[662,28,714,26],[662,29,714,27,"position"],[662,37,714,35],[662,38,714,36,"y"],[662,39,714,37],[662,42,714,40,"ENEMY_SIZE"],[662,52,714,50],[662,55,714,53],[662,56,714,54],[663,8,715,6,"targetEnemyId"],[663,21,715,19],[663,23,715,21,"targetEnemy"],[663,34,715,32],[663,35,715,33,"id"],[663,37,715,35],[664,8,716,6,"damage"],[664,14,716,12],[664,16,716,14,"damage"],[664,22,716,20],[665,8,717,6,"startTime"],[665,17,717,15],[665,19,717,17,"Date"],[665,23,717,21],[665,24,717,22,"now"],[665,27,717,25],[665,28,717,26],[665,29,717,27],[666,8,718,6,"duration"],[666,16,718,14],[666,18,718,16],[666,21,718,19],[667,8,718,21],[668,8,719,6],[669,8,720,6,"abilityId"],[669,17,720,15],[669,19,720,17,"abilityInfo"],[669,30,720,28],[669,32,720,30,"id"],[669,34,720,32],[669,38,720,36],[669,54,720,52],[670,8,721,6,"abilityName"],[670,19,721,17],[670,21,721,19,"abilityInfo"],[670,32,721,30],[670,34,721,32,"name"],[670,38,721,36],[670,42,721,40],[670,58,721,56],[671,8,722,6,"abilityIcon"],[671,19,722,17],[671,21,722,19,"abilityInfo"],[671,32,722,30],[671,34,722,32,"icon"],[671,38,722,36],[671,42,722,40],[671,46,722,44],[672,8,722,46],[673,8,723,6],[674,8,724,6,"isAOE"],[674,13,724,11],[674,15,724,13,"isAOE"],[674,20,724,18],[674,24,724,22],[674,29,724,27],[675,8,725,6,"aoeRadius"],[675,17,725,15],[675,19,725,17,"aoeRadius"],[675,28,725,26],[675,32,725,30],[676,6,726,4],[676,7,726,5],[677,6,728,4,"console"],[677,13,728,11],[677,14,728,12,"log"],[677,17,728,15],[677,18,728,16],[677,44,728,42,"abilityInfo"],[677,55,728,53],[677,57,728,55,"name"],[677,61,728,59],[677,65,728,63],[677,81,728,79],[677,101,728,99,"projectileId"],[677,113,728,111],[677,128,728,126,"targetEnemy"],[677,139,728,137],[677,140,728,138,"name"],[677,144,728,142],[677,152,728,150,"damage"],[677,158,728,156],[677,167,728,165],[677,168,728,166],[678,6,729,4,"console"],[678,13,729,11],[678,14,729,12,"log"],[678,17,729,15],[678,18,729,16],[678,48,729,46,"isAOE"],[678,53,729,51],[678,68,729,66,"aoeRadius"],[678,77,729,75],[678,89,729,87,"damage"],[678,95,729,93],[678,97,729,95],[678,98,729,96],[679,6,731,4,"console"],[679,13,731,11],[679,14,731,12,"log"],[679,17,731,15],[679,18,731,16],[679,53,731,51,"targetEnemy"],[679,64,731,62],[679,65,731,63,"id"],[679,67,731,65],[679,75,731,73,"damage"],[679,81,731,79],[679,90,731,88],[679,91,731,89],[680,6,732,4,"console"],[680,13,732,11],[680,14,732,12,"log"],[680,17,732,15],[680,18,732,16],[680,53,732,51,"ninjaX"],[680,59,732,57],[680,64,732,62,"ninjaY"],[680,70,732,68],[680,87,732,85,"projectile"],[680,97,732,95],[680,98,732,96,"targetX"],[680,105,732,103],[680,110,732,108,"projectile"],[680,120,732,118],[680,121,732,119,"targetY"],[680,128,732,126],[680,131,732,129],[680,132,732,130],[681,6,734,4,"setProjectiles"],[681,20,734,18],[681,21,734,19,"prev"],[681,25,734,23],[681,29,734,27],[681,30,734,28],[681,33,734,31,"prev"],[681,37,734,35],[681,39,734,37,"projectile"],[681,49,734,47],[681,50,734,48],[681,51,734,49],[683,6,736,4],[684,6,737,4,"setTimeout"],[684,16,737,14],[684,17,737,15],[684,23,737,21],[685,8,738,6,"handleProjectileHit"],[685,27,738,25],[685,28,738,26,"projectile"],[685,38,738,36],[685,39,738,37],[686,6,739,4],[686,7,739,5],[686,9,739,7],[686,12,739,10],[686,13,739,11],[687,6,741,4],[687,13,741,11,"projectile"],[687,23,741,21],[688,4,742,2],[688,5,742,3],[690,4,744,2],[691,4,745,2],[691,8,745,8,"spawnTestEnemy"],[691,22,745,22],[691,25,745,26,"state"],[691,30,745,44],[691,34,745,49],[692,6,746,4,"console"],[692,13,746,11],[692,14,746,12,"log"],[692,17,746,15],[692,18,746,16],[692,83,746,81],[692,84,746,82],[694,6,748,4],[695,6,749,4],[695,10,749,10,"zoneEnemy"],[695,19,749,19],[695,22,749,22,"spawnZoneEnemy"],[695,36,749,36],[695,37,749,37],[695,38,749,38],[696,6,750,4],[696,10,750,8],[696,11,750,9,"zoneEnemy"],[696,20,750,18],[696,22,750,20],[697,8,751,6,"console"],[697,15,751,13],[697,16,751,14,"log"],[697,19,751,17],[697,20,751,18],[697,76,751,74],[697,77,751,75],[698,8,752,6],[699,8,753,6,"spawnBasicTestEnemy"],[699,27,753,25],[699,28,753,26,"state"],[699,33,753,31],[699,34,753,32],[700,8,754,6],[701,6,755,4],[702,6,757,4,"console"],[702,13,757,11],[702,14,757,12,"log"],[702,17,757,15],[702,18,757,16],[702,44,757,42,"zoneEnemy"],[702,53,757,51],[702,54,757,52,"name"],[702,58,757,56],[702,63,757,61,"zoneEnemy"],[702,72,757,70],[702,73,757,71,"typeId"],[702,79,757,77],[702,94,757,92,"currentZone"],[702,105,757,103],[702,107,757,105,"id"],[702,109,757,107],[702,119,757,117,"currentZoneLevel"],[702,135,757,133],[702,137,757,135,"level"],[702,142,757,140],[702,144,757,142],[702,145,757,143],[704,6,759,4],[705,6,760,4],[705,10,760,10,"combatEnemy"],[705,21,760,34],[705,24,760,37],[706,8,761,6,"id"],[706,10,761,8],[706,12,761,10,"zoneEnemy"],[706,21,761,19],[706,22,761,20,"id"],[706,24,761,22],[707,8,762,6,"name"],[707,12,762,10],[707,14,762,12,"zoneEnemy"],[707,23,762,21],[707,24,762,22,"name"],[707,28,762,26],[708,8,763,6,"health"],[708,14,763,12],[708,16,763,14,"zoneEnemy"],[708,25,763,23],[708,26,763,24,"hp"],[708,28,763,26],[709,8,764,6,"maxHealth"],[709,17,764,15],[709,19,764,17,"zoneEnemy"],[709,28,764,26],[709,29,764,27,"maxHP"],[709,34,764,32],[710,8,765,6,"stats"],[710,13,765,11],[710,15,765,13],[711,10,766,8,"attack"],[711,16,766,14],[711,18,766,16,"zoneEnemy"],[711,27,766,25],[711,28,766,26,"attack"],[711,34,766,32],[712,10,767,8,"defense"],[712,17,767,15],[712,19,767,17],[712,21,767,19],[713,10,767,21],[714,10,768,8,"health"],[714,16,768,14],[714,18,768,16,"zoneEnemy"],[714,27,768,25],[714,28,768,26,"hp"],[714,30,768,28],[715,10,769,8,"maxHealth"],[715,19,769,17],[715,21,769,19,"zoneEnemy"],[715,30,769,28],[715,31,769,29,"maxHP"],[715,36,769,34],[716,10,770,8,"critChance"],[716,20,770,18],[716,22,770,20],[716,23,770,21],[717,10,771,8,"critDamage"],[717,20,771,18],[717,22,771,20],[717,25,771,23],[718,10,772,8,"cooldownReduction"],[718,27,772,25],[718,29,772,27],[719,8,773,6],[719,9,773,7],[720,8,774,6,"position"],[720,16,774,14],[720,18,774,16,"zoneEnemy"],[720,27,774,25],[720,28,774,26,"position"],[720,36,774,34],[721,8,775,6,"lastDamaged"],[721,19,775,17],[721,21,775,19],[721,22,775,20],[722,8,776,6],[723,8,777,6,"zoneTypeId"],[723,18,777,16],[723,20,777,18,"zoneEnemy"],[723,29,777,27],[723,30,777,28,"typeId"],[723,36,777,34],[724,8,778,6,"zoneXP"],[724,14,778,12],[724,16,778,14,"zoneEnemy"],[724,25,778,23],[724,26,778,24,"xp"],[725,6,779,4],[725,7,779,5],[726,6,781,4,"console"],[726,13,781,11],[726,14,781,12,"log"],[726,17,781,15],[726,18,781,16],[726,42,781,40,"combatEnemy"],[726,53,781,51],[726,54,781,52,"name"],[726,58,781,56],[726,67,781,65,"combatEnemy"],[726,78,781,76],[726,79,781,77,"health"],[726,85,781,83],[726,100,781,98,"currentZone"],[726,111,781,109],[726,113,781,111,"id"],[726,115,781,113],[726,125,781,123,"currentZoneLevel"],[726,141,781,139],[726,143,781,141,"level"],[726,148,781,146],[726,150,781,148],[726,151,781,149],[727,6,782,4,"state"],[727,11,782,9],[727,12,782,10,"enemies"],[727,19,782,17],[727,20,782,18,"push"],[727,24,782,22],[727,25,782,23,"combatEnemy"],[727,36,782,34],[727,37,782,35],[728,4,783,2],[728,5,783,3],[730,4,785,2],[731,4,786,2],[731,8,786,8,"spawnBasicTestEnemy"],[731,27,786,27],[731,30,786,31,"state"],[731,35,786,49],[731,39,786,54],[732,6,787,4],[732,10,787,10,"SCREEN_WIDTH"],[732,22,787,22],[732,25,787,25],[732,28,787,28],[733,6,788,4],[733,10,788,10,"GAME_AREA_HEIGHT"],[733,26,788,26],[733,29,788,29],[733,32,788,32],[733,35,788,35],[733,38,788,38],[734,6,789,4],[734,10,789,10,"ENEMY_SIZE"],[734,20,789,20],[734,23,789,23],[734,25,789,25],[735,6,791,4],[735,10,791,10,"x"],[735,11,791,11],[735,14,791,14,"Math"],[735,18,791,18],[735,19,791,19,"random"],[735,25,791,25],[735,26,791,26],[735,27,791,27],[735,31,791,31,"SCREEN_WIDTH"],[735,43,791,43],[735,46,791,46,"ENEMY_SIZE"],[735,56,791,56],[735,59,791,59],[735,60,791,60],[735,61,791,61],[735,64,791,64,"ENEMY_SIZE"],[735,74,791,74],[736,6,792,4],[736,10,792,10,"y"],[736,11,792,11],[736,14,792,14,"Math"],[736,18,792,18],[736,19,792,19,"random"],[736,25,792,25],[736,26,792,26],[736,27,792,27],[736,31,792,31,"GAME_AREA_HEIGHT"],[736,47,792,47],[736,50,792,50,"ENEMY_SIZE"],[736,60,792,60],[736,63,792,63],[736,64,792,64],[736,65,792,65],[736,68,792,68,"ENEMY_SIZE"],[736,78,792,78],[737,6,794,4],[737,10,794,10,"enemy"],[737,15,794,28],[737,18,794,31],[738,8,795,6,"id"],[738,10,795,8],[738,12,795,10],[738,30,795,28,"Date"],[738,34,795,32],[738,35,795,33,"now"],[738,38,795,36],[738,39,795,37],[738,40,795,38],[738,44,795,42,"Math"],[738,48,795,46],[738,49,795,47,"random"],[738,55,795,53],[738,56,795,54],[738,57,795,55],[738,59,795,57],[739,8,796,6,"name"],[739,12,796,10],[739,14,796,12],[739,26,796,24,"Math"],[739,30,796,28],[739,31,796,29,"floor"],[739,36,796,34],[739,37,796,35,"Math"],[739,41,796,39],[739,42,796,40,"random"],[739,48,796,46],[739,49,796,47],[739,50,796,48],[739,53,796,51],[739,56,796,54],[739,57,796,55],[739,59,796,57],[740,8,797,6,"health"],[740,14,797,12],[740,16,797,14],[740,18,797,16],[741,8,798,6,"maxHealth"],[741,17,798,15],[741,19,798,17],[741,21,798,19],[742,8,799,6,"stats"],[742,13,799,11],[742,15,799,13],[743,10,800,8,"attack"],[743,16,800,14],[743,18,800,16],[743,20,800,18],[744,10,801,8,"defense"],[744,17,801,15],[744,19,801,17],[744,21,801,19],[745,10,802,8,"health"],[745,16,802,14],[745,18,802,16],[745,20,802,18],[746,10,803,8,"maxHealth"],[746,19,803,17],[746,21,803,19],[746,23,803,21],[747,10,804,8,"critChance"],[747,20,804,18],[747,22,804,20],[747,23,804,21],[748,10,805,8,"critDamage"],[748,20,805,18],[748,22,805,20],[748,25,805,23],[749,10,806,8,"cooldownReduction"],[749,27,806,25],[749,29,806,27],[750,8,807,6],[750,9,807,7],[751,8,808,6,"position"],[751,16,808,14],[751,18,808,16],[752,10,808,18,"x"],[752,11,808,19],[753,10,808,21,"y"],[754,8,808,23],[754,9,808,24],[755,8,809,6,"lastDamaged"],[755,19,809,17],[755,21,809,19],[756,6,810,4],[756,7,810,5],[757,6,812,4,"console"],[757,13,812,11],[757,14,812,12,"log"],[757,17,812,15],[757,18,812,16],[757,42,812,40,"enemy"],[757,47,812,45],[757,48,812,46,"name"],[757,52,812,50],[757,60,812,58,"Math"],[757,64,812,62],[757,65,812,63,"round"],[757,70,812,68],[757,71,812,69,"x"],[757,72,812,70],[757,73,812,71],[757,78,812,76,"Math"],[757,82,812,80],[757,83,812,81,"round"],[757,88,812,86],[757,89,812,87,"y"],[757,90,812,88],[757,91,812,89],[757,94,812,92],[757,95,812,93],[758,6,813,4,"state"],[758,11,813,9],[758,12,813,10,"enemies"],[758,19,813,17],[758,20,813,18,"push"],[758,24,813,22],[758,25,813,23,"enemy"],[758,30,813,28],[758,31,813,29],[759,4,814,2],[759,5,814,3],[761,4,816,2],[762,4,817,2],[762,8,817,8,"startCombat"],[762,19,817,19],[762,22,817,22,"React"],[762,27,817,27],[762,28,817,27,"default"],[762,35,817,27],[762,36,817,28,"useCallback"],[762,47,817,39],[762,48,817,40],[762,54,817,46],[763,6,818,4,"console"],[763,13,818,11],[763,14,818,12,"log"],[763,17,818,15],[763,18,818,16],[763,63,818,61],[763,64,818,62],[764,6,819,4,"setCombatState"],[764,20,819,18],[764,21,819,19,"prev"],[764,25,819,23],[764,30,819,28],[765,8,819,30],[765,11,819,33,"prev"],[765,15,819,37],[766,8,819,39,"isInCombat"],[766,18,819,49],[766,20,819,51],[767,6,819,56],[767,7,819,57],[767,8,819,58],[767,9,819,59],[769,6,821,4],[770,6,822,4,"combatEngine"],[770,25,822,16],[770,26,822,16,"combatEngine"],[770,38,822,16],[770,39,822,17,"addTickCallback"],[770,54,822,32],[770,55,822,33,"handleCombatTick"],[770,71,822,49],[770,72,822,50],[771,6,823,4,"console"],[771,13,823,11],[771,14,823,12,"log"],[771,17,823,15],[771,18,823,16],[771,62,823,60],[771,63,823,61],[773,6,825,4],[774,6,826,4,"combatEngine"],[774,25,826,16],[774,26,826,16,"combatEngine"],[774,38,826,16],[774,39,826,17,"start"],[774,44,826,22],[774,45,826,23],[774,46,826,24],[775,4,827,2],[775,5,827,3],[775,7,827,5],[775,8,827,6,"combatEngine"],[775,27,827,18],[775,28,827,18,"combatEngine"],[775,40,827,18],[775,42,827,20,"handleCombatTick"],[775,58,827,36],[775,59,827,37],[775,60,827,38],[777,4,829,2],[778,4,830,2],[778,8,830,8,"stopCombat"],[778,18,830,18],[778,21,830,21,"React"],[778,26,830,26],[778,27,830,26,"default"],[778,34,830,26],[778,35,830,27,"useCallback"],[778,46,830,38],[778,47,830,39],[778,53,830,45],[779,6,831,4,"setCombatState"],[779,20,831,18],[779,21,831,19,"prev"],[779,25,831,23],[779,30,831,28],[780,8,831,30],[780,11,831,33,"prev"],[780,15,831,37],[781,8,831,39,"isInCombat"],[781,18,831,49],[781,20,831,51],[782,6,831,57],[782,7,831,58],[782,8,831,59],[782,9,831,60],[783,6,832,4,"combatEngine"],[783,25,832,16],[783,26,832,16,"combatEngine"],[783,38,832,16],[783,39,832,17,"removeTickCallback"],[783,57,832,35],[783,58,832,36,"handleCombatTick"],[783,74,832,52],[783,75,832,53],[784,4,833,2],[784,5,833,3],[784,7,833,5],[784,8,833,6,"combatEngine"],[784,27,833,18],[784,28,833,18,"combatEngine"],[784,40,833,18],[784,42,833,20,"handleCombatTick"],[784,58,833,36],[784,59,833,37],[784,60,833,38],[786,4,835,2],[787,4,836,2],[787,8,836,8,"equipAbility"],[787,20,836,20],[787,23,836,23,"equipAbility"],[787,24,836,24,"abilityId"],[787,33,836,41],[787,35,836,43,"slotIndex"],[787,44,836,60],[787,49,836,74],[788,6,837,4],[788,13,837,11,"combatState"],[788,24,837,22],[788,25,837,23,"abilityManager"],[788,39,837,37],[788,40,837,38,"equipAbility"],[788,52,837,50],[788,53,837,51,"abilityId"],[788,62,837,60],[788,64,837,62,"slotIndex"],[788,73,837,71],[788,74,837,72],[789,4,838,2],[789,5,838,3],[790,4,840,2],[790,8,840,8,"getDeck"],[790,15,840,15],[790,18,840,18,"getDeck"],[790,19,840,18],[790,24,840,24],[791,6,841,4],[791,13,841,11,"combatState"],[791,24,841,22],[791,25,841,23,"abilityManager"],[791,39,841,37],[791,40,841,38,"getDeck"],[791,47,841,45],[791,48,841,46],[791,49,841,47],[792,4,842,2],[792,5,842,3],[793,4,844,2],[793,8,844,8,"getAvailableAbilities"],[793,29,844,29],[793,32,844,32,"getAvailableAbilities"],[793,33,844,32],[793,38,844,38],[794,6,845,4],[794,13,845,11,"combatState"],[794,24,845,22],[794,25,845,23,"abilityManager"],[794,39,845,37],[794,40,845,38,"getAvailableAbilities"],[794,61,845,59],[794,62,845,60],[794,63,845,61],[795,4,846,2],[795,5,846,3],[796,4,848,2],[796,8,848,8,"upgradeAbility"],[796,22,848,22],[796,25,848,26,"abilityId"],[796,34,848,43],[796,38,848,57],[797,6,849,4],[797,13,849,11,"combatState"],[797,24,849,22],[797,25,849,23,"abilityManager"],[797,39,849,37],[797,40,849,38,"upgradeAbility"],[797,54,849,52],[797,55,849,53,"abilityId"],[797,64,849,62],[797,65,849,63],[798,4,850,2],[798,5,850,3],[800,4,852,2],[801,4,853,2],[801,8,853,8,"clearAllEnemies"],[801,23,853,23],[801,26,853,26,"clearAllEnemies"],[801,27,853,26],[801,32,853,32],[802,6,854,4,"console"],[802,13,854,11],[802,14,854,12,"log"],[802,17,854,15],[802,18,854,16],[802,67,854,65],[802,68,854,66],[803,6,855,4,"setCombatState"],[803,20,855,18],[803,21,855,19,"prev"],[803,25,855,23],[803,30,855,28],[804,8,856,6],[804,11,856,9,"prev"],[804,15,856,13],[805,8,857,6,"enemies"],[805,15,857,13],[805,17,857,15],[806,6,858,4],[806,7,858,5],[806,8,858,6],[806,9,858,7],[807,4,859,2],[807,5,859,3],[809,4,861,2],[810,4,862,2],[810,8,862,8,"triggerLevelUpExplosion"],[810,31,862,31],[810,34,862,34,"triggerLevelUpExplosion"],[810,35,862,34],[810,40,862,40],[811,6,863,4,"console"],[811,13,863,11],[811,14,863,12,"log"],[811,17,863,15],[811,18,863,16],[811,70,863,68],[811,71,863,69],[812,6,865,4],[812,10,865,10,"explosionTime"],[812,23,865,23],[812,26,865,26,"Date"],[812,30,865,30],[812,31,865,31,"now"],[812,34,865,34],[812,35,865,35],[812,36,865,36],[813,6,866,4,"setLastExplosionTime"],[813,26,866,24],[813,27,866,25,"explosionTime"],[813,40,866,38],[813,41,866,39],[814,6,868,4,"setCombatState"],[814,20,868,18],[814,21,868,19,"prev"],[814,25,868,23],[814,29,868,27],[815,8,869,6],[816,8,870,6],[816,12,870,12,"enemyCount"],[816,22,870,22],[816,25,870,25,"prev"],[816,29,870,29],[816,30,870,30,"enemies"],[816,37,870,37],[816,38,870,38,"length"],[816,44,870,44],[817,8,871,6],[817,12,871,12,"explosionXP"],[817,23,871,23],[817,26,871,26,"enemyCount"],[817,36,871,36],[817,39,871,39],[817,42,871,42],[817,43,871,43],[817,44,871,44],[818,8,872,6],[818,12,872,12,"explosionGold"],[818,25,872,25],[818,28,872,28,"enemyCount"],[818,38,872,38],[818,41,872,41],[818,44,872,44],[818,45,872,45],[818,46,872,46],[820,8,874,6,"console"],[820,15,874,13],[820,16,874,14,"log"],[820,19,874,17],[820,20,874,18],[820,44,874,42,"enemyCount"],[820,54,874,52],[820,76,874,74,"explosionXP"],[820,87,874,85],[820,98,874,96,"explosionGold"],[820,111,874,109],[820,118,874,116],[820,119,874,117],[822,8,876,6],[823,8,877,6],[823,12,877,10,"explosionXP"],[823,23,877,21],[823,26,877,24],[823,27,877,25],[823,29,877,27],[824,10,878,8,"setTimeout"],[824,20,878,18],[824,21,878,19],[824,27,878,25],[825,12,879,10,"game"],[825,16,879,14],[825,17,879,15,"updateNinja"],[825,28,879,26],[825,29,879,28,"ninja"],[825,34,879,33],[825,39,879,39],[826,14,880,12,"experience"],[826,24,880,22],[826,26,880,24,"ninja"],[826,31,880,29],[826,32,880,30,"experience"],[826,42,880,40],[826,45,880,43,"explosionXP"],[826,56,880,54],[827,14,881,12,"gold"],[827,18,881,16],[827,20,881,18,"ninja"],[827,25,881,23],[827,26,881,24,"gold"],[827,30,881,28],[827,33,881,31,"explosionGold"],[828,12,882,10],[828,13,882,11],[828,14,882,12],[828,15,882,13],[829,10,883,8],[829,11,883,9],[829,13,883,11],[829,14,883,12],[829,15,883,13],[829,16,883,14],[829,17,883,15],[830,8,884,6],[832,8,886,6],[833,8,887,6],[834,8,888,6],[834,12,888,12,"damagedEnemies"],[834,26,888,26],[834,29,888,29,"prev"],[834,33,888,33],[834,34,888,34,"enemies"],[834,41,888,41],[834,42,888,42,"map"],[834,45,888,45],[834,46,888,46,"enemy"],[834,51,888,51],[834,56,888,56],[835,10,889,8],[835,13,889,11,"enemy"],[835,18,889,16],[836,10,890,8,"health"],[836,16,890,14],[836,18,890,16],[836,19,890,17],[837,10,890,19],[838,10,891,8,"lastDamaged"],[838,21,891,19],[838,23,891,21,"combatEngine"],[838,42,891,33],[838,43,891,33,"combatEngine"],[838,55,891,33],[838,56,891,34,"getCurrentTick"],[838,70,891,48],[838,71,891,49],[839,8,892,6],[839,9,892,7],[839,10,892,8],[839,11,892,9],[840,8,894,6],[840,15,894,13],[841,10,895,8],[841,13,895,11,"prev"],[841,17,895,15],[842,10,896,8,"enemies"],[842,17,896,15],[842,19,896,17,"damagedEnemies"],[843,8,897,6],[843,9,897,7],[844,6,898,4],[844,7,898,5],[844,8,898,6],[845,4,899,2],[845,5,899,3],[847,4,901,2],[848,4,902,2],[848,8,902,8,"spawnEnemy"],[848,18,902,18],[848,21,902,22,"position"],[848,29,902,57],[848,33,902,75],[849,6,903,4],[849,10,903,10,"SCREEN_WIDTH"],[849,22,903,22],[849,25,903,25],[849,28,903,28],[850,6,904,4],[850,10,904,10,"GAME_AREA_HEIGHT"],[850,26,904,26],[850,29,904,29],[850,32,904,32],[850,35,904,35],[850,38,904,38],[850,39,904,39],[850,40,904,40],[851,6,905,4],[851,10,905,10,"ENEMY_SIZE"],[851,20,905,20],[851,23,905,23],[851,25,905,25],[853,6,907,4],[854,6,908,4],[854,10,908,10,"x"],[854,11,908,11],[854,14,908,14,"position"],[854,22,908,22],[854,24,908,24,"x"],[854,25,908,25],[854,29,908,29,"Math"],[854,33,908,33],[854,34,908,34,"random"],[854,40,908,40],[854,41,908,41],[854,42,908,42],[854,46,908,46,"SCREEN_WIDTH"],[854,58,908,58],[854,61,908,61,"ENEMY_SIZE"],[854,71,908,71],[854,74,908,74],[854,75,908,75],[854,76,908,76],[854,79,908,79,"ENEMY_SIZE"],[854,89,908,89],[855,6,909,4],[855,10,909,10,"y"],[855,11,909,11],[855,14,909,14,"position"],[855,22,909,22],[855,24,909,24,"y"],[855,25,909,25],[855,29,909,29,"Math"],[855,33,909,33],[855,34,909,34,"random"],[855,40,909,40],[855,41,909,41],[855,42,909,42],[855,46,909,46,"GAME_AREA_HEIGHT"],[855,62,909,62],[855,65,909,65,"ENEMY_SIZE"],[855,75,909,75],[855,78,909,78],[855,79,909,79],[855,80,909,80],[855,83,909,83,"ENEMY_SIZE"],[855,93,909,93],[856,6,911,4],[856,10,911,10,"enemy"],[856,15,911,28],[856,18,911,31],[857,8,912,6,"id"],[857,10,912,8],[857,12,912,10],[857,21,912,19],[857,23,912,21,"enemyCounter"],[857,35,912,33],[857,37,912,35],[858,8,913,6,"name"],[858,12,913,10],[858,14,913,12],[858,24,913,22],[859,8,914,6,"health"],[859,14,914,12],[859,16,914,14],[859,19,914,17],[860,8,915,6,"maxHealth"],[860,17,915,15],[860,19,915,17],[860,22,915,20],[861,8,916,6,"stats"],[861,13,916,11],[861,15,916,13],[862,10,917,8,"attack"],[862,16,917,14],[862,18,917,16],[862,20,917,18],[863,10,918,8,"defense"],[863,17,918,15],[863,19,918,17],[863,21,918,19],[864,10,919,8,"health"],[864,16,919,14],[864,18,919,16],[864,21,919,19],[865,10,920,8,"maxHealth"],[865,19,920,17],[865,21,920,19],[865,24,920,22],[866,10,921,8,"critChance"],[866,20,921,18],[866,22,921,20],[866,23,921,21],[867,10,922,8,"critDamage"],[867,20,922,18],[867,22,922,20],[867,25,922,23],[868,10,923,8,"cooldownReduction"],[868,27,923,25],[868,29,923,27],[869,8,924,6],[869,9,924,7],[870,8,925,6,"position"],[870,16,925,14],[870,18,925,16],[871,10,925,18,"x"],[871,11,925,19],[872,10,925,21,"y"],[873,8,925,23],[873,9,925,24],[874,8,926,6,"lastDamaged"],[874,19,926,17],[874,21,926,19],[875,6,927,4],[875,7,927,5],[876,6,929,4,"setCombatState"],[876,20,929,18],[876,21,929,19,"prev"],[876,25,929,23],[876,30,929,28],[877,8,930,6],[877,11,930,9,"prev"],[877,15,930,13],[878,8,931,6,"enemies"],[878,15,931,13],[878,17,931,15],[878,18,931,16],[878,21,931,19,"prev"],[878,25,931,23],[878,26,931,24,"enemies"],[878,33,931,31],[878,35,931,33,"enemy"],[878,40,931,38],[879,6,932,4],[879,7,932,5],[879,8,932,6],[879,9,932,7],[880,6,934,4],[880,13,934,11,"enemy"],[880,18,934,16],[881,4,935,2],[881,5,935,3],[883,4,937,2],[884,4,938,2],[884,8,938,8,"spawnBoss"],[884,17,938,17],[884,20,938,21,"bossEnemy"],[884,29,938,43],[884,33,938,48],[885,6,939,4,"console"],[885,13,939,11],[885,14,939,12,"log"],[885,17,939,15],[885,18,939,16],[885,39,939,37,"bossEnemy"],[885,48,939,46],[885,49,939,47,"name"],[885,53,939,51],[885,90,939,88],[885,91,939,89],[886,6,940,4,"setCombatState"],[886,20,940,18],[886,21,940,19,"prev"],[886,25,940,23],[886,30,940,28],[887,8,941,6],[887,11,941,9,"prev"],[887,15,941,13],[888,8,942,6,"enemies"],[888,15,942,13],[888,17,942,15],[888,18,942,16,"bossEnemy"],[888,27,942,25],[888,28,942,26],[888,29,942,27],[889,6,943,4],[889,7,943,5],[889,8,943,6],[889,9,943,7],[890,4,944,2],[890,5,944,3],[892,4,946,2],[893,4,947,2],[893,8,947,8,"clearSpecificEnemy"],[893,26,947,26],[893,29,947,30,"enemyId"],[893,36,947,45],[893,40,947,50],[894,6,948,4,"setCombatState"],[894,20,948,18],[894,21,948,19,"prev"],[894,25,948,23],[894,30,948,28],[895,8,949,6],[895,11,949,9,"prev"],[895,15,949,13],[896,8,950,6,"enemies"],[896,15,950,13],[896,17,950,15,"prev"],[896,21,950,19],[896,22,950,20,"enemies"],[896,29,950,27],[896,30,950,28,"filter"],[896,36,950,34],[896,37,950,35,"enemy"],[896,42,950,40],[896,46,950,44,"enemy"],[896,51,950,49],[896,52,950,50,"id"],[896,54,950,52],[896,59,950,57,"enemyId"],[896,66,950,64],[897,6,951,4],[897,7,951,5],[897,8,951,6],[897,9,951,7],[898,4,952,2],[898,5,952,3],[900,4,954,2],[901,4,955,2],[901,8,955,8,"useAbilityManually"],[901,26,955,26],[901,29,955,26,"_s3"],[901,32,955,26],[901,33,955,29],[901,37,955,29,"useCallback"],[901,43,955,40],[901,44,955,40,"useCallback"],[901,55,955,40],[901,57,955,40,"_s3"],[901,60,955,40],[901,61,955,42,"slotIndex"],[901,70,955,59],[901,74,955,73],[902,6,955,73,"_s3"],[902,9,955,73],[903,6,956,4,"console"],[903,13,956,11],[903,14,956,12,"log"],[903,17,956,15],[903,18,956,16],[903,65,956,63,"slotIndex"],[903,74,956,72],[903,76,956,74],[903,77,956,75],[904,6,957,4,"console"],[904,13,957,11],[904,14,957,12,"log"],[904,17,957,15],[904,18,957,16],[904,53,957,51,"slotIndex"],[904,62,957,60],[904,64,957,62],[904,65,957,63],[906,6,959,4],[907,6,960,4],[907,10,960,8],[907,11,960,9,"game"],[907,15,960,13],[907,16,960,14,"gameState"],[907,25,960,23],[907,26,960,24,"isAlive"],[907,33,960,31],[907,35,960,33],[908,8,961,6,"console"],[908,15,961,13],[908,16,961,14,"log"],[908,19,961,17],[908,20,961,18],[908,70,961,68],[908,71,961,69],[909,8,962,6],[909,15,962,13],[909,20,962,18],[910,6,963,4],[912,6,965,4],[913,6,966,4],[913,10,966,10,"isReady"],[913,17,966,17],[913,20,966,20,"combatState"],[913,31,966,31],[913,32,966,32,"abilityManager"],[913,46,966,46],[913,47,966,47,"isAbilityReady"],[913,61,966,61],[913,62,966,62,"slotIndex"],[913,71,966,71],[913,72,966,72],[914,6,967,4],[914,10,967,8],[914,11,967,9,"isReady"],[914,18,967,16],[914,20,967,18],[915,8,968,6,"console"],[915,15,968,13],[915,16,968,14,"log"],[915,19,968,17],[915,20,968,18],[915,41,968,39,"slotIndex"],[915,50,968,48],[915,85,968,83],[915,86,968,84],[916,8,969,6],[916,15,969,13],[916,20,969,18],[917,6,970,4],[919,6,972,4],[920,6,973,4],[920,10,973,8,"combatState"],[920,21,973,19],[920,22,973,20,"enemies"],[920,29,973,27],[920,30,973,28,"length"],[920,36,973,34],[920,41,973,39],[920,42,973,40],[920,44,973,42],[921,8,974,6,"console"],[921,15,974,13],[921,16,974,14,"log"],[921,19,974,17],[921,20,974,18],[921,69,974,67],[921,70,974,68],[922,8,975,6],[922,15,975,13],[922,20,975,18],[923,6,976,4],[925,6,978,4],[926,6,979,4],[926,10,979,10,"currentTick"],[926,21,979,21],[926,24,979,24,"combatEngine"],[926,43,979,36],[926,44,979,36,"combatEngine"],[926,56,979,36],[926,57,979,37,"getCurrentTick"],[926,71,979,51],[926,72,979,52],[926,73,979,53],[927,6,980,4],[927,10,980,10,"success"],[927,17,980,17],[927,20,980,20,"combatState"],[927,31,980,31],[927,32,980,32,"abilityManager"],[927,46,980,46],[927,47,980,47,"useAbility"],[927,57,980,57],[927,58,980,58,"slotIndex"],[927,67,980,67],[927,69,980,69,"currentTick"],[927,80,980,80],[927,81,980,81],[928,6,982,4],[928,10,982,8,"success"],[928,17,982,15],[928,19,982,17],[929,8,983,6],[930,8,984,6,"setCombatState"],[930,22,984,20],[930,23,984,21,"prev"],[930,27,984,25],[930,31,984,29],[931,10,985,8],[931,14,985,14,"newState"],[931,22,985,22],[931,25,985,25],[932,12,985,27],[932,15,985,30,"prev"],[933,10,985,35],[933,11,985,36],[934,10,986,8,"castAbility"],[934,21,986,19],[934,22,986,20,"newState"],[934,30,986,28],[934,32,986,30,"slotIndex"],[934,41,986,39],[934,42,986,40],[935,10,987,8],[935,17,987,15,"newState"],[935,25,987,23],[936,8,988,6],[936,9,988,7],[936,10,988,8],[937,8,990,6,"console"],[937,15,990,13],[937,16,990,14,"log"],[937,19,990,17],[937,20,990,18],[937,65,990,63,"slotIndex"],[937,74,990,72],[937,76,990,74],[937,77,990,75],[938,8,991,6],[938,15,991,13],[938,19,991,17],[939,6,992,4],[939,7,992,5],[939,13,992,11],[940,8,993,6,"console"],[940,15,993,13],[940,16,993,14,"log"],[940,19,993,17],[940,20,993,18],[940,61,993,59,"slotIndex"],[940,70,993,68],[940,72,993,70],[940,73,993,71],[941,8,994,6],[941,15,994,13],[941,20,994,18],[942,6,995,4],[943,4,996,2],[943,5,996,3],[943,46,996,5],[943,47,996,6,"combatState"],[943,58,996,17],[943,59,996,18,"abilityManager"],[943,73,996,32],[943,75,996,34,"combatState"],[943,86,996,45],[943,87,996,46,"enemies"],[943,94,996,53],[943,95,996,54],[943,96,996,55],[944,4,997,2],[944,8,997,2,"useEffect"],[944,14,997,11],[944,15,997,11,"useEffect"],[944,24,997,11],[944,26,997,12],[944,32,997,18],[945,6,998,4,"combatEngine"],[945,25,998,16],[945,26,998,16,"combatEngine"],[945,38,998,16],[945,39,998,17,"start"],[945,44,998,22],[945,45,998,23],[945,46,998,24],[947,6,1000,4],[948,6,1001,4],[949,6,1002,4,"console"],[949,13,1002,11],[949,14,1002,12,"log"],[949,17,1002,15],[949,18,1002,16],[949,97,1002,95],[949,98,1002,96],[950,6,1004,4],[950,13,1004,11],[950,19,1004,17],[951,8,1005,6,"combatEngine"],[951,27,1005,18],[951,28,1005,18,"combatEngine"],[951,40,1005,18],[951,41,1005,19,"stop"],[951,45,1005,23],[951,46,1005,24],[951,47,1005,25],[952,6,1006,4],[952,7,1006,5],[953,4,1007,2],[953,5,1007,3],[953,7,1007,5],[953,9,1007,7],[953,10,1007,8],[955,4,1009,2],[956,4,1010,2],[956,8,1010,2,"useEffect"],[956,14,1010,11],[956,15,1010,11,"useEffect"],[956,24,1010,11],[956,26,1010,12],[956,32,1010,18],[957,6,1011,4],[957,10,1011,10,"processProjectileImpacts"],[957,34,1011,34],[957,37,1011,37,"processProjectileImpacts"],[957,38,1011,37],[957,43,1011,43],[958,8,1012,6,"setProjectiles"],[958,22,1012,20],[958,23,1012,21,"currentProjectiles"],[958,41,1012,39],[958,45,1012,43],[959,10,1013,8],[959,17,1013,15,"currentProjectiles"],[959,35,1013,33],[959,36,1013,34,"map"],[959,39,1013,37],[959,40,1013,38,"projectile"],[959,50,1013,48],[959,54,1013,52],[960,12,1014,10],[960,16,1014,14],[960,17,1014,15,"projectile"],[960,27,1014,25],[960,29,1014,27],[960,36,1014,34],[960,40,1014,38],[962,12,1016,10],[963,12,1017,10],[963,16,1017,16,"currentTime"],[963,27,1017,27],[963,30,1017,30,"Date"],[963,34,1017,34],[963,35,1017,35,"now"],[963,38,1017,38],[963,39,1017,39],[963,40,1017,40],[964,12,1018,10],[964,16,1018,16,"startTime"],[964,25,1018,25],[964,28,1018,28,"projectile"],[964,38,1018,38],[964,39,1018,39,"startTime"],[964,48,1018,48],[964,52,1018,52,"currentTime"],[964,63,1018,63],[965,12,1019,10],[965,16,1019,16,"elapsedTime"],[965,27,1019,27],[965,30,1019,30,"currentTime"],[965,41,1019,41],[965,44,1019,44,"startTime"],[965,53,1019,53],[966,12,1020,10],[966,16,1020,16,"progress"],[966,24,1020,24],[966,27,1020,27,"Math"],[966,31,1020,31],[966,32,1020,32,"min"],[966,35,1020,35],[966,36,1020,36,"elapsedTime"],[966,47,1020,47],[966,51,1020,51,"projectile"],[966,61,1020,61],[966,62,1020,62,"duration"],[966,70,1020,70],[966,74,1020,74],[966,77,1020,77],[966,78,1020,78],[966,80,1020,80],[966,81,1020,81],[966,82,1020,82],[968,12,1022,10],[969,12,1023,10],[969,16,1023,14,"progress"],[969,24,1023,22],[969,28,1023,26],[969,29,1023,27],[969,33,1023,31],[969,34,1023,32,"projectile"],[969,44,1023,42],[969,45,1023,43,"hasHit"],[969,51,1023,49],[969,53,1023,51],[970,14,1024,12,"projectile"],[970,24,1024,22],[970,25,1024,23,"hasHit"],[970,31,1024,29],[970,34,1024,32],[970,38,1024,36],[971,14,1026,12,"setCombatState"],[971,28,1026,26],[971,29,1026,27,"prev"],[971,33,1026,31],[971,37,1026,35],[972,16,1027,14],[972,20,1027,20,"newState"],[972,28,1027,28],[972,31,1027,31],[973,18,1027,33],[973,21,1027,36,"prev"],[974,16,1027,41],[974,17,1027,42],[975,16,1029,14],[975,20,1029,18,"projectile"],[975,30,1029,28],[975,31,1029,29,"isAOE"],[975,36,1029,34],[975,40,1029,38,"projectile"],[975,50,1029,48],[975,51,1029,49,"aoeRadius"],[975,60,1029,58],[975,64,1029,62,"projectile"],[975,74,1029,72],[975,75,1029,73,"aoeRadius"],[975,84,1029,82],[975,87,1029,85],[975,88,1029,86],[975,90,1029,88],[976,18,1030,16],[977,18,1031,16,"console"],[977,25,1031,23],[977,26,1031,24,"log"],[977,29,1031,27],[977,30,1031,28],[977,59,1031,57,"projectile"],[977,69,1031,67],[977,70,1031,68,"abilityName"],[977,81,1031,79],[977,97,1031,95,"projectile"],[977,107,1031,105],[977,108,1031,106,"aoeRadius"],[977,117,1031,115],[977,119,1031,117],[977,120,1031,118],[978,18,1033,16],[978,22,1033,22,"impactX"],[978,29,1033,29],[978,32,1033,32,"projectile"],[978,42,1033,42],[978,43,1033,43,"targetX"],[978,50,1033,50],[979,18,1034,16],[979,22,1034,22,"impactY"],[979,29,1034,29],[979,32,1034,32,"projectile"],[979,42,1034,42],[979,43,1034,43,"targetY"],[979,50,1034,50],[980,18,1035,16],[980,22,1035,22,"enemiesKilled"],[980,35,1035,50],[980,38,1035,53],[980,40,1035,55],[982,18,1037,16],[983,18,1038,16,"newState"],[983,26,1038,24],[983,27,1038,25,"enemies"],[983,34,1038,32],[983,37,1038,35,"newState"],[983,45,1038,43],[983,46,1038,44,"enemies"],[983,53,1038,51],[983,54,1038,52,"map"],[983,57,1038,55],[983,58,1038,56,"enemy"],[983,63,1038,61],[983,67,1038,65],[984,20,1039,18],[984,24,1039,22,"enemy"],[984,29,1039,27],[984,30,1039,28,"health"],[984,36,1039,34],[984,40,1039,38],[984,41,1039,39],[984,45,1039,43,"enemy"],[984,50,1039,48],[984,51,1039,49,"markedForDeath"],[984,65,1039,63],[984,67,1039,65],[984,74,1039,72,"enemy"],[984,79,1039,77],[985,20,1041,18],[985,24,1041,24,"enemyX"],[985,30,1041,30],[985,33,1041,33,"enemy"],[985,38,1041,38],[985,39,1041,39,"position"],[985,47,1041,47],[985,48,1041,48,"x"],[985,49,1041,49],[985,52,1041,52],[985,56,1041,56],[985,57,1041,57],[985,58,1041,58],[986,20,1042,18],[986,24,1042,24,"enemyY"],[986,30,1042,30],[986,33,1042,33,"enemy"],[986,38,1042,38],[986,39,1042,39,"position"],[986,47,1042,47],[986,48,1042,48,"y"],[986,49,1042,49],[986,52,1042,52],[986,56,1042,56],[987,20,1043,18],[987,24,1043,24,"distance"],[987,32,1043,32],[987,35,1043,35,"Math"],[987,39,1043,39],[987,40,1043,40,"sqrt"],[987,44,1043,44],[987,45,1043,45,"Math"],[987,49,1043,49],[987,50,1043,50,"pow"],[987,53,1043,53],[987,54,1043,54,"enemyX"],[987,60,1043,60],[987,63,1043,63,"impactX"],[987,70,1043,70],[987,72,1043,72],[987,73,1043,73],[987,74,1043,74],[987,77,1043,77,"Math"],[987,81,1043,81],[987,82,1043,82,"pow"],[987,85,1043,85],[987,86,1043,86,"enemyY"],[987,92,1043,92],[987,95,1043,95,"impactY"],[987,102,1043,102],[987,104,1043,104],[987,105,1043,105],[987,106,1043,106],[987,107,1043,107],[988,20,1045,18,"console"],[988,27,1045,25],[988,28,1045,26,"log"],[988,31,1045,29],[988,32,1045,30],[988,58,1045,56,"enemy"],[988,63,1045,61],[988,64,1045,62,"name"],[988,68,1045,66],[988,76,1045,74,"enemyX"],[988,82,1045,80],[988,87,1045,85,"enemyY"],[988,93,1045,91],[988,109,1045,107,"impactX"],[988,116,1045,114],[988,121,1045,119,"impactY"],[988,128,1045,126],[988,135,1045,133,"distance"],[988,143,1045,141],[988,144,1045,142,"toFixed"],[988,151,1045,149],[988,152,1045,150],[988,153,1045,151],[988,154,1045,152],[988,169,1045,167,"projectile"],[988,179,1045,177],[988,180,1045,178,"aoeRadius"],[988,189,1045,187],[988,194,1045,192],[988,195,1045,193],[989,20,1047,18],[989,24,1047,22,"distance"],[989,32,1047,30],[989,36,1047,34,"projectile"],[989,46,1047,44],[989,47,1047,45,"aoeRadius"],[989,56,1047,54],[989,58,1047,56],[990,22,1048,20],[991,22,1049,20],[991,26,1049,26,"newHealth"],[991,35,1049,35],[991,38,1049,38,"Math"],[991,42,1049,42],[991,43,1049,43,"max"],[991,46,1049,46],[991,47,1049,47],[991,48,1049,48],[991,50,1049,50,"enemy"],[991,55,1049,55],[991,56,1049,56,"health"],[991,62,1049,62],[991,65,1049,65,"projectile"],[991,75,1049,75],[991,76,1049,76,"damage"],[991,82,1049,82],[991,83,1049,83],[992,22,1051,20,"console"],[992,29,1051,27],[992,30,1051,28,"log"],[992,33,1051,31],[992,34,1051,32],[992,52,1051,50,"enemy"],[992,57,1051,55],[992,58,1051,56,"name"],[992,62,1051,60],[992,74,1051,72,"projectile"],[992,84,1051,82],[992,85,1051,83,"damage"],[992,91,1051,89],[992,103,1051,101,"enemy"],[992,108,1051,106],[992,109,1051,107,"health"],[992,115,1051,113],[992,122,1051,120,"newHealth"],[992,131,1051,129],[992,134,1051,132],[992,135,1051,133],[994,22,1053,20],[995,22,1054,20],[995,26,1054,24,"newHealth"],[995,35,1054,33],[995,39,1054,37],[995,40,1054,38],[995,44,1054,42,"enemy"],[995,49,1054,47],[995,50,1054,48,"health"],[995,56,1054,54],[995,59,1054,57],[995,60,1054,58],[995,62,1054,60],[996,24,1055,22,"console"],[996,31,1055,29],[996,32,1055,30,"log"],[996,35,1055,33],[996,36,1055,34],[996,52,1055,50,"enemy"],[996,57,1055,55],[996,58,1055,56,"name"],[996,62,1055,60],[996,76,1055,74,"projectile"],[996,86,1055,84],[996,87,1055,85,"abilityName"],[996,98,1055,96],[996,101,1055,99],[996,102,1055,100],[997,24,1056,22,"enemiesKilled"],[997,37,1056,35],[997,38,1056,36,"push"],[997,42,1056,40],[997,43,1056,41,"enemy"],[997,48,1056,46],[997,49,1056,47],[997,50,1056,48],[997,51,1056,49],[999,24,1058,22],[999,31,1058,29],[1000,26,1059,24],[1000,29,1059,27,"enemy"],[1000,34,1059,32],[1001,26,1060,24,"health"],[1001,32,1060,30],[1001,34,1060,32],[1001,35,1060,33],[1002,26,1061,24,"markedForDeath"],[1002,40,1061,38],[1002,42,1061,40],[1002,46,1061,44],[1003,26,1062,24,"lastDamaged"],[1003,37,1062,35],[1003,39,1062,37,"combatEngine"],[1003,58,1062,49],[1003,59,1062,49,"combatEngine"],[1003,71,1062,49],[1003,72,1062,50,"getCurrentTick"],[1003,86,1062,64],[1003,87,1062,65],[1004,24,1063,22],[1004,25,1063,23],[1005,22,1064,20],[1005,23,1064,21],[1005,29,1064,27],[1006,24,1065,22],[1006,31,1065,29],[1007,26,1066,24],[1007,29,1066,27,"enemy"],[1007,34,1066,32],[1008,26,1067,24,"health"],[1008,32,1067,30],[1008,34,1067,32,"newHealth"],[1008,43,1067,41],[1009,26,1068,24,"lastDamaged"],[1009,37,1068,35],[1009,39,1068,37,"combatEngine"],[1009,58,1068,49],[1009,59,1068,49,"combatEngine"],[1009,71,1068,49],[1009,72,1068,50,"getCurrentTick"],[1009,86,1068,64],[1009,87,1068,65],[1010,24,1069,22],[1010,25,1069,23],[1011,22,1070,20],[1012,20,1071,18],[1013,20,1073,18],[1013,27,1073,25,"enemy"],[1013,32,1073,30],[1013,33,1073,31],[1013,34,1073,32],[1014,18,1074,16],[1014,19,1074,17],[1014,20,1074,18],[1016,18,1076,16],[1017,18,1077,16],[1017,22,1077,20,"enemiesKilled"],[1017,35,1077,33],[1017,36,1077,34,"length"],[1017,42,1077,40],[1017,45,1077,43],[1017,46,1077,44],[1017,48,1077,46],[1018,20,1078,18,"console"],[1018,27,1078,25],[1018,28,1078,26,"log"],[1018,31,1078,29],[1018,32,1078,30],[1018,52,1078,50,"enemiesKilled"],[1018,65,1078,63],[1018,66,1078,64,"length"],[1018,72,1078,70],[1018,94,1078,92,"projectile"],[1018,104,1078,102],[1018,105,1078,103,"abilityName"],[1018,116,1078,114],[1018,118,1078,116],[1018,119,1078,117],[1019,20,1079,18,"setTimeout"],[1019,30,1079,28],[1019,31,1079,29],[1019,37,1079,35],[1020,22,1080,20,"enemiesKilled"],[1020,35,1080,33],[1020,36,1080,34,"forEach"],[1020,43,1080,41],[1020,44,1080,42,"enemy"],[1020,49,1080,47],[1020,53,1080,51,"handleEnemyKill"],[1020,68,1080,66],[1020,69,1080,67,"enemy"],[1020,74,1080,72],[1020,75,1080,73],[1020,76,1080,74],[1021,20,1081,18],[1021,21,1081,19],[1021,23,1081,21],[1021,24,1081,22],[1021,25,1081,23],[1022,18,1082,16],[1023,16,1084,14],[1023,17,1084,15],[1023,23,1084,21],[1024,18,1085,16],[1025,18,1086,16],[1025,22,1086,22,"enemyIndex"],[1025,32,1086,32],[1025,35,1086,35,"newState"],[1025,43,1086,43],[1025,44,1086,44,"enemies"],[1025,51,1086,51],[1025,52,1086,52,"findIndex"],[1025,61,1086,61],[1025,62,1086,62,"e"],[1025,63,1086,63],[1025,67,1086,67,"e"],[1025,68,1086,68],[1025,69,1086,69,"id"],[1025,71,1086,71],[1025,76,1086,76,"projectile"],[1025,86,1086,86],[1025,87,1086,87,"targetEnemyId"],[1025,100,1086,100],[1025,101,1086,101],[1026,18,1088,16],[1026,22,1088,20,"enemyIndex"],[1026,32,1088,30],[1026,36,1088,34],[1026,37,1088,35],[1026,41,1088,39,"newState"],[1026,49,1088,47],[1026,50,1088,48,"enemies"],[1026,57,1088,55],[1026,58,1088,56,"enemyIndex"],[1026,68,1088,66],[1026,69,1088,67],[1026,70,1088,68,"health"],[1026,76,1088,74],[1026,79,1088,77],[1026,80,1088,78],[1026,84,1088,82],[1026,85,1088,83,"newState"],[1026,93,1088,91],[1026,94,1088,92,"enemies"],[1026,101,1088,99],[1026,102,1088,100,"enemyIndex"],[1026,112,1088,110],[1026,113,1088,111],[1026,114,1088,112,"markedForDeath"],[1026,128,1088,126],[1026,130,1088,128],[1027,20,1089,18,"newState"],[1027,28,1089,26],[1027,29,1089,27,"enemies"],[1027,36,1089,34],[1027,39,1089,37],[1027,40,1089,38],[1027,43,1089,41,"newState"],[1027,51,1089,49],[1027,52,1089,50,"enemies"],[1027,59,1089,57],[1027,60,1089,58],[1028,20,1090,18],[1028,24,1090,24,"enemy"],[1028,29,1090,29],[1028,32,1090,32,"newState"],[1028,40,1090,40],[1028,41,1090,41,"enemies"],[1028,48,1090,48],[1028,49,1090,49,"enemyIndex"],[1028,59,1090,59],[1028,60,1090,60],[1029,20,1091,18],[1029,24,1091,24,"newHealth"],[1029,33,1091,33],[1029,36,1091,36,"Math"],[1029,40,1091,40],[1029,41,1091,41,"max"],[1029,44,1091,44],[1029,45,1091,45],[1029,46,1091,46],[1029,48,1091,48,"enemy"],[1029,53,1091,53],[1029,54,1091,54,"health"],[1029,60,1091,60],[1029,63,1091,63,"projectile"],[1029,73,1091,73],[1029,74,1091,74,"damage"],[1029,80,1091,80],[1029,81,1091,81],[1030,20,1093,18,"newState"],[1030,28,1093,26],[1030,29,1093,27,"enemies"],[1030,36,1093,34],[1030,37,1093,35,"enemyIndex"],[1030,47,1093,45],[1030,48,1093,46],[1030,51,1093,49],[1031,22,1094,20],[1031,25,1094,23,"enemy"],[1031,30,1094,28],[1032,22,1095,20,"health"],[1032,28,1095,26],[1032,30,1095,28,"newHealth"],[1032,39,1095,37],[1033,22,1096,20,"lastDamaged"],[1033,33,1096,31],[1033,35,1096,33,"combatEngine"],[1033,54,1096,45],[1033,55,1096,45,"combatEngine"],[1033,67,1096,45],[1033,68,1096,46,"getCurrentTick"],[1033,82,1096,60],[1033,83,1096,61],[1034,20,1097,18],[1034,21,1097,19],[1035,20,1099,18,"console"],[1035,27,1099,25],[1035,28,1099,26,"log"],[1035,31,1099,29],[1035,32,1099,30],[1035,60,1099,58,"enemy"],[1035,65,1099,63],[1035,66,1099,64,"name"],[1035,70,1099,68],[1035,82,1099,80,"newHealth"],[1035,91,1099,89],[1035,95,1099,93,"enemy"],[1035,100,1099,98],[1035,101,1099,99,"maxHealth"],[1035,110,1099,108],[1035,112,1099,110],[1035,113,1099,111],[1037,20,1101,18],[1038,20,1102,18],[1038,24,1102,22,"newHealth"],[1038,33,1102,31],[1038,37,1102,35],[1038,38,1102,36],[1038,42,1102,40,"enemy"],[1038,47,1102,45],[1038,48,1102,46,"health"],[1038,54,1102,52],[1038,57,1102,55],[1038,58,1102,56],[1038,60,1102,58],[1039,22,1103,20,"console"],[1039,29,1103,27],[1039,30,1103,28,"log"],[1039,33,1103,31],[1039,34,1103,32],[1039,60,1103,58,"enemy"],[1039,65,1103,63],[1039,66,1103,64,"name"],[1039,70,1103,68],[1039,84,1103,82,"projectile"],[1039,94,1103,92],[1039,95,1103,93,"abilityName"],[1039,106,1103,104],[1039,109,1103,107],[1039,110,1103,108],[1041,22,1105,20],[1042,22,1106,20,"newState"],[1042,30,1106,28],[1042,31,1106,29,"enemies"],[1042,38,1106,36],[1042,39,1106,37,"enemyIndex"],[1042,49,1106,47],[1042,50,1106,48],[1042,53,1106,51],[1043,24,1107,22],[1043,27,1107,25,"newState"],[1043,35,1107,33],[1043,36,1107,34,"enemies"],[1043,43,1107,41],[1043,44,1107,42,"enemyIndex"],[1043,54,1107,52],[1043,55,1107,53],[1044,24,1108,22,"health"],[1044,30,1108,28],[1044,32,1108,30],[1044,33,1108,31],[1045,24,1109,22,"markedForDeath"],[1045,38,1109,36],[1045,40,1109,38],[1046,22,1110,20],[1046,23,1110,21],[1048,22,1112,20],[1049,22,1113,20,"setTimeout"],[1049,32,1113,30],[1049,33,1113,31],[1049,39,1113,37,"handleEnemyKill"],[1049,54,1113,52],[1049,55,1113,53,"enemy"],[1049,60,1113,58],[1049,61,1113,59],[1049,63,1113,61],[1049,64,1113,62],[1049,65,1113,63],[1050,20,1114,18],[1051,18,1115,16],[1052,16,1116,14],[1053,16,1118,14],[1053,23,1118,21,"newState"],[1053,31,1118,29],[1054,14,1119,12],[1054,15,1119,13],[1054,16,1119,14],[1055,12,1120,10],[1057,12,1122,10],[1058,12,1123,10],[1058,16,1123,14,"progress"],[1058,24,1123,22],[1058,28,1123,26],[1058,31,1123,29],[1058,33,1123,31],[1059,14,1124,12],[1059,21,1124,19],[1059,25,1124,23],[1060,12,1125,10],[1061,12,1127,10],[1061,19,1127,17,"projectile"],[1061,29,1127,27],[1062,10,1128,8],[1062,11,1128,9],[1062,12,1128,10],[1062,13,1128,11,"filter"],[1062,19,1128,17],[1062,20,1128,18,"Boolean"],[1062,27,1128,25],[1062,28,1128,26],[1063,8,1129,6],[1063,9,1129,7],[1063,10,1129,8],[1064,6,1130,4],[1064,7,1130,5],[1066,6,1132,4],[1067,6,1133,4],[1067,10,1133,10,"impactInterval"],[1067,24,1133,24],[1067,27,1133,27,"setInterval"],[1067,38,1133,38],[1067,39,1133,39,"processProjectileImpacts"],[1067,63,1133,63],[1067,65,1133,65],[1067,67,1133,67],[1067,68,1133,68],[1068,6,1134,4],[1068,13,1134,11],[1068,19,1134,17,"clearInterval"],[1068,32,1134,30],[1068,33,1134,31,"impactInterval"],[1068,47,1134,45],[1068,48,1134,46],[1069,4,1135,2],[1069,5,1135,3],[1069,7,1135,5],[1069,8,1135,6,"handleEnemyKill"],[1069,23,1135,21],[1069,24,1135,22],[1069,25,1135,23],[1071,4,1137,2],[1072,4,1138,2],[1072,8,1138,8,"saveAbilityData"],[1072,23,1138,23],[1072,26,1138,26],[1072,30,1138,26,"useCallback"],[1072,36,1138,37],[1072,37,1138,37,"useCallback"],[1072,48,1138,37],[1072,50,1138,38],[1072,56,1138,44],[1073,6,1139,4],[1073,10,1139,8,"combatState"],[1073,21,1139,19],[1073,22,1139,20,"abilityManager"],[1073,36,1139,34],[1073,38,1139,36],[1074,8,1140,6],[1074,12,1140,12,"abilityData"],[1074,23,1140,23],[1074,26,1140,26,"combatState"],[1074,37,1140,37],[1074,38,1140,38,"abilityManager"],[1074,52,1140,52],[1074,53,1140,53,"getSaveData"],[1074,64,1140,64],[1074,65,1140,65],[1074,66,1140,66],[1075,8,1141,6,"console"],[1075,15,1141,13],[1075,16,1141,14,"log"],[1075,19,1141,17],[1075,20,1141,18],[1075,70,1141,68],[1075,72,1141,70,"abilityData"],[1075,83,1141,81],[1075,84,1141,82],[1076,8,1142,6,"game"],[1076,12,1142,10],[1076,13,1142,11,"updateAbilityData"],[1076,30,1142,28],[1076,31,1142,29,"abilityData"],[1076,42,1142,40],[1076,43,1142,41],[1077,6,1143,4],[1078,4,1144,2],[1078,5,1144,3],[1078,7,1144,5],[1078,8,1144,6,"combatState"],[1078,19,1144,17],[1078,20,1144,18,"abilityManager"],[1078,34,1144,32],[1078,36,1144,34,"game"],[1078,40,1144,38],[1078,41,1144,39,"updateAbilityData"],[1078,58,1144,56],[1078,59,1144,57],[1078,60,1144,58],[1079,4,1146,2],[1079,8,1146,8,"contextValue"],[1079,20,1146,39],[1079,23,1146,42,"React"],[1079,28,1146,47],[1079,29,1146,47,"default"],[1079,36,1146,47],[1079,37,1146,48,"useMemo"],[1079,44,1146,55],[1079,45,1146,56],[1079,52,1146,63],[1080,6,1147,4,"combatState"],[1080,17,1147,15],[1081,6,1148,4,"projectiles"],[1081,17,1148,15],[1082,6,1149,4,"startCombat"],[1082,17,1149,15],[1083,6,1150,4,"stopCombat"],[1083,16,1150,14],[1084,6,1151,4,"equipAbility"],[1084,18,1151,16],[1085,6,1152,4,"handleEnemyKill"],[1085,21,1152,19],[1086,6,1153,4,"getDeck"],[1086,13,1153,11],[1087,6,1154,4,"getAvailableAbilities"],[1087,27,1154,25],[1088,6,1155,4,"upgradeAbility"],[1088,20,1155,18],[1089,6,1156,4,"spawnEnemy"],[1089,16,1156,14],[1090,6,1157,4,"spawnBoss"],[1090,15,1157,13],[1091,6,1158,4,"clearAllEnemies"],[1091,21,1158,19],[1092,6,1159,4,"clearSpecificEnemy"],[1092,24,1159,22],[1093,6,1160,4,"triggerLevelUpExplosion"],[1093,29,1160,27],[1094,6,1161,4,"findClosestEnemy"],[1094,22,1161,20],[1095,6,1162,4,"updateNinjaPosition"],[1095,25,1162,23],[1096,6,1163,4,"setManualControlActive"],[1096,28,1163,26],[1097,6,1164,4,"lastExplosionTime"],[1097,23,1164,21],[1098,6,1165,4,"useAbilityManually"],[1098,24,1165,22],[1099,6,1165,24],[1100,6,1166,4,"saveAbilityData"],[1100,21,1166,19],[1101,6,1166,21],[1102,6,1167,4,"shadowClone"],[1102,17,1167,15],[1102,19,1167,17,"combatState"],[1102,30,1167,28],[1102,31,1167,29,"shadowClone"],[1102,42,1167,40],[1102,43,1167,42],[1103,4,1168,2],[1103,5,1168,3],[1103,6,1168,4],[1103,8,1168,6],[1104,4,1169,4],[1105,4,1170,4],[1106,4,1171,4,"combatState"],[1106,15,1171,15],[1106,17,1172,4,"projectiles"],[1106,28,1172,15],[1106,30,1173,4,"lastExplosionTime"],[1106,47,1173,21],[1107,4,1174,4],[1108,4,1175,4,"combatState"],[1108,15,1175,15],[1108,16,1175,16,"abilityManager"],[1108,30,1175,30],[1108,32,1176,4,"combatState"],[1108,43,1176,15],[1108,44,1176,16,"enemies"],[1108,51,1176,23],[1108,53,1177,4,"combatState"],[1108,64,1177,15],[1108,65,1177,16,"shadowClone"],[1108,76,1177,27],[1109,4,1177,29],[1110,4,1178,4,"useAbilityManually"],[1110,22,1178,22],[1111,4,1178,24],[1112,4,1179,4,"saveAbilityData"],[1112,19,1179,19],[1112,20,1179,21],[1113,4,1179,21],[1113,5,1180,3],[1113,6,1180,4],[1114,4,1182,2],[1114,24,1183,4],[1114,28,1183,4,"_reactJsxDevRuntime"],[1114,47,1183,4],[1114,48,1183,4,"jsxDEV"],[1114,54,1183,4],[1114,56,1183,5,"CombatContext"],[1114,69,1183,18],[1114,70,1183,19,"Provider"],[1114,78,1183,27],[1115,6,1183,28,"value"],[1115,11,1183,33],[1115,13,1183,35,"contextValue"],[1115,25,1183,48],[1116,6,1183,48,"children"],[1116,14,1183,48],[1116,16,1184,7,"children"],[1117,4,1184,15],[1118,6,1184,15,"fileName"],[1118,14,1184,15],[1118,16,1184,15,"_jsxFileName"],[1118,28,1184,15],[1119,6,1184,15,"lineNumber"],[1119,16,1184,15],[1120,6,1184,15,"columnNumber"],[1120,18,1184,15],[1121,4,1184,15],[1121,11,1185,28],[1121,12,1185,29],[1122,2,1187,0],[1122,3,1187,1],[1123,2,1187,2,"_s4"],[1123,5,1187,2],[1123,6,103,13,"CombatProvider"],[1123,20,103,27],[1124,4,103,27],[1124,12,104,15,"useGame"],[1124,24,104,22],[1124,25,104,22,"useGame"],[1124,32,104,22],[1124,34,105,77,"useZone"],[1124,46,105,84],[1124,47,105,84,"useZone"],[1124,54,105,84],[1125,2,105,84],[1126,2,105,84,"_c"],[1126,4,105,84],[1126,7,103,13,"CombatProvider"],[1126,21,103,27],[1127,2,103,27],[1127,6,103,27,"_c"],[1127,8,103,27],[1128,2,103,27,"$RefreshReg$"],[1128,14,103,27],[1128,15,103,27,"_c"],[1128,17,103,27],[1129,0,103,27],[1129,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;6BG4C;SHO;sBIG;OJU;GxBoB;2B6BG;mBP0C,6BO;ezBG;KyBE;G7BG;yB8BG;G9BsC;8B+BG;G/B4B;wCgCG;mB9BE,uC8B;GhCQ;uCiCG;mB/BC,wC+B;GjCE;uBkCG;GlCE;kBmCE;GnCE;gCoCE;GpCE;yBqCE;GrCE;0BsCG;mBpCE;MoCG;GtCC;kCuCG;mBrCM;mBEU;2BCC;YDG;SFC;8CsCK;QtCI;KqCM;GvCC;qByCG;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C6B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBzBC;sC0BC;2B9Ca;wD+CY;iB/CoC;6BEK;0C8CC,+B9C;mBFC;8DMK,sCN;+BE2B,4BF;a8CM;S1BS;OyBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}