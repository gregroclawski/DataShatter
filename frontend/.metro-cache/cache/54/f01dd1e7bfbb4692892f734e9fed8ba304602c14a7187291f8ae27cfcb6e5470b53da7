{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1140,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1201,2],[27,6,1201,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1201,2],[27,42,1201,2,"require"],[27,49,1201,2],[27,50,1201,2,"_dependencyMap"],[27,64,1201,2],[28,2,1201,2],[28,6,1201,2,"_slicedToArray"],[28,20,1201,2],[28,23,1201,2,"_interopDefault"],[28,38,1201,2],[28,39,1201,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1201,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,73,173,71],[135,75,173,73,"enemy"],[135,80,173,78],[135,81,173,79,"id"],[135,83,173,81],[135,84,173,82],[137,6,175,4],[138,6,176,4],[138,10,176,10,"baseXpReward"],[138,22,176,22],[138,25,176,25],[138,28,176,28],[138,29,176,29],[138,30,176,30],[139,6,177,4],[139,10,177,10,"xpMultiplier"],[139,22,177,22],[139,25,177,25,"game"],[139,29,177,29],[139,30,177,30,"gameState"],[139,39,177,39],[139,40,177,40,"subscriptionBenefits"],[139,60,177,60],[139,62,177,62,"xp_multiplier"],[139,75,177,75],[139,79,177,79],[139,82,177,82],[140,6,178,4],[140,10,178,10,"dropMultiplier"],[140,24,178,24],[140,27,178,27,"game"],[140,31,178,31],[140,32,178,32,"gameState"],[140,41,178,41],[140,42,178,42,"subscriptionBenefits"],[140,62,178,62],[140,64,178,64,"drop_multiplier"],[140,79,178,79],[140,83,178,83],[140,86,178,86],[141,6,180,4],[141,10,180,10,"xpReward"],[141,18,180,18],[141,21,180,21,"Math"],[141,25,180,25],[141,26,180,26,"floor"],[141,31,180,31],[141,32,180,32,"baseXpReward"],[141,44,180,44],[141,47,180,47,"xpMultiplier"],[141,59,180,59],[141,60,180,60],[142,6,181,4],[142,10,181,10,"goldReward"],[142,20,181,20],[142,23,181,23,"Math"],[142,27,181,27],[142,28,181,28,"floor"],[142,33,181,33],[142,34,181,34],[142,38,181,38],[142,41,181,41,"dropMultiplier"],[142,55,181,55],[142,56,181,56],[142,57,181,57],[142,58,181,58],[144,6,183,4,"console"],[144,13,183,11],[144,14,183,12,"log"],[144,17,183,15],[144,18,183,16],[144,48,183,46,"xpReward"],[144,56,183,54],[144,67,183,65,"goldReward"],[144,77,183,75],[144,93,183,91],[144,94,183,92],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,60,184,58,"xpMultiplier"],[145,72,184,70],[145,94,184,92,"dropMultiplier"],[145,108,184,106],[145,110,184,108],[145,111,184,109],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,54,185,52,"baseXpReward"],[146,66,185,64],[146,81,185,79,"xpReward"],[146,89,185,87],[146,91,185,89],[146,92,185,90],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,58,186,56],[147,60,186,58,"JSON"],[147,64,186,62],[147,65,186,63,"stringify"],[147,74,186,72],[147,75,186,73,"game"],[147,79,186,77],[147,80,186,78,"gameState"],[147,89,186,87],[147,90,186,88,"subscriptionBenefits"],[147,110,186,108],[147,111,186,109],[147,112,186,110],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,49,187,47,"Platform"],[148,61,187,55],[148,62,187,55,"Platform"],[148,70,187,55],[148,71,187,56,"OS"],[148,73,187,58],[148,84,187,69,"Date"],[148,88,187,73],[148,89,187,74,"now"],[148,92,187,77],[148,93,187,78],[148,94,187,79],[148,96,187,81],[148,97,187,82],[150,6,189,4],[151,6,190,4],[152,6,191,4,"setTimeout"],[152,16,191,14],[152,17,191,15],[152,23,191,21],[153,8,192,6,"console"],[153,15,192,13],[153,16,192,14,"log"],[153,19,192,17],[153,20,192,18],[153,78,192,76],[153,79,192,77],[155,8,194,6],[156,8,195,6,"game"],[156,12,195,10],[156,13,195,11,"updateNinja"],[156,24,195,22],[156,25,195,24,"prev"],[156,29,195,28],[156,33,195,33],[157,10,196,8,"console"],[157,17,196,15],[157,18,196,16,"log"],[157,21,196,19],[157,22,196,20],[157,54,196,52,"prev"],[157,58,196,56],[157,59,196,57,"experience"],[157,69,196,67],[157,81,196,79,"prev"],[157,85,196,83],[157,86,196,84,"experience"],[157,96,196,94],[157,99,196,97,"xpReward"],[157,107,196,105],[157,109,196,107],[157,110,196,108],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,56,197,54,"prev"],[158,60,197,58],[158,61,197,59,"gold"],[158,65,197,63],[158,77,197,75,"prev"],[158,81,197,79],[158,82,197,80,"gold"],[158,86,197,84],[158,89,197,87,"goldReward"],[158,99,197,97],[158,101,197,99],[158,102,197,100],[159,10,198,8],[159,17,198,15],[160,12,199,10,"experience"],[160,22,199,20],[160,24,199,22,"prev"],[160,28,199,26],[160,29,199,27,"experience"],[160,39,199,37],[160,42,199,40,"xpReward"],[160,50,199,48],[161,12,200,10,"gold"],[161,16,200,14],[161,18,200,16,"prev"],[161,22,200,20],[161,23,200,21,"gold"],[161,27,200,25],[161,30,200,28,"goldReward"],[162,10,201,8],[162,11,201,9],[163,8,202,6],[163,9,202,7],[163,10,202,8],[165,8,204,6],[166,8,205,6],[166,12,205,12,"zoneEnemy"],[166,21,205,21],[166,24,205,24],[167,10,206,8,"id"],[167,12,206,10],[167,14,206,12,"enemy"],[167,19,206,17],[167,20,206,18,"id"],[167,22,206,20],[168,10,207,8,"typeId"],[168,16,207,14],[168,18,207,16,"enemy"],[168,23,207,21],[168,24,207,22,"zoneTypeId"],[168,34,207,32],[168,38,207,36],[168,48,207,46],[169,10,207,48],[170,10,208,8,"name"],[170,14,208,12],[170,16,208,14,"enemy"],[170,21,208,19],[170,22,208,20,"name"],[170,26,208,24],[171,10,209,8,"icon"],[171,14,209,12],[171,16,209,14],[171,20,209,18],[172,10,209,20],[173,10,210,8,"hp"],[173,12,210,10],[173,14,210,12],[173,15,210,13],[174,10,210,15],[175,10,211,8,"maxHP"],[175,15,211,13],[175,17,211,15,"enemy"],[175,22,211,20],[175,23,211,21,"maxHealth"],[175,32,211,30],[176,10,212,8,"attack"],[176,16,212,14],[176,18,212,16,"enemy"],[176,23,212,21],[176,24,212,22,"stats"],[176,29,212,27],[176,30,212,28,"attack"],[176,36,212,34],[177,10,213,8,"xp"],[177,12,213,10],[177,14,213,12,"enemy"],[177,19,213,17],[177,20,213,18,"zoneXP"],[177,26,213,24],[177,30,213,28],[177,32,213,30],[178,10,213,32],[179,10,214,8,"position"],[179,18,214,16],[179,20,214,18,"enemy"],[179,25,214,23],[179,26,214,24,"position"],[180,8,215,6],[180,9,215,7],[181,8,217,6,"console"],[181,15,217,13],[181,16,217,14,"log"],[181,19,217,17],[181,20,217,18],[181,40,217,38,"zoneEnemy"],[181,49,217,47],[181,50,217,48,"name"],[181,54,217,52],[181,59,217,57,"zoneEnemy"],[181,68,217,66],[181,69,217,67,"typeId"],[181,75,217,73],[181,113,217,111],[181,114,217,112],[182,8,218,6,"recordEnemyKill"],[182,23,218,21],[182,24,218,22,"zoneEnemy"],[182,33,218,31],[182,34,218,32],[183,6,219,4],[183,7,219,5],[183,9,219,7],[183,10,219,8],[183,11,219,9],[183,12,219,10],[183,13,219,11],[184,4,220,2],[184,5,220,3],[184,7,220,5],[184,8,220,6,"game"],[184,12,220,10],[184,13,220,11,"updateNinja"],[184,24,220,22],[184,26,220,24,"recordEnemyKill"],[184,41,220,39],[184,42,220,40],[184,43,220,41],[186,4,222,2],[187,4,223,2],[187,8,223,8,"handleCombatTick"],[187,24,223,24],[187,27,223,27,"React"],[187,32,223,32],[187,33,223,32,"default"],[187,40,223,32],[187,41,223,33,"useCallback"],[187,52,223,44],[187,53,223,45],[187,59,223,51],[188,6,223,51],[188,10,223,51,"_s2"],[188,13,223,51],[188,16,223,51,"$RefreshSig$"],[188,28,223,51],[189,6,224,4,"console"],[189,13,224,11],[189,14,224,12,"log"],[189,17,224,15],[189,18,224,16],[189,87,224,85],[189,88,224,86],[190,6,225,4,"console"],[190,13,225,11],[190,14,225,12,"log"],[190,17,225,15],[190,18,225,16],[190,65,225,63,"isManualControlActive"],[190,86,225,84],[190,99,225,97,"game"],[190,103,225,101],[190,104,225,102,"gameState"],[190,113,225,111],[190,114,225,112,"isAlive"],[190,121,225,119],[190,123,225,121],[190,124,225,122],[191,6,227,4],[191,10,227,8,"enemiesToKill"],[191,23,227,36],[191,26,227,39],[191,28,227,41],[191,29,227,42],[191,30,227,43],[193,6,229,4,"_s2"],[193,9,229,4],[193,10,229,4,"setCombatState"],[193,24,229,18],[193,25,229,18,"_s2"],[193,28,229,18],[193,29,229,19,"prev"],[193,33,229,23],[193,37,229,27],[194,8,229,27,"_s2"],[194,11,229,27],[195,8,230,6],[195,12,230,12,"newTick"],[195,19,230,19],[195,22,230,22,"combatEngine"],[195,41,230,34],[195,42,230,34,"combatEngine"],[195,54,230,34],[195,55,230,35,"getCurrentTick"],[195,69,230,49],[195,70,230,50],[195,71,230,51],[196,8,231,6],[196,12,231,12,"newState"],[196,20,231,20],[196,23,231,23],[197,10,231,25],[197,13,231,28,"prev"],[197,17,231,32],[198,10,231,34,"currentTick"],[198,21,231,45],[198,23,231,47,"newTick"],[199,8,231,55],[199,9,231,56],[200,8,233,6],[200,12,233,10],[200,13,233,11,"newState"],[200,21,233,19],[200,22,233,20,"isInCombat"],[200,32,233,30],[200,34,233,32],[200,41,233,39,"newState"],[200,49,233,47],[202,8,235,6],[203,8,236,6,"newState"],[203,16,236,14],[203,17,236,15,"abilityManager"],[203,31,236,29],[203,32,236,30,"updateCooldowns"],[203,47,236,45],[203,48,236,46,"newTick"],[203,55,236,53],[203,56,236,54],[205,8,238,6],[206,8,239,6],[206,12,239,12,"effectResults"],[206,25,239,25],[206,28,239,28,"newState"],[206,36,239,36],[206,37,239,37,"statusEffects"],[206,50,239,50],[206,51,239,51,"processTick"],[206,62,239,62],[206,63,239,63,"newTick"],[206,70,239,70],[206,71,239,71],[208,8,241,6],[209,8,242,6,"effectResults"],[209,21,242,19],[209,22,242,20,"forEach"],[209,29,242,27],[209,30,242,28],[209,31,242,29,"results"],[209,38,242,36],[209,40,242,38,"entityId"],[209,48,242,46],[209,53,242,51],[210,10,243,8],[210,14,243,14,"enemyIndex"],[210,24,243,24],[210,27,243,27,"newState"],[210,35,243,35],[210,36,243,36,"enemies"],[210,43,243,43],[210,44,243,44,"findIndex"],[210,53,243,53],[210,54,243,54,"e"],[210,55,243,55],[210,59,243,59,"e"],[210,60,243,60],[210,61,243,61,"id"],[210,63,243,63],[210,68,243,68,"entityId"],[210,76,243,76],[210,77,243,77],[211,10,244,8],[211,14,244,12,"enemyIndex"],[211,24,244,22],[211,28,244,26],[211,29,244,27],[211,31,244,29],[212,12,245,10,"results"],[212,19,245,17],[212,20,245,18,"forEach"],[212,27,245,25],[212,28,245,26,"result"],[212,34,245,32],[212,38,245,36],[213,14,246,12,"newState"],[213,22,246,20],[213,23,246,21,"enemies"],[213,30,246,28],[213,31,246,29,"enemyIndex"],[213,41,246,39],[213,42,246,40],[213,43,246,41,"health"],[213,49,246,47],[213,53,246,51,"result"],[213,59,246,57],[213,60,246,58,"damage"],[213,66,246,64],[214,14,247,12,"newState"],[214,22,247,20],[214,23,247,21,"enemies"],[214,30,247,28],[214,31,247,29,"enemyIndex"],[214,41,247,39],[214,42,247,40],[214,43,247,41,"lastDamaged"],[214,54,247,52],[214,57,247,55,"newTick"],[214,64,247,62],[215,12,248,10],[215,13,248,11],[215,14,248,12],[216,10,249,8],[217,8,250,6],[217,9,250,7],[217,10,250,8],[219,8,252,6],[220,8,253,6],[221,8,254,6],[221,12,254,10,"newState"],[221,20,254,18],[221,21,254,19,"playerStats"],[221,32,254,30],[221,36,254,34,"game"],[221,40,254,38],[221,41,254,39,"gameState"],[221,50,254,48],[221,51,254,49,"ninja"],[221,56,254,54],[221,58,254,56],[222,10,255,8],[222,14,255,14,"effectiveStats"],[222,28,255,28],[222,31,255,31,"game"],[222,35,255,35],[222,36,255,36,"getEffectiveStats"],[222,53,255,53],[222,54,255,54],[222,55,255,55],[224,10,257,8],[225,10,258,8],[225,14,258,12,"newState"],[225,22,258,20],[225,23,258,21,"playerStats"],[225,34,258,32],[225,35,258,33,"attack"],[225,41,258,39],[225,46,258,44,"effectiveStats"],[225,60,258,58],[225,61,258,59,"attack"],[225,67,258,65],[225,71,259,12,"newState"],[225,79,259,20],[225,80,259,21,"playerStats"],[225,91,259,32],[225,92,259,33,"defense"],[225,99,259,40],[225,104,259,45,"effectiveStats"],[225,118,259,59],[225,119,259,60,"defense"],[225,126,259,67],[225,130,260,12,"newState"],[225,138,260,20],[225,139,260,21,"playerStats"],[225,150,260,32],[225,151,260,33,"maxHealth"],[225,160,260,42],[225,165,260,47,"effectiveStats"],[225,179,260,61],[225,180,260,62,"maxHealth"],[225,189,260,71],[225,191,260,73],[226,12,262,10,"console"],[226,19,262,17],[226,20,262,18,"log"],[226,23,262,21],[226,24,262,22],[226,58,262,56,"newState"],[226,66,262,64],[226,67,262,65,"playerStats"],[226,78,262,76],[226,79,262,77,"attack"],[226,85,262,83],[226,91,262,89,"effectiveStats"],[226,105,262,103],[226,106,262,104,"attack"],[226,112,262,110],[226,125,262,123,"newState"],[226,133,262,131],[226,134,262,132,"playerStats"],[226,145,262,143],[226,146,262,144,"defense"],[226,153,262,151],[226,159,262,157,"effectiveStats"],[226,173,262,171],[226,174,262,172,"defense"],[226,181,262,179],[226,192,262,190,"newState"],[226,200,262,198],[226,201,262,199,"playerStats"],[226,212,262,210],[226,213,262,211,"maxHealth"],[226,222,262,220],[226,228,262,226,"effectiveStats"],[226,242,262,240],[226,243,262,241,"maxHealth"],[226,252,262,250],[226,254,262,252],[226,255,262,253],[228,12,264,10],[229,12,265,10],[229,16,265,14,"newHealth"],[229,25,265,23],[229,28,265,26,"newState"],[229,36,265,34],[229,37,265,35,"playerStats"],[229,48,265,46],[229,49,265,47,"health"],[229,55,265,53],[230,12,266,10],[230,16,266,14,"newState"],[230,24,266,22],[230,25,266,23,"playerStats"],[230,36,266,34],[230,37,266,35,"maxHealth"],[230,46,266,44],[230,51,266,49,"effectiveStats"],[230,65,266,63],[230,66,266,64,"maxHealth"],[230,75,266,73],[230,77,266,75],[231,14,267,12],[232,14,268,12],[232,18,268,16,"effectiveStats"],[232,32,268,30],[232,33,268,31,"maxHealth"],[232,42,268,40],[232,45,268,43,"newState"],[232,53,268,51],[232,54,268,52,"playerStats"],[232,65,268,63],[232,66,268,64,"maxHealth"],[232,75,268,73],[232,78,268,76],[232,81,268,79],[232,83,268,81],[233,16,269,14],[234,16,270,14],[234,20,270,20,"healthRatio"],[234,31,270,31],[234,34,270,34,"newState"],[234,42,270,42],[234,43,270,43,"playerStats"],[234,54,270,54],[234,55,270,55,"maxHealth"],[234,64,270,64],[234,67,270,67],[234,68,270,68],[234,71,271,16,"newState"],[234,79,271,24],[234,80,271,25,"playerStats"],[234,91,271,36],[234,92,271,37,"health"],[234,98,271,43],[234,101,271,46,"newState"],[234,109,271,54],[234,110,271,55,"playerStats"],[234,121,271,66],[234,122,271,67,"maxHealth"],[234,131,271,76],[234,134,271,79],[234,135,271,80],[235,16,272,14,"newHealth"],[235,25,272,23],[235,28,272,26,"Math"],[235,32,272,30],[235,33,272,31,"floor"],[235,38,272,36],[235,39,272,37,"effectiveStats"],[235,53,272,51],[235,54,272,52,"maxHealth"],[235,63,272,61],[235,66,272,64,"healthRatio"],[235,77,272,75],[235,78,272,76],[236,14,273,12],[236,15,273,13],[236,21,273,19],[236,25,273,23,"newState"],[236,33,273,31],[236,34,273,32,"playerStats"],[236,45,273,43],[236,46,273,44,"health"],[236,52,273,50],[236,55,273,53,"effectiveStats"],[236,69,273,67],[236,70,273,68,"maxHealth"],[236,79,273,77],[236,81,273,79],[237,16,274,14],[238,16,275,14,"newHealth"],[238,25,275,23],[238,28,275,26,"effectiveStats"],[238,42,275,40],[238,43,275,41,"maxHealth"],[238,52,275,50],[239,14,276,12],[240,14,277,12],[241,12,278,10],[242,12,280,10,"newState"],[242,20,280,18],[242,21,280,19,"playerStats"],[242,32,280,30],[242,35,280,33],[243,14,281,12],[243,17,281,15,"newState"],[243,25,281,23],[243,26,281,24,"playerStats"],[243,37,281,35],[244,14,282,12,"attack"],[244,20,282,18],[244,22,282,20,"effectiveStats"],[244,36,282,34],[244,37,282,35,"attack"],[244,43,282,41],[245,14,283,12,"defense"],[245,21,283,19],[245,23,283,21,"effectiveStats"],[245,37,283,35],[245,38,283,36,"defense"],[245,45,283,43],[246,14,284,12,"maxHealth"],[246,23,284,21],[246,25,284,23,"effectiveStats"],[246,39,284,37],[246,40,284,38,"maxHealth"],[246,49,284,47],[247,14,284,49],[248,14,285,12,"health"],[248,20,285,18],[248,22,285,20,"newHealth"],[248,31,285,29],[249,14,285,31],[250,14,286,12,"critChance"],[250,24,286,22],[250,26,286,24,"effectiveStats"],[250,40,286,38],[250,41,286,39,"critChance"],[250,51,286,49],[250,55,286,53,"newState"],[250,63,286,61],[250,64,286,62,"playerStats"],[250,75,286,73],[250,76,286,74,"critChance"],[250,86,286,84],[251,14,287,12,"critDamage"],[251,24,287,22],[251,26,287,24,"effectiveStats"],[251,40,287,38],[251,41,287,39,"critDamage"],[251,51,287,49],[251,55,287,53,"newState"],[251,63,287,61],[251,64,287,62,"playerStats"],[251,75,287,73],[251,76,287,74,"critDamage"],[251,86,287,84],[252,14,288,12,"cooldownReduction"],[252,31,288,29],[252,33,288,31,"effectiveStats"],[252,47,288,45],[252,48,288,46,"cooldownReduction"],[252,65,288,63],[252,69,288,67,"newState"],[252,77,288,75],[252,78,288,76,"playerStats"],[252,89,288,87],[252,90,288,88,"cooldownReduction"],[253,12,289,10],[253,13,289,11],[254,10,290,8],[256,10,292,8],[257,10,293,8],[257,14,293,12,"game"],[257,18,293,16],[257,19,293,17,"gameState"],[257,28,293,26],[257,29,293,27,"isAlive"],[257,36,293,34],[257,40,294,12,"game"],[257,44,294,16],[257,45,294,17,"gameState"],[257,54,294,26],[257,55,294,27,"ninja"],[257,60,294,32],[257,61,294,33,"health"],[257,67,294,39],[257,72,294,44,"effectiveStats"],[257,86,294,58],[257,87,294,59,"maxHealth"],[257,96,294,68],[257,100,295,12,"newState"],[257,108,295,20],[257,109,295,21,"playerStats"],[257,120,295,32],[257,121,295,33,"health"],[257,127,295,39],[257,130,295,42,"effectiveStats"],[257,144,295,56],[257,145,295,57,"maxHealth"],[257,154,295,66],[257,157,295,69],[257,160,295,72],[257,162,295,74],[258,12,296,10,"console"],[258,19,296,17],[258,20,296,18,"log"],[258,23,296,21],[258,24,296,22],[258,58,296,56,"newState"],[258,66,296,64],[258,67,296,65,"playerStats"],[258,78,296,76],[258,79,296,77,"health"],[258,85,296,83],[258,91,296,89,"game"],[258,95,296,93],[258,96,296,94,"gameState"],[258,105,296,103],[258,106,296,104,"ninja"],[258,111,296,109],[258,112,296,110,"health"],[258,118,296,116],[258,139,296,137],[258,140,296,138],[259,12,297,10,"newState"],[259,20,297,18],[259,21,297,19,"playerStats"],[259,32,297,30],[259,33,297,31,"health"],[259,39,297,37],[259,42,297,40,"game"],[259,46,297,44],[259,47,297,45,"gameState"],[259,56,297,54],[259,57,297,55,"ninja"],[259,62,297,60],[259,63,297,61,"health"],[259,69,297,67],[260,10,298,8],[261,8,299,6],[263,8,301,6],[264,8,302,6,"newState"],[264,16,302,14],[264,17,302,15,"enemies"],[264,24,302,22],[264,25,302,23,"forEach"],[264,32,302,30],[264,33,302,31,"enemy"],[264,38,302,36],[264,42,302,40],[265,10,303,8],[265,14,303,12],[265,15,303,13,"enemy"],[265,20,303,18],[265,21,303,19,"isBoss"],[265,27,303,25],[265,29,303,27],[266,12,303,29],[267,12,304,10],[268,12,305,10],[268,16,305,16,"MOVEMENT_SPEED"],[268,30,305,30],[268,33,305,33],[268,37,305,37],[268,38,305,38],[268,39,305,39],[269,12,306,10],[269,16,306,16,"SCREEN_WIDTH"],[269,28,306,28],[269,31,306,31],[269,34,306,34],[270,12,307,10],[270,16,307,16,"GAME_AREA_HEIGHT"],[270,32,307,32],[270,35,307,35],[270,38,307,38],[270,39,307,39],[270,40,307,40],[271,12,308,10],[271,16,308,16,"ENEMY_SIZE"],[271,26,308,26],[271,29,308,29],[271,31,308,31],[273,12,310,10],[274,12,311,10],[274,16,311,16,"playerX"],[274,23,311,23],[274,26,311,26,"currentNinjaPosition"],[274,46,311,46],[274,47,311,47,"x"],[274,48,311,48],[275,12,312,10],[275,16,312,16,"playerY"],[275,23,312,23],[275,26,312,26,"currentNinjaPosition"],[275,46,312,46],[275,47,312,47,"y"],[275,48,312,48],[277,12,314,10],[278,12,315,10],[278,16,315,16,"deltaX"],[278,22,315,22],[278,25,315,25,"playerX"],[278,32,315,32],[278,35,315,35,"enemy"],[278,40,315,40],[278,41,315,41,"position"],[278,49,315,49],[278,50,315,50,"x"],[278,51,315,51],[279,12,316,10],[279,16,316,16,"deltaY"],[279,22,316,22],[279,25,316,25,"playerY"],[279,32,316,32],[279,35,316,35,"enemy"],[279,40,316,40],[279,41,316,41,"position"],[279,49,316,49],[279,50,316,50,"y"],[279,51,316,51],[280,12,317,10],[280,16,317,16,"distance"],[280,24,317,24],[280,27,317,27,"Math"],[280,31,317,31],[280,32,317,32,"sqrt"],[280,36,317,36],[280,37,317,37,"deltaX"],[280,43,317,43],[280,46,317,46,"deltaX"],[280,52,317,52],[280,55,317,55,"deltaY"],[280,61,317,61],[280,64,317,64,"deltaY"],[280,70,317,70],[280,71,317,71],[282,12,319,10],[283,12,320,10],[283,16,320,16,"ATTACK_RANGE"],[283,28,320,28],[283,31,320,31],[283,33,320,33],[283,34,320,34],[283,35,320,35],[284,12,321,10],[284,16,321,16,"ATTACK_COOLDOWN"],[284,31,321,31],[284,34,321,34],[284,36,321,36],[284,37,321,37],[284,38,321,38],[286,12,323,10],[286,16,323,14,"distance"],[286,24,323,22],[286,28,323,26,"ATTACK_RANGE"],[286,40,323,38],[286,42,323,40],[287,14,324,12],[288,14,325,12],[288,18,325,16],[288,19,325,17,"enemy"],[288,24,325,22],[288,25,325,23,"lastAttackTick"],[288,39,325,37],[288,41,325,39,"enemy"],[288,46,325,44],[288,47,325,45,"lastAttackTick"],[288,61,325,59],[288,64,325,62],[288,65,325,63],[289,14,327,12],[289,18,327,16,"newState"],[289,26,327,24],[289,27,327,25,"currentTick"],[289,38,327,36],[289,41,327,39,"enemy"],[289,46,327,44],[289,47,327,45,"lastAttackTick"],[289,61,327,59],[289,65,327,63,"ATTACK_COOLDOWN"],[289,80,327,78],[289,82,327,80],[290,16,328,14],[291,16,329,14],[291,20,329,18],[291,21,329,19,"game"],[291,25,329,23],[291,26,329,24,"gameState"],[291,35,329,33],[291,36,329,34,"isAlive"],[291,43,329,41],[291,45,329,43],[292,18,330,16,"console"],[292,25,330,23],[292,26,330,24,"log"],[292,29,330,27],[292,30,330,28],[292,49,330,47,"enemy"],[292,54,330,52],[292,55,330,53,"name"],[292,59,330,57],[292,93,330,91],[292,94,330,92],[293,18,331,16],[294,18,332,16,"enemy"],[294,23,332,21],[294,24,332,22,"lastAttackTick"],[294,38,332,36],[294,41,332,39,"newState"],[294,49,332,47],[294,50,332,48,"currentTick"],[294,61,332,59],[295,16,333,14],[295,17,333,15],[295,23,333,21],[296,18,334,16],[297,18,335,16],[297,22,335,22,"isPlayerInvincible"],[297,40,335,40],[297,43,335,43,"game"],[297,47,335,47],[297,48,335,48,"gameState"],[297,57,335,57],[297,58,335,58,"isInvincible"],[297,70,335,70],[297,74,336,41,"game"],[297,78,336,45],[297,79,336,46,"gameState"],[297,88,336,55],[297,89,336,56,"invincibilityEndTime"],[297,109,336,76],[297,113,337,41,"Date"],[297,117,337,45],[297,118,337,46,"now"],[297,121,337,49],[297,122,337,50],[297,123,337,51],[297,126,337,54,"game"],[297,130,337,58],[297,131,337,59,"gameState"],[297,140,337,68],[297,141,337,69,"invincibilityEndTime"],[297,161,337,89],[298,18,339,16],[298,22,339,20,"isPlayerInvincible"],[298,40,339,38],[298,42,339,40],[299,20,340,18,"console"],[299,27,340,25],[299,28,340,26,"log"],[299,31,340,29],[299,32,340,30],[299,51,340,49,"enemy"],[299,56,340,54],[299,57,340,55,"name"],[299,61,340,59],[299,101,340,99],[299,102,340,100],[300,20,341,18],[301,20,342,18,"enemy"],[301,25,342,23],[301,26,342,24,"lastAttackTick"],[301,40,342,38],[301,43,342,41,"newState"],[301,51,342,49],[301,52,342,50,"currentTick"],[301,63,342,61],[302,18,343,16],[302,19,343,17],[302,25,343,23],[303,20,344,16],[304,20,345,16],[304,24,345,22,"baseAttack"],[304,34,345,32],[304,37,345,35,"enemy"],[304,42,345,40],[304,43,345,41,"stats"],[304,48,345,46],[304,49,345,47,"attack"],[304,55,345,53],[304,58,345,56],[304,61,345,59],[304,62,345,60],[304,63,345,61],[305,20,346,16],[305,24,346,22,"attackDamage"],[305,36,346,34],[305,39,346,37,"Math"],[305,43,346,41],[305,44,346,42,"floor"],[305,49,346,47],[305,50,346,48,"baseAttack"],[305,60,346,58],[305,64,346,62],[305,67,346,65],[305,70,346,68,"Math"],[305,74,346,72],[305,75,346,73,"random"],[305,81,346,79],[305,82,346,80],[305,83,346,81],[305,86,346,84],[305,89,346,87],[305,90,346,88],[305,91,346,89],[305,92,346,90],[305,93,346,91],[306,20,347,16],[306,24,347,22,"playerDefense"],[306,37,347,35],[306,40,347,38,"newState"],[306,48,347,46],[306,49,347,47,"playerStats"],[306,60,347,58],[306,61,347,59,"defense"],[306,68,347,66],[307,20,348,16],[307,24,348,22,"finalDamage"],[307,35,348,33],[307,38,348,36,"Math"],[307,42,348,40],[307,43,348,41,"max"],[307,46,348,44],[307,47,348,45],[307,48,348,46],[307,50,348,48,"attackDamage"],[307,62,348,60],[307,65,348,63,"Math"],[307,69,348,67],[307,70,348,68,"floor"],[307,75,348,73],[307,76,348,74,"playerDefense"],[307,89,348,87],[307,92,348,90],[307,95,348,93],[307,96,348,94],[307,97,348,95],[307,98,348,96],[307,99,348,97],[309,20,350,16,"console"],[309,27,350,23],[309,28,350,24,"log"],[309,31,350,27],[309,32,350,28],[309,53,350,49,"enemy"],[309,58,350,54],[309,59,350,55,"name"],[309,63,350,59],[309,86,350,82,"finalDamage"],[309,97,350,93],[309,109,350,105,"attackDamage"],[309,121,350,117],[309,132,350,128,"Math"],[309,136,350,132],[309,137,350,133,"floor"],[309,142,350,138],[309,143,350,139,"playerDefense"],[309,156,350,152],[309,159,350,155],[309,162,350,158],[309,163,350,159],[309,184,350,180],[309,185,350,181],[311,20,352,16],[312,20,353,16],[312,24,353,22,"newPlayerHealth"],[312,39,353,37],[312,42,353,40,"Math"],[312,46,353,44],[312,47,353,45,"max"],[312,50,353,48],[312,51,353,49],[312,52,353,50],[312,54,353,52,"newState"],[312,62,353,60],[312,63,353,61,"playerStats"],[312,74,353,72],[312,75,353,73,"health"],[312,81,353,79],[312,84,353,82,"finalDamage"],[312,95,353,93],[312,96,353,94],[313,20,354,16,"newState"],[313,28,354,24],[313,29,354,25,"playerStats"],[313,40,354,36],[313,41,354,37,"health"],[313,47,354,43],[313,50,354,46,"newPlayerHealth"],[313,65,354,61],[314,20,356,16,"console"],[314,27,356,23],[314,28,356,24,"log"],[314,31,356,27],[314,32,356,28],[314,53,356,49,"newState"],[314,61,356,57],[314,62,356,58,"playerStats"],[314,73,356,69],[314,74,356,70,"health"],[314,80,356,76],[314,84,356,80,"newState"],[314,92,356,88],[314,93,356,89,"playerStats"],[314,104,356,100],[314,105,356,101,"maxHealth"],[314,114,356,110],[314,124,356,120,"finalDamage"],[314,135,356,131],[314,145,356,141],[314,146,356,142],[316,20,358,16],[317,20,359,16,"enemy"],[317,25,359,21],[317,26,359,22,"lastAttackTick"],[317,40,359,36],[317,43,359,39,"newState"],[317,51,359,47],[317,52,359,48,"currentTick"],[317,63,359,59],[319,20,361,16],[320,20,362,16],[320,24,362,20,"newPlayerHealth"],[320,39,362,35],[320,43,362,39],[320,44,362,40],[320,46,362,42],[321,22,363,18,"console"],[321,29,363,25],[321,30,363,26,"log"],[321,33,363,29],[321,34,363,30],[321,84,363,80],[321,85,363,81],[322,22,364,18],[323,22,365,18,"setTimeout"],[323,32,365,28],[323,33,365,29],[323,39,365,35],[324,24,366,20],[325,24,367,20,"game"],[325,28,367,24],[325,29,367,25,"updateGameState"],[325,44,367,40],[325,45,367,41],[326,26,367,43,"isAlive"],[326,33,367,50],[326,35,367,52],[327,24,367,58],[327,25,367,59],[327,26,367,60],[328,22,368,18],[328,23,368,19],[328,25,368,21],[328,28,368,24],[328,29,368,25],[329,20,369,16],[330,18,370,16],[331,16,371,14],[332,14,372,12],[333,12,373,10],[333,13,373,11],[333,19,373,17],[334,14,374,12],[335,14,375,12],[336,14,376,12],[336,18,376,16,"distance"],[336,26,376,24],[336,29,376,27],[336,31,376,29],[336,33,376,31],[337,16,377,14],[338,16,378,14],[338,20,378,20,"normalizedX"],[338,31,378,31],[338,34,378,34,"deltaX"],[338,40,378,40],[338,43,378,43,"distance"],[338,51,378,51],[339,16,379,14],[339,20,379,20,"normalizedY"],[339,31,379,31],[339,34,379,34,"deltaY"],[339,40,379,40],[339,43,379,43,"distance"],[339,51,379,51],[341,16,381,14],[342,16,382,14],[342,20,382,20,"randomFactor"],[342,32,382,32],[342,35,382,35],[342,38,382,38],[342,39,382,39],[342,40,382,40],[343,16,383,14],[343,20,383,20,"finalX"],[343,26,383,26],[343,29,383,29,"normalizedX"],[343,40,383,40],[343,43,383,43],[343,44,383,44,"Math"],[343,48,383,48],[343,49,383,49,"random"],[343,55,383,55],[343,56,383,56],[343,57,383,57],[343,60,383,60],[343,63,383,63],[343,67,383,67,"randomFactor"],[343,79,383,79],[344,16,384,14],[344,20,384,20,"finalY"],[344,26,384,26],[344,29,384,29,"normalizedY"],[344,40,384,40],[344,43,384,43],[344,44,384,44,"Math"],[344,48,384,48],[344,49,384,49,"random"],[344,55,384,55],[344,56,384,56],[344,57,384,57],[344,60,384,60],[344,63,384,63],[344,67,384,67,"randomFactor"],[344,79,384,79],[346,16,386,14],[347,16,387,14],[347,20,387,18,"newX"],[347,24,387,22],[347,27,387,25,"enemy"],[347,32,387,30],[347,33,387,31,"position"],[347,41,387,39],[347,42,387,40,"x"],[347,43,387,41],[347,46,387,45,"finalX"],[347,52,387,51],[347,55,387,54,"MOVEMENT_SPEED"],[347,69,387,69],[348,16,388,14],[348,20,388,18,"newY"],[348,24,388,22],[348,27,388,25,"enemy"],[348,32,388,30],[348,33,388,31,"position"],[348,41,388,39],[348,42,388,40,"y"],[348,43,388,41],[348,46,388,45,"finalY"],[348,52,388,51],[348,55,388,54,"MOVEMENT_SPEED"],[348,69,388,69],[350,16,390,14],[351,16,391,14,"newX"],[351,20,391,18],[351,23,391,21,"Math"],[351,27,391,25],[351,28,391,26,"max"],[351,31,391,29],[351,32,391,30],[351,33,391,31],[351,35,391,33,"Math"],[351,39,391,37],[351,40,391,38,"min"],[351,43,391,41],[351,44,391,42,"SCREEN_WIDTH"],[351,56,391,54],[351,59,391,57,"ENEMY_SIZE"],[351,69,391,67],[351,71,391,69,"newX"],[351,75,391,73],[351,76,391,74],[351,77,391,75],[352,16,392,14,"newY"],[352,20,392,18],[352,23,392,21,"Math"],[352,27,392,25],[352,28,392,26,"max"],[352,31,392,29],[352,32,392,30],[352,33,392,31],[352,35,392,33,"Math"],[352,39,392,37],[352,40,392,38,"min"],[352,43,392,41],[352,44,392,42,"GAME_AREA_HEIGHT"],[352,60,392,58],[352,63,392,61,"ENEMY_SIZE"],[352,73,392,71],[352,75,392,73,"newY"],[352,79,392,77],[352,80,392,78],[352,81,392,79],[354,16,394,14],[355,16,395,14,"enemy"],[355,21,395,19],[355,22,395,20,"position"],[355,30,395,28],[355,31,395,29,"x"],[355,32,395,30],[355,35,395,33,"newX"],[355,39,395,37],[356,16,396,14,"enemy"],[356,21,396,19],[356,22,396,20,"position"],[356,30,396,28],[356,31,396,29,"y"],[356,32,396,30],[356,35,396,33,"newY"],[356,39,396,37],[357,14,397,12],[358,14,398,12],[359,12,399,10],[360,10,400,8],[361,8,401,6],[361,9,401,7],[361,10,401,8],[363,8,403,6],[364,8,404,6],[364,12,404,10,"newState"],[364,20,404,18],[364,21,404,19,"shadowClone"],[364,32,404,30],[364,34,404,32],[365,10,405,8],[366,10,406,8,"newState"],[366,18,406,16],[366,19,406,17,"shadowClone"],[366,30,406,28],[366,31,406,29,"remainingTicks"],[366,45,406,43],[366,47,406,45],[368,10,408,8],[369,10,409,8],[369,14,409,14,"cloneOffset"],[369,25,409,25],[369,28,409,28],[369,30,409,30],[369,31,409,31],[369,32,409,32],[370,10,410,8,"newState"],[370,18,410,16],[370,19,410,17,"shadowClone"],[370,30,410,28],[370,31,410,29,"position"],[370,39,410,37],[370,40,410,38,"x"],[370,41,410,39],[370,44,410,42,"currentNinjaPosition"],[370,64,410,62],[370,65,410,63,"x"],[370,66,410,64],[370,69,410,67,"cloneOffset"],[370,80,410,78],[371,10,411,8,"newState"],[371,18,411,16],[371,19,411,17,"shadowClone"],[371,30,411,28],[371,31,411,29,"position"],[371,39,411,37],[371,40,411,38,"y"],[371,41,411,39],[371,44,411,42,"currentNinjaPosition"],[371,64,411,62],[371,65,411,63,"y"],[371,66,411,64],[371,69,411,67],[371,71,411,69],[373,10,413,8],[374,10,414,8],[374,14,414,12,"newState"],[374,22,414,20],[374,23,414,21,"shadowClone"],[374,34,414,32],[374,35,414,33,"remainingTicks"],[374,49,414,47],[374,53,414,51],[374,54,414,52],[374,56,414,54],[375,12,415,10,"console"],[375,19,415,17],[375,20,415,18,"log"],[375,23,415,21],[375,24,415,22],[375,75,415,73],[375,76,415,74],[376,12,416,10,"newState"],[376,20,416,18],[376,21,416,19,"shadowClone"],[376,32,416,30],[376,35,416,33,"undefined"],[376,44,416,42],[377,10,417,8],[377,11,417,9],[377,17,417,15],[378,12,418,10],[379,12,419,10],[380,12,420,10],[380,16,420,16,"CLONE_ATTACK_INTERVAL"],[380,37,420,37],[380,40,420,40],[380,42,420,42],[381,12,421,10],[381,16,421,14,"newState"],[381,24,421,22],[381,25,421,23,"currentTick"],[381,36,421,34],[381,39,421,37,"CLONE_ATTACK_INTERVAL"],[381,60,421,58],[381,65,421,63],[381,66,421,64],[381,70,421,68,"newState"],[381,78,421,76],[381,79,421,77,"enemies"],[381,86,421,84],[381,87,421,85,"length"],[381,93,421,91],[381,96,421,94],[381,97,421,95],[381,99,421,97],[382,14,422,12,"console"],[382,21,422,19],[382,22,422,20,"log"],[382,25,422,23],[382,26,422,24],[382,83,422,81],[382,84,422,82],[384,14,424,12],[385,14,425,12],[385,18,425,18,"target"],[385,24,425,24],[385,27,425,27,"findClosestEnemyInternal"],[385,51,425,51],[385,52,425,52,"newState"],[385,60,425,60],[385,61,425,61,"enemies"],[385,68,425,68],[385,69,425,69],[386,14,426,12],[386,18,426,16,"target"],[386,24,426,22],[386,26,426,24],[387,16,427,14],[388,16,428,14],[388,20,428,20,"cloneDamage"],[388,31,428,31],[388,34,428,34,"Math"],[388,38,428,38],[388,39,428,39,"floor"],[388,44,428,44],[388,45,428,45,"newState"],[388,53,428,53],[388,54,428,54,"playerStats"],[388,65,428,65],[388,66,428,66,"attack"],[388,72,428,72],[388,75,428,75],[388,78,428,78],[388,79,428,79],[390,16,430,14],[391,16,431,14,"createProjectile"],[391,32,431,30],[391,33,431,31,"target"],[391,39,431,37],[391,41,431,39,"cloneDamage"],[391,52,431,50],[391,54,431,52,"newState"],[391,62,431,60],[391,63,431,61,"shadowClone"],[391,74,431,72],[391,75,431,73,"position"],[391,83,431,81],[391,85,431,83],[392,18,432,16,"id"],[392,20,432,18],[392,22,432,20],[392,43,432,41],[393,18,433,16,"name"],[393,22,433,20],[393,24,433,22],[393,45,433,43],[394,18,434,16,"icon"],[394,22,434,20],[394,24,434,22],[395,16,435,14],[395,17,435,15],[395,18,435,16],[396,14,436,12],[397,12,437,10],[398,10,438,8],[399,8,439,6],[401,8,441,6],[402,8,442,6],[403,8,443,6,"console"],[403,15,443,13],[403,16,443,14,"log"],[403,19,443,17],[403,20,443,18],[403,63,443,61,"isManualControlActive"],[403,84,443,82],[403,97,443,95,"game"],[403,101,443,99],[403,102,443,100,"gameState"],[403,111,443,109],[403,112,443,110,"isAlive"],[403,119,443,117],[403,121,443,119],[403,122,443,120],[404,8,444,6],[404,12,444,10],[404,13,444,11,"isManualControlActive"],[404,34,444,32],[404,38,444,36,"game"],[404,42,444,40],[404,43,444,41,"gameState"],[404,52,444,50],[404,53,444,51,"isAlive"],[404,60,444,58],[404,62,444,60],[405,10,445,8],[405,15,445,13],[405,19,445,17,"i"],[405,20,445,18],[405,23,445,21],[405,24,445,22],[405,26,445,24,"i"],[405,27,445,25],[405,30,445,28],[405,31,445,29],[405,33,445,31,"i"],[405,34,445,32],[405,36,445,34],[405,38,445,36],[406,12,446,10],[406,16,446,14,"newState"],[406,24,446,22],[406,25,446,23,"abilityManager"],[406,39,446,37],[406,40,446,38,"isAbilityReady"],[406,54,446,52],[406,55,446,53,"i"],[406,56,446,54],[406,57,446,55],[406,61,446,59,"newState"],[406,69,446,67],[406,70,446,68,"enemies"],[406,77,446,75],[406,78,446,76,"length"],[406,84,446,82],[406,87,446,85],[406,88,446,86],[406,90,446,88],[407,14,447,12],[407,18,447,16,"newState"],[407,26,447,24],[407,27,447,25,"abilityManager"],[407,41,447,39],[407,42,447,40,"useAbility"],[407,52,447,50],[407,53,447,51,"i"],[407,54,447,52],[407,56,447,54,"newTick"],[407,63,447,61],[407,64,447,62],[407,66,447,64],[408,16,448,14,"console"],[408,23,448,21],[408,24,448,22,"log"],[408,27,448,25],[408,28,448,26],[408,73,448,71,"i"],[408,74,448,72],[408,76,448,74],[408,77,448,75],[409,16,449,14,"castAbility"],[409,27,449,25],[409,28,449,26,"newState"],[409,36,449,34],[409,38,449,36,"i"],[409,39,449,37],[409,40,449,38],[410,14,450,12],[411,12,451,10],[412,10,452,8],[413,8,453,6],[415,8,455,6],[416,8,456,6],[416,12,456,12,"deadEnemies"],[416,23,456,23],[416,26,456,26,"newState"],[416,34,456,34],[416,35,456,35,"enemies"],[416,42,456,42],[416,43,456,43,"filter"],[416,49,456,49],[416,50,456,50,"enemy"],[416,55,456,55],[416,59,456,59,"enemy"],[416,64,456,64],[416,65,456,65,"health"],[416,71,456,71],[416,75,456,75],[416,76,456,76],[416,77,456,77],[417,8,457,6,"enemiesToKill"],[417,21,457,19],[417,24,457,22],[417,25,457,23],[417,28,457,26,"deadEnemies"],[417,39,457,37],[417,40,457,38],[417,41,457,39],[417,42,457,40],[419,8,459,6],[420,8,460,6],[420,12,460,10,"deadEnemies"],[420,23,460,21],[420,24,460,22,"length"],[420,30,460,28],[420,33,460,31],[420,34,460,32],[420,36,460,34],[421,10,461,8,"console"],[421,17,461,15],[421,18,461,16,"log"],[421,21,461,19],[421,22,461,20],[421,49,461,47,"deadEnemies"],[421,60,461,58],[421,61,461,59,"length"],[421,67,461,65],[421,83,461,81],[421,85,461,83,"deadEnemies"],[421,96,461,94],[421,97,461,95,"map"],[421,100,461,98],[421,101,461,99,"e"],[421,102,461,100],[421,106,461,104],[421,109,461,107,"e"],[421,110,461,108],[421,111,461,109,"id"],[421,113,461,111],[421,117,461,115,"e"],[421,118,461,116],[421,119,461,117,"health"],[421,125,461,123],[421,130,461,128],[421,131,461,129],[421,132,461,130],[422,8,462,6],[424,8,464,6],[425,8,465,6],[425,12,465,12,"lowHealthEnemies"],[425,28,465,28],[425,31,465,31,"newState"],[425,39,465,39],[425,40,465,40,"enemies"],[425,47,465,47],[425,48,465,48,"filter"],[425,54,465,54],[425,55,465,55,"enemy"],[425,60,465,60],[425,64,465,64,"enemy"],[425,69,465,69],[425,70,465,70,"health"],[425,76,465,76],[425,80,465,80],[425,82,465,82],[425,86,465,86,"enemy"],[425,91,465,91],[425,92,465,92,"health"],[425,98,465,98],[425,101,465,101],[425,102,465,102],[425,103,465,103],[426,8,466,6],[426,12,466,10,"lowHealthEnemies"],[426,28,466,26],[426,29,466,27,"length"],[426,35,466,33],[426,38,466,36],[426,39,466,37],[426,41,466,39],[427,10,467,8,"console"],[427,17,467,15],[427,18,467,16,"log"],[427,21,467,19],[427,22,467,20],[427,61,467,59],[427,63,467,61,"lowHealthEnemies"],[427,79,467,77],[427,80,467,78,"map"],[427,83,467,81],[427,84,467,82,"e"],[427,85,467,83],[427,89,467,87],[427,92,467,90,"e"],[427,93,467,91],[427,94,467,92,"id"],[427,96,467,94],[427,100,467,98,"e"],[427,101,467,99],[427,102,467,100,"health"],[427,108,467,106],[427,112,467,110,"e"],[427,113,467,111],[427,114,467,112,"maxHealth"],[427,123,467,121],[427,128,467,126],[427,129,467,127],[427,130,467,128],[428,8,468,6],[430,8,470,6],[431,8,471,6],[431,12,471,12,"beforeCount"],[431,23,471,23],[431,26,471,26,"newState"],[431,34,471,34],[431,35,471,35,"enemies"],[431,42,471,42],[431,43,471,43,"length"],[431,49,471,49],[432,8,472,6,"newState"],[432,16,472,14],[432,17,472,15,"enemies"],[432,24,472,22],[432,27,472,25,"newState"],[432,35,472,33],[432,36,472,34,"enemies"],[432,43,472,41],[432,44,472,42,"filter"],[432,50,472,48],[432,51,472,49,"enemy"],[432,56,472,54],[432,60,472,58,"enemy"],[432,65,472,63],[432,66,472,64,"health"],[432,72,472,70],[432,75,472,73],[432,76,472,74],[432,77,472,75],[433,8,473,6],[433,12,473,12,"afterCount"],[433,22,473,22],[433,25,473,25,"newState"],[433,33,473,33],[433,34,473,34,"enemies"],[433,41,473,41],[433,42,473,42,"length"],[433,48,473,48],[434,8,475,6],[434,12,475,10,"beforeCount"],[434,23,475,21],[434,28,475,26,"afterCount"],[434,38,475,36],[434,40,475,38],[435,10,476,8,"console"],[435,17,476,15],[435,18,476,16,"log"],[435,21,476,19],[435,22,476,20],[435,52,476,50,"beforeCount"],[435,63,476,61],[435,66,476,64,"afterCount"],[435,76,476,74],[435,102,476,100],[435,103,476,101],[436,8,477,6],[438,8,479,6],[439,8,480,6],[440,8,481,6],[440,12,481,12,"MAX_ENEMIES"],[440,23,481,23],[440,26,481,26],[440,28,481,28],[440,29,481,29],[440,30,481,30],[441,8,482,6],[441,12,482,12,"MIN_SPAWN_DELAY"],[441,27,482,27],[441,30,482,30],[441,33,482,33],[441,34,482,34],[441,35,482,35],[442,8,483,6],[442,12,483,12,"now"],[442,15,483,15],[442,18,483,18,"Date"],[442,22,483,22],[442,23,483,23,"now"],[442,26,483,26],[442,27,483,27],[442,28,483,28],[443,8,484,6],[443,12,484,12,"hasBoss"],[443,19,484,19],[443,22,484,22,"newState"],[443,30,484,30],[443,31,484,31,"enemies"],[443,38,484,38],[443,39,484,39,"some"],[443,43,484,43],[443,44,484,44,"enemy"],[443,49,484,49],[443,53,484,53,"enemy"],[443,58,484,58],[443,59,484,59,"isBoss"],[443,65,484,65],[443,66,484,66],[445,8,486,6],[446,8,487,6],[446,12,487,10],[446,13,487,11,"newState"],[446,21,487,19],[446,22,487,20,"lastSpawnTime"],[446,35,487,33],[446,37,487,35],[447,10,488,8,"newState"],[447,18,488,16],[447,19,488,17,"lastSpawnTime"],[447,32,488,30],[447,35,488,33,"now"],[447,38,488,36],[448,8,489,6],[449,8,491,6,"console"],[449,15,491,13],[449,16,491,14,"log"],[449,19,491,17],[449,20,491,18],[449,53,491,51,"newState"],[449,61,491,59],[449,62,491,60,"enemies"],[449,69,491,67],[449,70,491,68,"length"],[449,76,491,74],[449,85,491,83,"MAX_ENEMIES"],[449,96,491,94],[449,109,491,107,"hasBoss"],[449,116,491,114],[449,118,491,116],[449,119,491,117],[451,8,493,6],[452,8,494,6],[452,12,494,10],[452,13,494,11,"hasBoss"],[452,20,494,18],[452,24,494,22,"newState"],[452,32,494,30],[452,33,494,31,"enemies"],[452,40,494,38],[452,41,494,39,"length"],[452,47,494,45],[452,50,494,48,"MAX_ENEMIES"],[452,61,494,59],[452,65,494,64,"now"],[452,68,494,67],[452,71,494,70,"newState"],[452,79,494,78],[452,80,494,79,"lastSpawnTime"],[452,93,494,92],[452,97,494,97,"MIN_SPAWN_DELAY"],[452,112,494,112],[452,114,494,114],[453,10,495,8,"console"],[453,17,495,15],[453,18,495,16,"log"],[453,21,495,19],[453,22,495,20],[453,43,495,41,"newState"],[453,51,495,49],[453,52,495,50,"enemies"],[453,59,495,57],[453,60,495,58,"length"],[453,66,495,64],[453,69,495,67],[453,70,495,68],[453,74,495,72,"MAX_ENEMIES"],[453,85,495,83],[453,87,495,85],[453,88,495,86],[454,10,496,8,"spawnTestEnemy"],[454,24,496,22],[454,25,496,23,"newState"],[454,33,496,31],[454,34,496,32],[455,10,497,8,"newState"],[455,18,497,16],[455,19,497,17,"lastSpawnTime"],[455,32,497,30],[455,35,497,33,"now"],[455,38,497,36],[456,8,498,6],[457,8,500,6],[457,15,500,13,"newState"],[457,23,500,21],[458,6,501,4],[458,7,501,5],[458,47,501,6],[460,6,503,4],[461,6,504,4,"console"],[461,13,504,11],[461,14,504,12,"log"],[461,17,504,15],[461,18,504,16],[461,50,504,48,"enemiesToKill"],[461,63,504,61],[461,64,504,62,"length"],[461,70,504,68],[461,101,504,99],[461,102,504,100],[462,6,506,4,"enemiesToKill"],[462,19,506,17],[462,20,506,18,"forEach"],[462,27,506,25],[462,28,506,26],[462,29,506,27,"enemy"],[462,34,506,32],[462,36,506,34,"index"],[462,41,506,39],[462,46,506,44],[463,8,507,6,"console"],[463,15,507,13],[463,16,507,14,"log"],[463,19,507,17],[463,20,507,18],[463,57,507,55,"index"],[463,62,507,60],[463,65,507,63],[463,66,507,64],[463,70,507,68,"enemiesToKill"],[463,83,507,81],[463,84,507,82,"length"],[463,90,507,88],[463,104,507,102,"enemy"],[463,109,507,107],[463,110,507,108,"id"],[463,112,507,110],[463,114,507,112],[463,115,507,113],[464,8,508,6,"handleEnemyKill"],[464,23,508,21],[464,24,508,22,"enemy"],[464,29,508,27],[464,30,508,28],[465,6,509,4],[465,7,509,5],[465,8,509,6],[466,4,510,2],[466,5,510,3],[466,7,510,5],[466,8,510,6,"handleEnemyKill"],[466,23,510,21],[466,24,510,22],[466,25,510,23],[466,26,510,24],[466,27,510,25],[468,4,512,2],[469,4,513,2],[469,8,513,8,"findClosestEnemyInternal"],[469,32,513,32],[469,35,513,36,"enemies"],[469,42,513,58],[469,46,513,83],[470,6,514,4],[470,10,514,8,"enemies"],[470,17,514,15],[470,18,514,16,"length"],[470,24,514,22],[470,29,514,27],[470,30,514,28],[470,32,514,30],[470,39,514,37],[470,43,514,41],[472,6,516,4],[473,6,517,4],[473,10,517,10,"SCREEN_WIDTH"],[473,22,517,22],[473,25,517,25],[473,28,517,28],[474,6,518,4],[474,10,518,10,"GAME_AREA_HEIGHT"],[474,26,518,26],[474,29,518,29],[474,32,518,32],[474,35,518,35],[474,38,518,38],[474,39,518,39],[474,40,518,40],[475,6,519,4],[475,10,519,10,"ninjaX"],[475,16,519,16],[475,19,519,19,"SCREEN_WIDTH"],[475,31,519,31],[475,34,519,34],[475,35,519,35],[476,6,520,4],[476,10,520,10,"ninjaY"],[476,16,520,16],[476,19,520,19,"GAME_AREA_HEIGHT"],[476,35,520,35],[476,38,520,38],[476,39,520,39],[477,6,522,4],[477,10,522,8,"closestEnemy"],[477,22,522,20],[477,25,522,23,"enemies"],[477,32,522,30],[477,33,522,31],[477,34,522,32],[477,35,522,33],[478,6,523,4],[478,10,523,8,"closestDistance"],[478,25,523,23],[478,28,523,26,"Infinity"],[478,36,523,34],[479,6,525,4,"enemies"],[479,13,525,11],[479,14,525,12,"forEach"],[479,21,525,19],[479,22,525,20,"enemy"],[479,27,525,25],[479,31,525,29],[480,8,526,6],[480,12,526,12,"distance"],[480,20,526,20],[480,23,526,23,"Math"],[480,27,526,27],[480,28,526,28,"sqrt"],[480,32,526,32],[480,33,527,8,"Math"],[480,37,527,12],[480,38,527,13,"pow"],[480,41,527,16],[480,42,527,17,"enemy"],[480,47,527,22],[480,48,527,23,"position"],[480,56,527,31],[480,57,527,32,"x"],[480,58,527,33],[480,61,527,36,"ninjaX"],[480,67,527,42],[480,69,527,44],[480,70,527,45],[480,71,527,46],[480,74,528,8,"Math"],[480,78,528,12],[480,79,528,13,"pow"],[480,82,528,16],[480,83,528,17,"enemy"],[480,88,528,22],[480,89,528,23,"position"],[480,97,528,31],[480,98,528,32,"y"],[480,99,528,33],[480,102,528,36,"ninjaY"],[480,108,528,42],[480,110,528,44],[480,111,528,45],[480,112,529,6],[480,113,529,7],[481,8,531,6],[481,12,531,10,"distance"],[481,20,531,18],[481,23,531,21,"closestDistance"],[481,38,531,36],[481,40,531,38],[482,10,532,8,"closestDistance"],[482,25,532,23],[482,28,532,26,"distance"],[482,36,532,34],[483,10,533,8,"closestEnemy"],[483,22,533,20],[483,25,533,23,"enemy"],[483,30,533,28],[484,8,534,6],[485,6,535,4],[485,7,535,5],[485,8,535,6],[486,6,537,4,"console"],[486,13,537,11],[486,14,537,12,"log"],[486,17,537,15],[486,18,537,16],[486,60,537,58,"closestDistance"],[486,75,537,73],[486,76,537,74,"toFixed"],[486,83,537,81],[486,84,537,82],[486,85,537,83],[486,86,537,84],[486,88,537,86],[486,89,537,87],[487,6,538,4],[487,13,538,11,"closestEnemy"],[487,25,538,23],[488,4,539,2],[488,5,539,3],[490,4,541,2],[491,4,542,2],[491,8,542,8,"findClosestEnemy"],[491,24,542,24],[491,27,542,27,"findClosestEnemy"],[491,28,542,27],[491,33,542,53],[492,6,543,4],[492,13,543,11,"findClosestEnemyInternal"],[492,37,543,35],[492,38,543,36,"combatState"],[492,49,543,47],[492,50,543,48,"enemies"],[492,57,543,55],[492,58,543,56],[493,4,544,2],[493,5,544,3],[495,4,546,2],[496,4,547,2],[496,8,547,2,"_useState7"],[496,18,547,2],[496,21,547,58],[496,25,547,58,"useState"],[496,31,547,66],[496,32,547,66,"useState"],[496,40,547,66],[496,42,547,91],[497,8,547,93,"x"],[497,9,547,94],[497,11,547,96],[497,12,547,97],[498,8,547,99,"y"],[498,9,547,100],[498,11,547,102],[499,6,547,104],[499,7,547,105],[499,8,547,106],[500,6,547,106,"_useState8"],[500,16,547,106],[500,23,547,106,"_slicedToArray"],[500,37,547,106],[500,38,547,106,"default"],[500,45,547,106],[500,47,547,106,"_useState7"],[500,57,547,106],[501,6,547,9,"currentNinjaPosition"],[501,26,547,29],[501,29,547,29,"_useState8"],[501,39,547,29],[502,6,547,31,"setCurrentNinjaPosition"],[502,29,547,54],[502,32,547,54,"_useState8"],[502,42,547,54],[503,4,548,2],[503,8,548,2,"_useState9"],[503,18,548,2],[503,21,548,60],[503,25,548,60,"useState"],[503,31,548,68],[503,32,548,68,"useState"],[503,40,548,68],[503,42,548,69],[503,47,548,74],[503,48,548,75],[504,6,548,75,"_useState0"],[504,16,548,75],[504,23,548,75,"_slicedToArray"],[504,37,548,75],[504,38,548,75,"default"],[504,45,548,75],[504,47,548,75,"_useState9"],[504,57,548,75],[505,6,548,9,"isManualControlActive"],[505,27,548,30],[505,30,548,30,"_useState0"],[505,40,548,30],[506,6,548,32,"setIsManualControlActive"],[506,30,548,56],[506,33,548,56,"_useState0"],[506,43,548,56],[508,4,550,2],[509,4,551,2],[509,8,551,8,"updateNinjaPosition"],[509,27,551,27],[509,30,551,30],[509,34,551,30,"useCallback"],[509,40,551,41],[509,41,551,41,"useCallback"],[509,52,551,41],[509,54,551,43,"newPosition"],[509,65,551,78],[509,69,551,83],[510,6,552,4,"setCurrentNinjaPosition"],[510,29,552,27],[510,30,552,28,"newPosition"],[510,41,552,39],[510,42,552,40],[511,4,553,2],[511,5,553,3],[511,7,553,5],[511,9,553,7],[511,10,553,8],[513,4,555,2],[514,4,556,2],[514,8,556,8,"setManualControlActive"],[514,30,556,30],[514,33,556,33],[514,37,556,33,"useCallback"],[514,43,556,44],[514,44,556,44,"useCallback"],[514,55,556,44],[514,57,556,46,"active"],[514,63,556,61],[514,67,556,66],[515,6,557,4,"setIsManualControlActive"],[515,30,557,28],[515,31,557,29,"active"],[515,37,557,35],[515,38,557,36],[516,6,558,4,"console"],[516,13,558,11],[516,14,558,12,"log"],[516,17,558,15],[516,18,558,16],[516,39,558,37,"active"],[516,45,558,43],[516,48,558,46],[516,59,558,57],[516,62,558,60],[516,75,558,73],[516,88,558,86,"active"],[516,94,558,92],[516,97,558,95],[516,105,558,103],[516,108,558,106],[516,117,558,115],[516,119,558,117],[516,120,558,118],[517,4,559,2],[517,5,559,3],[517,7,559,5],[517,9,559,7],[517,10,559,8],[519,4,561,2],[520,4,562,2],[520,8,562,8,"handleProjectileHit"],[520,27,562,27],[520,30,562,31,"projectile"],[520,40,562,59],[520,44,562,64],[521,6,563,4,"console"],[521,13,563,11],[521,14,563,12,"log"],[521,17,563,15],[521,18,563,16],[521,35,563,33,"projectile"],[521,45,563,43],[521,46,563,44,"id"],[521,48,563,46],[521,62,563,60,"projectile"],[521,72,563,70],[521,73,563,71,"targetEnemyId"],[521,86,563,84],[521,94,563,92,"projectile"],[521,104,563,102],[521,105,563,103,"damage"],[521,111,563,109],[521,120,563,118],[521,121,563,119],[522,6,565,4,"setCombatState"],[522,20,565,18],[522,21,565,19,"prev"],[522,25,565,23],[522,29,565,27],[523,8,566,6],[523,12,566,12,"newState"],[523,20,566,20],[523,23,566,23],[524,10,566,25],[524,13,566,28,"prev"],[525,8,566,33],[525,9,566,34],[527,8,568,6],[528,8,569,6],[528,12,569,12,"enemyIndex"],[528,22,569,22],[528,25,569,25,"newState"],[528,33,569,33],[528,34,569,34,"enemies"],[528,41,569,41],[528,42,569,42,"findIndex"],[528,51,569,51],[528,52,569,52,"e"],[528,53,569,53],[528,57,569,57,"e"],[528,58,569,58],[528,59,569,59,"id"],[528,61,569,61],[528,66,569,66,"projectile"],[528,76,569,76],[528,77,569,77,"targetEnemyId"],[528,90,569,90],[528,91,569,91],[529,8,570,6],[529,12,570,10,"enemyIndex"],[529,22,570,20],[529,26,570,24],[529,27,570,25],[529,29,570,27],[530,10,571,8,"newState"],[530,18,571,16],[530,19,571,17,"enemies"],[530,26,571,24],[530,29,571,27],[530,30,571,28],[530,33,571,31,"newState"],[530,41,571,39],[530,42,571,40,"enemies"],[530,49,571,47],[530,50,571,48],[531,10,572,8,"newState"],[531,18,572,16],[531,19,572,17,"enemies"],[531,26,572,24],[531,27,572,25,"enemyIndex"],[531,37,572,35],[531,38,572,36],[531,41,572,39],[532,12,573,10],[532,15,573,13,"newState"],[532,23,573,21],[532,24,573,22,"enemies"],[532,31,573,29],[532,32,573,30,"enemyIndex"],[532,42,573,40],[532,43,573,41],[533,12,574,10,"health"],[533,18,574,16],[533,20,574,18,"newState"],[533,28,574,26],[533,29,574,27,"enemies"],[533,36,574,34],[533,37,574,35,"enemyIndex"],[533,47,574,45],[533,48,574,46],[533,49,574,47,"health"],[533,55,574,53],[533,58,574,56,"projectile"],[533,68,574,66],[533,69,574,67,"damage"],[533,75,574,73],[534,12,575,10,"lastDamaged"],[534,23,575,21],[534,25,575,23,"combatEngine"],[534,44,575,35],[534,45,575,35,"combatEngine"],[534,57,575,35],[534,58,575,36,"getCurrentTick"],[534,72,575,50],[534,73,575,51],[535,10,576,8],[535,11,576,9],[536,10,578,8,"console"],[536,17,578,15],[536,18,578,16,"log"],[536,21,578,19],[536,22,578,20],[536,34,578,32,"projectile"],[536,44,578,42],[536,45,578,43,"targetEnemyId"],[536,58,578,56],[536,70,578,68,"newState"],[536,78,578,76],[536,79,578,77,"enemies"],[536,86,578,84],[536,87,578,85,"enemyIndex"],[536,97,578,95],[536,98,578,96],[536,99,578,97,"health"],[536,105,578,103],[536,109,578,107,"newState"],[536,117,578,115],[536,118,578,116,"enemies"],[536,125,578,123],[536,126,578,124,"enemyIndex"],[536,136,578,134],[536,137,578,135],[536,138,578,136,"maxHealth"],[536,147,578,145],[536,149,578,147],[536,150,578,148],[537,8,579,6],[538,8,581,6],[538,15,581,13,"newState"],[538,23,581,21],[539,6,582,4],[539,7,582,5],[539,8,582,6],[541,6,584,4],[542,6,585,4,"setProjectiles"],[542,20,585,18],[542,21,585,19,"prev"],[542,25,585,23],[542,29,585,27,"prev"],[542,33,585,31],[542,34,585,32,"filter"],[542,40,585,38],[542,41,585,39,"p"],[542,42,585,40],[542,46,585,44,"p"],[542,47,585,45],[542,48,585,46,"id"],[542,50,585,48],[542,55,585,53,"projectile"],[542,65,585,63],[542,66,585,64,"id"],[542,68,585,66],[542,69,585,67],[542,70,585,68],[543,4,586,2],[543,5,586,3],[545,4,588,2],[546,4,589,2],[546,8,589,8,"castAbility"],[546,19,589,19],[546,22,589,22,"castAbility"],[546,23,589,23,"state"],[546,28,589,41],[546,30,589,43,"slotIndex"],[546,39,589,60],[546,44,589,65],[547,6,590,4],[547,10,590,10,"deck"],[547,14,590,14],[547,17,590,17,"state"],[547,22,590,22],[547,23,590,23,"abilityManager"],[547,37,590,37],[547,38,590,38,"getDeck"],[547,45,590,45],[547,46,590,46],[547,47,590,47],[548,6,591,4],[548,10,591,10,"ability"],[548,17,591,17],[548,20,591,20,"deck"],[548,24,591,24],[548,25,591,25,"slots"],[548,30,591,30],[548,31,591,31,"slotIndex"],[548,40,591,40],[548,41,591,41],[549,6,592,4],[549,10,592,8],[549,11,592,9,"ability"],[549,18,592,16],[549,20,592,18],[550,6,594,4,"console"],[550,13,594,11],[550,14,594,12,"log"],[550,17,594,15],[550,18,594,16],[550,43,594,41,"ability"],[550,50,594,48],[550,51,594,49,"id"],[550,53,594,51],[550,67,594,65,"slotIndex"],[550,76,594,74],[550,78,594,76],[550,79,594,77],[552,6,596,4],[553,6,597,4],[553,10,597,8,"damage"],[553,16,597,14],[553,19,597,17,"ability"],[553,26,597,24],[553,27,597,25,"stats"],[553,32,597,30],[553,33,597,31,"baseDamage"],[553,43,597,41],[555,6,599,4],[556,6,600,4,"deck"],[556,10,600,8],[556,11,600,9,"activeSynergies"],[556,26,600,24],[556,27,600,25,"forEach"],[556,34,600,32],[556,35,600,33,"synergy"],[556,42,600,40],[556,46,600,44],[557,8,601,6],[557,12,601,10,"synergy"],[557,19,601,17],[557,20,601,18,"bonus"],[557,25,601,23],[557,26,601,24,"damageBonus"],[557,37,601,35],[557,41,602,10,"synergy"],[557,48,602,17],[557,49,602,18,"requiredTags"],[557,61,602,30],[557,62,602,31,"some"],[557,66,602,35],[557,67,602,36,"tag"],[557,70,602,39],[557,74,602,43,"ability"],[557,81,602,50],[557,82,602,51,"tags"],[557,86,602,55],[557,87,602,56,"includes"],[557,95,602,64],[557,96,602,65,"tag"],[557,99,602,68],[557,100,602,69],[557,101,602,70],[557,103,602,72],[558,10,603,8,"damage"],[558,16,603,14],[558,20,603,19],[558,21,603,20],[558,24,603,23,"synergy"],[558,31,603,30],[558,32,603,31,"bonus"],[558,37,603,36],[558,38,603,37,"damageBonus"],[558,49,603,48],[558,52,603,51],[558,55,603,55],[559,8,604,6],[560,6,605,4],[560,7,605,5],[560,8,605,6],[562,6,607,4],[563,6,608,4],[563,10,608,10,"isAOE"],[563,15,608,15],[563,18,608,18,"ability"],[563,25,608,25],[563,26,608,26,"effects"],[563,33,608,33],[563,34,608,34,"includes"],[563,42,608,42],[563,43,608,43],[563,48,608,48],[563,49,608,49],[563,53,608,53,"ability"],[563,60,608,60],[563,61,608,61,"stats"],[563,66,608,66],[563,67,608,67,"aoeRadius"],[563,76,608,76],[564,6,609,4,"console"],[564,13,609,11],[564,14,609,12,"log"],[564,17,609,15],[564,18,609,16],[564,39,609,37,"ability"],[564,46,609,44],[564,47,609,45,"name"],[564,51,609,49],[564,66,609,64,"JSON"],[564,70,609,68],[564,71,609,69,"stringify"],[564,80,609,78],[564,81,609,79,"ability"],[564,88,609,86],[564,89,609,87,"effects"],[564,96,609,94],[564,97,609,95],[564,113,609,111,"ability"],[564,120,609,118],[564,121,609,119,"stats"],[564,126,609,124],[564,127,609,125,"aoeRadius"],[564,136,609,134],[564,148,609,146,"isAOE"],[564,153,609,151],[564,155,609,153],[564,156,609,154],[565,6,611,4],[565,10,611,8,"isAOE"],[565,15,611,13],[565,17,611,15],[566,8,612,6,"console"],[566,15,612,13],[566,16,612,14,"log"],[566,19,612,17],[566,20,612,18],[566,39,612,37,"ability"],[566,46,612,44],[566,47,612,45,"name"],[566,51,612,49],[566,67,612,65,"ability"],[566,74,612,72],[566,75,612,73,"stats"],[566,80,612,78],[566,81,612,79,"aoeRadius"],[566,90,612,88],[566,92,612,90],[566,93,612,91],[568,8,614,6],[569,8,615,6],[570,8,616,6],[570,12,616,12,"ninjaX"],[570,18,616,18],[570,21,616,21,"currentNinjaPosition"],[570,41,616,41],[570,42,616,42,"x"],[570,43,616,43],[570,46,616,46],[570,48,616,48],[570,49,616,49],[570,50,616,50],[571,8,617,6],[571,12,617,12,"ninjaY"],[571,18,617,18],[571,21,617,21,"currentNinjaPosition"],[571,41,617,41],[571,42,617,42,"y"],[571,43,617,43],[571,46,617,46],[571,48,617,48],[572,8,618,6],[572,12,618,12,"aoeRadius"],[572,21,618,21],[572,24,618,24,"ability"],[572,31,618,31],[572,32,618,32,"stats"],[572,37,618,37],[572,38,618,38,"aoeRadius"],[572,47,618,47],[573,8,620,6],[573,12,620,12,"enemiesInRange"],[573,26,620,26],[573,29,620,29,"state"],[573,34,620,34],[573,35,620,35,"enemies"],[573,42,620,42],[573,43,620,43,"filter"],[573,49,620,49],[573,50,620,50,"enemy"],[573,55,620,55],[573,59,620,59],[574,10,621,8],[574,14,621,14,"enemyX"],[574,20,621,20],[574,23,621,23,"enemy"],[574,28,621,28],[574,29,621,29,"position"],[574,37,621,37],[574,38,621,38,"x"],[574,39,621,39],[574,42,621,42],[574,46,621,46],[574,47,621,47],[574,48,621,48],[575,10,622,8],[575,14,622,14,"enemyY"],[575,20,622,20],[575,23,622,23,"enemy"],[575,28,622,28],[575,29,622,29,"position"],[575,37,622,37],[575,38,622,38,"y"],[575,39,622,39],[575,42,622,42],[575,46,622,46],[576,10,623,8],[576,14,623,14,"distance"],[576,22,623,22],[576,25,623,25,"Math"],[576,29,623,29],[576,30,623,30,"sqrt"],[576,34,623,34],[576,35,623,35,"Math"],[576,39,623,39],[576,40,623,40,"pow"],[576,43,623,43],[576,44,623,44,"enemyX"],[576,50,623,50],[576,53,623,53,"ninjaX"],[576,59,623,59],[576,61,623,61],[576,62,623,62],[576,63,623,63],[576,66,623,66,"Math"],[576,70,623,70],[576,71,623,71,"pow"],[576,74,623,74],[576,75,623,75,"enemyY"],[576,81,623,81],[576,84,623,84,"ninjaY"],[576,90,623,90],[576,92,623,92],[576,93,623,93],[576,94,623,94],[576,95,623,95],[577,10,624,8],[577,17,624,15,"distance"],[577,25,624,23],[577,29,624,27,"aoeRadius"],[577,38,624,36],[578,8,625,6],[578,9,625,7],[578,10,625,8],[579,8,627,6,"console"],[579,15,627,13],[579,16,627,14,"log"],[579,19,627,17],[579,20,627,18],[579,45,627,43,"enemiesInRange"],[579,59,627,57],[579,60,627,58,"length"],[579,66,627,64],[579,88,627,86,"aoeRadius"],[579,97,627,95],[579,107,627,105],[579,108,627,106],[581,8,629,6],[582,8,630,6,"enemiesInRange"],[582,22,630,20],[582,23,630,21,"forEach"],[582,30,630,28],[582,31,630,29,"enemy"],[582,36,630,34],[582,40,630,38],[583,10,631,8],[583,14,631,14,"damageResult"],[583,26,631,26],[583,29,631,29,"DamageCalculator"],[583,48,631,45],[583,49,631,45,"DamageCalculator"],[583,65,631,45],[583,66,631,46,"calculateDamage"],[583,81,631,61],[583,82,631,62,"damage"],[583,88,631,68],[583,90,631,70,"state"],[583,95,631,75],[583,96,631,76,"playerStats"],[583,107,631,87],[583,109,631,89,"enemy"],[583,114,631,94],[583,115,631,95,"stats"],[583,120,631,100],[583,121,631,101],[584,10,632,8,"createProjectile"],[584,26,632,24],[584,27,632,25,"enemy"],[584,32,632,30],[584,34,632,32,"damageResult"],[584,46,632,44],[584,47,632,45,"damage"],[584,53,632,51],[584,55,632,53,"currentNinjaPosition"],[584,75,632,73],[584,77,632,75],[585,12,633,10,"id"],[585,14,633,12],[585,16,633,14,"ability"],[585,23,633,21],[585,24,633,22,"id"],[585,26,633,24],[586,12,634,10,"name"],[586,16,634,14],[586,18,634,16,"ability"],[586,25,634,23],[586,26,634,24,"name"],[586,30,634,28],[587,12,635,10,"icon"],[587,16,635,14],[587,18,635,16,"ability"],[587,25,635,23],[587,26,635,24,"icon"],[588,10,636,8],[588,11,636,9],[588,12,636,10],[589,10,637,8,"console"],[589,17,637,15],[589,18,637,16,"log"],[589,21,637,19],[589,22,637,20],[589,37,637,35,"enemy"],[589,42,637,40],[589,43,637,41,"name"],[589,47,637,45],[589,55,637,53,"damageResult"],[589,67,637,65],[589,68,637,66,"damage"],[589,74,637,72],[589,83,637,81],[589,84,637,82],[590,8,638,6],[590,9,638,7],[590,10,638,8],[591,8,640,6,"console"],[591,15,640,13],[591,16,640,14,"log"],[591,19,640,17],[591,20,640,18],[591,26,640,24,"ability"],[591,33,640,31],[591,34,640,32,"name"],[591,38,640,36],[591,56,640,54,"enemiesInRange"],[591,70,640,68],[591,71,640,69,"length"],[591,77,640,75],[591,93,640,91,"damage"],[591,99,640,97],[591,118,640,116],[591,119,640,117],[592,6,642,4],[592,7,642,5],[592,13,642,11],[593,8,643,6],[594,8,644,6],[594,12,644,12,"target"],[594,18,644,18],[594,21,644,21,"findClosestEnemyInternal"],[594,45,644,45],[594,46,644,46,"state"],[594,51,644,51],[594,52,644,52,"enemies"],[594,59,644,59],[594,60,644,60],[595,8,645,6],[595,12,645,10],[595,13,645,11,"target"],[595,19,645,17],[595,21,645,19],[596,8,647,6],[596,12,647,12,"damageResult"],[596,24,647,24],[596,27,647,27,"DamageCalculator"],[596,46,647,43],[596,47,647,43,"DamageCalculator"],[596,63,647,43],[596,64,647,44,"calculateDamage"],[596,79,647,59],[596,80,647,60,"damage"],[596,86,647,66],[596,88,647,68,"state"],[596,93,647,73],[596,94,647,74,"playerStats"],[596,105,647,85],[596,107,647,87,"target"],[596,113,647,93],[596,114,647,94,"stats"],[596,119,647,99],[596,120,647,100],[598,8,649,6],[599,8,650,6,"createProjectile"],[599,24,650,22],[599,25,650,23,"target"],[599,31,650,29],[599,33,650,31,"damageResult"],[599,45,650,43],[599,46,650,44,"damage"],[599,52,650,50],[599,54,650,52,"currentNinjaPosition"],[599,74,650,72],[599,76,650,74],[600,10,651,8,"id"],[600,12,651,10],[600,14,651,12,"ability"],[600,21,651,19],[600,22,651,20,"id"],[600,24,651,22],[601,10,652,8,"name"],[601,14,652,12],[601,16,652,14,"ability"],[601,23,652,21],[601,24,652,22,"name"],[601,28,652,26],[602,10,653,8,"icon"],[602,14,653,12],[602,16,653,14,"ability"],[602,23,653,21],[602,24,653,22,"icon"],[603,8,654,6],[603,9,654,7],[603,10,654,8],[604,8,656,6,"console"],[604,15,656,13],[604,16,656,14,"log"],[604,19,656,17],[604,20,656,18],[604,26,656,24,"ability"],[604,33,656,31],[604,34,656,32,"name"],[604,38,656,36],[604,66,656,64,"damageResult"],[604,78,656,76],[604,79,656,77,"damage"],[604,85,656,83],[604,95,656,93,"damageResult"],[604,107,656,105],[604,108,656,106,"isCritical"],[604,118,656,116],[604,121,656,119],[604,131,656,129],[604,134,656,132],[604,136,656,134],[604,138,656,136],[604,139,656,137],[605,6,657,4],[607,6,659,4],[608,6,660,4],[608,10,660,8,"ability"],[608,17,660,15],[608,18,660,16,"effects"],[608,25,660,23],[608,26,660,24,"includes"],[608,34,660,32],[608,35,660,33],[608,40,660,38],[608,41,660,39],[608,45,660,43,"ability"],[608,52,660,50],[608,53,660,51,"stats"],[608,58,660,56],[608,59,660,57,"duration"],[608,67,660,65],[608,69,660,67],[609,8,661,6],[609,12,661,12,"targets"],[609,19,661,19],[609,22,661,22,"isAOE"],[609,27,661,27],[609,30,662,8,"state"],[609,35,662,13],[609,36,662,14,"enemies"],[609,43,662,21],[609,44,662,22,"filter"],[609,50,662,28],[609,51,662,29,"enemy"],[609,56,662,34],[609,60,662,38],[610,10,663,10],[610,14,663,16,"ninjaX"],[610,20,663,22],[610,23,663,25,"currentNinjaPosition"],[610,43,663,45],[610,44,663,46,"x"],[610,45,663,47],[610,48,663,50],[610,50,663,52],[611,10,664,10],[611,14,664,16,"ninjaY"],[611,20,664,22],[611,23,664,25,"currentNinjaPosition"],[611,43,664,45],[611,44,664,46,"y"],[611,45,664,47],[611,48,664,50],[611,50,664,52],[612,10,665,10],[612,14,665,16,"enemyX"],[612,20,665,22],[612,23,665,25,"enemy"],[612,28,665,30],[612,29,665,31,"position"],[612,37,665,39],[612,38,665,40,"x"],[612,39,665,41],[612,42,665,44],[612,46,665,48],[613,10,666,10],[613,14,666,16,"enemyY"],[613,20,666,22],[613,23,666,25,"enemy"],[613,28,666,30],[613,29,666,31,"position"],[613,37,666,39],[613,38,666,40,"y"],[613,39,666,41],[613,42,666,44],[613,46,666,48],[614,10,667,10],[614,14,667,16,"distance"],[614,22,667,24],[614,25,667,27,"Math"],[614,29,667,31],[614,30,667,32,"sqrt"],[614,34,667,36],[614,35,667,37,"Math"],[614,39,667,41],[614,40,667,42,"pow"],[614,43,667,45],[614,44,667,46,"enemyX"],[614,50,667,52],[614,53,667,55,"ninjaX"],[614,59,667,61],[614,61,667,63],[614,62,667,64],[614,63,667,65],[614,66,667,68,"Math"],[614,70,667,72],[614,71,667,73,"pow"],[614,74,667,76],[614,75,667,77,"enemyY"],[614,81,667,83],[614,84,667,86,"ninjaY"],[614,90,667,92],[614,92,667,94],[614,93,667,95],[614,94,667,96],[614,95,667,97],[615,10,668,10],[615,17,668,17,"distance"],[615,25,668,25],[615,29,668,29,"ability"],[615,36,668,36],[615,37,668,37,"stats"],[615,42,668,42],[615,43,668,43,"aoeRadius"],[615,52,668,52],[616,8,669,8],[616,9,669,9],[616,10,669,10],[616,13,670,8],[616,14,670,9,"findClosestEnemyInternal"],[616,38,670,33],[616,39,670,34,"state"],[616,44,670,39],[616,45,670,40,"enemies"],[616,52,670,47],[616,53,670,48],[616,54,670,49],[616,55,670,50,"filter"],[616,61,670,56],[616,62,670,57,"Boolean"],[616,69,670,64],[616,70,670,65],[617,8,672,6,"targets"],[617,15,672,13],[617,16,672,14,"forEach"],[617,23,672,21],[617,24,672,22,"target"],[617,30,672,28],[617,34,672,32],[618,10,673,8,"state"],[618,15,673,13],[618,16,673,14,"statusEffects"],[618,29,673,27],[618,30,673,28,"addEffect"],[618,39,673,37],[618,40,673,38,"target"],[618,46,673,44],[618,47,673,45,"id"],[618,49,673,47],[618,51,673,49],[619,12,674,10,"id"],[619,14,674,12],[619,16,674,14],[619,19,674,17,"ability"],[619,26,674,24],[619,27,674,25,"id"],[619,29,674,27],[619,35,674,33],[620,12,675,10,"type"],[620,16,675,14],[620,18,675,16],[620,23,675,21],[621,12,676,10,"remainingTicks"],[621,26,676,24],[621,28,676,26,"Math"],[621,32,676,30],[621,33,676,31,"floor"],[621,38,676,36],[621,39,676,37,"ability"],[621,46,676,44],[621,47,676,45,"stats"],[621,52,676,50],[621,53,676,51,"duration"],[621,61,676,59],[621,64,676,62],[621,66,676,64],[621,67,676,65],[622,12,677,10,"tickInterval"],[622,24,677,22],[622,26,677,24],[622,28,677,26],[623,12,678,10,"lastTick"],[623,20,678,18],[623,22,678,20,"state"],[623,27,678,25],[623,28,678,26,"currentTick"],[623,39,678,37],[624,12,679,10,"value"],[624,17,679,15],[624,19,679,17,"Math"],[624,23,679,21],[624,24,679,22,"floor"],[624,29,679,27],[624,30,679,28,"damage"],[624,36,679,34],[624,39,679,37],[624,42,679,40],[624,43,679,41],[625,12,680,10,"stackable"],[625,21,680,19],[625,23,680,21],[626,10,681,8],[626,11,681,9],[626,12,681,10],[627,8,682,6],[627,9,682,7],[627,10,682,8],[628,6,683,4],[630,6,685,4],[631,6,686,4],[631,10,686,8,"ability"],[631,17,686,15],[631,18,686,16,"effects"],[631,25,686,23],[631,26,686,24,"includes"],[631,34,686,32],[631,35,686,33],[631,41,686,39],[631,42,686,40],[631,46,686,44,"ability"],[631,53,686,51],[631,54,686,52,"id"],[631,56,686,54],[631,61,686,59],[631,75,686,73],[631,77,686,75],[632,8,687,6,"console"],[632,15,687,13],[632,16,687,14,"log"],[632,19,687,17],[632,20,687,18],[632,66,687,64,"ability"],[632,73,687,71],[632,74,687,72,"stats"],[632,79,687,77],[632,80,687,78,"duration"],[632,88,687,86],[632,98,687,96],[632,99,687,97],[634,8,689,6],[635,8,690,6],[635,12,690,12,"cloneX"],[635,18,690,18],[635,21,690,21,"currentNinjaPosition"],[635,41,690,41],[635,42,690,42,"x"],[635,43,690,43],[635,46,690,46],[635,48,690,48],[635,49,690,49],[635,50,690,50],[636,8,691,6],[636,12,691,12,"cloneY"],[636,18,691,18],[636,21,691,21,"currentNinjaPosition"],[636,41,691,41],[636,42,691,42,"y"],[636,43,691,43],[636,46,691,46],[636,48,691,48],[636,49,691,49],[636,50,691,50],[638,8,693,6,"state"],[638,13,693,11],[638,14,693,12,"shadowClone"],[638,25,693,23],[638,28,693,26],[639,10,694,8,"id"],[639,12,694,10],[639,14,694,12],[639,30,694,28,"Date"],[639,34,694,32],[639,35,694,33,"now"],[639,38,694,36],[639,39,694,37],[639,40,694,38],[639,42,694,40],[640,10,695,8,"remainingTicks"],[640,24,695,22],[640,26,695,24,"Math"],[640,30,695,28],[640,31,695,29,"floor"],[640,36,695,34],[640,37,695,35,"ability"],[640,44,695,42],[640,45,695,43,"stats"],[640,50,695,48],[640,51,695,49,"duration"],[640,59,695,57],[640,62,695,60],[640,64,695,62],[640,65,695,63],[641,10,695,65],[642,10,696,8,"position"],[642,18,696,16],[642,20,696,18],[643,12,696,20,"x"],[643,13,696,21],[643,15,696,23,"cloneX"],[643,21,696,29],[644,12,696,31,"y"],[644,13,696,32],[644,15,696,34,"cloneY"],[645,10,696,41],[645,11,696,42],[646,10,697,8,"damageMultiplier"],[646,26,697,24],[646,28,697,26],[646,31,697,29],[646,32,697,31],[647,8,698,6],[647,9,698,7],[648,8,700,6,"console"],[648,15,700,13],[648,16,700,14,"log"],[648,19,700,17],[648,20,700,18],[648,63,700,61,"ability"],[648,70,700,68],[648,71,700,69,"stats"],[648,76,700,74],[648,77,700,75,"duration"],[648,85,700,83],[648,108,700,106],[648,109,700,107],[649,6,701,4],[650,4,702,2],[650,5,702,3],[652,4,704,2],[653,4,705,2],[653,8,705,8,"createProjectile"],[653,24,705,24],[653,27,705,27,"createProjectile"],[653,28,705,28,"targetEnemy"],[653,39,705,52],[653,41,705,54,"damage"],[653,47,705,68],[653,49,705,70,"ninjaPos"],[653,57,705,103],[653,59,705,105,"abilityInfo"],[653,70,705,159],[653,72,705,161,"isAOE"],[653,77,705,176],[653,79,705,178,"aoeRadius"],[653,88,705,196],[653,93,705,201],[654,6,706,4],[654,10,706,8],[654,11,706,9,"targetEnemy"],[654,22,706,20],[654,24,706,22],[655,8,707,6,"console"],[655,15,707,13],[655,16,707,14,"log"],[655,19,707,17],[655,20,707,18],[655,65,707,63],[655,66,707,64],[656,8,708,6],[656,15,708,13],[656,19,708,17],[657,6,709,4],[658,6,711,4],[658,10,711,10,"SCREEN_WIDTH"],[658,22,711,22],[658,25,711,25],[658,28,711,28],[659,6,712,4],[659,10,712,10,"GAME_AREA_HEIGHT"],[659,26,712,26],[659,29,712,29],[659,32,712,32],[659,35,712,35],[659,38,712,38],[659,39,712,39],[659,40,712,40],[660,6,713,4],[660,10,713,10,"NINJA_SIZE"],[660,20,713,20],[660,23,713,23],[660,25,713,25],[662,6,715,4],[663,6,716,4],[663,10,716,10,"ninjaX"],[663,16,716,16],[663,19,716,19,"ninjaPos"],[663,27,716,27],[663,30,716,30,"ninjaPos"],[663,38,716,38],[663,39,716,39,"x"],[663,40,716,40],[663,43,716,43,"NINJA_SIZE"],[663,53,716,53],[663,56,716,56],[663,57,716,57],[663,60,716,60,"SCREEN_WIDTH"],[663,72,716,72],[663,75,716,75],[663,76,716,76],[664,6,717,4],[664,10,717,10,"ninjaY"],[664,16,717,16],[664,19,717,19,"ninjaPos"],[664,27,717,27],[664,30,717,30,"ninjaPos"],[664,38,717,38],[664,39,717,39,"y"],[664,40,717,40],[664,43,717,43,"NINJA_SIZE"],[664,53,717,53],[664,56,717,56],[664,57,717,57],[664,60,717,60,"GAME_AREA_HEIGHT"],[664,76,717,76],[664,79,717,79],[664,80,717,80],[665,6,718,4],[665,10,718,10,"ENEMY_SIZE"],[665,20,718,20],[665,23,718,23],[665,25,718,25],[666,6,720,4],[666,10,720,10,"projectileId"],[666,22,720,22],[666,25,720,25],[666,33,720,33,"Date"],[666,37,720,37],[666,38,720,38,"now"],[666,41,720,41],[666,42,720,42],[666,43,720,43],[666,47,720,47,"Math"],[666,51,720,51],[666,52,720,52,"random"],[666,58,720,58],[666,59,720,59],[666,60,720,60],[666,62,720,62],[667,6,722,4],[667,10,722,10,"projectile"],[667,20,722,38],[667,23,722,41],[668,8,723,6,"id"],[668,10,723,8],[668,12,723,10,"projectileId"],[668,24,723,22],[669,8,724,6,"x"],[669,9,724,7],[669,11,724,9,"ninjaX"],[669,17,724,15],[670,8,725,6,"y"],[670,9,725,7],[670,11,725,9,"ninjaY"],[670,17,725,15],[671,8,726,6,"targetX"],[671,15,726,13],[671,17,726,15,"targetEnemy"],[671,28,726,26],[671,29,726,27,"position"],[671,37,726,35],[671,38,726,36,"x"],[671,39,726,37],[671,42,726,40,"ENEMY_SIZE"],[671,52,726,50],[671,55,726,53],[671,56,726,54],[672,8,727,6,"targetY"],[672,15,727,13],[672,17,727,15,"targetEnemy"],[672,28,727,26],[672,29,727,27,"position"],[672,37,727,35],[672,38,727,36,"y"],[672,39,727,37],[672,42,727,40,"ENEMY_SIZE"],[672,52,727,50],[672,55,727,53],[672,56,727,54],[673,8,728,6,"targetEnemyId"],[673,21,728,19],[673,23,728,21,"targetEnemy"],[673,34,728,32],[673,35,728,33,"id"],[673,37,728,35],[674,8,729,6,"damage"],[674,14,729,12],[674,16,729,14,"damage"],[674,22,729,20],[675,8,730,6,"startTime"],[675,17,730,15],[675,19,730,17,"Date"],[675,23,730,21],[675,24,730,22,"now"],[675,27,730,25],[675,28,730,26],[675,29,730,27],[676,8,731,6,"duration"],[676,16,731,14],[676,18,731,16],[676,21,731,19],[677,8,731,21],[678,8,732,6],[679,8,733,6,"abilityId"],[679,17,733,15],[679,19,733,17,"abilityInfo"],[679,30,733,28],[679,32,733,30,"id"],[679,34,733,32],[679,38,733,36],[679,54,733,52],[680,8,734,6,"abilityName"],[680,19,734,17],[680,21,734,19,"abilityInfo"],[680,32,734,30],[680,34,734,32,"name"],[680,38,734,36],[680,42,734,40],[680,58,734,56],[681,8,735,6,"abilityIcon"],[681,19,735,17],[681,21,735,19,"abilityInfo"],[681,32,735,30],[681,34,735,32,"icon"],[681,38,735,36],[681,42,735,40],[681,46,735,44],[682,8,735,46],[683,8,736,6],[684,8,737,6,"isAOE"],[684,13,737,11],[684,15,737,13,"isAOE"],[684,20,737,18],[684,24,737,22],[684,29,737,27],[685,8,738,6,"aoeRadius"],[685,17,738,15],[685,19,738,17,"aoeRadius"],[685,28,738,26],[685,32,738,30],[686,6,739,4],[686,7,739,5],[687,6,741,4,"console"],[687,13,741,11],[687,14,741,12,"log"],[687,17,741,15],[687,18,741,16],[687,44,741,42,"abilityInfo"],[687,55,741,53],[687,57,741,55,"name"],[687,61,741,59],[687,65,741,63],[687,81,741,79],[687,101,741,99,"projectileId"],[687,113,741,111],[687,128,741,126,"targetEnemy"],[687,139,741,137],[687,140,741,138,"name"],[687,144,741,142],[687,152,741,150,"damage"],[687,158,741,156],[687,167,741,165],[687,168,741,166],[688,6,742,4,"console"],[688,13,742,11],[688,14,742,12,"log"],[688,17,742,15],[688,18,742,16],[688,48,742,46,"isAOE"],[688,53,742,51],[688,68,742,66,"aoeRadius"],[688,77,742,75],[688,89,742,87,"damage"],[688,95,742,93],[688,97,742,95],[688,98,742,96],[689,6,744,4,"console"],[689,13,744,11],[689,14,744,12,"log"],[689,17,744,15],[689,18,744,16],[689,53,744,51,"targetEnemy"],[689,64,744,62],[689,65,744,63,"id"],[689,67,744,65],[689,75,744,73,"damage"],[689,81,744,79],[689,90,744,88],[689,91,744,89],[690,6,745,4,"console"],[690,13,745,11],[690,14,745,12,"log"],[690,17,745,15],[690,18,745,16],[690,53,745,51,"ninjaX"],[690,59,745,57],[690,64,745,62,"ninjaY"],[690,70,745,68],[690,87,745,85,"projectile"],[690,97,745,95],[690,98,745,96,"targetX"],[690,105,745,103],[690,110,745,108,"projectile"],[690,120,745,118],[690,121,745,119,"targetY"],[690,128,745,126],[690,131,745,129],[690,132,745,130],[691,6,747,4,"setProjectiles"],[691,20,747,18],[691,21,747,19,"prev"],[691,25,747,23],[691,29,747,27],[691,30,747,28],[691,33,747,31,"prev"],[691,37,747,35],[691,39,747,37,"projectile"],[691,49,747,47],[691,50,747,48],[691,51,747,49],[693,6,749,4],[694,6,750,4,"setTimeout"],[694,16,750,14],[694,17,750,15],[694,23,750,21],[695,8,751,6,"handleProjectileHit"],[695,27,751,25],[695,28,751,26,"projectile"],[695,38,751,36],[695,39,751,37],[696,6,752,4],[696,7,752,5],[696,9,752,7],[696,12,752,10],[696,13,752,11],[697,6,754,4],[697,13,754,11,"projectile"],[697,23,754,21],[698,4,755,2],[698,5,755,3],[700,4,757,2],[701,4,758,2],[701,8,758,8,"spawnTestEnemy"],[701,22,758,22],[701,25,758,26,"state"],[701,30,758,44],[701,34,758,49],[702,6,759,4,"console"],[702,13,759,11],[702,14,759,12,"log"],[702,17,759,15],[702,18,759,16],[702,83,759,81],[702,84,759,82],[704,6,761,4],[705,6,762,4],[705,10,762,10,"zoneEnemy"],[705,19,762,19],[705,22,762,22,"spawnZoneEnemy"],[705,36,762,36],[705,37,762,37],[705,38,762,38],[706,6,763,4],[706,10,763,8],[706,11,763,9,"zoneEnemy"],[706,20,763,18],[706,22,763,20],[707,8,764,6,"console"],[707,15,764,13],[707,16,764,14,"log"],[707,19,764,17],[707,20,764,18],[707,76,764,74],[707,77,764,75],[708,8,765,6],[709,8,766,6,"spawnBasicTestEnemy"],[709,27,766,25],[709,28,766,26,"state"],[709,33,766,31],[709,34,766,32],[710,8,767,6],[711,6,768,4],[712,6,770,4,"console"],[712,13,770,11],[712,14,770,12,"log"],[712,17,770,15],[712,18,770,16],[712,44,770,42,"zoneEnemy"],[712,53,770,51],[712,54,770,52,"name"],[712,58,770,56],[712,63,770,61,"zoneEnemy"],[712,72,770,70],[712,73,770,71,"typeId"],[712,79,770,77],[712,94,770,92,"currentZone"],[712,105,770,103],[712,107,770,105,"id"],[712,109,770,107],[712,119,770,117,"currentZoneLevel"],[712,135,770,133],[712,137,770,135,"level"],[712,142,770,140],[712,144,770,142],[712,145,770,143],[714,6,772,4],[715,6,773,4],[715,10,773,10,"combatEnemy"],[715,21,773,34],[715,24,773,37],[716,8,774,6,"id"],[716,10,774,8],[716,12,774,10,"zoneEnemy"],[716,21,774,19],[716,22,774,20,"id"],[716,24,774,22],[717,8,775,6,"name"],[717,12,775,10],[717,14,775,12,"zoneEnemy"],[717,23,775,21],[717,24,775,22,"name"],[717,28,775,26],[718,8,776,6,"health"],[718,14,776,12],[718,16,776,14,"zoneEnemy"],[718,25,776,23],[718,26,776,24,"hp"],[718,28,776,26],[719,8,777,6,"maxHealth"],[719,17,777,15],[719,19,777,17,"zoneEnemy"],[719,28,777,26],[719,29,777,27,"maxHP"],[719,34,777,32],[720,8,778,6,"stats"],[720,13,778,11],[720,15,778,13],[721,10,779,8,"attack"],[721,16,779,14],[721,18,779,16,"zoneEnemy"],[721,27,779,25],[721,28,779,26,"attack"],[721,34,779,32],[722,10,780,8,"defense"],[722,17,780,15],[722,19,780,17],[722,21,780,19],[723,10,780,21],[724,10,781,8,"health"],[724,16,781,14],[724,18,781,16,"zoneEnemy"],[724,27,781,25],[724,28,781,26,"hp"],[724,30,781,28],[725,10,782,8,"maxHealth"],[725,19,782,17],[725,21,782,19,"zoneEnemy"],[725,30,782,28],[725,31,782,29,"maxHP"],[725,36,782,34],[726,10,783,8,"critChance"],[726,20,783,18],[726,22,783,20],[726,23,783,21],[727,10,784,8,"critDamage"],[727,20,784,18],[727,22,784,20],[727,25,784,23],[728,10,785,8,"cooldownReduction"],[728,27,785,25],[728,29,785,27],[729,8,786,6],[729,9,786,7],[730,8,787,6,"position"],[730,16,787,14],[730,18,787,16,"zoneEnemy"],[730,27,787,25],[730,28,787,26,"position"],[730,36,787,34],[731,8,788,6,"lastDamaged"],[731,19,788,17],[731,21,788,19],[731,22,788,20],[732,8,789,6],[733,8,790,6,"zoneTypeId"],[733,18,790,16],[733,20,790,18,"zoneEnemy"],[733,29,790,27],[733,30,790,28,"typeId"],[733,36,790,34],[734,8,791,6,"zoneXP"],[734,14,791,12],[734,16,791,14,"zoneEnemy"],[734,25,791,23],[734,26,791,24,"xp"],[735,6,792,4],[735,7,792,5],[736,6,794,4,"console"],[736,13,794,11],[736,14,794,12,"log"],[736,17,794,15],[736,18,794,16],[736,42,794,40,"combatEnemy"],[736,53,794,51],[736,54,794,52,"name"],[736,58,794,56],[736,67,794,65,"combatEnemy"],[736,78,794,76],[736,79,794,77,"health"],[736,85,794,83],[736,100,794,98,"currentZone"],[736,111,794,109],[736,113,794,111,"id"],[736,115,794,113],[736,125,794,123,"currentZoneLevel"],[736,141,794,139],[736,143,794,141,"level"],[736,148,794,146],[736,150,794,148],[736,151,794,149],[737,6,795,4,"state"],[737,11,795,9],[737,12,795,10,"enemies"],[737,19,795,17],[737,20,795,18,"push"],[737,24,795,22],[737,25,795,23,"combatEnemy"],[737,36,795,34],[737,37,795,35],[738,4,796,2],[738,5,796,3],[740,4,798,2],[741,4,799,2],[741,8,799,8,"spawnBasicTestEnemy"],[741,27,799,27],[741,30,799,31,"state"],[741,35,799,49],[741,39,799,54],[742,6,800,4],[742,10,800,10,"SCREEN_WIDTH"],[742,22,800,22],[742,25,800,25],[742,28,800,28],[743,6,801,4],[743,10,801,10,"GAME_AREA_HEIGHT"],[743,26,801,26],[743,29,801,29],[743,32,801,32],[743,35,801,35],[743,38,801,38],[744,6,802,4],[744,10,802,10,"ENEMY_SIZE"],[744,20,802,20],[744,23,802,23],[744,25,802,25],[745,6,804,4],[745,10,804,10,"x"],[745,11,804,11],[745,14,804,14,"Math"],[745,18,804,18],[745,19,804,19,"random"],[745,25,804,25],[745,26,804,26],[745,27,804,27],[745,31,804,31,"SCREEN_WIDTH"],[745,43,804,43],[745,46,804,46,"ENEMY_SIZE"],[745,56,804,56],[745,59,804,59],[745,60,804,60],[745,61,804,61],[745,64,804,64,"ENEMY_SIZE"],[745,74,804,74],[746,6,805,4],[746,10,805,10,"y"],[746,11,805,11],[746,14,805,14,"Math"],[746,18,805,18],[746,19,805,19,"random"],[746,25,805,25],[746,26,805,26],[746,27,805,27],[746,31,805,31,"GAME_AREA_HEIGHT"],[746,47,805,47],[746,50,805,50,"ENEMY_SIZE"],[746,60,805,60],[746,63,805,63],[746,64,805,64],[746,65,805,65],[746,68,805,68,"ENEMY_SIZE"],[746,78,805,78],[747,6,807,4],[747,10,807,10,"enemy"],[747,15,807,28],[747,18,807,31],[748,8,808,6,"id"],[748,10,808,8],[748,12,808,10],[748,30,808,28,"Date"],[748,34,808,32],[748,35,808,33,"now"],[748,38,808,36],[748,39,808,37],[748,40,808,38],[748,44,808,42,"Math"],[748,48,808,46],[748,49,808,47,"random"],[748,55,808,53],[748,56,808,54],[748,57,808,55],[748,59,808,57],[749,8,809,6,"name"],[749,12,809,10],[749,14,809,12],[749,26,809,24,"Math"],[749,30,809,28],[749,31,809,29,"floor"],[749,36,809,34],[749,37,809,35,"Math"],[749,41,809,39],[749,42,809,40,"random"],[749,48,809,46],[749,49,809,47],[749,50,809,48],[749,53,809,51],[749,56,809,54],[749,57,809,55],[749,59,809,57],[750,8,810,6,"health"],[750,14,810,12],[750,16,810,14],[750,18,810,16],[751,8,811,6,"maxHealth"],[751,17,811,15],[751,19,811,17],[751,21,811,19],[752,8,812,6,"stats"],[752,13,812,11],[752,15,812,13],[753,10,813,8,"attack"],[753,16,813,14],[753,18,813,16],[753,20,813,18],[754,10,814,8,"defense"],[754,17,814,15],[754,19,814,17],[754,21,814,19],[755,10,815,8,"health"],[755,16,815,14],[755,18,815,16],[755,20,815,18],[756,10,816,8,"maxHealth"],[756,19,816,17],[756,21,816,19],[756,23,816,21],[757,10,817,8,"critChance"],[757,20,817,18],[757,22,817,20],[757,23,817,21],[758,10,818,8,"critDamage"],[758,20,818,18],[758,22,818,20],[758,25,818,23],[759,10,819,8,"cooldownReduction"],[759,27,819,25],[759,29,819,27],[760,8,820,6],[760,9,820,7],[761,8,821,6,"position"],[761,16,821,14],[761,18,821,16],[762,10,821,18,"x"],[762,11,821,19],[763,10,821,21,"y"],[764,8,821,23],[764,9,821,24],[765,8,822,6,"lastDamaged"],[765,19,822,17],[765,21,822,19],[766,6,823,4],[766,7,823,5],[767,6,825,4,"console"],[767,13,825,11],[767,14,825,12,"log"],[767,17,825,15],[767,18,825,16],[767,42,825,40,"enemy"],[767,47,825,45],[767,48,825,46,"name"],[767,52,825,50],[767,60,825,58,"Math"],[767,64,825,62],[767,65,825,63,"round"],[767,70,825,68],[767,71,825,69,"x"],[767,72,825,70],[767,73,825,71],[767,78,825,76,"Math"],[767,82,825,80],[767,83,825,81,"round"],[767,88,825,86],[767,89,825,87,"y"],[767,90,825,88],[767,91,825,89],[767,94,825,92],[767,95,825,93],[768,6,826,4,"state"],[768,11,826,9],[768,12,826,10,"enemies"],[768,19,826,17],[768,20,826,18,"push"],[768,24,826,22],[768,25,826,23,"enemy"],[768,30,826,28],[768,31,826,29],[769,4,827,2],[769,5,827,3],[771,4,829,2],[772,4,830,2],[772,8,830,8,"startCombat"],[772,19,830,19],[772,22,830,22,"React"],[772,27,830,27],[772,28,830,27,"default"],[772,35,830,27],[772,36,830,28,"useCallback"],[772,47,830,39],[772,48,830,40],[772,54,830,46],[773,6,831,4,"console"],[773,13,831,11],[773,14,831,12,"log"],[773,17,831,15],[773,18,831,16],[773,63,831,61],[773,64,831,62],[774,6,832,4,"setCombatState"],[774,20,832,18],[774,21,832,19,"prev"],[774,25,832,23],[774,30,832,28],[775,8,832,30],[775,11,832,33,"prev"],[775,15,832,37],[776,8,832,39,"isInCombat"],[776,18,832,49],[776,20,832,51],[777,6,832,56],[777,7,832,57],[777,8,832,58],[777,9,832,59],[779,6,834,4],[780,6,835,4,"combatEngine"],[780,25,835,16],[780,26,835,16,"combatEngine"],[780,38,835,16],[780,39,835,17,"addTickCallback"],[780,54,835,32],[780,55,835,33,"handleCombatTick"],[780,71,835,49],[780,72,835,50],[781,6,836,4,"console"],[781,13,836,11],[781,14,836,12,"log"],[781,17,836,15],[781,18,836,16],[781,62,836,60],[781,63,836,61],[783,6,838,4],[784,6,839,4,"combatEngine"],[784,25,839,16],[784,26,839,16,"combatEngine"],[784,38,839,16],[784,39,839,17,"start"],[784,44,839,22],[784,45,839,23],[784,46,839,24],[785,4,840,2],[785,5,840,3],[785,7,840,5],[785,8,840,6,"combatEngine"],[785,27,840,18],[785,28,840,18,"combatEngine"],[785,40,840,18],[785,42,840,20,"handleCombatTick"],[785,58,840,36],[785,59,840,37],[785,60,840,38],[787,4,842,2],[788,4,843,2],[788,8,843,8,"stopCombat"],[788,18,843,18],[788,21,843,21,"React"],[788,26,843,26],[788,27,843,26,"default"],[788,34,843,26],[788,35,843,27,"useCallback"],[788,46,843,38],[788,47,843,39],[788,53,843,45],[789,6,844,4,"setCombatState"],[789,20,844,18],[789,21,844,19,"prev"],[789,25,844,23],[789,30,844,28],[790,8,844,30],[790,11,844,33,"prev"],[790,15,844,37],[791,8,844,39,"isInCombat"],[791,18,844,49],[791,20,844,51],[792,6,844,57],[792,7,844,58],[792,8,844,59],[792,9,844,60],[793,6,845,4,"combatEngine"],[793,25,845,16],[793,26,845,16,"combatEngine"],[793,38,845,16],[793,39,845,17,"removeTickCallback"],[793,57,845,35],[793,58,845,36,"handleCombatTick"],[793,74,845,52],[793,75,845,53],[794,4,846,2],[794,5,846,3],[794,7,846,5],[794,8,846,6,"combatEngine"],[794,27,846,18],[794,28,846,18,"combatEngine"],[794,40,846,18],[794,42,846,20,"handleCombatTick"],[794,58,846,36],[794,59,846,37],[794,60,846,38],[796,4,848,2],[797,4,849,2],[797,8,849,8,"equipAbility"],[797,20,849,20],[797,23,849,23,"equipAbility"],[797,24,849,24,"abilityId"],[797,33,849,41],[797,35,849,43,"slotIndex"],[797,44,849,60],[797,49,849,74],[798,6,850,4],[798,13,850,11,"combatState"],[798,24,850,22],[798,25,850,23,"abilityManager"],[798,39,850,37],[798,40,850,38,"equipAbility"],[798,52,850,50],[798,53,850,51,"abilityId"],[798,62,850,60],[798,64,850,62,"slotIndex"],[798,73,850,71],[798,74,850,72],[799,4,851,2],[799,5,851,3],[800,4,853,2],[800,8,853,8,"getDeck"],[800,15,853,15],[800,18,853,18,"getDeck"],[800,19,853,18],[800,24,853,24],[801,6,854,4],[801,13,854,11,"combatState"],[801,24,854,22],[801,25,854,23,"abilityManager"],[801,39,854,37],[801,40,854,38,"getDeck"],[801,47,854,45],[801,48,854,46],[801,49,854,47],[802,4,855,2],[802,5,855,3],[803,4,857,2],[803,8,857,8,"getAvailableAbilities"],[803,29,857,29],[803,32,857,32,"getAvailableAbilities"],[803,33,857,32],[803,38,857,38],[804,6,858,4],[804,13,858,11,"combatState"],[804,24,858,22],[804,25,858,23,"abilityManager"],[804,39,858,37],[804,40,858,38,"getAvailableAbilities"],[804,61,858,59],[804,62,858,60],[804,63,858,61],[805,4,859,2],[805,5,859,3],[806,4,861,2],[806,8,861,8,"upgradeAbility"],[806,22,861,22],[806,25,861,26,"abilityId"],[806,34,861,43],[806,38,861,57],[807,6,862,4],[807,13,862,11,"combatState"],[807,24,862,22],[807,25,862,23,"abilityManager"],[807,39,862,37],[807,40,862,38,"upgradeAbility"],[807,54,862,52],[807,55,862,53,"abilityId"],[807,64,862,62],[807,65,862,63],[808,4,863,2],[808,5,863,3],[810,4,865,2],[811,4,866,2],[811,8,866,8,"clearAllEnemies"],[811,23,866,23],[811,26,866,26,"clearAllEnemies"],[811,27,866,26],[811,32,866,32],[812,6,867,4,"console"],[812,13,867,11],[812,14,867,12,"log"],[812,17,867,15],[812,18,867,16],[812,67,867,65],[812,68,867,66],[813,6,868,4,"setCombatState"],[813,20,868,18],[813,21,868,19,"prev"],[813,25,868,23],[813,30,868,28],[814,8,869,6],[814,11,869,9,"prev"],[814,15,869,13],[815,8,870,6,"enemies"],[815,15,870,13],[815,17,870,15],[816,6,871,4],[816,7,871,5],[816,8,871,6],[816,9,871,7],[817,4,872,2],[817,5,872,3],[819,4,874,2],[820,4,875,2],[820,8,875,8,"triggerLevelUpExplosion"],[820,31,875,31],[820,34,875,34,"triggerLevelUpExplosion"],[820,35,875,34],[820,40,875,40],[821,6,876,4,"console"],[821,13,876,11],[821,14,876,12,"log"],[821,17,876,15],[821,18,876,16],[821,70,876,68],[821,71,876,69],[822,6,878,4],[822,10,878,10,"explosionTime"],[822,23,878,23],[822,26,878,26,"Date"],[822,30,878,30],[822,31,878,31,"now"],[822,34,878,34],[822,35,878,35],[822,36,878,36],[823,6,879,4,"setLastExplosionTime"],[823,26,879,24],[823,27,879,25,"explosionTime"],[823,40,879,38],[823,41,879,39],[824,6,881,4,"setCombatState"],[824,20,881,18],[824,21,881,19,"prev"],[824,25,881,23],[824,29,881,27],[825,8,882,6],[826,8,883,6],[826,12,883,12,"enemyCount"],[826,22,883,22],[826,25,883,25,"prev"],[826,29,883,29],[826,30,883,30,"enemies"],[826,37,883,37],[826,38,883,38,"length"],[826,44,883,44],[827,8,884,6],[827,12,884,12,"explosionXP"],[827,23,884,23],[827,26,884,26,"enemyCount"],[827,36,884,36],[827,39,884,39],[827,42,884,42],[827,43,884,43],[827,44,884,44],[828,8,885,6],[828,12,885,12,"explosionGold"],[828,25,885,25],[828,28,885,28,"enemyCount"],[828,38,885,38],[828,41,885,41],[828,44,885,44],[828,45,885,45],[828,46,885,46],[830,8,887,6,"console"],[830,15,887,13],[830,16,887,14,"log"],[830,19,887,17],[830,20,887,18],[830,44,887,42,"enemyCount"],[830,54,887,52],[830,76,887,74,"explosionXP"],[830,87,887,85],[830,98,887,96,"explosionGold"],[830,111,887,109],[830,118,887,116],[830,119,887,117],[832,8,889,6],[833,8,890,6],[833,12,890,10,"explosionXP"],[833,23,890,21],[833,26,890,24],[833,27,890,25],[833,29,890,27],[834,10,891,8,"setTimeout"],[834,20,891,18],[834,21,891,19],[834,27,891,25],[835,12,892,10,"game"],[835,16,892,14],[835,17,892,15,"updateNinja"],[835,28,892,26],[835,29,892,28,"ninja"],[835,34,892,33],[835,39,892,39],[836,14,893,12,"experience"],[836,24,893,22],[836,26,893,24,"ninja"],[836,31,893,29],[836,32,893,30,"experience"],[836,42,893,40],[836,45,893,43,"explosionXP"],[836,56,893,54],[837,14,894,12,"gold"],[837,18,894,16],[837,20,894,18,"ninja"],[837,25,894,23],[837,26,894,24,"gold"],[837,30,894,28],[837,33,894,31,"explosionGold"],[838,12,895,10],[838,13,895,11],[838,14,895,12],[838,15,895,13],[839,10,896,8],[839,11,896,9],[839,13,896,11],[839,14,896,12],[839,15,896,13],[839,16,896,14],[839,17,896,15],[840,8,897,6],[842,8,899,6],[843,8,900,6],[844,8,901,6],[844,12,901,12,"damagedEnemies"],[844,26,901,26],[844,29,901,29,"prev"],[844,33,901,33],[844,34,901,34,"enemies"],[844,41,901,41],[844,42,901,42,"map"],[844,45,901,45],[844,46,901,46,"enemy"],[844,51,901,51],[844,56,901,56],[845,10,902,8],[845,13,902,11,"enemy"],[845,18,902,16],[846,10,903,8,"health"],[846,16,903,14],[846,18,903,16],[846,19,903,17],[847,10,903,19],[848,10,904,8,"lastDamaged"],[848,21,904,19],[848,23,904,21,"combatEngine"],[848,42,904,33],[848,43,904,33,"combatEngine"],[848,55,904,33],[848,56,904,34,"getCurrentTick"],[848,70,904,48],[848,71,904,49],[849,8,905,6],[849,9,905,7],[849,10,905,8],[849,11,905,9],[850,8,907,6],[850,15,907,13],[851,10,908,8],[851,13,908,11,"prev"],[851,17,908,15],[852,10,909,8,"enemies"],[852,17,909,15],[852,19,909,17,"damagedEnemies"],[853,8,910,6],[853,9,910,7],[854,6,911,4],[854,7,911,5],[854,8,911,6],[855,4,912,2],[855,5,912,3],[857,4,914,2],[858,4,915,2],[858,8,915,8,"spawnEnemy"],[858,18,915,18],[858,21,915,22,"position"],[858,29,915,57],[858,33,915,75],[859,6,916,4],[859,10,916,10,"SCREEN_WIDTH"],[859,22,916,22],[859,25,916,25],[859,28,916,28],[860,6,917,4],[860,10,917,10,"GAME_AREA_HEIGHT"],[860,26,917,26],[860,29,917,29],[860,32,917,32],[860,35,917,35],[860,38,917,38],[860,39,917,39],[860,40,917,40],[861,6,918,4],[861,10,918,10,"ENEMY_SIZE"],[861,20,918,20],[861,23,918,23],[861,25,918,25],[863,6,920,4],[864,6,921,4],[864,10,921,10,"x"],[864,11,921,11],[864,14,921,14,"position"],[864,22,921,22],[864,24,921,24,"x"],[864,25,921,25],[864,29,921,29,"Math"],[864,33,921,33],[864,34,921,34,"random"],[864,40,921,40],[864,41,921,41],[864,42,921,42],[864,46,921,46,"SCREEN_WIDTH"],[864,58,921,58],[864,61,921,61,"ENEMY_SIZE"],[864,71,921,71],[864,74,921,74],[864,75,921,75],[864,76,921,76],[864,79,921,79,"ENEMY_SIZE"],[864,89,921,89],[865,6,922,4],[865,10,922,10,"y"],[865,11,922,11],[865,14,922,14,"position"],[865,22,922,22],[865,24,922,24,"y"],[865,25,922,25],[865,29,922,29,"Math"],[865,33,922,33],[865,34,922,34,"random"],[865,40,922,40],[865,41,922,41],[865,42,922,42],[865,46,922,46,"GAME_AREA_HEIGHT"],[865,62,922,62],[865,65,922,65,"ENEMY_SIZE"],[865,75,922,75],[865,78,922,78],[865,79,922,79],[865,80,922,80],[865,83,922,83,"ENEMY_SIZE"],[865,93,922,93],[866,6,924,4],[866,10,924,10,"enemy"],[866,15,924,28],[866,18,924,31],[867,8,925,6,"id"],[867,10,925,8],[867,12,925,10],[867,21,925,19],[867,23,925,21,"enemyCounter"],[867,35,925,33],[867,37,925,35],[868,8,926,6,"name"],[868,12,926,10],[868,14,926,12],[868,24,926,22],[869,8,927,6,"health"],[869,14,927,12],[869,16,927,14],[869,19,927,17],[870,8,928,6,"maxHealth"],[870,17,928,15],[870,19,928,17],[870,22,928,20],[871,8,929,6,"stats"],[871,13,929,11],[871,15,929,13],[872,10,930,8,"attack"],[872,16,930,14],[872,18,930,16],[872,20,930,18],[873,10,931,8,"defense"],[873,17,931,15],[873,19,931,17],[873,21,931,19],[874,10,932,8,"health"],[874,16,932,14],[874,18,932,16],[874,21,932,19],[875,10,933,8,"maxHealth"],[875,19,933,17],[875,21,933,19],[875,24,933,22],[876,10,934,8,"critChance"],[876,20,934,18],[876,22,934,20],[876,23,934,21],[877,10,935,8,"critDamage"],[877,20,935,18],[877,22,935,20],[877,25,935,23],[878,10,936,8,"cooldownReduction"],[878,27,936,25],[878,29,936,27],[879,8,937,6],[879,9,937,7],[880,8,938,6,"position"],[880,16,938,14],[880,18,938,16],[881,10,938,18,"x"],[881,11,938,19],[882,10,938,21,"y"],[883,8,938,23],[883,9,938,24],[884,8,939,6,"lastDamaged"],[884,19,939,17],[884,21,939,19],[885,6,940,4],[885,7,940,5],[886,6,942,4,"setCombatState"],[886,20,942,18],[886,21,942,19,"prev"],[886,25,942,23],[886,30,942,28],[887,8,943,6],[887,11,943,9,"prev"],[887,15,943,13],[888,8,944,6,"enemies"],[888,15,944,13],[888,17,944,15],[888,18,944,16],[888,21,944,19,"prev"],[888,25,944,23],[888,26,944,24,"enemies"],[888,33,944,31],[888,35,944,33,"enemy"],[888,40,944,38],[889,6,945,4],[889,7,945,5],[889,8,945,6],[889,9,945,7],[890,6,947,4],[890,13,947,11,"enemy"],[890,18,947,16],[891,4,948,2],[891,5,948,3],[893,4,950,2],[894,4,951,2],[894,8,951,8,"spawnBoss"],[894,17,951,17],[894,20,951,21,"bossEnemy"],[894,29,951,43],[894,33,951,48],[895,6,952,4,"console"],[895,13,952,11],[895,14,952,12,"log"],[895,17,952,15],[895,18,952,16],[895,39,952,37,"bossEnemy"],[895,48,952,46],[895,49,952,47,"name"],[895,53,952,51],[895,90,952,88],[895,91,952,89],[896,6,953,4,"setCombatState"],[896,20,953,18],[896,21,953,19,"prev"],[896,25,953,23],[896,30,953,28],[897,8,954,6],[897,11,954,9,"prev"],[897,15,954,13],[898,8,955,6,"enemies"],[898,15,955,13],[898,17,955,15],[898,18,955,16,"bossEnemy"],[898,27,955,25],[898,28,955,26],[898,29,955,27],[899,6,956,4],[899,7,956,5],[899,8,956,6],[899,9,956,7],[900,4,957,2],[900,5,957,3],[902,4,959,2],[903,4,960,2],[903,8,960,8,"clearSpecificEnemy"],[903,26,960,26],[903,29,960,30,"enemyId"],[903,36,960,45],[903,40,960,50],[904,6,961,4,"setCombatState"],[904,20,961,18],[904,21,961,19,"prev"],[904,25,961,23],[904,30,961,28],[905,8,962,6],[905,11,962,9,"prev"],[905,15,962,13],[906,8,963,6,"enemies"],[906,15,963,13],[906,17,963,15,"prev"],[906,21,963,19],[906,22,963,20,"enemies"],[906,29,963,27],[906,30,963,28,"filter"],[906,36,963,34],[906,37,963,35,"enemy"],[906,42,963,40],[906,46,963,44,"enemy"],[906,51,963,49],[906,52,963,50,"id"],[906,54,963,52],[906,59,963,57,"enemyId"],[906,66,963,64],[907,6,964,4],[907,7,964,5],[907,8,964,6],[907,9,964,7],[908,4,965,2],[908,5,965,3],[910,4,967,2],[911,4,968,2],[911,8,968,8,"useAbilityManually"],[911,26,968,26],[911,29,968,26,"_s3"],[911,32,968,26],[911,33,968,29],[911,37,968,29,"useCallback"],[911,43,968,40],[911,44,968,40,"useCallback"],[911,55,968,40],[911,57,968,40,"_s3"],[911,60,968,40],[911,61,968,42,"slotIndex"],[911,70,968,59],[911,74,968,73],[912,6,968,73,"_s3"],[912,9,968,73],[913,6,969,4,"console"],[913,13,969,11],[913,14,969,12,"log"],[913,17,969,15],[913,18,969,16],[913,64,969,62,"slotIndex"],[913,73,969,71],[913,82,969,80],[913,83,969,81],[914,6,970,4,"console"],[914,13,970,11],[914,14,970,12,"log"],[914,17,970,15],[914,18,970,16],[914,65,970,63,"slotIndex"],[914,74,970,72],[914,76,970,74],[914,77,970,75],[915,6,971,4,"console"],[915,13,971,11],[915,14,971,12,"log"],[915,17,971,15],[915,18,971,16],[915,53,971,51,"slotIndex"],[915,62,971,60],[915,64,971,62],[915,65,971,63],[917,6,973,4],[918,6,974,4],[918,10,974,8],[918,11,974,9,"game"],[918,15,974,13],[918,16,974,14,"gameState"],[918,25,974,23],[918,26,974,24,"isAlive"],[918,33,974,31],[918,35,974,33],[919,8,975,6,"console"],[919,15,975,13],[919,16,975,14,"log"],[919,19,975,17],[919,20,975,18],[919,70,975,68],[919,71,975,69],[920,8,976,6],[920,15,976,13],[920,20,976,18],[921,6,977,4],[923,6,979,4],[924,6,980,4],[924,10,980,10,"isReady"],[924,17,980,17],[924,20,980,20,"combatState"],[924,31,980,31],[924,32,980,32,"abilityManager"],[924,46,980,46],[924,47,980,47,"isAbilityReady"],[924,61,980,61],[924,62,980,62,"slotIndex"],[924,71,980,71],[924,72,980,72],[925,6,981,4],[925,10,981,8],[925,11,981,9,"isReady"],[925,18,981,16],[925,20,981,18],[926,8,982,6,"console"],[926,15,982,13],[926,16,982,14,"log"],[926,19,982,17],[926,20,982,18],[926,41,982,39,"slotIndex"],[926,50,982,48],[926,85,982,83],[926,86,982,84],[927,8,983,6],[927,15,983,13],[927,20,983,18],[928,6,984,4],[930,6,986,4],[931,6,987,4],[931,10,987,8,"combatState"],[931,21,987,19],[931,22,987,20,"enemies"],[931,29,987,27],[931,30,987,28,"length"],[931,36,987,34],[931,41,987,39],[931,42,987,40],[931,44,987,42],[932,8,988,6,"console"],[932,15,988,13],[932,16,988,14,"log"],[932,19,988,17],[932,20,988,18],[932,69,988,67],[932,70,988,68],[933,8,989,6],[933,15,989,13],[933,20,989,18],[934,6,990,4],[936,6,992,4],[937,6,993,4],[937,10,993,10,"currentTick"],[937,21,993,21],[937,24,993,24,"combatEngine"],[937,43,993,36],[937,44,993,36,"combatEngine"],[937,56,993,36],[937,57,993,37,"getCurrentTick"],[937,71,993,51],[937,72,993,52],[937,73,993,53],[938,6,994,4],[938,10,994,10,"success"],[938,17,994,17],[938,20,994,20,"combatState"],[938,31,994,31],[938,32,994,32,"abilityManager"],[938,46,994,46],[938,47,994,47,"useAbility"],[938,57,994,57],[938,58,994,58,"slotIndex"],[938,67,994,67],[938,69,994,69,"currentTick"],[938,80,994,80],[938,81,994,81],[939,6,996,4],[939,10,996,8,"success"],[939,17,996,15],[939,19,996,17],[940,8,997,6],[941,8,998,6,"setCombatState"],[941,22,998,20],[941,23,998,21,"prev"],[941,27,998,25],[941,31,998,29],[942,10,999,8],[942,14,999,14,"newState"],[942,22,999,22],[942,25,999,25],[943,12,999,27],[943,15,999,30,"prev"],[944,10,999,35],[944,11,999,36],[945,10,1000,8,"castAbility"],[945,21,1000,19],[945,22,1000,20,"newState"],[945,30,1000,28],[945,32,1000,30,"slotIndex"],[945,41,1000,39],[945,42,1000,40],[946,10,1001,8],[946,17,1001,15,"newState"],[946,25,1001,23],[947,8,1002,6],[947,9,1002,7],[947,10,1002,8],[948,8,1004,6,"console"],[948,15,1004,13],[948,16,1004,14,"log"],[948,19,1004,17],[948,20,1004,18],[948,65,1004,63,"slotIndex"],[948,74,1004,72],[948,76,1004,74],[948,77,1004,75],[949,8,1005,6],[949,15,1005,13],[949,19,1005,17],[950,6,1006,4],[950,7,1006,5],[950,13,1006,11],[951,8,1007,6,"console"],[951,15,1007,13],[951,16,1007,14,"log"],[951,19,1007,17],[951,20,1007,18],[951,61,1007,59,"slotIndex"],[951,70,1007,68],[951,72,1007,70],[951,73,1007,71],[952,8,1008,6],[952,15,1008,13],[952,20,1008,18],[953,6,1009,4],[954,4,1010,2],[954,5,1010,3],[954,46,1010,5],[954,47,1010,6,"combatState"],[954,58,1010,17],[954,59,1010,18,"abilityManager"],[954,73,1010,32],[954,75,1010,34,"combatState"],[954,86,1010,45],[954,87,1010,46,"enemies"],[954,94,1010,53],[954,95,1010,54],[954,96,1010,55],[955,4,1011,2],[955,8,1011,2,"useEffect"],[955,14,1011,11],[955,15,1011,11,"useEffect"],[955,24,1011,11],[955,26,1011,12],[955,32,1011,18],[956,6,1012,4,"combatEngine"],[956,25,1012,16],[956,26,1012,16,"combatEngine"],[956,38,1012,16],[956,39,1012,17,"start"],[956,44,1012,22],[956,45,1012,23],[956,46,1012,24],[958,6,1014,4],[959,6,1015,4],[960,6,1016,4,"console"],[960,13,1016,11],[960,14,1016,12,"log"],[960,17,1016,15],[960,18,1016,16],[960,97,1016,95],[960,98,1016,96],[961,6,1018,4],[961,13,1018,11],[961,19,1018,17],[962,8,1019,6,"combatEngine"],[962,27,1019,18],[962,28,1019,18,"combatEngine"],[962,40,1019,18],[962,41,1019,19,"stop"],[962,45,1019,23],[962,46,1019,24],[962,47,1019,25],[963,6,1020,4],[963,7,1020,5],[964,4,1021,2],[964,5,1021,3],[964,7,1021,5],[964,9,1021,7],[964,10,1021,8],[966,4,1023,2],[967,4,1024,2],[967,8,1024,2,"useEffect"],[967,14,1024,11],[967,15,1024,11,"useEffect"],[967,24,1024,11],[967,26,1024,12],[967,32,1024,18],[968,6,1025,4],[968,10,1025,10,"processProjectileImpacts"],[968,34,1025,34],[968,37,1025,37,"processProjectileImpacts"],[968,38,1025,37],[968,43,1025,43],[969,8,1026,6,"setProjectiles"],[969,22,1026,20],[969,23,1026,21,"currentProjectiles"],[969,41,1026,39],[969,45,1026,43],[970,10,1027,8],[970,17,1027,15,"currentProjectiles"],[970,35,1027,33],[970,36,1027,34,"map"],[970,39,1027,37],[970,40,1027,38,"projectile"],[970,50,1027,48],[970,54,1027,52],[971,12,1028,10],[971,16,1028,14],[971,17,1028,15,"projectile"],[971,27,1028,25],[971,29,1028,27],[971,36,1028,34],[971,40,1028,38],[973,12,1030,10],[974,12,1031,10],[974,16,1031,16,"currentTime"],[974,27,1031,27],[974,30,1031,30,"Date"],[974,34,1031,34],[974,35,1031,35,"now"],[974,38,1031,38],[974,39,1031,39],[974,40,1031,40],[975,12,1032,10],[975,16,1032,16,"startTime"],[975,25,1032,25],[975,28,1032,28,"projectile"],[975,38,1032,38],[975,39,1032,39,"startTime"],[975,48,1032,48],[975,52,1032,52,"currentTime"],[975,63,1032,63],[976,12,1033,10],[976,16,1033,16,"elapsedTime"],[976,27,1033,27],[976,30,1033,30,"currentTime"],[976,41,1033,41],[976,44,1033,44,"startTime"],[976,53,1033,53],[977,12,1034,10],[977,16,1034,16,"progress"],[977,24,1034,24],[977,27,1034,27,"Math"],[977,31,1034,31],[977,32,1034,32,"min"],[977,35,1034,35],[977,36,1034,36,"elapsedTime"],[977,47,1034,47],[977,51,1034,51,"projectile"],[977,61,1034,61],[977,62,1034,62,"duration"],[977,70,1034,70],[977,74,1034,74],[977,77,1034,77],[977,78,1034,78],[977,80,1034,80],[977,81,1034,81],[977,82,1034,82],[979,12,1036,10],[980,12,1037,10],[980,16,1037,14,"progress"],[980,24,1037,22],[980,28,1037,26],[980,29,1037,27],[980,33,1037,31],[980,34,1037,32,"projectile"],[980,44,1037,42],[980,45,1037,43,"hasHit"],[980,51,1037,49],[980,53,1037,51],[981,14,1038,12,"projectile"],[981,24,1038,22],[981,25,1038,23,"hasHit"],[981,31,1038,29],[981,34,1038,32],[981,38,1038,36],[982,14,1040,12,"setCombatState"],[982,28,1040,26],[982,29,1040,27,"prev"],[982,33,1040,31],[982,37,1040,35],[983,16,1041,14],[983,20,1041,20,"newState"],[983,28,1041,28],[983,31,1041,31],[984,18,1041,33],[984,21,1041,36,"prev"],[985,16,1041,41],[985,17,1041,42],[986,16,1043,14],[986,20,1043,18,"projectile"],[986,30,1043,28],[986,31,1043,29,"isAOE"],[986,36,1043,34],[986,40,1043,38,"projectile"],[986,50,1043,48],[986,51,1043,49,"aoeRadius"],[986,60,1043,58],[986,64,1043,62,"projectile"],[986,74,1043,72],[986,75,1043,73,"aoeRadius"],[986,84,1043,82],[986,87,1043,85],[986,88,1043,86],[986,90,1043,88],[987,18,1044,16],[988,18,1045,16,"console"],[988,25,1045,23],[988,26,1045,24,"log"],[988,29,1045,27],[988,30,1045,28],[988,59,1045,57,"projectile"],[988,69,1045,67],[988,70,1045,68,"abilityName"],[988,81,1045,79],[988,97,1045,95,"projectile"],[988,107,1045,105],[988,108,1045,106,"aoeRadius"],[988,117,1045,115],[988,119,1045,117],[988,120,1045,118],[989,18,1047,16],[989,22,1047,22,"impactX"],[989,29,1047,29],[989,32,1047,32,"projectile"],[989,42,1047,42],[989,43,1047,43,"targetX"],[989,50,1047,50],[990,18,1048,16],[990,22,1048,22,"impactY"],[990,29,1048,29],[990,32,1048,32,"projectile"],[990,42,1048,42],[990,43,1048,43,"targetY"],[990,50,1048,50],[991,18,1049,16],[991,22,1049,22,"enemiesKilled"],[991,35,1049,50],[991,38,1049,53],[991,40,1049,55],[993,18,1051,16],[994,18,1052,16,"newState"],[994,26,1052,24],[994,27,1052,25,"enemies"],[994,34,1052,32],[994,37,1052,35,"newState"],[994,45,1052,43],[994,46,1052,44,"enemies"],[994,53,1052,51],[994,54,1052,52,"map"],[994,57,1052,55],[994,58,1052,56,"enemy"],[994,63,1052,61],[994,67,1052,65],[995,20,1053,18],[995,24,1053,22,"enemy"],[995,29,1053,27],[995,30,1053,28,"health"],[995,36,1053,34],[995,40,1053,38],[995,41,1053,39],[995,45,1053,43,"enemy"],[995,50,1053,48],[995,51,1053,49,"markedForDeath"],[995,65,1053,63],[995,67,1053,65],[995,74,1053,72,"enemy"],[995,79,1053,77],[996,20,1055,18],[996,24,1055,24,"enemyX"],[996,30,1055,30],[996,33,1055,33,"enemy"],[996,38,1055,38],[996,39,1055,39,"position"],[996,47,1055,47],[996,48,1055,48,"x"],[996,49,1055,49],[996,52,1055,52],[996,56,1055,56],[996,57,1055,57],[996,58,1055,58],[997,20,1056,18],[997,24,1056,24,"enemyY"],[997,30,1056,30],[997,33,1056,33,"enemy"],[997,38,1056,38],[997,39,1056,39,"position"],[997,47,1056,47],[997,48,1056,48,"y"],[997,49,1056,49],[997,52,1056,52],[997,56,1056,56],[998,20,1057,18],[998,24,1057,24,"distance"],[998,32,1057,32],[998,35,1057,35,"Math"],[998,39,1057,39],[998,40,1057,40,"sqrt"],[998,44,1057,44],[998,45,1057,45,"Math"],[998,49,1057,49],[998,50,1057,50,"pow"],[998,53,1057,53],[998,54,1057,54,"enemyX"],[998,60,1057,60],[998,63,1057,63,"impactX"],[998,70,1057,70],[998,72,1057,72],[998,73,1057,73],[998,74,1057,74],[998,77,1057,77,"Math"],[998,81,1057,81],[998,82,1057,82,"pow"],[998,85,1057,85],[998,86,1057,86,"enemyY"],[998,92,1057,92],[998,95,1057,95,"impactY"],[998,102,1057,102],[998,104,1057,104],[998,105,1057,105],[998,106,1057,106],[998,107,1057,107],[999,20,1059,18,"console"],[999,27,1059,25],[999,28,1059,26,"log"],[999,31,1059,29],[999,32,1059,30],[999,58,1059,56,"enemy"],[999,63,1059,61],[999,64,1059,62,"name"],[999,68,1059,66],[999,76,1059,74,"enemyX"],[999,82,1059,80],[999,87,1059,85,"enemyY"],[999,93,1059,91],[999,109,1059,107,"impactX"],[999,116,1059,114],[999,121,1059,119,"impactY"],[999,128,1059,126],[999,135,1059,133,"distance"],[999,143,1059,141],[999,144,1059,142,"toFixed"],[999,151,1059,149],[999,152,1059,150],[999,153,1059,151],[999,154,1059,152],[999,169,1059,167,"projectile"],[999,179,1059,177],[999,180,1059,178,"aoeRadius"],[999,189,1059,187],[999,194,1059,192],[999,195,1059,193],[1000,20,1061,18],[1000,24,1061,22,"distance"],[1000,32,1061,30],[1000,36,1061,34,"projectile"],[1000,46,1061,44],[1000,47,1061,45,"aoeRadius"],[1000,56,1061,54],[1000,58,1061,56],[1001,22,1062,20],[1002,22,1063,20],[1002,26,1063,26,"newHealth"],[1002,35,1063,35],[1002,38,1063,38,"Math"],[1002,42,1063,42],[1002,43,1063,43,"max"],[1002,46,1063,46],[1002,47,1063,47],[1002,48,1063,48],[1002,50,1063,50,"enemy"],[1002,55,1063,55],[1002,56,1063,56,"health"],[1002,62,1063,62],[1002,65,1063,65,"projectile"],[1002,75,1063,75],[1002,76,1063,76,"damage"],[1002,82,1063,82],[1002,83,1063,83],[1003,22,1065,20,"console"],[1003,29,1065,27],[1003,30,1065,28,"log"],[1003,33,1065,31],[1003,34,1065,32],[1003,52,1065,50,"enemy"],[1003,57,1065,55],[1003,58,1065,56,"name"],[1003,62,1065,60],[1003,74,1065,72,"projectile"],[1003,84,1065,82],[1003,85,1065,83,"damage"],[1003,91,1065,89],[1003,103,1065,101,"enemy"],[1003,108,1065,106],[1003,109,1065,107,"health"],[1003,115,1065,113],[1003,122,1065,120,"newHealth"],[1003,131,1065,129],[1003,134,1065,132],[1003,135,1065,133],[1005,22,1067,20],[1006,22,1068,20],[1006,26,1068,24,"newHealth"],[1006,35,1068,33],[1006,39,1068,37],[1006,40,1068,38],[1006,44,1068,42,"enemy"],[1006,49,1068,47],[1006,50,1068,48,"health"],[1006,56,1068,54],[1006,59,1068,57],[1006,60,1068,58],[1006,62,1068,60],[1007,24,1069,22,"console"],[1007,31,1069,29],[1007,32,1069,30,"log"],[1007,35,1069,33],[1007,36,1069,34],[1007,52,1069,50,"enemy"],[1007,57,1069,55],[1007,58,1069,56,"name"],[1007,62,1069,60],[1007,76,1069,74,"projectile"],[1007,86,1069,84],[1007,87,1069,85,"abilityName"],[1007,98,1069,96],[1007,101,1069,99],[1007,102,1069,100],[1008,24,1070,22,"enemiesKilled"],[1008,37,1070,35],[1008,38,1070,36,"push"],[1008,42,1070,40],[1008,43,1070,41,"enemy"],[1008,48,1070,46],[1008,49,1070,47],[1008,50,1070,48],[1008,51,1070,49],[1010,24,1072,22],[1010,31,1072,29],[1011,26,1073,24],[1011,29,1073,27,"enemy"],[1011,34,1073,32],[1012,26,1074,24,"health"],[1012,32,1074,30],[1012,34,1074,32],[1012,35,1074,33],[1013,26,1075,24,"markedForDeath"],[1013,40,1075,38],[1013,42,1075,40],[1013,46,1075,44],[1014,26,1076,24,"lastDamaged"],[1014,37,1076,35],[1014,39,1076,37,"combatEngine"],[1014,58,1076,49],[1014,59,1076,49,"combatEngine"],[1014,71,1076,49],[1014,72,1076,50,"getCurrentTick"],[1014,86,1076,64],[1014,87,1076,65],[1015,24,1077,22],[1015,25,1077,23],[1016,22,1078,20],[1016,23,1078,21],[1016,29,1078,27],[1017,24,1079,22],[1017,31,1079,29],[1018,26,1080,24],[1018,29,1080,27,"enemy"],[1018,34,1080,32],[1019,26,1081,24,"health"],[1019,32,1081,30],[1019,34,1081,32,"newHealth"],[1019,43,1081,41],[1020,26,1082,24,"lastDamaged"],[1020,37,1082,35],[1020,39,1082,37,"combatEngine"],[1020,58,1082,49],[1020,59,1082,49,"combatEngine"],[1020,71,1082,49],[1020,72,1082,50,"getCurrentTick"],[1020,86,1082,64],[1020,87,1082,65],[1021,24,1083,22],[1021,25,1083,23],[1022,22,1084,20],[1023,20,1085,18],[1024,20,1087,18],[1024,27,1087,25,"enemy"],[1024,32,1087,30],[1024,33,1087,31],[1024,34,1087,32],[1025,18,1088,16],[1025,19,1088,17],[1025,20,1088,18],[1027,18,1090,16],[1028,18,1091,16],[1028,22,1091,20,"enemiesKilled"],[1028,35,1091,33],[1028,36,1091,34,"length"],[1028,42,1091,40],[1028,45,1091,43],[1028,46,1091,44],[1028,48,1091,46],[1029,20,1092,18,"console"],[1029,27,1092,25],[1029,28,1092,26,"log"],[1029,31,1092,29],[1029,32,1092,30],[1029,52,1092,50,"enemiesKilled"],[1029,65,1092,63],[1029,66,1092,64,"length"],[1029,72,1092,70],[1029,94,1092,92,"projectile"],[1029,104,1092,102],[1029,105,1092,103,"abilityName"],[1029,116,1092,114],[1029,118,1092,116],[1029,119,1092,117],[1030,20,1093,18,"setTimeout"],[1030,30,1093,28],[1030,31,1093,29],[1030,37,1093,35],[1031,22,1094,20,"enemiesKilled"],[1031,35,1094,33],[1031,36,1094,34,"forEach"],[1031,43,1094,41],[1031,44,1094,42,"enemy"],[1031,49,1094,47],[1031,53,1094,51,"handleEnemyKill"],[1031,68,1094,66],[1031,69,1094,67,"enemy"],[1031,74,1094,72],[1031,75,1094,73],[1031,76,1094,74],[1032,20,1095,18],[1032,21,1095,19],[1032,23,1095,21],[1032,24,1095,22],[1032,25,1095,23],[1033,18,1096,16],[1034,16,1098,14],[1034,17,1098,15],[1034,23,1098,21],[1035,18,1099,16],[1036,18,1100,16],[1036,22,1100,22,"enemyIndex"],[1036,32,1100,32],[1036,35,1100,35,"newState"],[1036,43,1100,43],[1036,44,1100,44,"enemies"],[1036,51,1100,51],[1036,52,1100,52,"findIndex"],[1036,61,1100,61],[1036,62,1100,62,"e"],[1036,63,1100,63],[1036,67,1100,67,"e"],[1036,68,1100,68],[1036,69,1100,69,"id"],[1036,71,1100,71],[1036,76,1100,76,"projectile"],[1036,86,1100,86],[1036,87,1100,87,"targetEnemyId"],[1036,100,1100,100],[1036,101,1100,101],[1037,18,1102,16],[1037,22,1102,20,"enemyIndex"],[1037,32,1102,30],[1037,36,1102,34],[1037,37,1102,35],[1037,41,1102,39,"newState"],[1037,49,1102,47],[1037,50,1102,48,"enemies"],[1037,57,1102,55],[1037,58,1102,56,"enemyIndex"],[1037,68,1102,66],[1037,69,1102,67],[1037,70,1102,68,"health"],[1037,76,1102,74],[1037,79,1102,77],[1037,80,1102,78],[1037,84,1102,82],[1037,85,1102,83,"newState"],[1037,93,1102,91],[1037,94,1102,92,"enemies"],[1037,101,1102,99],[1037,102,1102,100,"enemyIndex"],[1037,112,1102,110],[1037,113,1102,111],[1037,114,1102,112,"markedForDeath"],[1037,128,1102,126],[1037,130,1102,128],[1038,20,1103,18,"newState"],[1038,28,1103,26],[1038,29,1103,27,"enemies"],[1038,36,1103,34],[1038,39,1103,37],[1038,40,1103,38],[1038,43,1103,41,"newState"],[1038,51,1103,49],[1038,52,1103,50,"enemies"],[1038,59,1103,57],[1038,60,1103,58],[1039,20,1104,18],[1039,24,1104,24,"enemy"],[1039,29,1104,29],[1039,32,1104,32,"newState"],[1039,40,1104,40],[1039,41,1104,41,"enemies"],[1039,48,1104,48],[1039,49,1104,49,"enemyIndex"],[1039,59,1104,59],[1039,60,1104,60],[1040,20,1105,18],[1040,24,1105,24,"newHealth"],[1040,33,1105,33],[1040,36,1105,36,"Math"],[1040,40,1105,40],[1040,41,1105,41,"max"],[1040,44,1105,44],[1040,45,1105,45],[1040,46,1105,46],[1040,48,1105,48,"enemy"],[1040,53,1105,53],[1040,54,1105,54,"health"],[1040,60,1105,60],[1040,63,1105,63,"projectile"],[1040,73,1105,73],[1040,74,1105,74,"damage"],[1040,80,1105,80],[1040,81,1105,81],[1041,20,1107,18,"newState"],[1041,28,1107,26],[1041,29,1107,27,"enemies"],[1041,36,1107,34],[1041,37,1107,35,"enemyIndex"],[1041,47,1107,45],[1041,48,1107,46],[1041,51,1107,49],[1042,22,1108,20],[1042,25,1108,23,"enemy"],[1042,30,1108,28],[1043,22,1109,20,"health"],[1043,28,1109,26],[1043,30,1109,28,"newHealth"],[1043,39,1109,37],[1044,22,1110,20,"lastDamaged"],[1044,33,1110,31],[1044,35,1110,33,"combatEngine"],[1044,54,1110,45],[1044,55,1110,45,"combatEngine"],[1044,67,1110,45],[1044,68,1110,46,"getCurrentTick"],[1044,82,1110,60],[1044,83,1110,61],[1045,20,1111,18],[1045,21,1111,19],[1046,20,1113,18,"console"],[1046,27,1113,25],[1046,28,1113,26,"log"],[1046,31,1113,29],[1046,32,1113,30],[1046,60,1113,58,"enemy"],[1046,65,1113,63],[1046,66,1113,64,"name"],[1046,70,1113,68],[1046,82,1113,80,"newHealth"],[1046,91,1113,89],[1046,95,1113,93,"enemy"],[1046,100,1113,98],[1046,101,1113,99,"maxHealth"],[1046,110,1113,108],[1046,112,1113,110],[1046,113,1113,111],[1048,20,1115,18],[1049,20,1116,18],[1049,24,1116,22,"newHealth"],[1049,33,1116,31],[1049,37,1116,35],[1049,38,1116,36],[1049,42,1116,40,"enemy"],[1049,47,1116,45],[1049,48,1116,46,"health"],[1049,54,1116,52],[1049,57,1116,55],[1049,58,1116,56],[1049,60,1116,58],[1050,22,1117,20,"console"],[1050,29,1117,27],[1050,30,1117,28,"log"],[1050,33,1117,31],[1050,34,1117,32],[1050,60,1117,58,"enemy"],[1050,65,1117,63],[1050,66,1117,64,"name"],[1050,70,1117,68],[1050,84,1117,82,"projectile"],[1050,94,1117,92],[1050,95,1117,93,"abilityName"],[1050,106,1117,104],[1050,109,1117,107],[1050,110,1117,108],[1052,22,1119,20],[1053,22,1120,20,"newState"],[1053,30,1120,28],[1053,31,1120,29,"enemies"],[1053,38,1120,36],[1053,39,1120,37,"enemyIndex"],[1053,49,1120,47],[1053,50,1120,48],[1053,53,1120,51],[1054,24,1121,22],[1054,27,1121,25,"newState"],[1054,35,1121,33],[1054,36,1121,34,"enemies"],[1054,43,1121,41],[1054,44,1121,42,"enemyIndex"],[1054,54,1121,52],[1054,55,1121,53],[1055,24,1122,22,"health"],[1055,30,1122,28],[1055,32,1122,30],[1055,33,1122,31],[1056,24,1123,22,"markedForDeath"],[1056,38,1123,36],[1056,40,1123,38],[1057,22,1124,20],[1057,23,1124,21],[1059,22,1126,20],[1060,22,1127,20,"setTimeout"],[1060,32,1127,30],[1060,33,1127,31],[1060,39,1127,37,"handleEnemyKill"],[1060,54,1127,52],[1060,55,1127,53,"enemy"],[1060,60,1127,58],[1060,61,1127,59],[1060,63,1127,61],[1060,64,1127,62],[1060,65,1127,63],[1061,20,1128,18],[1062,18,1129,16],[1063,16,1130,14],[1064,16,1132,14],[1064,23,1132,21,"newState"],[1064,31,1132,29],[1065,14,1133,12],[1065,15,1133,13],[1065,16,1133,14],[1066,12,1134,10],[1068,12,1136,10],[1069,12,1137,10],[1069,16,1137,14,"progress"],[1069,24,1137,22],[1069,28,1137,26],[1069,31,1137,29],[1069,33,1137,31],[1070,14,1138,12],[1070,21,1138,19],[1070,25,1138,23],[1071,12,1139,10],[1072,12,1141,10],[1072,19,1141,17,"projectile"],[1072,29,1141,27],[1073,10,1142,8],[1073,11,1142,9],[1073,12,1142,10],[1073,13,1142,11,"filter"],[1073,19,1142,17],[1073,20,1142,18,"Boolean"],[1073,27,1142,25],[1073,28,1142,26],[1074,8,1143,6],[1074,9,1143,7],[1074,10,1143,8],[1075,6,1144,4],[1075,7,1144,5],[1077,6,1146,4],[1078,6,1147,4],[1078,10,1147,10,"impactInterval"],[1078,24,1147,24],[1078,27,1147,27,"setInterval"],[1078,38,1147,38],[1078,39,1147,39,"processProjectileImpacts"],[1078,63,1147,63],[1078,65,1147,65],[1078,67,1147,67],[1078,68,1147,68],[1079,6,1148,4],[1079,13,1148,11],[1079,19,1148,17,"clearInterval"],[1079,32,1148,30],[1079,33,1148,31,"impactInterval"],[1079,47,1148,45],[1079,48,1148,46],[1080,4,1149,2],[1080,5,1149,3],[1080,7,1149,5],[1080,8,1149,6,"handleEnemyKill"],[1080,23,1149,21],[1080,24,1149,22],[1080,25,1149,23],[1082,4,1151,2],[1083,4,1152,2],[1083,8,1152,8,"saveAbilityData"],[1083,23,1152,23],[1083,26,1152,26],[1083,30,1152,26,"useCallback"],[1083,36,1152,37],[1083,37,1152,37,"useCallback"],[1083,48,1152,37],[1083,50,1152,38],[1083,56,1152,44],[1084,6,1153,4],[1084,10,1153,8,"combatState"],[1084,21,1153,19],[1084,22,1153,20,"abilityManager"],[1084,36,1153,34],[1084,38,1153,36],[1085,8,1154,6],[1085,12,1154,12,"abilityData"],[1085,23,1154,23],[1085,26,1154,26,"combatState"],[1085,37,1154,37],[1085,38,1154,38,"abilityManager"],[1085,52,1154,52],[1085,53,1154,53,"getSaveData"],[1085,64,1154,64],[1085,65,1154,65],[1085,66,1154,66],[1086,8,1155,6,"console"],[1086,15,1155,13],[1086,16,1155,14,"log"],[1086,19,1155,17],[1086,20,1155,18],[1086,70,1155,68],[1086,72,1155,70,"abilityData"],[1086,83,1155,81],[1086,84,1155,82],[1087,8,1156,6,"game"],[1087,12,1156,10],[1087,13,1156,11,"updateAbilityData"],[1087,30,1156,28],[1087,31,1156,29,"abilityData"],[1087,42,1156,40],[1087,43,1156,41],[1088,6,1157,4],[1089,4,1158,2],[1089,5,1158,3],[1089,7,1158,5],[1089,8,1158,6,"combatState"],[1089,19,1158,17],[1089,20,1158,18,"abilityManager"],[1089,34,1158,32],[1089,36,1158,34,"game"],[1089,40,1158,38],[1089,41,1158,39,"updateAbilityData"],[1089,58,1158,56],[1089,59,1158,57],[1089,60,1158,58],[1090,4,1160,2],[1090,8,1160,8,"contextValue"],[1090,20,1160,39],[1090,23,1160,42,"React"],[1090,28,1160,47],[1090,29,1160,47,"default"],[1090,36,1160,47],[1090,37,1160,48,"useMemo"],[1090,44,1160,55],[1090,45,1160,56],[1090,52,1160,63],[1091,6,1161,4,"combatState"],[1091,17,1161,15],[1092,6,1162,4,"projectiles"],[1092,17,1162,15],[1093,6,1163,4,"startCombat"],[1093,17,1163,15],[1094,6,1164,4,"stopCombat"],[1094,16,1164,14],[1095,6,1165,4,"equipAbility"],[1095,18,1165,16],[1096,6,1166,4,"handleEnemyKill"],[1096,21,1166,19],[1097,6,1167,4,"getDeck"],[1097,13,1167,11],[1098,6,1168,4,"getAvailableAbilities"],[1098,27,1168,25],[1099,6,1169,4,"upgradeAbility"],[1099,20,1169,18],[1100,6,1170,4,"spawnEnemy"],[1100,16,1170,14],[1101,6,1171,4,"spawnBoss"],[1101,15,1171,13],[1102,6,1172,4,"clearAllEnemies"],[1102,21,1172,19],[1103,6,1173,4,"clearSpecificEnemy"],[1103,24,1173,22],[1104,6,1174,4,"triggerLevelUpExplosion"],[1104,29,1174,27],[1105,6,1175,4,"findClosestEnemy"],[1105,22,1175,20],[1106,6,1176,4,"updateNinjaPosition"],[1106,25,1176,23],[1107,6,1177,4,"setManualControlActive"],[1107,28,1177,26],[1108,6,1178,4,"lastExplosionTime"],[1108,23,1178,21],[1109,6,1179,4,"useAbilityManually"],[1109,24,1179,22],[1110,6,1179,24],[1111,6,1180,4,"saveAbilityData"],[1111,21,1180,19],[1112,6,1180,21],[1113,6,1181,4,"shadowClone"],[1113,17,1181,15],[1113,19,1181,17,"combatState"],[1113,30,1181,28],[1113,31,1181,29,"shadowClone"],[1113,42,1181,40],[1113,43,1181,42],[1114,4,1182,2],[1114,5,1182,3],[1114,6,1182,4],[1114,8,1182,6],[1115,4,1183,4],[1116,4,1184,4],[1117,4,1185,4,"combatState"],[1117,15,1185,15],[1117,17,1186,4,"projectiles"],[1117,28,1186,15],[1117,30,1187,4,"lastExplosionTime"],[1117,47,1187,21],[1118,4,1188,4],[1119,4,1189,4,"combatState"],[1119,15,1189,15],[1119,16,1189,16,"abilityManager"],[1119,30,1189,30],[1119,32,1190,4,"combatState"],[1119,43,1190,15],[1119,44,1190,16,"enemies"],[1119,51,1190,23],[1119,53,1191,4,"combatState"],[1119,64,1191,15],[1119,65,1191,16,"shadowClone"],[1119,76,1191,27],[1120,4,1191,29],[1121,4,1192,4,"useAbilityManually"],[1121,22,1192,22],[1122,4,1192,24],[1123,4,1193,4,"saveAbilityData"],[1123,19,1193,19],[1123,20,1193,21],[1124,4,1193,21],[1124,5,1194,3],[1124,6,1194,4],[1125,4,1196,2],[1125,24,1197,4],[1125,28,1197,4,"_reactJsxDevRuntime"],[1125,47,1197,4],[1125,48,1197,4,"jsxDEV"],[1125,54,1197,4],[1125,56,1197,5,"CombatContext"],[1125,69,1197,18],[1125,70,1197,19,"Provider"],[1125,78,1197,27],[1126,6,1197,28,"value"],[1126,11,1197,33],[1126,13,1197,35,"contextValue"],[1126,25,1197,48],[1127,6,1197,48,"children"],[1127,14,1197,48],[1127,16,1198,7,"children"],[1128,4,1198,15],[1129,6,1198,15,"fileName"],[1129,14,1198,15],[1129,16,1198,15,"_jsxFileName"],[1129,28,1198,15],[1130,6,1198,15,"lineNumber"],[1130,16,1198,15],[1131,6,1198,15,"columnNumber"],[1131,18,1198,15],[1132,4,1198,15],[1132,11,1199,28],[1132,12,1199,29],[1133,2,1201,0],[1133,3,1201,1],[1134,2,1201,2,"_s4"],[1134,5,1201,2],[1134,6,103,13,"CombatProvider"],[1134,20,103,27],[1135,4,103,27],[1135,12,104,15,"useGame"],[1135,24,104,22],[1135,25,104,22,"useGame"],[1135,32,104,22],[1135,34,105,77,"useZone"],[1135,46,105,84],[1135,47,105,84,"useZone"],[1135,54,105,84],[1136,2,105,84],[1137,2,105,84,"_c"],[1137,4,105,84],[1137,7,103,13,"CombatProvider"],[1137,21,103,27],[1138,2,103,27],[1138,6,103,27,"_c"],[1138,8,103,27],[1139,2,103,27,"$RefreshReg$"],[1139,14,103,27],[1139,15,103,27,"_c"],[1139,17,103,27],[1140,0,103,27],[1140,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJQ;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE2B,4BF;a+CM;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}