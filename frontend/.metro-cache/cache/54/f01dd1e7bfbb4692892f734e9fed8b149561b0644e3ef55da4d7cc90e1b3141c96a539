{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // STREAMLINED XP CALCULATION - Single efficient computation\n      var xpReward = (enemy.zoneXP || 5000) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      var goldReward = 10000 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // INSTANT REWARD - Single update call\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // ZONE PROGRESSION - Only if needed\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills\n      if (enemiesToKill.length > 0) {\n        // Calculate total rewards in one pass\n        var totalXP = 0;\n        var totalGold = 0;\n        var zoneKills = [];\n        var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n        var goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n        enemiesToKill.forEach(enemy => {\n          totalXP += (enemy.zoneXP || 5000) * xpMultiplier;\n          totalGold += 10000 * goldMultiplier;\n          if (enemy.zoneTypeId) {\n            zoneKills.push({\n              id: enemy.id,\n              typeId: enemy.zoneTypeId,\n              name: enemy.name,\n              icon: '🧌',\n              hp: 0,\n              maxHP: enemy.maxHealth,\n              attack: enemy.stats.attack,\n              xp: enemy.zoneXP || 0,\n              position: enemy.position\n            });\n          }\n        });\n\n        // Single batch update for all kills\n        game.updateNinja(prev => ({\n          experience: prev.experience + totalXP,\n          gold: prev.gold + totalGold\n        }));\n\n        // Batch zone progression\n        zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n      }\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1137,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1204,2],[27,6,1204,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1204,2],[27,42,1204,2,"require"],[27,49,1204,2],[27,50,1204,2,"_dependencyMap"],[27,64,1204,2],[28,2,1204,2],[28,6,1204,2,"_slicedToArray"],[28,20,1204,2],[28,23,1204,2,"_interopDefault"],[28,38,1204,2],[28,39,1204,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1204,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,94,0],[36,6,94,6,"CombatContext"],[36,19,94,19],[36,35,94,22],[36,39,94,22,"createContext"],[36,45,94,35],[36,46,94,35,"createContext"],[36,59,94,35],[36,61,94,67,"undefined"],[36,70,94,76],[36,71,94,77],[37,2,96,7],[37,6,96,13,"useCombat"],[37,15,96,22],[37,18,96,25,"useCombat"],[37,19,96,25],[37,24,96,50],[38,4,96,50,"_s"],[38,6,96,50],[39,4,97,2],[39,8,97,8,"context"],[39,15,97,15],[39,18,97,18],[39,22,97,18,"useContext"],[39,28,97,28],[39,29,97,28,"useContext"],[39,39,97,28],[39,41,97,29,"CombatContext"],[39,54,97,42],[39,55,97,43],[40,4,98,2],[40,8,98,6],[40,9,98,7,"context"],[40,16,98,14],[40,18,98,16],[41,6,99,4],[41,12,99,10],[41,16,99,14,"Error"],[41,21,99,19],[41,22,99,20],[41,70,99,68],[41,71,99,69],[42,4,100,2],[43,4,101,2],[43,11,101,9,"context"],[43,18,101,16],[44,2,102,0],[44,3,102,1],[45,2,102,2,"_s"],[45,4,102,2],[45,5,96,13,"useCombat"],[45,14,96,22],[46,2,104,0],[46,6,104,4,"enemyCounter"],[46,18,104,16],[46,21,104,19],[46,22,104,20],[46,23,104,21],[46,24,104,22],[48,2,106,7],[48,6,106,13,"CombatProvider"],[48,20,106,27],[48,23,106,30,"_ref"],[48,27,106,30],[48,31,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,106,73],[51,8,106,33,"children"],[51,16,106,41],[51,19,106,41,"_ref"],[51,23,106,41],[51,24,106,33,"children"],[51,32,106,41],[52,4,107,2],[52,8,107,8,"game"],[52,12,107,12],[52,15,107,15],[52,19,107,15,"useGame"],[52,31,107,22],[52,32,107,22,"useGame"],[52,39,107,22],[52,41,107,23],[52,42,107,24],[53,4,108,2],[53,8,108,2,"_useZone"],[53,16,108,2],[53,19,108,77],[53,23,108,77,"useZone"],[53,35,108,84],[53,36,108,84,"useZone"],[53,43,108,84],[53,45,108,85],[53,46,108,86],[54,6,108,10,"currentZone"],[54,17,108,21],[54,20,108,21,"_useZone"],[54,28,108,21],[54,29,108,10,"currentZone"],[54,40,108,21],[55,6,108,23,"currentZoneLevel"],[55,22,108,39],[55,25,108,39,"_useZone"],[55,33,108,39],[55,34,108,23,"currentZoneLevel"],[55,50,108,39],[56,6,108,41,"recordEnemyKill"],[56,21,108,56],[56,24,108,56,"_useZone"],[56,32,108,56],[56,33,108,41,"recordEnemyKill"],[56,48,108,56],[57,6,108,58,"spawnZoneEnemy"],[57,20,108,72],[57,23,108,72,"_useZone"],[57,31,108,72],[57,32,108,58,"spawnZoneEnemy"],[57,46,108,72],[59,4,110,2],[60,4,111,2],[60,8,111,8,"initialCombatState"],[60,26,111,39],[60,29,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,8,128,2,"_useState"],[77,17,128,2],[77,20,128,40],[77,24,128,40,"useState"],[77,30,128,48],[77,31,128,48,"useState"],[77,39,128,48],[77,41,128,62,"initialCombatState"],[77,59,128,80],[77,60,128,81],[78,6,128,81,"_useState2"],[78,16,128,81],[78,23,128,81,"_slicedToArray"],[78,37,128,81],[78,38,128,81,"default"],[78,45,128,81],[78,47,128,81,"_useState"],[78,56,128,81],[79,6,128,9,"combatState"],[79,17,128,20],[79,20,128,20,"_useState2"],[79,30,128,20],[80,6,128,22,"setCombatState"],[80,20,128,36],[80,23,128,36,"_useState2"],[80,33,128,36],[82,4,130,2],[83,4,131,2],[83,8,131,2,"useEffect"],[83,14,131,11],[83,15,131,11,"useEffect"],[83,24,131,11],[83,26,131,12],[83,32,131,18],[84,6,132,4],[84,10,132,8,"game"],[84,14,132,12],[84,15,132,13,"gameState"],[84,24,132,22],[84,25,132,23,"abilityData"],[84,36,132,34],[84,40,132,38,"combatState"],[84,51,132,49],[84,52,132,50,"abilityManager"],[84,66,132,64],[84,68,132,66],[85,8,133,6,"console"],[85,15,133,13],[85,16,133,14,"log"],[85,19,133,17],[85,20,133,18],[85,68,133,66],[85,70,133,68,"game"],[85,74,133,72],[85,75,133,73,"gameState"],[85,84,133,82],[85,85,133,83,"abilityData"],[85,96,133,94],[85,97,133,95],[86,8,134,6,"combatState"],[86,19,134,17],[86,20,134,18,"abilityManager"],[86,34,134,32],[86,35,134,33,"restoreFromSaveData"],[86,54,134,52],[86,55,134,53,"game"],[86,59,134,57],[86,60,134,58,"gameState"],[86,69,134,67],[86,70,134,68,"abilityData"],[86,81,134,79],[86,82,134,80],[88,8,136,6],[89,8,137,6,"setCombatState"],[89,22,137,20],[89,23,137,21,"prev"],[89,27,137,25],[89,32,137,30],[90,10,137,32],[90,13,137,35,"prev"],[91,8,137,40],[91,9,137,41],[91,10,137,42],[91,11,137,43],[92,6,138,4],[93,4,139,2],[93,5,139,3],[93,7,139,5],[93,8,139,6,"game"],[93,12,139,10],[93,13,139,11,"gameState"],[93,22,139,20],[93,23,139,21,"abilityData"],[93,34,139,32],[93,36,139,34,"combatState"],[93,47,139,45],[93,48,139,46,"abilityManager"],[93,62,139,60],[93,63,139,61],[93,64,139,62],[95,4,141,2],[96,4,142,2],[96,8,142,2,"useEffect"],[96,14,142,11],[96,15,142,11,"useEffect"],[96,24,142,11],[96,26,142,12],[96,32,142,18],[97,6,143,4],[97,10,143,8,"game"],[97,14,143,12],[97,15,143,13,"gameState"],[97,24,143,22],[97,25,143,23,"ninja"],[97,30,143,28],[97,32,143,30],[98,8,144,6],[98,12,144,12,"effectiveStats"],[98,26,144,26],[98,29,144,29,"game"],[98,33,144,33],[98,34,144,34,"getEffectiveStats"],[98,51,144,51],[98,52,144,52],[98,53,144,53],[99,8,146,6,"setCombatState"],[99,22,146,20],[99,23,146,21,"prev"],[99,27,146,25],[99,31,146,29],[100,10,147,8],[101,10,148,8],[101,14,148,12,"prev"],[101,18,148,16],[101,19,148,17,"playerStats"],[101,30,148,28],[101,31,148,29,"maxHealth"],[101,40,148,38],[101,45,148,43],[101,48,148,46],[101,52,148,50,"prev"],[101,56,148,54],[101,57,148,55,"playerStats"],[101,68,148,66],[101,69,148,67,"attack"],[101,75,148,73],[101,80,148,78],[101,82,148,80],[101,84,148,82],[102,12,149,10,"console"],[102,19,149,17],[102,20,149,18,"log"],[102,23,149,21],[102,24,149,22],[102,60,149,58,"effectiveStats"],[102,74,149,72],[102,75,149,73,"health"],[102,81,149,79],[102,93,149,91,"effectiveStats"],[102,107,149,105],[102,108,149,106,"attack"],[102,114,149,112],[102,127,149,125,"effectiveStats"],[102,141,149,139],[102,142,149,140,"defense"],[102,149,149,147],[102,151,149,149],[102,152,149,150],[103,12,151,10],[103,19,151,17],[104,14,152,12],[104,17,152,15,"prev"],[104,21,152,19],[105,14,153,12,"playerStats"],[105,25,153,23],[105,27,153,25],[106,16,154,14,"attack"],[106,22,154,20],[106,24,154,22,"effectiveStats"],[106,38,154,36],[106,39,154,37,"attack"],[106,45,154,43],[107,16,155,14,"defense"],[107,23,155,21],[107,25,155,23,"effectiveStats"],[107,39,155,37],[107,40,155,38,"defense"],[107,47,155,45],[108,16,156,14,"health"],[108,22,156,20],[108,24,156,22,"effectiveStats"],[108,38,156,36],[108,39,156,37,"health"],[108,45,156,43],[109,16,156,45],[110,16,157,14,"maxHealth"],[110,25,157,23],[110,27,157,25,"effectiveStats"],[110,41,157,39],[110,42,157,40,"health"],[110,48,157,46],[111,16,158,14,"critChance"],[111,26,158,24],[111,28,158,26,"effectiveStats"],[111,42,158,40],[111,43,158,41,"critChance"],[111,53,158,51],[111,57,158,55],[111,58,158,56],[112,16,159,14,"critDamage"],[112,26,159,24],[112,28,159,26,"effectiveStats"],[112,42,159,40],[112,43,159,41,"critDamage"],[112,53,159,51],[112,57,159,55],[112,60,159,58],[113,16,160,14,"cooldownReduction"],[113,33,160,31],[113,35,160,33,"effectiveStats"],[113,49,160,47],[113,50,160,48,"cooldownReduction"],[113,67,160,65],[113,71,160,69],[114,14,161,12],[115,12,162,10],[115,13,162,11],[116,10,163,8],[117,10,164,8],[117,17,164,15,"prev"],[117,21,164,19],[118,8,165,6],[118,9,165,7],[118,10,165,8],[119,6,166,4],[120,4,167,2],[120,5,167,3],[120,7,167,5],[120,8,167,6,"game"],[120,12,167,10],[120,13,167,11,"gameState"],[120,22,167,20],[120,23,167,21,"ninja"],[120,28,167,26],[120,29,167,27],[120,30,167,28],[121,4,169,2],[121,8,169,2,"_useState3"],[121,18,169,2],[121,21,169,40],[121,25,169,40,"useState"],[121,31,169,48],[121,32,169,48,"useState"],[121,40,169,48],[121,42,169,69],[121,44,169,71],[121,45,169,72],[122,6,169,72,"_useState4"],[122,16,169,72],[122,23,169,72,"_slicedToArray"],[122,37,169,72],[122,38,169,72,"default"],[122,45,169,72],[122,47,169,72,"_useState3"],[122,57,169,72],[123,6,169,9,"projectiles"],[123,17,169,20],[123,20,169,20,"_useState4"],[123,30,169,20],[124,6,169,22,"setProjectiles"],[124,20,169,36],[124,23,169,36,"_useState4"],[124,33,169,36],[125,4,170,2],[125,8,170,2,"_useState5"],[125,18,170,2],[125,21,170,52],[125,25,170,52,"useState"],[125,31,170,60],[125,32,170,60,"useState"],[125,40,170,60],[125,42,170,69],[125,43,170,70],[125,44,170,71],[126,6,170,71,"_useState6"],[126,16,170,71],[126,23,170,71,"_slicedToArray"],[126,37,170,71],[126,38,170,71,"default"],[126,45,170,71],[126,47,170,71,"_useState5"],[126,57,170,71],[127,6,170,9,"lastExplosionTime"],[127,23,170,26],[127,26,170,26,"_useState6"],[127,36,170,26],[128,6,170,28,"setLastExplosionTime"],[128,26,170,48],[128,29,170,48,"_useState6"],[128,39,170,48],[129,4,171,2],[130,4,172,2],[132,4,174,2],[133,4,175,2],[133,8,175,8,"handleEnemyKill"],[133,23,175,23],[133,26,175,26],[133,30,175,26,"useCallback"],[133,36,175,37],[133,37,175,37,"useCallback"],[133,48,175,37],[133,50,175,39,"enemy"],[133,55,175,57],[133,59,175,62],[134,6,176,4],[135,6,177,4],[135,10,177,10,"xpReward"],[135,18,177,18],[135,21,177,21],[135,22,177,22,"enemy"],[135,27,177,27],[135,28,177,28,"zoneXP"],[135,34,177,34],[135,38,177,38],[135,42,177,42],[135,47,177,47,"game"],[135,51,177,51],[135,52,177,52,"gameState"],[135,61,177,61],[135,62,177,62,"subscriptionBenefits"],[135,82,177,82],[135,84,177,84,"xp_multiplier"],[135,97,177,97],[135,101,177,101],[135,104,177,104],[135,105,177,105],[136,6,178,4],[136,10,178,10,"goldReward"],[136,20,178,20],[136,23,178,23],[136,28,178,28],[136,32,178,32,"game"],[136,36,178,36],[136,37,178,37,"gameState"],[136,46,178,46],[136,47,178,47,"subscriptionBenefits"],[136,67,178,67],[136,69,178,69,"drop_multiplier"],[136,84,178,84],[136,88,178,88],[136,91,178,91],[136,92,178,92],[138,6,180,4],[139,6,181,4,"game"],[139,10,181,8],[139,11,181,9,"updateNinja"],[139,22,181,20],[139,23,181,21,"prev"],[139,27,181,25],[139,32,181,30],[140,8,182,6,"experience"],[140,18,182,16],[140,20,182,18,"prev"],[140,24,182,22],[140,25,182,23,"experience"],[140,35,182,33],[140,38,182,36,"xpReward"],[140,46,182,44],[141,8,183,6,"gold"],[141,12,183,10],[141,14,183,12,"prev"],[141,18,183,16],[141,19,183,17,"gold"],[141,23,183,21],[141,26,183,24,"goldReward"],[142,6,184,4],[142,7,184,5],[142,8,184,6],[142,9,184,7],[144,6,186,4],[145,6,187,4],[145,10,187,8,"enemy"],[145,15,187,13],[145,16,187,14,"zoneTypeId"],[145,26,187,24],[145,28,187,26],[146,8,188,6,"recordEnemyKill"],[146,23,188,21],[146,24,188,22],[147,10,189,8,"id"],[147,12,189,10],[147,14,189,12,"enemy"],[147,19,189,17],[147,20,189,18,"id"],[147,22,189,20],[148,10,190,8,"typeId"],[148,16,190,14],[148,18,190,16,"enemy"],[148,23,190,21],[148,24,190,22,"zoneTypeId"],[148,34,190,32],[149,10,191,8,"name"],[149,14,191,12],[149,16,191,14,"enemy"],[149,21,191,19],[149,22,191,20,"name"],[149,26,191,24],[150,10,192,8,"icon"],[150,14,192,12],[150,16,192,14],[150,20,192,18],[151,10,193,8,"hp"],[151,12,193,10],[151,14,193,12],[151,15,193,13],[152,10,194,8,"maxHP"],[152,15,194,13],[152,17,194,15,"enemy"],[152,22,194,20],[152,23,194,21,"maxHealth"],[152,32,194,30],[153,10,195,8,"attack"],[153,16,195,14],[153,18,195,16,"enemy"],[153,23,195,21],[153,24,195,22,"stats"],[153,29,195,27],[153,30,195,28,"attack"],[153,36,195,34],[154,10,196,8,"xp"],[154,12,196,10],[154,14,196,12,"enemy"],[154,19,196,17],[154,20,196,18,"zoneXP"],[154,26,196,24],[154,30,196,28],[154,31,196,29],[155,10,197,8,"position"],[155,18,197,16],[155,20,197,18,"enemy"],[155,25,197,23],[155,26,197,24,"position"],[156,8,198,6],[156,9,198,7],[156,10,198,8],[157,6,199,4],[158,4,200,2],[158,5,200,3],[158,7,200,5],[158,8,200,6,"game"],[158,12,200,10],[158,13,200,11,"updateNinja"],[158,24,200,22],[158,26,200,24,"recordEnemyKill"],[158,41,200,39],[158,42,200,40],[158,43,200,41],[160,4,202,2],[161,4,203,2],[161,8,203,8,"handleCombatTick"],[161,24,203,24],[161,27,203,27,"React"],[161,32,203,32],[161,33,203,32,"default"],[161,40,203,32],[161,41,203,33,"useCallback"],[161,52,203,44],[161,53,203,45],[161,59,203,51],[162,6,203,51],[162,10,203,51,"_s2"],[162,13,203,51],[162,16,203,51,"$RefreshSig$"],[162,28,203,51],[163,6,204,4,"console"],[163,13,204,11],[163,14,204,12,"log"],[163,17,204,15],[163,18,204,16],[163,87,204,85],[163,88,204,86],[164,6,205,4,"console"],[164,13,205,11],[164,14,205,12,"log"],[164,17,205,15],[164,18,205,16],[164,65,205,63,"isManualControlActive"],[164,86,205,84],[164,99,205,97,"game"],[164,103,205,101],[164,104,205,102,"gameState"],[164,113,205,111],[164,114,205,112,"isAlive"],[164,121,205,119],[164,123,205,121],[164,124,205,122],[165,6,207,4],[165,10,207,8,"enemiesToKill"],[165,23,207,36],[165,26,207,39],[165,28,207,41],[165,29,207,42],[165,30,207,43],[167,6,209,4,"_s2"],[167,9,209,4],[167,10,209,4,"setCombatState"],[167,24,209,18],[167,25,209,18,"_s2"],[167,28,209,18],[167,29,209,19,"prev"],[167,33,209,23],[167,37,209,27],[168,8,209,27,"_s2"],[168,11,209,27],[169,8,210,6],[169,12,210,12,"newTick"],[169,19,210,19],[169,22,210,22,"combatEngine"],[169,41,210,34],[169,42,210,34,"combatEngine"],[169,54,210,34],[169,55,210,35,"getCurrentTick"],[169,69,210,49],[169,70,210,50],[169,71,210,51],[170,8,211,6],[170,12,211,12,"newState"],[170,20,211,20],[170,23,211,23],[171,10,211,25],[171,13,211,28,"prev"],[171,17,211,32],[172,10,211,34,"currentTick"],[172,21,211,45],[172,23,211,47,"newTick"],[173,8,211,55],[173,9,211,56],[174,8,213,6],[174,12,213,10],[174,13,213,11,"newState"],[174,21,213,19],[174,22,213,20,"isInCombat"],[174,32,213,30],[174,34,213,32],[174,41,213,39,"newState"],[174,49,213,47],[176,8,215,6],[177,8,216,6,"newState"],[177,16,216,14],[177,17,216,15,"abilityManager"],[177,31,216,29],[177,32,216,30,"updateCooldowns"],[177,47,216,45],[177,48,216,46,"newTick"],[177,55,216,53],[177,56,216,54],[179,8,218,6],[180,8,219,6],[180,12,219,12,"effectResults"],[180,25,219,25],[180,28,219,28,"newState"],[180,36,219,36],[180,37,219,37,"statusEffects"],[180,50,219,50],[180,51,219,51,"processTick"],[180,62,219,62],[180,63,219,63,"newTick"],[180,70,219,70],[180,71,219,71],[182,8,221,6],[183,8,222,6,"effectResults"],[183,21,222,19],[183,22,222,20,"forEach"],[183,29,222,27],[183,30,222,28],[183,31,222,29,"results"],[183,38,222,36],[183,40,222,38,"entityId"],[183,48,222,46],[183,53,222,51],[184,10,223,8],[184,14,223,14,"enemyIndex"],[184,24,223,24],[184,27,223,27,"newState"],[184,35,223,35],[184,36,223,36,"enemies"],[184,43,223,43],[184,44,223,44,"findIndex"],[184,53,223,53],[184,54,223,54,"e"],[184,55,223,55],[184,59,223,59,"e"],[184,60,223,60],[184,61,223,61,"id"],[184,63,223,63],[184,68,223,68,"entityId"],[184,76,223,76],[184,77,223,77],[185,10,224,8],[185,14,224,12,"enemyIndex"],[185,24,224,22],[185,28,224,26],[185,29,224,27],[185,31,224,29],[186,12,225,10,"results"],[186,19,225,17],[186,20,225,18,"forEach"],[186,27,225,25],[186,28,225,26,"result"],[186,34,225,32],[186,38,225,36],[187,14,226,12,"newState"],[187,22,226,20],[187,23,226,21,"enemies"],[187,30,226,28],[187,31,226,29,"enemyIndex"],[187,41,226,39],[187,42,226,40],[187,43,226,41,"health"],[187,49,226,47],[187,53,226,51,"result"],[187,59,226,57],[187,60,226,58,"damage"],[187,66,226,64],[188,14,227,12,"newState"],[188,22,227,20],[188,23,227,21,"enemies"],[188,30,227,28],[188,31,227,29,"enemyIndex"],[188,41,227,39],[188,42,227,40],[188,43,227,41,"lastDamaged"],[188,54,227,52],[188,57,227,55,"newTick"],[188,64,227,62],[189,12,228,10],[189,13,228,11],[189,14,228,12],[190,10,229,8],[191,8,230,6],[191,9,230,7],[191,10,230,8],[193,8,232,6],[194,8,233,6],[195,8,234,6],[195,12,234,10,"newState"],[195,20,234,18],[195,21,234,19,"playerStats"],[195,32,234,30],[195,36,234,34,"game"],[195,40,234,38],[195,41,234,39,"gameState"],[195,50,234,48],[195,51,234,49,"ninja"],[195,56,234,54],[195,58,234,56],[196,10,235,8],[196,14,235,14,"effectiveStats"],[196,28,235,28],[196,31,235,31,"game"],[196,35,235,35],[196,36,235,36,"getEffectiveStats"],[196,53,235,53],[196,54,235,54],[196,55,235,55],[198,10,237,8],[199,10,238,8],[199,14,238,12,"newState"],[199,22,238,20],[199,23,238,21,"playerStats"],[199,34,238,32],[199,35,238,33,"attack"],[199,41,238,39],[199,46,238,44,"effectiveStats"],[199,60,238,58],[199,61,238,59,"attack"],[199,67,238,65],[199,71,239,12,"newState"],[199,79,239,20],[199,80,239,21,"playerStats"],[199,91,239,32],[199,92,239,33,"defense"],[199,99,239,40],[199,104,239,45,"effectiveStats"],[199,118,239,59],[199,119,239,60,"defense"],[199,126,239,67],[199,130,240,12,"newState"],[199,138,240,20],[199,139,240,21,"playerStats"],[199,150,240,32],[199,151,240,33,"maxHealth"],[199,160,240,42],[199,165,240,47,"effectiveStats"],[199,179,240,61],[199,180,240,62,"maxHealth"],[199,189,240,71],[199,191,240,73],[200,12,242,10,"console"],[200,19,242,17],[200,20,242,18,"log"],[200,23,242,21],[200,24,242,22],[200,58,242,56,"newState"],[200,66,242,64],[200,67,242,65,"playerStats"],[200,78,242,76],[200,79,242,77,"attack"],[200,85,242,83],[200,91,242,89,"effectiveStats"],[200,105,242,103],[200,106,242,104,"attack"],[200,112,242,110],[200,125,242,123,"newState"],[200,133,242,131],[200,134,242,132,"playerStats"],[200,145,242,143],[200,146,242,144,"defense"],[200,153,242,151],[200,159,242,157,"effectiveStats"],[200,173,242,171],[200,174,242,172,"defense"],[200,181,242,179],[200,192,242,190,"newState"],[200,200,242,198],[200,201,242,199,"playerStats"],[200,212,242,210],[200,213,242,211,"maxHealth"],[200,222,242,220],[200,228,242,226,"effectiveStats"],[200,242,242,240],[200,243,242,241,"maxHealth"],[200,252,242,250],[200,254,242,252],[200,255,242,253],[202,12,244,10],[203,12,245,10],[203,16,245,14,"newHealth"],[203,25,245,23],[203,28,245,26,"newState"],[203,36,245,34],[203,37,245,35,"playerStats"],[203,48,245,46],[203,49,245,47,"health"],[203,55,245,53],[204,12,246,10],[204,16,246,14,"newState"],[204,24,246,22],[204,25,246,23,"playerStats"],[204,36,246,34],[204,37,246,35,"maxHealth"],[204,46,246,44],[204,51,246,49,"effectiveStats"],[204,65,246,63],[204,66,246,64,"maxHealth"],[204,75,246,73],[204,77,246,75],[205,14,247,12],[206,14,248,12],[206,18,248,16,"effectiveStats"],[206,32,248,30],[206,33,248,31,"maxHealth"],[206,42,248,40],[206,45,248,43,"newState"],[206,53,248,51],[206,54,248,52,"playerStats"],[206,65,248,63],[206,66,248,64,"maxHealth"],[206,75,248,73],[206,78,248,76],[206,81,248,79],[206,83,248,81],[207,16,249,14],[208,16,250,14],[208,20,250,20,"healthRatio"],[208,31,250,31],[208,34,250,34,"newState"],[208,42,250,42],[208,43,250,43,"playerStats"],[208,54,250,54],[208,55,250,55,"maxHealth"],[208,64,250,64],[208,67,250,67],[208,68,250,68],[208,71,251,16,"newState"],[208,79,251,24],[208,80,251,25,"playerStats"],[208,91,251,36],[208,92,251,37,"health"],[208,98,251,43],[208,101,251,46,"newState"],[208,109,251,54],[208,110,251,55,"playerStats"],[208,121,251,66],[208,122,251,67,"maxHealth"],[208,131,251,76],[208,134,251,79],[208,135,251,80],[209,16,252,14,"newHealth"],[209,25,252,23],[209,28,252,26,"Math"],[209,32,252,30],[209,33,252,31,"floor"],[209,38,252,36],[209,39,252,37,"effectiveStats"],[209,53,252,51],[209,54,252,52,"maxHealth"],[209,63,252,61],[209,66,252,64,"healthRatio"],[209,77,252,75],[209,78,252,76],[210,14,253,12],[210,15,253,13],[210,21,253,19],[210,25,253,23,"newState"],[210,33,253,31],[210,34,253,32,"playerStats"],[210,45,253,43],[210,46,253,44,"health"],[210,52,253,50],[210,55,253,53,"effectiveStats"],[210,69,253,67],[210,70,253,68,"maxHealth"],[210,79,253,77],[210,81,253,79],[211,16,254,14],[212,16,255,14,"newHealth"],[212,25,255,23],[212,28,255,26,"effectiveStats"],[212,42,255,40],[212,43,255,41,"maxHealth"],[212,52,255,50],[213,14,256,12],[214,14,257,12],[215,12,258,10],[216,12,260,10,"newState"],[216,20,260,18],[216,21,260,19,"playerStats"],[216,32,260,30],[216,35,260,33],[217,14,261,12],[217,17,261,15,"newState"],[217,25,261,23],[217,26,261,24,"playerStats"],[217,37,261,35],[218,14,262,12,"attack"],[218,20,262,18],[218,22,262,20,"effectiveStats"],[218,36,262,34],[218,37,262,35,"attack"],[218,43,262,41],[219,14,263,12,"defense"],[219,21,263,19],[219,23,263,21,"effectiveStats"],[219,37,263,35],[219,38,263,36,"defense"],[219,45,263,43],[220,14,264,12,"maxHealth"],[220,23,264,21],[220,25,264,23,"effectiveStats"],[220,39,264,37],[220,40,264,38,"maxHealth"],[220,49,264,47],[221,14,264,49],[222,14,265,12,"health"],[222,20,265,18],[222,22,265,20,"newHealth"],[222,31,265,29],[223,14,265,31],[224,14,266,12,"critChance"],[224,24,266,22],[224,26,266,24,"effectiveStats"],[224,40,266,38],[224,41,266,39,"critChance"],[224,51,266,49],[224,55,266,53,"newState"],[224,63,266,61],[224,64,266,62,"playerStats"],[224,75,266,73],[224,76,266,74,"critChance"],[224,86,266,84],[225,14,267,12,"critDamage"],[225,24,267,22],[225,26,267,24,"effectiveStats"],[225,40,267,38],[225,41,267,39,"critDamage"],[225,51,267,49],[225,55,267,53,"newState"],[225,63,267,61],[225,64,267,62,"playerStats"],[225,75,267,73],[225,76,267,74,"critDamage"],[225,86,267,84],[226,14,268,12,"cooldownReduction"],[226,31,268,29],[226,33,268,31,"effectiveStats"],[226,47,268,45],[226,48,268,46,"cooldownReduction"],[226,65,268,63],[226,69,268,67,"newState"],[226,77,268,75],[226,78,268,76,"playerStats"],[226,89,268,87],[226,90,268,88,"cooldownReduction"],[227,12,269,10],[227,13,269,11],[228,10,270,8],[230,10,272,8],[231,10,273,8],[231,14,273,12,"game"],[231,18,273,16],[231,19,273,17,"gameState"],[231,28,273,26],[231,29,273,27,"isAlive"],[231,36,273,34],[231,40,274,12,"game"],[231,44,274,16],[231,45,274,17,"gameState"],[231,54,274,26],[231,55,274,27,"ninja"],[231,60,274,32],[231,61,274,33,"health"],[231,67,274,39],[231,72,274,44,"effectiveStats"],[231,86,274,58],[231,87,274,59,"maxHealth"],[231,96,274,68],[231,100,275,12,"newState"],[231,108,275,20],[231,109,275,21,"playerStats"],[231,120,275,32],[231,121,275,33,"health"],[231,127,275,39],[231,130,275,42,"effectiveStats"],[231,144,275,56],[231,145,275,57,"maxHealth"],[231,154,275,66],[231,157,275,69],[231,160,275,72],[231,162,275,74],[232,12,276,10,"console"],[232,19,276,17],[232,20,276,18,"log"],[232,23,276,21],[232,24,276,22],[232,58,276,56,"newState"],[232,66,276,64],[232,67,276,65,"playerStats"],[232,78,276,76],[232,79,276,77,"health"],[232,85,276,83],[232,91,276,89,"game"],[232,95,276,93],[232,96,276,94,"gameState"],[232,105,276,103],[232,106,276,104,"ninja"],[232,111,276,109],[232,112,276,110,"health"],[232,118,276,116],[232,139,276,137],[232,140,276,138],[233,12,277,10,"newState"],[233,20,277,18],[233,21,277,19,"playerStats"],[233,32,277,30],[233,33,277,31,"health"],[233,39,277,37],[233,42,277,40,"game"],[233,46,277,44],[233,47,277,45,"gameState"],[233,56,277,54],[233,57,277,55,"ninja"],[233,62,277,60],[233,63,277,61,"health"],[233,69,277,67],[234,10,278,8],[235,8,279,6],[237,8,281,6],[238,8,282,6,"newState"],[238,16,282,14],[238,17,282,15,"enemies"],[238,24,282,22],[238,25,282,23,"forEach"],[238,32,282,30],[238,33,282,31,"enemy"],[238,38,282,36],[238,42,282,40],[239,10,283,8],[239,14,283,12],[239,15,283,13,"enemy"],[239,20,283,18],[239,21,283,19,"isBoss"],[239,27,283,25],[239,29,283,27],[240,12,283,29],[241,12,284,10],[242,12,285,10],[242,16,285,16,"MOVEMENT_SPEED"],[242,30,285,30],[242,33,285,33],[242,37,285,37],[242,38,285,38],[242,39,285,39],[243,12,286,10],[243,16,286,16,"SCREEN_WIDTH"],[243,28,286,28],[243,31,286,31],[243,34,286,34],[244,12,287,10],[244,16,287,16,"GAME_AREA_HEIGHT"],[244,32,287,32],[244,35,287,35],[244,38,287,38],[244,39,287,39],[244,40,287,40],[245,12,288,10],[245,16,288,16,"ENEMY_SIZE"],[245,26,288,26],[245,29,288,29],[245,31,288,31],[247,12,290,10],[248,12,291,10],[248,16,291,16,"playerX"],[248,23,291,23],[248,26,291,26,"currentNinjaPosition"],[248,46,291,46],[248,47,291,47,"x"],[248,48,291,48],[249,12,292,10],[249,16,292,16,"playerY"],[249,23,292,23],[249,26,292,26,"currentNinjaPosition"],[249,46,292,46],[249,47,292,47,"y"],[249,48,292,48],[251,12,294,10],[252,12,295,10],[252,16,295,16,"deltaX"],[252,22,295,22],[252,25,295,25,"playerX"],[252,32,295,32],[252,35,295,35,"enemy"],[252,40,295,40],[252,41,295,41,"position"],[252,49,295,49],[252,50,295,50,"x"],[252,51,295,51],[253,12,296,10],[253,16,296,16,"deltaY"],[253,22,296,22],[253,25,296,25,"playerY"],[253,32,296,32],[253,35,296,35,"enemy"],[253,40,296,40],[253,41,296,41,"position"],[253,49,296,49],[253,50,296,50,"y"],[253,51,296,51],[254,12,297,10],[254,16,297,16,"distance"],[254,24,297,24],[254,27,297,27,"Math"],[254,31,297,31],[254,32,297,32,"sqrt"],[254,36,297,36],[254,37,297,37,"deltaX"],[254,43,297,43],[254,46,297,46,"deltaX"],[254,52,297,52],[254,55,297,55,"deltaY"],[254,61,297,61],[254,64,297,64,"deltaY"],[254,70,297,70],[254,71,297,71],[256,12,299,10],[257,12,300,10],[257,16,300,16,"ATTACK_RANGE"],[257,28,300,28],[257,31,300,31],[257,33,300,33],[257,34,300,34],[257,35,300,35],[258,12,301,10],[258,16,301,16,"ATTACK_COOLDOWN"],[258,31,301,31],[258,34,301,34],[258,36,301,36],[258,37,301,37],[258,38,301,38],[260,12,303,10],[260,16,303,14,"distance"],[260,24,303,22],[260,28,303,26,"ATTACK_RANGE"],[260,40,303,38],[260,42,303,40],[261,14,304,12],[262,14,305,12],[262,18,305,16],[262,19,305,17,"enemy"],[262,24,305,22],[262,25,305,23,"lastAttackTick"],[262,39,305,37],[262,41,305,39,"enemy"],[262,46,305,44],[262,47,305,45,"lastAttackTick"],[262,61,305,59],[262,64,305,62],[262,65,305,63],[263,14,307,12],[263,18,307,16,"newState"],[263,26,307,24],[263,27,307,25,"currentTick"],[263,38,307,36],[263,41,307,39,"enemy"],[263,46,307,44],[263,47,307,45,"lastAttackTick"],[263,61,307,59],[263,65,307,63,"ATTACK_COOLDOWN"],[263,80,307,78],[263,82,307,80],[264,16,308,14],[265,16,309,14],[265,20,309,18],[265,21,309,19,"game"],[265,25,309,23],[265,26,309,24,"gameState"],[265,35,309,33],[265,36,309,34,"isAlive"],[265,43,309,41],[265,45,309,43],[266,18,310,16,"console"],[266,25,310,23],[266,26,310,24,"log"],[266,29,310,27],[266,30,310,28],[266,49,310,47,"enemy"],[266,54,310,52],[266,55,310,53,"name"],[266,59,310,57],[266,93,310,91],[266,94,310,92],[267,18,311,16],[268,18,312,16,"enemy"],[268,23,312,21],[268,24,312,22,"lastAttackTick"],[268,38,312,36],[268,41,312,39,"newState"],[268,49,312,47],[268,50,312,48,"currentTick"],[268,61,312,59],[269,16,313,14],[269,17,313,15],[269,23,313,21],[270,18,314,16],[271,18,315,16],[271,22,315,22,"isPlayerInvincible"],[271,40,315,40],[271,43,315,43,"game"],[271,47,315,47],[271,48,315,48,"gameState"],[271,57,315,57],[271,58,315,58,"isInvincible"],[271,70,315,70],[271,74,316,41,"game"],[271,78,316,45],[271,79,316,46,"gameState"],[271,88,316,55],[271,89,316,56,"invincibilityEndTime"],[271,109,316,76],[271,113,317,41,"Date"],[271,117,317,45],[271,118,317,46,"now"],[271,121,317,49],[271,122,317,50],[271,123,317,51],[271,126,317,54,"game"],[271,130,317,58],[271,131,317,59,"gameState"],[271,140,317,68],[271,141,317,69,"invincibilityEndTime"],[271,161,317,89],[272,18,319,16],[272,22,319,20,"isPlayerInvincible"],[272,40,319,38],[272,42,319,40],[273,20,320,18,"console"],[273,27,320,25],[273,28,320,26,"log"],[273,31,320,29],[273,32,320,30],[273,51,320,49,"enemy"],[273,56,320,54],[273,57,320,55,"name"],[273,61,320,59],[273,101,320,99],[273,102,320,100],[274,20,321,18],[275,20,322,18,"enemy"],[275,25,322,23],[275,26,322,24,"lastAttackTick"],[275,40,322,38],[275,43,322,41,"newState"],[275,51,322,49],[275,52,322,50,"currentTick"],[275,63,322,61],[276,18,323,16],[276,19,323,17],[276,25,323,23],[277,20,324,16],[278,20,325,16],[278,24,325,22,"baseAttack"],[278,34,325,32],[278,37,325,35,"enemy"],[278,42,325,40],[278,43,325,41,"stats"],[278,48,325,46],[278,49,325,47,"attack"],[278,55,325,53],[278,58,325,56],[278,61,325,59],[278,62,325,60],[278,63,325,61],[279,20,326,16],[279,24,326,22,"attackDamage"],[279,36,326,34],[279,39,326,37,"Math"],[279,43,326,41],[279,44,326,42,"floor"],[279,49,326,47],[279,50,326,48,"baseAttack"],[279,60,326,58],[279,64,326,62],[279,67,326,65],[279,70,326,68,"Math"],[279,74,326,72],[279,75,326,73,"random"],[279,81,326,79],[279,82,326,80],[279,83,326,81],[279,86,326,84],[279,89,326,87],[279,90,326,88],[279,91,326,89],[279,92,326,90],[279,93,326,91],[280,20,327,16],[280,24,327,22,"playerDefense"],[280,37,327,35],[280,40,327,38,"newState"],[280,48,327,46],[280,49,327,47,"playerStats"],[280,60,327,58],[280,61,327,59,"defense"],[280,68,327,66],[281,20,328,16],[281,24,328,22,"finalDamage"],[281,35,328,33],[281,38,328,36,"Math"],[281,42,328,40],[281,43,328,41,"max"],[281,46,328,44],[281,47,328,45],[281,48,328,46],[281,50,328,48,"attackDamage"],[281,62,328,60],[281,65,328,63,"Math"],[281,69,328,67],[281,70,328,68,"floor"],[281,75,328,73],[281,76,328,74,"playerDefense"],[281,89,328,87],[281,92,328,90],[281,95,328,93],[281,96,328,94],[281,97,328,95],[281,98,328,96],[281,99,328,97],[283,20,330,16,"console"],[283,27,330,23],[283,28,330,24,"log"],[283,31,330,27],[283,32,330,28],[283,53,330,49,"enemy"],[283,58,330,54],[283,59,330,55,"name"],[283,63,330,59],[283,86,330,82,"finalDamage"],[283,97,330,93],[283,109,330,105,"attackDamage"],[283,121,330,117],[283,132,330,128,"Math"],[283,136,330,132],[283,137,330,133,"floor"],[283,142,330,138],[283,143,330,139,"playerDefense"],[283,156,330,152],[283,159,330,155],[283,162,330,158],[283,163,330,159],[283,184,330,180],[283,185,330,181],[285,20,332,16],[286,20,333,16],[286,24,333,22,"newPlayerHealth"],[286,39,333,37],[286,42,333,40,"Math"],[286,46,333,44],[286,47,333,45,"max"],[286,50,333,48],[286,51,333,49],[286,52,333,50],[286,54,333,52,"newState"],[286,62,333,60],[286,63,333,61,"playerStats"],[286,74,333,72],[286,75,333,73,"health"],[286,81,333,79],[286,84,333,82,"finalDamage"],[286,95,333,93],[286,96,333,94],[287,20,334,16,"newState"],[287,28,334,24],[287,29,334,25,"playerStats"],[287,40,334,36],[287,41,334,37,"health"],[287,47,334,43],[287,50,334,46,"newPlayerHealth"],[287,65,334,61],[288,20,336,16,"console"],[288,27,336,23],[288,28,336,24,"log"],[288,31,336,27],[288,32,336,28],[288,53,336,49,"newState"],[288,61,336,57],[288,62,336,58,"playerStats"],[288,73,336,69],[288,74,336,70,"health"],[288,80,336,76],[288,84,336,80,"newState"],[288,92,336,88],[288,93,336,89,"playerStats"],[288,104,336,100],[288,105,336,101,"maxHealth"],[288,114,336,110],[288,124,336,120,"finalDamage"],[288,135,336,131],[288,145,336,141],[288,146,336,142],[290,20,338,16],[291,20,339,16,"enemy"],[291,25,339,21],[291,26,339,22,"lastAttackTick"],[291,40,339,36],[291,43,339,39,"newState"],[291,51,339,47],[291,52,339,48,"currentTick"],[291,63,339,59],[293,20,341,16],[294,20,342,16],[294,24,342,20,"newPlayerHealth"],[294,39,342,35],[294,43,342,39],[294,44,342,40],[294,46,342,42],[295,22,343,18,"console"],[295,29,343,25],[295,30,343,26,"log"],[295,33,343,29],[295,34,343,30],[295,84,343,80],[295,85,343,81],[296,22,344,18],[297,22,345,18,"setTimeout"],[297,32,345,28],[297,33,345,29],[297,39,345,35],[298,24,346,20],[299,24,347,20,"game"],[299,28,347,24],[299,29,347,25,"updateGameState"],[299,44,347,40],[299,45,347,41],[300,26,347,43,"isAlive"],[300,33,347,50],[300,35,347,52],[301,24,347,58],[301,25,347,59],[301,26,347,60],[302,22,348,18],[302,23,348,19],[302,25,348,21],[302,28,348,24],[302,29,348,25],[303,20,349,16],[304,18,350,16],[305,16,351,14],[306,14,352,12],[307,12,353,10],[307,13,353,11],[307,19,353,17],[308,14,354,12],[309,14,355,12],[310,14,356,12],[310,18,356,16,"distance"],[310,26,356,24],[310,29,356,27],[310,31,356,29],[310,33,356,31],[311,16,357,14],[312,16,358,14],[312,20,358,20,"normalizedX"],[312,31,358,31],[312,34,358,34,"deltaX"],[312,40,358,40],[312,43,358,43,"distance"],[312,51,358,51],[313,16,359,14],[313,20,359,20,"normalizedY"],[313,31,359,31],[313,34,359,34,"deltaY"],[313,40,359,40],[313,43,359,43,"distance"],[313,51,359,51],[315,16,361,14],[316,16,362,14],[316,20,362,20,"randomFactor"],[316,32,362,32],[316,35,362,35],[316,38,362,38],[316,39,362,39],[316,40,362,40],[317,16,363,14],[317,20,363,20,"finalX"],[317,26,363,26],[317,29,363,29,"normalizedX"],[317,40,363,40],[317,43,363,43],[317,44,363,44,"Math"],[317,48,363,48],[317,49,363,49,"random"],[317,55,363,55],[317,56,363,56],[317,57,363,57],[317,60,363,60],[317,63,363,63],[317,67,363,67,"randomFactor"],[317,79,363,79],[318,16,364,14],[318,20,364,20,"finalY"],[318,26,364,26],[318,29,364,29,"normalizedY"],[318,40,364,40],[318,43,364,43],[318,44,364,44,"Math"],[318,48,364,48],[318,49,364,49,"random"],[318,55,364,55],[318,56,364,56],[318,57,364,57],[318,60,364,60],[318,63,364,63],[318,67,364,67,"randomFactor"],[318,79,364,79],[320,16,366,14],[321,16,367,14],[321,20,367,18,"newX"],[321,24,367,22],[321,27,367,25,"enemy"],[321,32,367,30],[321,33,367,31,"position"],[321,41,367,39],[321,42,367,40,"x"],[321,43,367,41],[321,46,367,45,"finalX"],[321,52,367,51],[321,55,367,54,"MOVEMENT_SPEED"],[321,69,367,69],[322,16,368,14],[322,20,368,18,"newY"],[322,24,368,22],[322,27,368,25,"enemy"],[322,32,368,30],[322,33,368,31,"position"],[322,41,368,39],[322,42,368,40,"y"],[322,43,368,41],[322,46,368,45,"finalY"],[322,52,368,51],[322,55,368,54,"MOVEMENT_SPEED"],[322,69,368,69],[324,16,370,14],[325,16,371,14,"newX"],[325,20,371,18],[325,23,371,21,"Math"],[325,27,371,25],[325,28,371,26,"max"],[325,31,371,29],[325,32,371,30],[325,33,371,31],[325,35,371,33,"Math"],[325,39,371,37],[325,40,371,38,"min"],[325,43,371,41],[325,44,371,42,"SCREEN_WIDTH"],[325,56,371,54],[325,59,371,57,"ENEMY_SIZE"],[325,69,371,67],[325,71,371,69,"newX"],[325,75,371,73],[325,76,371,74],[325,77,371,75],[326,16,372,14,"newY"],[326,20,372,18],[326,23,372,21,"Math"],[326,27,372,25],[326,28,372,26,"max"],[326,31,372,29],[326,32,372,30],[326,33,372,31],[326,35,372,33,"Math"],[326,39,372,37],[326,40,372,38,"min"],[326,43,372,41],[326,44,372,42,"GAME_AREA_HEIGHT"],[326,60,372,58],[326,63,372,61,"ENEMY_SIZE"],[326,73,372,71],[326,75,372,73,"newY"],[326,79,372,77],[326,80,372,78],[326,81,372,79],[328,16,374,14],[329,16,375,14,"enemy"],[329,21,375,19],[329,22,375,20,"position"],[329,30,375,28],[329,31,375,29,"x"],[329,32,375,30],[329,35,375,33,"newX"],[329,39,375,37],[330,16,376,14,"enemy"],[330,21,376,19],[330,22,376,20,"position"],[330,30,376,28],[330,31,376,29,"y"],[330,32,376,30],[330,35,376,33,"newY"],[330,39,376,37],[331,14,377,12],[332,14,378,12],[333,12,379,10],[334,10,380,8],[335,8,381,6],[335,9,381,7],[335,10,381,8],[337,8,383,6],[338,8,384,6],[338,12,384,10,"newState"],[338,20,384,18],[338,21,384,19,"shadowClone"],[338,32,384,30],[338,34,384,32],[339,10,385,8],[340,10,386,8,"newState"],[340,18,386,16],[340,19,386,17,"shadowClone"],[340,30,386,28],[340,31,386,29,"remainingTicks"],[340,45,386,43],[340,47,386,45],[342,10,388,8],[343,10,389,8],[343,14,389,14,"cloneOffset"],[343,25,389,25],[343,28,389,28],[343,30,389,30],[343,31,389,31],[343,32,389,32],[344,10,390,8,"newState"],[344,18,390,16],[344,19,390,17,"shadowClone"],[344,30,390,28],[344,31,390,29,"position"],[344,39,390,37],[344,40,390,38,"x"],[344,41,390,39],[344,44,390,42,"currentNinjaPosition"],[344,64,390,62],[344,65,390,63,"x"],[344,66,390,64],[344,69,390,67,"cloneOffset"],[344,80,390,78],[345,10,391,8,"newState"],[345,18,391,16],[345,19,391,17,"shadowClone"],[345,30,391,28],[345,31,391,29,"position"],[345,39,391,37],[345,40,391,38,"y"],[345,41,391,39],[345,44,391,42,"currentNinjaPosition"],[345,64,391,62],[345,65,391,63,"y"],[345,66,391,64],[345,69,391,67],[345,71,391,69],[347,10,393,8],[348,10,394,8],[348,14,394,12,"newState"],[348,22,394,20],[348,23,394,21,"shadowClone"],[348,34,394,32],[348,35,394,33,"remainingTicks"],[348,49,394,47],[348,53,394,51],[348,54,394,52],[348,56,394,54],[349,12,395,10,"console"],[349,19,395,17],[349,20,395,18,"log"],[349,23,395,21],[349,24,395,22],[349,75,395,73],[349,76,395,74],[350,12,396,10,"newState"],[350,20,396,18],[350,21,396,19,"shadowClone"],[350,32,396,30],[350,35,396,33,"undefined"],[350,44,396,42],[351,10,397,8],[351,11,397,9],[351,17,397,15],[352,12,398,10],[353,12,399,10],[354,12,400,10],[354,16,400,16,"CLONE_ATTACK_INTERVAL"],[354,37,400,37],[354,40,400,40],[354,42,400,42],[355,12,401,10],[355,16,401,14,"newState"],[355,24,401,22],[355,25,401,23,"currentTick"],[355,36,401,34],[355,39,401,37,"CLONE_ATTACK_INTERVAL"],[355,60,401,58],[355,65,401,63],[355,66,401,64],[355,70,401,68,"newState"],[355,78,401,76],[355,79,401,77,"enemies"],[355,86,401,84],[355,87,401,85,"length"],[355,93,401,91],[355,96,401,94],[355,97,401,95],[355,99,401,97],[356,14,402,12,"console"],[356,21,402,19],[356,22,402,20,"log"],[356,25,402,23],[356,26,402,24],[356,83,402,81],[356,84,402,82],[358,14,404,12],[359,14,405,12],[359,18,405,18,"target"],[359,24,405,24],[359,27,405,27,"findClosestEnemyInternal"],[359,51,405,51],[359,52,405,52,"newState"],[359,60,405,60],[359,61,405,61,"enemies"],[359,68,405,68],[359,69,405,69],[360,14,406,12],[360,18,406,16,"target"],[360,24,406,22],[360,26,406,24],[361,16,407,14],[362,16,408,14],[362,20,408,20,"cloneDamage"],[362,31,408,31],[362,34,408,34,"Math"],[362,38,408,38],[362,39,408,39,"floor"],[362,44,408,44],[362,45,408,45,"newState"],[362,53,408,53],[362,54,408,54,"playerStats"],[362,65,408,65],[362,66,408,66,"attack"],[362,72,408,72],[362,75,408,75],[362,78,408,78],[362,79,408,79],[364,16,410,14],[365,16,411,14,"createProjectile"],[365,32,411,30],[365,33,411,31,"target"],[365,39,411,37],[365,41,411,39,"cloneDamage"],[365,52,411,50],[365,54,411,52,"newState"],[365,62,411,60],[365,63,411,61,"shadowClone"],[365,74,411,72],[365,75,411,73,"position"],[365,83,411,81],[365,85,411,83],[366,18,412,16,"id"],[366,20,412,18],[366,22,412,20],[366,43,412,41],[367,18,413,16,"name"],[367,22,413,20],[367,24,413,22],[367,45,413,43],[368,18,414,16,"icon"],[368,22,414,20],[368,24,414,22],[369,16,415,14],[369,17,415,15],[369,18,415,16],[370,14,416,12],[371,12,417,10],[372,10,418,8],[373,8,419,6],[375,8,421,6],[376,8,422,6],[377,8,423,6,"console"],[377,15,423,13],[377,16,423,14,"log"],[377,19,423,17],[377,20,423,18],[377,63,423,61,"isManualControlActive"],[377,84,423,82],[377,97,423,95,"game"],[377,101,423,99],[377,102,423,100,"gameState"],[377,111,423,109],[377,112,423,110,"isAlive"],[377,119,423,117],[377,121,423,119],[377,122,423,120],[378,8,424,6],[378,12,424,10],[378,13,424,11,"isManualControlActive"],[378,34,424,32],[378,38,424,36,"game"],[378,42,424,40],[378,43,424,41,"gameState"],[378,52,424,50],[378,53,424,51,"isAlive"],[378,60,424,58],[378,62,424,60],[379,10,425,8],[379,15,425,13],[379,19,425,17,"i"],[379,20,425,18],[379,23,425,21],[379,24,425,22],[379,26,425,24,"i"],[379,27,425,25],[379,30,425,28],[379,31,425,29],[379,33,425,31,"i"],[379,34,425,32],[379,36,425,34],[379,38,425,36],[380,12,426,10],[380,16,426,14,"newState"],[380,24,426,22],[380,25,426,23,"abilityManager"],[380,39,426,37],[380,40,426,38,"isAbilityReady"],[380,54,426,52],[380,55,426,53,"i"],[380,56,426,54],[380,57,426,55],[380,61,426,59,"newState"],[380,69,426,67],[380,70,426,68,"enemies"],[380,77,426,75],[380,78,426,76,"length"],[380,84,426,82],[380,87,426,85],[380,88,426,86],[380,90,426,88],[381,14,427,12],[381,18,427,16,"newState"],[381,26,427,24],[381,27,427,25,"abilityManager"],[381,41,427,39],[381,42,427,40,"useAbility"],[381,52,427,50],[381,53,427,51,"i"],[381,54,427,52],[381,56,427,54,"newTick"],[381,63,427,61],[381,64,427,62],[381,66,427,64],[382,16,428,14,"console"],[382,23,428,21],[382,24,428,22,"log"],[382,27,428,25],[382,28,428,26],[382,73,428,71,"i"],[382,74,428,72],[382,76,428,74],[382,77,428,75],[383,16,429,14,"castAbility"],[383,27,429,25],[383,28,429,26,"newState"],[383,36,429,34],[383,38,429,36,"i"],[383,39,429,37],[383,40,429,38],[384,14,430,12],[385,12,431,10],[386,10,432,8],[387,8,433,6],[389,8,435,6],[390,8,436,6],[390,12,436,12,"dyingEnemies"],[390,24,436,24],[390,27,436,27,"newState"],[390,35,436,35],[390,36,436,36,"enemies"],[390,43,436,43],[390,44,436,44,"filter"],[390,50,436,50],[390,51,436,51,"enemy"],[390,56,436,56],[390,60,436,60,"enemy"],[390,65,436,65],[390,66,436,66,"isDying"],[390,73,436,73],[390,77,436,77,"enemy"],[390,82,436,82],[390,83,436,83,"health"],[390,89,436,89],[390,93,436,93],[390,94,436,94],[390,95,436,95],[391,8,437,6],[391,12,437,12,"deadEnemies"],[391,23,437,23],[391,26,437,26,"newState"],[391,34,437,34],[391,35,437,35,"enemies"],[391,42,437,42],[391,43,437,43,"filter"],[391,49,437,49],[391,50,437,50,"enemy"],[391,55,437,55],[391,59,437,59,"enemy"],[391,64,437,64],[391,65,437,65,"health"],[391,71,437,71],[391,75,437,75],[391,76,437,76],[391,80,437,80],[391,81,437,81,"enemy"],[391,86,437,86],[391,87,437,87,"isDying"],[391,94,437,94],[391,95,437,95],[393,8,439,6],[394,8,440,6,"enemiesToKill"],[394,21,440,19],[394,24,440,22],[394,25,440,23],[394,28,440,26,"deadEnemies"],[394,39,440,37],[394,41,440,39],[394,44,440,42,"dyingEnemies"],[394,56,440,54],[394,57,440,55],[394,58,440,56],[394,59,440,57],[396,8,442,6],[397,8,443,6],[397,12,443,12,"currentTime"],[397,23,443,23],[397,26,443,26,"Date"],[397,30,443,30],[397,31,443,31,"now"],[397,34,443,34],[397,35,443,35],[397,36,443,36],[398,8,444,6,"newState"],[398,16,444,14],[398,17,444,15,"enemies"],[398,24,444,22],[398,27,444,25,"newState"],[398,35,444,33],[398,36,444,34,"enemies"],[398,43,444,41],[398,44,444,42,"filter"],[398,50,444,48],[398,51,444,49,"enemy"],[398,56,444,54],[398,60,444,58],[399,10,445,8],[399,14,445,12,"enemy"],[399,19,445,17],[399,20,445,18,"isDying"],[399,27,445,25],[399,31,445,29,"enemy"],[399,36,445,34],[399,37,445,35,"deathStartTime"],[399,51,445,49],[399,53,445,51],[400,12,446,10],[400,16,446,16,"animationDuration"],[400,33,446,33],[400,36,446,36],[400,39,446,39],[400,40,446,40],[400,41,446,41],[401,12,447,10],[401,16,447,16,"isAnimationComplete"],[401,35,447,35],[401,38,447,38,"currentTime"],[401,49,447,49],[401,52,447,52,"enemy"],[401,57,447,57],[401,58,447,58,"deathStartTime"],[401,72,447,72],[401,76,447,76,"animationDuration"],[401,93,447,93],[402,12,448,10],[402,16,448,14,"isAnimationComplete"],[402,35,448,33],[402,37,448,35],[403,14,449,12,"console"],[403,21,449,19],[403,22,449,20,"log"],[403,25,449,23],[403,26,449,24],[403,58,449,56,"enemy"],[403,63,449,61],[403,64,449,62,"name"],[403,68,449,66],[403,86,449,84,"currentTime"],[403,97,449,95],[403,100,449,98,"enemy"],[403,105,449,103],[403,106,449,104,"deathStartTime"],[403,120,449,118],[403,129,449,127],[403,130,449,128],[404,14,450,12],[404,21,450,19],[404,26,450,24],[404,27,450,25],[404,28,450,26],[405,12,451,10],[406,10,452,8],[407,10,453,8],[407,17,453,15],[407,21,453,19],[407,22,453,20],[407,23,453,21],[408,8,454,6],[408,9,454,7],[408,10,454,8],[410,8,456,6],[411,8,457,6],[411,12,457,10,"deadEnemies"],[411,23,457,21],[411,24,457,22,"length"],[411,30,457,28],[411,33,457,31],[411,34,457,32],[411,36,457,34],[412,10,458,8,"console"],[412,17,458,15],[412,18,458,16,"log"],[412,21,458,19],[412,22,458,20],[412,49,458,47,"deadEnemies"],[412,60,458,58],[412,61,458,59,"length"],[412,67,458,65],[412,83,458,81],[412,85,458,83,"deadEnemies"],[412,96,458,94],[412,97,458,95,"map"],[412,100,458,98],[412,101,458,99,"e"],[412,102,458,100],[412,106,458,104],[412,109,458,107,"e"],[412,110,458,108],[412,111,458,109,"id"],[412,113,458,111],[412,117,458,115,"e"],[412,118,458,116],[412,119,458,117,"health"],[412,125,458,123],[412,130,458,128],[412,131,458,129],[412,132,458,130],[413,8,459,6],[415,8,461,6],[416,8,462,6],[416,12,462,12,"lowHealthEnemies"],[416,28,462,28],[416,31,462,31,"newState"],[416,39,462,39],[416,40,462,40,"enemies"],[416,47,462,47],[416,48,462,48,"filter"],[416,54,462,54],[416,55,462,55,"enemy"],[416,60,462,60],[416,64,462,64,"enemy"],[416,69,462,69],[416,70,462,70,"health"],[416,76,462,76],[416,80,462,80],[416,82,462,82],[416,86,462,86,"enemy"],[416,91,462,91],[416,92,462,92,"health"],[416,98,462,98],[416,101,462,101],[416,102,462,102],[416,103,462,103],[417,8,463,6],[417,12,463,10,"lowHealthEnemies"],[417,28,463,26],[417,29,463,27,"length"],[417,35,463,33],[417,38,463,36],[417,39,463,37],[417,41,463,39],[418,10,464,8,"console"],[418,17,464,15],[418,18,464,16,"log"],[418,21,464,19],[418,22,464,20],[418,61,464,59],[418,63,464,61,"lowHealthEnemies"],[418,79,464,77],[418,80,464,78,"map"],[418,83,464,81],[418,84,464,82,"e"],[418,85,464,83],[418,89,464,87],[418,92,464,90,"e"],[418,93,464,91],[418,94,464,92,"id"],[418,96,464,94],[418,100,464,98,"e"],[418,101,464,99],[418,102,464,100,"health"],[418,108,464,106],[418,112,464,110,"e"],[418,113,464,111],[418,114,464,112,"maxHealth"],[418,123,464,121],[418,128,464,126],[418,129,464,127],[418,130,464,128],[419,8,465,6],[421,8,467,6],[422,8,468,6],[422,12,468,12,"beforeCount"],[422,23,468,23],[422,26,468,26,"newState"],[422,34,468,34],[422,35,468,35,"enemies"],[422,42,468,42],[422,43,468,43,"length"],[422,49,468,49],[423,8,469,6,"newState"],[423,16,469,14],[423,17,469,15,"enemies"],[423,24,469,22],[423,27,469,25,"newState"],[423,35,469,33],[423,36,469,34,"enemies"],[423,43,469,41],[423,44,469,42,"filter"],[423,50,469,48],[423,51,469,49,"enemy"],[423,56,469,54],[423,60,469,58,"enemy"],[423,65,469,63],[423,66,469,64,"health"],[423,72,469,70],[423,75,469,73],[423,76,469,74],[423,77,469,75],[424,8,470,6],[424,12,470,12,"afterCount"],[424,22,470,22],[424,25,470,25,"newState"],[424,33,470,33],[424,34,470,34,"enemies"],[424,41,470,41],[424,42,470,42,"length"],[424,48,470,48],[425,8,472,6],[425,12,472,10,"beforeCount"],[425,23,472,21],[425,28,472,26,"afterCount"],[425,38,472,36],[425,40,472,38],[426,10,473,8,"console"],[426,17,473,15],[426,18,473,16,"log"],[426,21,473,19],[426,22,473,20],[426,52,473,50,"beforeCount"],[426,63,473,61],[426,66,473,64,"afterCount"],[426,76,473,74],[426,102,473,100],[426,103,473,101],[427,8,474,6],[429,8,476,6],[430,8,477,6],[431,8,478,6],[431,12,478,12,"MAX_ENEMIES"],[431,23,478,23],[431,26,478,26],[431,28,478,28],[431,29,478,29],[431,30,478,30],[432,8,479,6],[432,12,479,12,"MIN_SPAWN_DELAY"],[432,27,479,27],[432,30,479,30],[432,33,479,33],[432,34,479,34],[432,35,479,35],[433,8,480,6],[433,12,480,12,"now"],[433,15,480,15],[433,18,480,18,"Date"],[433,22,480,22],[433,23,480,23,"now"],[433,26,480,26],[433,27,480,27],[433,28,480,28],[434,8,481,6],[434,12,481,12,"hasBoss"],[434,19,481,19],[434,22,481,22,"newState"],[434,30,481,30],[434,31,481,31,"enemies"],[434,38,481,38],[434,39,481,39,"some"],[434,43,481,43],[434,44,481,44,"enemy"],[434,49,481,49],[434,53,481,53,"enemy"],[434,58,481,58],[434,59,481,59,"isBoss"],[434,65,481,65],[434,66,481,66],[436,8,483,6],[437,8,484,6],[437,12,484,10],[437,13,484,11,"newState"],[437,21,484,19],[437,22,484,20,"lastSpawnTime"],[437,35,484,33],[437,37,484,35],[438,10,485,8,"newState"],[438,18,485,16],[438,19,485,17,"lastSpawnTime"],[438,32,485,30],[438,35,485,33,"now"],[438,38,485,36],[439,8,486,6],[440,8,488,6,"console"],[440,15,488,13],[440,16,488,14,"log"],[440,19,488,17],[440,20,488,18],[440,53,488,51,"newState"],[440,61,488,59],[440,62,488,60,"enemies"],[440,69,488,67],[440,70,488,68,"length"],[440,76,488,74],[440,85,488,83,"MAX_ENEMIES"],[440,96,488,94],[440,109,488,107,"hasBoss"],[440,116,488,114],[440,118,488,116],[440,119,488,117],[442,8,490,6],[443,8,491,6],[443,12,491,10],[443,13,491,11,"hasBoss"],[443,20,491,18],[443,24,491,22,"newState"],[443,32,491,30],[443,33,491,31,"enemies"],[443,40,491,38],[443,41,491,39,"length"],[443,47,491,45],[443,50,491,48,"MAX_ENEMIES"],[443,61,491,59],[443,65,491,64,"now"],[443,68,491,67],[443,71,491,70,"newState"],[443,79,491,78],[443,80,491,79,"lastSpawnTime"],[443,93,491,92],[443,97,491,97,"MIN_SPAWN_DELAY"],[443,112,491,112],[443,114,491,114],[444,10,492,8,"console"],[444,17,492,15],[444,18,492,16,"log"],[444,21,492,19],[444,22,492,20],[444,43,492,41,"newState"],[444,51,492,49],[444,52,492,50,"enemies"],[444,59,492,57],[444,60,492,58,"length"],[444,66,492,64],[444,69,492,67],[444,70,492,68],[444,74,492,72,"MAX_ENEMIES"],[444,85,492,83],[444,87,492,85],[444,88,492,86],[445,10,493,8,"spawnTestEnemy"],[445,24,493,22],[445,25,493,23,"newState"],[445,33,493,31],[445,34,493,32],[446,10,494,8,"newState"],[446,18,494,16],[446,19,494,17,"lastSpawnTime"],[446,32,494,30],[446,35,494,33,"now"],[446,38,494,36],[447,8,495,6],[448,8,497,6],[448,15,497,13,"newState"],[448,23,497,21],[449,6,498,4],[449,7,498,5],[449,47,498,6],[451,6,500,4],[452,6,501,4],[452,10,501,8,"enemiesToKill"],[452,23,501,21],[452,24,501,22,"length"],[452,30,501,28],[452,33,501,31],[452,34,501,32],[452,36,501,34],[453,8,502,6],[454,8,503,6],[454,12,503,10,"totalXP"],[454,19,503,17],[454,22,503,20],[454,23,503,21],[455,8,504,6],[455,12,504,10,"totalGold"],[455,21,504,19],[455,24,504,22],[455,25,504,23],[456,8,505,6],[456,12,505,12,"zoneKills"],[456,21,505,28],[456,24,505,31],[456,26,505,33],[457,8,507,6],[457,12,507,12,"xpMultiplier"],[457,24,507,24],[457,27,507,27,"game"],[457,31,507,31],[457,32,507,32,"gameState"],[457,41,507,41],[457,42,507,42,"subscriptionBenefits"],[457,62,507,62],[457,64,507,64,"xp_multiplier"],[457,77,507,77],[457,81,507,81],[457,84,507,84],[458,8,508,6],[458,12,508,12,"goldMultiplier"],[458,26,508,26],[458,29,508,29,"game"],[458,33,508,33],[458,34,508,34,"gameState"],[458,43,508,43],[458,44,508,44,"subscriptionBenefits"],[458,64,508,64],[458,66,508,66,"drop_multiplier"],[458,81,508,81],[458,85,508,85],[458,88,508,88],[459,8,510,6,"enemiesToKill"],[459,21,510,19],[459,22,510,20,"forEach"],[459,29,510,27],[459,30,510,28,"enemy"],[459,35,510,33],[459,39,510,37],[460,10,511,8,"totalXP"],[460,17,511,15],[460,21,511,19],[460,22,511,20,"enemy"],[460,27,511,25],[460,28,511,26,"zoneXP"],[460,34,511,32],[460,38,511,36],[460,42,511,40],[460,46,511,44,"xpMultiplier"],[460,58,511,56],[461,10,512,8,"totalGold"],[461,19,512,17],[461,23,512,21],[461,28,512,26],[461,31,512,29,"goldMultiplier"],[461,45,512,43],[462,10,514,8],[462,14,514,12,"enemy"],[462,19,514,17],[462,20,514,18,"zoneTypeId"],[462,30,514,28],[462,32,514,30],[463,12,515,10,"zoneKills"],[463,21,515,19],[463,22,515,20,"push"],[463,26,515,24],[463,27,515,25],[464,14,516,12,"id"],[464,16,516,14],[464,18,516,16,"enemy"],[464,23,516,21],[464,24,516,22,"id"],[464,26,516,24],[465,14,517,12,"typeId"],[465,20,517,18],[465,22,517,20,"enemy"],[465,27,517,25],[465,28,517,26,"zoneTypeId"],[465,38,517,36],[466,14,518,12,"name"],[466,18,518,16],[466,20,518,18,"enemy"],[466,25,518,23],[466,26,518,24,"name"],[466,30,518,28],[467,14,519,12,"icon"],[467,18,519,16],[467,20,519,18],[467,24,519,22],[468,14,520,12,"hp"],[468,16,520,14],[468,18,520,16],[468,19,520,17],[469,14,521,12,"maxHP"],[469,19,521,17],[469,21,521,19,"enemy"],[469,26,521,24],[469,27,521,25,"maxHealth"],[469,36,521,34],[470,14,522,12,"attack"],[470,20,522,18],[470,22,522,20,"enemy"],[470,27,522,25],[470,28,522,26,"stats"],[470,33,522,31],[470,34,522,32,"attack"],[470,40,522,38],[471,14,523,12,"xp"],[471,16,523,14],[471,18,523,16,"enemy"],[471,23,523,21],[471,24,523,22,"zoneXP"],[471,30,523,28],[471,34,523,32],[471,35,523,33],[472,14,524,12,"position"],[472,22,524,20],[472,24,524,22,"enemy"],[472,29,524,27],[472,30,524,28,"position"],[473,12,525,10],[473,13,525,11],[473,14,525,12],[474,10,526,8],[475,8,527,6],[475,9,527,7],[475,10,527,8],[477,8,529,6],[478,8,530,6,"game"],[478,12,530,10],[478,13,530,11,"updateNinja"],[478,24,530,22],[478,25,530,23,"prev"],[478,29,530,27],[478,34,530,32],[479,10,531,8,"experience"],[479,20,531,18],[479,22,531,20,"prev"],[479,26,531,24],[479,27,531,25,"experience"],[479,37,531,35],[479,40,531,38,"totalXP"],[479,47,531,45],[480,10,532,8,"gold"],[480,14,532,12],[480,16,532,14,"prev"],[480,20,532,18],[480,21,532,19,"gold"],[480,25,532,23],[480,28,532,26,"totalGold"],[481,8,533,6],[481,9,533,7],[481,10,533,8],[481,11,533,9],[483,8,535,6],[484,8,536,6,"zoneKills"],[484,17,536,15],[484,18,536,16,"forEach"],[484,25,536,23],[484,26,536,24,"zoneEnemy"],[484,35,536,33],[484,39,536,37,"recordEnemyKill"],[484,54,536,52],[484,55,536,53,"zoneEnemy"],[484,64,536,62],[484,65,536,63],[484,66,536,64],[485,6,537,4],[486,4,538,2],[486,5,538,3],[486,7,538,5],[486,8,538,6,"handleEnemyKill"],[486,23,538,21],[486,24,538,22],[486,25,538,23],[486,26,538,24],[486,27,538,25],[488,4,540,2],[489,4,541,2],[489,8,541,8,"findClosestEnemyInternal"],[489,32,541,32],[489,35,541,36,"enemies"],[489,42,541,58],[489,46,541,83],[490,6,542,4],[490,10,542,8,"enemies"],[490,17,542,15],[490,18,542,16,"length"],[490,24,542,22],[490,29,542,27],[490,30,542,28],[490,32,542,30],[490,39,542,37],[490,43,542,41],[492,6,544,4],[493,6,545,4],[493,10,545,10,"SCREEN_WIDTH"],[493,22,545,22],[493,25,545,25],[493,28,545,28],[494,6,546,4],[494,10,546,10,"GAME_AREA_HEIGHT"],[494,26,546,26],[494,29,546,29],[494,32,546,32],[494,35,546,35],[494,38,546,38],[494,39,546,39],[494,40,546,40],[495,6,547,4],[495,10,547,10,"ninjaX"],[495,16,547,16],[495,19,547,19,"SCREEN_WIDTH"],[495,31,547,31],[495,34,547,34],[495,35,547,35],[496,6,548,4],[496,10,548,10,"ninjaY"],[496,16,548,16],[496,19,548,19,"GAME_AREA_HEIGHT"],[496,35,548,35],[496,38,548,38],[496,39,548,39],[497,6,550,4],[497,10,550,8,"closestEnemy"],[497,22,550,20],[497,25,550,23,"enemies"],[497,32,550,30],[497,33,550,31],[497,34,550,32],[497,35,550,33],[498,6,551,4],[498,10,551,8,"closestDistance"],[498,25,551,23],[498,28,551,26,"Infinity"],[498,36,551,34],[499,6,553,4,"enemies"],[499,13,553,11],[499,14,553,12,"forEach"],[499,21,553,19],[499,22,553,20,"enemy"],[499,27,553,25],[499,31,553,29],[500,8,554,6],[500,12,554,12,"distance"],[500,20,554,20],[500,23,554,23,"Math"],[500,27,554,27],[500,28,554,28,"sqrt"],[500,32,554,32],[500,33,555,8,"Math"],[500,37,555,12],[500,38,555,13,"pow"],[500,41,555,16],[500,42,555,17,"enemy"],[500,47,555,22],[500,48,555,23,"position"],[500,56,555,31],[500,57,555,32,"x"],[500,58,555,33],[500,61,555,36,"ninjaX"],[500,67,555,42],[500,69,555,44],[500,70,555,45],[500,71,555,46],[500,74,556,8,"Math"],[500,78,556,12],[500,79,556,13,"pow"],[500,82,556,16],[500,83,556,17,"enemy"],[500,88,556,22],[500,89,556,23,"position"],[500,97,556,31],[500,98,556,32,"y"],[500,99,556,33],[500,102,556,36,"ninjaY"],[500,108,556,42],[500,110,556,44],[500,111,556,45],[500,112,557,6],[500,113,557,7],[501,8,559,6],[501,12,559,10,"distance"],[501,20,559,18],[501,23,559,21,"closestDistance"],[501,38,559,36],[501,40,559,38],[502,10,560,8,"closestDistance"],[502,25,560,23],[502,28,560,26,"distance"],[502,36,560,34],[503,10,561,8,"closestEnemy"],[503,22,561,20],[503,25,561,23,"enemy"],[503,30,561,28],[504,8,562,6],[505,6,563,4],[505,7,563,5],[505,8,563,6],[506,6,565,4,"console"],[506,13,565,11],[506,14,565,12,"log"],[506,17,565,15],[506,18,565,16],[506,60,565,58,"closestDistance"],[506,75,565,73],[506,76,565,74,"toFixed"],[506,83,565,81],[506,84,565,82],[506,85,565,83],[506,86,565,84],[506,88,565,86],[506,89,565,87],[507,6,566,4],[507,13,566,11,"closestEnemy"],[507,25,566,23],[508,4,567,2],[508,5,567,3],[510,4,569,2],[511,4,570,2],[511,8,570,8,"findClosestEnemy"],[511,24,570,24],[511,27,570,27,"findClosestEnemy"],[511,28,570,27],[511,33,570,53],[512,6,571,4],[512,13,571,11,"findClosestEnemyInternal"],[512,37,571,35],[512,38,571,36,"combatState"],[512,49,571,47],[512,50,571,48,"enemies"],[512,57,571,55],[512,58,571,56],[513,4,572,2],[513,5,572,3],[515,4,574,2],[516,4,575,2],[516,8,575,2,"_useState7"],[516,18,575,2],[516,21,575,58],[516,25,575,58,"useState"],[516,31,575,66],[516,32,575,66,"useState"],[516,40,575,66],[516,42,575,91],[517,8,575,93,"x"],[517,9,575,94],[517,11,575,96],[517,12,575,97],[518,8,575,99,"y"],[518,9,575,100],[518,11,575,102],[519,6,575,104],[519,7,575,105],[519,8,575,106],[520,6,575,106,"_useState8"],[520,16,575,106],[520,23,575,106,"_slicedToArray"],[520,37,575,106],[520,38,575,106,"default"],[520,45,575,106],[520,47,575,106,"_useState7"],[520,57,575,106],[521,6,575,9,"currentNinjaPosition"],[521,26,575,29],[521,29,575,29,"_useState8"],[521,39,575,29],[522,6,575,31,"setCurrentNinjaPosition"],[522,29,575,54],[522,32,575,54,"_useState8"],[522,42,575,54],[523,4,576,2],[523,8,576,2,"_useState9"],[523,18,576,2],[523,21,576,60],[523,25,576,60,"useState"],[523,31,576,68],[523,32,576,68,"useState"],[523,40,576,68],[523,42,576,69],[523,47,576,74],[523,48,576,75],[524,6,576,75,"_useState0"],[524,16,576,75],[524,23,576,75,"_slicedToArray"],[524,37,576,75],[524,38,576,75,"default"],[524,45,576,75],[524,47,576,75,"_useState9"],[524,57,576,75],[525,6,576,9,"isManualControlActive"],[525,27,576,30],[525,30,576,30,"_useState0"],[525,40,576,30],[526,6,576,32,"setIsManualControlActive"],[526,30,576,56],[526,33,576,56,"_useState0"],[526,43,576,56],[528,4,578,2],[529,4,579,2],[529,8,579,8,"updateNinjaPosition"],[529,27,579,27],[529,30,579,30],[529,34,579,30,"useCallback"],[529,40,579,41],[529,41,579,41,"useCallback"],[529,52,579,41],[529,54,579,43,"newPosition"],[529,65,579,78],[529,69,579,83],[530,6,580,4,"setCurrentNinjaPosition"],[530,29,580,27],[530,30,580,28,"newPosition"],[530,41,580,39],[530,42,580,40],[531,4,581,2],[531,5,581,3],[531,7,581,5],[531,9,581,7],[531,10,581,8],[533,4,583,2],[534,4,584,2],[534,8,584,8,"setManualControlActive"],[534,30,584,30],[534,33,584,33],[534,37,584,33,"useCallback"],[534,43,584,44],[534,44,584,44,"useCallback"],[534,55,584,44],[534,57,584,46,"active"],[534,63,584,61],[534,67,584,66],[535,6,585,4,"setIsManualControlActive"],[535,30,585,28],[535,31,585,29,"active"],[535,37,585,35],[535,38,585,36],[536,6,586,4,"console"],[536,13,586,11],[536,14,586,12,"log"],[536,17,586,15],[536,18,586,16],[536,39,586,37,"active"],[536,45,586,43],[536,48,586,46],[536,59,586,57],[536,62,586,60],[536,75,586,73],[536,88,586,86,"active"],[536,94,586,92],[536,97,586,95],[536,105,586,103],[536,108,586,106],[536,117,586,115],[536,119,586,117],[536,120,586,118],[537,4,587,2],[537,5,587,3],[537,7,587,5],[537,9,587,7],[537,10,587,8],[539,4,589,2],[540,4,590,2],[540,8,590,8,"handleProjectileHit"],[540,27,590,27],[540,30,590,31,"projectile"],[540,40,590,59],[540,44,590,64],[541,6,591,4,"console"],[541,13,591,11],[541,14,591,12,"log"],[541,17,591,15],[541,18,591,16],[541,35,591,33,"projectile"],[541,45,591,43],[541,46,591,44,"id"],[541,48,591,46],[541,62,591,60,"projectile"],[541,72,591,70],[541,73,591,71,"targetEnemyId"],[541,86,591,84],[541,94,591,92,"projectile"],[541,104,591,102],[541,105,591,103,"damage"],[541,111,591,109],[541,120,591,118],[541,121,591,119],[542,6,593,4,"setCombatState"],[542,20,593,18],[542,21,593,19,"prev"],[542,25,593,23],[542,29,593,27],[543,8,594,6],[543,12,594,12,"newState"],[543,20,594,20],[543,23,594,23],[544,10,594,25],[544,13,594,28,"prev"],[545,8,594,33],[545,9,594,34],[547,8,596,6],[548,8,597,6],[548,12,597,12,"enemyIndex"],[548,22,597,22],[548,25,597,25,"newState"],[548,33,597,33],[548,34,597,34,"enemies"],[548,41,597,41],[548,42,597,42,"findIndex"],[548,51,597,51],[548,52,597,52,"e"],[548,53,597,53],[548,57,597,57,"e"],[548,58,597,58],[548,59,597,59,"id"],[548,61,597,61],[548,66,597,66,"projectile"],[548,76,597,76],[548,77,597,77,"targetEnemyId"],[548,90,597,90],[548,91,597,91],[549,8,598,6],[549,12,598,10,"enemyIndex"],[549,22,598,20],[549,26,598,24],[549,27,598,25],[549,29,598,27],[550,10,599,8,"newState"],[550,18,599,16],[550,19,599,17,"enemies"],[550,26,599,24],[550,29,599,27],[550,30,599,28],[550,33,599,31,"newState"],[550,41,599,39],[550,42,599,40,"enemies"],[550,49,599,47],[550,50,599,48],[551,10,600,8,"newState"],[551,18,600,16],[551,19,600,17,"enemies"],[551,26,600,24],[551,27,600,25,"enemyIndex"],[551,37,600,35],[551,38,600,36],[551,41,600,39],[552,12,601,10],[552,15,601,13,"newState"],[552,23,601,21],[552,24,601,22,"enemies"],[552,31,601,29],[552,32,601,30,"enemyIndex"],[552,42,601,40],[552,43,601,41],[553,12,602,10,"health"],[553,18,602,16],[553,20,602,18,"newState"],[553,28,602,26],[553,29,602,27,"enemies"],[553,36,602,34],[553,37,602,35,"enemyIndex"],[553,47,602,45],[553,48,602,46],[553,49,602,47,"health"],[553,55,602,53],[553,58,602,56,"projectile"],[553,68,602,66],[553,69,602,67,"damage"],[553,75,602,73],[554,12,603,10,"lastDamaged"],[554,23,603,21],[554,25,603,23,"combatEngine"],[554,44,603,35],[554,45,603,35,"combatEngine"],[554,57,603,35],[554,58,603,36,"getCurrentTick"],[554,72,603,50],[554,73,603,51],[555,10,604,8],[555,11,604,9],[556,10,606,8,"console"],[556,17,606,15],[556,18,606,16,"log"],[556,21,606,19],[556,22,606,20],[556,34,606,32,"projectile"],[556,44,606,42],[556,45,606,43,"targetEnemyId"],[556,58,606,56],[556,70,606,68,"newState"],[556,78,606,76],[556,79,606,77,"enemies"],[556,86,606,84],[556,87,606,85,"enemyIndex"],[556,97,606,95],[556,98,606,96],[556,99,606,97,"health"],[556,105,606,103],[556,109,606,107,"newState"],[556,117,606,115],[556,118,606,116,"enemies"],[556,125,606,123],[556,126,606,124,"enemyIndex"],[556,136,606,134],[556,137,606,135],[556,138,606,136,"maxHealth"],[556,147,606,145],[556,149,606,147],[556,150,606,148],[557,8,607,6],[558,8,609,6],[558,15,609,13,"newState"],[558,23,609,21],[559,6,610,4],[559,7,610,5],[559,8,610,6],[561,6,612,4],[562,6,613,4,"setProjectiles"],[562,20,613,18],[562,21,613,19,"prev"],[562,25,613,23],[562,29,613,27,"prev"],[562,33,613,31],[562,34,613,32,"filter"],[562,40,613,38],[562,41,613,39,"p"],[562,42,613,40],[562,46,613,44,"p"],[562,47,613,45],[562,48,613,46,"id"],[562,50,613,48],[562,55,613,53,"projectile"],[562,65,613,63],[562,66,613,64,"id"],[562,68,613,66],[562,69,613,67],[562,70,613,68],[563,4,614,2],[563,5,614,3],[565,4,616,2],[566,4,617,2],[566,8,617,8,"castAbility"],[566,19,617,19],[566,22,617,22,"castAbility"],[566,23,617,23,"state"],[566,28,617,41],[566,30,617,43,"slotIndex"],[566,39,617,60],[566,44,617,65],[567,6,618,4],[567,10,618,10,"deck"],[567,14,618,14],[567,17,618,17,"state"],[567,22,618,22],[567,23,618,23,"abilityManager"],[567,37,618,37],[567,38,618,38,"getDeck"],[567,45,618,45],[567,46,618,46],[567,47,618,47],[568,6,619,4],[568,10,619,10,"ability"],[568,17,619,17],[568,20,619,20,"deck"],[568,24,619,24],[568,25,619,25,"slots"],[568,30,619,30],[568,31,619,31,"slotIndex"],[568,40,619,40],[568,41,619,41],[569,6,620,4],[569,10,620,8],[569,11,620,9,"ability"],[569,18,620,16],[569,20,620,18],[570,6,622,4,"console"],[570,13,622,11],[570,14,622,12,"log"],[570,17,622,15],[570,18,622,16],[570,43,622,41,"ability"],[570,50,622,48],[570,51,622,49,"id"],[570,53,622,51],[570,67,622,65,"slotIndex"],[570,76,622,74],[570,78,622,76],[570,79,622,77],[572,6,624,4],[573,6,625,4],[573,10,625,8,"damage"],[573,16,625,14],[573,19,625,17,"ability"],[573,26,625,24],[573,27,625,25,"stats"],[573,32,625,30],[573,33,625,31,"baseDamage"],[573,43,625,41],[575,6,627,4],[576,6,628,4,"deck"],[576,10,628,8],[576,11,628,9,"activeSynergies"],[576,26,628,24],[576,27,628,25,"forEach"],[576,34,628,32],[576,35,628,33,"synergy"],[576,42,628,40],[576,46,628,44],[577,8,629,6],[577,12,629,10,"synergy"],[577,19,629,17],[577,20,629,18,"bonus"],[577,25,629,23],[577,26,629,24,"damageBonus"],[577,37,629,35],[577,41,630,10,"synergy"],[577,48,630,17],[577,49,630,18,"requiredTags"],[577,61,630,30],[577,62,630,31,"some"],[577,66,630,35],[577,67,630,36,"tag"],[577,70,630,39],[577,74,630,43,"ability"],[577,81,630,50],[577,82,630,51,"tags"],[577,86,630,55],[577,87,630,56,"includes"],[577,95,630,64],[577,96,630,65,"tag"],[577,99,630,68],[577,100,630,69],[577,101,630,70],[577,103,630,72],[578,10,631,8,"damage"],[578,16,631,14],[578,20,631,19],[578,21,631,20],[578,24,631,23,"synergy"],[578,31,631,30],[578,32,631,31,"bonus"],[578,37,631,36],[578,38,631,37,"damageBonus"],[578,49,631,48],[578,52,631,51],[578,55,631,55],[579,8,632,6],[580,6,633,4],[580,7,633,5],[580,8,633,6],[582,6,635,4],[583,6,636,4],[583,10,636,10,"isAOE"],[583,15,636,15],[583,18,636,18,"ability"],[583,25,636,25],[583,26,636,26,"effects"],[583,33,636,33],[583,34,636,34,"includes"],[583,42,636,42],[583,43,636,43],[583,48,636,48],[583,49,636,49],[583,53,636,53,"ability"],[583,60,636,60],[583,61,636,61,"stats"],[583,66,636,66],[583,67,636,67,"aoeRadius"],[583,76,636,76],[584,6,637,4,"console"],[584,13,637,11],[584,14,637,12,"log"],[584,17,637,15],[584,18,637,16],[584,39,637,37,"ability"],[584,46,637,44],[584,47,637,45,"name"],[584,51,637,49],[584,66,637,64,"JSON"],[584,70,637,68],[584,71,637,69,"stringify"],[584,80,637,78],[584,81,637,79,"ability"],[584,88,637,86],[584,89,637,87,"effects"],[584,96,637,94],[584,97,637,95],[584,113,637,111,"ability"],[584,120,637,118],[584,121,637,119,"stats"],[584,126,637,124],[584,127,637,125,"aoeRadius"],[584,136,637,134],[584,148,637,146,"isAOE"],[584,153,637,151],[584,155,637,153],[584,156,637,154],[585,6,639,4],[585,10,639,8,"isAOE"],[585,15,639,13],[585,17,639,15],[586,8,640,6,"console"],[586,15,640,13],[586,16,640,14,"log"],[586,19,640,17],[586,20,640,18],[586,39,640,37,"ability"],[586,46,640,44],[586,47,640,45,"name"],[586,51,640,49],[586,67,640,65,"ability"],[586,74,640,72],[586,75,640,73,"stats"],[586,80,640,78],[586,81,640,79,"aoeRadius"],[586,90,640,88],[586,92,640,90],[586,93,640,91],[588,8,642,6],[589,8,643,6],[590,8,644,6],[590,12,644,12,"ninjaX"],[590,18,644,18],[590,21,644,21,"currentNinjaPosition"],[590,41,644,41],[590,42,644,42,"x"],[590,43,644,43],[590,46,644,46],[590,48,644,48],[590,49,644,49],[590,50,644,50],[591,8,645,6],[591,12,645,12,"ninjaY"],[591,18,645,18],[591,21,645,21,"currentNinjaPosition"],[591,41,645,41],[591,42,645,42,"y"],[591,43,645,43],[591,46,645,46],[591,48,645,48],[592,8,646,6],[592,12,646,12,"aoeRadius"],[592,21,646,21],[592,24,646,24,"ability"],[592,31,646,31],[592,32,646,32,"stats"],[592,37,646,37],[592,38,646,38,"aoeRadius"],[592,47,646,47],[593,8,648,6],[593,12,648,12,"enemiesInRange"],[593,26,648,26],[593,29,648,29,"state"],[593,34,648,34],[593,35,648,35,"enemies"],[593,42,648,42],[593,43,648,43,"filter"],[593,49,648,49],[593,50,648,50,"enemy"],[593,55,648,55],[593,59,648,59],[594,10,649,8],[594,14,649,14,"enemyX"],[594,20,649,20],[594,23,649,23,"enemy"],[594,28,649,28],[594,29,649,29,"position"],[594,37,649,37],[594,38,649,38,"x"],[594,39,649,39],[594,42,649,42],[594,46,649,46],[594,47,649,47],[594,48,649,48],[595,10,650,8],[595,14,650,14,"enemyY"],[595,20,650,20],[595,23,650,23,"enemy"],[595,28,650,28],[595,29,650,29,"position"],[595,37,650,37],[595,38,650,38,"y"],[595,39,650,39],[595,42,650,42],[595,46,650,46],[596,10,651,8],[596,14,651,14,"distance"],[596,22,651,22],[596,25,651,25,"Math"],[596,29,651,29],[596,30,651,30,"sqrt"],[596,34,651,34],[596,35,651,35,"Math"],[596,39,651,39],[596,40,651,40,"pow"],[596,43,651,43],[596,44,651,44,"enemyX"],[596,50,651,50],[596,53,651,53,"ninjaX"],[596,59,651,59],[596,61,651,61],[596,62,651,62],[596,63,651,63],[596,66,651,66,"Math"],[596,70,651,70],[596,71,651,71,"pow"],[596,74,651,74],[596,75,651,75,"enemyY"],[596,81,651,81],[596,84,651,84,"ninjaY"],[596,90,651,90],[596,92,651,92],[596,93,651,93],[596,94,651,94],[596,95,651,95],[597,10,652,8],[597,17,652,15,"distance"],[597,25,652,23],[597,29,652,27,"aoeRadius"],[597,38,652,36],[598,8,653,6],[598,9,653,7],[598,10,653,8],[599,8,655,6,"console"],[599,15,655,13],[599,16,655,14,"log"],[599,19,655,17],[599,20,655,18],[599,45,655,43,"enemiesInRange"],[599,59,655,57],[599,60,655,58,"length"],[599,66,655,64],[599,88,655,86,"aoeRadius"],[599,97,655,95],[599,107,655,105],[599,108,655,106],[601,8,657,6],[602,8,658,6,"enemiesInRange"],[602,22,658,20],[602,23,658,21,"forEach"],[602,30,658,28],[602,31,658,29,"enemy"],[602,36,658,34],[602,40,658,38],[603,10,659,8],[603,14,659,14,"damageResult"],[603,26,659,26],[603,29,659,29,"DamageCalculator"],[603,48,659,45],[603,49,659,45,"DamageCalculator"],[603,65,659,45],[603,66,659,46,"calculateDamage"],[603,81,659,61],[603,82,659,62,"damage"],[603,88,659,68],[603,90,659,70,"state"],[603,95,659,75],[603,96,659,76,"playerStats"],[603,107,659,87],[603,109,659,89,"enemy"],[603,114,659,94],[603,115,659,95,"stats"],[603,120,659,100],[603,121,659,101],[604,10,660,8,"createProjectile"],[604,26,660,24],[604,27,660,25,"enemy"],[604,32,660,30],[604,34,660,32,"damageResult"],[604,46,660,44],[604,47,660,45,"damage"],[604,53,660,51],[604,55,660,53,"currentNinjaPosition"],[604,75,660,73],[604,77,660,75],[605,12,661,10,"id"],[605,14,661,12],[605,16,661,14,"ability"],[605,23,661,21],[605,24,661,22,"id"],[605,26,661,24],[606,12,662,10,"name"],[606,16,662,14],[606,18,662,16,"ability"],[606,25,662,23],[606,26,662,24,"name"],[606,30,662,28],[607,12,663,10,"icon"],[607,16,663,14],[607,18,663,16,"ability"],[607,25,663,23],[607,26,663,24,"icon"],[608,10,664,8],[608,11,664,9],[608,12,664,10],[609,10,665,8,"console"],[609,17,665,15],[609,18,665,16,"log"],[609,21,665,19],[609,22,665,20],[609,37,665,35,"enemy"],[609,42,665,40],[609,43,665,41,"name"],[609,47,665,45],[609,55,665,53,"damageResult"],[609,67,665,65],[609,68,665,66,"damage"],[609,74,665,72],[609,83,665,81],[609,84,665,82],[611,10,667,8],[612,10,668,8],[612,14,668,12,"damageResult"],[612,26,668,24],[612,27,668,25,"damage"],[612,33,668,31],[612,37,668,35,"enemy"],[612,42,668,40],[612,43,668,41,"health"],[612,49,668,47],[612,51,668,49],[613,12,669,10,"console"],[613,19,669,17],[613,20,669,18,"log"],[613,23,669,21],[613,24,669,22],[613,67,669,65,"enemy"],[613,72,669,70],[613,73,669,71,"name"],[613,77,669,75],[613,90,669,88,"damageResult"],[613,102,669,100],[613,103,669,101,"damage"],[613,109,669,107],[613,124,669,122,"enemy"],[613,129,669,127],[613,130,669,128,"health"],[613,136,669,134],[613,139,669,137],[613,140,669,138],[614,10,670,8],[615,8,671,6],[615,9,671,7],[615,10,671,8],[616,8,673,6,"console"],[616,15,673,13],[616,16,673,14,"log"],[616,19,673,17],[616,20,673,18],[616,26,673,24,"ability"],[616,33,673,31],[616,34,673,32,"name"],[616,38,673,36],[616,56,673,54,"enemiesInRange"],[616,70,673,68],[616,71,673,69,"length"],[616,77,673,75],[616,93,673,91,"damage"],[616,99,673,97],[616,118,673,116],[616,119,673,117],[617,6,675,4],[617,7,675,5],[617,13,675,11],[618,8,676,6],[619,8,677,6],[619,12,677,12,"target"],[619,18,677,18],[619,21,677,21,"findClosestEnemyInternal"],[619,45,677,45],[619,46,677,46,"state"],[619,51,677,51],[619,52,677,52,"enemies"],[619,59,677,59],[619,60,677,60],[620,8,678,6],[620,12,678,10],[620,13,678,11,"target"],[620,19,678,17],[620,21,678,19],[621,8,680,6],[621,12,680,12,"damageResult"],[621,24,680,24],[621,27,680,27,"DamageCalculator"],[621,46,680,43],[621,47,680,43,"DamageCalculator"],[621,63,680,43],[621,64,680,44,"calculateDamage"],[621,79,680,59],[621,80,680,60,"damage"],[621,86,680,66],[621,88,680,68,"state"],[621,93,680,73],[621,94,680,74,"playerStats"],[621,105,680,85],[621,107,680,87,"target"],[621,113,680,93],[621,114,680,94,"stats"],[621,119,680,99],[621,120,680,100],[623,8,682,6],[624,8,683,6,"console"],[624,15,683,13],[624,16,683,14,"log"],[624,19,683,17],[624,20,683,18],[624,71,683,69,"target"],[624,77,683,75],[624,78,683,76,"name"],[624,82,683,80],[624,91,683,89,"damageResult"],[624,103,683,101],[624,104,683,102,"damage"],[624,110,683,108],[624,119,683,117],[624,120,683,118],[625,8,684,6,"createProjectile"],[625,24,684,22],[625,25,684,23,"target"],[625,31,684,29],[625,33,684,31,"damageResult"],[625,45,684,43],[625,46,684,44,"damage"],[625,52,684,50],[625,54,684,52,"currentNinjaPosition"],[625,74,684,72],[625,76,684,74],[626,10,685,8,"id"],[626,12,685,10],[626,14,685,12,"ability"],[626,21,685,19],[626,22,685,20,"id"],[626,24,685,22],[627,10,686,8,"name"],[627,14,686,12],[627,16,686,14,"ability"],[627,23,686,21],[627,24,686,22,"name"],[627,28,686,26],[628,10,687,8,"icon"],[628,14,687,12],[628,16,687,14,"ability"],[628,23,687,21],[628,24,687,22,"icon"],[629,8,688,6],[629,9,688,7],[629,10,688,8],[630,8,690,6,"console"],[630,15,690,13],[630,16,690,14,"log"],[630,19,690,17],[630,20,690,18],[630,26,690,24,"ability"],[630,33,690,31],[630,34,690,32,"name"],[630,38,690,36],[630,66,690,64,"damageResult"],[630,78,690,76],[630,79,690,77,"damage"],[630,85,690,83],[630,95,690,93,"damageResult"],[630,107,690,105],[630,108,690,106,"isCritical"],[630,118,690,116],[630,121,690,119],[630,131,690,129],[630,134,690,132],[630,136,690,134],[630,138,690,136],[630,139,690,137],[632,8,692,6],[633,8,693,6],[633,12,693,10,"damageResult"],[633,24,693,22],[633,25,693,23,"damage"],[633,31,693,29],[633,35,693,33,"target"],[633,41,693,39],[633,42,693,40,"health"],[633,48,693,46],[633,50,693,48],[634,10,694,8,"console"],[634,17,694,15],[634,18,694,16,"log"],[634,21,694,19],[634,22,694,20],[634,75,694,73,"target"],[634,81,694,79],[634,82,694,80,"name"],[634,86,694,84],[634,99,694,97,"damageResult"],[634,111,694,109],[634,112,694,110,"damage"],[634,118,694,116],[634,133,694,131,"target"],[634,139,694,137],[634,140,694,138,"health"],[634,146,694,144],[634,149,694,147],[634,150,694,148],[635,8,695,6],[636,6,696,4],[638,6,698,4],[639,6,699,4],[639,10,699,8,"ability"],[639,17,699,15],[639,18,699,16,"effects"],[639,25,699,23],[639,26,699,24,"includes"],[639,34,699,32],[639,35,699,33],[639,40,699,38],[639,41,699,39],[639,45,699,43,"ability"],[639,52,699,50],[639,53,699,51,"stats"],[639,58,699,56],[639,59,699,57,"duration"],[639,67,699,65],[639,69,699,67],[640,8,700,6],[640,12,700,12,"targets"],[640,19,700,19],[640,22,700,22,"isAOE"],[640,27,700,27],[640,30,701,8,"state"],[640,35,701,13],[640,36,701,14,"enemies"],[640,43,701,21],[640,44,701,22,"filter"],[640,50,701,28],[640,51,701,29,"enemy"],[640,56,701,34],[640,60,701,38],[641,10,702,10],[641,14,702,16,"ninjaX"],[641,20,702,22],[641,23,702,25,"currentNinjaPosition"],[641,43,702,45],[641,44,702,46,"x"],[641,45,702,47],[641,48,702,50],[641,50,702,52],[642,10,703,10],[642,14,703,16,"ninjaY"],[642,20,703,22],[642,23,703,25,"currentNinjaPosition"],[642,43,703,45],[642,44,703,46,"y"],[642,45,703,47],[642,48,703,50],[642,50,703,52],[643,10,704,10],[643,14,704,16,"enemyX"],[643,20,704,22],[643,23,704,25,"enemy"],[643,28,704,30],[643,29,704,31,"position"],[643,37,704,39],[643,38,704,40,"x"],[643,39,704,41],[643,42,704,44],[643,46,704,48],[644,10,705,10],[644,14,705,16,"enemyY"],[644,20,705,22],[644,23,705,25,"enemy"],[644,28,705,30],[644,29,705,31,"position"],[644,37,705,39],[644,38,705,40,"y"],[644,39,705,41],[644,42,705,44],[644,46,705,48],[645,10,706,10],[645,14,706,16,"distance"],[645,22,706,24],[645,25,706,27,"Math"],[645,29,706,31],[645,30,706,32,"sqrt"],[645,34,706,36],[645,35,706,37,"Math"],[645,39,706,41],[645,40,706,42,"pow"],[645,43,706,45],[645,44,706,46,"enemyX"],[645,50,706,52],[645,53,706,55,"ninjaX"],[645,59,706,61],[645,61,706,63],[645,62,706,64],[645,63,706,65],[645,66,706,68,"Math"],[645,70,706,72],[645,71,706,73,"pow"],[645,74,706,76],[645,75,706,77,"enemyY"],[645,81,706,83],[645,84,706,86,"ninjaY"],[645,90,706,92],[645,92,706,94],[645,93,706,95],[645,94,706,96],[645,95,706,97],[646,10,707,10],[646,17,707,17,"distance"],[646,25,707,25],[646,29,707,29,"ability"],[646,36,707,36],[646,37,707,37,"stats"],[646,42,707,42],[646,43,707,43,"aoeRadius"],[646,52,707,52],[647,8,708,8],[647,9,708,9],[647,10,708,10],[647,13,709,8],[647,14,709,9,"findClosestEnemyInternal"],[647,38,709,33],[647,39,709,34,"state"],[647,44,709,39],[647,45,709,40,"enemies"],[647,52,709,47],[647,53,709,48],[647,54,709,49],[647,55,709,50,"filter"],[647,61,709,56],[647,62,709,57,"Boolean"],[647,69,709,64],[647,70,709,65],[648,8,711,6,"targets"],[648,15,711,13],[648,16,711,14,"forEach"],[648,23,711,21],[648,24,711,22,"target"],[648,30,711,28],[648,34,711,32],[649,10,712,8,"state"],[649,15,712,13],[649,16,712,14,"statusEffects"],[649,29,712,27],[649,30,712,28,"addEffect"],[649,39,712,37],[649,40,712,38,"target"],[649,46,712,44],[649,47,712,45,"id"],[649,49,712,47],[649,51,712,49],[650,12,713,10,"id"],[650,14,713,12],[650,16,713,14],[650,19,713,17,"ability"],[650,26,713,24],[650,27,713,25,"id"],[650,29,713,27],[650,35,713,33],[651,12,714,10,"type"],[651,16,714,14],[651,18,714,16],[651,23,714,21],[652,12,715,10,"remainingTicks"],[652,26,715,24],[652,28,715,26,"Math"],[652,32,715,30],[652,33,715,31,"floor"],[652,38,715,36],[652,39,715,37,"ability"],[652,46,715,44],[652,47,715,45,"stats"],[652,52,715,50],[652,53,715,51,"duration"],[652,61,715,59],[652,64,715,62],[652,66,715,64],[652,67,715,65],[653,12,716,10,"tickInterval"],[653,24,716,22],[653,26,716,24],[653,28,716,26],[654,12,717,10,"lastTick"],[654,20,717,18],[654,22,717,20,"state"],[654,27,717,25],[654,28,717,26,"currentTick"],[654,39,717,37],[655,12,718,10,"value"],[655,17,718,15],[655,19,718,17,"Math"],[655,23,718,21],[655,24,718,22,"floor"],[655,29,718,27],[655,30,718,28,"damage"],[655,36,718,34],[655,39,718,37],[655,42,718,40],[655,43,718,41],[656,12,719,10,"stackable"],[656,21,719,19],[656,23,719,21],[657,10,720,8],[657,11,720,9],[657,12,720,10],[658,8,721,6],[658,9,721,7],[658,10,721,8],[659,6,722,4],[661,6,724,4],[662,6,725,4],[662,10,725,8,"ability"],[662,17,725,15],[662,18,725,16,"effects"],[662,25,725,23],[662,26,725,24,"includes"],[662,34,725,32],[662,35,725,33],[662,41,725,39],[662,42,725,40],[662,46,725,44,"ability"],[662,53,725,51],[662,54,725,52,"id"],[662,56,725,54],[662,61,725,59],[662,75,725,73],[662,77,725,75],[663,8,726,6,"console"],[663,15,726,13],[663,16,726,14,"log"],[663,19,726,17],[663,20,726,18],[663,66,726,64,"ability"],[663,73,726,71],[663,74,726,72,"stats"],[663,79,726,77],[663,80,726,78,"duration"],[663,88,726,86],[663,98,726,96],[663,99,726,97],[665,8,728,6],[666,8,729,6],[666,12,729,12,"cloneX"],[666,18,729,18],[666,21,729,21,"currentNinjaPosition"],[666,41,729,41],[666,42,729,42,"x"],[666,43,729,43],[666,46,729,46],[666,48,729,48],[666,49,729,49],[666,50,729,50],[667,8,730,6],[667,12,730,12,"cloneY"],[667,18,730,18],[667,21,730,21,"currentNinjaPosition"],[667,41,730,41],[667,42,730,42,"y"],[667,43,730,43],[667,46,730,46],[667,48,730,48],[667,49,730,49],[667,50,730,50],[669,8,732,6,"state"],[669,13,732,11],[669,14,732,12,"shadowClone"],[669,25,732,23],[669,28,732,26],[670,10,733,8,"id"],[670,12,733,10],[670,14,733,12],[670,30,733,28,"Date"],[670,34,733,32],[670,35,733,33,"now"],[670,38,733,36],[670,39,733,37],[670,40,733,38],[670,42,733,40],[671,10,734,8,"remainingTicks"],[671,24,734,22],[671,26,734,24,"Math"],[671,30,734,28],[671,31,734,29,"floor"],[671,36,734,34],[671,37,734,35,"ability"],[671,44,734,42],[671,45,734,43,"stats"],[671,50,734,48],[671,51,734,49,"duration"],[671,59,734,57],[671,62,734,60],[671,64,734,62],[671,65,734,63],[672,10,734,65],[673,10,735,8,"position"],[673,18,735,16],[673,20,735,18],[674,12,735,20,"x"],[674,13,735,21],[674,15,735,23,"cloneX"],[674,21,735,29],[675,12,735,31,"y"],[675,13,735,32],[675,15,735,34,"cloneY"],[676,10,735,41],[676,11,735,42],[677,10,736,8,"damageMultiplier"],[677,26,736,24],[677,28,736,26],[677,31,736,29],[677,32,736,31],[678,8,737,6],[678,9,737,7],[679,8,739,6,"console"],[679,15,739,13],[679,16,739,14,"log"],[679,19,739,17],[679,20,739,18],[679,63,739,61,"ability"],[679,70,739,68],[679,71,739,69,"stats"],[679,76,739,74],[679,77,739,75,"duration"],[679,85,739,83],[679,108,739,106],[679,109,739,107],[680,6,740,4],[681,4,741,2],[681,5,741,3],[683,4,743,2],[684,4,744,2],[684,8,744,8,"createProjectile"],[684,24,744,24],[684,27,744,27,"createProjectile"],[684,28,744,28,"targetEnemy"],[684,39,744,52],[684,41,744,54,"damage"],[684,47,744,68],[684,49,744,70,"ninjaPos"],[684,57,744,103],[684,59,744,105,"abilityInfo"],[684,70,744,159],[684,72,744,161,"isAOE"],[684,77,744,176],[684,79,744,178,"aoeRadius"],[684,88,744,196],[684,93,744,201],[685,6,745,4],[685,10,745,8],[685,11,745,9,"targetEnemy"],[685,22,745,20],[685,24,745,22],[686,8,746,6,"console"],[686,15,746,13],[686,16,746,14,"log"],[686,19,746,17],[686,20,746,18],[686,65,746,63],[686,66,746,64],[687,8,747,6],[687,15,747,13],[687,19,747,17],[688,6,748,4],[689,6,750,4],[689,10,750,10,"SCREEN_WIDTH"],[689,22,750,22],[689,25,750,25],[689,28,750,28],[690,6,751,4],[690,10,751,10,"GAME_AREA_HEIGHT"],[690,26,751,26],[690,29,751,29],[690,32,751,32],[690,35,751,35],[690,38,751,38],[690,39,751,39],[690,40,751,40],[691,6,752,4],[691,10,752,10,"NINJA_SIZE"],[691,20,752,20],[691,23,752,23],[691,25,752,25],[693,6,754,4],[694,6,755,4],[694,10,755,10,"ninjaX"],[694,16,755,16],[694,19,755,19,"ninjaPos"],[694,27,755,27],[694,30,755,30,"ninjaPos"],[694,38,755,38],[694,39,755,39,"x"],[694,40,755,40],[694,43,755,43,"NINJA_SIZE"],[694,53,755,53],[694,56,755,56],[694,57,755,57],[694,60,755,60,"SCREEN_WIDTH"],[694,72,755,72],[694,75,755,75],[694,76,755,76],[695,6,756,4],[695,10,756,10,"ninjaY"],[695,16,756,16],[695,19,756,19,"ninjaPos"],[695,27,756,27],[695,30,756,30,"ninjaPos"],[695,38,756,38],[695,39,756,39,"y"],[695,40,756,40],[695,43,756,43,"NINJA_SIZE"],[695,53,756,53],[695,56,756,56],[695,57,756,57],[695,60,756,60,"GAME_AREA_HEIGHT"],[695,76,756,76],[695,79,756,79],[695,80,756,80],[696,6,757,4],[696,10,757,10,"ENEMY_SIZE"],[696,20,757,20],[696,23,757,23],[696,25,757,25],[697,6,759,4],[697,10,759,10,"projectileId"],[697,22,759,22],[697,25,759,25],[697,33,759,33,"Date"],[697,37,759,37],[697,38,759,38,"now"],[697,41,759,41],[697,42,759,42],[697,43,759,43],[697,47,759,47,"Math"],[697,51,759,51],[697,52,759,52,"random"],[697,58,759,58],[697,59,759,59],[697,60,759,60],[697,62,759,62],[698,6,761,4],[698,10,761,10,"projectile"],[698,20,761,38],[698,23,761,41],[699,8,762,6,"id"],[699,10,762,8],[699,12,762,10,"projectileId"],[699,24,762,22],[700,8,763,6,"x"],[700,9,763,7],[700,11,763,9,"ninjaX"],[700,17,763,15],[701,8,764,6,"y"],[701,9,764,7],[701,11,764,9,"ninjaY"],[701,17,764,15],[702,8,765,6,"targetX"],[702,15,765,13],[702,17,765,15,"targetEnemy"],[702,28,765,26],[702,29,765,27,"position"],[702,37,765,35],[702,38,765,36,"x"],[702,39,765,37],[702,42,765,40,"ENEMY_SIZE"],[702,52,765,50],[702,55,765,53],[702,56,765,54],[703,8,766,6,"targetY"],[703,15,766,13],[703,17,766,15,"targetEnemy"],[703,28,766,26],[703,29,766,27,"position"],[703,37,766,35],[703,38,766,36,"y"],[703,39,766,37],[703,42,766,40,"ENEMY_SIZE"],[703,52,766,50],[703,55,766,53],[703,56,766,54],[704,8,767,6,"targetEnemyId"],[704,21,767,19],[704,23,767,21,"targetEnemy"],[704,34,767,32],[704,35,767,33,"id"],[704,37,767,35],[705,8,768,6,"damage"],[705,14,768,12],[705,16,768,14,"damage"],[705,22,768,20],[706,8,769,6,"startTime"],[706,17,769,15],[706,19,769,17,"Date"],[706,23,769,21],[706,24,769,22,"now"],[706,27,769,25],[706,28,769,26],[706,29,769,27],[707,8,770,6,"duration"],[707,16,770,14],[707,18,770,16],[707,21,770,19],[708,8,770,21],[709,8,771,6],[710,8,772,6,"abilityId"],[710,17,772,15],[710,19,772,17,"abilityInfo"],[710,30,772,28],[710,32,772,30,"id"],[710,34,772,32],[710,38,772,36],[710,54,772,52],[711,8,773,6,"abilityName"],[711,19,773,17],[711,21,773,19,"abilityInfo"],[711,32,773,30],[711,34,773,32,"name"],[711,38,773,36],[711,42,773,40],[711,58,773,56],[712,8,774,6,"abilityIcon"],[712,19,774,17],[712,21,774,19,"abilityInfo"],[712,32,774,30],[712,34,774,32,"icon"],[712,38,774,36],[712,42,774,40],[712,46,774,44],[713,8,774,46],[714,8,775,6],[715,8,776,6,"isAOE"],[715,13,776,11],[715,15,776,13,"isAOE"],[715,20,776,18],[715,24,776,22],[715,29,776,27],[716,8,777,6,"aoeRadius"],[716,17,777,15],[716,19,777,17,"aoeRadius"],[716,28,777,26],[716,32,777,30],[717,6,778,4],[717,7,778,5],[718,6,780,4,"console"],[718,13,780,11],[718,14,780,12,"log"],[718,17,780,15],[718,18,780,16],[718,44,780,42,"abilityInfo"],[718,55,780,53],[718,57,780,55,"name"],[718,61,780,59],[718,65,780,63],[718,81,780,79],[718,101,780,99,"projectileId"],[718,113,780,111],[718,128,780,126,"targetEnemy"],[718,139,780,137],[718,140,780,138,"name"],[718,144,780,142],[718,152,780,150,"damage"],[718,158,780,156],[718,167,780,165],[718,168,780,166],[719,6,781,4,"console"],[719,13,781,11],[719,14,781,12,"log"],[719,17,781,15],[719,18,781,16],[719,48,781,46,"isAOE"],[719,53,781,51],[719,68,781,66,"aoeRadius"],[719,77,781,75],[719,89,781,87,"damage"],[719,95,781,93],[719,97,781,95],[719,98,781,96],[720,6,783,4,"console"],[720,13,783,11],[720,14,783,12,"log"],[720,17,783,15],[720,18,783,16],[720,53,783,51,"targetEnemy"],[720,64,783,62],[720,65,783,63,"id"],[720,67,783,65],[720,75,783,73,"damage"],[720,81,783,79],[720,90,783,88],[720,91,783,89],[721,6,784,4,"console"],[721,13,784,11],[721,14,784,12,"log"],[721,17,784,15],[721,18,784,16],[721,53,784,51,"ninjaX"],[721,59,784,57],[721,64,784,62,"ninjaY"],[721,70,784,68],[721,87,784,85,"projectile"],[721,97,784,95],[721,98,784,96,"targetX"],[721,105,784,103],[721,110,784,108,"projectile"],[721,120,784,118],[721,121,784,119,"targetY"],[721,128,784,126],[721,131,784,129],[721,132,784,130],[722,6,786,4,"setProjectiles"],[722,20,786,18],[722,21,786,19,"prev"],[722,25,786,23],[722,29,786,27],[722,30,786,28],[722,33,786,31,"prev"],[722,37,786,35],[722,39,786,37,"projectile"],[722,49,786,47],[722,50,786,48],[722,51,786,49],[724,6,788,4],[725,6,789,4,"setTimeout"],[725,16,789,14],[725,17,789,15],[725,23,789,21],[726,8,790,6,"handleProjectileHit"],[726,27,790,25],[726,28,790,26,"projectile"],[726,38,790,36],[726,39,790,37],[727,6,791,4],[727,7,791,5],[727,9,791,7],[727,12,791,10],[727,13,791,11],[728,6,793,4],[728,13,793,11,"projectile"],[728,23,793,21],[729,4,794,2],[729,5,794,3],[731,4,796,2],[732,4,797,2],[732,8,797,8,"spawnTestEnemy"],[732,22,797,22],[732,25,797,26,"state"],[732,30,797,44],[732,34,797,49],[733,6,798,4,"console"],[733,13,798,11],[733,14,798,12,"log"],[733,17,798,15],[733,18,798,16],[733,83,798,81],[733,84,798,82],[735,6,800,4],[736,6,801,4],[736,10,801,10,"zoneEnemy"],[736,19,801,19],[736,22,801,22,"spawnZoneEnemy"],[736,36,801,36],[736,37,801,37],[736,38,801,38],[737,6,802,4],[737,10,802,8],[737,11,802,9,"zoneEnemy"],[737,20,802,18],[737,22,802,20],[738,8,803,6,"console"],[738,15,803,13],[738,16,803,14,"log"],[738,19,803,17],[738,20,803,18],[738,76,803,74],[738,77,803,75],[739,8,804,6],[740,8,805,6,"spawnBasicTestEnemy"],[740,27,805,25],[740,28,805,26,"state"],[740,33,805,31],[740,34,805,32],[741,8,806,6],[742,6,807,4],[743,6,809,4,"console"],[743,13,809,11],[743,14,809,12,"log"],[743,17,809,15],[743,18,809,16],[743,44,809,42,"zoneEnemy"],[743,53,809,51],[743,54,809,52,"name"],[743,58,809,56],[743,63,809,61,"zoneEnemy"],[743,72,809,70],[743,73,809,71,"typeId"],[743,79,809,77],[743,94,809,92,"currentZone"],[743,105,809,103],[743,107,809,105,"id"],[743,109,809,107],[743,119,809,117,"currentZoneLevel"],[743,135,809,133],[743,137,809,135,"level"],[743,142,809,140],[743,144,809,142],[743,145,809,143],[745,6,811,4],[746,6,812,4],[746,10,812,10,"combatEnemy"],[746,21,812,34],[746,24,812,37],[747,8,813,6,"id"],[747,10,813,8],[747,12,813,10,"zoneEnemy"],[747,21,813,19],[747,22,813,20,"id"],[747,24,813,22],[748,8,814,6,"name"],[748,12,814,10],[748,14,814,12,"zoneEnemy"],[748,23,814,21],[748,24,814,22,"name"],[748,28,814,26],[749,8,815,6,"health"],[749,14,815,12],[749,16,815,14,"zoneEnemy"],[749,25,815,23],[749,26,815,24,"hp"],[749,28,815,26],[750,8,816,6,"maxHealth"],[750,17,816,15],[750,19,816,17,"zoneEnemy"],[750,28,816,26],[750,29,816,27,"maxHP"],[750,34,816,32],[751,8,817,6,"stats"],[751,13,817,11],[751,15,817,13],[752,10,818,8,"attack"],[752,16,818,14],[752,18,818,16,"zoneEnemy"],[752,27,818,25],[752,28,818,26,"attack"],[752,34,818,32],[753,10,819,8,"defense"],[753,17,819,15],[753,19,819,17],[753,21,819,19],[754,10,819,21],[755,10,820,8,"health"],[755,16,820,14],[755,18,820,16,"zoneEnemy"],[755,27,820,25],[755,28,820,26,"hp"],[755,30,820,28],[756,10,821,8,"maxHealth"],[756,19,821,17],[756,21,821,19,"zoneEnemy"],[756,30,821,28],[756,31,821,29,"maxHP"],[756,36,821,34],[757,10,822,8,"critChance"],[757,20,822,18],[757,22,822,20],[757,23,822,21],[758,10,823,8,"critDamage"],[758,20,823,18],[758,22,823,20],[758,25,823,23],[759,10,824,8,"cooldownReduction"],[759,27,824,25],[759,29,824,27],[760,8,825,6],[760,9,825,7],[761,8,826,6,"position"],[761,16,826,14],[761,18,826,16,"zoneEnemy"],[761,27,826,25],[761,28,826,26,"position"],[761,36,826,34],[762,8,827,6,"lastDamaged"],[762,19,827,17],[762,21,827,19],[762,22,827,20],[763,8,828,6],[764,8,829,6,"zoneTypeId"],[764,18,829,16],[764,20,829,18,"zoneEnemy"],[764,29,829,27],[764,30,829,28,"typeId"],[764,36,829,34],[765,8,830,6,"zoneXP"],[765,14,830,12],[765,16,830,14,"zoneEnemy"],[765,25,830,23],[765,26,830,24,"xp"],[766,6,831,4],[766,7,831,5],[767,6,833,4,"console"],[767,13,833,11],[767,14,833,12,"log"],[767,17,833,15],[767,18,833,16],[767,42,833,40,"combatEnemy"],[767,53,833,51],[767,54,833,52,"name"],[767,58,833,56],[767,67,833,65,"combatEnemy"],[767,78,833,76],[767,79,833,77,"health"],[767,85,833,83],[767,100,833,98,"currentZone"],[767,111,833,109],[767,113,833,111,"id"],[767,115,833,113],[767,125,833,123,"currentZoneLevel"],[767,141,833,139],[767,143,833,141,"level"],[767,148,833,146],[767,150,833,148],[767,151,833,149],[768,6,834,4,"state"],[768,11,834,9],[768,12,834,10,"enemies"],[768,19,834,17],[768,20,834,18,"push"],[768,24,834,22],[768,25,834,23,"combatEnemy"],[768,36,834,34],[768,37,834,35],[769,4,835,2],[769,5,835,3],[771,4,837,2],[772,4,838,2],[772,8,838,8,"spawnBasicTestEnemy"],[772,27,838,27],[772,30,838,31,"state"],[772,35,838,49],[772,39,838,54],[773,6,839,4],[773,10,839,10,"SCREEN_WIDTH"],[773,22,839,22],[773,25,839,25],[773,28,839,28],[774,6,840,4],[774,10,840,10,"GAME_AREA_HEIGHT"],[774,26,840,26],[774,29,840,29],[774,32,840,32],[774,35,840,35],[774,38,840,38],[775,6,841,4],[775,10,841,10,"ENEMY_SIZE"],[775,20,841,20],[775,23,841,23],[775,25,841,25],[776,6,843,4],[776,10,843,10,"x"],[776,11,843,11],[776,14,843,14,"Math"],[776,18,843,18],[776,19,843,19,"random"],[776,25,843,25],[776,26,843,26],[776,27,843,27],[776,31,843,31,"SCREEN_WIDTH"],[776,43,843,43],[776,46,843,46,"ENEMY_SIZE"],[776,56,843,56],[776,59,843,59],[776,60,843,60],[776,61,843,61],[776,64,843,64,"ENEMY_SIZE"],[776,74,843,74],[777,6,844,4],[777,10,844,10,"y"],[777,11,844,11],[777,14,844,14,"Math"],[777,18,844,18],[777,19,844,19,"random"],[777,25,844,25],[777,26,844,26],[777,27,844,27],[777,31,844,31,"GAME_AREA_HEIGHT"],[777,47,844,47],[777,50,844,50,"ENEMY_SIZE"],[777,60,844,60],[777,63,844,63],[777,64,844,64],[777,65,844,65],[777,68,844,68,"ENEMY_SIZE"],[777,78,844,78],[778,6,846,4],[778,10,846,10,"enemy"],[778,15,846,28],[778,18,846,31],[779,8,847,6,"id"],[779,10,847,8],[779,12,847,10],[779,30,847,28,"Date"],[779,34,847,32],[779,35,847,33,"now"],[779,38,847,36],[779,39,847,37],[779,40,847,38],[779,44,847,42,"Math"],[779,48,847,46],[779,49,847,47,"random"],[779,55,847,53],[779,56,847,54],[779,57,847,55],[779,59,847,57],[780,8,848,6,"name"],[780,12,848,10],[780,14,848,12],[780,26,848,24,"Math"],[780,30,848,28],[780,31,848,29,"floor"],[780,36,848,34],[780,37,848,35,"Math"],[780,41,848,39],[780,42,848,40,"random"],[780,48,848,46],[780,49,848,47],[780,50,848,48],[780,53,848,51],[780,56,848,54],[780,57,848,55],[780,59,848,57],[781,8,849,6,"health"],[781,14,849,12],[781,16,849,14],[781,18,849,16],[782,8,850,6,"maxHealth"],[782,17,850,15],[782,19,850,17],[782,21,850,19],[783,8,851,6,"stats"],[783,13,851,11],[783,15,851,13],[784,10,852,8,"attack"],[784,16,852,14],[784,18,852,16],[784,20,852,18],[785,10,853,8,"defense"],[785,17,853,15],[785,19,853,17],[785,21,853,19],[786,10,854,8,"health"],[786,16,854,14],[786,18,854,16],[786,20,854,18],[787,10,855,8,"maxHealth"],[787,19,855,17],[787,21,855,19],[787,23,855,21],[788,10,856,8,"critChance"],[788,20,856,18],[788,22,856,20],[788,23,856,21],[789,10,857,8,"critDamage"],[789,20,857,18],[789,22,857,20],[789,25,857,23],[790,10,858,8,"cooldownReduction"],[790,27,858,25],[790,29,858,27],[791,8,859,6],[791,9,859,7],[792,8,860,6,"position"],[792,16,860,14],[792,18,860,16],[793,10,860,18,"x"],[793,11,860,19],[794,10,860,21,"y"],[795,8,860,23],[795,9,860,24],[796,8,861,6,"lastDamaged"],[796,19,861,17],[796,21,861,19],[797,6,862,4],[797,7,862,5],[798,6,864,4,"console"],[798,13,864,11],[798,14,864,12,"log"],[798,17,864,15],[798,18,864,16],[798,42,864,40,"enemy"],[798,47,864,45],[798,48,864,46,"name"],[798,52,864,50],[798,60,864,58,"Math"],[798,64,864,62],[798,65,864,63,"round"],[798,70,864,68],[798,71,864,69,"x"],[798,72,864,70],[798,73,864,71],[798,78,864,76,"Math"],[798,82,864,80],[798,83,864,81,"round"],[798,88,864,86],[798,89,864,87,"y"],[798,90,864,88],[798,91,864,89],[798,94,864,92],[798,95,864,93],[799,6,865,4,"state"],[799,11,865,9],[799,12,865,10,"enemies"],[799,19,865,17],[799,20,865,18,"push"],[799,24,865,22],[799,25,865,23,"enemy"],[799,30,865,28],[799,31,865,29],[800,4,866,2],[800,5,866,3],[802,4,868,2],[803,4,869,2],[803,8,869,8,"startCombat"],[803,19,869,19],[803,22,869,22,"React"],[803,27,869,27],[803,28,869,27,"default"],[803,35,869,27],[803,36,869,28,"useCallback"],[803,47,869,39],[803,48,869,40],[803,54,869,46],[804,6,870,4,"console"],[804,13,870,11],[804,14,870,12,"log"],[804,17,870,15],[804,18,870,16],[804,63,870,61],[804,64,870,62],[805,6,871,4,"setCombatState"],[805,20,871,18],[805,21,871,19,"prev"],[805,25,871,23],[805,30,871,28],[806,8,871,30],[806,11,871,33,"prev"],[806,15,871,37],[807,8,871,39,"isInCombat"],[807,18,871,49],[807,20,871,51],[808,6,871,56],[808,7,871,57],[808,8,871,58],[808,9,871,59],[810,6,873,4],[811,6,874,4,"combatEngine"],[811,25,874,16],[811,26,874,16,"combatEngine"],[811,38,874,16],[811,39,874,17,"addTickCallback"],[811,54,874,32],[811,55,874,33,"handleCombatTick"],[811,71,874,49],[811,72,874,50],[812,6,875,4,"console"],[812,13,875,11],[812,14,875,12,"log"],[812,17,875,15],[812,18,875,16],[812,62,875,60],[812,63,875,61],[814,6,877,4],[815,6,878,4,"combatEngine"],[815,25,878,16],[815,26,878,16,"combatEngine"],[815,38,878,16],[815,39,878,17,"start"],[815,44,878,22],[815,45,878,23],[815,46,878,24],[816,4,879,2],[816,5,879,3],[816,7,879,5],[816,8,879,6,"combatEngine"],[816,27,879,18],[816,28,879,18,"combatEngine"],[816,40,879,18],[816,42,879,20,"handleCombatTick"],[816,58,879,36],[816,59,879,37],[816,60,879,38],[818,4,881,2],[819,4,882,2],[819,8,882,8,"stopCombat"],[819,18,882,18],[819,21,882,21,"React"],[819,26,882,26],[819,27,882,26,"default"],[819,34,882,26],[819,35,882,27,"useCallback"],[819,46,882,38],[819,47,882,39],[819,53,882,45],[820,6,883,4,"setCombatState"],[820,20,883,18],[820,21,883,19,"prev"],[820,25,883,23],[820,30,883,28],[821,8,883,30],[821,11,883,33,"prev"],[821,15,883,37],[822,8,883,39,"isInCombat"],[822,18,883,49],[822,20,883,51],[823,6,883,57],[823,7,883,58],[823,8,883,59],[823,9,883,60],[824,6,884,4,"combatEngine"],[824,25,884,16],[824,26,884,16,"combatEngine"],[824,38,884,16],[824,39,884,17,"removeTickCallback"],[824,57,884,35],[824,58,884,36,"handleCombatTick"],[824,74,884,52],[824,75,884,53],[825,4,885,2],[825,5,885,3],[825,7,885,5],[825,8,885,6,"combatEngine"],[825,27,885,18],[825,28,885,18,"combatEngine"],[825,40,885,18],[825,42,885,20,"handleCombatTick"],[825,58,885,36],[825,59,885,37],[825,60,885,38],[827,4,887,2],[828,4,888,2],[828,8,888,8,"equipAbility"],[828,20,888,20],[828,23,888,23,"equipAbility"],[828,24,888,24,"abilityId"],[828,33,888,41],[828,35,888,43,"slotIndex"],[828,44,888,60],[828,49,888,74],[829,6,889,4],[829,13,889,11,"combatState"],[829,24,889,22],[829,25,889,23,"abilityManager"],[829,39,889,37],[829,40,889,38,"equipAbility"],[829,52,889,50],[829,53,889,51,"abilityId"],[829,62,889,60],[829,64,889,62,"slotIndex"],[829,73,889,71],[829,74,889,72],[830,4,890,2],[830,5,890,3],[831,4,892,2],[831,8,892,8,"getDeck"],[831,15,892,15],[831,18,892,18,"getDeck"],[831,19,892,18],[831,24,892,24],[832,6,893,4],[832,13,893,11,"combatState"],[832,24,893,22],[832,25,893,23,"abilityManager"],[832,39,893,37],[832,40,893,38,"getDeck"],[832,47,893,45],[832,48,893,46],[832,49,893,47],[833,4,894,2],[833,5,894,3],[834,4,896,2],[834,8,896,8,"getAvailableAbilities"],[834,29,896,29],[834,32,896,32,"getAvailableAbilities"],[834,33,896,32],[834,38,896,38],[835,6,897,4],[835,13,897,11,"combatState"],[835,24,897,22],[835,25,897,23,"abilityManager"],[835,39,897,37],[835,40,897,38,"getAvailableAbilities"],[835,61,897,59],[835,62,897,60],[835,63,897,61],[836,4,898,2],[836,5,898,3],[837,4,900,2],[837,8,900,8,"upgradeAbility"],[837,22,900,22],[837,25,900,26,"abilityId"],[837,34,900,43],[837,38,900,57],[838,6,901,4],[838,13,901,11,"combatState"],[838,24,901,22],[838,25,901,23,"abilityManager"],[838,39,901,37],[838,40,901,38,"upgradeAbility"],[838,54,901,52],[838,55,901,53,"abilityId"],[838,64,901,62],[838,65,901,63],[839,4,902,2],[839,5,902,3],[841,4,904,2],[842,4,905,2],[842,8,905,8,"clearAllEnemies"],[842,23,905,23],[842,26,905,26,"clearAllEnemies"],[842,27,905,26],[842,32,905,32],[843,6,906,4,"console"],[843,13,906,11],[843,14,906,12,"log"],[843,17,906,15],[843,18,906,16],[843,67,906,65],[843,68,906,66],[844,6,907,4,"setCombatState"],[844,20,907,18],[844,21,907,19,"prev"],[844,25,907,23],[844,30,907,28],[845,8,908,6],[845,11,908,9,"prev"],[845,15,908,13],[846,8,909,6,"enemies"],[846,15,909,13],[846,17,909,15],[847,6,910,4],[847,7,910,5],[847,8,910,6],[847,9,910,7],[848,4,911,2],[848,5,911,3],[850,4,913,2],[851,4,914,2],[853,4,916,2],[854,4,917,2],[854,8,917,8,"spawnEnemy"],[854,18,917,18],[854,21,917,22,"position"],[854,29,917,57],[854,33,917,75],[855,6,918,4],[855,10,918,10,"SCREEN_WIDTH"],[855,22,918,22],[855,25,918,25],[855,28,918,28],[856,6,919,4],[856,10,919,10,"GAME_AREA_HEIGHT"],[856,26,919,26],[856,29,919,29],[856,32,919,32],[856,35,919,35],[856,38,919,38],[856,39,919,39],[856,40,919,40],[857,6,920,4],[857,10,920,10,"ENEMY_SIZE"],[857,20,920,20],[857,23,920,23],[857,25,920,25],[859,6,922,4],[860,6,923,4],[860,10,923,10,"x"],[860,11,923,11],[860,14,923,14,"position"],[860,22,923,22],[860,24,923,24,"x"],[860,25,923,25],[860,29,923,29,"Math"],[860,33,923,33],[860,34,923,34,"random"],[860,40,923,40],[860,41,923,41],[860,42,923,42],[860,46,923,46,"SCREEN_WIDTH"],[860,58,923,58],[860,61,923,61,"ENEMY_SIZE"],[860,71,923,71],[860,74,923,74],[860,75,923,75],[860,76,923,76],[860,79,923,79,"ENEMY_SIZE"],[860,89,923,89],[861,6,924,4],[861,10,924,10,"y"],[861,11,924,11],[861,14,924,14,"position"],[861,22,924,22],[861,24,924,24,"y"],[861,25,924,25],[861,29,924,29,"Math"],[861,33,924,33],[861,34,924,34,"random"],[861,40,924,40],[861,41,924,41],[861,42,924,42],[861,46,924,46,"GAME_AREA_HEIGHT"],[861,62,924,62],[861,65,924,65,"ENEMY_SIZE"],[861,75,924,75],[861,78,924,78],[861,79,924,79],[861,80,924,80],[861,83,924,83,"ENEMY_SIZE"],[861,93,924,93],[862,6,926,4],[862,10,926,10,"enemy"],[862,15,926,28],[862,18,926,31],[863,8,927,6,"id"],[863,10,927,8],[863,12,927,10],[863,21,927,19],[863,23,927,21,"enemyCounter"],[863,35,927,33],[863,37,927,35],[864,8,928,6,"name"],[864,12,928,10],[864,14,928,12],[864,24,928,22],[865,8,929,6,"health"],[865,14,929,12],[865,16,929,14],[865,19,929,17],[866,8,930,6,"maxHealth"],[866,17,930,15],[866,19,930,17],[866,22,930,20],[867,8,931,6,"stats"],[867,13,931,11],[867,15,931,13],[868,10,932,8,"attack"],[868,16,932,14],[868,18,932,16],[868,20,932,18],[869,10,933,8,"defense"],[869,17,933,15],[869,19,933,17],[869,21,933,19],[870,10,934,8,"health"],[870,16,934,14],[870,18,934,16],[870,21,934,19],[871,10,935,8,"maxHealth"],[871,19,935,17],[871,21,935,19],[871,24,935,22],[872,10,936,8,"critChance"],[872,20,936,18],[872,22,936,20],[872,23,936,21],[873,10,937,8,"critDamage"],[873,20,937,18],[873,22,937,20],[873,25,937,23],[874,10,938,8,"cooldownReduction"],[874,27,938,25],[874,29,938,27],[875,8,939,6],[875,9,939,7],[876,8,940,6,"position"],[876,16,940,14],[876,18,940,16],[877,10,940,18,"x"],[877,11,940,19],[878,10,940,21,"y"],[879,8,940,23],[879,9,940,24],[880,8,941,6,"lastDamaged"],[880,19,941,17],[880,21,941,19],[881,6,942,4],[881,7,942,5],[882,6,944,4,"setCombatState"],[882,20,944,18],[882,21,944,19,"prev"],[882,25,944,23],[882,30,944,28],[883,8,945,6],[883,11,945,9,"prev"],[883,15,945,13],[884,8,946,6,"enemies"],[884,15,946,13],[884,17,946,15],[884,18,946,16],[884,21,946,19,"prev"],[884,25,946,23],[884,26,946,24,"enemies"],[884,33,946,31],[884,35,946,33,"enemy"],[884,40,946,38],[885,6,947,4],[885,7,947,5],[885,8,947,6],[885,9,947,7],[886,6,949,4],[886,13,949,11,"enemy"],[886,18,949,16],[887,4,950,2],[887,5,950,3],[889,4,952,2],[890,4,953,2],[890,8,953,8,"spawnBoss"],[890,17,953,17],[890,20,953,21,"bossEnemy"],[890,29,953,43],[890,33,953,48],[891,6,954,4,"console"],[891,13,954,11],[891,14,954,12,"log"],[891,17,954,15],[891,18,954,16],[891,39,954,37,"bossEnemy"],[891,48,954,46],[891,49,954,47,"name"],[891,53,954,51],[891,90,954,88],[891,91,954,89],[892,6,955,4,"setCombatState"],[892,20,955,18],[892,21,955,19,"prev"],[892,25,955,23],[892,30,955,28],[893,8,956,6],[893,11,956,9,"prev"],[893,15,956,13],[894,8,957,6,"enemies"],[894,15,957,13],[894,17,957,15],[894,18,957,16,"bossEnemy"],[894,27,957,25],[894,28,957,26],[894,29,957,27],[895,6,958,4],[895,7,958,5],[895,8,958,6],[895,9,958,7],[896,4,959,2],[896,5,959,3],[898,4,961,2],[899,4,962,2],[899,8,962,8,"clearSpecificEnemy"],[899,26,962,26],[899,29,962,30,"enemyId"],[899,36,962,45],[899,40,962,50],[900,6,963,4,"setCombatState"],[900,20,963,18],[900,21,963,19,"prev"],[900,25,963,23],[900,30,963,28],[901,8,964,6],[901,11,964,9,"prev"],[901,15,964,13],[902,8,965,6,"enemies"],[902,15,965,13],[902,17,965,15,"prev"],[902,21,965,19],[902,22,965,20,"enemies"],[902,29,965,27],[902,30,965,28,"filter"],[902,36,965,34],[902,37,965,35,"enemy"],[902,42,965,40],[902,46,965,44,"enemy"],[902,51,965,49],[902,52,965,50,"id"],[902,54,965,52],[902,59,965,57,"enemyId"],[902,66,965,64],[903,6,966,4],[903,7,966,5],[903,8,966,6],[903,9,966,7],[904,4,967,2],[904,5,967,3],[906,4,969,2],[907,4,970,2],[907,8,970,8,"useAbilityManually"],[907,26,970,26],[907,29,970,26,"_s3"],[907,32,970,26],[907,33,970,29],[907,37,970,29,"useCallback"],[907,43,970,40],[907,44,970,40,"useCallback"],[907,55,970,40],[907,57,970,40,"_s3"],[907,60,970,40],[907,61,970,42,"slotIndex"],[907,70,970,59],[907,74,970,73],[908,6,970,73,"_s3"],[908,9,970,73],[909,6,971,4,"console"],[909,13,971,11],[909,14,971,12,"log"],[909,17,971,15],[909,18,971,16],[909,64,971,62,"slotIndex"],[909,73,971,71],[909,82,971,80],[909,83,971,81],[910,6,972,4,"console"],[910,13,972,11],[910,14,972,12,"log"],[910,17,972,15],[910,18,972,16],[910,65,972,63,"slotIndex"],[910,74,972,72],[910,76,972,74],[910,77,972,75],[911,6,973,4,"console"],[911,13,973,11],[911,14,973,12,"log"],[911,17,973,15],[911,18,973,16],[911,53,973,51,"slotIndex"],[911,62,973,60],[911,64,973,62],[911,65,973,63],[913,6,975,4],[914,6,976,4],[914,10,976,8],[914,11,976,9,"game"],[914,15,976,13],[914,16,976,14,"gameState"],[914,25,976,23],[914,26,976,24,"isAlive"],[914,33,976,31],[914,35,976,33],[915,8,977,6,"console"],[915,15,977,13],[915,16,977,14,"log"],[915,19,977,17],[915,20,977,18],[915,70,977,68],[915,71,977,69],[916,8,978,6],[916,15,978,13],[916,20,978,18],[917,6,979,4],[919,6,981,4],[920,6,982,4],[920,10,982,10,"isReady"],[920,17,982,17],[920,20,982,20,"combatState"],[920,31,982,31],[920,32,982,32,"abilityManager"],[920,46,982,46],[920,47,982,47,"isAbilityReady"],[920,61,982,61],[920,62,982,62,"slotIndex"],[920,71,982,71],[920,72,982,72],[921,6,983,4],[921,10,983,8],[921,11,983,9,"isReady"],[921,18,983,16],[921,20,983,18],[922,8,984,6,"console"],[922,15,984,13],[922,16,984,14,"log"],[922,19,984,17],[922,20,984,18],[922,41,984,39,"slotIndex"],[922,50,984,48],[922,85,984,83],[922,86,984,84],[923,8,985,6],[923,15,985,13],[923,20,985,18],[924,6,986,4],[926,6,988,4],[927,6,989,4],[927,10,989,8,"combatState"],[927,21,989,19],[927,22,989,20,"enemies"],[927,29,989,27],[927,30,989,28,"length"],[927,36,989,34],[927,41,989,39],[927,42,989,40],[927,44,989,42],[928,8,990,6,"console"],[928,15,990,13],[928,16,990,14,"log"],[928,19,990,17],[928,20,990,18],[928,69,990,67],[928,70,990,68],[929,8,991,6],[929,15,991,13],[929,20,991,18],[930,6,992,4],[932,6,994,4],[933,6,995,4],[933,10,995,10,"currentTick"],[933,21,995,21],[933,24,995,24,"combatEngine"],[933,43,995,36],[933,44,995,36,"combatEngine"],[933,56,995,36],[933,57,995,37,"getCurrentTick"],[933,71,995,51],[933,72,995,52],[933,73,995,53],[934,6,996,4],[934,10,996,10,"success"],[934,17,996,17],[934,20,996,20,"combatState"],[934,31,996,31],[934,32,996,32,"abilityManager"],[934,46,996,46],[934,47,996,47,"useAbility"],[934,57,996,57],[934,58,996,58,"slotIndex"],[934,67,996,67],[934,69,996,69,"currentTick"],[934,80,996,80],[934,81,996,81],[935,6,998,4],[935,10,998,8,"success"],[935,17,998,15],[935,19,998,17],[936,8,999,6],[937,8,1000,6,"setCombatState"],[937,22,1000,20],[937,23,1000,21,"prev"],[937,27,1000,25],[937,31,1000,29],[938,10,1001,8],[938,14,1001,14,"newState"],[938,22,1001,22],[938,25,1001,25],[939,12,1001,27],[939,15,1001,30,"prev"],[940,10,1001,35],[940,11,1001,36],[941,10,1002,8,"castAbility"],[941,21,1002,19],[941,22,1002,20,"newState"],[941,30,1002,28],[941,32,1002,30,"slotIndex"],[941,41,1002,39],[941,42,1002,40],[942,10,1003,8],[942,17,1003,15,"newState"],[942,25,1003,23],[943,8,1004,6],[943,9,1004,7],[943,10,1004,8],[944,8,1006,6,"console"],[944,15,1006,13],[944,16,1006,14,"log"],[944,19,1006,17],[944,20,1006,18],[944,65,1006,63,"slotIndex"],[944,74,1006,72],[944,76,1006,74],[944,77,1006,75],[945,8,1007,6],[945,15,1007,13],[945,19,1007,17],[946,6,1008,4],[946,7,1008,5],[946,13,1008,11],[947,8,1009,6,"console"],[947,15,1009,13],[947,16,1009,14,"log"],[947,19,1009,17],[947,20,1009,18],[947,61,1009,59,"slotIndex"],[947,70,1009,68],[947,72,1009,70],[947,73,1009,71],[948,8,1010,6],[948,15,1010,13],[948,20,1010,18],[949,6,1011,4],[950,4,1012,2],[950,5,1012,3],[950,46,1012,5],[950,47,1012,6,"combatState"],[950,58,1012,17],[950,59,1012,18,"abilityManager"],[950,73,1012,32],[950,75,1012,34,"combatState"],[950,86,1012,45],[950,87,1012,46,"enemies"],[950,94,1012,53],[950,95,1012,54],[950,96,1012,55],[951,4,1013,2],[951,8,1013,2,"useEffect"],[951,14,1013,11],[951,15,1013,11,"useEffect"],[951,24,1013,11],[951,26,1013,12],[951,32,1013,18],[952,6,1014,4,"combatEngine"],[952,25,1014,16],[952,26,1014,16,"combatEngine"],[952,38,1014,16],[952,39,1014,17,"start"],[952,44,1014,22],[952,45,1014,23],[952,46,1014,24],[954,6,1016,4],[955,6,1017,4],[956,6,1018,4,"console"],[956,13,1018,11],[956,14,1018,12,"log"],[956,17,1018,15],[956,18,1018,16],[956,97,1018,95],[956,98,1018,96],[957,6,1020,4],[957,13,1020,11],[957,19,1020,17],[958,8,1021,6,"combatEngine"],[958,27,1021,18],[958,28,1021,18,"combatEngine"],[958,40,1021,18],[958,41,1021,19,"stop"],[958,45,1021,23],[958,46,1021,24],[958,47,1021,25],[959,6,1022,4],[959,7,1022,5],[960,4,1023,2],[960,5,1023,3],[960,7,1023,5],[960,9,1023,7],[960,10,1023,8],[962,4,1025,2],[963,4,1026,2],[963,8,1026,2,"useEffect"],[963,14,1026,11],[963,15,1026,11,"useEffect"],[963,24,1026,11],[963,26,1026,12],[963,32,1026,18],[964,6,1027,4],[964,10,1027,10,"processProjectileImpacts"],[964,34,1027,34],[964,37,1027,37,"processProjectileImpacts"],[964,38,1027,37],[964,43,1027,43],[965,8,1028,6,"setProjectiles"],[965,22,1028,20],[965,23,1028,21,"currentProjectiles"],[965,41,1028,39],[965,45,1028,43],[966,10,1029,8],[966,17,1029,15,"currentProjectiles"],[966,35,1029,33],[966,36,1029,34,"map"],[966,39,1029,37],[966,40,1029,38,"projectile"],[966,50,1029,48],[966,54,1029,52],[967,12,1030,10],[967,16,1030,14],[967,17,1030,15,"projectile"],[967,27,1030,25],[967,29,1030,27],[967,36,1030,34],[967,40,1030,38],[969,12,1032,10],[970,12,1033,10],[970,16,1033,16,"currentTime"],[970,27,1033,27],[970,30,1033,30,"Date"],[970,34,1033,34],[970,35,1033,35,"now"],[970,38,1033,38],[970,39,1033,39],[970,40,1033,40],[971,12,1034,10],[971,16,1034,16,"startTime"],[971,25,1034,25],[971,28,1034,28,"projectile"],[971,38,1034,38],[971,39,1034,39,"startTime"],[971,48,1034,48],[971,52,1034,52,"currentTime"],[971,63,1034,63],[972,12,1035,10],[972,16,1035,16,"elapsedTime"],[972,27,1035,27],[972,30,1035,30,"currentTime"],[972,41,1035,41],[972,44,1035,44,"startTime"],[972,53,1035,53],[973,12,1036,10],[973,16,1036,16,"progress"],[973,24,1036,24],[973,27,1036,27,"Math"],[973,31,1036,31],[973,32,1036,32,"min"],[973,35,1036,35],[973,36,1036,36,"elapsedTime"],[973,47,1036,47],[973,51,1036,51,"projectile"],[973,61,1036,61],[973,62,1036,62,"duration"],[973,70,1036,70],[973,74,1036,74],[973,77,1036,77],[973,78,1036,78],[973,80,1036,80],[973,81,1036,81],[973,82,1036,82],[975,12,1038,10],[976,12,1039,10],[976,16,1039,14,"progress"],[976,24,1039,22],[976,28,1039,26],[976,29,1039,27],[976,33,1039,31],[976,34,1039,32,"projectile"],[976,44,1039,42],[976,45,1039,43,"hasHit"],[976,51,1039,49],[976,53,1039,51],[977,14,1040,12,"projectile"],[977,24,1040,22],[977,25,1040,23,"hasHit"],[977,31,1040,29],[977,34,1040,32],[977,38,1040,36],[978,14,1042,12,"console"],[978,21,1042,19],[978,22,1042,20,"log"],[978,25,1042,23],[978,26,1042,24],[978,51,1042,49,"projectile"],[978,61,1042,59],[978,62,1042,60,"abilityName"],[978,73,1042,71],[978,97,1042,95],[978,98,1042,96],[979,14,1043,12,"setCombatState"],[979,28,1043,26],[979,29,1043,27,"prev"],[979,33,1043,31],[979,37,1043,35],[980,16,1044,14],[980,20,1044,20,"newState"],[980,28,1044,28],[980,31,1044,31],[981,18,1044,33],[981,21,1044,36,"prev"],[982,16,1044,41],[982,17,1044,42],[983,16,1046,14],[983,20,1046,18,"projectile"],[983,30,1046,28],[983,31,1046,29,"isAOE"],[983,36,1046,34],[983,40,1046,38,"projectile"],[983,50,1046,48],[983,51,1046,49,"aoeRadius"],[983,60,1046,58],[983,64,1046,62,"projectile"],[983,74,1046,72],[983,75,1046,73,"aoeRadius"],[983,84,1046,82],[983,87,1046,85],[983,88,1046,86],[983,90,1046,88],[984,18,1047,16],[985,18,1048,16,"console"],[985,25,1048,23],[985,26,1048,24,"log"],[985,29,1048,27],[985,30,1048,28],[985,59,1048,57,"projectile"],[985,69,1048,67],[985,70,1048,68,"abilityName"],[985,81,1048,79],[985,97,1048,95,"projectile"],[985,107,1048,105],[985,108,1048,106,"aoeRadius"],[985,117,1048,115],[985,119,1048,117],[985,120,1048,118],[986,18,1050,16],[986,22,1050,22,"impactX"],[986,29,1050,29],[986,32,1050,32,"projectile"],[986,42,1050,42],[986,43,1050,43,"targetX"],[986,50,1050,50],[987,18,1051,16],[987,22,1051,22,"impactY"],[987,29,1051,29],[987,32,1051,32,"projectile"],[987,42,1051,42],[987,43,1051,43,"targetY"],[987,50,1051,50],[988,18,1052,16],[988,22,1052,22,"enemiesKilled"],[988,35,1052,50],[988,38,1052,53],[988,40,1052,55],[990,18,1054,16],[991,18,1055,16,"newState"],[991,26,1055,24],[991,27,1055,25,"enemies"],[991,34,1055,32],[991,37,1055,35,"newState"],[991,45,1055,43],[991,46,1055,44,"enemies"],[991,53,1055,51],[991,54,1055,52,"map"],[991,57,1055,55],[991,58,1055,56,"enemy"],[991,63,1055,61],[991,67,1055,65],[992,20,1056,18],[992,24,1056,22,"enemy"],[992,29,1056,27],[992,30,1056,28,"health"],[992,36,1056,34],[992,40,1056,38],[992,41,1056,39],[992,45,1056,43,"enemy"],[992,50,1056,48],[992,51,1056,49,"markedForDeath"],[992,65,1056,63],[992,67,1056,65],[992,74,1056,72,"enemy"],[992,79,1056,77],[993,20,1058,18],[993,24,1058,24,"enemyX"],[993,30,1058,30],[993,33,1058,33,"enemy"],[993,38,1058,38],[993,39,1058,39,"position"],[993,47,1058,47],[993,48,1058,48,"x"],[993,49,1058,49],[993,52,1058,52],[993,56,1058,56],[993,57,1058,57],[993,58,1058,58],[994,20,1059,18],[994,24,1059,24,"enemyY"],[994,30,1059,30],[994,33,1059,33,"enemy"],[994,38,1059,38],[994,39,1059,39,"position"],[994,47,1059,47],[994,48,1059,48,"y"],[994,49,1059,49],[994,52,1059,52],[994,56,1059,56],[995,20,1060,18],[995,24,1060,24,"distance"],[995,32,1060,32],[995,35,1060,35,"Math"],[995,39,1060,39],[995,40,1060,40,"sqrt"],[995,44,1060,44],[995,45,1060,45,"Math"],[995,49,1060,49],[995,50,1060,50,"pow"],[995,53,1060,53],[995,54,1060,54,"enemyX"],[995,60,1060,60],[995,63,1060,63,"impactX"],[995,70,1060,70],[995,72,1060,72],[995,73,1060,73],[995,74,1060,74],[995,77,1060,77,"Math"],[995,81,1060,81],[995,82,1060,82,"pow"],[995,85,1060,85],[995,86,1060,86,"enemyY"],[995,92,1060,92],[995,95,1060,95,"impactY"],[995,102,1060,102],[995,104,1060,104],[995,105,1060,105],[995,106,1060,106],[995,107,1060,107],[996,20,1062,18,"console"],[996,27,1062,25],[996,28,1062,26,"log"],[996,31,1062,29],[996,32,1062,30],[996,58,1062,56,"enemy"],[996,63,1062,61],[996,64,1062,62,"name"],[996,68,1062,66],[996,76,1062,74,"enemyX"],[996,82,1062,80],[996,87,1062,85,"enemyY"],[996,93,1062,91],[996,109,1062,107,"impactX"],[996,116,1062,114],[996,121,1062,119,"impactY"],[996,128,1062,126],[996,135,1062,133,"distance"],[996,143,1062,141],[996,144,1062,142,"toFixed"],[996,151,1062,149],[996,152,1062,150],[996,153,1062,151],[996,154,1062,152],[996,169,1062,167,"projectile"],[996,179,1062,177],[996,180,1062,178,"aoeRadius"],[996,189,1062,187],[996,194,1062,192],[996,195,1062,193],[997,20,1064,18],[997,24,1064,22,"distance"],[997,32,1064,30],[997,36,1064,34,"projectile"],[997,46,1064,44],[997,47,1064,45,"aoeRadius"],[997,56,1064,54],[997,58,1064,56],[998,22,1065,20],[999,22,1066,20],[999,26,1066,26,"newHealth"],[999,35,1066,35],[999,38,1066,38,"Math"],[999,42,1066,42],[999,43,1066,43,"max"],[999,46,1066,46],[999,47,1066,47],[999,48,1066,48],[999,50,1066,50,"enemy"],[999,55,1066,55],[999,56,1066,56,"health"],[999,62,1066,62],[999,65,1066,65,"projectile"],[999,75,1066,75],[999,76,1066,76,"damage"],[999,82,1066,82],[999,83,1066,83],[1000,22,1068,20,"console"],[1000,29,1068,27],[1000,30,1068,28,"log"],[1000,33,1068,31],[1000,34,1068,32],[1000,52,1068,50,"enemy"],[1000,57,1068,55],[1000,58,1068,56,"name"],[1000,62,1068,60],[1000,74,1068,72,"projectile"],[1000,84,1068,82],[1000,85,1068,83,"damage"],[1000,91,1068,89],[1000,103,1068,101,"enemy"],[1000,108,1068,106],[1000,109,1068,107,"health"],[1000,115,1068,113],[1000,122,1068,120,"newHealth"],[1000,131,1068,129],[1000,134,1068,132],[1000,135,1068,133],[1002,22,1070,20],[1003,22,1071,20],[1003,26,1071,24,"newHealth"],[1003,35,1071,33],[1003,39,1071,37],[1003,40,1071,38],[1003,44,1071,42,"enemy"],[1003,49,1071,47],[1003,50,1071,48,"health"],[1003,56,1071,54],[1003,59,1071,57],[1003,60,1071,58],[1003,62,1071,60],[1004,24,1072,22,"console"],[1004,31,1072,29],[1004,32,1072,30,"log"],[1004,35,1072,33],[1004,36,1072,34],[1004,52,1072,50,"enemy"],[1004,57,1072,55],[1004,58,1072,56,"name"],[1004,62,1072,60],[1004,76,1072,74,"projectile"],[1004,86,1072,84],[1004,87,1072,85,"abilityName"],[1004,98,1072,96],[1004,101,1072,99],[1004,102,1072,100],[1005,24,1073,22,"enemiesKilled"],[1005,37,1073,35],[1005,38,1073,36,"push"],[1005,42,1073,40],[1005,43,1073,41,"enemy"],[1005,48,1073,46],[1005,49,1073,47],[1005,50,1073,48],[1005,51,1073,49],[1007,24,1075,22],[1007,31,1075,29],[1008,26,1076,24],[1008,29,1076,27,"enemy"],[1008,34,1076,32],[1009,26,1077,24,"health"],[1009,32,1077,30],[1009,34,1077,32],[1009,35,1077,33],[1010,26,1078,24,"markedForDeath"],[1010,40,1078,38],[1010,42,1078,40],[1010,46,1078,44],[1011,26,1079,24,"lastDamaged"],[1011,37,1079,35],[1011,39,1079,37,"combatEngine"],[1011,58,1079,49],[1011,59,1079,49,"combatEngine"],[1011,71,1079,49],[1011,72,1079,50,"getCurrentTick"],[1011,86,1079,64],[1011,87,1079,65],[1012,24,1080,22],[1012,25,1080,23],[1013,22,1081,20],[1013,23,1081,21],[1013,29,1081,27],[1014,24,1082,22],[1014,31,1082,29],[1015,26,1083,24],[1015,29,1083,27,"enemy"],[1015,34,1083,32],[1016,26,1084,24,"health"],[1016,32,1084,30],[1016,34,1084,32,"newHealth"],[1016,43,1084,41],[1017,26,1085,24,"lastDamaged"],[1017,37,1085,35],[1017,39,1085,37,"combatEngine"],[1017,58,1085,49],[1017,59,1085,49,"combatEngine"],[1017,71,1085,49],[1017,72,1085,50,"getCurrentTick"],[1017,86,1085,64],[1017,87,1085,65],[1018,24,1086,22],[1018,25,1086,23],[1019,22,1087,20],[1020,20,1088,18],[1021,20,1090,18],[1021,27,1090,25,"enemy"],[1021,32,1090,30],[1021,33,1090,31],[1021,34,1090,32],[1022,18,1091,16],[1022,19,1091,17],[1022,20,1091,18],[1024,18,1093,16],[1025,18,1094,16],[1025,22,1094,20,"enemiesKilled"],[1025,35,1094,33],[1025,36,1094,34,"length"],[1025,42,1094,40],[1025,45,1094,43],[1025,46,1094,44],[1025,48,1094,46],[1026,20,1095,18,"console"],[1026,27,1095,25],[1026,28,1095,26,"log"],[1026,31,1095,29],[1026,32,1095,30],[1026,52,1095,50,"enemiesKilled"],[1026,65,1095,63],[1026,66,1095,64,"length"],[1026,72,1095,70],[1026,94,1095,92,"projectile"],[1026,104,1095,102],[1026,105,1095,103,"abilityName"],[1026,116,1095,114],[1026,118,1095,116],[1026,119,1095,117],[1027,20,1096,18,"setTimeout"],[1027,30,1096,28],[1027,31,1096,29],[1027,37,1096,35],[1028,22,1097,20,"enemiesKilled"],[1028,35,1097,33],[1028,36,1097,34,"forEach"],[1028,43,1097,41],[1028,44,1097,42,"enemy"],[1028,49,1097,47],[1028,53,1097,51,"handleEnemyKill"],[1028,68,1097,66],[1028,69,1097,67,"enemy"],[1028,74,1097,72],[1028,75,1097,73],[1028,76,1097,74],[1029,20,1098,18],[1029,21,1098,19],[1029,23,1098,21],[1029,24,1098,22],[1029,25,1098,23],[1030,18,1099,16],[1031,16,1101,14],[1031,17,1101,15],[1031,23,1101,21],[1032,18,1102,16],[1033,18,1103,16],[1033,22,1103,22,"enemyIndex"],[1033,32,1103,32],[1033,35,1103,35,"newState"],[1033,43,1103,43],[1033,44,1103,44,"enemies"],[1033,51,1103,51],[1033,52,1103,52,"findIndex"],[1033,61,1103,61],[1033,62,1103,62,"e"],[1033,63,1103,63],[1033,67,1103,67,"e"],[1033,68,1103,68],[1033,69,1103,69,"id"],[1033,71,1103,71],[1033,76,1103,76,"projectile"],[1033,86,1103,86],[1033,87,1103,87,"targetEnemyId"],[1033,100,1103,100],[1033,101,1103,101],[1034,18,1105,16],[1034,22,1105,20,"enemyIndex"],[1034,32,1105,30],[1034,36,1105,34],[1034,37,1105,35],[1034,41,1105,39,"newState"],[1034,49,1105,47],[1034,50,1105,48,"enemies"],[1034,57,1105,55],[1034,58,1105,56,"enemyIndex"],[1034,68,1105,66],[1034,69,1105,67],[1034,70,1105,68,"health"],[1034,76,1105,74],[1034,79,1105,77],[1034,80,1105,78],[1034,84,1105,82],[1034,85,1105,83,"newState"],[1034,93,1105,91],[1034,94,1105,92,"enemies"],[1034,101,1105,99],[1034,102,1105,100,"enemyIndex"],[1034,112,1105,110],[1034,113,1105,111],[1034,114,1105,112,"markedForDeath"],[1034,128,1105,126],[1034,130,1105,128],[1035,20,1106,18,"newState"],[1035,28,1106,26],[1035,29,1106,27,"enemies"],[1035,36,1106,34],[1035,39,1106,37],[1035,40,1106,38],[1035,43,1106,41,"newState"],[1035,51,1106,49],[1035,52,1106,50,"enemies"],[1035,59,1106,57],[1035,60,1106,58],[1036,20,1107,18],[1036,24,1107,24,"enemy"],[1036,29,1107,29],[1036,32,1107,32,"newState"],[1036,40,1107,40],[1036,41,1107,41,"enemies"],[1036,48,1107,48],[1036,49,1107,49,"enemyIndex"],[1036,59,1107,59],[1036,60,1107,60],[1037,20,1108,18],[1037,24,1108,24,"newHealth"],[1037,33,1108,33],[1037,36,1108,36,"Math"],[1037,40,1108,40],[1037,41,1108,41,"max"],[1037,44,1108,44],[1037,45,1108,45],[1037,46,1108,46],[1037,48,1108,48,"enemy"],[1037,53,1108,53],[1037,54,1108,54,"health"],[1037,60,1108,60],[1037,63,1108,63,"projectile"],[1037,73,1108,73],[1037,74,1108,74,"damage"],[1037,80,1108,80],[1037,81,1108,81],[1038,20,1110,18,"newState"],[1038,28,1110,26],[1038,29,1110,27,"enemies"],[1038,36,1110,34],[1038,37,1110,35,"enemyIndex"],[1038,47,1110,45],[1038,48,1110,46],[1038,51,1110,49],[1039,22,1111,20],[1039,25,1111,23,"enemy"],[1039,30,1111,28],[1040,22,1112,20,"health"],[1040,28,1112,26],[1040,30,1112,28,"newHealth"],[1040,39,1112,37],[1041,22,1113,20,"lastDamaged"],[1041,33,1113,31],[1041,35,1113,33,"combatEngine"],[1041,54,1113,45],[1041,55,1113,45,"combatEngine"],[1041,67,1113,45],[1041,68,1113,46,"getCurrentTick"],[1041,82,1113,60],[1041,83,1113,61],[1042,20,1114,18],[1042,21,1114,19],[1043,20,1116,18,"console"],[1043,27,1116,25],[1043,28,1116,26,"log"],[1043,31,1116,29],[1043,32,1116,30],[1043,60,1116,58,"enemy"],[1043,65,1116,63],[1043,66,1116,64,"name"],[1043,70,1116,68],[1043,82,1116,80,"newHealth"],[1043,91,1116,89],[1043,95,1116,93,"enemy"],[1043,100,1116,98],[1043,101,1116,99,"maxHealth"],[1043,110,1116,108],[1043,112,1116,110],[1043,113,1116,111],[1045,20,1118,18],[1046,20,1119,18],[1046,24,1119,22,"newHealth"],[1046,33,1119,31],[1046,37,1119,35],[1046,38,1119,36],[1046,42,1119,40,"enemy"],[1046,47,1119,45],[1046,48,1119,46,"health"],[1046,54,1119,52],[1046,57,1119,55],[1046,58,1119,56],[1046,60,1119,58],[1047,22,1120,20,"console"],[1047,29,1120,27],[1047,30,1120,28,"log"],[1047,33,1120,31],[1047,34,1120,32],[1047,54,1120,52,"enemy"],[1047,59,1120,57],[1047,60,1120,58,"name"],[1047,64,1120,62],[1047,78,1120,76,"projectile"],[1047,88,1120,86],[1047,89,1120,87,"abilityName"],[1047,100,1120,98],[1047,136,1120,134],[1047,137,1120,135],[1049,22,1122,20],[1050,22,1123,20,"newState"],[1050,30,1123,28],[1050,31,1123,29,"enemies"],[1050,38,1123,36],[1050,39,1123,37,"enemyIndex"],[1050,49,1123,47],[1050,50,1123,48],[1050,53,1123,51],[1051,24,1124,22],[1051,27,1124,25,"newState"],[1051,35,1124,33],[1051,36,1124,34,"enemies"],[1051,43,1124,41],[1051,44,1124,42,"enemyIndex"],[1051,54,1124,52],[1051,55,1124,53],[1052,24,1125,22,"health"],[1052,30,1125,28],[1052,32,1125,30],[1052,33,1125,31],[1053,24,1126,22,"isDying"],[1053,31,1126,29],[1053,33,1126,31],[1053,37,1126,35],[1054,24,1127,22,"deathStartTime"],[1054,38,1127,36],[1054,40,1127,38,"Date"],[1054,44,1127,42],[1054,45,1127,43,"now"],[1054,48,1127,46],[1054,49,1127,47],[1055,22,1128,20],[1055,23,1128,21],[1056,20,1129,18],[1056,21,1129,19],[1056,27,1129,25],[1056,31,1129,29,"enemy"],[1056,36,1129,34],[1056,37,1129,35,"health"],[1056,43,1129,41],[1056,46,1129,44],[1056,47,1129,45],[1056,49,1129,47],[1057,22,1130,20,"console"],[1057,29,1130,27],[1057,30,1130,28,"log"],[1057,33,1130,31],[1057,34,1130,32],[1057,48,1130,46,"enemy"],[1057,53,1130,51],[1057,54,1130,52,"name"],[1057,58,1130,56],[1057,70,1130,68,"projectile"],[1057,80,1130,78],[1057,81,1130,79,"damage"],[1057,87,1130,85],[1057,99,1130,97,"enemy"],[1057,104,1130,102],[1057,105,1130,103,"health"],[1057,111,1130,109],[1057,117,1130,115,"newHealth"],[1057,126,1130,124],[1057,129,1130,127],[1057,130,1130,128],[1058,20,1131,18],[1059,18,1132,16],[1060,16,1133,14],[1061,16,1135,14],[1061,23,1135,21,"newState"],[1061,31,1135,29],[1062,14,1136,12],[1062,15,1136,13],[1062,16,1136,14],[1063,12,1137,10],[1065,12,1139,10],[1066,12,1140,10],[1066,16,1140,14,"progress"],[1066,24,1140,22],[1066,28,1140,26],[1066,31,1140,29],[1066,33,1140,31],[1067,14,1141,12],[1067,21,1141,19],[1067,25,1141,23],[1068,12,1142,10],[1069,12,1144,10],[1069,19,1144,17,"projectile"],[1069,29,1144,27],[1070,10,1145,8],[1070,11,1145,9],[1070,12,1145,10],[1070,13,1145,11,"filter"],[1070,19,1145,17],[1070,20,1145,18,"Boolean"],[1070,27,1145,25],[1070,28,1145,26],[1071,8,1146,6],[1071,9,1146,7],[1071,10,1146,8],[1072,6,1147,4],[1072,7,1147,5],[1074,6,1149,4],[1075,6,1150,4],[1075,10,1150,10,"impactInterval"],[1075,24,1150,24],[1075,27,1150,27,"setInterval"],[1075,38,1150,38],[1075,39,1150,39,"processProjectileImpacts"],[1075,63,1150,63],[1075,65,1150,65],[1075,67,1150,67],[1075,68,1150,68],[1076,6,1151,4],[1076,13,1151,11],[1076,19,1151,17,"clearInterval"],[1076,32,1151,30],[1076,33,1151,31,"impactInterval"],[1076,47,1151,45],[1076,48,1151,46],[1077,4,1152,2],[1077,5,1152,3],[1077,7,1152,5],[1077,8,1152,6,"handleEnemyKill"],[1077,23,1152,21],[1077,24,1152,22],[1077,25,1152,23],[1079,4,1154,2],[1080,4,1155,2],[1080,8,1155,8,"saveAbilityData"],[1080,23,1155,23],[1080,26,1155,26],[1080,30,1155,26,"useCallback"],[1080,36,1155,37],[1080,37,1155,37,"useCallback"],[1080,48,1155,37],[1080,50,1155,38],[1080,56,1155,44],[1081,6,1156,4],[1081,10,1156,8,"combatState"],[1081,21,1156,19],[1081,22,1156,20,"abilityManager"],[1081,36,1156,34],[1081,38,1156,36],[1082,8,1157,6],[1082,12,1157,12,"abilityData"],[1082,23,1157,23],[1082,26,1157,26,"combatState"],[1082,37,1157,37],[1082,38,1157,38,"abilityManager"],[1082,52,1157,52],[1082,53,1157,53,"getSaveData"],[1082,64,1157,64],[1082,65,1157,65],[1082,66,1157,66],[1083,8,1158,6,"console"],[1083,15,1158,13],[1083,16,1158,14,"log"],[1083,19,1158,17],[1083,20,1158,18],[1083,70,1158,68],[1083,72,1158,70,"abilityData"],[1083,83,1158,81],[1083,84,1158,82],[1084,8,1159,6,"game"],[1084,12,1159,10],[1084,13,1159,11,"updateAbilityData"],[1084,30,1159,28],[1084,31,1159,29,"abilityData"],[1084,42,1159,40],[1084,43,1159,41],[1085,6,1160,4],[1086,4,1161,2],[1086,5,1161,3],[1086,7,1161,5],[1086,8,1161,6,"combatState"],[1086,19,1161,17],[1086,20,1161,18,"abilityManager"],[1086,34,1161,32],[1086,36,1161,34,"game"],[1086,40,1161,38],[1086,41,1161,39,"updateAbilityData"],[1086,58,1161,56],[1086,59,1161,57],[1086,60,1161,58],[1087,4,1163,2],[1087,8,1163,8,"contextValue"],[1087,20,1163,39],[1087,23,1163,42,"React"],[1087,28,1163,47],[1087,29,1163,47,"default"],[1087,36,1163,47],[1087,37,1163,48,"useMemo"],[1087,44,1163,55],[1087,45,1163,56],[1087,52,1163,63],[1088,6,1164,4,"combatState"],[1088,17,1164,15],[1089,6,1165,4,"projectiles"],[1089,17,1165,15],[1090,6,1166,4,"startCombat"],[1090,17,1166,15],[1091,6,1167,4,"stopCombat"],[1091,16,1167,14],[1092,6,1168,4,"equipAbility"],[1092,18,1168,16],[1093,6,1169,4,"handleEnemyKill"],[1093,21,1169,19],[1094,6,1170,4,"getDeck"],[1094,13,1170,11],[1095,6,1171,4,"getAvailableAbilities"],[1095,27,1171,25],[1096,6,1172,4,"upgradeAbility"],[1096,20,1172,18],[1097,6,1173,4,"spawnEnemy"],[1097,16,1173,14],[1098,6,1174,4,"spawnBoss"],[1098,15,1174,13],[1099,6,1175,4,"clearAllEnemies"],[1099,21,1175,19],[1100,6,1176,4,"clearSpecificEnemy"],[1100,24,1176,22],[1101,6,1177,4],[1102,6,1178,4,"findClosestEnemy"],[1102,22,1178,20],[1103,6,1179,4,"updateNinjaPosition"],[1103,25,1179,23],[1104,6,1180,4,"setManualControlActive"],[1104,28,1180,26],[1105,6,1181,4,"lastExplosionTime"],[1105,23,1181,21],[1106,6,1182,4,"useAbilityManually"],[1106,24,1182,22],[1107,6,1182,24],[1108,6,1183,4,"saveAbilityData"],[1108,21,1183,19],[1109,6,1183,21],[1110,6,1184,4,"shadowClone"],[1110,17,1184,15],[1110,19,1184,17,"combatState"],[1110,30,1184,28],[1110,31,1184,29,"shadowClone"],[1110,42,1184,40],[1110,43,1184,42],[1111,4,1185,2],[1111,5,1185,3],[1111,6,1185,4],[1111,8,1185,6],[1112,4,1186,4],[1113,4,1187,4],[1114,4,1188,4,"combatState"],[1114,15,1188,15],[1114,17,1189,4,"projectiles"],[1114,28,1189,15],[1114,30,1190,4,"lastExplosionTime"],[1114,47,1190,21],[1115,4,1191,4],[1116,4,1192,4,"combatState"],[1116,15,1192,15],[1116,16,1192,16,"abilityManager"],[1116,30,1192,30],[1116,32,1193,4,"combatState"],[1116,43,1193,15],[1116,44,1193,16,"enemies"],[1116,51,1193,23],[1116,53,1194,4,"combatState"],[1116,64,1194,15],[1116,65,1194,16,"shadowClone"],[1116,76,1194,27],[1117,4,1194,29],[1118,4,1195,4,"useAbilityManually"],[1118,22,1195,22],[1119,4,1195,24],[1120,4,1196,4,"saveAbilityData"],[1120,19,1196,19],[1120,20,1196,21],[1121,4,1196,21],[1121,5,1197,3],[1121,6,1197,4],[1122,4,1199,2],[1122,24,1200,4],[1122,28,1200,4,"_reactJsxDevRuntime"],[1122,47,1200,4],[1122,48,1200,4,"jsxDEV"],[1122,54,1200,4],[1122,56,1200,5,"CombatContext"],[1122,69,1200,18],[1122,70,1200,19,"Provider"],[1122,78,1200,27],[1123,6,1200,28,"value"],[1123,11,1200,33],[1123,13,1200,35,"contextValue"],[1123,25,1200,48],[1124,6,1200,48,"children"],[1124,14,1200,48],[1124,16,1201,7,"children"],[1125,4,1201,15],[1126,6,1201,15,"fileName"],[1126,14,1201,15],[1126,16,1201,15,"_jsxFileName"],[1126,28,1201,15],[1127,6,1201,15,"lineNumber"],[1127,16,1201,15],[1128,6,1201,15,"columnNumber"],[1128,18,1201,15],[1129,4,1201,15],[1129,11,1202,28],[1129,12,1202,29],[1130,2,1204,0],[1130,3,1204,1],[1131,2,1204,2,"_s4"],[1131,5,1204,2],[1131,6,106,13,"CombatProvider"],[1131,20,106,27],[1132,4,106,27],[1132,12,107,15,"useGame"],[1132,24,107,22],[1132,25,107,22,"useGame"],[1132,32,107,22],[1132,34,108,77,"useZone"],[1132,46,108,84],[1132,47,108,84,"useZone"],[1132,54,108,84],[1133,2,108,84],[1134,2,108,84,"_c"],[1134,4,108,84],[1134,7,106,13,"CombatProvider"],[1134,21,106,27],[1135,2,106,27],[1135,6,106,27,"_c"],[1135,8,106,27],[1136,2,106,27,"$RefreshReg$"],[1136,14,106,27],[1136,15,106,27,"_c"],[1136,17,106,27],[1137,0,106,27],[1137,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","zoneKills.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;GHgB;6CKG;mBHM;4BIa;sDCC,sBD;0BEE;WFG;OJE;+BOoD;6BC+D;mBDG;OPiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KGiB;4BUY;OViB;uBDG;QCG;wBWG,uCX;GLE;mCiBG;oBCY;KDU;GjBI;2BmBG;GnBE;0CoBO;GpBE;6CqBG;GrBG;8BsBG;mBpBG;oDKI,sCL;KoBa;mBCG,oBC,2BD,CD;GtBC;sByBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GzBoB;2B+BG;mBR0C,6BQ;erBG;KqBE;G/BG;yBgCG;GhCsC;8BiCG;GjC4B;wCkCG;mBhCE,uCgC;GlCQ;uCmCG;mBjCC,wCiC;GnCE;uBoCG;GpCE;kBqCE;GrCE;gCsCE;GtCE;yBuCE;GvCE;0BwCG;mBtCE;MsCG;GxCC;qByCM;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C8B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBxBC;sCyBC;2B9Cc;wD+CY;iB/CoC;6BQK;0CwCC,+BxC;mBRC;8DKK,sCL;a8CiC;SzBS;OwBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}