{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player\n                var attackDamage = Math.floor(enemy.stats.attack * (0.8 + Math.random() * 0.4)); // 80-120% of base damage\n                var playerDefense = newState.playerStats.defense;\n                var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.5)); // Defense reduces damage by 50%\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} - ${Math.floor(playerDefense * 0.5)} defense)`);\n\n                // Apply damage to player\n                var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // TODO: Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Game over logic needed here');\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          var _effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== _effectiveStats.attack || newState.playerStats.defense !== _effectiveStats.defense || newState.playerStats.maxHealth !== _effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            var _healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${_effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${_effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${_effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: _effectiveStats.attack,\n              defense: _effectiveStats.defense,\n              maxHealth: _effectiveStats.health,\n              health: Math.floor(_effectiveStats.health * _healthRatio),\n              // Maintain health ratio\n              critChance: _effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: _effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: _effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1047,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1097,2],[27,6,1097,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1097,2],[27,42,1097,2,"require"],[27,49,1097,2],[27,50,1097,2,"_dependencyMap"],[27,64,1097,2],[28,2,1097,2],[28,6,1097,2,"_slicedToArray"],[28,20,1097,2],[28,23,1097,2,"_interopDefault"],[28,38,1097,2],[28,39,1097,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1097,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"health"],[224,186,256,68],[224,188,256,70],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"health"],[225,249,258,247],[225,251,258,249],[225,252,258,250],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"health"],[229,72,262,70],[229,74,262,72],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"health"],[231,39,264,37],[231,42,264,40,"newState"],[231,50,264,48],[231,51,264,49,"playerStats"],[231,62,264,60],[231,63,264,61,"maxHealth"],[231,72,264,70],[231,75,264,73],[231,78,264,76],[231,80,264,78],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"health"],[234,60,268,58],[234,63,268,61,"healthRatio"],[234,74,268,72],[234,75,268,73],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"health"],[235,76,269,74],[235,78,269,76],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"health"],[237,49,271,47],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"health"],[245,46,280,44],[246,14,281,12,"health"],[246,20,281,18],[246,22,281,20,"newHealth"],[246,31,281,29],[247,14,281,31],[248,14,282,12,"critChance"],[248,24,282,22],[248,26,282,24,"effectiveStats"],[248,40,282,38],[248,41,282,39,"critChance"],[248,51,282,49],[248,55,282,53,"newState"],[248,63,282,61],[248,64,282,62,"playerStats"],[248,75,282,73],[248,76,282,74,"critChance"],[248,86,282,84],[249,14,283,12,"critDamage"],[249,24,283,22],[249,26,283,24,"effectiveStats"],[249,40,283,38],[249,41,283,39,"critDamage"],[249,51,283,49],[249,55,283,53,"newState"],[249,63,283,61],[249,64,283,62,"playerStats"],[249,75,283,73],[249,76,283,74,"critDamage"],[249,86,283,84],[250,14,284,12,"cooldownReduction"],[250,31,284,29],[250,33,284,31,"effectiveStats"],[250,47,284,45],[250,48,284,46,"cooldownReduction"],[250,65,284,63],[250,69,284,67,"newState"],[250,77,284,75],[250,78,284,76,"playerStats"],[250,89,284,87],[250,90,284,88,"cooldownReduction"],[251,12,285,10],[251,13,285,11],[252,10,286,8],[253,8,287,6],[255,8,289,6],[256,8,290,6,"newState"],[256,16,290,14],[256,17,290,15,"enemies"],[256,24,290,22],[256,25,290,23,"forEach"],[256,32,290,30],[256,33,290,31,"enemy"],[256,38,290,36],[256,42,290,40],[257,10,291,8],[257,14,291,12],[257,15,291,13,"enemy"],[257,20,291,18],[257,21,291,19,"isBoss"],[257,27,291,25],[257,29,291,27],[258,12,291,29],[259,12,292,10],[260,12,293,10],[260,16,293,16,"MOVEMENT_SPEED"],[260,30,293,30],[260,33,293,33],[260,37,293,37],[260,38,293,38],[260,39,293,39],[261,12,294,10],[261,16,294,16,"SCREEN_WIDTH"],[261,28,294,28],[261,31,294,31],[261,34,294,34],[262,12,295,10],[262,16,295,16,"GAME_AREA_HEIGHT"],[262,32,295,32],[262,35,295,35],[262,38,295,38],[262,39,295,39],[262,40,295,40],[263,12,296,10],[263,16,296,16,"ENEMY_SIZE"],[263,26,296,26],[263,29,296,29],[263,31,296,31],[265,12,298,10],[266,12,299,10],[266,16,299,16,"playerX"],[266,23,299,23],[266,26,299,26,"currentNinjaPosition"],[266,46,299,46],[266,47,299,47,"x"],[266,48,299,48],[267,12,300,10],[267,16,300,16,"playerY"],[267,23,300,23],[267,26,300,26,"currentNinjaPosition"],[267,46,300,46],[267,47,300,47,"y"],[267,48,300,48],[269,12,302,10],[270,12,303,10],[270,16,303,16,"deltaX"],[270,22,303,22],[270,25,303,25,"playerX"],[270,32,303,32],[270,35,303,35,"enemy"],[270,40,303,40],[270,41,303,41,"position"],[270,49,303,49],[270,50,303,50,"x"],[270,51,303,51],[271,12,304,10],[271,16,304,16,"deltaY"],[271,22,304,22],[271,25,304,25,"playerY"],[271,32,304,32],[271,35,304,35,"enemy"],[271,40,304,40],[271,41,304,41,"position"],[271,49,304,49],[271,50,304,50,"y"],[271,51,304,51],[272,12,305,10],[272,16,305,16,"distance"],[272,24,305,24],[272,27,305,27,"Math"],[272,31,305,31],[272,32,305,32,"sqrt"],[272,36,305,36],[272,37,305,37,"deltaX"],[272,43,305,43],[272,46,305,46,"deltaX"],[272,52,305,52],[272,55,305,55,"deltaY"],[272,61,305,61],[272,64,305,64,"deltaY"],[272,70,305,70],[272,71,305,71],[274,12,307,10],[275,12,308,10],[275,16,308,16,"ATTACK_RANGE"],[275,28,308,28],[275,31,308,31],[275,33,308,33],[275,34,308,34],[275,35,308,35],[276,12,309,10],[276,16,309,16,"ATTACK_COOLDOWN"],[276,31,309,31],[276,34,309,34],[276,36,309,36],[276,37,309,37],[276,38,309,38],[278,12,311,10],[278,16,311,14,"distance"],[278,24,311,22],[278,28,311,26,"ATTACK_RANGE"],[278,40,311,38],[278,42,311,40],[279,14,312,12],[280,14,313,12],[280,18,313,16],[280,19,313,17,"enemy"],[280,24,313,22],[280,25,313,23,"lastAttackTick"],[280,39,313,37],[280,41,313,39,"enemy"],[280,46,313,44],[280,47,313,45,"lastAttackTick"],[280,61,313,59],[280,64,313,62],[280,65,313,63],[281,14,315,12],[281,18,315,16,"newState"],[281,26,315,24],[281,27,315,25,"currentTick"],[281,38,315,36],[281,41,315,39,"enemy"],[281,46,315,44],[281,47,315,45,"lastAttackTick"],[281,61,315,59],[281,65,315,63,"ATTACK_COOLDOWN"],[281,80,315,78],[281,82,315,80],[282,16,316,14],[283,16,317,14],[283,20,317,20,"attackDamage"],[283,32,317,32],[283,35,317,35,"Math"],[283,39,317,39],[283,40,317,40,"floor"],[283,45,317,45],[283,46,317,46,"enemy"],[283,51,317,51],[283,52,317,52,"stats"],[283,57,317,57],[283,58,317,58,"attack"],[283,64,317,64],[283,68,317,68],[283,71,317,71],[283,74,317,74,"Math"],[283,78,317,78],[283,79,317,79,"random"],[283,85,317,85],[283,86,317,86],[283,87,317,87],[283,90,317,90],[283,93,317,93],[283,94,317,94],[283,95,317,95],[283,96,317,96],[283,97,317,97],[284,16,318,14],[284,20,318,20,"playerDefense"],[284,33,318,33],[284,36,318,36,"newState"],[284,44,318,44],[284,45,318,45,"playerStats"],[284,56,318,56],[284,57,318,57,"defense"],[284,64,318,64],[285,16,319,14],[285,20,319,20,"finalDamage"],[285,31,319,31],[285,34,319,34,"Math"],[285,38,319,38],[285,39,319,39,"max"],[285,42,319,42],[285,43,319,43],[285,44,319,44],[285,46,319,46,"attackDamage"],[285,58,319,58],[285,61,319,61,"Math"],[285,65,319,65],[285,66,319,66,"floor"],[285,71,319,71],[285,72,319,72,"playerDefense"],[285,85,319,85],[285,88,319,88],[285,91,319,91],[285,92,319,92],[285,93,319,93],[285,94,319,94],[285,95,319,95],[287,16,321,14,"console"],[287,23,321,21],[287,24,321,22,"log"],[287,27,321,25],[287,28,321,26],[287,49,321,47,"enemy"],[287,54,321,52],[287,55,321,53,"name"],[287,59,321,57],[287,82,321,80,"finalDamage"],[287,93,321,91],[287,105,321,103,"attackDamage"],[287,117,321,115],[287,123,321,121,"Math"],[287,127,321,125],[287,128,321,126,"floor"],[287,133,321,131],[287,134,321,132,"playerDefense"],[287,147,321,145],[287,150,321,148],[287,153,321,151],[287,154,321,152],[287,165,321,163],[287,166,321,164],[289,16,323,14],[290,16,324,14],[290,20,324,20,"newPlayerHealth"],[290,35,324,35],[290,38,324,38,"Math"],[290,42,324,42],[290,43,324,43,"max"],[290,46,324,46],[290,47,324,47],[290,48,324,48],[290,50,324,50,"newState"],[290,58,324,58],[290,59,324,59,"playerStats"],[290,70,324,70],[290,71,324,71,"health"],[290,77,324,77],[290,80,324,80,"finalDamage"],[290,91,324,91],[290,92,324,92],[291,16,325,14,"newState"],[291,24,325,22],[291,25,325,23,"playerStats"],[291,36,325,34],[291,37,325,35,"health"],[291,43,325,41],[291,46,325,44,"newPlayerHealth"],[291,61,325,59],[292,16,327,14,"console"],[292,23,327,21],[292,24,327,22,"log"],[292,27,327,25],[292,28,327,26],[292,49,327,47,"newState"],[292,57,327,55],[292,58,327,56,"playerStats"],[292,69,327,67],[292,70,327,68,"health"],[292,76,327,74],[292,80,327,78,"newState"],[292,88,327,86],[292,89,327,87,"playerStats"],[292,100,327,98],[292,101,327,99,"maxHealth"],[292,110,327,108],[292,120,327,118,"finalDamage"],[292,131,327,129],[292,141,327,139],[292,142,327,140],[294,16,329,14],[295,16,330,14,"enemy"],[295,21,330,19],[295,22,330,20,"lastAttackTick"],[295,36,330,34],[295,39,330,37,"newState"],[295,47,330,45],[295,48,330,46,"currentTick"],[295,59,330,57],[297,16,332,14],[298,16,333,14],[298,20,333,18,"newPlayerHealth"],[298,35,333,33],[298,39,333,37],[298,40,333,38],[298,42,333,40],[299,18,334,16,"console"],[299,25,334,23],[299,26,334,24,"log"],[299,29,334,27],[299,30,334,28],[299,79,334,77],[299,80,334,78],[300,16,335,14],[301,14,336,12],[302,12,337,10],[302,13,337,11],[302,19,337,17],[303,14,338,12],[304,14,339,12],[305,14,340,12],[305,18,340,16,"distance"],[305,26,340,24],[305,29,340,27],[305,31,340,29],[305,33,340,31],[306,16,341,14],[307,16,342,14],[307,20,342,20,"normalizedX"],[307,31,342,31],[307,34,342,34,"deltaX"],[307,40,342,40],[307,43,342,43,"distance"],[307,51,342,51],[308,16,343,14],[308,20,343,20,"normalizedY"],[308,31,343,31],[308,34,343,34,"deltaY"],[308,40,343,40],[308,43,343,43,"distance"],[308,51,343,51],[310,16,345,14],[311,16,346,14],[311,20,346,20,"randomFactor"],[311,32,346,32],[311,35,346,35],[311,38,346,38],[311,39,346,39],[311,40,346,40],[312,16,347,14],[312,20,347,20,"finalX"],[312,26,347,26],[312,29,347,29,"normalizedX"],[312,40,347,40],[312,43,347,43],[312,44,347,44,"Math"],[312,48,347,48],[312,49,347,49,"random"],[312,55,347,55],[312,56,347,56],[312,57,347,57],[312,60,347,60],[312,63,347,63],[312,67,347,67,"randomFactor"],[312,79,347,79],[313,16,348,14],[313,20,348,20,"finalY"],[313,26,348,26],[313,29,348,29,"normalizedY"],[313,40,348,40],[313,43,348,43],[313,44,348,44,"Math"],[313,48,348,48],[313,49,348,49,"random"],[313,55,348,55],[313,56,348,56],[313,57,348,57],[313,60,348,60],[313,63,348,63],[313,67,348,67,"randomFactor"],[313,79,348,79],[315,16,350,14],[316,16,351,14],[316,20,351,18,"newX"],[316,24,351,22],[316,27,351,25,"enemy"],[316,32,351,30],[316,33,351,31,"position"],[316,41,351,39],[316,42,351,40,"x"],[316,43,351,41],[316,46,351,45,"finalX"],[316,52,351,51],[316,55,351,54,"MOVEMENT_SPEED"],[316,69,351,69],[317,16,352,14],[317,20,352,18,"newY"],[317,24,352,22],[317,27,352,25,"enemy"],[317,32,352,30],[317,33,352,31,"position"],[317,41,352,39],[317,42,352,40,"y"],[317,43,352,41],[317,46,352,45,"finalY"],[317,52,352,51],[317,55,352,54,"MOVEMENT_SPEED"],[317,69,352,69],[319,16,354,14],[320,16,355,14,"newX"],[320,20,355,18],[320,23,355,21,"Math"],[320,27,355,25],[320,28,355,26,"max"],[320,31,355,29],[320,32,355,30],[320,33,355,31],[320,35,355,33,"Math"],[320,39,355,37],[320,40,355,38,"min"],[320,43,355,41],[320,44,355,42,"SCREEN_WIDTH"],[320,56,355,54],[320,59,355,57,"ENEMY_SIZE"],[320,69,355,67],[320,71,355,69,"newX"],[320,75,355,73],[320,76,355,74],[320,77,355,75],[321,16,356,14,"newY"],[321,20,356,18],[321,23,356,21,"Math"],[321,27,356,25],[321,28,356,26,"max"],[321,31,356,29],[321,32,356,30],[321,33,356,31],[321,35,356,33,"Math"],[321,39,356,37],[321,40,356,38,"min"],[321,43,356,41],[321,44,356,42,"GAME_AREA_HEIGHT"],[321,60,356,58],[321,63,356,61,"ENEMY_SIZE"],[321,73,356,71],[321,75,356,73,"newY"],[321,79,356,77],[321,80,356,78],[321,81,356,79],[323,16,358,14],[324,16,359,14,"enemy"],[324,21,359,19],[324,22,359,20,"position"],[324,30,359,28],[324,31,359,29,"x"],[324,32,359,30],[324,35,359,33,"newX"],[324,39,359,37],[325,16,360,14,"enemy"],[325,21,360,19],[325,22,360,20,"position"],[325,30,360,28],[325,31,360,29,"y"],[325,32,360,30],[325,35,360,33,"newY"],[325,39,360,37],[326,14,361,12],[327,14,362,12],[328,12,363,10],[329,10,364,8],[330,8,365,6],[330,9,365,7],[330,10,365,8],[332,8,367,6],[333,8,368,6],[333,12,368,10,"newState"],[333,20,368,18],[333,21,368,19,"playerStats"],[333,32,368,30],[333,36,368,34,"game"],[333,40,368,38],[333,41,368,39,"gameState"],[333,50,368,48],[333,51,368,49,"ninja"],[333,56,368,54],[333,58,368,56],[334,10,369,8],[334,14,369,14,"effectiveStats"],[334,29,369,28],[334,32,369,31,"game"],[334,36,369,35],[334,37,369,36,"getEffectiveStats"],[334,54,369,53],[334,55,369,54],[334,56,369,55],[336,10,371,8],[337,10,372,8],[337,14,372,12,"newState"],[337,22,372,20],[337,23,372,21,"playerStats"],[337,34,372,32],[337,35,372,33,"attack"],[337,41,372,39],[337,46,372,44,"effectiveStats"],[337,61,372,58],[337,62,372,59,"attack"],[337,68,372,65],[337,72,373,12,"newState"],[337,80,373,20],[337,81,373,21,"playerStats"],[337,92,373,32],[337,93,373,33,"defense"],[337,100,373,40],[337,105,373,45,"effectiveStats"],[337,120,373,59],[337,121,373,60,"defense"],[337,128,373,67],[337,132,374,12,"newState"],[337,140,374,20],[337,141,374,21,"playerStats"],[337,152,374,32],[337,153,374,33,"maxHealth"],[337,162,374,42],[337,167,374,47,"effectiveStats"],[337,182,374,61],[337,183,374,62,"health"],[337,189,374,68],[337,191,374,70],[338,12,376,10],[339,12,377,10],[339,16,377,16,"healthRatio"],[339,28,377,27],[339,31,377,30,"newState"],[339,39,377,38],[339,40,377,39,"playerStats"],[339,51,377,50],[339,52,377,51,"maxHealth"],[339,61,377,60],[339,64,377,63],[339,65,377,64],[339,68,378,12,"newState"],[339,76,378,20],[339,77,378,21,"playerStats"],[339,88,378,32],[339,89,378,33,"health"],[339,95,378,39],[339,98,378,42,"newState"],[339,106,378,50],[339,107,378,51,"playerStats"],[339,118,378,62],[339,119,378,63,"maxHealth"],[339,128,378,72],[339,131,378,75],[339,132,378,76],[340,12,380,10,"console"],[340,19,380,17],[340,20,380,18,"log"],[340,23,380,21],[340,24,380,22],[340,58,380,56,"newState"],[340,66,380,64],[340,67,380,65,"playerStats"],[340,78,380,76],[340,79,380,77,"attack"],[340,85,380,83],[340,91,380,89,"effectiveStats"],[340,106,380,103],[340,107,380,104,"attack"],[340,113,380,110],[340,126,380,123,"newState"],[340,134,380,131],[340,135,380,132,"playerStats"],[340,146,380,143],[340,147,380,144,"defense"],[340,154,380,151],[340,160,380,157,"effectiveStats"],[340,175,380,171],[340,176,380,172,"defense"],[340,183,380,179],[340,194,380,190,"newState"],[340,202,380,198],[340,203,380,199,"playerStats"],[340,214,380,210],[340,215,380,211,"maxHealth"],[340,224,380,220],[340,230,380,226,"effectiveStats"],[340,245,380,240],[340,246,380,241,"health"],[340,252,380,247],[340,254,380,249],[340,255,380,250],[341,12,382,10,"newState"],[341,20,382,18],[341,21,382,19,"playerStats"],[341,32,382,30],[341,35,382,33],[342,14,383,12],[342,17,383,15,"newState"],[342,25,383,23],[342,26,383,24,"playerStats"],[342,37,383,35],[343,14,384,12,"attack"],[343,20,384,18],[343,22,384,20,"effectiveStats"],[343,37,384,34],[343,38,384,35,"attack"],[343,44,384,41],[344,14,385,12,"defense"],[344,21,385,19],[344,23,385,21,"effectiveStats"],[344,38,385,35],[344,39,385,36,"defense"],[344,46,385,43],[345,14,386,12,"maxHealth"],[345,23,386,21],[345,25,386,23,"effectiveStats"],[345,40,386,37],[345,41,386,38,"health"],[345,47,386,44],[346,14,387,12,"health"],[346,20,387,18],[346,22,387,20,"Math"],[346,26,387,24],[346,27,387,25,"floor"],[346,32,387,30],[346,33,387,31,"effectiveStats"],[346,48,387,45],[346,49,387,46,"health"],[346,55,387,52],[346,58,387,55,"healthRatio"],[346,70,387,66],[346,71,387,67],[347,14,387,69],[348,14,388,12,"critChance"],[348,24,388,22],[348,26,388,24,"effectiveStats"],[348,41,388,38],[348,42,388,39,"critChance"],[348,52,388,49],[348,56,388,53,"newState"],[348,64,388,61],[348,65,388,62,"playerStats"],[348,76,388,73],[348,77,388,74,"critChance"],[348,87,388,84],[349,14,389,12,"critDamage"],[349,24,389,22],[349,26,389,24,"effectiveStats"],[349,41,389,38],[349,42,389,39,"critDamage"],[349,52,389,49],[349,56,389,53,"newState"],[349,64,389,61],[349,65,389,62,"playerStats"],[349,76,389,73],[349,77,389,74,"critDamage"],[349,87,389,84],[350,14,390,12,"cooldownReduction"],[350,31,390,29],[350,33,390,31,"effectiveStats"],[350,48,390,45],[350,49,390,46,"cooldownReduction"],[350,66,390,63],[350,70,390,67,"newState"],[350,78,390,75],[350,79,390,76,"playerStats"],[350,90,390,87],[350,91,390,88,"cooldownReduction"],[351,12,391,10],[351,13,391,11],[352,10,392,8],[353,8,393,6],[354,8,394,6],[354,12,394,10,"newState"],[354,20,394,18],[354,21,394,19,"shadowClone"],[354,32,394,30],[354,34,394,32],[355,10,395,8],[356,10,396,8,"newState"],[356,18,396,16],[356,19,396,17,"shadowClone"],[356,30,396,28],[356,31,396,29,"remainingTicks"],[356,45,396,43],[356,47,396,45],[358,10,398,8],[359,10,399,8],[359,14,399,14,"cloneOffset"],[359,25,399,25],[359,28,399,28],[359,30,399,30],[359,31,399,31],[359,32,399,32],[360,10,400,8,"newState"],[360,18,400,16],[360,19,400,17,"shadowClone"],[360,30,400,28],[360,31,400,29,"position"],[360,39,400,37],[360,40,400,38,"x"],[360,41,400,39],[360,44,400,42,"currentNinjaPosition"],[360,64,400,62],[360,65,400,63,"x"],[360,66,400,64],[360,69,400,67,"cloneOffset"],[360,80,400,78],[361,10,401,8,"newState"],[361,18,401,16],[361,19,401,17,"shadowClone"],[361,30,401,28],[361,31,401,29,"position"],[361,39,401,37],[361,40,401,38,"y"],[361,41,401,39],[361,44,401,42,"currentNinjaPosition"],[361,64,401,62],[361,65,401,63,"y"],[361,66,401,64],[361,69,401,67],[361,71,401,69],[363,10,403,8],[364,10,404,8],[364,14,404,12,"newState"],[364,22,404,20],[364,23,404,21,"shadowClone"],[364,34,404,32],[364,35,404,33,"remainingTicks"],[364,49,404,47],[364,53,404,51],[364,54,404,52],[364,56,404,54],[365,12,405,10,"console"],[365,19,405,17],[365,20,405,18,"log"],[365,23,405,21],[365,24,405,22],[365,75,405,73],[365,76,405,74],[366,12,406,10,"newState"],[366,20,406,18],[366,21,406,19,"shadowClone"],[366,32,406,30],[366,35,406,33,"undefined"],[366,44,406,42],[367,10,407,8],[367,11,407,9],[367,17,407,15],[368,12,408,10],[369,12,409,10],[370,12,410,10],[370,16,410,16,"CLONE_ATTACK_INTERVAL"],[370,37,410,37],[370,40,410,40],[370,42,410,42],[371,12,411,10],[371,16,411,14,"newState"],[371,24,411,22],[371,25,411,23,"currentTick"],[371,36,411,34],[371,39,411,37,"CLONE_ATTACK_INTERVAL"],[371,60,411,58],[371,65,411,63],[371,66,411,64],[371,70,411,68,"newState"],[371,78,411,76],[371,79,411,77,"enemies"],[371,86,411,84],[371,87,411,85,"length"],[371,93,411,91],[371,96,411,94],[371,97,411,95],[371,99,411,97],[372,14,412,12,"console"],[372,21,412,19],[372,22,412,20,"log"],[372,25,412,23],[372,26,412,24],[372,83,412,81],[372,84,412,82],[374,14,414,12],[375,14,415,12],[375,18,415,18,"target"],[375,24,415,24],[375,27,415,27,"findClosestEnemyInternal"],[375,51,415,51],[375,52,415,52,"newState"],[375,60,415,60],[375,61,415,61,"enemies"],[375,68,415,68],[375,69,415,69],[376,14,416,12],[376,18,416,16,"target"],[376,24,416,22],[376,26,416,24],[377,16,417,14],[378,16,418,14],[378,20,418,20,"cloneDamage"],[378,31,418,31],[378,34,418,34,"Math"],[378,38,418,38],[378,39,418,39,"floor"],[378,44,418,44],[378,45,418,45,"newState"],[378,53,418,53],[378,54,418,54,"playerStats"],[378,65,418,65],[378,66,418,66,"attack"],[378,72,418,72],[378,75,418,75],[378,78,418,78],[378,79,418,79],[380,16,420,14],[381,16,421,14,"createProjectile"],[381,32,421,30],[381,33,421,31,"target"],[381,39,421,37],[381,41,421,39,"cloneDamage"],[381,52,421,50],[381,54,421,52,"newState"],[381,62,421,60],[381,63,421,61,"shadowClone"],[381,74,421,72],[381,75,421,73,"position"],[381,83,421,81],[381,85,421,83],[382,18,422,16,"id"],[382,20,422,18],[382,22,422,20],[382,43,422,41],[383,18,423,16,"name"],[383,22,423,20],[383,24,423,22],[383,45,423,43],[384,18,424,16,"icon"],[384,22,424,20],[384,24,424,22],[385,16,425,14],[385,17,425,15],[385,18,425,16],[386,14,426,12],[387,12,427,10],[388,10,428,8],[389,8,429,6],[391,8,431,6],[392,8,432,6],[392,12,432,10],[392,13,432,11,"isManualControlActive"],[392,34,432,32],[392,36,432,34],[393,10,433,8],[393,15,433,13],[393,19,433,17,"i"],[393,20,433,18],[393,23,433,21],[393,24,433,22],[393,26,433,24,"i"],[393,27,433,25],[393,30,433,28],[393,31,433,29],[393,33,433,31,"i"],[393,34,433,32],[393,36,433,34],[393,38,433,36],[394,12,434,10],[394,16,434,14,"newState"],[394,24,434,22],[394,25,434,23,"abilityManager"],[394,39,434,37],[394,40,434,38,"isAbilityReady"],[394,54,434,52],[394,55,434,53,"i"],[394,56,434,54],[394,57,434,55],[394,61,434,59,"newState"],[394,69,434,67],[394,70,434,68,"enemies"],[394,77,434,75],[394,78,434,76,"length"],[394,84,434,82],[394,87,434,85],[394,88,434,86],[394,90,434,88],[395,14,435,12],[395,18,435,16,"newState"],[395,26,435,24],[395,27,435,25,"abilityManager"],[395,41,435,39],[395,42,435,40,"useAbility"],[395,52,435,50],[395,53,435,51,"i"],[395,54,435,52],[395,56,435,54,"newTick"],[395,63,435,61],[395,64,435,62],[395,66,435,64],[396,16,436,14,"castAbility"],[396,27,436,25],[396,28,436,26,"newState"],[396,36,436,34],[396,38,436,36,"i"],[396,39,436,37],[396,40,436,38],[397,14,437,12],[398,12,438,10],[399,10,439,8],[400,8,440,6],[402,8,442,6],[403,8,443,6],[403,12,443,12,"deadEnemies"],[403,23,443,23],[403,26,443,26,"newState"],[403,34,443,34],[403,35,443,35,"enemies"],[403,42,443,42],[403,43,443,43,"filter"],[403,49,443,49],[403,50,443,50,"enemy"],[403,55,443,55],[403,59,443,59,"enemy"],[403,64,443,64],[403,65,443,65,"health"],[403,71,443,71],[403,75,443,75],[403,76,443,76],[403,77,443,77],[404,8,444,6,"enemiesToKill"],[404,21,444,19],[404,24,444,22],[404,25,444,23],[404,28,444,26,"deadEnemies"],[404,39,444,37],[404,40,444,38],[404,41,444,39],[404,42,444,40],[406,8,446,6],[407,8,447,6],[407,12,447,10,"deadEnemies"],[407,23,447,21],[407,24,447,22,"length"],[407,30,447,28],[407,33,447,31],[407,34,447,32],[407,36,447,34],[408,10,448,8,"console"],[408,17,448,15],[408,18,448,16,"log"],[408,21,448,19],[408,22,448,20],[408,49,448,47,"deadEnemies"],[408,60,448,58],[408,61,448,59,"length"],[408,67,448,65],[408,83,448,81],[408,85,448,83,"deadEnemies"],[408,96,448,94],[408,97,448,95,"map"],[408,100,448,98],[408,101,448,99,"e"],[408,102,448,100],[408,106,448,104],[408,109,448,107,"e"],[408,110,448,108],[408,111,448,109,"id"],[408,113,448,111],[408,117,448,115,"e"],[408,118,448,116],[408,119,448,117,"health"],[408,125,448,123],[408,130,448,128],[408,131,448,129],[408,132,448,130],[409,8,449,6],[411,8,451,6],[412,8,452,6],[412,12,452,12,"lowHealthEnemies"],[412,28,452,28],[412,31,452,31,"newState"],[412,39,452,39],[412,40,452,40,"enemies"],[412,47,452,47],[412,48,452,48,"filter"],[412,54,452,54],[412,55,452,55,"enemy"],[412,60,452,60],[412,64,452,64,"enemy"],[412,69,452,69],[412,70,452,70,"health"],[412,76,452,76],[412,80,452,80],[412,82,452,82],[412,86,452,86,"enemy"],[412,91,452,91],[412,92,452,92,"health"],[412,98,452,98],[412,101,452,101],[412,102,452,102],[412,103,452,103],[413,8,453,6],[413,12,453,10,"lowHealthEnemies"],[413,28,453,26],[413,29,453,27,"length"],[413,35,453,33],[413,38,453,36],[413,39,453,37],[413,41,453,39],[414,10,454,8,"console"],[414,17,454,15],[414,18,454,16,"log"],[414,21,454,19],[414,22,454,20],[414,61,454,59],[414,63,454,61,"lowHealthEnemies"],[414,79,454,77],[414,80,454,78,"map"],[414,83,454,81],[414,84,454,82,"e"],[414,85,454,83],[414,89,454,87],[414,92,454,90,"e"],[414,93,454,91],[414,94,454,92,"id"],[414,96,454,94],[414,100,454,98,"e"],[414,101,454,99],[414,102,454,100,"health"],[414,108,454,106],[414,112,454,110,"e"],[414,113,454,111],[414,114,454,112,"maxHealth"],[414,123,454,121],[414,128,454,126],[414,129,454,127],[414,130,454,128],[415,8,455,6],[417,8,457,6],[418,8,458,6],[418,12,458,12,"beforeCount"],[418,23,458,23],[418,26,458,26,"newState"],[418,34,458,34],[418,35,458,35,"enemies"],[418,42,458,42],[418,43,458,43,"length"],[418,49,458,49],[419,8,459,6,"newState"],[419,16,459,14],[419,17,459,15,"enemies"],[419,24,459,22],[419,27,459,25,"newState"],[419,35,459,33],[419,36,459,34,"enemies"],[419,43,459,41],[419,44,459,42,"filter"],[419,50,459,48],[419,51,459,49,"enemy"],[419,56,459,54],[419,60,459,58,"enemy"],[419,65,459,63],[419,66,459,64,"health"],[419,72,459,70],[419,75,459,73],[419,76,459,74],[419,77,459,75],[420,8,460,6],[420,12,460,12,"afterCount"],[420,22,460,22],[420,25,460,25,"newState"],[420,33,460,33],[420,34,460,34,"enemies"],[420,41,460,41],[420,42,460,42,"length"],[420,48,460,48],[421,8,462,6],[421,12,462,10,"beforeCount"],[421,23,462,21],[421,28,462,26,"afterCount"],[421,38,462,36],[421,40,462,38],[422,10,463,8,"console"],[422,17,463,15],[422,18,463,16,"log"],[422,21,463,19],[422,22,463,20],[422,52,463,50,"beforeCount"],[422,63,463,61],[422,66,463,64,"afterCount"],[422,76,463,74],[422,102,463,100],[422,103,463,101],[423,8,464,6],[425,8,466,6],[426,8,467,6],[427,8,468,6],[427,12,468,12,"MAX_ENEMIES"],[427,23,468,23],[427,26,468,26],[427,28,468,28],[427,29,468,29],[427,30,468,30],[428,8,469,6],[428,12,469,12,"MIN_SPAWN_DELAY"],[428,27,469,27],[428,30,469,30],[428,33,469,33],[428,34,469,34],[428,35,469,35],[429,8,470,6],[429,12,470,12,"now"],[429,15,470,15],[429,18,470,18,"Date"],[429,22,470,22],[429,23,470,23,"now"],[429,26,470,26],[429,27,470,27],[429,28,470,28],[430,8,471,6],[430,12,471,12,"hasBoss"],[430,19,471,19],[430,22,471,22,"newState"],[430,30,471,30],[430,31,471,31,"enemies"],[430,38,471,38],[430,39,471,39,"some"],[430,43,471,43],[430,44,471,44,"enemy"],[430,49,471,49],[430,53,471,53,"enemy"],[430,58,471,58],[430,59,471,59,"isBoss"],[430,65,471,65],[430,66,471,66],[432,8,473,6],[433,8,474,6],[433,12,474,10],[433,13,474,11,"newState"],[433,21,474,19],[433,22,474,20,"lastSpawnTime"],[433,35,474,33],[433,37,474,35],[434,10,475,8,"newState"],[434,18,475,16],[434,19,475,17,"lastSpawnTime"],[434,32,475,30],[434,35,475,33,"now"],[434,38,475,36],[435,8,476,6],[436,8,478,6,"console"],[436,15,478,13],[436,16,478,14,"log"],[436,19,478,17],[436,20,478,18],[436,53,478,51,"newState"],[436,61,478,59],[436,62,478,60,"enemies"],[436,69,478,67],[436,70,478,68,"length"],[436,76,478,74],[436,85,478,83,"MAX_ENEMIES"],[436,96,478,94],[436,109,478,107,"hasBoss"],[436,116,478,114],[436,118,478,116],[436,119,478,117],[438,8,480,6],[439,8,481,6],[439,12,481,10],[439,13,481,11,"hasBoss"],[439,20,481,18],[439,24,481,22,"newState"],[439,32,481,30],[439,33,481,31,"enemies"],[439,40,481,38],[439,41,481,39,"length"],[439,47,481,45],[439,50,481,48,"MAX_ENEMIES"],[439,61,481,59],[439,65,481,64,"now"],[439,68,481,67],[439,71,481,70,"newState"],[439,79,481,78],[439,80,481,79,"lastSpawnTime"],[439,93,481,92],[439,97,481,97,"MIN_SPAWN_DELAY"],[439,112,481,112],[439,114,481,114],[440,10,482,8,"console"],[440,17,482,15],[440,18,482,16,"log"],[440,21,482,19],[440,22,482,20],[440,43,482,41,"newState"],[440,51,482,49],[440,52,482,50,"enemies"],[440,59,482,57],[440,60,482,58,"length"],[440,66,482,64],[440,69,482,67],[440,70,482,68],[440,74,482,72,"MAX_ENEMIES"],[440,85,482,83],[440,87,482,85],[440,88,482,86],[441,10,483,8,"spawnTestEnemy"],[441,24,483,22],[441,25,483,23,"newState"],[441,33,483,31],[441,34,483,32],[442,10,484,8,"newState"],[442,18,484,16],[442,19,484,17,"lastSpawnTime"],[442,32,484,30],[442,35,484,33,"now"],[442,38,484,36],[443,8,485,6],[444,8,487,6],[444,15,487,13,"newState"],[444,23,487,21],[445,6,488,4],[445,7,488,5],[445,47,488,6],[447,6,490,4],[448,6,491,4,"console"],[448,13,491,11],[448,14,491,12,"log"],[448,17,491,15],[448,18,491,16],[448,50,491,48,"enemiesToKill"],[448,63,491,61],[448,64,491,62,"length"],[448,70,491,68],[448,101,491,99],[448,102,491,100],[449,6,493,4,"enemiesToKill"],[449,19,493,17],[449,20,493,18,"forEach"],[449,27,493,25],[449,28,493,26],[449,29,493,27,"enemy"],[449,34,493,32],[449,36,493,34,"index"],[449,41,493,39],[449,46,493,44],[450,8,494,6,"console"],[450,15,494,13],[450,16,494,14,"log"],[450,19,494,17],[450,20,494,18],[450,57,494,55,"index"],[450,62,494,60],[450,65,494,63],[450,66,494,64],[450,70,494,68,"enemiesToKill"],[450,83,494,81],[450,84,494,82,"length"],[450,90,494,88],[450,104,494,102,"enemy"],[450,109,494,107],[450,110,494,108,"id"],[450,112,494,110],[450,114,494,112],[450,115,494,113],[451,8,495,6,"handleEnemyKill"],[451,23,495,21],[451,24,495,22,"enemy"],[451,29,495,27],[451,30,495,28],[452,6,496,4],[452,7,496,5],[452,8,496,6],[453,4,497,2],[453,5,497,3],[453,7,497,5],[453,8,497,6,"handleEnemyKill"],[453,23,497,21],[453,24,497,22],[453,25,497,23],[453,26,497,24],[453,27,497,25],[455,4,499,2],[456,4,500,2],[456,8,500,8,"findClosestEnemyInternal"],[456,32,500,32],[456,35,500,36,"enemies"],[456,42,500,58],[456,46,500,83],[457,6,501,4],[457,10,501,8,"enemies"],[457,17,501,15],[457,18,501,16,"length"],[457,24,501,22],[457,29,501,27],[457,30,501,28],[457,32,501,30],[457,39,501,37],[457,43,501,41],[459,6,503,4],[460,6,504,4],[460,10,504,10,"SCREEN_WIDTH"],[460,22,504,22],[460,25,504,25],[460,28,504,28],[461,6,505,4],[461,10,505,10,"GAME_AREA_HEIGHT"],[461,26,505,26],[461,29,505,29],[461,32,505,32],[461,35,505,35],[461,38,505,38],[461,39,505,39],[461,40,505,40],[462,6,506,4],[462,10,506,10,"ninjaX"],[462,16,506,16],[462,19,506,19,"SCREEN_WIDTH"],[462,31,506,31],[462,34,506,34],[462,35,506,35],[463,6,507,4],[463,10,507,10,"ninjaY"],[463,16,507,16],[463,19,507,19,"GAME_AREA_HEIGHT"],[463,35,507,35],[463,38,507,38],[463,39,507,39],[464,6,509,4],[464,10,509,8,"closestEnemy"],[464,22,509,20],[464,25,509,23,"enemies"],[464,32,509,30],[464,33,509,31],[464,34,509,32],[464,35,509,33],[465,6,510,4],[465,10,510,8,"closestDistance"],[465,25,510,23],[465,28,510,26,"Infinity"],[465,36,510,34],[466,6,512,4,"enemies"],[466,13,512,11],[466,14,512,12,"forEach"],[466,21,512,19],[466,22,512,20,"enemy"],[466,27,512,25],[466,31,512,29],[467,8,513,6],[467,12,513,12,"distance"],[467,20,513,20],[467,23,513,23,"Math"],[467,27,513,27],[467,28,513,28,"sqrt"],[467,32,513,32],[467,33,514,8,"Math"],[467,37,514,12],[467,38,514,13,"pow"],[467,41,514,16],[467,42,514,17,"enemy"],[467,47,514,22],[467,48,514,23,"position"],[467,56,514,31],[467,57,514,32,"x"],[467,58,514,33],[467,61,514,36,"ninjaX"],[467,67,514,42],[467,69,514,44],[467,70,514,45],[467,71,514,46],[467,74,515,8,"Math"],[467,78,515,12],[467,79,515,13,"pow"],[467,82,515,16],[467,83,515,17,"enemy"],[467,88,515,22],[467,89,515,23,"position"],[467,97,515,31],[467,98,515,32,"y"],[467,99,515,33],[467,102,515,36,"ninjaY"],[467,108,515,42],[467,110,515,44],[467,111,515,45],[467,112,516,6],[467,113,516,7],[468,8,518,6],[468,12,518,10,"distance"],[468,20,518,18],[468,23,518,21,"closestDistance"],[468,38,518,36],[468,40,518,38],[469,10,519,8,"closestDistance"],[469,25,519,23],[469,28,519,26,"distance"],[469,36,519,34],[470,10,520,8,"closestEnemy"],[470,22,520,20],[470,25,520,23,"enemy"],[470,30,520,28],[471,8,521,6],[472,6,522,4],[472,7,522,5],[472,8,522,6],[473,6,524,4,"console"],[473,13,524,11],[473,14,524,12,"log"],[473,17,524,15],[473,18,524,16],[473,60,524,58,"closestDistance"],[473,75,524,73],[473,76,524,74,"toFixed"],[473,83,524,81],[473,84,524,82],[473,85,524,83],[473,86,524,84],[473,88,524,86],[473,89,524,87],[474,6,525,4],[474,13,525,11,"closestEnemy"],[474,25,525,23],[475,4,526,2],[475,5,526,3],[477,4,528,2],[478,4,529,2],[478,8,529,8,"findClosestEnemy"],[478,24,529,24],[478,27,529,27,"findClosestEnemy"],[478,28,529,27],[478,33,529,53],[479,6,530,4],[479,13,530,11,"findClosestEnemyInternal"],[479,37,530,35],[479,38,530,36,"combatState"],[479,49,530,47],[479,50,530,48,"enemies"],[479,57,530,55],[479,58,530,56],[480,4,531,2],[480,5,531,3],[482,4,533,2],[483,4,534,2],[483,8,534,2,"_useState7"],[483,18,534,2],[483,21,534,58],[483,25,534,58,"useState"],[483,31,534,66],[483,32,534,66,"useState"],[483,40,534,66],[483,42,534,91],[484,8,534,93,"x"],[484,9,534,94],[484,11,534,96],[484,12,534,97],[485,8,534,99,"y"],[485,9,534,100],[485,11,534,102],[486,6,534,104],[486,7,534,105],[486,8,534,106],[487,6,534,106,"_useState8"],[487,16,534,106],[487,23,534,106,"_slicedToArray"],[487,37,534,106],[487,38,534,106,"default"],[487,45,534,106],[487,47,534,106,"_useState7"],[487,57,534,106],[488,6,534,9,"currentNinjaPosition"],[488,26,534,29],[488,29,534,29,"_useState8"],[488,39,534,29],[489,6,534,31,"setCurrentNinjaPosition"],[489,29,534,54],[489,32,534,54,"_useState8"],[489,42,534,54],[490,4,535,2],[490,8,535,2,"_useState9"],[490,18,535,2],[490,21,535,60],[490,25,535,60,"useState"],[490,31,535,68],[490,32,535,68,"useState"],[490,40,535,68],[490,42,535,69],[490,47,535,74],[490,48,535,75],[491,6,535,75,"_useState0"],[491,16,535,75],[491,23,535,75,"_slicedToArray"],[491,37,535,75],[491,38,535,75,"default"],[491,45,535,75],[491,47,535,75,"_useState9"],[491,57,535,75],[492,6,535,9,"isManualControlActive"],[492,27,535,30],[492,30,535,30,"_useState0"],[492,40,535,30],[493,6,535,32,"setIsManualControlActive"],[493,30,535,56],[493,33,535,56,"_useState0"],[493,43,535,56],[495,4,537,2],[496,4,538,2],[496,8,538,8,"updateNinjaPosition"],[496,27,538,27],[496,30,538,30],[496,34,538,30,"useCallback"],[496,40,538,41],[496,41,538,41,"useCallback"],[496,52,538,41],[496,54,538,43,"newPosition"],[496,65,538,78],[496,69,538,83],[497,6,539,4,"setCurrentNinjaPosition"],[497,29,539,27],[497,30,539,28,"newPosition"],[497,41,539,39],[497,42,539,40],[498,4,540,2],[498,5,540,3],[498,7,540,5],[498,9,540,7],[498,10,540,8],[500,4,542,2],[501,4,543,2],[501,8,543,8,"setManualControlActive"],[501,30,543,30],[501,33,543,33],[501,37,543,33,"useCallback"],[501,43,543,44],[501,44,543,44,"useCallback"],[501,55,543,44],[501,57,543,46,"active"],[501,63,543,61],[501,67,543,66],[502,6,544,4,"setIsManualControlActive"],[502,30,544,28],[502,31,544,29,"active"],[502,37,544,35],[502,38,544,36],[503,6,545,4,"console"],[503,13,545,11],[503,14,545,12,"log"],[503,17,545,15],[503,18,545,16],[503,39,545,37,"active"],[503,45,545,43],[503,48,545,46],[503,59,545,57],[503,62,545,60],[503,75,545,73],[503,88,545,86,"active"],[503,94,545,92],[503,97,545,95],[503,105,545,103],[503,108,545,106],[503,117,545,115],[503,119,545,117],[503,120,545,118],[504,4,546,2],[504,5,546,3],[504,7,546,5],[504,9,546,7],[504,10,546,8],[506,4,548,2],[507,4,549,2],[507,8,549,8,"handleProjectileHit"],[507,27,549,27],[507,30,549,31,"projectile"],[507,40,549,59],[507,44,549,64],[508,6,550,4,"console"],[508,13,550,11],[508,14,550,12,"log"],[508,17,550,15],[508,18,550,16],[508,35,550,33,"projectile"],[508,45,550,43],[508,46,550,44,"id"],[508,48,550,46],[508,62,550,60,"projectile"],[508,72,550,70],[508,73,550,71,"targetEnemyId"],[508,86,550,84],[508,94,550,92,"projectile"],[508,104,550,102],[508,105,550,103,"damage"],[508,111,550,109],[508,120,550,118],[508,121,550,119],[509,6,552,4,"setCombatState"],[509,20,552,18],[509,21,552,19,"prev"],[509,25,552,23],[509,29,552,27],[510,8,553,6],[510,12,553,12,"newState"],[510,20,553,20],[510,23,553,23],[511,10,553,25],[511,13,553,28,"prev"],[512,8,553,33],[512,9,553,34],[514,8,555,6],[515,8,556,6],[515,12,556,12,"enemyIndex"],[515,22,556,22],[515,25,556,25,"newState"],[515,33,556,33],[515,34,556,34,"enemies"],[515,41,556,41],[515,42,556,42,"findIndex"],[515,51,556,51],[515,52,556,52,"e"],[515,53,556,53],[515,57,556,57,"e"],[515,58,556,58],[515,59,556,59,"id"],[515,61,556,61],[515,66,556,66,"projectile"],[515,76,556,76],[515,77,556,77,"targetEnemyId"],[515,90,556,90],[515,91,556,91],[516,8,557,6],[516,12,557,10,"enemyIndex"],[516,22,557,20],[516,26,557,24],[516,27,557,25],[516,29,557,27],[517,10,558,8,"newState"],[517,18,558,16],[517,19,558,17,"enemies"],[517,26,558,24],[517,29,558,27],[517,30,558,28],[517,33,558,31,"newState"],[517,41,558,39],[517,42,558,40,"enemies"],[517,49,558,47],[517,50,558,48],[518,10,559,8,"newState"],[518,18,559,16],[518,19,559,17,"enemies"],[518,26,559,24],[518,27,559,25,"enemyIndex"],[518,37,559,35],[518,38,559,36],[518,41,559,39],[519,12,560,10],[519,15,560,13,"newState"],[519,23,560,21],[519,24,560,22,"enemies"],[519,31,560,29],[519,32,560,30,"enemyIndex"],[519,42,560,40],[519,43,560,41],[520,12,561,10,"health"],[520,18,561,16],[520,20,561,18,"newState"],[520,28,561,26],[520,29,561,27,"enemies"],[520,36,561,34],[520,37,561,35,"enemyIndex"],[520,47,561,45],[520,48,561,46],[520,49,561,47,"health"],[520,55,561,53],[520,58,561,56,"projectile"],[520,68,561,66],[520,69,561,67,"damage"],[520,75,561,73],[521,12,562,10,"lastDamaged"],[521,23,562,21],[521,25,562,23,"combatEngine"],[521,44,562,35],[521,45,562,35,"combatEngine"],[521,57,562,35],[521,58,562,36,"getCurrentTick"],[521,72,562,50],[521,73,562,51],[522,10,563,8],[522,11,563,9],[523,10,565,8,"console"],[523,17,565,15],[523,18,565,16,"log"],[523,21,565,19],[523,22,565,20],[523,34,565,32,"projectile"],[523,44,565,42],[523,45,565,43,"targetEnemyId"],[523,58,565,56],[523,70,565,68,"newState"],[523,78,565,76],[523,79,565,77,"enemies"],[523,86,565,84],[523,87,565,85,"enemyIndex"],[523,97,565,95],[523,98,565,96],[523,99,565,97,"health"],[523,105,565,103],[523,109,565,107,"newState"],[523,117,565,115],[523,118,565,116,"enemies"],[523,125,565,123],[523,126,565,124,"enemyIndex"],[523,136,565,134],[523,137,565,135],[523,138,565,136,"maxHealth"],[523,147,565,145],[523,149,565,147],[523,150,565,148],[524,8,566,6],[525,8,568,6],[525,15,568,13,"newState"],[525,23,568,21],[526,6,569,4],[526,7,569,5],[526,8,569,6],[528,6,571,4],[529,6,572,4,"setProjectiles"],[529,20,572,18],[529,21,572,19,"prev"],[529,25,572,23],[529,29,572,27,"prev"],[529,33,572,31],[529,34,572,32,"filter"],[529,40,572,38],[529,41,572,39,"p"],[529,42,572,40],[529,46,572,44,"p"],[529,47,572,45],[529,48,572,46,"id"],[529,50,572,48],[529,55,572,53,"projectile"],[529,65,572,63],[529,66,572,64,"id"],[529,68,572,66],[529,69,572,67],[529,70,572,68],[530,4,573,2],[530,5,573,3],[532,4,575,2],[533,4,576,2],[533,8,576,8,"castAbility"],[533,19,576,19],[533,22,576,22,"castAbility"],[533,23,576,23,"state"],[533,28,576,41],[533,30,576,43,"slotIndex"],[533,39,576,60],[533,44,576,65],[534,6,577,4],[534,10,577,10,"deck"],[534,14,577,14],[534,17,577,17,"state"],[534,22,577,22],[534,23,577,23,"abilityManager"],[534,37,577,37],[534,38,577,38,"getDeck"],[534,45,577,45],[534,46,577,46],[534,47,577,47],[535,6,578,4],[535,10,578,10,"ability"],[535,17,578,17],[535,20,578,20,"deck"],[535,24,578,24],[535,25,578,25,"slots"],[535,30,578,30],[535,31,578,31,"slotIndex"],[535,40,578,40],[535,41,578,41],[536,6,579,4],[536,10,579,8],[536,11,579,9,"ability"],[536,18,579,16],[536,20,579,18],[538,6,581,4],[539,6,582,4],[539,10,582,8,"damage"],[539,16,582,14],[539,19,582,17,"ability"],[539,26,582,24],[539,27,582,25,"stats"],[539,32,582,30],[539,33,582,31,"baseDamage"],[539,43,582,41],[541,6,584,4],[542,6,585,4,"deck"],[542,10,585,8],[542,11,585,9,"activeSynergies"],[542,26,585,24],[542,27,585,25,"forEach"],[542,34,585,32],[542,35,585,33,"synergy"],[542,42,585,40],[542,46,585,44],[543,8,586,6],[543,12,586,10,"synergy"],[543,19,586,17],[543,20,586,18,"bonus"],[543,25,586,23],[543,26,586,24,"damageBonus"],[543,37,586,35],[543,41,587,10,"synergy"],[543,48,587,17],[543,49,587,18,"requiredTags"],[543,61,587,30],[543,62,587,31,"some"],[543,66,587,35],[543,67,587,36,"tag"],[543,70,587,39],[543,74,587,43,"ability"],[543,81,587,50],[543,82,587,51,"tags"],[543,86,587,55],[543,87,587,56,"includes"],[543,95,587,64],[543,96,587,65,"tag"],[543,99,587,68],[543,100,587,69],[543,101,587,70],[543,103,587,72],[544,10,588,8,"damage"],[544,16,588,14],[544,20,588,19],[544,21,588,20],[544,24,588,23,"synergy"],[544,31,588,30],[544,32,588,31,"bonus"],[544,37,588,36],[544,38,588,37,"damageBonus"],[544,49,588,48],[544,52,588,51],[544,55,588,55],[545,8,589,6],[546,6,590,4],[546,7,590,5],[546,8,590,6],[548,6,592,4],[549,6,593,4],[549,10,593,10,"isAOE"],[549,15,593,15],[549,18,593,18,"ability"],[549,25,593,25],[549,26,593,26,"effects"],[549,33,593,33],[549,34,593,34,"includes"],[549,42,593,42],[549,43,593,43],[549,48,593,48],[549,49,593,49],[549,53,593,53,"ability"],[549,60,593,60],[549,61,593,61,"stats"],[549,66,593,66],[549,67,593,67,"aoeRadius"],[549,76,593,76],[550,6,595,4],[550,10,595,8,"isAOE"],[550,15,595,13],[550,17,595,15],[551,8,596,6,"console"],[551,15,596,13],[551,16,596,14,"log"],[551,19,596,17],[551,20,596,18],[551,39,596,37,"ability"],[551,46,596,44],[551,47,596,45,"name"],[551,51,596,49],[551,67,596,65,"ability"],[551,74,596,72],[551,75,596,73,"stats"],[551,80,596,78],[551,81,596,79,"aoeRadius"],[551,90,596,88],[551,92,596,90],[551,93,596,91],[553,8,598,6],[554,8,599,6],[554,12,599,12,"ninjaX"],[554,18,599,18],[554,21,599,21,"currentNinjaPosition"],[554,41,599,41],[554,42,599,42,"x"],[554,43,599,43],[554,46,599,46],[554,48,599,48],[554,49,599,49],[554,50,599,50],[555,8,600,6],[555,12,600,12,"ninjaY"],[555,18,600,18],[555,21,600,21,"currentNinjaPosition"],[555,41,600,41],[555,42,600,42,"y"],[555,43,600,43],[555,46,600,46],[555,48,600,48],[556,8,601,6],[556,12,601,12,"aoeRadius"],[556,21,601,21],[556,24,601,24,"ability"],[556,31,601,31],[556,32,601,32,"stats"],[556,37,601,37],[556,38,601,38,"aoeRadius"],[556,47,601,47],[557,8,603,6],[557,12,603,12,"enemiesInRange"],[557,26,603,26],[557,29,603,29,"state"],[557,34,603,34],[557,35,603,35,"enemies"],[557,42,603,42],[557,43,603,43,"filter"],[557,49,603,49],[557,50,603,50,"enemy"],[557,55,603,55],[557,59,603,59],[558,10,604,8],[558,14,604,14,"enemyX"],[558,20,604,20],[558,23,604,23,"enemy"],[558,28,604,28],[558,29,604,29,"position"],[558,37,604,37],[558,38,604,38,"x"],[558,39,604,39],[558,42,604,42],[558,46,604,46],[558,47,604,47],[558,48,604,48],[559,10,605,8],[559,14,605,14,"enemyY"],[559,20,605,20],[559,23,605,23,"enemy"],[559,28,605,28],[559,29,605,29,"position"],[559,37,605,37],[559,38,605,38,"y"],[559,39,605,39],[559,42,605,42],[559,46,605,46],[560,10,606,8],[560,14,606,14,"distance"],[560,22,606,22],[560,25,606,25,"Math"],[560,29,606,29],[560,30,606,30,"sqrt"],[560,34,606,34],[560,35,606,35,"Math"],[560,39,606,39],[560,40,606,40,"pow"],[560,43,606,43],[560,44,606,44,"enemyX"],[560,50,606,50],[560,53,606,53,"ninjaX"],[560,59,606,59],[560,61,606,61],[560,62,606,62],[560,63,606,63],[560,66,606,66,"Math"],[560,70,606,70],[560,71,606,71,"pow"],[560,74,606,74],[560,75,606,75,"enemyY"],[560,81,606,81],[560,84,606,84,"ninjaY"],[560,90,606,90],[560,92,606,92],[560,93,606,93],[560,94,606,94],[560,95,606,95],[561,10,607,8],[561,17,607,15,"distance"],[561,25,607,23],[561,29,607,27,"aoeRadius"],[561,38,607,36],[562,8,608,6],[562,9,608,7],[562,10,608,8],[563,8,610,6,"console"],[563,15,610,13],[563,16,610,14,"log"],[563,19,610,17],[563,20,610,18],[563,45,610,43,"enemiesInRange"],[563,59,610,57],[563,60,610,58,"length"],[563,66,610,64],[563,88,610,86,"aoeRadius"],[563,97,610,95],[563,107,610,105],[563,108,610,106],[565,8,612,6],[566,8,613,6,"enemiesInRange"],[566,22,613,20],[566,23,613,21,"forEach"],[566,30,613,28],[566,31,613,29,"enemy"],[566,36,613,34],[566,40,613,38],[567,10,614,8],[567,14,614,14,"damageResult"],[567,26,614,26],[567,29,614,29,"DamageCalculator"],[567,48,614,45],[567,49,614,45,"DamageCalculator"],[567,65,614,45],[567,66,614,46,"calculateDamage"],[567,81,614,61],[567,82,614,62,"damage"],[567,88,614,68],[567,90,614,70,"state"],[567,95,614,75],[567,96,614,76,"playerStats"],[567,107,614,87],[567,109,614,89,"enemy"],[567,114,614,94],[567,115,614,95,"stats"],[567,120,614,100],[567,121,614,101],[568,10,615,8,"createProjectile"],[568,26,615,24],[568,27,615,25,"enemy"],[568,32,615,30],[568,34,615,32,"damageResult"],[568,46,615,44],[568,47,615,45,"damage"],[568,53,615,51],[568,55,615,53,"currentNinjaPosition"],[568,75,615,73],[568,77,615,75],[569,12,616,10,"id"],[569,14,616,12],[569,16,616,14,"ability"],[569,23,616,21],[569,24,616,22,"id"],[569,26,616,24],[570,12,617,10,"name"],[570,16,617,14],[570,18,617,16,"ability"],[570,25,617,23],[570,26,617,24,"name"],[570,30,617,28],[571,12,618,10,"icon"],[571,16,618,14],[571,18,618,16,"ability"],[571,25,618,23],[571,26,618,24,"icon"],[572,10,619,8],[572,11,619,9],[572,12,619,10],[573,10,621,8,"console"],[573,17,621,15],[573,18,621,16,"log"],[573,21,621,19],[573,22,621,20],[573,37,621,35,"enemy"],[573,42,621,40],[573,43,621,41,"name"],[573,47,621,45],[573,55,621,53,"damageResult"],[573,67,621,65],[573,68,621,66,"damage"],[573,74,621,72],[573,83,621,81],[573,84,621,82],[574,8,622,6],[574,9,622,7],[574,10,622,8],[575,8,624,6,"console"],[575,15,624,13],[575,16,624,14,"log"],[575,19,624,17],[575,20,624,18],[575,26,624,24,"ability"],[575,33,624,31],[575,34,624,32,"name"],[575,38,624,36],[575,56,624,54,"enemiesInRange"],[575,70,624,68],[575,71,624,69,"length"],[575,77,624,75],[575,93,624,91,"damage"],[575,99,624,97],[575,118,624,116],[575,119,624,117],[576,6,626,4],[576,7,626,5],[576,13,626,11],[577,8,627,6],[578,8,628,6],[578,12,628,12,"target"],[578,18,628,18],[578,21,628,21,"findClosestEnemyInternal"],[578,45,628,45],[578,46,628,46,"state"],[578,51,628,51],[578,52,628,52,"enemies"],[578,59,628,59],[578,60,628,60],[579,8,629,6],[579,12,629,10],[579,13,629,11,"target"],[579,19,629,17],[579,21,629,19],[580,8,631,6],[580,12,631,12,"damageResult"],[580,24,631,24],[580,27,631,27,"DamageCalculator"],[580,46,631,43],[580,47,631,43,"DamageCalculator"],[580,63,631,43],[580,64,631,44,"calculateDamage"],[580,79,631,59],[580,80,631,60,"damage"],[580,86,631,66],[580,88,631,68,"state"],[580,93,631,73],[580,94,631,74,"playerStats"],[580,105,631,85],[580,107,631,87,"target"],[580,113,631,93],[580,114,631,94,"stats"],[580,119,631,99],[580,120,631,100],[582,8,633,6],[583,8,634,6,"createProjectile"],[583,24,634,22],[583,25,634,23,"target"],[583,31,634,29],[583,33,634,31,"damageResult"],[583,45,634,43],[583,46,634,44,"damage"],[583,52,634,50],[583,54,634,52,"currentNinjaPosition"],[583,74,634,72],[583,76,634,74],[584,10,635,8,"id"],[584,12,635,10],[584,14,635,12,"ability"],[584,21,635,19],[584,22,635,20,"id"],[584,24,635,22],[585,10,636,8,"name"],[585,14,636,12],[585,16,636,14,"ability"],[585,23,636,21],[585,24,636,22,"name"],[585,28,636,26],[586,10,637,8,"icon"],[586,14,637,12],[586,16,637,14,"ability"],[586,23,637,21],[586,24,637,22,"icon"],[587,8,638,6],[587,9,638,7],[587,10,638,8],[588,8,640,6,"console"],[588,15,640,13],[588,16,640,14,"log"],[588,19,640,17],[588,20,640,18],[588,26,640,24,"ability"],[588,33,640,31],[588,34,640,32,"name"],[588,38,640,36],[588,66,640,64,"damageResult"],[588,78,640,76],[588,79,640,77,"damage"],[588,85,640,83],[588,95,640,93,"damageResult"],[588,107,640,105],[588,108,640,106,"isCritical"],[588,118,640,116],[588,121,640,119],[588,131,640,129],[588,134,640,132],[588,136,640,134],[588,138,640,136],[588,139,640,137],[589,6,641,4],[591,6,643,4],[592,6,644,4],[592,10,644,8,"ability"],[592,17,644,15],[592,18,644,16,"effects"],[592,25,644,23],[592,26,644,24,"includes"],[592,34,644,32],[592,35,644,33],[592,40,644,38],[592,41,644,39],[592,45,644,43,"ability"],[592,52,644,50],[592,53,644,51,"stats"],[592,58,644,56],[592,59,644,57,"duration"],[592,67,644,65],[592,69,644,67],[593,8,645,6],[593,12,645,12,"targets"],[593,19,645,19],[593,22,645,22,"isAOE"],[593,27,645,27],[593,30,646,8,"state"],[593,35,646,13],[593,36,646,14,"enemies"],[593,43,646,21],[593,44,646,22,"filter"],[593,50,646,28],[593,51,646,29,"enemy"],[593,56,646,34],[593,60,646,38],[594,10,647,10],[594,14,647,16,"ninjaX"],[594,20,647,22],[594,23,647,25,"currentNinjaPosition"],[594,43,647,45],[594,44,647,46,"x"],[594,45,647,47],[594,48,647,50],[594,50,647,52],[595,10,648,10],[595,14,648,16,"ninjaY"],[595,20,648,22],[595,23,648,25,"currentNinjaPosition"],[595,43,648,45],[595,44,648,46,"y"],[595,45,648,47],[595,48,648,50],[595,50,648,52],[596,10,649,10],[596,14,649,16,"enemyX"],[596,20,649,22],[596,23,649,25,"enemy"],[596,28,649,30],[596,29,649,31,"position"],[596,37,649,39],[596,38,649,40,"x"],[596,39,649,41],[596,42,649,44],[596,46,649,48],[597,10,650,10],[597,14,650,16,"enemyY"],[597,20,650,22],[597,23,650,25,"enemy"],[597,28,650,30],[597,29,650,31,"position"],[597,37,650,39],[597,38,650,40,"y"],[597,39,650,41],[597,42,650,44],[597,46,650,48],[598,10,651,10],[598,14,651,16,"distance"],[598,22,651,24],[598,25,651,27,"Math"],[598,29,651,31],[598,30,651,32,"sqrt"],[598,34,651,36],[598,35,651,37,"Math"],[598,39,651,41],[598,40,651,42,"pow"],[598,43,651,45],[598,44,651,46,"enemyX"],[598,50,651,52],[598,53,651,55,"ninjaX"],[598,59,651,61],[598,61,651,63],[598,62,651,64],[598,63,651,65],[598,66,651,68,"Math"],[598,70,651,72],[598,71,651,73,"pow"],[598,74,651,76],[598,75,651,77,"enemyY"],[598,81,651,83],[598,84,651,86,"ninjaY"],[598,90,651,92],[598,92,651,94],[598,93,651,95],[598,94,651,96],[598,95,651,97],[599,10,652,10],[599,17,652,17,"distance"],[599,25,652,25],[599,29,652,29,"ability"],[599,36,652,36],[599,37,652,37,"stats"],[599,42,652,42],[599,43,652,43,"aoeRadius"],[599,52,652,52],[600,8,653,8],[600,9,653,9],[600,10,653,10],[600,13,654,8],[600,14,654,9,"findClosestEnemyInternal"],[600,38,654,33],[600,39,654,34,"state"],[600,44,654,39],[600,45,654,40,"enemies"],[600,52,654,47],[600,53,654,48],[600,54,654,49],[600,55,654,50,"filter"],[600,61,654,56],[600,62,654,57,"Boolean"],[600,69,654,64],[600,70,654,65],[601,8,656,6,"targets"],[601,15,656,13],[601,16,656,14,"forEach"],[601,23,656,21],[601,24,656,22,"target"],[601,30,656,28],[601,34,656,32],[602,10,657,8,"state"],[602,15,657,13],[602,16,657,14,"statusEffects"],[602,29,657,27],[602,30,657,28,"addEffect"],[602,39,657,37],[602,40,657,38,"target"],[602,46,657,44],[602,47,657,45,"id"],[602,49,657,47],[602,51,657,49],[603,12,658,10,"id"],[603,14,658,12],[603,16,658,14],[603,19,658,17,"ability"],[603,26,658,24],[603,27,658,25,"id"],[603,29,658,27],[603,35,658,33],[604,12,659,10,"type"],[604,16,659,14],[604,18,659,16],[604,23,659,21],[605,12,660,10,"remainingTicks"],[605,26,660,24],[605,28,660,26,"Math"],[605,32,660,30],[605,33,660,31,"floor"],[605,38,660,36],[605,39,660,37,"ability"],[605,46,660,44],[605,47,660,45,"stats"],[605,52,660,50],[605,53,660,51,"duration"],[605,61,660,59],[605,64,660,62],[605,66,660,64],[605,67,660,65],[606,12,661,10,"tickInterval"],[606,24,661,22],[606,26,661,24],[606,28,661,26],[607,12,662,10,"lastTick"],[607,20,662,18],[607,22,662,20,"state"],[607,27,662,25],[607,28,662,26,"currentTick"],[607,39,662,37],[608,12,663,10,"value"],[608,17,663,15],[608,19,663,17,"Math"],[608,23,663,21],[608,24,663,22,"floor"],[608,29,663,27],[608,30,663,28,"damage"],[608,36,663,34],[608,39,663,37],[608,42,663,40],[608,43,663,41],[609,12,664,10,"stackable"],[609,21,664,19],[609,23,664,21],[610,10,665,8],[610,11,665,9],[610,12,665,10],[611,8,666,6],[611,9,666,7],[611,10,666,8],[612,6,667,4],[614,6,669,4],[615,6,670,4],[615,10,670,8,"ability"],[615,17,670,15],[615,18,670,16,"effects"],[615,25,670,23],[615,26,670,24,"includes"],[615,34,670,32],[615,35,670,33],[615,41,670,39],[615,42,670,40],[615,46,670,44,"ability"],[615,53,670,51],[615,54,670,52,"id"],[615,56,670,54],[615,61,670,59],[615,75,670,73],[615,77,670,75],[616,8,671,6,"console"],[616,15,671,13],[616,16,671,14,"log"],[616,19,671,17],[616,20,671,18],[616,66,671,64,"ability"],[616,73,671,71],[616,74,671,72,"stats"],[616,79,671,77],[616,80,671,78,"duration"],[616,88,671,86],[616,98,671,96],[616,99,671,97],[618,8,673,6],[619,8,674,6],[619,12,674,12,"cloneX"],[619,18,674,18],[619,21,674,21,"currentNinjaPosition"],[619,41,674,41],[619,42,674,42,"x"],[619,43,674,43],[619,46,674,46],[619,48,674,48],[619,49,674,49],[619,50,674,50],[620,8,675,6],[620,12,675,12,"cloneY"],[620,18,675,18],[620,21,675,21,"currentNinjaPosition"],[620,41,675,41],[620,42,675,42,"y"],[620,43,675,43],[620,46,675,46],[620,48,675,48],[620,49,675,49],[620,50,675,50],[622,8,677,6,"state"],[622,13,677,11],[622,14,677,12,"shadowClone"],[622,25,677,23],[622,28,677,26],[623,10,678,8,"id"],[623,12,678,10],[623,14,678,12],[623,30,678,28,"Date"],[623,34,678,32],[623,35,678,33,"now"],[623,38,678,36],[623,39,678,37],[623,40,678,38],[623,42,678,40],[624,10,679,8,"remainingTicks"],[624,24,679,22],[624,26,679,24,"Math"],[624,30,679,28],[624,31,679,29,"floor"],[624,36,679,34],[624,37,679,35,"ability"],[624,44,679,42],[624,45,679,43,"stats"],[624,50,679,48],[624,51,679,49,"duration"],[624,59,679,57],[624,62,679,60],[624,64,679,62],[624,65,679,63],[625,10,679,65],[626,10,680,8,"position"],[626,18,680,16],[626,20,680,18],[627,12,680,20,"x"],[627,13,680,21],[627,15,680,23,"cloneX"],[627,21,680,29],[628,12,680,31,"y"],[628,13,680,32],[628,15,680,34,"cloneY"],[629,10,680,41],[629,11,680,42],[630,10,681,8,"damageMultiplier"],[630,26,681,24],[630,28,681,26],[630,31,681,29],[630,32,681,31],[631,8,682,6],[631,9,682,7],[632,8,684,6,"console"],[632,15,684,13],[632,16,684,14,"log"],[632,19,684,17],[632,20,684,18],[632,63,684,61,"ability"],[632,70,684,68],[632,71,684,69,"stats"],[632,76,684,74],[632,77,684,75,"duration"],[632,85,684,83],[632,108,684,106],[632,109,684,107],[633,6,685,4],[634,4,686,2],[634,5,686,3],[636,4,688,2],[637,4,689,2],[637,8,689,8,"createProjectile"],[637,24,689,24],[637,27,689,27,"createProjectile"],[637,28,689,28,"targetEnemy"],[637,39,689,52],[637,41,689,54,"damage"],[637,47,689,68],[637,49,689,70,"ninjaPos"],[637,57,689,103],[637,59,689,105,"abilityInfo"],[637,70,689,159],[637,75,689,164],[638,6,690,4],[638,10,690,10,"SCREEN_WIDTH"],[638,22,690,22],[638,25,690,25],[638,28,690,28],[639,6,691,4],[639,10,691,10,"GAME_AREA_HEIGHT"],[639,26,691,26],[639,29,691,29],[639,32,691,32],[639,35,691,35],[639,38,691,38],[639,39,691,39],[639,40,691,40],[640,6,692,4],[640,10,692,10,"NINJA_SIZE"],[640,20,692,20],[640,23,692,23],[640,25,692,25],[642,6,694,4],[643,6,695,4],[643,10,695,10,"ninjaX"],[643,16,695,16],[643,19,695,19,"ninjaPos"],[643,27,695,27],[643,30,695,30,"ninjaPos"],[643,38,695,38],[643,39,695,39,"x"],[643,40,695,40],[643,43,695,43,"NINJA_SIZE"],[643,53,695,53],[643,56,695,56],[643,57,695,57],[643,60,695,60,"SCREEN_WIDTH"],[643,72,695,72],[643,75,695,75],[643,76,695,76],[644,6,696,4],[644,10,696,10,"ninjaY"],[644,16,696,16],[644,19,696,19,"ninjaPos"],[644,27,696,27],[644,30,696,30,"ninjaPos"],[644,38,696,38],[644,39,696,39,"y"],[644,40,696,40],[644,43,696,43,"NINJA_SIZE"],[644,53,696,53],[644,56,696,56],[644,57,696,57],[644,60,696,60,"GAME_AREA_HEIGHT"],[644,76,696,76],[644,79,696,79],[644,80,696,80],[645,6,697,4],[645,10,697,10,"ENEMY_SIZE"],[645,20,697,20],[645,23,697,23],[645,25,697,25],[646,6,699,4],[646,10,699,10,"projectile"],[646,20,699,38],[646,23,699,41],[647,8,700,6,"id"],[647,10,700,8],[647,12,700,10],[647,20,700,18,"Date"],[647,24,700,22],[647,25,700,23,"now"],[647,28,700,26],[647,29,700,27],[647,30,700,28],[647,34,700,32,"Math"],[647,38,700,36],[647,39,700,37,"random"],[647,45,700,43],[647,46,700,44],[647,47,700,45],[647,49,700,47],[648,8,701,6,"x"],[648,9,701,7],[648,11,701,9,"ninjaX"],[648,17,701,15],[649,8,702,6,"y"],[649,9,702,7],[649,11,702,9,"ninjaY"],[649,17,702,15],[650,8,703,6,"targetX"],[650,15,703,13],[650,17,703,15,"targetEnemy"],[650,28,703,26],[650,29,703,27,"position"],[650,37,703,35],[650,38,703,36,"x"],[650,39,703,37],[650,42,703,40,"ENEMY_SIZE"],[650,52,703,50],[650,55,703,53],[650,56,703,54],[651,8,704,6,"targetY"],[651,15,704,13],[651,17,704,15,"targetEnemy"],[651,28,704,26],[651,29,704,27,"position"],[651,37,704,35],[651,38,704,36,"y"],[651,39,704,37],[651,42,704,40,"ENEMY_SIZE"],[651,52,704,50],[651,55,704,53],[651,56,704,54],[652,8,705,6,"targetEnemyId"],[652,21,705,19],[652,23,705,21,"targetEnemy"],[652,34,705,32],[652,35,705,33,"id"],[652,37,705,35],[653,8,706,6,"damage"],[653,14,706,12],[653,16,706,14,"damage"],[653,22,706,20],[654,8,707,6,"startTime"],[654,17,707,15],[654,19,707,17,"Date"],[654,23,707,21],[654,24,707,22,"now"],[654,27,707,25],[654,28,707,26],[654,29,707,27],[655,8,708,6,"duration"],[655,16,708,14],[655,18,708,16],[655,21,708,19],[656,8,708,21],[657,8,709,6],[658,8,710,6,"abilityId"],[658,17,710,15],[658,19,710,17,"abilityInfo"],[658,30,710,28],[658,32,710,30,"id"],[658,34,710,32],[658,38,710,36],[658,54,710,52],[659,8,711,6,"abilityName"],[659,19,711,17],[659,21,711,19,"abilityInfo"],[659,32,711,30],[659,34,711,32,"name"],[659,38,711,36],[659,42,711,40],[659,58,711,56],[660,8,712,6,"abilityIcon"],[660,19,712,17],[660,21,712,19,"abilityInfo"],[660,32,712,30],[660,34,712,32,"icon"],[660,38,712,36],[660,42,712,40],[660,46,712,44],[660,47,712,46],[661,6,713,4],[661,7,713,5],[662,6,715,4,"console"],[662,13,715,11],[662,14,715,12,"log"],[662,17,715,15],[662,18,715,16],[662,53,715,51,"targetEnemy"],[662,64,715,62],[662,65,715,63,"id"],[662,67,715,65],[662,75,715,73,"damage"],[662,81,715,79],[662,90,715,88],[662,91,715,89],[663,6,716,4,"console"],[663,13,716,11],[663,14,716,12,"log"],[663,17,716,15],[663,18,716,16],[663,53,716,51,"ninjaX"],[663,59,716,57],[663,64,716,62,"ninjaY"],[663,70,716,68],[663,87,716,85,"projectile"],[663,97,716,95],[663,98,716,96,"targetX"],[663,105,716,103],[663,110,716,108,"projectile"],[663,120,716,118],[663,121,716,119,"targetY"],[663,128,716,126],[663,131,716,129],[663,132,716,130],[664,6,718,4,"setProjectiles"],[664,20,718,18],[664,21,718,19,"prev"],[664,25,718,23],[664,29,718,27],[664,30,718,28],[664,33,718,31,"prev"],[664,37,718,35],[664,39,718,37,"projectile"],[664,49,718,47],[664,50,718,48],[664,51,718,49],[666,6,720,4],[667,6,721,4,"setTimeout"],[667,16,721,14],[667,17,721,15],[667,23,721,21],[668,8,722,6,"handleProjectileHit"],[668,27,722,25],[668,28,722,26,"projectile"],[668,38,722,36],[668,39,722,37],[669,6,723,4],[669,7,723,5],[669,9,723,7],[669,12,723,10],[669,13,723,11],[670,4,724,2],[670,5,724,3],[672,4,726,2],[673,4,727,2],[673,8,727,8,"spawnTestEnemy"],[673,22,727,22],[673,25,727,26,"state"],[673,30,727,44],[673,34,727,49],[674,6,728,4,"console"],[674,13,728,11],[674,14,728,12,"log"],[674,17,728,15],[674,18,728,16],[674,83,728,81],[674,84,728,82],[676,6,730,4],[677,6,731,4],[677,10,731,10,"zoneEnemy"],[677,19,731,19],[677,22,731,22,"spawnZoneEnemy"],[677,36,731,36],[677,37,731,37],[677,38,731,38],[678,6,732,4],[678,10,732,8],[678,11,732,9,"zoneEnemy"],[678,20,732,18],[678,22,732,20],[679,8,733,6,"console"],[679,15,733,13],[679,16,733,14,"log"],[679,19,733,17],[679,20,733,18],[679,76,733,74],[679,77,733,75],[680,8,734,6],[681,8,735,6,"spawnBasicTestEnemy"],[681,27,735,25],[681,28,735,26,"state"],[681,33,735,31],[681,34,735,32],[682,8,736,6],[683,6,737,4],[684,6,739,4,"console"],[684,13,739,11],[684,14,739,12,"log"],[684,17,739,15],[684,18,739,16],[684,44,739,42,"zoneEnemy"],[684,53,739,51],[684,54,739,52,"name"],[684,58,739,56],[684,63,739,61,"zoneEnemy"],[684,72,739,70],[684,73,739,71,"typeId"],[684,79,739,77],[684,94,739,92,"currentZone"],[684,105,739,103],[684,107,739,105,"id"],[684,109,739,107],[684,119,739,117,"currentZoneLevel"],[684,135,739,133],[684,137,739,135,"level"],[684,142,739,140],[684,144,739,142],[684,145,739,143],[686,6,741,4],[687,6,742,4],[687,10,742,10,"combatEnemy"],[687,21,742,34],[687,24,742,37],[688,8,743,6,"id"],[688,10,743,8],[688,12,743,10,"zoneEnemy"],[688,21,743,19],[688,22,743,20,"id"],[688,24,743,22],[689,8,744,6,"name"],[689,12,744,10],[689,14,744,12,"zoneEnemy"],[689,23,744,21],[689,24,744,22,"name"],[689,28,744,26],[690,8,745,6,"health"],[690,14,745,12],[690,16,745,14,"zoneEnemy"],[690,25,745,23],[690,26,745,24,"hp"],[690,28,745,26],[691,8,746,6,"maxHealth"],[691,17,746,15],[691,19,746,17,"zoneEnemy"],[691,28,746,26],[691,29,746,27,"maxHP"],[691,34,746,32],[692,8,747,6,"stats"],[692,13,747,11],[692,15,747,13],[693,10,748,8,"attack"],[693,16,748,14],[693,18,748,16,"zoneEnemy"],[693,27,748,25],[693,28,748,26,"attack"],[693,34,748,32],[694,10,749,8,"defense"],[694,17,749,15],[694,19,749,17],[694,21,749,19],[695,10,749,21],[696,10,750,8,"health"],[696,16,750,14],[696,18,750,16,"zoneEnemy"],[696,27,750,25],[696,28,750,26,"hp"],[696,30,750,28],[697,10,751,8,"maxHealth"],[697,19,751,17],[697,21,751,19,"zoneEnemy"],[697,30,751,28],[697,31,751,29,"maxHP"],[697,36,751,34],[698,10,752,8,"critChance"],[698,20,752,18],[698,22,752,20],[698,23,752,21],[699,10,753,8,"critDamage"],[699,20,753,18],[699,22,753,20],[699,25,753,23],[700,10,754,8,"cooldownReduction"],[700,27,754,25],[700,29,754,27],[701,8,755,6],[701,9,755,7],[702,8,756,6,"position"],[702,16,756,14],[702,18,756,16,"zoneEnemy"],[702,27,756,25],[702,28,756,26,"position"],[702,36,756,34],[703,8,757,6,"lastDamaged"],[703,19,757,17],[703,21,757,19],[703,22,757,20],[704,8,758,6],[705,8,759,6,"zoneTypeId"],[705,18,759,16],[705,20,759,18,"zoneEnemy"],[705,29,759,27],[705,30,759,28,"typeId"],[705,36,759,34],[706,8,760,6,"zoneXP"],[706,14,760,12],[706,16,760,14,"zoneEnemy"],[706,25,760,23],[706,26,760,24,"xp"],[707,6,761,4],[707,7,761,5],[708,6,763,4,"console"],[708,13,763,11],[708,14,763,12,"log"],[708,17,763,15],[708,18,763,16],[708,42,763,40,"combatEnemy"],[708,53,763,51],[708,54,763,52,"name"],[708,58,763,56],[708,67,763,65,"combatEnemy"],[708,78,763,76],[708,79,763,77,"health"],[708,85,763,83],[708,100,763,98,"currentZone"],[708,111,763,109],[708,113,763,111,"id"],[708,115,763,113],[708,125,763,123,"currentZoneLevel"],[708,141,763,139],[708,143,763,141,"level"],[708,148,763,146],[708,150,763,148],[708,151,763,149],[709,6,764,4,"state"],[709,11,764,9],[709,12,764,10,"enemies"],[709,19,764,17],[709,20,764,18,"push"],[709,24,764,22],[709,25,764,23,"combatEnemy"],[709,36,764,34],[709,37,764,35],[710,4,765,2],[710,5,765,3],[712,4,767,2],[713,4,768,2],[713,8,768,8,"spawnBasicTestEnemy"],[713,27,768,27],[713,30,768,31,"state"],[713,35,768,49],[713,39,768,54],[714,6,769,4],[714,10,769,10,"SCREEN_WIDTH"],[714,22,769,22],[714,25,769,25],[714,28,769,28],[715,6,770,4],[715,10,770,10,"GAME_AREA_HEIGHT"],[715,26,770,26],[715,29,770,29],[715,32,770,32],[715,35,770,35],[715,38,770,38],[716,6,771,4],[716,10,771,10,"ENEMY_SIZE"],[716,20,771,20],[716,23,771,23],[716,25,771,25],[717,6,773,4],[717,10,773,10,"x"],[717,11,773,11],[717,14,773,14,"Math"],[717,18,773,18],[717,19,773,19,"random"],[717,25,773,25],[717,26,773,26],[717,27,773,27],[717,31,773,31,"SCREEN_WIDTH"],[717,43,773,43],[717,46,773,46,"ENEMY_SIZE"],[717,56,773,56],[717,59,773,59],[717,60,773,60],[717,61,773,61],[717,64,773,64,"ENEMY_SIZE"],[717,74,773,74],[718,6,774,4],[718,10,774,10,"y"],[718,11,774,11],[718,14,774,14,"Math"],[718,18,774,18],[718,19,774,19,"random"],[718,25,774,25],[718,26,774,26],[718,27,774,27],[718,31,774,31,"GAME_AREA_HEIGHT"],[718,47,774,47],[718,50,774,50,"ENEMY_SIZE"],[718,60,774,60],[718,63,774,63],[718,64,774,64],[718,65,774,65],[718,68,774,68,"ENEMY_SIZE"],[718,78,774,78],[719,6,776,4],[719,10,776,10,"enemy"],[719,15,776,28],[719,18,776,31],[720,8,777,6,"id"],[720,10,777,8],[720,12,777,10],[720,30,777,28,"Date"],[720,34,777,32],[720,35,777,33,"now"],[720,38,777,36],[720,39,777,37],[720,40,777,38],[720,44,777,42,"Math"],[720,48,777,46],[720,49,777,47,"random"],[720,55,777,53],[720,56,777,54],[720,57,777,55],[720,59,777,57],[721,8,778,6,"name"],[721,12,778,10],[721,14,778,12],[721,26,778,24,"Math"],[721,30,778,28],[721,31,778,29,"floor"],[721,36,778,34],[721,37,778,35,"Math"],[721,41,778,39],[721,42,778,40,"random"],[721,48,778,46],[721,49,778,47],[721,50,778,48],[721,53,778,51],[721,56,778,54],[721,57,778,55],[721,59,778,57],[722,8,779,6,"health"],[722,14,779,12],[722,16,779,14],[722,18,779,16],[723,8,780,6,"maxHealth"],[723,17,780,15],[723,19,780,17],[723,21,780,19],[724,8,781,6,"stats"],[724,13,781,11],[724,15,781,13],[725,10,782,8,"attack"],[725,16,782,14],[725,18,782,16],[725,20,782,18],[726,10,783,8,"defense"],[726,17,783,15],[726,19,783,17],[726,21,783,19],[727,10,784,8,"health"],[727,16,784,14],[727,18,784,16],[727,20,784,18],[728,10,785,8,"maxHealth"],[728,19,785,17],[728,21,785,19],[728,23,785,21],[729,10,786,8,"critChance"],[729,20,786,18],[729,22,786,20],[729,23,786,21],[730,10,787,8,"critDamage"],[730,20,787,18],[730,22,787,20],[730,25,787,23],[731,10,788,8,"cooldownReduction"],[731,27,788,25],[731,29,788,27],[732,8,789,6],[732,9,789,7],[733,8,790,6,"position"],[733,16,790,14],[733,18,790,16],[734,10,790,18,"x"],[734,11,790,19],[735,10,790,21,"y"],[736,8,790,23],[736,9,790,24],[737,8,791,6,"lastDamaged"],[737,19,791,17],[737,21,791,19],[738,6,792,4],[738,7,792,5],[739,6,794,4,"console"],[739,13,794,11],[739,14,794,12,"log"],[739,17,794,15],[739,18,794,16],[739,42,794,40,"enemy"],[739,47,794,45],[739,48,794,46,"name"],[739,52,794,50],[739,60,794,58,"Math"],[739,64,794,62],[739,65,794,63,"round"],[739,70,794,68],[739,71,794,69,"x"],[739,72,794,70],[739,73,794,71],[739,78,794,76,"Math"],[739,82,794,80],[739,83,794,81,"round"],[739,88,794,86],[739,89,794,87,"y"],[739,90,794,88],[739,91,794,89],[739,94,794,92],[739,95,794,93],[740,6,795,4,"state"],[740,11,795,9],[740,12,795,10,"enemies"],[740,19,795,17],[740,20,795,18,"push"],[740,24,795,22],[740,25,795,23,"enemy"],[740,30,795,28],[740,31,795,29],[741,4,796,2],[741,5,796,3],[743,4,798,2],[744,4,799,2],[744,8,799,8,"startCombat"],[744,19,799,19],[744,22,799,22,"React"],[744,27,799,27],[744,28,799,27,"default"],[744,35,799,27],[744,36,799,28,"useCallback"],[744,47,799,39],[744,48,799,40],[744,54,799,46],[745,6,800,4,"console"],[745,13,800,11],[745,14,800,12,"log"],[745,17,800,15],[745,18,800,16],[745,63,800,61],[745,64,800,62],[746,6,801,4,"setCombatState"],[746,20,801,18],[746,21,801,19,"prev"],[746,25,801,23],[746,30,801,28],[747,8,801,30],[747,11,801,33,"prev"],[747,15,801,37],[748,8,801,39,"isInCombat"],[748,18,801,49],[748,20,801,51],[749,6,801,56],[749,7,801,57],[749,8,801,58],[749,9,801,59],[751,6,803,4],[752,6,804,4,"combatEngine"],[752,25,804,16],[752,26,804,16,"combatEngine"],[752,38,804,16],[752,39,804,17,"addTickCallback"],[752,54,804,32],[752,55,804,33,"handleCombatTick"],[752,71,804,49],[752,72,804,50],[753,6,805,4,"console"],[753,13,805,11],[753,14,805,12,"log"],[753,17,805,15],[753,18,805,16],[753,62,805,60],[753,63,805,61],[755,6,807,4],[756,6,808,4,"combatEngine"],[756,25,808,16],[756,26,808,16,"combatEngine"],[756,38,808,16],[756,39,808,17,"start"],[756,44,808,22],[756,45,808,23],[756,46,808,24],[757,4,809,2],[757,5,809,3],[757,7,809,5],[757,8,809,6,"combatEngine"],[757,27,809,18],[757,28,809,18,"combatEngine"],[757,40,809,18],[757,42,809,20,"handleCombatTick"],[757,58,809,36],[757,59,809,37],[757,60,809,38],[759,4,811,2],[760,4,812,2],[760,8,812,8,"stopCombat"],[760,18,812,18],[760,21,812,21,"React"],[760,26,812,26],[760,27,812,26,"default"],[760,34,812,26],[760,35,812,27,"useCallback"],[760,46,812,38],[760,47,812,39],[760,53,812,45],[761,6,813,4,"setCombatState"],[761,20,813,18],[761,21,813,19,"prev"],[761,25,813,23],[761,30,813,28],[762,8,813,30],[762,11,813,33,"prev"],[762,15,813,37],[763,8,813,39,"isInCombat"],[763,18,813,49],[763,20,813,51],[764,6,813,57],[764,7,813,58],[764,8,813,59],[764,9,813,60],[765,6,814,4,"combatEngine"],[765,25,814,16],[765,26,814,16,"combatEngine"],[765,38,814,16],[765,39,814,17,"removeTickCallback"],[765,57,814,35],[765,58,814,36,"handleCombatTick"],[765,74,814,52],[765,75,814,53],[766,4,815,2],[766,5,815,3],[766,7,815,5],[766,8,815,6,"combatEngine"],[766,27,815,18],[766,28,815,18,"combatEngine"],[766,40,815,18],[766,42,815,20,"handleCombatTick"],[766,58,815,36],[766,59,815,37],[766,60,815,38],[768,4,817,2],[769,4,818,2],[769,8,818,8,"equipAbility"],[769,20,818,20],[769,23,818,23,"equipAbility"],[769,24,818,24,"abilityId"],[769,33,818,41],[769,35,818,43,"slotIndex"],[769,44,818,60],[769,49,818,74],[770,6,819,4],[770,13,819,11,"combatState"],[770,24,819,22],[770,25,819,23,"abilityManager"],[770,39,819,37],[770,40,819,38,"equipAbility"],[770,52,819,50],[770,53,819,51,"abilityId"],[770,62,819,60],[770,64,819,62,"slotIndex"],[770,73,819,71],[770,74,819,72],[771,4,820,2],[771,5,820,3],[772,4,822,2],[772,8,822,8,"getDeck"],[772,15,822,15],[772,18,822,18,"getDeck"],[772,19,822,18],[772,24,822,24],[773,6,823,4],[773,13,823,11,"combatState"],[773,24,823,22],[773,25,823,23,"abilityManager"],[773,39,823,37],[773,40,823,38,"getDeck"],[773,47,823,45],[773,48,823,46],[773,49,823,47],[774,4,824,2],[774,5,824,3],[775,4,826,2],[775,8,826,8,"getAvailableAbilities"],[775,29,826,29],[775,32,826,32,"getAvailableAbilities"],[775,33,826,32],[775,38,826,38],[776,6,827,4],[776,13,827,11,"combatState"],[776,24,827,22],[776,25,827,23,"abilityManager"],[776,39,827,37],[776,40,827,38,"getAvailableAbilities"],[776,61,827,59],[776,62,827,60],[776,63,827,61],[777,4,828,2],[777,5,828,3],[778,4,830,2],[778,8,830,8,"upgradeAbility"],[778,22,830,22],[778,25,830,26,"abilityId"],[778,34,830,43],[778,38,830,57],[779,6,831,4],[779,13,831,11,"combatState"],[779,24,831,22],[779,25,831,23,"abilityManager"],[779,39,831,37],[779,40,831,38,"upgradeAbility"],[779,54,831,52],[779,55,831,53,"abilityId"],[779,64,831,62],[779,65,831,63],[780,4,832,2],[780,5,832,3],[782,4,834,2],[783,4,835,2],[783,8,835,8,"clearAllEnemies"],[783,23,835,23],[783,26,835,26,"clearAllEnemies"],[783,27,835,26],[783,32,835,32],[784,6,836,4,"console"],[784,13,836,11],[784,14,836,12,"log"],[784,17,836,15],[784,18,836,16],[784,67,836,65],[784,68,836,66],[785,6,837,4,"setCombatState"],[785,20,837,18],[785,21,837,19,"prev"],[785,25,837,23],[785,30,837,28],[786,8,838,6],[786,11,838,9,"prev"],[786,15,838,13],[787,8,839,6,"enemies"],[787,15,839,13],[787,17,839,15],[788,6,840,4],[788,7,840,5],[788,8,840,6],[788,9,840,7],[789,4,841,2],[789,5,841,3],[791,4,843,2],[792,4,844,2],[792,8,844,8,"triggerLevelUpExplosion"],[792,31,844,31],[792,34,844,34,"triggerLevelUpExplosion"],[792,35,844,34],[792,40,844,40],[793,6,845,4,"console"],[793,13,845,11],[793,14,845,12,"log"],[793,17,845,15],[793,18,845,16],[793,70,845,68],[793,71,845,69],[794,6,847,4],[794,10,847,10,"explosionTime"],[794,23,847,23],[794,26,847,26,"Date"],[794,30,847,30],[794,31,847,31,"now"],[794,34,847,34],[794,35,847,35],[794,36,847,36],[795,6,848,4,"setLastExplosionTime"],[795,26,848,24],[795,27,848,25,"explosionTime"],[795,40,848,38],[795,41,848,39],[796,6,850,4,"setCombatState"],[796,20,850,18],[796,21,850,19,"prev"],[796,25,850,23],[796,29,850,27],[797,8,851,6],[798,8,852,6],[798,12,852,12,"enemyCount"],[798,22,852,22],[798,25,852,25,"prev"],[798,29,852,29],[798,30,852,30,"enemies"],[798,37,852,37],[798,38,852,38,"length"],[798,44,852,44],[799,8,853,6],[799,12,853,12,"explosionXP"],[799,23,853,23],[799,26,853,26,"enemyCount"],[799,36,853,36],[799,39,853,39],[799,42,853,42],[799,43,853,43],[799,44,853,44],[800,8,854,6],[800,12,854,12,"explosionGold"],[800,25,854,25],[800,28,854,28,"enemyCount"],[800,38,854,38],[800,41,854,41],[800,44,854,44],[800,45,854,45],[800,46,854,46],[802,8,856,6,"console"],[802,15,856,13],[802,16,856,14,"log"],[802,19,856,17],[802,20,856,18],[802,44,856,42,"enemyCount"],[802,54,856,52],[802,76,856,74,"explosionXP"],[802,87,856,85],[802,98,856,96,"explosionGold"],[802,111,856,109],[802,118,856,116],[802,119,856,117],[804,8,858,6],[805,8,859,6],[805,12,859,10,"explosionXP"],[805,23,859,21],[805,26,859,24],[805,27,859,25],[805,29,859,27],[806,10,860,8,"setTimeout"],[806,20,860,18],[806,21,860,19],[806,27,860,25],[807,12,861,10,"game"],[807,16,861,14],[807,17,861,15,"updateNinja"],[807,28,861,26],[807,29,861,28,"ninja"],[807,34,861,33],[807,39,861,39],[808,14,862,12,"experience"],[808,24,862,22],[808,26,862,24,"ninja"],[808,31,862,29],[808,32,862,30,"experience"],[808,42,862,40],[808,45,862,43,"explosionXP"],[808,56,862,54],[809,14,863,12,"gold"],[809,18,863,16],[809,20,863,18,"ninja"],[809,25,863,23],[809,26,863,24,"gold"],[809,30,863,28],[809,33,863,31,"explosionGold"],[810,12,864,10],[810,13,864,11],[810,14,864,12],[810,15,864,13],[811,10,865,8],[811,11,865,9],[811,13,865,11],[811,14,865,12],[811,15,865,13],[811,16,865,14],[811,17,865,15],[812,8,866,6],[814,8,868,6],[815,8,869,6],[816,8,870,6],[816,12,870,12,"damagedEnemies"],[816,26,870,26],[816,29,870,29,"prev"],[816,33,870,33],[816,34,870,34,"enemies"],[816,41,870,41],[816,42,870,42,"map"],[816,45,870,45],[816,46,870,46,"enemy"],[816,51,870,51],[816,56,870,56],[817,10,871,8],[817,13,871,11,"enemy"],[817,18,871,16],[818,10,872,8,"health"],[818,16,872,14],[818,18,872,16],[818,19,872,17],[819,10,872,19],[820,10,873,8,"lastDamaged"],[820,21,873,19],[820,23,873,21,"combatEngine"],[820,42,873,33],[820,43,873,33,"combatEngine"],[820,55,873,33],[820,56,873,34,"getCurrentTick"],[820,70,873,48],[820,71,873,49],[821,8,874,6],[821,9,874,7],[821,10,874,8],[821,11,874,9],[822,8,876,6],[822,15,876,13],[823,10,877,8],[823,13,877,11,"prev"],[823,17,877,15],[824,10,878,8,"enemies"],[824,17,878,15],[824,19,878,17,"damagedEnemies"],[825,8,879,6],[825,9,879,7],[826,6,880,4],[826,7,880,5],[826,8,880,6],[827,4,881,2],[827,5,881,3],[829,4,883,2],[830,4,884,2],[830,8,884,8,"spawnEnemy"],[830,18,884,18],[830,21,884,22,"position"],[830,29,884,57],[830,33,884,75],[831,6,885,4],[831,10,885,10,"SCREEN_WIDTH"],[831,22,885,22],[831,25,885,25],[831,28,885,28],[832,6,886,4],[832,10,886,10,"GAME_AREA_HEIGHT"],[832,26,886,26],[832,29,886,29],[832,32,886,32],[832,35,886,35],[832,38,886,38],[832,39,886,39],[832,40,886,40],[833,6,887,4],[833,10,887,10,"ENEMY_SIZE"],[833,20,887,20],[833,23,887,23],[833,25,887,25],[835,6,889,4],[836,6,890,4],[836,10,890,10,"x"],[836,11,890,11],[836,14,890,14,"position"],[836,22,890,22],[836,24,890,24,"x"],[836,25,890,25],[836,29,890,29,"Math"],[836,33,890,33],[836,34,890,34,"random"],[836,40,890,40],[836,41,890,41],[836,42,890,42],[836,46,890,46,"SCREEN_WIDTH"],[836,58,890,58],[836,61,890,61,"ENEMY_SIZE"],[836,71,890,71],[836,74,890,74],[836,75,890,75],[836,76,890,76],[836,79,890,79,"ENEMY_SIZE"],[836,89,890,89],[837,6,891,4],[837,10,891,10,"y"],[837,11,891,11],[837,14,891,14,"position"],[837,22,891,22],[837,24,891,24,"y"],[837,25,891,25],[837,29,891,29,"Math"],[837,33,891,33],[837,34,891,34,"random"],[837,40,891,40],[837,41,891,41],[837,42,891,42],[837,46,891,46,"GAME_AREA_HEIGHT"],[837,62,891,62],[837,65,891,65,"ENEMY_SIZE"],[837,75,891,75],[837,78,891,78],[837,79,891,79],[837,80,891,80],[837,83,891,83,"ENEMY_SIZE"],[837,93,891,93],[838,6,893,4],[838,10,893,10,"enemy"],[838,15,893,28],[838,18,893,31],[839,8,894,6,"id"],[839,10,894,8],[839,12,894,10],[839,21,894,19],[839,23,894,21,"enemyCounter"],[839,35,894,33],[839,37,894,35],[840,8,895,6,"name"],[840,12,895,10],[840,14,895,12],[840,24,895,22],[841,8,896,6,"health"],[841,14,896,12],[841,16,896,14],[841,19,896,17],[842,8,897,6,"maxHealth"],[842,17,897,15],[842,19,897,17],[842,22,897,20],[843,8,898,6,"stats"],[843,13,898,11],[843,15,898,13],[844,10,899,8,"attack"],[844,16,899,14],[844,18,899,16],[844,20,899,18],[845,10,900,8,"defense"],[845,17,900,15],[845,19,900,17],[845,21,900,19],[846,10,901,8,"health"],[846,16,901,14],[846,18,901,16],[846,21,901,19],[847,10,902,8,"maxHealth"],[847,19,902,17],[847,21,902,19],[847,24,902,22],[848,10,903,8,"critChance"],[848,20,903,18],[848,22,903,20],[848,23,903,21],[849,10,904,8,"critDamage"],[849,20,904,18],[849,22,904,20],[849,25,904,23],[850,10,905,8,"cooldownReduction"],[850,27,905,25],[850,29,905,27],[851,8,906,6],[851,9,906,7],[852,8,907,6,"position"],[852,16,907,14],[852,18,907,16],[853,10,907,18,"x"],[853,11,907,19],[854,10,907,21,"y"],[855,8,907,23],[855,9,907,24],[856,8,908,6,"lastDamaged"],[856,19,908,17],[856,21,908,19],[857,6,909,4],[857,7,909,5],[858,6,911,4,"setCombatState"],[858,20,911,18],[858,21,911,19,"prev"],[858,25,911,23],[858,30,911,28],[859,8,912,6],[859,11,912,9,"prev"],[859,15,912,13],[860,8,913,6,"enemies"],[860,15,913,13],[860,17,913,15],[860,18,913,16],[860,21,913,19,"prev"],[860,25,913,23],[860,26,913,24,"enemies"],[860,33,913,31],[860,35,913,33,"enemy"],[860,40,913,38],[861,6,914,4],[861,7,914,5],[861,8,914,6],[861,9,914,7],[862,6,916,4],[862,13,916,11,"enemy"],[862,18,916,16],[863,4,917,2],[863,5,917,3],[865,4,919,2],[866,4,920,2],[866,8,920,8,"spawnBoss"],[866,17,920,17],[866,20,920,21,"bossEnemy"],[866,29,920,43],[866,33,920,48],[867,6,921,4,"console"],[867,13,921,11],[867,14,921,12,"log"],[867,17,921,15],[867,18,921,16],[867,39,921,37,"bossEnemy"],[867,48,921,46],[867,49,921,47,"name"],[867,53,921,51],[867,90,921,88],[867,91,921,89],[868,6,922,4,"setCombatState"],[868,20,922,18],[868,21,922,19,"prev"],[868,25,922,23],[868,30,922,28],[869,8,923,6],[869,11,923,9,"prev"],[869,15,923,13],[870,8,924,6,"enemies"],[870,15,924,13],[870,17,924,15],[870,18,924,16,"bossEnemy"],[870,27,924,25],[870,28,924,26],[870,29,924,27],[871,6,925,4],[871,7,925,5],[871,8,925,6],[871,9,925,7],[872,4,926,2],[872,5,926,3],[874,4,928,2],[875,4,929,2],[875,8,929,8,"clearSpecificEnemy"],[875,26,929,26],[875,29,929,30,"enemyId"],[875,36,929,45],[875,40,929,50],[876,6,930,4,"setCombatState"],[876,20,930,18],[876,21,930,19,"prev"],[876,25,930,23],[876,30,930,28],[877,8,931,6],[877,11,931,9,"prev"],[877,15,931,13],[878,8,932,6,"enemies"],[878,15,932,13],[878,17,932,15,"prev"],[878,21,932,19],[878,22,932,20,"enemies"],[878,29,932,27],[878,30,932,28,"filter"],[878,36,932,34],[878,37,932,35,"enemy"],[878,42,932,40],[878,46,932,44,"enemy"],[878,51,932,49],[878,52,932,50,"id"],[878,54,932,52],[878,59,932,57,"enemyId"],[878,66,932,64],[879,6,933,4],[879,7,933,5],[879,8,933,6],[879,9,933,7],[880,4,934,2],[880,5,934,3],[882,4,936,2],[883,4,937,2],[883,8,937,8,"useAbilityManually"],[883,26,937,26],[883,29,937,26,"_s3"],[883,32,937,26],[883,33,937,29],[883,37,937,29,"useCallback"],[883,43,937,40],[883,44,937,40,"useCallback"],[883,55,937,40],[883,57,937,40,"_s3"],[883,60,937,40],[883,61,937,42,"slotIndex"],[883,70,937,59],[883,74,937,73],[884,6,937,73,"_s3"],[884,9,937,73],[885,6,938,4,"console"],[885,13,938,11],[885,14,938,12,"log"],[885,17,938,15],[885,18,938,16],[885,53,938,51,"slotIndex"],[885,62,938,60],[885,64,938,62],[885,65,938,63],[887,6,940,4],[888,6,941,4],[888,10,941,10,"isReady"],[888,17,941,17],[888,20,941,20,"combatState"],[888,31,941,31],[888,32,941,32,"abilityManager"],[888,46,941,46],[888,47,941,47,"isAbilityReady"],[888,61,941,61],[888,62,941,62,"slotIndex"],[888,71,941,71],[888,72,941,72],[889,6,942,4],[889,10,942,8],[889,11,942,9,"isReady"],[889,18,942,16],[889,20,942,18],[890,8,943,6,"console"],[890,15,943,13],[890,16,943,14,"log"],[890,19,943,17],[890,20,943,18],[890,41,943,39,"slotIndex"],[890,50,943,48],[890,85,943,83],[890,86,943,84],[891,8,944,6],[891,15,944,13],[891,20,944,18],[892,6,945,4],[894,6,947,4],[895,6,948,4],[895,10,948,8,"combatState"],[895,21,948,19],[895,22,948,20,"enemies"],[895,29,948,27],[895,30,948,28,"length"],[895,36,948,34],[895,41,948,39],[895,42,948,40],[895,44,948,42],[896,8,949,6,"console"],[896,15,949,13],[896,16,949,14,"log"],[896,19,949,17],[896,20,949,18],[896,69,949,67],[896,70,949,68],[897,8,950,6],[897,15,950,13],[897,20,950,18],[898,6,951,4],[900,6,953,4],[901,6,954,4],[901,10,954,10,"currentTick"],[901,21,954,21],[901,24,954,24,"combatEngine"],[901,43,954,36],[901,44,954,36,"combatEngine"],[901,56,954,36],[901,57,954,37,"getCurrentTick"],[901,71,954,51],[901,72,954,52],[901,73,954,53],[902,6,955,4],[902,10,955,10,"success"],[902,17,955,17],[902,20,955,20,"combatState"],[902,31,955,31],[902,32,955,32,"abilityManager"],[902,46,955,46],[902,47,955,47,"useAbility"],[902,57,955,57],[902,58,955,58,"slotIndex"],[902,67,955,67],[902,69,955,69,"currentTick"],[902,80,955,80],[902,81,955,81],[903,6,957,4],[903,10,957,8,"success"],[903,17,957,15],[903,19,957,17],[904,8,958,6],[905,8,959,6,"setCombatState"],[905,22,959,20],[905,23,959,21,"prev"],[905,27,959,25],[905,31,959,29],[906,10,960,8],[906,14,960,14,"newState"],[906,22,960,22],[906,25,960,25],[907,12,960,27],[907,15,960,30,"prev"],[908,10,960,35],[908,11,960,36],[909,10,961,8,"castAbility"],[909,21,961,19],[909,22,961,20,"newState"],[909,30,961,28],[909,32,961,30,"slotIndex"],[909,41,961,39],[909,42,961,40],[910,10,962,8],[910,17,962,15,"newState"],[910,25,962,23],[911,8,963,6],[911,9,963,7],[911,10,963,8],[912,8,965,6,"console"],[912,15,965,13],[912,16,965,14,"log"],[912,19,965,17],[912,20,965,18],[912,65,965,63,"slotIndex"],[912,74,965,72],[912,76,965,74],[912,77,965,75],[913,8,966,6],[913,15,966,13],[913,19,966,17],[914,6,967,4],[914,7,967,5],[914,13,967,11],[915,8,968,6,"console"],[915,15,968,13],[915,16,968,14,"log"],[915,19,968,17],[915,20,968,18],[915,61,968,59,"slotIndex"],[915,70,968,68],[915,72,968,70],[915,73,968,71],[916,8,969,6],[916,15,969,13],[916,20,969,18],[917,6,970,4],[918,4,971,2],[918,5,971,3],[918,46,971,5],[918,47,971,6,"combatState"],[918,58,971,17],[918,59,971,18,"abilityManager"],[918,73,971,32],[918,75,971,34,"combatState"],[918,86,971,45],[918,87,971,46,"enemies"],[918,94,971,53],[918,95,971,54],[918,96,971,55],[919,4,972,2],[919,8,972,2,"useEffect"],[919,14,972,11],[919,15,972,11,"useEffect"],[919,24,972,11],[919,26,972,12],[919,32,972,18],[920,6,973,4,"combatEngine"],[920,25,973,16],[920,26,973,16,"combatEngine"],[920,38,973,16],[920,39,973,17,"start"],[920,44,973,22],[920,45,973,23],[920,46,973,24],[922,6,975,4],[923,6,976,4],[924,6,977,4,"console"],[924,13,977,11],[924,14,977,12,"log"],[924,17,977,15],[924,18,977,16],[924,97,977,95],[924,98,977,96],[925,6,979,4],[925,13,979,11],[925,19,979,17],[926,8,980,6,"combatEngine"],[926,27,980,18],[926,28,980,18,"combatEngine"],[926,40,980,18],[926,41,980,19,"stop"],[926,45,980,23],[926,46,980,24],[926,47,980,25],[927,6,981,4],[927,7,981,5],[928,4,982,2],[928,5,982,3],[928,7,982,5],[928,9,982,7],[928,10,982,8],[930,4,984,2],[931,4,985,2],[931,8,985,2,"useEffect"],[931,14,985,11],[931,15,985,11,"useEffect"],[931,24,985,11],[931,26,985,12],[931,32,985,18],[932,6,986,4],[932,10,986,10,"processProjectileImpacts"],[932,34,986,34],[932,37,986,37,"processProjectileImpacts"],[932,38,986,37],[932,43,986,43],[933,8,987,6,"setProjectiles"],[933,22,987,20],[933,23,987,21,"currentProjectiles"],[933,41,987,39],[933,45,987,43],[934,10,988,8],[934,17,988,15,"currentProjectiles"],[934,35,988,33],[934,36,988,34,"map"],[934,39,988,37],[934,40,988,38,"projectile"],[934,50,988,48],[934,54,988,52],[935,12,989,10],[935,16,989,14],[935,17,989,15,"projectile"],[935,27,989,25],[935,29,989,27],[935,36,989,34],[935,40,989,38],[937,12,991,10],[938,12,992,10],[938,16,992,16,"currentTime"],[938,27,992,27],[938,30,992,30,"Date"],[938,34,992,34],[938,35,992,35,"now"],[938,38,992,38],[938,39,992,39],[938,40,992,40],[939,12,993,10],[939,16,993,16,"startTime"],[939,25,993,25],[939,28,993,28,"projectile"],[939,38,993,38],[939,39,993,39,"startTime"],[939,48,993,48],[939,52,993,52,"currentTime"],[939,63,993,63],[940,12,994,10],[940,16,994,16,"elapsedTime"],[940,27,994,27],[940,30,994,30,"currentTime"],[940,41,994,41],[940,44,994,44,"startTime"],[940,53,994,53],[941,12,995,10],[941,16,995,16,"progress"],[941,24,995,24],[941,27,995,27,"Math"],[941,31,995,31],[941,32,995,32,"min"],[941,35,995,35],[941,36,995,36,"elapsedTime"],[941,47,995,47],[941,51,995,51,"projectile"],[941,61,995,61],[941,62,995,62,"duration"],[941,70,995,70],[941,74,995,74],[941,77,995,77],[941,78,995,78],[941,80,995,80],[941,81,995,81],[941,82,995,82],[943,12,997,10],[944,12,998,10],[944,16,998,14,"progress"],[944,24,998,22],[944,28,998,26],[944,29,998,27],[944,33,998,31],[944,34,998,32,"projectile"],[944,44,998,42],[944,45,998,43,"hasHit"],[944,51,998,49],[944,53,998,51],[945,14,999,12,"projectile"],[945,24,999,22],[945,25,999,23,"hasHit"],[945,31,999,29],[945,34,999,32],[945,38,999,36],[946,14,1001,12,"console"],[946,21,1001,19],[946,22,1001,20,"log"],[946,25,1001,23],[946,26,1001,24],[946,51,1001,49,"projectile"],[946,61,1001,59],[946,62,1001,60,"abilityName"],[946,73,1001,71],[946,87,1001,85,"projectile"],[946,97,1001,95],[946,98,1001,96,"targetEnemyId"],[946,111,1001,109],[946,119,1001,117,"projectile"],[946,129,1001,127],[946,130,1001,128,"damage"],[946,136,1001,134],[946,145,1001,143],[946,146,1001,144],[948,14,1003,12],[949,14,1004,12,"setCombatState"],[949,28,1004,26],[949,29,1004,27,"prev"],[949,33,1004,31],[949,37,1004,35],[950,16,1005,14],[950,20,1005,20,"newState"],[950,28,1005,28],[950,31,1005,31],[951,18,1005,33],[951,21,1005,36,"prev"],[952,16,1005,41],[952,17,1005,42],[953,16,1006,14],[953,20,1006,20,"enemyIndex"],[953,30,1006,30],[953,33,1006,33,"newState"],[953,41,1006,41],[953,42,1006,42,"enemies"],[953,49,1006,49],[953,50,1006,50,"findIndex"],[953,59,1006,59],[953,60,1006,60,"e"],[953,61,1006,61],[953,65,1006,65,"e"],[953,66,1006,66],[953,67,1006,67,"id"],[953,69,1006,69],[953,74,1006,74,"projectile"],[953,84,1006,84],[953,85,1006,85,"targetEnemyId"],[953,98,1006,98],[953,99,1006,99],[954,16,1008,14],[954,20,1008,18,"enemyIndex"],[954,30,1008,28],[954,34,1008,32],[954,35,1008,33],[954,39,1008,37,"newState"],[954,47,1008,45],[954,48,1008,46,"enemies"],[954,55,1008,53],[954,56,1008,54,"enemyIndex"],[954,66,1008,64],[954,67,1008,65],[954,68,1008,66,"health"],[954,74,1008,72],[954,77,1008,75],[954,78,1008,76],[954,80,1008,78],[955,18,1009,16,"newState"],[955,26,1009,24],[955,27,1009,25,"enemies"],[955,34,1009,32],[955,37,1009,35],[955,38,1009,36],[955,41,1009,39,"newState"],[955,49,1009,47],[955,50,1009,48,"enemies"],[955,57,1009,55],[955,58,1009,56],[956,18,1010,16],[956,22,1010,22,"enemy"],[956,27,1010,27],[956,30,1010,30,"newState"],[956,38,1010,38],[956,39,1010,39,"enemies"],[956,46,1010,46],[956,47,1010,47,"enemyIndex"],[956,57,1010,57],[956,58,1010,58],[957,18,1011,16],[957,22,1011,22,"newHealth"],[957,31,1011,31],[957,34,1011,34,"Math"],[957,38,1011,38],[957,39,1011,39,"max"],[957,42,1011,42],[957,43,1011,43],[957,44,1011,44],[957,46,1011,46,"enemy"],[957,51,1011,51],[957,52,1011,52,"health"],[957,58,1011,58],[957,61,1011,61,"projectile"],[957,71,1011,71],[957,72,1011,72,"damage"],[957,78,1011,78],[957,79,1011,79],[958,18,1013,16,"newState"],[958,26,1013,24],[958,27,1013,25,"enemies"],[958,34,1013,32],[958,35,1013,33,"enemyIndex"],[958,45,1013,43],[958,46,1013,44],[958,49,1013,47],[959,20,1014,18],[959,23,1014,21,"enemy"],[959,28,1014,26],[960,20,1015,18,"health"],[960,26,1015,24],[960,28,1015,26,"newHealth"],[960,37,1015,35],[961,20,1016,18,"lastDamaged"],[961,31,1016,29],[961,33,1016,31,"combatEngine"],[961,52,1016,43],[961,53,1016,43,"combatEngine"],[961,65,1016,43],[961,66,1016,44,"getCurrentTick"],[961,80,1016,58],[961,81,1016,59],[962,18,1017,16],[962,19,1017,17],[963,18,1019,16,"console"],[963,25,1019,23],[963,26,1019,24,"log"],[963,29,1019,27],[963,30,1019,28],[963,52,1019,50,"enemy"],[963,57,1019,55],[963,58,1019,56,"name"],[963,62,1019,60],[963,74,1019,72,"newHealth"],[963,83,1019,81],[963,87,1019,85,"enemy"],[963,92,1019,90],[963,93,1019,91,"maxHealth"],[963,102,1019,100],[963,104,1019,102],[963,105,1019,103],[965,18,1021,16],[966,18,1022,16],[966,22,1022,20,"newHealth"],[966,31,1022,29],[966,35,1022,33],[966,36,1022,34],[966,40,1022,38,"enemy"],[966,45,1022,43],[966,46,1022,44,"health"],[966,52,1022,50],[966,55,1022,53],[966,56,1022,54],[966,58,1022,56],[967,20,1023,18,"console"],[967,27,1023,25],[967,28,1023,26,"log"],[967,31,1023,29],[967,32,1023,30],[967,55,1023,53,"enemy"],[967,60,1023,58],[967,61,1023,59,"name"],[967,65,1023,63],[967,79,1023,77,"projectile"],[967,89,1023,87],[967,90,1023,88,"abilityName"],[967,101,1023,99],[967,104,1023,102],[967,105,1023,103],[968,20,1024,18,"setTimeout"],[968,30,1024,28],[968,31,1024,29],[968,37,1024,35,"handleEnemyKill"],[968,52,1024,50],[968,53,1024,51,"enemy"],[968,58,1024,56],[968,59,1024,57],[968,61,1024,59],[968,62,1024,60],[968,63,1024,61],[969,18,1025,16],[970,16,1026,14],[971,16,1028,14],[971,23,1028,21,"newState"],[971,31,1028,29],[972,14,1029,12],[972,15,1029,13],[972,16,1029,14],[973,12,1030,10],[975,12,1032,10],[976,12,1033,10],[976,16,1033,14,"progress"],[976,24,1033,22],[976,28,1033,26],[976,31,1033,29],[976,33,1033,31],[977,14,1034,12],[977,21,1034,19],[977,25,1034,23],[978,12,1035,10],[979,12,1037,10],[979,19,1037,17,"projectile"],[979,29,1037,27],[980,10,1038,8],[980,11,1038,9],[980,12,1038,10],[980,13,1038,11,"filter"],[980,19,1038,17],[980,20,1038,18,"Boolean"],[980,27,1038,25],[980,28,1038,26],[981,8,1039,6],[981,9,1039,7],[981,10,1039,8],[982,6,1040,4],[982,7,1040,5],[984,6,1042,4],[985,6,1043,4],[985,10,1043,10,"impactInterval"],[985,24,1043,24],[985,27,1043,27,"setInterval"],[985,38,1043,38],[985,39,1043,39,"processProjectileImpacts"],[985,63,1043,63],[985,65,1043,65],[985,67,1043,67],[985,68,1043,68],[986,6,1044,4],[986,13,1044,11],[986,19,1044,17,"clearInterval"],[986,32,1044,30],[986,33,1044,31,"impactInterval"],[986,47,1044,45],[986,48,1044,46],[987,4,1045,2],[987,5,1045,3],[987,7,1045,5],[987,8,1045,6,"handleEnemyKill"],[987,23,1045,21],[987,24,1045,22],[987,25,1045,23],[989,4,1047,2],[990,4,1048,2],[990,8,1048,8,"saveAbilityData"],[990,23,1048,23],[990,26,1048,26],[990,30,1048,26,"useCallback"],[990,36,1048,37],[990,37,1048,37,"useCallback"],[990,48,1048,37],[990,50,1048,38],[990,56,1048,44],[991,6,1049,4],[991,10,1049,8,"combatState"],[991,21,1049,19],[991,22,1049,20,"abilityManager"],[991,36,1049,34],[991,38,1049,36],[992,8,1050,6],[992,12,1050,12,"abilityData"],[992,23,1050,23],[992,26,1050,26,"combatState"],[992,37,1050,37],[992,38,1050,38,"abilityManager"],[992,52,1050,52],[992,53,1050,53,"getSaveData"],[992,64,1050,64],[992,65,1050,65],[992,66,1050,66],[993,8,1051,6,"console"],[993,15,1051,13],[993,16,1051,14,"log"],[993,19,1051,17],[993,20,1051,18],[993,70,1051,68],[993,72,1051,70,"abilityData"],[993,83,1051,81],[993,84,1051,82],[994,8,1052,6,"game"],[994,12,1052,10],[994,13,1052,11,"updateAbilityData"],[994,30,1052,28],[994,31,1052,29,"abilityData"],[994,42,1052,40],[994,43,1052,41],[995,6,1053,4],[996,4,1054,2],[996,5,1054,3],[996,7,1054,5],[996,8,1054,6,"combatState"],[996,19,1054,17],[996,20,1054,18,"abilityManager"],[996,34,1054,32],[996,36,1054,34,"game"],[996,40,1054,38],[996,41,1054,39,"updateAbilityData"],[996,58,1054,56],[996,59,1054,57],[996,60,1054,58],[997,4,1056,2],[997,8,1056,8,"contextValue"],[997,20,1056,39],[997,23,1056,42,"React"],[997,28,1056,47],[997,29,1056,47,"default"],[997,36,1056,47],[997,37,1056,48,"useMemo"],[997,44,1056,55],[997,45,1056,56],[997,52,1056,63],[998,6,1057,4,"combatState"],[998,17,1057,15],[999,6,1058,4,"projectiles"],[999,17,1058,15],[1000,6,1059,4,"startCombat"],[1000,17,1059,15],[1001,6,1060,4,"stopCombat"],[1001,16,1060,14],[1002,6,1061,4,"equipAbility"],[1002,18,1061,16],[1003,6,1062,4,"handleEnemyKill"],[1003,21,1062,19],[1004,6,1063,4,"getDeck"],[1004,13,1063,11],[1005,6,1064,4,"getAvailableAbilities"],[1005,27,1064,25],[1006,6,1065,4,"upgradeAbility"],[1006,20,1065,18],[1007,6,1066,4,"spawnEnemy"],[1007,16,1066,14],[1008,6,1067,4,"spawnBoss"],[1008,15,1067,13],[1009,6,1068,4,"clearAllEnemies"],[1009,21,1068,19],[1010,6,1069,4,"clearSpecificEnemy"],[1010,24,1069,22],[1011,6,1070,4,"triggerLevelUpExplosion"],[1011,29,1070,27],[1012,6,1071,4,"findClosestEnemy"],[1012,22,1071,20],[1013,6,1072,4,"updateNinjaPosition"],[1013,25,1072,23],[1014,6,1073,4,"setManualControlActive"],[1014,28,1073,26],[1015,6,1074,4,"lastExplosionTime"],[1015,23,1074,21],[1016,6,1075,4,"useAbilityManually"],[1016,24,1075,22],[1017,6,1075,24],[1018,6,1076,4,"saveAbilityData"],[1018,21,1076,19],[1019,6,1076,21],[1020,6,1077,4,"shadowClone"],[1020,17,1077,15],[1020,19,1077,17,"combatState"],[1020,30,1077,28],[1020,31,1077,29,"shadowClone"],[1020,42,1077,40],[1020,43,1077,42],[1021,4,1078,2],[1021,5,1078,3],[1021,6,1078,4],[1021,8,1078,6],[1022,4,1079,4],[1023,4,1080,4],[1024,4,1081,4,"combatState"],[1024,15,1081,15],[1024,17,1082,4,"projectiles"],[1024,28,1082,15],[1024,30,1083,4,"lastExplosionTime"],[1024,47,1083,21],[1025,4,1084,4],[1026,4,1085,4,"combatState"],[1026,15,1085,15],[1026,16,1085,16,"abilityManager"],[1026,30,1085,30],[1026,32,1086,4,"combatState"],[1026,43,1086,15],[1026,44,1086,16,"enemies"],[1026,51,1086,23],[1026,53,1087,4,"combatState"],[1026,64,1087,15],[1026,65,1087,16,"shadowClone"],[1026,76,1087,27],[1027,4,1087,29],[1028,4,1088,4,"useAbilityManually"],[1028,22,1088,22],[1029,4,1088,24],[1030,4,1089,4,"saveAbilityData"],[1030,19,1089,19],[1030,20,1089,21],[1031,4,1089,21],[1031,5,1090,3],[1031,6,1090,4],[1032,4,1092,2],[1032,24,1093,4],[1032,28,1093,4,"_reactJsxDevRuntime"],[1032,47,1093,4],[1032,48,1093,4,"jsxDEV"],[1032,54,1093,4],[1032,56,1093,5,"CombatContext"],[1032,69,1093,18],[1032,70,1093,19,"Provider"],[1032,78,1093,27],[1033,6,1093,28,"value"],[1033,11,1093,33],[1033,13,1093,35,"contextValue"],[1033,25,1093,48],[1034,6,1093,48,"children"],[1034,14,1093,48],[1034,16,1094,7,"children"],[1035,4,1094,15],[1036,6,1094,15,"fileName"],[1036,14,1094,15],[1036,16,1094,15,"_jsxFileName"],[1036,28,1094,15],[1037,6,1094,15,"lineNumber"],[1037,16,1094,15],[1038,6,1094,15,"columnNumber"],[1038,18,1094,15],[1039,4,1094,15],[1039,11,1095,28],[1039,12,1095,29],[1040,2,1097,0],[1040,3,1097,1],[1041,2,1097,2,"_s4"],[1041,5,1097,2],[1041,6,100,13,"CombatProvider"],[1041,20,100,27],[1042,4,100,27],[1042,12,101,15,"useGame"],[1042,24,101,22],[1042,25,101,22,"useGame"],[1042,32,101,22],[1042,34,102,77,"useZone"],[1042,46,102,84],[1042,47,102,84,"useZone"],[1042,54,102,84],[1043,2,102,84],[1044,2,102,84,"_c"],[1044,4,102,84],[1044,7,100,13,"CombatProvider"],[1044,21,100,27],[1045,2,100,27],[1045,6,100,27,"_c"],[1045,8,100,27],[1046,2,100,27,"$RefreshReg$"],[1046,14,100,27],[1046,15,100,27,"_c"],[1046,17,100,27],[1047,0,100,27],[1047,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;OR2E;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}