{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is invincible\n                var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                if (isPlayerInvincible) {\n                  console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                  // Update enemy attack cooldown even if blocked\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                  var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                  var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                  var playerDefense = newState.playerStats.defense;\n                  var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                  console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                  // Apply damage to player\n                  var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                  newState.playerStats.health = newPlayerHealth;\n                  console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                  // Update enemy attack cooldown\n                  enemy.lastAttackTick = newState.currentTick;\n\n                  // Handle player death if health reaches 0\n                  if (newPlayerHealth <= 0) {\n                    console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                    // Set player as dead and trigger revival modal\n                    setTimeout(() => {\n                      // Set isAlive to false to trigger revival system\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }, 100);\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          var _effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== _effectiveStats.attack || newState.playerStats.defense !== _effectiveStats.defense || newState.playerStats.maxHealth !== _effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            var _healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${_effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${_effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${_effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: _effectiveStats.attack,\n              defense: _effectiveStats.defense,\n              maxHealth: _effectiveStats.health,\n              health: Math.floor(_effectiveStats.health * _healthRatio),\n              // Maintain health ratio\n              critChance: _effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: _effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: _effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1070,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1125,2],[27,6,1125,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1125,2],[27,42,1125,2,"require"],[27,49,1125,2],[27,50,1125,2,"_dependencyMap"],[27,64,1125,2],[28,2,1125,2],[28,6,1125,2,"_slicedToArray"],[28,20,1125,2],[28,23,1125,2,"_interopDefault"],[28,38,1125,2],[28,39,1125,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1125,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"health"],[224,186,256,68],[224,188,256,70],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"health"],[225,249,258,247],[225,251,258,249],[225,252,258,250],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"health"],[229,72,262,70],[229,74,262,72],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"health"],[231,39,264,37],[231,42,264,40,"newState"],[231,50,264,48],[231,51,264,49,"playerStats"],[231,62,264,60],[231,63,264,61,"maxHealth"],[231,72,264,70],[231,75,264,73],[231,78,264,76],[231,80,264,78],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"health"],[234,60,268,58],[234,63,268,61,"healthRatio"],[234,74,268,72],[234,75,268,73],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"health"],[235,76,269,74],[235,78,269,76],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"health"],[237,49,271,47],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"health"],[245,46,280,44],[246,14,281,12,"health"],[246,20,281,18],[246,22,281,20,"newHealth"],[246,31,281,29],[247,14,281,31],[248,14,282,12,"critChance"],[248,24,282,22],[248,26,282,24,"effectiveStats"],[248,40,282,38],[248,41,282,39,"critChance"],[248,51,282,49],[248,55,282,53,"newState"],[248,63,282,61],[248,64,282,62,"playerStats"],[248,75,282,73],[248,76,282,74,"critChance"],[248,86,282,84],[249,14,283,12,"critDamage"],[249,24,283,22],[249,26,283,24,"effectiveStats"],[249,40,283,38],[249,41,283,39,"critDamage"],[249,51,283,49],[249,55,283,53,"newState"],[249,63,283,61],[249,64,283,62,"playerStats"],[249,75,283,73],[249,76,283,74,"critDamage"],[249,86,283,84],[250,14,284,12,"cooldownReduction"],[250,31,284,29],[250,33,284,31,"effectiveStats"],[250,47,284,45],[250,48,284,46,"cooldownReduction"],[250,65,284,63],[250,69,284,67,"newState"],[250,77,284,75],[250,78,284,76,"playerStats"],[250,89,284,87],[250,90,284,88,"cooldownReduction"],[251,12,285,10],[251,13,285,11],[252,10,286,8],[253,8,287,6],[255,8,289,6],[256,8,290,6,"newState"],[256,16,290,14],[256,17,290,15,"enemies"],[256,24,290,22],[256,25,290,23,"forEach"],[256,32,290,30],[256,33,290,31,"enemy"],[256,38,290,36],[256,42,290,40],[257,10,291,8],[257,14,291,12],[257,15,291,13,"enemy"],[257,20,291,18],[257,21,291,19,"isBoss"],[257,27,291,25],[257,29,291,27],[258,12,291,29],[259,12,292,10],[260,12,293,10],[260,16,293,16,"MOVEMENT_SPEED"],[260,30,293,30],[260,33,293,33],[260,37,293,37],[260,38,293,38],[260,39,293,39],[261,12,294,10],[261,16,294,16,"SCREEN_WIDTH"],[261,28,294,28],[261,31,294,31],[261,34,294,34],[262,12,295,10],[262,16,295,16,"GAME_AREA_HEIGHT"],[262,32,295,32],[262,35,295,35],[262,38,295,38],[262,39,295,39],[262,40,295,40],[263,12,296,10],[263,16,296,16,"ENEMY_SIZE"],[263,26,296,26],[263,29,296,29],[263,31,296,31],[265,12,298,10],[266,12,299,10],[266,16,299,16,"playerX"],[266,23,299,23],[266,26,299,26,"currentNinjaPosition"],[266,46,299,46],[266,47,299,47,"x"],[266,48,299,48],[267,12,300,10],[267,16,300,16,"playerY"],[267,23,300,23],[267,26,300,26,"currentNinjaPosition"],[267,46,300,46],[267,47,300,47,"y"],[267,48,300,48],[269,12,302,10],[270,12,303,10],[270,16,303,16,"deltaX"],[270,22,303,22],[270,25,303,25,"playerX"],[270,32,303,32],[270,35,303,35,"enemy"],[270,40,303,40],[270,41,303,41,"position"],[270,49,303,49],[270,50,303,50,"x"],[270,51,303,51],[271,12,304,10],[271,16,304,16,"deltaY"],[271,22,304,22],[271,25,304,25,"playerY"],[271,32,304,32],[271,35,304,35,"enemy"],[271,40,304,40],[271,41,304,41,"position"],[271,49,304,49],[271,50,304,50,"y"],[271,51,304,51],[272,12,305,10],[272,16,305,16,"distance"],[272,24,305,24],[272,27,305,27,"Math"],[272,31,305,31],[272,32,305,32,"sqrt"],[272,36,305,36],[272,37,305,37,"deltaX"],[272,43,305,43],[272,46,305,46,"deltaX"],[272,52,305,52],[272,55,305,55,"deltaY"],[272,61,305,61],[272,64,305,64,"deltaY"],[272,70,305,70],[272,71,305,71],[274,12,307,10],[275,12,308,10],[275,16,308,16,"ATTACK_RANGE"],[275,28,308,28],[275,31,308,31],[275,33,308,33],[275,34,308,34],[275,35,308,35],[276,12,309,10],[276,16,309,16,"ATTACK_COOLDOWN"],[276,31,309,31],[276,34,309,34],[276,36,309,36],[276,37,309,37],[276,38,309,38],[278,12,311,10],[278,16,311,14,"distance"],[278,24,311,22],[278,28,311,26,"ATTACK_RANGE"],[278,40,311,38],[278,42,311,40],[279,14,312,12],[280,14,313,12],[280,18,313,16],[280,19,313,17,"enemy"],[280,24,313,22],[280,25,313,23,"lastAttackTick"],[280,39,313,37],[280,41,313,39,"enemy"],[280,46,313,44],[280,47,313,45,"lastAttackTick"],[280,61,313,59],[280,64,313,62],[280,65,313,63],[281,14,315,12],[281,18,315,16,"newState"],[281,26,315,24],[281,27,315,25,"currentTick"],[281,38,315,36],[281,41,315,39,"enemy"],[281,46,315,44],[281,47,315,45,"lastAttackTick"],[281,61,315,59],[281,65,315,63,"ATTACK_COOLDOWN"],[281,80,315,78],[281,82,315,80],[282,16,316,14],[283,16,317,14],[283,20,317,20,"isPlayerInvincible"],[283,38,317,38],[283,41,317,41,"game"],[283,45,317,45],[283,46,317,46,"gameState"],[283,55,317,55],[283,56,317,56,"isInvincible"],[283,68,317,68],[283,72,318,39,"game"],[283,76,318,43],[283,77,318,44,"gameState"],[283,86,318,53],[283,87,318,54,"invincibilityEndTime"],[283,107,318,74],[283,111,319,39,"Date"],[283,115,319,43],[283,116,319,44,"now"],[283,119,319,47],[283,120,319,48],[283,121,319,49],[283,124,319,52,"game"],[283,128,319,56],[283,129,319,57,"gameState"],[283,138,319,66],[283,139,319,67,"invincibilityEndTime"],[283,159,319,87],[284,16,321,14],[284,20,321,18,"isPlayerInvincible"],[284,38,321,36],[284,40,321,38],[285,18,322,16,"console"],[285,25,322,23],[285,26,322,24,"log"],[285,29,322,27],[285,30,322,28],[285,49,322,47,"enemy"],[285,54,322,52],[285,55,322,53,"name"],[285,59,322,57],[285,99,322,97],[285,100,322,98],[286,18,323,16],[287,18,324,16,"enemy"],[287,23,324,21],[287,24,324,22,"lastAttackTick"],[287,38,324,36],[287,41,324,39,"newState"],[287,49,324,47],[287,50,324,48,"currentTick"],[287,61,324,59],[288,16,325,14],[288,17,325,15],[288,23,325,21],[289,18,326,16],[290,18,327,16],[290,22,327,22,"baseAttack"],[290,32,327,32],[290,35,327,35,"enemy"],[290,40,327,40],[290,41,327,41,"stats"],[290,46,327,46],[290,47,327,47,"attack"],[290,53,327,53],[290,56,327,56],[290,59,327,59],[290,60,327,60],[290,61,327,61],[291,18,328,16],[291,22,328,22,"attackDamage"],[291,34,328,34],[291,37,328,37,"Math"],[291,41,328,41],[291,42,328,42,"floor"],[291,47,328,47],[291,48,328,48,"baseAttack"],[291,58,328,58],[291,62,328,62],[291,65,328,65],[291,68,328,68,"Math"],[291,72,328,72],[291,73,328,73,"random"],[291,79,328,79],[291,80,328,80],[291,81,328,81],[291,84,328,84],[291,87,328,87],[291,88,328,88],[291,89,328,89],[291,90,328,90],[291,91,328,91],[292,18,329,16],[292,22,329,22,"playerDefense"],[292,35,329,35],[292,38,329,38,"newState"],[292,46,329,46],[292,47,329,47,"playerStats"],[292,58,329,58],[292,59,329,59,"defense"],[292,66,329,66],[293,18,330,16],[293,22,330,22,"finalDamage"],[293,33,330,33],[293,36,330,36,"Math"],[293,40,330,40],[293,41,330,41,"max"],[293,44,330,44],[293,45,330,45],[293,46,330,46],[293,48,330,48,"attackDamage"],[293,60,330,60],[293,63,330,63,"Math"],[293,67,330,67],[293,68,330,68,"floor"],[293,73,330,73],[293,74,330,74,"playerDefense"],[293,87,330,87],[293,90,330,90],[293,93,330,93],[293,94,330,94],[293,95,330,95],[293,96,330,96],[293,97,330,97],[295,18,332,16,"console"],[295,25,332,23],[295,26,332,24,"log"],[295,29,332,27],[295,30,332,28],[295,51,332,49,"enemy"],[295,56,332,54],[295,57,332,55,"name"],[295,61,332,59],[295,84,332,82,"finalDamage"],[295,95,332,93],[295,107,332,105,"attackDamage"],[295,119,332,117],[295,130,332,128,"Math"],[295,134,332,132],[295,135,332,133,"floor"],[295,140,332,138],[295,141,332,139,"playerDefense"],[295,154,332,152],[295,157,332,155],[295,160,332,158],[295,161,332,159],[295,182,332,180],[295,183,332,181],[297,18,334,16],[298,18,335,16],[298,22,335,22,"newPlayerHealth"],[298,37,335,37],[298,40,335,40,"Math"],[298,44,335,44],[298,45,335,45,"max"],[298,48,335,48],[298,49,335,49],[298,50,335,50],[298,52,335,52,"newState"],[298,60,335,60],[298,61,335,61,"playerStats"],[298,72,335,72],[298,73,335,73,"health"],[298,79,335,79],[298,82,335,82,"finalDamage"],[298,93,335,93],[298,94,335,94],[299,18,336,16,"newState"],[299,26,336,24],[299,27,336,25,"playerStats"],[299,38,336,36],[299,39,336,37,"health"],[299,45,336,43],[299,48,336,46,"newPlayerHealth"],[299,63,336,61],[300,18,338,16,"console"],[300,25,338,23],[300,26,338,24,"log"],[300,29,338,27],[300,30,338,28],[300,51,338,49,"newState"],[300,59,338,57],[300,60,338,58,"playerStats"],[300,71,338,69],[300,72,338,70,"health"],[300,78,338,76],[300,82,338,80,"newState"],[300,90,338,88],[300,91,338,89,"playerStats"],[300,102,338,100],[300,103,338,101,"maxHealth"],[300,112,338,110],[300,122,338,120,"finalDamage"],[300,133,338,131],[300,143,338,141],[300,144,338,142],[302,18,340,16],[303,18,341,16,"enemy"],[303,23,341,21],[303,24,341,22,"lastAttackTick"],[303,38,341,36],[303,41,341,39,"newState"],[303,49,341,47],[303,50,341,48,"currentTick"],[303,61,341,59],[305,18,343,16],[306,18,344,16],[306,22,344,20,"newPlayerHealth"],[306,37,344,35],[306,41,344,39],[306,42,344,40],[306,44,344,42],[307,20,345,18,"console"],[307,27,345,25],[307,28,345,26,"log"],[307,31,345,29],[307,32,345,30],[307,82,345,80],[307,83,345,81],[308,20,346,18],[309,20,347,18,"setTimeout"],[309,30,347,28],[309,31,347,29],[309,37,347,35],[310,22,348,20],[311,22,349,20,"game"],[311,26,349,24],[311,27,349,25,"updateGameState"],[311,42,349,40],[311,43,349,41],[312,24,349,43,"isAlive"],[312,31,349,50],[312,33,349,52],[313,22,349,58],[313,23,349,59],[313,24,349,60],[314,20,350,18],[314,21,350,19],[314,23,350,21],[314,26,350,24],[314,27,350,25],[315,18,351,16],[316,16,352,14],[317,14,353,12],[318,12,354,10],[318,13,354,11],[318,19,354,17],[319,14,355,12],[320,14,356,12],[321,14,357,12],[321,18,357,16,"distance"],[321,26,357,24],[321,29,357,27],[321,31,357,29],[321,33,357,31],[322,16,358,14],[323,16,359,14],[323,20,359,20,"normalizedX"],[323,31,359,31],[323,34,359,34,"deltaX"],[323,40,359,40],[323,43,359,43,"distance"],[323,51,359,51],[324,16,360,14],[324,20,360,20,"normalizedY"],[324,31,360,31],[324,34,360,34,"deltaY"],[324,40,360,40],[324,43,360,43,"distance"],[324,51,360,51],[326,16,362,14],[327,16,363,14],[327,20,363,20,"randomFactor"],[327,32,363,32],[327,35,363,35],[327,38,363,38],[327,39,363,39],[327,40,363,40],[328,16,364,14],[328,20,364,20,"finalX"],[328,26,364,26],[328,29,364,29,"normalizedX"],[328,40,364,40],[328,43,364,43],[328,44,364,44,"Math"],[328,48,364,48],[328,49,364,49,"random"],[328,55,364,55],[328,56,364,56],[328,57,364,57],[328,60,364,60],[328,63,364,63],[328,67,364,67,"randomFactor"],[328,79,364,79],[329,16,365,14],[329,20,365,20,"finalY"],[329,26,365,26],[329,29,365,29,"normalizedY"],[329,40,365,40],[329,43,365,43],[329,44,365,44,"Math"],[329,48,365,48],[329,49,365,49,"random"],[329,55,365,55],[329,56,365,56],[329,57,365,57],[329,60,365,60],[329,63,365,63],[329,67,365,67,"randomFactor"],[329,79,365,79],[331,16,367,14],[332,16,368,14],[332,20,368,18,"newX"],[332,24,368,22],[332,27,368,25,"enemy"],[332,32,368,30],[332,33,368,31,"position"],[332,41,368,39],[332,42,368,40,"x"],[332,43,368,41],[332,46,368,45,"finalX"],[332,52,368,51],[332,55,368,54,"MOVEMENT_SPEED"],[332,69,368,69],[333,16,369,14],[333,20,369,18,"newY"],[333,24,369,22],[333,27,369,25,"enemy"],[333,32,369,30],[333,33,369,31,"position"],[333,41,369,39],[333,42,369,40,"y"],[333,43,369,41],[333,46,369,45,"finalY"],[333,52,369,51],[333,55,369,54,"MOVEMENT_SPEED"],[333,69,369,69],[335,16,371,14],[336,16,372,14,"newX"],[336,20,372,18],[336,23,372,21,"Math"],[336,27,372,25],[336,28,372,26,"max"],[336,31,372,29],[336,32,372,30],[336,33,372,31],[336,35,372,33,"Math"],[336,39,372,37],[336,40,372,38,"min"],[336,43,372,41],[336,44,372,42,"SCREEN_WIDTH"],[336,56,372,54],[336,59,372,57,"ENEMY_SIZE"],[336,69,372,67],[336,71,372,69,"newX"],[336,75,372,73],[336,76,372,74],[336,77,372,75],[337,16,373,14,"newY"],[337,20,373,18],[337,23,373,21,"Math"],[337,27,373,25],[337,28,373,26,"max"],[337,31,373,29],[337,32,373,30],[337,33,373,31],[337,35,373,33,"Math"],[337,39,373,37],[337,40,373,38,"min"],[337,43,373,41],[337,44,373,42,"GAME_AREA_HEIGHT"],[337,60,373,58],[337,63,373,61,"ENEMY_SIZE"],[337,73,373,71],[337,75,373,73,"newY"],[337,79,373,77],[337,80,373,78],[337,81,373,79],[339,16,375,14],[340,16,376,14,"enemy"],[340,21,376,19],[340,22,376,20,"position"],[340,30,376,28],[340,31,376,29,"x"],[340,32,376,30],[340,35,376,33,"newX"],[340,39,376,37],[341,16,377,14,"enemy"],[341,21,377,19],[341,22,377,20,"position"],[341,30,377,28],[341,31,377,29,"y"],[341,32,377,30],[341,35,377,33,"newY"],[341,39,377,37],[342,14,378,12],[343,14,379,12],[344,12,380,10],[345,10,381,8],[346,8,382,6],[346,9,382,7],[346,10,382,8],[348,8,384,6],[349,8,385,6],[349,12,385,10,"newState"],[349,20,385,18],[349,21,385,19,"playerStats"],[349,32,385,30],[349,36,385,34,"game"],[349,40,385,38],[349,41,385,39,"gameState"],[349,50,385,48],[349,51,385,49,"ninja"],[349,56,385,54],[349,58,385,56],[350,10,386,8],[350,14,386,14,"effectiveStats"],[350,29,386,28],[350,32,386,31,"game"],[350,36,386,35],[350,37,386,36,"getEffectiveStats"],[350,54,386,53],[350,55,386,54],[350,56,386,55],[352,10,388,8],[353,10,389,8],[353,14,389,12,"newState"],[353,22,389,20],[353,23,389,21,"playerStats"],[353,34,389,32],[353,35,389,33,"attack"],[353,41,389,39],[353,46,389,44,"effectiveStats"],[353,61,389,58],[353,62,389,59,"attack"],[353,68,389,65],[353,72,390,12,"newState"],[353,80,390,20],[353,81,390,21,"playerStats"],[353,92,390,32],[353,93,390,33,"defense"],[353,100,390,40],[353,105,390,45,"effectiveStats"],[353,120,390,59],[353,121,390,60,"defense"],[353,128,390,67],[353,132,391,12,"newState"],[353,140,391,20],[353,141,391,21,"playerStats"],[353,152,391,32],[353,153,391,33,"maxHealth"],[353,162,391,42],[353,167,391,47,"effectiveStats"],[353,182,391,61],[353,183,391,62,"health"],[353,189,391,68],[353,191,391,70],[354,12,393,10],[355,12,394,10],[355,16,394,16,"healthRatio"],[355,28,394,27],[355,31,394,30,"newState"],[355,39,394,38],[355,40,394,39,"playerStats"],[355,51,394,50],[355,52,394,51,"maxHealth"],[355,61,394,60],[355,64,394,63],[355,65,394,64],[355,68,395,12,"newState"],[355,76,395,20],[355,77,395,21,"playerStats"],[355,88,395,32],[355,89,395,33,"health"],[355,95,395,39],[355,98,395,42,"newState"],[355,106,395,50],[355,107,395,51,"playerStats"],[355,118,395,62],[355,119,395,63,"maxHealth"],[355,128,395,72],[355,131,395,75],[355,132,395,76],[356,12,397,10,"console"],[356,19,397,17],[356,20,397,18,"log"],[356,23,397,21],[356,24,397,22],[356,58,397,56,"newState"],[356,66,397,64],[356,67,397,65,"playerStats"],[356,78,397,76],[356,79,397,77,"attack"],[356,85,397,83],[356,91,397,89,"effectiveStats"],[356,106,397,103],[356,107,397,104,"attack"],[356,113,397,110],[356,126,397,123,"newState"],[356,134,397,131],[356,135,397,132,"playerStats"],[356,146,397,143],[356,147,397,144,"defense"],[356,154,397,151],[356,160,397,157,"effectiveStats"],[356,175,397,171],[356,176,397,172,"defense"],[356,183,397,179],[356,194,397,190,"newState"],[356,202,397,198],[356,203,397,199,"playerStats"],[356,214,397,210],[356,215,397,211,"maxHealth"],[356,224,397,220],[356,230,397,226,"effectiveStats"],[356,245,397,240],[356,246,397,241,"health"],[356,252,397,247],[356,254,397,249],[356,255,397,250],[357,12,399,10,"newState"],[357,20,399,18],[357,21,399,19,"playerStats"],[357,32,399,30],[357,35,399,33],[358,14,400,12],[358,17,400,15,"newState"],[358,25,400,23],[358,26,400,24,"playerStats"],[358,37,400,35],[359,14,401,12,"attack"],[359,20,401,18],[359,22,401,20,"effectiveStats"],[359,37,401,34],[359,38,401,35,"attack"],[359,44,401,41],[360,14,402,12,"defense"],[360,21,402,19],[360,23,402,21,"effectiveStats"],[360,38,402,35],[360,39,402,36,"defense"],[360,46,402,43],[361,14,403,12,"maxHealth"],[361,23,403,21],[361,25,403,23,"effectiveStats"],[361,40,403,37],[361,41,403,38,"health"],[361,47,403,44],[362,14,404,12,"health"],[362,20,404,18],[362,22,404,20,"Math"],[362,26,404,24],[362,27,404,25,"floor"],[362,32,404,30],[362,33,404,31,"effectiveStats"],[362,48,404,45],[362,49,404,46,"health"],[362,55,404,52],[362,58,404,55,"healthRatio"],[362,70,404,66],[362,71,404,67],[363,14,404,69],[364,14,405,12,"critChance"],[364,24,405,22],[364,26,405,24,"effectiveStats"],[364,41,405,38],[364,42,405,39,"critChance"],[364,52,405,49],[364,56,405,53,"newState"],[364,64,405,61],[364,65,405,62,"playerStats"],[364,76,405,73],[364,77,405,74,"critChance"],[364,87,405,84],[365,14,406,12,"critDamage"],[365,24,406,22],[365,26,406,24,"effectiveStats"],[365,41,406,38],[365,42,406,39,"critDamage"],[365,52,406,49],[365,56,406,53,"newState"],[365,64,406,61],[365,65,406,62,"playerStats"],[365,76,406,73],[365,77,406,74,"critDamage"],[365,87,406,84],[366,14,407,12,"cooldownReduction"],[366,31,407,29],[366,33,407,31,"effectiveStats"],[366,48,407,45],[366,49,407,46,"cooldownReduction"],[366,66,407,63],[366,70,407,67,"newState"],[366,78,407,75],[366,79,407,76,"playerStats"],[366,90,407,87],[366,91,407,88,"cooldownReduction"],[367,12,408,10],[367,13,408,11],[368,10,409,8],[369,8,410,6],[370,8,411,6],[370,12,411,10,"newState"],[370,20,411,18],[370,21,411,19,"shadowClone"],[370,32,411,30],[370,34,411,32],[371,10,412,8],[372,10,413,8,"newState"],[372,18,413,16],[372,19,413,17,"shadowClone"],[372,30,413,28],[372,31,413,29,"remainingTicks"],[372,45,413,43],[372,47,413,45],[374,10,415,8],[375,10,416,8],[375,14,416,14,"cloneOffset"],[375,25,416,25],[375,28,416,28],[375,30,416,30],[375,31,416,31],[375,32,416,32],[376,10,417,8,"newState"],[376,18,417,16],[376,19,417,17,"shadowClone"],[376,30,417,28],[376,31,417,29,"position"],[376,39,417,37],[376,40,417,38,"x"],[376,41,417,39],[376,44,417,42,"currentNinjaPosition"],[376,64,417,62],[376,65,417,63,"x"],[376,66,417,64],[376,69,417,67,"cloneOffset"],[376,80,417,78],[377,10,418,8,"newState"],[377,18,418,16],[377,19,418,17,"shadowClone"],[377,30,418,28],[377,31,418,29,"position"],[377,39,418,37],[377,40,418,38,"y"],[377,41,418,39],[377,44,418,42,"currentNinjaPosition"],[377,64,418,62],[377,65,418,63,"y"],[377,66,418,64],[377,69,418,67],[377,71,418,69],[379,10,420,8],[380,10,421,8],[380,14,421,12,"newState"],[380,22,421,20],[380,23,421,21,"shadowClone"],[380,34,421,32],[380,35,421,33,"remainingTicks"],[380,49,421,47],[380,53,421,51],[380,54,421,52],[380,56,421,54],[381,12,422,10,"console"],[381,19,422,17],[381,20,422,18,"log"],[381,23,422,21],[381,24,422,22],[381,75,422,73],[381,76,422,74],[382,12,423,10,"newState"],[382,20,423,18],[382,21,423,19,"shadowClone"],[382,32,423,30],[382,35,423,33,"undefined"],[382,44,423,42],[383,10,424,8],[383,11,424,9],[383,17,424,15],[384,12,425,10],[385,12,426,10],[386,12,427,10],[386,16,427,16,"CLONE_ATTACK_INTERVAL"],[386,37,427,37],[386,40,427,40],[386,42,427,42],[387,12,428,10],[387,16,428,14,"newState"],[387,24,428,22],[387,25,428,23,"currentTick"],[387,36,428,34],[387,39,428,37,"CLONE_ATTACK_INTERVAL"],[387,60,428,58],[387,65,428,63],[387,66,428,64],[387,70,428,68,"newState"],[387,78,428,76],[387,79,428,77,"enemies"],[387,86,428,84],[387,87,428,85,"length"],[387,93,428,91],[387,96,428,94],[387,97,428,95],[387,99,428,97],[388,14,429,12,"console"],[388,21,429,19],[388,22,429,20,"log"],[388,25,429,23],[388,26,429,24],[388,83,429,81],[388,84,429,82],[390,14,431,12],[391,14,432,12],[391,18,432,18,"target"],[391,24,432,24],[391,27,432,27,"findClosestEnemyInternal"],[391,51,432,51],[391,52,432,52,"newState"],[391,60,432,60],[391,61,432,61,"enemies"],[391,68,432,68],[391,69,432,69],[392,14,433,12],[392,18,433,16,"target"],[392,24,433,22],[392,26,433,24],[393,16,434,14],[394,16,435,14],[394,20,435,20,"cloneDamage"],[394,31,435,31],[394,34,435,34,"Math"],[394,38,435,38],[394,39,435,39,"floor"],[394,44,435,44],[394,45,435,45,"newState"],[394,53,435,53],[394,54,435,54,"playerStats"],[394,65,435,65],[394,66,435,66,"attack"],[394,72,435,72],[394,75,435,75],[394,78,435,78],[394,79,435,79],[396,16,437,14],[397,16,438,14,"createProjectile"],[397,32,438,30],[397,33,438,31,"target"],[397,39,438,37],[397,41,438,39,"cloneDamage"],[397,52,438,50],[397,54,438,52,"newState"],[397,62,438,60],[397,63,438,61,"shadowClone"],[397,74,438,72],[397,75,438,73,"position"],[397,83,438,81],[397,85,438,83],[398,18,439,16,"id"],[398,20,439,18],[398,22,439,20],[398,43,439,41],[399,18,440,16,"name"],[399,22,440,20],[399,24,440,22],[399,45,440,43],[400,18,441,16,"icon"],[400,22,441,20],[400,24,441,22],[401,16,442,14],[401,17,442,15],[401,18,442,16],[402,14,443,12],[403,12,444,10],[404,10,445,8],[405,8,446,6],[407,8,448,6],[408,8,449,6],[408,12,449,10],[408,13,449,11,"isManualControlActive"],[408,34,449,32],[408,36,449,34],[409,10,450,8],[409,15,450,13],[409,19,450,17,"i"],[409,20,450,18],[409,23,450,21],[409,24,450,22],[409,26,450,24,"i"],[409,27,450,25],[409,30,450,28],[409,31,450,29],[409,33,450,31,"i"],[409,34,450,32],[409,36,450,34],[409,38,450,36],[410,12,451,10],[410,16,451,14,"newState"],[410,24,451,22],[410,25,451,23,"abilityManager"],[410,39,451,37],[410,40,451,38,"isAbilityReady"],[410,54,451,52],[410,55,451,53,"i"],[410,56,451,54],[410,57,451,55],[410,61,451,59,"newState"],[410,69,451,67],[410,70,451,68,"enemies"],[410,77,451,75],[410,78,451,76,"length"],[410,84,451,82],[410,87,451,85],[410,88,451,86],[410,90,451,88],[411,14,452,12],[411,18,452,16,"newState"],[411,26,452,24],[411,27,452,25,"abilityManager"],[411,41,452,39],[411,42,452,40,"useAbility"],[411,52,452,50],[411,53,452,51,"i"],[411,54,452,52],[411,56,452,54,"newTick"],[411,63,452,61],[411,64,452,62],[411,66,452,64],[412,16,453,14,"castAbility"],[412,27,453,25],[412,28,453,26,"newState"],[412,36,453,34],[412,38,453,36,"i"],[412,39,453,37],[412,40,453,38],[413,14,454,12],[414,12,455,10],[415,10,456,8],[416,8,457,6],[418,8,459,6],[419,8,460,6],[419,12,460,12,"deadEnemies"],[419,23,460,23],[419,26,460,26,"newState"],[419,34,460,34],[419,35,460,35,"enemies"],[419,42,460,42],[419,43,460,43,"filter"],[419,49,460,49],[419,50,460,50,"enemy"],[419,55,460,55],[419,59,460,59,"enemy"],[419,64,460,64],[419,65,460,65,"health"],[419,71,460,71],[419,75,460,75],[419,76,460,76],[419,77,460,77],[420,8,461,6,"enemiesToKill"],[420,21,461,19],[420,24,461,22],[420,25,461,23],[420,28,461,26,"deadEnemies"],[420,39,461,37],[420,40,461,38],[420,41,461,39],[420,42,461,40],[422,8,463,6],[423,8,464,6],[423,12,464,10,"deadEnemies"],[423,23,464,21],[423,24,464,22,"length"],[423,30,464,28],[423,33,464,31],[423,34,464,32],[423,36,464,34],[424,10,465,8,"console"],[424,17,465,15],[424,18,465,16,"log"],[424,21,465,19],[424,22,465,20],[424,49,465,47,"deadEnemies"],[424,60,465,58],[424,61,465,59,"length"],[424,67,465,65],[424,83,465,81],[424,85,465,83,"deadEnemies"],[424,96,465,94],[424,97,465,95,"map"],[424,100,465,98],[424,101,465,99,"e"],[424,102,465,100],[424,106,465,104],[424,109,465,107,"e"],[424,110,465,108],[424,111,465,109,"id"],[424,113,465,111],[424,117,465,115,"e"],[424,118,465,116],[424,119,465,117,"health"],[424,125,465,123],[424,130,465,128],[424,131,465,129],[424,132,465,130],[425,8,466,6],[427,8,468,6],[428,8,469,6],[428,12,469,12,"lowHealthEnemies"],[428,28,469,28],[428,31,469,31,"newState"],[428,39,469,39],[428,40,469,40,"enemies"],[428,47,469,47],[428,48,469,48,"filter"],[428,54,469,54],[428,55,469,55,"enemy"],[428,60,469,60],[428,64,469,64,"enemy"],[428,69,469,69],[428,70,469,70,"health"],[428,76,469,76],[428,80,469,80],[428,82,469,82],[428,86,469,86,"enemy"],[428,91,469,91],[428,92,469,92,"health"],[428,98,469,98],[428,101,469,101],[428,102,469,102],[428,103,469,103],[429,8,470,6],[429,12,470,10,"lowHealthEnemies"],[429,28,470,26],[429,29,470,27,"length"],[429,35,470,33],[429,38,470,36],[429,39,470,37],[429,41,470,39],[430,10,471,8,"console"],[430,17,471,15],[430,18,471,16,"log"],[430,21,471,19],[430,22,471,20],[430,61,471,59],[430,63,471,61,"lowHealthEnemies"],[430,79,471,77],[430,80,471,78,"map"],[430,83,471,81],[430,84,471,82,"e"],[430,85,471,83],[430,89,471,87],[430,92,471,90,"e"],[430,93,471,91],[430,94,471,92,"id"],[430,96,471,94],[430,100,471,98,"e"],[430,101,471,99],[430,102,471,100,"health"],[430,108,471,106],[430,112,471,110,"e"],[430,113,471,111],[430,114,471,112,"maxHealth"],[430,123,471,121],[430,128,471,126],[430,129,471,127],[430,130,471,128],[431,8,472,6],[433,8,474,6],[434,8,475,6],[434,12,475,12,"beforeCount"],[434,23,475,23],[434,26,475,26,"newState"],[434,34,475,34],[434,35,475,35,"enemies"],[434,42,475,42],[434,43,475,43,"length"],[434,49,475,49],[435,8,476,6,"newState"],[435,16,476,14],[435,17,476,15,"enemies"],[435,24,476,22],[435,27,476,25,"newState"],[435,35,476,33],[435,36,476,34,"enemies"],[435,43,476,41],[435,44,476,42,"filter"],[435,50,476,48],[435,51,476,49,"enemy"],[435,56,476,54],[435,60,476,58,"enemy"],[435,65,476,63],[435,66,476,64,"health"],[435,72,476,70],[435,75,476,73],[435,76,476,74],[435,77,476,75],[436,8,477,6],[436,12,477,12,"afterCount"],[436,22,477,22],[436,25,477,25,"newState"],[436,33,477,33],[436,34,477,34,"enemies"],[436,41,477,41],[436,42,477,42,"length"],[436,48,477,48],[437,8,479,6],[437,12,479,10,"beforeCount"],[437,23,479,21],[437,28,479,26,"afterCount"],[437,38,479,36],[437,40,479,38],[438,10,480,8,"console"],[438,17,480,15],[438,18,480,16,"log"],[438,21,480,19],[438,22,480,20],[438,52,480,50,"beforeCount"],[438,63,480,61],[438,66,480,64,"afterCount"],[438,76,480,74],[438,102,480,100],[438,103,480,101],[439,8,481,6],[441,8,483,6],[442,8,484,6],[443,8,485,6],[443,12,485,12,"MAX_ENEMIES"],[443,23,485,23],[443,26,485,26],[443,28,485,28],[443,29,485,29],[443,30,485,30],[444,8,486,6],[444,12,486,12,"MIN_SPAWN_DELAY"],[444,27,486,27],[444,30,486,30],[444,33,486,33],[444,34,486,34],[444,35,486,35],[445,8,487,6],[445,12,487,12,"now"],[445,15,487,15],[445,18,487,18,"Date"],[445,22,487,22],[445,23,487,23,"now"],[445,26,487,26],[445,27,487,27],[445,28,487,28],[446,8,488,6],[446,12,488,12,"hasBoss"],[446,19,488,19],[446,22,488,22,"newState"],[446,30,488,30],[446,31,488,31,"enemies"],[446,38,488,38],[446,39,488,39,"some"],[446,43,488,43],[446,44,488,44,"enemy"],[446,49,488,49],[446,53,488,53,"enemy"],[446,58,488,58],[446,59,488,59,"isBoss"],[446,65,488,65],[446,66,488,66],[448,8,490,6],[449,8,491,6],[449,12,491,10],[449,13,491,11,"newState"],[449,21,491,19],[449,22,491,20,"lastSpawnTime"],[449,35,491,33],[449,37,491,35],[450,10,492,8,"newState"],[450,18,492,16],[450,19,492,17,"lastSpawnTime"],[450,32,492,30],[450,35,492,33,"now"],[450,38,492,36],[451,8,493,6],[452,8,495,6,"console"],[452,15,495,13],[452,16,495,14,"log"],[452,19,495,17],[452,20,495,18],[452,53,495,51,"newState"],[452,61,495,59],[452,62,495,60,"enemies"],[452,69,495,67],[452,70,495,68,"length"],[452,76,495,74],[452,85,495,83,"MAX_ENEMIES"],[452,96,495,94],[452,109,495,107,"hasBoss"],[452,116,495,114],[452,118,495,116],[452,119,495,117],[454,8,497,6],[455,8,498,6],[455,12,498,10],[455,13,498,11,"hasBoss"],[455,20,498,18],[455,24,498,22,"newState"],[455,32,498,30],[455,33,498,31,"enemies"],[455,40,498,38],[455,41,498,39,"length"],[455,47,498,45],[455,50,498,48,"MAX_ENEMIES"],[455,61,498,59],[455,65,498,64,"now"],[455,68,498,67],[455,71,498,70,"newState"],[455,79,498,78],[455,80,498,79,"lastSpawnTime"],[455,93,498,92],[455,97,498,97,"MIN_SPAWN_DELAY"],[455,112,498,112],[455,114,498,114],[456,10,499,8,"console"],[456,17,499,15],[456,18,499,16,"log"],[456,21,499,19],[456,22,499,20],[456,43,499,41,"newState"],[456,51,499,49],[456,52,499,50,"enemies"],[456,59,499,57],[456,60,499,58,"length"],[456,66,499,64],[456,69,499,67],[456,70,499,68],[456,74,499,72,"MAX_ENEMIES"],[456,85,499,83],[456,87,499,85],[456,88,499,86],[457,10,500,8,"spawnTestEnemy"],[457,24,500,22],[457,25,500,23,"newState"],[457,33,500,31],[457,34,500,32],[458,10,501,8,"newState"],[458,18,501,16],[458,19,501,17,"lastSpawnTime"],[458,32,501,30],[458,35,501,33,"now"],[458,38,501,36],[459,8,502,6],[460,8,504,6],[460,15,504,13,"newState"],[460,23,504,21],[461,6,505,4],[461,7,505,5],[461,47,505,6],[463,6,507,4],[464,6,508,4,"console"],[464,13,508,11],[464,14,508,12,"log"],[464,17,508,15],[464,18,508,16],[464,50,508,48,"enemiesToKill"],[464,63,508,61],[464,64,508,62,"length"],[464,70,508,68],[464,101,508,99],[464,102,508,100],[465,6,510,4,"enemiesToKill"],[465,19,510,17],[465,20,510,18,"forEach"],[465,27,510,25],[465,28,510,26],[465,29,510,27,"enemy"],[465,34,510,32],[465,36,510,34,"index"],[465,41,510,39],[465,46,510,44],[466,8,511,6,"console"],[466,15,511,13],[466,16,511,14,"log"],[466,19,511,17],[466,20,511,18],[466,57,511,55,"index"],[466,62,511,60],[466,65,511,63],[466,66,511,64],[466,70,511,68,"enemiesToKill"],[466,83,511,81],[466,84,511,82,"length"],[466,90,511,88],[466,104,511,102,"enemy"],[466,109,511,107],[466,110,511,108,"id"],[466,112,511,110],[466,114,511,112],[466,115,511,113],[467,8,512,6,"handleEnemyKill"],[467,23,512,21],[467,24,512,22,"enemy"],[467,29,512,27],[467,30,512,28],[468,6,513,4],[468,7,513,5],[468,8,513,6],[469,4,514,2],[469,5,514,3],[469,7,514,5],[469,8,514,6,"handleEnemyKill"],[469,23,514,21],[469,24,514,22],[469,25,514,23],[469,26,514,24],[469,27,514,25],[471,4,516,2],[472,4,517,2],[472,8,517,8,"findClosestEnemyInternal"],[472,32,517,32],[472,35,517,36,"enemies"],[472,42,517,58],[472,46,517,83],[473,6,518,4],[473,10,518,8,"enemies"],[473,17,518,15],[473,18,518,16,"length"],[473,24,518,22],[473,29,518,27],[473,30,518,28],[473,32,518,30],[473,39,518,37],[473,43,518,41],[475,6,520,4],[476,6,521,4],[476,10,521,10,"SCREEN_WIDTH"],[476,22,521,22],[476,25,521,25],[476,28,521,28],[477,6,522,4],[477,10,522,10,"GAME_AREA_HEIGHT"],[477,26,522,26],[477,29,522,29],[477,32,522,32],[477,35,522,35],[477,38,522,38],[477,39,522,39],[477,40,522,40],[478,6,523,4],[478,10,523,10,"ninjaX"],[478,16,523,16],[478,19,523,19,"SCREEN_WIDTH"],[478,31,523,31],[478,34,523,34],[478,35,523,35],[479,6,524,4],[479,10,524,10,"ninjaY"],[479,16,524,16],[479,19,524,19,"GAME_AREA_HEIGHT"],[479,35,524,35],[479,38,524,38],[479,39,524,39],[480,6,526,4],[480,10,526,8,"closestEnemy"],[480,22,526,20],[480,25,526,23,"enemies"],[480,32,526,30],[480,33,526,31],[480,34,526,32],[480,35,526,33],[481,6,527,4],[481,10,527,8,"closestDistance"],[481,25,527,23],[481,28,527,26,"Infinity"],[481,36,527,34],[482,6,529,4,"enemies"],[482,13,529,11],[482,14,529,12,"forEach"],[482,21,529,19],[482,22,529,20,"enemy"],[482,27,529,25],[482,31,529,29],[483,8,530,6],[483,12,530,12,"distance"],[483,20,530,20],[483,23,530,23,"Math"],[483,27,530,27],[483,28,530,28,"sqrt"],[483,32,530,32],[483,33,531,8,"Math"],[483,37,531,12],[483,38,531,13,"pow"],[483,41,531,16],[483,42,531,17,"enemy"],[483,47,531,22],[483,48,531,23,"position"],[483,56,531,31],[483,57,531,32,"x"],[483,58,531,33],[483,61,531,36,"ninjaX"],[483,67,531,42],[483,69,531,44],[483,70,531,45],[483,71,531,46],[483,74,532,8,"Math"],[483,78,532,12],[483,79,532,13,"pow"],[483,82,532,16],[483,83,532,17,"enemy"],[483,88,532,22],[483,89,532,23,"position"],[483,97,532,31],[483,98,532,32,"y"],[483,99,532,33],[483,102,532,36,"ninjaY"],[483,108,532,42],[483,110,532,44],[483,111,532,45],[483,112,533,6],[483,113,533,7],[484,8,535,6],[484,12,535,10,"distance"],[484,20,535,18],[484,23,535,21,"closestDistance"],[484,38,535,36],[484,40,535,38],[485,10,536,8,"closestDistance"],[485,25,536,23],[485,28,536,26,"distance"],[485,36,536,34],[486,10,537,8,"closestEnemy"],[486,22,537,20],[486,25,537,23,"enemy"],[486,30,537,28],[487,8,538,6],[488,6,539,4],[488,7,539,5],[488,8,539,6],[489,6,541,4,"console"],[489,13,541,11],[489,14,541,12,"log"],[489,17,541,15],[489,18,541,16],[489,60,541,58,"closestDistance"],[489,75,541,73],[489,76,541,74,"toFixed"],[489,83,541,81],[489,84,541,82],[489,85,541,83],[489,86,541,84],[489,88,541,86],[489,89,541,87],[490,6,542,4],[490,13,542,11,"closestEnemy"],[490,25,542,23],[491,4,543,2],[491,5,543,3],[493,4,545,2],[494,4,546,2],[494,8,546,8,"findClosestEnemy"],[494,24,546,24],[494,27,546,27,"findClosestEnemy"],[494,28,546,27],[494,33,546,53],[495,6,547,4],[495,13,547,11,"findClosestEnemyInternal"],[495,37,547,35],[495,38,547,36,"combatState"],[495,49,547,47],[495,50,547,48,"enemies"],[495,57,547,55],[495,58,547,56],[496,4,548,2],[496,5,548,3],[498,4,550,2],[499,4,551,2],[499,8,551,2,"_useState7"],[499,18,551,2],[499,21,551,58],[499,25,551,58,"useState"],[499,31,551,66],[499,32,551,66,"useState"],[499,40,551,66],[499,42,551,91],[500,8,551,93,"x"],[500,9,551,94],[500,11,551,96],[500,12,551,97],[501,8,551,99,"y"],[501,9,551,100],[501,11,551,102],[502,6,551,104],[502,7,551,105],[502,8,551,106],[503,6,551,106,"_useState8"],[503,16,551,106],[503,23,551,106,"_slicedToArray"],[503,37,551,106],[503,38,551,106,"default"],[503,45,551,106],[503,47,551,106,"_useState7"],[503,57,551,106],[504,6,551,9,"currentNinjaPosition"],[504,26,551,29],[504,29,551,29,"_useState8"],[504,39,551,29],[505,6,551,31,"setCurrentNinjaPosition"],[505,29,551,54],[505,32,551,54,"_useState8"],[505,42,551,54],[506,4,552,2],[506,8,552,2,"_useState9"],[506,18,552,2],[506,21,552,60],[506,25,552,60,"useState"],[506,31,552,68],[506,32,552,68,"useState"],[506,40,552,68],[506,42,552,69],[506,47,552,74],[506,48,552,75],[507,6,552,75,"_useState0"],[507,16,552,75],[507,23,552,75,"_slicedToArray"],[507,37,552,75],[507,38,552,75,"default"],[507,45,552,75],[507,47,552,75,"_useState9"],[507,57,552,75],[508,6,552,9,"isManualControlActive"],[508,27,552,30],[508,30,552,30,"_useState0"],[508,40,552,30],[509,6,552,32,"setIsManualControlActive"],[509,30,552,56],[509,33,552,56,"_useState0"],[509,43,552,56],[511,4,554,2],[512,4,555,2],[512,8,555,8,"updateNinjaPosition"],[512,27,555,27],[512,30,555,30],[512,34,555,30,"useCallback"],[512,40,555,41],[512,41,555,41,"useCallback"],[512,52,555,41],[512,54,555,43,"newPosition"],[512,65,555,78],[512,69,555,83],[513,6,556,4,"setCurrentNinjaPosition"],[513,29,556,27],[513,30,556,28,"newPosition"],[513,41,556,39],[513,42,556,40],[514,4,557,2],[514,5,557,3],[514,7,557,5],[514,9,557,7],[514,10,557,8],[516,4,559,2],[517,4,560,2],[517,8,560,8,"setManualControlActive"],[517,30,560,30],[517,33,560,33],[517,37,560,33,"useCallback"],[517,43,560,44],[517,44,560,44,"useCallback"],[517,55,560,44],[517,57,560,46,"active"],[517,63,560,61],[517,67,560,66],[518,6,561,4,"setIsManualControlActive"],[518,30,561,28],[518,31,561,29,"active"],[518,37,561,35],[518,38,561,36],[519,6,562,4,"console"],[519,13,562,11],[519,14,562,12,"log"],[519,17,562,15],[519,18,562,16],[519,39,562,37,"active"],[519,45,562,43],[519,48,562,46],[519,59,562,57],[519,62,562,60],[519,75,562,73],[519,88,562,86,"active"],[519,94,562,92],[519,97,562,95],[519,105,562,103],[519,108,562,106],[519,117,562,115],[519,119,562,117],[519,120,562,118],[520,4,563,2],[520,5,563,3],[520,7,563,5],[520,9,563,7],[520,10,563,8],[522,4,565,2],[523,4,566,2],[523,8,566,8,"handleProjectileHit"],[523,27,566,27],[523,30,566,31,"projectile"],[523,40,566,59],[523,44,566,64],[524,6,567,4,"console"],[524,13,567,11],[524,14,567,12,"log"],[524,17,567,15],[524,18,567,16],[524,35,567,33,"projectile"],[524,45,567,43],[524,46,567,44,"id"],[524,48,567,46],[524,62,567,60,"projectile"],[524,72,567,70],[524,73,567,71,"targetEnemyId"],[524,86,567,84],[524,94,567,92,"projectile"],[524,104,567,102],[524,105,567,103,"damage"],[524,111,567,109],[524,120,567,118],[524,121,567,119],[525,6,569,4,"setCombatState"],[525,20,569,18],[525,21,569,19,"prev"],[525,25,569,23],[525,29,569,27],[526,8,570,6],[526,12,570,12,"newState"],[526,20,570,20],[526,23,570,23],[527,10,570,25],[527,13,570,28,"prev"],[528,8,570,33],[528,9,570,34],[530,8,572,6],[531,8,573,6],[531,12,573,12,"enemyIndex"],[531,22,573,22],[531,25,573,25,"newState"],[531,33,573,33],[531,34,573,34,"enemies"],[531,41,573,41],[531,42,573,42,"findIndex"],[531,51,573,51],[531,52,573,52,"e"],[531,53,573,53],[531,57,573,57,"e"],[531,58,573,58],[531,59,573,59,"id"],[531,61,573,61],[531,66,573,66,"projectile"],[531,76,573,76],[531,77,573,77,"targetEnemyId"],[531,90,573,90],[531,91,573,91],[532,8,574,6],[532,12,574,10,"enemyIndex"],[532,22,574,20],[532,26,574,24],[532,27,574,25],[532,29,574,27],[533,10,575,8,"newState"],[533,18,575,16],[533,19,575,17,"enemies"],[533,26,575,24],[533,29,575,27],[533,30,575,28],[533,33,575,31,"newState"],[533,41,575,39],[533,42,575,40,"enemies"],[533,49,575,47],[533,50,575,48],[534,10,576,8,"newState"],[534,18,576,16],[534,19,576,17,"enemies"],[534,26,576,24],[534,27,576,25,"enemyIndex"],[534,37,576,35],[534,38,576,36],[534,41,576,39],[535,12,577,10],[535,15,577,13,"newState"],[535,23,577,21],[535,24,577,22,"enemies"],[535,31,577,29],[535,32,577,30,"enemyIndex"],[535,42,577,40],[535,43,577,41],[536,12,578,10,"health"],[536,18,578,16],[536,20,578,18,"newState"],[536,28,578,26],[536,29,578,27,"enemies"],[536,36,578,34],[536,37,578,35,"enemyIndex"],[536,47,578,45],[536,48,578,46],[536,49,578,47,"health"],[536,55,578,53],[536,58,578,56,"projectile"],[536,68,578,66],[536,69,578,67,"damage"],[536,75,578,73],[537,12,579,10,"lastDamaged"],[537,23,579,21],[537,25,579,23,"combatEngine"],[537,44,579,35],[537,45,579,35,"combatEngine"],[537,57,579,35],[537,58,579,36,"getCurrentTick"],[537,72,579,50],[537,73,579,51],[538,10,580,8],[538,11,580,9],[539,10,582,8,"console"],[539,17,582,15],[539,18,582,16,"log"],[539,21,582,19],[539,22,582,20],[539,34,582,32,"projectile"],[539,44,582,42],[539,45,582,43,"targetEnemyId"],[539,58,582,56],[539,70,582,68,"newState"],[539,78,582,76],[539,79,582,77,"enemies"],[539,86,582,84],[539,87,582,85,"enemyIndex"],[539,97,582,95],[539,98,582,96],[539,99,582,97,"health"],[539,105,582,103],[539,109,582,107,"newState"],[539,117,582,115],[539,118,582,116,"enemies"],[539,125,582,123],[539,126,582,124,"enemyIndex"],[539,136,582,134],[539,137,582,135],[539,138,582,136,"maxHealth"],[539,147,582,145],[539,149,582,147],[539,150,582,148],[540,8,583,6],[541,8,585,6],[541,15,585,13,"newState"],[541,23,585,21],[542,6,586,4],[542,7,586,5],[542,8,586,6],[544,6,588,4],[545,6,589,4,"setProjectiles"],[545,20,589,18],[545,21,589,19,"prev"],[545,25,589,23],[545,29,589,27,"prev"],[545,33,589,31],[545,34,589,32,"filter"],[545,40,589,38],[545,41,589,39,"p"],[545,42,589,40],[545,46,589,44,"p"],[545,47,589,45],[545,48,589,46,"id"],[545,50,589,48],[545,55,589,53,"projectile"],[545,65,589,63],[545,66,589,64,"id"],[545,68,589,66],[545,69,589,67],[545,70,589,68],[546,4,590,2],[546,5,590,3],[548,4,592,2],[549,4,593,2],[549,8,593,8,"castAbility"],[549,19,593,19],[549,22,593,22,"castAbility"],[549,23,593,23,"state"],[549,28,593,41],[549,30,593,43,"slotIndex"],[549,39,593,60],[549,44,593,65],[550,6,594,4],[550,10,594,10,"deck"],[550,14,594,14],[550,17,594,17,"state"],[550,22,594,22],[550,23,594,23,"abilityManager"],[550,37,594,37],[550,38,594,38,"getDeck"],[550,45,594,45],[550,46,594,46],[550,47,594,47],[551,6,595,4],[551,10,595,10,"ability"],[551,17,595,17],[551,20,595,20,"deck"],[551,24,595,24],[551,25,595,25,"slots"],[551,30,595,30],[551,31,595,31,"slotIndex"],[551,40,595,40],[551,41,595,41],[552,6,596,4],[552,10,596,8],[552,11,596,9,"ability"],[552,18,596,16],[552,20,596,18],[554,6,598,4],[555,6,599,4],[555,10,599,8,"damage"],[555,16,599,14],[555,19,599,17,"ability"],[555,26,599,24],[555,27,599,25,"stats"],[555,32,599,30],[555,33,599,31,"baseDamage"],[555,43,599,41],[557,6,601,4],[558,6,602,4,"deck"],[558,10,602,8],[558,11,602,9,"activeSynergies"],[558,26,602,24],[558,27,602,25,"forEach"],[558,34,602,32],[558,35,602,33,"synergy"],[558,42,602,40],[558,46,602,44],[559,8,603,6],[559,12,603,10,"synergy"],[559,19,603,17],[559,20,603,18,"bonus"],[559,25,603,23],[559,26,603,24,"damageBonus"],[559,37,603,35],[559,41,604,10,"synergy"],[559,48,604,17],[559,49,604,18,"requiredTags"],[559,61,604,30],[559,62,604,31,"some"],[559,66,604,35],[559,67,604,36,"tag"],[559,70,604,39],[559,74,604,43,"ability"],[559,81,604,50],[559,82,604,51,"tags"],[559,86,604,55],[559,87,604,56,"includes"],[559,95,604,64],[559,96,604,65,"tag"],[559,99,604,68],[559,100,604,69],[559,101,604,70],[559,103,604,72],[560,10,605,8,"damage"],[560,16,605,14],[560,20,605,19],[560,21,605,20],[560,24,605,23,"synergy"],[560,31,605,30],[560,32,605,31,"bonus"],[560,37,605,36],[560,38,605,37,"damageBonus"],[560,49,605,48],[560,52,605,51],[560,55,605,55],[561,8,606,6],[562,6,607,4],[562,7,607,5],[562,8,607,6],[564,6,609,4],[565,6,610,4],[565,10,610,10,"isAOE"],[565,15,610,15],[565,18,610,18,"ability"],[565,25,610,25],[565,26,610,26,"effects"],[565,33,610,33],[565,34,610,34,"includes"],[565,42,610,42],[565,43,610,43],[565,48,610,48],[565,49,610,49],[565,53,610,53,"ability"],[565,60,610,60],[565,61,610,61,"stats"],[565,66,610,66],[565,67,610,67,"aoeRadius"],[565,76,610,76],[566,6,612,4],[566,10,612,8,"isAOE"],[566,15,612,13],[566,17,612,15],[567,8,613,6,"console"],[567,15,613,13],[567,16,613,14,"log"],[567,19,613,17],[567,20,613,18],[567,39,613,37,"ability"],[567,46,613,44],[567,47,613,45,"name"],[567,51,613,49],[567,67,613,65,"ability"],[567,74,613,72],[567,75,613,73,"stats"],[567,80,613,78],[567,81,613,79,"aoeRadius"],[567,90,613,88],[567,92,613,90],[567,93,613,91],[569,8,615,6],[570,8,616,6],[570,12,616,12,"ninjaX"],[570,18,616,18],[570,21,616,21,"currentNinjaPosition"],[570,41,616,41],[570,42,616,42,"x"],[570,43,616,43],[570,46,616,46],[570,48,616,48],[570,49,616,49],[570,50,616,50],[571,8,617,6],[571,12,617,12,"ninjaY"],[571,18,617,18],[571,21,617,21,"currentNinjaPosition"],[571,41,617,41],[571,42,617,42,"y"],[571,43,617,43],[571,46,617,46],[571,48,617,48],[572,8,618,6],[572,12,618,12,"aoeRadius"],[572,21,618,21],[572,24,618,24,"ability"],[572,31,618,31],[572,32,618,32,"stats"],[572,37,618,37],[572,38,618,38,"aoeRadius"],[572,47,618,47],[573,8,620,6],[573,12,620,12,"enemiesInRange"],[573,26,620,26],[573,29,620,29,"state"],[573,34,620,34],[573,35,620,35,"enemies"],[573,42,620,42],[573,43,620,43,"filter"],[573,49,620,49],[573,50,620,50,"enemy"],[573,55,620,55],[573,59,620,59],[574,10,621,8],[574,14,621,14,"enemyX"],[574,20,621,20],[574,23,621,23,"enemy"],[574,28,621,28],[574,29,621,29,"position"],[574,37,621,37],[574,38,621,38,"x"],[574,39,621,39],[574,42,621,42],[574,46,621,46],[574,47,621,47],[574,48,621,48],[575,10,622,8],[575,14,622,14,"enemyY"],[575,20,622,20],[575,23,622,23,"enemy"],[575,28,622,28],[575,29,622,29,"position"],[575,37,622,37],[575,38,622,38,"y"],[575,39,622,39],[575,42,622,42],[575,46,622,46],[576,10,623,8],[576,14,623,14,"distance"],[576,22,623,22],[576,25,623,25,"Math"],[576,29,623,29],[576,30,623,30,"sqrt"],[576,34,623,34],[576,35,623,35,"Math"],[576,39,623,39],[576,40,623,40,"pow"],[576,43,623,43],[576,44,623,44,"enemyX"],[576,50,623,50],[576,53,623,53,"ninjaX"],[576,59,623,59],[576,61,623,61],[576,62,623,62],[576,63,623,63],[576,66,623,66,"Math"],[576,70,623,70],[576,71,623,71,"pow"],[576,74,623,74],[576,75,623,75,"enemyY"],[576,81,623,81],[576,84,623,84,"ninjaY"],[576,90,623,90],[576,92,623,92],[576,93,623,93],[576,94,623,94],[576,95,623,95],[577,10,624,8],[577,17,624,15,"distance"],[577,25,624,23],[577,29,624,27,"aoeRadius"],[577,38,624,36],[578,8,625,6],[578,9,625,7],[578,10,625,8],[579,8,627,6,"console"],[579,15,627,13],[579,16,627,14,"log"],[579,19,627,17],[579,20,627,18],[579,45,627,43,"enemiesInRange"],[579,59,627,57],[579,60,627,58,"length"],[579,66,627,64],[579,88,627,86,"aoeRadius"],[579,97,627,95],[579,107,627,105],[579,108,627,106],[581,8,629,6],[582,8,630,6,"enemiesInRange"],[582,22,630,20],[582,23,630,21,"forEach"],[582,30,630,28],[582,31,630,29,"enemy"],[582,36,630,34],[582,40,630,38],[583,10,631,8],[583,14,631,14,"damageResult"],[583,26,631,26],[583,29,631,29,"DamageCalculator"],[583,48,631,45],[583,49,631,45,"DamageCalculator"],[583,65,631,45],[583,66,631,46,"calculateDamage"],[583,81,631,61],[583,82,631,62,"damage"],[583,88,631,68],[583,90,631,70,"state"],[583,95,631,75],[583,96,631,76,"playerStats"],[583,107,631,87],[583,109,631,89,"enemy"],[583,114,631,94],[583,115,631,95,"stats"],[583,120,631,100],[583,121,631,101],[584,10,632,8,"createProjectile"],[584,26,632,24],[584,27,632,25,"enemy"],[584,32,632,30],[584,34,632,32,"damageResult"],[584,46,632,44],[584,47,632,45,"damage"],[584,53,632,51],[584,55,632,53,"currentNinjaPosition"],[584,75,632,73],[584,77,632,75],[585,12,633,10,"id"],[585,14,633,12],[585,16,633,14,"ability"],[585,23,633,21],[585,24,633,22,"id"],[585,26,633,24],[586,12,634,10,"name"],[586,16,634,14],[586,18,634,16,"ability"],[586,25,634,23],[586,26,634,24,"name"],[586,30,634,28],[587,12,635,10,"icon"],[587,16,635,14],[587,18,635,16,"ability"],[587,25,635,23],[587,26,635,24,"icon"],[588,10,636,8],[588,11,636,9],[588,12,636,10],[589,10,638,8,"console"],[589,17,638,15],[589,18,638,16,"log"],[589,21,638,19],[589,22,638,20],[589,37,638,35,"enemy"],[589,42,638,40],[589,43,638,41,"name"],[589,47,638,45],[589,55,638,53,"damageResult"],[589,67,638,65],[589,68,638,66,"damage"],[589,74,638,72],[589,83,638,81],[589,84,638,82],[590,8,639,6],[590,9,639,7],[590,10,639,8],[591,8,641,6,"console"],[591,15,641,13],[591,16,641,14,"log"],[591,19,641,17],[591,20,641,18],[591,26,641,24,"ability"],[591,33,641,31],[591,34,641,32,"name"],[591,38,641,36],[591,56,641,54,"enemiesInRange"],[591,70,641,68],[591,71,641,69,"length"],[591,77,641,75],[591,93,641,91,"damage"],[591,99,641,97],[591,118,641,116],[591,119,641,117],[592,6,643,4],[592,7,643,5],[592,13,643,11],[593,8,644,6],[594,8,645,6],[594,12,645,12,"target"],[594,18,645,18],[594,21,645,21,"findClosestEnemyInternal"],[594,45,645,45],[594,46,645,46,"state"],[594,51,645,51],[594,52,645,52,"enemies"],[594,59,645,59],[594,60,645,60],[595,8,646,6],[595,12,646,10],[595,13,646,11,"target"],[595,19,646,17],[595,21,646,19],[596,8,648,6],[596,12,648,12,"damageResult"],[596,24,648,24],[596,27,648,27,"DamageCalculator"],[596,46,648,43],[596,47,648,43,"DamageCalculator"],[596,63,648,43],[596,64,648,44,"calculateDamage"],[596,79,648,59],[596,80,648,60,"damage"],[596,86,648,66],[596,88,648,68,"state"],[596,93,648,73],[596,94,648,74,"playerStats"],[596,105,648,85],[596,107,648,87,"target"],[596,113,648,93],[596,114,648,94,"stats"],[596,119,648,99],[596,120,648,100],[598,8,650,6],[599,8,651,6,"createProjectile"],[599,24,651,22],[599,25,651,23,"target"],[599,31,651,29],[599,33,651,31,"damageResult"],[599,45,651,43],[599,46,651,44,"damage"],[599,52,651,50],[599,54,651,52,"currentNinjaPosition"],[599,74,651,72],[599,76,651,74],[600,10,652,8,"id"],[600,12,652,10],[600,14,652,12,"ability"],[600,21,652,19],[600,22,652,20,"id"],[600,24,652,22],[601,10,653,8,"name"],[601,14,653,12],[601,16,653,14,"ability"],[601,23,653,21],[601,24,653,22,"name"],[601,28,653,26],[602,10,654,8,"icon"],[602,14,654,12],[602,16,654,14,"ability"],[602,23,654,21],[602,24,654,22,"icon"],[603,8,655,6],[603,9,655,7],[603,10,655,8],[604,8,657,6,"console"],[604,15,657,13],[604,16,657,14,"log"],[604,19,657,17],[604,20,657,18],[604,26,657,24,"ability"],[604,33,657,31],[604,34,657,32,"name"],[604,38,657,36],[604,66,657,64,"damageResult"],[604,78,657,76],[604,79,657,77,"damage"],[604,85,657,83],[604,95,657,93,"damageResult"],[604,107,657,105],[604,108,657,106,"isCritical"],[604,118,657,116],[604,121,657,119],[604,131,657,129],[604,134,657,132],[604,136,657,134],[604,138,657,136],[604,139,657,137],[605,6,658,4],[607,6,660,4],[608,6,661,4],[608,10,661,8,"ability"],[608,17,661,15],[608,18,661,16,"effects"],[608,25,661,23],[608,26,661,24,"includes"],[608,34,661,32],[608,35,661,33],[608,40,661,38],[608,41,661,39],[608,45,661,43,"ability"],[608,52,661,50],[608,53,661,51,"stats"],[608,58,661,56],[608,59,661,57,"duration"],[608,67,661,65],[608,69,661,67],[609,8,662,6],[609,12,662,12,"targets"],[609,19,662,19],[609,22,662,22,"isAOE"],[609,27,662,27],[609,30,663,8,"state"],[609,35,663,13],[609,36,663,14,"enemies"],[609,43,663,21],[609,44,663,22,"filter"],[609,50,663,28],[609,51,663,29,"enemy"],[609,56,663,34],[609,60,663,38],[610,10,664,10],[610,14,664,16,"ninjaX"],[610,20,664,22],[610,23,664,25,"currentNinjaPosition"],[610,43,664,45],[610,44,664,46,"x"],[610,45,664,47],[610,48,664,50],[610,50,664,52],[611,10,665,10],[611,14,665,16,"ninjaY"],[611,20,665,22],[611,23,665,25,"currentNinjaPosition"],[611,43,665,45],[611,44,665,46,"y"],[611,45,665,47],[611,48,665,50],[611,50,665,52],[612,10,666,10],[612,14,666,16,"enemyX"],[612,20,666,22],[612,23,666,25,"enemy"],[612,28,666,30],[612,29,666,31,"position"],[612,37,666,39],[612,38,666,40,"x"],[612,39,666,41],[612,42,666,44],[612,46,666,48],[613,10,667,10],[613,14,667,16,"enemyY"],[613,20,667,22],[613,23,667,25,"enemy"],[613,28,667,30],[613,29,667,31,"position"],[613,37,667,39],[613,38,667,40,"y"],[613,39,667,41],[613,42,667,44],[613,46,667,48],[614,10,668,10],[614,14,668,16,"distance"],[614,22,668,24],[614,25,668,27,"Math"],[614,29,668,31],[614,30,668,32,"sqrt"],[614,34,668,36],[614,35,668,37,"Math"],[614,39,668,41],[614,40,668,42,"pow"],[614,43,668,45],[614,44,668,46,"enemyX"],[614,50,668,52],[614,53,668,55,"ninjaX"],[614,59,668,61],[614,61,668,63],[614,62,668,64],[614,63,668,65],[614,66,668,68,"Math"],[614,70,668,72],[614,71,668,73,"pow"],[614,74,668,76],[614,75,668,77,"enemyY"],[614,81,668,83],[614,84,668,86,"ninjaY"],[614,90,668,92],[614,92,668,94],[614,93,668,95],[614,94,668,96],[614,95,668,97],[615,10,669,10],[615,17,669,17,"distance"],[615,25,669,25],[615,29,669,29,"ability"],[615,36,669,36],[615,37,669,37,"stats"],[615,42,669,42],[615,43,669,43,"aoeRadius"],[615,52,669,52],[616,8,670,8],[616,9,670,9],[616,10,670,10],[616,13,671,8],[616,14,671,9,"findClosestEnemyInternal"],[616,38,671,33],[616,39,671,34,"state"],[616,44,671,39],[616,45,671,40,"enemies"],[616,52,671,47],[616,53,671,48],[616,54,671,49],[616,55,671,50,"filter"],[616,61,671,56],[616,62,671,57,"Boolean"],[616,69,671,64],[616,70,671,65],[617,8,673,6,"targets"],[617,15,673,13],[617,16,673,14,"forEach"],[617,23,673,21],[617,24,673,22,"target"],[617,30,673,28],[617,34,673,32],[618,10,674,8,"state"],[618,15,674,13],[618,16,674,14,"statusEffects"],[618,29,674,27],[618,30,674,28,"addEffect"],[618,39,674,37],[618,40,674,38,"target"],[618,46,674,44],[618,47,674,45,"id"],[618,49,674,47],[618,51,674,49],[619,12,675,10,"id"],[619,14,675,12],[619,16,675,14],[619,19,675,17,"ability"],[619,26,675,24],[619,27,675,25,"id"],[619,29,675,27],[619,35,675,33],[620,12,676,10,"type"],[620,16,676,14],[620,18,676,16],[620,23,676,21],[621,12,677,10,"remainingTicks"],[621,26,677,24],[621,28,677,26,"Math"],[621,32,677,30],[621,33,677,31,"floor"],[621,38,677,36],[621,39,677,37,"ability"],[621,46,677,44],[621,47,677,45,"stats"],[621,52,677,50],[621,53,677,51,"duration"],[621,61,677,59],[621,64,677,62],[621,66,677,64],[621,67,677,65],[622,12,678,10,"tickInterval"],[622,24,678,22],[622,26,678,24],[622,28,678,26],[623,12,679,10,"lastTick"],[623,20,679,18],[623,22,679,20,"state"],[623,27,679,25],[623,28,679,26,"currentTick"],[623,39,679,37],[624,12,680,10,"value"],[624,17,680,15],[624,19,680,17,"Math"],[624,23,680,21],[624,24,680,22,"floor"],[624,29,680,27],[624,30,680,28,"damage"],[624,36,680,34],[624,39,680,37],[624,42,680,40],[624,43,680,41],[625,12,681,10,"stackable"],[625,21,681,19],[625,23,681,21],[626,10,682,8],[626,11,682,9],[626,12,682,10],[627,8,683,6],[627,9,683,7],[627,10,683,8],[628,6,684,4],[630,6,686,4],[631,6,687,4],[631,10,687,8,"ability"],[631,17,687,15],[631,18,687,16,"effects"],[631,25,687,23],[631,26,687,24,"includes"],[631,34,687,32],[631,35,687,33],[631,41,687,39],[631,42,687,40],[631,46,687,44,"ability"],[631,53,687,51],[631,54,687,52,"id"],[631,56,687,54],[631,61,687,59],[631,75,687,73],[631,77,687,75],[632,8,688,6,"console"],[632,15,688,13],[632,16,688,14,"log"],[632,19,688,17],[632,20,688,18],[632,66,688,64,"ability"],[632,73,688,71],[632,74,688,72,"stats"],[632,79,688,77],[632,80,688,78,"duration"],[632,88,688,86],[632,98,688,96],[632,99,688,97],[634,8,690,6],[635,8,691,6],[635,12,691,12,"cloneX"],[635,18,691,18],[635,21,691,21,"currentNinjaPosition"],[635,41,691,41],[635,42,691,42,"x"],[635,43,691,43],[635,46,691,46],[635,48,691,48],[635,49,691,49],[635,50,691,50],[636,8,692,6],[636,12,692,12,"cloneY"],[636,18,692,18],[636,21,692,21,"currentNinjaPosition"],[636,41,692,41],[636,42,692,42,"y"],[636,43,692,43],[636,46,692,46],[636,48,692,48],[636,49,692,49],[636,50,692,50],[638,8,694,6,"state"],[638,13,694,11],[638,14,694,12,"shadowClone"],[638,25,694,23],[638,28,694,26],[639,10,695,8,"id"],[639,12,695,10],[639,14,695,12],[639,30,695,28,"Date"],[639,34,695,32],[639,35,695,33,"now"],[639,38,695,36],[639,39,695,37],[639,40,695,38],[639,42,695,40],[640,10,696,8,"remainingTicks"],[640,24,696,22],[640,26,696,24,"Math"],[640,30,696,28],[640,31,696,29,"floor"],[640,36,696,34],[640,37,696,35,"ability"],[640,44,696,42],[640,45,696,43,"stats"],[640,50,696,48],[640,51,696,49,"duration"],[640,59,696,57],[640,62,696,60],[640,64,696,62],[640,65,696,63],[641,10,696,65],[642,10,697,8,"position"],[642,18,697,16],[642,20,697,18],[643,12,697,20,"x"],[643,13,697,21],[643,15,697,23,"cloneX"],[643,21,697,29],[644,12,697,31,"y"],[644,13,697,32],[644,15,697,34,"cloneY"],[645,10,697,41],[645,11,697,42],[646,10,698,8,"damageMultiplier"],[646,26,698,24],[646,28,698,26],[646,31,698,29],[646,32,698,31],[647,8,699,6],[647,9,699,7],[648,8,701,6,"console"],[648,15,701,13],[648,16,701,14,"log"],[648,19,701,17],[648,20,701,18],[648,63,701,61,"ability"],[648,70,701,68],[648,71,701,69,"stats"],[648,76,701,74],[648,77,701,75,"duration"],[648,85,701,83],[648,108,701,106],[648,109,701,107],[649,6,702,4],[650,4,703,2],[650,5,703,3],[652,4,705,2],[653,4,706,2],[653,8,706,8,"createProjectile"],[653,24,706,24],[653,27,706,27,"createProjectile"],[653,28,706,28,"targetEnemy"],[653,39,706,52],[653,41,706,54,"damage"],[653,47,706,68],[653,49,706,70,"ninjaPos"],[653,57,706,103],[653,59,706,105,"abilityInfo"],[653,70,706,159],[653,75,706,164],[654,6,707,4],[654,10,707,8],[654,11,707,9,"targetEnemy"],[654,22,707,20],[654,24,707,22],[655,8,708,6,"console"],[655,15,708,13],[655,16,708,14,"log"],[655,19,708,17],[655,20,708,18],[655,65,708,63],[655,66,708,64],[656,8,709,6],[656,15,709,13],[656,19,709,17],[657,6,710,4],[658,6,712,4],[658,10,712,10,"SCREEN_WIDTH"],[658,22,712,22],[658,25,712,25],[658,28,712,28],[659,6,713,4],[659,10,713,10,"GAME_AREA_HEIGHT"],[659,26,713,26],[659,29,713,29],[659,32,713,32],[659,35,713,35],[659,38,713,38],[659,39,713,39],[659,40,713,40],[660,6,714,4],[660,10,714,10,"NINJA_SIZE"],[660,20,714,20],[660,23,714,23],[660,25,714,25],[662,6,716,4],[663,6,717,4],[663,10,717,10,"ninjaX"],[663,16,717,16],[663,19,717,19,"ninjaPos"],[663,27,717,27],[663,30,717,30,"ninjaPos"],[663,38,717,38],[663,39,717,39,"x"],[663,40,717,40],[663,43,717,43,"NINJA_SIZE"],[663,53,717,53],[663,56,717,56],[663,57,717,57],[663,60,717,60,"SCREEN_WIDTH"],[663,72,717,72],[663,75,717,75],[663,76,717,76],[664,6,718,4],[664,10,718,10,"ninjaY"],[664,16,718,16],[664,19,718,19,"ninjaPos"],[664,27,718,27],[664,30,718,30,"ninjaPos"],[664,38,718,38],[664,39,718,39,"y"],[664,40,718,40],[664,43,718,43,"NINJA_SIZE"],[664,53,718,53],[664,56,718,56],[664,57,718,57],[664,60,718,60,"GAME_AREA_HEIGHT"],[664,76,718,76],[664,79,718,79],[664,80,718,80],[665,6,719,4],[665,10,719,10,"ENEMY_SIZE"],[665,20,719,20],[665,23,719,23],[665,25,719,25],[666,6,721,4],[666,10,721,10,"projectileId"],[666,22,721,22],[666,25,721,25],[666,33,721,33,"Date"],[666,37,721,37],[666,38,721,38,"now"],[666,41,721,41],[666,42,721,42],[666,43,721,43],[666,47,721,47,"Math"],[666,51,721,51],[666,52,721,52,"random"],[666,58,721,58],[666,59,721,59],[666,60,721,60],[666,62,721,62],[667,6,723,4],[667,10,723,10,"projectile"],[667,20,723,38],[667,23,723,41],[668,8,724,6,"id"],[668,10,724,8],[668,12,724,10,"projectileId"],[668,24,724,22],[669,8,725,6,"x"],[669,9,725,7],[669,11,725,9,"ninjaX"],[669,17,725,15],[670,8,726,6,"y"],[670,9,726,7],[670,11,726,9,"ninjaY"],[670,17,726,15],[671,8,727,6,"targetX"],[671,15,727,13],[671,17,727,15,"targetEnemy"],[671,28,727,26],[671,29,727,27,"position"],[671,37,727,35],[671,38,727,36,"x"],[671,39,727,37],[671,42,727,40,"ENEMY_SIZE"],[671,52,727,50],[671,55,727,53],[671,56,727,54],[672,8,728,6,"targetY"],[672,15,728,13],[672,17,728,15,"targetEnemy"],[672,28,728,26],[672,29,728,27,"position"],[672,37,728,35],[672,38,728,36,"y"],[672,39,728,37],[672,42,728,40,"ENEMY_SIZE"],[672,52,728,50],[672,55,728,53],[672,56,728,54],[673,8,729,6,"targetEnemyId"],[673,21,729,19],[673,23,729,21,"targetEnemy"],[673,34,729,32],[673,35,729,33,"id"],[673,37,729,35],[674,8,730,6,"damage"],[674,14,730,12],[674,16,730,14,"damage"],[674,22,730,20],[675,8,731,6,"startTime"],[675,17,731,15],[675,19,731,17,"Date"],[675,23,731,21],[675,24,731,22,"now"],[675,27,731,25],[675,28,731,26],[675,29,731,27],[676,8,732,6,"duration"],[676,16,732,14],[676,18,732,16],[676,21,732,19],[677,8,732,21],[678,8,733,6],[679,8,734,6,"abilityId"],[679,17,734,15],[679,19,734,17,"abilityInfo"],[679,30,734,28],[679,32,734,30,"id"],[679,34,734,32],[679,38,734,36],[679,54,734,52],[680,8,735,6,"abilityName"],[680,19,735,17],[680,21,735,19,"abilityInfo"],[680,32,735,30],[680,34,735,32,"name"],[680,38,735,36],[680,42,735,40],[680,58,735,56],[681,8,736,6,"abilityIcon"],[681,19,736,17],[681,21,736,19,"abilityInfo"],[681,32,736,30],[681,34,736,32,"icon"],[681,38,736,36],[681,42,736,40],[681,46,736,44],[681,47,736,46],[682,6,737,4],[682,7,737,5],[683,6,739,4,"console"],[683,13,739,11],[683,14,739,12,"log"],[683,17,739,15],[683,18,739,16],[683,44,739,42,"abilityInfo"],[683,55,739,53],[683,57,739,55,"name"],[683,61,739,59],[683,65,739,63],[683,81,739,79],[683,101,739,99,"projectileId"],[683,113,739,111],[683,128,739,126,"targetEnemy"],[683,139,739,137],[683,140,739,138,"name"],[683,144,739,142],[683,152,739,150,"damage"],[683,158,739,156],[683,167,739,165],[683,168,739,166],[684,6,741,4,"console"],[684,13,741,11],[684,14,741,12,"log"],[684,17,741,15],[684,18,741,16],[684,53,741,51,"targetEnemy"],[684,64,741,62],[684,65,741,63,"id"],[684,67,741,65],[684,75,741,73,"damage"],[684,81,741,79],[684,90,741,88],[684,91,741,89],[685,6,742,4,"console"],[685,13,742,11],[685,14,742,12,"log"],[685,17,742,15],[685,18,742,16],[685,53,742,51,"ninjaX"],[685,59,742,57],[685,64,742,62,"ninjaY"],[685,70,742,68],[685,87,742,85,"projectile"],[685,97,742,95],[685,98,742,96,"targetX"],[685,105,742,103],[685,110,742,108,"projectile"],[685,120,742,118],[685,121,742,119,"targetY"],[685,128,742,126],[685,131,742,129],[685,132,742,130],[686,6,744,4,"setProjectiles"],[686,20,744,18],[686,21,744,19,"prev"],[686,25,744,23],[686,29,744,27],[686,30,744,28],[686,33,744,31,"prev"],[686,37,744,35],[686,39,744,37,"projectile"],[686,49,744,47],[686,50,744,48],[686,51,744,49],[688,6,746,4],[689,6,747,4,"setTimeout"],[689,16,747,14],[689,17,747,15],[689,23,747,21],[690,8,748,6,"handleProjectileHit"],[690,27,748,25],[690,28,748,26,"projectile"],[690,38,748,36],[690,39,748,37],[691,6,749,4],[691,7,749,5],[691,9,749,7],[691,12,749,10],[691,13,749,11],[692,6,751,4],[692,13,751,11,"projectile"],[692,23,751,21],[693,4,752,2],[693,5,752,3],[695,4,754,2],[696,4,755,2],[696,8,755,8,"spawnTestEnemy"],[696,22,755,22],[696,25,755,26,"state"],[696,30,755,44],[696,34,755,49],[697,6,756,4,"console"],[697,13,756,11],[697,14,756,12,"log"],[697,17,756,15],[697,18,756,16],[697,83,756,81],[697,84,756,82],[699,6,758,4],[700,6,759,4],[700,10,759,10,"zoneEnemy"],[700,19,759,19],[700,22,759,22,"spawnZoneEnemy"],[700,36,759,36],[700,37,759,37],[700,38,759,38],[701,6,760,4],[701,10,760,8],[701,11,760,9,"zoneEnemy"],[701,20,760,18],[701,22,760,20],[702,8,761,6,"console"],[702,15,761,13],[702,16,761,14,"log"],[702,19,761,17],[702,20,761,18],[702,76,761,74],[702,77,761,75],[703,8,762,6],[704,8,763,6,"spawnBasicTestEnemy"],[704,27,763,25],[704,28,763,26,"state"],[704,33,763,31],[704,34,763,32],[705,8,764,6],[706,6,765,4],[707,6,767,4,"console"],[707,13,767,11],[707,14,767,12,"log"],[707,17,767,15],[707,18,767,16],[707,44,767,42,"zoneEnemy"],[707,53,767,51],[707,54,767,52,"name"],[707,58,767,56],[707,63,767,61,"zoneEnemy"],[707,72,767,70],[707,73,767,71,"typeId"],[707,79,767,77],[707,94,767,92,"currentZone"],[707,105,767,103],[707,107,767,105,"id"],[707,109,767,107],[707,119,767,117,"currentZoneLevel"],[707,135,767,133],[707,137,767,135,"level"],[707,142,767,140],[707,144,767,142],[707,145,767,143],[709,6,769,4],[710,6,770,4],[710,10,770,10,"combatEnemy"],[710,21,770,34],[710,24,770,37],[711,8,771,6,"id"],[711,10,771,8],[711,12,771,10,"zoneEnemy"],[711,21,771,19],[711,22,771,20,"id"],[711,24,771,22],[712,8,772,6,"name"],[712,12,772,10],[712,14,772,12,"zoneEnemy"],[712,23,772,21],[712,24,772,22,"name"],[712,28,772,26],[713,8,773,6,"health"],[713,14,773,12],[713,16,773,14,"zoneEnemy"],[713,25,773,23],[713,26,773,24,"hp"],[713,28,773,26],[714,8,774,6,"maxHealth"],[714,17,774,15],[714,19,774,17,"zoneEnemy"],[714,28,774,26],[714,29,774,27,"maxHP"],[714,34,774,32],[715,8,775,6,"stats"],[715,13,775,11],[715,15,775,13],[716,10,776,8,"attack"],[716,16,776,14],[716,18,776,16,"zoneEnemy"],[716,27,776,25],[716,28,776,26,"attack"],[716,34,776,32],[717,10,777,8,"defense"],[717,17,777,15],[717,19,777,17],[717,21,777,19],[718,10,777,21],[719,10,778,8,"health"],[719,16,778,14],[719,18,778,16,"zoneEnemy"],[719,27,778,25],[719,28,778,26,"hp"],[719,30,778,28],[720,10,779,8,"maxHealth"],[720,19,779,17],[720,21,779,19,"zoneEnemy"],[720,30,779,28],[720,31,779,29,"maxHP"],[720,36,779,34],[721,10,780,8,"critChance"],[721,20,780,18],[721,22,780,20],[721,23,780,21],[722,10,781,8,"critDamage"],[722,20,781,18],[722,22,781,20],[722,25,781,23],[723,10,782,8,"cooldownReduction"],[723,27,782,25],[723,29,782,27],[724,8,783,6],[724,9,783,7],[725,8,784,6,"position"],[725,16,784,14],[725,18,784,16,"zoneEnemy"],[725,27,784,25],[725,28,784,26,"position"],[725,36,784,34],[726,8,785,6,"lastDamaged"],[726,19,785,17],[726,21,785,19],[726,22,785,20],[727,8,786,6],[728,8,787,6,"zoneTypeId"],[728,18,787,16],[728,20,787,18,"zoneEnemy"],[728,29,787,27],[728,30,787,28,"typeId"],[728,36,787,34],[729,8,788,6,"zoneXP"],[729,14,788,12],[729,16,788,14,"zoneEnemy"],[729,25,788,23],[729,26,788,24,"xp"],[730,6,789,4],[730,7,789,5],[731,6,791,4,"console"],[731,13,791,11],[731,14,791,12,"log"],[731,17,791,15],[731,18,791,16],[731,42,791,40,"combatEnemy"],[731,53,791,51],[731,54,791,52,"name"],[731,58,791,56],[731,67,791,65,"combatEnemy"],[731,78,791,76],[731,79,791,77,"health"],[731,85,791,83],[731,100,791,98,"currentZone"],[731,111,791,109],[731,113,791,111,"id"],[731,115,791,113],[731,125,791,123,"currentZoneLevel"],[731,141,791,139],[731,143,791,141,"level"],[731,148,791,146],[731,150,791,148],[731,151,791,149],[732,6,792,4,"state"],[732,11,792,9],[732,12,792,10,"enemies"],[732,19,792,17],[732,20,792,18,"push"],[732,24,792,22],[732,25,792,23,"combatEnemy"],[732,36,792,34],[732,37,792,35],[733,4,793,2],[733,5,793,3],[735,4,795,2],[736,4,796,2],[736,8,796,8,"spawnBasicTestEnemy"],[736,27,796,27],[736,30,796,31,"state"],[736,35,796,49],[736,39,796,54],[737,6,797,4],[737,10,797,10,"SCREEN_WIDTH"],[737,22,797,22],[737,25,797,25],[737,28,797,28],[738,6,798,4],[738,10,798,10,"GAME_AREA_HEIGHT"],[738,26,798,26],[738,29,798,29],[738,32,798,32],[738,35,798,35],[738,38,798,38],[739,6,799,4],[739,10,799,10,"ENEMY_SIZE"],[739,20,799,20],[739,23,799,23],[739,25,799,25],[740,6,801,4],[740,10,801,10,"x"],[740,11,801,11],[740,14,801,14,"Math"],[740,18,801,18],[740,19,801,19,"random"],[740,25,801,25],[740,26,801,26],[740,27,801,27],[740,31,801,31,"SCREEN_WIDTH"],[740,43,801,43],[740,46,801,46,"ENEMY_SIZE"],[740,56,801,56],[740,59,801,59],[740,60,801,60],[740,61,801,61],[740,64,801,64,"ENEMY_SIZE"],[740,74,801,74],[741,6,802,4],[741,10,802,10,"y"],[741,11,802,11],[741,14,802,14,"Math"],[741,18,802,18],[741,19,802,19,"random"],[741,25,802,25],[741,26,802,26],[741,27,802,27],[741,31,802,31,"GAME_AREA_HEIGHT"],[741,47,802,47],[741,50,802,50,"ENEMY_SIZE"],[741,60,802,60],[741,63,802,63],[741,64,802,64],[741,65,802,65],[741,68,802,68,"ENEMY_SIZE"],[741,78,802,78],[742,6,804,4],[742,10,804,10,"enemy"],[742,15,804,28],[742,18,804,31],[743,8,805,6,"id"],[743,10,805,8],[743,12,805,10],[743,30,805,28,"Date"],[743,34,805,32],[743,35,805,33,"now"],[743,38,805,36],[743,39,805,37],[743,40,805,38],[743,44,805,42,"Math"],[743,48,805,46],[743,49,805,47,"random"],[743,55,805,53],[743,56,805,54],[743,57,805,55],[743,59,805,57],[744,8,806,6,"name"],[744,12,806,10],[744,14,806,12],[744,26,806,24,"Math"],[744,30,806,28],[744,31,806,29,"floor"],[744,36,806,34],[744,37,806,35,"Math"],[744,41,806,39],[744,42,806,40,"random"],[744,48,806,46],[744,49,806,47],[744,50,806,48],[744,53,806,51],[744,56,806,54],[744,57,806,55],[744,59,806,57],[745,8,807,6,"health"],[745,14,807,12],[745,16,807,14],[745,18,807,16],[746,8,808,6,"maxHealth"],[746,17,808,15],[746,19,808,17],[746,21,808,19],[747,8,809,6,"stats"],[747,13,809,11],[747,15,809,13],[748,10,810,8,"attack"],[748,16,810,14],[748,18,810,16],[748,20,810,18],[749,10,811,8,"defense"],[749,17,811,15],[749,19,811,17],[749,21,811,19],[750,10,812,8,"health"],[750,16,812,14],[750,18,812,16],[750,20,812,18],[751,10,813,8,"maxHealth"],[751,19,813,17],[751,21,813,19],[751,23,813,21],[752,10,814,8,"critChance"],[752,20,814,18],[752,22,814,20],[752,23,814,21],[753,10,815,8,"critDamage"],[753,20,815,18],[753,22,815,20],[753,25,815,23],[754,10,816,8,"cooldownReduction"],[754,27,816,25],[754,29,816,27],[755,8,817,6],[755,9,817,7],[756,8,818,6,"position"],[756,16,818,14],[756,18,818,16],[757,10,818,18,"x"],[757,11,818,19],[758,10,818,21,"y"],[759,8,818,23],[759,9,818,24],[760,8,819,6,"lastDamaged"],[760,19,819,17],[760,21,819,19],[761,6,820,4],[761,7,820,5],[762,6,822,4,"console"],[762,13,822,11],[762,14,822,12,"log"],[762,17,822,15],[762,18,822,16],[762,42,822,40,"enemy"],[762,47,822,45],[762,48,822,46,"name"],[762,52,822,50],[762,60,822,58,"Math"],[762,64,822,62],[762,65,822,63,"round"],[762,70,822,68],[762,71,822,69,"x"],[762,72,822,70],[762,73,822,71],[762,78,822,76,"Math"],[762,82,822,80],[762,83,822,81,"round"],[762,88,822,86],[762,89,822,87,"y"],[762,90,822,88],[762,91,822,89],[762,94,822,92],[762,95,822,93],[763,6,823,4,"state"],[763,11,823,9],[763,12,823,10,"enemies"],[763,19,823,17],[763,20,823,18,"push"],[763,24,823,22],[763,25,823,23,"enemy"],[763,30,823,28],[763,31,823,29],[764,4,824,2],[764,5,824,3],[766,4,826,2],[767,4,827,2],[767,8,827,8,"startCombat"],[767,19,827,19],[767,22,827,22,"React"],[767,27,827,27],[767,28,827,27,"default"],[767,35,827,27],[767,36,827,28,"useCallback"],[767,47,827,39],[767,48,827,40],[767,54,827,46],[768,6,828,4,"console"],[768,13,828,11],[768,14,828,12,"log"],[768,17,828,15],[768,18,828,16],[768,63,828,61],[768,64,828,62],[769,6,829,4,"setCombatState"],[769,20,829,18],[769,21,829,19,"prev"],[769,25,829,23],[769,30,829,28],[770,8,829,30],[770,11,829,33,"prev"],[770,15,829,37],[771,8,829,39,"isInCombat"],[771,18,829,49],[771,20,829,51],[772,6,829,56],[772,7,829,57],[772,8,829,58],[772,9,829,59],[774,6,831,4],[775,6,832,4,"combatEngine"],[775,25,832,16],[775,26,832,16,"combatEngine"],[775,38,832,16],[775,39,832,17,"addTickCallback"],[775,54,832,32],[775,55,832,33,"handleCombatTick"],[775,71,832,49],[775,72,832,50],[776,6,833,4,"console"],[776,13,833,11],[776,14,833,12,"log"],[776,17,833,15],[776,18,833,16],[776,62,833,60],[776,63,833,61],[778,6,835,4],[779,6,836,4,"combatEngine"],[779,25,836,16],[779,26,836,16,"combatEngine"],[779,38,836,16],[779,39,836,17,"start"],[779,44,836,22],[779,45,836,23],[779,46,836,24],[780,4,837,2],[780,5,837,3],[780,7,837,5],[780,8,837,6,"combatEngine"],[780,27,837,18],[780,28,837,18,"combatEngine"],[780,40,837,18],[780,42,837,20,"handleCombatTick"],[780,58,837,36],[780,59,837,37],[780,60,837,38],[782,4,839,2],[783,4,840,2],[783,8,840,8,"stopCombat"],[783,18,840,18],[783,21,840,21,"React"],[783,26,840,26],[783,27,840,26,"default"],[783,34,840,26],[783,35,840,27,"useCallback"],[783,46,840,38],[783,47,840,39],[783,53,840,45],[784,6,841,4,"setCombatState"],[784,20,841,18],[784,21,841,19,"prev"],[784,25,841,23],[784,30,841,28],[785,8,841,30],[785,11,841,33,"prev"],[785,15,841,37],[786,8,841,39,"isInCombat"],[786,18,841,49],[786,20,841,51],[787,6,841,57],[787,7,841,58],[787,8,841,59],[787,9,841,60],[788,6,842,4,"combatEngine"],[788,25,842,16],[788,26,842,16,"combatEngine"],[788,38,842,16],[788,39,842,17,"removeTickCallback"],[788,57,842,35],[788,58,842,36,"handleCombatTick"],[788,74,842,52],[788,75,842,53],[789,4,843,2],[789,5,843,3],[789,7,843,5],[789,8,843,6,"combatEngine"],[789,27,843,18],[789,28,843,18,"combatEngine"],[789,40,843,18],[789,42,843,20,"handleCombatTick"],[789,58,843,36],[789,59,843,37],[789,60,843,38],[791,4,845,2],[792,4,846,2],[792,8,846,8,"equipAbility"],[792,20,846,20],[792,23,846,23,"equipAbility"],[792,24,846,24,"abilityId"],[792,33,846,41],[792,35,846,43,"slotIndex"],[792,44,846,60],[792,49,846,74],[793,6,847,4],[793,13,847,11,"combatState"],[793,24,847,22],[793,25,847,23,"abilityManager"],[793,39,847,37],[793,40,847,38,"equipAbility"],[793,52,847,50],[793,53,847,51,"abilityId"],[793,62,847,60],[793,64,847,62,"slotIndex"],[793,73,847,71],[793,74,847,72],[794,4,848,2],[794,5,848,3],[795,4,850,2],[795,8,850,8,"getDeck"],[795,15,850,15],[795,18,850,18,"getDeck"],[795,19,850,18],[795,24,850,24],[796,6,851,4],[796,13,851,11,"combatState"],[796,24,851,22],[796,25,851,23,"abilityManager"],[796,39,851,37],[796,40,851,38,"getDeck"],[796,47,851,45],[796,48,851,46],[796,49,851,47],[797,4,852,2],[797,5,852,3],[798,4,854,2],[798,8,854,8,"getAvailableAbilities"],[798,29,854,29],[798,32,854,32,"getAvailableAbilities"],[798,33,854,32],[798,38,854,38],[799,6,855,4],[799,13,855,11,"combatState"],[799,24,855,22],[799,25,855,23,"abilityManager"],[799,39,855,37],[799,40,855,38,"getAvailableAbilities"],[799,61,855,59],[799,62,855,60],[799,63,855,61],[800,4,856,2],[800,5,856,3],[801,4,858,2],[801,8,858,8,"upgradeAbility"],[801,22,858,22],[801,25,858,26,"abilityId"],[801,34,858,43],[801,38,858,57],[802,6,859,4],[802,13,859,11,"combatState"],[802,24,859,22],[802,25,859,23,"abilityManager"],[802,39,859,37],[802,40,859,38,"upgradeAbility"],[802,54,859,52],[802,55,859,53,"abilityId"],[802,64,859,62],[802,65,859,63],[803,4,860,2],[803,5,860,3],[805,4,862,2],[806,4,863,2],[806,8,863,8,"clearAllEnemies"],[806,23,863,23],[806,26,863,26,"clearAllEnemies"],[806,27,863,26],[806,32,863,32],[807,6,864,4,"console"],[807,13,864,11],[807,14,864,12,"log"],[807,17,864,15],[807,18,864,16],[807,67,864,65],[807,68,864,66],[808,6,865,4,"setCombatState"],[808,20,865,18],[808,21,865,19,"prev"],[808,25,865,23],[808,30,865,28],[809,8,866,6],[809,11,866,9,"prev"],[809,15,866,13],[810,8,867,6,"enemies"],[810,15,867,13],[810,17,867,15],[811,6,868,4],[811,7,868,5],[811,8,868,6],[811,9,868,7],[812,4,869,2],[812,5,869,3],[814,4,871,2],[815,4,872,2],[815,8,872,8,"triggerLevelUpExplosion"],[815,31,872,31],[815,34,872,34,"triggerLevelUpExplosion"],[815,35,872,34],[815,40,872,40],[816,6,873,4,"console"],[816,13,873,11],[816,14,873,12,"log"],[816,17,873,15],[816,18,873,16],[816,70,873,68],[816,71,873,69],[817,6,875,4],[817,10,875,10,"explosionTime"],[817,23,875,23],[817,26,875,26,"Date"],[817,30,875,30],[817,31,875,31,"now"],[817,34,875,34],[817,35,875,35],[817,36,875,36],[818,6,876,4,"setLastExplosionTime"],[818,26,876,24],[818,27,876,25,"explosionTime"],[818,40,876,38],[818,41,876,39],[819,6,878,4,"setCombatState"],[819,20,878,18],[819,21,878,19,"prev"],[819,25,878,23],[819,29,878,27],[820,8,879,6],[821,8,880,6],[821,12,880,12,"enemyCount"],[821,22,880,22],[821,25,880,25,"prev"],[821,29,880,29],[821,30,880,30,"enemies"],[821,37,880,37],[821,38,880,38,"length"],[821,44,880,44],[822,8,881,6],[822,12,881,12,"explosionXP"],[822,23,881,23],[822,26,881,26,"enemyCount"],[822,36,881,36],[822,39,881,39],[822,42,881,42],[822,43,881,43],[822,44,881,44],[823,8,882,6],[823,12,882,12,"explosionGold"],[823,25,882,25],[823,28,882,28,"enemyCount"],[823,38,882,38],[823,41,882,41],[823,44,882,44],[823,45,882,45],[823,46,882,46],[825,8,884,6,"console"],[825,15,884,13],[825,16,884,14,"log"],[825,19,884,17],[825,20,884,18],[825,44,884,42,"enemyCount"],[825,54,884,52],[825,76,884,74,"explosionXP"],[825,87,884,85],[825,98,884,96,"explosionGold"],[825,111,884,109],[825,118,884,116],[825,119,884,117],[827,8,886,6],[828,8,887,6],[828,12,887,10,"explosionXP"],[828,23,887,21],[828,26,887,24],[828,27,887,25],[828,29,887,27],[829,10,888,8,"setTimeout"],[829,20,888,18],[829,21,888,19],[829,27,888,25],[830,12,889,10,"game"],[830,16,889,14],[830,17,889,15,"updateNinja"],[830,28,889,26],[830,29,889,28,"ninja"],[830,34,889,33],[830,39,889,39],[831,14,890,12,"experience"],[831,24,890,22],[831,26,890,24,"ninja"],[831,31,890,29],[831,32,890,30,"experience"],[831,42,890,40],[831,45,890,43,"explosionXP"],[831,56,890,54],[832,14,891,12,"gold"],[832,18,891,16],[832,20,891,18,"ninja"],[832,25,891,23],[832,26,891,24,"gold"],[832,30,891,28],[832,33,891,31,"explosionGold"],[833,12,892,10],[833,13,892,11],[833,14,892,12],[833,15,892,13],[834,10,893,8],[834,11,893,9],[834,13,893,11],[834,14,893,12],[834,15,893,13],[834,16,893,14],[834,17,893,15],[835,8,894,6],[837,8,896,6],[838,8,897,6],[839,8,898,6],[839,12,898,12,"damagedEnemies"],[839,26,898,26],[839,29,898,29,"prev"],[839,33,898,33],[839,34,898,34,"enemies"],[839,41,898,41],[839,42,898,42,"map"],[839,45,898,45],[839,46,898,46,"enemy"],[839,51,898,51],[839,56,898,56],[840,10,899,8],[840,13,899,11,"enemy"],[840,18,899,16],[841,10,900,8,"health"],[841,16,900,14],[841,18,900,16],[841,19,900,17],[842,10,900,19],[843,10,901,8,"lastDamaged"],[843,21,901,19],[843,23,901,21,"combatEngine"],[843,42,901,33],[843,43,901,33,"combatEngine"],[843,55,901,33],[843,56,901,34,"getCurrentTick"],[843,70,901,48],[843,71,901,49],[844,8,902,6],[844,9,902,7],[844,10,902,8],[844,11,902,9],[845,8,904,6],[845,15,904,13],[846,10,905,8],[846,13,905,11,"prev"],[846,17,905,15],[847,10,906,8,"enemies"],[847,17,906,15],[847,19,906,17,"damagedEnemies"],[848,8,907,6],[848,9,907,7],[849,6,908,4],[849,7,908,5],[849,8,908,6],[850,4,909,2],[850,5,909,3],[852,4,911,2],[853,4,912,2],[853,8,912,8,"spawnEnemy"],[853,18,912,18],[853,21,912,22,"position"],[853,29,912,57],[853,33,912,75],[854,6,913,4],[854,10,913,10,"SCREEN_WIDTH"],[854,22,913,22],[854,25,913,25],[854,28,913,28],[855,6,914,4],[855,10,914,10,"GAME_AREA_HEIGHT"],[855,26,914,26],[855,29,914,29],[855,32,914,32],[855,35,914,35],[855,38,914,38],[855,39,914,39],[855,40,914,40],[856,6,915,4],[856,10,915,10,"ENEMY_SIZE"],[856,20,915,20],[856,23,915,23],[856,25,915,25],[858,6,917,4],[859,6,918,4],[859,10,918,10,"x"],[859,11,918,11],[859,14,918,14,"position"],[859,22,918,22],[859,24,918,24,"x"],[859,25,918,25],[859,29,918,29,"Math"],[859,33,918,33],[859,34,918,34,"random"],[859,40,918,40],[859,41,918,41],[859,42,918,42],[859,46,918,46,"SCREEN_WIDTH"],[859,58,918,58],[859,61,918,61,"ENEMY_SIZE"],[859,71,918,71],[859,74,918,74],[859,75,918,75],[859,76,918,76],[859,79,918,79,"ENEMY_SIZE"],[859,89,918,89],[860,6,919,4],[860,10,919,10,"y"],[860,11,919,11],[860,14,919,14,"position"],[860,22,919,22],[860,24,919,24,"y"],[860,25,919,25],[860,29,919,29,"Math"],[860,33,919,33],[860,34,919,34,"random"],[860,40,919,40],[860,41,919,41],[860,42,919,42],[860,46,919,46,"GAME_AREA_HEIGHT"],[860,62,919,62],[860,65,919,65,"ENEMY_SIZE"],[860,75,919,75],[860,78,919,78],[860,79,919,79],[860,80,919,80],[860,83,919,83,"ENEMY_SIZE"],[860,93,919,93],[861,6,921,4],[861,10,921,10,"enemy"],[861,15,921,28],[861,18,921,31],[862,8,922,6,"id"],[862,10,922,8],[862,12,922,10],[862,21,922,19],[862,23,922,21,"enemyCounter"],[862,35,922,33],[862,37,922,35],[863,8,923,6,"name"],[863,12,923,10],[863,14,923,12],[863,24,923,22],[864,8,924,6,"health"],[864,14,924,12],[864,16,924,14],[864,19,924,17],[865,8,925,6,"maxHealth"],[865,17,925,15],[865,19,925,17],[865,22,925,20],[866,8,926,6,"stats"],[866,13,926,11],[866,15,926,13],[867,10,927,8,"attack"],[867,16,927,14],[867,18,927,16],[867,20,927,18],[868,10,928,8,"defense"],[868,17,928,15],[868,19,928,17],[868,21,928,19],[869,10,929,8,"health"],[869,16,929,14],[869,18,929,16],[869,21,929,19],[870,10,930,8,"maxHealth"],[870,19,930,17],[870,21,930,19],[870,24,930,22],[871,10,931,8,"critChance"],[871,20,931,18],[871,22,931,20],[871,23,931,21],[872,10,932,8,"critDamage"],[872,20,932,18],[872,22,932,20],[872,25,932,23],[873,10,933,8,"cooldownReduction"],[873,27,933,25],[873,29,933,27],[874,8,934,6],[874,9,934,7],[875,8,935,6,"position"],[875,16,935,14],[875,18,935,16],[876,10,935,18,"x"],[876,11,935,19],[877,10,935,21,"y"],[878,8,935,23],[878,9,935,24],[879,8,936,6,"lastDamaged"],[879,19,936,17],[879,21,936,19],[880,6,937,4],[880,7,937,5],[881,6,939,4,"setCombatState"],[881,20,939,18],[881,21,939,19,"prev"],[881,25,939,23],[881,30,939,28],[882,8,940,6],[882,11,940,9,"prev"],[882,15,940,13],[883,8,941,6,"enemies"],[883,15,941,13],[883,17,941,15],[883,18,941,16],[883,21,941,19,"prev"],[883,25,941,23],[883,26,941,24,"enemies"],[883,33,941,31],[883,35,941,33,"enemy"],[883,40,941,38],[884,6,942,4],[884,7,942,5],[884,8,942,6],[884,9,942,7],[885,6,944,4],[885,13,944,11,"enemy"],[885,18,944,16],[886,4,945,2],[886,5,945,3],[888,4,947,2],[889,4,948,2],[889,8,948,8,"spawnBoss"],[889,17,948,17],[889,20,948,21,"bossEnemy"],[889,29,948,43],[889,33,948,48],[890,6,949,4,"console"],[890,13,949,11],[890,14,949,12,"log"],[890,17,949,15],[890,18,949,16],[890,39,949,37,"bossEnemy"],[890,48,949,46],[890,49,949,47,"name"],[890,53,949,51],[890,90,949,88],[890,91,949,89],[891,6,950,4,"setCombatState"],[891,20,950,18],[891,21,950,19,"prev"],[891,25,950,23],[891,30,950,28],[892,8,951,6],[892,11,951,9,"prev"],[892,15,951,13],[893,8,952,6,"enemies"],[893,15,952,13],[893,17,952,15],[893,18,952,16,"bossEnemy"],[893,27,952,25],[893,28,952,26],[893,29,952,27],[894,6,953,4],[894,7,953,5],[894,8,953,6],[894,9,953,7],[895,4,954,2],[895,5,954,3],[897,4,956,2],[898,4,957,2],[898,8,957,8,"clearSpecificEnemy"],[898,26,957,26],[898,29,957,30,"enemyId"],[898,36,957,45],[898,40,957,50],[899,6,958,4,"setCombatState"],[899,20,958,18],[899,21,958,19,"prev"],[899,25,958,23],[899,30,958,28],[900,8,959,6],[900,11,959,9,"prev"],[900,15,959,13],[901,8,960,6,"enemies"],[901,15,960,13],[901,17,960,15,"prev"],[901,21,960,19],[901,22,960,20,"enemies"],[901,29,960,27],[901,30,960,28,"filter"],[901,36,960,34],[901,37,960,35,"enemy"],[901,42,960,40],[901,46,960,44,"enemy"],[901,51,960,49],[901,52,960,50,"id"],[901,54,960,52],[901,59,960,57,"enemyId"],[901,66,960,64],[902,6,961,4],[902,7,961,5],[902,8,961,6],[902,9,961,7],[903,4,962,2],[903,5,962,3],[905,4,964,2],[906,4,965,2],[906,8,965,8,"useAbilityManually"],[906,26,965,26],[906,29,965,26,"_s3"],[906,32,965,26],[906,33,965,29],[906,37,965,29,"useCallback"],[906,43,965,40],[906,44,965,40,"useCallback"],[906,55,965,40],[906,57,965,40,"_s3"],[906,60,965,40],[906,61,965,42,"slotIndex"],[906,70,965,59],[906,74,965,73],[907,6,965,73,"_s3"],[907,9,965,73],[908,6,966,4,"console"],[908,13,966,11],[908,14,966,12,"log"],[908,17,966,15],[908,18,966,16],[908,53,966,51,"slotIndex"],[908,62,966,60],[908,64,966,62],[908,65,966,63],[910,6,968,4],[911,6,969,4],[911,10,969,10,"isReady"],[911,17,969,17],[911,20,969,20,"combatState"],[911,31,969,31],[911,32,969,32,"abilityManager"],[911,46,969,46],[911,47,969,47,"isAbilityReady"],[911,61,969,61],[911,62,969,62,"slotIndex"],[911,71,969,71],[911,72,969,72],[912,6,970,4],[912,10,970,8],[912,11,970,9,"isReady"],[912,18,970,16],[912,20,970,18],[913,8,971,6,"console"],[913,15,971,13],[913,16,971,14,"log"],[913,19,971,17],[913,20,971,18],[913,41,971,39,"slotIndex"],[913,50,971,48],[913,85,971,83],[913,86,971,84],[914,8,972,6],[914,15,972,13],[914,20,972,18],[915,6,973,4],[917,6,975,4],[918,6,976,4],[918,10,976,8,"combatState"],[918,21,976,19],[918,22,976,20,"enemies"],[918,29,976,27],[918,30,976,28,"length"],[918,36,976,34],[918,41,976,39],[918,42,976,40],[918,44,976,42],[919,8,977,6,"console"],[919,15,977,13],[919,16,977,14,"log"],[919,19,977,17],[919,20,977,18],[919,69,977,67],[919,70,977,68],[920,8,978,6],[920,15,978,13],[920,20,978,18],[921,6,979,4],[923,6,981,4],[924,6,982,4],[924,10,982,10,"currentTick"],[924,21,982,21],[924,24,982,24,"combatEngine"],[924,43,982,36],[924,44,982,36,"combatEngine"],[924,56,982,36],[924,57,982,37,"getCurrentTick"],[924,71,982,51],[924,72,982,52],[924,73,982,53],[925,6,983,4],[925,10,983,10,"success"],[925,17,983,17],[925,20,983,20,"combatState"],[925,31,983,31],[925,32,983,32,"abilityManager"],[925,46,983,46],[925,47,983,47,"useAbility"],[925,57,983,57],[925,58,983,58,"slotIndex"],[925,67,983,67],[925,69,983,69,"currentTick"],[925,80,983,80],[925,81,983,81],[926,6,985,4],[926,10,985,8,"success"],[926,17,985,15],[926,19,985,17],[927,8,986,6],[928,8,987,6,"setCombatState"],[928,22,987,20],[928,23,987,21,"prev"],[928,27,987,25],[928,31,987,29],[929,10,988,8],[929,14,988,14,"newState"],[929,22,988,22],[929,25,988,25],[930,12,988,27],[930,15,988,30,"prev"],[931,10,988,35],[931,11,988,36],[932,10,989,8,"castAbility"],[932,21,989,19],[932,22,989,20,"newState"],[932,30,989,28],[932,32,989,30,"slotIndex"],[932,41,989,39],[932,42,989,40],[933,10,990,8],[933,17,990,15,"newState"],[933,25,990,23],[934,8,991,6],[934,9,991,7],[934,10,991,8],[935,8,993,6,"console"],[935,15,993,13],[935,16,993,14,"log"],[935,19,993,17],[935,20,993,18],[935,65,993,63,"slotIndex"],[935,74,993,72],[935,76,993,74],[935,77,993,75],[936,8,994,6],[936,15,994,13],[936,19,994,17],[937,6,995,4],[937,7,995,5],[937,13,995,11],[938,8,996,6,"console"],[938,15,996,13],[938,16,996,14,"log"],[938,19,996,17],[938,20,996,18],[938,61,996,59,"slotIndex"],[938,70,996,68],[938,72,996,70],[938,73,996,71],[939,8,997,6],[939,15,997,13],[939,20,997,18],[940,6,998,4],[941,4,999,2],[941,5,999,3],[941,46,999,5],[941,47,999,6,"combatState"],[941,58,999,17],[941,59,999,18,"abilityManager"],[941,73,999,32],[941,75,999,34,"combatState"],[941,86,999,45],[941,87,999,46,"enemies"],[941,94,999,53],[941,95,999,54],[941,96,999,55],[942,4,1000,2],[942,8,1000,2,"useEffect"],[942,14,1000,11],[942,15,1000,11,"useEffect"],[942,24,1000,11],[942,26,1000,12],[942,32,1000,18],[943,6,1001,4,"combatEngine"],[943,25,1001,16],[943,26,1001,16,"combatEngine"],[943,38,1001,16],[943,39,1001,17,"start"],[943,44,1001,22],[943,45,1001,23],[943,46,1001,24],[945,6,1003,4],[946,6,1004,4],[947,6,1005,4,"console"],[947,13,1005,11],[947,14,1005,12,"log"],[947,17,1005,15],[947,18,1005,16],[947,97,1005,95],[947,98,1005,96],[948,6,1007,4],[948,13,1007,11],[948,19,1007,17],[949,8,1008,6,"combatEngine"],[949,27,1008,18],[949,28,1008,18,"combatEngine"],[949,40,1008,18],[949,41,1008,19,"stop"],[949,45,1008,23],[949,46,1008,24],[949,47,1008,25],[950,6,1009,4],[950,7,1009,5],[951,4,1010,2],[951,5,1010,3],[951,7,1010,5],[951,9,1010,7],[951,10,1010,8],[953,4,1012,2],[954,4,1013,2],[954,8,1013,2,"useEffect"],[954,14,1013,11],[954,15,1013,11,"useEffect"],[954,24,1013,11],[954,26,1013,12],[954,32,1013,18],[955,6,1014,4],[955,10,1014,10,"processProjectileImpacts"],[955,34,1014,34],[955,37,1014,37,"processProjectileImpacts"],[955,38,1014,37],[955,43,1014,43],[956,8,1015,6,"setProjectiles"],[956,22,1015,20],[956,23,1015,21,"currentProjectiles"],[956,41,1015,39],[956,45,1015,43],[957,10,1016,8],[957,17,1016,15,"currentProjectiles"],[957,35,1016,33],[957,36,1016,34,"map"],[957,39,1016,37],[957,40,1016,38,"projectile"],[957,50,1016,48],[957,54,1016,52],[958,12,1017,10],[958,16,1017,14],[958,17,1017,15,"projectile"],[958,27,1017,25],[958,29,1017,27],[958,36,1017,34],[958,40,1017,38],[960,12,1019,10],[961,12,1020,10],[961,16,1020,16,"currentTime"],[961,27,1020,27],[961,30,1020,30,"Date"],[961,34,1020,34],[961,35,1020,35,"now"],[961,38,1020,38],[961,39,1020,39],[961,40,1020,40],[962,12,1021,10],[962,16,1021,16,"startTime"],[962,25,1021,25],[962,28,1021,28,"projectile"],[962,38,1021,38],[962,39,1021,39,"startTime"],[962,48,1021,48],[962,52,1021,52,"currentTime"],[962,63,1021,63],[963,12,1022,10],[963,16,1022,16,"elapsedTime"],[963,27,1022,27],[963,30,1022,30,"currentTime"],[963,41,1022,41],[963,44,1022,44,"startTime"],[963,53,1022,53],[964,12,1023,10],[964,16,1023,16,"progress"],[964,24,1023,24],[964,27,1023,27,"Math"],[964,31,1023,31],[964,32,1023,32,"min"],[964,35,1023,35],[964,36,1023,36,"elapsedTime"],[964,47,1023,47],[964,51,1023,51,"projectile"],[964,61,1023,61],[964,62,1023,62,"duration"],[964,70,1023,70],[964,74,1023,74],[964,77,1023,77],[964,78,1023,78],[964,80,1023,80],[964,81,1023,81],[964,82,1023,82],[966,12,1025,10],[967,12,1026,10],[967,16,1026,14,"progress"],[967,24,1026,22],[967,28,1026,26],[967,29,1026,27],[967,33,1026,31],[967,34,1026,32,"projectile"],[967,44,1026,42],[967,45,1026,43,"hasHit"],[967,51,1026,49],[967,53,1026,51],[968,14,1027,12,"projectile"],[968,24,1027,22],[968,25,1027,23,"hasHit"],[968,31,1027,29],[968,34,1027,32],[968,38,1027,36],[969,14,1029,12,"console"],[969,21,1029,19],[969,22,1029,20,"log"],[969,25,1029,23],[969,26,1029,24],[969,51,1029,49,"projectile"],[969,61,1029,59],[969,62,1029,60,"abilityName"],[969,73,1029,71],[969,87,1029,85,"projectile"],[969,97,1029,95],[969,98,1029,96,"targetEnemyId"],[969,111,1029,109],[969,119,1029,117,"projectile"],[969,129,1029,127],[969,130,1029,128,"damage"],[969,136,1029,134],[969,145,1029,143],[969,146,1029,144],[971,14,1031,12],[972,14,1032,12,"setCombatState"],[972,28,1032,26],[972,29,1032,27,"prev"],[972,33,1032,31],[972,37,1032,35],[973,16,1033,14],[973,20,1033,20,"newState"],[973,28,1033,28],[973,31,1033,31],[974,18,1033,33],[974,21,1033,36,"prev"],[975,16,1033,41],[975,17,1033,42],[976,16,1034,14],[976,20,1034,20,"enemyIndex"],[976,30,1034,30],[976,33,1034,33,"newState"],[976,41,1034,41],[976,42,1034,42,"enemies"],[976,49,1034,49],[976,50,1034,50,"findIndex"],[976,59,1034,59],[976,60,1034,60,"e"],[976,61,1034,61],[976,65,1034,65,"e"],[976,66,1034,66],[976,67,1034,67,"id"],[976,69,1034,69],[976,74,1034,74,"projectile"],[976,84,1034,84],[976,85,1034,85,"targetEnemyId"],[976,98,1034,98],[976,99,1034,99],[977,16,1036,14],[977,20,1036,18,"enemyIndex"],[977,30,1036,28],[977,34,1036,32],[977,35,1036,33],[977,39,1036,37,"newState"],[977,47,1036,45],[977,48,1036,46,"enemies"],[977,55,1036,53],[977,56,1036,54,"enemyIndex"],[977,66,1036,64],[977,67,1036,65],[977,68,1036,66,"health"],[977,74,1036,72],[977,77,1036,75],[977,78,1036,76],[977,80,1036,78],[978,18,1037,16,"newState"],[978,26,1037,24],[978,27,1037,25,"enemies"],[978,34,1037,32],[978,37,1037,35],[978,38,1037,36],[978,41,1037,39,"newState"],[978,49,1037,47],[978,50,1037,48,"enemies"],[978,57,1037,55],[978,58,1037,56],[979,18,1038,16],[979,22,1038,22,"enemy"],[979,27,1038,27],[979,30,1038,30,"newState"],[979,38,1038,38],[979,39,1038,39,"enemies"],[979,46,1038,46],[979,47,1038,47,"enemyIndex"],[979,57,1038,57],[979,58,1038,58],[980,18,1039,16],[980,22,1039,22,"newHealth"],[980,31,1039,31],[980,34,1039,34,"Math"],[980,38,1039,38],[980,39,1039,39,"max"],[980,42,1039,42],[980,43,1039,43],[980,44,1039,44],[980,46,1039,46,"enemy"],[980,51,1039,51],[980,52,1039,52,"health"],[980,58,1039,58],[980,61,1039,61,"projectile"],[980,71,1039,71],[980,72,1039,72,"damage"],[980,78,1039,78],[980,79,1039,79],[981,18,1041,16,"newState"],[981,26,1041,24],[981,27,1041,25,"enemies"],[981,34,1041,32],[981,35,1041,33,"enemyIndex"],[981,45,1041,43],[981,46,1041,44],[981,49,1041,47],[982,20,1042,18],[982,23,1042,21,"enemy"],[982,28,1042,26],[983,20,1043,18,"health"],[983,26,1043,24],[983,28,1043,26,"newHealth"],[983,37,1043,35],[984,20,1044,18,"lastDamaged"],[984,31,1044,29],[984,33,1044,31,"combatEngine"],[984,52,1044,43],[984,53,1044,43,"combatEngine"],[984,65,1044,43],[984,66,1044,44,"getCurrentTick"],[984,80,1044,58],[984,81,1044,59],[985,18,1045,16],[985,19,1045,17],[986,18,1047,16,"console"],[986,25,1047,23],[986,26,1047,24,"log"],[986,29,1047,27],[986,30,1047,28],[986,52,1047,50,"enemy"],[986,57,1047,55],[986,58,1047,56,"name"],[986,62,1047,60],[986,74,1047,72,"newHealth"],[986,83,1047,81],[986,87,1047,85,"enemy"],[986,92,1047,90],[986,93,1047,91,"maxHealth"],[986,102,1047,100],[986,104,1047,102],[986,105,1047,103],[988,18,1049,16],[989,18,1050,16],[989,22,1050,20,"newHealth"],[989,31,1050,29],[989,35,1050,33],[989,36,1050,34],[989,40,1050,38,"enemy"],[989,45,1050,43],[989,46,1050,44,"health"],[989,52,1050,50],[989,55,1050,53],[989,56,1050,54],[989,58,1050,56],[990,20,1051,18,"console"],[990,27,1051,25],[990,28,1051,26,"log"],[990,31,1051,29],[990,32,1051,30],[990,55,1051,53,"enemy"],[990,60,1051,58],[990,61,1051,59,"name"],[990,65,1051,63],[990,79,1051,77,"projectile"],[990,89,1051,87],[990,90,1051,88,"abilityName"],[990,101,1051,99],[990,104,1051,102],[990,105,1051,103],[991,20,1052,18,"setTimeout"],[991,30,1052,28],[991,31,1052,29],[991,37,1052,35,"handleEnemyKill"],[991,52,1052,50],[991,53,1052,51,"enemy"],[991,58,1052,56],[991,59,1052,57],[991,61,1052,59],[991,62,1052,60],[991,63,1052,61],[992,18,1053,16],[993,16,1054,14],[994,16,1056,14],[994,23,1056,21,"newState"],[994,31,1056,29],[995,14,1057,12],[995,15,1057,13],[995,16,1057,14],[996,12,1058,10],[998,12,1060,10],[999,12,1061,10],[999,16,1061,14,"progress"],[999,24,1061,22],[999,28,1061,26],[999,31,1061,29],[999,33,1061,31],[1000,14,1062,12],[1000,21,1062,19],[1000,25,1062,23],[1001,12,1063,10],[1002,12,1065,10],[1002,19,1065,17,"projectile"],[1002,29,1065,27],[1003,10,1066,8],[1003,11,1066,9],[1003,12,1066,10],[1003,13,1066,11,"filter"],[1003,19,1066,17],[1003,20,1066,18,"Boolean"],[1003,27,1066,25],[1003,28,1066,26],[1004,8,1067,6],[1004,9,1067,7],[1004,10,1067,8],[1005,6,1068,4],[1005,7,1068,5],[1007,6,1070,4],[1008,6,1071,4],[1008,10,1071,10,"impactInterval"],[1008,24,1071,24],[1008,27,1071,27,"setInterval"],[1008,38,1071,38],[1008,39,1071,39,"processProjectileImpacts"],[1008,63,1071,63],[1008,65,1071,65],[1008,67,1071,67],[1008,68,1071,68],[1009,6,1072,4],[1009,13,1072,11],[1009,19,1072,17,"clearInterval"],[1009,32,1072,30],[1009,33,1072,31,"impactInterval"],[1009,47,1072,45],[1009,48,1072,46],[1010,4,1073,2],[1010,5,1073,3],[1010,7,1073,5],[1010,8,1073,6,"handleEnemyKill"],[1010,23,1073,21],[1010,24,1073,22],[1010,25,1073,23],[1012,4,1075,2],[1013,4,1076,2],[1013,8,1076,8,"saveAbilityData"],[1013,23,1076,23],[1013,26,1076,26],[1013,30,1076,26,"useCallback"],[1013,36,1076,37],[1013,37,1076,37,"useCallback"],[1013,48,1076,37],[1013,50,1076,38],[1013,56,1076,44],[1014,6,1077,4],[1014,10,1077,8,"combatState"],[1014,21,1077,19],[1014,22,1077,20,"abilityManager"],[1014,36,1077,34],[1014,38,1077,36],[1015,8,1078,6],[1015,12,1078,12,"abilityData"],[1015,23,1078,23],[1015,26,1078,26,"combatState"],[1015,37,1078,37],[1015,38,1078,38,"abilityManager"],[1015,52,1078,52],[1015,53,1078,53,"getSaveData"],[1015,64,1078,64],[1015,65,1078,65],[1015,66,1078,66],[1016,8,1079,6,"console"],[1016,15,1079,13],[1016,16,1079,14,"log"],[1016,19,1079,17],[1016,20,1079,18],[1016,70,1079,68],[1016,72,1079,70,"abilityData"],[1016,83,1079,81],[1016,84,1079,82],[1017,8,1080,6,"game"],[1017,12,1080,10],[1017,13,1080,11,"updateAbilityData"],[1017,30,1080,28],[1017,31,1080,29,"abilityData"],[1017,42,1080,40],[1017,43,1080,41],[1018,6,1081,4],[1019,4,1082,2],[1019,5,1082,3],[1019,7,1082,5],[1019,8,1082,6,"combatState"],[1019,19,1082,17],[1019,20,1082,18,"abilityManager"],[1019,34,1082,32],[1019,36,1082,34,"game"],[1019,40,1082,38],[1019,41,1082,39,"updateAbilityData"],[1019,58,1082,56],[1019,59,1082,57],[1019,60,1082,58],[1020,4,1084,2],[1020,8,1084,8,"contextValue"],[1020,20,1084,39],[1020,23,1084,42,"React"],[1020,28,1084,47],[1020,29,1084,47,"default"],[1020,36,1084,47],[1020,37,1084,48,"useMemo"],[1020,44,1084,55],[1020,45,1084,56],[1020,52,1084,63],[1021,6,1085,4,"combatState"],[1021,17,1085,15],[1022,6,1086,4,"projectiles"],[1022,17,1086,15],[1023,6,1087,4,"startCombat"],[1023,17,1087,15],[1024,6,1088,4,"stopCombat"],[1024,16,1088,14],[1025,6,1089,4,"equipAbility"],[1025,18,1089,16],[1026,6,1090,4,"handleEnemyKill"],[1026,21,1090,19],[1027,6,1091,4,"getDeck"],[1027,13,1091,11],[1028,6,1092,4,"getAvailableAbilities"],[1028,27,1092,25],[1029,6,1093,4,"upgradeAbility"],[1029,20,1093,18],[1030,6,1094,4,"spawnEnemy"],[1030,16,1094,14],[1031,6,1095,4,"spawnBoss"],[1031,15,1095,13],[1032,6,1096,4,"clearAllEnemies"],[1032,21,1096,19],[1033,6,1097,4,"clearSpecificEnemy"],[1033,24,1097,22],[1034,6,1098,4,"triggerLevelUpExplosion"],[1034,29,1098,27],[1035,6,1099,4,"findClosestEnemy"],[1035,22,1099,20],[1036,6,1100,4,"updateNinjaPosition"],[1036,25,1100,23],[1037,6,1101,4,"setManualControlActive"],[1037,28,1101,26],[1038,6,1102,4,"lastExplosionTime"],[1038,23,1102,21],[1039,6,1103,4,"useAbilityManually"],[1039,24,1103,22],[1040,6,1103,24],[1041,6,1104,4,"saveAbilityData"],[1041,21,1104,19],[1042,6,1104,21],[1043,6,1105,4,"shadowClone"],[1043,17,1105,15],[1043,19,1105,17,"combatState"],[1043,30,1105,28],[1043,31,1105,29,"shadowClone"],[1043,42,1105,40],[1043,43,1105,42],[1044,4,1106,2],[1044,5,1106,3],[1044,6,1106,4],[1044,8,1106,6],[1045,4,1107,4],[1046,4,1108,4],[1047,4,1109,4,"combatState"],[1047,15,1109,15],[1047,17,1110,4,"projectiles"],[1047,28,1110,15],[1047,30,1111,4,"lastExplosionTime"],[1047,47,1111,21],[1048,4,1112,4],[1049,4,1113,4,"combatState"],[1049,15,1113,15],[1049,16,1113,16,"abilityManager"],[1049,30,1113,30],[1049,32,1114,4,"combatState"],[1049,43,1114,15],[1049,44,1114,16,"enemies"],[1049,51,1114,23],[1049,53,1115,4,"combatState"],[1049,64,1115,15],[1049,65,1115,16,"shadowClone"],[1049,76,1115,27],[1050,4,1115,29],[1051,4,1116,4,"useAbilityManually"],[1051,22,1116,22],[1052,4,1116,24],[1053,4,1117,4,"saveAbilityData"],[1053,19,1117,19],[1053,20,1117,21],[1054,4,1117,21],[1054,5,1118,3],[1054,6,1118,4],[1055,4,1120,2],[1055,24,1121,4],[1055,28,1121,4,"_reactJsxDevRuntime"],[1055,47,1121,4],[1055,48,1121,4,"jsxDEV"],[1055,54,1121,4],[1055,56,1121,5,"CombatContext"],[1055,69,1121,18],[1055,70,1121,19,"Provider"],[1055,78,1121,27],[1056,6,1121,28,"value"],[1056,11,1121,33],[1056,13,1121,35,"contextValue"],[1056,25,1121,48],[1057,6,1121,48,"children"],[1057,14,1121,48],[1057,16,1122,7,"children"],[1058,4,1122,15],[1059,6,1122,15,"fileName"],[1059,14,1122,15],[1059,16,1122,15,"_jsxFileName"],[1059,28,1122,15],[1060,6,1122,15,"lineNumber"],[1060,16,1122,15],[1061,6,1122,15,"columnNumber"],[1061,18,1122,15],[1062,4,1122,15],[1062,11,1123,28],[1062,12,1123,29],[1063,2,1125,0],[1063,3,1125,1],[1064,2,1125,2,"_s4"],[1064,5,1125,2],[1064,6,100,13,"CombatProvider"],[1064,20,100,27],[1065,4,100,27],[1065,12,101,15,"useGame"],[1065,24,101,22],[1065,25,101,22,"useGame"],[1065,32,101,22],[1065,34,102,77,"useZone"],[1065,46,102,84],[1065,47,102,84,"useZone"],[1065,54,102,84],[1066,2,102,84],[1067,2,102,84,"_c"],[1067,4,102,84],[1067,7,100,13,"CombatProvider"],[1067,21,100,27],[1068,2,100,27],[1068,6,100,27,"_c"],[1068,8,100,27],[1069,2,100,27,"$RefreshReg$"],[1069,14,100,27],[1069,15,100,27,"_c"],[1069,17,100,27],[1070,0,100,27],[1070,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;6BNyD;mBMG;ORgC;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}