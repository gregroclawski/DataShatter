{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(() => {\n        // Initialize with saved ability data from game context\n        var initialState = {\n          ...initialCombatState\n        };\n\n        // If we have saved ability data, restore it\n        if (game.gameState.abilityData) {\n          console.log('🔄 RESTORING ABILITY DATA FROM SAVE:', game.gameState.abilityData);\n          initialState.abilityManager = new _typesAbilityTypes.AbilityManager();\n          initialState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n        }\n        return initialState;\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Save ability data to game context when abilities are modified (not on every render)\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n\n        // Update game state with ability data\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n\n    // Only save ability data when explicitly called, not automatically\n    // This prevents infinite loops while still allowing saves when needed\n\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"xX9wI3d4xMJtMPkLsbZYWE0yL7c=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":730,"map":[[15,2,75,0,"Object"],[15,8,75,0],[15,9,75,0,"defineProperty"],[15,23,75,0],[15,24,75,0,"exports"],[15,31,75,0],[16,4,75,0,"enumerable"],[16,14,75,0],[17,4,75,0,"get"],[17,7,75,0],[17,18,75,0,"get"],[17,19,75,0],[18,6,75,0],[18,13,75,0,"useCombat"],[18,22,75,0],[19,4,75,0],[20,2,75,0],[21,2,85,0,"Object"],[21,8,85,0],[21,9,85,0,"defineProperty"],[21,23,85,0],[21,24,85,0,"exports"],[21,31,85,0],[22,4,85,0,"enumerable"],[22,14,85,0],[23,4,85,0,"get"],[23,7,85,0],[23,18,85,0,"get"],[23,19,85,0],[24,6,85,0],[24,13,85,0,"CombatProvider"],[24,27,85,0],[25,4,85,0],[26,2,85,0],[27,2,740,2],[27,6,740,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,740,2],[27,42,740,2,"require"],[27,49,740,2],[27,50,740,2,"_dependencyMap"],[27,64,740,2],[28,2,740,2],[28,6,740,2,"_slicedToArray"],[28,20,740,2],[28,23,740,2,"_interopDefault"],[28,38,740,2],[28,39,740,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,740,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,73,0],[37,6,73,6,"CombatContext"],[37,19,73,19],[37,35,73,22],[37,39,73,22,"createContext"],[37,45,73,35],[37,46,73,35,"createContext"],[37,59,73,35],[37,61,73,67,"undefined"],[37,70,73,76],[37,71,73,77],[38,2,75,7],[38,6,75,13,"useCombat"],[38,15,75,22],[38,18,75,25,"useCombat"],[38,19,75,25],[38,24,75,50],[39,4,75,50,"_s"],[39,6,75,50],[40,4,76,2],[40,8,76,8,"context"],[40,15,76,15],[40,18,76,18],[40,22,76,18,"useContext"],[40,28,76,28],[40,29,76,28,"useContext"],[40,39,76,28],[40,41,76,29,"CombatContext"],[40,54,76,42],[40,55,76,43],[41,4,77,2],[41,8,77,6],[41,9,77,7,"context"],[41,16,77,14],[41,18,77,16],[42,6,78,4],[42,12,78,10],[42,16,78,14,"Error"],[42,21,78,19],[42,22,78,20],[42,70,78,68],[42,71,78,69],[43,4,79,2],[44,4,80,2],[44,11,80,9,"context"],[44,18,80,16],[45,2,81,0],[45,3,81,1],[46,2,81,2,"_s"],[46,4,81,2],[46,5,75,13,"useCombat"],[46,14,75,22],[47,2,83,0],[47,6,83,4,"enemyCounter"],[47,18,83,16],[47,21,83,19],[47,22,83,20],[47,23,83,21],[47,24,83,22],[49,2,85,7],[49,6,85,13,"CombatProvider"],[49,20,85,27],[49,23,85,30,"_ref"],[49,27,85,30],[49,31,85,73],[50,4,85,73,"_s4"],[50,7,85,73],[51,4,85,73],[51,8,85,73,"_s3"],[51,11,85,73],[51,14,85,73,"$RefreshSig$"],[51,26,85,73],[52,4,85,73],[52,8,85,33,"children"],[52,16,85,41],[52,19,85,41,"_ref"],[52,23,85,41],[52,24,85,33,"children"],[52,32,85,41],[53,4,86,2],[53,8,86,8,"game"],[53,12,86,12],[53,15,86,15],[53,19,86,15,"useGame"],[53,31,86,22],[53,32,86,22,"useGame"],[53,39,86,22],[53,41,86,23],[53,42,86,24],[54,4,87,2],[54,8,87,2,"_useZone"],[54,16,87,2],[54,19,87,61],[54,23,87,61,"useZone"],[54,35,87,68],[54,36,87,68,"useZone"],[54,43,87,68],[54,45,87,69],[54,46,87,70],[55,6,87,10,"currentZone"],[55,17,87,21],[55,20,87,21,"_useZone"],[55,28,87,21],[55,29,87,10,"currentZone"],[55,40,87,21],[56,6,87,23,"currentZoneLevel"],[56,22,87,39],[56,25,87,39,"_useZone"],[56,33,87,39],[56,34,87,23,"currentZoneLevel"],[56,50,87,39],[57,6,87,41,"recordEnemyKill"],[57,21,87,56],[57,24,87,56,"_useZone"],[57,32,87,56],[57,33,87,41,"recordEnemyKill"],[57,48,87,56],[59,4,89,2],[60,4,90,2],[60,8,90,8,"initialCombatState"],[60,26,90,39],[60,29,90,42],[61,6,91,4,"isInCombat"],[61,16,91,14],[61,18,91,16],[61,23,91,21],[62,6,92,4,"currentTick"],[62,17,92,15],[62,19,92,17],[62,20,92,18],[63,6,93,4,"enemies"],[63,13,93,11],[63,15,93,13],[63,17,93,15],[64,6,94,4,"abilityManager"],[64,20,94,18],[64,22,94,20],[64,26,94,24,"AbilityManager"],[64,44,94,38],[64,45,94,38,"AbilityManager"],[64,59,94,38],[64,60,94,39],[64,61,94,40],[65,6,95,4,"statusEffects"],[65,19,95,17],[65,21,95,19],[65,25,95,23,"StatusEffectManager"],[65,44,95,42],[65,45,95,42,"StatusEffectManager"],[65,64,95,42],[65,65,95,43],[65,66,95,44],[66,6,96,4,"playerStats"],[66,17,96,15],[66,19,96,17],[67,8,97,6,"attack"],[67,14,97,12],[67,16,97,14],[67,18,97,16],[68,8,97,18],[69,8,98,6,"defense"],[69,15,98,13],[69,17,98,15],[69,18,98,16],[70,8,99,6,"health"],[70,14,99,12],[70,16,99,14],[70,19,99,17],[71,8,100,6,"maxHealth"],[71,17,100,15],[71,19,100,17],[71,22,100,20],[72,8,101,6,"critChance"],[72,18,101,16],[72,20,101,18],[72,21,101,19],[73,8,102,6,"critDamage"],[73,18,102,16],[73,20,102,18],[73,23,102,21],[74,8,103,6,"cooldownReduction"],[74,25,103,23],[74,27,103,25],[75,6,104,4],[76,4,105,2],[76,5,105,3],[77,4,107,2],[77,8,107,2,"_useState"],[77,17,107,2],[77,20,107,40],[77,24,107,40,"useState"],[77,30,107,48],[77,31,107,48,"useState"],[77,39,107,48],[77,41,107,62],[77,47,107,68],[78,8,108,4],[79,8,109,4],[79,12,109,10,"initialState"],[79,24,109,22],[79,27,109,25],[80,10,109,27],[80,13,109,30,"initialCombatState"],[81,8,109,49],[81,9,109,50],[83,8,111,4],[84,8,112,4],[84,12,112,8,"game"],[84,16,112,12],[84,17,112,13,"gameState"],[84,26,112,22],[84,27,112,23,"abilityData"],[84,38,112,34],[84,40,112,36],[85,10,113,6,"console"],[85,17,113,13],[85,18,113,14,"log"],[85,21,113,17],[85,22,113,18],[85,60,113,56],[85,62,113,58,"game"],[85,66,113,62],[85,67,113,63,"gameState"],[85,76,113,72],[85,77,113,73,"abilityData"],[85,88,113,84],[85,89,113,85],[86,10,114,6,"initialState"],[86,22,114,18],[86,23,114,19,"abilityManager"],[86,37,114,33],[86,40,114,36],[86,44,114,40,"AbilityManager"],[86,62,114,54],[86,63,114,54,"AbilityManager"],[86,77,114,54],[86,78,114,55],[86,79,114,56],[87,10,115,6,"initialState"],[87,22,115,18],[87,23,115,19,"abilityManager"],[87,37,115,33],[87,38,115,34,"restoreFromSaveData"],[87,57,115,53],[87,58,115,54,"game"],[87,62,115,58],[87,63,115,59,"gameState"],[87,72,115,68],[87,73,115,69,"abilityData"],[87,84,115,80],[87,85,115,81],[88,8,116,4],[89,8,118,4],[89,15,118,11,"initialState"],[89,27,118,23],[90,6,119,2],[90,7,119,3],[90,8,119,4],[91,6,119,4,"_useState2"],[91,16,119,4],[91,23,119,4,"_slicedToArray"],[91,37,119,4],[91,38,119,4,"default"],[91,45,119,4],[91,47,119,4,"_useState"],[91,56,119,4],[92,6,107,9,"combatState"],[92,17,107,20],[92,20,107,20,"_useState2"],[92,30,107,20],[93,6,107,22,"setCombatState"],[93,20,107,36],[93,23,107,36,"_useState2"],[93,33,107,36],[94,4,121,2],[94,8,121,2,"_useState3"],[94,18,121,2],[94,21,121,40],[94,25,121,40,"useState"],[94,31,121,48],[94,32,121,48,"useState"],[94,40,121,48],[94,42,121,69],[94,44,121,71],[94,45,121,72],[95,6,121,72,"_useState4"],[95,16,121,72],[95,23,121,72,"_slicedToArray"],[95,37,121,72],[95,38,121,72,"default"],[95,45,121,72],[95,47,121,72,"_useState3"],[95,57,121,72],[96,6,121,9,"projectiles"],[96,17,121,20],[96,20,121,20,"_useState4"],[96,30,121,20],[97,6,121,22,"setProjectiles"],[97,20,121,36],[97,23,121,36,"_useState4"],[97,33,121,36],[98,4,122,2],[98,8,122,2,"_useState5"],[98,18,122,2],[98,21,122,52],[98,25,122,52,"useState"],[98,31,122,60],[98,32,122,60,"useState"],[98,40,122,60],[98,42,122,69],[98,43,122,70],[98,44,122,71],[99,6,122,71,"_useState6"],[99,16,122,71],[99,23,122,71,"_slicedToArray"],[99,37,122,71],[99,38,122,71,"default"],[99,45,122,71],[99,47,122,71,"_useState5"],[99,57,122,71],[100,6,122,9,"lastExplosionTime"],[100,23,122,26],[100,26,122,26,"_useState6"],[100,36,122,26],[101,6,122,28,"setLastExplosionTime"],[101,26,122,48],[101,29,122,48,"_useState6"],[101,39,122,48],[102,4,123,2],[103,4,124,2],[105,4,126,2],[106,4,127,2],[106,8,127,8,"handleEnemyKill"],[106,23,127,23],[106,26,127,26],[106,30,127,26,"useCallback"],[106,36,127,37],[106,37,127,37,"useCallback"],[106,48,127,37],[106,50,127,39,"enemy"],[106,55,127,57],[106,59,127,62],[107,6,128,4,"console"],[107,13,128,11],[107,14,128,12,"log"],[107,17,128,15],[107,18,128,16],[107,73,128,71],[107,75,128,73,"enemy"],[107,80,128,78],[107,81,128,79,"id"],[107,83,128,81],[107,84,128,82],[109,6,130,4],[110,6,131,4],[110,10,131,10,"xpReward"],[110,18,131,18],[110,21,131,21],[110,23,131,23],[110,24,131,24],[110,25,131,25],[111,6,132,4],[111,10,132,10,"goldReward"],[111,20,132,20],[111,23,132,23],[111,25,132,25],[112,6,134,4,"console"],[112,13,134,11],[112,14,134,12,"log"],[112,17,134,15],[112,18,134,16],[112,48,134,46,"xpReward"],[112,56,134,54],[112,67,134,65,"goldReward"],[112,77,134,75],[112,93,134,91],[112,94,134,92],[113,6,135,4,"console"],[113,13,135,11],[113,14,135,12,"log"],[113,17,135,15],[113,18,135,16],[113,49,135,47,"Platform"],[113,61,135,55],[113,62,135,55,"Platform"],[113,70,135,55],[113,71,135,56,"OS"],[113,73,135,58],[113,84,135,69,"Date"],[113,88,135,73],[113,89,135,74,"now"],[113,92,135,77],[113,93,135,78],[113,94,135,79],[113,96,135,81],[113,97,135,82],[115,6,137,4],[116,6,138,4],[117,6,139,4,"setTimeout"],[117,16,139,14],[117,17,139,15],[117,23,139,21],[118,8,140,6,"console"],[118,15,140,13],[118,16,140,14,"log"],[118,19,140,17],[118,20,140,18],[118,78,140,76],[118,79,140,77],[120,8,142,6],[121,8,143,6,"game"],[121,12,143,10],[121,13,143,11,"updateNinja"],[121,24,143,22],[121,25,143,24,"prev"],[121,29,143,28],[121,33,143,33],[122,10,144,8,"console"],[122,17,144,15],[122,18,144,16,"log"],[122,21,144,19],[122,22,144,20],[122,54,144,52,"prev"],[122,58,144,56],[122,59,144,57,"experience"],[122,69,144,67],[122,81,144,79,"prev"],[122,85,144,83],[122,86,144,84,"experience"],[122,96,144,94],[122,99,144,97,"xpReward"],[122,107,144,105],[122,109,144,107],[122,110,144,108],[123,10,145,8,"console"],[123,17,145,15],[123,18,145,16,"log"],[123,21,145,19],[123,22,145,20],[123,56,145,54,"prev"],[123,60,145,58],[123,61,145,59,"gold"],[123,65,145,63],[123,77,145,75,"prev"],[123,81,145,79],[123,82,145,80,"gold"],[123,86,145,84],[123,89,145,87,"goldReward"],[123,99,145,97],[123,101,145,99],[123,102,145,100],[124,10,146,8],[124,17,146,15],[125,12,147,10,"experience"],[125,22,147,20],[125,24,147,22,"prev"],[125,28,147,26],[125,29,147,27,"experience"],[125,39,147,37],[125,42,147,40,"xpReward"],[125,50,147,48],[126,12,148,10,"gold"],[126,16,148,14],[126,18,148,16,"prev"],[126,22,148,20],[126,23,148,21,"gold"],[126,27,148,25],[126,30,148,28,"goldReward"],[127,10,149,8],[127,11,149,9],[128,8,150,6],[128,9,150,7],[128,10,150,8],[130,8,152,6],[131,8,153,6],[131,12,153,12,"zoneEnemy"],[131,21,153,21],[131,24,153,24],[132,10,154,8,"id"],[132,12,154,10],[132,14,154,12,"enemy"],[132,19,154,17],[132,20,154,18,"id"],[132,22,154,20],[133,10,155,8,"typeId"],[133,16,155,14],[133,18,155,16],[133,28,155,26],[134,10,155,28],[135,10,156,8,"name"],[135,14,156,12],[135,16,156,14,"enemy"],[135,21,156,19],[135,22,156,20,"name"],[135,26,156,24],[136,10,157,8,"icon"],[136,14,157,12],[136,16,157,14],[136,20,157,18],[137,10,157,20],[138,10,158,8,"hp"],[138,12,158,10],[138,14,158,12],[138,15,158,13],[139,10,158,15],[140,10,159,8,"maxHP"],[140,15,159,13],[140,17,159,15,"enemy"],[140,22,159,20],[140,23,159,21,"maxHealth"],[140,32,159,30],[141,10,160,8,"attack"],[141,16,160,14],[141,18,160,16,"enemy"],[141,23,160,21],[141,24,160,22,"stats"],[141,29,160,27],[141,30,160,28,"attack"],[141,36,160,34],[142,10,161,8,"xp"],[142,12,161,10],[142,14,161,12],[142,16,161,14],[143,10,161,16],[144,10,162,8,"position"],[144,18,162,16],[144,20,162,18,"enemy"],[144,25,162,23],[144,26,162,24,"position"],[145,8,163,6],[145,9,163,7],[146,8,164,6,"recordEnemyKill"],[146,23,164,21],[146,24,164,22,"zoneEnemy"],[146,33,164,31],[146,34,164,32],[147,6,165,4],[147,7,165,5],[147,9,165,7],[147,10,165,8],[147,11,165,9],[147,12,165,10],[147,13,165,11],[148,4,166,2],[148,5,166,3],[148,7,166,5],[148,8,166,6,"game"],[148,12,166,10],[148,13,166,11,"updateNinja"],[148,24,166,22],[148,26,166,24,"recordEnemyKill"],[148,41,166,39],[148,42,166,40],[148,43,166,41],[150,4,168,2],[151,4,169,2],[151,8,169,8,"handleCombatTick"],[151,24,169,24],[151,27,169,27,"React"],[151,32,169,32],[151,33,169,32,"default"],[151,40,169,32],[151,41,169,33,"useCallback"],[151,52,169,44],[151,53,169,45],[151,59,169,51],[152,6,169,51],[152,10,169,51,"_s2"],[152,13,169,51],[152,16,169,51,"$RefreshSig$"],[152,28,169,51],[153,6,170,4,"console"],[153,13,170,11],[153,14,170,12,"log"],[153,17,170,15],[153,18,170,16],[153,87,170,85],[153,88,170,86],[154,6,172,4],[154,10,172,8,"enemiesToKill"],[154,23,172,36],[154,26,172,39],[154,28,172,41],[154,29,172,42],[154,30,172,43],[156,6,174,4,"_s2"],[156,9,174,4],[156,10,174,4,"setCombatState"],[156,24,174,18],[156,25,174,18,"_s2"],[156,28,174,18],[156,29,174,19,"prev"],[156,33,174,23],[156,37,174,27],[157,8,174,27,"_s2"],[157,11,174,27],[158,8,175,6],[158,12,175,12,"newTick"],[158,19,175,19],[158,22,175,22,"combatEngine"],[158,41,175,34],[158,42,175,34,"combatEngine"],[158,54,175,34],[158,55,175,35,"getCurrentTick"],[158,69,175,49],[158,70,175,50],[158,71,175,51],[159,8,176,6],[159,12,176,12,"newState"],[159,20,176,20],[159,23,176,23],[160,10,176,25],[160,13,176,28,"prev"],[160,17,176,32],[161,10,176,34,"currentTick"],[161,21,176,45],[161,23,176,47,"newTick"],[162,8,176,55],[162,9,176,56],[163,8,178,6],[163,12,178,10],[163,13,178,11,"newState"],[163,21,178,19],[163,22,178,20,"isInCombat"],[163,32,178,30],[163,34,178,32],[163,41,178,39,"newState"],[163,49,178,47],[165,8,180,6],[166,8,181,6,"newState"],[166,16,181,14],[166,17,181,15,"abilityManager"],[166,31,181,29],[166,32,181,30,"updateCooldowns"],[166,47,181,45],[166,48,181,46,"newTick"],[166,55,181,53],[166,56,181,54],[168,8,183,6],[169,8,184,6],[169,12,184,12,"effectResults"],[169,25,184,25],[169,28,184,28,"newState"],[169,36,184,36],[169,37,184,37,"statusEffects"],[169,50,184,50],[169,51,184,51,"processTick"],[169,62,184,62],[169,63,184,63,"newTick"],[169,70,184,70],[169,71,184,71],[171,8,186,6],[172,8,187,6,"effectResults"],[172,21,187,19],[172,22,187,20,"forEach"],[172,29,187,27],[172,30,187,28],[172,31,187,29,"results"],[172,38,187,36],[172,40,187,38,"entityId"],[172,48,187,46],[172,53,187,51],[173,10,188,8],[173,14,188,14,"enemyIndex"],[173,24,188,24],[173,27,188,27,"newState"],[173,35,188,35],[173,36,188,36,"enemies"],[173,43,188,43],[173,44,188,44,"findIndex"],[173,53,188,53],[173,54,188,54,"e"],[173,55,188,55],[173,59,188,59,"e"],[173,60,188,60],[173,61,188,61,"id"],[173,63,188,63],[173,68,188,68,"entityId"],[173,76,188,76],[173,77,188,77],[174,10,189,8],[174,14,189,12,"enemyIndex"],[174,24,189,22],[174,28,189,26],[174,29,189,27],[174,31,189,29],[175,12,190,10,"results"],[175,19,190,17],[175,20,190,18,"forEach"],[175,27,190,25],[175,28,190,26,"result"],[175,34,190,32],[175,38,190,36],[176,14,191,12,"newState"],[176,22,191,20],[176,23,191,21,"enemies"],[176,30,191,28],[176,31,191,29,"enemyIndex"],[176,41,191,39],[176,42,191,40],[176,43,191,41,"health"],[176,49,191,47],[176,53,191,51,"result"],[176,59,191,57],[176,60,191,58,"damage"],[176,66,191,64],[177,14,192,12,"newState"],[177,22,192,20],[177,23,192,21,"enemies"],[177,30,192,28],[177,31,192,29,"enemyIndex"],[177,41,192,39],[177,42,192,40],[177,43,192,41,"lastDamaged"],[177,54,192,52],[177,57,192,55,"newTick"],[177,64,192,62],[178,12,193,10],[178,13,193,11],[178,14,193,12],[179,10,194,8],[180,8,195,6],[180,9,195,7],[180,10,195,8],[182,8,197,6],[183,8,198,6,"newState"],[183,16,198,14],[183,17,198,15,"enemies"],[183,24,198,22],[183,25,198,23,"forEach"],[183,32,198,30],[183,33,198,31,"enemy"],[183,38,198,36],[183,42,198,40],[184,10,199,8],[184,14,199,12],[184,15,199,13,"enemy"],[184,20,199,18],[184,21,199,19,"isBoss"],[184,27,199,25],[184,29,199,27],[185,12,199,29],[186,12,200,10],[187,12,201,10],[187,16,201,16,"MOVEMENT_SPEED"],[187,30,201,30],[187,33,201,33],[187,37,201,37],[187,38,201,38],[187,39,201,39],[188,12,202,10],[188,16,202,16,"SCREEN_WIDTH"],[188,28,202,28],[188,31,202,31],[188,34,202,34],[189,12,203,10],[189,16,203,16,"GAME_AREA_HEIGHT"],[189,32,203,32],[189,35,203,35],[189,38,203,38],[189,39,203,39],[189,40,203,40],[190,12,204,10],[190,16,204,16,"ENEMY_SIZE"],[190,26,204,26],[190,29,204,29],[190,31,204,31],[192,12,206,10],[193,12,207,10],[193,16,207,16,"playerX"],[193,23,207,23],[193,26,207,26,"currentNinjaPosition"],[193,46,207,46],[193,47,207,47,"x"],[193,48,207,48],[194,12,208,10],[194,16,208,16,"playerY"],[194,23,208,23],[194,26,208,26,"currentNinjaPosition"],[194,46,208,46],[194,47,208,47,"y"],[194,48,208,48],[196,12,210,10],[197,12,211,10],[197,16,211,16,"deltaX"],[197,22,211,22],[197,25,211,25,"playerX"],[197,32,211,32],[197,35,211,35,"enemy"],[197,40,211,40],[197,41,211,41,"position"],[197,49,211,49],[197,50,211,50,"x"],[197,51,211,51],[198,12,212,10],[198,16,212,16,"deltaY"],[198,22,212,22],[198,25,212,25,"playerY"],[198,32,212,32],[198,35,212,35,"enemy"],[198,40,212,40],[198,41,212,41,"position"],[198,49,212,49],[198,50,212,50,"y"],[198,51,212,51],[199,12,213,10],[199,16,213,16,"distance"],[199,24,213,24],[199,27,213,27,"Math"],[199,31,213,31],[199,32,213,32,"sqrt"],[199,36,213,36],[199,37,213,37,"deltaX"],[199,43,213,43],[199,46,213,46,"deltaX"],[199,52,213,52],[199,55,213,55,"deltaY"],[199,61,213,61],[199,64,213,64,"deltaY"],[199,70,213,70],[199,71,213,71],[201,12,215,10],[202,12,216,10],[202,16,216,14,"distance"],[202,24,216,22],[202,27,216,25],[202,29,216,27],[202,31,216,29],[203,14,217,12],[204,14,218,12],[204,18,218,18,"normalizedX"],[204,29,218,29],[204,32,218,32,"deltaX"],[204,38,218,38],[204,41,218,41,"distance"],[204,49,218,49],[205,14,219,12],[205,18,219,18,"normalizedY"],[205,29,219,29],[205,32,219,32,"deltaY"],[205,38,219,38],[205,41,219,41,"distance"],[205,49,219,49],[207,14,221,12],[208,14,222,12],[208,18,222,18,"randomFactor"],[208,30,222,30],[208,33,222,33],[208,36,222,36],[208,37,222,37],[208,38,222,38],[209,14,223,12],[209,18,223,18,"finalX"],[209,24,223,24],[209,27,223,27,"normalizedX"],[209,38,223,38],[209,41,223,41],[209,42,223,42,"Math"],[209,46,223,46],[209,47,223,47,"random"],[209,53,223,53],[209,54,223,54],[209,55,223,55],[209,58,223,58],[209,61,223,61],[209,65,223,65,"randomFactor"],[209,77,223,77],[210,14,224,12],[210,18,224,18,"finalY"],[210,24,224,24],[210,27,224,27,"normalizedY"],[210,38,224,38],[210,41,224,41],[210,42,224,42,"Math"],[210,46,224,46],[210,47,224,47,"random"],[210,53,224,53],[210,54,224,54],[210,55,224,55],[210,58,224,58],[210,61,224,61],[210,65,224,65,"randomFactor"],[210,77,224,77],[212,14,226,12],[213,14,227,12],[213,18,227,16,"newX"],[213,22,227,20],[213,25,227,23,"enemy"],[213,30,227,28],[213,31,227,29,"position"],[213,39,227,37],[213,40,227,38,"x"],[213,41,227,39],[213,44,227,43,"finalX"],[213,50,227,49],[213,53,227,52,"MOVEMENT_SPEED"],[213,67,227,67],[214,14,228,12],[214,18,228,16,"newY"],[214,22,228,20],[214,25,228,23,"enemy"],[214,30,228,28],[214,31,228,29,"position"],[214,39,228,37],[214,40,228,38,"y"],[214,41,228,39],[214,44,228,43,"finalY"],[214,50,228,49],[214,53,228,52,"MOVEMENT_SPEED"],[214,67,228,67],[216,14,230,12],[217,14,231,12,"newX"],[217,18,231,16],[217,21,231,19,"Math"],[217,25,231,23],[217,26,231,24,"max"],[217,29,231,27],[217,30,231,28],[217,31,231,29],[217,33,231,31,"Math"],[217,37,231,35],[217,38,231,36,"min"],[217,41,231,39],[217,42,231,40,"SCREEN_WIDTH"],[217,54,231,52],[217,57,231,55,"ENEMY_SIZE"],[217,67,231,65],[217,69,231,67,"newX"],[217,73,231,71],[217,74,231,72],[217,75,231,73],[218,14,232,12,"newY"],[218,18,232,16],[218,21,232,19,"Math"],[218,25,232,23],[218,26,232,24,"max"],[218,29,232,27],[218,30,232,28],[218,31,232,29],[218,33,232,31,"Math"],[218,37,232,35],[218,38,232,36,"min"],[218,41,232,39],[218,42,232,40,"GAME_AREA_HEIGHT"],[218,58,232,56],[218,61,232,59,"ENEMY_SIZE"],[218,71,232,69],[218,73,232,71,"newY"],[218,77,232,75],[218,78,232,76],[218,79,232,77],[220,14,234,12],[221,14,235,12,"enemy"],[221,19,235,17],[221,20,235,18,"position"],[221,28,235,26],[221,29,235,27,"x"],[221,30,235,28],[221,33,235,31,"newX"],[221,37,235,35],[222,14,236,12,"enemy"],[222,19,236,17],[222,20,236,18,"position"],[222,28,236,26],[222,29,236,27,"y"],[222,30,236,28],[222,33,236,31,"newY"],[222,37,236,35],[223,12,237,10],[224,12,238,10],[225,10,239,8],[226,8,240,6],[226,9,240,7],[226,10,240,8],[228,8,242,6],[229,8,243,6],[229,12,243,10],[229,13,243,11,"isManualControlActive"],[229,34,243,32],[229,36,243,34],[230,10,244,8],[230,15,244,13],[230,19,244,17,"i"],[230,20,244,18],[230,23,244,21],[230,24,244,22],[230,26,244,24,"i"],[230,27,244,25],[230,30,244,28],[230,31,244,29],[230,33,244,31,"i"],[230,34,244,32],[230,36,244,34],[230,38,244,36],[231,12,245,10],[231,16,245,14,"newState"],[231,24,245,22],[231,25,245,23,"abilityManager"],[231,39,245,37],[231,40,245,38,"isAbilityReady"],[231,54,245,52],[231,55,245,53,"i"],[231,56,245,54],[231,57,245,55],[231,61,245,59,"newState"],[231,69,245,67],[231,70,245,68,"enemies"],[231,77,245,75],[231,78,245,76,"length"],[231,84,245,82],[231,87,245,85],[231,88,245,86],[231,90,245,88],[232,14,246,12],[232,18,246,16,"newState"],[232,26,246,24],[232,27,246,25,"abilityManager"],[232,41,246,39],[232,42,246,40,"useAbility"],[232,52,246,50],[232,53,246,51,"i"],[232,54,246,52],[232,56,246,54,"newTick"],[232,63,246,61],[232,64,246,62],[232,66,246,64],[233,16,247,14,"castAbility"],[233,27,247,25],[233,28,247,26,"newState"],[233,36,247,34],[233,38,247,36,"i"],[233,39,247,37],[233,40,247,38],[234,14,248,12],[235,12,249,10],[236,10,250,8],[237,8,251,6],[239,8,253,6],[240,8,254,6],[240,12,254,12,"deadEnemies"],[240,23,254,23],[240,26,254,26,"newState"],[240,34,254,34],[240,35,254,35,"enemies"],[240,42,254,42],[240,43,254,43,"filter"],[240,49,254,49],[240,50,254,50,"enemy"],[240,55,254,55],[240,59,254,59,"enemy"],[240,64,254,64],[240,65,254,65,"health"],[240,71,254,71],[240,75,254,75],[240,76,254,76],[240,77,254,77],[241,8,255,6,"enemiesToKill"],[241,21,255,19],[241,24,255,22],[241,25,255,23],[241,28,255,26,"deadEnemies"],[241,39,255,37],[241,40,255,38],[241,41,255,39],[241,42,255,40],[243,8,257,6],[244,8,258,6],[244,12,258,10,"deadEnemies"],[244,23,258,21],[244,24,258,22,"length"],[244,30,258,28],[244,33,258,31],[244,34,258,32],[244,36,258,34],[245,10,259,8,"console"],[245,17,259,15],[245,18,259,16,"log"],[245,21,259,19],[245,22,259,20],[245,49,259,47,"deadEnemies"],[245,60,259,58],[245,61,259,59,"length"],[245,67,259,65],[245,83,259,81],[245,85,259,83,"deadEnemies"],[245,96,259,94],[245,97,259,95,"map"],[245,100,259,98],[245,101,259,99,"e"],[245,102,259,100],[245,106,259,104],[245,109,259,107,"e"],[245,110,259,108],[245,111,259,109,"id"],[245,113,259,111],[245,117,259,115,"e"],[245,118,259,116],[245,119,259,117,"health"],[245,125,259,123],[245,130,259,128],[245,131,259,129],[245,132,259,130],[246,8,260,6],[248,8,262,6],[249,8,263,6],[249,12,263,12,"lowHealthEnemies"],[249,28,263,28],[249,31,263,31,"newState"],[249,39,263,39],[249,40,263,40,"enemies"],[249,47,263,47],[249,48,263,48,"filter"],[249,54,263,54],[249,55,263,55,"enemy"],[249,60,263,60],[249,64,263,64,"enemy"],[249,69,263,69],[249,70,263,70,"health"],[249,76,263,76],[249,80,263,80],[249,82,263,82],[249,86,263,86,"enemy"],[249,91,263,91],[249,92,263,92,"health"],[249,98,263,98],[249,101,263,101],[249,102,263,102],[249,103,263,103],[250,8,264,6],[250,12,264,10,"lowHealthEnemies"],[250,28,264,26],[250,29,264,27,"length"],[250,35,264,33],[250,38,264,36],[250,39,264,37],[250,41,264,39],[251,10,265,8,"console"],[251,17,265,15],[251,18,265,16,"log"],[251,21,265,19],[251,22,265,20],[251,61,265,59],[251,63,265,61,"lowHealthEnemies"],[251,79,265,77],[251,80,265,78,"map"],[251,83,265,81],[251,84,265,82,"e"],[251,85,265,83],[251,89,265,87],[251,92,265,90,"e"],[251,93,265,91],[251,94,265,92,"id"],[251,96,265,94],[251,100,265,98,"e"],[251,101,265,99],[251,102,265,100,"health"],[251,108,265,106],[251,112,265,110,"e"],[251,113,265,111],[251,114,265,112,"maxHealth"],[251,123,265,121],[251,128,265,126],[251,129,265,127],[251,130,265,128],[252,8,266,6],[254,8,268,6],[255,8,269,6],[255,12,269,12,"beforeCount"],[255,23,269,23],[255,26,269,26,"newState"],[255,34,269,34],[255,35,269,35,"enemies"],[255,42,269,42],[255,43,269,43,"length"],[255,49,269,49],[256,8,270,6,"newState"],[256,16,270,14],[256,17,270,15,"enemies"],[256,24,270,22],[256,27,270,25,"newState"],[256,35,270,33],[256,36,270,34,"enemies"],[256,43,270,41],[256,44,270,42,"filter"],[256,50,270,48],[256,51,270,49,"enemy"],[256,56,270,54],[256,60,270,58,"enemy"],[256,65,270,63],[256,66,270,64,"health"],[256,72,270,70],[256,75,270,73],[256,76,270,74],[256,77,270,75],[257,8,271,6],[257,12,271,12,"afterCount"],[257,22,271,22],[257,25,271,25,"newState"],[257,33,271,33],[257,34,271,34,"enemies"],[257,41,271,41],[257,42,271,42,"length"],[257,48,271,48],[258,8,273,6],[258,12,273,10,"beforeCount"],[258,23,273,21],[258,28,273,26,"afterCount"],[258,38,273,36],[258,40,273,38],[259,10,274,8,"console"],[259,17,274,15],[259,18,274,16,"log"],[259,21,274,19],[259,22,274,20],[259,52,274,50,"beforeCount"],[259,63,274,61],[259,66,274,64,"afterCount"],[259,76,274,74],[259,102,274,100],[259,103,274,101],[260,8,275,6],[262,8,277,6],[263,8,278,6],[264,8,279,6],[264,12,279,12,"MAX_ENEMIES"],[264,23,279,23],[264,26,279,26],[264,28,279,28],[265,8,280,6],[265,12,280,12,"MIN_SPAWN_DELAY"],[265,27,280,27],[265,30,280,30],[265,33,280,33],[265,34,280,34],[265,35,280,35],[266,8,281,6],[266,12,281,12,"now"],[266,15,281,15],[266,18,281,18,"Date"],[266,22,281,22],[266,23,281,23,"now"],[266,26,281,26],[266,27,281,27],[266,28,281,28],[267,8,282,6],[267,12,282,12,"hasBoss"],[267,19,282,19],[267,22,282,22,"newState"],[267,30,282,30],[267,31,282,31,"enemies"],[267,38,282,38],[267,39,282,39,"some"],[267,43,282,43],[267,44,282,44,"enemy"],[267,49,282,49],[267,53,282,53,"enemy"],[267,58,282,58],[267,59,282,59,"isBoss"],[267,65,282,65],[267,66,282,66],[269,8,284,6],[270,8,285,6],[270,12,285,10],[270,13,285,11,"newState"],[270,21,285,19],[270,22,285,20,"lastSpawnTime"],[270,35,285,33],[270,37,285,35],[271,10,286,8,"newState"],[271,18,286,16],[271,19,286,17,"lastSpawnTime"],[271,32,286,30],[271,35,286,33,"now"],[271,38,286,36],[272,8,287,6],[273,8,289,6,"console"],[273,15,289,13],[273,16,289,14,"log"],[273,19,289,17],[273,20,289,18],[273,53,289,51,"newState"],[273,61,289,59],[273,62,289,60,"enemies"],[273,69,289,67],[273,70,289,68,"length"],[273,76,289,74],[273,85,289,83,"MAX_ENEMIES"],[273,96,289,94],[273,109,289,107,"hasBoss"],[273,116,289,114],[273,118,289,116],[273,119,289,117],[275,8,291,6],[276,8,292,6],[276,12,292,10],[276,13,292,11,"hasBoss"],[276,20,292,18],[276,24,292,22,"newState"],[276,32,292,30],[276,33,292,31,"enemies"],[276,40,292,38],[276,41,292,39,"length"],[276,47,292,45],[276,50,292,48,"MAX_ENEMIES"],[276,61,292,59],[276,65,292,64,"now"],[276,68,292,67],[276,71,292,70,"newState"],[276,79,292,78],[276,80,292,79,"lastSpawnTime"],[276,93,292,92],[276,97,292,97,"MIN_SPAWN_DELAY"],[276,112,292,112],[276,114,292,114],[277,10,293,8,"console"],[277,17,293,15],[277,18,293,16,"log"],[277,21,293,19],[277,22,293,20],[277,43,293,41,"newState"],[277,51,293,49],[277,52,293,50,"enemies"],[277,59,293,57],[277,60,293,58,"length"],[277,66,293,64],[277,69,293,67],[277,70,293,68],[277,74,293,72,"MAX_ENEMIES"],[277,85,293,83],[277,87,293,85],[277,88,293,86],[278,10,294,8,"spawnTestEnemy"],[278,24,294,22],[278,25,294,23,"newState"],[278,33,294,31],[278,34,294,32],[279,10,295,8,"newState"],[279,18,295,16],[279,19,295,17,"lastSpawnTime"],[279,32,295,30],[279,35,295,33,"now"],[279,38,295,36],[280,8,296,6],[281,8,298,6],[281,15,298,13,"newState"],[281,23,298,21],[282,6,299,4],[282,7,299,5],[282,47,299,6],[284,6,301,4],[285,6,302,4,"console"],[285,13,302,11],[285,14,302,12,"log"],[285,17,302,15],[285,18,302,16],[285,50,302,48,"enemiesToKill"],[285,63,302,61],[285,64,302,62,"length"],[285,70,302,68],[285,101,302,99],[285,102,302,100],[286,6,304,4,"enemiesToKill"],[286,19,304,17],[286,20,304,18,"forEach"],[286,27,304,25],[286,28,304,26],[286,29,304,27,"enemy"],[286,34,304,32],[286,36,304,34,"index"],[286,41,304,39],[286,46,304,44],[287,8,305,6,"console"],[287,15,305,13],[287,16,305,14,"log"],[287,19,305,17],[287,20,305,18],[287,57,305,55,"index"],[287,62,305,60],[287,65,305,63],[287,66,305,64],[287,70,305,68,"enemiesToKill"],[287,83,305,81],[287,84,305,82,"length"],[287,90,305,88],[287,104,305,102,"enemy"],[287,109,305,107],[287,110,305,108,"id"],[287,112,305,110],[287,114,305,112],[287,115,305,113],[288,8,306,6,"handleEnemyKill"],[288,23,306,21],[288,24,306,22,"enemy"],[288,29,306,27],[288,30,306,28],[289,6,307,4],[289,7,307,5],[289,8,307,6],[290,4,308,2],[290,5,308,3],[290,7,308,5],[290,8,308,6,"handleEnemyKill"],[290,23,308,21],[290,24,308,22],[290,25,308,23],[290,26,308,24],[290,27,308,25],[292,4,310,2],[293,4,311,2],[293,8,311,8,"findClosestEnemyInternal"],[293,32,311,32],[293,35,311,36,"enemies"],[293,42,311,58],[293,46,311,83],[294,6,312,4],[294,10,312,8,"enemies"],[294,17,312,15],[294,18,312,16,"length"],[294,24,312,22],[294,29,312,27],[294,30,312,28],[294,32,312,30],[294,39,312,37],[294,43,312,41],[296,6,314,4],[297,6,315,4],[297,10,315,10,"SCREEN_WIDTH"],[297,22,315,22],[297,25,315,25],[297,28,315,28],[298,6,316,4],[298,10,316,10,"GAME_AREA_HEIGHT"],[298,26,316,26],[298,29,316,29],[298,32,316,32],[298,35,316,35],[298,38,316,38],[298,39,316,39],[298,40,316,40],[299,6,317,4],[299,10,317,10,"ninjaX"],[299,16,317,16],[299,19,317,19,"SCREEN_WIDTH"],[299,31,317,31],[299,34,317,34],[299,35,317,35],[300,6,318,4],[300,10,318,10,"ninjaY"],[300,16,318,16],[300,19,318,19,"GAME_AREA_HEIGHT"],[300,35,318,35],[300,38,318,38],[300,39,318,39],[301,6,320,4],[301,10,320,8,"closestEnemy"],[301,22,320,20],[301,25,320,23,"enemies"],[301,32,320,30],[301,33,320,31],[301,34,320,32],[301,35,320,33],[302,6,321,4],[302,10,321,8,"closestDistance"],[302,25,321,23],[302,28,321,26,"Infinity"],[302,36,321,34],[303,6,323,4,"enemies"],[303,13,323,11],[303,14,323,12,"forEach"],[303,21,323,19],[303,22,323,20,"enemy"],[303,27,323,25],[303,31,323,29],[304,8,324,6],[304,12,324,12,"distance"],[304,20,324,20],[304,23,324,23,"Math"],[304,27,324,27],[304,28,324,28,"sqrt"],[304,32,324,32],[304,33,325,8,"Math"],[304,37,325,12],[304,38,325,13,"pow"],[304,41,325,16],[304,42,325,17,"enemy"],[304,47,325,22],[304,48,325,23,"position"],[304,56,325,31],[304,57,325,32,"x"],[304,58,325,33],[304,61,325,36,"ninjaX"],[304,67,325,42],[304,69,325,44],[304,70,325,45],[304,71,325,46],[304,74,326,8,"Math"],[304,78,326,12],[304,79,326,13,"pow"],[304,82,326,16],[304,83,326,17,"enemy"],[304,88,326,22],[304,89,326,23,"position"],[304,97,326,31],[304,98,326,32,"y"],[304,99,326,33],[304,102,326,36,"ninjaY"],[304,108,326,42],[304,110,326,44],[304,111,326,45],[304,112,327,6],[304,113,327,7],[305,8,329,6],[305,12,329,10,"distance"],[305,20,329,18],[305,23,329,21,"closestDistance"],[305,38,329,36],[305,40,329,38],[306,10,330,8,"closestDistance"],[306,25,330,23],[306,28,330,26,"distance"],[306,36,330,34],[307,10,331,8,"closestEnemy"],[307,22,331,20],[307,25,331,23,"enemy"],[307,30,331,28],[308,8,332,6],[309,6,333,4],[309,7,333,5],[309,8,333,6],[310,6,335,4,"console"],[310,13,335,11],[310,14,335,12,"log"],[310,17,335,15],[310,18,335,16],[310,60,335,58,"closestDistance"],[310,75,335,73],[310,76,335,74,"toFixed"],[310,83,335,81],[310,84,335,82],[310,85,335,83],[310,86,335,84],[310,88,335,86],[310,89,335,87],[311,6,336,4],[311,13,336,11,"closestEnemy"],[311,25,336,23],[312,4,337,2],[312,5,337,3],[314,4,339,2],[315,4,340,2],[315,8,340,8,"findClosestEnemy"],[315,24,340,24],[315,27,340,27,"findClosestEnemy"],[315,28,340,27],[315,33,340,53],[316,6,341,4],[316,13,341,11,"findClosestEnemyInternal"],[316,37,341,35],[316,38,341,36,"combatState"],[316,49,341,47],[316,50,341,48,"enemies"],[316,57,341,55],[316,58,341,56],[317,4,342,2],[317,5,342,3],[319,4,344,2],[320,4,345,2],[320,8,345,2,"_useState7"],[320,18,345,2],[320,21,345,58],[320,25,345,58,"useState"],[320,31,345,66],[320,32,345,66,"useState"],[320,40,345,66],[320,42,345,91],[321,8,345,93,"x"],[321,9,345,94],[321,11,345,96],[321,12,345,97],[322,8,345,99,"y"],[322,9,345,100],[322,11,345,102],[323,6,345,104],[323,7,345,105],[323,8,345,106],[324,6,345,106,"_useState8"],[324,16,345,106],[324,23,345,106,"_slicedToArray"],[324,37,345,106],[324,38,345,106,"default"],[324,45,345,106],[324,47,345,106,"_useState7"],[324,57,345,106],[325,6,345,9,"currentNinjaPosition"],[325,26,345,29],[325,29,345,29,"_useState8"],[325,39,345,29],[326,6,345,31,"setCurrentNinjaPosition"],[326,29,345,54],[326,32,345,54,"_useState8"],[326,42,345,54],[327,4,346,2],[327,8,346,2,"_useState9"],[327,18,346,2],[327,21,346,60],[327,25,346,60,"useState"],[327,31,346,68],[327,32,346,68,"useState"],[327,40,346,68],[327,42,346,69],[327,47,346,74],[327,48,346,75],[328,6,346,75,"_useState0"],[328,16,346,75],[328,23,346,75,"_slicedToArray"],[328,37,346,75],[328,38,346,75,"default"],[328,45,346,75],[328,47,346,75,"_useState9"],[328,57,346,75],[329,6,346,9,"isManualControlActive"],[329,27,346,30],[329,30,346,30,"_useState0"],[329,40,346,30],[330,6,346,32,"setIsManualControlActive"],[330,30,346,56],[330,33,346,56,"_useState0"],[330,43,346,56],[332,4,348,2],[333,4,349,2],[333,8,349,8,"updateNinjaPosition"],[333,27,349,27],[333,30,349,30],[333,34,349,30,"useCallback"],[333,40,349,41],[333,41,349,41,"useCallback"],[333,52,349,41],[333,54,349,43,"newPosition"],[333,65,349,78],[333,69,349,83],[334,6,350,4,"setCurrentNinjaPosition"],[334,29,350,27],[334,30,350,28,"newPosition"],[334,41,350,39],[334,42,350,40],[335,4,351,2],[335,5,351,3],[335,7,351,5],[335,9,351,7],[335,10,351,8],[337,4,353,2],[338,4,354,2],[338,8,354,8,"setManualControlActive"],[338,30,354,30],[338,33,354,33],[338,37,354,33,"useCallback"],[338,43,354,44],[338,44,354,44,"useCallback"],[338,55,354,44],[338,57,354,46,"active"],[338,63,354,61],[338,67,354,66],[339,6,355,4,"setIsManualControlActive"],[339,30,355,28],[339,31,355,29,"active"],[339,37,355,35],[339,38,355,36],[340,6,356,4,"console"],[340,13,356,11],[340,14,356,12,"log"],[340,17,356,15],[340,18,356,16],[340,39,356,37,"active"],[340,45,356,43],[340,48,356,46],[340,59,356,57],[340,62,356,60],[340,75,356,73],[340,88,356,86,"active"],[340,94,356,92],[340,97,356,95],[340,105,356,103],[340,108,356,106],[340,117,356,115],[340,119,356,117],[340,120,356,118],[341,4,357,2],[341,5,357,3],[341,7,357,5],[341,9,357,7],[341,10,357,8],[343,4,359,2],[344,4,360,2],[344,8,360,8,"handleProjectileHit"],[344,27,360,27],[344,30,360,31,"projectile"],[344,40,360,59],[344,44,360,64],[345,6,361,4,"console"],[345,13,361,11],[345,14,361,12,"log"],[345,17,361,15],[345,18,361,16],[345,35,361,33,"projectile"],[345,45,361,43],[345,46,361,44,"id"],[345,48,361,46],[345,62,361,60,"projectile"],[345,72,361,70],[345,73,361,71,"targetEnemyId"],[345,86,361,84],[345,94,361,92,"projectile"],[345,104,361,102],[345,105,361,103,"damage"],[345,111,361,109],[345,120,361,118],[345,121,361,119],[346,6,363,4,"setCombatState"],[346,20,363,18],[346,21,363,19,"prev"],[346,25,363,23],[346,29,363,27],[347,8,364,6],[347,12,364,12,"newState"],[347,20,364,20],[347,23,364,23],[348,10,364,25],[348,13,364,28,"prev"],[349,8,364,33],[349,9,364,34],[351,8,366,6],[352,8,367,6],[352,12,367,12,"enemyIndex"],[352,22,367,22],[352,25,367,25,"newState"],[352,33,367,33],[352,34,367,34,"enemies"],[352,41,367,41],[352,42,367,42,"findIndex"],[352,51,367,51],[352,52,367,52,"e"],[352,53,367,53],[352,57,367,57,"e"],[352,58,367,58],[352,59,367,59,"id"],[352,61,367,61],[352,66,367,66,"projectile"],[352,76,367,76],[352,77,367,77,"targetEnemyId"],[352,90,367,90],[352,91,367,91],[353,8,368,6],[353,12,368,10,"enemyIndex"],[353,22,368,20],[353,26,368,24],[353,27,368,25],[353,29,368,27],[354,10,369,8,"newState"],[354,18,369,16],[354,19,369,17,"enemies"],[354,26,369,24],[354,29,369,27],[354,30,369,28],[354,33,369,31,"newState"],[354,41,369,39],[354,42,369,40,"enemies"],[354,49,369,47],[354,50,369,48],[355,10,370,8,"newState"],[355,18,370,16],[355,19,370,17,"enemies"],[355,26,370,24],[355,27,370,25,"enemyIndex"],[355,37,370,35],[355,38,370,36],[355,41,370,39],[356,12,371,10],[356,15,371,13,"newState"],[356,23,371,21],[356,24,371,22,"enemies"],[356,31,371,29],[356,32,371,30,"enemyIndex"],[356,42,371,40],[356,43,371,41],[357,12,372,10,"health"],[357,18,372,16],[357,20,372,18,"newState"],[357,28,372,26],[357,29,372,27,"enemies"],[357,36,372,34],[357,37,372,35,"enemyIndex"],[357,47,372,45],[357,48,372,46],[357,49,372,47,"health"],[357,55,372,53],[357,58,372,56,"projectile"],[357,68,372,66],[357,69,372,67,"damage"],[357,75,372,73],[358,12,373,10,"lastDamaged"],[358,23,373,21],[358,25,373,23,"combatEngine"],[358,44,373,35],[358,45,373,35,"combatEngine"],[358,57,373,35],[358,58,373,36,"getCurrentTick"],[358,72,373,50],[358,73,373,51],[359,10,374,8],[359,11,374,9],[360,10,376,8,"console"],[360,17,376,15],[360,18,376,16,"log"],[360,21,376,19],[360,22,376,20],[360,34,376,32,"projectile"],[360,44,376,42],[360,45,376,43,"targetEnemyId"],[360,58,376,56],[360,70,376,68,"newState"],[360,78,376,76],[360,79,376,77,"enemies"],[360,86,376,84],[360,87,376,85,"enemyIndex"],[360,97,376,95],[360,98,376,96],[360,99,376,97,"health"],[360,105,376,103],[360,109,376,107,"newState"],[360,117,376,115],[360,118,376,116,"enemies"],[360,125,376,123],[360,126,376,124,"enemyIndex"],[360,136,376,134],[360,137,376,135],[360,138,376,136,"maxHealth"],[360,147,376,145],[360,149,376,147],[360,150,376,148],[361,8,377,6],[362,8,379,6],[362,15,379,13,"newState"],[362,23,379,21],[363,6,380,4],[363,7,380,5],[363,8,380,6],[365,6,382,4],[366,6,383,4,"setProjectiles"],[366,20,383,18],[366,21,383,19,"prev"],[366,25,383,23],[366,29,383,27,"prev"],[366,33,383,31],[366,34,383,32,"filter"],[366,40,383,38],[366,41,383,39,"p"],[366,42,383,40],[366,46,383,44,"p"],[366,47,383,45],[366,48,383,46,"id"],[366,50,383,48],[366,55,383,53,"projectile"],[366,65,383,63],[366,66,383,64,"id"],[366,68,383,66],[366,69,383,67],[366,70,383,68],[367,4,384,2],[367,5,384,3],[369,4,386,2],[370,4,387,2],[370,8,387,8,"castAbility"],[370,19,387,19],[370,22,387,22,"castAbility"],[370,23,387,23,"state"],[370,28,387,41],[370,30,387,43,"slotIndex"],[370,39,387,60],[370,44,387,65],[371,6,388,4],[371,10,388,10,"deck"],[371,14,388,14],[371,17,388,17,"state"],[371,22,388,22],[371,23,388,23,"abilityManager"],[371,37,388,37],[371,38,388,38,"getDeck"],[371,45,388,45],[371,46,388,46],[371,47,388,47],[372,6,389,4],[372,10,389,10,"ability"],[372,17,389,17],[372,20,389,20,"deck"],[372,24,389,24],[372,25,389,25,"slots"],[372,30,389,30],[372,31,389,31,"slotIndex"],[372,40,389,40],[372,41,389,41],[373,6,390,4],[373,10,390,8],[373,11,390,9,"ability"],[373,18,390,16],[373,20,390,18],[375,6,392,4],[376,6,393,4],[376,10,393,10,"target"],[376,16,393,16],[376,19,393,19,"findClosestEnemyInternal"],[376,43,393,43],[376,44,393,44,"state"],[376,49,393,49],[376,50,393,50,"enemies"],[376,57,393,57],[376,58,393,58],[377,6,394,4],[377,10,394,8],[377,11,394,9,"target"],[377,17,394,15],[377,19,394,17],[379,6,396,4],[380,6,397,4],[380,10,397,8,"damage"],[380,16,397,14],[380,19,397,17,"ability"],[380,26,397,24],[380,27,397,25,"stats"],[380,32,397,30],[380,33,397,31,"baseDamage"],[380,43,397,41],[382,6,399,4],[383,6,400,4,"deck"],[383,10,400,8],[383,11,400,9,"activeSynergies"],[383,26,400,24],[383,27,400,25,"forEach"],[383,34,400,32],[383,35,400,33,"synergy"],[383,42,400,40],[383,46,400,44],[384,8,401,6],[384,12,401,10,"synergy"],[384,19,401,17],[384,20,401,18,"bonus"],[384,25,401,23],[384,26,401,24,"damageBonus"],[384,37,401,35],[384,41,402,10,"synergy"],[384,48,402,17],[384,49,402,18,"requiredTags"],[384,61,402,30],[384,62,402,31,"some"],[384,66,402,35],[384,67,402,36,"tag"],[384,70,402,39],[384,74,402,43,"ability"],[384,81,402,50],[384,82,402,51,"tags"],[384,86,402,55],[384,87,402,56,"includes"],[384,95,402,64],[384,96,402,65,"tag"],[384,99,402,68],[384,100,402,69],[384,101,402,70],[384,103,402,72],[385,10,403,8,"damage"],[385,16,403,14],[385,20,403,19],[385,21,403,20],[385,24,403,23,"synergy"],[385,31,403,30],[385,32,403,31,"bonus"],[385,37,403,36],[385,38,403,37,"damageBonus"],[385,49,403,48],[385,52,403,51],[385,55,403,55],[386,8,404,6],[387,6,405,4],[387,7,405,5],[387,8,405,6],[389,6,407,4],[390,6,408,4],[390,10,408,10,"damageResult"],[390,22,408,22],[390,25,408,25,"DamageCalculator"],[390,44,408,41],[390,45,408,41,"DamageCalculator"],[390,61,408,41],[390,62,408,42,"calculateDamage"],[390,77,408,57],[390,78,408,58,"damage"],[390,84,408,64],[390,86,408,66,"state"],[390,91,408,71],[390,92,408,72,"playerStats"],[390,103,408,83],[390,105,408,85,"target"],[390,111,408,91],[390,112,408,92,"stats"],[390,117,408,97],[390,118,408,98],[392,6,410,4],[393,6,411,4,"createProjectile"],[393,22,411,20],[393,23,411,21,"target"],[393,29,411,27],[393,31,411,29,"damageResult"],[393,43,411,41],[393,44,411,42,"damage"],[393,50,411,48],[393,52,411,50,"currentNinjaPosition"],[393,72,411,70],[393,74,411,72],[394,8,412,6,"id"],[394,10,412,8],[394,12,412,10,"ability"],[394,19,412,17],[394,20,412,18,"id"],[394,22,412,20],[395,8,413,6,"name"],[395,12,413,10],[395,14,413,12,"ability"],[395,21,413,19],[395,22,413,20,"name"],[395,26,413,24],[396,8,414,6,"icon"],[396,12,414,10],[396,14,414,12,"ability"],[396,21,414,19],[396,22,414,20,"icon"],[397,6,415,4],[397,7,415,5],[397,8,415,6],[399,6,417,4],[400,6,418,4],[400,10,418,8,"ability"],[400,17,418,15],[400,18,418,16,"effects"],[400,25,418,23],[400,26,418,24,"includes"],[400,34,418,32],[400,35,418,33],[400,40,418,38],[400,41,418,39],[400,45,418,43,"ability"],[400,52,418,50],[400,53,418,51,"stats"],[400,58,418,56],[400,59,418,57,"duration"],[400,67,418,65],[400,69,418,67],[401,8,419,6,"state"],[401,13,419,11],[401,14,419,12,"statusEffects"],[401,27,419,25],[401,28,419,26,"addEffect"],[401,37,419,35],[401,38,419,36,"target"],[401,44,419,42],[401,45,419,43,"id"],[401,47,419,45],[401,49,419,47],[402,10,420,8,"id"],[402,12,420,10],[402,14,420,12],[402,17,420,15,"ability"],[402,24,420,22],[402,25,420,23,"id"],[402,27,420,25],[402,33,420,31],[403,10,421,8,"type"],[403,14,421,12],[403,16,421,14],[403,21,421,19],[404,10,422,8,"remainingTicks"],[404,24,422,22],[404,26,422,24,"Math"],[404,30,422,28],[404,31,422,29,"floor"],[404,36,422,34],[404,37,422,35,"ability"],[404,44,422,42],[404,45,422,43,"stats"],[404,50,422,48],[404,51,422,49,"duration"],[404,59,422,57],[404,62,422,60],[404,64,422,62],[404,65,422,63],[405,10,422,65],[406,10,423,8,"tickInterval"],[406,22,423,20],[406,24,423,22],[406,26,423,24],[407,10,423,26],[408,10,424,8,"lastTick"],[408,18,424,16],[408,20,424,18,"state"],[408,25,424,23],[408,26,424,24,"currentTick"],[408,37,424,35],[409,10,425,8,"value"],[409,15,425,13],[409,17,425,15,"Math"],[409,21,425,19],[409,22,425,20,"floor"],[409,27,425,25],[409,28,425,26,"damage"],[409,34,425,32],[409,37,425,35],[409,40,425,38],[409,41,425,39],[410,10,425,41],[411,10,426,8,"stackable"],[411,19,426,17],[411,21,426,19],[412,8,427,6],[412,9,427,7],[412,10,427,8],[413,6,428,4],[414,6,430,4,"console"],[414,13,430,11],[414,14,430,12,"log"],[414,17,430,15],[414,18,430,16],[414,24,430,22,"ability"],[414,31,430,29],[414,32,430,30,"name"],[414,36,430,34],[414,69,430,67,"damageResult"],[414,81,430,79],[414,82,430,80,"damage"],[414,88,430,86],[414,98,430,96,"damageResult"],[414,110,430,108],[414,111,430,109,"isCritical"],[414,121,430,119],[414,124,430,122],[414,134,430,132],[414,137,430,135],[414,139,430,137],[414,141,430,139],[414,142,430,140],[415,4,431,2],[415,5,431,3],[417,4,433,2],[418,4,434,2],[418,8,434,8,"createProjectile"],[418,24,434,24],[418,27,434,27,"createProjectile"],[418,28,434,28,"targetEnemy"],[418,39,434,52],[418,41,434,54,"damage"],[418,47,434,68],[418,49,434,70,"ninjaPos"],[418,57,434,103],[418,59,434,105,"abilityInfo"],[418,70,434,159],[418,75,434,164],[419,6,435,4],[419,10,435,10,"SCREEN_WIDTH"],[419,22,435,22],[419,25,435,25],[419,28,435,28],[420,6,436,4],[420,10,436,10,"GAME_AREA_HEIGHT"],[420,26,436,26],[420,29,436,29],[420,32,436,32],[420,35,436,35],[420,38,436,38],[420,39,436,39],[420,40,436,40],[421,6,437,4],[421,10,437,10,"NINJA_SIZE"],[421,20,437,20],[421,23,437,23],[421,25,437,25],[423,6,439,4],[424,6,440,4],[424,10,440,10,"ninjaX"],[424,16,440,16],[424,19,440,19,"ninjaPos"],[424,27,440,27],[424,30,440,30,"ninjaPos"],[424,38,440,38],[424,39,440,39,"x"],[424,40,440,40],[424,43,440,43,"NINJA_SIZE"],[424,53,440,53],[424,56,440,56],[424,57,440,57],[424,60,440,60,"SCREEN_WIDTH"],[424,72,440,72],[424,75,440,75],[424,76,440,76],[425,6,441,4],[425,10,441,10,"ninjaY"],[425,16,441,16],[425,19,441,19,"ninjaPos"],[425,27,441,27],[425,30,441,30,"ninjaPos"],[425,38,441,38],[425,39,441,39,"y"],[425,40,441,40],[425,43,441,43,"NINJA_SIZE"],[425,53,441,53],[425,56,441,56],[425,57,441,57],[425,60,441,60,"GAME_AREA_HEIGHT"],[425,76,441,76],[425,79,441,79],[425,80,441,80],[426,6,442,4],[426,10,442,10,"ENEMY_SIZE"],[426,20,442,20],[426,23,442,23],[426,25,442,25],[427,6,444,4],[427,10,444,10,"projectile"],[427,20,444,38],[427,23,444,41],[428,8,445,6,"id"],[428,10,445,8],[428,12,445,10],[428,20,445,18,"Date"],[428,24,445,22],[428,25,445,23,"now"],[428,28,445,26],[428,29,445,27],[428,30,445,28],[428,34,445,32,"Math"],[428,38,445,36],[428,39,445,37,"random"],[428,45,445,43],[428,46,445,44],[428,47,445,45],[428,49,445,47],[429,8,446,6,"x"],[429,9,446,7],[429,11,446,9,"ninjaX"],[429,17,446,15],[430,8,447,6,"y"],[430,9,447,7],[430,11,447,9,"ninjaY"],[430,17,447,15],[431,8,448,6,"targetX"],[431,15,448,13],[431,17,448,15,"targetEnemy"],[431,28,448,26],[431,29,448,27,"position"],[431,37,448,35],[431,38,448,36,"x"],[431,39,448,37],[431,42,448,40,"ENEMY_SIZE"],[431,52,448,50],[431,55,448,53],[431,56,448,54],[432,8,449,6,"targetY"],[432,15,449,13],[432,17,449,15,"targetEnemy"],[432,28,449,26],[432,29,449,27,"position"],[432,37,449,35],[432,38,449,36,"y"],[432,39,449,37],[432,42,449,40,"ENEMY_SIZE"],[432,52,449,50],[432,55,449,53],[432,56,449,54],[433,8,450,6,"targetEnemyId"],[433,21,450,19],[433,23,450,21,"targetEnemy"],[433,34,450,32],[433,35,450,33,"id"],[433,37,450,35],[434,8,451,6,"damage"],[434,14,451,12],[434,16,451,14,"damage"],[434,22,451,20],[435,8,452,6,"startTime"],[435,17,452,15],[435,19,452,17,"Date"],[435,23,452,21],[435,24,452,22,"now"],[435,27,452,25],[435,28,452,26],[435,29,452,27],[436,8,453,6,"duration"],[436,16,453,14],[436,18,453,16],[436,21,453,19],[437,8,453,21],[438,8,454,6],[439,8,455,6,"abilityId"],[439,17,455,15],[439,19,455,17,"abilityInfo"],[439,30,455,28],[439,32,455,30,"id"],[439,34,455,32],[439,38,455,36],[439,54,455,52],[440,8,456,6,"abilityName"],[440,19,456,17],[440,21,456,19,"abilityInfo"],[440,32,456,30],[440,34,456,32,"name"],[440,38,456,36],[440,42,456,40],[440,58,456,56],[441,8,457,6,"abilityIcon"],[441,19,457,17],[441,21,457,19,"abilityInfo"],[441,32,457,30],[441,34,457,32,"icon"],[441,38,457,36],[441,42,457,40],[441,46,457,44],[441,47,457,46],[442,6,458,4],[442,7,458,5],[443,6,460,4,"console"],[443,13,460,11],[443,14,460,12,"log"],[443,17,460,15],[443,18,460,16],[443,53,460,51,"targetEnemy"],[443,64,460,62],[443,65,460,63,"id"],[443,67,460,65],[443,75,460,73,"damage"],[443,81,460,79],[443,90,460,88],[443,91,460,89],[444,6,461,4,"console"],[444,13,461,11],[444,14,461,12,"log"],[444,17,461,15],[444,18,461,16],[444,53,461,51,"ninjaX"],[444,59,461,57],[444,64,461,62,"ninjaY"],[444,70,461,68],[444,87,461,85,"projectile"],[444,97,461,95],[444,98,461,96,"targetX"],[444,105,461,103],[444,110,461,108,"projectile"],[444,120,461,118],[444,121,461,119,"targetY"],[444,128,461,126],[444,131,461,129],[444,132,461,130],[445,6,463,4,"setProjectiles"],[445,20,463,18],[445,21,463,19,"prev"],[445,25,463,23],[445,29,463,27],[445,30,463,28],[445,33,463,31,"prev"],[445,37,463,35],[445,39,463,37,"projectile"],[445,49,463,47],[445,50,463,48],[445,51,463,49],[447,6,465,4],[448,6,466,4,"setTimeout"],[448,16,466,14],[448,17,466,15],[448,23,466,21],[449,8,467,6,"handleProjectileHit"],[449,27,467,25],[449,28,467,26,"projectile"],[449,38,467,36],[449,39,467,37],[450,6,468,4],[450,7,468,5],[450,9,468,7],[450,12,468,10],[450,13,468,11],[451,4,469,2],[451,5,469,3],[453,4,471,2],[454,4,472,2],[454,8,472,8,"spawnTestEnemy"],[454,22,472,22],[454,25,472,26,"state"],[454,30,472,44],[454,34,472,49],[455,6,473,4],[456,6,474,4],[456,10,474,10,"SCREEN_WIDTH"],[456,22,474,22],[456,25,474,25],[456,28,474,28],[456,29,474,29],[456,30,474,30],[457,6,475,4],[457,10,475,10,"GAME_AREA_HEIGHT"],[457,26,475,26],[457,29,475,29],[457,32,475,32],[457,35,475,35],[457,38,475,38],[457,39,475,39],[457,40,475,40],[458,6,476,4],[458,10,476,10,"ENEMY_SIZE"],[458,20,476,20],[458,23,476,23],[458,25,476,25],[460,6,478,4],[461,6,479,4],[461,10,479,10,"x"],[461,11,479,11],[461,14,479,14,"Math"],[461,18,479,18],[461,19,479,19,"random"],[461,25,479,25],[461,26,479,26],[461,27,479,27],[461,31,479,31,"SCREEN_WIDTH"],[461,43,479,43],[461,46,479,46,"ENEMY_SIZE"],[461,56,479,56],[461,59,479,59],[461,60,479,60],[461,61,479,61],[461,64,479,64,"ENEMY_SIZE"],[461,74,479,74],[461,75,479,75],[461,76,479,76],[462,6,480,4],[462,10,480,10,"y"],[462,11,480,11],[462,14,480,14,"Math"],[462,18,480,18],[462,19,480,19,"random"],[462,25,480,25],[462,26,480,26],[462,27,480,27],[462,31,480,31,"GAME_AREA_HEIGHT"],[462,47,480,47],[462,50,480,50,"ENEMY_SIZE"],[462,60,480,60],[462,63,480,63],[462,64,480,64],[462,65,480,65],[462,68,480,68,"ENEMY_SIZE"],[462,78,480,78],[462,79,480,79],[462,80,480,80],[464,6,482,4],[464,10,482,10,"enemy"],[464,15,482,28],[464,18,482,31],[465,8,483,6,"id"],[465,10,483,8],[465,12,483,10],[465,21,483,19],[465,23,483,21,"enemyCounter"],[465,35,483,33],[465,37,483,35],[466,8,484,6,"name"],[466,12,484,10],[466,14,484,12],[466,24,484,22],[467,8,485,6,"health"],[467,14,485,12],[467,16,485,14],[467,19,485,17],[468,8,486,6,"maxHealth"],[468,17,486,15],[468,19,486,17],[468,22,486,20],[469,8,487,6,"stats"],[469,13,487,11],[469,15,487,13],[470,10,488,8,"attack"],[470,16,488,14],[470,18,488,16],[470,20,488,18],[471,10,489,8,"defense"],[471,17,489,15],[471,19,489,17],[471,21,489,19],[472,10,490,8,"health"],[472,16,490,14],[472,18,490,16],[472,21,490,19],[473,10,491,8,"maxHealth"],[473,19,491,17],[473,21,491,19],[473,24,491,22],[474,10,492,8,"critChance"],[474,20,492,18],[474,22,492,20],[474,23,492,21],[475,10,493,8,"critDamage"],[475,20,493,18],[475,22,493,20],[475,25,493,23],[476,10,494,8,"cooldownReduction"],[476,27,494,25],[476,29,494,27],[477,8,495,6],[477,9,495,7],[478,8,496,6,"position"],[478,16,496,14],[478,18,496,16],[479,10,496,18,"x"],[479,11,496,19],[480,10,496,21,"y"],[481,8,496,23],[481,9,496,24],[482,8,497,6,"lastDamaged"],[482,19,497,17],[482,21,497,19],[483,6,498,4],[483,7,498,5],[484,6,500,4,"state"],[484,11,500,9],[484,12,500,10,"enemies"],[484,19,500,17],[484,20,500,18,"push"],[484,24,500,22],[484,25,500,23,"enemy"],[484,30,500,28],[484,31,500,29],[485,4,501,2],[485,5,501,3],[487,4,503,2],[488,4,504,2],[488,8,504,8,"startCombat"],[488,19,504,19],[488,22,504,22,"React"],[488,27,504,27],[488,28,504,27,"default"],[488,35,504,27],[488,36,504,28,"useCallback"],[488,47,504,39],[488,48,504,40],[488,54,504,46],[489,6,505,4,"console"],[489,13,505,11],[489,14,505,12,"log"],[489,17,505,15],[489,18,505,16],[489,63,505,61],[489,64,505,62],[490,6,506,4,"setCombatState"],[490,20,506,18],[490,21,506,19,"prev"],[490,25,506,23],[490,30,506,28],[491,8,506,30],[491,11,506,33,"prev"],[491,15,506,37],[492,8,506,39,"isInCombat"],[492,18,506,49],[492,20,506,51],[493,6,506,56],[493,7,506,57],[493,8,506,58],[493,9,506,59],[495,6,508,4],[496,6,509,4,"combatEngine"],[496,25,509,16],[496,26,509,16,"combatEngine"],[496,38,509,16],[496,39,509,17,"addTickCallback"],[496,54,509,32],[496,55,509,33,"handleCombatTick"],[496,71,509,49],[496,72,509,50],[497,6,510,4,"console"],[497,13,510,11],[497,14,510,12,"log"],[497,17,510,15],[497,18,510,16],[497,62,510,60],[497,63,510,61],[499,6,512,4],[500,6,513,4,"combatEngine"],[500,25,513,16],[500,26,513,16,"combatEngine"],[500,38,513,16],[500,39,513,17,"start"],[500,44,513,22],[500,45,513,23],[500,46,513,24],[501,4,514,2],[501,5,514,3],[501,7,514,5],[501,8,514,6,"combatEngine"],[501,27,514,18],[501,28,514,18,"combatEngine"],[501,40,514,18],[501,42,514,20,"handleCombatTick"],[501,58,514,36],[501,59,514,37],[501,60,514,38],[503,4,516,2],[504,4,517,2],[504,8,517,8,"stopCombat"],[504,18,517,18],[504,21,517,21,"React"],[504,26,517,26],[504,27,517,26,"default"],[504,34,517,26],[504,35,517,27,"useCallback"],[504,46,517,38],[504,47,517,39],[504,53,517,45],[505,6,518,4,"setCombatState"],[505,20,518,18],[505,21,518,19,"prev"],[505,25,518,23],[505,30,518,28],[506,8,518,30],[506,11,518,33,"prev"],[506,15,518,37],[507,8,518,39,"isInCombat"],[507,18,518,49],[507,20,518,51],[508,6,518,57],[508,7,518,58],[508,8,518,59],[508,9,518,60],[509,6,519,4,"combatEngine"],[509,25,519,16],[509,26,519,16,"combatEngine"],[509,38,519,16],[509,39,519,17,"removeTickCallback"],[509,57,519,35],[509,58,519,36,"handleCombatTick"],[509,74,519,52],[509,75,519,53],[510,4,520,2],[510,5,520,3],[510,7,520,5],[510,8,520,6,"combatEngine"],[510,27,520,18],[510,28,520,18,"combatEngine"],[510,40,520,18],[510,42,520,20,"handleCombatTick"],[510,58,520,36],[510,59,520,37],[510,60,520,38],[512,4,522,2],[513,4,523,2],[513,8,523,8,"equipAbility"],[513,20,523,20],[513,23,523,23,"equipAbility"],[513,24,523,24,"abilityId"],[513,33,523,41],[513,35,523,43,"slotIndex"],[513,44,523,60],[513,49,523,74],[514,6,524,4],[514,13,524,11,"combatState"],[514,24,524,22],[514,25,524,23,"abilityManager"],[514,39,524,37],[514,40,524,38,"equipAbility"],[514,52,524,50],[514,53,524,51,"abilityId"],[514,62,524,60],[514,64,524,62,"slotIndex"],[514,73,524,71],[514,74,524,72],[515,4,525,2],[515,5,525,3],[516,4,527,2],[516,8,527,8,"getDeck"],[516,15,527,15],[516,18,527,18,"getDeck"],[516,19,527,18],[516,24,527,24],[517,6,528,4],[517,13,528,11,"combatState"],[517,24,528,22],[517,25,528,23,"abilityManager"],[517,39,528,37],[517,40,528,38,"getDeck"],[517,47,528,45],[517,48,528,46],[517,49,528,47],[518,4,529,2],[518,5,529,3],[519,4,531,2],[519,8,531,8,"getAvailableAbilities"],[519,29,531,29],[519,32,531,32,"getAvailableAbilities"],[519,33,531,32],[519,38,531,38],[520,6,532,4],[520,13,532,11,"combatState"],[520,24,532,22],[520,25,532,23,"abilityManager"],[520,39,532,37],[520,40,532,38,"getAvailableAbilities"],[520,61,532,59],[520,62,532,60],[520,63,532,61],[521,4,533,2],[521,5,533,3],[522,4,535,2],[522,8,535,8,"upgradeAbility"],[522,22,535,22],[522,25,535,26,"abilityId"],[522,34,535,43],[522,38,535,57],[523,6,536,4],[523,13,536,11,"combatState"],[523,24,536,22],[523,25,536,23,"abilityManager"],[523,39,536,37],[523,40,536,38,"upgradeAbility"],[523,54,536,52],[523,55,536,53,"abilityId"],[523,64,536,62],[523,65,536,63],[524,4,537,2],[524,5,537,3],[526,4,539,2],[527,4,540,2],[527,8,540,8,"clearAllEnemies"],[527,23,540,23],[527,26,540,26,"clearAllEnemies"],[527,27,540,26],[527,32,540,32],[528,6,541,4,"console"],[528,13,541,11],[528,14,541,12,"log"],[528,17,541,15],[528,18,541,16],[528,67,541,65],[528,68,541,66],[529,6,542,4,"setCombatState"],[529,20,542,18],[529,21,542,19,"prev"],[529,25,542,23],[529,30,542,28],[530,8,543,6],[530,11,543,9,"prev"],[530,15,543,13],[531,8,544,6,"enemies"],[531,15,544,13],[531,17,544,15],[532,6,545,4],[532,7,545,5],[532,8,545,6],[532,9,545,7],[533,4,546,2],[533,5,546,3],[535,4,548,2],[536,4,549,2],[536,8,549,8,"triggerLevelUpExplosion"],[536,31,549,31],[536,34,549,34,"triggerLevelUpExplosion"],[536,35,549,34],[536,40,549,40],[537,6,550,4,"console"],[537,13,550,11],[537,14,550,12,"log"],[537,17,550,15],[537,18,550,16],[537,70,550,68],[537,71,550,69],[538,6,552,4],[538,10,552,10,"explosionTime"],[538,23,552,23],[538,26,552,26,"Date"],[538,30,552,30],[538,31,552,31,"now"],[538,34,552,34],[538,35,552,35],[538,36,552,36],[539,6,553,4,"setLastExplosionTime"],[539,26,553,24],[539,27,553,25,"explosionTime"],[539,40,553,38],[539,41,553,39],[540,6,555,4,"setCombatState"],[540,20,555,18],[540,21,555,19,"prev"],[540,25,555,23],[540,29,555,27],[541,8,556,6],[542,8,557,6],[542,12,557,12,"enemyCount"],[542,22,557,22],[542,25,557,25,"prev"],[542,29,557,29],[542,30,557,30,"enemies"],[542,37,557,37],[542,38,557,38,"length"],[542,44,557,44],[543,8,558,6],[543,12,558,12,"explosionXP"],[543,23,558,23],[543,26,558,26,"enemyCount"],[543,36,558,36],[543,39,558,39],[543,41,558,41],[543,42,558,42],[543,43,558,43],[544,8,559,6],[544,12,559,12,"explosionGold"],[544,25,559,25],[544,28,559,28,"enemyCount"],[544,38,559,38],[544,41,559,41],[544,42,559,42],[544,43,559,43],[544,44,559,44],[546,8,561,6,"console"],[546,15,561,13],[546,16,561,14,"log"],[546,19,561,17],[546,20,561,18],[546,44,561,42,"enemyCount"],[546,54,561,52],[546,76,561,74,"explosionXP"],[546,87,561,85],[546,98,561,96,"explosionGold"],[546,111,561,109],[546,118,561,116],[546,119,561,117],[548,8,563,6],[549,8,564,6],[549,12,564,10,"explosionXP"],[549,23,564,21],[549,26,564,24],[549,27,564,25],[549,29,564,27],[550,10,565,8,"setTimeout"],[550,20,565,18],[550,21,565,19],[550,27,565,25],[551,12,566,10,"game"],[551,16,566,14],[551,17,566,15,"updateNinja"],[551,28,566,26],[551,29,566,28,"ninja"],[551,34,566,33],[551,39,566,39],[552,14,567,12,"experience"],[552,24,567,22],[552,26,567,24,"ninja"],[552,31,567,29],[552,32,567,30,"experience"],[552,42,567,40],[552,45,567,43,"explosionXP"],[552,56,567,54],[553,14,568,12,"gold"],[553,18,568,16],[553,20,568,18,"ninja"],[553,25,568,23],[553,26,568,24,"gold"],[553,30,568,28],[553,33,568,31,"explosionGold"],[554,12,569,10],[554,13,569,11],[554,14,569,12],[554,15,569,13],[555,10,570,8],[555,11,570,9],[555,13,570,11],[555,14,570,12],[555,15,570,13],[555,16,570,14],[555,17,570,15],[556,8,571,6],[558,8,573,6],[559,8,574,6],[560,8,575,6],[560,12,575,12,"damagedEnemies"],[560,26,575,26],[560,29,575,29,"prev"],[560,33,575,33],[560,34,575,34,"enemies"],[560,41,575,41],[560,42,575,42,"map"],[560,45,575,45],[560,46,575,46,"enemy"],[560,51,575,51],[560,56,575,56],[561,10,576,8],[561,13,576,11,"enemy"],[561,18,576,16],[562,10,577,8,"health"],[562,16,577,14],[562,18,577,16],[562,19,577,17],[563,10,577,19],[564,10,578,8,"lastDamaged"],[564,21,578,19],[564,23,578,21,"combatEngine"],[564,42,578,33],[564,43,578,33,"combatEngine"],[564,55,578,33],[564,56,578,34,"getCurrentTick"],[564,70,578,48],[564,71,578,49],[565,8,579,6],[565,9,579,7],[565,10,579,8],[565,11,579,9],[566,8,581,6],[566,15,581,13],[567,10,582,8],[567,13,582,11,"prev"],[567,17,582,15],[568,10,583,8,"enemies"],[568,17,583,15],[568,19,583,17,"damagedEnemies"],[569,8,584,6],[569,9,584,7],[570,6,585,4],[570,7,585,5],[570,8,585,6],[571,4,586,2],[571,5,586,3],[573,4,588,2],[574,4,589,2],[574,8,589,8,"spawnEnemy"],[574,18,589,18],[574,21,589,22,"position"],[574,29,589,57],[574,33,589,75],[575,6,590,4],[575,10,590,10,"SCREEN_WIDTH"],[575,22,590,22],[575,25,590,25],[575,28,590,28],[576,6,591,4],[576,10,591,10,"GAME_AREA_HEIGHT"],[576,26,591,26],[576,29,591,29],[576,32,591,32],[576,35,591,35],[576,38,591,38],[576,39,591,39],[576,40,591,40],[577,6,592,4],[577,10,592,10,"ENEMY_SIZE"],[577,20,592,20],[577,23,592,23],[577,25,592,25],[579,6,594,4],[580,6,595,4],[580,10,595,10,"x"],[580,11,595,11],[580,14,595,14,"position"],[580,22,595,22],[580,24,595,24,"x"],[580,25,595,25],[580,29,595,29,"Math"],[580,33,595,33],[580,34,595,34,"random"],[580,40,595,40],[580,41,595,41],[580,42,595,42],[580,46,595,46,"SCREEN_WIDTH"],[580,58,595,58],[580,61,595,61,"ENEMY_SIZE"],[580,71,595,71],[580,74,595,74],[580,75,595,75],[580,76,595,76],[580,79,595,79,"ENEMY_SIZE"],[580,89,595,89],[581,6,596,4],[581,10,596,10,"y"],[581,11,596,11],[581,14,596,14,"position"],[581,22,596,22],[581,24,596,24,"y"],[581,25,596,25],[581,29,596,29,"Math"],[581,33,596,33],[581,34,596,34,"random"],[581,40,596,40],[581,41,596,41],[581,42,596,42],[581,46,596,46,"GAME_AREA_HEIGHT"],[581,62,596,62],[581,65,596,65,"ENEMY_SIZE"],[581,75,596,75],[581,78,596,78],[581,79,596,79],[581,80,596,80],[581,83,596,83,"ENEMY_SIZE"],[581,93,596,93],[582,6,598,4],[582,10,598,10,"enemy"],[582,15,598,28],[582,18,598,31],[583,8,599,6,"id"],[583,10,599,8],[583,12,599,10],[583,21,599,19],[583,23,599,21,"enemyCounter"],[583,35,599,33],[583,37,599,35],[584,8,600,6,"name"],[584,12,600,10],[584,14,600,12],[584,24,600,22],[585,8,601,6,"health"],[585,14,601,12],[585,16,601,14],[585,19,601,17],[586,8,602,6,"maxHealth"],[586,17,602,15],[586,19,602,17],[586,22,602,20],[587,8,603,6,"stats"],[587,13,603,11],[587,15,603,13],[588,10,604,8,"attack"],[588,16,604,14],[588,18,604,16],[588,20,604,18],[589,10,605,8,"defense"],[589,17,605,15],[589,19,605,17],[589,21,605,19],[590,10,606,8,"health"],[590,16,606,14],[590,18,606,16],[590,21,606,19],[591,10,607,8,"maxHealth"],[591,19,607,17],[591,21,607,19],[591,24,607,22],[592,10,608,8,"critChance"],[592,20,608,18],[592,22,608,20],[592,23,608,21],[593,10,609,8,"critDamage"],[593,20,609,18],[593,22,609,20],[593,25,609,23],[594,10,610,8,"cooldownReduction"],[594,27,610,25],[594,29,610,27],[595,8,611,6],[595,9,611,7],[596,8,612,6,"position"],[596,16,612,14],[596,18,612,16],[597,10,612,18,"x"],[597,11,612,19],[598,10,612,21,"y"],[599,8,612,23],[599,9,612,24],[600,8,613,6,"lastDamaged"],[600,19,613,17],[600,21,613,19],[601,6,614,4],[601,7,614,5],[602,6,616,4,"setCombatState"],[602,20,616,18],[602,21,616,19,"prev"],[602,25,616,23],[602,30,616,28],[603,8,617,6],[603,11,617,9,"prev"],[603,15,617,13],[604,8,618,6,"enemies"],[604,15,618,13],[604,17,618,15],[604,18,618,16],[604,21,618,19,"prev"],[604,25,618,23],[604,26,618,24,"enemies"],[604,33,618,31],[604,35,618,33,"enemy"],[604,40,618,38],[605,6,619,4],[605,7,619,5],[605,8,619,6],[605,9,619,7],[606,6,621,4],[606,13,621,11,"enemy"],[606,18,621,16],[607,4,622,2],[607,5,622,3],[609,4,624,2],[610,4,625,2],[610,8,625,8,"spawnBoss"],[610,17,625,17],[610,20,625,21,"bossEnemy"],[610,29,625,43],[610,33,625,48],[611,6,626,4,"console"],[611,13,626,11],[611,14,626,12,"log"],[611,17,626,15],[611,18,626,16],[611,39,626,37,"bossEnemy"],[611,48,626,46],[611,49,626,47,"name"],[611,53,626,51],[611,90,626,88],[611,91,626,89],[612,6,627,4,"setCombatState"],[612,20,627,18],[612,21,627,19,"prev"],[612,25,627,23],[612,30,627,28],[613,8,628,6],[613,11,628,9,"prev"],[613,15,628,13],[614,8,629,6,"enemies"],[614,15,629,13],[614,17,629,15],[614,18,629,16,"bossEnemy"],[614,27,629,25],[614,28,629,26],[614,29,629,27],[615,6,630,4],[615,7,630,5],[615,8,630,6],[615,9,630,7],[616,4,631,2],[616,5,631,3],[618,4,633,2],[619,4,634,2],[619,8,634,8,"clearSpecificEnemy"],[619,26,634,26],[619,29,634,30,"enemyId"],[619,36,634,45],[619,40,634,50],[620,6,635,4,"setCombatState"],[620,20,635,18],[620,21,635,19,"prev"],[620,25,635,23],[620,30,635,28],[621,8,636,6],[621,11,636,9,"prev"],[621,15,636,13],[622,8,637,6,"enemies"],[622,15,637,13],[622,17,637,15,"prev"],[622,21,637,19],[622,22,637,20,"enemies"],[622,29,637,27],[622,30,637,28,"filter"],[622,36,637,34],[622,37,637,35,"enemy"],[622,42,637,40],[622,46,637,44,"enemy"],[622,51,637,49],[622,52,637,50,"id"],[622,54,637,52],[622,59,637,57,"enemyId"],[622,66,637,64],[623,6,638,4],[623,7,638,5],[623,8,638,6],[623,9,638,7],[624,4,639,2],[624,5,639,3],[626,4,641,2],[627,4,642,2],[627,8,642,8,"useAbilityManually"],[627,26,642,26],[627,29,642,26,"_s3"],[627,32,642,26],[627,33,642,29],[627,37,642,29,"useCallback"],[627,43,642,40],[627,44,642,40,"useCallback"],[627,55,642,40],[627,57,642,40,"_s3"],[627,60,642,40],[627,61,642,42,"slotIndex"],[627,70,642,59],[627,74,642,73],[628,6,642,73,"_s3"],[628,9,642,73],[629,6,643,4,"console"],[629,13,643,11],[629,14,643,12,"log"],[629,17,643,15],[629,18,643,16],[629,53,643,51,"slotIndex"],[629,62,643,60],[629,64,643,62],[629,65,643,63],[631,6,645,4],[632,6,646,4],[632,10,646,10,"isReady"],[632,17,646,17],[632,20,646,20,"combatState"],[632,31,646,31],[632,32,646,32,"abilityManager"],[632,46,646,46],[632,47,646,47,"isAbilityReady"],[632,61,646,61],[632,62,646,62,"slotIndex"],[632,71,646,71],[632,72,646,72],[633,6,647,4],[633,10,647,8],[633,11,647,9,"isReady"],[633,18,647,16],[633,20,647,18],[634,8,648,6,"console"],[634,15,648,13],[634,16,648,14,"log"],[634,19,648,17],[634,20,648,18],[634,41,648,39,"slotIndex"],[634,50,648,48],[634,85,648,83],[634,86,648,84],[635,8,649,6],[635,15,649,13],[635,20,649,18],[636,6,650,4],[638,6,652,4],[639,6,653,4],[639,10,653,8,"combatState"],[639,21,653,19],[639,22,653,20,"enemies"],[639,29,653,27],[639,30,653,28,"length"],[639,36,653,34],[639,41,653,39],[639,42,653,40],[639,44,653,42],[640,8,654,6,"console"],[640,15,654,13],[640,16,654,14,"log"],[640,19,654,17],[640,20,654,18],[640,69,654,67],[640,70,654,68],[641,8,655,6],[641,15,655,13],[641,20,655,18],[642,6,656,4],[644,6,658,4],[645,6,659,4],[645,10,659,10,"currentTick"],[645,21,659,21],[645,24,659,24,"combatEngine"],[645,43,659,36],[645,44,659,36,"combatEngine"],[645,56,659,36],[645,57,659,37,"getCurrentTick"],[645,71,659,51],[645,72,659,52],[645,73,659,53],[646,6,660,4],[646,10,660,10,"success"],[646,17,660,17],[646,20,660,20,"combatState"],[646,31,660,31],[646,32,660,32,"abilityManager"],[646,46,660,46],[646,47,660,47,"useAbility"],[646,57,660,57],[646,58,660,58,"slotIndex"],[646,67,660,67],[646,69,660,69,"currentTick"],[646,80,660,80],[646,81,660,81],[647,6,662,4],[647,10,662,8,"success"],[647,17,662,15],[647,19,662,17],[648,8,663,6],[649,8,664,6,"setCombatState"],[649,22,664,20],[649,23,664,21,"prev"],[649,27,664,25],[649,31,664,29],[650,10,665,8],[650,14,665,14,"newState"],[650,22,665,22],[650,25,665,25],[651,12,665,27],[651,15,665,30,"prev"],[652,10,665,35],[652,11,665,36],[653,10,666,8,"castAbility"],[653,21,666,19],[653,22,666,20,"newState"],[653,30,666,28],[653,32,666,30,"slotIndex"],[653,41,666,39],[653,42,666,40],[654,10,667,8],[654,17,667,15,"newState"],[654,25,667,23],[655,8,668,6],[655,9,668,7],[655,10,668,8],[656,8,670,6,"console"],[656,15,670,13],[656,16,670,14,"log"],[656,19,670,17],[656,20,670,18],[656,65,670,63,"slotIndex"],[656,74,670,72],[656,76,670,74],[656,77,670,75],[657,8,671,6],[657,15,671,13],[657,19,671,17],[658,6,672,4],[658,7,672,5],[658,13,672,11],[659,8,673,6,"console"],[659,15,673,13],[659,16,673,14,"log"],[659,19,673,17],[659,20,673,18],[659,61,673,59,"slotIndex"],[659,70,673,68],[659,72,673,70],[659,73,673,71],[660,8,674,6],[660,15,674,13],[660,20,674,18],[661,6,675,4],[662,4,676,2],[662,5,676,3],[662,46,676,5],[662,47,676,6,"combatState"],[662,58,676,17],[662,59,676,18,"abilityManager"],[662,73,676,32],[662,75,676,34,"combatState"],[662,86,676,45],[662,87,676,46,"enemies"],[662,94,676,53],[662,95,676,54],[662,96,676,55],[663,4,677,2],[663,8,677,2,"useEffect"],[663,14,677,11],[663,15,677,11,"useEffect"],[663,24,677,11],[663,26,677,12],[663,32,677,18],[664,6,678,4,"combatEngine"],[664,25,678,16],[664,26,678,16,"combatEngine"],[664,38,678,16],[664,39,678,17,"start"],[664,44,678,22],[664,45,678,23],[664,46,678,24],[666,6,680,4],[667,6,681,4],[668,6,682,4,"console"],[668,13,682,11],[668,14,682,12,"log"],[668,17,682,15],[668,18,682,16],[668,97,682,95],[668,98,682,96],[669,6,684,4],[669,13,684,11],[669,19,684,17],[670,8,685,6,"combatEngine"],[670,27,685,18],[670,28,685,18,"combatEngine"],[670,40,685,18],[670,41,685,19,"stop"],[670,45,685,23],[670,46,685,24],[670,47,685,25],[671,6,686,4],[671,7,686,5],[672,4,687,2],[672,5,687,3],[672,7,687,5],[672,9,687,7],[672,10,687,8],[674,4,689,2],[675,4,690,2],[675,8,690,8,"saveAbilityData"],[675,23,690,23],[675,26,690,26],[675,30,690,26,"useCallback"],[675,36,690,37],[675,37,690,37,"useCallback"],[675,48,690,37],[675,50,690,38],[675,56,690,44],[676,6,691,4],[676,10,691,8,"combatState"],[676,21,691,19],[676,22,691,20,"abilityManager"],[676,36,691,34],[676,38,691,36],[677,8,692,6],[677,12,692,12,"abilityData"],[677,23,692,23],[677,26,692,26,"combatState"],[677,37,692,37],[677,38,692,38,"abilityManager"],[677,52,692,52],[677,53,692,53,"getSaveData"],[677,64,692,64],[677,65,692,65],[677,66,692,66],[678,8,693,6,"console"],[678,15,693,13],[678,16,693,14,"log"],[678,19,693,17],[678,20,693,18],[678,61,693,59],[678,63,693,61,"abilityData"],[678,74,693,72],[678,75,693,73],[680,8,695,6],[681,8,696,6,"game"],[681,12,696,10],[681,13,696,11,"updateAbilityData"],[681,30,696,28],[681,31,696,29,"abilityData"],[681,42,696,40],[681,43,696,41],[682,6,697,4],[683,4,698,2],[683,5,698,3],[683,7,698,5],[683,8,698,6,"combatState"],[683,19,698,17],[683,20,698,18,"abilityManager"],[683,34,698,32],[683,36,698,34,"game"],[683,40,698,38],[683,41,698,39,"updateAbilityData"],[683,58,698,56],[683,59,698,57],[683,60,698,58],[685,4,700,2],[686,4,701,2],[688,4,703,2],[688,8,703,8,"contextValue"],[688,20,703,39],[688,23,703,42,"React"],[688,28,703,47],[688,29,703,47,"default"],[688,36,703,47],[688,37,703,48,"useMemo"],[688,44,703,55],[688,45,703,56],[688,52,703,63],[689,6,704,4,"combatState"],[689,17,704,15],[690,6,705,4,"projectiles"],[690,17,705,15],[691,6,706,4,"startCombat"],[691,17,706,15],[692,6,707,4,"stopCombat"],[692,16,707,14],[693,6,708,4,"equipAbility"],[693,18,708,16],[694,6,709,4,"handleEnemyKill"],[694,21,709,19],[695,6,710,4,"getDeck"],[695,13,710,11],[696,6,711,4,"getAvailableAbilities"],[696,27,711,25],[697,6,712,4,"upgradeAbility"],[697,20,712,18],[698,6,713,4,"spawnEnemy"],[698,16,713,14],[699,6,714,4,"spawnBoss"],[699,15,714,13],[700,6,715,4,"clearAllEnemies"],[700,21,715,19],[701,6,716,4,"clearSpecificEnemy"],[701,24,716,22],[702,6,717,4,"triggerLevelUpExplosion"],[702,29,717,27],[703,6,718,4,"findClosestEnemy"],[703,22,718,20],[704,6,719,4,"updateNinjaPosition"],[704,25,719,23],[705,6,720,4,"setManualControlActive"],[705,28,720,26],[706,6,721,4,"lastExplosionTime"],[706,23,721,21],[707,6,722,4,"useAbilityManually"],[707,24,722,22],[707,25,722,24],[708,4,723,2],[708,5,723,3],[708,6,723,4],[708,8,723,6],[709,4,724,4],[710,4,725,4],[711,4,726,4,"combatState"],[711,15,726,15],[711,17,727,4,"projectiles"],[711,28,727,15],[711,30,728,4,"lastExplosionTime"],[711,47,728,21],[712,4,729,4],[713,4,730,4,"combatState"],[713,15,730,15],[713,16,730,16,"abilityManager"],[713,30,730,30],[713,32,731,4,"combatState"],[713,43,731,15],[713,44,731,16,"enemies"],[713,51,731,23],[713,53,732,4,"useAbilityManually"],[713,71,732,22],[713,72,732,24],[714,4,732,24],[714,5,733,3],[714,6,733,4],[715,4,735,2],[715,24,736,4],[715,28,736,4,"_reactJsxDevRuntime"],[715,47,736,4],[715,48,736,4,"jsxDEV"],[715,54,736,4],[715,56,736,5,"CombatContext"],[715,69,736,18],[715,70,736,19,"Provider"],[715,78,736,27],[716,6,736,28,"value"],[716,11,736,33],[716,13,736,35,"contextValue"],[716,25,736,48],[717,6,736,48,"children"],[717,14,736,48],[717,16,737,7,"children"],[718,4,737,15],[719,6,737,15,"fileName"],[719,14,737,15],[719,16,737,15,"_jsxFileName"],[719,28,737,15],[720,6,737,15,"lineNumber"],[720,16,737,15],[721,6,737,15,"columnNumber"],[721,18,737,15],[722,4,737,15],[722,11,738,28],[722,12,738,29],[723,2,740,0],[723,3,740,1],[724,2,740,2,"_s4"],[724,5,740,2],[724,6,85,13,"CombatProvider"],[724,20,85,27],[725,4,85,27],[725,12,86,15,"useGame"],[725,24,86,22],[725,25,86,22,"useGame"],[725,32,86,22],[725,34,87,61,"useZone"],[725,46,87,68],[725,47,87,68,"useZone"],[725,54,87,68],[726,2,87,68],[727,2,87,68,"_c"],[727,4,87,68],[727,7,85,13,"CombatProvider"],[727,21,85,27],[728,2,85,27],[728,6,85,27,"_c"],[728,8,85,27],[729,2,85,27,"$RefreshReg$"],[729,14,85,27],[729,15,85,27,"_c"],[729,17,85,27],[730,0,85,27],[730,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC0E;CDM;8BEI;8DCsB;GDY;sCEQ;eCY;uBCI;ODO;KDe;GFC;6CKG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;mGMK,6BN;uDKI,+CL;kFOE,4CP;iDKK,yBL;4CQY,qBR;KDiB;0BUK;KVG;GLC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBfG;oDEI,sCF;Kea;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;exBG;KwBE;G3BC;yB4BG;G5B6B;wC6BG;mBvBE,uCuB;G7BQ;uC8BG;mBxBC,wCwB;G9BE;uB+BG;G/BE;kBgCE;GhCE;gCiCE;GjCE;yBkCE;GlCE;0BmCG;mB7BE;M6BG;GnCC;kCoCG;mB9BM;mBHU;2BCC;YDG;SGC;8C+BK;Q/BI;K8BM;GpCC;qBsCG;mBhC2B;MgCG;GtCG;oBuCG;mBjCE;MiCG;GvCC;6BwCG;mBlCC;mCmCE,6BnC;MkCC;GxCC;yC0CG;qBpCsB;OoCI;G1CQ;Y2CC;WCO;KDE;G3CC;sC6CG;G7CQ;wD8CK;I9CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}