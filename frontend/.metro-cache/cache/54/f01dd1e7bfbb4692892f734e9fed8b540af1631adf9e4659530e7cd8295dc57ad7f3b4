{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Use zone-based XP system instead of base XP to avoid conflicts\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n\n      // Use zone XP if available, otherwise fallback to ultra boosted base XP\n      var baseXpReward = enemy.zoneXP || 5000; // Use zone XP system, fallback to 5000 for non-zone enemies\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 5000; // SAME AS REGULAR KILL XP (5000 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Just update health - let batch system handle XP awarding\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 ENEMY KILLED: ${enemy.name} by ${projectile.abilityName}! Health: ${enemy.health} → 0 (XP will be awarded by batch system)`);\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1147,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1207,2],[27,6,1207,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1207,2],[27,42,1207,2,"require"],[27,49,1207,2],[27,50,1207,2,"_dependencyMap"],[27,64,1207,2],[28,2,1207,2],[28,6,1207,2,"_slicedToArray"],[28,20,1207,2],[28,23,1207,2,"_interopDefault"],[28,38,1207,2],[28,39,1207,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1207,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,61,173,59,"enemy"],[135,66,173,64],[135,67,173,65,"name"],[135,71,173,69],[135,80,173,78,"enemy"],[135,85,173,83],[135,86,173,84,"id"],[135,88,173,86],[135,91,173,89],[135,92,173,90],[136,6,174,4,"console"],[136,13,174,11],[136,14,174,12,"log"],[136,17,174,15],[136,18,174,16],[136,73,174,71],[136,75,174,73,"enemy"],[136,80,174,78],[136,81,174,79,"id"],[136,83,174,81],[136,84,174,82],[138,6,176,4],[139,6,177,4],[139,10,177,10,"xpMultiplier"],[139,22,177,22],[139,25,177,25,"game"],[139,29,177,29],[139,30,177,30,"gameState"],[139,39,177,39],[139,40,177,40,"subscriptionBenefits"],[139,60,177,60],[139,62,177,62,"xp_multiplier"],[139,75,177,75],[139,79,177,79],[139,82,177,82],[140,6,178,4],[140,10,178,10,"dropMultiplier"],[140,24,178,24],[140,27,178,27,"game"],[140,31,178,31],[140,32,178,32,"gameState"],[140,41,178,41],[140,42,178,42,"subscriptionBenefits"],[140,62,178,62],[140,64,178,64,"drop_multiplier"],[140,79,178,79],[140,83,178,83],[140,86,178,86],[142,6,180,4],[143,6,181,4],[143,10,181,10,"baseXpReward"],[143,22,181,22],[143,25,181,25,"enemy"],[143,30,181,30],[143,31,181,31,"zoneXP"],[143,37,181,37],[143,41,181,41],[143,45,181,45],[143,46,181,46],[143,47,181,47],[144,6,182,4],[144,10,182,10,"xpReward"],[144,18,182,18],[144,21,182,21,"Math"],[144,25,182,25],[144,26,182,26,"floor"],[144,31,182,31],[144,32,182,32,"baseXpReward"],[144,44,182,44],[144,47,182,47,"xpMultiplier"],[144,59,182,59],[144,60,182,60],[145,6,183,4],[145,10,183,10,"goldReward"],[145,20,183,20],[145,23,183,23,"Math"],[145,27,183,27],[145,28,183,28,"floor"],[145,33,183,33],[145,34,183,34],[145,39,183,39],[145,42,183,42,"dropMultiplier"],[145,56,183,56],[145,57,183,57],[145,58,183,58],[145,59,183,59],[147,6,185,4,"console"],[147,13,185,11],[147,14,185,12,"log"],[147,17,185,15],[147,18,185,16],[147,48,185,46,"xpReward"],[147,56,185,54],[147,67,185,65,"goldReward"],[147,77,185,75],[147,93,185,91],[147,94,185,92],[148,6,186,4,"console"],[148,13,186,11],[148,14,186,12,"log"],[148,17,186,15],[148,18,186,16],[148,60,186,58,"xpMultiplier"],[148,72,186,70],[148,94,186,92,"dropMultiplier"],[148,108,186,106],[148,110,186,108],[148,111,186,109],[149,6,187,4,"console"],[149,13,187,11],[149,14,187,12,"log"],[149,17,187,15],[149,18,187,16],[149,54,187,52,"baseXpReward"],[149,66,187,64],[149,81,187,79,"xpReward"],[149,89,187,87],[149,91,187,89],[149,92,187,90],[150,6,188,4,"console"],[150,13,188,11],[150,14,188,12,"log"],[150,17,188,15],[150,18,188,16],[150,58,188,56],[150,60,188,58,"JSON"],[150,64,188,62],[150,65,188,63,"stringify"],[150,74,188,72],[150,75,188,73,"game"],[150,79,188,77],[150,80,188,78,"gameState"],[150,89,188,87],[150,90,188,88,"subscriptionBenefits"],[150,110,188,108],[150,111,188,109],[150,112,188,110],[151,6,189,4,"console"],[151,13,189,11],[151,14,189,12,"log"],[151,17,189,15],[151,18,189,16],[151,49,189,47,"Platform"],[151,61,189,55],[151,62,189,55,"Platform"],[151,70,189,55],[151,71,189,56,"OS"],[151,73,189,58],[151,84,189,69,"Date"],[151,88,189,73],[151,89,189,74,"now"],[151,92,189,77],[151,93,189,78],[151,94,189,79],[151,96,189,81],[151,97,189,82],[153,6,191,4],[154,6,192,4],[155,6,193,4,"setTimeout"],[155,16,193,14],[155,17,193,15],[155,23,193,21],[156,8,194,6,"console"],[156,15,194,13],[156,16,194,14,"log"],[156,19,194,17],[156,20,194,18],[156,78,194,76],[156,79,194,77],[158,8,196,6],[159,8,197,6,"game"],[159,12,197,10],[159,13,197,11,"updateNinja"],[159,24,197,22],[159,25,197,24,"prev"],[159,29,197,28],[159,33,197,33],[160,10,198,8,"console"],[160,17,198,15],[160,18,198,16,"log"],[160,21,198,19],[160,22,198,20],[160,54,198,52,"prev"],[160,58,198,56],[160,59,198,57,"experience"],[160,69,198,67],[160,81,198,79,"prev"],[160,85,198,83],[160,86,198,84,"experience"],[160,96,198,94],[160,99,198,97,"xpReward"],[160,107,198,105],[160,109,198,107],[160,110,198,108],[161,10,199,8,"console"],[161,17,199,15],[161,18,199,16,"log"],[161,21,199,19],[161,22,199,20],[161,56,199,54,"prev"],[161,60,199,58],[161,61,199,59,"gold"],[161,65,199,63],[161,77,199,75,"prev"],[161,81,199,79],[161,82,199,80,"gold"],[161,86,199,84],[161,89,199,87,"goldReward"],[161,99,199,97],[161,101,199,99],[161,102,199,100],[162,10,200,8],[162,17,200,15],[163,12,201,10,"experience"],[163,22,201,20],[163,24,201,22,"prev"],[163,28,201,26],[163,29,201,27,"experience"],[163,39,201,37],[163,42,201,40,"xpReward"],[163,50,201,48],[164,12,202,10,"gold"],[164,16,202,14],[164,18,202,16,"prev"],[164,22,202,20],[164,23,202,21,"gold"],[164,27,202,25],[164,30,202,28,"goldReward"],[165,10,203,8],[165,11,203,9],[166,8,204,6],[166,9,204,7],[166,10,204,8],[168,8,206,6],[169,8,207,6],[169,12,207,12,"zoneEnemy"],[169,21,207,21],[169,24,207,24],[170,10,208,8,"id"],[170,12,208,10],[170,14,208,12,"enemy"],[170,19,208,17],[170,20,208,18,"id"],[170,22,208,20],[171,10,209,8,"typeId"],[171,16,209,14],[171,18,209,16,"enemy"],[171,23,209,21],[171,24,209,22,"zoneTypeId"],[171,34,209,32],[171,38,209,36],[171,48,209,46],[172,10,209,48],[173,10,210,8,"name"],[173,14,210,12],[173,16,210,14,"enemy"],[173,21,210,19],[173,22,210,20,"name"],[173,26,210,24],[174,10,211,8,"icon"],[174,14,211,12],[174,16,211,14],[174,20,211,18],[175,10,211,20],[176,10,212,8,"hp"],[176,12,212,10],[176,14,212,12],[176,15,212,13],[177,10,212,15],[178,10,213,8,"maxHP"],[178,15,213,13],[178,17,213,15,"enemy"],[178,22,213,20],[178,23,213,21,"maxHealth"],[178,32,213,30],[179,10,214,8,"attack"],[179,16,214,14],[179,18,214,16,"enemy"],[179,23,214,21],[179,24,214,22,"stats"],[179,29,214,27],[179,30,214,28,"attack"],[179,36,214,34],[180,10,215,8,"xp"],[180,12,215,10],[180,14,215,12,"enemy"],[180,19,215,17],[180,20,215,18,"zoneXP"],[180,26,215,24],[180,30,215,28],[180,32,215,30],[181,10,215,32],[182,10,216,8,"position"],[182,18,216,16],[182,20,216,18,"enemy"],[182,25,216,23],[182,26,216,24,"position"],[183,8,217,6],[183,9,217,7],[184,8,219,6,"console"],[184,15,219,13],[184,16,219,14,"log"],[184,19,219,17],[184,20,219,18],[184,40,219,38,"zoneEnemy"],[184,49,219,47],[184,50,219,48,"name"],[184,54,219,52],[184,59,219,57,"zoneEnemy"],[184,68,219,66],[184,69,219,67,"typeId"],[184,75,219,73],[184,113,219,111],[184,114,219,112],[185,8,220,6,"recordEnemyKill"],[185,23,220,21],[185,24,220,22,"zoneEnemy"],[185,33,220,31],[185,34,220,32],[186,6,221,4],[186,7,221,5],[186,9,221,7],[186,10,221,8],[186,11,221,9],[186,12,221,10],[186,13,221,11],[187,4,222,2],[187,5,222,3],[187,7,222,5],[187,8,222,6,"game"],[187,12,222,10],[187,13,222,11,"updateNinja"],[187,24,222,22],[187,26,222,24,"recordEnemyKill"],[187,41,222,39],[187,42,222,40],[187,43,222,41],[189,4,224,2],[190,4,225,2],[190,8,225,8,"handleCombatTick"],[190,24,225,24],[190,27,225,27,"React"],[190,32,225,32],[190,33,225,32,"default"],[190,40,225,32],[190,41,225,33,"useCallback"],[190,52,225,44],[190,53,225,45],[190,59,225,51],[191,6,225,51],[191,10,225,51,"_s2"],[191,13,225,51],[191,16,225,51,"$RefreshSig$"],[191,28,225,51],[192,6,226,4,"console"],[192,13,226,11],[192,14,226,12,"log"],[192,17,226,15],[192,18,226,16],[192,87,226,85],[192,88,226,86],[193,6,227,4,"console"],[193,13,227,11],[193,14,227,12,"log"],[193,17,227,15],[193,18,227,16],[193,65,227,63,"isManualControlActive"],[193,86,227,84],[193,99,227,97,"game"],[193,103,227,101],[193,104,227,102,"gameState"],[193,113,227,111],[193,114,227,112,"isAlive"],[193,121,227,119],[193,123,227,121],[193,124,227,122],[194,6,229,4],[194,10,229,8,"enemiesToKill"],[194,23,229,36],[194,26,229,39],[194,28,229,41],[194,29,229,42],[194,30,229,43],[196,6,231,4,"_s2"],[196,9,231,4],[196,10,231,4,"setCombatState"],[196,24,231,18],[196,25,231,18,"_s2"],[196,28,231,18],[196,29,231,19,"prev"],[196,33,231,23],[196,37,231,27],[197,8,231,27,"_s2"],[197,11,231,27],[198,8,232,6],[198,12,232,12,"newTick"],[198,19,232,19],[198,22,232,22,"combatEngine"],[198,41,232,34],[198,42,232,34,"combatEngine"],[198,54,232,34],[198,55,232,35,"getCurrentTick"],[198,69,232,49],[198,70,232,50],[198,71,232,51],[199,8,233,6],[199,12,233,12,"newState"],[199,20,233,20],[199,23,233,23],[200,10,233,25],[200,13,233,28,"prev"],[200,17,233,32],[201,10,233,34,"currentTick"],[201,21,233,45],[201,23,233,47,"newTick"],[202,8,233,55],[202,9,233,56],[203,8,235,6],[203,12,235,10],[203,13,235,11,"newState"],[203,21,235,19],[203,22,235,20,"isInCombat"],[203,32,235,30],[203,34,235,32],[203,41,235,39,"newState"],[203,49,235,47],[205,8,237,6],[206,8,238,6,"newState"],[206,16,238,14],[206,17,238,15,"abilityManager"],[206,31,238,29],[206,32,238,30,"updateCooldowns"],[206,47,238,45],[206,48,238,46,"newTick"],[206,55,238,53],[206,56,238,54],[208,8,240,6],[209,8,241,6],[209,12,241,12,"effectResults"],[209,25,241,25],[209,28,241,28,"newState"],[209,36,241,36],[209,37,241,37,"statusEffects"],[209,50,241,50],[209,51,241,51,"processTick"],[209,62,241,62],[209,63,241,63,"newTick"],[209,70,241,70],[209,71,241,71],[211,8,243,6],[212,8,244,6,"effectResults"],[212,21,244,19],[212,22,244,20,"forEach"],[212,29,244,27],[212,30,244,28],[212,31,244,29,"results"],[212,38,244,36],[212,40,244,38,"entityId"],[212,48,244,46],[212,53,244,51],[213,10,245,8],[213,14,245,14,"enemyIndex"],[213,24,245,24],[213,27,245,27,"newState"],[213,35,245,35],[213,36,245,36,"enemies"],[213,43,245,43],[213,44,245,44,"findIndex"],[213,53,245,53],[213,54,245,54,"e"],[213,55,245,55],[213,59,245,59,"e"],[213,60,245,60],[213,61,245,61,"id"],[213,63,245,63],[213,68,245,68,"entityId"],[213,76,245,76],[213,77,245,77],[214,10,246,8],[214,14,246,12,"enemyIndex"],[214,24,246,22],[214,28,246,26],[214,29,246,27],[214,31,246,29],[215,12,247,10,"results"],[215,19,247,17],[215,20,247,18,"forEach"],[215,27,247,25],[215,28,247,26,"result"],[215,34,247,32],[215,38,247,36],[216,14,248,12,"newState"],[216,22,248,20],[216,23,248,21,"enemies"],[216,30,248,28],[216,31,248,29,"enemyIndex"],[216,41,248,39],[216,42,248,40],[216,43,248,41,"health"],[216,49,248,47],[216,53,248,51,"result"],[216,59,248,57],[216,60,248,58,"damage"],[216,66,248,64],[217,14,249,12,"newState"],[217,22,249,20],[217,23,249,21,"enemies"],[217,30,249,28],[217,31,249,29,"enemyIndex"],[217,41,249,39],[217,42,249,40],[217,43,249,41,"lastDamaged"],[217,54,249,52],[217,57,249,55,"newTick"],[217,64,249,62],[218,12,250,10],[218,13,250,11],[218,14,250,12],[219,10,251,8],[220,8,252,6],[220,9,252,7],[220,10,252,8],[222,8,254,6],[223,8,255,6],[224,8,256,6],[224,12,256,10,"newState"],[224,20,256,18],[224,21,256,19,"playerStats"],[224,32,256,30],[224,36,256,34,"game"],[224,40,256,38],[224,41,256,39,"gameState"],[224,50,256,48],[224,51,256,49,"ninja"],[224,56,256,54],[224,58,256,56],[225,10,257,8],[225,14,257,14,"effectiveStats"],[225,28,257,28],[225,31,257,31,"game"],[225,35,257,35],[225,36,257,36,"getEffectiveStats"],[225,53,257,53],[225,54,257,54],[225,55,257,55],[227,10,259,8],[228,10,260,8],[228,14,260,12,"newState"],[228,22,260,20],[228,23,260,21,"playerStats"],[228,34,260,32],[228,35,260,33,"attack"],[228,41,260,39],[228,46,260,44,"effectiveStats"],[228,60,260,58],[228,61,260,59,"attack"],[228,67,260,65],[228,71,261,12,"newState"],[228,79,261,20],[228,80,261,21,"playerStats"],[228,91,261,32],[228,92,261,33,"defense"],[228,99,261,40],[228,104,261,45,"effectiveStats"],[228,118,261,59],[228,119,261,60,"defense"],[228,126,261,67],[228,130,262,12,"newState"],[228,138,262,20],[228,139,262,21,"playerStats"],[228,150,262,32],[228,151,262,33,"maxHealth"],[228,160,262,42],[228,165,262,47,"effectiveStats"],[228,179,262,61],[228,180,262,62,"maxHealth"],[228,189,262,71],[228,191,262,73],[229,12,264,10,"console"],[229,19,264,17],[229,20,264,18,"log"],[229,23,264,21],[229,24,264,22],[229,58,264,56,"newState"],[229,66,264,64],[229,67,264,65,"playerStats"],[229,78,264,76],[229,79,264,77,"attack"],[229,85,264,83],[229,91,264,89,"effectiveStats"],[229,105,264,103],[229,106,264,104,"attack"],[229,112,264,110],[229,125,264,123,"newState"],[229,133,264,131],[229,134,264,132,"playerStats"],[229,145,264,143],[229,146,264,144,"defense"],[229,153,264,151],[229,159,264,157,"effectiveStats"],[229,173,264,171],[229,174,264,172,"defense"],[229,181,264,179],[229,192,264,190,"newState"],[229,200,264,198],[229,201,264,199,"playerStats"],[229,212,264,210],[229,213,264,211,"maxHealth"],[229,222,264,220],[229,228,264,226,"effectiveStats"],[229,242,264,240],[229,243,264,241,"maxHealth"],[229,252,264,250],[229,254,264,252],[229,255,264,253],[231,12,266,10],[232,12,267,10],[232,16,267,14,"newHealth"],[232,25,267,23],[232,28,267,26,"newState"],[232,36,267,34],[232,37,267,35,"playerStats"],[232,48,267,46],[232,49,267,47,"health"],[232,55,267,53],[233,12,268,10],[233,16,268,14,"newState"],[233,24,268,22],[233,25,268,23,"playerStats"],[233,36,268,34],[233,37,268,35,"maxHealth"],[233,46,268,44],[233,51,268,49,"effectiveStats"],[233,65,268,63],[233,66,268,64,"maxHealth"],[233,75,268,73],[233,77,268,75],[234,14,269,12],[235,14,270,12],[235,18,270,16,"effectiveStats"],[235,32,270,30],[235,33,270,31,"maxHealth"],[235,42,270,40],[235,45,270,43,"newState"],[235,53,270,51],[235,54,270,52,"playerStats"],[235,65,270,63],[235,66,270,64,"maxHealth"],[235,75,270,73],[235,78,270,76],[235,81,270,79],[235,83,270,81],[236,16,271,14],[237,16,272,14],[237,20,272,20,"healthRatio"],[237,31,272,31],[237,34,272,34,"newState"],[237,42,272,42],[237,43,272,43,"playerStats"],[237,54,272,54],[237,55,272,55,"maxHealth"],[237,64,272,64],[237,67,272,67],[237,68,272,68],[237,71,273,16,"newState"],[237,79,273,24],[237,80,273,25,"playerStats"],[237,91,273,36],[237,92,273,37,"health"],[237,98,273,43],[237,101,273,46,"newState"],[237,109,273,54],[237,110,273,55,"playerStats"],[237,121,273,66],[237,122,273,67,"maxHealth"],[237,131,273,76],[237,134,273,79],[237,135,273,80],[238,16,274,14,"newHealth"],[238,25,274,23],[238,28,274,26,"Math"],[238,32,274,30],[238,33,274,31,"floor"],[238,38,274,36],[238,39,274,37,"effectiveStats"],[238,53,274,51],[238,54,274,52,"maxHealth"],[238,63,274,61],[238,66,274,64,"healthRatio"],[238,77,274,75],[238,78,274,76],[239,14,275,12],[239,15,275,13],[239,21,275,19],[239,25,275,23,"newState"],[239,33,275,31],[239,34,275,32,"playerStats"],[239,45,275,43],[239,46,275,44,"health"],[239,52,275,50],[239,55,275,53,"effectiveStats"],[239,69,275,67],[239,70,275,68,"maxHealth"],[239,79,275,77],[239,81,275,79],[240,16,276,14],[241,16,277,14,"newHealth"],[241,25,277,23],[241,28,277,26,"effectiveStats"],[241,42,277,40],[241,43,277,41,"maxHealth"],[241,52,277,50],[242,14,278,12],[243,14,279,12],[244,12,280,10],[245,12,282,10,"newState"],[245,20,282,18],[245,21,282,19,"playerStats"],[245,32,282,30],[245,35,282,33],[246,14,283,12],[246,17,283,15,"newState"],[246,25,283,23],[246,26,283,24,"playerStats"],[246,37,283,35],[247,14,284,12,"attack"],[247,20,284,18],[247,22,284,20,"effectiveStats"],[247,36,284,34],[247,37,284,35,"attack"],[247,43,284,41],[248,14,285,12,"defense"],[248,21,285,19],[248,23,285,21,"effectiveStats"],[248,37,285,35],[248,38,285,36,"defense"],[248,45,285,43],[249,14,286,12,"maxHealth"],[249,23,286,21],[249,25,286,23,"effectiveStats"],[249,39,286,37],[249,40,286,38,"maxHealth"],[249,49,286,47],[250,14,286,49],[251,14,287,12,"health"],[251,20,287,18],[251,22,287,20,"newHealth"],[251,31,287,29],[252,14,287,31],[253,14,288,12,"critChance"],[253,24,288,22],[253,26,288,24,"effectiveStats"],[253,40,288,38],[253,41,288,39,"critChance"],[253,51,288,49],[253,55,288,53,"newState"],[253,63,288,61],[253,64,288,62,"playerStats"],[253,75,288,73],[253,76,288,74,"critChance"],[253,86,288,84],[254,14,289,12,"critDamage"],[254,24,289,22],[254,26,289,24,"effectiveStats"],[254,40,289,38],[254,41,289,39,"critDamage"],[254,51,289,49],[254,55,289,53,"newState"],[254,63,289,61],[254,64,289,62,"playerStats"],[254,75,289,73],[254,76,289,74,"critDamage"],[254,86,289,84],[255,14,290,12,"cooldownReduction"],[255,31,290,29],[255,33,290,31,"effectiveStats"],[255,47,290,45],[255,48,290,46,"cooldownReduction"],[255,65,290,63],[255,69,290,67,"newState"],[255,77,290,75],[255,78,290,76,"playerStats"],[255,89,290,87],[255,90,290,88,"cooldownReduction"],[256,12,291,10],[256,13,291,11],[257,10,292,8],[259,10,294,8],[260,10,295,8],[260,14,295,12,"game"],[260,18,295,16],[260,19,295,17,"gameState"],[260,28,295,26],[260,29,295,27,"isAlive"],[260,36,295,34],[260,40,296,12,"game"],[260,44,296,16],[260,45,296,17,"gameState"],[260,54,296,26],[260,55,296,27,"ninja"],[260,60,296,32],[260,61,296,33,"health"],[260,67,296,39],[260,72,296,44,"effectiveStats"],[260,86,296,58],[260,87,296,59,"maxHealth"],[260,96,296,68],[260,100,297,12,"newState"],[260,108,297,20],[260,109,297,21,"playerStats"],[260,120,297,32],[260,121,297,33,"health"],[260,127,297,39],[260,130,297,42,"effectiveStats"],[260,144,297,56],[260,145,297,57,"maxHealth"],[260,154,297,66],[260,157,297,69],[260,160,297,72],[260,162,297,74],[261,12,298,10,"console"],[261,19,298,17],[261,20,298,18,"log"],[261,23,298,21],[261,24,298,22],[261,58,298,56,"newState"],[261,66,298,64],[261,67,298,65,"playerStats"],[261,78,298,76],[261,79,298,77,"health"],[261,85,298,83],[261,91,298,89,"game"],[261,95,298,93],[261,96,298,94,"gameState"],[261,105,298,103],[261,106,298,104,"ninja"],[261,111,298,109],[261,112,298,110,"health"],[261,118,298,116],[261,139,298,137],[261,140,298,138],[262,12,299,10,"newState"],[262,20,299,18],[262,21,299,19,"playerStats"],[262,32,299,30],[262,33,299,31,"health"],[262,39,299,37],[262,42,299,40,"game"],[262,46,299,44],[262,47,299,45,"gameState"],[262,56,299,54],[262,57,299,55,"ninja"],[262,62,299,60],[262,63,299,61,"health"],[262,69,299,67],[263,10,300,8],[264,8,301,6],[266,8,303,6],[267,8,304,6,"newState"],[267,16,304,14],[267,17,304,15,"enemies"],[267,24,304,22],[267,25,304,23,"forEach"],[267,32,304,30],[267,33,304,31,"enemy"],[267,38,304,36],[267,42,304,40],[268,10,305,8],[268,14,305,12],[268,15,305,13,"enemy"],[268,20,305,18],[268,21,305,19,"isBoss"],[268,27,305,25],[268,29,305,27],[269,12,305,29],[270,12,306,10],[271,12,307,10],[271,16,307,16,"MOVEMENT_SPEED"],[271,30,307,30],[271,33,307,33],[271,37,307,37],[271,38,307,38],[271,39,307,39],[272,12,308,10],[272,16,308,16,"SCREEN_WIDTH"],[272,28,308,28],[272,31,308,31],[272,34,308,34],[273,12,309,10],[273,16,309,16,"GAME_AREA_HEIGHT"],[273,32,309,32],[273,35,309,35],[273,38,309,38],[273,39,309,39],[273,40,309,40],[274,12,310,10],[274,16,310,16,"ENEMY_SIZE"],[274,26,310,26],[274,29,310,29],[274,31,310,31],[276,12,312,10],[277,12,313,10],[277,16,313,16,"playerX"],[277,23,313,23],[277,26,313,26,"currentNinjaPosition"],[277,46,313,46],[277,47,313,47,"x"],[277,48,313,48],[278,12,314,10],[278,16,314,16,"playerY"],[278,23,314,23],[278,26,314,26,"currentNinjaPosition"],[278,46,314,46],[278,47,314,47,"y"],[278,48,314,48],[280,12,316,10],[281,12,317,10],[281,16,317,16,"deltaX"],[281,22,317,22],[281,25,317,25,"playerX"],[281,32,317,32],[281,35,317,35,"enemy"],[281,40,317,40],[281,41,317,41,"position"],[281,49,317,49],[281,50,317,50,"x"],[281,51,317,51],[282,12,318,10],[282,16,318,16,"deltaY"],[282,22,318,22],[282,25,318,25,"playerY"],[282,32,318,32],[282,35,318,35,"enemy"],[282,40,318,40],[282,41,318,41,"position"],[282,49,318,49],[282,50,318,50,"y"],[282,51,318,51],[283,12,319,10],[283,16,319,16,"distance"],[283,24,319,24],[283,27,319,27,"Math"],[283,31,319,31],[283,32,319,32,"sqrt"],[283,36,319,36],[283,37,319,37,"deltaX"],[283,43,319,43],[283,46,319,46,"deltaX"],[283,52,319,52],[283,55,319,55,"deltaY"],[283,61,319,61],[283,64,319,64,"deltaY"],[283,70,319,70],[283,71,319,71],[285,12,321,10],[286,12,322,10],[286,16,322,16,"ATTACK_RANGE"],[286,28,322,28],[286,31,322,31],[286,33,322,33],[286,34,322,34],[286,35,322,35],[287,12,323,10],[287,16,323,16,"ATTACK_COOLDOWN"],[287,31,323,31],[287,34,323,34],[287,36,323,36],[287,37,323,37],[287,38,323,38],[289,12,325,10],[289,16,325,14,"distance"],[289,24,325,22],[289,28,325,26,"ATTACK_RANGE"],[289,40,325,38],[289,42,325,40],[290,14,326,12],[291,14,327,12],[291,18,327,16],[291,19,327,17,"enemy"],[291,24,327,22],[291,25,327,23,"lastAttackTick"],[291,39,327,37],[291,41,327,39,"enemy"],[291,46,327,44],[291,47,327,45,"lastAttackTick"],[291,61,327,59],[291,64,327,62],[291,65,327,63],[292,14,329,12],[292,18,329,16,"newState"],[292,26,329,24],[292,27,329,25,"currentTick"],[292,38,329,36],[292,41,329,39,"enemy"],[292,46,329,44],[292,47,329,45,"lastAttackTick"],[292,61,329,59],[292,65,329,63,"ATTACK_COOLDOWN"],[292,80,329,78],[292,82,329,80],[293,16,330,14],[294,16,331,14],[294,20,331,18],[294,21,331,19,"game"],[294,25,331,23],[294,26,331,24,"gameState"],[294,35,331,33],[294,36,331,34,"isAlive"],[294,43,331,41],[294,45,331,43],[295,18,332,16,"console"],[295,25,332,23],[295,26,332,24,"log"],[295,29,332,27],[295,30,332,28],[295,49,332,47,"enemy"],[295,54,332,52],[295,55,332,53,"name"],[295,59,332,57],[295,93,332,91],[295,94,332,92],[296,18,333,16],[297,18,334,16,"enemy"],[297,23,334,21],[297,24,334,22,"lastAttackTick"],[297,38,334,36],[297,41,334,39,"newState"],[297,49,334,47],[297,50,334,48,"currentTick"],[297,61,334,59],[298,16,335,14],[298,17,335,15],[298,23,335,21],[299,18,336,16],[300,18,337,16],[300,22,337,22,"isPlayerInvincible"],[300,40,337,40],[300,43,337,43,"game"],[300,47,337,47],[300,48,337,48,"gameState"],[300,57,337,57],[300,58,337,58,"isInvincible"],[300,70,337,70],[300,74,338,41,"game"],[300,78,338,45],[300,79,338,46,"gameState"],[300,88,338,55],[300,89,338,56,"invincibilityEndTime"],[300,109,338,76],[300,113,339,41,"Date"],[300,117,339,45],[300,118,339,46,"now"],[300,121,339,49],[300,122,339,50],[300,123,339,51],[300,126,339,54,"game"],[300,130,339,58],[300,131,339,59,"gameState"],[300,140,339,68],[300,141,339,69,"invincibilityEndTime"],[300,161,339,89],[301,18,341,16],[301,22,341,20,"isPlayerInvincible"],[301,40,341,38],[301,42,341,40],[302,20,342,18,"console"],[302,27,342,25],[302,28,342,26,"log"],[302,31,342,29],[302,32,342,30],[302,51,342,49,"enemy"],[302,56,342,54],[302,57,342,55,"name"],[302,61,342,59],[302,101,342,99],[302,102,342,100],[303,20,343,18],[304,20,344,18,"enemy"],[304,25,344,23],[304,26,344,24,"lastAttackTick"],[304,40,344,38],[304,43,344,41,"newState"],[304,51,344,49],[304,52,344,50,"currentTick"],[304,63,344,61],[305,18,345,16],[305,19,345,17],[305,25,345,23],[306,20,346,16],[307,20,347,16],[307,24,347,22,"baseAttack"],[307,34,347,32],[307,37,347,35,"enemy"],[307,42,347,40],[307,43,347,41,"stats"],[307,48,347,46],[307,49,347,47,"attack"],[307,55,347,53],[307,58,347,56],[307,61,347,59],[307,62,347,60],[307,63,347,61],[308,20,348,16],[308,24,348,22,"attackDamage"],[308,36,348,34],[308,39,348,37,"Math"],[308,43,348,41],[308,44,348,42,"floor"],[308,49,348,47],[308,50,348,48,"baseAttack"],[308,60,348,58],[308,64,348,62],[308,67,348,65],[308,70,348,68,"Math"],[308,74,348,72],[308,75,348,73,"random"],[308,81,348,79],[308,82,348,80],[308,83,348,81],[308,86,348,84],[308,89,348,87],[308,90,348,88],[308,91,348,89],[308,92,348,90],[308,93,348,91],[309,20,349,16],[309,24,349,22,"playerDefense"],[309,37,349,35],[309,40,349,38,"newState"],[309,48,349,46],[309,49,349,47,"playerStats"],[309,60,349,58],[309,61,349,59,"defense"],[309,68,349,66],[310,20,350,16],[310,24,350,22,"finalDamage"],[310,35,350,33],[310,38,350,36,"Math"],[310,42,350,40],[310,43,350,41,"max"],[310,46,350,44],[310,47,350,45],[310,48,350,46],[310,50,350,48,"attackDamage"],[310,62,350,60],[310,65,350,63,"Math"],[310,69,350,67],[310,70,350,68,"floor"],[310,75,350,73],[310,76,350,74,"playerDefense"],[310,89,350,87],[310,92,350,90],[310,95,350,93],[310,96,350,94],[310,97,350,95],[310,98,350,96],[310,99,350,97],[312,20,352,16,"console"],[312,27,352,23],[312,28,352,24,"log"],[312,31,352,27],[312,32,352,28],[312,53,352,49,"enemy"],[312,58,352,54],[312,59,352,55,"name"],[312,63,352,59],[312,86,352,82,"finalDamage"],[312,97,352,93],[312,109,352,105,"attackDamage"],[312,121,352,117],[312,132,352,128,"Math"],[312,136,352,132],[312,137,352,133,"floor"],[312,142,352,138],[312,143,352,139,"playerDefense"],[312,156,352,152],[312,159,352,155],[312,162,352,158],[312,163,352,159],[312,184,352,180],[312,185,352,181],[314,20,354,16],[315,20,355,16],[315,24,355,22,"newPlayerHealth"],[315,39,355,37],[315,42,355,40,"Math"],[315,46,355,44],[315,47,355,45,"max"],[315,50,355,48],[315,51,355,49],[315,52,355,50],[315,54,355,52,"newState"],[315,62,355,60],[315,63,355,61,"playerStats"],[315,74,355,72],[315,75,355,73,"health"],[315,81,355,79],[315,84,355,82,"finalDamage"],[315,95,355,93],[315,96,355,94],[316,20,356,16,"newState"],[316,28,356,24],[316,29,356,25,"playerStats"],[316,40,356,36],[316,41,356,37,"health"],[316,47,356,43],[316,50,356,46,"newPlayerHealth"],[316,65,356,61],[317,20,358,16,"console"],[317,27,358,23],[317,28,358,24,"log"],[317,31,358,27],[317,32,358,28],[317,53,358,49,"newState"],[317,61,358,57],[317,62,358,58,"playerStats"],[317,73,358,69],[317,74,358,70,"health"],[317,80,358,76],[317,84,358,80,"newState"],[317,92,358,88],[317,93,358,89,"playerStats"],[317,104,358,100],[317,105,358,101,"maxHealth"],[317,114,358,110],[317,124,358,120,"finalDamage"],[317,135,358,131],[317,145,358,141],[317,146,358,142],[319,20,360,16],[320,20,361,16,"enemy"],[320,25,361,21],[320,26,361,22,"lastAttackTick"],[320,40,361,36],[320,43,361,39,"newState"],[320,51,361,47],[320,52,361,48,"currentTick"],[320,63,361,59],[322,20,363,16],[323,20,364,16],[323,24,364,20,"newPlayerHealth"],[323,39,364,35],[323,43,364,39],[323,44,364,40],[323,46,364,42],[324,22,365,18,"console"],[324,29,365,25],[324,30,365,26,"log"],[324,33,365,29],[324,34,365,30],[324,84,365,80],[324,85,365,81],[325,22,366,18],[326,22,367,18,"setTimeout"],[326,32,367,28],[326,33,367,29],[326,39,367,35],[327,24,368,20],[328,24,369,20,"game"],[328,28,369,24],[328,29,369,25,"updateGameState"],[328,44,369,40],[328,45,369,41],[329,26,369,43,"isAlive"],[329,33,369,50],[329,35,369,52],[330,24,369,58],[330,25,369,59],[330,26,369,60],[331,22,370,18],[331,23,370,19],[331,25,370,21],[331,28,370,24],[331,29,370,25],[332,20,371,16],[333,18,372,16],[334,16,373,14],[335,14,374,12],[336,12,375,10],[336,13,375,11],[336,19,375,17],[337,14,376,12],[338,14,377,12],[339,14,378,12],[339,18,378,16,"distance"],[339,26,378,24],[339,29,378,27],[339,31,378,29],[339,33,378,31],[340,16,379,14],[341,16,380,14],[341,20,380,20,"normalizedX"],[341,31,380,31],[341,34,380,34,"deltaX"],[341,40,380,40],[341,43,380,43,"distance"],[341,51,380,51],[342,16,381,14],[342,20,381,20,"normalizedY"],[342,31,381,31],[342,34,381,34,"deltaY"],[342,40,381,40],[342,43,381,43,"distance"],[342,51,381,51],[344,16,383,14],[345,16,384,14],[345,20,384,20,"randomFactor"],[345,32,384,32],[345,35,384,35],[345,38,384,38],[345,39,384,39],[345,40,384,40],[346,16,385,14],[346,20,385,20,"finalX"],[346,26,385,26],[346,29,385,29,"normalizedX"],[346,40,385,40],[346,43,385,43],[346,44,385,44,"Math"],[346,48,385,48],[346,49,385,49,"random"],[346,55,385,55],[346,56,385,56],[346,57,385,57],[346,60,385,60],[346,63,385,63],[346,67,385,67,"randomFactor"],[346,79,385,79],[347,16,386,14],[347,20,386,20,"finalY"],[347,26,386,26],[347,29,386,29,"normalizedY"],[347,40,386,40],[347,43,386,43],[347,44,386,44,"Math"],[347,48,386,48],[347,49,386,49,"random"],[347,55,386,55],[347,56,386,56],[347,57,386,57],[347,60,386,60],[347,63,386,63],[347,67,386,67,"randomFactor"],[347,79,386,79],[349,16,388,14],[350,16,389,14],[350,20,389,18,"newX"],[350,24,389,22],[350,27,389,25,"enemy"],[350,32,389,30],[350,33,389,31,"position"],[350,41,389,39],[350,42,389,40,"x"],[350,43,389,41],[350,46,389,45,"finalX"],[350,52,389,51],[350,55,389,54,"MOVEMENT_SPEED"],[350,69,389,69],[351,16,390,14],[351,20,390,18,"newY"],[351,24,390,22],[351,27,390,25,"enemy"],[351,32,390,30],[351,33,390,31,"position"],[351,41,390,39],[351,42,390,40,"y"],[351,43,390,41],[351,46,390,45,"finalY"],[351,52,390,51],[351,55,390,54,"MOVEMENT_SPEED"],[351,69,390,69],[353,16,392,14],[354,16,393,14,"newX"],[354,20,393,18],[354,23,393,21,"Math"],[354,27,393,25],[354,28,393,26,"max"],[354,31,393,29],[354,32,393,30],[354,33,393,31],[354,35,393,33,"Math"],[354,39,393,37],[354,40,393,38,"min"],[354,43,393,41],[354,44,393,42,"SCREEN_WIDTH"],[354,56,393,54],[354,59,393,57,"ENEMY_SIZE"],[354,69,393,67],[354,71,393,69,"newX"],[354,75,393,73],[354,76,393,74],[354,77,393,75],[355,16,394,14,"newY"],[355,20,394,18],[355,23,394,21,"Math"],[355,27,394,25],[355,28,394,26,"max"],[355,31,394,29],[355,32,394,30],[355,33,394,31],[355,35,394,33,"Math"],[355,39,394,37],[355,40,394,38,"min"],[355,43,394,41],[355,44,394,42,"GAME_AREA_HEIGHT"],[355,60,394,58],[355,63,394,61,"ENEMY_SIZE"],[355,73,394,71],[355,75,394,73,"newY"],[355,79,394,77],[355,80,394,78],[355,81,394,79],[357,16,396,14],[358,16,397,14,"enemy"],[358,21,397,19],[358,22,397,20,"position"],[358,30,397,28],[358,31,397,29,"x"],[358,32,397,30],[358,35,397,33,"newX"],[358,39,397,37],[359,16,398,14,"enemy"],[359,21,398,19],[359,22,398,20,"position"],[359,30,398,28],[359,31,398,29,"y"],[359,32,398,30],[359,35,398,33,"newY"],[359,39,398,37],[360,14,399,12],[361,14,400,12],[362,12,401,10],[363,10,402,8],[364,8,403,6],[364,9,403,7],[364,10,403,8],[366,8,405,6],[367,8,406,6],[367,12,406,10,"newState"],[367,20,406,18],[367,21,406,19,"shadowClone"],[367,32,406,30],[367,34,406,32],[368,10,407,8],[369,10,408,8,"newState"],[369,18,408,16],[369,19,408,17,"shadowClone"],[369,30,408,28],[369,31,408,29,"remainingTicks"],[369,45,408,43],[369,47,408,45],[371,10,410,8],[372,10,411,8],[372,14,411,14,"cloneOffset"],[372,25,411,25],[372,28,411,28],[372,30,411,30],[372,31,411,31],[372,32,411,32],[373,10,412,8,"newState"],[373,18,412,16],[373,19,412,17,"shadowClone"],[373,30,412,28],[373,31,412,29,"position"],[373,39,412,37],[373,40,412,38,"x"],[373,41,412,39],[373,44,412,42,"currentNinjaPosition"],[373,64,412,62],[373,65,412,63,"x"],[373,66,412,64],[373,69,412,67,"cloneOffset"],[373,80,412,78],[374,10,413,8,"newState"],[374,18,413,16],[374,19,413,17,"shadowClone"],[374,30,413,28],[374,31,413,29,"position"],[374,39,413,37],[374,40,413,38,"y"],[374,41,413,39],[374,44,413,42,"currentNinjaPosition"],[374,64,413,62],[374,65,413,63,"y"],[374,66,413,64],[374,69,413,67],[374,71,413,69],[376,10,415,8],[377,10,416,8],[377,14,416,12,"newState"],[377,22,416,20],[377,23,416,21,"shadowClone"],[377,34,416,32],[377,35,416,33,"remainingTicks"],[377,49,416,47],[377,53,416,51],[377,54,416,52],[377,56,416,54],[378,12,417,10,"console"],[378,19,417,17],[378,20,417,18,"log"],[378,23,417,21],[378,24,417,22],[378,75,417,73],[378,76,417,74],[379,12,418,10,"newState"],[379,20,418,18],[379,21,418,19,"shadowClone"],[379,32,418,30],[379,35,418,33,"undefined"],[379,44,418,42],[380,10,419,8],[380,11,419,9],[380,17,419,15],[381,12,420,10],[382,12,421,10],[383,12,422,10],[383,16,422,16,"CLONE_ATTACK_INTERVAL"],[383,37,422,37],[383,40,422,40],[383,42,422,42],[384,12,423,10],[384,16,423,14,"newState"],[384,24,423,22],[384,25,423,23,"currentTick"],[384,36,423,34],[384,39,423,37,"CLONE_ATTACK_INTERVAL"],[384,60,423,58],[384,65,423,63],[384,66,423,64],[384,70,423,68,"newState"],[384,78,423,76],[384,79,423,77,"enemies"],[384,86,423,84],[384,87,423,85,"length"],[384,93,423,91],[384,96,423,94],[384,97,423,95],[384,99,423,97],[385,14,424,12,"console"],[385,21,424,19],[385,22,424,20,"log"],[385,25,424,23],[385,26,424,24],[385,83,424,81],[385,84,424,82],[387,14,426,12],[388,14,427,12],[388,18,427,18,"target"],[388,24,427,24],[388,27,427,27,"findClosestEnemyInternal"],[388,51,427,51],[388,52,427,52,"newState"],[388,60,427,60],[388,61,427,61,"enemies"],[388,68,427,68],[388,69,427,69],[389,14,428,12],[389,18,428,16,"target"],[389,24,428,22],[389,26,428,24],[390,16,429,14],[391,16,430,14],[391,20,430,20,"cloneDamage"],[391,31,430,31],[391,34,430,34,"Math"],[391,38,430,38],[391,39,430,39,"floor"],[391,44,430,44],[391,45,430,45,"newState"],[391,53,430,53],[391,54,430,54,"playerStats"],[391,65,430,65],[391,66,430,66,"attack"],[391,72,430,72],[391,75,430,75],[391,78,430,78],[391,79,430,79],[393,16,432,14],[394,16,433,14,"createProjectile"],[394,32,433,30],[394,33,433,31,"target"],[394,39,433,37],[394,41,433,39,"cloneDamage"],[394,52,433,50],[394,54,433,52,"newState"],[394,62,433,60],[394,63,433,61,"shadowClone"],[394,74,433,72],[394,75,433,73,"position"],[394,83,433,81],[394,85,433,83],[395,18,434,16,"id"],[395,20,434,18],[395,22,434,20],[395,43,434,41],[396,18,435,16,"name"],[396,22,435,20],[396,24,435,22],[396,45,435,43],[397,18,436,16,"icon"],[397,22,436,20],[397,24,436,22],[398,16,437,14],[398,17,437,15],[398,18,437,16],[399,14,438,12],[400,12,439,10],[401,10,440,8],[402,8,441,6],[404,8,443,6],[405,8,444,6],[406,8,445,6,"console"],[406,15,445,13],[406,16,445,14,"log"],[406,19,445,17],[406,20,445,18],[406,63,445,61,"isManualControlActive"],[406,84,445,82],[406,97,445,95,"game"],[406,101,445,99],[406,102,445,100,"gameState"],[406,111,445,109],[406,112,445,110,"isAlive"],[406,119,445,117],[406,121,445,119],[406,122,445,120],[407,8,446,6],[407,12,446,10],[407,13,446,11,"isManualControlActive"],[407,34,446,32],[407,38,446,36,"game"],[407,42,446,40],[407,43,446,41,"gameState"],[407,52,446,50],[407,53,446,51,"isAlive"],[407,60,446,58],[407,62,446,60],[408,10,447,8],[408,15,447,13],[408,19,447,17,"i"],[408,20,447,18],[408,23,447,21],[408,24,447,22],[408,26,447,24,"i"],[408,27,447,25],[408,30,447,28],[408,31,447,29],[408,33,447,31,"i"],[408,34,447,32],[408,36,447,34],[408,38,447,36],[409,12,448,10],[409,16,448,14,"newState"],[409,24,448,22],[409,25,448,23,"abilityManager"],[409,39,448,37],[409,40,448,38,"isAbilityReady"],[409,54,448,52],[409,55,448,53,"i"],[409,56,448,54],[409,57,448,55],[409,61,448,59,"newState"],[409,69,448,67],[409,70,448,68,"enemies"],[409,77,448,75],[409,78,448,76,"length"],[409,84,448,82],[409,87,448,85],[409,88,448,86],[409,90,448,88],[410,14,449,12],[410,18,449,16,"newState"],[410,26,449,24],[410,27,449,25,"abilityManager"],[410,41,449,39],[410,42,449,40,"useAbility"],[410,52,449,50],[410,53,449,51,"i"],[410,54,449,52],[410,56,449,54,"newTick"],[410,63,449,61],[410,64,449,62],[410,66,449,64],[411,16,450,14,"console"],[411,23,450,21],[411,24,450,22,"log"],[411,27,450,25],[411,28,450,26],[411,73,450,71,"i"],[411,74,450,72],[411,76,450,74],[411,77,450,75],[412,16,451,14,"castAbility"],[412,27,451,25],[412,28,451,26,"newState"],[412,36,451,34],[412,38,451,36,"i"],[412,39,451,37],[412,40,451,38],[413,14,452,12],[414,12,453,10],[415,10,454,8],[416,8,455,6],[418,8,457,6],[419,8,458,6],[419,12,458,12,"deadEnemies"],[419,23,458,23],[419,26,458,26,"newState"],[419,34,458,34],[419,35,458,35,"enemies"],[419,42,458,42],[419,43,458,43,"filter"],[419,49,458,49],[419,50,458,50,"enemy"],[419,55,458,55],[419,59,458,59,"enemy"],[419,64,458,64],[419,65,458,65,"health"],[419,71,458,71],[419,75,458,75],[419,76,458,76],[419,77,458,77],[420,8,459,6,"enemiesToKill"],[420,21,459,19],[420,24,459,22],[420,25,459,23],[420,28,459,26,"deadEnemies"],[420,39,459,37],[420,40,459,38],[420,41,459,39],[420,42,459,40],[422,8,461,6],[423,8,462,6],[423,12,462,10,"deadEnemies"],[423,23,462,21],[423,24,462,22,"length"],[423,30,462,28],[423,33,462,31],[423,34,462,32],[423,36,462,34],[424,10,463,8,"console"],[424,17,463,15],[424,18,463,16,"log"],[424,21,463,19],[424,22,463,20],[424,49,463,47,"deadEnemies"],[424,60,463,58],[424,61,463,59,"length"],[424,67,463,65],[424,83,463,81],[424,85,463,83,"deadEnemies"],[424,96,463,94],[424,97,463,95,"map"],[424,100,463,98],[424,101,463,99,"e"],[424,102,463,100],[424,106,463,104],[424,109,463,107,"e"],[424,110,463,108],[424,111,463,109,"id"],[424,113,463,111],[424,117,463,115,"e"],[424,118,463,116],[424,119,463,117,"health"],[424,125,463,123],[424,130,463,128],[424,131,463,129],[424,132,463,130],[425,8,464,6],[427,8,466,6],[428,8,467,6],[428,12,467,12,"lowHealthEnemies"],[428,28,467,28],[428,31,467,31,"newState"],[428,39,467,39],[428,40,467,40,"enemies"],[428,47,467,47],[428,48,467,48,"filter"],[428,54,467,54],[428,55,467,55,"enemy"],[428,60,467,60],[428,64,467,64,"enemy"],[428,69,467,69],[428,70,467,70,"health"],[428,76,467,76],[428,80,467,80],[428,82,467,82],[428,86,467,86,"enemy"],[428,91,467,91],[428,92,467,92,"health"],[428,98,467,98],[428,101,467,101],[428,102,467,102],[428,103,467,103],[429,8,468,6],[429,12,468,10,"lowHealthEnemies"],[429,28,468,26],[429,29,468,27,"length"],[429,35,468,33],[429,38,468,36],[429,39,468,37],[429,41,468,39],[430,10,469,8,"console"],[430,17,469,15],[430,18,469,16,"log"],[430,21,469,19],[430,22,469,20],[430,61,469,59],[430,63,469,61,"lowHealthEnemies"],[430,79,469,77],[430,80,469,78,"map"],[430,83,469,81],[430,84,469,82,"e"],[430,85,469,83],[430,89,469,87],[430,92,469,90,"e"],[430,93,469,91],[430,94,469,92,"id"],[430,96,469,94],[430,100,469,98,"e"],[430,101,469,99],[430,102,469,100,"health"],[430,108,469,106],[430,112,469,110,"e"],[430,113,469,111],[430,114,469,112,"maxHealth"],[430,123,469,121],[430,128,469,126],[430,129,469,127],[430,130,469,128],[431,8,470,6],[433,8,472,6],[434,8,473,6],[434,12,473,12,"beforeCount"],[434,23,473,23],[434,26,473,26,"newState"],[434,34,473,34],[434,35,473,35,"enemies"],[434,42,473,42],[434,43,473,43,"length"],[434,49,473,49],[435,8,474,6,"newState"],[435,16,474,14],[435,17,474,15,"enemies"],[435,24,474,22],[435,27,474,25,"newState"],[435,35,474,33],[435,36,474,34,"enemies"],[435,43,474,41],[435,44,474,42,"filter"],[435,50,474,48],[435,51,474,49,"enemy"],[435,56,474,54],[435,60,474,58,"enemy"],[435,65,474,63],[435,66,474,64,"health"],[435,72,474,70],[435,75,474,73],[435,76,474,74],[435,77,474,75],[436,8,475,6],[436,12,475,12,"afterCount"],[436,22,475,22],[436,25,475,25,"newState"],[436,33,475,33],[436,34,475,34,"enemies"],[436,41,475,41],[436,42,475,42,"length"],[436,48,475,48],[437,8,477,6],[437,12,477,10,"beforeCount"],[437,23,477,21],[437,28,477,26,"afterCount"],[437,38,477,36],[437,40,477,38],[438,10,478,8,"console"],[438,17,478,15],[438,18,478,16,"log"],[438,21,478,19],[438,22,478,20],[438,52,478,50,"beforeCount"],[438,63,478,61],[438,66,478,64,"afterCount"],[438,76,478,74],[438,102,478,100],[438,103,478,101],[439,8,479,6],[441,8,481,6],[442,8,482,6],[443,8,483,6],[443,12,483,12,"MAX_ENEMIES"],[443,23,483,23],[443,26,483,26],[443,28,483,28],[443,29,483,29],[443,30,483,30],[444,8,484,6],[444,12,484,12,"MIN_SPAWN_DELAY"],[444,27,484,27],[444,30,484,30],[444,33,484,33],[444,34,484,34],[444,35,484,35],[445,8,485,6],[445,12,485,12,"now"],[445,15,485,15],[445,18,485,18,"Date"],[445,22,485,22],[445,23,485,23,"now"],[445,26,485,26],[445,27,485,27],[445,28,485,28],[446,8,486,6],[446,12,486,12,"hasBoss"],[446,19,486,19],[446,22,486,22,"newState"],[446,30,486,30],[446,31,486,31,"enemies"],[446,38,486,38],[446,39,486,39,"some"],[446,43,486,43],[446,44,486,44,"enemy"],[446,49,486,49],[446,53,486,53,"enemy"],[446,58,486,58],[446,59,486,59,"isBoss"],[446,65,486,65],[446,66,486,66],[448,8,488,6],[449,8,489,6],[449,12,489,10],[449,13,489,11,"newState"],[449,21,489,19],[449,22,489,20,"lastSpawnTime"],[449,35,489,33],[449,37,489,35],[450,10,490,8,"newState"],[450,18,490,16],[450,19,490,17,"lastSpawnTime"],[450,32,490,30],[450,35,490,33,"now"],[450,38,490,36],[451,8,491,6],[452,8,493,6,"console"],[452,15,493,13],[452,16,493,14,"log"],[452,19,493,17],[452,20,493,18],[452,53,493,51,"newState"],[452,61,493,59],[452,62,493,60,"enemies"],[452,69,493,67],[452,70,493,68,"length"],[452,76,493,74],[452,85,493,83,"MAX_ENEMIES"],[452,96,493,94],[452,109,493,107,"hasBoss"],[452,116,493,114],[452,118,493,116],[452,119,493,117],[454,8,495,6],[455,8,496,6],[455,12,496,10],[455,13,496,11,"hasBoss"],[455,20,496,18],[455,24,496,22,"newState"],[455,32,496,30],[455,33,496,31,"enemies"],[455,40,496,38],[455,41,496,39,"length"],[455,47,496,45],[455,50,496,48,"MAX_ENEMIES"],[455,61,496,59],[455,65,496,64,"now"],[455,68,496,67],[455,71,496,70,"newState"],[455,79,496,78],[455,80,496,79,"lastSpawnTime"],[455,93,496,92],[455,97,496,97,"MIN_SPAWN_DELAY"],[455,112,496,112],[455,114,496,114],[456,10,497,8,"console"],[456,17,497,15],[456,18,497,16,"log"],[456,21,497,19],[456,22,497,20],[456,43,497,41,"newState"],[456,51,497,49],[456,52,497,50,"enemies"],[456,59,497,57],[456,60,497,58,"length"],[456,66,497,64],[456,69,497,67],[456,70,497,68],[456,74,497,72,"MAX_ENEMIES"],[456,85,497,83],[456,87,497,85],[456,88,497,86],[457,10,498,8,"spawnTestEnemy"],[457,24,498,22],[457,25,498,23,"newState"],[457,33,498,31],[457,34,498,32],[458,10,499,8,"newState"],[458,18,499,16],[458,19,499,17,"lastSpawnTime"],[458,32,499,30],[458,35,499,33,"now"],[458,38,499,36],[459,8,500,6],[460,8,502,6],[460,15,502,13,"newState"],[460,23,502,21],[461,6,503,4],[461,7,503,5],[461,47,503,6],[463,6,505,4],[464,6,506,4,"console"],[464,13,506,11],[464,14,506,12,"log"],[464,17,506,15],[464,18,506,16],[464,50,506,48,"enemiesToKill"],[464,63,506,61],[464,64,506,62,"length"],[464,70,506,68],[464,101,506,99],[464,102,506,100],[465,6,508,4,"enemiesToKill"],[465,19,508,17],[465,20,508,18,"forEach"],[465,27,508,25],[465,28,508,26],[465,29,508,27,"enemy"],[465,34,508,32],[465,36,508,34,"index"],[465,41,508,39],[465,46,508,44],[466,8,509,6,"console"],[466,15,509,13],[466,16,509,14,"log"],[466,19,509,17],[466,20,509,18],[466,57,509,55,"index"],[466,62,509,60],[466,65,509,63],[466,66,509,64],[466,70,509,68,"enemiesToKill"],[466,83,509,81],[466,84,509,82,"length"],[466,90,509,88],[466,104,509,102,"enemy"],[466,109,509,107],[466,110,509,108,"id"],[466,112,509,110],[466,114,509,112],[466,115,509,113],[467,8,510,6,"handleEnemyKill"],[467,23,510,21],[467,24,510,22,"enemy"],[467,29,510,27],[467,30,510,28],[468,6,511,4],[468,7,511,5],[468,8,511,6],[469,4,512,2],[469,5,512,3],[469,7,512,5],[469,8,512,6,"handleEnemyKill"],[469,23,512,21],[469,24,512,22],[469,25,512,23],[469,26,512,24],[469,27,512,25],[471,4,514,2],[472,4,515,2],[472,8,515,8,"findClosestEnemyInternal"],[472,32,515,32],[472,35,515,36,"enemies"],[472,42,515,58],[472,46,515,83],[473,6,516,4],[473,10,516,8,"enemies"],[473,17,516,15],[473,18,516,16,"length"],[473,24,516,22],[473,29,516,27],[473,30,516,28],[473,32,516,30],[473,39,516,37],[473,43,516,41],[475,6,518,4],[476,6,519,4],[476,10,519,10,"SCREEN_WIDTH"],[476,22,519,22],[476,25,519,25],[476,28,519,28],[477,6,520,4],[477,10,520,10,"GAME_AREA_HEIGHT"],[477,26,520,26],[477,29,520,29],[477,32,520,32],[477,35,520,35],[477,38,520,38],[477,39,520,39],[477,40,520,40],[478,6,521,4],[478,10,521,10,"ninjaX"],[478,16,521,16],[478,19,521,19,"SCREEN_WIDTH"],[478,31,521,31],[478,34,521,34],[478,35,521,35],[479,6,522,4],[479,10,522,10,"ninjaY"],[479,16,522,16],[479,19,522,19,"GAME_AREA_HEIGHT"],[479,35,522,35],[479,38,522,38],[479,39,522,39],[480,6,524,4],[480,10,524,8,"closestEnemy"],[480,22,524,20],[480,25,524,23,"enemies"],[480,32,524,30],[480,33,524,31],[480,34,524,32],[480,35,524,33],[481,6,525,4],[481,10,525,8,"closestDistance"],[481,25,525,23],[481,28,525,26,"Infinity"],[481,36,525,34],[482,6,527,4,"enemies"],[482,13,527,11],[482,14,527,12,"forEach"],[482,21,527,19],[482,22,527,20,"enemy"],[482,27,527,25],[482,31,527,29],[483,8,528,6],[483,12,528,12,"distance"],[483,20,528,20],[483,23,528,23,"Math"],[483,27,528,27],[483,28,528,28,"sqrt"],[483,32,528,32],[483,33,529,8,"Math"],[483,37,529,12],[483,38,529,13,"pow"],[483,41,529,16],[483,42,529,17,"enemy"],[483,47,529,22],[483,48,529,23,"position"],[483,56,529,31],[483,57,529,32,"x"],[483,58,529,33],[483,61,529,36,"ninjaX"],[483,67,529,42],[483,69,529,44],[483,70,529,45],[483,71,529,46],[483,74,530,8,"Math"],[483,78,530,12],[483,79,530,13,"pow"],[483,82,530,16],[483,83,530,17,"enemy"],[483,88,530,22],[483,89,530,23,"position"],[483,97,530,31],[483,98,530,32,"y"],[483,99,530,33],[483,102,530,36,"ninjaY"],[483,108,530,42],[483,110,530,44],[483,111,530,45],[483,112,531,6],[483,113,531,7],[484,8,533,6],[484,12,533,10,"distance"],[484,20,533,18],[484,23,533,21,"closestDistance"],[484,38,533,36],[484,40,533,38],[485,10,534,8,"closestDistance"],[485,25,534,23],[485,28,534,26,"distance"],[485,36,534,34],[486,10,535,8,"closestEnemy"],[486,22,535,20],[486,25,535,23,"enemy"],[486,30,535,28],[487,8,536,6],[488,6,537,4],[488,7,537,5],[488,8,537,6],[489,6,539,4,"console"],[489,13,539,11],[489,14,539,12,"log"],[489,17,539,15],[489,18,539,16],[489,60,539,58,"closestDistance"],[489,75,539,73],[489,76,539,74,"toFixed"],[489,83,539,81],[489,84,539,82],[489,85,539,83],[489,86,539,84],[489,88,539,86],[489,89,539,87],[490,6,540,4],[490,13,540,11,"closestEnemy"],[490,25,540,23],[491,4,541,2],[491,5,541,3],[493,4,543,2],[494,4,544,2],[494,8,544,8,"findClosestEnemy"],[494,24,544,24],[494,27,544,27,"findClosestEnemy"],[494,28,544,27],[494,33,544,53],[495,6,545,4],[495,13,545,11,"findClosestEnemyInternal"],[495,37,545,35],[495,38,545,36,"combatState"],[495,49,545,47],[495,50,545,48,"enemies"],[495,57,545,55],[495,58,545,56],[496,4,546,2],[496,5,546,3],[498,4,548,2],[499,4,549,2],[499,8,549,2,"_useState7"],[499,18,549,2],[499,21,549,58],[499,25,549,58,"useState"],[499,31,549,66],[499,32,549,66,"useState"],[499,40,549,66],[499,42,549,91],[500,8,549,93,"x"],[500,9,549,94],[500,11,549,96],[500,12,549,97],[501,8,549,99,"y"],[501,9,549,100],[501,11,549,102],[502,6,549,104],[502,7,549,105],[502,8,549,106],[503,6,549,106,"_useState8"],[503,16,549,106],[503,23,549,106,"_slicedToArray"],[503,37,549,106],[503,38,549,106,"default"],[503,45,549,106],[503,47,549,106,"_useState7"],[503,57,549,106],[504,6,549,9,"currentNinjaPosition"],[504,26,549,29],[504,29,549,29,"_useState8"],[504,39,549,29],[505,6,549,31,"setCurrentNinjaPosition"],[505,29,549,54],[505,32,549,54,"_useState8"],[505,42,549,54],[506,4,550,2],[506,8,550,2,"_useState9"],[506,18,550,2],[506,21,550,60],[506,25,550,60,"useState"],[506,31,550,68],[506,32,550,68,"useState"],[506,40,550,68],[506,42,550,69],[506,47,550,74],[506,48,550,75],[507,6,550,75,"_useState0"],[507,16,550,75],[507,23,550,75,"_slicedToArray"],[507,37,550,75],[507,38,550,75,"default"],[507,45,550,75],[507,47,550,75,"_useState9"],[507,57,550,75],[508,6,550,9,"isManualControlActive"],[508,27,550,30],[508,30,550,30,"_useState0"],[508,40,550,30],[509,6,550,32,"setIsManualControlActive"],[509,30,550,56],[509,33,550,56,"_useState0"],[509,43,550,56],[511,4,552,2],[512,4,553,2],[512,8,553,8,"updateNinjaPosition"],[512,27,553,27],[512,30,553,30],[512,34,553,30,"useCallback"],[512,40,553,41],[512,41,553,41,"useCallback"],[512,52,553,41],[512,54,553,43,"newPosition"],[512,65,553,78],[512,69,553,83],[513,6,554,4,"setCurrentNinjaPosition"],[513,29,554,27],[513,30,554,28,"newPosition"],[513,41,554,39],[513,42,554,40],[514,4,555,2],[514,5,555,3],[514,7,555,5],[514,9,555,7],[514,10,555,8],[516,4,557,2],[517,4,558,2],[517,8,558,8,"setManualControlActive"],[517,30,558,30],[517,33,558,33],[517,37,558,33,"useCallback"],[517,43,558,44],[517,44,558,44,"useCallback"],[517,55,558,44],[517,57,558,46,"active"],[517,63,558,61],[517,67,558,66],[518,6,559,4,"setIsManualControlActive"],[518,30,559,28],[518,31,559,29,"active"],[518,37,559,35],[518,38,559,36],[519,6,560,4,"console"],[519,13,560,11],[519,14,560,12,"log"],[519,17,560,15],[519,18,560,16],[519,39,560,37,"active"],[519,45,560,43],[519,48,560,46],[519,59,560,57],[519,62,560,60],[519,75,560,73],[519,88,560,86,"active"],[519,94,560,92],[519,97,560,95],[519,105,560,103],[519,108,560,106],[519,117,560,115],[519,119,560,117],[519,120,560,118],[520,4,561,2],[520,5,561,3],[520,7,561,5],[520,9,561,7],[520,10,561,8],[522,4,563,2],[523,4,564,2],[523,8,564,8,"handleProjectileHit"],[523,27,564,27],[523,30,564,31,"projectile"],[523,40,564,59],[523,44,564,64],[524,6,565,4,"console"],[524,13,565,11],[524,14,565,12,"log"],[524,17,565,15],[524,18,565,16],[524,35,565,33,"projectile"],[524,45,565,43],[524,46,565,44,"id"],[524,48,565,46],[524,62,565,60,"projectile"],[524,72,565,70],[524,73,565,71,"targetEnemyId"],[524,86,565,84],[524,94,565,92,"projectile"],[524,104,565,102],[524,105,565,103,"damage"],[524,111,565,109],[524,120,565,118],[524,121,565,119],[525,6,567,4,"setCombatState"],[525,20,567,18],[525,21,567,19,"prev"],[525,25,567,23],[525,29,567,27],[526,8,568,6],[526,12,568,12,"newState"],[526,20,568,20],[526,23,568,23],[527,10,568,25],[527,13,568,28,"prev"],[528,8,568,33],[528,9,568,34],[530,8,570,6],[531,8,571,6],[531,12,571,12,"enemyIndex"],[531,22,571,22],[531,25,571,25,"newState"],[531,33,571,33],[531,34,571,34,"enemies"],[531,41,571,41],[531,42,571,42,"findIndex"],[531,51,571,51],[531,52,571,52,"e"],[531,53,571,53],[531,57,571,57,"e"],[531,58,571,58],[531,59,571,59,"id"],[531,61,571,61],[531,66,571,66,"projectile"],[531,76,571,76],[531,77,571,77,"targetEnemyId"],[531,90,571,90],[531,91,571,91],[532,8,572,6],[532,12,572,10,"enemyIndex"],[532,22,572,20],[532,26,572,24],[532,27,572,25],[532,29,572,27],[533,10,573,8,"newState"],[533,18,573,16],[533,19,573,17,"enemies"],[533,26,573,24],[533,29,573,27],[533,30,573,28],[533,33,573,31,"newState"],[533,41,573,39],[533,42,573,40,"enemies"],[533,49,573,47],[533,50,573,48],[534,10,574,8,"newState"],[534,18,574,16],[534,19,574,17,"enemies"],[534,26,574,24],[534,27,574,25,"enemyIndex"],[534,37,574,35],[534,38,574,36],[534,41,574,39],[535,12,575,10],[535,15,575,13,"newState"],[535,23,575,21],[535,24,575,22,"enemies"],[535,31,575,29],[535,32,575,30,"enemyIndex"],[535,42,575,40],[535,43,575,41],[536,12,576,10,"health"],[536,18,576,16],[536,20,576,18,"newState"],[536,28,576,26],[536,29,576,27,"enemies"],[536,36,576,34],[536,37,576,35,"enemyIndex"],[536,47,576,45],[536,48,576,46],[536,49,576,47,"health"],[536,55,576,53],[536,58,576,56,"projectile"],[536,68,576,66],[536,69,576,67,"damage"],[536,75,576,73],[537,12,577,10,"lastDamaged"],[537,23,577,21],[537,25,577,23,"combatEngine"],[537,44,577,35],[537,45,577,35,"combatEngine"],[537,57,577,35],[537,58,577,36,"getCurrentTick"],[537,72,577,50],[537,73,577,51],[538,10,578,8],[538,11,578,9],[539,10,580,8,"console"],[539,17,580,15],[539,18,580,16,"log"],[539,21,580,19],[539,22,580,20],[539,34,580,32,"projectile"],[539,44,580,42],[539,45,580,43,"targetEnemyId"],[539,58,580,56],[539,70,580,68,"newState"],[539,78,580,76],[539,79,580,77,"enemies"],[539,86,580,84],[539,87,580,85,"enemyIndex"],[539,97,580,95],[539,98,580,96],[539,99,580,97,"health"],[539,105,580,103],[539,109,580,107,"newState"],[539,117,580,115],[539,118,580,116,"enemies"],[539,125,580,123],[539,126,580,124,"enemyIndex"],[539,136,580,134],[539,137,580,135],[539,138,580,136,"maxHealth"],[539,147,580,145],[539,149,580,147],[539,150,580,148],[540,8,581,6],[541,8,583,6],[541,15,583,13,"newState"],[541,23,583,21],[542,6,584,4],[542,7,584,5],[542,8,584,6],[544,6,586,4],[545,6,587,4,"setProjectiles"],[545,20,587,18],[545,21,587,19,"prev"],[545,25,587,23],[545,29,587,27,"prev"],[545,33,587,31],[545,34,587,32,"filter"],[545,40,587,38],[545,41,587,39,"p"],[545,42,587,40],[545,46,587,44,"p"],[545,47,587,45],[545,48,587,46,"id"],[545,50,587,48],[545,55,587,53,"projectile"],[545,65,587,63],[545,66,587,64,"id"],[545,68,587,66],[545,69,587,67],[545,70,587,68],[546,4,588,2],[546,5,588,3],[548,4,590,2],[549,4,591,2],[549,8,591,8,"castAbility"],[549,19,591,19],[549,22,591,22,"castAbility"],[549,23,591,23,"state"],[549,28,591,41],[549,30,591,43,"slotIndex"],[549,39,591,60],[549,44,591,65],[550,6,592,4],[550,10,592,10,"deck"],[550,14,592,14],[550,17,592,17,"state"],[550,22,592,22],[550,23,592,23,"abilityManager"],[550,37,592,37],[550,38,592,38,"getDeck"],[550,45,592,45],[550,46,592,46],[550,47,592,47],[551,6,593,4],[551,10,593,10,"ability"],[551,17,593,17],[551,20,593,20,"deck"],[551,24,593,24],[551,25,593,25,"slots"],[551,30,593,30],[551,31,593,31,"slotIndex"],[551,40,593,40],[551,41,593,41],[552,6,594,4],[552,10,594,8],[552,11,594,9,"ability"],[552,18,594,16],[552,20,594,18],[553,6,596,4,"console"],[553,13,596,11],[553,14,596,12,"log"],[553,17,596,15],[553,18,596,16],[553,43,596,41,"ability"],[553,50,596,48],[553,51,596,49,"id"],[553,53,596,51],[553,67,596,65,"slotIndex"],[553,76,596,74],[553,78,596,76],[553,79,596,77],[555,6,598,4],[556,6,599,4],[556,10,599,8,"damage"],[556,16,599,14],[556,19,599,17,"ability"],[556,26,599,24],[556,27,599,25,"stats"],[556,32,599,30],[556,33,599,31,"baseDamage"],[556,43,599,41],[558,6,601,4],[559,6,602,4,"deck"],[559,10,602,8],[559,11,602,9,"activeSynergies"],[559,26,602,24],[559,27,602,25,"forEach"],[559,34,602,32],[559,35,602,33,"synergy"],[559,42,602,40],[559,46,602,44],[560,8,603,6],[560,12,603,10,"synergy"],[560,19,603,17],[560,20,603,18,"bonus"],[560,25,603,23],[560,26,603,24,"damageBonus"],[560,37,603,35],[560,41,604,10,"synergy"],[560,48,604,17],[560,49,604,18,"requiredTags"],[560,61,604,30],[560,62,604,31,"some"],[560,66,604,35],[560,67,604,36,"tag"],[560,70,604,39],[560,74,604,43,"ability"],[560,81,604,50],[560,82,604,51,"tags"],[560,86,604,55],[560,87,604,56,"includes"],[560,95,604,64],[560,96,604,65,"tag"],[560,99,604,68],[560,100,604,69],[560,101,604,70],[560,103,604,72],[561,10,605,8,"damage"],[561,16,605,14],[561,20,605,19],[561,21,605,20],[561,24,605,23,"synergy"],[561,31,605,30],[561,32,605,31,"bonus"],[561,37,605,36],[561,38,605,37,"damageBonus"],[561,49,605,48],[561,52,605,51],[561,55,605,55],[562,8,606,6],[563,6,607,4],[563,7,607,5],[563,8,607,6],[565,6,609,4],[566,6,610,4],[566,10,610,10,"isAOE"],[566,15,610,15],[566,18,610,18,"ability"],[566,25,610,25],[566,26,610,26,"effects"],[566,33,610,33],[566,34,610,34,"includes"],[566,42,610,42],[566,43,610,43],[566,48,610,48],[566,49,610,49],[566,53,610,53,"ability"],[566,60,610,60],[566,61,610,61,"stats"],[566,66,610,66],[566,67,610,67,"aoeRadius"],[566,76,610,76],[567,6,611,4,"console"],[567,13,611,11],[567,14,611,12,"log"],[567,17,611,15],[567,18,611,16],[567,39,611,37,"ability"],[567,46,611,44],[567,47,611,45,"name"],[567,51,611,49],[567,66,611,64,"JSON"],[567,70,611,68],[567,71,611,69,"stringify"],[567,80,611,78],[567,81,611,79,"ability"],[567,88,611,86],[567,89,611,87,"effects"],[567,96,611,94],[567,97,611,95],[567,113,611,111,"ability"],[567,120,611,118],[567,121,611,119,"stats"],[567,126,611,124],[567,127,611,125,"aoeRadius"],[567,136,611,134],[567,148,611,146,"isAOE"],[567,153,611,151],[567,155,611,153],[567,156,611,154],[568,6,613,4],[568,10,613,8,"isAOE"],[568,15,613,13],[568,17,613,15],[569,8,614,6,"console"],[569,15,614,13],[569,16,614,14,"log"],[569,19,614,17],[569,20,614,18],[569,39,614,37,"ability"],[569,46,614,44],[569,47,614,45,"name"],[569,51,614,49],[569,67,614,65,"ability"],[569,74,614,72],[569,75,614,73,"stats"],[569,80,614,78],[569,81,614,79,"aoeRadius"],[569,90,614,88],[569,92,614,90],[569,93,614,91],[571,8,616,6],[572,8,617,6],[573,8,618,6],[573,12,618,12,"ninjaX"],[573,18,618,18],[573,21,618,21,"currentNinjaPosition"],[573,41,618,41],[573,42,618,42,"x"],[573,43,618,43],[573,46,618,46],[573,48,618,48],[573,49,618,49],[573,50,618,50],[574,8,619,6],[574,12,619,12,"ninjaY"],[574,18,619,18],[574,21,619,21,"currentNinjaPosition"],[574,41,619,41],[574,42,619,42,"y"],[574,43,619,43],[574,46,619,46],[574,48,619,48],[575,8,620,6],[575,12,620,12,"aoeRadius"],[575,21,620,21],[575,24,620,24,"ability"],[575,31,620,31],[575,32,620,32,"stats"],[575,37,620,37],[575,38,620,38,"aoeRadius"],[575,47,620,47],[576,8,622,6],[576,12,622,12,"enemiesInRange"],[576,26,622,26],[576,29,622,29,"state"],[576,34,622,34],[576,35,622,35,"enemies"],[576,42,622,42],[576,43,622,43,"filter"],[576,49,622,49],[576,50,622,50,"enemy"],[576,55,622,55],[576,59,622,59],[577,10,623,8],[577,14,623,14,"enemyX"],[577,20,623,20],[577,23,623,23,"enemy"],[577,28,623,28],[577,29,623,29,"position"],[577,37,623,37],[577,38,623,38,"x"],[577,39,623,39],[577,42,623,42],[577,46,623,46],[577,47,623,47],[577,48,623,48],[578,10,624,8],[578,14,624,14,"enemyY"],[578,20,624,20],[578,23,624,23,"enemy"],[578,28,624,28],[578,29,624,29,"position"],[578,37,624,37],[578,38,624,38,"y"],[578,39,624,39],[578,42,624,42],[578,46,624,46],[579,10,625,8],[579,14,625,14,"distance"],[579,22,625,22],[579,25,625,25,"Math"],[579,29,625,29],[579,30,625,30,"sqrt"],[579,34,625,34],[579,35,625,35,"Math"],[579,39,625,39],[579,40,625,40,"pow"],[579,43,625,43],[579,44,625,44,"enemyX"],[579,50,625,50],[579,53,625,53,"ninjaX"],[579,59,625,59],[579,61,625,61],[579,62,625,62],[579,63,625,63],[579,66,625,66,"Math"],[579,70,625,70],[579,71,625,71,"pow"],[579,74,625,74],[579,75,625,75,"enemyY"],[579,81,625,81],[579,84,625,84,"ninjaY"],[579,90,625,90],[579,92,625,92],[579,93,625,93],[579,94,625,94],[579,95,625,95],[580,10,626,8],[580,17,626,15,"distance"],[580,25,626,23],[580,29,626,27,"aoeRadius"],[580,38,626,36],[581,8,627,6],[581,9,627,7],[581,10,627,8],[582,8,629,6,"console"],[582,15,629,13],[582,16,629,14,"log"],[582,19,629,17],[582,20,629,18],[582,45,629,43,"enemiesInRange"],[582,59,629,57],[582,60,629,58,"length"],[582,66,629,64],[582,88,629,86,"aoeRadius"],[582,97,629,95],[582,107,629,105],[582,108,629,106],[584,8,631,6],[585,8,632,6,"enemiesInRange"],[585,22,632,20],[585,23,632,21,"forEach"],[585,30,632,28],[585,31,632,29,"enemy"],[585,36,632,34],[585,40,632,38],[586,10,633,8],[586,14,633,14,"damageResult"],[586,26,633,26],[586,29,633,29,"DamageCalculator"],[586,48,633,45],[586,49,633,45,"DamageCalculator"],[586,65,633,45],[586,66,633,46,"calculateDamage"],[586,81,633,61],[586,82,633,62,"damage"],[586,88,633,68],[586,90,633,70,"state"],[586,95,633,75],[586,96,633,76,"playerStats"],[586,107,633,87],[586,109,633,89,"enemy"],[586,114,633,94],[586,115,633,95,"stats"],[586,120,633,100],[586,121,633,101],[587,10,634,8,"createProjectile"],[587,26,634,24],[587,27,634,25,"enemy"],[587,32,634,30],[587,34,634,32,"damageResult"],[587,46,634,44],[587,47,634,45,"damage"],[587,53,634,51],[587,55,634,53,"currentNinjaPosition"],[587,75,634,73],[587,77,634,75],[588,12,635,10,"id"],[588,14,635,12],[588,16,635,14,"ability"],[588,23,635,21],[588,24,635,22,"id"],[588,26,635,24],[589,12,636,10,"name"],[589,16,636,14],[589,18,636,16,"ability"],[589,25,636,23],[589,26,636,24,"name"],[589,30,636,28],[590,12,637,10,"icon"],[590,16,637,14],[590,18,637,16,"ability"],[590,25,637,23],[590,26,637,24,"icon"],[591,10,638,8],[591,11,638,9],[591,12,638,10],[592,10,639,8,"console"],[592,17,639,15],[592,18,639,16,"log"],[592,21,639,19],[592,22,639,20],[592,37,639,35,"enemy"],[592,42,639,40],[592,43,639,41,"name"],[592,47,639,45],[592,55,639,53,"damageResult"],[592,67,639,65],[592,68,639,66,"damage"],[592,74,639,72],[592,83,639,81],[592,84,639,82],[594,10,641,8],[595,10,642,8],[595,14,642,12,"damageResult"],[595,26,642,24],[595,27,642,25,"damage"],[595,33,642,31],[595,37,642,35,"enemy"],[595,42,642,40],[595,43,642,41,"health"],[595,49,642,47],[595,51,642,49],[596,12,643,10,"console"],[596,19,643,17],[596,20,643,18,"log"],[596,23,643,21],[596,24,643,22],[596,67,643,65,"enemy"],[596,72,643,70],[596,73,643,71,"name"],[596,77,643,75],[596,90,643,88,"damageResult"],[596,102,643,100],[596,103,643,101,"damage"],[596,109,643,107],[596,124,643,122,"enemy"],[596,129,643,127],[596,130,643,128,"health"],[596,136,643,134],[596,139,643,137],[596,140,643,138],[597,10,644,8],[598,8,645,6],[598,9,645,7],[598,10,645,8],[599,8,647,6,"console"],[599,15,647,13],[599,16,647,14,"log"],[599,19,647,17],[599,20,647,18],[599,26,647,24,"ability"],[599,33,647,31],[599,34,647,32,"name"],[599,38,647,36],[599,56,647,54,"enemiesInRange"],[599,70,647,68],[599,71,647,69,"length"],[599,77,647,75],[599,93,647,91,"damage"],[599,99,647,97],[599,118,647,116],[599,119,647,117],[600,6,649,4],[600,7,649,5],[600,13,649,11],[601,8,650,6],[602,8,651,6],[602,12,651,12,"target"],[602,18,651,18],[602,21,651,21,"findClosestEnemyInternal"],[602,45,651,45],[602,46,651,46,"state"],[602,51,651,51],[602,52,651,52,"enemies"],[602,59,651,59],[602,60,651,60],[603,8,652,6],[603,12,652,10],[603,13,652,11,"target"],[603,19,652,17],[603,21,652,19],[604,8,654,6],[604,12,654,12,"damageResult"],[604,24,654,24],[604,27,654,27,"DamageCalculator"],[604,46,654,43],[604,47,654,43,"DamageCalculator"],[604,63,654,43],[604,64,654,44,"calculateDamage"],[604,79,654,59],[604,80,654,60,"damage"],[604,86,654,66],[604,88,654,68,"state"],[604,93,654,73],[604,94,654,74,"playerStats"],[604,105,654,85],[604,107,654,87,"target"],[604,113,654,93],[604,114,654,94,"stats"],[604,119,654,99],[604,120,654,100],[606,8,656,6],[607,8,657,6,"console"],[607,15,657,13],[607,16,657,14,"log"],[607,19,657,17],[607,20,657,18],[607,71,657,69,"target"],[607,77,657,75],[607,78,657,76,"name"],[607,82,657,80],[607,91,657,89,"damageResult"],[607,103,657,101],[607,104,657,102,"damage"],[607,110,657,108],[607,119,657,117],[607,120,657,118],[608,8,658,6,"createProjectile"],[608,24,658,22],[608,25,658,23,"target"],[608,31,658,29],[608,33,658,31,"damageResult"],[608,45,658,43],[608,46,658,44,"damage"],[608,52,658,50],[608,54,658,52,"currentNinjaPosition"],[608,74,658,72],[608,76,658,74],[609,10,659,8,"id"],[609,12,659,10],[609,14,659,12,"ability"],[609,21,659,19],[609,22,659,20,"id"],[609,24,659,22],[610,10,660,8,"name"],[610,14,660,12],[610,16,660,14,"ability"],[610,23,660,21],[610,24,660,22,"name"],[610,28,660,26],[611,10,661,8,"icon"],[611,14,661,12],[611,16,661,14,"ability"],[611,23,661,21],[611,24,661,22,"icon"],[612,8,662,6],[612,9,662,7],[612,10,662,8],[613,8,664,6,"console"],[613,15,664,13],[613,16,664,14,"log"],[613,19,664,17],[613,20,664,18],[613,26,664,24,"ability"],[613,33,664,31],[613,34,664,32,"name"],[613,38,664,36],[613,66,664,64,"damageResult"],[613,78,664,76],[613,79,664,77,"damage"],[613,85,664,83],[613,95,664,93,"damageResult"],[613,107,664,105],[613,108,664,106,"isCritical"],[613,118,664,116],[613,121,664,119],[613,131,664,129],[613,134,664,132],[613,136,664,134],[613,138,664,136],[613,139,664,137],[615,8,666,6],[616,8,667,6],[616,12,667,10,"damageResult"],[616,24,667,22],[616,25,667,23,"damage"],[616,31,667,29],[616,35,667,33,"target"],[616,41,667,39],[616,42,667,40,"health"],[616,48,667,46],[616,50,667,48],[617,10,668,8,"console"],[617,17,668,15],[617,18,668,16,"log"],[617,21,668,19],[617,22,668,20],[617,75,668,73,"target"],[617,81,668,79],[617,82,668,80,"name"],[617,86,668,84],[617,99,668,97,"damageResult"],[617,111,668,109],[617,112,668,110,"damage"],[617,118,668,116],[617,133,668,131,"target"],[617,139,668,137],[617,140,668,138,"health"],[617,146,668,144],[617,149,668,147],[617,150,668,148],[618,8,669,6],[619,6,670,4],[621,6,672,4],[622,6,673,4],[622,10,673,8,"ability"],[622,17,673,15],[622,18,673,16,"effects"],[622,25,673,23],[622,26,673,24,"includes"],[622,34,673,32],[622,35,673,33],[622,40,673,38],[622,41,673,39],[622,45,673,43,"ability"],[622,52,673,50],[622,53,673,51,"stats"],[622,58,673,56],[622,59,673,57,"duration"],[622,67,673,65],[622,69,673,67],[623,8,674,6],[623,12,674,12,"targets"],[623,19,674,19],[623,22,674,22,"isAOE"],[623,27,674,27],[623,30,675,8,"state"],[623,35,675,13],[623,36,675,14,"enemies"],[623,43,675,21],[623,44,675,22,"filter"],[623,50,675,28],[623,51,675,29,"enemy"],[623,56,675,34],[623,60,675,38],[624,10,676,10],[624,14,676,16,"ninjaX"],[624,20,676,22],[624,23,676,25,"currentNinjaPosition"],[624,43,676,45],[624,44,676,46,"x"],[624,45,676,47],[624,48,676,50],[624,50,676,52],[625,10,677,10],[625,14,677,16,"ninjaY"],[625,20,677,22],[625,23,677,25,"currentNinjaPosition"],[625,43,677,45],[625,44,677,46,"y"],[625,45,677,47],[625,48,677,50],[625,50,677,52],[626,10,678,10],[626,14,678,16,"enemyX"],[626,20,678,22],[626,23,678,25,"enemy"],[626,28,678,30],[626,29,678,31,"position"],[626,37,678,39],[626,38,678,40,"x"],[626,39,678,41],[626,42,678,44],[626,46,678,48],[627,10,679,10],[627,14,679,16,"enemyY"],[627,20,679,22],[627,23,679,25,"enemy"],[627,28,679,30],[627,29,679,31,"position"],[627,37,679,39],[627,38,679,40,"y"],[627,39,679,41],[627,42,679,44],[627,46,679,48],[628,10,680,10],[628,14,680,16,"distance"],[628,22,680,24],[628,25,680,27,"Math"],[628,29,680,31],[628,30,680,32,"sqrt"],[628,34,680,36],[628,35,680,37,"Math"],[628,39,680,41],[628,40,680,42,"pow"],[628,43,680,45],[628,44,680,46,"enemyX"],[628,50,680,52],[628,53,680,55,"ninjaX"],[628,59,680,61],[628,61,680,63],[628,62,680,64],[628,63,680,65],[628,66,680,68,"Math"],[628,70,680,72],[628,71,680,73,"pow"],[628,74,680,76],[628,75,680,77,"enemyY"],[628,81,680,83],[628,84,680,86,"ninjaY"],[628,90,680,92],[628,92,680,94],[628,93,680,95],[628,94,680,96],[628,95,680,97],[629,10,681,10],[629,17,681,17,"distance"],[629,25,681,25],[629,29,681,29,"ability"],[629,36,681,36],[629,37,681,37,"stats"],[629,42,681,42],[629,43,681,43,"aoeRadius"],[629,52,681,52],[630,8,682,8],[630,9,682,9],[630,10,682,10],[630,13,683,8],[630,14,683,9,"findClosestEnemyInternal"],[630,38,683,33],[630,39,683,34,"state"],[630,44,683,39],[630,45,683,40,"enemies"],[630,52,683,47],[630,53,683,48],[630,54,683,49],[630,55,683,50,"filter"],[630,61,683,56],[630,62,683,57,"Boolean"],[630,69,683,64],[630,70,683,65],[631,8,685,6,"targets"],[631,15,685,13],[631,16,685,14,"forEach"],[631,23,685,21],[631,24,685,22,"target"],[631,30,685,28],[631,34,685,32],[632,10,686,8,"state"],[632,15,686,13],[632,16,686,14,"statusEffects"],[632,29,686,27],[632,30,686,28,"addEffect"],[632,39,686,37],[632,40,686,38,"target"],[632,46,686,44],[632,47,686,45,"id"],[632,49,686,47],[632,51,686,49],[633,12,687,10,"id"],[633,14,687,12],[633,16,687,14],[633,19,687,17,"ability"],[633,26,687,24],[633,27,687,25,"id"],[633,29,687,27],[633,35,687,33],[634,12,688,10,"type"],[634,16,688,14],[634,18,688,16],[634,23,688,21],[635,12,689,10,"remainingTicks"],[635,26,689,24],[635,28,689,26,"Math"],[635,32,689,30],[635,33,689,31,"floor"],[635,38,689,36],[635,39,689,37,"ability"],[635,46,689,44],[635,47,689,45,"stats"],[635,52,689,50],[635,53,689,51,"duration"],[635,61,689,59],[635,64,689,62],[635,66,689,64],[635,67,689,65],[636,12,690,10,"tickInterval"],[636,24,690,22],[636,26,690,24],[636,28,690,26],[637,12,691,10,"lastTick"],[637,20,691,18],[637,22,691,20,"state"],[637,27,691,25],[637,28,691,26,"currentTick"],[637,39,691,37],[638,12,692,10,"value"],[638,17,692,15],[638,19,692,17,"Math"],[638,23,692,21],[638,24,692,22,"floor"],[638,29,692,27],[638,30,692,28,"damage"],[638,36,692,34],[638,39,692,37],[638,42,692,40],[638,43,692,41],[639,12,693,10,"stackable"],[639,21,693,19],[639,23,693,21],[640,10,694,8],[640,11,694,9],[640,12,694,10],[641,8,695,6],[641,9,695,7],[641,10,695,8],[642,6,696,4],[644,6,698,4],[645,6,699,4],[645,10,699,8,"ability"],[645,17,699,15],[645,18,699,16,"effects"],[645,25,699,23],[645,26,699,24,"includes"],[645,34,699,32],[645,35,699,33],[645,41,699,39],[645,42,699,40],[645,46,699,44,"ability"],[645,53,699,51],[645,54,699,52,"id"],[645,56,699,54],[645,61,699,59],[645,75,699,73],[645,77,699,75],[646,8,700,6,"console"],[646,15,700,13],[646,16,700,14,"log"],[646,19,700,17],[646,20,700,18],[646,66,700,64,"ability"],[646,73,700,71],[646,74,700,72,"stats"],[646,79,700,77],[646,80,700,78,"duration"],[646,88,700,86],[646,98,700,96],[646,99,700,97],[648,8,702,6],[649,8,703,6],[649,12,703,12,"cloneX"],[649,18,703,18],[649,21,703,21,"currentNinjaPosition"],[649,41,703,41],[649,42,703,42,"x"],[649,43,703,43],[649,46,703,46],[649,48,703,48],[649,49,703,49],[649,50,703,50],[650,8,704,6],[650,12,704,12,"cloneY"],[650,18,704,18],[650,21,704,21,"currentNinjaPosition"],[650,41,704,41],[650,42,704,42,"y"],[650,43,704,43],[650,46,704,46],[650,48,704,48],[650,49,704,49],[650,50,704,50],[652,8,706,6,"state"],[652,13,706,11],[652,14,706,12,"shadowClone"],[652,25,706,23],[652,28,706,26],[653,10,707,8,"id"],[653,12,707,10],[653,14,707,12],[653,30,707,28,"Date"],[653,34,707,32],[653,35,707,33,"now"],[653,38,707,36],[653,39,707,37],[653,40,707,38],[653,42,707,40],[654,10,708,8,"remainingTicks"],[654,24,708,22],[654,26,708,24,"Math"],[654,30,708,28],[654,31,708,29,"floor"],[654,36,708,34],[654,37,708,35,"ability"],[654,44,708,42],[654,45,708,43,"stats"],[654,50,708,48],[654,51,708,49,"duration"],[654,59,708,57],[654,62,708,60],[654,64,708,62],[654,65,708,63],[655,10,708,65],[656,10,709,8,"position"],[656,18,709,16],[656,20,709,18],[657,12,709,20,"x"],[657,13,709,21],[657,15,709,23,"cloneX"],[657,21,709,29],[658,12,709,31,"y"],[658,13,709,32],[658,15,709,34,"cloneY"],[659,10,709,41],[659,11,709,42],[660,10,710,8,"damageMultiplier"],[660,26,710,24],[660,28,710,26],[660,31,710,29],[660,32,710,31],[661,8,711,6],[661,9,711,7],[662,8,713,6,"console"],[662,15,713,13],[662,16,713,14,"log"],[662,19,713,17],[662,20,713,18],[662,63,713,61,"ability"],[662,70,713,68],[662,71,713,69,"stats"],[662,76,713,74],[662,77,713,75,"duration"],[662,85,713,83],[662,108,713,106],[662,109,713,107],[663,6,714,4],[664,4,715,2],[664,5,715,3],[666,4,717,2],[667,4,718,2],[667,8,718,8,"createProjectile"],[667,24,718,24],[667,27,718,27,"createProjectile"],[667,28,718,28,"targetEnemy"],[667,39,718,52],[667,41,718,54,"damage"],[667,47,718,68],[667,49,718,70,"ninjaPos"],[667,57,718,103],[667,59,718,105,"abilityInfo"],[667,70,718,159],[667,72,718,161,"isAOE"],[667,77,718,176],[667,79,718,178,"aoeRadius"],[667,88,718,196],[667,93,718,201],[668,6,719,4],[668,10,719,8],[668,11,719,9,"targetEnemy"],[668,22,719,20],[668,24,719,22],[669,8,720,6,"console"],[669,15,720,13],[669,16,720,14,"log"],[669,19,720,17],[669,20,720,18],[669,65,720,63],[669,66,720,64],[670,8,721,6],[670,15,721,13],[670,19,721,17],[671,6,722,4],[672,6,724,4],[672,10,724,10,"SCREEN_WIDTH"],[672,22,724,22],[672,25,724,25],[672,28,724,28],[673,6,725,4],[673,10,725,10,"GAME_AREA_HEIGHT"],[673,26,725,26],[673,29,725,29],[673,32,725,32],[673,35,725,35],[673,38,725,38],[673,39,725,39],[673,40,725,40],[674,6,726,4],[674,10,726,10,"NINJA_SIZE"],[674,20,726,20],[674,23,726,23],[674,25,726,25],[676,6,728,4],[677,6,729,4],[677,10,729,10,"ninjaX"],[677,16,729,16],[677,19,729,19,"ninjaPos"],[677,27,729,27],[677,30,729,30,"ninjaPos"],[677,38,729,38],[677,39,729,39,"x"],[677,40,729,40],[677,43,729,43,"NINJA_SIZE"],[677,53,729,53],[677,56,729,56],[677,57,729,57],[677,60,729,60,"SCREEN_WIDTH"],[677,72,729,72],[677,75,729,75],[677,76,729,76],[678,6,730,4],[678,10,730,10,"ninjaY"],[678,16,730,16],[678,19,730,19,"ninjaPos"],[678,27,730,27],[678,30,730,30,"ninjaPos"],[678,38,730,38],[678,39,730,39,"y"],[678,40,730,40],[678,43,730,43,"NINJA_SIZE"],[678,53,730,53],[678,56,730,56],[678,57,730,57],[678,60,730,60,"GAME_AREA_HEIGHT"],[678,76,730,76],[678,79,730,79],[678,80,730,80],[679,6,731,4],[679,10,731,10,"ENEMY_SIZE"],[679,20,731,20],[679,23,731,23],[679,25,731,25],[680,6,733,4],[680,10,733,10,"projectileId"],[680,22,733,22],[680,25,733,25],[680,33,733,33,"Date"],[680,37,733,37],[680,38,733,38,"now"],[680,41,733,41],[680,42,733,42],[680,43,733,43],[680,47,733,47,"Math"],[680,51,733,51],[680,52,733,52,"random"],[680,58,733,58],[680,59,733,59],[680,60,733,60],[680,62,733,62],[681,6,735,4],[681,10,735,10,"projectile"],[681,20,735,38],[681,23,735,41],[682,8,736,6,"id"],[682,10,736,8],[682,12,736,10,"projectileId"],[682,24,736,22],[683,8,737,6,"x"],[683,9,737,7],[683,11,737,9,"ninjaX"],[683,17,737,15],[684,8,738,6,"y"],[684,9,738,7],[684,11,738,9,"ninjaY"],[684,17,738,15],[685,8,739,6,"targetX"],[685,15,739,13],[685,17,739,15,"targetEnemy"],[685,28,739,26],[685,29,739,27,"position"],[685,37,739,35],[685,38,739,36,"x"],[685,39,739,37],[685,42,739,40,"ENEMY_SIZE"],[685,52,739,50],[685,55,739,53],[685,56,739,54],[686,8,740,6,"targetY"],[686,15,740,13],[686,17,740,15,"targetEnemy"],[686,28,740,26],[686,29,740,27,"position"],[686,37,740,35],[686,38,740,36,"y"],[686,39,740,37],[686,42,740,40,"ENEMY_SIZE"],[686,52,740,50],[686,55,740,53],[686,56,740,54],[687,8,741,6,"targetEnemyId"],[687,21,741,19],[687,23,741,21,"targetEnemy"],[687,34,741,32],[687,35,741,33,"id"],[687,37,741,35],[688,8,742,6,"damage"],[688,14,742,12],[688,16,742,14,"damage"],[688,22,742,20],[689,8,743,6,"startTime"],[689,17,743,15],[689,19,743,17,"Date"],[689,23,743,21],[689,24,743,22,"now"],[689,27,743,25],[689,28,743,26],[689,29,743,27],[690,8,744,6,"duration"],[690,16,744,14],[690,18,744,16],[690,21,744,19],[691,8,744,21],[692,8,745,6],[693,8,746,6,"abilityId"],[693,17,746,15],[693,19,746,17,"abilityInfo"],[693,30,746,28],[693,32,746,30,"id"],[693,34,746,32],[693,38,746,36],[693,54,746,52],[694,8,747,6,"abilityName"],[694,19,747,17],[694,21,747,19,"abilityInfo"],[694,32,747,30],[694,34,747,32,"name"],[694,38,747,36],[694,42,747,40],[694,58,747,56],[695,8,748,6,"abilityIcon"],[695,19,748,17],[695,21,748,19,"abilityInfo"],[695,32,748,30],[695,34,748,32,"icon"],[695,38,748,36],[695,42,748,40],[695,46,748,44],[696,8,748,46],[697,8,749,6],[698,8,750,6,"isAOE"],[698,13,750,11],[698,15,750,13,"isAOE"],[698,20,750,18],[698,24,750,22],[698,29,750,27],[699,8,751,6,"aoeRadius"],[699,17,751,15],[699,19,751,17,"aoeRadius"],[699,28,751,26],[699,32,751,30],[700,6,752,4],[700,7,752,5],[701,6,754,4,"console"],[701,13,754,11],[701,14,754,12,"log"],[701,17,754,15],[701,18,754,16],[701,44,754,42,"abilityInfo"],[701,55,754,53],[701,57,754,55,"name"],[701,61,754,59],[701,65,754,63],[701,81,754,79],[701,101,754,99,"projectileId"],[701,113,754,111],[701,128,754,126,"targetEnemy"],[701,139,754,137],[701,140,754,138,"name"],[701,144,754,142],[701,152,754,150,"damage"],[701,158,754,156],[701,167,754,165],[701,168,754,166],[702,6,755,4,"console"],[702,13,755,11],[702,14,755,12,"log"],[702,17,755,15],[702,18,755,16],[702,48,755,46,"isAOE"],[702,53,755,51],[702,68,755,66,"aoeRadius"],[702,77,755,75],[702,89,755,87,"damage"],[702,95,755,93],[702,97,755,95],[702,98,755,96],[703,6,757,4,"console"],[703,13,757,11],[703,14,757,12,"log"],[703,17,757,15],[703,18,757,16],[703,53,757,51,"targetEnemy"],[703,64,757,62],[703,65,757,63,"id"],[703,67,757,65],[703,75,757,73,"damage"],[703,81,757,79],[703,90,757,88],[703,91,757,89],[704,6,758,4,"console"],[704,13,758,11],[704,14,758,12,"log"],[704,17,758,15],[704,18,758,16],[704,53,758,51,"ninjaX"],[704,59,758,57],[704,64,758,62,"ninjaY"],[704,70,758,68],[704,87,758,85,"projectile"],[704,97,758,95],[704,98,758,96,"targetX"],[704,105,758,103],[704,110,758,108,"projectile"],[704,120,758,118],[704,121,758,119,"targetY"],[704,128,758,126],[704,131,758,129],[704,132,758,130],[705,6,760,4,"setProjectiles"],[705,20,760,18],[705,21,760,19,"prev"],[705,25,760,23],[705,29,760,27],[705,30,760,28],[705,33,760,31,"prev"],[705,37,760,35],[705,39,760,37,"projectile"],[705,49,760,47],[705,50,760,48],[705,51,760,49],[707,6,762,4],[708,6,763,4,"setTimeout"],[708,16,763,14],[708,17,763,15],[708,23,763,21],[709,8,764,6,"handleProjectileHit"],[709,27,764,25],[709,28,764,26,"projectile"],[709,38,764,36],[709,39,764,37],[710,6,765,4],[710,7,765,5],[710,9,765,7],[710,12,765,10],[710,13,765,11],[711,6,767,4],[711,13,767,11,"projectile"],[711,23,767,21],[712,4,768,2],[712,5,768,3],[714,4,770,2],[715,4,771,2],[715,8,771,8,"spawnTestEnemy"],[715,22,771,22],[715,25,771,26,"state"],[715,30,771,44],[715,34,771,49],[716,6,772,4,"console"],[716,13,772,11],[716,14,772,12,"log"],[716,17,772,15],[716,18,772,16],[716,83,772,81],[716,84,772,82],[718,6,774,4],[719,6,775,4],[719,10,775,10,"zoneEnemy"],[719,19,775,19],[719,22,775,22,"spawnZoneEnemy"],[719,36,775,36],[719,37,775,37],[719,38,775,38],[720,6,776,4],[720,10,776,8],[720,11,776,9,"zoneEnemy"],[720,20,776,18],[720,22,776,20],[721,8,777,6,"console"],[721,15,777,13],[721,16,777,14,"log"],[721,19,777,17],[721,20,777,18],[721,76,777,74],[721,77,777,75],[722,8,778,6],[723,8,779,6,"spawnBasicTestEnemy"],[723,27,779,25],[723,28,779,26,"state"],[723,33,779,31],[723,34,779,32],[724,8,780,6],[725,6,781,4],[726,6,783,4,"console"],[726,13,783,11],[726,14,783,12,"log"],[726,17,783,15],[726,18,783,16],[726,44,783,42,"zoneEnemy"],[726,53,783,51],[726,54,783,52,"name"],[726,58,783,56],[726,63,783,61,"zoneEnemy"],[726,72,783,70],[726,73,783,71,"typeId"],[726,79,783,77],[726,94,783,92,"currentZone"],[726,105,783,103],[726,107,783,105,"id"],[726,109,783,107],[726,119,783,117,"currentZoneLevel"],[726,135,783,133],[726,137,783,135,"level"],[726,142,783,140],[726,144,783,142],[726,145,783,143],[728,6,785,4],[729,6,786,4],[729,10,786,10,"combatEnemy"],[729,21,786,34],[729,24,786,37],[730,8,787,6,"id"],[730,10,787,8],[730,12,787,10,"zoneEnemy"],[730,21,787,19],[730,22,787,20,"id"],[730,24,787,22],[731,8,788,6,"name"],[731,12,788,10],[731,14,788,12,"zoneEnemy"],[731,23,788,21],[731,24,788,22,"name"],[731,28,788,26],[732,8,789,6,"health"],[732,14,789,12],[732,16,789,14,"zoneEnemy"],[732,25,789,23],[732,26,789,24,"hp"],[732,28,789,26],[733,8,790,6,"maxHealth"],[733,17,790,15],[733,19,790,17,"zoneEnemy"],[733,28,790,26],[733,29,790,27,"maxHP"],[733,34,790,32],[734,8,791,6,"stats"],[734,13,791,11],[734,15,791,13],[735,10,792,8,"attack"],[735,16,792,14],[735,18,792,16,"zoneEnemy"],[735,27,792,25],[735,28,792,26,"attack"],[735,34,792,32],[736,10,793,8,"defense"],[736,17,793,15],[736,19,793,17],[736,21,793,19],[737,10,793,21],[738,10,794,8,"health"],[738,16,794,14],[738,18,794,16,"zoneEnemy"],[738,27,794,25],[738,28,794,26,"hp"],[738,30,794,28],[739,10,795,8,"maxHealth"],[739,19,795,17],[739,21,795,19,"zoneEnemy"],[739,30,795,28],[739,31,795,29,"maxHP"],[739,36,795,34],[740,10,796,8,"critChance"],[740,20,796,18],[740,22,796,20],[740,23,796,21],[741,10,797,8,"critDamage"],[741,20,797,18],[741,22,797,20],[741,25,797,23],[742,10,798,8,"cooldownReduction"],[742,27,798,25],[742,29,798,27],[743,8,799,6],[743,9,799,7],[744,8,800,6,"position"],[744,16,800,14],[744,18,800,16,"zoneEnemy"],[744,27,800,25],[744,28,800,26,"position"],[744,36,800,34],[745,8,801,6,"lastDamaged"],[745,19,801,17],[745,21,801,19],[745,22,801,20],[746,8,802,6],[747,8,803,6,"zoneTypeId"],[747,18,803,16],[747,20,803,18,"zoneEnemy"],[747,29,803,27],[747,30,803,28,"typeId"],[747,36,803,34],[748,8,804,6,"zoneXP"],[748,14,804,12],[748,16,804,14,"zoneEnemy"],[748,25,804,23],[748,26,804,24,"xp"],[749,6,805,4],[749,7,805,5],[750,6,807,4,"console"],[750,13,807,11],[750,14,807,12,"log"],[750,17,807,15],[750,18,807,16],[750,42,807,40,"combatEnemy"],[750,53,807,51],[750,54,807,52,"name"],[750,58,807,56],[750,67,807,65,"combatEnemy"],[750,78,807,76],[750,79,807,77,"health"],[750,85,807,83],[750,100,807,98,"currentZone"],[750,111,807,109],[750,113,807,111,"id"],[750,115,807,113],[750,125,807,123,"currentZoneLevel"],[750,141,807,139],[750,143,807,141,"level"],[750,148,807,146],[750,150,807,148],[750,151,807,149],[751,6,808,4,"state"],[751,11,808,9],[751,12,808,10,"enemies"],[751,19,808,17],[751,20,808,18,"push"],[751,24,808,22],[751,25,808,23,"combatEnemy"],[751,36,808,34],[751,37,808,35],[752,4,809,2],[752,5,809,3],[754,4,811,2],[755,4,812,2],[755,8,812,8,"spawnBasicTestEnemy"],[755,27,812,27],[755,30,812,31,"state"],[755,35,812,49],[755,39,812,54],[756,6,813,4],[756,10,813,10,"SCREEN_WIDTH"],[756,22,813,22],[756,25,813,25],[756,28,813,28],[757,6,814,4],[757,10,814,10,"GAME_AREA_HEIGHT"],[757,26,814,26],[757,29,814,29],[757,32,814,32],[757,35,814,35],[757,38,814,38],[758,6,815,4],[758,10,815,10,"ENEMY_SIZE"],[758,20,815,20],[758,23,815,23],[758,25,815,25],[759,6,817,4],[759,10,817,10,"x"],[759,11,817,11],[759,14,817,14,"Math"],[759,18,817,18],[759,19,817,19,"random"],[759,25,817,25],[759,26,817,26],[759,27,817,27],[759,31,817,31,"SCREEN_WIDTH"],[759,43,817,43],[759,46,817,46,"ENEMY_SIZE"],[759,56,817,56],[759,59,817,59],[759,60,817,60],[759,61,817,61],[759,64,817,64,"ENEMY_SIZE"],[759,74,817,74],[760,6,818,4],[760,10,818,10,"y"],[760,11,818,11],[760,14,818,14,"Math"],[760,18,818,18],[760,19,818,19,"random"],[760,25,818,25],[760,26,818,26],[760,27,818,27],[760,31,818,31,"GAME_AREA_HEIGHT"],[760,47,818,47],[760,50,818,50,"ENEMY_SIZE"],[760,60,818,60],[760,63,818,63],[760,64,818,64],[760,65,818,65],[760,68,818,68,"ENEMY_SIZE"],[760,78,818,78],[761,6,820,4],[761,10,820,10,"enemy"],[761,15,820,28],[761,18,820,31],[762,8,821,6,"id"],[762,10,821,8],[762,12,821,10],[762,30,821,28,"Date"],[762,34,821,32],[762,35,821,33,"now"],[762,38,821,36],[762,39,821,37],[762,40,821,38],[762,44,821,42,"Math"],[762,48,821,46],[762,49,821,47,"random"],[762,55,821,53],[762,56,821,54],[762,57,821,55],[762,59,821,57],[763,8,822,6,"name"],[763,12,822,10],[763,14,822,12],[763,26,822,24,"Math"],[763,30,822,28],[763,31,822,29,"floor"],[763,36,822,34],[763,37,822,35,"Math"],[763,41,822,39],[763,42,822,40,"random"],[763,48,822,46],[763,49,822,47],[763,50,822,48],[763,53,822,51],[763,56,822,54],[763,57,822,55],[763,59,822,57],[764,8,823,6,"health"],[764,14,823,12],[764,16,823,14],[764,18,823,16],[765,8,824,6,"maxHealth"],[765,17,824,15],[765,19,824,17],[765,21,824,19],[766,8,825,6,"stats"],[766,13,825,11],[766,15,825,13],[767,10,826,8,"attack"],[767,16,826,14],[767,18,826,16],[767,20,826,18],[768,10,827,8,"defense"],[768,17,827,15],[768,19,827,17],[768,21,827,19],[769,10,828,8,"health"],[769,16,828,14],[769,18,828,16],[769,20,828,18],[770,10,829,8,"maxHealth"],[770,19,829,17],[770,21,829,19],[770,23,829,21],[771,10,830,8,"critChance"],[771,20,830,18],[771,22,830,20],[771,23,830,21],[772,10,831,8,"critDamage"],[772,20,831,18],[772,22,831,20],[772,25,831,23],[773,10,832,8,"cooldownReduction"],[773,27,832,25],[773,29,832,27],[774,8,833,6],[774,9,833,7],[775,8,834,6,"position"],[775,16,834,14],[775,18,834,16],[776,10,834,18,"x"],[776,11,834,19],[777,10,834,21,"y"],[778,8,834,23],[778,9,834,24],[779,8,835,6,"lastDamaged"],[779,19,835,17],[779,21,835,19],[780,6,836,4],[780,7,836,5],[781,6,838,4,"console"],[781,13,838,11],[781,14,838,12,"log"],[781,17,838,15],[781,18,838,16],[781,42,838,40,"enemy"],[781,47,838,45],[781,48,838,46,"name"],[781,52,838,50],[781,60,838,58,"Math"],[781,64,838,62],[781,65,838,63,"round"],[781,70,838,68],[781,71,838,69,"x"],[781,72,838,70],[781,73,838,71],[781,78,838,76,"Math"],[781,82,838,80],[781,83,838,81,"round"],[781,88,838,86],[781,89,838,87,"y"],[781,90,838,88],[781,91,838,89],[781,94,838,92],[781,95,838,93],[782,6,839,4,"state"],[782,11,839,9],[782,12,839,10,"enemies"],[782,19,839,17],[782,20,839,18,"push"],[782,24,839,22],[782,25,839,23,"enemy"],[782,30,839,28],[782,31,839,29],[783,4,840,2],[783,5,840,3],[785,4,842,2],[786,4,843,2],[786,8,843,8,"startCombat"],[786,19,843,19],[786,22,843,22,"React"],[786,27,843,27],[786,28,843,27,"default"],[786,35,843,27],[786,36,843,28,"useCallback"],[786,47,843,39],[786,48,843,40],[786,54,843,46],[787,6,844,4,"console"],[787,13,844,11],[787,14,844,12,"log"],[787,17,844,15],[787,18,844,16],[787,63,844,61],[787,64,844,62],[788,6,845,4,"setCombatState"],[788,20,845,18],[788,21,845,19,"prev"],[788,25,845,23],[788,30,845,28],[789,8,845,30],[789,11,845,33,"prev"],[789,15,845,37],[790,8,845,39,"isInCombat"],[790,18,845,49],[790,20,845,51],[791,6,845,56],[791,7,845,57],[791,8,845,58],[791,9,845,59],[793,6,847,4],[794,6,848,4,"combatEngine"],[794,25,848,16],[794,26,848,16,"combatEngine"],[794,38,848,16],[794,39,848,17,"addTickCallback"],[794,54,848,32],[794,55,848,33,"handleCombatTick"],[794,71,848,49],[794,72,848,50],[795,6,849,4,"console"],[795,13,849,11],[795,14,849,12,"log"],[795,17,849,15],[795,18,849,16],[795,62,849,60],[795,63,849,61],[797,6,851,4],[798,6,852,4,"combatEngine"],[798,25,852,16],[798,26,852,16,"combatEngine"],[798,38,852,16],[798,39,852,17,"start"],[798,44,852,22],[798,45,852,23],[798,46,852,24],[799,4,853,2],[799,5,853,3],[799,7,853,5],[799,8,853,6,"combatEngine"],[799,27,853,18],[799,28,853,18,"combatEngine"],[799,40,853,18],[799,42,853,20,"handleCombatTick"],[799,58,853,36],[799,59,853,37],[799,60,853,38],[801,4,855,2],[802,4,856,2],[802,8,856,8,"stopCombat"],[802,18,856,18],[802,21,856,21,"React"],[802,26,856,26],[802,27,856,26,"default"],[802,34,856,26],[802,35,856,27,"useCallback"],[802,46,856,38],[802,47,856,39],[802,53,856,45],[803,6,857,4,"setCombatState"],[803,20,857,18],[803,21,857,19,"prev"],[803,25,857,23],[803,30,857,28],[804,8,857,30],[804,11,857,33,"prev"],[804,15,857,37],[805,8,857,39,"isInCombat"],[805,18,857,49],[805,20,857,51],[806,6,857,57],[806,7,857,58],[806,8,857,59],[806,9,857,60],[807,6,858,4,"combatEngine"],[807,25,858,16],[807,26,858,16,"combatEngine"],[807,38,858,16],[807,39,858,17,"removeTickCallback"],[807,57,858,35],[807,58,858,36,"handleCombatTick"],[807,74,858,52],[807,75,858,53],[808,4,859,2],[808,5,859,3],[808,7,859,5],[808,8,859,6,"combatEngine"],[808,27,859,18],[808,28,859,18,"combatEngine"],[808,40,859,18],[808,42,859,20,"handleCombatTick"],[808,58,859,36],[808,59,859,37],[808,60,859,38],[810,4,861,2],[811,4,862,2],[811,8,862,8,"equipAbility"],[811,20,862,20],[811,23,862,23,"equipAbility"],[811,24,862,24,"abilityId"],[811,33,862,41],[811,35,862,43,"slotIndex"],[811,44,862,60],[811,49,862,74],[812,6,863,4],[812,13,863,11,"combatState"],[812,24,863,22],[812,25,863,23,"abilityManager"],[812,39,863,37],[812,40,863,38,"equipAbility"],[812,52,863,50],[812,53,863,51,"abilityId"],[812,62,863,60],[812,64,863,62,"slotIndex"],[812,73,863,71],[812,74,863,72],[813,4,864,2],[813,5,864,3],[814,4,866,2],[814,8,866,8,"getDeck"],[814,15,866,15],[814,18,866,18,"getDeck"],[814,19,866,18],[814,24,866,24],[815,6,867,4],[815,13,867,11,"combatState"],[815,24,867,22],[815,25,867,23,"abilityManager"],[815,39,867,37],[815,40,867,38,"getDeck"],[815,47,867,45],[815,48,867,46],[815,49,867,47],[816,4,868,2],[816,5,868,3],[817,4,870,2],[817,8,870,8,"getAvailableAbilities"],[817,29,870,29],[817,32,870,32,"getAvailableAbilities"],[817,33,870,32],[817,38,870,38],[818,6,871,4],[818,13,871,11,"combatState"],[818,24,871,22],[818,25,871,23,"abilityManager"],[818,39,871,37],[818,40,871,38,"getAvailableAbilities"],[818,61,871,59],[818,62,871,60],[818,63,871,61],[819,4,872,2],[819,5,872,3],[820,4,874,2],[820,8,874,8,"upgradeAbility"],[820,22,874,22],[820,25,874,26,"abilityId"],[820,34,874,43],[820,38,874,57],[821,6,875,4],[821,13,875,11,"combatState"],[821,24,875,22],[821,25,875,23,"abilityManager"],[821,39,875,37],[821,40,875,38,"upgradeAbility"],[821,54,875,52],[821,55,875,53,"abilityId"],[821,64,875,62],[821,65,875,63],[822,4,876,2],[822,5,876,3],[824,4,878,2],[825,4,879,2],[825,8,879,8,"clearAllEnemies"],[825,23,879,23],[825,26,879,26,"clearAllEnemies"],[825,27,879,26],[825,32,879,32],[826,6,880,4,"console"],[826,13,880,11],[826,14,880,12,"log"],[826,17,880,15],[826,18,880,16],[826,67,880,65],[826,68,880,66],[827,6,881,4,"setCombatState"],[827,20,881,18],[827,21,881,19,"prev"],[827,25,881,23],[827,30,881,28],[828,8,882,6],[828,11,882,9,"prev"],[828,15,882,13],[829,8,883,6,"enemies"],[829,15,883,13],[829,17,883,15],[830,6,884,4],[830,7,884,5],[830,8,884,6],[830,9,884,7],[831,4,885,2],[831,5,885,3],[833,4,887,2],[834,4,888,2],[834,8,888,8,"triggerLevelUpExplosion"],[834,31,888,31],[834,34,888,34,"triggerLevelUpExplosion"],[834,35,888,34],[834,40,888,40],[835,6,889,4,"console"],[835,13,889,11],[835,14,889,12,"log"],[835,17,889,15],[835,18,889,16],[835,70,889,68],[835,71,889,69],[836,6,891,4],[836,10,891,10,"explosionTime"],[836,23,891,23],[836,26,891,26,"Date"],[836,30,891,30],[836,31,891,31,"now"],[836,34,891,34],[836,35,891,35],[836,36,891,36],[837,6,892,4,"setLastExplosionTime"],[837,26,892,24],[837,27,892,25,"explosionTime"],[837,40,892,38],[837,41,892,39],[838,6,894,4,"setCombatState"],[838,20,894,18],[838,21,894,19,"prev"],[838,25,894,23],[838,29,894,27],[839,8,895,6],[840,8,896,6],[840,12,896,12,"enemyCount"],[840,22,896,22],[840,25,896,25,"prev"],[840,29,896,29],[840,30,896,30,"enemies"],[840,37,896,37],[840,38,896,38,"length"],[840,44,896,44],[841,8,897,6],[841,12,897,12,"explosionXP"],[841,23,897,23],[841,26,897,26,"enemyCount"],[841,36,897,36],[841,39,897,39],[841,43,897,43],[841,44,897,44],[841,45,897,45],[842,8,898,6],[842,12,898,12,"explosionGold"],[842,25,898,25],[842,28,898,28,"enemyCount"],[842,38,898,38],[842,41,898,41],[842,44,898,44],[842,45,898,45],[842,46,898,46],[844,8,900,6,"console"],[844,15,900,13],[844,16,900,14,"log"],[844,19,900,17],[844,20,900,18],[844,44,900,42,"enemyCount"],[844,54,900,52],[844,76,900,74,"explosionXP"],[844,87,900,85],[844,98,900,96,"explosionGold"],[844,111,900,109],[844,118,900,116],[844,119,900,117],[846,8,902,6],[847,8,903,6],[847,12,903,10,"explosionXP"],[847,23,903,21],[847,26,903,24],[847,27,903,25],[847,29,903,27],[848,10,904,8,"setTimeout"],[848,20,904,18],[848,21,904,19],[848,27,904,25],[849,12,905,10,"game"],[849,16,905,14],[849,17,905,15,"updateNinja"],[849,28,905,26],[849,29,905,28,"ninja"],[849,34,905,33],[849,39,905,39],[850,14,906,12,"experience"],[850,24,906,22],[850,26,906,24,"ninja"],[850,31,906,29],[850,32,906,30,"experience"],[850,42,906,40],[850,45,906,43,"explosionXP"],[850,56,906,54],[851,14,907,12,"gold"],[851,18,907,16],[851,20,907,18,"ninja"],[851,25,907,23],[851,26,907,24,"gold"],[851,30,907,28],[851,33,907,31,"explosionGold"],[852,12,908,10],[852,13,908,11],[852,14,908,12],[852,15,908,13],[853,10,909,8],[853,11,909,9],[853,13,909,11],[853,14,909,12],[853,15,909,13],[853,16,909,14],[853,17,909,15],[854,8,910,6],[856,8,912,6],[857,8,913,6],[858,8,914,6],[858,12,914,12,"damagedEnemies"],[858,26,914,26],[858,29,914,29,"prev"],[858,33,914,33],[858,34,914,34,"enemies"],[858,41,914,41],[858,42,914,42,"map"],[858,45,914,45],[858,46,914,46,"enemy"],[858,51,914,51],[858,56,914,56],[859,10,915,8],[859,13,915,11,"enemy"],[859,18,915,16],[860,10,916,8,"health"],[860,16,916,14],[860,18,916,16],[860,19,916,17],[861,10,916,19],[862,10,917,8,"lastDamaged"],[862,21,917,19],[862,23,917,21,"combatEngine"],[862,42,917,33],[862,43,917,33,"combatEngine"],[862,55,917,33],[862,56,917,34,"getCurrentTick"],[862,70,917,48],[862,71,917,49],[863,8,918,6],[863,9,918,7],[863,10,918,8],[863,11,918,9],[864,8,920,6],[864,15,920,13],[865,10,921,8],[865,13,921,11,"prev"],[865,17,921,15],[866,10,922,8,"enemies"],[866,17,922,15],[866,19,922,17,"damagedEnemies"],[867,8,923,6],[867,9,923,7],[868,6,924,4],[868,7,924,5],[868,8,924,6],[869,4,925,2],[869,5,925,3],[871,4,927,2],[872,4,928,2],[872,8,928,8,"spawnEnemy"],[872,18,928,18],[872,21,928,22,"position"],[872,29,928,57],[872,33,928,75],[873,6,929,4],[873,10,929,10,"SCREEN_WIDTH"],[873,22,929,22],[873,25,929,25],[873,28,929,28],[874,6,930,4],[874,10,930,10,"GAME_AREA_HEIGHT"],[874,26,930,26],[874,29,930,29],[874,32,930,32],[874,35,930,35],[874,38,930,38],[874,39,930,39],[874,40,930,40],[875,6,931,4],[875,10,931,10,"ENEMY_SIZE"],[875,20,931,20],[875,23,931,23],[875,25,931,25],[877,6,933,4],[878,6,934,4],[878,10,934,10,"x"],[878,11,934,11],[878,14,934,14,"position"],[878,22,934,22],[878,24,934,24,"x"],[878,25,934,25],[878,29,934,29,"Math"],[878,33,934,33],[878,34,934,34,"random"],[878,40,934,40],[878,41,934,41],[878,42,934,42],[878,46,934,46,"SCREEN_WIDTH"],[878,58,934,58],[878,61,934,61,"ENEMY_SIZE"],[878,71,934,71],[878,74,934,74],[878,75,934,75],[878,76,934,76],[878,79,934,79,"ENEMY_SIZE"],[878,89,934,89],[879,6,935,4],[879,10,935,10,"y"],[879,11,935,11],[879,14,935,14,"position"],[879,22,935,22],[879,24,935,24,"y"],[879,25,935,25],[879,29,935,29,"Math"],[879,33,935,33],[879,34,935,34,"random"],[879,40,935,40],[879,41,935,41],[879,42,935,42],[879,46,935,46,"GAME_AREA_HEIGHT"],[879,62,935,62],[879,65,935,65,"ENEMY_SIZE"],[879,75,935,75],[879,78,935,78],[879,79,935,79],[879,80,935,80],[879,83,935,83,"ENEMY_SIZE"],[879,93,935,93],[880,6,937,4],[880,10,937,10,"enemy"],[880,15,937,28],[880,18,937,31],[881,8,938,6,"id"],[881,10,938,8],[881,12,938,10],[881,21,938,19],[881,23,938,21,"enemyCounter"],[881,35,938,33],[881,37,938,35],[882,8,939,6,"name"],[882,12,939,10],[882,14,939,12],[882,24,939,22],[883,8,940,6,"health"],[883,14,940,12],[883,16,940,14],[883,19,940,17],[884,8,941,6,"maxHealth"],[884,17,941,15],[884,19,941,17],[884,22,941,20],[885,8,942,6,"stats"],[885,13,942,11],[885,15,942,13],[886,10,943,8,"attack"],[886,16,943,14],[886,18,943,16],[886,20,943,18],[887,10,944,8,"defense"],[887,17,944,15],[887,19,944,17],[887,21,944,19],[888,10,945,8,"health"],[888,16,945,14],[888,18,945,16],[888,21,945,19],[889,10,946,8,"maxHealth"],[889,19,946,17],[889,21,946,19],[889,24,946,22],[890,10,947,8,"critChance"],[890,20,947,18],[890,22,947,20],[890,23,947,21],[891,10,948,8,"critDamage"],[891,20,948,18],[891,22,948,20],[891,25,948,23],[892,10,949,8,"cooldownReduction"],[892,27,949,25],[892,29,949,27],[893,8,950,6],[893,9,950,7],[894,8,951,6,"position"],[894,16,951,14],[894,18,951,16],[895,10,951,18,"x"],[895,11,951,19],[896,10,951,21,"y"],[897,8,951,23],[897,9,951,24],[898,8,952,6,"lastDamaged"],[898,19,952,17],[898,21,952,19],[899,6,953,4],[899,7,953,5],[900,6,955,4,"setCombatState"],[900,20,955,18],[900,21,955,19,"prev"],[900,25,955,23],[900,30,955,28],[901,8,956,6],[901,11,956,9,"prev"],[901,15,956,13],[902,8,957,6,"enemies"],[902,15,957,13],[902,17,957,15],[902,18,957,16],[902,21,957,19,"prev"],[902,25,957,23],[902,26,957,24,"enemies"],[902,33,957,31],[902,35,957,33,"enemy"],[902,40,957,38],[903,6,958,4],[903,7,958,5],[903,8,958,6],[903,9,958,7],[904,6,960,4],[904,13,960,11,"enemy"],[904,18,960,16],[905,4,961,2],[905,5,961,3],[907,4,963,2],[908,4,964,2],[908,8,964,8,"spawnBoss"],[908,17,964,17],[908,20,964,21,"bossEnemy"],[908,29,964,43],[908,33,964,48],[909,6,965,4,"console"],[909,13,965,11],[909,14,965,12,"log"],[909,17,965,15],[909,18,965,16],[909,39,965,37,"bossEnemy"],[909,48,965,46],[909,49,965,47,"name"],[909,53,965,51],[909,90,965,88],[909,91,965,89],[910,6,966,4,"setCombatState"],[910,20,966,18],[910,21,966,19,"prev"],[910,25,966,23],[910,30,966,28],[911,8,967,6],[911,11,967,9,"prev"],[911,15,967,13],[912,8,968,6,"enemies"],[912,15,968,13],[912,17,968,15],[912,18,968,16,"bossEnemy"],[912,27,968,25],[912,28,968,26],[912,29,968,27],[913,6,969,4],[913,7,969,5],[913,8,969,6],[913,9,969,7],[914,4,970,2],[914,5,970,3],[916,4,972,2],[917,4,973,2],[917,8,973,8,"clearSpecificEnemy"],[917,26,973,26],[917,29,973,30,"enemyId"],[917,36,973,45],[917,40,973,50],[918,6,974,4,"setCombatState"],[918,20,974,18],[918,21,974,19,"prev"],[918,25,974,23],[918,30,974,28],[919,8,975,6],[919,11,975,9,"prev"],[919,15,975,13],[920,8,976,6,"enemies"],[920,15,976,13],[920,17,976,15,"prev"],[920,21,976,19],[920,22,976,20,"enemies"],[920,29,976,27],[920,30,976,28,"filter"],[920,36,976,34],[920,37,976,35,"enemy"],[920,42,976,40],[920,46,976,44,"enemy"],[920,51,976,49],[920,52,976,50,"id"],[920,54,976,52],[920,59,976,57,"enemyId"],[920,66,976,64],[921,6,977,4],[921,7,977,5],[921,8,977,6],[921,9,977,7],[922,4,978,2],[922,5,978,3],[924,4,980,2],[925,4,981,2],[925,8,981,8,"useAbilityManually"],[925,26,981,26],[925,29,981,26,"_s3"],[925,32,981,26],[925,33,981,29],[925,37,981,29,"useCallback"],[925,43,981,40],[925,44,981,40,"useCallback"],[925,55,981,40],[925,57,981,40,"_s3"],[925,60,981,40],[925,61,981,42,"slotIndex"],[925,70,981,59],[925,74,981,73],[926,6,981,73,"_s3"],[926,9,981,73],[927,6,982,4,"console"],[927,13,982,11],[927,14,982,12,"log"],[927,17,982,15],[927,18,982,16],[927,64,982,62,"slotIndex"],[927,73,982,71],[927,82,982,80],[927,83,982,81],[928,6,983,4,"console"],[928,13,983,11],[928,14,983,12,"log"],[928,17,983,15],[928,18,983,16],[928,65,983,63,"slotIndex"],[928,74,983,72],[928,76,983,74],[928,77,983,75],[929,6,984,4,"console"],[929,13,984,11],[929,14,984,12,"log"],[929,17,984,15],[929,18,984,16],[929,53,984,51,"slotIndex"],[929,62,984,60],[929,64,984,62],[929,65,984,63],[931,6,986,4],[932,6,987,4],[932,10,987,8],[932,11,987,9,"game"],[932,15,987,13],[932,16,987,14,"gameState"],[932,25,987,23],[932,26,987,24,"isAlive"],[932,33,987,31],[932,35,987,33],[933,8,988,6,"console"],[933,15,988,13],[933,16,988,14,"log"],[933,19,988,17],[933,20,988,18],[933,70,988,68],[933,71,988,69],[934,8,989,6],[934,15,989,13],[934,20,989,18],[935,6,990,4],[937,6,992,4],[938,6,993,4],[938,10,993,10,"isReady"],[938,17,993,17],[938,20,993,20,"combatState"],[938,31,993,31],[938,32,993,32,"abilityManager"],[938,46,993,46],[938,47,993,47,"isAbilityReady"],[938,61,993,61],[938,62,993,62,"slotIndex"],[938,71,993,71],[938,72,993,72],[939,6,994,4],[939,10,994,8],[939,11,994,9,"isReady"],[939,18,994,16],[939,20,994,18],[940,8,995,6,"console"],[940,15,995,13],[940,16,995,14,"log"],[940,19,995,17],[940,20,995,18],[940,41,995,39,"slotIndex"],[940,50,995,48],[940,85,995,83],[940,86,995,84],[941,8,996,6],[941,15,996,13],[941,20,996,18],[942,6,997,4],[944,6,999,4],[945,6,1000,4],[945,10,1000,8,"combatState"],[945,21,1000,19],[945,22,1000,20,"enemies"],[945,29,1000,27],[945,30,1000,28,"length"],[945,36,1000,34],[945,41,1000,39],[945,42,1000,40],[945,44,1000,42],[946,8,1001,6,"console"],[946,15,1001,13],[946,16,1001,14,"log"],[946,19,1001,17],[946,20,1001,18],[946,69,1001,67],[946,70,1001,68],[947,8,1002,6],[947,15,1002,13],[947,20,1002,18],[948,6,1003,4],[950,6,1005,4],[951,6,1006,4],[951,10,1006,10,"currentTick"],[951,21,1006,21],[951,24,1006,24,"combatEngine"],[951,43,1006,36],[951,44,1006,36,"combatEngine"],[951,56,1006,36],[951,57,1006,37,"getCurrentTick"],[951,71,1006,51],[951,72,1006,52],[951,73,1006,53],[952,6,1007,4],[952,10,1007,10,"success"],[952,17,1007,17],[952,20,1007,20,"combatState"],[952,31,1007,31],[952,32,1007,32,"abilityManager"],[952,46,1007,46],[952,47,1007,47,"useAbility"],[952,57,1007,57],[952,58,1007,58,"slotIndex"],[952,67,1007,67],[952,69,1007,69,"currentTick"],[952,80,1007,80],[952,81,1007,81],[953,6,1009,4],[953,10,1009,8,"success"],[953,17,1009,15],[953,19,1009,17],[954,8,1010,6],[955,8,1011,6,"setCombatState"],[955,22,1011,20],[955,23,1011,21,"prev"],[955,27,1011,25],[955,31,1011,29],[956,10,1012,8],[956,14,1012,14,"newState"],[956,22,1012,22],[956,25,1012,25],[957,12,1012,27],[957,15,1012,30,"prev"],[958,10,1012,35],[958,11,1012,36],[959,10,1013,8,"castAbility"],[959,21,1013,19],[959,22,1013,20,"newState"],[959,30,1013,28],[959,32,1013,30,"slotIndex"],[959,41,1013,39],[959,42,1013,40],[960,10,1014,8],[960,17,1014,15,"newState"],[960,25,1014,23],[961,8,1015,6],[961,9,1015,7],[961,10,1015,8],[962,8,1017,6,"console"],[962,15,1017,13],[962,16,1017,14,"log"],[962,19,1017,17],[962,20,1017,18],[962,65,1017,63,"slotIndex"],[962,74,1017,72],[962,76,1017,74],[962,77,1017,75],[963,8,1018,6],[963,15,1018,13],[963,19,1018,17],[964,6,1019,4],[964,7,1019,5],[964,13,1019,11],[965,8,1020,6,"console"],[965,15,1020,13],[965,16,1020,14,"log"],[965,19,1020,17],[965,20,1020,18],[965,61,1020,59,"slotIndex"],[965,70,1020,68],[965,72,1020,70],[965,73,1020,71],[966,8,1021,6],[966,15,1021,13],[966,20,1021,18],[967,6,1022,4],[968,4,1023,2],[968,5,1023,3],[968,46,1023,5],[968,47,1023,6,"combatState"],[968,58,1023,17],[968,59,1023,18,"abilityManager"],[968,73,1023,32],[968,75,1023,34,"combatState"],[968,86,1023,45],[968,87,1023,46,"enemies"],[968,94,1023,53],[968,95,1023,54],[968,96,1023,55],[969,4,1024,2],[969,8,1024,2,"useEffect"],[969,14,1024,11],[969,15,1024,11,"useEffect"],[969,24,1024,11],[969,26,1024,12],[969,32,1024,18],[970,6,1025,4,"combatEngine"],[970,25,1025,16],[970,26,1025,16,"combatEngine"],[970,38,1025,16],[970,39,1025,17,"start"],[970,44,1025,22],[970,45,1025,23],[970,46,1025,24],[972,6,1027,4],[973,6,1028,4],[974,6,1029,4,"console"],[974,13,1029,11],[974,14,1029,12,"log"],[974,17,1029,15],[974,18,1029,16],[974,97,1029,95],[974,98,1029,96],[975,6,1031,4],[975,13,1031,11],[975,19,1031,17],[976,8,1032,6,"combatEngine"],[976,27,1032,18],[976,28,1032,18,"combatEngine"],[976,40,1032,18],[976,41,1032,19,"stop"],[976,45,1032,23],[976,46,1032,24],[976,47,1032,25],[977,6,1033,4],[977,7,1033,5],[978,4,1034,2],[978,5,1034,3],[978,7,1034,5],[978,9,1034,7],[978,10,1034,8],[980,4,1036,2],[981,4,1037,2],[981,8,1037,2,"useEffect"],[981,14,1037,11],[981,15,1037,11,"useEffect"],[981,24,1037,11],[981,26,1037,12],[981,32,1037,18],[982,6,1038,4],[982,10,1038,10,"processProjectileImpacts"],[982,34,1038,34],[982,37,1038,37,"processProjectileImpacts"],[982,38,1038,37],[982,43,1038,43],[983,8,1039,6,"setProjectiles"],[983,22,1039,20],[983,23,1039,21,"currentProjectiles"],[983,41,1039,39],[983,45,1039,43],[984,10,1040,8],[984,17,1040,15,"currentProjectiles"],[984,35,1040,33],[984,36,1040,34,"map"],[984,39,1040,37],[984,40,1040,38,"projectile"],[984,50,1040,48],[984,54,1040,52],[985,12,1041,10],[985,16,1041,14],[985,17,1041,15,"projectile"],[985,27,1041,25],[985,29,1041,27],[985,36,1041,34],[985,40,1041,38],[987,12,1043,10],[988,12,1044,10],[988,16,1044,16,"currentTime"],[988,27,1044,27],[988,30,1044,30,"Date"],[988,34,1044,34],[988,35,1044,35,"now"],[988,38,1044,38],[988,39,1044,39],[988,40,1044,40],[989,12,1045,10],[989,16,1045,16,"startTime"],[989,25,1045,25],[989,28,1045,28,"projectile"],[989,38,1045,38],[989,39,1045,39,"startTime"],[989,48,1045,48],[989,52,1045,52,"currentTime"],[989,63,1045,63],[990,12,1046,10],[990,16,1046,16,"elapsedTime"],[990,27,1046,27],[990,30,1046,30,"currentTime"],[990,41,1046,41],[990,44,1046,44,"startTime"],[990,53,1046,53],[991,12,1047,10],[991,16,1047,16,"progress"],[991,24,1047,24],[991,27,1047,27,"Math"],[991,31,1047,31],[991,32,1047,32,"min"],[991,35,1047,35],[991,36,1047,36,"elapsedTime"],[991,47,1047,47],[991,51,1047,51,"projectile"],[991,61,1047,61],[991,62,1047,62,"duration"],[991,70,1047,70],[991,74,1047,74],[991,77,1047,77],[991,78,1047,78],[991,80,1047,80],[991,81,1047,81],[991,82,1047,82],[993,12,1049,10],[994,12,1050,10],[994,16,1050,14,"progress"],[994,24,1050,22],[994,28,1050,26],[994,29,1050,27],[994,33,1050,31],[994,34,1050,32,"projectile"],[994,44,1050,42],[994,45,1050,43,"hasHit"],[994,51,1050,49],[994,53,1050,51],[995,14,1051,12,"projectile"],[995,24,1051,22],[995,25,1051,23,"hasHit"],[995,31,1051,29],[995,34,1051,32],[995,38,1051,36],[996,14,1053,12,"console"],[996,21,1053,19],[996,22,1053,20,"log"],[996,25,1053,23],[996,26,1053,24],[996,51,1053,49,"projectile"],[996,61,1053,59],[996,62,1053,60,"abilityName"],[996,73,1053,71],[996,97,1053,95],[996,98,1053,96],[997,14,1054,12,"setCombatState"],[997,28,1054,26],[997,29,1054,27,"prev"],[997,33,1054,31],[997,37,1054,35],[998,16,1055,14],[998,20,1055,20,"newState"],[998,28,1055,28],[998,31,1055,31],[999,18,1055,33],[999,21,1055,36,"prev"],[1000,16,1055,41],[1000,17,1055,42],[1001,16,1057,14],[1001,20,1057,18,"projectile"],[1001,30,1057,28],[1001,31,1057,29,"isAOE"],[1001,36,1057,34],[1001,40,1057,38,"projectile"],[1001,50,1057,48],[1001,51,1057,49,"aoeRadius"],[1001,60,1057,58],[1001,64,1057,62,"projectile"],[1001,74,1057,72],[1001,75,1057,73,"aoeRadius"],[1001,84,1057,82],[1001,87,1057,85],[1001,88,1057,86],[1001,90,1057,88],[1002,18,1058,16],[1003,18,1059,16,"console"],[1003,25,1059,23],[1003,26,1059,24,"log"],[1003,29,1059,27],[1003,30,1059,28],[1003,59,1059,57,"projectile"],[1003,69,1059,67],[1003,70,1059,68,"abilityName"],[1003,81,1059,79],[1003,97,1059,95,"projectile"],[1003,107,1059,105],[1003,108,1059,106,"aoeRadius"],[1003,117,1059,115],[1003,119,1059,117],[1003,120,1059,118],[1004,18,1061,16],[1004,22,1061,22,"impactX"],[1004,29,1061,29],[1004,32,1061,32,"projectile"],[1004,42,1061,42],[1004,43,1061,43,"targetX"],[1004,50,1061,50],[1005,18,1062,16],[1005,22,1062,22,"impactY"],[1005,29,1062,29],[1005,32,1062,32,"projectile"],[1005,42,1062,42],[1005,43,1062,43,"targetY"],[1005,50,1062,50],[1006,18,1063,16],[1006,22,1063,22,"enemiesKilled"],[1006,35,1063,50],[1006,38,1063,53],[1006,40,1063,55],[1008,18,1065,16],[1009,18,1066,16,"newState"],[1009,26,1066,24],[1009,27,1066,25,"enemies"],[1009,34,1066,32],[1009,37,1066,35,"newState"],[1009,45,1066,43],[1009,46,1066,44,"enemies"],[1009,53,1066,51],[1009,54,1066,52,"map"],[1009,57,1066,55],[1009,58,1066,56,"enemy"],[1009,63,1066,61],[1009,67,1066,65],[1010,20,1067,18],[1010,24,1067,22,"enemy"],[1010,29,1067,27],[1010,30,1067,28,"health"],[1010,36,1067,34],[1010,40,1067,38],[1010,41,1067,39],[1010,45,1067,43,"enemy"],[1010,50,1067,48],[1010,51,1067,49,"markedForDeath"],[1010,65,1067,63],[1010,67,1067,65],[1010,74,1067,72,"enemy"],[1010,79,1067,77],[1011,20,1069,18],[1011,24,1069,24,"enemyX"],[1011,30,1069,30],[1011,33,1069,33,"enemy"],[1011,38,1069,38],[1011,39,1069,39,"position"],[1011,47,1069,47],[1011,48,1069,48,"x"],[1011,49,1069,49],[1011,52,1069,52],[1011,56,1069,56],[1011,57,1069,57],[1011,58,1069,58],[1012,20,1070,18],[1012,24,1070,24,"enemyY"],[1012,30,1070,30],[1012,33,1070,33,"enemy"],[1012,38,1070,38],[1012,39,1070,39,"position"],[1012,47,1070,47],[1012,48,1070,48,"y"],[1012,49,1070,49],[1012,52,1070,52],[1012,56,1070,56],[1013,20,1071,18],[1013,24,1071,24,"distance"],[1013,32,1071,32],[1013,35,1071,35,"Math"],[1013,39,1071,39],[1013,40,1071,40,"sqrt"],[1013,44,1071,44],[1013,45,1071,45,"Math"],[1013,49,1071,49],[1013,50,1071,50,"pow"],[1013,53,1071,53],[1013,54,1071,54,"enemyX"],[1013,60,1071,60],[1013,63,1071,63,"impactX"],[1013,70,1071,70],[1013,72,1071,72],[1013,73,1071,73],[1013,74,1071,74],[1013,77,1071,77,"Math"],[1013,81,1071,81],[1013,82,1071,82,"pow"],[1013,85,1071,85],[1013,86,1071,86,"enemyY"],[1013,92,1071,92],[1013,95,1071,95,"impactY"],[1013,102,1071,102],[1013,104,1071,104],[1013,105,1071,105],[1013,106,1071,106],[1013,107,1071,107],[1014,20,1073,18,"console"],[1014,27,1073,25],[1014,28,1073,26,"log"],[1014,31,1073,29],[1014,32,1073,30],[1014,58,1073,56,"enemy"],[1014,63,1073,61],[1014,64,1073,62,"name"],[1014,68,1073,66],[1014,76,1073,74,"enemyX"],[1014,82,1073,80],[1014,87,1073,85,"enemyY"],[1014,93,1073,91],[1014,109,1073,107,"impactX"],[1014,116,1073,114],[1014,121,1073,119,"impactY"],[1014,128,1073,126],[1014,135,1073,133,"distance"],[1014,143,1073,141],[1014,144,1073,142,"toFixed"],[1014,151,1073,149],[1014,152,1073,150],[1014,153,1073,151],[1014,154,1073,152],[1014,169,1073,167,"projectile"],[1014,179,1073,177],[1014,180,1073,178,"aoeRadius"],[1014,189,1073,187],[1014,194,1073,192],[1014,195,1073,193],[1015,20,1075,18],[1015,24,1075,22,"distance"],[1015,32,1075,30],[1015,36,1075,34,"projectile"],[1015,46,1075,44],[1015,47,1075,45,"aoeRadius"],[1015,56,1075,54],[1015,58,1075,56],[1016,22,1076,20],[1017,22,1077,20],[1017,26,1077,26,"newHealth"],[1017,35,1077,35],[1017,38,1077,38,"Math"],[1017,42,1077,42],[1017,43,1077,43,"max"],[1017,46,1077,46],[1017,47,1077,47],[1017,48,1077,48],[1017,50,1077,50,"enemy"],[1017,55,1077,55],[1017,56,1077,56,"health"],[1017,62,1077,62],[1017,65,1077,65,"projectile"],[1017,75,1077,75],[1017,76,1077,76,"damage"],[1017,82,1077,82],[1017,83,1077,83],[1018,22,1079,20,"console"],[1018,29,1079,27],[1018,30,1079,28,"log"],[1018,33,1079,31],[1018,34,1079,32],[1018,52,1079,50,"enemy"],[1018,57,1079,55],[1018,58,1079,56,"name"],[1018,62,1079,60],[1018,74,1079,72,"projectile"],[1018,84,1079,82],[1018,85,1079,83,"damage"],[1018,91,1079,89],[1018,103,1079,101,"enemy"],[1018,108,1079,106],[1018,109,1079,107,"health"],[1018,115,1079,113],[1018,122,1079,120,"newHealth"],[1018,131,1079,129],[1018,134,1079,132],[1018,135,1079,133],[1020,22,1081,20],[1021,22,1082,20],[1021,26,1082,24,"newHealth"],[1021,35,1082,33],[1021,39,1082,37],[1021,40,1082,38],[1021,44,1082,42,"enemy"],[1021,49,1082,47],[1021,50,1082,48,"health"],[1021,56,1082,54],[1021,59,1082,57],[1021,60,1082,58],[1021,62,1082,60],[1022,24,1083,22,"console"],[1022,31,1083,29],[1022,32,1083,30,"log"],[1022,35,1083,33],[1022,36,1083,34],[1022,52,1083,50,"enemy"],[1022,57,1083,55],[1022,58,1083,56,"name"],[1022,62,1083,60],[1022,76,1083,74,"projectile"],[1022,86,1083,84],[1022,87,1083,85,"abilityName"],[1022,98,1083,96],[1022,101,1083,99],[1022,102,1083,100],[1023,24,1084,22,"enemiesKilled"],[1023,37,1084,35],[1023,38,1084,36,"push"],[1023,42,1084,40],[1023,43,1084,41,"enemy"],[1023,48,1084,46],[1023,49,1084,47],[1023,50,1084,48],[1023,51,1084,49],[1025,24,1086,22],[1025,31,1086,29],[1026,26,1087,24],[1026,29,1087,27,"enemy"],[1026,34,1087,32],[1027,26,1088,24,"health"],[1027,32,1088,30],[1027,34,1088,32],[1027,35,1088,33],[1028,26,1089,24,"markedForDeath"],[1028,40,1089,38],[1028,42,1089,40],[1028,46,1089,44],[1029,26,1090,24,"lastDamaged"],[1029,37,1090,35],[1029,39,1090,37,"combatEngine"],[1029,58,1090,49],[1029,59,1090,49,"combatEngine"],[1029,71,1090,49],[1029,72,1090,50,"getCurrentTick"],[1029,86,1090,64],[1029,87,1090,65],[1030,24,1091,22],[1030,25,1091,23],[1031,22,1092,20],[1031,23,1092,21],[1031,29,1092,27],[1032,24,1093,22],[1032,31,1093,29],[1033,26,1094,24],[1033,29,1094,27,"enemy"],[1033,34,1094,32],[1034,26,1095,24,"health"],[1034,32,1095,30],[1034,34,1095,32,"newHealth"],[1034,43,1095,41],[1035,26,1096,24,"lastDamaged"],[1035,37,1096,35],[1035,39,1096,37,"combatEngine"],[1035,58,1096,49],[1035,59,1096,49,"combatEngine"],[1035,71,1096,49],[1035,72,1096,50,"getCurrentTick"],[1035,86,1096,64],[1035,87,1096,65],[1036,24,1097,22],[1036,25,1097,23],[1037,22,1098,20],[1038,20,1099,18],[1039,20,1101,18],[1039,27,1101,25,"enemy"],[1039,32,1101,30],[1039,33,1101,31],[1039,34,1101,32],[1040,18,1102,16],[1040,19,1102,17],[1040,20,1102,18],[1042,18,1104,16],[1043,18,1105,16],[1043,22,1105,20,"enemiesKilled"],[1043,35,1105,33],[1043,36,1105,34,"length"],[1043,42,1105,40],[1043,45,1105,43],[1043,46,1105,44],[1043,48,1105,46],[1044,20,1106,18,"console"],[1044,27,1106,25],[1044,28,1106,26,"log"],[1044,31,1106,29],[1044,32,1106,30],[1044,52,1106,50,"enemiesKilled"],[1044,65,1106,63],[1044,66,1106,64,"length"],[1044,72,1106,70],[1044,94,1106,92,"projectile"],[1044,104,1106,102],[1044,105,1106,103,"abilityName"],[1044,116,1106,114],[1044,118,1106,116],[1044,119,1106,117],[1045,20,1107,18,"setTimeout"],[1045,30,1107,28],[1045,31,1107,29],[1045,37,1107,35],[1046,22,1108,20,"enemiesKilled"],[1046,35,1108,33],[1046,36,1108,34,"forEach"],[1046,43,1108,41],[1046,44,1108,42,"enemy"],[1046,49,1108,47],[1046,53,1108,51,"handleEnemyKill"],[1046,68,1108,66],[1046,69,1108,67,"enemy"],[1046,74,1108,72],[1046,75,1108,73],[1046,76,1108,74],[1047,20,1109,18],[1047,21,1109,19],[1047,23,1109,21],[1047,24,1109,22],[1047,25,1109,23],[1048,18,1110,16],[1049,16,1112,14],[1049,17,1112,15],[1049,23,1112,21],[1050,18,1113,16],[1051,18,1114,16],[1051,22,1114,22,"enemyIndex"],[1051,32,1114,32],[1051,35,1114,35,"newState"],[1051,43,1114,43],[1051,44,1114,44,"enemies"],[1051,51,1114,51],[1051,52,1114,52,"findIndex"],[1051,61,1114,61],[1051,62,1114,62,"e"],[1051,63,1114,63],[1051,67,1114,67,"e"],[1051,68,1114,68],[1051,69,1114,69,"id"],[1051,71,1114,71],[1051,76,1114,76,"projectile"],[1051,86,1114,86],[1051,87,1114,87,"targetEnemyId"],[1051,100,1114,100],[1051,101,1114,101],[1052,18,1116,16],[1052,22,1116,20,"enemyIndex"],[1052,32,1116,30],[1052,36,1116,34],[1052,37,1116,35],[1052,41,1116,39,"newState"],[1052,49,1116,47],[1052,50,1116,48,"enemies"],[1052,57,1116,55],[1052,58,1116,56,"enemyIndex"],[1052,68,1116,66],[1052,69,1116,67],[1052,70,1116,68,"health"],[1052,76,1116,74],[1052,79,1116,77],[1052,80,1116,78],[1052,84,1116,82],[1052,85,1116,83,"newState"],[1052,93,1116,91],[1052,94,1116,92,"enemies"],[1052,101,1116,99],[1052,102,1116,100,"enemyIndex"],[1052,112,1116,110],[1052,113,1116,111],[1052,114,1116,112,"markedForDeath"],[1052,128,1116,126],[1052,130,1116,128],[1053,20,1117,18,"newState"],[1053,28,1117,26],[1053,29,1117,27,"enemies"],[1053,36,1117,34],[1053,39,1117,37],[1053,40,1117,38],[1053,43,1117,41,"newState"],[1053,51,1117,49],[1053,52,1117,50,"enemies"],[1053,59,1117,57],[1053,60,1117,58],[1054,20,1118,18],[1054,24,1118,24,"enemy"],[1054,29,1118,29],[1054,32,1118,32,"newState"],[1054,40,1118,40],[1054,41,1118,41,"enemies"],[1054,48,1118,48],[1054,49,1118,49,"enemyIndex"],[1054,59,1118,59],[1054,60,1118,60],[1055,20,1119,18],[1055,24,1119,24,"newHealth"],[1055,33,1119,33],[1055,36,1119,36,"Math"],[1055,40,1119,40],[1055,41,1119,41,"max"],[1055,44,1119,44],[1055,45,1119,45],[1055,46,1119,46],[1055,48,1119,48,"enemy"],[1055,53,1119,53],[1055,54,1119,54,"health"],[1055,60,1119,60],[1055,63,1119,63,"projectile"],[1055,73,1119,73],[1055,74,1119,74,"damage"],[1055,80,1119,80],[1055,81,1119,81],[1056,20,1121,18,"newState"],[1056,28,1121,26],[1056,29,1121,27,"enemies"],[1056,36,1121,34],[1056,37,1121,35,"enemyIndex"],[1056,47,1121,45],[1056,48,1121,46],[1056,51,1121,49],[1057,22,1122,20],[1057,25,1122,23,"enemy"],[1057,30,1122,28],[1058,22,1123,20,"health"],[1058,28,1123,26],[1058,30,1123,28,"newHealth"],[1058,39,1123,37],[1059,22,1124,20,"lastDamaged"],[1059,33,1124,31],[1059,35,1124,33,"combatEngine"],[1059,54,1124,45],[1059,55,1124,45,"combatEngine"],[1059,67,1124,45],[1059,68,1124,46,"getCurrentTick"],[1059,82,1124,60],[1059,83,1124,61],[1060,20,1125,18],[1060,21,1125,19],[1061,20,1127,18,"console"],[1061,27,1127,25],[1061,28,1127,26,"log"],[1061,31,1127,29],[1061,32,1127,30],[1061,60,1127,58,"enemy"],[1061,65,1127,63],[1061,66,1127,64,"name"],[1061,70,1127,68],[1061,82,1127,80,"newHealth"],[1061,91,1127,89],[1061,95,1127,93,"enemy"],[1061,100,1127,98],[1061,101,1127,99,"maxHealth"],[1061,110,1127,108],[1061,112,1127,110],[1061,113,1127,111],[1063,20,1129,18],[1064,20,1130,18],[1064,24,1130,22,"newHealth"],[1064,33,1130,31],[1064,37,1130,35],[1064,38,1130,36],[1064,42,1130,40,"enemy"],[1064,47,1130,45],[1064,48,1130,46,"health"],[1064,54,1130,52],[1064,57,1130,55],[1064,58,1130,56],[1064,60,1130,58],[1065,22,1131,20,"console"],[1065,29,1131,27],[1065,30,1131,28,"log"],[1065,33,1131,31],[1065,34,1131,32],[1065,54,1131,52,"enemy"],[1065,59,1131,57],[1065,60,1131,58,"name"],[1065,64,1131,62],[1065,71,1131,69,"projectile"],[1065,81,1131,79],[1065,82,1131,80,"abilityName"],[1065,93,1131,91],[1065,106,1131,104,"enemy"],[1065,111,1131,109],[1065,112,1131,110,"health"],[1065,118,1131,116],[1065,161,1131,159],[1065,162,1131,160],[1066,20,1132,18],[1066,21,1132,19],[1066,27,1132,25],[1066,31,1132,29,"enemy"],[1066,36,1132,34],[1066,37,1132,35,"health"],[1066,43,1132,41],[1066,46,1132,44],[1066,47,1132,45],[1066,49,1132,47],[1067,22,1133,20,"console"],[1067,29,1133,27],[1067,30,1133,28,"log"],[1067,33,1133,31],[1067,34,1133,32],[1067,48,1133,46,"enemy"],[1067,53,1133,51],[1067,54,1133,52,"name"],[1067,58,1133,56],[1067,70,1133,68,"projectile"],[1067,80,1133,78],[1067,81,1133,79,"damage"],[1067,87,1133,85],[1067,99,1133,97,"enemy"],[1067,104,1133,102],[1067,105,1133,103,"health"],[1067,111,1133,109],[1067,117,1133,115,"newHealth"],[1067,126,1133,124],[1067,129,1133,127],[1067,130,1133,128],[1068,20,1134,18],[1069,18,1135,16],[1070,16,1136,14],[1071,16,1138,14],[1071,23,1138,21,"newState"],[1071,31,1138,29],[1072,14,1139,12],[1072,15,1139,13],[1072,16,1139,14],[1073,12,1140,10],[1075,12,1142,10],[1076,12,1143,10],[1076,16,1143,14,"progress"],[1076,24,1143,22],[1076,28,1143,26],[1076,31,1143,29],[1076,33,1143,31],[1077,14,1144,12],[1077,21,1144,19],[1077,25,1144,23],[1078,12,1145,10],[1079,12,1147,10],[1079,19,1147,17,"projectile"],[1079,29,1147,27],[1080,10,1148,8],[1080,11,1148,9],[1080,12,1148,10],[1080,13,1148,11,"filter"],[1080,19,1148,17],[1080,20,1148,18,"Boolean"],[1080,27,1148,25],[1080,28,1148,26],[1081,8,1149,6],[1081,9,1149,7],[1081,10,1149,8],[1082,6,1150,4],[1082,7,1150,5],[1084,6,1152,4],[1085,6,1153,4],[1085,10,1153,10,"impactInterval"],[1085,24,1153,24],[1085,27,1153,27,"setInterval"],[1085,38,1153,38],[1085,39,1153,39,"processProjectileImpacts"],[1085,63,1153,63],[1085,65,1153,65],[1085,67,1153,67],[1085,68,1153,68],[1086,6,1154,4],[1086,13,1154,11],[1086,19,1154,17,"clearInterval"],[1086,32,1154,30],[1086,33,1154,31,"impactInterval"],[1086,47,1154,45],[1086,48,1154,46],[1087,4,1155,2],[1087,5,1155,3],[1087,7,1155,5],[1087,8,1155,6,"handleEnemyKill"],[1087,23,1155,21],[1087,24,1155,22],[1087,25,1155,23],[1089,4,1157,2],[1090,4,1158,2],[1090,8,1158,8,"saveAbilityData"],[1090,23,1158,23],[1090,26,1158,26],[1090,30,1158,26,"useCallback"],[1090,36,1158,37],[1090,37,1158,37,"useCallback"],[1090,48,1158,37],[1090,50,1158,38],[1090,56,1158,44],[1091,6,1159,4],[1091,10,1159,8,"combatState"],[1091,21,1159,19],[1091,22,1159,20,"abilityManager"],[1091,36,1159,34],[1091,38,1159,36],[1092,8,1160,6],[1092,12,1160,12,"abilityData"],[1092,23,1160,23],[1092,26,1160,26,"combatState"],[1092,37,1160,37],[1092,38,1160,38,"abilityManager"],[1092,52,1160,52],[1092,53,1160,53,"getSaveData"],[1092,64,1160,64],[1092,65,1160,65],[1092,66,1160,66],[1093,8,1161,6,"console"],[1093,15,1161,13],[1093,16,1161,14,"log"],[1093,19,1161,17],[1093,20,1161,18],[1093,70,1161,68],[1093,72,1161,70,"abilityData"],[1093,83,1161,81],[1093,84,1161,82],[1094,8,1162,6,"game"],[1094,12,1162,10],[1094,13,1162,11,"updateAbilityData"],[1094,30,1162,28],[1094,31,1162,29,"abilityData"],[1094,42,1162,40],[1094,43,1162,41],[1095,6,1163,4],[1096,4,1164,2],[1096,5,1164,3],[1096,7,1164,5],[1096,8,1164,6,"combatState"],[1096,19,1164,17],[1096,20,1164,18,"abilityManager"],[1096,34,1164,32],[1096,36,1164,34,"game"],[1096,40,1164,38],[1096,41,1164,39,"updateAbilityData"],[1096,58,1164,56],[1096,59,1164,57],[1096,60,1164,58],[1097,4,1166,2],[1097,8,1166,8,"contextValue"],[1097,20,1166,39],[1097,23,1166,42,"React"],[1097,28,1166,47],[1097,29,1166,47,"default"],[1097,36,1166,47],[1097,37,1166,48,"useMemo"],[1097,44,1166,55],[1097,45,1166,56],[1097,52,1166,63],[1098,6,1167,4,"combatState"],[1098,17,1167,15],[1099,6,1168,4,"projectiles"],[1099,17,1168,15],[1100,6,1169,4,"startCombat"],[1100,17,1169,15],[1101,6,1170,4,"stopCombat"],[1101,16,1170,14],[1102,6,1171,4,"equipAbility"],[1102,18,1171,16],[1103,6,1172,4,"handleEnemyKill"],[1103,21,1172,19],[1104,6,1173,4,"getDeck"],[1104,13,1173,11],[1105,6,1174,4,"getAvailableAbilities"],[1105,27,1174,25],[1106,6,1175,4,"upgradeAbility"],[1106,20,1175,18],[1107,6,1176,4,"spawnEnemy"],[1107,16,1176,14],[1108,6,1177,4,"spawnBoss"],[1108,15,1177,13],[1109,6,1178,4,"clearAllEnemies"],[1109,21,1178,19],[1110,6,1179,4,"clearSpecificEnemy"],[1110,24,1179,22],[1111,6,1180,4,"triggerLevelUpExplosion"],[1111,29,1180,27],[1112,6,1181,4,"findClosestEnemy"],[1112,22,1181,20],[1113,6,1182,4,"updateNinjaPosition"],[1113,25,1182,23],[1114,6,1183,4,"setManualControlActive"],[1114,28,1183,26],[1115,6,1184,4,"lastExplosionTime"],[1115,23,1184,21],[1116,6,1185,4,"useAbilityManually"],[1116,24,1185,22],[1117,6,1185,24],[1118,6,1186,4,"saveAbilityData"],[1118,21,1186,19],[1119,6,1186,21],[1120,6,1187,4,"shadowClone"],[1120,17,1187,15],[1120,19,1187,17,"combatState"],[1120,30,1187,28],[1120,31,1187,29,"shadowClone"],[1120,42,1187,40],[1120,43,1187,42],[1121,4,1188,2],[1121,5,1188,3],[1121,6,1188,4],[1121,8,1188,6],[1122,4,1189,4],[1123,4,1190,4],[1124,4,1191,4,"combatState"],[1124,15,1191,15],[1124,17,1192,4,"projectiles"],[1124,28,1192,15],[1124,30,1193,4,"lastExplosionTime"],[1124,47,1193,21],[1125,4,1194,4],[1126,4,1195,4,"combatState"],[1126,15,1195,15],[1126,16,1195,16,"abilityManager"],[1126,30,1195,30],[1126,32,1196,4,"combatState"],[1126,43,1196,15],[1126,44,1196,16,"enemies"],[1126,51,1196,23],[1126,53,1197,4,"combatState"],[1126,64,1197,15],[1126,65,1197,16,"shadowClone"],[1126,76,1197,27],[1127,4,1197,29],[1128,4,1198,4,"useAbilityManually"],[1128,22,1198,22],[1129,4,1198,24],[1130,4,1199,4,"saveAbilityData"],[1130,19,1199,19],[1130,20,1199,21],[1131,4,1199,21],[1131,5,1200,3],[1131,6,1200,4],[1132,4,1202,2],[1132,24,1203,4],[1132,28,1203,4,"_reactJsxDevRuntime"],[1132,47,1203,4],[1132,48,1203,4,"jsxDEV"],[1132,54,1203,4],[1132,56,1203,5,"CombatContext"],[1132,69,1203,18],[1132,70,1203,19,"Provider"],[1132,78,1203,27],[1133,6,1203,28,"value"],[1133,11,1203,33],[1133,13,1203,35,"contextValue"],[1133,25,1203,48],[1134,6,1203,48,"children"],[1134,14,1203,48],[1134,16,1204,7,"children"],[1135,4,1204,15],[1136,6,1204,15,"fileName"],[1136,14,1204,15],[1136,16,1204,15,"_jsxFileName"],[1136,28,1204,15],[1137,6,1204,15,"lineNumber"],[1137,16,1204,15],[1138,6,1204,15,"columnNumber"],[1138,18,1204,15],[1139,4,1204,15],[1139,11,1205,28],[1139,12,1205,29],[1140,2,1207,0],[1140,3,1207,1],[1141,2,1207,2,"_s4"],[1141,5,1207,2],[1141,6,103,13,"CombatProvider"],[1141,20,103,27],[1142,4,103,27],[1142,12,104,15,"useGame"],[1142,24,104,22],[1142,25,104,22,"useGame"],[1142,32,104,22],[1142,34,105,77,"useZone"],[1142,46,105,84],[1142,47,105,84,"useZone"],[1142,54,105,84],[1143,2,105,84],[1144,2,105,84,"_c"],[1144,4,105,84],[1144,7,103,13,"CombatProvider"],[1144,21,103,27],[1145,2,103,27],[1145,6,103,27,"_c"],[1145,8,103,27],[1146,2,103,27,"$RefreshReg$"],[1146,14,103,27],[1146,15,103,27,"_c"],[1146,17,103,27],[1147,0,103,27],[1147,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCqB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Cc;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;a+CyB;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}