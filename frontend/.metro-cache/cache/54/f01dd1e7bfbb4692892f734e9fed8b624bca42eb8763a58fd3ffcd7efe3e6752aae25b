{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    var SCREEN_WIDTH = 390;\n    var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    var NINJA_SIZE = 40;\n    var _useState7 = (0, _react.useState)({\n        x: 50,\n        y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      ninjaPosition = _useState8[0],\n      setNinjaPosition = _useState8[1];\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // BATCH all state updates to prevent cross-context cascade on mobile\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      updateNinja(prev => {\n        console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // Defer zone update to next event loop to prevent cascade\n      setTimeout(() => {\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            var MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            var _SCREEN_WIDTH = 390;\n            var _GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            var newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            var newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= _SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(_SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= _GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(_GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (var i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    var updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"387yj0EOMzCjt8z9UaORPer6soo=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":612,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,623,2],[27,6,623,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,623,2],[27,42,623,2,"require"],[27,49,623,2],[27,50,623,2,"_dependencyMap"],[27,64,623,2],[28,2,623,2],[28,6,623,2,"_slicedToArray"],[28,20,623,2],[28,23,623,2,"_interopDefault"],[28,38,623,2],[28,39,623,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,623,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,65,0],[36,6,65,6,"CombatContext"],[36,19,65,19],[36,35,65,22],[36,39,65,22,"createContext"],[36,45,65,35],[36,46,65,35,"createContext"],[36,59,65,35],[36,61,65,67,"undefined"],[36,70,65,76],[36,71,65,77],[37,2,67,7],[37,6,67,13,"useCombat"],[37,15,67,22],[37,18,67,25,"useCombat"],[37,19,67,25],[37,24,67,50],[38,4,67,50,"_s"],[38,6,67,50],[39,4,68,2],[39,8,68,8,"context"],[39,15,68,15],[39,18,68,18],[39,22,68,18,"useContext"],[39,28,68,28],[39,29,68,28,"useContext"],[39,39,68,28],[39,41,68,29,"CombatContext"],[39,54,68,42],[39,55,68,43],[40,4,69,2],[40,8,69,6],[40,9,69,7,"context"],[40,16,69,14],[40,18,69,16],[41,6,70,4],[41,12,70,10],[41,16,70,14,"Error"],[41,21,70,19],[41,22,70,20],[41,70,70,68],[41,71,70,69],[42,4,71,2],[43,4,72,2],[43,11,72,9,"context"],[43,18,72,16],[44,2,73,0],[44,3,73,1],[45,2,73,2,"_s"],[45,4,73,2],[45,5,67,13,"useCombat"],[45,14,67,22],[46,2,75,0],[46,6,75,4,"enemyCounter"],[46,18,75,16],[46,21,75,19],[46,22,75,20],[46,23,75,21],[46,24,75,22],[48,2,77,7],[48,6,77,13,"CombatProvider"],[48,20,77,27],[48,23,77,30,"_ref"],[48,27,77,30],[48,31,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,77,73],[50,8,77,33,"children"],[50,16,77,41],[50,19,77,41,"_ref"],[50,23,77,41],[50,24,77,33,"children"],[50,32,77,41],[51,4,78,2],[51,8,78,2,"_useGame"],[51,16,78,2],[51,19,78,26],[51,23,78,26,"useGame"],[51,35,78,33],[51,36,78,33,"useGame"],[51,43,78,33],[51,45,78,34],[51,46,78,35],[52,6,78,10,"updateNinja"],[52,17,78,21],[52,20,78,21,"_useGame"],[52,28,78,21],[52,29,78,10,"updateNinja"],[52,40,78,21],[53,4,79,2],[53,8,79,2,"_useZone"],[53,16,79,2],[53,19,79,30],[53,23,79,30,"useZone"],[53,35,79,37],[53,36,79,37,"useZone"],[53,43,79,37],[53,45,79,38],[53,46,79,39],[54,6,79,10,"recordEnemyKill"],[54,21,79,25],[54,24,79,25,"_useZone"],[54,32,79,25],[54,33,79,10,"recordEnemyKill"],[54,48,79,25],[55,4,81,2],[55,8,81,2,"_useState"],[55,17,81,2],[55,20,81,40],[55,24,81,40,"useState"],[55,30,81,48],[55,31,81,48,"useState"],[55,39,81,48],[55,41,81,62],[56,8,82,4,"isInCombat"],[56,18,82,14],[56,20,82,16],[56,25,82,21],[57,8,83,4,"currentTick"],[57,19,83,15],[57,21,83,17],[57,22,83,18],[58,8,84,4,"enemies"],[58,15,84,11],[58,17,84,13],[58,19,84,15],[59,8,85,4,"abilityManager"],[59,22,85,18],[59,24,85,20],[59,28,85,24,"AbilityManager"],[59,46,85,38],[59,47,85,38,"AbilityManager"],[59,61,85,38],[59,62,85,39],[59,63,85,40],[60,8,86,4,"statusEffects"],[60,21,86,17],[60,23,86,19],[60,27,86,23,"StatusEffectManager"],[60,46,86,42],[60,47,86,42,"StatusEffectManager"],[60,66,86,42],[60,67,86,43],[60,68,86,44],[61,8,87,4,"playerStats"],[61,19,87,15],[61,21,87,17],[62,10,88,6,"attack"],[62,16,88,12],[62,18,88,14],[62,20,88,16],[63,10,88,18],[64,10,89,6,"defense"],[64,17,89,13],[64,19,89,15],[64,20,89,16],[65,10,90,6,"health"],[65,16,90,12],[65,18,90,14],[65,21,90,17],[66,10,91,6,"maxHealth"],[66,19,91,15],[66,21,91,17],[66,24,91,20],[67,10,92,6,"critChance"],[67,20,92,16],[67,22,92,18],[67,23,92,19],[68,10,93,6,"critDamage"],[68,20,93,16],[68,22,93,18],[68,25,93,21],[69,10,94,6,"cooldownReduction"],[69,27,94,23],[69,29,94,25],[70,8,95,4],[71,6,96,2],[71,7,96,3],[71,8,96,4],[72,6,96,4,"_useState2"],[72,16,96,4],[72,23,96,4,"_slicedToArray"],[72,37,96,4],[72,38,96,4,"default"],[72,45,96,4],[72,47,96,4,"_useState"],[72,56,96,4],[73,6,81,9,"combatState"],[73,17,81,20],[73,20,81,20,"_useState2"],[73,30,81,20],[74,6,81,22,"setCombatState"],[74,20,81,36],[74,23,81,36,"_useState2"],[74,33,81,36],[75,4,98,2],[75,8,98,2,"_useState3"],[75,18,98,2],[75,21,98,40],[75,25,98,40,"useState"],[75,31,98,48],[75,32,98,48,"useState"],[75,40,98,48],[75,42,98,69],[75,44,98,71],[75,45,98,72],[76,6,98,72,"_useState4"],[76,16,98,72],[76,23,98,72,"_slicedToArray"],[76,37,98,72],[76,38,98,72,"default"],[76,45,98,72],[76,47,98,72,"_useState3"],[76,57,98,72],[77,6,98,9,"projectiles"],[77,17,98,20],[77,20,98,20,"_useState4"],[77,30,98,20],[78,6,98,22,"setProjectiles"],[78,20,98,36],[78,23,98,36,"_useState4"],[78,33,98,36],[79,4,99,2],[79,8,99,2,"_useState5"],[79,18,99,2],[79,21,99,52],[79,25,99,52,"useState"],[79,31,99,60],[79,32,99,60,"useState"],[79,40,99,60],[79,42,99,69],[79,43,99,70],[79,44,99,71],[80,6,99,71,"_useState6"],[80,16,99,71],[80,23,99,71,"_slicedToArray"],[80,37,99,71],[80,38,99,71,"default"],[80,45,99,71],[80,47,99,71,"_useState5"],[80,57,99,71],[81,6,99,9,"lastExplosionTime"],[81,23,99,26],[81,26,99,26,"_useState6"],[81,36,99,26],[82,6,99,28,"setLastExplosionTime"],[82,26,99,48],[82,29,99,48,"_useState6"],[82,39,99,48],[83,4,100,2],[84,4,101,2],[84,8,101,8,"SCREEN_WIDTH"],[84,20,101,20],[84,23,101,23],[84,26,101,26],[85,4,102,2],[85,8,102,8,"GAME_AREA_HEIGHT"],[85,24,102,24],[85,27,102,27],[85,30,102,30],[85,33,102,33],[85,36,102,36],[85,37,102,37],[85,38,102,38],[86,4,103,2],[86,8,103,8,"NINJA_SIZE"],[86,18,103,18],[86,21,103,21],[86,23,103,23],[87,4,104,2],[87,8,104,2,"_useState7"],[87,18,104,2],[87,21,104,44],[87,25,104,44,"useState"],[87,31,104,52],[87,32,104,52,"useState"],[87,40,104,52],[87,42,104,77],[88,8,105,4,"x"],[88,9,105,5],[88,11,105,7],[88,13,105,9],[89,8,106,4,"y"],[89,9,106,5],[89,11,106,7,"GAME_AREA_HEIGHT"],[89,27,106,23],[89,30,106,26,"NINJA_SIZE"],[89,40,106,36],[89,43,106,39],[90,6,107,2],[90,7,107,3],[90,8,107,4],[91,6,107,4,"_useState8"],[91,16,107,4],[91,23,107,4,"_slicedToArray"],[91,37,107,4],[91,38,107,4,"default"],[91,45,107,4],[91,47,107,4,"_useState7"],[91,57,107,4],[92,6,104,9,"ninjaPosition"],[92,19,104,22],[92,22,104,22,"_useState8"],[92,32,104,22],[93,6,104,24,"setNinjaPosition"],[93,22,104,40],[93,25,104,40,"_useState8"],[93,35,104,40],[95,4,109,2],[96,4,110,2],[96,8,110,8,"handleEnemyKill"],[96,23,110,23],[96,26,110,26],[96,30,110,26,"useCallback"],[96,36,110,37],[96,37,110,37,"useCallback"],[96,48,110,37],[96,50,110,39,"enemy"],[96,55,110,57],[96,59,110,62],[97,6,111,4,"console"],[97,13,111,11],[97,14,111,12,"log"],[97,17,111,15],[97,18,111,16],[97,46,111,44,"enemy"],[97,51,111,49],[97,52,111,50,"maxHealth"],[97,61,111,59],[97,63,111,61],[97,64,111,62],[99,6,113,4],[100,6,114,4],[100,10,114,10,"xpReward"],[100,18,114,18],[100,21,114,21],[100,23,114,23],[100,24,114,24],[100,25,114,25],[101,6,115,4],[101,10,115,10,"goldReward"],[101,20,115,20],[101,23,115,23],[101,25,115,25],[102,6,117,4,"console"],[102,13,117,11],[102,14,117,12,"log"],[102,17,117,15],[102,18,117,16],[102,33,117,31,"xpReward"],[102,41,117,39],[102,52,117,50,"goldReward"],[102,62,117,60],[102,78,117,76],[102,79,117,77],[104,6,119,4],[105,6,120,4],[106,6,121,4,"updateNinja"],[106,17,121,15],[106,18,121,17,"prev"],[106,22,121,21],[106,26,121,26],[107,8,122,6,"console"],[107,15,122,13],[107,16,122,14,"log"],[107,19,122,17],[107,20,122,18],[107,37,122,35,"prev"],[107,41,122,39],[107,42,122,40,"experience"],[107,52,122,50],[107,64,122,62,"prev"],[107,68,122,66],[107,69,122,67,"experience"],[107,79,122,77],[107,82,122,80,"xpReward"],[107,90,122,88],[107,92,122,90],[107,93,122,91],[108,8,123,6],[108,15,123,13],[109,10,124,8,"experience"],[109,20,124,18],[109,22,124,20,"prev"],[109,26,124,24],[109,27,124,25,"experience"],[109,37,124,35],[109,40,124,38,"xpReward"],[109,48,124,46],[110,10,125,8,"gold"],[110,14,125,12],[110,16,125,14,"prev"],[110,20,125,18],[110,21,125,19,"gold"],[110,25,125,23],[110,28,125,26,"goldReward"],[111,8,126,6],[111,9,126,7],[112,6,127,4],[112,7,127,5],[112,8,127,6],[114,6,129,4],[115,6,130,4,"setTimeout"],[115,16,130,14],[115,17,130,15],[115,23,130,21],[116,8,131,6],[117,8,132,6],[117,12,132,12,"zoneEnemy"],[117,21,132,21],[117,24,132,24],[118,10,133,8,"id"],[118,12,133,10],[118,14,133,12,"enemy"],[118,19,133,17],[118,20,133,18,"id"],[118,22,133,20],[119,10,134,8,"typeId"],[119,16,134,14],[119,18,134,16],[119,28,134,26],[120,10,134,28],[121,10,135,8,"name"],[121,14,135,12],[121,16,135,14,"enemy"],[121,21,135,19],[121,22,135,20,"name"],[121,26,135,24],[122,10,136,8,"icon"],[122,14,136,12],[122,16,136,14],[122,20,136,18],[123,10,136,20],[124,10,137,8,"hp"],[124,12,137,10],[124,14,137,12],[124,15,137,13],[125,10,137,15],[126,10,138,8,"maxHP"],[126,15,138,13],[126,17,138,15,"enemy"],[126,22,138,20],[126,23,138,21,"maxHealth"],[126,32,138,30],[127,10,139,8,"attack"],[127,16,139,14],[127,18,139,16,"enemy"],[127,23,139,21],[127,24,139,22,"stats"],[127,29,139,27],[127,30,139,28,"attack"],[127,36,139,34],[128,10,140,8,"xp"],[128,12,140,10],[128,14,140,12],[128,16,140,14],[129,10,140,16],[130,10,141,8,"position"],[130,18,141,16],[130,20,141,18,"enemy"],[130,25,141,23],[130,26,141,24,"position"],[131,8,142,6],[131,9,142,7],[132,8,144,6,"recordEnemyKill"],[132,23,144,21],[132,24,144,22,"zoneEnemy"],[132,33,144,31],[132,34,144,32],[133,6,145,4],[133,7,145,5],[133,9,145,7],[133,10,145,8],[133,11,145,9],[133,12,145,10],[133,13,145,11],[134,4,146,2],[134,5,146,3],[134,7,146,5],[134,8,146,6,"updateNinja"],[134,19,146,17],[134,21,146,19,"recordEnemyKill"],[134,36,146,34],[134,37,146,35],[134,38,146,36],[136,4,148,2],[137,4,149,2],[137,8,149,8,"handleCombatTick"],[137,24,149,24],[137,27,149,27,"React"],[137,32,149,32],[137,33,149,32,"default"],[137,40,149,32],[137,41,149,33,"useCallback"],[137,52,149,44],[137,53,149,45],[137,59,149,51],[138,6,149,51],[138,10,149,51,"_s2"],[138,13,149,51],[138,16,149,51,"$RefreshSig$"],[138,28,149,51],[139,6,150,4,"console"],[139,13,150,11],[139,14,150,12,"log"],[139,17,150,15],[139,18,150,16],[139,45,150,43],[139,46,150,44],[140,6,152,4],[140,10,152,8,"enemiesToKill"],[140,23,152,36],[140,26,152,39],[140,28,152,41],[140,29,152,42],[140,30,152,43],[142,6,154,4,"_s2"],[142,9,154,4],[142,10,154,4,"setCombatState"],[142,24,154,18],[142,25,154,18,"_s2"],[142,28,154,18],[142,29,154,19,"prev"],[142,33,154,23],[142,37,154,27],[143,8,154,27,"_s2"],[143,11,154,27],[144,8,155,6],[144,12,155,12,"newTick"],[144,19,155,19],[144,22,155,22,"combatEngine"],[144,41,155,34],[144,42,155,34,"combatEngine"],[144,54,155,34],[144,55,155,35,"getCurrentTick"],[144,69,155,49],[144,70,155,50],[144,71,155,51],[145,8,156,6],[145,12,156,12,"newState"],[145,20,156,20],[145,23,156,23],[146,10,156,25],[146,13,156,28,"prev"],[146,17,156,32],[147,10,156,34,"currentTick"],[147,21,156,45],[147,23,156,47,"newTick"],[148,8,156,55],[148,9,156,56],[149,8,158,6],[149,12,158,10],[149,13,158,11,"newState"],[149,21,158,19],[149,22,158,20,"isInCombat"],[149,32,158,30],[149,34,158,32],[149,41,158,39,"newState"],[149,49,158,47],[151,8,160,6],[152,8,161,6,"newState"],[152,16,161,14],[152,17,161,15,"abilityManager"],[152,31,161,29],[152,32,161,30,"updateCooldowns"],[152,47,161,45],[152,48,161,46,"newTick"],[152,55,161,53],[152,56,161,54],[154,8,163,6],[155,8,164,6],[155,12,164,12,"effectResults"],[155,25,164,25],[155,28,164,28,"newState"],[155,36,164,36],[155,37,164,37,"statusEffects"],[155,50,164,50],[155,51,164,51,"processTick"],[155,62,164,62],[155,63,164,63,"newTick"],[155,70,164,70],[155,71,164,71],[157,8,166,6],[158,8,167,6,"effectResults"],[158,21,167,19],[158,22,167,20,"forEach"],[158,29,167,27],[158,30,167,28],[158,31,167,29,"results"],[158,38,167,36],[158,40,167,38,"entityId"],[158,48,167,46],[158,53,167,51],[159,10,168,8],[159,14,168,14,"enemyIndex"],[159,24,168,24],[159,27,168,27,"newState"],[159,35,168,35],[159,36,168,36,"enemies"],[159,43,168,43],[159,44,168,44,"findIndex"],[159,53,168,53],[159,54,168,54,"e"],[159,55,168,55],[159,59,168,59,"e"],[159,60,168,60],[159,61,168,61,"id"],[159,63,168,63],[159,68,168,68,"entityId"],[159,76,168,76],[159,77,168,77],[160,10,169,8],[160,14,169,12,"enemyIndex"],[160,24,169,22],[160,28,169,26],[160,29,169,27],[160,31,169,29],[161,12,170,10,"results"],[161,19,170,17],[161,20,170,18,"forEach"],[161,27,170,25],[161,28,170,26,"result"],[161,34,170,32],[161,38,170,36],[162,14,171,12,"newState"],[162,22,171,20],[162,23,171,21,"enemies"],[162,30,171,28],[162,31,171,29,"enemyIndex"],[162,41,171,39],[162,42,171,40],[162,43,171,41,"health"],[162,49,171,47],[162,53,171,51,"result"],[162,59,171,57],[162,60,171,58,"damage"],[162,66,171,64],[163,14,172,12,"newState"],[163,22,172,20],[163,23,172,21,"enemies"],[163,30,172,28],[163,31,172,29,"enemyIndex"],[163,41,172,39],[163,42,172,40],[163,43,172,41,"lastDamaged"],[163,54,172,52],[163,57,172,55,"newTick"],[163,64,172,62],[164,12,173,10],[164,13,173,11],[164,14,173,12],[165,10,174,8],[166,8,175,6],[166,9,175,7],[166,10,175,8],[168,8,177,6],[169,8,178,6,"newState"],[169,16,178,14],[169,17,178,15,"enemies"],[169,24,178,22],[169,25,178,23,"forEach"],[169,32,178,30],[169,33,178,31,"enemy"],[169,38,178,36],[169,42,178,40],[170,10,179,8],[170,14,179,12],[170,15,179,13,"enemy"],[170,20,179,18],[170,21,179,19,"isBoss"],[170,27,179,25],[170,29,179,27],[171,12,179,29],[172,12,180,10],[173,12,181,10],[173,16,181,16,"MOVEMENT_SPEED"],[173,30,181,30],[173,33,181,33],[173,36,181,36],[173,37,181,37],[173,38,181,38],[174,12,182,10],[174,16,182,16,"SCREEN_WIDTH"],[174,29,182,28],[174,32,182,31],[174,35,182,34],[175,12,183,10],[175,16,183,16,"GAME_AREA_HEIGHT"],[175,33,183,32],[175,36,183,35],[175,39,183,38],[175,40,183,39],[175,41,183,40],[176,12,184,10],[176,16,184,16,"ENEMY_SIZE"],[176,26,184,26],[176,29,184,29],[176,31,184,31],[178,12,186,10],[179,12,187,10],[179,16,187,14],[179,17,187,15,"enemy"],[179,22,187,20],[179,23,187,21,"movementDirection"],[179,40,187,38],[179,42,187,40],[180,14,188,12],[181,14,189,12,"enemy"],[181,19,189,17],[181,20,189,18,"movementDirection"],[181,37,189,35],[181,40,189,38],[182,16,190,14,"x"],[182,17,190,15],[182,19,190,17],[182,20,190,18,"Math"],[182,24,190,22],[182,25,190,23,"random"],[182,31,190,29],[182,32,190,30],[182,33,190,31],[182,36,190,34],[182,39,190,37],[182,43,190,41],[182,44,190,42],[183,16,190,44],[184,16,191,14,"y"],[184,17,191,15],[184,19,191,17],[184,20,191,18,"Math"],[184,24,191,22],[184,25,191,23,"random"],[184,31,191,29],[184,32,191,30],[184,33,191,31],[184,36,191,34],[184,39,191,37],[184,43,191,41],[185,14,192,12],[185,15,192,13],[186,12,193,10],[188,12,195,10],[189,12,196,10],[189,16,196,14,"newX"],[189,20,196,18],[189,23,196,21,"enemy"],[189,28,196,26],[189,29,196,27,"position"],[189,37,196,35],[189,38,196,36,"x"],[189,39,196,37],[189,42,196,41,"enemy"],[189,47,196,46],[189,48,196,47,"movementDirection"],[189,65,196,64],[189,66,196,65,"x"],[189,67,196,66],[189,70,196,69,"MOVEMENT_SPEED"],[189,84,196,84],[190,12,197,10],[190,16,197,14,"newY"],[190,20,197,18],[190,23,197,21,"enemy"],[190,28,197,26],[190,29,197,27,"position"],[190,37,197,35],[190,38,197,36,"y"],[190,39,197,37],[190,42,197,41,"enemy"],[190,47,197,46],[190,48,197,47,"movementDirection"],[190,65,197,64],[190,66,197,65,"y"],[190,67,197,66],[190,70,197,69,"MOVEMENT_SPEED"],[190,84,197,84],[192,12,199,10],[193,12,200,10],[193,16,200,14,"newX"],[193,20,200,18],[193,24,200,22],[193,25,200,23],[193,29,200,27,"newX"],[193,33,200,31],[193,37,200,35,"SCREEN_WIDTH"],[193,50,200,47],[193,53,200,50,"ENEMY_SIZE"],[193,63,200,60],[193,65,200,62],[194,14,201,12,"enemy"],[194,19,201,17],[194,20,201,18,"movementDirection"],[194,37,201,35],[194,38,201,36,"x"],[194,39,201,37],[194,43,201,41],[194,44,201,42],[194,45,201,43],[195,14,202,12,"newX"],[195,18,202,16],[195,21,202,19,"Math"],[195,25,202,23],[195,26,202,24,"max"],[195,29,202,27],[195,30,202,28],[195,31,202,29],[195,33,202,31,"Math"],[195,37,202,35],[195,38,202,36,"min"],[195,41,202,39],[195,42,202,40,"SCREEN_WIDTH"],[195,55,202,52],[195,58,202,55,"ENEMY_SIZE"],[195,68,202,65],[195,70,202,67,"newX"],[195,74,202,71],[195,75,202,72],[195,76,202,73],[196,12,203,10],[197,12,204,10],[197,16,204,14,"newY"],[197,20,204,18],[197,24,204,22],[197,25,204,23],[197,29,204,27,"newY"],[197,33,204,31],[197,37,204,35,"GAME_AREA_HEIGHT"],[197,54,204,51],[197,57,204,54,"ENEMY_SIZE"],[197,67,204,64],[197,69,204,66],[198,14,205,12,"enemy"],[198,19,205,17],[198,20,205,18,"movementDirection"],[198,37,205,35],[198,38,205,36,"y"],[198,39,205,37],[198,43,205,41],[198,44,205,42],[198,45,205,43],[199,14,206,12,"newY"],[199,18,206,16],[199,21,206,19,"Math"],[199,25,206,23],[199,26,206,24,"max"],[199,29,206,27],[199,30,206,28],[199,31,206,29],[199,33,206,31,"Math"],[199,37,206,35],[199,38,206,36,"min"],[199,41,206,39],[199,42,206,40,"GAME_AREA_HEIGHT"],[199,59,206,56],[199,62,206,59,"ENEMY_SIZE"],[199,72,206,69],[199,74,206,71,"newY"],[199,78,206,75],[199,79,206,76],[199,80,206,77],[200,12,207,10],[202,12,209,10],[203,12,210,10,"enemy"],[203,17,210,15],[203,18,210,16,"position"],[203,26,210,24],[203,27,210,25,"x"],[203,28,210,26],[203,31,210,29,"newX"],[203,35,210,33],[204,12,211,10,"enemy"],[204,17,211,15],[204,18,211,16,"position"],[204,26,211,24],[204,27,211,25,"y"],[204,28,211,26],[204,31,211,29,"newY"],[204,35,211,33],[206,12,213,10],[207,12,214,10],[207,16,214,14,"Math"],[207,20,214,18],[207,21,214,19,"random"],[207,27,214,25],[207,28,214,26],[207,29,214,27],[207,32,214,30],[207,36,214,34],[207,38,214,36],[208,14,214,38],[209,14,215,12,"enemy"],[209,19,215,17],[209,20,215,18,"movementDirection"],[209,37,215,35],[209,40,215,38],[210,16,216,14,"x"],[210,17,216,15],[210,19,216,17],[210,20,216,18,"Math"],[210,24,216,22],[210,25,216,23,"random"],[210,31,216,29],[210,32,216,30],[210,33,216,31],[210,36,216,34],[210,39,216,37],[210,43,216,41],[210,44,216,42],[211,16,217,14,"y"],[211,17,217,15],[211,19,217,17],[211,20,217,18,"Math"],[211,24,217,22],[211,25,217,23,"random"],[211,31,217,29],[211,32,217,30],[211,33,217,31],[211,36,217,34],[211,39,217,37],[211,43,217,41],[212,14,218,12],[212,15,218,13],[213,12,219,10],[214,10,220,8],[215,8,221,6],[215,9,221,7],[215,10,221,8],[217,8,223,6],[218,8,224,6],[218,13,224,11],[218,17,224,15,"i"],[218,18,224,16],[218,21,224,19],[218,22,224,20],[218,24,224,22,"i"],[218,25,224,23],[218,28,224,26],[218,29,224,27],[218,31,224,29,"i"],[218,32,224,30],[218,34,224,32],[218,36,224,34],[219,10,225,8],[219,14,225,12,"newState"],[219,22,225,20],[219,23,225,21,"abilityManager"],[219,37,225,35],[219,38,225,36,"isAbilityReady"],[219,52,225,50],[219,53,225,51,"i"],[219,54,225,52],[219,55,225,53],[219,59,225,57,"newState"],[219,67,225,65],[219,68,225,66,"enemies"],[219,75,225,73],[219,76,225,74,"length"],[219,82,225,80],[219,85,225,83],[219,86,225,84],[219,88,225,86],[220,12,226,10],[220,16,226,14,"newState"],[220,24,226,22],[220,25,226,23,"abilityManager"],[220,39,226,37],[220,40,226,38,"useAbility"],[220,50,226,48],[220,51,226,49,"i"],[220,52,226,50],[220,54,226,52,"newTick"],[220,61,226,59],[220,62,226,60],[220,64,226,62],[221,14,227,12,"castAbility"],[221,25,227,23],[221,26,227,24,"newState"],[221,34,227,32],[221,36,227,34,"i"],[221,37,227,35],[221,38,227,36],[222,12,228,10],[223,10,229,8],[224,8,230,6],[226,8,232,6],[227,8,233,6],[227,12,233,12,"deadEnemies"],[227,23,233,23],[227,26,233,26,"newState"],[227,34,233,34],[227,35,233,35,"enemies"],[227,42,233,42],[227,43,233,43,"filter"],[227,49,233,49],[227,50,233,50,"enemy"],[227,55,233,55],[227,59,233,59,"enemy"],[227,64,233,64],[227,65,233,65,"health"],[227,71,233,71],[227,75,233,75],[227,76,233,76],[227,77,233,77],[228,8,234,6,"enemiesToKill"],[228,21,234,19],[228,24,234,22],[228,25,234,23],[228,28,234,26,"deadEnemies"],[228,39,234,37],[228,40,234,38],[228,41,234,39],[228,42,234,40],[230,8,236,6],[231,8,237,6,"newState"],[231,16,237,14],[231,17,237,15,"enemies"],[231,24,237,22],[231,27,237,25,"newState"],[231,35,237,33],[231,36,237,34,"enemies"],[231,43,237,41],[231,44,237,42,"filter"],[231,50,237,48],[231,51,237,49,"enemy"],[231,56,237,54],[231,60,237,58,"enemy"],[231,65,237,63],[231,66,237,64,"health"],[231,72,237,70],[231,75,237,73],[231,76,237,74],[231,77,237,75],[233,8,239,6],[234,8,240,6],[235,8,241,6],[235,12,241,12,"MAX_ENEMIES"],[235,23,241,23],[235,26,241,26],[235,28,241,28],[236,8,242,6],[236,12,242,12,"MIN_SPAWN_DELAY"],[236,27,242,27],[236,30,242,30],[236,33,242,33],[236,34,242,34],[236,35,242,35],[237,8,243,6],[237,12,243,12,"now"],[237,15,243,15],[237,18,243,18,"Date"],[237,22,243,22],[237,23,243,23,"now"],[237,26,243,26],[237,27,243,27],[237,28,243,28],[238,8,244,6],[238,12,244,12,"hasBoss"],[238,19,244,19],[238,22,244,22,"newState"],[238,30,244,30],[238,31,244,31,"enemies"],[238,38,244,38],[238,39,244,39,"some"],[238,43,244,43],[238,44,244,44,"enemy"],[238,49,244,49],[238,53,244,53,"enemy"],[238,58,244,58],[238,59,244,59,"isBoss"],[238,65,244,65],[238,66,244,66],[240,8,246,6],[241,8,247,6],[241,12,247,10],[241,13,247,11,"newState"],[241,21,247,19],[241,22,247,20,"lastSpawnTime"],[241,35,247,33],[241,37,247,35],[242,10,248,8,"newState"],[242,18,248,16],[242,19,248,17,"lastSpawnTime"],[242,32,248,30],[242,35,248,33,"now"],[242,38,248,36],[243,8,249,6],[244,8,251,6,"console"],[244,15,251,13],[244,16,251,14,"log"],[244,19,251,17],[244,20,251,18],[244,53,251,51,"newState"],[244,61,251,59],[244,62,251,60,"enemies"],[244,69,251,67],[244,70,251,68,"length"],[244,76,251,74],[244,85,251,83,"MAX_ENEMIES"],[244,96,251,94],[244,109,251,107,"hasBoss"],[244,116,251,114],[244,118,251,116],[244,119,251,117],[246,8,253,6],[247,8,254,6],[247,12,254,10],[247,13,254,11,"hasBoss"],[247,20,254,18],[247,24,254,22,"newState"],[247,32,254,30],[247,33,254,31,"enemies"],[247,40,254,38],[247,41,254,39,"length"],[247,47,254,45],[247,50,254,48,"MAX_ENEMIES"],[247,61,254,59],[247,65,254,64,"now"],[247,68,254,67],[247,71,254,70,"newState"],[247,79,254,78],[247,80,254,79,"lastSpawnTime"],[247,93,254,92],[247,97,254,97,"MIN_SPAWN_DELAY"],[247,112,254,112],[247,114,254,114],[248,10,255,8,"console"],[248,17,255,15],[248,18,255,16,"log"],[248,21,255,19],[248,22,255,20],[248,43,255,41,"newState"],[248,51,255,49],[248,52,255,50,"enemies"],[248,59,255,57],[248,60,255,58,"length"],[248,66,255,64],[248,69,255,67],[248,70,255,68],[248,74,255,72,"MAX_ENEMIES"],[248,85,255,83],[248,87,255,85],[248,88,255,86],[249,10,256,8,"spawnTestEnemy"],[249,24,256,22],[249,25,256,23,"newState"],[249,33,256,31],[249,34,256,32],[250,10,257,8,"newState"],[250,18,257,16],[250,19,257,17,"lastSpawnTime"],[250,32,257,30],[250,35,257,33,"now"],[250,38,257,36],[251,8,258,6],[252,8,260,6],[252,15,260,13,"newState"],[252,23,260,21],[253,6,261,4],[253,7,261,5],[253,47,261,6],[255,6,263,4],[256,6,264,4,"enemiesToKill"],[256,19,264,17],[256,20,264,18,"forEach"],[256,27,264,25],[256,28,264,26,"enemy"],[256,33,264,31],[256,37,264,35],[257,8,265,6,"handleEnemyKill"],[257,23,265,21],[257,24,265,22,"enemy"],[257,29,265,27],[257,30,265,28],[258,6,266,4],[258,7,266,5],[258,8,266,6],[259,4,267,2],[259,5,267,3],[259,7,267,5],[259,8,267,6,"handleEnemyKill"],[259,23,267,21],[259,24,267,22],[259,25,267,23],[259,26,267,24],[259,27,267,25],[261,4,269,2],[262,4,270,2],[262,8,270,8,"findClosestEnemyInternal"],[262,32,270,32],[262,35,270,36,"enemies"],[262,42,270,58],[262,46,270,83],[263,6,271,4],[263,10,271,8,"enemies"],[263,17,271,15],[263,18,271,16,"length"],[263,24,271,22],[263,29,271,27],[263,30,271,28],[263,32,271,30],[263,39,271,37],[263,43,271,41],[265,6,273,4],[266,6,274,4],[266,10,274,10,"SCREEN_WIDTH"],[266,22,274,22],[266,25,274,25],[266,28,274,28],[267,6,275,4],[267,10,275,10,"GAME_AREA_HEIGHT"],[267,26,275,26],[267,29,275,29],[267,32,275,32],[267,35,275,35],[267,38,275,38],[267,39,275,39],[267,40,275,40],[268,6,276,4],[268,10,276,10,"ninjaX"],[268,16,276,16],[268,19,276,19,"SCREEN_WIDTH"],[268,31,276,31],[268,34,276,34],[268,35,276,35],[269,6,277,4],[269,10,277,10,"ninjaY"],[269,16,277,16],[269,19,277,19,"GAME_AREA_HEIGHT"],[269,35,277,35],[269,38,277,38],[269,39,277,39],[270,6,279,4],[270,10,279,8,"closestEnemy"],[270,22,279,20],[270,25,279,23,"enemies"],[270,32,279,30],[270,33,279,31],[270,34,279,32],[270,35,279,33],[271,6,280,4],[271,10,280,8,"closestDistance"],[271,25,280,23],[271,28,280,26,"Infinity"],[271,36,280,34],[272,6,282,4,"enemies"],[272,13,282,11],[272,14,282,12,"forEach"],[272,21,282,19],[272,22,282,20,"enemy"],[272,27,282,25],[272,31,282,29],[273,8,283,6],[273,12,283,12,"distance"],[273,20,283,20],[273,23,283,23,"Math"],[273,27,283,27],[273,28,283,28,"sqrt"],[273,32,283,32],[273,33,284,8,"Math"],[273,37,284,12],[273,38,284,13,"pow"],[273,41,284,16],[273,42,284,17,"enemy"],[273,47,284,22],[273,48,284,23,"position"],[273,56,284,31],[273,57,284,32,"x"],[273,58,284,33],[273,61,284,36,"ninjaX"],[273,67,284,42],[273,69,284,44],[273,70,284,45],[273,71,284,46],[273,74,285,8,"Math"],[273,78,285,12],[273,79,285,13,"pow"],[273,82,285,16],[273,83,285,17,"enemy"],[273,88,285,22],[273,89,285,23,"position"],[273,97,285,31],[273,98,285,32,"y"],[273,99,285,33],[273,102,285,36,"ninjaY"],[273,108,285,42],[273,110,285,44],[273,111,285,45],[273,112,286,6],[273,113,286,7],[274,8,288,6],[274,12,288,10,"distance"],[274,20,288,18],[274,23,288,21,"closestDistance"],[274,38,288,36],[274,40,288,38],[275,10,289,8,"closestDistance"],[275,25,289,23],[275,28,289,26,"distance"],[275,36,289,34],[276,10,290,8,"closestEnemy"],[276,22,290,20],[276,25,290,23,"enemy"],[276,30,290,28],[277,8,291,6],[278,6,292,4],[278,7,292,5],[278,8,292,6],[279,6,294,4,"console"],[279,13,294,11],[279,14,294,12,"log"],[279,17,294,15],[279,18,294,16],[279,60,294,58,"closestDistance"],[279,75,294,73],[279,76,294,74,"toFixed"],[279,83,294,81],[279,84,294,82],[279,85,294,83],[279,86,294,84],[279,88,294,86],[279,89,294,87],[280,6,295,4],[280,13,295,11,"closestEnemy"],[280,25,295,23],[281,4,296,2],[281,5,296,3],[283,4,298,2],[284,4,299,2],[284,8,299,8,"findClosestEnemy"],[284,24,299,24],[284,27,299,27,"findClosestEnemy"],[284,28,299,27],[284,33,299,53],[285,6,300,4],[285,13,300,11,"findClosestEnemyInternal"],[285,37,300,35],[285,38,300,36,"combatState"],[285,49,300,47],[285,50,300,48,"enemies"],[285,57,300,55],[285,58,300,56],[286,4,301,2],[286,5,301,3],[288,4,303,2],[289,4,304,2],[289,8,304,8,"updateNinjaPosition"],[289,27,304,27],[289,30,304,31,"position"],[289,38,304,63],[289,42,304,68],[290,6,305,4,"console"],[290,13,305,11],[290,14,305,12,"log"],[290,17,305,15],[290,18,305,16],[290,67,305,65,"position"],[290,75,305,73],[290,76,305,74,"x"],[290,77,305,75],[290,78,305,76,"toFixed"],[290,85,305,83],[290,86,305,84],[290,87,305,85],[290,88,305,86],[290,93,305,91,"position"],[290,101,305,99],[290,102,305,100,"y"],[290,103,305,101],[290,104,305,102,"toFixed"],[290,111,305,109],[290,112,305,110],[290,113,305,111],[290,114,305,112],[290,117,305,115],[290,118,305,116],[291,6,306,4,"setNinjaPosition"],[291,22,306,20],[291,23,306,21,"position"],[291,31,306,29],[291,32,306,30],[292,4,307,2],[292,5,307,3],[294,4,309,2],[295,4,310,2],[295,8,310,8,"handleProjectileHit"],[295,27,310,27],[295,30,310,31,"projectile"],[295,40,310,59],[295,44,310,64],[296,6,311,4,"console"],[296,13,311,11],[296,14,311,12,"log"],[296,17,311,15],[296,18,311,16],[296,35,311,33,"projectile"],[296,45,311,43],[296,46,311,44,"id"],[296,48,311,46],[296,62,311,60,"projectile"],[296,72,311,70],[296,73,311,71,"targetEnemyId"],[296,86,311,84],[296,94,311,92,"projectile"],[296,104,311,102],[296,105,311,103,"damage"],[296,111,311,109],[296,120,311,118],[296,121,311,119],[297,6,313,4,"setCombatState"],[297,20,313,18],[297,21,313,19,"prev"],[297,25,313,23],[297,29,313,27],[298,8,314,6],[298,12,314,12,"newState"],[298,20,314,20],[298,23,314,23],[299,10,314,25],[299,13,314,28,"prev"],[300,8,314,33],[300,9,314,34],[302,8,316,6],[303,8,317,6],[303,12,317,12,"enemyIndex"],[303,22,317,22],[303,25,317,25,"newState"],[303,33,317,33],[303,34,317,34,"enemies"],[303,41,317,41],[303,42,317,42,"findIndex"],[303,51,317,51],[303,52,317,52,"e"],[303,53,317,53],[303,57,317,57,"e"],[303,58,317,58],[303,59,317,59,"id"],[303,61,317,61],[303,66,317,66,"projectile"],[303,76,317,76],[303,77,317,77,"targetEnemyId"],[303,90,317,90],[303,91,317,91],[304,8,318,6],[304,12,318,10,"enemyIndex"],[304,22,318,20],[304,26,318,24],[304,27,318,25],[304,29,318,27],[305,10,319,8,"newState"],[305,18,319,16],[305,19,319,17,"enemies"],[305,26,319,24],[305,29,319,27],[305,30,319,28],[305,33,319,31,"newState"],[305,41,319,39],[305,42,319,40,"enemies"],[305,49,319,47],[305,50,319,48],[306,10,320,8,"newState"],[306,18,320,16],[306,19,320,17,"enemies"],[306,26,320,24],[306,27,320,25,"enemyIndex"],[306,37,320,35],[306,38,320,36],[306,41,320,39],[307,12,321,10],[307,15,321,13,"newState"],[307,23,321,21],[307,24,321,22,"enemies"],[307,31,321,29],[307,32,321,30,"enemyIndex"],[307,42,321,40],[307,43,321,41],[308,12,322,10,"health"],[308,18,322,16],[308,20,322,18,"newState"],[308,28,322,26],[308,29,322,27,"enemies"],[308,36,322,34],[308,37,322,35,"enemyIndex"],[308,47,322,45],[308,48,322,46],[308,49,322,47,"health"],[308,55,322,53],[308,58,322,56,"projectile"],[308,68,322,66],[308,69,322,67,"damage"],[308,75,322,73],[309,12,323,10,"lastDamaged"],[309,23,323,21],[309,25,323,23,"combatEngine"],[309,44,323,35],[309,45,323,35,"combatEngine"],[309,57,323,35],[309,58,323,36,"getCurrentTick"],[309,72,323,50],[309,73,323,51],[310,10,324,8],[310,11,324,9],[311,10,326,8,"console"],[311,17,326,15],[311,18,326,16,"log"],[311,21,326,19],[311,22,326,20],[311,34,326,32,"projectile"],[311,44,326,42],[311,45,326,43,"targetEnemyId"],[311,58,326,56],[311,70,326,68,"newState"],[311,78,326,76],[311,79,326,77,"enemies"],[311,86,326,84],[311,87,326,85,"enemyIndex"],[311,97,326,95],[311,98,326,96],[311,99,326,97,"health"],[311,105,326,103],[311,109,326,107,"newState"],[311,117,326,115],[311,118,326,116,"enemies"],[311,125,326,123],[311,126,326,124,"enemyIndex"],[311,136,326,134],[311,137,326,135],[311,138,326,136,"maxHealth"],[311,147,326,145],[311,149,326,147],[311,150,326,148],[312,8,327,6],[313,8,329,6],[313,15,329,13,"newState"],[313,23,329,21],[314,6,330,4],[314,7,330,5],[314,8,330,6],[316,6,332,4],[317,6,333,4,"setProjectiles"],[317,20,333,18],[317,21,333,19,"prev"],[317,25,333,23],[317,29,333,27,"prev"],[317,33,333,31],[317,34,333,32,"filter"],[317,40,333,38],[317,41,333,39,"p"],[317,42,333,40],[317,46,333,44,"p"],[317,47,333,45],[317,48,333,46,"id"],[317,50,333,48],[317,55,333,53,"projectile"],[317,65,333,63],[317,66,333,64,"id"],[317,68,333,66],[317,69,333,67],[317,70,333,68],[318,4,334,2],[318,5,334,3],[320,4,336,2],[321,4,337,2],[321,8,337,8,"castAbility"],[321,19,337,19],[321,22,337,22,"castAbility"],[321,23,337,23,"state"],[321,28,337,41],[321,30,337,43,"slotIndex"],[321,39,337,60],[321,44,337,65],[322,6,338,4],[322,10,338,10,"deck"],[322,14,338,14],[322,17,338,17,"state"],[322,22,338,22],[322,23,338,23,"abilityManager"],[322,37,338,37],[322,38,338,38,"getDeck"],[322,45,338,45],[322,46,338,46],[322,47,338,47],[323,6,339,4],[323,10,339,10,"ability"],[323,17,339,17],[323,20,339,20,"deck"],[323,24,339,24],[323,25,339,25,"slots"],[323,30,339,30],[323,31,339,31,"slotIndex"],[323,40,339,40],[323,41,339,41],[324,6,340,4],[324,10,340,8],[324,11,340,9,"ability"],[324,18,340,16],[324,20,340,18],[326,6,342,4],[327,6,343,4],[327,10,343,10,"target"],[327,16,343,16],[327,19,343,19,"findClosestEnemyInternal"],[327,43,343,43],[327,44,343,44,"state"],[327,49,343,49],[327,50,343,50,"enemies"],[327,57,343,57],[327,58,343,58],[328,6,344,4],[328,10,344,8],[328,11,344,9,"target"],[328,17,344,15],[328,19,344,17],[330,6,346,4],[331,6,347,4],[331,10,347,8,"damage"],[331,16,347,14],[331,19,347,17,"ability"],[331,26,347,24],[331,27,347,25,"stats"],[331,32,347,30],[331,33,347,31,"baseDamage"],[331,43,347,41],[333,6,349,4],[334,6,350,4,"deck"],[334,10,350,8],[334,11,350,9,"activeSynergies"],[334,26,350,24],[334,27,350,25,"forEach"],[334,34,350,32],[334,35,350,33,"synergy"],[334,42,350,40],[334,46,350,44],[335,8,351,6],[335,12,351,10,"synergy"],[335,19,351,17],[335,20,351,18,"bonus"],[335,25,351,23],[335,26,351,24,"damageBonus"],[335,37,351,35],[335,41,352,10,"synergy"],[335,48,352,17],[335,49,352,18,"requiredTags"],[335,61,352,30],[335,62,352,31,"some"],[335,66,352,35],[335,67,352,36,"tag"],[335,70,352,39],[335,74,352,43,"ability"],[335,81,352,50],[335,82,352,51,"tags"],[335,86,352,55],[335,87,352,56,"includes"],[335,95,352,64],[335,96,352,65,"tag"],[335,99,352,68],[335,100,352,69],[335,101,352,70],[335,103,352,72],[336,10,353,8,"damage"],[336,16,353,14],[336,20,353,19],[336,21,353,20],[336,24,353,23,"synergy"],[336,31,353,30],[336,32,353,31,"bonus"],[336,37,353,36],[336,38,353,37,"damageBonus"],[336,49,353,48],[336,52,353,51],[336,55,353,55],[337,8,354,6],[338,6,355,4],[338,7,355,5],[338,8,355,6],[340,6,357,4],[341,6,358,4],[341,10,358,10,"damageResult"],[341,22,358,22],[341,25,358,25,"DamageCalculator"],[341,44,358,41],[341,45,358,41,"DamageCalculator"],[341,61,358,41],[341,62,358,42,"calculateDamage"],[341,77,358,57],[341,78,358,58,"damage"],[341,84,358,64],[341,86,358,66,"state"],[341,91,358,71],[341,92,358,72,"playerStats"],[341,103,358,83],[341,105,358,85,"target"],[341,111,358,91],[341,112,358,92,"stats"],[341,117,358,97],[341,118,358,98],[343,6,360,4],[344,6,361,4,"createProjectile"],[344,22,361,20],[344,23,361,21,"target"],[344,29,361,27],[344,31,361,29,"damageResult"],[344,43,361,41],[344,44,361,42,"damage"],[344,50,361,48],[344,52,361,50,"ninjaPosition"],[344,65,361,63],[344,66,361,64],[346,6,363,4],[347,6,364,4],[347,10,364,8,"ability"],[347,17,364,15],[347,18,364,16,"effects"],[347,25,364,23],[347,26,364,24,"includes"],[347,34,364,32],[347,35,364,33],[347,40,364,38],[347,41,364,39],[347,45,364,43,"ability"],[347,52,364,50],[347,53,364,51,"stats"],[347,58,364,56],[347,59,364,57,"duration"],[347,67,364,65],[347,69,364,67],[348,8,365,6,"state"],[348,13,365,11],[348,14,365,12,"statusEffects"],[348,27,365,25],[348,28,365,26,"addEffect"],[348,37,365,35],[348,38,365,36,"target"],[348,44,365,42],[348,45,365,43,"id"],[348,47,365,45],[348,49,365,47],[349,10,366,8,"id"],[349,12,366,10],[349,14,366,12],[349,17,366,15,"ability"],[349,24,366,22],[349,25,366,23,"id"],[349,27,366,25],[349,33,366,31],[350,10,367,8,"type"],[350,14,367,12],[350,16,367,14],[350,21,367,19],[351,10,368,8,"remainingTicks"],[351,24,368,22],[351,26,368,24,"Math"],[351,30,368,28],[351,31,368,29,"floor"],[351,36,368,34],[351,37,368,35,"ability"],[351,44,368,42],[351,45,368,43,"stats"],[351,50,368,48],[351,51,368,49,"duration"],[351,59,368,57],[351,62,368,60],[351,64,368,62],[351,65,368,63],[352,10,368,65],[353,10,369,8,"tickInterval"],[353,22,369,20],[353,24,369,22],[353,26,369,24],[354,10,369,26],[355,10,370,8,"lastTick"],[355,18,370,16],[355,20,370,18,"state"],[355,25,370,23],[355,26,370,24,"currentTick"],[355,37,370,35],[356,10,371,8,"value"],[356,15,371,13],[356,17,371,15,"Math"],[356,21,371,19],[356,22,371,20,"floor"],[356,27,371,25],[356,28,371,26,"damage"],[356,34,371,32],[356,37,371,35],[356,40,371,38],[356,41,371,39],[357,10,371,41],[358,10,372,8,"stackable"],[358,19,372,17],[358,21,372,19],[359,8,373,6],[359,9,373,7],[359,10,373,8],[360,6,374,4],[361,6,376,4,"console"],[361,13,376,11],[361,14,376,12,"log"],[361,17,376,15],[361,18,376,16],[361,24,376,22,"ability"],[361,31,376,29],[361,32,376,30,"name"],[361,36,376,34],[361,69,376,67,"damageResult"],[361,81,376,79],[361,82,376,80,"damage"],[361,88,376,86],[361,98,376,96,"damageResult"],[361,110,376,108],[361,111,376,109,"isCritical"],[361,121,376,119],[361,124,376,122],[361,134,376,132],[361,137,376,135],[361,139,376,137],[361,141,376,139],[361,142,376,140],[362,4,377,2],[362,5,377,3],[364,4,379,2],[365,4,380,2],[365,8,380,8,"createProjectile"],[365,24,380,24],[365,27,380,27,"createProjectile"],[365,28,380,28,"targetEnemy"],[365,39,380,52],[365,41,380,54,"damage"],[365,47,380,68],[365,49,380,70,"ninjaPos"],[365,57,380,103],[365,62,380,108],[366,6,381,4],[366,10,381,10,"SCREEN_WIDTH"],[366,22,381,22],[366,25,381,25],[366,28,381,28],[367,6,382,4],[367,10,382,10,"GAME_AREA_HEIGHT"],[367,26,382,26],[367,29,382,29],[367,32,382,32],[367,35,382,35],[367,38,382,38],[367,39,382,39],[367,40,382,40],[368,6,383,4],[368,10,383,10,"NINJA_SIZE"],[368,20,383,20],[368,23,383,23],[368,25,383,25],[370,6,385,4],[371,6,386,4],[371,10,386,10,"ninjaX"],[371,16,386,16],[371,19,386,19,"ninjaPos"],[371,27,386,27],[371,30,386,30,"ninjaPos"],[371,38,386,38],[371,39,386,39,"x"],[371,40,386,40],[371,43,386,43,"NINJA_SIZE"],[371,53,386,53],[371,56,386,56],[371,57,386,57],[371,60,386,60,"SCREEN_WIDTH"],[371,72,386,72],[371,75,386,75],[371,76,386,76],[372,6,387,4],[372,10,387,10,"ninjaY"],[372,16,387,16],[372,19,387,19,"ninjaPos"],[372,27,387,27],[372,30,387,30,"ninjaPos"],[372,38,387,38],[372,39,387,39,"y"],[372,40,387,40],[372,43,387,43,"NINJA_SIZE"],[372,53,387,53],[372,56,387,56],[372,57,387,57],[372,60,387,60,"GAME_AREA_HEIGHT"],[372,76,387,76],[372,79,387,79],[372,80,387,80],[373,6,388,4],[373,10,388,10,"ENEMY_SIZE"],[373,20,388,20],[373,23,388,23],[373,25,388,25],[374,6,390,4],[374,10,390,10,"projectile"],[374,20,390,38],[374,23,390,41],[375,8,391,6,"id"],[375,10,391,8],[375,12,391,10],[375,20,391,18,"Date"],[375,24,391,22],[375,25,391,23,"now"],[375,28,391,26],[375,29,391,27],[375,30,391,28],[375,34,391,32,"Math"],[375,38,391,36],[375,39,391,37,"random"],[375,45,391,43],[375,46,391,44],[375,47,391,45],[375,49,391,47],[376,8,392,6,"x"],[376,9,392,7],[376,11,392,9,"ninjaX"],[376,17,392,15],[377,8,393,6,"y"],[377,9,393,7],[377,11,393,9,"ninjaY"],[377,17,393,15],[378,8,394,6,"targetX"],[378,15,394,13],[378,17,394,15,"targetEnemy"],[378,28,394,26],[378,29,394,27,"position"],[378,37,394,35],[378,38,394,36,"x"],[378,39,394,37],[378,42,394,40,"ENEMY_SIZE"],[378,52,394,50],[378,55,394,53],[378,56,394,54],[379,8,395,6,"targetY"],[379,15,395,13],[379,17,395,15,"targetEnemy"],[379,28,395,26],[379,29,395,27,"position"],[379,37,395,35],[379,38,395,36,"y"],[379,39,395,37],[379,42,395,40,"ENEMY_SIZE"],[379,52,395,50],[379,55,395,53],[379,56,395,54],[380,8,396,6,"targetEnemyId"],[380,21,396,19],[380,23,396,21,"targetEnemy"],[380,34,396,32],[380,35,396,33,"id"],[380,37,396,35],[381,8,397,6,"damage"],[381,14,397,12],[381,16,397,14,"damage"],[381,22,397,20],[382,8,398,6,"startTime"],[382,17,398,15],[382,19,398,17,"Date"],[382,23,398,21],[382,24,398,22,"now"],[382,27,398,25],[382,28,398,26],[382,29,398,27],[383,8,399,6,"duration"],[383,16,399,14],[383,18,399,16],[383,21,399,19],[383,22,399,21],[384,6,400,4],[384,7,400,5],[385,6,402,4,"console"],[385,13,402,11],[385,14,402,12,"log"],[385,17,402,15],[385,18,402,16],[385,53,402,51,"targetEnemy"],[385,64,402,62],[385,65,402,63,"id"],[385,67,402,65],[385,75,402,73,"damage"],[385,81,402,79],[385,90,402,88],[385,91,402,89],[386,6,403,4,"console"],[386,13,403,11],[386,14,403,12,"log"],[386,17,403,15],[386,18,403,16],[386,53,403,51,"ninjaX"],[386,59,403,57],[386,64,403,62,"ninjaY"],[386,70,403,68],[386,87,403,85,"projectile"],[386,97,403,95],[386,98,403,96,"targetX"],[386,105,403,103],[386,110,403,108,"projectile"],[386,120,403,118],[386,121,403,119,"targetY"],[386,128,403,126],[386,131,403,129],[386,132,403,130],[387,6,405,4,"setProjectiles"],[387,20,405,18],[387,21,405,19,"prev"],[387,25,405,23],[387,29,405,27],[387,30,405,28],[387,33,405,31,"prev"],[387,37,405,35],[387,39,405,37,"projectile"],[387,49,405,47],[387,50,405,48],[387,51,405,49],[389,6,407,4],[390,6,408,4,"setTimeout"],[390,16,408,14],[390,17,408,15],[390,23,408,21],[391,8,409,6,"handleProjectileHit"],[391,27,409,25],[391,28,409,26,"projectile"],[391,38,409,36],[391,39,409,37],[392,6,410,4],[392,7,410,5],[392,9,410,7],[392,12,410,10],[392,13,410,11],[393,4,411,2],[393,5,411,3],[395,4,413,2],[396,4,414,2],[396,8,414,8,"spawnTestEnemy"],[396,22,414,22],[396,25,414,26,"state"],[396,30,414,44],[396,34,414,49],[397,6,415,4],[398,6,416,4],[398,10,416,10,"SCREEN_WIDTH"],[398,22,416,22],[398,25,416,25],[398,28,416,28],[398,29,416,29],[398,30,416,30],[399,6,417,4],[399,10,417,10,"GAME_AREA_HEIGHT"],[399,26,417,26],[399,29,417,29],[399,32,417,32],[399,35,417,35],[399,38,417,38],[399,39,417,39],[399,40,417,40],[400,6,418,4],[400,10,418,10,"ENEMY_SIZE"],[400,20,418,20],[400,23,418,23],[400,25,418,25],[402,6,420,4],[403,6,421,4],[403,10,421,10,"x"],[403,11,421,11],[403,14,421,14,"Math"],[403,18,421,18],[403,19,421,19,"random"],[403,25,421,25],[403,26,421,26],[403,27,421,27],[403,31,421,31,"SCREEN_WIDTH"],[403,43,421,43],[403,46,421,46,"ENEMY_SIZE"],[403,56,421,56],[403,59,421,59],[403,60,421,60],[403,61,421,61],[403,64,421,64,"ENEMY_SIZE"],[403,74,421,74],[403,75,421,75],[403,76,421,76],[404,6,422,4],[404,10,422,10,"y"],[404,11,422,11],[404,14,422,14,"Math"],[404,18,422,18],[404,19,422,19,"random"],[404,25,422,25],[404,26,422,26],[404,27,422,27],[404,31,422,31,"GAME_AREA_HEIGHT"],[404,47,422,47],[404,50,422,50,"ENEMY_SIZE"],[404,60,422,60],[404,63,422,63],[404,64,422,64],[404,65,422,65],[404,68,422,68,"ENEMY_SIZE"],[404,78,422,78],[404,79,422,79],[404,80,422,80],[406,6,424,4],[406,10,424,10,"enemy"],[406,15,424,28],[406,18,424,31],[407,8,425,6,"id"],[407,10,425,8],[407,12,425,10],[407,21,425,19],[407,23,425,21,"enemyCounter"],[407,35,425,33],[407,37,425,35],[408,8,426,6,"name"],[408,12,426,10],[408,14,426,12],[408,24,426,22],[409,8,427,6,"health"],[409,14,427,12],[409,16,427,14],[409,19,427,17],[410,8,428,6,"maxHealth"],[410,17,428,15],[410,19,428,17],[410,22,428,20],[411,8,429,6,"stats"],[411,13,429,11],[411,15,429,13],[412,10,430,8,"attack"],[412,16,430,14],[412,18,430,16],[412,20,430,18],[413,10,431,8,"defense"],[413,17,431,15],[413,19,431,17],[413,21,431,19],[414,10,432,8,"health"],[414,16,432,14],[414,18,432,16],[414,21,432,19],[415,10,433,8,"maxHealth"],[415,19,433,17],[415,21,433,19],[415,24,433,22],[416,10,434,8,"critChance"],[416,20,434,18],[416,22,434,20],[416,23,434,21],[417,10,435,8,"critDamage"],[417,20,435,18],[417,22,435,20],[417,25,435,23],[418,10,436,8,"cooldownReduction"],[418,27,436,25],[418,29,436,27],[419,8,437,6],[419,9,437,7],[420,8,438,6,"position"],[420,16,438,14],[420,18,438,16],[421,10,438,18,"x"],[421,11,438,19],[422,10,438,21,"y"],[423,8,438,23],[423,9,438,24],[424,8,439,6,"lastDamaged"],[424,19,439,17],[424,21,439,19],[425,6,440,4],[425,7,440,5],[426,6,442,4,"state"],[426,11,442,9],[426,12,442,10,"enemies"],[426,19,442,17],[426,20,442,18,"push"],[426,24,442,22],[426,25,442,23,"enemy"],[426,30,442,28],[426,31,442,29],[427,4,443,2],[427,5,443,3],[429,4,445,2],[430,4,446,2],[430,8,446,8,"startCombat"],[430,19,446,19],[430,22,446,22,"React"],[430,27,446,27],[430,28,446,27,"default"],[430,35,446,27],[430,36,446,28,"useCallback"],[430,47,446,39],[430,48,446,40],[430,54,446,46],[431,6,447,4,"console"],[431,13,447,11],[431,14,447,12,"log"],[431,17,447,15],[431,18,447,16],[431,63,447,61],[431,64,447,62],[432,6,448,4,"setCombatState"],[432,20,448,18],[432,21,448,19,"prev"],[432,25,448,23],[432,30,448,28],[433,8,448,30],[433,11,448,33,"prev"],[433,15,448,37],[434,8,448,39,"isInCombat"],[434,18,448,49],[434,20,448,51],[435,6,448,56],[435,7,448,57],[435,8,448,58],[435,9,448,59],[437,6,450,4],[438,6,451,4,"combatEngine"],[438,25,451,16],[438,26,451,16,"combatEngine"],[438,38,451,16],[438,39,451,17,"addTickCallback"],[438,54,451,32],[438,55,451,33,"handleCombatTick"],[438,71,451,49],[438,72,451,50],[439,6,452,4,"console"],[439,13,452,11],[439,14,452,12,"log"],[439,17,452,15],[439,18,452,16],[439,62,452,60],[439,63,452,61],[441,6,454,4],[442,6,455,4,"combatEngine"],[442,25,455,16],[442,26,455,16,"combatEngine"],[442,38,455,16],[442,39,455,17,"start"],[442,44,455,22],[442,45,455,23],[442,46,455,24],[443,4,456,2],[443,5,456,3],[443,7,456,5],[443,8,456,6,"combatEngine"],[443,27,456,18],[443,28,456,18,"combatEngine"],[443,40,456,18],[443,42,456,20,"handleCombatTick"],[443,58,456,36],[443,59,456,37],[443,60,456,38],[445,4,458,2],[446,4,459,2],[446,8,459,8,"stopCombat"],[446,18,459,18],[446,21,459,21,"React"],[446,26,459,26],[446,27,459,26,"default"],[446,34,459,26],[446,35,459,27,"useCallback"],[446,46,459,38],[446,47,459,39],[446,53,459,45],[447,6,460,4,"setCombatState"],[447,20,460,18],[447,21,460,19,"prev"],[447,25,460,23],[447,30,460,28],[448,8,460,30],[448,11,460,33,"prev"],[448,15,460,37],[449,8,460,39,"isInCombat"],[449,18,460,49],[449,20,460,51],[450,6,460,57],[450,7,460,58],[450,8,460,59],[450,9,460,60],[451,6,461,4,"combatEngine"],[451,25,461,16],[451,26,461,16,"combatEngine"],[451,38,461,16],[451,39,461,17,"removeTickCallback"],[451,57,461,35],[451,58,461,36,"handleCombatTick"],[451,74,461,52],[451,75,461,53],[452,4,462,2],[452,5,462,3],[452,7,462,5],[452,8,462,6,"combatEngine"],[452,27,462,18],[452,28,462,18,"combatEngine"],[452,40,462,18],[452,42,462,20,"handleCombatTick"],[452,58,462,36],[452,59,462,37],[452,60,462,38],[454,4,464,2],[455,4,465,2],[455,8,465,8,"equipAbility"],[455,20,465,20],[455,23,465,23,"equipAbility"],[455,24,465,24,"abilityId"],[455,33,465,41],[455,35,465,43,"slotIndex"],[455,44,465,60],[455,49,465,74],[456,6,466,4],[456,13,466,11,"combatState"],[456,24,466,22],[456,25,466,23,"abilityManager"],[456,39,466,37],[456,40,466,38,"equipAbility"],[456,52,466,50],[456,53,466,51,"abilityId"],[456,62,466,60],[456,64,466,62,"slotIndex"],[456,73,466,71],[456,74,466,72],[457,4,467,2],[457,5,467,3],[458,4,469,2],[458,8,469,8,"getDeck"],[458,15,469,15],[458,18,469,18,"getDeck"],[458,19,469,18],[458,24,469,24],[459,6,470,4],[459,13,470,11,"combatState"],[459,24,470,22],[459,25,470,23,"abilityManager"],[459,39,470,37],[459,40,470,38,"getDeck"],[459,47,470,45],[459,48,470,46],[459,49,470,47],[460,4,471,2],[460,5,471,3],[461,4,473,2],[461,8,473,8,"getAvailableAbilities"],[461,29,473,29],[461,32,473,32,"getAvailableAbilities"],[461,33,473,32],[461,38,473,38],[462,6,474,4],[462,13,474,11,"combatState"],[462,24,474,22],[462,25,474,23,"abilityManager"],[462,39,474,37],[462,40,474,38,"getAvailableAbilities"],[462,61,474,59],[462,62,474,60],[462,63,474,61],[463,4,475,2],[463,5,475,3],[464,4,477,2],[464,8,477,8,"upgradeAbility"],[464,22,477,22],[464,25,477,26,"abilityId"],[464,34,477,43],[464,38,477,57],[465,6,478,4],[465,13,478,11,"combatState"],[465,24,478,22],[465,25,478,23,"abilityManager"],[465,39,478,37],[465,40,478,38,"upgradeAbility"],[465,54,478,52],[465,55,478,53,"abilityId"],[465,64,478,62],[465,65,478,63],[466,4,479,2],[466,5,479,3],[468,4,481,2],[469,4,482,2],[469,8,482,8,"clearAllEnemies"],[469,23,482,23],[469,26,482,26,"clearAllEnemies"],[469,27,482,26],[469,32,482,32],[470,6,483,4,"console"],[470,13,483,11],[470,14,483,12,"log"],[470,17,483,15],[470,18,483,16],[470,67,483,65],[470,68,483,66],[471,6,484,4,"setCombatState"],[471,20,484,18],[471,21,484,19,"prev"],[471,25,484,23],[471,30,484,28],[472,8,485,6],[472,11,485,9,"prev"],[472,15,485,13],[473,8,486,6,"enemies"],[473,15,486,13],[473,17,486,15],[474,6,487,4],[474,7,487,5],[474,8,487,6],[474,9,487,7],[475,4,488,2],[475,5,488,3],[477,4,490,2],[478,4,491,2],[478,8,491,8,"triggerLevelUpExplosion"],[478,31,491,31],[478,34,491,34,"triggerLevelUpExplosion"],[478,35,491,34],[478,40,491,40],[479,6,492,4,"console"],[479,13,492,11],[479,14,492,12,"log"],[479,17,492,15],[479,18,492,16],[479,70,492,68],[479,71,492,69],[480,6,494,4],[480,10,494,10,"explosionTime"],[480,23,494,23],[480,26,494,26,"Date"],[480,30,494,30],[480,31,494,31,"now"],[480,34,494,34],[480,35,494,35],[480,36,494,36],[481,6,495,4,"setLastExplosionTime"],[481,26,495,24],[481,27,495,25,"explosionTime"],[481,40,495,38],[481,41,495,39],[482,6,497,4,"setCombatState"],[482,20,497,18],[482,21,497,19,"prev"],[482,25,497,23],[482,29,497,27],[483,8,498,6],[484,8,499,6],[484,12,499,12,"enemyCount"],[484,22,499,22],[484,25,499,25,"prev"],[484,29,499,29],[484,30,499,30,"enemies"],[484,37,499,37],[484,38,499,38,"length"],[484,44,499,44],[485,8,500,6],[485,12,500,12,"explosionXP"],[485,23,500,23],[485,26,500,26,"enemyCount"],[485,36,500,36],[485,39,500,39],[485,41,500,41],[485,42,500,42],[485,43,500,43],[486,8,501,6],[486,12,501,12,"explosionGold"],[486,25,501,25],[486,28,501,28,"enemyCount"],[486,38,501,38],[486,41,501,41],[486,42,501,42],[486,43,501,43],[486,44,501,44],[488,8,503,6,"console"],[488,15,503,13],[488,16,503,14,"log"],[488,19,503,17],[488,20,503,18],[488,44,503,42,"enemyCount"],[488,54,503,52],[488,76,503,74,"explosionXP"],[488,87,503,85],[488,98,503,96,"explosionGold"],[488,111,503,109],[488,118,503,116],[488,119,503,117],[490,8,505,6],[491,8,506,6],[491,12,506,10,"explosionXP"],[491,23,506,21],[491,26,506,24],[491,27,506,25],[491,29,506,27],[492,10,507,8,"updateNinja"],[492,21,507,19],[492,22,507,21,"ninja"],[492,27,507,26],[492,32,507,32],[493,12,508,10,"experience"],[493,22,508,20],[493,24,508,22,"ninja"],[493,29,508,27],[493,30,508,28,"experience"],[493,40,508,38],[493,43,508,41,"explosionXP"],[493,54,508,52],[494,12,509,10,"gold"],[494,16,509,14],[494,18,509,16,"ninja"],[494,23,509,21],[494,24,509,22,"gold"],[494,28,509,26],[494,31,509,29,"explosionGold"],[495,10,510,8],[495,11,510,9],[495,12,510,10],[495,13,510,11],[496,8,511,6],[498,8,513,6],[499,8,514,6],[500,8,515,6],[500,12,515,12,"damagedEnemies"],[500,26,515,26],[500,29,515,29,"prev"],[500,33,515,33],[500,34,515,34,"enemies"],[500,41,515,41],[500,42,515,42,"map"],[500,45,515,45],[500,46,515,46,"enemy"],[500,51,515,51],[500,56,515,56],[501,10,516,8],[501,13,516,11,"enemy"],[501,18,516,16],[502,10,517,8,"health"],[502,16,517,14],[502,18,517,16],[502,19,517,17],[503,10,517,19],[504,10,518,8,"lastDamaged"],[504,21,518,19],[504,23,518,21,"combatEngine"],[504,42,518,33],[504,43,518,33,"combatEngine"],[504,55,518,33],[504,56,518,34,"getCurrentTick"],[504,70,518,48],[504,71,518,49],[505,8,519,6],[505,9,519,7],[505,10,519,8],[505,11,519,9],[506,8,521,6],[506,15,521,13],[507,10,522,8],[507,13,522,11,"prev"],[507,17,522,15],[508,10,523,8,"enemies"],[508,17,523,15],[508,19,523,17,"damagedEnemies"],[509,8,524,6],[509,9,524,7],[510,6,525,4],[510,7,525,5],[510,8,525,6],[511,4,526,2],[511,5,526,3],[513,4,528,2],[514,4,529,2],[514,8,529,8,"spawnEnemy"],[514,18,529,18],[514,21,529,22,"position"],[514,29,529,57],[514,33,529,75],[515,6,530,4],[515,10,530,10,"SCREEN_WIDTH"],[515,22,530,22],[515,25,530,25],[515,28,530,28],[516,6,531,4],[516,10,531,10,"GAME_AREA_HEIGHT"],[516,26,531,26],[516,29,531,29],[516,32,531,32],[516,35,531,35],[516,38,531,38],[516,39,531,39],[516,40,531,40],[517,6,532,4],[517,10,532,10,"ENEMY_SIZE"],[517,20,532,20],[517,23,532,23],[517,25,532,25],[519,6,534,4],[520,6,535,4],[520,10,535,10,"x"],[520,11,535,11],[520,14,535,14,"position"],[520,22,535,22],[520,24,535,24,"x"],[520,25,535,25],[520,29,535,29,"Math"],[520,33,535,33],[520,34,535,34,"random"],[520,40,535,40],[520,41,535,41],[520,42,535,42],[520,46,535,46,"SCREEN_WIDTH"],[520,58,535,58],[520,61,535,61,"ENEMY_SIZE"],[520,71,535,71],[520,74,535,74],[520,75,535,75],[520,76,535,76],[520,79,535,79,"ENEMY_SIZE"],[520,89,535,89],[521,6,536,4],[521,10,536,10,"y"],[521,11,536,11],[521,14,536,14,"position"],[521,22,536,22],[521,24,536,24,"y"],[521,25,536,25],[521,29,536,29,"Math"],[521,33,536,33],[521,34,536,34,"random"],[521,40,536,40],[521,41,536,41],[521,42,536,42],[521,46,536,46,"GAME_AREA_HEIGHT"],[521,62,536,62],[521,65,536,65,"ENEMY_SIZE"],[521,75,536,75],[521,78,536,78],[521,79,536,79],[521,80,536,80],[521,83,536,83,"ENEMY_SIZE"],[521,93,536,93],[522,6,538,4],[522,10,538,10,"enemy"],[522,15,538,28],[522,18,538,31],[523,8,539,6,"id"],[523,10,539,8],[523,12,539,10],[523,21,539,19],[523,23,539,21,"enemyCounter"],[523,35,539,33],[523,37,539,35],[524,8,540,6,"name"],[524,12,540,10],[524,14,540,12],[524,24,540,22],[525,8,541,6,"health"],[525,14,541,12],[525,16,541,14],[525,19,541,17],[526,8,542,6,"maxHealth"],[526,17,542,15],[526,19,542,17],[526,22,542,20],[527,8,543,6,"stats"],[527,13,543,11],[527,15,543,13],[528,10,544,8,"attack"],[528,16,544,14],[528,18,544,16],[528,20,544,18],[529,10,545,8,"defense"],[529,17,545,15],[529,19,545,17],[529,21,545,19],[530,10,546,8,"health"],[530,16,546,14],[530,18,546,16],[530,21,546,19],[531,10,547,8,"maxHealth"],[531,19,547,17],[531,21,547,19],[531,24,547,22],[532,10,548,8,"critChance"],[532,20,548,18],[532,22,548,20],[532,23,548,21],[533,10,549,8,"critDamage"],[533,20,549,18],[533,22,549,20],[533,25,549,23],[534,10,550,8,"cooldownReduction"],[534,27,550,25],[534,29,550,27],[535,8,551,6],[535,9,551,7],[536,8,552,6,"position"],[536,16,552,14],[536,18,552,16],[537,10,552,18,"x"],[537,11,552,19],[538,10,552,21,"y"],[539,8,552,23],[539,9,552,24],[540,8,553,6,"lastDamaged"],[540,19,553,17],[540,21,553,19],[541,6,554,4],[541,7,554,5],[542,6,556,4,"setCombatState"],[542,20,556,18],[542,21,556,19,"prev"],[542,25,556,23],[542,30,556,28],[543,8,557,6],[543,11,557,9,"prev"],[543,15,557,13],[544,8,558,6,"enemies"],[544,15,558,13],[544,17,558,15],[544,18,558,16],[544,21,558,19,"prev"],[544,25,558,23],[544,26,558,24,"enemies"],[544,33,558,31],[544,35,558,33,"enemy"],[544,40,558,38],[545,6,559,4],[545,7,559,5],[545,8,559,6],[545,9,559,7],[546,6,561,4],[546,13,561,11,"enemy"],[546,18,561,16],[547,4,562,2],[547,5,562,3],[549,4,564,2],[550,4,565,2],[550,8,565,8,"spawnBoss"],[550,17,565,17],[550,20,565,21,"bossEnemy"],[550,29,565,43],[550,33,565,48],[551,6,566,4,"console"],[551,13,566,11],[551,14,566,12,"log"],[551,17,566,15],[551,18,566,16],[551,39,566,37,"bossEnemy"],[551,48,566,46],[551,49,566,47,"name"],[551,53,566,51],[551,90,566,88],[551,91,566,89],[552,6,567,4,"setCombatState"],[552,20,567,18],[552,21,567,19,"prev"],[552,25,567,23],[552,30,567,28],[553,8,568,6],[553,11,568,9,"prev"],[553,15,568,13],[554,8,569,6,"enemies"],[554,15,569,13],[554,17,569,15],[554,18,569,16,"bossEnemy"],[554,27,569,25],[554,28,569,26],[554,29,569,27],[555,6,570,4],[555,7,570,5],[555,8,570,6],[555,9,570,7],[556,4,571,2],[556,5,571,3],[558,4,573,2],[559,4,574,2],[559,8,574,8,"clearSpecificEnemy"],[559,26,574,26],[559,29,574,30,"enemyId"],[559,36,574,45],[559,40,574,50],[560,6,575,4,"setCombatState"],[560,20,575,18],[560,21,575,19,"prev"],[560,25,575,23],[560,30,575,28],[561,8,576,6],[561,11,576,9,"prev"],[561,15,576,13],[562,8,577,6,"enemies"],[562,15,577,13],[562,17,577,15,"prev"],[562,21,577,19],[562,22,577,20,"enemies"],[562,29,577,27],[562,30,577,28,"filter"],[562,36,577,34],[562,37,577,35,"enemy"],[562,42,577,40],[562,46,577,44,"enemy"],[562,51,577,49],[562,52,577,50,"id"],[562,54,577,52],[562,59,577,57,"enemyId"],[562,66,577,64],[563,6,578,4],[563,7,578,5],[563,8,578,6],[563,9,578,7],[564,4,579,2],[564,5,579,3],[565,4,580,2],[565,8,580,2,"useEffect"],[565,14,580,11],[565,15,580,11,"useEffect"],[565,24,580,11],[565,26,580,12],[565,32,580,18],[566,6,581,4,"combatEngine"],[566,25,581,16],[566,26,581,16,"combatEngine"],[566,38,581,16],[566,39,581,17,"start"],[566,44,581,22],[566,45,581,23],[566,46,581,24],[568,6,583,4],[569,6,584,4,"combatState"],[569,17,584,15],[569,18,584,16,"abilityManager"],[569,32,584,30],[569,33,584,31,"equipAbility"],[569,45,584,43],[569,46,584,44],[569,62,584,60],[569,64,584,62],[569,65,584,63],[569,66,584,64],[570,6,585,4,"combatState"],[570,17,585,15],[570,18,585,16,"abilityManager"],[570,32,585,30],[570,33,585,31,"equipAbility"],[570,45,585,43],[570,46,585,44],[570,61,585,59],[570,63,585,61],[570,64,585,62],[570,65,585,63],[571,6,587,4],[571,13,587,11],[571,19,587,17],[572,8,588,6,"combatEngine"],[572,27,588,18],[572,28,588,18,"combatEngine"],[572,40,588,18],[572,41,588,19,"stop"],[572,45,588,23],[572,46,588,24],[572,47,588,25],[573,6,589,4],[573,7,589,5],[574,4,590,2],[574,5,590,3],[574,7,590,5],[574,9,590,7],[574,10,590,8],[575,4,592,2],[575,8,592,8,"contextValue"],[575,20,592,39],[575,23,592,42,"React"],[575,28,592,47],[575,29,592,47,"default"],[575,36,592,47],[575,37,592,48,"useMemo"],[575,44,592,55],[575,45,592,56],[575,52,592,63],[576,6,593,4,"combatState"],[576,17,593,15],[577,6,594,4,"projectiles"],[577,17,594,15],[578,6,595,4,"startCombat"],[578,17,595,15],[579,6,596,4,"stopCombat"],[579,16,596,14],[580,6,597,4,"equipAbility"],[580,18,597,16],[581,6,598,4,"handleEnemyKill"],[581,21,598,19],[582,6,599,4,"getDeck"],[582,13,599,11],[583,6,600,4,"getAvailableAbilities"],[583,27,600,25],[584,6,601,4,"upgradeAbility"],[584,20,601,18],[585,6,602,4,"spawnEnemy"],[585,16,602,14],[586,6,603,4,"spawnBoss"],[586,15,603,13],[587,6,604,4,"clearAllEnemies"],[587,21,604,19],[588,6,605,4,"clearSpecificEnemy"],[588,24,605,22],[589,6,606,4,"triggerLevelUpExplosion"],[589,29,606,27],[590,6,607,4,"findClosestEnemy"],[590,22,607,20],[591,6,608,4,"updateNinjaPosition"],[591,25,608,23],[592,6,609,4,"lastExplosionTime"],[593,4,610,2],[593,5,610,3],[593,6,610,4],[593,8,610,6],[594,4,611,4],[595,4,612,4],[596,4,613,4,"combatState"],[596,15,613,15],[596,17,614,4,"projectiles"],[596,28,614,15],[596,30,615,4,"lastExplosionTime"],[596,47,615,21],[596,48,616,3],[596,49,616,4],[597,4,618,2],[597,24,619,4],[597,28,619,4,"_reactJsxDevRuntime"],[597,47,619,4],[597,48,619,4,"jsxDEV"],[597,54,619,4],[597,56,619,5,"CombatContext"],[597,69,619,18],[597,70,619,19,"Provider"],[597,78,619,27],[598,6,619,28,"value"],[598,11,619,33],[598,13,619,35,"contextValue"],[598,25,619,48],[599,6,619,48,"children"],[599,14,619,48],[599,16,620,7,"children"],[600,4,620,15],[601,6,620,15,"fileName"],[601,14,620,15],[601,16,620,15,"_jsxFileName"],[601,28,620,15],[602,6,620,15,"lineNumber"],[602,16,620,15],[603,6,620,15,"columnNumber"],[603,18,620,15],[604,4,620,15],[604,11,621,28],[604,12,621,29],[605,2,623,0],[605,3,623,1],[606,2,623,2,"_s3"],[606,5,623,2],[606,6,77,13,"CombatProvider"],[606,20,77,27],[607,4,77,27],[607,12,78,26,"useGame"],[607,24,78,33],[607,25,78,33,"useGame"],[607,32,78,33],[607,34,79,30,"useZone"],[607,46,79,37],[607,47,79,37,"useZone"],[607,54,79,37],[608,2,79,37],[609,2,79,37,"_c"],[609,4,79,37],[609,7,77,13,"CombatProvider"],[609,21,77,27],[610,2,77,27],[610,6,77,27,"_c"],[610,8,77,27],[611,2,77,27,"$RefreshReg$"],[611,14,77,27],[611,15,77,27,"_c"],[611,17,77,27],[612,0,77,27],[612,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","setTimeout$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;gBCW;KDM;eEG;KFe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;epBG;KoBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;oBHU;UGG;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}