{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 40; // DOUBLED Base XP reward per enemy in explosion (was 20, now 40)\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":871,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,904,2],[27,6,904,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,904,2],[27,42,904,2,"require"],[27,49,904,2],[27,50,904,2,"_dependencyMap"],[27,64,904,2],[28,2,904,2],[28,6,904,2,"_slicedToArray"],[28,20,904,2],[28,23,904,2,"_interopDefault"],[28,38,904,2],[28,39,904,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,904,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,86,0],[37,6,86,6,"CombatContext"],[37,19,86,19],[37,35,86,22],[37,39,86,22,"createContext"],[37,45,86,35],[37,46,86,35,"createContext"],[37,59,86,35],[37,61,86,67,"undefined"],[37,70,86,76],[37,71,86,77],[38,2,88,7],[38,6,88,13,"useCombat"],[38,15,88,22],[38,18,88,25,"useCombat"],[38,19,88,25],[38,24,88,50],[39,4,88,50,"_s"],[39,6,88,50],[40,4,89,2],[40,8,89,8,"context"],[40,15,89,15],[40,18,89,18],[40,22,89,18,"useContext"],[40,28,89,28],[40,29,89,28,"useContext"],[40,39,89,28],[40,41,89,29,"CombatContext"],[40,54,89,42],[40,55,89,43],[41,4,90,2],[41,8,90,6],[41,9,90,7,"context"],[41,16,90,14],[41,18,90,16],[42,6,91,4],[42,12,91,10],[42,16,91,14,"Error"],[42,21,91,19],[42,22,91,20],[42,70,91,68],[42,71,91,69],[43,4,92,2],[44,4,93,2],[44,11,93,9,"context"],[44,18,93,16],[45,2,94,0],[45,3,94,1],[46,2,94,2,"_s"],[46,4,94,2],[46,5,88,13,"useCombat"],[46,14,88,22],[47,2,96,0],[47,6,96,4,"enemyCounter"],[47,18,96,16],[47,21,96,19],[47,22,96,20],[47,23,96,21],[47,24,96,22],[49,2,98,7],[49,6,98,13,"CombatProvider"],[49,20,98,27],[49,23,98,30,"_ref"],[49,27,98,30],[49,31,98,73],[50,4,98,73,"_s4"],[50,7,98,73],[51,4,98,73],[51,8,98,73,"_s3"],[51,11,98,73],[51,14,98,73,"$RefreshSig$"],[51,26,98,73],[52,4,98,73],[52,8,98,33,"children"],[52,16,98,41],[52,19,98,41,"_ref"],[52,23,98,41],[52,24,98,33,"children"],[52,32,98,41],[53,4,99,2],[53,8,99,8,"game"],[53,12,99,12],[53,15,99,15],[53,19,99,15,"useGame"],[53,31,99,22],[53,32,99,22,"useGame"],[53,39,99,22],[53,41,99,23],[53,42,99,24],[54,4,100,2],[54,8,100,2,"_useZone"],[54,16,100,2],[54,19,100,77],[54,23,100,77,"useZone"],[54,35,100,84],[54,36,100,84,"useZone"],[54,43,100,84],[54,45,100,85],[54,46,100,86],[55,6,100,10,"currentZone"],[55,17,100,21],[55,20,100,21,"_useZone"],[55,28,100,21],[55,29,100,10,"currentZone"],[55,40,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[56,25,100,39,"_useZone"],[56,33,100,39],[56,34,100,23,"currentZoneLevel"],[56,50,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[57,24,100,56,"_useZone"],[57,32,100,56],[57,33,100,41,"recordEnemyKill"],[57,48,100,56],[58,6,100,58,"spawnZoneEnemy"],[58,20,100,72],[58,23,100,72,"_useZone"],[58,31,100,72],[58,32,100,58,"spawnZoneEnemy"],[58,46,100,72],[60,4,102,2],[61,4,103,2],[61,8,103,8,"initialCombatState"],[61,26,103,39],[61,29,103,42],[62,6,104,4,"isInCombat"],[62,16,104,14],[62,18,104,16],[62,23,104,21],[63,6,105,4,"currentTick"],[63,17,105,15],[63,19,105,17],[63,20,105,18],[64,6,106,4,"enemies"],[64,13,106,11],[64,15,106,13],[64,17,106,15],[65,6,107,4,"abilityManager"],[65,20,107,18],[65,22,107,20],[65,26,107,24,"AbilityManager"],[65,44,107,38],[65,45,107,38,"AbilityManager"],[65,59,107,38],[65,60,107,39],[65,61,107,40],[66,6,108,4,"statusEffects"],[66,19,108,17],[66,21,108,19],[66,25,108,23,"StatusEffectManager"],[66,44,108,42],[66,45,108,42,"StatusEffectManager"],[66,64,108,42],[66,65,108,43],[66,66,108,44],[67,6,109,4,"playerStats"],[67,17,109,15],[67,19,109,17],[68,8,110,6,"attack"],[68,14,110,12],[68,16,110,14],[68,18,110,16],[69,8,110,18],[70,8,111,6,"defense"],[70,15,111,13],[70,17,111,15],[70,18,111,16],[71,8,112,6,"health"],[71,14,112,12],[71,16,112,14],[71,19,112,17],[72,8,113,6,"maxHealth"],[72,17,113,15],[72,19,113,17],[72,22,113,20],[73,8,114,6,"critChance"],[73,18,114,16],[73,20,114,18],[73,21,114,19],[74,8,115,6,"critDamage"],[74,18,115,16],[74,20,115,18],[74,23,115,21],[75,8,116,6,"cooldownReduction"],[75,25,116,23],[75,27,116,25],[76,6,117,4],[77,4,118,2],[77,5,118,3],[78,4,120,2],[78,8,120,2,"_useState"],[78,17,120,2],[78,20,120,40],[78,24,120,40,"useState"],[78,30,120,48],[78,31,120,48,"useState"],[78,39,120,48],[78,41,120,62,"initialCombatState"],[78,59,120,80],[78,60,120,81],[79,6,120,81,"_useState2"],[79,16,120,81],[79,23,120,81,"_slicedToArray"],[79,37,120,81],[79,38,120,81,"default"],[79,45,120,81],[79,47,120,81,"_useState"],[79,56,120,81],[80,6,120,9,"combatState"],[80,17,120,20],[80,20,120,20,"_useState2"],[80,30,120,20],[81,6,120,22,"setCombatState"],[81,20,120,36],[81,23,120,36,"_useState2"],[81,33,120,36],[83,4,122,2],[84,4,123,2],[84,8,123,2,"useEffect"],[84,14,123,11],[84,15,123,11,"useEffect"],[84,24,123,11],[84,26,123,12],[84,32,123,18],[85,6,124,4],[85,10,124,8,"game"],[85,14,124,12],[85,15,124,13,"gameState"],[85,24,124,22],[85,25,124,23,"abilityData"],[85,36,124,34],[85,40,124,38,"combatState"],[85,51,124,49],[85,52,124,50,"abilityManager"],[85,66,124,64],[85,68,124,66],[86,8,125,6,"console"],[86,15,125,13],[86,16,125,14,"log"],[86,19,125,17],[86,20,125,18],[86,68,125,66],[86,70,125,68,"game"],[86,74,125,72],[86,75,125,73,"gameState"],[86,84,125,82],[86,85,125,83,"abilityData"],[86,96,125,94],[86,97,125,95],[87,8,126,6,"combatState"],[87,19,126,17],[87,20,126,18,"abilityManager"],[87,34,126,32],[87,35,126,33,"restoreFromSaveData"],[87,54,126,52],[87,55,126,53,"game"],[87,59,126,57],[87,60,126,58,"gameState"],[87,69,126,67],[87,70,126,68,"abilityData"],[87,81,126,79],[87,82,126,80],[89,8,128,6],[90,8,129,6,"setCombatState"],[90,22,129,20],[90,23,129,21,"prev"],[90,27,129,25],[90,32,129,30],[91,10,129,32],[91,13,129,35,"prev"],[92,8,129,40],[92,9,129,41],[92,10,129,42],[92,11,129,43],[93,6,130,4],[94,4,131,2],[94,5,131,3],[94,7,131,5],[94,8,131,6,"game"],[94,12,131,10],[94,13,131,11,"gameState"],[94,22,131,20],[94,23,131,21,"abilityData"],[94,34,131,32],[94,36,131,34,"combatState"],[94,47,131,45],[94,48,131,46,"abilityManager"],[94,62,131,60],[94,63,131,61],[94,64,131,62],[95,4,133,2],[95,8,133,2,"_useState3"],[95,18,133,2],[95,21,133,40],[95,25,133,40,"useState"],[95,31,133,48],[95,32,133,48,"useState"],[95,40,133,48],[95,42,133,69],[95,44,133,71],[95,45,133,72],[96,6,133,72,"_useState4"],[96,16,133,72],[96,23,133,72,"_slicedToArray"],[96,37,133,72],[96,38,133,72,"default"],[96,45,133,72],[96,47,133,72,"_useState3"],[96,57,133,72],[97,6,133,9,"projectiles"],[97,17,133,20],[97,20,133,20,"_useState4"],[97,30,133,20],[98,6,133,22,"setProjectiles"],[98,20,133,36],[98,23,133,36,"_useState4"],[98,33,133,36],[99,4,134,2],[99,8,134,2,"_useState5"],[99,18,134,2],[99,21,134,52],[99,25,134,52,"useState"],[99,31,134,60],[99,32,134,60,"useState"],[99,40,134,60],[99,42,134,69],[99,43,134,70],[99,44,134,71],[100,6,134,71,"_useState6"],[100,16,134,71],[100,23,134,71,"_slicedToArray"],[100,37,134,71],[100,38,134,71,"default"],[100,45,134,71],[100,47,134,71,"_useState5"],[100,57,134,71],[101,6,134,9,"lastExplosionTime"],[101,23,134,26],[101,26,134,26,"_useState6"],[101,36,134,26],[102,6,134,28,"setLastExplosionTime"],[102,26,134,48],[102,29,134,48,"_useState6"],[102,39,134,48],[103,4,135,2],[104,4,136,2],[106,4,138,2],[107,4,139,2],[107,8,139,8,"handleEnemyKill"],[107,23,139,23],[107,26,139,26],[107,30,139,26,"useCallback"],[107,36,139,37],[107,37,139,37,"useCallback"],[107,48,139,37],[107,50,139,39,"enemy"],[107,55,139,57],[107,59,139,62],[108,6,140,4,"console"],[108,13,140,11],[108,14,140,12,"log"],[108,17,140,15],[108,18,140,16],[108,73,140,71],[108,75,140,73,"enemy"],[108,80,140,78],[108,81,140,79,"id"],[108,83,140,81],[108,84,140,82],[110,6,142,4],[111,6,143,4],[111,10,143,10,"baseXpReward"],[111,22,143,22],[111,25,143,25],[111,28,143,28],[111,29,143,29],[111,30,143,30],[112,6,144,4],[112,10,144,10,"xpMultiplier"],[112,22,144,22],[112,25,144,25,"game"],[112,29,144,29],[112,30,144,30,"gameState"],[112,39,144,39],[112,40,144,40,"subscriptionBenefits"],[112,60,144,60],[112,62,144,62,"xp_multiplier"],[112,75,144,75],[112,79,144,79],[112,82,144,82],[113,6,145,4],[113,10,145,10,"dropMultiplier"],[113,24,145,24],[113,27,145,27,"game"],[113,31,145,31],[113,32,145,32,"gameState"],[113,41,145,41],[113,42,145,42,"subscriptionBenefits"],[113,62,145,62],[113,64,145,64,"drop_multiplier"],[113,79,145,79],[113,83,145,83],[113,86,145,86],[114,6,147,4],[114,10,147,10,"xpReward"],[114,18,147,18],[114,21,147,21,"Math"],[114,25,147,25],[114,26,147,26,"floor"],[114,31,147,31],[114,32,147,32,"baseXpReward"],[114,44,147,44],[114,47,147,47,"xpMultiplier"],[114,59,147,59],[114,60,147,60],[115,6,148,4],[115,10,148,10,"goldReward"],[115,20,148,20],[115,23,148,23,"Math"],[115,27,148,27],[115,28,148,28,"floor"],[115,33,148,33],[115,34,148,34],[115,36,148,36],[115,39,148,39,"dropMultiplier"],[115,53,148,53],[115,54,148,54],[116,6,150,4,"console"],[116,13,150,11],[116,14,150,12,"log"],[116,17,150,15],[116,18,150,16],[116,48,150,46,"xpReward"],[116,56,150,54],[116,67,150,65,"goldReward"],[116,77,150,75],[116,93,150,91],[116,94,150,92],[117,6,151,4,"console"],[117,13,151,11],[117,14,151,12,"log"],[117,17,151,15],[117,18,151,16],[117,60,151,58,"xpMultiplier"],[117,72,151,70],[117,94,151,92,"dropMultiplier"],[117,108,151,106],[117,110,151,108],[117,111,151,109],[118,6,152,4,"console"],[118,13,152,11],[118,14,152,12,"log"],[118,17,152,15],[118,18,152,16],[118,54,152,52,"baseXpReward"],[118,66,152,64],[118,81,152,79,"xpReward"],[118,89,152,87],[118,91,152,89],[118,92,152,90],[119,6,153,4,"console"],[119,13,153,11],[119,14,153,12,"log"],[119,17,153,15],[119,18,153,16],[119,58,153,56],[119,60,153,58,"JSON"],[119,64,153,62],[119,65,153,63,"stringify"],[119,74,153,72],[119,75,153,73,"game"],[119,79,153,77],[119,80,153,78,"gameState"],[119,89,153,87],[119,90,153,88,"subscriptionBenefits"],[119,110,153,108],[119,111,153,109],[119,112,153,110],[120,6,154,4,"console"],[120,13,154,11],[120,14,154,12,"log"],[120,17,154,15],[120,18,154,16],[120,49,154,47,"Platform"],[120,61,154,55],[120,62,154,55,"Platform"],[120,70,154,55],[120,71,154,56,"OS"],[120,73,154,58],[120,84,154,69,"Date"],[120,88,154,73],[120,89,154,74,"now"],[120,92,154,77],[120,93,154,78],[120,94,154,79],[120,96,154,81],[120,97,154,82],[122,6,156,4],[123,6,157,4],[124,6,158,4,"setTimeout"],[124,16,158,14],[124,17,158,15],[124,23,158,21],[125,8,159,6,"console"],[125,15,159,13],[125,16,159,14,"log"],[125,19,159,17],[125,20,159,18],[125,78,159,76],[125,79,159,77],[127,8,161,6],[128,8,162,6,"game"],[128,12,162,10],[128,13,162,11,"updateNinja"],[128,24,162,22],[128,25,162,24,"prev"],[128,29,162,28],[128,33,162,33],[129,10,163,8,"console"],[129,17,163,15],[129,18,163,16,"log"],[129,21,163,19],[129,22,163,20],[129,54,163,52,"prev"],[129,58,163,56],[129,59,163,57,"experience"],[129,69,163,67],[129,81,163,79,"prev"],[129,85,163,83],[129,86,163,84,"experience"],[129,96,163,94],[129,99,163,97,"xpReward"],[129,107,163,105],[129,109,163,107],[129,110,163,108],[130,10,164,8,"console"],[130,17,164,15],[130,18,164,16,"log"],[130,21,164,19],[130,22,164,20],[130,56,164,54,"prev"],[130,60,164,58],[130,61,164,59,"gold"],[130,65,164,63],[130,77,164,75,"prev"],[130,81,164,79],[130,82,164,80,"gold"],[130,86,164,84],[130,89,164,87,"goldReward"],[130,99,164,97],[130,101,164,99],[130,102,164,100],[131,10,165,8],[131,17,165,15],[132,12,166,10,"experience"],[132,22,166,20],[132,24,166,22,"prev"],[132,28,166,26],[132,29,166,27,"experience"],[132,39,166,37],[132,42,166,40,"xpReward"],[132,50,166,48],[133,12,167,10,"gold"],[133,16,167,14],[133,18,167,16,"prev"],[133,22,167,20],[133,23,167,21,"gold"],[133,27,167,25],[133,30,167,28,"goldReward"],[134,10,168,8],[134,11,168,9],[135,8,169,6],[135,9,169,7],[135,10,169,8],[137,8,171,6],[138,8,172,6],[138,12,172,12,"zoneEnemy"],[138,21,172,21],[138,24,172,24],[139,10,173,8,"id"],[139,12,173,10],[139,14,173,12,"enemy"],[139,19,173,17],[139,20,173,18,"id"],[139,22,173,20],[140,10,174,8,"typeId"],[140,16,174,14],[140,18,174,16,"enemy"],[140,23,174,21],[140,24,174,22,"zoneTypeId"],[140,34,174,32],[140,38,174,36],[140,48,174,46],[141,10,174,48],[142,10,175,8,"name"],[142,14,175,12],[142,16,175,14,"enemy"],[142,21,175,19],[142,22,175,20,"name"],[142,26,175,24],[143,10,176,8,"icon"],[143,14,176,12],[143,16,176,14],[143,20,176,18],[144,10,176,20],[145,10,177,8,"hp"],[145,12,177,10],[145,14,177,12],[145,15,177,13],[146,10,177,15],[147,10,178,8,"maxHP"],[147,15,178,13],[147,17,178,15,"enemy"],[147,22,178,20],[147,23,178,21,"maxHealth"],[147,32,178,30],[148,10,179,8,"attack"],[148,16,179,14],[148,18,179,16,"enemy"],[148,23,179,21],[148,24,179,22,"stats"],[148,29,179,27],[148,30,179,28,"attack"],[148,36,179,34],[149,10,180,8,"xp"],[149,12,180,10],[149,14,180,12,"enemy"],[149,19,180,17],[149,20,180,18,"zoneXP"],[149,26,180,24],[149,30,180,28],[149,32,180,30],[150,10,180,32],[151,10,181,8,"position"],[151,18,181,16],[151,20,181,18,"enemy"],[151,25,181,23],[151,26,181,24,"position"],[152,8,182,6],[152,9,182,7],[153,8,184,6,"console"],[153,15,184,13],[153,16,184,14,"log"],[153,19,184,17],[153,20,184,18],[153,40,184,38,"zoneEnemy"],[153,49,184,47],[153,50,184,48,"name"],[153,54,184,52],[153,59,184,57,"zoneEnemy"],[153,68,184,66],[153,69,184,67,"typeId"],[153,75,184,73],[153,113,184,111],[153,114,184,112],[154,8,185,6,"recordEnemyKill"],[154,23,185,21],[154,24,185,22,"zoneEnemy"],[154,33,185,31],[154,34,185,32],[155,6,186,4],[155,7,186,5],[155,9,186,7],[155,10,186,8],[155,11,186,9],[155,12,186,10],[155,13,186,11],[156,4,187,2],[156,5,187,3],[156,7,187,5],[156,8,187,6,"game"],[156,12,187,10],[156,13,187,11,"updateNinja"],[156,24,187,22],[156,26,187,24,"recordEnemyKill"],[156,41,187,39],[156,42,187,40],[156,43,187,41],[158,4,189,2],[159,4,190,2],[159,8,190,8,"handleCombatTick"],[159,24,190,24],[159,27,190,27,"React"],[159,32,190,32],[159,33,190,32,"default"],[159,40,190,32],[159,41,190,33,"useCallback"],[159,52,190,44],[159,53,190,45],[159,59,190,51],[160,6,190,51],[160,10,190,51,"_s2"],[160,13,190,51],[160,16,190,51,"$RefreshSig$"],[160,28,190,51],[161,6,191,4,"console"],[161,13,191,11],[161,14,191,12,"log"],[161,17,191,15],[161,18,191,16],[161,87,191,85],[161,88,191,86],[162,6,193,4],[162,10,193,8,"enemiesToKill"],[162,23,193,36],[162,26,193,39],[162,28,193,41],[162,29,193,42],[162,30,193,43],[164,6,195,4,"_s2"],[164,9,195,4],[164,10,195,4,"setCombatState"],[164,24,195,18],[164,25,195,18,"_s2"],[164,28,195,18],[164,29,195,19,"prev"],[164,33,195,23],[164,37,195,27],[165,8,195,27,"_s2"],[165,11,195,27],[166,8,196,6],[166,12,196,12,"newTick"],[166,19,196,19],[166,22,196,22,"combatEngine"],[166,41,196,34],[166,42,196,34,"combatEngine"],[166,54,196,34],[166,55,196,35,"getCurrentTick"],[166,69,196,49],[166,70,196,50],[166,71,196,51],[167,8,197,6],[167,12,197,12,"newState"],[167,20,197,20],[167,23,197,23],[168,10,197,25],[168,13,197,28,"prev"],[168,17,197,32],[169,10,197,34,"currentTick"],[169,21,197,45],[169,23,197,47,"newTick"],[170,8,197,55],[170,9,197,56],[171,8,199,6],[171,12,199,10],[171,13,199,11,"newState"],[171,21,199,19],[171,22,199,20,"isInCombat"],[171,32,199,30],[171,34,199,32],[171,41,199,39,"newState"],[171,49,199,47],[173,8,201,6],[174,8,202,6,"newState"],[174,16,202,14],[174,17,202,15,"abilityManager"],[174,31,202,29],[174,32,202,30,"updateCooldowns"],[174,47,202,45],[174,48,202,46,"newTick"],[174,55,202,53],[174,56,202,54],[176,8,204,6],[177,8,205,6],[177,12,205,12,"effectResults"],[177,25,205,25],[177,28,205,28,"newState"],[177,36,205,36],[177,37,205,37,"statusEffects"],[177,50,205,50],[177,51,205,51,"processTick"],[177,62,205,62],[177,63,205,63,"newTick"],[177,70,205,70],[177,71,205,71],[179,8,207,6],[180,8,208,6,"effectResults"],[180,21,208,19],[180,22,208,20,"forEach"],[180,29,208,27],[180,30,208,28],[180,31,208,29,"results"],[180,38,208,36],[180,40,208,38,"entityId"],[180,48,208,46],[180,53,208,51],[181,10,209,8],[181,14,209,14,"enemyIndex"],[181,24,209,24],[181,27,209,27,"newState"],[181,35,209,35],[181,36,209,36,"enemies"],[181,43,209,43],[181,44,209,44,"findIndex"],[181,53,209,53],[181,54,209,54,"e"],[181,55,209,55],[181,59,209,59,"e"],[181,60,209,60],[181,61,209,61,"id"],[181,63,209,63],[181,68,209,68,"entityId"],[181,76,209,76],[181,77,209,77],[182,10,210,8],[182,14,210,12,"enemyIndex"],[182,24,210,22],[182,28,210,26],[182,29,210,27],[182,31,210,29],[183,12,211,10,"results"],[183,19,211,17],[183,20,211,18,"forEach"],[183,27,211,25],[183,28,211,26,"result"],[183,34,211,32],[183,38,211,36],[184,14,212,12,"newState"],[184,22,212,20],[184,23,212,21,"enemies"],[184,30,212,28],[184,31,212,29,"enemyIndex"],[184,41,212,39],[184,42,212,40],[184,43,212,41,"health"],[184,49,212,47],[184,53,212,51,"result"],[184,59,212,57],[184,60,212,58,"damage"],[184,66,212,64],[185,14,213,12,"newState"],[185,22,213,20],[185,23,213,21,"enemies"],[185,30,213,28],[185,31,213,29,"enemyIndex"],[185,41,213,39],[185,42,213,40],[185,43,213,41,"lastDamaged"],[185,54,213,52],[185,57,213,55,"newTick"],[185,64,213,62],[186,12,214,10],[186,13,214,11],[186,14,214,12],[187,10,215,8],[188,8,216,6],[188,9,216,7],[188,10,216,8],[190,8,218,6],[191,8,219,6,"newState"],[191,16,219,14],[191,17,219,15,"enemies"],[191,24,219,22],[191,25,219,23,"forEach"],[191,32,219,30],[191,33,219,31,"enemy"],[191,38,219,36],[191,42,219,40],[192,10,220,8],[192,14,220,12],[192,15,220,13,"enemy"],[192,20,220,18],[192,21,220,19,"isBoss"],[192,27,220,25],[192,29,220,27],[193,12,220,29],[194,12,221,10],[195,12,222,10],[195,16,222,16,"MOVEMENT_SPEED"],[195,30,222,30],[195,33,222,33],[195,37,222,37],[195,38,222,38],[195,39,222,39],[196,12,223,10],[196,16,223,16,"SCREEN_WIDTH"],[196,28,223,28],[196,31,223,31],[196,34,223,34],[197,12,224,10],[197,16,224,16,"GAME_AREA_HEIGHT"],[197,32,224,32],[197,35,224,35],[197,38,224,38],[197,39,224,39],[197,40,224,40],[198,12,225,10],[198,16,225,16,"ENEMY_SIZE"],[198,26,225,26],[198,29,225,29],[198,31,225,31],[200,12,227,10],[201,12,228,10],[201,16,228,16,"playerX"],[201,23,228,23],[201,26,228,26,"currentNinjaPosition"],[201,46,228,46],[201,47,228,47,"x"],[201,48,228,48],[202,12,229,10],[202,16,229,16,"playerY"],[202,23,229,23],[202,26,229,26,"currentNinjaPosition"],[202,46,229,46],[202,47,229,47,"y"],[202,48,229,48],[204,12,231,10],[205,12,232,10],[205,16,232,16,"deltaX"],[205,22,232,22],[205,25,232,25,"playerX"],[205,32,232,32],[205,35,232,35,"enemy"],[205,40,232,40],[205,41,232,41,"position"],[205,49,232,49],[205,50,232,50,"x"],[205,51,232,51],[206,12,233,10],[206,16,233,16,"deltaY"],[206,22,233,22],[206,25,233,25,"playerY"],[206,32,233,32],[206,35,233,35,"enemy"],[206,40,233,40],[206,41,233,41,"position"],[206,49,233,49],[206,50,233,50,"y"],[206,51,233,51],[207,12,234,10],[207,16,234,16,"distance"],[207,24,234,24],[207,27,234,27,"Math"],[207,31,234,31],[207,32,234,32,"sqrt"],[207,36,234,36],[207,37,234,37,"deltaX"],[207,43,234,43],[207,46,234,46,"deltaX"],[207,52,234,52],[207,55,234,55,"deltaY"],[207,61,234,61],[207,64,234,64,"deltaY"],[207,70,234,70],[207,71,234,71],[209,12,236,10],[210,12,237,10],[210,16,237,14,"distance"],[210,24,237,22],[210,27,237,25],[210,29,237,27],[210,31,237,29],[211,14,238,12],[212,14,239,12],[212,18,239,18,"normalizedX"],[212,29,239,29],[212,32,239,32,"deltaX"],[212,38,239,38],[212,41,239,41,"distance"],[212,49,239,49],[213,14,240,12],[213,18,240,18,"normalizedY"],[213,29,240,29],[213,32,240,32,"deltaY"],[213,38,240,38],[213,41,240,41,"distance"],[213,49,240,49],[215,14,242,12],[216,14,243,12],[216,18,243,18,"randomFactor"],[216,30,243,30],[216,33,243,33],[216,36,243,36],[216,37,243,37],[216,38,243,38],[217,14,244,12],[217,18,244,18,"finalX"],[217,24,244,24],[217,27,244,27,"normalizedX"],[217,38,244,38],[217,41,244,41],[217,42,244,42,"Math"],[217,46,244,46],[217,47,244,47,"random"],[217,53,244,53],[217,54,244,54],[217,55,244,55],[217,58,244,58],[217,61,244,61],[217,65,244,65,"randomFactor"],[217,77,244,77],[218,14,245,12],[218,18,245,18,"finalY"],[218,24,245,24],[218,27,245,27,"normalizedY"],[218,38,245,38],[218,41,245,41],[218,42,245,42,"Math"],[218,46,245,46],[218,47,245,47,"random"],[218,53,245,53],[218,54,245,54],[218,55,245,55],[218,58,245,58],[218,61,245,61],[218,65,245,65,"randomFactor"],[218,77,245,77],[220,14,247,12],[221,14,248,12],[221,18,248,16,"newX"],[221,22,248,20],[221,25,248,23,"enemy"],[221,30,248,28],[221,31,248,29,"position"],[221,39,248,37],[221,40,248,38,"x"],[221,41,248,39],[221,44,248,43,"finalX"],[221,50,248,49],[221,53,248,52,"MOVEMENT_SPEED"],[221,67,248,67],[222,14,249,12],[222,18,249,16,"newY"],[222,22,249,20],[222,25,249,23,"enemy"],[222,30,249,28],[222,31,249,29,"position"],[222,39,249,37],[222,40,249,38,"y"],[222,41,249,39],[222,44,249,43,"finalY"],[222,50,249,49],[222,53,249,52,"MOVEMENT_SPEED"],[222,67,249,67],[224,14,251,12],[225,14,252,12,"newX"],[225,18,252,16],[225,21,252,19,"Math"],[225,25,252,23],[225,26,252,24,"max"],[225,29,252,27],[225,30,252,28],[225,31,252,29],[225,33,252,31,"Math"],[225,37,252,35],[225,38,252,36,"min"],[225,41,252,39],[225,42,252,40,"SCREEN_WIDTH"],[225,54,252,52],[225,57,252,55,"ENEMY_SIZE"],[225,67,252,65],[225,69,252,67,"newX"],[225,73,252,71],[225,74,252,72],[225,75,252,73],[226,14,253,12,"newY"],[226,18,253,16],[226,21,253,19,"Math"],[226,25,253,23],[226,26,253,24,"max"],[226,29,253,27],[226,30,253,28],[226,31,253,29],[226,33,253,31,"Math"],[226,37,253,35],[226,38,253,36,"min"],[226,41,253,39],[226,42,253,40,"GAME_AREA_HEIGHT"],[226,58,253,56],[226,61,253,59,"ENEMY_SIZE"],[226,71,253,69],[226,73,253,71,"newY"],[226,77,253,75],[226,78,253,76],[226,79,253,77],[228,14,255,12],[229,14,256,12,"enemy"],[229,19,256,17],[229,20,256,18,"position"],[229,28,256,26],[229,29,256,27,"x"],[229,30,256,28],[229,33,256,31,"newX"],[229,37,256,35],[230,14,257,12,"enemy"],[230,19,257,17],[230,20,257,18,"position"],[230,28,257,26],[230,29,257,27,"y"],[230,30,257,28],[230,33,257,31,"newY"],[230,37,257,35],[231,12,258,10],[232,12,259,10],[233,10,260,8],[234,8,261,6],[234,9,261,7],[234,10,261,8],[236,8,263,6],[237,8,264,6],[237,12,264,10,"newState"],[237,20,264,18],[237,21,264,19,"shadowClone"],[237,32,264,30],[237,34,264,32],[238,10,265,8],[239,10,266,8,"newState"],[239,18,266,16],[239,19,266,17,"shadowClone"],[239,30,266,28],[239,31,266,29,"remainingTicks"],[239,45,266,43],[239,47,266,45],[241,10,268,8],[242,10,269,8],[242,14,269,14,"cloneOffset"],[242,25,269,25],[242,28,269,28],[242,30,269,30],[242,31,269,31],[242,32,269,32],[243,10,270,8,"newState"],[243,18,270,16],[243,19,270,17,"shadowClone"],[243,30,270,28],[243,31,270,29,"position"],[243,39,270,37],[243,40,270,38,"x"],[243,41,270,39],[243,44,270,42,"currentNinjaPosition"],[243,64,270,62],[243,65,270,63,"x"],[243,66,270,64],[243,69,270,67,"cloneOffset"],[243,80,270,78],[244,10,271,8,"newState"],[244,18,271,16],[244,19,271,17,"shadowClone"],[244,30,271,28],[244,31,271,29,"position"],[244,39,271,37],[244,40,271,38,"y"],[244,41,271,39],[244,44,271,42,"currentNinjaPosition"],[244,64,271,62],[244,65,271,63,"y"],[244,66,271,64],[244,69,271,67],[244,71,271,69],[246,10,273,8],[247,10,274,8],[247,14,274,12,"newState"],[247,22,274,20],[247,23,274,21,"shadowClone"],[247,34,274,32],[247,35,274,33,"remainingTicks"],[247,49,274,47],[247,53,274,51],[247,54,274,52],[247,56,274,54],[248,12,275,10,"console"],[248,19,275,17],[248,20,275,18,"log"],[248,23,275,21],[248,24,275,22],[248,75,275,73],[248,76,275,74],[249,12,276,10,"newState"],[249,20,276,18],[249,21,276,19,"shadowClone"],[249,32,276,30],[249,35,276,33,"undefined"],[249,44,276,42],[250,10,277,8],[250,11,277,9],[250,17,277,15],[251,12,278,10],[252,12,279,10],[253,12,280,10],[253,16,280,16,"CLONE_ATTACK_INTERVAL"],[253,37,280,37],[253,40,280,40],[253,42,280,42],[254,12,281,10],[254,16,281,14,"newState"],[254,24,281,22],[254,25,281,23,"currentTick"],[254,36,281,34],[254,39,281,37,"CLONE_ATTACK_INTERVAL"],[254,60,281,58],[254,65,281,63],[254,66,281,64],[254,70,281,68,"newState"],[254,78,281,76],[254,79,281,77,"enemies"],[254,86,281,84],[254,87,281,85,"length"],[254,93,281,91],[254,96,281,94],[254,97,281,95],[254,99,281,97],[255,14,282,12,"console"],[255,21,282,19],[255,22,282,20,"log"],[255,25,282,23],[255,26,282,24],[255,83,282,81],[255,84,282,82],[257,14,284,12],[258,14,285,12],[258,18,285,18,"target"],[258,24,285,24],[258,27,285,27,"findClosestEnemyInternal"],[258,51,285,51],[258,52,285,52,"newState"],[258,60,285,60],[258,61,285,61,"enemies"],[258,68,285,68],[258,69,285,69],[259,14,286,12],[259,18,286,16,"target"],[259,24,286,22],[259,26,286,24],[260,16,287,14],[261,16,288,14],[261,20,288,20,"cloneDamage"],[261,31,288,31],[261,34,288,34,"Math"],[261,38,288,38],[261,39,288,39,"floor"],[261,44,288,44],[261,45,288,45,"newState"],[261,53,288,53],[261,54,288,54,"playerStats"],[261,65,288,65],[261,66,288,66,"attack"],[261,72,288,72],[261,75,288,75],[261,78,288,78],[261,79,288,79],[263,16,290,14],[264,16,291,14,"createProjectile"],[264,32,291,30],[264,33,291,31,"target"],[264,39,291,37],[264,41,291,39,"cloneDamage"],[264,52,291,50],[264,54,291,52,"newState"],[264,62,291,60],[264,63,291,61,"shadowClone"],[264,74,291,72],[264,75,291,73,"position"],[264,83,291,81],[264,85,291,83],[265,18,292,16,"id"],[265,20,292,18],[265,22,292,20],[265,43,292,41],[266,18,293,16,"name"],[266,22,293,20],[266,24,293,22],[266,45,293,43],[267,18,294,16,"icon"],[267,22,294,20],[267,24,294,22],[268,16,295,14],[268,17,295,15],[268,18,295,16],[269,14,296,12],[270,12,297,10],[271,10,298,8],[272,8,299,6],[274,8,301,6],[275,8,302,6],[275,12,302,10],[275,13,302,11,"isManualControlActive"],[275,34,302,32],[275,36,302,34],[276,10,303,8],[276,15,303,13],[276,19,303,17,"i"],[276,20,303,18],[276,23,303,21],[276,24,303,22],[276,26,303,24,"i"],[276,27,303,25],[276,30,303,28],[276,31,303,29],[276,33,303,31,"i"],[276,34,303,32],[276,36,303,34],[276,38,303,36],[277,12,304,10],[277,16,304,14,"newState"],[277,24,304,22],[277,25,304,23,"abilityManager"],[277,39,304,37],[277,40,304,38,"isAbilityReady"],[277,54,304,52],[277,55,304,53,"i"],[277,56,304,54],[277,57,304,55],[277,61,304,59,"newState"],[277,69,304,67],[277,70,304,68,"enemies"],[277,77,304,75],[277,78,304,76,"length"],[277,84,304,82],[277,87,304,85],[277,88,304,86],[277,90,304,88],[278,14,305,12],[278,18,305,16,"newState"],[278,26,305,24],[278,27,305,25,"abilityManager"],[278,41,305,39],[278,42,305,40,"useAbility"],[278,52,305,50],[278,53,305,51,"i"],[278,54,305,52],[278,56,305,54,"newTick"],[278,63,305,61],[278,64,305,62],[278,66,305,64],[279,16,306,14,"castAbility"],[279,27,306,25],[279,28,306,26,"newState"],[279,36,306,34],[279,38,306,36,"i"],[279,39,306,37],[279,40,306,38],[280,14,307,12],[281,12,308,10],[282,10,309,8],[283,8,310,6],[285,8,312,6],[286,8,313,6],[286,12,313,12,"deadEnemies"],[286,23,313,23],[286,26,313,26,"newState"],[286,34,313,34],[286,35,313,35,"enemies"],[286,42,313,42],[286,43,313,43,"filter"],[286,49,313,49],[286,50,313,50,"enemy"],[286,55,313,55],[286,59,313,59,"enemy"],[286,64,313,64],[286,65,313,65,"health"],[286,71,313,71],[286,75,313,75],[286,76,313,76],[286,77,313,77],[287,8,314,6,"enemiesToKill"],[287,21,314,19],[287,24,314,22],[287,25,314,23],[287,28,314,26,"deadEnemies"],[287,39,314,37],[287,40,314,38],[287,41,314,39],[287,42,314,40],[289,8,316,6],[290,8,317,6],[290,12,317,10,"deadEnemies"],[290,23,317,21],[290,24,317,22,"length"],[290,30,317,28],[290,33,317,31],[290,34,317,32],[290,36,317,34],[291,10,318,8,"console"],[291,17,318,15],[291,18,318,16,"log"],[291,21,318,19],[291,22,318,20],[291,49,318,47,"deadEnemies"],[291,60,318,58],[291,61,318,59,"length"],[291,67,318,65],[291,83,318,81],[291,85,318,83,"deadEnemies"],[291,96,318,94],[291,97,318,95,"map"],[291,100,318,98],[291,101,318,99,"e"],[291,102,318,100],[291,106,318,104],[291,109,318,107,"e"],[291,110,318,108],[291,111,318,109,"id"],[291,113,318,111],[291,117,318,115,"e"],[291,118,318,116],[291,119,318,117,"health"],[291,125,318,123],[291,130,318,128],[291,131,318,129],[291,132,318,130],[292,8,319,6],[294,8,321,6],[295,8,322,6],[295,12,322,12,"lowHealthEnemies"],[295,28,322,28],[295,31,322,31,"newState"],[295,39,322,39],[295,40,322,40,"enemies"],[295,47,322,47],[295,48,322,48,"filter"],[295,54,322,54],[295,55,322,55,"enemy"],[295,60,322,60],[295,64,322,64,"enemy"],[295,69,322,69],[295,70,322,70,"health"],[295,76,322,76],[295,80,322,80],[295,82,322,82],[295,86,322,86,"enemy"],[295,91,322,91],[295,92,322,92,"health"],[295,98,322,98],[295,101,322,101],[295,102,322,102],[295,103,322,103],[296,8,323,6],[296,12,323,10,"lowHealthEnemies"],[296,28,323,26],[296,29,323,27,"length"],[296,35,323,33],[296,38,323,36],[296,39,323,37],[296,41,323,39],[297,10,324,8,"console"],[297,17,324,15],[297,18,324,16,"log"],[297,21,324,19],[297,22,324,20],[297,61,324,59],[297,63,324,61,"lowHealthEnemies"],[297,79,324,77],[297,80,324,78,"map"],[297,83,324,81],[297,84,324,82,"e"],[297,85,324,83],[297,89,324,87],[297,92,324,90,"e"],[297,93,324,91],[297,94,324,92,"id"],[297,96,324,94],[297,100,324,98,"e"],[297,101,324,99],[297,102,324,100,"health"],[297,108,324,106],[297,112,324,110,"e"],[297,113,324,111],[297,114,324,112,"maxHealth"],[297,123,324,121],[297,128,324,126],[297,129,324,127],[297,130,324,128],[298,8,325,6],[300,8,327,6],[301,8,328,6],[301,12,328,12,"beforeCount"],[301,23,328,23],[301,26,328,26,"newState"],[301,34,328,34],[301,35,328,35,"enemies"],[301,42,328,42],[301,43,328,43,"length"],[301,49,328,49],[302,8,329,6,"newState"],[302,16,329,14],[302,17,329,15,"enemies"],[302,24,329,22],[302,27,329,25,"newState"],[302,35,329,33],[302,36,329,34,"enemies"],[302,43,329,41],[302,44,329,42,"filter"],[302,50,329,48],[302,51,329,49,"enemy"],[302,56,329,54],[302,60,329,58,"enemy"],[302,65,329,63],[302,66,329,64,"health"],[302,72,329,70],[302,75,329,73],[302,76,329,74],[302,77,329,75],[303,8,330,6],[303,12,330,12,"afterCount"],[303,22,330,22],[303,25,330,25,"newState"],[303,33,330,33],[303,34,330,34,"enemies"],[303,41,330,41],[303,42,330,42,"length"],[303,48,330,48],[304,8,332,6],[304,12,332,10,"beforeCount"],[304,23,332,21],[304,28,332,26,"afterCount"],[304,38,332,36],[304,40,332,38],[305,10,333,8,"console"],[305,17,333,15],[305,18,333,16,"log"],[305,21,333,19],[305,22,333,20],[305,52,333,50,"beforeCount"],[305,63,333,61],[305,66,333,64,"afterCount"],[305,76,333,74],[305,102,333,100],[305,103,333,101],[306,8,334,6],[308,8,336,6],[309,8,337,6],[310,8,338,6],[310,12,338,12,"MAX_ENEMIES"],[310,23,338,23],[310,26,338,26],[310,28,338,28],[311,8,339,6],[311,12,339,12,"MIN_SPAWN_DELAY"],[311,27,339,27],[311,30,339,30],[311,33,339,33],[311,34,339,34],[311,35,339,35],[312,8,340,6],[312,12,340,12,"now"],[312,15,340,15],[312,18,340,18,"Date"],[312,22,340,22],[312,23,340,23,"now"],[312,26,340,26],[312,27,340,27],[312,28,340,28],[313,8,341,6],[313,12,341,12,"hasBoss"],[313,19,341,19],[313,22,341,22,"newState"],[313,30,341,30],[313,31,341,31,"enemies"],[313,38,341,38],[313,39,341,39,"some"],[313,43,341,43],[313,44,341,44,"enemy"],[313,49,341,49],[313,53,341,53,"enemy"],[313,58,341,58],[313,59,341,59,"isBoss"],[313,65,341,65],[313,66,341,66],[315,8,343,6],[316,8,344,6],[316,12,344,10],[316,13,344,11,"newState"],[316,21,344,19],[316,22,344,20,"lastSpawnTime"],[316,35,344,33],[316,37,344,35],[317,10,345,8,"newState"],[317,18,345,16],[317,19,345,17,"lastSpawnTime"],[317,32,345,30],[317,35,345,33,"now"],[317,38,345,36],[318,8,346,6],[319,8,348,6,"console"],[319,15,348,13],[319,16,348,14,"log"],[319,19,348,17],[319,20,348,18],[319,53,348,51,"newState"],[319,61,348,59],[319,62,348,60,"enemies"],[319,69,348,67],[319,70,348,68,"length"],[319,76,348,74],[319,85,348,83,"MAX_ENEMIES"],[319,96,348,94],[319,109,348,107,"hasBoss"],[319,116,348,114],[319,118,348,116],[319,119,348,117],[321,8,350,6],[322,8,351,6],[322,12,351,10],[322,13,351,11,"hasBoss"],[322,20,351,18],[322,24,351,22,"newState"],[322,32,351,30],[322,33,351,31,"enemies"],[322,40,351,38],[322,41,351,39,"length"],[322,47,351,45],[322,50,351,48,"MAX_ENEMIES"],[322,61,351,59],[322,65,351,64,"now"],[322,68,351,67],[322,71,351,70,"newState"],[322,79,351,78],[322,80,351,79,"lastSpawnTime"],[322,93,351,92],[322,97,351,97,"MIN_SPAWN_DELAY"],[322,112,351,112],[322,114,351,114],[323,10,352,8,"console"],[323,17,352,15],[323,18,352,16,"log"],[323,21,352,19],[323,22,352,20],[323,43,352,41,"newState"],[323,51,352,49],[323,52,352,50,"enemies"],[323,59,352,57],[323,60,352,58,"length"],[323,66,352,64],[323,69,352,67],[323,70,352,68],[323,74,352,72,"MAX_ENEMIES"],[323,85,352,83],[323,87,352,85],[323,88,352,86],[324,10,353,8,"spawnTestEnemy"],[324,24,353,22],[324,25,353,23,"newState"],[324,33,353,31],[324,34,353,32],[325,10,354,8,"newState"],[325,18,354,16],[325,19,354,17,"lastSpawnTime"],[325,32,354,30],[325,35,354,33,"now"],[325,38,354,36],[326,8,355,6],[327,8,357,6],[327,15,357,13,"newState"],[327,23,357,21],[328,6,358,4],[328,7,358,5],[328,47,358,6],[330,6,360,4],[331,6,361,4,"console"],[331,13,361,11],[331,14,361,12,"log"],[331,17,361,15],[331,18,361,16],[331,50,361,48,"enemiesToKill"],[331,63,361,61],[331,64,361,62,"length"],[331,70,361,68],[331,101,361,99],[331,102,361,100],[332,6,363,4,"enemiesToKill"],[332,19,363,17],[332,20,363,18,"forEach"],[332,27,363,25],[332,28,363,26],[332,29,363,27,"enemy"],[332,34,363,32],[332,36,363,34,"index"],[332,41,363,39],[332,46,363,44],[333,8,364,6,"console"],[333,15,364,13],[333,16,364,14,"log"],[333,19,364,17],[333,20,364,18],[333,57,364,55,"index"],[333,62,364,60],[333,65,364,63],[333,66,364,64],[333,70,364,68,"enemiesToKill"],[333,83,364,81],[333,84,364,82,"length"],[333,90,364,88],[333,104,364,102,"enemy"],[333,109,364,107],[333,110,364,108,"id"],[333,112,364,110],[333,114,364,112],[333,115,364,113],[334,8,365,6,"handleEnemyKill"],[334,23,365,21],[334,24,365,22,"enemy"],[334,29,365,27],[334,30,365,28],[335,6,366,4],[335,7,366,5],[335,8,366,6],[336,4,367,2],[336,5,367,3],[336,7,367,5],[336,8,367,6,"handleEnemyKill"],[336,23,367,21],[336,24,367,22],[336,25,367,23],[336,26,367,24],[336,27,367,25],[338,4,369,2],[339,4,370,2],[339,8,370,8,"findClosestEnemyInternal"],[339,32,370,32],[339,35,370,36,"enemies"],[339,42,370,58],[339,46,370,83],[340,6,371,4],[340,10,371,8,"enemies"],[340,17,371,15],[340,18,371,16,"length"],[340,24,371,22],[340,29,371,27],[340,30,371,28],[340,32,371,30],[340,39,371,37],[340,43,371,41],[342,6,373,4],[343,6,374,4],[343,10,374,10,"SCREEN_WIDTH"],[343,22,374,22],[343,25,374,25],[343,28,374,28],[344,6,375,4],[344,10,375,10,"GAME_AREA_HEIGHT"],[344,26,375,26],[344,29,375,29],[344,32,375,32],[344,35,375,35],[344,38,375,38],[344,39,375,39],[344,40,375,40],[345,6,376,4],[345,10,376,10,"ninjaX"],[345,16,376,16],[345,19,376,19,"SCREEN_WIDTH"],[345,31,376,31],[345,34,376,34],[345,35,376,35],[346,6,377,4],[346,10,377,10,"ninjaY"],[346,16,377,16],[346,19,377,19,"GAME_AREA_HEIGHT"],[346,35,377,35],[346,38,377,38],[346,39,377,39],[347,6,379,4],[347,10,379,8,"closestEnemy"],[347,22,379,20],[347,25,379,23,"enemies"],[347,32,379,30],[347,33,379,31],[347,34,379,32],[347,35,379,33],[348,6,380,4],[348,10,380,8,"closestDistance"],[348,25,380,23],[348,28,380,26,"Infinity"],[348,36,380,34],[349,6,382,4,"enemies"],[349,13,382,11],[349,14,382,12,"forEach"],[349,21,382,19],[349,22,382,20,"enemy"],[349,27,382,25],[349,31,382,29],[350,8,383,6],[350,12,383,12,"distance"],[350,20,383,20],[350,23,383,23,"Math"],[350,27,383,27],[350,28,383,28,"sqrt"],[350,32,383,32],[350,33,384,8,"Math"],[350,37,384,12],[350,38,384,13,"pow"],[350,41,384,16],[350,42,384,17,"enemy"],[350,47,384,22],[350,48,384,23,"position"],[350,56,384,31],[350,57,384,32,"x"],[350,58,384,33],[350,61,384,36,"ninjaX"],[350,67,384,42],[350,69,384,44],[350,70,384,45],[350,71,384,46],[350,74,385,8,"Math"],[350,78,385,12],[350,79,385,13,"pow"],[350,82,385,16],[350,83,385,17,"enemy"],[350,88,385,22],[350,89,385,23,"position"],[350,97,385,31],[350,98,385,32,"y"],[350,99,385,33],[350,102,385,36,"ninjaY"],[350,108,385,42],[350,110,385,44],[350,111,385,45],[350,112,386,6],[350,113,386,7],[351,8,388,6],[351,12,388,10,"distance"],[351,20,388,18],[351,23,388,21,"closestDistance"],[351,38,388,36],[351,40,388,38],[352,10,389,8,"closestDistance"],[352,25,389,23],[352,28,389,26,"distance"],[352,36,389,34],[353,10,390,8,"closestEnemy"],[353,22,390,20],[353,25,390,23,"enemy"],[353,30,390,28],[354,8,391,6],[355,6,392,4],[355,7,392,5],[355,8,392,6],[356,6,394,4,"console"],[356,13,394,11],[356,14,394,12,"log"],[356,17,394,15],[356,18,394,16],[356,60,394,58,"closestDistance"],[356,75,394,73],[356,76,394,74,"toFixed"],[356,83,394,81],[356,84,394,82],[356,85,394,83],[356,86,394,84],[356,88,394,86],[356,89,394,87],[357,6,395,4],[357,13,395,11,"closestEnemy"],[357,25,395,23],[358,4,396,2],[358,5,396,3],[360,4,398,2],[361,4,399,2],[361,8,399,8,"findClosestEnemy"],[361,24,399,24],[361,27,399,27,"findClosestEnemy"],[361,28,399,27],[361,33,399,53],[362,6,400,4],[362,13,400,11,"findClosestEnemyInternal"],[362,37,400,35],[362,38,400,36,"combatState"],[362,49,400,47],[362,50,400,48,"enemies"],[362,57,400,55],[362,58,400,56],[363,4,401,2],[363,5,401,3],[365,4,403,2],[366,4,404,2],[366,8,404,2,"_useState7"],[366,18,404,2],[366,21,404,58],[366,25,404,58,"useState"],[366,31,404,66],[366,32,404,66,"useState"],[366,40,404,66],[366,42,404,91],[367,8,404,93,"x"],[367,9,404,94],[367,11,404,96],[367,12,404,97],[368,8,404,99,"y"],[368,9,404,100],[368,11,404,102],[369,6,404,104],[369,7,404,105],[369,8,404,106],[370,6,404,106,"_useState8"],[370,16,404,106],[370,23,404,106,"_slicedToArray"],[370,37,404,106],[370,38,404,106,"default"],[370,45,404,106],[370,47,404,106,"_useState7"],[370,57,404,106],[371,6,404,9,"currentNinjaPosition"],[371,26,404,29],[371,29,404,29,"_useState8"],[371,39,404,29],[372,6,404,31,"setCurrentNinjaPosition"],[372,29,404,54],[372,32,404,54,"_useState8"],[372,42,404,54],[373,4,405,2],[373,8,405,2,"_useState9"],[373,18,405,2],[373,21,405,60],[373,25,405,60,"useState"],[373,31,405,68],[373,32,405,68,"useState"],[373,40,405,68],[373,42,405,69],[373,47,405,74],[373,48,405,75],[374,6,405,75,"_useState0"],[374,16,405,75],[374,23,405,75,"_slicedToArray"],[374,37,405,75],[374,38,405,75,"default"],[374,45,405,75],[374,47,405,75,"_useState9"],[374,57,405,75],[375,6,405,9,"isManualControlActive"],[375,27,405,30],[375,30,405,30,"_useState0"],[375,40,405,30],[376,6,405,32,"setIsManualControlActive"],[376,30,405,56],[376,33,405,56,"_useState0"],[376,43,405,56],[378,4,407,2],[379,4,408,2],[379,8,408,8,"updateNinjaPosition"],[379,27,408,27],[379,30,408,30],[379,34,408,30,"useCallback"],[379,40,408,41],[379,41,408,41,"useCallback"],[379,52,408,41],[379,54,408,43,"newPosition"],[379,65,408,78],[379,69,408,83],[380,6,409,4,"setCurrentNinjaPosition"],[380,29,409,27],[380,30,409,28,"newPosition"],[380,41,409,39],[380,42,409,40],[381,4,410,2],[381,5,410,3],[381,7,410,5],[381,9,410,7],[381,10,410,8],[383,4,412,2],[384,4,413,2],[384,8,413,8,"setManualControlActive"],[384,30,413,30],[384,33,413,33],[384,37,413,33,"useCallback"],[384,43,413,44],[384,44,413,44,"useCallback"],[384,55,413,44],[384,57,413,46,"active"],[384,63,413,61],[384,67,413,66],[385,6,414,4,"setIsManualControlActive"],[385,30,414,28],[385,31,414,29,"active"],[385,37,414,35],[385,38,414,36],[386,6,415,4,"console"],[386,13,415,11],[386,14,415,12,"log"],[386,17,415,15],[386,18,415,16],[386,39,415,37,"active"],[386,45,415,43],[386,48,415,46],[386,59,415,57],[386,62,415,60],[386,75,415,73],[386,88,415,86,"active"],[386,94,415,92],[386,97,415,95],[386,105,415,103],[386,108,415,106],[386,117,415,115],[386,119,415,117],[386,120,415,118],[387,4,416,2],[387,5,416,3],[387,7,416,5],[387,9,416,7],[387,10,416,8],[389,4,418,2],[390,4,419,2],[390,8,419,8,"handleProjectileHit"],[390,27,419,27],[390,30,419,31,"projectile"],[390,40,419,59],[390,44,419,64],[391,6,420,4,"console"],[391,13,420,11],[391,14,420,12,"log"],[391,17,420,15],[391,18,420,16],[391,35,420,33,"projectile"],[391,45,420,43],[391,46,420,44,"id"],[391,48,420,46],[391,62,420,60,"projectile"],[391,72,420,70],[391,73,420,71,"targetEnemyId"],[391,86,420,84],[391,94,420,92,"projectile"],[391,104,420,102],[391,105,420,103,"damage"],[391,111,420,109],[391,120,420,118],[391,121,420,119],[392,6,422,4,"setCombatState"],[392,20,422,18],[392,21,422,19,"prev"],[392,25,422,23],[392,29,422,27],[393,8,423,6],[393,12,423,12,"newState"],[393,20,423,20],[393,23,423,23],[394,10,423,25],[394,13,423,28,"prev"],[395,8,423,33],[395,9,423,34],[397,8,425,6],[398,8,426,6],[398,12,426,12,"enemyIndex"],[398,22,426,22],[398,25,426,25,"newState"],[398,33,426,33],[398,34,426,34,"enemies"],[398,41,426,41],[398,42,426,42,"findIndex"],[398,51,426,51],[398,52,426,52,"e"],[398,53,426,53],[398,57,426,57,"e"],[398,58,426,58],[398,59,426,59,"id"],[398,61,426,61],[398,66,426,66,"projectile"],[398,76,426,76],[398,77,426,77,"targetEnemyId"],[398,90,426,90],[398,91,426,91],[399,8,427,6],[399,12,427,10,"enemyIndex"],[399,22,427,20],[399,26,427,24],[399,27,427,25],[399,29,427,27],[400,10,428,8,"newState"],[400,18,428,16],[400,19,428,17,"enemies"],[400,26,428,24],[400,29,428,27],[400,30,428,28],[400,33,428,31,"newState"],[400,41,428,39],[400,42,428,40,"enemies"],[400,49,428,47],[400,50,428,48],[401,10,429,8,"newState"],[401,18,429,16],[401,19,429,17,"enemies"],[401,26,429,24],[401,27,429,25,"enemyIndex"],[401,37,429,35],[401,38,429,36],[401,41,429,39],[402,12,430,10],[402,15,430,13,"newState"],[402,23,430,21],[402,24,430,22,"enemies"],[402,31,430,29],[402,32,430,30,"enemyIndex"],[402,42,430,40],[402,43,430,41],[403,12,431,10,"health"],[403,18,431,16],[403,20,431,18,"newState"],[403,28,431,26],[403,29,431,27,"enemies"],[403,36,431,34],[403,37,431,35,"enemyIndex"],[403,47,431,45],[403,48,431,46],[403,49,431,47,"health"],[403,55,431,53],[403,58,431,56,"projectile"],[403,68,431,66],[403,69,431,67,"damage"],[403,75,431,73],[404,12,432,10,"lastDamaged"],[404,23,432,21],[404,25,432,23,"combatEngine"],[404,44,432,35],[404,45,432,35,"combatEngine"],[404,57,432,35],[404,58,432,36,"getCurrentTick"],[404,72,432,50],[404,73,432,51],[405,10,433,8],[405,11,433,9],[406,10,435,8,"console"],[406,17,435,15],[406,18,435,16,"log"],[406,21,435,19],[406,22,435,20],[406,34,435,32,"projectile"],[406,44,435,42],[406,45,435,43,"targetEnemyId"],[406,58,435,56],[406,70,435,68,"newState"],[406,78,435,76],[406,79,435,77,"enemies"],[406,86,435,84],[406,87,435,85,"enemyIndex"],[406,97,435,95],[406,98,435,96],[406,99,435,97,"health"],[406,105,435,103],[406,109,435,107,"newState"],[406,117,435,115],[406,118,435,116,"enemies"],[406,125,435,123],[406,126,435,124,"enemyIndex"],[406,136,435,134],[406,137,435,135],[406,138,435,136,"maxHealth"],[406,147,435,145],[406,149,435,147],[406,150,435,148],[407,8,436,6],[408,8,438,6],[408,15,438,13,"newState"],[408,23,438,21],[409,6,439,4],[409,7,439,5],[409,8,439,6],[411,6,441,4],[412,6,442,4,"setProjectiles"],[412,20,442,18],[412,21,442,19,"prev"],[412,25,442,23],[412,29,442,27,"prev"],[412,33,442,31],[412,34,442,32,"filter"],[412,40,442,38],[412,41,442,39,"p"],[412,42,442,40],[412,46,442,44,"p"],[412,47,442,45],[412,48,442,46,"id"],[412,50,442,48],[412,55,442,53,"projectile"],[412,65,442,63],[412,66,442,64,"id"],[412,68,442,66],[412,69,442,67],[412,70,442,68],[413,4,443,2],[413,5,443,3],[415,4,445,2],[416,4,446,2],[416,8,446,8,"castAbility"],[416,19,446,19],[416,22,446,22,"castAbility"],[416,23,446,23,"state"],[416,28,446,41],[416,30,446,43,"slotIndex"],[416,39,446,60],[416,44,446,65],[417,6,447,4],[417,10,447,10,"deck"],[417,14,447,14],[417,17,447,17,"state"],[417,22,447,22],[417,23,447,23,"abilityManager"],[417,37,447,37],[417,38,447,38,"getDeck"],[417,45,447,45],[417,46,447,46],[417,47,447,47],[418,6,448,4],[418,10,448,10,"ability"],[418,17,448,17],[418,20,448,20,"deck"],[418,24,448,24],[418,25,448,25,"slots"],[418,30,448,30],[418,31,448,31,"slotIndex"],[418,40,448,40],[418,41,448,41],[419,6,449,4],[419,10,449,8],[419,11,449,9,"ability"],[419,18,449,16],[419,20,449,18],[421,6,451,4],[422,6,452,4],[422,10,452,8,"damage"],[422,16,452,14],[422,19,452,17,"ability"],[422,26,452,24],[422,27,452,25,"stats"],[422,32,452,30],[422,33,452,31,"baseDamage"],[422,43,452,41],[424,6,454,4],[425,6,455,4,"deck"],[425,10,455,8],[425,11,455,9,"activeSynergies"],[425,26,455,24],[425,27,455,25,"forEach"],[425,34,455,32],[425,35,455,33,"synergy"],[425,42,455,40],[425,46,455,44],[426,8,456,6],[426,12,456,10,"synergy"],[426,19,456,17],[426,20,456,18,"bonus"],[426,25,456,23],[426,26,456,24,"damageBonus"],[426,37,456,35],[426,41,457,10,"synergy"],[426,48,457,17],[426,49,457,18,"requiredTags"],[426,61,457,30],[426,62,457,31,"some"],[426,66,457,35],[426,67,457,36,"tag"],[426,70,457,39],[426,74,457,43,"ability"],[426,81,457,50],[426,82,457,51,"tags"],[426,86,457,55],[426,87,457,56,"includes"],[426,95,457,64],[426,96,457,65,"tag"],[426,99,457,68],[426,100,457,69],[426,101,457,70],[426,103,457,72],[427,10,458,8,"damage"],[427,16,458,14],[427,20,458,19],[427,21,458,20],[427,24,458,23,"synergy"],[427,31,458,30],[427,32,458,31,"bonus"],[427,37,458,36],[427,38,458,37,"damageBonus"],[427,49,458,48],[427,52,458,51],[427,55,458,55],[428,8,459,6],[429,6,460,4],[429,7,460,5],[429,8,460,6],[431,6,462,4],[432,6,463,4],[432,10,463,10,"isAOE"],[432,15,463,15],[432,18,463,18,"ability"],[432,25,463,25],[432,26,463,26,"effects"],[432,33,463,33],[432,34,463,34,"includes"],[432,42,463,42],[432,43,463,43],[432,48,463,48],[432,49,463,49],[432,53,463,53,"ability"],[432,60,463,60],[432,61,463,61,"stats"],[432,66,463,66],[432,67,463,67,"aoeRadius"],[432,76,463,76],[433,6,465,4],[433,10,465,8,"isAOE"],[433,15,465,13],[433,17,465,15],[434,8,466,6,"console"],[434,15,466,13],[434,16,466,14,"log"],[434,19,466,17],[434,20,466,18],[434,39,466,37,"ability"],[434,46,466,44],[434,47,466,45,"name"],[434,51,466,49],[434,67,466,65,"ability"],[434,74,466,72],[434,75,466,73,"stats"],[434,80,466,78],[434,81,466,79,"aoeRadius"],[434,90,466,88],[434,92,466,90],[434,93,466,91],[436,8,468,6],[437,8,469,6],[437,12,469,12,"ninjaX"],[437,18,469,18],[437,21,469,21,"currentNinjaPosition"],[437,41,469,41],[437,42,469,42,"x"],[437,43,469,43],[437,46,469,46],[437,48,469,48],[437,49,469,49],[437,50,469,50],[438,8,470,6],[438,12,470,12,"ninjaY"],[438,18,470,18],[438,21,470,21,"currentNinjaPosition"],[438,41,470,41],[438,42,470,42,"y"],[438,43,470,43],[438,46,470,46],[438,48,470,48],[439,8,471,6],[439,12,471,12,"aoeRadius"],[439,21,471,21],[439,24,471,24,"ability"],[439,31,471,31],[439,32,471,32,"stats"],[439,37,471,37],[439,38,471,38,"aoeRadius"],[439,47,471,47],[440,8,473,6],[440,12,473,12,"enemiesInRange"],[440,26,473,26],[440,29,473,29,"state"],[440,34,473,34],[440,35,473,35,"enemies"],[440,42,473,42],[440,43,473,43,"filter"],[440,49,473,49],[440,50,473,50,"enemy"],[440,55,473,55],[440,59,473,59],[441,10,474,8],[441,14,474,14,"enemyX"],[441,20,474,20],[441,23,474,23,"enemy"],[441,28,474,28],[441,29,474,29,"position"],[441,37,474,37],[441,38,474,38,"x"],[441,39,474,39],[441,42,474,42],[441,46,474,46],[441,47,474,47],[441,48,474,48],[442,10,475,8],[442,14,475,14,"enemyY"],[442,20,475,20],[442,23,475,23,"enemy"],[442,28,475,28],[442,29,475,29,"position"],[442,37,475,37],[442,38,475,38,"y"],[442,39,475,39],[442,42,475,42],[442,46,475,46],[443,10,476,8],[443,14,476,14,"distance"],[443,22,476,22],[443,25,476,25,"Math"],[443,29,476,29],[443,30,476,30,"sqrt"],[443,34,476,34],[443,35,476,35,"Math"],[443,39,476,39],[443,40,476,40,"pow"],[443,43,476,43],[443,44,476,44,"enemyX"],[443,50,476,50],[443,53,476,53,"ninjaX"],[443,59,476,59],[443,61,476,61],[443,62,476,62],[443,63,476,63],[443,66,476,66,"Math"],[443,70,476,70],[443,71,476,71,"pow"],[443,74,476,74],[443,75,476,75,"enemyY"],[443,81,476,81],[443,84,476,84,"ninjaY"],[443,90,476,90],[443,92,476,92],[443,93,476,93],[443,94,476,94],[443,95,476,95],[444,10,477,8],[444,17,477,15,"distance"],[444,25,477,23],[444,29,477,27,"aoeRadius"],[444,38,477,36],[445,8,478,6],[445,9,478,7],[445,10,478,8],[446,8,480,6,"console"],[446,15,480,13],[446,16,480,14,"log"],[446,19,480,17],[446,20,480,18],[446,45,480,43,"enemiesInRange"],[446,59,480,57],[446,60,480,58,"length"],[446,66,480,64],[446,88,480,86,"aoeRadius"],[446,97,480,95],[446,107,480,105],[446,108,480,106],[448,8,482,6],[449,8,483,6,"enemiesInRange"],[449,22,483,20],[449,23,483,21,"forEach"],[449,30,483,28],[449,31,483,29,"enemy"],[449,36,483,34],[449,40,483,38],[450,10,484,8],[450,14,484,14,"damageResult"],[450,26,484,26],[450,29,484,29,"DamageCalculator"],[450,48,484,45],[450,49,484,45,"DamageCalculator"],[450,65,484,45],[450,66,484,46,"calculateDamage"],[450,81,484,61],[450,82,484,62,"damage"],[450,88,484,68],[450,90,484,70,"state"],[450,95,484,75],[450,96,484,76,"playerStats"],[450,107,484,87],[450,109,484,89,"enemy"],[450,114,484,94],[450,115,484,95,"stats"],[450,120,484,100],[450,121,484,101],[451,10,485,8,"createProjectile"],[451,26,485,24],[451,27,485,25,"enemy"],[451,32,485,30],[451,34,485,32,"damageResult"],[451,46,485,44],[451,47,485,45,"damage"],[451,53,485,51],[451,55,485,53,"currentNinjaPosition"],[451,75,485,73],[451,77,485,75],[452,12,486,10,"id"],[452,14,486,12],[452,16,486,14,"ability"],[452,23,486,21],[452,24,486,22,"id"],[452,26,486,24],[453,12,487,10,"name"],[453,16,487,14],[453,18,487,16,"ability"],[453,25,487,23],[453,26,487,24,"name"],[453,30,487,28],[454,12,488,10,"icon"],[454,16,488,14],[454,18,488,16,"ability"],[454,25,488,23],[454,26,488,24,"icon"],[455,10,489,8],[455,11,489,9],[455,12,489,10],[456,10,491,8,"console"],[456,17,491,15],[456,18,491,16,"log"],[456,21,491,19],[456,22,491,20],[456,37,491,35,"enemy"],[456,42,491,40],[456,43,491,41,"name"],[456,47,491,45],[456,55,491,53,"damageResult"],[456,67,491,65],[456,68,491,66,"damage"],[456,74,491,72],[456,83,491,81],[456,84,491,82],[457,8,492,6],[457,9,492,7],[457,10,492,8],[458,8,494,6,"console"],[458,15,494,13],[458,16,494,14,"log"],[458,19,494,17],[458,20,494,18],[458,26,494,24,"ability"],[458,33,494,31],[458,34,494,32,"name"],[458,38,494,36],[458,56,494,54,"enemiesInRange"],[458,70,494,68],[458,71,494,69,"length"],[458,77,494,75],[458,93,494,91,"damage"],[458,99,494,97],[458,118,494,116],[458,119,494,117],[459,6,496,4],[459,7,496,5],[459,13,496,11],[460,8,497,6],[461,8,498,6],[461,12,498,12,"target"],[461,18,498,18],[461,21,498,21,"findClosestEnemyInternal"],[461,45,498,45],[461,46,498,46,"state"],[461,51,498,51],[461,52,498,52,"enemies"],[461,59,498,59],[461,60,498,60],[462,8,499,6],[462,12,499,10],[462,13,499,11,"target"],[462,19,499,17],[462,21,499,19],[463,8,501,6],[463,12,501,12,"damageResult"],[463,24,501,24],[463,27,501,27,"DamageCalculator"],[463,46,501,43],[463,47,501,43,"DamageCalculator"],[463,63,501,43],[463,64,501,44,"calculateDamage"],[463,79,501,59],[463,80,501,60,"damage"],[463,86,501,66],[463,88,501,68,"state"],[463,93,501,73],[463,94,501,74,"playerStats"],[463,105,501,85],[463,107,501,87,"target"],[463,113,501,93],[463,114,501,94,"stats"],[463,119,501,99],[463,120,501,100],[465,8,503,6],[466,8,504,6,"createProjectile"],[466,24,504,22],[466,25,504,23,"target"],[466,31,504,29],[466,33,504,31,"damageResult"],[466,45,504,43],[466,46,504,44,"damage"],[466,52,504,50],[466,54,504,52,"currentNinjaPosition"],[466,74,504,72],[466,76,504,74],[467,10,505,8,"id"],[467,12,505,10],[467,14,505,12,"ability"],[467,21,505,19],[467,22,505,20,"id"],[467,24,505,22],[468,10,506,8,"name"],[468,14,506,12],[468,16,506,14,"ability"],[468,23,506,21],[468,24,506,22,"name"],[468,28,506,26],[469,10,507,8,"icon"],[469,14,507,12],[469,16,507,14,"ability"],[469,23,507,21],[469,24,507,22,"icon"],[470,8,508,6],[470,9,508,7],[470,10,508,8],[471,8,510,6,"console"],[471,15,510,13],[471,16,510,14,"log"],[471,19,510,17],[471,20,510,18],[471,26,510,24,"ability"],[471,33,510,31],[471,34,510,32,"name"],[471,38,510,36],[471,66,510,64,"damageResult"],[471,78,510,76],[471,79,510,77,"damage"],[471,85,510,83],[471,95,510,93,"damageResult"],[471,107,510,105],[471,108,510,106,"isCritical"],[471,118,510,116],[471,121,510,119],[471,131,510,129],[471,134,510,132],[471,136,510,134],[471,138,510,136],[471,139,510,137],[472,6,511,4],[474,6,513,4],[475,6,514,4],[475,10,514,8,"ability"],[475,17,514,15],[475,18,514,16,"effects"],[475,25,514,23],[475,26,514,24,"includes"],[475,34,514,32],[475,35,514,33],[475,40,514,38],[475,41,514,39],[475,45,514,43,"ability"],[475,52,514,50],[475,53,514,51,"stats"],[475,58,514,56],[475,59,514,57,"duration"],[475,67,514,65],[475,69,514,67],[476,8,515,6],[476,12,515,12,"targets"],[476,19,515,19],[476,22,515,22,"isAOE"],[476,27,515,27],[476,30,516,8,"state"],[476,35,516,13],[476,36,516,14,"enemies"],[476,43,516,21],[476,44,516,22,"filter"],[476,50,516,28],[476,51,516,29,"enemy"],[476,56,516,34],[476,60,516,38],[477,10,517,10],[477,14,517,16,"ninjaX"],[477,20,517,22],[477,23,517,25,"currentNinjaPosition"],[477,43,517,45],[477,44,517,46,"x"],[477,45,517,47],[477,48,517,50],[477,50,517,52],[478,10,518,10],[478,14,518,16,"ninjaY"],[478,20,518,22],[478,23,518,25,"currentNinjaPosition"],[478,43,518,45],[478,44,518,46,"y"],[478,45,518,47],[478,48,518,50],[478,50,518,52],[479,10,519,10],[479,14,519,16,"enemyX"],[479,20,519,22],[479,23,519,25,"enemy"],[479,28,519,30],[479,29,519,31,"position"],[479,37,519,39],[479,38,519,40,"x"],[479,39,519,41],[479,42,519,44],[479,46,519,48],[480,10,520,10],[480,14,520,16,"enemyY"],[480,20,520,22],[480,23,520,25,"enemy"],[480,28,520,30],[480,29,520,31,"position"],[480,37,520,39],[480,38,520,40,"y"],[480,39,520,41],[480,42,520,44],[480,46,520,48],[481,10,521,10],[481,14,521,16,"distance"],[481,22,521,24],[481,25,521,27,"Math"],[481,29,521,31],[481,30,521,32,"sqrt"],[481,34,521,36],[481,35,521,37,"Math"],[481,39,521,41],[481,40,521,42,"pow"],[481,43,521,45],[481,44,521,46,"enemyX"],[481,50,521,52],[481,53,521,55,"ninjaX"],[481,59,521,61],[481,61,521,63],[481,62,521,64],[481,63,521,65],[481,66,521,68,"Math"],[481,70,521,72],[481,71,521,73,"pow"],[481,74,521,76],[481,75,521,77,"enemyY"],[481,81,521,83],[481,84,521,86,"ninjaY"],[481,90,521,92],[481,92,521,94],[481,93,521,95],[481,94,521,96],[481,95,521,97],[482,10,522,10],[482,17,522,17,"distance"],[482,25,522,25],[482,29,522,29,"ability"],[482,36,522,36],[482,37,522,37,"stats"],[482,42,522,42],[482,43,522,43,"aoeRadius"],[482,52,522,52],[483,8,523,8],[483,9,523,9],[483,10,523,10],[483,13,524,8],[483,14,524,9,"findClosestEnemyInternal"],[483,38,524,33],[483,39,524,34,"state"],[483,44,524,39],[483,45,524,40,"enemies"],[483,52,524,47],[483,53,524,48],[483,54,524,49],[483,55,524,50,"filter"],[483,61,524,56],[483,62,524,57,"Boolean"],[483,69,524,64],[483,70,524,65],[484,8,526,6,"targets"],[484,15,526,13],[484,16,526,14,"forEach"],[484,23,526,21],[484,24,526,22,"target"],[484,30,526,28],[484,34,526,32],[485,10,527,8,"state"],[485,15,527,13],[485,16,527,14,"statusEffects"],[485,29,527,27],[485,30,527,28,"addEffect"],[485,39,527,37],[485,40,527,38,"target"],[485,46,527,44],[485,47,527,45,"id"],[485,49,527,47],[485,51,527,49],[486,12,528,10,"id"],[486,14,528,12],[486,16,528,14],[486,19,528,17,"ability"],[486,26,528,24],[486,27,528,25,"id"],[486,29,528,27],[486,35,528,33],[487,12,529,10,"type"],[487,16,529,14],[487,18,529,16],[487,23,529,21],[488,12,530,10,"remainingTicks"],[488,26,530,24],[488,28,530,26,"Math"],[488,32,530,30],[488,33,530,31,"floor"],[488,38,530,36],[488,39,530,37,"ability"],[488,46,530,44],[488,47,530,45,"stats"],[488,52,530,50],[488,53,530,51,"duration"],[488,61,530,59],[488,64,530,62],[488,66,530,64],[488,67,530,65],[489,12,531,10,"tickInterval"],[489,24,531,22],[489,26,531,24],[489,28,531,26],[490,12,532,10,"lastTick"],[490,20,532,18],[490,22,532,20,"state"],[490,27,532,25],[490,28,532,26,"currentTick"],[490,39,532,37],[491,12,533,10,"value"],[491,17,533,15],[491,19,533,17,"Math"],[491,23,533,21],[491,24,533,22,"floor"],[491,29,533,27],[491,30,533,28,"damage"],[491,36,533,34],[491,39,533,37],[491,42,533,40],[491,43,533,41],[492,12,534,10,"stackable"],[492,21,534,19],[492,23,534,21],[493,10,535,8],[493,11,535,9],[493,12,535,10],[494,8,536,6],[494,9,536,7],[494,10,536,8],[495,6,537,4],[497,6,539,4],[498,6,540,4],[498,10,540,8,"ability"],[498,17,540,15],[498,18,540,16,"effects"],[498,25,540,23],[498,26,540,24,"includes"],[498,34,540,32],[498,35,540,33],[498,41,540,39],[498,42,540,40],[498,46,540,44,"ability"],[498,53,540,51],[498,54,540,52,"id"],[498,56,540,54],[498,61,540,59],[498,75,540,73],[498,77,540,75],[499,8,541,6,"console"],[499,15,541,13],[499,16,541,14,"log"],[499,19,541,17],[499,20,541,18],[499,66,541,64,"ability"],[499,73,541,71],[499,74,541,72,"stats"],[499,79,541,77],[499,80,541,78,"duration"],[499,88,541,86],[499,98,541,96],[499,99,541,97],[501,8,543,6],[502,8,544,6],[502,12,544,12,"cloneX"],[502,18,544,18],[502,21,544,21,"currentNinjaPosition"],[502,41,544,41],[502,42,544,42,"x"],[502,43,544,43],[502,46,544,46],[502,48,544,48],[502,49,544,49],[502,50,544,50],[503,8,545,6],[503,12,545,12,"cloneY"],[503,18,545,18],[503,21,545,21,"currentNinjaPosition"],[503,41,545,41],[503,42,545,42,"y"],[503,43,545,43],[503,46,545,46],[503,48,545,48],[503,49,545,49],[503,50,545,50],[505,8,547,6,"state"],[505,13,547,11],[505,14,547,12,"shadowClone"],[505,25,547,23],[505,28,547,26],[506,10,548,8,"id"],[506,12,548,10],[506,14,548,12],[506,30,548,28,"Date"],[506,34,548,32],[506,35,548,33,"now"],[506,38,548,36],[506,39,548,37],[506,40,548,38],[506,42,548,40],[507,10,549,8,"remainingTicks"],[507,24,549,22],[507,26,549,24,"Math"],[507,30,549,28],[507,31,549,29,"floor"],[507,36,549,34],[507,37,549,35,"ability"],[507,44,549,42],[507,45,549,43,"stats"],[507,50,549,48],[507,51,549,49,"duration"],[507,59,549,57],[507,62,549,60],[507,64,549,62],[507,65,549,63],[508,10,549,65],[509,10,550,8,"position"],[509,18,550,16],[509,20,550,18],[510,12,550,20,"x"],[510,13,550,21],[510,15,550,23,"cloneX"],[510,21,550,29],[511,12,550,31,"y"],[511,13,550,32],[511,15,550,34,"cloneY"],[512,10,550,41],[512,11,550,42],[513,10,551,8,"damageMultiplier"],[513,26,551,24],[513,28,551,26],[513,31,551,29],[513,32,551,31],[514,8,552,6],[514,9,552,7],[515,8,554,6,"console"],[515,15,554,13],[515,16,554,14,"log"],[515,19,554,17],[515,20,554,18],[515,63,554,61,"ability"],[515,70,554,68],[515,71,554,69,"stats"],[515,76,554,74],[515,77,554,75,"duration"],[515,85,554,83],[515,108,554,106],[515,109,554,107],[516,6,555,4],[517,4,556,2],[517,5,556,3],[519,4,558,2],[520,4,559,2],[520,8,559,8,"createProjectile"],[520,24,559,24],[520,27,559,27,"createProjectile"],[520,28,559,28,"targetEnemy"],[520,39,559,52],[520,41,559,54,"damage"],[520,47,559,68],[520,49,559,70,"ninjaPos"],[520,57,559,103],[520,59,559,105,"abilityInfo"],[520,70,559,159],[520,75,559,164],[521,6,560,4],[521,10,560,10,"SCREEN_WIDTH"],[521,22,560,22],[521,25,560,25],[521,28,560,28],[522,6,561,4],[522,10,561,10,"GAME_AREA_HEIGHT"],[522,26,561,26],[522,29,561,29],[522,32,561,32],[522,35,561,35],[522,38,561,38],[522,39,561,39],[522,40,561,40],[523,6,562,4],[523,10,562,10,"NINJA_SIZE"],[523,20,562,20],[523,23,562,23],[523,25,562,25],[525,6,564,4],[526,6,565,4],[526,10,565,10,"ninjaX"],[526,16,565,16],[526,19,565,19,"ninjaPos"],[526,27,565,27],[526,30,565,30,"ninjaPos"],[526,38,565,38],[526,39,565,39,"x"],[526,40,565,40],[526,43,565,43,"NINJA_SIZE"],[526,53,565,53],[526,56,565,56],[526,57,565,57],[526,60,565,60,"SCREEN_WIDTH"],[526,72,565,72],[526,75,565,75],[526,76,565,76],[527,6,566,4],[527,10,566,10,"ninjaY"],[527,16,566,16],[527,19,566,19,"ninjaPos"],[527,27,566,27],[527,30,566,30,"ninjaPos"],[527,38,566,38],[527,39,566,39,"y"],[527,40,566,40],[527,43,566,43,"NINJA_SIZE"],[527,53,566,53],[527,56,566,56],[527,57,566,57],[527,60,566,60,"GAME_AREA_HEIGHT"],[527,76,566,76],[527,79,566,79],[527,80,566,80],[528,6,567,4],[528,10,567,10,"ENEMY_SIZE"],[528,20,567,20],[528,23,567,23],[528,25,567,25],[529,6,569,4],[529,10,569,10,"projectile"],[529,20,569,38],[529,23,569,41],[530,8,570,6,"id"],[530,10,570,8],[530,12,570,10],[530,20,570,18,"Date"],[530,24,570,22],[530,25,570,23,"now"],[530,28,570,26],[530,29,570,27],[530,30,570,28],[530,34,570,32,"Math"],[530,38,570,36],[530,39,570,37,"random"],[530,45,570,43],[530,46,570,44],[530,47,570,45],[530,49,570,47],[531,8,571,6,"x"],[531,9,571,7],[531,11,571,9,"ninjaX"],[531,17,571,15],[532,8,572,6,"y"],[532,9,572,7],[532,11,572,9,"ninjaY"],[532,17,572,15],[533,8,573,6,"targetX"],[533,15,573,13],[533,17,573,15,"targetEnemy"],[533,28,573,26],[533,29,573,27,"position"],[533,37,573,35],[533,38,573,36,"x"],[533,39,573,37],[533,42,573,40,"ENEMY_SIZE"],[533,52,573,50],[533,55,573,53],[533,56,573,54],[534,8,574,6,"targetY"],[534,15,574,13],[534,17,574,15,"targetEnemy"],[534,28,574,26],[534,29,574,27,"position"],[534,37,574,35],[534,38,574,36,"y"],[534,39,574,37],[534,42,574,40,"ENEMY_SIZE"],[534,52,574,50],[534,55,574,53],[534,56,574,54],[535,8,575,6,"targetEnemyId"],[535,21,575,19],[535,23,575,21,"targetEnemy"],[535,34,575,32],[535,35,575,33,"id"],[535,37,575,35],[536,8,576,6,"damage"],[536,14,576,12],[536,16,576,14,"damage"],[536,22,576,20],[537,8,577,6,"startTime"],[537,17,577,15],[537,19,577,17,"Date"],[537,23,577,21],[537,24,577,22,"now"],[537,27,577,25],[537,28,577,26],[537,29,577,27],[538,8,578,6,"duration"],[538,16,578,14],[538,18,578,16],[538,21,578,19],[539,8,578,21],[540,8,579,6],[541,8,580,6,"abilityId"],[541,17,580,15],[541,19,580,17,"abilityInfo"],[541,30,580,28],[541,32,580,30,"id"],[541,34,580,32],[541,38,580,36],[541,54,580,52],[542,8,581,6,"abilityName"],[542,19,581,17],[542,21,581,19,"abilityInfo"],[542,32,581,30],[542,34,581,32,"name"],[542,38,581,36],[542,42,581,40],[542,58,581,56],[543,8,582,6,"abilityIcon"],[543,19,582,17],[543,21,582,19,"abilityInfo"],[543,32,582,30],[543,34,582,32,"icon"],[543,38,582,36],[543,42,582,40],[543,46,582,44],[543,47,582,46],[544,6,583,4],[544,7,583,5],[545,6,585,4,"console"],[545,13,585,11],[545,14,585,12,"log"],[545,17,585,15],[545,18,585,16],[545,53,585,51,"targetEnemy"],[545,64,585,62],[545,65,585,63,"id"],[545,67,585,65],[545,75,585,73,"damage"],[545,81,585,79],[545,90,585,88],[545,91,585,89],[546,6,586,4,"console"],[546,13,586,11],[546,14,586,12,"log"],[546,17,586,15],[546,18,586,16],[546,53,586,51,"ninjaX"],[546,59,586,57],[546,64,586,62,"ninjaY"],[546,70,586,68],[546,87,586,85,"projectile"],[546,97,586,95],[546,98,586,96,"targetX"],[546,105,586,103],[546,110,586,108,"projectile"],[546,120,586,118],[546,121,586,119,"targetY"],[546,128,586,126],[546,131,586,129],[546,132,586,130],[547,6,588,4,"setProjectiles"],[547,20,588,18],[547,21,588,19,"prev"],[547,25,588,23],[547,29,588,27],[547,30,588,28],[547,33,588,31,"prev"],[547,37,588,35],[547,39,588,37,"projectile"],[547,49,588,47],[547,50,588,48],[547,51,588,49],[549,6,590,4],[550,6,591,4,"setTimeout"],[550,16,591,14],[550,17,591,15],[550,23,591,21],[551,8,592,6,"handleProjectileHit"],[551,27,592,25],[551,28,592,26,"projectile"],[551,38,592,36],[551,39,592,37],[552,6,593,4],[552,7,593,5],[552,9,593,7],[552,12,593,10],[552,13,593,11],[553,4,594,2],[553,5,594,3],[555,4,596,2],[556,4,597,2],[556,8,597,8,"spawnTestEnemy"],[556,22,597,22],[556,25,597,26,"state"],[556,30,597,44],[556,34,597,49],[557,6,598,4,"console"],[557,13,598,11],[557,14,598,12,"log"],[557,17,598,15],[557,18,598,16],[557,83,598,81],[557,84,598,82],[559,6,600,4],[560,6,601,4],[560,10,601,10,"zoneEnemy"],[560,19,601,19],[560,22,601,22,"spawnZoneEnemy"],[560,36,601,36],[560,37,601,37],[560,38,601,38],[561,6,602,4],[561,10,602,8],[561,11,602,9,"zoneEnemy"],[561,20,602,18],[561,22,602,20],[562,8,603,6,"console"],[562,15,603,13],[562,16,603,14,"log"],[562,19,603,17],[562,20,603,18],[562,76,603,74],[562,77,603,75],[563,8,604,6],[564,8,605,6,"spawnBasicTestEnemy"],[564,27,605,25],[564,28,605,26,"state"],[564,33,605,31],[564,34,605,32],[565,8,606,6],[566,6,607,4],[567,6,609,4,"console"],[567,13,609,11],[567,14,609,12,"log"],[567,17,609,15],[567,18,609,16],[567,44,609,42,"zoneEnemy"],[567,53,609,51],[567,54,609,52,"name"],[567,58,609,56],[567,63,609,61,"zoneEnemy"],[567,72,609,70],[567,73,609,71,"typeId"],[567,79,609,77],[567,94,609,92,"currentZone"],[567,105,609,103],[567,107,609,105,"id"],[567,109,609,107],[567,119,609,117,"currentZoneLevel"],[567,135,609,133],[567,137,609,135,"level"],[567,142,609,140],[567,144,609,142],[567,145,609,143],[569,6,611,4],[570,6,612,4],[570,10,612,10,"combatEnemy"],[570,21,612,34],[570,24,612,37],[571,8,613,6,"id"],[571,10,613,8],[571,12,613,10,"zoneEnemy"],[571,21,613,19],[571,22,613,20,"id"],[571,24,613,22],[572,8,614,6,"name"],[572,12,614,10],[572,14,614,12,"zoneEnemy"],[572,23,614,21],[572,24,614,22,"name"],[572,28,614,26],[573,8,615,6,"health"],[573,14,615,12],[573,16,615,14,"zoneEnemy"],[573,25,615,23],[573,26,615,24,"hp"],[573,28,615,26],[574,8,616,6,"maxHealth"],[574,17,616,15],[574,19,616,17,"zoneEnemy"],[574,28,616,26],[574,29,616,27,"maxHP"],[574,34,616,32],[575,8,617,6,"stats"],[575,13,617,11],[575,15,617,13],[576,10,618,8,"attack"],[576,16,618,14],[576,18,618,16,"zoneEnemy"],[576,27,618,25],[576,28,618,26,"attack"],[576,34,618,32],[577,10,619,8,"defense"],[577,17,619,15],[577,19,619,17],[577,21,619,19],[578,10,619,21],[579,10,620,8,"health"],[579,16,620,14],[579,18,620,16,"zoneEnemy"],[579,27,620,25],[579,28,620,26,"hp"],[579,30,620,28],[580,10,621,8,"maxHealth"],[580,19,621,17],[580,21,621,19,"zoneEnemy"],[580,30,621,28],[580,31,621,29,"maxHP"],[580,36,621,34],[581,10,622,8,"critChance"],[581,20,622,18],[581,22,622,20],[581,23,622,21],[582,10,623,8,"critDamage"],[582,20,623,18],[582,22,623,20],[582,25,623,23],[583,10,624,8,"cooldownReduction"],[583,27,624,25],[583,29,624,27],[584,8,625,6],[584,9,625,7],[585,8,626,6,"position"],[585,16,626,14],[585,18,626,16,"zoneEnemy"],[585,27,626,25],[585,28,626,26,"position"],[585,36,626,34],[586,8,627,6,"lastDamaged"],[586,19,627,17],[586,21,627,19],[586,22,627,20],[587,8,628,6],[588,8,629,6,"zoneTypeId"],[588,18,629,16],[588,20,629,18,"zoneEnemy"],[588,29,629,27],[588,30,629,28,"typeId"],[588,36,629,34],[589,8,630,6,"zoneXP"],[589,14,630,12],[589,16,630,14,"zoneEnemy"],[589,25,630,23],[589,26,630,24,"xp"],[590,6,631,4],[590,7,631,5],[591,6,633,4,"console"],[591,13,633,11],[591,14,633,12,"log"],[591,17,633,15],[591,18,633,16],[591,42,633,40,"combatEnemy"],[591,53,633,51],[591,54,633,52,"name"],[591,58,633,56],[591,67,633,65,"combatEnemy"],[591,78,633,76],[591,79,633,77,"health"],[591,85,633,83],[591,100,633,98,"currentZone"],[591,111,633,109],[591,113,633,111,"id"],[591,115,633,113],[591,125,633,123,"currentZoneLevel"],[591,141,633,139],[591,143,633,141,"level"],[591,148,633,146],[591,150,633,148],[591,151,633,149],[592,6,634,4,"state"],[592,11,634,9],[592,12,634,10,"enemies"],[592,19,634,17],[592,20,634,18,"push"],[592,24,634,22],[592,25,634,23,"combatEnemy"],[592,36,634,34],[592,37,634,35],[593,4,635,2],[593,5,635,3],[595,4,637,2],[596,4,638,2],[596,8,638,8,"spawnBasicTestEnemy"],[596,27,638,27],[596,30,638,31,"state"],[596,35,638,49],[596,39,638,54],[597,6,639,4],[597,10,639,10,"SCREEN_WIDTH"],[597,22,639,22],[597,25,639,25],[597,28,639,28],[598,6,640,4],[598,10,640,10,"GAME_AREA_HEIGHT"],[598,26,640,26],[598,29,640,29],[598,32,640,32],[598,35,640,35],[598,38,640,38],[599,6,641,4],[599,10,641,10,"ENEMY_SIZE"],[599,20,641,20],[599,23,641,23],[599,25,641,25],[600,6,643,4],[600,10,643,10,"x"],[600,11,643,11],[600,14,643,14,"Math"],[600,18,643,18],[600,19,643,19,"random"],[600,25,643,25],[600,26,643,26],[600,27,643,27],[600,31,643,31,"SCREEN_WIDTH"],[600,43,643,43],[600,46,643,46,"ENEMY_SIZE"],[600,56,643,56],[600,59,643,59],[600,60,643,60],[600,61,643,61],[600,64,643,64,"ENEMY_SIZE"],[600,74,643,74],[601,6,644,4],[601,10,644,10,"y"],[601,11,644,11],[601,14,644,14,"Math"],[601,18,644,18],[601,19,644,19,"random"],[601,25,644,25],[601,26,644,26],[601,27,644,27],[601,31,644,31,"GAME_AREA_HEIGHT"],[601,47,644,47],[601,50,644,50,"ENEMY_SIZE"],[601,60,644,60],[601,63,644,63],[601,64,644,64],[601,65,644,65],[601,68,644,68,"ENEMY_SIZE"],[601,78,644,78],[602,6,646,4],[602,10,646,10,"enemy"],[602,15,646,28],[602,18,646,31],[603,8,647,6,"id"],[603,10,647,8],[603,12,647,10],[603,30,647,28,"Date"],[603,34,647,32],[603,35,647,33,"now"],[603,38,647,36],[603,39,647,37],[603,40,647,38],[603,44,647,42,"Math"],[603,48,647,46],[603,49,647,47,"random"],[603,55,647,53],[603,56,647,54],[603,57,647,55],[603,59,647,57],[604,8,648,6,"name"],[604,12,648,10],[604,14,648,12],[604,26,648,24,"Math"],[604,30,648,28],[604,31,648,29,"floor"],[604,36,648,34],[604,37,648,35,"Math"],[604,41,648,39],[604,42,648,40,"random"],[604,48,648,46],[604,49,648,47],[604,50,648,48],[604,53,648,51],[604,56,648,54],[604,57,648,55],[604,59,648,57],[605,8,649,6,"health"],[605,14,649,12],[605,16,649,14],[605,18,649,16],[606,8,650,6,"maxHealth"],[606,17,650,15],[606,19,650,17],[606,21,650,19],[607,8,651,6,"stats"],[607,13,651,11],[607,15,651,13],[608,10,652,8,"attack"],[608,16,652,14],[608,18,652,16],[608,20,652,18],[609,10,653,8,"defense"],[609,17,653,15],[609,19,653,17],[609,21,653,19],[610,10,654,8,"health"],[610,16,654,14],[610,18,654,16],[610,20,654,18],[611,10,655,8,"maxHealth"],[611,19,655,17],[611,21,655,19],[611,23,655,21],[612,10,656,8,"critChance"],[612,20,656,18],[612,22,656,20],[612,23,656,21],[613,10,657,8,"critDamage"],[613,20,657,18],[613,22,657,20],[613,25,657,23],[614,10,658,8,"cooldownReduction"],[614,27,658,25],[614,29,658,27],[615,8,659,6],[615,9,659,7],[616,8,660,6,"position"],[616,16,660,14],[616,18,660,16],[617,10,660,18,"x"],[617,11,660,19],[618,10,660,21,"y"],[619,8,660,23],[619,9,660,24],[620,8,661,6,"lastDamaged"],[620,19,661,17],[620,21,661,19],[621,6,662,4],[621,7,662,5],[622,6,664,4,"console"],[622,13,664,11],[622,14,664,12,"log"],[622,17,664,15],[622,18,664,16],[622,42,664,40,"enemy"],[622,47,664,45],[622,48,664,46,"name"],[622,52,664,50],[622,60,664,58,"Math"],[622,64,664,62],[622,65,664,63,"round"],[622,70,664,68],[622,71,664,69,"x"],[622,72,664,70],[622,73,664,71],[622,78,664,76,"Math"],[622,82,664,80],[622,83,664,81,"round"],[622,88,664,86],[622,89,664,87,"y"],[622,90,664,88],[622,91,664,89],[622,94,664,92],[622,95,664,93],[623,6,665,4,"state"],[623,11,665,9],[623,12,665,10,"enemies"],[623,19,665,17],[623,20,665,18,"push"],[623,24,665,22],[623,25,665,23,"enemy"],[623,30,665,28],[623,31,665,29],[624,4,666,2],[624,5,666,3],[626,4,668,2],[627,4,669,2],[627,8,669,8,"startCombat"],[627,19,669,19],[627,22,669,22,"React"],[627,27,669,27],[627,28,669,27,"default"],[627,35,669,27],[627,36,669,28,"useCallback"],[627,47,669,39],[627,48,669,40],[627,54,669,46],[628,6,670,4,"console"],[628,13,670,11],[628,14,670,12,"log"],[628,17,670,15],[628,18,670,16],[628,63,670,61],[628,64,670,62],[629,6,671,4,"setCombatState"],[629,20,671,18],[629,21,671,19,"prev"],[629,25,671,23],[629,30,671,28],[630,8,671,30],[630,11,671,33,"prev"],[630,15,671,37],[631,8,671,39,"isInCombat"],[631,18,671,49],[631,20,671,51],[632,6,671,56],[632,7,671,57],[632,8,671,58],[632,9,671,59],[634,6,673,4],[635,6,674,4,"combatEngine"],[635,25,674,16],[635,26,674,16,"combatEngine"],[635,38,674,16],[635,39,674,17,"addTickCallback"],[635,54,674,32],[635,55,674,33,"handleCombatTick"],[635,71,674,49],[635,72,674,50],[636,6,675,4,"console"],[636,13,675,11],[636,14,675,12,"log"],[636,17,675,15],[636,18,675,16],[636,62,675,60],[636,63,675,61],[638,6,677,4],[639,6,678,4,"combatEngine"],[639,25,678,16],[639,26,678,16,"combatEngine"],[639,38,678,16],[639,39,678,17,"start"],[639,44,678,22],[639,45,678,23],[639,46,678,24],[640,4,679,2],[640,5,679,3],[640,7,679,5],[640,8,679,6,"combatEngine"],[640,27,679,18],[640,28,679,18,"combatEngine"],[640,40,679,18],[640,42,679,20,"handleCombatTick"],[640,58,679,36],[640,59,679,37],[640,60,679,38],[642,4,681,2],[643,4,682,2],[643,8,682,8,"stopCombat"],[643,18,682,18],[643,21,682,21,"React"],[643,26,682,26],[643,27,682,26,"default"],[643,34,682,26],[643,35,682,27,"useCallback"],[643,46,682,38],[643,47,682,39],[643,53,682,45],[644,6,683,4,"setCombatState"],[644,20,683,18],[644,21,683,19,"prev"],[644,25,683,23],[644,30,683,28],[645,8,683,30],[645,11,683,33,"prev"],[645,15,683,37],[646,8,683,39,"isInCombat"],[646,18,683,49],[646,20,683,51],[647,6,683,57],[647,7,683,58],[647,8,683,59],[647,9,683,60],[648,6,684,4,"combatEngine"],[648,25,684,16],[648,26,684,16,"combatEngine"],[648,38,684,16],[648,39,684,17,"removeTickCallback"],[648,57,684,35],[648,58,684,36,"handleCombatTick"],[648,74,684,52],[648,75,684,53],[649,4,685,2],[649,5,685,3],[649,7,685,5],[649,8,685,6,"combatEngine"],[649,27,685,18],[649,28,685,18,"combatEngine"],[649,40,685,18],[649,42,685,20,"handleCombatTick"],[649,58,685,36],[649,59,685,37],[649,60,685,38],[651,4,687,2],[652,4,688,2],[652,8,688,8,"equipAbility"],[652,20,688,20],[652,23,688,23,"equipAbility"],[652,24,688,24,"abilityId"],[652,33,688,41],[652,35,688,43,"slotIndex"],[652,44,688,60],[652,49,688,74],[653,6,689,4],[653,13,689,11,"combatState"],[653,24,689,22],[653,25,689,23,"abilityManager"],[653,39,689,37],[653,40,689,38,"equipAbility"],[653,52,689,50],[653,53,689,51,"abilityId"],[653,62,689,60],[653,64,689,62,"slotIndex"],[653,73,689,71],[653,74,689,72],[654,4,690,2],[654,5,690,3],[655,4,692,2],[655,8,692,8,"getDeck"],[655,15,692,15],[655,18,692,18,"getDeck"],[655,19,692,18],[655,24,692,24],[656,6,693,4],[656,13,693,11,"combatState"],[656,24,693,22],[656,25,693,23,"abilityManager"],[656,39,693,37],[656,40,693,38,"getDeck"],[656,47,693,45],[656,48,693,46],[656,49,693,47],[657,4,694,2],[657,5,694,3],[658,4,696,2],[658,8,696,8,"getAvailableAbilities"],[658,29,696,29],[658,32,696,32,"getAvailableAbilities"],[658,33,696,32],[658,38,696,38],[659,6,697,4],[659,13,697,11,"combatState"],[659,24,697,22],[659,25,697,23,"abilityManager"],[659,39,697,37],[659,40,697,38,"getAvailableAbilities"],[659,61,697,59],[659,62,697,60],[659,63,697,61],[660,4,698,2],[660,5,698,3],[661,4,700,2],[661,8,700,8,"upgradeAbility"],[661,22,700,22],[661,25,700,26,"abilityId"],[661,34,700,43],[661,38,700,57],[662,6,701,4],[662,13,701,11,"combatState"],[662,24,701,22],[662,25,701,23,"abilityManager"],[662,39,701,37],[662,40,701,38,"upgradeAbility"],[662,54,701,52],[662,55,701,53,"abilityId"],[662,64,701,62],[662,65,701,63],[663,4,702,2],[663,5,702,3],[665,4,704,2],[666,4,705,2],[666,8,705,8,"clearAllEnemies"],[666,23,705,23],[666,26,705,26,"clearAllEnemies"],[666,27,705,26],[666,32,705,32],[667,6,706,4,"console"],[667,13,706,11],[667,14,706,12,"log"],[667,17,706,15],[667,18,706,16],[667,67,706,65],[667,68,706,66],[668,6,707,4,"setCombatState"],[668,20,707,18],[668,21,707,19,"prev"],[668,25,707,23],[668,30,707,28],[669,8,708,6],[669,11,708,9,"prev"],[669,15,708,13],[670,8,709,6,"enemies"],[670,15,709,13],[670,17,709,15],[671,6,710,4],[671,7,710,5],[671,8,710,6],[671,9,710,7],[672,4,711,2],[672,5,711,3],[674,4,713,2],[675,4,714,2],[675,8,714,8,"triggerLevelUpExplosion"],[675,31,714,31],[675,34,714,34,"triggerLevelUpExplosion"],[675,35,714,34],[675,40,714,40],[676,6,715,4,"console"],[676,13,715,11],[676,14,715,12,"log"],[676,17,715,15],[676,18,715,16],[676,70,715,68],[676,71,715,69],[677,6,717,4],[677,10,717,10,"explosionTime"],[677,23,717,23],[677,26,717,26,"Date"],[677,30,717,30],[677,31,717,31,"now"],[677,34,717,34],[677,35,717,35],[677,36,717,36],[678,6,718,4,"setLastExplosionTime"],[678,26,718,24],[678,27,718,25,"explosionTime"],[678,40,718,38],[678,41,718,39],[679,6,720,4,"setCombatState"],[679,20,720,18],[679,21,720,19,"prev"],[679,25,720,23],[679,29,720,27],[680,8,721,6],[681,8,722,6],[681,12,722,12,"enemyCount"],[681,22,722,22],[681,25,722,25,"prev"],[681,29,722,29],[681,30,722,30,"enemies"],[681,37,722,37],[681,38,722,38,"length"],[681,44,722,44],[682,8,723,6],[682,12,723,12,"explosionXP"],[682,23,723,23],[682,26,723,26,"enemyCount"],[682,36,723,36],[682,39,723,39],[682,41,723,41],[682,42,723,42],[682,43,723,43],[683,8,724,6],[683,12,724,12,"explosionGold"],[683,25,724,25],[683,28,724,28,"enemyCount"],[683,38,724,38],[683,41,724,41],[683,42,724,42],[683,43,724,43],[683,44,724,44],[685,8,726,6,"console"],[685,15,726,13],[685,16,726,14,"log"],[685,19,726,17],[685,20,726,18],[685,44,726,42,"enemyCount"],[685,54,726,52],[685,76,726,74,"explosionXP"],[685,87,726,85],[685,98,726,96,"explosionGold"],[685,111,726,109],[685,118,726,116],[685,119,726,117],[687,8,728,6],[688,8,729,6],[688,12,729,10,"explosionXP"],[688,23,729,21],[688,26,729,24],[688,27,729,25],[688,29,729,27],[689,10,730,8,"setTimeout"],[689,20,730,18],[689,21,730,19],[689,27,730,25],[690,12,731,10,"game"],[690,16,731,14],[690,17,731,15,"updateNinja"],[690,28,731,26],[690,29,731,28,"ninja"],[690,34,731,33],[690,39,731,39],[691,14,732,12,"experience"],[691,24,732,22],[691,26,732,24,"ninja"],[691,31,732,29],[691,32,732,30,"experience"],[691,42,732,40],[691,45,732,43,"explosionXP"],[691,56,732,54],[692,14,733,12,"gold"],[692,18,733,16],[692,20,733,18,"ninja"],[692,25,733,23],[692,26,733,24,"gold"],[692,30,733,28],[692,33,733,31,"explosionGold"],[693,12,734,10],[693,13,734,11],[693,14,734,12],[693,15,734,13],[694,10,735,8],[694,11,735,9],[694,13,735,11],[694,14,735,12],[694,15,735,13],[694,16,735,14],[694,17,735,15],[695,8,736,6],[697,8,738,6],[698,8,739,6],[699,8,740,6],[699,12,740,12,"damagedEnemies"],[699,26,740,26],[699,29,740,29,"prev"],[699,33,740,33],[699,34,740,34,"enemies"],[699,41,740,41],[699,42,740,42,"map"],[699,45,740,45],[699,46,740,46,"enemy"],[699,51,740,51],[699,56,740,56],[700,10,741,8],[700,13,741,11,"enemy"],[700,18,741,16],[701,10,742,8,"health"],[701,16,742,14],[701,18,742,16],[701,19,742,17],[702,10,742,19],[703,10,743,8,"lastDamaged"],[703,21,743,19],[703,23,743,21,"combatEngine"],[703,42,743,33],[703,43,743,33,"combatEngine"],[703,55,743,33],[703,56,743,34,"getCurrentTick"],[703,70,743,48],[703,71,743,49],[704,8,744,6],[704,9,744,7],[704,10,744,8],[704,11,744,9],[705,8,746,6],[705,15,746,13],[706,10,747,8],[706,13,747,11,"prev"],[706,17,747,15],[707,10,748,8,"enemies"],[707,17,748,15],[707,19,748,17,"damagedEnemies"],[708,8,749,6],[708,9,749,7],[709,6,750,4],[709,7,750,5],[709,8,750,6],[710,4,751,2],[710,5,751,3],[712,4,753,2],[713,4,754,2],[713,8,754,8,"spawnEnemy"],[713,18,754,18],[713,21,754,22,"position"],[713,29,754,57],[713,33,754,75],[714,6,755,4],[714,10,755,10,"SCREEN_WIDTH"],[714,22,755,22],[714,25,755,25],[714,28,755,28],[715,6,756,4],[715,10,756,10,"GAME_AREA_HEIGHT"],[715,26,756,26],[715,29,756,29],[715,32,756,32],[715,35,756,35],[715,38,756,38],[715,39,756,39],[715,40,756,40],[716,6,757,4],[716,10,757,10,"ENEMY_SIZE"],[716,20,757,20],[716,23,757,23],[716,25,757,25],[718,6,759,4],[719,6,760,4],[719,10,760,10,"x"],[719,11,760,11],[719,14,760,14,"position"],[719,22,760,22],[719,24,760,24,"x"],[719,25,760,25],[719,29,760,29,"Math"],[719,33,760,33],[719,34,760,34,"random"],[719,40,760,40],[719,41,760,41],[719,42,760,42],[719,46,760,46,"SCREEN_WIDTH"],[719,58,760,58],[719,61,760,61,"ENEMY_SIZE"],[719,71,760,71],[719,74,760,74],[719,75,760,75],[719,76,760,76],[719,79,760,79,"ENEMY_SIZE"],[719,89,760,89],[720,6,761,4],[720,10,761,10,"y"],[720,11,761,11],[720,14,761,14,"position"],[720,22,761,22],[720,24,761,24,"y"],[720,25,761,25],[720,29,761,29,"Math"],[720,33,761,33],[720,34,761,34,"random"],[720,40,761,40],[720,41,761,41],[720,42,761,42],[720,46,761,46,"GAME_AREA_HEIGHT"],[720,62,761,62],[720,65,761,65,"ENEMY_SIZE"],[720,75,761,75],[720,78,761,78],[720,79,761,79],[720,80,761,80],[720,83,761,83,"ENEMY_SIZE"],[720,93,761,93],[721,6,763,4],[721,10,763,10,"enemy"],[721,15,763,28],[721,18,763,31],[722,8,764,6,"id"],[722,10,764,8],[722,12,764,10],[722,21,764,19],[722,23,764,21,"enemyCounter"],[722,35,764,33],[722,37,764,35],[723,8,765,6,"name"],[723,12,765,10],[723,14,765,12],[723,24,765,22],[724,8,766,6,"health"],[724,14,766,12],[724,16,766,14],[724,19,766,17],[725,8,767,6,"maxHealth"],[725,17,767,15],[725,19,767,17],[725,22,767,20],[726,8,768,6,"stats"],[726,13,768,11],[726,15,768,13],[727,10,769,8,"attack"],[727,16,769,14],[727,18,769,16],[727,20,769,18],[728,10,770,8,"defense"],[728,17,770,15],[728,19,770,17],[728,21,770,19],[729,10,771,8,"health"],[729,16,771,14],[729,18,771,16],[729,21,771,19],[730,10,772,8,"maxHealth"],[730,19,772,17],[730,21,772,19],[730,24,772,22],[731,10,773,8,"critChance"],[731,20,773,18],[731,22,773,20],[731,23,773,21],[732,10,774,8,"critDamage"],[732,20,774,18],[732,22,774,20],[732,25,774,23],[733,10,775,8,"cooldownReduction"],[733,27,775,25],[733,29,775,27],[734,8,776,6],[734,9,776,7],[735,8,777,6,"position"],[735,16,777,14],[735,18,777,16],[736,10,777,18,"x"],[736,11,777,19],[737,10,777,21,"y"],[738,8,777,23],[738,9,777,24],[739,8,778,6,"lastDamaged"],[739,19,778,17],[739,21,778,19],[740,6,779,4],[740,7,779,5],[741,6,781,4,"setCombatState"],[741,20,781,18],[741,21,781,19,"prev"],[741,25,781,23],[741,30,781,28],[742,8,782,6],[742,11,782,9,"prev"],[742,15,782,13],[743,8,783,6,"enemies"],[743,15,783,13],[743,17,783,15],[743,18,783,16],[743,21,783,19,"prev"],[743,25,783,23],[743,26,783,24,"enemies"],[743,33,783,31],[743,35,783,33,"enemy"],[743,40,783,38],[744,6,784,4],[744,7,784,5],[744,8,784,6],[744,9,784,7],[745,6,786,4],[745,13,786,11,"enemy"],[745,18,786,16],[746,4,787,2],[746,5,787,3],[748,4,789,2],[749,4,790,2],[749,8,790,8,"spawnBoss"],[749,17,790,17],[749,20,790,21,"bossEnemy"],[749,29,790,43],[749,33,790,48],[750,6,791,4,"console"],[750,13,791,11],[750,14,791,12,"log"],[750,17,791,15],[750,18,791,16],[750,39,791,37,"bossEnemy"],[750,48,791,46],[750,49,791,47,"name"],[750,53,791,51],[750,90,791,88],[750,91,791,89],[751,6,792,4,"setCombatState"],[751,20,792,18],[751,21,792,19,"prev"],[751,25,792,23],[751,30,792,28],[752,8,793,6],[752,11,793,9,"prev"],[752,15,793,13],[753,8,794,6,"enemies"],[753,15,794,13],[753,17,794,15],[753,18,794,16,"bossEnemy"],[753,27,794,25],[753,28,794,26],[753,29,794,27],[754,6,795,4],[754,7,795,5],[754,8,795,6],[754,9,795,7],[755,4,796,2],[755,5,796,3],[757,4,798,2],[758,4,799,2],[758,8,799,8,"clearSpecificEnemy"],[758,26,799,26],[758,29,799,30,"enemyId"],[758,36,799,45],[758,40,799,50],[759,6,800,4,"setCombatState"],[759,20,800,18],[759,21,800,19,"prev"],[759,25,800,23],[759,30,800,28],[760,8,801,6],[760,11,801,9,"prev"],[760,15,801,13],[761,8,802,6,"enemies"],[761,15,802,13],[761,17,802,15,"prev"],[761,21,802,19],[761,22,802,20,"enemies"],[761,29,802,27],[761,30,802,28,"filter"],[761,36,802,34],[761,37,802,35,"enemy"],[761,42,802,40],[761,46,802,44,"enemy"],[761,51,802,49],[761,52,802,50,"id"],[761,54,802,52],[761,59,802,57,"enemyId"],[761,66,802,64],[762,6,803,4],[762,7,803,5],[762,8,803,6],[762,9,803,7],[763,4,804,2],[763,5,804,3],[765,4,806,2],[766,4,807,2],[766,8,807,8,"useAbilityManually"],[766,26,807,26],[766,29,807,26,"_s3"],[766,32,807,26],[766,33,807,29],[766,37,807,29,"useCallback"],[766,43,807,40],[766,44,807,40,"useCallback"],[766,55,807,40],[766,57,807,40,"_s3"],[766,60,807,40],[766,61,807,42,"slotIndex"],[766,70,807,59],[766,74,807,73],[767,6,807,73,"_s3"],[767,9,807,73],[768,6,808,4,"console"],[768,13,808,11],[768,14,808,12,"log"],[768,17,808,15],[768,18,808,16],[768,53,808,51,"slotIndex"],[768,62,808,60],[768,64,808,62],[768,65,808,63],[770,6,810,4],[771,6,811,4],[771,10,811,10,"isReady"],[771,17,811,17],[771,20,811,20,"combatState"],[771,31,811,31],[771,32,811,32,"abilityManager"],[771,46,811,46],[771,47,811,47,"isAbilityReady"],[771,61,811,61],[771,62,811,62,"slotIndex"],[771,71,811,71],[771,72,811,72],[772,6,812,4],[772,10,812,8],[772,11,812,9,"isReady"],[772,18,812,16],[772,20,812,18],[773,8,813,6,"console"],[773,15,813,13],[773,16,813,14,"log"],[773,19,813,17],[773,20,813,18],[773,41,813,39,"slotIndex"],[773,50,813,48],[773,85,813,83],[773,86,813,84],[774,8,814,6],[774,15,814,13],[774,20,814,18],[775,6,815,4],[777,6,817,4],[778,6,818,4],[778,10,818,8,"combatState"],[778,21,818,19],[778,22,818,20,"enemies"],[778,29,818,27],[778,30,818,28,"length"],[778,36,818,34],[778,41,818,39],[778,42,818,40],[778,44,818,42],[779,8,819,6,"console"],[779,15,819,13],[779,16,819,14,"log"],[779,19,819,17],[779,20,819,18],[779,69,819,67],[779,70,819,68],[780,8,820,6],[780,15,820,13],[780,20,820,18],[781,6,821,4],[783,6,823,4],[784,6,824,4],[784,10,824,10,"currentTick"],[784,21,824,21],[784,24,824,24,"combatEngine"],[784,43,824,36],[784,44,824,36,"combatEngine"],[784,56,824,36],[784,57,824,37,"getCurrentTick"],[784,71,824,51],[784,72,824,52],[784,73,824,53],[785,6,825,4],[785,10,825,10,"success"],[785,17,825,17],[785,20,825,20,"combatState"],[785,31,825,31],[785,32,825,32,"abilityManager"],[785,46,825,46],[785,47,825,47,"useAbility"],[785,57,825,57],[785,58,825,58,"slotIndex"],[785,67,825,67],[785,69,825,69,"currentTick"],[785,80,825,80],[785,81,825,81],[786,6,827,4],[786,10,827,8,"success"],[786,17,827,15],[786,19,827,17],[787,8,828,6],[788,8,829,6,"setCombatState"],[788,22,829,20],[788,23,829,21,"prev"],[788,27,829,25],[788,31,829,29],[789,10,830,8],[789,14,830,14,"newState"],[789,22,830,22],[789,25,830,25],[790,12,830,27],[790,15,830,30,"prev"],[791,10,830,35],[791,11,830,36],[792,10,831,8,"castAbility"],[792,21,831,19],[792,22,831,20,"newState"],[792,30,831,28],[792,32,831,30,"slotIndex"],[792,41,831,39],[792,42,831,40],[793,10,832,8],[793,17,832,15,"newState"],[793,25,832,23],[794,8,833,6],[794,9,833,7],[794,10,833,8],[795,8,835,6,"console"],[795,15,835,13],[795,16,835,14,"log"],[795,19,835,17],[795,20,835,18],[795,65,835,63,"slotIndex"],[795,74,835,72],[795,76,835,74],[795,77,835,75],[796,8,836,6],[796,15,836,13],[796,19,836,17],[797,6,837,4],[797,7,837,5],[797,13,837,11],[798,8,838,6,"console"],[798,15,838,13],[798,16,838,14,"log"],[798,19,838,17],[798,20,838,18],[798,61,838,59,"slotIndex"],[798,70,838,68],[798,72,838,70],[798,73,838,71],[799,8,839,6],[799,15,839,13],[799,20,839,18],[800,6,840,4],[801,4,841,2],[801,5,841,3],[801,46,841,5],[801,47,841,6,"combatState"],[801,58,841,17],[801,59,841,18,"abilityManager"],[801,73,841,32],[801,75,841,34,"combatState"],[801,86,841,45],[801,87,841,46,"enemies"],[801,94,841,53],[801,95,841,54],[801,96,841,55],[802,4,842,2],[802,8,842,2,"useEffect"],[802,14,842,11],[802,15,842,11,"useEffect"],[802,24,842,11],[802,26,842,12],[802,32,842,18],[803,6,843,4,"combatEngine"],[803,25,843,16],[803,26,843,16,"combatEngine"],[803,38,843,16],[803,39,843,17,"start"],[803,44,843,22],[803,45,843,23],[803,46,843,24],[805,6,845,4],[806,6,846,4],[807,6,847,4,"console"],[807,13,847,11],[807,14,847,12,"log"],[807,17,847,15],[807,18,847,16],[807,97,847,95],[807,98,847,96],[808,6,849,4],[808,13,849,11],[808,19,849,17],[809,8,850,6,"combatEngine"],[809,27,850,18],[809,28,850,18,"combatEngine"],[809,40,850,18],[809,41,850,19,"stop"],[809,45,850,23],[809,46,850,24],[809,47,850,25],[810,6,851,4],[810,7,851,5],[811,4,852,2],[811,5,852,3],[811,7,852,5],[811,9,852,7],[811,10,852,8],[813,4,854,2],[814,4,855,2],[814,8,855,8,"saveAbilityData"],[814,23,855,23],[814,26,855,26],[814,30,855,26,"useCallback"],[814,36,855,37],[814,37,855,37,"useCallback"],[814,48,855,37],[814,50,855,38],[814,56,855,44],[815,6,856,4],[815,10,856,8,"combatState"],[815,21,856,19],[815,22,856,20,"abilityManager"],[815,36,856,34],[815,38,856,36],[816,8,857,6],[816,12,857,12,"abilityData"],[816,23,857,23],[816,26,857,26,"combatState"],[816,37,857,37],[816,38,857,38,"abilityManager"],[816,52,857,52],[816,53,857,53,"getSaveData"],[816,64,857,64],[816,65,857,65],[816,66,857,66],[817,8,858,6,"console"],[817,15,858,13],[817,16,858,14,"log"],[817,19,858,17],[817,20,858,18],[817,70,858,68],[817,72,858,70,"abilityData"],[817,83,858,81],[817,84,858,82],[818,8,859,6,"game"],[818,12,859,10],[818,13,859,11,"updateAbilityData"],[818,30,859,28],[818,31,859,29,"abilityData"],[818,42,859,40],[818,43,859,41],[819,6,860,4],[820,4,861,2],[820,5,861,3],[820,7,861,5],[820,8,861,6,"combatState"],[820,19,861,17],[820,20,861,18,"abilityManager"],[820,34,861,32],[820,36,861,34,"game"],[820,40,861,38],[820,41,861,39,"updateAbilityData"],[820,58,861,56],[820,59,861,57],[820,60,861,58],[821,4,863,2],[821,8,863,8,"contextValue"],[821,20,863,39],[821,23,863,42,"React"],[821,28,863,47],[821,29,863,47,"default"],[821,36,863,47],[821,37,863,48,"useMemo"],[821,44,863,55],[821,45,863,56],[821,52,863,63],[822,6,864,4,"combatState"],[822,17,864,15],[823,6,865,4,"projectiles"],[823,17,865,15],[824,6,866,4,"startCombat"],[824,17,866,15],[825,6,867,4,"stopCombat"],[825,16,867,14],[826,6,868,4,"equipAbility"],[826,18,868,16],[827,6,869,4,"handleEnemyKill"],[827,21,869,19],[828,6,870,4,"getDeck"],[828,13,870,11],[829,6,871,4,"getAvailableAbilities"],[829,27,871,25],[830,6,872,4,"upgradeAbility"],[830,20,872,18],[831,6,873,4,"spawnEnemy"],[831,16,873,14],[832,6,874,4,"spawnBoss"],[832,15,874,13],[833,6,875,4,"clearAllEnemies"],[833,21,875,19],[834,6,876,4,"clearSpecificEnemy"],[834,24,876,22],[835,6,877,4,"triggerLevelUpExplosion"],[835,29,877,27],[836,6,878,4,"findClosestEnemy"],[836,22,878,20],[837,6,879,4,"updateNinjaPosition"],[837,25,879,23],[838,6,880,4,"setManualControlActive"],[838,28,880,26],[839,6,881,4,"lastExplosionTime"],[839,23,881,21],[840,6,882,4,"useAbilityManually"],[840,24,882,22],[841,6,882,24],[842,6,883,4,"saveAbilityData"],[842,21,883,19],[843,6,883,21],[844,6,884,4,"shadowClone"],[844,17,884,15],[844,19,884,17,"combatState"],[844,30,884,28],[844,31,884,29,"shadowClone"],[844,42,884,40],[844,43,884,42],[845,4,885,2],[845,5,885,3],[845,6,885,4],[845,8,885,6],[846,4,886,4],[847,4,887,4],[848,4,888,4,"combatState"],[848,15,888,15],[848,17,889,4,"projectiles"],[848,28,889,15],[848,30,890,4,"lastExplosionTime"],[848,47,890,21],[849,4,891,4],[850,4,892,4,"combatState"],[850,15,892,15],[850,16,892,16,"abilityManager"],[850,30,892,30],[850,32,893,4,"combatState"],[850,43,893,15],[850,44,893,16,"enemies"],[850,51,893,23],[850,53,894,4,"combatState"],[850,64,894,15],[850,65,894,16,"shadowClone"],[850,76,894,27],[851,4,894,29],[852,4,895,4,"useAbilityManually"],[852,22,895,22],[853,4,895,24],[854,4,896,4,"saveAbilityData"],[854,19,896,19],[854,20,896,21],[855,4,896,21],[855,5,897,3],[855,6,897,4],[856,4,899,2],[856,24,900,4],[856,28,900,4,"_reactJsxDevRuntime"],[856,47,900,4],[856,48,900,4,"jsxDEV"],[856,54,900,4],[856,56,900,5,"CombatContext"],[856,69,900,18],[856,70,900,19,"Provider"],[856,78,900,27],[857,6,900,28,"value"],[857,11,900,33],[857,13,900,35,"contextValue"],[857,25,900,48],[858,6,900,48,"children"],[858,14,900,48],[858,16,901,7,"children"],[859,4,901,15],[860,6,901,15,"fileName"],[860,14,901,15],[860,16,901,15,"_jsxFileName"],[860,28,901,15],[861,6,901,15,"lineNumber"],[861,16,901,15],[862,6,901,15,"columnNumber"],[862,18,901,15],[863,4,901,15],[863,11,902,28],[863,12,902,29],[864,2,904,0],[864,3,904,1],[865,2,904,2,"_s4"],[865,5,904,2],[865,6,98,13,"CombatProvider"],[865,20,98,27],[866,4,98,27],[866,12,99,15,"useGame"],[866,24,99,22],[866,25,99,22,"useGame"],[866,32,99,22],[866,34,100,77,"useZone"],[866,46,100,84],[866,47,100,84,"useZone"],[866,54,100,84],[867,2,100,84],[868,2,100,84,"_c"],[868,4,100,84],[868,7,98,13,"CombatProvider"],[868,21,98,27],[869,2,98,27],[869,6,98,27,"_c"],[869,8,98,27],[870,2,98,27,"$RefreshReg$"],[870,14,98,27],[870,15,98,27,"_c"],[870,17,98,27],[871,0,98,27],[871,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}