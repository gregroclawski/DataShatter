{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                var playerDefense = newState.playerStats.defense;\n                var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                // Apply damage to player\n                var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // TODO: Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Game over logic needed here');\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          var _effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== _effectiveStats.attack || newState.playerStats.defense !== _effectiveStats.defense || newState.playerStats.maxHealth !== _effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            var _healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${_effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${_effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${_effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: _effectiveStats.attack,\n              defense: _effectiveStats.defense,\n              maxHealth: _effectiveStats.health,\n              health: Math.floor(_effectiveStats.health * _healthRatio),\n              // Maintain health ratio\n              critChance: _effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: _effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: _effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1055,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1109,2],[27,6,1109,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1109,2],[27,42,1109,2,"require"],[27,49,1109,2],[27,50,1109,2,"_dependencyMap"],[27,64,1109,2],[28,2,1109,2],[28,6,1109,2,"_slicedToArray"],[28,20,1109,2],[28,23,1109,2,"_interopDefault"],[28,38,1109,2],[28,39,1109,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1109,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"health"],[224,186,256,68],[224,188,256,70],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"health"],[225,249,258,247],[225,251,258,249],[225,252,258,250],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"health"],[229,72,262,70],[229,74,262,72],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"health"],[231,39,264,37],[231,42,264,40,"newState"],[231,50,264,48],[231,51,264,49,"playerStats"],[231,62,264,60],[231,63,264,61,"maxHealth"],[231,72,264,70],[231,75,264,73],[231,78,264,76],[231,80,264,78],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"health"],[234,60,268,58],[234,63,268,61,"healthRatio"],[234,74,268,72],[234,75,268,73],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"health"],[235,76,269,74],[235,78,269,76],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"health"],[237,49,271,47],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"health"],[245,46,280,44],[246,14,281,12,"health"],[246,20,281,18],[246,22,281,20,"newHealth"],[246,31,281,29],[247,14,281,31],[248,14,282,12,"critChance"],[248,24,282,22],[248,26,282,24,"effectiveStats"],[248,40,282,38],[248,41,282,39,"critChance"],[248,51,282,49],[248,55,282,53,"newState"],[248,63,282,61],[248,64,282,62,"playerStats"],[248,75,282,73],[248,76,282,74,"critChance"],[248,86,282,84],[249,14,283,12,"critDamage"],[249,24,283,22],[249,26,283,24,"effectiveStats"],[249,40,283,38],[249,41,283,39,"critDamage"],[249,51,283,49],[249,55,283,53,"newState"],[249,63,283,61],[249,64,283,62,"playerStats"],[249,75,283,73],[249,76,283,74,"critDamage"],[249,86,283,84],[250,14,284,12,"cooldownReduction"],[250,31,284,29],[250,33,284,31,"effectiveStats"],[250,47,284,45],[250,48,284,46,"cooldownReduction"],[250,65,284,63],[250,69,284,67,"newState"],[250,77,284,75],[250,78,284,76,"playerStats"],[250,89,284,87],[250,90,284,88,"cooldownReduction"],[251,12,285,10],[251,13,285,11],[252,10,286,8],[253,8,287,6],[255,8,289,6],[256,8,290,6,"newState"],[256,16,290,14],[256,17,290,15,"enemies"],[256,24,290,22],[256,25,290,23,"forEach"],[256,32,290,30],[256,33,290,31,"enemy"],[256,38,290,36],[256,42,290,40],[257,10,291,8],[257,14,291,12],[257,15,291,13,"enemy"],[257,20,291,18],[257,21,291,19,"isBoss"],[257,27,291,25],[257,29,291,27],[258,12,291,29],[259,12,292,10],[260,12,293,10],[260,16,293,16,"MOVEMENT_SPEED"],[260,30,293,30],[260,33,293,33],[260,37,293,37],[260,38,293,38],[260,39,293,39],[261,12,294,10],[261,16,294,16,"SCREEN_WIDTH"],[261,28,294,28],[261,31,294,31],[261,34,294,34],[262,12,295,10],[262,16,295,16,"GAME_AREA_HEIGHT"],[262,32,295,32],[262,35,295,35],[262,38,295,38],[262,39,295,39],[262,40,295,40],[263,12,296,10],[263,16,296,16,"ENEMY_SIZE"],[263,26,296,26],[263,29,296,29],[263,31,296,31],[265,12,298,10],[266,12,299,10],[266,16,299,16,"playerX"],[266,23,299,23],[266,26,299,26,"currentNinjaPosition"],[266,46,299,46],[266,47,299,47,"x"],[266,48,299,48],[267,12,300,10],[267,16,300,16,"playerY"],[267,23,300,23],[267,26,300,26,"currentNinjaPosition"],[267,46,300,46],[267,47,300,47,"y"],[267,48,300,48],[269,12,302,10],[270,12,303,10],[270,16,303,16,"deltaX"],[270,22,303,22],[270,25,303,25,"playerX"],[270,32,303,32],[270,35,303,35,"enemy"],[270,40,303,40],[270,41,303,41,"position"],[270,49,303,49],[270,50,303,50,"x"],[270,51,303,51],[271,12,304,10],[271,16,304,16,"deltaY"],[271,22,304,22],[271,25,304,25,"playerY"],[271,32,304,32],[271,35,304,35,"enemy"],[271,40,304,40],[271,41,304,41,"position"],[271,49,304,49],[271,50,304,50,"y"],[271,51,304,51],[272,12,305,10],[272,16,305,16,"distance"],[272,24,305,24],[272,27,305,27,"Math"],[272,31,305,31],[272,32,305,32,"sqrt"],[272,36,305,36],[272,37,305,37,"deltaX"],[272,43,305,43],[272,46,305,46,"deltaX"],[272,52,305,52],[272,55,305,55,"deltaY"],[272,61,305,61],[272,64,305,64,"deltaY"],[272,70,305,70],[272,71,305,71],[274,12,307,10],[275,12,308,10],[275,16,308,16,"ATTACK_RANGE"],[275,28,308,28],[275,31,308,31],[275,33,308,33],[275,34,308,34],[275,35,308,35],[276,12,309,10],[276,16,309,16,"ATTACK_COOLDOWN"],[276,31,309,31],[276,34,309,34],[276,36,309,36],[276,37,309,37],[276,38,309,38],[278,12,311,10],[278,16,311,14,"distance"],[278,24,311,22],[278,28,311,26,"ATTACK_RANGE"],[278,40,311,38],[278,42,311,40],[279,14,312,12],[280,14,313,12],[280,18,313,16],[280,19,313,17,"enemy"],[280,24,313,22],[280,25,313,23,"lastAttackTick"],[280,39,313,37],[280,41,313,39,"enemy"],[280,46,313,44],[280,47,313,45,"lastAttackTick"],[280,61,313,59],[280,64,313,62],[280,65,313,63],[281,14,315,12],[281,18,315,16,"newState"],[281,26,315,24],[281,27,315,25,"currentTick"],[281,38,315,36],[281,41,315,39,"enemy"],[281,46,315,44],[281,47,315,45,"lastAttackTick"],[281,61,315,59],[281,65,315,63,"ATTACK_COOLDOWN"],[281,80,315,78],[281,82,315,80],[282,16,316,14],[283,16,317,14],[283,20,317,20,"baseAttack"],[283,30,317,30],[283,33,317,33,"enemy"],[283,38,317,38],[283,39,317,39,"stats"],[283,44,317,44],[283,45,317,45,"attack"],[283,51,317,51],[283,54,317,54],[283,57,317,57],[283,58,317,58],[283,59,317,59],[284,16,318,14],[284,20,318,20,"attackDamage"],[284,32,318,32],[284,35,318,35,"Math"],[284,39,318,39],[284,40,318,40,"floor"],[284,45,318,45],[284,46,318,46,"baseAttack"],[284,56,318,56],[284,60,318,60],[284,63,318,63],[284,66,318,66,"Math"],[284,70,318,70],[284,71,318,71,"random"],[284,77,318,77],[284,78,318,78],[284,79,318,79],[284,82,318,82],[284,85,318,85],[284,86,318,86],[284,87,318,87],[284,88,318,88],[284,89,318,89],[285,16,319,14],[285,20,319,20,"playerDefense"],[285,33,319,33],[285,36,319,36,"newState"],[285,44,319,44],[285,45,319,45,"playerStats"],[285,56,319,56],[285,57,319,57,"defense"],[285,64,319,64],[286,16,320,14],[286,20,320,20,"finalDamage"],[286,31,320,31],[286,34,320,34,"Math"],[286,38,320,38],[286,39,320,39,"max"],[286,42,320,42],[286,43,320,43],[286,44,320,44],[286,46,320,46,"attackDamage"],[286,58,320,58],[286,61,320,61,"Math"],[286,65,320,65],[286,66,320,66,"floor"],[286,71,320,71],[286,72,320,72,"playerDefense"],[286,85,320,85],[286,88,320,88],[286,91,320,91],[286,92,320,92],[286,93,320,93],[286,94,320,94],[286,95,320,95],[288,16,322,14,"console"],[288,23,322,21],[288,24,322,22,"log"],[288,27,322,25],[288,28,322,26],[288,49,322,47,"enemy"],[288,54,322,52],[288,55,322,53,"name"],[288,59,322,57],[288,82,322,80,"finalDamage"],[288,93,322,91],[288,105,322,103,"attackDamage"],[288,117,322,115],[288,128,322,126,"Math"],[288,132,322,130],[288,133,322,131,"floor"],[288,138,322,136],[288,139,322,137,"playerDefense"],[288,152,322,150],[288,155,322,153],[288,158,322,156],[288,159,322,157],[288,180,322,178],[288,181,322,179],[290,16,324,14],[291,16,325,14],[291,20,325,20,"newPlayerHealth"],[291,35,325,35],[291,38,325,38,"Math"],[291,42,325,42],[291,43,325,43,"max"],[291,46,325,46],[291,47,325,47],[291,48,325,48],[291,50,325,50,"newState"],[291,58,325,58],[291,59,325,59,"playerStats"],[291,70,325,70],[291,71,325,71,"health"],[291,77,325,77],[291,80,325,80,"finalDamage"],[291,91,325,91],[291,92,325,92],[292,16,326,14,"newState"],[292,24,326,22],[292,25,326,23,"playerStats"],[292,36,326,34],[292,37,326,35,"health"],[292,43,326,41],[292,46,326,44,"newPlayerHealth"],[292,61,326,59],[293,16,328,14,"console"],[293,23,328,21],[293,24,328,22,"log"],[293,27,328,25],[293,28,328,26],[293,49,328,47,"newState"],[293,57,328,55],[293,58,328,56,"playerStats"],[293,69,328,67],[293,70,328,68,"health"],[293,76,328,74],[293,80,328,78,"newState"],[293,88,328,86],[293,89,328,87,"playerStats"],[293,100,328,98],[293,101,328,99,"maxHealth"],[293,110,328,108],[293,120,328,118,"finalDamage"],[293,131,328,129],[293,141,328,139],[293,142,328,140],[295,16,330,14],[296,16,331,14,"enemy"],[296,21,331,19],[296,22,331,20,"lastAttackTick"],[296,36,331,34],[296,39,331,37,"newState"],[296,47,331,45],[296,48,331,46,"currentTick"],[296,59,331,57],[298,16,333,14],[299,16,334,14],[299,20,334,18,"newPlayerHealth"],[299,35,334,33],[299,39,334,37],[299,40,334,38],[299,42,334,40],[300,18,335,16,"console"],[300,25,335,23],[300,26,335,24,"log"],[300,29,335,27],[300,30,335,28],[300,79,335,77],[300,80,335,78],[301,16,336,14],[302,14,337,12],[303,12,338,10],[303,13,338,11],[303,19,338,17],[304,14,339,12],[305,14,340,12],[306,14,341,12],[306,18,341,16,"distance"],[306,26,341,24],[306,29,341,27],[306,31,341,29],[306,33,341,31],[307,16,342,14],[308,16,343,14],[308,20,343,20,"normalizedX"],[308,31,343,31],[308,34,343,34,"deltaX"],[308,40,343,40],[308,43,343,43,"distance"],[308,51,343,51],[309,16,344,14],[309,20,344,20,"normalizedY"],[309,31,344,31],[309,34,344,34,"deltaY"],[309,40,344,40],[309,43,344,43,"distance"],[309,51,344,51],[311,16,346,14],[312,16,347,14],[312,20,347,20,"randomFactor"],[312,32,347,32],[312,35,347,35],[312,38,347,38],[312,39,347,39],[312,40,347,40],[313,16,348,14],[313,20,348,20,"finalX"],[313,26,348,26],[313,29,348,29,"normalizedX"],[313,40,348,40],[313,43,348,43],[313,44,348,44,"Math"],[313,48,348,48],[313,49,348,49,"random"],[313,55,348,55],[313,56,348,56],[313,57,348,57],[313,60,348,60],[313,63,348,63],[313,67,348,67,"randomFactor"],[313,79,348,79],[314,16,349,14],[314,20,349,20,"finalY"],[314,26,349,26],[314,29,349,29,"normalizedY"],[314,40,349,40],[314,43,349,43],[314,44,349,44,"Math"],[314,48,349,48],[314,49,349,49,"random"],[314,55,349,55],[314,56,349,56],[314,57,349,57],[314,60,349,60],[314,63,349,63],[314,67,349,67,"randomFactor"],[314,79,349,79],[316,16,351,14],[317,16,352,14],[317,20,352,18,"newX"],[317,24,352,22],[317,27,352,25,"enemy"],[317,32,352,30],[317,33,352,31,"position"],[317,41,352,39],[317,42,352,40,"x"],[317,43,352,41],[317,46,352,45,"finalX"],[317,52,352,51],[317,55,352,54,"MOVEMENT_SPEED"],[317,69,352,69],[318,16,353,14],[318,20,353,18,"newY"],[318,24,353,22],[318,27,353,25,"enemy"],[318,32,353,30],[318,33,353,31,"position"],[318,41,353,39],[318,42,353,40,"y"],[318,43,353,41],[318,46,353,45,"finalY"],[318,52,353,51],[318,55,353,54,"MOVEMENT_SPEED"],[318,69,353,69],[320,16,355,14],[321,16,356,14,"newX"],[321,20,356,18],[321,23,356,21,"Math"],[321,27,356,25],[321,28,356,26,"max"],[321,31,356,29],[321,32,356,30],[321,33,356,31],[321,35,356,33,"Math"],[321,39,356,37],[321,40,356,38,"min"],[321,43,356,41],[321,44,356,42,"SCREEN_WIDTH"],[321,56,356,54],[321,59,356,57,"ENEMY_SIZE"],[321,69,356,67],[321,71,356,69,"newX"],[321,75,356,73],[321,76,356,74],[321,77,356,75],[322,16,357,14,"newY"],[322,20,357,18],[322,23,357,21,"Math"],[322,27,357,25],[322,28,357,26,"max"],[322,31,357,29],[322,32,357,30],[322,33,357,31],[322,35,357,33,"Math"],[322,39,357,37],[322,40,357,38,"min"],[322,43,357,41],[322,44,357,42,"GAME_AREA_HEIGHT"],[322,60,357,58],[322,63,357,61,"ENEMY_SIZE"],[322,73,357,71],[322,75,357,73,"newY"],[322,79,357,77],[322,80,357,78],[322,81,357,79],[324,16,359,14],[325,16,360,14,"enemy"],[325,21,360,19],[325,22,360,20,"position"],[325,30,360,28],[325,31,360,29,"x"],[325,32,360,30],[325,35,360,33,"newX"],[325,39,360,37],[326,16,361,14,"enemy"],[326,21,361,19],[326,22,361,20,"position"],[326,30,361,28],[326,31,361,29,"y"],[326,32,361,30],[326,35,361,33,"newY"],[326,39,361,37],[327,14,362,12],[328,14,363,12],[329,12,364,10],[330,10,365,8],[331,8,366,6],[331,9,366,7],[331,10,366,8],[333,8,368,6],[334,8,369,6],[334,12,369,10,"newState"],[334,20,369,18],[334,21,369,19,"playerStats"],[334,32,369,30],[334,36,369,34,"game"],[334,40,369,38],[334,41,369,39,"gameState"],[334,50,369,48],[334,51,369,49,"ninja"],[334,56,369,54],[334,58,369,56],[335,10,370,8],[335,14,370,14,"effectiveStats"],[335,29,370,28],[335,32,370,31,"game"],[335,36,370,35],[335,37,370,36,"getEffectiveStats"],[335,54,370,53],[335,55,370,54],[335,56,370,55],[337,10,372,8],[338,10,373,8],[338,14,373,12,"newState"],[338,22,373,20],[338,23,373,21,"playerStats"],[338,34,373,32],[338,35,373,33,"attack"],[338,41,373,39],[338,46,373,44,"effectiveStats"],[338,61,373,58],[338,62,373,59,"attack"],[338,68,373,65],[338,72,374,12,"newState"],[338,80,374,20],[338,81,374,21,"playerStats"],[338,92,374,32],[338,93,374,33,"defense"],[338,100,374,40],[338,105,374,45,"effectiveStats"],[338,120,374,59],[338,121,374,60,"defense"],[338,128,374,67],[338,132,375,12,"newState"],[338,140,375,20],[338,141,375,21,"playerStats"],[338,152,375,32],[338,153,375,33,"maxHealth"],[338,162,375,42],[338,167,375,47,"effectiveStats"],[338,182,375,61],[338,183,375,62,"health"],[338,189,375,68],[338,191,375,70],[339,12,377,10],[340,12,378,10],[340,16,378,16,"healthRatio"],[340,28,378,27],[340,31,378,30,"newState"],[340,39,378,38],[340,40,378,39,"playerStats"],[340,51,378,50],[340,52,378,51,"maxHealth"],[340,61,378,60],[340,64,378,63],[340,65,378,64],[340,68,379,12,"newState"],[340,76,379,20],[340,77,379,21,"playerStats"],[340,88,379,32],[340,89,379,33,"health"],[340,95,379,39],[340,98,379,42,"newState"],[340,106,379,50],[340,107,379,51,"playerStats"],[340,118,379,62],[340,119,379,63,"maxHealth"],[340,128,379,72],[340,131,379,75],[340,132,379,76],[341,12,381,10,"console"],[341,19,381,17],[341,20,381,18,"log"],[341,23,381,21],[341,24,381,22],[341,58,381,56,"newState"],[341,66,381,64],[341,67,381,65,"playerStats"],[341,78,381,76],[341,79,381,77,"attack"],[341,85,381,83],[341,91,381,89,"effectiveStats"],[341,106,381,103],[341,107,381,104,"attack"],[341,113,381,110],[341,126,381,123,"newState"],[341,134,381,131],[341,135,381,132,"playerStats"],[341,146,381,143],[341,147,381,144,"defense"],[341,154,381,151],[341,160,381,157,"effectiveStats"],[341,175,381,171],[341,176,381,172,"defense"],[341,183,381,179],[341,194,381,190,"newState"],[341,202,381,198],[341,203,381,199,"playerStats"],[341,214,381,210],[341,215,381,211,"maxHealth"],[341,224,381,220],[341,230,381,226,"effectiveStats"],[341,245,381,240],[341,246,381,241,"health"],[341,252,381,247],[341,254,381,249],[341,255,381,250],[342,12,383,10,"newState"],[342,20,383,18],[342,21,383,19,"playerStats"],[342,32,383,30],[342,35,383,33],[343,14,384,12],[343,17,384,15,"newState"],[343,25,384,23],[343,26,384,24,"playerStats"],[343,37,384,35],[344,14,385,12,"attack"],[344,20,385,18],[344,22,385,20,"effectiveStats"],[344,37,385,34],[344,38,385,35,"attack"],[344,44,385,41],[345,14,386,12,"defense"],[345,21,386,19],[345,23,386,21,"effectiveStats"],[345,38,386,35],[345,39,386,36,"defense"],[345,46,386,43],[346,14,387,12,"maxHealth"],[346,23,387,21],[346,25,387,23,"effectiveStats"],[346,40,387,37],[346,41,387,38,"health"],[346,47,387,44],[347,14,388,12,"health"],[347,20,388,18],[347,22,388,20,"Math"],[347,26,388,24],[347,27,388,25,"floor"],[347,32,388,30],[347,33,388,31,"effectiveStats"],[347,48,388,45],[347,49,388,46,"health"],[347,55,388,52],[347,58,388,55,"healthRatio"],[347,70,388,66],[347,71,388,67],[348,14,388,69],[349,14,389,12,"critChance"],[349,24,389,22],[349,26,389,24,"effectiveStats"],[349,41,389,38],[349,42,389,39,"critChance"],[349,52,389,49],[349,56,389,53,"newState"],[349,64,389,61],[349,65,389,62,"playerStats"],[349,76,389,73],[349,77,389,74,"critChance"],[349,87,389,84],[350,14,390,12,"critDamage"],[350,24,390,22],[350,26,390,24,"effectiveStats"],[350,41,390,38],[350,42,390,39,"critDamage"],[350,52,390,49],[350,56,390,53,"newState"],[350,64,390,61],[350,65,390,62,"playerStats"],[350,76,390,73],[350,77,390,74,"critDamage"],[350,87,390,84],[351,14,391,12,"cooldownReduction"],[351,31,391,29],[351,33,391,31,"effectiveStats"],[351,48,391,45],[351,49,391,46,"cooldownReduction"],[351,66,391,63],[351,70,391,67,"newState"],[351,78,391,75],[351,79,391,76,"playerStats"],[351,90,391,87],[351,91,391,88,"cooldownReduction"],[352,12,392,10],[352,13,392,11],[353,10,393,8],[354,8,394,6],[355,8,395,6],[355,12,395,10,"newState"],[355,20,395,18],[355,21,395,19,"shadowClone"],[355,32,395,30],[355,34,395,32],[356,10,396,8],[357,10,397,8,"newState"],[357,18,397,16],[357,19,397,17,"shadowClone"],[357,30,397,28],[357,31,397,29,"remainingTicks"],[357,45,397,43],[357,47,397,45],[359,10,399,8],[360,10,400,8],[360,14,400,14,"cloneOffset"],[360,25,400,25],[360,28,400,28],[360,30,400,30],[360,31,400,31],[360,32,400,32],[361,10,401,8,"newState"],[361,18,401,16],[361,19,401,17,"shadowClone"],[361,30,401,28],[361,31,401,29,"position"],[361,39,401,37],[361,40,401,38,"x"],[361,41,401,39],[361,44,401,42,"currentNinjaPosition"],[361,64,401,62],[361,65,401,63,"x"],[361,66,401,64],[361,69,401,67,"cloneOffset"],[361,80,401,78],[362,10,402,8,"newState"],[362,18,402,16],[362,19,402,17,"shadowClone"],[362,30,402,28],[362,31,402,29,"position"],[362,39,402,37],[362,40,402,38,"y"],[362,41,402,39],[362,44,402,42,"currentNinjaPosition"],[362,64,402,62],[362,65,402,63,"y"],[362,66,402,64],[362,69,402,67],[362,71,402,69],[364,10,404,8],[365,10,405,8],[365,14,405,12,"newState"],[365,22,405,20],[365,23,405,21,"shadowClone"],[365,34,405,32],[365,35,405,33,"remainingTicks"],[365,49,405,47],[365,53,405,51],[365,54,405,52],[365,56,405,54],[366,12,406,10,"console"],[366,19,406,17],[366,20,406,18,"log"],[366,23,406,21],[366,24,406,22],[366,75,406,73],[366,76,406,74],[367,12,407,10,"newState"],[367,20,407,18],[367,21,407,19,"shadowClone"],[367,32,407,30],[367,35,407,33,"undefined"],[367,44,407,42],[368,10,408,8],[368,11,408,9],[368,17,408,15],[369,12,409,10],[370,12,410,10],[371,12,411,10],[371,16,411,16,"CLONE_ATTACK_INTERVAL"],[371,37,411,37],[371,40,411,40],[371,42,411,42],[372,12,412,10],[372,16,412,14,"newState"],[372,24,412,22],[372,25,412,23,"currentTick"],[372,36,412,34],[372,39,412,37,"CLONE_ATTACK_INTERVAL"],[372,60,412,58],[372,65,412,63],[372,66,412,64],[372,70,412,68,"newState"],[372,78,412,76],[372,79,412,77,"enemies"],[372,86,412,84],[372,87,412,85,"length"],[372,93,412,91],[372,96,412,94],[372,97,412,95],[372,99,412,97],[373,14,413,12,"console"],[373,21,413,19],[373,22,413,20,"log"],[373,25,413,23],[373,26,413,24],[373,83,413,81],[373,84,413,82],[375,14,415,12],[376,14,416,12],[376,18,416,18,"target"],[376,24,416,24],[376,27,416,27,"findClosestEnemyInternal"],[376,51,416,51],[376,52,416,52,"newState"],[376,60,416,60],[376,61,416,61,"enemies"],[376,68,416,68],[376,69,416,69],[377,14,417,12],[377,18,417,16,"target"],[377,24,417,22],[377,26,417,24],[378,16,418,14],[379,16,419,14],[379,20,419,20,"cloneDamage"],[379,31,419,31],[379,34,419,34,"Math"],[379,38,419,38],[379,39,419,39,"floor"],[379,44,419,44],[379,45,419,45,"newState"],[379,53,419,53],[379,54,419,54,"playerStats"],[379,65,419,65],[379,66,419,66,"attack"],[379,72,419,72],[379,75,419,75],[379,78,419,78],[379,79,419,79],[381,16,421,14],[382,16,422,14,"createProjectile"],[382,32,422,30],[382,33,422,31,"target"],[382,39,422,37],[382,41,422,39,"cloneDamage"],[382,52,422,50],[382,54,422,52,"newState"],[382,62,422,60],[382,63,422,61,"shadowClone"],[382,74,422,72],[382,75,422,73,"position"],[382,83,422,81],[382,85,422,83],[383,18,423,16,"id"],[383,20,423,18],[383,22,423,20],[383,43,423,41],[384,18,424,16,"name"],[384,22,424,20],[384,24,424,22],[384,45,424,43],[385,18,425,16,"icon"],[385,22,425,20],[385,24,425,22],[386,16,426,14],[386,17,426,15],[386,18,426,16],[387,14,427,12],[388,12,428,10],[389,10,429,8],[390,8,430,6],[392,8,432,6],[393,8,433,6],[393,12,433,10],[393,13,433,11,"isManualControlActive"],[393,34,433,32],[393,36,433,34],[394,10,434,8],[394,15,434,13],[394,19,434,17,"i"],[394,20,434,18],[394,23,434,21],[394,24,434,22],[394,26,434,24,"i"],[394,27,434,25],[394,30,434,28],[394,31,434,29],[394,33,434,31,"i"],[394,34,434,32],[394,36,434,34],[394,38,434,36],[395,12,435,10],[395,16,435,14,"newState"],[395,24,435,22],[395,25,435,23,"abilityManager"],[395,39,435,37],[395,40,435,38,"isAbilityReady"],[395,54,435,52],[395,55,435,53,"i"],[395,56,435,54],[395,57,435,55],[395,61,435,59,"newState"],[395,69,435,67],[395,70,435,68,"enemies"],[395,77,435,75],[395,78,435,76,"length"],[395,84,435,82],[395,87,435,85],[395,88,435,86],[395,90,435,88],[396,14,436,12],[396,18,436,16,"newState"],[396,26,436,24],[396,27,436,25,"abilityManager"],[396,41,436,39],[396,42,436,40,"useAbility"],[396,52,436,50],[396,53,436,51,"i"],[396,54,436,52],[396,56,436,54,"newTick"],[396,63,436,61],[396,64,436,62],[396,66,436,64],[397,16,437,14,"castAbility"],[397,27,437,25],[397,28,437,26,"newState"],[397,36,437,34],[397,38,437,36,"i"],[397,39,437,37],[397,40,437,38],[398,14,438,12],[399,12,439,10],[400,10,440,8],[401,8,441,6],[403,8,443,6],[404,8,444,6],[404,12,444,12,"deadEnemies"],[404,23,444,23],[404,26,444,26,"newState"],[404,34,444,34],[404,35,444,35,"enemies"],[404,42,444,42],[404,43,444,43,"filter"],[404,49,444,49],[404,50,444,50,"enemy"],[404,55,444,55],[404,59,444,59,"enemy"],[404,64,444,64],[404,65,444,65,"health"],[404,71,444,71],[404,75,444,75],[404,76,444,76],[404,77,444,77],[405,8,445,6,"enemiesToKill"],[405,21,445,19],[405,24,445,22],[405,25,445,23],[405,28,445,26,"deadEnemies"],[405,39,445,37],[405,40,445,38],[405,41,445,39],[405,42,445,40],[407,8,447,6],[408,8,448,6],[408,12,448,10,"deadEnemies"],[408,23,448,21],[408,24,448,22,"length"],[408,30,448,28],[408,33,448,31],[408,34,448,32],[408,36,448,34],[409,10,449,8,"console"],[409,17,449,15],[409,18,449,16,"log"],[409,21,449,19],[409,22,449,20],[409,49,449,47,"deadEnemies"],[409,60,449,58],[409,61,449,59,"length"],[409,67,449,65],[409,83,449,81],[409,85,449,83,"deadEnemies"],[409,96,449,94],[409,97,449,95,"map"],[409,100,449,98],[409,101,449,99,"e"],[409,102,449,100],[409,106,449,104],[409,109,449,107,"e"],[409,110,449,108],[409,111,449,109,"id"],[409,113,449,111],[409,117,449,115,"e"],[409,118,449,116],[409,119,449,117,"health"],[409,125,449,123],[409,130,449,128],[409,131,449,129],[409,132,449,130],[410,8,450,6],[412,8,452,6],[413,8,453,6],[413,12,453,12,"lowHealthEnemies"],[413,28,453,28],[413,31,453,31,"newState"],[413,39,453,39],[413,40,453,40,"enemies"],[413,47,453,47],[413,48,453,48,"filter"],[413,54,453,54],[413,55,453,55,"enemy"],[413,60,453,60],[413,64,453,64,"enemy"],[413,69,453,69],[413,70,453,70,"health"],[413,76,453,76],[413,80,453,80],[413,82,453,82],[413,86,453,86,"enemy"],[413,91,453,91],[413,92,453,92,"health"],[413,98,453,98],[413,101,453,101],[413,102,453,102],[413,103,453,103],[414,8,454,6],[414,12,454,10,"lowHealthEnemies"],[414,28,454,26],[414,29,454,27,"length"],[414,35,454,33],[414,38,454,36],[414,39,454,37],[414,41,454,39],[415,10,455,8,"console"],[415,17,455,15],[415,18,455,16,"log"],[415,21,455,19],[415,22,455,20],[415,61,455,59],[415,63,455,61,"lowHealthEnemies"],[415,79,455,77],[415,80,455,78,"map"],[415,83,455,81],[415,84,455,82,"e"],[415,85,455,83],[415,89,455,87],[415,92,455,90,"e"],[415,93,455,91],[415,94,455,92,"id"],[415,96,455,94],[415,100,455,98,"e"],[415,101,455,99],[415,102,455,100,"health"],[415,108,455,106],[415,112,455,110,"e"],[415,113,455,111],[415,114,455,112,"maxHealth"],[415,123,455,121],[415,128,455,126],[415,129,455,127],[415,130,455,128],[416,8,456,6],[418,8,458,6],[419,8,459,6],[419,12,459,12,"beforeCount"],[419,23,459,23],[419,26,459,26,"newState"],[419,34,459,34],[419,35,459,35,"enemies"],[419,42,459,42],[419,43,459,43,"length"],[419,49,459,49],[420,8,460,6,"newState"],[420,16,460,14],[420,17,460,15,"enemies"],[420,24,460,22],[420,27,460,25,"newState"],[420,35,460,33],[420,36,460,34,"enemies"],[420,43,460,41],[420,44,460,42,"filter"],[420,50,460,48],[420,51,460,49,"enemy"],[420,56,460,54],[420,60,460,58,"enemy"],[420,65,460,63],[420,66,460,64,"health"],[420,72,460,70],[420,75,460,73],[420,76,460,74],[420,77,460,75],[421,8,461,6],[421,12,461,12,"afterCount"],[421,22,461,22],[421,25,461,25,"newState"],[421,33,461,33],[421,34,461,34,"enemies"],[421,41,461,41],[421,42,461,42,"length"],[421,48,461,48],[422,8,463,6],[422,12,463,10,"beforeCount"],[422,23,463,21],[422,28,463,26,"afterCount"],[422,38,463,36],[422,40,463,38],[423,10,464,8,"console"],[423,17,464,15],[423,18,464,16,"log"],[423,21,464,19],[423,22,464,20],[423,52,464,50,"beforeCount"],[423,63,464,61],[423,66,464,64,"afterCount"],[423,76,464,74],[423,102,464,100],[423,103,464,101],[424,8,465,6],[426,8,467,6],[427,8,468,6],[428,8,469,6],[428,12,469,12,"MAX_ENEMIES"],[428,23,469,23],[428,26,469,26],[428,28,469,28],[428,29,469,29],[428,30,469,30],[429,8,470,6],[429,12,470,12,"MIN_SPAWN_DELAY"],[429,27,470,27],[429,30,470,30],[429,33,470,33],[429,34,470,34],[429,35,470,35],[430,8,471,6],[430,12,471,12,"now"],[430,15,471,15],[430,18,471,18,"Date"],[430,22,471,22],[430,23,471,23,"now"],[430,26,471,26],[430,27,471,27],[430,28,471,28],[431,8,472,6],[431,12,472,12,"hasBoss"],[431,19,472,19],[431,22,472,22,"newState"],[431,30,472,30],[431,31,472,31,"enemies"],[431,38,472,38],[431,39,472,39,"some"],[431,43,472,43],[431,44,472,44,"enemy"],[431,49,472,49],[431,53,472,53,"enemy"],[431,58,472,58],[431,59,472,59,"isBoss"],[431,65,472,65],[431,66,472,66],[433,8,474,6],[434,8,475,6],[434,12,475,10],[434,13,475,11,"newState"],[434,21,475,19],[434,22,475,20,"lastSpawnTime"],[434,35,475,33],[434,37,475,35],[435,10,476,8,"newState"],[435,18,476,16],[435,19,476,17,"lastSpawnTime"],[435,32,476,30],[435,35,476,33,"now"],[435,38,476,36],[436,8,477,6],[437,8,479,6,"console"],[437,15,479,13],[437,16,479,14,"log"],[437,19,479,17],[437,20,479,18],[437,53,479,51,"newState"],[437,61,479,59],[437,62,479,60,"enemies"],[437,69,479,67],[437,70,479,68,"length"],[437,76,479,74],[437,85,479,83,"MAX_ENEMIES"],[437,96,479,94],[437,109,479,107,"hasBoss"],[437,116,479,114],[437,118,479,116],[437,119,479,117],[439,8,481,6],[440,8,482,6],[440,12,482,10],[440,13,482,11,"hasBoss"],[440,20,482,18],[440,24,482,22,"newState"],[440,32,482,30],[440,33,482,31,"enemies"],[440,40,482,38],[440,41,482,39,"length"],[440,47,482,45],[440,50,482,48,"MAX_ENEMIES"],[440,61,482,59],[440,65,482,64,"now"],[440,68,482,67],[440,71,482,70,"newState"],[440,79,482,78],[440,80,482,79,"lastSpawnTime"],[440,93,482,92],[440,97,482,97,"MIN_SPAWN_DELAY"],[440,112,482,112],[440,114,482,114],[441,10,483,8,"console"],[441,17,483,15],[441,18,483,16,"log"],[441,21,483,19],[441,22,483,20],[441,43,483,41,"newState"],[441,51,483,49],[441,52,483,50,"enemies"],[441,59,483,57],[441,60,483,58,"length"],[441,66,483,64],[441,69,483,67],[441,70,483,68],[441,74,483,72,"MAX_ENEMIES"],[441,85,483,83],[441,87,483,85],[441,88,483,86],[442,10,484,8,"spawnTestEnemy"],[442,24,484,22],[442,25,484,23,"newState"],[442,33,484,31],[442,34,484,32],[443,10,485,8,"newState"],[443,18,485,16],[443,19,485,17,"lastSpawnTime"],[443,32,485,30],[443,35,485,33,"now"],[443,38,485,36],[444,8,486,6],[445,8,488,6],[445,15,488,13,"newState"],[445,23,488,21],[446,6,489,4],[446,7,489,5],[446,47,489,6],[448,6,491,4],[449,6,492,4,"console"],[449,13,492,11],[449,14,492,12,"log"],[449,17,492,15],[449,18,492,16],[449,50,492,48,"enemiesToKill"],[449,63,492,61],[449,64,492,62,"length"],[449,70,492,68],[449,101,492,99],[449,102,492,100],[450,6,494,4,"enemiesToKill"],[450,19,494,17],[450,20,494,18,"forEach"],[450,27,494,25],[450,28,494,26],[450,29,494,27,"enemy"],[450,34,494,32],[450,36,494,34,"index"],[450,41,494,39],[450,46,494,44],[451,8,495,6,"console"],[451,15,495,13],[451,16,495,14,"log"],[451,19,495,17],[451,20,495,18],[451,57,495,55,"index"],[451,62,495,60],[451,65,495,63],[451,66,495,64],[451,70,495,68,"enemiesToKill"],[451,83,495,81],[451,84,495,82,"length"],[451,90,495,88],[451,104,495,102,"enemy"],[451,109,495,107],[451,110,495,108,"id"],[451,112,495,110],[451,114,495,112],[451,115,495,113],[452,8,496,6,"handleEnemyKill"],[452,23,496,21],[452,24,496,22,"enemy"],[452,29,496,27],[452,30,496,28],[453,6,497,4],[453,7,497,5],[453,8,497,6],[454,4,498,2],[454,5,498,3],[454,7,498,5],[454,8,498,6,"handleEnemyKill"],[454,23,498,21],[454,24,498,22],[454,25,498,23],[454,26,498,24],[454,27,498,25],[456,4,500,2],[457,4,501,2],[457,8,501,8,"findClosestEnemyInternal"],[457,32,501,32],[457,35,501,36,"enemies"],[457,42,501,58],[457,46,501,83],[458,6,502,4],[458,10,502,8,"enemies"],[458,17,502,15],[458,18,502,16,"length"],[458,24,502,22],[458,29,502,27],[458,30,502,28],[458,32,502,30],[458,39,502,37],[458,43,502,41],[460,6,504,4],[461,6,505,4],[461,10,505,10,"SCREEN_WIDTH"],[461,22,505,22],[461,25,505,25],[461,28,505,28],[462,6,506,4],[462,10,506,10,"GAME_AREA_HEIGHT"],[462,26,506,26],[462,29,506,29],[462,32,506,32],[462,35,506,35],[462,38,506,38],[462,39,506,39],[462,40,506,40],[463,6,507,4],[463,10,507,10,"ninjaX"],[463,16,507,16],[463,19,507,19,"SCREEN_WIDTH"],[463,31,507,31],[463,34,507,34],[463,35,507,35],[464,6,508,4],[464,10,508,10,"ninjaY"],[464,16,508,16],[464,19,508,19,"GAME_AREA_HEIGHT"],[464,35,508,35],[464,38,508,38],[464,39,508,39],[465,6,510,4],[465,10,510,8,"closestEnemy"],[465,22,510,20],[465,25,510,23,"enemies"],[465,32,510,30],[465,33,510,31],[465,34,510,32],[465,35,510,33],[466,6,511,4],[466,10,511,8,"closestDistance"],[466,25,511,23],[466,28,511,26,"Infinity"],[466,36,511,34],[467,6,513,4,"enemies"],[467,13,513,11],[467,14,513,12,"forEach"],[467,21,513,19],[467,22,513,20,"enemy"],[467,27,513,25],[467,31,513,29],[468,8,514,6],[468,12,514,12,"distance"],[468,20,514,20],[468,23,514,23,"Math"],[468,27,514,27],[468,28,514,28,"sqrt"],[468,32,514,32],[468,33,515,8,"Math"],[468,37,515,12],[468,38,515,13,"pow"],[468,41,515,16],[468,42,515,17,"enemy"],[468,47,515,22],[468,48,515,23,"position"],[468,56,515,31],[468,57,515,32,"x"],[468,58,515,33],[468,61,515,36,"ninjaX"],[468,67,515,42],[468,69,515,44],[468,70,515,45],[468,71,515,46],[468,74,516,8,"Math"],[468,78,516,12],[468,79,516,13,"pow"],[468,82,516,16],[468,83,516,17,"enemy"],[468,88,516,22],[468,89,516,23,"position"],[468,97,516,31],[468,98,516,32,"y"],[468,99,516,33],[468,102,516,36,"ninjaY"],[468,108,516,42],[468,110,516,44],[468,111,516,45],[468,112,517,6],[468,113,517,7],[469,8,519,6],[469,12,519,10,"distance"],[469,20,519,18],[469,23,519,21,"closestDistance"],[469,38,519,36],[469,40,519,38],[470,10,520,8,"closestDistance"],[470,25,520,23],[470,28,520,26,"distance"],[470,36,520,34],[471,10,521,8,"closestEnemy"],[471,22,521,20],[471,25,521,23,"enemy"],[471,30,521,28],[472,8,522,6],[473,6,523,4],[473,7,523,5],[473,8,523,6],[474,6,525,4,"console"],[474,13,525,11],[474,14,525,12,"log"],[474,17,525,15],[474,18,525,16],[474,60,525,58,"closestDistance"],[474,75,525,73],[474,76,525,74,"toFixed"],[474,83,525,81],[474,84,525,82],[474,85,525,83],[474,86,525,84],[474,88,525,86],[474,89,525,87],[475,6,526,4],[475,13,526,11,"closestEnemy"],[475,25,526,23],[476,4,527,2],[476,5,527,3],[478,4,529,2],[479,4,530,2],[479,8,530,8,"findClosestEnemy"],[479,24,530,24],[479,27,530,27,"findClosestEnemy"],[479,28,530,27],[479,33,530,53],[480,6,531,4],[480,13,531,11,"findClosestEnemyInternal"],[480,37,531,35],[480,38,531,36,"combatState"],[480,49,531,47],[480,50,531,48,"enemies"],[480,57,531,55],[480,58,531,56],[481,4,532,2],[481,5,532,3],[483,4,534,2],[484,4,535,2],[484,8,535,2,"_useState7"],[484,18,535,2],[484,21,535,58],[484,25,535,58,"useState"],[484,31,535,66],[484,32,535,66,"useState"],[484,40,535,66],[484,42,535,91],[485,8,535,93,"x"],[485,9,535,94],[485,11,535,96],[485,12,535,97],[486,8,535,99,"y"],[486,9,535,100],[486,11,535,102],[487,6,535,104],[487,7,535,105],[487,8,535,106],[488,6,535,106,"_useState8"],[488,16,535,106],[488,23,535,106,"_slicedToArray"],[488,37,535,106],[488,38,535,106,"default"],[488,45,535,106],[488,47,535,106,"_useState7"],[488,57,535,106],[489,6,535,9,"currentNinjaPosition"],[489,26,535,29],[489,29,535,29,"_useState8"],[489,39,535,29],[490,6,535,31,"setCurrentNinjaPosition"],[490,29,535,54],[490,32,535,54,"_useState8"],[490,42,535,54],[491,4,536,2],[491,8,536,2,"_useState9"],[491,18,536,2],[491,21,536,60],[491,25,536,60,"useState"],[491,31,536,68],[491,32,536,68,"useState"],[491,40,536,68],[491,42,536,69],[491,47,536,74],[491,48,536,75],[492,6,536,75,"_useState0"],[492,16,536,75],[492,23,536,75,"_slicedToArray"],[492,37,536,75],[492,38,536,75,"default"],[492,45,536,75],[492,47,536,75,"_useState9"],[492,57,536,75],[493,6,536,9,"isManualControlActive"],[493,27,536,30],[493,30,536,30,"_useState0"],[493,40,536,30],[494,6,536,32,"setIsManualControlActive"],[494,30,536,56],[494,33,536,56,"_useState0"],[494,43,536,56],[496,4,538,2],[497,4,539,2],[497,8,539,8,"updateNinjaPosition"],[497,27,539,27],[497,30,539,30],[497,34,539,30,"useCallback"],[497,40,539,41],[497,41,539,41,"useCallback"],[497,52,539,41],[497,54,539,43,"newPosition"],[497,65,539,78],[497,69,539,83],[498,6,540,4,"setCurrentNinjaPosition"],[498,29,540,27],[498,30,540,28,"newPosition"],[498,41,540,39],[498,42,540,40],[499,4,541,2],[499,5,541,3],[499,7,541,5],[499,9,541,7],[499,10,541,8],[501,4,543,2],[502,4,544,2],[502,8,544,8,"setManualControlActive"],[502,30,544,30],[502,33,544,33],[502,37,544,33,"useCallback"],[502,43,544,44],[502,44,544,44,"useCallback"],[502,55,544,44],[502,57,544,46,"active"],[502,63,544,61],[502,67,544,66],[503,6,545,4,"setIsManualControlActive"],[503,30,545,28],[503,31,545,29,"active"],[503,37,545,35],[503,38,545,36],[504,6,546,4,"console"],[504,13,546,11],[504,14,546,12,"log"],[504,17,546,15],[504,18,546,16],[504,39,546,37,"active"],[504,45,546,43],[504,48,546,46],[504,59,546,57],[504,62,546,60],[504,75,546,73],[504,88,546,86,"active"],[504,94,546,92],[504,97,546,95],[504,105,546,103],[504,108,546,106],[504,117,546,115],[504,119,546,117],[504,120,546,118],[505,4,547,2],[505,5,547,3],[505,7,547,5],[505,9,547,7],[505,10,547,8],[507,4,549,2],[508,4,550,2],[508,8,550,8,"handleProjectileHit"],[508,27,550,27],[508,30,550,31,"projectile"],[508,40,550,59],[508,44,550,64],[509,6,551,4,"console"],[509,13,551,11],[509,14,551,12,"log"],[509,17,551,15],[509,18,551,16],[509,35,551,33,"projectile"],[509,45,551,43],[509,46,551,44,"id"],[509,48,551,46],[509,62,551,60,"projectile"],[509,72,551,70],[509,73,551,71,"targetEnemyId"],[509,86,551,84],[509,94,551,92,"projectile"],[509,104,551,102],[509,105,551,103,"damage"],[509,111,551,109],[509,120,551,118],[509,121,551,119],[510,6,553,4,"setCombatState"],[510,20,553,18],[510,21,553,19,"prev"],[510,25,553,23],[510,29,553,27],[511,8,554,6],[511,12,554,12,"newState"],[511,20,554,20],[511,23,554,23],[512,10,554,25],[512,13,554,28,"prev"],[513,8,554,33],[513,9,554,34],[515,8,556,6],[516,8,557,6],[516,12,557,12,"enemyIndex"],[516,22,557,22],[516,25,557,25,"newState"],[516,33,557,33],[516,34,557,34,"enemies"],[516,41,557,41],[516,42,557,42,"findIndex"],[516,51,557,51],[516,52,557,52,"e"],[516,53,557,53],[516,57,557,57,"e"],[516,58,557,58],[516,59,557,59,"id"],[516,61,557,61],[516,66,557,66,"projectile"],[516,76,557,76],[516,77,557,77,"targetEnemyId"],[516,90,557,90],[516,91,557,91],[517,8,558,6],[517,12,558,10,"enemyIndex"],[517,22,558,20],[517,26,558,24],[517,27,558,25],[517,29,558,27],[518,10,559,8,"newState"],[518,18,559,16],[518,19,559,17,"enemies"],[518,26,559,24],[518,29,559,27],[518,30,559,28],[518,33,559,31,"newState"],[518,41,559,39],[518,42,559,40,"enemies"],[518,49,559,47],[518,50,559,48],[519,10,560,8,"newState"],[519,18,560,16],[519,19,560,17,"enemies"],[519,26,560,24],[519,27,560,25,"enemyIndex"],[519,37,560,35],[519,38,560,36],[519,41,560,39],[520,12,561,10],[520,15,561,13,"newState"],[520,23,561,21],[520,24,561,22,"enemies"],[520,31,561,29],[520,32,561,30,"enemyIndex"],[520,42,561,40],[520,43,561,41],[521,12,562,10,"health"],[521,18,562,16],[521,20,562,18,"newState"],[521,28,562,26],[521,29,562,27,"enemies"],[521,36,562,34],[521,37,562,35,"enemyIndex"],[521,47,562,45],[521,48,562,46],[521,49,562,47,"health"],[521,55,562,53],[521,58,562,56,"projectile"],[521,68,562,66],[521,69,562,67,"damage"],[521,75,562,73],[522,12,563,10,"lastDamaged"],[522,23,563,21],[522,25,563,23,"combatEngine"],[522,44,563,35],[522,45,563,35,"combatEngine"],[522,57,563,35],[522,58,563,36,"getCurrentTick"],[522,72,563,50],[522,73,563,51],[523,10,564,8],[523,11,564,9],[524,10,566,8,"console"],[524,17,566,15],[524,18,566,16,"log"],[524,21,566,19],[524,22,566,20],[524,34,566,32,"projectile"],[524,44,566,42],[524,45,566,43,"targetEnemyId"],[524,58,566,56],[524,70,566,68,"newState"],[524,78,566,76],[524,79,566,77,"enemies"],[524,86,566,84],[524,87,566,85,"enemyIndex"],[524,97,566,95],[524,98,566,96],[524,99,566,97,"health"],[524,105,566,103],[524,109,566,107,"newState"],[524,117,566,115],[524,118,566,116,"enemies"],[524,125,566,123],[524,126,566,124,"enemyIndex"],[524,136,566,134],[524,137,566,135],[524,138,566,136,"maxHealth"],[524,147,566,145],[524,149,566,147],[524,150,566,148],[525,8,567,6],[526,8,569,6],[526,15,569,13,"newState"],[526,23,569,21],[527,6,570,4],[527,7,570,5],[527,8,570,6],[529,6,572,4],[530,6,573,4,"setProjectiles"],[530,20,573,18],[530,21,573,19,"prev"],[530,25,573,23],[530,29,573,27,"prev"],[530,33,573,31],[530,34,573,32,"filter"],[530,40,573,38],[530,41,573,39,"p"],[530,42,573,40],[530,46,573,44,"p"],[530,47,573,45],[530,48,573,46,"id"],[530,50,573,48],[530,55,573,53,"projectile"],[530,65,573,63],[530,66,573,64,"id"],[530,68,573,66],[530,69,573,67],[530,70,573,68],[531,4,574,2],[531,5,574,3],[533,4,576,2],[534,4,577,2],[534,8,577,8,"castAbility"],[534,19,577,19],[534,22,577,22,"castAbility"],[534,23,577,23,"state"],[534,28,577,41],[534,30,577,43,"slotIndex"],[534,39,577,60],[534,44,577,65],[535,6,578,4],[535,10,578,10,"deck"],[535,14,578,14],[535,17,578,17,"state"],[535,22,578,22],[535,23,578,23,"abilityManager"],[535,37,578,37],[535,38,578,38,"getDeck"],[535,45,578,45],[535,46,578,46],[535,47,578,47],[536,6,579,4],[536,10,579,10,"ability"],[536,17,579,17],[536,20,579,20,"deck"],[536,24,579,24],[536,25,579,25,"slots"],[536,30,579,30],[536,31,579,31,"slotIndex"],[536,40,579,40],[536,41,579,41],[537,6,580,4],[537,10,580,8],[537,11,580,9,"ability"],[537,18,580,16],[537,20,580,18],[539,6,582,4],[540,6,583,4],[540,10,583,8,"damage"],[540,16,583,14],[540,19,583,17,"ability"],[540,26,583,24],[540,27,583,25,"stats"],[540,32,583,30],[540,33,583,31,"baseDamage"],[540,43,583,41],[542,6,585,4],[543,6,586,4,"deck"],[543,10,586,8],[543,11,586,9,"activeSynergies"],[543,26,586,24],[543,27,586,25,"forEach"],[543,34,586,32],[543,35,586,33,"synergy"],[543,42,586,40],[543,46,586,44],[544,8,587,6],[544,12,587,10,"synergy"],[544,19,587,17],[544,20,587,18,"bonus"],[544,25,587,23],[544,26,587,24,"damageBonus"],[544,37,587,35],[544,41,588,10,"synergy"],[544,48,588,17],[544,49,588,18,"requiredTags"],[544,61,588,30],[544,62,588,31,"some"],[544,66,588,35],[544,67,588,36,"tag"],[544,70,588,39],[544,74,588,43,"ability"],[544,81,588,50],[544,82,588,51,"tags"],[544,86,588,55],[544,87,588,56,"includes"],[544,95,588,64],[544,96,588,65,"tag"],[544,99,588,68],[544,100,588,69],[544,101,588,70],[544,103,588,72],[545,10,589,8,"damage"],[545,16,589,14],[545,20,589,19],[545,21,589,20],[545,24,589,23,"synergy"],[545,31,589,30],[545,32,589,31,"bonus"],[545,37,589,36],[545,38,589,37,"damageBonus"],[545,49,589,48],[545,52,589,51],[545,55,589,55],[546,8,590,6],[547,6,591,4],[547,7,591,5],[547,8,591,6],[549,6,593,4],[550,6,594,4],[550,10,594,10,"isAOE"],[550,15,594,15],[550,18,594,18,"ability"],[550,25,594,25],[550,26,594,26,"effects"],[550,33,594,33],[550,34,594,34,"includes"],[550,42,594,42],[550,43,594,43],[550,48,594,48],[550,49,594,49],[550,53,594,53,"ability"],[550,60,594,60],[550,61,594,61,"stats"],[550,66,594,66],[550,67,594,67,"aoeRadius"],[550,76,594,76],[551,6,596,4],[551,10,596,8,"isAOE"],[551,15,596,13],[551,17,596,15],[552,8,597,6,"console"],[552,15,597,13],[552,16,597,14,"log"],[552,19,597,17],[552,20,597,18],[552,39,597,37,"ability"],[552,46,597,44],[552,47,597,45,"name"],[552,51,597,49],[552,67,597,65,"ability"],[552,74,597,72],[552,75,597,73,"stats"],[552,80,597,78],[552,81,597,79,"aoeRadius"],[552,90,597,88],[552,92,597,90],[552,93,597,91],[554,8,599,6],[555,8,600,6],[555,12,600,12,"ninjaX"],[555,18,600,18],[555,21,600,21,"currentNinjaPosition"],[555,41,600,41],[555,42,600,42,"x"],[555,43,600,43],[555,46,600,46],[555,48,600,48],[555,49,600,49],[555,50,600,50],[556,8,601,6],[556,12,601,12,"ninjaY"],[556,18,601,18],[556,21,601,21,"currentNinjaPosition"],[556,41,601,41],[556,42,601,42,"y"],[556,43,601,43],[556,46,601,46],[556,48,601,48],[557,8,602,6],[557,12,602,12,"aoeRadius"],[557,21,602,21],[557,24,602,24,"ability"],[557,31,602,31],[557,32,602,32,"stats"],[557,37,602,37],[557,38,602,38,"aoeRadius"],[557,47,602,47],[558,8,604,6],[558,12,604,12,"enemiesInRange"],[558,26,604,26],[558,29,604,29,"state"],[558,34,604,34],[558,35,604,35,"enemies"],[558,42,604,42],[558,43,604,43,"filter"],[558,49,604,49],[558,50,604,50,"enemy"],[558,55,604,55],[558,59,604,59],[559,10,605,8],[559,14,605,14,"enemyX"],[559,20,605,20],[559,23,605,23,"enemy"],[559,28,605,28],[559,29,605,29,"position"],[559,37,605,37],[559,38,605,38,"x"],[559,39,605,39],[559,42,605,42],[559,46,605,46],[559,47,605,47],[559,48,605,48],[560,10,606,8],[560,14,606,14,"enemyY"],[560,20,606,20],[560,23,606,23,"enemy"],[560,28,606,28],[560,29,606,29,"position"],[560,37,606,37],[560,38,606,38,"y"],[560,39,606,39],[560,42,606,42],[560,46,606,46],[561,10,607,8],[561,14,607,14,"distance"],[561,22,607,22],[561,25,607,25,"Math"],[561,29,607,29],[561,30,607,30,"sqrt"],[561,34,607,34],[561,35,607,35,"Math"],[561,39,607,39],[561,40,607,40,"pow"],[561,43,607,43],[561,44,607,44,"enemyX"],[561,50,607,50],[561,53,607,53,"ninjaX"],[561,59,607,59],[561,61,607,61],[561,62,607,62],[561,63,607,63],[561,66,607,66,"Math"],[561,70,607,70],[561,71,607,71,"pow"],[561,74,607,74],[561,75,607,75,"enemyY"],[561,81,607,81],[561,84,607,84,"ninjaY"],[561,90,607,90],[561,92,607,92],[561,93,607,93],[561,94,607,94],[561,95,607,95],[562,10,608,8],[562,17,608,15,"distance"],[562,25,608,23],[562,29,608,27,"aoeRadius"],[562,38,608,36],[563,8,609,6],[563,9,609,7],[563,10,609,8],[564,8,611,6,"console"],[564,15,611,13],[564,16,611,14,"log"],[564,19,611,17],[564,20,611,18],[564,45,611,43,"enemiesInRange"],[564,59,611,57],[564,60,611,58,"length"],[564,66,611,64],[564,88,611,86,"aoeRadius"],[564,97,611,95],[564,107,611,105],[564,108,611,106],[566,8,613,6],[567,8,614,6,"enemiesInRange"],[567,22,614,20],[567,23,614,21,"forEach"],[567,30,614,28],[567,31,614,29,"enemy"],[567,36,614,34],[567,40,614,38],[568,10,615,8],[568,14,615,14,"damageResult"],[568,26,615,26],[568,29,615,29,"DamageCalculator"],[568,48,615,45],[568,49,615,45,"DamageCalculator"],[568,65,615,45],[568,66,615,46,"calculateDamage"],[568,81,615,61],[568,82,615,62,"damage"],[568,88,615,68],[568,90,615,70,"state"],[568,95,615,75],[568,96,615,76,"playerStats"],[568,107,615,87],[568,109,615,89,"enemy"],[568,114,615,94],[568,115,615,95,"stats"],[568,120,615,100],[568,121,615,101],[569,10,616,8,"createProjectile"],[569,26,616,24],[569,27,616,25,"enemy"],[569,32,616,30],[569,34,616,32,"damageResult"],[569,46,616,44],[569,47,616,45,"damage"],[569,53,616,51],[569,55,616,53,"currentNinjaPosition"],[569,75,616,73],[569,77,616,75],[570,12,617,10,"id"],[570,14,617,12],[570,16,617,14,"ability"],[570,23,617,21],[570,24,617,22,"id"],[570,26,617,24],[571,12,618,10,"name"],[571,16,618,14],[571,18,618,16,"ability"],[571,25,618,23],[571,26,618,24,"name"],[571,30,618,28],[572,12,619,10,"icon"],[572,16,619,14],[572,18,619,16,"ability"],[572,25,619,23],[572,26,619,24,"icon"],[573,10,620,8],[573,11,620,9],[573,12,620,10],[574,10,622,8,"console"],[574,17,622,15],[574,18,622,16,"log"],[574,21,622,19],[574,22,622,20],[574,37,622,35,"enemy"],[574,42,622,40],[574,43,622,41,"name"],[574,47,622,45],[574,55,622,53,"damageResult"],[574,67,622,65],[574,68,622,66,"damage"],[574,74,622,72],[574,83,622,81],[574,84,622,82],[575,8,623,6],[575,9,623,7],[575,10,623,8],[576,8,625,6,"console"],[576,15,625,13],[576,16,625,14,"log"],[576,19,625,17],[576,20,625,18],[576,26,625,24,"ability"],[576,33,625,31],[576,34,625,32,"name"],[576,38,625,36],[576,56,625,54,"enemiesInRange"],[576,70,625,68],[576,71,625,69,"length"],[576,77,625,75],[576,93,625,91,"damage"],[576,99,625,97],[576,118,625,116],[576,119,625,117],[577,6,627,4],[577,7,627,5],[577,13,627,11],[578,8,628,6],[579,8,629,6],[579,12,629,12,"target"],[579,18,629,18],[579,21,629,21,"findClosestEnemyInternal"],[579,45,629,45],[579,46,629,46,"state"],[579,51,629,51],[579,52,629,52,"enemies"],[579,59,629,59],[579,60,629,60],[580,8,630,6],[580,12,630,10],[580,13,630,11,"target"],[580,19,630,17],[580,21,630,19],[581,8,632,6],[581,12,632,12,"damageResult"],[581,24,632,24],[581,27,632,27,"DamageCalculator"],[581,46,632,43],[581,47,632,43,"DamageCalculator"],[581,63,632,43],[581,64,632,44,"calculateDamage"],[581,79,632,59],[581,80,632,60,"damage"],[581,86,632,66],[581,88,632,68,"state"],[581,93,632,73],[581,94,632,74,"playerStats"],[581,105,632,85],[581,107,632,87,"target"],[581,113,632,93],[581,114,632,94,"stats"],[581,119,632,99],[581,120,632,100],[583,8,634,6],[584,8,635,6,"createProjectile"],[584,24,635,22],[584,25,635,23,"target"],[584,31,635,29],[584,33,635,31,"damageResult"],[584,45,635,43],[584,46,635,44,"damage"],[584,52,635,50],[584,54,635,52,"currentNinjaPosition"],[584,74,635,72],[584,76,635,74],[585,10,636,8,"id"],[585,12,636,10],[585,14,636,12,"ability"],[585,21,636,19],[585,22,636,20,"id"],[585,24,636,22],[586,10,637,8,"name"],[586,14,637,12],[586,16,637,14,"ability"],[586,23,637,21],[586,24,637,22,"name"],[586,28,637,26],[587,10,638,8,"icon"],[587,14,638,12],[587,16,638,14,"ability"],[587,23,638,21],[587,24,638,22,"icon"],[588,8,639,6],[588,9,639,7],[588,10,639,8],[589,8,641,6,"console"],[589,15,641,13],[589,16,641,14,"log"],[589,19,641,17],[589,20,641,18],[589,26,641,24,"ability"],[589,33,641,31],[589,34,641,32,"name"],[589,38,641,36],[589,66,641,64,"damageResult"],[589,78,641,76],[589,79,641,77,"damage"],[589,85,641,83],[589,95,641,93,"damageResult"],[589,107,641,105],[589,108,641,106,"isCritical"],[589,118,641,116],[589,121,641,119],[589,131,641,129],[589,134,641,132],[589,136,641,134],[589,138,641,136],[589,139,641,137],[590,6,642,4],[592,6,644,4],[593,6,645,4],[593,10,645,8,"ability"],[593,17,645,15],[593,18,645,16,"effects"],[593,25,645,23],[593,26,645,24,"includes"],[593,34,645,32],[593,35,645,33],[593,40,645,38],[593,41,645,39],[593,45,645,43,"ability"],[593,52,645,50],[593,53,645,51,"stats"],[593,58,645,56],[593,59,645,57,"duration"],[593,67,645,65],[593,69,645,67],[594,8,646,6],[594,12,646,12,"targets"],[594,19,646,19],[594,22,646,22,"isAOE"],[594,27,646,27],[594,30,647,8,"state"],[594,35,647,13],[594,36,647,14,"enemies"],[594,43,647,21],[594,44,647,22,"filter"],[594,50,647,28],[594,51,647,29,"enemy"],[594,56,647,34],[594,60,647,38],[595,10,648,10],[595,14,648,16,"ninjaX"],[595,20,648,22],[595,23,648,25,"currentNinjaPosition"],[595,43,648,45],[595,44,648,46,"x"],[595,45,648,47],[595,48,648,50],[595,50,648,52],[596,10,649,10],[596,14,649,16,"ninjaY"],[596,20,649,22],[596,23,649,25,"currentNinjaPosition"],[596,43,649,45],[596,44,649,46,"y"],[596,45,649,47],[596,48,649,50],[596,50,649,52],[597,10,650,10],[597,14,650,16,"enemyX"],[597,20,650,22],[597,23,650,25,"enemy"],[597,28,650,30],[597,29,650,31,"position"],[597,37,650,39],[597,38,650,40,"x"],[597,39,650,41],[597,42,650,44],[597,46,650,48],[598,10,651,10],[598,14,651,16,"enemyY"],[598,20,651,22],[598,23,651,25,"enemy"],[598,28,651,30],[598,29,651,31,"position"],[598,37,651,39],[598,38,651,40,"y"],[598,39,651,41],[598,42,651,44],[598,46,651,48],[599,10,652,10],[599,14,652,16,"distance"],[599,22,652,24],[599,25,652,27,"Math"],[599,29,652,31],[599,30,652,32,"sqrt"],[599,34,652,36],[599,35,652,37,"Math"],[599,39,652,41],[599,40,652,42,"pow"],[599,43,652,45],[599,44,652,46,"enemyX"],[599,50,652,52],[599,53,652,55,"ninjaX"],[599,59,652,61],[599,61,652,63],[599,62,652,64],[599,63,652,65],[599,66,652,68,"Math"],[599,70,652,72],[599,71,652,73,"pow"],[599,74,652,76],[599,75,652,77,"enemyY"],[599,81,652,83],[599,84,652,86,"ninjaY"],[599,90,652,92],[599,92,652,94],[599,93,652,95],[599,94,652,96],[599,95,652,97],[600,10,653,10],[600,17,653,17,"distance"],[600,25,653,25],[600,29,653,29,"ability"],[600,36,653,36],[600,37,653,37,"stats"],[600,42,653,42],[600,43,653,43,"aoeRadius"],[600,52,653,52],[601,8,654,8],[601,9,654,9],[601,10,654,10],[601,13,655,8],[601,14,655,9,"findClosestEnemyInternal"],[601,38,655,33],[601,39,655,34,"state"],[601,44,655,39],[601,45,655,40,"enemies"],[601,52,655,47],[601,53,655,48],[601,54,655,49],[601,55,655,50,"filter"],[601,61,655,56],[601,62,655,57,"Boolean"],[601,69,655,64],[601,70,655,65],[602,8,657,6,"targets"],[602,15,657,13],[602,16,657,14,"forEach"],[602,23,657,21],[602,24,657,22,"target"],[602,30,657,28],[602,34,657,32],[603,10,658,8,"state"],[603,15,658,13],[603,16,658,14,"statusEffects"],[603,29,658,27],[603,30,658,28,"addEffect"],[603,39,658,37],[603,40,658,38,"target"],[603,46,658,44],[603,47,658,45,"id"],[603,49,658,47],[603,51,658,49],[604,12,659,10,"id"],[604,14,659,12],[604,16,659,14],[604,19,659,17,"ability"],[604,26,659,24],[604,27,659,25,"id"],[604,29,659,27],[604,35,659,33],[605,12,660,10,"type"],[605,16,660,14],[605,18,660,16],[605,23,660,21],[606,12,661,10,"remainingTicks"],[606,26,661,24],[606,28,661,26,"Math"],[606,32,661,30],[606,33,661,31,"floor"],[606,38,661,36],[606,39,661,37,"ability"],[606,46,661,44],[606,47,661,45,"stats"],[606,52,661,50],[606,53,661,51,"duration"],[606,61,661,59],[606,64,661,62],[606,66,661,64],[606,67,661,65],[607,12,662,10,"tickInterval"],[607,24,662,22],[607,26,662,24],[607,28,662,26],[608,12,663,10,"lastTick"],[608,20,663,18],[608,22,663,20,"state"],[608,27,663,25],[608,28,663,26,"currentTick"],[608,39,663,37],[609,12,664,10,"value"],[609,17,664,15],[609,19,664,17,"Math"],[609,23,664,21],[609,24,664,22,"floor"],[609,29,664,27],[609,30,664,28,"damage"],[609,36,664,34],[609,39,664,37],[609,42,664,40],[609,43,664,41],[610,12,665,10,"stackable"],[610,21,665,19],[610,23,665,21],[611,10,666,8],[611,11,666,9],[611,12,666,10],[612,8,667,6],[612,9,667,7],[612,10,667,8],[613,6,668,4],[615,6,670,4],[616,6,671,4],[616,10,671,8,"ability"],[616,17,671,15],[616,18,671,16,"effects"],[616,25,671,23],[616,26,671,24,"includes"],[616,34,671,32],[616,35,671,33],[616,41,671,39],[616,42,671,40],[616,46,671,44,"ability"],[616,53,671,51],[616,54,671,52,"id"],[616,56,671,54],[616,61,671,59],[616,75,671,73],[616,77,671,75],[617,8,672,6,"console"],[617,15,672,13],[617,16,672,14,"log"],[617,19,672,17],[617,20,672,18],[617,66,672,64,"ability"],[617,73,672,71],[617,74,672,72,"stats"],[617,79,672,77],[617,80,672,78,"duration"],[617,88,672,86],[617,98,672,96],[617,99,672,97],[619,8,674,6],[620,8,675,6],[620,12,675,12,"cloneX"],[620,18,675,18],[620,21,675,21,"currentNinjaPosition"],[620,41,675,41],[620,42,675,42,"x"],[620,43,675,43],[620,46,675,46],[620,48,675,48],[620,49,675,49],[620,50,675,50],[621,8,676,6],[621,12,676,12,"cloneY"],[621,18,676,18],[621,21,676,21,"currentNinjaPosition"],[621,41,676,41],[621,42,676,42,"y"],[621,43,676,43],[621,46,676,46],[621,48,676,48],[621,49,676,49],[621,50,676,50],[623,8,678,6,"state"],[623,13,678,11],[623,14,678,12,"shadowClone"],[623,25,678,23],[623,28,678,26],[624,10,679,8,"id"],[624,12,679,10],[624,14,679,12],[624,30,679,28,"Date"],[624,34,679,32],[624,35,679,33,"now"],[624,38,679,36],[624,39,679,37],[624,40,679,38],[624,42,679,40],[625,10,680,8,"remainingTicks"],[625,24,680,22],[625,26,680,24,"Math"],[625,30,680,28],[625,31,680,29,"floor"],[625,36,680,34],[625,37,680,35,"ability"],[625,44,680,42],[625,45,680,43,"stats"],[625,50,680,48],[625,51,680,49,"duration"],[625,59,680,57],[625,62,680,60],[625,64,680,62],[625,65,680,63],[626,10,680,65],[627,10,681,8,"position"],[627,18,681,16],[627,20,681,18],[628,12,681,20,"x"],[628,13,681,21],[628,15,681,23,"cloneX"],[628,21,681,29],[629,12,681,31,"y"],[629,13,681,32],[629,15,681,34,"cloneY"],[630,10,681,41],[630,11,681,42],[631,10,682,8,"damageMultiplier"],[631,26,682,24],[631,28,682,26],[631,31,682,29],[631,32,682,31],[632,8,683,6],[632,9,683,7],[633,8,685,6,"console"],[633,15,685,13],[633,16,685,14,"log"],[633,19,685,17],[633,20,685,18],[633,63,685,61,"ability"],[633,70,685,68],[633,71,685,69,"stats"],[633,76,685,74],[633,77,685,75,"duration"],[633,85,685,83],[633,108,685,106],[633,109,685,107],[634,6,686,4],[635,4,687,2],[635,5,687,3],[637,4,689,2],[638,4,690,2],[638,8,690,8,"createProjectile"],[638,24,690,24],[638,27,690,27,"createProjectile"],[638,28,690,28,"targetEnemy"],[638,39,690,52],[638,41,690,54,"damage"],[638,47,690,68],[638,49,690,70,"ninjaPos"],[638,57,690,103],[638,59,690,105,"abilityInfo"],[638,70,690,159],[638,75,690,164],[639,6,691,4],[639,10,691,8],[639,11,691,9,"targetEnemy"],[639,22,691,20],[639,24,691,22],[640,8,692,6,"console"],[640,15,692,13],[640,16,692,14,"log"],[640,19,692,17],[640,20,692,18],[640,65,692,63],[640,66,692,64],[641,8,693,6],[641,15,693,13],[641,19,693,17],[642,6,694,4],[643,6,696,4],[643,10,696,10,"SCREEN_WIDTH"],[643,22,696,22],[643,25,696,25],[643,28,696,28],[644,6,697,4],[644,10,697,10,"GAME_AREA_HEIGHT"],[644,26,697,26],[644,29,697,29],[644,32,697,32],[644,35,697,35],[644,38,697,38],[644,39,697,39],[644,40,697,40],[645,6,698,4],[645,10,698,10,"NINJA_SIZE"],[645,20,698,20],[645,23,698,23],[645,25,698,25],[647,6,700,4],[648,6,701,4],[648,10,701,10,"ninjaX"],[648,16,701,16],[648,19,701,19,"ninjaPos"],[648,27,701,27],[648,30,701,30,"ninjaPos"],[648,38,701,38],[648,39,701,39,"x"],[648,40,701,40],[648,43,701,43,"NINJA_SIZE"],[648,53,701,53],[648,56,701,56],[648,57,701,57],[648,60,701,60,"SCREEN_WIDTH"],[648,72,701,72],[648,75,701,75],[648,76,701,76],[649,6,702,4],[649,10,702,10,"ninjaY"],[649,16,702,16],[649,19,702,19,"ninjaPos"],[649,27,702,27],[649,30,702,30,"ninjaPos"],[649,38,702,38],[649,39,702,39,"y"],[649,40,702,40],[649,43,702,43,"NINJA_SIZE"],[649,53,702,53],[649,56,702,56],[649,57,702,57],[649,60,702,60,"GAME_AREA_HEIGHT"],[649,76,702,76],[649,79,702,79],[649,80,702,80],[650,6,703,4],[650,10,703,10,"ENEMY_SIZE"],[650,20,703,20],[650,23,703,23],[650,25,703,25],[651,6,705,4],[651,10,705,10,"projectileId"],[651,22,705,22],[651,25,705,25],[651,33,705,33,"Date"],[651,37,705,37],[651,38,705,38,"now"],[651,41,705,41],[651,42,705,42],[651,43,705,43],[651,47,705,47,"Math"],[651,51,705,51],[651,52,705,52,"random"],[651,58,705,58],[651,59,705,59],[651,60,705,60],[651,62,705,62],[652,6,707,4],[652,10,707,10,"projectile"],[652,20,707,38],[652,23,707,41],[653,8,708,6,"id"],[653,10,708,8],[653,12,708,10,"projectileId"],[653,24,708,22],[654,8,709,6,"x"],[654,9,709,7],[654,11,709,9,"ninjaX"],[654,17,709,15],[655,8,710,6,"y"],[655,9,710,7],[655,11,710,9,"ninjaY"],[655,17,710,15],[656,8,711,6,"targetX"],[656,15,711,13],[656,17,711,15,"targetEnemy"],[656,28,711,26],[656,29,711,27,"position"],[656,37,711,35],[656,38,711,36,"x"],[656,39,711,37],[656,42,711,40,"ENEMY_SIZE"],[656,52,711,50],[656,55,711,53],[656,56,711,54],[657,8,712,6,"targetY"],[657,15,712,13],[657,17,712,15,"targetEnemy"],[657,28,712,26],[657,29,712,27,"position"],[657,37,712,35],[657,38,712,36,"y"],[657,39,712,37],[657,42,712,40,"ENEMY_SIZE"],[657,52,712,50],[657,55,712,53],[657,56,712,54],[658,8,713,6,"targetEnemyId"],[658,21,713,19],[658,23,713,21,"targetEnemy"],[658,34,713,32],[658,35,713,33,"id"],[658,37,713,35],[659,8,714,6,"damage"],[659,14,714,12],[659,16,714,14,"damage"],[659,22,714,20],[660,8,715,6,"startTime"],[660,17,715,15],[660,19,715,17,"Date"],[660,23,715,21],[660,24,715,22,"now"],[660,27,715,25],[660,28,715,26],[660,29,715,27],[661,8,716,6,"duration"],[661,16,716,14],[661,18,716,16],[661,21,716,19],[662,8,716,21],[663,8,717,6],[664,8,718,6,"abilityId"],[664,17,718,15],[664,19,718,17,"abilityInfo"],[664,30,718,28],[664,32,718,30,"id"],[664,34,718,32],[664,38,718,36],[664,54,718,52],[665,8,719,6,"abilityName"],[665,19,719,17],[665,21,719,19,"abilityInfo"],[665,32,719,30],[665,34,719,32,"name"],[665,38,719,36],[665,42,719,40],[665,58,719,56],[666,8,720,6,"abilityIcon"],[666,19,720,17],[666,21,720,19,"abilityInfo"],[666,32,720,30],[666,34,720,32,"icon"],[666,38,720,36],[666,42,720,40],[666,46,720,44],[666,47,720,46],[667,6,721,4],[667,7,721,5],[668,6,723,4,"console"],[668,13,723,11],[668,14,723,12,"log"],[668,17,723,15],[668,18,723,16],[668,44,723,42,"abilityInfo"],[668,55,723,53],[668,57,723,55,"name"],[668,61,723,59],[668,65,723,63],[668,81,723,79],[668,101,723,99,"projectileId"],[668,113,723,111],[668,128,723,126,"targetEnemy"],[668,139,723,137],[668,140,723,138,"name"],[668,144,723,142],[668,152,723,150,"damage"],[668,158,723,156],[668,167,723,165],[668,168,723,166],[669,6,725,4,"console"],[669,13,725,11],[669,14,725,12,"log"],[669,17,725,15],[669,18,725,16],[669,53,725,51,"targetEnemy"],[669,64,725,62],[669,65,725,63,"id"],[669,67,725,65],[669,75,725,73,"damage"],[669,81,725,79],[669,90,725,88],[669,91,725,89],[670,6,726,4,"console"],[670,13,726,11],[670,14,726,12,"log"],[670,17,726,15],[670,18,726,16],[670,53,726,51,"ninjaX"],[670,59,726,57],[670,64,726,62,"ninjaY"],[670,70,726,68],[670,87,726,85,"projectile"],[670,97,726,95],[670,98,726,96,"targetX"],[670,105,726,103],[670,110,726,108,"projectile"],[670,120,726,118],[670,121,726,119,"targetY"],[670,128,726,126],[670,131,726,129],[670,132,726,130],[671,6,728,4,"setProjectiles"],[671,20,728,18],[671,21,728,19,"prev"],[671,25,728,23],[671,29,728,27],[671,30,728,28],[671,33,728,31,"prev"],[671,37,728,35],[671,39,728,37,"projectile"],[671,49,728,47],[671,50,728,48],[671,51,728,49],[673,6,730,4],[674,6,731,4,"setTimeout"],[674,16,731,14],[674,17,731,15],[674,23,731,21],[675,8,732,6,"handleProjectileHit"],[675,27,732,25],[675,28,732,26,"projectile"],[675,38,732,36],[675,39,732,37],[676,6,733,4],[676,7,733,5],[676,9,733,7],[676,12,733,10],[676,13,733,11],[677,6,735,4],[677,13,735,11,"projectile"],[677,23,735,21],[678,4,736,2],[678,5,736,3],[680,4,738,2],[681,4,739,2],[681,8,739,8,"spawnTestEnemy"],[681,22,739,22],[681,25,739,26,"state"],[681,30,739,44],[681,34,739,49],[682,6,740,4,"console"],[682,13,740,11],[682,14,740,12,"log"],[682,17,740,15],[682,18,740,16],[682,83,740,81],[682,84,740,82],[684,6,742,4],[685,6,743,4],[685,10,743,10,"zoneEnemy"],[685,19,743,19],[685,22,743,22,"spawnZoneEnemy"],[685,36,743,36],[685,37,743,37],[685,38,743,38],[686,6,744,4],[686,10,744,8],[686,11,744,9,"zoneEnemy"],[686,20,744,18],[686,22,744,20],[687,8,745,6,"console"],[687,15,745,13],[687,16,745,14,"log"],[687,19,745,17],[687,20,745,18],[687,76,745,74],[687,77,745,75],[688,8,746,6],[689,8,747,6,"spawnBasicTestEnemy"],[689,27,747,25],[689,28,747,26,"state"],[689,33,747,31],[689,34,747,32],[690,8,748,6],[691,6,749,4],[692,6,751,4,"console"],[692,13,751,11],[692,14,751,12,"log"],[692,17,751,15],[692,18,751,16],[692,44,751,42,"zoneEnemy"],[692,53,751,51],[692,54,751,52,"name"],[692,58,751,56],[692,63,751,61,"zoneEnemy"],[692,72,751,70],[692,73,751,71,"typeId"],[692,79,751,77],[692,94,751,92,"currentZone"],[692,105,751,103],[692,107,751,105,"id"],[692,109,751,107],[692,119,751,117,"currentZoneLevel"],[692,135,751,133],[692,137,751,135,"level"],[692,142,751,140],[692,144,751,142],[692,145,751,143],[694,6,753,4],[695,6,754,4],[695,10,754,10,"combatEnemy"],[695,21,754,34],[695,24,754,37],[696,8,755,6,"id"],[696,10,755,8],[696,12,755,10,"zoneEnemy"],[696,21,755,19],[696,22,755,20,"id"],[696,24,755,22],[697,8,756,6,"name"],[697,12,756,10],[697,14,756,12,"zoneEnemy"],[697,23,756,21],[697,24,756,22,"name"],[697,28,756,26],[698,8,757,6,"health"],[698,14,757,12],[698,16,757,14,"zoneEnemy"],[698,25,757,23],[698,26,757,24,"hp"],[698,28,757,26],[699,8,758,6,"maxHealth"],[699,17,758,15],[699,19,758,17,"zoneEnemy"],[699,28,758,26],[699,29,758,27,"maxHP"],[699,34,758,32],[700,8,759,6,"stats"],[700,13,759,11],[700,15,759,13],[701,10,760,8,"attack"],[701,16,760,14],[701,18,760,16,"zoneEnemy"],[701,27,760,25],[701,28,760,26,"attack"],[701,34,760,32],[702,10,761,8,"defense"],[702,17,761,15],[702,19,761,17],[702,21,761,19],[703,10,761,21],[704,10,762,8,"health"],[704,16,762,14],[704,18,762,16,"zoneEnemy"],[704,27,762,25],[704,28,762,26,"hp"],[704,30,762,28],[705,10,763,8,"maxHealth"],[705,19,763,17],[705,21,763,19,"zoneEnemy"],[705,30,763,28],[705,31,763,29,"maxHP"],[705,36,763,34],[706,10,764,8,"critChance"],[706,20,764,18],[706,22,764,20],[706,23,764,21],[707,10,765,8,"critDamage"],[707,20,765,18],[707,22,765,20],[707,25,765,23],[708,10,766,8,"cooldownReduction"],[708,27,766,25],[708,29,766,27],[709,8,767,6],[709,9,767,7],[710,8,768,6,"position"],[710,16,768,14],[710,18,768,16,"zoneEnemy"],[710,27,768,25],[710,28,768,26,"position"],[710,36,768,34],[711,8,769,6,"lastDamaged"],[711,19,769,17],[711,21,769,19],[711,22,769,20],[712,8,770,6],[713,8,771,6,"zoneTypeId"],[713,18,771,16],[713,20,771,18,"zoneEnemy"],[713,29,771,27],[713,30,771,28,"typeId"],[713,36,771,34],[714,8,772,6,"zoneXP"],[714,14,772,12],[714,16,772,14,"zoneEnemy"],[714,25,772,23],[714,26,772,24,"xp"],[715,6,773,4],[715,7,773,5],[716,6,775,4,"console"],[716,13,775,11],[716,14,775,12,"log"],[716,17,775,15],[716,18,775,16],[716,42,775,40,"combatEnemy"],[716,53,775,51],[716,54,775,52,"name"],[716,58,775,56],[716,67,775,65,"combatEnemy"],[716,78,775,76],[716,79,775,77,"health"],[716,85,775,83],[716,100,775,98,"currentZone"],[716,111,775,109],[716,113,775,111,"id"],[716,115,775,113],[716,125,775,123,"currentZoneLevel"],[716,141,775,139],[716,143,775,141,"level"],[716,148,775,146],[716,150,775,148],[716,151,775,149],[717,6,776,4,"state"],[717,11,776,9],[717,12,776,10,"enemies"],[717,19,776,17],[717,20,776,18,"push"],[717,24,776,22],[717,25,776,23,"combatEnemy"],[717,36,776,34],[717,37,776,35],[718,4,777,2],[718,5,777,3],[720,4,779,2],[721,4,780,2],[721,8,780,8,"spawnBasicTestEnemy"],[721,27,780,27],[721,30,780,31,"state"],[721,35,780,49],[721,39,780,54],[722,6,781,4],[722,10,781,10,"SCREEN_WIDTH"],[722,22,781,22],[722,25,781,25],[722,28,781,28],[723,6,782,4],[723,10,782,10,"GAME_AREA_HEIGHT"],[723,26,782,26],[723,29,782,29],[723,32,782,32],[723,35,782,35],[723,38,782,38],[724,6,783,4],[724,10,783,10,"ENEMY_SIZE"],[724,20,783,20],[724,23,783,23],[724,25,783,25],[725,6,785,4],[725,10,785,10,"x"],[725,11,785,11],[725,14,785,14,"Math"],[725,18,785,18],[725,19,785,19,"random"],[725,25,785,25],[725,26,785,26],[725,27,785,27],[725,31,785,31,"SCREEN_WIDTH"],[725,43,785,43],[725,46,785,46,"ENEMY_SIZE"],[725,56,785,56],[725,59,785,59],[725,60,785,60],[725,61,785,61],[725,64,785,64,"ENEMY_SIZE"],[725,74,785,74],[726,6,786,4],[726,10,786,10,"y"],[726,11,786,11],[726,14,786,14,"Math"],[726,18,786,18],[726,19,786,19,"random"],[726,25,786,25],[726,26,786,26],[726,27,786,27],[726,31,786,31,"GAME_AREA_HEIGHT"],[726,47,786,47],[726,50,786,50,"ENEMY_SIZE"],[726,60,786,60],[726,63,786,63],[726,64,786,64],[726,65,786,65],[726,68,786,68,"ENEMY_SIZE"],[726,78,786,78],[727,6,788,4],[727,10,788,10,"enemy"],[727,15,788,28],[727,18,788,31],[728,8,789,6,"id"],[728,10,789,8],[728,12,789,10],[728,30,789,28,"Date"],[728,34,789,32],[728,35,789,33,"now"],[728,38,789,36],[728,39,789,37],[728,40,789,38],[728,44,789,42,"Math"],[728,48,789,46],[728,49,789,47,"random"],[728,55,789,53],[728,56,789,54],[728,57,789,55],[728,59,789,57],[729,8,790,6,"name"],[729,12,790,10],[729,14,790,12],[729,26,790,24,"Math"],[729,30,790,28],[729,31,790,29,"floor"],[729,36,790,34],[729,37,790,35,"Math"],[729,41,790,39],[729,42,790,40,"random"],[729,48,790,46],[729,49,790,47],[729,50,790,48],[729,53,790,51],[729,56,790,54],[729,57,790,55],[729,59,790,57],[730,8,791,6,"health"],[730,14,791,12],[730,16,791,14],[730,18,791,16],[731,8,792,6,"maxHealth"],[731,17,792,15],[731,19,792,17],[731,21,792,19],[732,8,793,6,"stats"],[732,13,793,11],[732,15,793,13],[733,10,794,8,"attack"],[733,16,794,14],[733,18,794,16],[733,20,794,18],[734,10,795,8,"defense"],[734,17,795,15],[734,19,795,17],[734,21,795,19],[735,10,796,8,"health"],[735,16,796,14],[735,18,796,16],[735,20,796,18],[736,10,797,8,"maxHealth"],[736,19,797,17],[736,21,797,19],[736,23,797,21],[737,10,798,8,"critChance"],[737,20,798,18],[737,22,798,20],[737,23,798,21],[738,10,799,8,"critDamage"],[738,20,799,18],[738,22,799,20],[738,25,799,23],[739,10,800,8,"cooldownReduction"],[739,27,800,25],[739,29,800,27],[740,8,801,6],[740,9,801,7],[741,8,802,6,"position"],[741,16,802,14],[741,18,802,16],[742,10,802,18,"x"],[742,11,802,19],[743,10,802,21,"y"],[744,8,802,23],[744,9,802,24],[745,8,803,6,"lastDamaged"],[745,19,803,17],[745,21,803,19],[746,6,804,4],[746,7,804,5],[747,6,806,4,"console"],[747,13,806,11],[747,14,806,12,"log"],[747,17,806,15],[747,18,806,16],[747,42,806,40,"enemy"],[747,47,806,45],[747,48,806,46,"name"],[747,52,806,50],[747,60,806,58,"Math"],[747,64,806,62],[747,65,806,63,"round"],[747,70,806,68],[747,71,806,69,"x"],[747,72,806,70],[747,73,806,71],[747,78,806,76,"Math"],[747,82,806,80],[747,83,806,81,"round"],[747,88,806,86],[747,89,806,87,"y"],[747,90,806,88],[747,91,806,89],[747,94,806,92],[747,95,806,93],[748,6,807,4,"state"],[748,11,807,9],[748,12,807,10,"enemies"],[748,19,807,17],[748,20,807,18,"push"],[748,24,807,22],[748,25,807,23,"enemy"],[748,30,807,28],[748,31,807,29],[749,4,808,2],[749,5,808,3],[751,4,810,2],[752,4,811,2],[752,8,811,8,"startCombat"],[752,19,811,19],[752,22,811,22,"React"],[752,27,811,27],[752,28,811,27,"default"],[752,35,811,27],[752,36,811,28,"useCallback"],[752,47,811,39],[752,48,811,40],[752,54,811,46],[753,6,812,4,"console"],[753,13,812,11],[753,14,812,12,"log"],[753,17,812,15],[753,18,812,16],[753,63,812,61],[753,64,812,62],[754,6,813,4,"setCombatState"],[754,20,813,18],[754,21,813,19,"prev"],[754,25,813,23],[754,30,813,28],[755,8,813,30],[755,11,813,33,"prev"],[755,15,813,37],[756,8,813,39,"isInCombat"],[756,18,813,49],[756,20,813,51],[757,6,813,56],[757,7,813,57],[757,8,813,58],[757,9,813,59],[759,6,815,4],[760,6,816,4,"combatEngine"],[760,25,816,16],[760,26,816,16,"combatEngine"],[760,38,816,16],[760,39,816,17,"addTickCallback"],[760,54,816,32],[760,55,816,33,"handleCombatTick"],[760,71,816,49],[760,72,816,50],[761,6,817,4,"console"],[761,13,817,11],[761,14,817,12,"log"],[761,17,817,15],[761,18,817,16],[761,62,817,60],[761,63,817,61],[763,6,819,4],[764,6,820,4,"combatEngine"],[764,25,820,16],[764,26,820,16,"combatEngine"],[764,38,820,16],[764,39,820,17,"start"],[764,44,820,22],[764,45,820,23],[764,46,820,24],[765,4,821,2],[765,5,821,3],[765,7,821,5],[765,8,821,6,"combatEngine"],[765,27,821,18],[765,28,821,18,"combatEngine"],[765,40,821,18],[765,42,821,20,"handleCombatTick"],[765,58,821,36],[765,59,821,37],[765,60,821,38],[767,4,823,2],[768,4,824,2],[768,8,824,8,"stopCombat"],[768,18,824,18],[768,21,824,21,"React"],[768,26,824,26],[768,27,824,26,"default"],[768,34,824,26],[768,35,824,27,"useCallback"],[768,46,824,38],[768,47,824,39],[768,53,824,45],[769,6,825,4,"setCombatState"],[769,20,825,18],[769,21,825,19,"prev"],[769,25,825,23],[769,30,825,28],[770,8,825,30],[770,11,825,33,"prev"],[770,15,825,37],[771,8,825,39,"isInCombat"],[771,18,825,49],[771,20,825,51],[772,6,825,57],[772,7,825,58],[772,8,825,59],[772,9,825,60],[773,6,826,4,"combatEngine"],[773,25,826,16],[773,26,826,16,"combatEngine"],[773,38,826,16],[773,39,826,17,"removeTickCallback"],[773,57,826,35],[773,58,826,36,"handleCombatTick"],[773,74,826,52],[773,75,826,53],[774,4,827,2],[774,5,827,3],[774,7,827,5],[774,8,827,6,"combatEngine"],[774,27,827,18],[774,28,827,18,"combatEngine"],[774,40,827,18],[774,42,827,20,"handleCombatTick"],[774,58,827,36],[774,59,827,37],[774,60,827,38],[776,4,829,2],[777,4,830,2],[777,8,830,8,"equipAbility"],[777,20,830,20],[777,23,830,23,"equipAbility"],[777,24,830,24,"abilityId"],[777,33,830,41],[777,35,830,43,"slotIndex"],[777,44,830,60],[777,49,830,74],[778,6,831,4],[778,13,831,11,"combatState"],[778,24,831,22],[778,25,831,23,"abilityManager"],[778,39,831,37],[778,40,831,38,"equipAbility"],[778,52,831,50],[778,53,831,51,"abilityId"],[778,62,831,60],[778,64,831,62,"slotIndex"],[778,73,831,71],[778,74,831,72],[779,4,832,2],[779,5,832,3],[780,4,834,2],[780,8,834,8,"getDeck"],[780,15,834,15],[780,18,834,18,"getDeck"],[780,19,834,18],[780,24,834,24],[781,6,835,4],[781,13,835,11,"combatState"],[781,24,835,22],[781,25,835,23,"abilityManager"],[781,39,835,37],[781,40,835,38,"getDeck"],[781,47,835,45],[781,48,835,46],[781,49,835,47],[782,4,836,2],[782,5,836,3],[783,4,838,2],[783,8,838,8,"getAvailableAbilities"],[783,29,838,29],[783,32,838,32,"getAvailableAbilities"],[783,33,838,32],[783,38,838,38],[784,6,839,4],[784,13,839,11,"combatState"],[784,24,839,22],[784,25,839,23,"abilityManager"],[784,39,839,37],[784,40,839,38,"getAvailableAbilities"],[784,61,839,59],[784,62,839,60],[784,63,839,61],[785,4,840,2],[785,5,840,3],[786,4,842,2],[786,8,842,8,"upgradeAbility"],[786,22,842,22],[786,25,842,26,"abilityId"],[786,34,842,43],[786,38,842,57],[787,6,843,4],[787,13,843,11,"combatState"],[787,24,843,22],[787,25,843,23,"abilityManager"],[787,39,843,37],[787,40,843,38,"upgradeAbility"],[787,54,843,52],[787,55,843,53,"abilityId"],[787,64,843,62],[787,65,843,63],[788,4,844,2],[788,5,844,3],[790,4,846,2],[791,4,847,2],[791,8,847,8,"clearAllEnemies"],[791,23,847,23],[791,26,847,26,"clearAllEnemies"],[791,27,847,26],[791,32,847,32],[792,6,848,4,"console"],[792,13,848,11],[792,14,848,12,"log"],[792,17,848,15],[792,18,848,16],[792,67,848,65],[792,68,848,66],[793,6,849,4,"setCombatState"],[793,20,849,18],[793,21,849,19,"prev"],[793,25,849,23],[793,30,849,28],[794,8,850,6],[794,11,850,9,"prev"],[794,15,850,13],[795,8,851,6,"enemies"],[795,15,851,13],[795,17,851,15],[796,6,852,4],[796,7,852,5],[796,8,852,6],[796,9,852,7],[797,4,853,2],[797,5,853,3],[799,4,855,2],[800,4,856,2],[800,8,856,8,"triggerLevelUpExplosion"],[800,31,856,31],[800,34,856,34,"triggerLevelUpExplosion"],[800,35,856,34],[800,40,856,40],[801,6,857,4,"console"],[801,13,857,11],[801,14,857,12,"log"],[801,17,857,15],[801,18,857,16],[801,70,857,68],[801,71,857,69],[802,6,859,4],[802,10,859,10,"explosionTime"],[802,23,859,23],[802,26,859,26,"Date"],[802,30,859,30],[802,31,859,31,"now"],[802,34,859,34],[802,35,859,35],[802,36,859,36],[803,6,860,4,"setLastExplosionTime"],[803,26,860,24],[803,27,860,25,"explosionTime"],[803,40,860,38],[803,41,860,39],[804,6,862,4,"setCombatState"],[804,20,862,18],[804,21,862,19,"prev"],[804,25,862,23],[804,29,862,27],[805,8,863,6],[806,8,864,6],[806,12,864,12,"enemyCount"],[806,22,864,22],[806,25,864,25,"prev"],[806,29,864,29],[806,30,864,30,"enemies"],[806,37,864,37],[806,38,864,38,"length"],[806,44,864,44],[807,8,865,6],[807,12,865,12,"explosionXP"],[807,23,865,23],[807,26,865,26,"enemyCount"],[807,36,865,36],[807,39,865,39],[807,42,865,42],[807,43,865,43],[807,44,865,44],[808,8,866,6],[808,12,866,12,"explosionGold"],[808,25,866,25],[808,28,866,28,"enemyCount"],[808,38,866,38],[808,41,866,41],[808,44,866,44],[808,45,866,45],[808,46,866,46],[810,8,868,6,"console"],[810,15,868,13],[810,16,868,14,"log"],[810,19,868,17],[810,20,868,18],[810,44,868,42,"enemyCount"],[810,54,868,52],[810,76,868,74,"explosionXP"],[810,87,868,85],[810,98,868,96,"explosionGold"],[810,111,868,109],[810,118,868,116],[810,119,868,117],[812,8,870,6],[813,8,871,6],[813,12,871,10,"explosionXP"],[813,23,871,21],[813,26,871,24],[813,27,871,25],[813,29,871,27],[814,10,872,8,"setTimeout"],[814,20,872,18],[814,21,872,19],[814,27,872,25],[815,12,873,10,"game"],[815,16,873,14],[815,17,873,15,"updateNinja"],[815,28,873,26],[815,29,873,28,"ninja"],[815,34,873,33],[815,39,873,39],[816,14,874,12,"experience"],[816,24,874,22],[816,26,874,24,"ninja"],[816,31,874,29],[816,32,874,30,"experience"],[816,42,874,40],[816,45,874,43,"explosionXP"],[816,56,874,54],[817,14,875,12,"gold"],[817,18,875,16],[817,20,875,18,"ninja"],[817,25,875,23],[817,26,875,24,"gold"],[817,30,875,28],[817,33,875,31,"explosionGold"],[818,12,876,10],[818,13,876,11],[818,14,876,12],[818,15,876,13],[819,10,877,8],[819,11,877,9],[819,13,877,11],[819,14,877,12],[819,15,877,13],[819,16,877,14],[819,17,877,15],[820,8,878,6],[822,8,880,6],[823,8,881,6],[824,8,882,6],[824,12,882,12,"damagedEnemies"],[824,26,882,26],[824,29,882,29,"prev"],[824,33,882,33],[824,34,882,34,"enemies"],[824,41,882,41],[824,42,882,42,"map"],[824,45,882,45],[824,46,882,46,"enemy"],[824,51,882,51],[824,56,882,56],[825,10,883,8],[825,13,883,11,"enemy"],[825,18,883,16],[826,10,884,8,"health"],[826,16,884,14],[826,18,884,16],[826,19,884,17],[827,10,884,19],[828,10,885,8,"lastDamaged"],[828,21,885,19],[828,23,885,21,"combatEngine"],[828,42,885,33],[828,43,885,33,"combatEngine"],[828,55,885,33],[828,56,885,34,"getCurrentTick"],[828,70,885,48],[828,71,885,49],[829,8,886,6],[829,9,886,7],[829,10,886,8],[829,11,886,9],[830,8,888,6],[830,15,888,13],[831,10,889,8],[831,13,889,11,"prev"],[831,17,889,15],[832,10,890,8,"enemies"],[832,17,890,15],[832,19,890,17,"damagedEnemies"],[833,8,891,6],[833,9,891,7],[834,6,892,4],[834,7,892,5],[834,8,892,6],[835,4,893,2],[835,5,893,3],[837,4,895,2],[838,4,896,2],[838,8,896,8,"spawnEnemy"],[838,18,896,18],[838,21,896,22,"position"],[838,29,896,57],[838,33,896,75],[839,6,897,4],[839,10,897,10,"SCREEN_WIDTH"],[839,22,897,22],[839,25,897,25],[839,28,897,28],[840,6,898,4],[840,10,898,10,"GAME_AREA_HEIGHT"],[840,26,898,26],[840,29,898,29],[840,32,898,32],[840,35,898,35],[840,38,898,38],[840,39,898,39],[840,40,898,40],[841,6,899,4],[841,10,899,10,"ENEMY_SIZE"],[841,20,899,20],[841,23,899,23],[841,25,899,25],[843,6,901,4],[844,6,902,4],[844,10,902,10,"x"],[844,11,902,11],[844,14,902,14,"position"],[844,22,902,22],[844,24,902,24,"x"],[844,25,902,25],[844,29,902,29,"Math"],[844,33,902,33],[844,34,902,34,"random"],[844,40,902,40],[844,41,902,41],[844,42,902,42],[844,46,902,46,"SCREEN_WIDTH"],[844,58,902,58],[844,61,902,61,"ENEMY_SIZE"],[844,71,902,71],[844,74,902,74],[844,75,902,75],[844,76,902,76],[844,79,902,79,"ENEMY_SIZE"],[844,89,902,89],[845,6,903,4],[845,10,903,10,"y"],[845,11,903,11],[845,14,903,14,"position"],[845,22,903,22],[845,24,903,24,"y"],[845,25,903,25],[845,29,903,29,"Math"],[845,33,903,33],[845,34,903,34,"random"],[845,40,903,40],[845,41,903,41],[845,42,903,42],[845,46,903,46,"GAME_AREA_HEIGHT"],[845,62,903,62],[845,65,903,65,"ENEMY_SIZE"],[845,75,903,75],[845,78,903,78],[845,79,903,79],[845,80,903,80],[845,83,903,83,"ENEMY_SIZE"],[845,93,903,93],[846,6,905,4],[846,10,905,10,"enemy"],[846,15,905,28],[846,18,905,31],[847,8,906,6,"id"],[847,10,906,8],[847,12,906,10],[847,21,906,19],[847,23,906,21,"enemyCounter"],[847,35,906,33],[847,37,906,35],[848,8,907,6,"name"],[848,12,907,10],[848,14,907,12],[848,24,907,22],[849,8,908,6,"health"],[849,14,908,12],[849,16,908,14],[849,19,908,17],[850,8,909,6,"maxHealth"],[850,17,909,15],[850,19,909,17],[850,22,909,20],[851,8,910,6,"stats"],[851,13,910,11],[851,15,910,13],[852,10,911,8,"attack"],[852,16,911,14],[852,18,911,16],[852,20,911,18],[853,10,912,8,"defense"],[853,17,912,15],[853,19,912,17],[853,21,912,19],[854,10,913,8,"health"],[854,16,913,14],[854,18,913,16],[854,21,913,19],[855,10,914,8,"maxHealth"],[855,19,914,17],[855,21,914,19],[855,24,914,22],[856,10,915,8,"critChance"],[856,20,915,18],[856,22,915,20],[856,23,915,21],[857,10,916,8,"critDamage"],[857,20,916,18],[857,22,916,20],[857,25,916,23],[858,10,917,8,"cooldownReduction"],[858,27,917,25],[858,29,917,27],[859,8,918,6],[859,9,918,7],[860,8,919,6,"position"],[860,16,919,14],[860,18,919,16],[861,10,919,18,"x"],[861,11,919,19],[862,10,919,21,"y"],[863,8,919,23],[863,9,919,24],[864,8,920,6,"lastDamaged"],[864,19,920,17],[864,21,920,19],[865,6,921,4],[865,7,921,5],[866,6,923,4,"setCombatState"],[866,20,923,18],[866,21,923,19,"prev"],[866,25,923,23],[866,30,923,28],[867,8,924,6],[867,11,924,9,"prev"],[867,15,924,13],[868,8,925,6,"enemies"],[868,15,925,13],[868,17,925,15],[868,18,925,16],[868,21,925,19,"prev"],[868,25,925,23],[868,26,925,24,"enemies"],[868,33,925,31],[868,35,925,33,"enemy"],[868,40,925,38],[869,6,926,4],[869,7,926,5],[869,8,926,6],[869,9,926,7],[870,6,928,4],[870,13,928,11,"enemy"],[870,18,928,16],[871,4,929,2],[871,5,929,3],[873,4,931,2],[874,4,932,2],[874,8,932,8,"spawnBoss"],[874,17,932,17],[874,20,932,21,"bossEnemy"],[874,29,932,43],[874,33,932,48],[875,6,933,4,"console"],[875,13,933,11],[875,14,933,12,"log"],[875,17,933,15],[875,18,933,16],[875,39,933,37,"bossEnemy"],[875,48,933,46],[875,49,933,47,"name"],[875,53,933,51],[875,90,933,88],[875,91,933,89],[876,6,934,4,"setCombatState"],[876,20,934,18],[876,21,934,19,"prev"],[876,25,934,23],[876,30,934,28],[877,8,935,6],[877,11,935,9,"prev"],[877,15,935,13],[878,8,936,6,"enemies"],[878,15,936,13],[878,17,936,15],[878,18,936,16,"bossEnemy"],[878,27,936,25],[878,28,936,26],[878,29,936,27],[879,6,937,4],[879,7,937,5],[879,8,937,6],[879,9,937,7],[880,4,938,2],[880,5,938,3],[882,4,940,2],[883,4,941,2],[883,8,941,8,"clearSpecificEnemy"],[883,26,941,26],[883,29,941,30,"enemyId"],[883,36,941,45],[883,40,941,50],[884,6,942,4,"setCombatState"],[884,20,942,18],[884,21,942,19,"prev"],[884,25,942,23],[884,30,942,28],[885,8,943,6],[885,11,943,9,"prev"],[885,15,943,13],[886,8,944,6,"enemies"],[886,15,944,13],[886,17,944,15,"prev"],[886,21,944,19],[886,22,944,20,"enemies"],[886,29,944,27],[886,30,944,28,"filter"],[886,36,944,34],[886,37,944,35,"enemy"],[886,42,944,40],[886,46,944,44,"enemy"],[886,51,944,49],[886,52,944,50,"id"],[886,54,944,52],[886,59,944,57,"enemyId"],[886,66,944,64],[887,6,945,4],[887,7,945,5],[887,8,945,6],[887,9,945,7],[888,4,946,2],[888,5,946,3],[890,4,948,2],[891,4,949,2],[891,8,949,8,"useAbilityManually"],[891,26,949,26],[891,29,949,26,"_s3"],[891,32,949,26],[891,33,949,29],[891,37,949,29,"useCallback"],[891,43,949,40],[891,44,949,40,"useCallback"],[891,55,949,40],[891,57,949,40,"_s3"],[891,60,949,40],[891,61,949,42,"slotIndex"],[891,70,949,59],[891,74,949,73],[892,6,949,73,"_s3"],[892,9,949,73],[893,6,950,4,"console"],[893,13,950,11],[893,14,950,12,"log"],[893,17,950,15],[893,18,950,16],[893,53,950,51,"slotIndex"],[893,62,950,60],[893,64,950,62],[893,65,950,63],[895,6,952,4],[896,6,953,4],[896,10,953,10,"isReady"],[896,17,953,17],[896,20,953,20,"combatState"],[896,31,953,31],[896,32,953,32,"abilityManager"],[896,46,953,46],[896,47,953,47,"isAbilityReady"],[896,61,953,61],[896,62,953,62,"slotIndex"],[896,71,953,71],[896,72,953,72],[897,6,954,4],[897,10,954,8],[897,11,954,9,"isReady"],[897,18,954,16],[897,20,954,18],[898,8,955,6,"console"],[898,15,955,13],[898,16,955,14,"log"],[898,19,955,17],[898,20,955,18],[898,41,955,39,"slotIndex"],[898,50,955,48],[898,85,955,83],[898,86,955,84],[899,8,956,6],[899,15,956,13],[899,20,956,18],[900,6,957,4],[902,6,959,4],[903,6,960,4],[903,10,960,8,"combatState"],[903,21,960,19],[903,22,960,20,"enemies"],[903,29,960,27],[903,30,960,28,"length"],[903,36,960,34],[903,41,960,39],[903,42,960,40],[903,44,960,42],[904,8,961,6,"console"],[904,15,961,13],[904,16,961,14,"log"],[904,19,961,17],[904,20,961,18],[904,69,961,67],[904,70,961,68],[905,8,962,6],[905,15,962,13],[905,20,962,18],[906,6,963,4],[908,6,965,4],[909,6,966,4],[909,10,966,10,"currentTick"],[909,21,966,21],[909,24,966,24,"combatEngine"],[909,43,966,36],[909,44,966,36,"combatEngine"],[909,56,966,36],[909,57,966,37,"getCurrentTick"],[909,71,966,51],[909,72,966,52],[909,73,966,53],[910,6,967,4],[910,10,967,10,"success"],[910,17,967,17],[910,20,967,20,"combatState"],[910,31,967,31],[910,32,967,32,"abilityManager"],[910,46,967,46],[910,47,967,47,"useAbility"],[910,57,967,57],[910,58,967,58,"slotIndex"],[910,67,967,67],[910,69,967,69,"currentTick"],[910,80,967,80],[910,81,967,81],[911,6,969,4],[911,10,969,8,"success"],[911,17,969,15],[911,19,969,17],[912,8,970,6],[913,8,971,6,"setCombatState"],[913,22,971,20],[913,23,971,21,"prev"],[913,27,971,25],[913,31,971,29],[914,10,972,8],[914,14,972,14,"newState"],[914,22,972,22],[914,25,972,25],[915,12,972,27],[915,15,972,30,"prev"],[916,10,972,35],[916,11,972,36],[917,10,973,8,"castAbility"],[917,21,973,19],[917,22,973,20,"newState"],[917,30,973,28],[917,32,973,30,"slotIndex"],[917,41,973,39],[917,42,973,40],[918,10,974,8],[918,17,974,15,"newState"],[918,25,974,23],[919,8,975,6],[919,9,975,7],[919,10,975,8],[920,8,977,6,"console"],[920,15,977,13],[920,16,977,14,"log"],[920,19,977,17],[920,20,977,18],[920,65,977,63,"slotIndex"],[920,74,977,72],[920,76,977,74],[920,77,977,75],[921,8,978,6],[921,15,978,13],[921,19,978,17],[922,6,979,4],[922,7,979,5],[922,13,979,11],[923,8,980,6,"console"],[923,15,980,13],[923,16,980,14,"log"],[923,19,980,17],[923,20,980,18],[923,61,980,59,"slotIndex"],[923,70,980,68],[923,72,980,70],[923,73,980,71],[924,8,981,6],[924,15,981,13],[924,20,981,18],[925,6,982,4],[926,4,983,2],[926,5,983,3],[926,46,983,5],[926,47,983,6,"combatState"],[926,58,983,17],[926,59,983,18,"abilityManager"],[926,73,983,32],[926,75,983,34,"combatState"],[926,86,983,45],[926,87,983,46,"enemies"],[926,94,983,53],[926,95,983,54],[926,96,983,55],[927,4,984,2],[927,8,984,2,"useEffect"],[927,14,984,11],[927,15,984,11,"useEffect"],[927,24,984,11],[927,26,984,12],[927,32,984,18],[928,6,985,4,"combatEngine"],[928,25,985,16],[928,26,985,16,"combatEngine"],[928,38,985,16],[928,39,985,17,"start"],[928,44,985,22],[928,45,985,23],[928,46,985,24],[930,6,987,4],[931,6,988,4],[932,6,989,4,"console"],[932,13,989,11],[932,14,989,12,"log"],[932,17,989,15],[932,18,989,16],[932,97,989,95],[932,98,989,96],[933,6,991,4],[933,13,991,11],[933,19,991,17],[934,8,992,6,"combatEngine"],[934,27,992,18],[934,28,992,18,"combatEngine"],[934,40,992,18],[934,41,992,19,"stop"],[934,45,992,23],[934,46,992,24],[934,47,992,25],[935,6,993,4],[935,7,993,5],[936,4,994,2],[936,5,994,3],[936,7,994,5],[936,9,994,7],[936,10,994,8],[938,4,996,2],[939,4,997,2],[939,8,997,2,"useEffect"],[939,14,997,11],[939,15,997,11,"useEffect"],[939,24,997,11],[939,26,997,12],[939,32,997,18],[940,6,998,4],[940,10,998,10,"processProjectileImpacts"],[940,34,998,34],[940,37,998,37,"processProjectileImpacts"],[940,38,998,37],[940,43,998,43],[941,8,999,6,"setProjectiles"],[941,22,999,20],[941,23,999,21,"currentProjectiles"],[941,41,999,39],[941,45,999,43],[942,10,1000,8],[942,17,1000,15,"currentProjectiles"],[942,35,1000,33],[942,36,1000,34,"map"],[942,39,1000,37],[942,40,1000,38,"projectile"],[942,50,1000,48],[942,54,1000,52],[943,12,1001,10],[943,16,1001,14],[943,17,1001,15,"projectile"],[943,27,1001,25],[943,29,1001,27],[943,36,1001,34],[943,40,1001,38],[945,12,1003,10],[946,12,1004,10],[946,16,1004,16,"currentTime"],[946,27,1004,27],[946,30,1004,30,"Date"],[946,34,1004,34],[946,35,1004,35,"now"],[946,38,1004,38],[946,39,1004,39],[946,40,1004,40],[947,12,1005,10],[947,16,1005,16,"startTime"],[947,25,1005,25],[947,28,1005,28,"projectile"],[947,38,1005,38],[947,39,1005,39,"startTime"],[947,48,1005,48],[947,52,1005,52,"currentTime"],[947,63,1005,63],[948,12,1006,10],[948,16,1006,16,"elapsedTime"],[948,27,1006,27],[948,30,1006,30,"currentTime"],[948,41,1006,41],[948,44,1006,44,"startTime"],[948,53,1006,53],[949,12,1007,10],[949,16,1007,16,"progress"],[949,24,1007,24],[949,27,1007,27,"Math"],[949,31,1007,31],[949,32,1007,32,"min"],[949,35,1007,35],[949,36,1007,36,"elapsedTime"],[949,47,1007,47],[949,51,1007,51,"projectile"],[949,61,1007,61],[949,62,1007,62,"duration"],[949,70,1007,70],[949,74,1007,74],[949,77,1007,77],[949,78,1007,78],[949,80,1007,80],[949,81,1007,81],[949,82,1007,82],[951,12,1009,10],[952,12,1010,10],[952,16,1010,14,"progress"],[952,24,1010,22],[952,28,1010,26],[952,29,1010,27],[952,33,1010,31],[952,34,1010,32,"projectile"],[952,44,1010,42],[952,45,1010,43,"hasHit"],[952,51,1010,49],[952,53,1010,51],[953,14,1011,12,"projectile"],[953,24,1011,22],[953,25,1011,23,"hasHit"],[953,31,1011,29],[953,34,1011,32],[953,38,1011,36],[954,14,1013,12,"console"],[954,21,1013,19],[954,22,1013,20,"log"],[954,25,1013,23],[954,26,1013,24],[954,51,1013,49,"projectile"],[954,61,1013,59],[954,62,1013,60,"abilityName"],[954,73,1013,71],[954,87,1013,85,"projectile"],[954,97,1013,95],[954,98,1013,96,"targetEnemyId"],[954,111,1013,109],[954,119,1013,117,"projectile"],[954,129,1013,127],[954,130,1013,128,"damage"],[954,136,1013,134],[954,145,1013,143],[954,146,1013,144],[956,14,1015,12],[957,14,1016,12,"setCombatState"],[957,28,1016,26],[957,29,1016,27,"prev"],[957,33,1016,31],[957,37,1016,35],[958,16,1017,14],[958,20,1017,20,"newState"],[958,28,1017,28],[958,31,1017,31],[959,18,1017,33],[959,21,1017,36,"prev"],[960,16,1017,41],[960,17,1017,42],[961,16,1018,14],[961,20,1018,20,"enemyIndex"],[961,30,1018,30],[961,33,1018,33,"newState"],[961,41,1018,41],[961,42,1018,42,"enemies"],[961,49,1018,49],[961,50,1018,50,"findIndex"],[961,59,1018,59],[961,60,1018,60,"e"],[961,61,1018,61],[961,65,1018,65,"e"],[961,66,1018,66],[961,67,1018,67,"id"],[961,69,1018,69],[961,74,1018,74,"projectile"],[961,84,1018,84],[961,85,1018,85,"targetEnemyId"],[961,98,1018,98],[961,99,1018,99],[962,16,1020,14],[962,20,1020,18,"enemyIndex"],[962,30,1020,28],[962,34,1020,32],[962,35,1020,33],[962,39,1020,37,"newState"],[962,47,1020,45],[962,48,1020,46,"enemies"],[962,55,1020,53],[962,56,1020,54,"enemyIndex"],[962,66,1020,64],[962,67,1020,65],[962,68,1020,66,"health"],[962,74,1020,72],[962,77,1020,75],[962,78,1020,76],[962,80,1020,78],[963,18,1021,16,"newState"],[963,26,1021,24],[963,27,1021,25,"enemies"],[963,34,1021,32],[963,37,1021,35],[963,38,1021,36],[963,41,1021,39,"newState"],[963,49,1021,47],[963,50,1021,48,"enemies"],[963,57,1021,55],[963,58,1021,56],[964,18,1022,16],[964,22,1022,22,"enemy"],[964,27,1022,27],[964,30,1022,30,"newState"],[964,38,1022,38],[964,39,1022,39,"enemies"],[964,46,1022,46],[964,47,1022,47,"enemyIndex"],[964,57,1022,57],[964,58,1022,58],[965,18,1023,16],[965,22,1023,22,"newHealth"],[965,31,1023,31],[965,34,1023,34,"Math"],[965,38,1023,38],[965,39,1023,39,"max"],[965,42,1023,42],[965,43,1023,43],[965,44,1023,44],[965,46,1023,46,"enemy"],[965,51,1023,51],[965,52,1023,52,"health"],[965,58,1023,58],[965,61,1023,61,"projectile"],[965,71,1023,71],[965,72,1023,72,"damage"],[965,78,1023,78],[965,79,1023,79],[966,18,1025,16,"newState"],[966,26,1025,24],[966,27,1025,25,"enemies"],[966,34,1025,32],[966,35,1025,33,"enemyIndex"],[966,45,1025,43],[966,46,1025,44],[966,49,1025,47],[967,20,1026,18],[967,23,1026,21,"enemy"],[967,28,1026,26],[968,20,1027,18,"health"],[968,26,1027,24],[968,28,1027,26,"newHealth"],[968,37,1027,35],[969,20,1028,18,"lastDamaged"],[969,31,1028,29],[969,33,1028,31,"combatEngine"],[969,52,1028,43],[969,53,1028,43,"combatEngine"],[969,65,1028,43],[969,66,1028,44,"getCurrentTick"],[969,80,1028,58],[969,81,1028,59],[970,18,1029,16],[970,19,1029,17],[971,18,1031,16,"console"],[971,25,1031,23],[971,26,1031,24,"log"],[971,29,1031,27],[971,30,1031,28],[971,52,1031,50,"enemy"],[971,57,1031,55],[971,58,1031,56,"name"],[971,62,1031,60],[971,74,1031,72,"newHealth"],[971,83,1031,81],[971,87,1031,85,"enemy"],[971,92,1031,90],[971,93,1031,91,"maxHealth"],[971,102,1031,100],[971,104,1031,102],[971,105,1031,103],[973,18,1033,16],[974,18,1034,16],[974,22,1034,20,"newHealth"],[974,31,1034,29],[974,35,1034,33],[974,36,1034,34],[974,40,1034,38,"enemy"],[974,45,1034,43],[974,46,1034,44,"health"],[974,52,1034,50],[974,55,1034,53],[974,56,1034,54],[974,58,1034,56],[975,20,1035,18,"console"],[975,27,1035,25],[975,28,1035,26,"log"],[975,31,1035,29],[975,32,1035,30],[975,55,1035,53,"enemy"],[975,60,1035,58],[975,61,1035,59,"name"],[975,65,1035,63],[975,79,1035,77,"projectile"],[975,89,1035,87],[975,90,1035,88,"abilityName"],[975,101,1035,99],[975,104,1035,102],[975,105,1035,103],[976,20,1036,18,"setTimeout"],[976,30,1036,28],[976,31,1036,29],[976,37,1036,35,"handleEnemyKill"],[976,52,1036,50],[976,53,1036,51,"enemy"],[976,58,1036,56],[976,59,1036,57],[976,61,1036,59],[976,62,1036,60],[976,63,1036,61],[977,18,1037,16],[978,16,1038,14],[979,16,1040,14],[979,23,1040,21,"newState"],[979,31,1040,29],[980,14,1041,12],[980,15,1041,13],[980,16,1041,14],[981,12,1042,10],[983,12,1044,10],[984,12,1045,10],[984,16,1045,14,"progress"],[984,24,1045,22],[984,28,1045,26],[984,31,1045,29],[984,33,1045,31],[985,14,1046,12],[985,21,1046,19],[985,25,1046,23],[986,12,1047,10],[987,12,1049,10],[987,19,1049,17,"projectile"],[987,29,1049,27],[988,10,1050,8],[988,11,1050,9],[988,12,1050,10],[988,13,1050,11,"filter"],[988,19,1050,17],[988,20,1050,18,"Boolean"],[988,27,1050,25],[988,28,1050,26],[989,8,1051,6],[989,9,1051,7],[989,10,1051,8],[990,6,1052,4],[990,7,1052,5],[992,6,1054,4],[993,6,1055,4],[993,10,1055,10,"impactInterval"],[993,24,1055,24],[993,27,1055,27,"setInterval"],[993,38,1055,38],[993,39,1055,39,"processProjectileImpacts"],[993,63,1055,63],[993,65,1055,65],[993,67,1055,67],[993,68,1055,68],[994,6,1056,4],[994,13,1056,11],[994,19,1056,17,"clearInterval"],[994,32,1056,30],[994,33,1056,31,"impactInterval"],[994,47,1056,45],[994,48,1056,46],[995,4,1057,2],[995,5,1057,3],[995,7,1057,5],[995,8,1057,6,"handleEnemyKill"],[995,23,1057,21],[995,24,1057,22],[995,25,1057,23],[997,4,1059,2],[998,4,1060,2],[998,8,1060,8,"saveAbilityData"],[998,23,1060,23],[998,26,1060,26],[998,30,1060,26,"useCallback"],[998,36,1060,37],[998,37,1060,37,"useCallback"],[998,48,1060,37],[998,50,1060,38],[998,56,1060,44],[999,6,1061,4],[999,10,1061,8,"combatState"],[999,21,1061,19],[999,22,1061,20,"abilityManager"],[999,36,1061,34],[999,38,1061,36],[1000,8,1062,6],[1000,12,1062,12,"abilityData"],[1000,23,1062,23],[1000,26,1062,26,"combatState"],[1000,37,1062,37],[1000,38,1062,38,"abilityManager"],[1000,52,1062,52],[1000,53,1062,53,"getSaveData"],[1000,64,1062,64],[1000,65,1062,65],[1000,66,1062,66],[1001,8,1063,6,"console"],[1001,15,1063,13],[1001,16,1063,14,"log"],[1001,19,1063,17],[1001,20,1063,18],[1001,70,1063,68],[1001,72,1063,70,"abilityData"],[1001,83,1063,81],[1001,84,1063,82],[1002,8,1064,6,"game"],[1002,12,1064,10],[1002,13,1064,11,"updateAbilityData"],[1002,30,1064,28],[1002,31,1064,29,"abilityData"],[1002,42,1064,40],[1002,43,1064,41],[1003,6,1065,4],[1004,4,1066,2],[1004,5,1066,3],[1004,7,1066,5],[1004,8,1066,6,"combatState"],[1004,19,1066,17],[1004,20,1066,18,"abilityManager"],[1004,34,1066,32],[1004,36,1066,34,"game"],[1004,40,1066,38],[1004,41,1066,39,"updateAbilityData"],[1004,58,1066,56],[1004,59,1066,57],[1004,60,1066,58],[1005,4,1068,2],[1005,8,1068,8,"contextValue"],[1005,20,1068,39],[1005,23,1068,42,"React"],[1005,28,1068,47],[1005,29,1068,47,"default"],[1005,36,1068,47],[1005,37,1068,48,"useMemo"],[1005,44,1068,55],[1005,45,1068,56],[1005,52,1068,63],[1006,6,1069,4,"combatState"],[1006,17,1069,15],[1007,6,1070,4,"projectiles"],[1007,17,1070,15],[1008,6,1071,4,"startCombat"],[1008,17,1071,15],[1009,6,1072,4,"stopCombat"],[1009,16,1072,14],[1010,6,1073,4,"equipAbility"],[1010,18,1073,16],[1011,6,1074,4,"handleEnemyKill"],[1011,21,1074,19],[1012,6,1075,4,"getDeck"],[1012,13,1075,11],[1013,6,1076,4,"getAvailableAbilities"],[1013,27,1076,25],[1014,6,1077,4,"upgradeAbility"],[1014,20,1077,18],[1015,6,1078,4,"spawnEnemy"],[1015,16,1078,14],[1016,6,1079,4,"spawnBoss"],[1016,15,1079,13],[1017,6,1080,4,"clearAllEnemies"],[1017,21,1080,19],[1018,6,1081,4,"clearSpecificEnemy"],[1018,24,1081,22],[1019,6,1082,4,"triggerLevelUpExplosion"],[1019,29,1082,27],[1020,6,1083,4,"findClosestEnemy"],[1020,22,1083,20],[1021,6,1084,4,"updateNinjaPosition"],[1021,25,1084,23],[1022,6,1085,4,"setManualControlActive"],[1022,28,1085,26],[1023,6,1086,4,"lastExplosionTime"],[1023,23,1086,21],[1024,6,1087,4,"useAbilityManually"],[1024,24,1087,22],[1025,6,1087,24],[1026,6,1088,4,"saveAbilityData"],[1026,21,1088,19],[1027,6,1088,21],[1028,6,1089,4,"shadowClone"],[1028,17,1089,15],[1028,19,1089,17,"combatState"],[1028,30,1089,28],[1028,31,1089,29,"shadowClone"],[1028,42,1089,40],[1028,43,1089,42],[1029,4,1090,2],[1029,5,1090,3],[1029,6,1090,4],[1029,8,1090,6],[1030,4,1091,4],[1031,4,1092,4],[1032,4,1093,4,"combatState"],[1032,15,1093,15],[1032,17,1094,4,"projectiles"],[1032,28,1094,15],[1032,30,1095,4,"lastExplosionTime"],[1032,47,1095,21],[1033,4,1096,4],[1034,4,1097,4,"combatState"],[1034,15,1097,15],[1034,16,1097,16,"abilityManager"],[1034,30,1097,30],[1034,32,1098,4,"combatState"],[1034,43,1098,15],[1034,44,1098,16,"enemies"],[1034,51,1098,23],[1034,53,1099,4,"combatState"],[1034,64,1099,15],[1034,65,1099,16,"shadowClone"],[1034,76,1099,27],[1035,4,1099,29],[1036,4,1100,4,"useAbilityManually"],[1036,22,1100,22],[1037,4,1100,24],[1038,4,1101,4,"saveAbilityData"],[1038,19,1101,19],[1038,20,1101,21],[1039,4,1101,21],[1039,5,1102,3],[1039,6,1102,4],[1040,4,1104,2],[1040,24,1105,4],[1040,28,1105,4,"_reactJsxDevRuntime"],[1040,47,1105,4],[1040,48,1105,4,"jsxDEV"],[1040,54,1105,4],[1040,56,1105,5,"CombatContext"],[1040,69,1105,18],[1040,70,1105,19,"Provider"],[1040,78,1105,27],[1041,6,1105,28,"value"],[1041,11,1105,33],[1041,13,1105,35,"contextValue"],[1041,25,1105,48],[1042,6,1105,48,"children"],[1042,14,1105,48],[1042,16,1106,7,"children"],[1043,4,1106,15],[1044,6,1106,15,"fileName"],[1044,14,1106,15],[1044,16,1106,15,"_jsxFileName"],[1044,28,1106,15],[1045,6,1106,15,"lineNumber"],[1045,16,1106,15],[1046,6,1106,15,"columnNumber"],[1046,18,1106,15],[1047,4,1106,15],[1047,11,1107,28],[1047,12,1107,29],[1048,2,1109,0],[1048,3,1109,1],[1049,2,1109,2,"_s4"],[1049,5,1109,2],[1049,6,100,13,"CombatProvider"],[1049,20,100,27],[1050,4,100,27],[1050,12,101,15,"useGame"],[1050,24,101,22],[1050,25,101,22,"useGame"],[1050,32,101,22],[1050,34,102,77,"useZone"],[1050,46,102,84],[1050,47,102,84,"useZone"],[1050,54,102,84],[1051,2,102,84],[1052,2,102,84,"_c"],[1052,4,102,84],[1052,7,100,13,"CombatProvider"],[1052,21,100,27],[1053,2,100,27],[1053,6,100,27,"_c"],[1053,8,100,27],[1054,2,100,27,"$RefreshReg$"],[1054,14,100,27],[1054,15,100,27,"_c"],[1054,17,100,27],[1055,0,100,27],[1055,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;OR4E;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}