{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      var xpMultiplier = gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":868,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,901,2],[27,6,901,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,901,2],[27,42,901,2,"require"],[27,49,901,2],[27,50,901,2,"_dependencyMap"],[27,64,901,2],[28,2,901,2],[28,6,901,2,"_slicedToArray"],[28,20,901,2],[28,23,901,2,"_interopDefault"],[28,38,901,2],[28,39,901,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,901,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,86,0],[37,6,86,6,"CombatContext"],[37,19,86,19],[37,35,86,22],[37,39,86,22,"createContext"],[37,45,86,35],[37,46,86,35,"createContext"],[37,59,86,35],[37,61,86,67,"undefined"],[37,70,86,76],[37,71,86,77],[38,2,88,7],[38,6,88,13,"useCombat"],[38,15,88,22],[38,18,88,25,"useCombat"],[38,19,88,25],[38,24,88,50],[39,4,88,50,"_s"],[39,6,88,50],[40,4,89,2],[40,8,89,8,"context"],[40,15,89,15],[40,18,89,18],[40,22,89,18,"useContext"],[40,28,89,28],[40,29,89,28,"useContext"],[40,39,89,28],[40,41,89,29,"CombatContext"],[40,54,89,42],[40,55,89,43],[41,4,90,2],[41,8,90,6],[41,9,90,7,"context"],[41,16,90,14],[41,18,90,16],[42,6,91,4],[42,12,91,10],[42,16,91,14,"Error"],[42,21,91,19],[42,22,91,20],[42,70,91,68],[42,71,91,69],[43,4,92,2],[44,4,93,2],[44,11,93,9,"context"],[44,18,93,16],[45,2,94,0],[45,3,94,1],[46,2,94,2,"_s"],[46,4,94,2],[46,5,88,13,"useCombat"],[46,14,88,22],[47,2,96,0],[47,6,96,4,"enemyCounter"],[47,18,96,16],[47,21,96,19],[47,22,96,20],[47,23,96,21],[47,24,96,22],[49,2,98,7],[49,6,98,13,"CombatProvider"],[49,20,98,27],[49,23,98,30,"_ref"],[49,27,98,30],[49,31,98,73],[50,4,98,73,"_s4"],[50,7,98,73],[51,4,98,73],[51,8,98,73,"_s3"],[51,11,98,73],[51,14,98,73,"$RefreshSig$"],[51,26,98,73],[52,4,98,73],[52,8,98,33,"children"],[52,16,98,41],[52,19,98,41,"_ref"],[52,23,98,41],[52,24,98,33,"children"],[52,32,98,41],[53,4,99,2],[53,8,99,8,"game"],[53,12,99,12],[53,15,99,15],[53,19,99,15,"useGame"],[53,31,99,22],[53,32,99,22,"useGame"],[53,39,99,22],[53,41,99,23],[53,42,99,24],[54,4,100,2],[54,8,100,2,"_useZone"],[54,16,100,2],[54,19,100,77],[54,23,100,77,"useZone"],[54,35,100,84],[54,36,100,84,"useZone"],[54,43,100,84],[54,45,100,85],[54,46,100,86],[55,6,100,10,"currentZone"],[55,17,100,21],[55,20,100,21,"_useZone"],[55,28,100,21],[55,29,100,10,"currentZone"],[55,40,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[56,25,100,39,"_useZone"],[56,33,100,39],[56,34,100,23,"currentZoneLevel"],[56,50,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[57,24,100,56,"_useZone"],[57,32,100,56],[57,33,100,41,"recordEnemyKill"],[57,48,100,56],[58,6,100,58,"spawnZoneEnemy"],[58,20,100,72],[58,23,100,72,"_useZone"],[58,31,100,72],[58,32,100,58,"spawnZoneEnemy"],[58,46,100,72],[60,4,102,2],[61,4,103,2],[61,8,103,8,"initialCombatState"],[61,26,103,39],[61,29,103,42],[62,6,104,4,"isInCombat"],[62,16,104,14],[62,18,104,16],[62,23,104,21],[63,6,105,4,"currentTick"],[63,17,105,15],[63,19,105,17],[63,20,105,18],[64,6,106,4,"enemies"],[64,13,106,11],[64,15,106,13],[64,17,106,15],[65,6,107,4,"abilityManager"],[65,20,107,18],[65,22,107,20],[65,26,107,24,"AbilityManager"],[65,44,107,38],[65,45,107,38,"AbilityManager"],[65,59,107,38],[65,60,107,39],[65,61,107,40],[66,6,108,4,"statusEffects"],[66,19,108,17],[66,21,108,19],[66,25,108,23,"StatusEffectManager"],[66,44,108,42],[66,45,108,42,"StatusEffectManager"],[66,64,108,42],[66,65,108,43],[66,66,108,44],[67,6,109,4,"playerStats"],[67,17,109,15],[67,19,109,17],[68,8,110,6,"attack"],[68,14,110,12],[68,16,110,14],[68,18,110,16],[69,8,110,18],[70,8,111,6,"defense"],[70,15,111,13],[70,17,111,15],[70,18,111,16],[71,8,112,6,"health"],[71,14,112,12],[71,16,112,14],[71,19,112,17],[72,8,113,6,"maxHealth"],[72,17,113,15],[72,19,113,17],[72,22,113,20],[73,8,114,6,"critChance"],[73,18,114,16],[73,20,114,18],[73,21,114,19],[74,8,115,6,"critDamage"],[74,18,115,16],[74,20,115,18],[74,23,115,21],[75,8,116,6,"cooldownReduction"],[75,25,116,23],[75,27,116,25],[76,6,117,4],[77,4,118,2],[77,5,118,3],[78,4,120,2],[78,8,120,2,"_useState"],[78,17,120,2],[78,20,120,40],[78,24,120,40,"useState"],[78,30,120,48],[78,31,120,48,"useState"],[78,39,120,48],[78,41,120,62,"initialCombatState"],[78,59,120,80],[78,60,120,81],[79,6,120,81,"_useState2"],[79,16,120,81],[79,23,120,81,"_slicedToArray"],[79,37,120,81],[79,38,120,81,"default"],[79,45,120,81],[79,47,120,81,"_useState"],[79,56,120,81],[80,6,120,9,"combatState"],[80,17,120,20],[80,20,120,20,"_useState2"],[80,30,120,20],[81,6,120,22,"setCombatState"],[81,20,120,36],[81,23,120,36,"_useState2"],[81,33,120,36],[83,4,122,2],[84,4,123,2],[84,8,123,2,"useEffect"],[84,14,123,11],[84,15,123,11,"useEffect"],[84,24,123,11],[84,26,123,12],[84,32,123,18],[85,6,124,4],[85,10,124,8,"game"],[85,14,124,12],[85,15,124,13,"gameState"],[85,24,124,22],[85,25,124,23,"abilityData"],[85,36,124,34],[85,40,124,38,"combatState"],[85,51,124,49],[85,52,124,50,"abilityManager"],[85,66,124,64],[85,68,124,66],[86,8,125,6,"console"],[86,15,125,13],[86,16,125,14,"log"],[86,19,125,17],[86,20,125,18],[86,68,125,66],[86,70,125,68,"game"],[86,74,125,72],[86,75,125,73,"gameState"],[86,84,125,82],[86,85,125,83,"abilityData"],[86,96,125,94],[86,97,125,95],[87,8,126,6,"combatState"],[87,19,126,17],[87,20,126,18,"abilityManager"],[87,34,126,32],[87,35,126,33,"restoreFromSaveData"],[87,54,126,52],[87,55,126,53,"game"],[87,59,126,57],[87,60,126,58,"gameState"],[87,69,126,67],[87,70,126,68,"abilityData"],[87,81,126,79],[87,82,126,80],[89,8,128,6],[90,8,129,6,"setCombatState"],[90,22,129,20],[90,23,129,21,"prev"],[90,27,129,25],[90,32,129,30],[91,10,129,32],[91,13,129,35,"prev"],[92,8,129,40],[92,9,129,41],[92,10,129,42],[92,11,129,43],[93,6,130,4],[94,4,131,2],[94,5,131,3],[94,7,131,5],[94,8,131,6,"game"],[94,12,131,10],[94,13,131,11,"gameState"],[94,22,131,20],[94,23,131,21,"abilityData"],[94,34,131,32],[94,36,131,34,"combatState"],[94,47,131,45],[94,48,131,46,"abilityManager"],[94,62,131,60],[94,63,131,61],[94,64,131,62],[95,4,133,2],[95,8,133,2,"_useState3"],[95,18,133,2],[95,21,133,40],[95,25,133,40,"useState"],[95,31,133,48],[95,32,133,48,"useState"],[95,40,133,48],[95,42,133,69],[95,44,133,71],[95,45,133,72],[96,6,133,72,"_useState4"],[96,16,133,72],[96,23,133,72,"_slicedToArray"],[96,37,133,72],[96,38,133,72,"default"],[96,45,133,72],[96,47,133,72,"_useState3"],[96,57,133,72],[97,6,133,9,"projectiles"],[97,17,133,20],[97,20,133,20,"_useState4"],[97,30,133,20],[98,6,133,22,"setProjectiles"],[98,20,133,36],[98,23,133,36,"_useState4"],[98,33,133,36],[99,4,134,2],[99,8,134,2,"_useState5"],[99,18,134,2],[99,21,134,52],[99,25,134,52,"useState"],[99,31,134,60],[99,32,134,60,"useState"],[99,40,134,60],[99,42,134,69],[99,43,134,70],[99,44,134,71],[100,6,134,71,"_useState6"],[100,16,134,71],[100,23,134,71,"_slicedToArray"],[100,37,134,71],[100,38,134,71,"default"],[100,45,134,71],[100,47,134,71,"_useState5"],[100,57,134,71],[101,6,134,9,"lastExplosionTime"],[101,23,134,26],[101,26,134,26,"_useState6"],[101,36,134,26],[102,6,134,28,"setLastExplosionTime"],[102,26,134,48],[102,29,134,48,"_useState6"],[102,39,134,48],[103,4,135,2],[104,4,136,2],[106,4,138,2],[107,4,139,2],[107,8,139,8,"handleEnemyKill"],[107,23,139,23],[107,26,139,26],[107,30,139,26,"useCallback"],[107,36,139,37],[107,37,139,37,"useCallback"],[107,48,139,37],[107,50,139,39,"enemy"],[107,55,139,57],[107,59,139,62],[108,6,140,4,"console"],[108,13,140,11],[108,14,140,12,"log"],[108,17,140,15],[108,18,140,16],[108,73,140,71],[108,75,140,73,"enemy"],[108,80,140,78],[108,81,140,79,"id"],[108,83,140,81],[108,84,140,82],[110,6,142,4],[111,6,143,4],[111,10,143,10,"baseXpReward"],[111,22,143,22],[111,25,143,25],[111,27,143,27],[111,28,143,28],[111,29,143,29],[112,6,144,4],[112,10,144,10,"xpMultiplier"],[112,22,144,22],[112,25,144,25,"gameState"],[112,34,144,34],[112,35,144,35,"subscriptionBenefits"],[112,55,144,55],[112,57,144,57,"xp_multiplier"],[112,70,144,70],[112,74,144,74],[112,77,144,77],[113,6,145,4],[113,10,145,10,"dropMultiplier"],[113,24,145,24],[113,27,145,27,"gameState"],[113,36,145,36],[113,37,145,37,"subscriptionBenefits"],[113,57,145,57],[113,59,145,59,"drop_multiplier"],[113,74,145,74],[113,78,145,78],[113,81,145,81],[114,6,147,4],[114,10,147,10,"xpReward"],[114,18,147,18],[114,21,147,21,"Math"],[114,25,147,25],[114,26,147,26,"floor"],[114,31,147,31],[114,32,147,32,"baseXpReward"],[114,44,147,44],[114,47,147,47,"xpMultiplier"],[114,59,147,59],[114,60,147,60],[115,6,148,4],[115,10,148,10,"goldReward"],[115,20,148,20],[115,23,148,23,"Math"],[115,27,148,27],[115,28,148,28,"floor"],[115,33,148,33],[115,34,148,34],[115,36,148,36],[115,39,148,39,"dropMultiplier"],[115,53,148,53],[115,54,148,54],[116,6,150,4,"console"],[116,13,150,11],[116,14,150,12,"log"],[116,17,150,15],[116,18,150,16],[116,48,150,46,"xpReward"],[116,56,150,54],[116,67,150,65,"goldReward"],[116,77,150,75],[116,93,150,91],[116,94,150,92],[117,6,151,4,"console"],[117,13,151,11],[117,14,151,12,"log"],[117,17,151,15],[117,18,151,16],[117,49,151,47,"Platform"],[117,61,151,55],[117,62,151,55,"Platform"],[117,70,151,55],[117,71,151,56,"OS"],[117,73,151,58],[117,84,151,69,"Date"],[117,88,151,73],[117,89,151,74,"now"],[117,92,151,77],[117,93,151,78],[117,94,151,79],[117,96,151,81],[117,97,151,82],[119,6,153,4],[120,6,154,4],[121,6,155,4,"setTimeout"],[121,16,155,14],[121,17,155,15],[121,23,155,21],[122,8,156,6,"console"],[122,15,156,13],[122,16,156,14,"log"],[122,19,156,17],[122,20,156,18],[122,78,156,76],[122,79,156,77],[124,8,158,6],[125,8,159,6,"game"],[125,12,159,10],[125,13,159,11,"updateNinja"],[125,24,159,22],[125,25,159,24,"prev"],[125,29,159,28],[125,33,159,33],[126,10,160,8,"console"],[126,17,160,15],[126,18,160,16,"log"],[126,21,160,19],[126,22,160,20],[126,54,160,52,"prev"],[126,58,160,56],[126,59,160,57,"experience"],[126,69,160,67],[126,81,160,79,"prev"],[126,85,160,83],[126,86,160,84,"experience"],[126,96,160,94],[126,99,160,97,"xpReward"],[126,107,160,105],[126,109,160,107],[126,110,160,108],[127,10,161,8,"console"],[127,17,161,15],[127,18,161,16,"log"],[127,21,161,19],[127,22,161,20],[127,56,161,54,"prev"],[127,60,161,58],[127,61,161,59,"gold"],[127,65,161,63],[127,77,161,75,"prev"],[127,81,161,79],[127,82,161,80,"gold"],[127,86,161,84],[127,89,161,87,"goldReward"],[127,99,161,97],[127,101,161,99],[127,102,161,100],[128,10,162,8],[128,17,162,15],[129,12,163,10,"experience"],[129,22,163,20],[129,24,163,22,"prev"],[129,28,163,26],[129,29,163,27,"experience"],[129,39,163,37],[129,42,163,40,"xpReward"],[129,50,163,48],[130,12,164,10,"gold"],[130,16,164,14],[130,18,164,16,"prev"],[130,22,164,20],[130,23,164,21,"gold"],[130,27,164,25],[130,30,164,28,"goldReward"],[131,10,165,8],[131,11,165,9],[132,8,166,6],[132,9,166,7],[132,10,166,8],[134,8,168,6],[135,8,169,6],[135,12,169,12,"zoneEnemy"],[135,21,169,21],[135,24,169,24],[136,10,170,8,"id"],[136,12,170,10],[136,14,170,12,"enemy"],[136,19,170,17],[136,20,170,18,"id"],[136,22,170,20],[137,10,171,8,"typeId"],[137,16,171,14],[137,18,171,16,"enemy"],[137,23,171,21],[137,24,171,22,"zoneTypeId"],[137,34,171,32],[137,38,171,36],[137,48,171,46],[138,10,171,48],[139,10,172,8,"name"],[139,14,172,12],[139,16,172,14,"enemy"],[139,21,172,19],[139,22,172,20,"name"],[139,26,172,24],[140,10,173,8,"icon"],[140,14,173,12],[140,16,173,14],[140,20,173,18],[141,10,173,20],[142,10,174,8,"hp"],[142,12,174,10],[142,14,174,12],[142,15,174,13],[143,10,174,15],[144,10,175,8,"maxHP"],[144,15,175,13],[144,17,175,15,"enemy"],[144,22,175,20],[144,23,175,21,"maxHealth"],[144,32,175,30],[145,10,176,8,"attack"],[145,16,176,14],[145,18,176,16,"enemy"],[145,23,176,21],[145,24,176,22,"stats"],[145,29,176,27],[145,30,176,28,"attack"],[145,36,176,34],[146,10,177,8,"xp"],[146,12,177,10],[146,14,177,12,"enemy"],[146,19,177,17],[146,20,177,18,"zoneXP"],[146,26,177,24],[146,30,177,28],[146,32,177,30],[147,10,177,32],[148,10,178,8,"position"],[148,18,178,16],[148,20,178,18,"enemy"],[148,25,178,23],[148,26,178,24,"position"],[149,8,179,6],[149,9,179,7],[150,8,181,6,"console"],[150,15,181,13],[150,16,181,14,"log"],[150,19,181,17],[150,20,181,18],[150,40,181,38,"zoneEnemy"],[150,49,181,47],[150,50,181,48,"name"],[150,54,181,52],[150,59,181,57,"zoneEnemy"],[150,68,181,66],[150,69,181,67,"typeId"],[150,75,181,73],[150,113,181,111],[150,114,181,112],[151,8,182,6,"recordEnemyKill"],[151,23,182,21],[151,24,182,22,"zoneEnemy"],[151,33,182,31],[151,34,182,32],[152,6,183,4],[152,7,183,5],[152,9,183,7],[152,10,183,8],[152,11,183,9],[152,12,183,10],[152,13,183,11],[153,4,184,2],[153,5,184,3],[153,7,184,5],[153,8,184,6,"game"],[153,12,184,10],[153,13,184,11,"updateNinja"],[153,24,184,22],[153,26,184,24,"recordEnemyKill"],[153,41,184,39],[153,42,184,40],[153,43,184,41],[155,4,186,2],[156,4,187,2],[156,8,187,8,"handleCombatTick"],[156,24,187,24],[156,27,187,27,"React"],[156,32,187,32],[156,33,187,32,"default"],[156,40,187,32],[156,41,187,33,"useCallback"],[156,52,187,44],[156,53,187,45],[156,59,187,51],[157,6,187,51],[157,10,187,51,"_s2"],[157,13,187,51],[157,16,187,51,"$RefreshSig$"],[157,28,187,51],[158,6,188,4,"console"],[158,13,188,11],[158,14,188,12,"log"],[158,17,188,15],[158,18,188,16],[158,87,188,85],[158,88,188,86],[159,6,190,4],[159,10,190,8,"enemiesToKill"],[159,23,190,36],[159,26,190,39],[159,28,190,41],[159,29,190,42],[159,30,190,43],[161,6,192,4,"_s2"],[161,9,192,4],[161,10,192,4,"setCombatState"],[161,24,192,18],[161,25,192,18,"_s2"],[161,28,192,18],[161,29,192,19,"prev"],[161,33,192,23],[161,37,192,27],[162,8,192,27,"_s2"],[162,11,192,27],[163,8,193,6],[163,12,193,12,"newTick"],[163,19,193,19],[163,22,193,22,"combatEngine"],[163,41,193,34],[163,42,193,34,"combatEngine"],[163,54,193,34],[163,55,193,35,"getCurrentTick"],[163,69,193,49],[163,70,193,50],[163,71,193,51],[164,8,194,6],[164,12,194,12,"newState"],[164,20,194,20],[164,23,194,23],[165,10,194,25],[165,13,194,28,"prev"],[165,17,194,32],[166,10,194,34,"currentTick"],[166,21,194,45],[166,23,194,47,"newTick"],[167,8,194,55],[167,9,194,56],[168,8,196,6],[168,12,196,10],[168,13,196,11,"newState"],[168,21,196,19],[168,22,196,20,"isInCombat"],[168,32,196,30],[168,34,196,32],[168,41,196,39,"newState"],[168,49,196,47],[170,8,198,6],[171,8,199,6,"newState"],[171,16,199,14],[171,17,199,15,"abilityManager"],[171,31,199,29],[171,32,199,30,"updateCooldowns"],[171,47,199,45],[171,48,199,46,"newTick"],[171,55,199,53],[171,56,199,54],[173,8,201,6],[174,8,202,6],[174,12,202,12,"effectResults"],[174,25,202,25],[174,28,202,28,"newState"],[174,36,202,36],[174,37,202,37,"statusEffects"],[174,50,202,50],[174,51,202,51,"processTick"],[174,62,202,62],[174,63,202,63,"newTick"],[174,70,202,70],[174,71,202,71],[176,8,204,6],[177,8,205,6,"effectResults"],[177,21,205,19],[177,22,205,20,"forEach"],[177,29,205,27],[177,30,205,28],[177,31,205,29,"results"],[177,38,205,36],[177,40,205,38,"entityId"],[177,48,205,46],[177,53,205,51],[178,10,206,8],[178,14,206,14,"enemyIndex"],[178,24,206,24],[178,27,206,27,"newState"],[178,35,206,35],[178,36,206,36,"enemies"],[178,43,206,43],[178,44,206,44,"findIndex"],[178,53,206,53],[178,54,206,54,"e"],[178,55,206,55],[178,59,206,59,"e"],[178,60,206,60],[178,61,206,61,"id"],[178,63,206,63],[178,68,206,68,"entityId"],[178,76,206,76],[178,77,206,77],[179,10,207,8],[179,14,207,12,"enemyIndex"],[179,24,207,22],[179,28,207,26],[179,29,207,27],[179,31,207,29],[180,12,208,10,"results"],[180,19,208,17],[180,20,208,18,"forEach"],[180,27,208,25],[180,28,208,26,"result"],[180,34,208,32],[180,38,208,36],[181,14,209,12,"newState"],[181,22,209,20],[181,23,209,21,"enemies"],[181,30,209,28],[181,31,209,29,"enemyIndex"],[181,41,209,39],[181,42,209,40],[181,43,209,41,"health"],[181,49,209,47],[181,53,209,51,"result"],[181,59,209,57],[181,60,209,58,"damage"],[181,66,209,64],[182,14,210,12,"newState"],[182,22,210,20],[182,23,210,21,"enemies"],[182,30,210,28],[182,31,210,29,"enemyIndex"],[182,41,210,39],[182,42,210,40],[182,43,210,41,"lastDamaged"],[182,54,210,52],[182,57,210,55,"newTick"],[182,64,210,62],[183,12,211,10],[183,13,211,11],[183,14,211,12],[184,10,212,8],[185,8,213,6],[185,9,213,7],[185,10,213,8],[187,8,215,6],[188,8,216,6,"newState"],[188,16,216,14],[188,17,216,15,"enemies"],[188,24,216,22],[188,25,216,23,"forEach"],[188,32,216,30],[188,33,216,31,"enemy"],[188,38,216,36],[188,42,216,40],[189,10,217,8],[189,14,217,12],[189,15,217,13,"enemy"],[189,20,217,18],[189,21,217,19,"isBoss"],[189,27,217,25],[189,29,217,27],[190,12,217,29],[191,12,218,10],[192,12,219,10],[192,16,219,16,"MOVEMENT_SPEED"],[192,30,219,30],[192,33,219,33],[192,37,219,37],[192,38,219,38],[192,39,219,39],[193,12,220,10],[193,16,220,16,"SCREEN_WIDTH"],[193,28,220,28],[193,31,220,31],[193,34,220,34],[194,12,221,10],[194,16,221,16,"GAME_AREA_HEIGHT"],[194,32,221,32],[194,35,221,35],[194,38,221,38],[194,39,221,39],[194,40,221,40],[195,12,222,10],[195,16,222,16,"ENEMY_SIZE"],[195,26,222,26],[195,29,222,29],[195,31,222,31],[197,12,224,10],[198,12,225,10],[198,16,225,16,"playerX"],[198,23,225,23],[198,26,225,26,"currentNinjaPosition"],[198,46,225,46],[198,47,225,47,"x"],[198,48,225,48],[199,12,226,10],[199,16,226,16,"playerY"],[199,23,226,23],[199,26,226,26,"currentNinjaPosition"],[199,46,226,46],[199,47,226,47,"y"],[199,48,226,48],[201,12,228,10],[202,12,229,10],[202,16,229,16,"deltaX"],[202,22,229,22],[202,25,229,25,"playerX"],[202,32,229,32],[202,35,229,35,"enemy"],[202,40,229,40],[202,41,229,41,"position"],[202,49,229,49],[202,50,229,50,"x"],[202,51,229,51],[203,12,230,10],[203,16,230,16,"deltaY"],[203,22,230,22],[203,25,230,25,"playerY"],[203,32,230,32],[203,35,230,35,"enemy"],[203,40,230,40],[203,41,230,41,"position"],[203,49,230,49],[203,50,230,50,"y"],[203,51,230,51],[204,12,231,10],[204,16,231,16,"distance"],[204,24,231,24],[204,27,231,27,"Math"],[204,31,231,31],[204,32,231,32,"sqrt"],[204,36,231,36],[204,37,231,37,"deltaX"],[204,43,231,43],[204,46,231,46,"deltaX"],[204,52,231,52],[204,55,231,55,"deltaY"],[204,61,231,61],[204,64,231,64,"deltaY"],[204,70,231,70],[204,71,231,71],[206,12,233,10],[207,12,234,10],[207,16,234,14,"distance"],[207,24,234,22],[207,27,234,25],[207,29,234,27],[207,31,234,29],[208,14,235,12],[209,14,236,12],[209,18,236,18,"normalizedX"],[209,29,236,29],[209,32,236,32,"deltaX"],[209,38,236,38],[209,41,236,41,"distance"],[209,49,236,49],[210,14,237,12],[210,18,237,18,"normalizedY"],[210,29,237,29],[210,32,237,32,"deltaY"],[210,38,237,38],[210,41,237,41,"distance"],[210,49,237,49],[212,14,239,12],[213,14,240,12],[213,18,240,18,"randomFactor"],[213,30,240,30],[213,33,240,33],[213,36,240,36],[213,37,240,37],[213,38,240,38],[214,14,241,12],[214,18,241,18,"finalX"],[214,24,241,24],[214,27,241,27,"normalizedX"],[214,38,241,38],[214,41,241,41],[214,42,241,42,"Math"],[214,46,241,46],[214,47,241,47,"random"],[214,53,241,53],[214,54,241,54],[214,55,241,55],[214,58,241,58],[214,61,241,61],[214,65,241,65,"randomFactor"],[214,77,241,77],[215,14,242,12],[215,18,242,18,"finalY"],[215,24,242,24],[215,27,242,27,"normalizedY"],[215,38,242,38],[215,41,242,41],[215,42,242,42,"Math"],[215,46,242,46],[215,47,242,47,"random"],[215,53,242,53],[215,54,242,54],[215,55,242,55],[215,58,242,58],[215,61,242,61],[215,65,242,65,"randomFactor"],[215,77,242,77],[217,14,244,12],[218,14,245,12],[218,18,245,16,"newX"],[218,22,245,20],[218,25,245,23,"enemy"],[218,30,245,28],[218,31,245,29,"position"],[218,39,245,37],[218,40,245,38,"x"],[218,41,245,39],[218,44,245,43,"finalX"],[218,50,245,49],[218,53,245,52,"MOVEMENT_SPEED"],[218,67,245,67],[219,14,246,12],[219,18,246,16,"newY"],[219,22,246,20],[219,25,246,23,"enemy"],[219,30,246,28],[219,31,246,29,"position"],[219,39,246,37],[219,40,246,38,"y"],[219,41,246,39],[219,44,246,43,"finalY"],[219,50,246,49],[219,53,246,52,"MOVEMENT_SPEED"],[219,67,246,67],[221,14,248,12],[222,14,249,12,"newX"],[222,18,249,16],[222,21,249,19,"Math"],[222,25,249,23],[222,26,249,24,"max"],[222,29,249,27],[222,30,249,28],[222,31,249,29],[222,33,249,31,"Math"],[222,37,249,35],[222,38,249,36,"min"],[222,41,249,39],[222,42,249,40,"SCREEN_WIDTH"],[222,54,249,52],[222,57,249,55,"ENEMY_SIZE"],[222,67,249,65],[222,69,249,67,"newX"],[222,73,249,71],[222,74,249,72],[222,75,249,73],[223,14,250,12,"newY"],[223,18,250,16],[223,21,250,19,"Math"],[223,25,250,23],[223,26,250,24,"max"],[223,29,250,27],[223,30,250,28],[223,31,250,29],[223,33,250,31,"Math"],[223,37,250,35],[223,38,250,36,"min"],[223,41,250,39],[223,42,250,40,"GAME_AREA_HEIGHT"],[223,58,250,56],[223,61,250,59,"ENEMY_SIZE"],[223,71,250,69],[223,73,250,71,"newY"],[223,77,250,75],[223,78,250,76],[223,79,250,77],[225,14,252,12],[226,14,253,12,"enemy"],[226,19,253,17],[226,20,253,18,"position"],[226,28,253,26],[226,29,253,27,"x"],[226,30,253,28],[226,33,253,31,"newX"],[226,37,253,35],[227,14,254,12,"enemy"],[227,19,254,17],[227,20,254,18,"position"],[227,28,254,26],[227,29,254,27,"y"],[227,30,254,28],[227,33,254,31,"newY"],[227,37,254,35],[228,12,255,10],[229,12,256,10],[230,10,257,8],[231,8,258,6],[231,9,258,7],[231,10,258,8],[233,8,260,6],[234,8,261,6],[234,12,261,10,"newState"],[234,20,261,18],[234,21,261,19,"shadowClone"],[234,32,261,30],[234,34,261,32],[235,10,262,8],[236,10,263,8,"newState"],[236,18,263,16],[236,19,263,17,"shadowClone"],[236,30,263,28],[236,31,263,29,"remainingTicks"],[236,45,263,43],[236,47,263,45],[238,10,265,8],[239,10,266,8],[239,14,266,14,"cloneOffset"],[239,25,266,25],[239,28,266,28],[239,30,266,30],[239,31,266,31],[239,32,266,32],[240,10,267,8,"newState"],[240,18,267,16],[240,19,267,17,"shadowClone"],[240,30,267,28],[240,31,267,29,"position"],[240,39,267,37],[240,40,267,38,"x"],[240,41,267,39],[240,44,267,42,"currentNinjaPosition"],[240,64,267,62],[240,65,267,63,"x"],[240,66,267,64],[240,69,267,67,"cloneOffset"],[240,80,267,78],[241,10,268,8,"newState"],[241,18,268,16],[241,19,268,17,"shadowClone"],[241,30,268,28],[241,31,268,29,"position"],[241,39,268,37],[241,40,268,38,"y"],[241,41,268,39],[241,44,268,42,"currentNinjaPosition"],[241,64,268,62],[241,65,268,63,"y"],[241,66,268,64],[241,69,268,67],[241,71,268,69],[243,10,270,8],[244,10,271,8],[244,14,271,12,"newState"],[244,22,271,20],[244,23,271,21,"shadowClone"],[244,34,271,32],[244,35,271,33,"remainingTicks"],[244,49,271,47],[244,53,271,51],[244,54,271,52],[244,56,271,54],[245,12,272,10,"console"],[245,19,272,17],[245,20,272,18,"log"],[245,23,272,21],[245,24,272,22],[245,75,272,73],[245,76,272,74],[246,12,273,10,"newState"],[246,20,273,18],[246,21,273,19,"shadowClone"],[246,32,273,30],[246,35,273,33,"undefined"],[246,44,273,42],[247,10,274,8],[247,11,274,9],[247,17,274,15],[248,12,275,10],[249,12,276,10],[250,12,277,10],[250,16,277,16,"CLONE_ATTACK_INTERVAL"],[250,37,277,37],[250,40,277,40],[250,42,277,42],[251,12,278,10],[251,16,278,14,"newState"],[251,24,278,22],[251,25,278,23,"currentTick"],[251,36,278,34],[251,39,278,37,"CLONE_ATTACK_INTERVAL"],[251,60,278,58],[251,65,278,63],[251,66,278,64],[251,70,278,68,"newState"],[251,78,278,76],[251,79,278,77,"enemies"],[251,86,278,84],[251,87,278,85,"length"],[251,93,278,91],[251,96,278,94],[251,97,278,95],[251,99,278,97],[252,14,279,12,"console"],[252,21,279,19],[252,22,279,20,"log"],[252,25,279,23],[252,26,279,24],[252,83,279,81],[252,84,279,82],[254,14,281,12],[255,14,282,12],[255,18,282,18,"target"],[255,24,282,24],[255,27,282,27,"findClosestEnemyInternal"],[255,51,282,51],[255,52,282,52,"newState"],[255,60,282,60],[255,61,282,61,"enemies"],[255,68,282,68],[255,69,282,69],[256,14,283,12],[256,18,283,16,"target"],[256,24,283,22],[256,26,283,24],[257,16,284,14],[258,16,285,14],[258,20,285,20,"cloneDamage"],[258,31,285,31],[258,34,285,34,"Math"],[258,38,285,38],[258,39,285,39,"floor"],[258,44,285,44],[258,45,285,45,"newState"],[258,53,285,53],[258,54,285,54,"playerStats"],[258,65,285,65],[258,66,285,66,"attack"],[258,72,285,72],[258,75,285,75],[258,78,285,78],[258,79,285,79],[260,16,287,14],[261,16,288,14,"createProjectile"],[261,32,288,30],[261,33,288,31,"target"],[261,39,288,37],[261,41,288,39,"cloneDamage"],[261,52,288,50],[261,54,288,52,"newState"],[261,62,288,60],[261,63,288,61,"shadowClone"],[261,74,288,72],[261,75,288,73,"position"],[261,83,288,81],[261,85,288,83],[262,18,289,16,"id"],[262,20,289,18],[262,22,289,20],[262,43,289,41],[263,18,290,16,"name"],[263,22,290,20],[263,24,290,22],[263,45,290,43],[264,18,291,16,"icon"],[264,22,291,20],[264,24,291,22],[265,16,292,14],[265,17,292,15],[265,18,292,16],[266,14,293,12],[267,12,294,10],[268,10,295,8],[269,8,296,6],[271,8,298,6],[272,8,299,6],[272,12,299,10],[272,13,299,11,"isManualControlActive"],[272,34,299,32],[272,36,299,34],[273,10,300,8],[273,15,300,13],[273,19,300,17,"i"],[273,20,300,18],[273,23,300,21],[273,24,300,22],[273,26,300,24,"i"],[273,27,300,25],[273,30,300,28],[273,31,300,29],[273,33,300,31,"i"],[273,34,300,32],[273,36,300,34],[273,38,300,36],[274,12,301,10],[274,16,301,14,"newState"],[274,24,301,22],[274,25,301,23,"abilityManager"],[274,39,301,37],[274,40,301,38,"isAbilityReady"],[274,54,301,52],[274,55,301,53,"i"],[274,56,301,54],[274,57,301,55],[274,61,301,59,"newState"],[274,69,301,67],[274,70,301,68,"enemies"],[274,77,301,75],[274,78,301,76,"length"],[274,84,301,82],[274,87,301,85],[274,88,301,86],[274,90,301,88],[275,14,302,12],[275,18,302,16,"newState"],[275,26,302,24],[275,27,302,25,"abilityManager"],[275,41,302,39],[275,42,302,40,"useAbility"],[275,52,302,50],[275,53,302,51,"i"],[275,54,302,52],[275,56,302,54,"newTick"],[275,63,302,61],[275,64,302,62],[275,66,302,64],[276,16,303,14,"castAbility"],[276,27,303,25],[276,28,303,26,"newState"],[276,36,303,34],[276,38,303,36,"i"],[276,39,303,37],[276,40,303,38],[277,14,304,12],[278,12,305,10],[279,10,306,8],[280,8,307,6],[282,8,309,6],[283,8,310,6],[283,12,310,12,"deadEnemies"],[283,23,310,23],[283,26,310,26,"newState"],[283,34,310,34],[283,35,310,35,"enemies"],[283,42,310,42],[283,43,310,43,"filter"],[283,49,310,49],[283,50,310,50,"enemy"],[283,55,310,55],[283,59,310,59,"enemy"],[283,64,310,64],[283,65,310,65,"health"],[283,71,310,71],[283,75,310,75],[283,76,310,76],[283,77,310,77],[284,8,311,6,"enemiesToKill"],[284,21,311,19],[284,24,311,22],[284,25,311,23],[284,28,311,26,"deadEnemies"],[284,39,311,37],[284,40,311,38],[284,41,311,39],[284,42,311,40],[286,8,313,6],[287,8,314,6],[287,12,314,10,"deadEnemies"],[287,23,314,21],[287,24,314,22,"length"],[287,30,314,28],[287,33,314,31],[287,34,314,32],[287,36,314,34],[288,10,315,8,"console"],[288,17,315,15],[288,18,315,16,"log"],[288,21,315,19],[288,22,315,20],[288,49,315,47,"deadEnemies"],[288,60,315,58],[288,61,315,59,"length"],[288,67,315,65],[288,83,315,81],[288,85,315,83,"deadEnemies"],[288,96,315,94],[288,97,315,95,"map"],[288,100,315,98],[288,101,315,99,"e"],[288,102,315,100],[288,106,315,104],[288,109,315,107,"e"],[288,110,315,108],[288,111,315,109,"id"],[288,113,315,111],[288,117,315,115,"e"],[288,118,315,116],[288,119,315,117,"health"],[288,125,315,123],[288,130,315,128],[288,131,315,129],[288,132,315,130],[289,8,316,6],[291,8,318,6],[292,8,319,6],[292,12,319,12,"lowHealthEnemies"],[292,28,319,28],[292,31,319,31,"newState"],[292,39,319,39],[292,40,319,40,"enemies"],[292,47,319,47],[292,48,319,48,"filter"],[292,54,319,54],[292,55,319,55,"enemy"],[292,60,319,60],[292,64,319,64,"enemy"],[292,69,319,69],[292,70,319,70,"health"],[292,76,319,76],[292,80,319,80],[292,82,319,82],[292,86,319,86,"enemy"],[292,91,319,91],[292,92,319,92,"health"],[292,98,319,98],[292,101,319,101],[292,102,319,102],[292,103,319,103],[293,8,320,6],[293,12,320,10,"lowHealthEnemies"],[293,28,320,26],[293,29,320,27,"length"],[293,35,320,33],[293,38,320,36],[293,39,320,37],[293,41,320,39],[294,10,321,8,"console"],[294,17,321,15],[294,18,321,16,"log"],[294,21,321,19],[294,22,321,20],[294,61,321,59],[294,63,321,61,"lowHealthEnemies"],[294,79,321,77],[294,80,321,78,"map"],[294,83,321,81],[294,84,321,82,"e"],[294,85,321,83],[294,89,321,87],[294,92,321,90,"e"],[294,93,321,91],[294,94,321,92,"id"],[294,96,321,94],[294,100,321,98,"e"],[294,101,321,99],[294,102,321,100,"health"],[294,108,321,106],[294,112,321,110,"e"],[294,113,321,111],[294,114,321,112,"maxHealth"],[294,123,321,121],[294,128,321,126],[294,129,321,127],[294,130,321,128],[295,8,322,6],[297,8,324,6],[298,8,325,6],[298,12,325,12,"beforeCount"],[298,23,325,23],[298,26,325,26,"newState"],[298,34,325,34],[298,35,325,35,"enemies"],[298,42,325,42],[298,43,325,43,"length"],[298,49,325,49],[299,8,326,6,"newState"],[299,16,326,14],[299,17,326,15,"enemies"],[299,24,326,22],[299,27,326,25,"newState"],[299,35,326,33],[299,36,326,34,"enemies"],[299,43,326,41],[299,44,326,42,"filter"],[299,50,326,48],[299,51,326,49,"enemy"],[299,56,326,54],[299,60,326,58,"enemy"],[299,65,326,63],[299,66,326,64,"health"],[299,72,326,70],[299,75,326,73],[299,76,326,74],[299,77,326,75],[300,8,327,6],[300,12,327,12,"afterCount"],[300,22,327,22],[300,25,327,25,"newState"],[300,33,327,33],[300,34,327,34,"enemies"],[300,41,327,41],[300,42,327,42,"length"],[300,48,327,48],[301,8,329,6],[301,12,329,10,"beforeCount"],[301,23,329,21],[301,28,329,26,"afterCount"],[301,38,329,36],[301,40,329,38],[302,10,330,8,"console"],[302,17,330,15],[302,18,330,16,"log"],[302,21,330,19],[302,22,330,20],[302,52,330,50,"beforeCount"],[302,63,330,61],[302,66,330,64,"afterCount"],[302,76,330,74],[302,102,330,100],[302,103,330,101],[303,8,331,6],[305,8,333,6],[306,8,334,6],[307,8,335,6],[307,12,335,12,"MAX_ENEMIES"],[307,23,335,23],[307,26,335,26],[307,28,335,28],[308,8,336,6],[308,12,336,12,"MIN_SPAWN_DELAY"],[308,27,336,27],[308,30,336,30],[308,33,336,33],[308,34,336,34],[308,35,336,35],[309,8,337,6],[309,12,337,12,"now"],[309,15,337,15],[309,18,337,18,"Date"],[309,22,337,22],[309,23,337,23,"now"],[309,26,337,26],[309,27,337,27],[309,28,337,28],[310,8,338,6],[310,12,338,12,"hasBoss"],[310,19,338,19],[310,22,338,22,"newState"],[310,30,338,30],[310,31,338,31,"enemies"],[310,38,338,38],[310,39,338,39,"some"],[310,43,338,43],[310,44,338,44,"enemy"],[310,49,338,49],[310,53,338,53,"enemy"],[310,58,338,58],[310,59,338,59,"isBoss"],[310,65,338,65],[310,66,338,66],[312,8,340,6],[313,8,341,6],[313,12,341,10],[313,13,341,11,"newState"],[313,21,341,19],[313,22,341,20,"lastSpawnTime"],[313,35,341,33],[313,37,341,35],[314,10,342,8,"newState"],[314,18,342,16],[314,19,342,17,"lastSpawnTime"],[314,32,342,30],[314,35,342,33,"now"],[314,38,342,36],[315,8,343,6],[316,8,345,6,"console"],[316,15,345,13],[316,16,345,14,"log"],[316,19,345,17],[316,20,345,18],[316,53,345,51,"newState"],[316,61,345,59],[316,62,345,60,"enemies"],[316,69,345,67],[316,70,345,68,"length"],[316,76,345,74],[316,85,345,83,"MAX_ENEMIES"],[316,96,345,94],[316,109,345,107,"hasBoss"],[316,116,345,114],[316,118,345,116],[316,119,345,117],[318,8,347,6],[319,8,348,6],[319,12,348,10],[319,13,348,11,"hasBoss"],[319,20,348,18],[319,24,348,22,"newState"],[319,32,348,30],[319,33,348,31,"enemies"],[319,40,348,38],[319,41,348,39,"length"],[319,47,348,45],[319,50,348,48,"MAX_ENEMIES"],[319,61,348,59],[319,65,348,64,"now"],[319,68,348,67],[319,71,348,70,"newState"],[319,79,348,78],[319,80,348,79,"lastSpawnTime"],[319,93,348,92],[319,97,348,97,"MIN_SPAWN_DELAY"],[319,112,348,112],[319,114,348,114],[320,10,349,8,"console"],[320,17,349,15],[320,18,349,16,"log"],[320,21,349,19],[320,22,349,20],[320,43,349,41,"newState"],[320,51,349,49],[320,52,349,50,"enemies"],[320,59,349,57],[320,60,349,58,"length"],[320,66,349,64],[320,69,349,67],[320,70,349,68],[320,74,349,72,"MAX_ENEMIES"],[320,85,349,83],[320,87,349,85],[320,88,349,86],[321,10,350,8,"spawnTestEnemy"],[321,24,350,22],[321,25,350,23,"newState"],[321,33,350,31],[321,34,350,32],[322,10,351,8,"newState"],[322,18,351,16],[322,19,351,17,"lastSpawnTime"],[322,32,351,30],[322,35,351,33,"now"],[322,38,351,36],[323,8,352,6],[324,8,354,6],[324,15,354,13,"newState"],[324,23,354,21],[325,6,355,4],[325,7,355,5],[325,47,355,6],[327,6,357,4],[328,6,358,4,"console"],[328,13,358,11],[328,14,358,12,"log"],[328,17,358,15],[328,18,358,16],[328,50,358,48,"enemiesToKill"],[328,63,358,61],[328,64,358,62,"length"],[328,70,358,68],[328,101,358,99],[328,102,358,100],[329,6,360,4,"enemiesToKill"],[329,19,360,17],[329,20,360,18,"forEach"],[329,27,360,25],[329,28,360,26],[329,29,360,27,"enemy"],[329,34,360,32],[329,36,360,34,"index"],[329,41,360,39],[329,46,360,44],[330,8,361,6,"console"],[330,15,361,13],[330,16,361,14,"log"],[330,19,361,17],[330,20,361,18],[330,57,361,55,"index"],[330,62,361,60],[330,65,361,63],[330,66,361,64],[330,70,361,68,"enemiesToKill"],[330,83,361,81],[330,84,361,82,"length"],[330,90,361,88],[330,104,361,102,"enemy"],[330,109,361,107],[330,110,361,108,"id"],[330,112,361,110],[330,114,361,112],[330,115,361,113],[331,8,362,6,"handleEnemyKill"],[331,23,362,21],[331,24,362,22,"enemy"],[331,29,362,27],[331,30,362,28],[332,6,363,4],[332,7,363,5],[332,8,363,6],[333,4,364,2],[333,5,364,3],[333,7,364,5],[333,8,364,6,"handleEnemyKill"],[333,23,364,21],[333,24,364,22],[333,25,364,23],[333,26,364,24],[333,27,364,25],[335,4,366,2],[336,4,367,2],[336,8,367,8,"findClosestEnemyInternal"],[336,32,367,32],[336,35,367,36,"enemies"],[336,42,367,58],[336,46,367,83],[337,6,368,4],[337,10,368,8,"enemies"],[337,17,368,15],[337,18,368,16,"length"],[337,24,368,22],[337,29,368,27],[337,30,368,28],[337,32,368,30],[337,39,368,37],[337,43,368,41],[339,6,370,4],[340,6,371,4],[340,10,371,10,"SCREEN_WIDTH"],[340,22,371,22],[340,25,371,25],[340,28,371,28],[341,6,372,4],[341,10,372,10,"GAME_AREA_HEIGHT"],[341,26,372,26],[341,29,372,29],[341,32,372,32],[341,35,372,35],[341,38,372,38],[341,39,372,39],[341,40,372,40],[342,6,373,4],[342,10,373,10,"ninjaX"],[342,16,373,16],[342,19,373,19,"SCREEN_WIDTH"],[342,31,373,31],[342,34,373,34],[342,35,373,35],[343,6,374,4],[343,10,374,10,"ninjaY"],[343,16,374,16],[343,19,374,19,"GAME_AREA_HEIGHT"],[343,35,374,35],[343,38,374,38],[343,39,374,39],[344,6,376,4],[344,10,376,8,"closestEnemy"],[344,22,376,20],[344,25,376,23,"enemies"],[344,32,376,30],[344,33,376,31],[344,34,376,32],[344,35,376,33],[345,6,377,4],[345,10,377,8,"closestDistance"],[345,25,377,23],[345,28,377,26,"Infinity"],[345,36,377,34],[346,6,379,4,"enemies"],[346,13,379,11],[346,14,379,12,"forEach"],[346,21,379,19],[346,22,379,20,"enemy"],[346,27,379,25],[346,31,379,29],[347,8,380,6],[347,12,380,12,"distance"],[347,20,380,20],[347,23,380,23,"Math"],[347,27,380,27],[347,28,380,28,"sqrt"],[347,32,380,32],[347,33,381,8,"Math"],[347,37,381,12],[347,38,381,13,"pow"],[347,41,381,16],[347,42,381,17,"enemy"],[347,47,381,22],[347,48,381,23,"position"],[347,56,381,31],[347,57,381,32,"x"],[347,58,381,33],[347,61,381,36,"ninjaX"],[347,67,381,42],[347,69,381,44],[347,70,381,45],[347,71,381,46],[347,74,382,8,"Math"],[347,78,382,12],[347,79,382,13,"pow"],[347,82,382,16],[347,83,382,17,"enemy"],[347,88,382,22],[347,89,382,23,"position"],[347,97,382,31],[347,98,382,32,"y"],[347,99,382,33],[347,102,382,36,"ninjaY"],[347,108,382,42],[347,110,382,44],[347,111,382,45],[347,112,383,6],[347,113,383,7],[348,8,385,6],[348,12,385,10,"distance"],[348,20,385,18],[348,23,385,21,"closestDistance"],[348,38,385,36],[348,40,385,38],[349,10,386,8,"closestDistance"],[349,25,386,23],[349,28,386,26,"distance"],[349,36,386,34],[350,10,387,8,"closestEnemy"],[350,22,387,20],[350,25,387,23,"enemy"],[350,30,387,28],[351,8,388,6],[352,6,389,4],[352,7,389,5],[352,8,389,6],[353,6,391,4,"console"],[353,13,391,11],[353,14,391,12,"log"],[353,17,391,15],[353,18,391,16],[353,60,391,58,"closestDistance"],[353,75,391,73],[353,76,391,74,"toFixed"],[353,83,391,81],[353,84,391,82],[353,85,391,83],[353,86,391,84],[353,88,391,86],[353,89,391,87],[354,6,392,4],[354,13,392,11,"closestEnemy"],[354,25,392,23],[355,4,393,2],[355,5,393,3],[357,4,395,2],[358,4,396,2],[358,8,396,8,"findClosestEnemy"],[358,24,396,24],[358,27,396,27,"findClosestEnemy"],[358,28,396,27],[358,33,396,53],[359,6,397,4],[359,13,397,11,"findClosestEnemyInternal"],[359,37,397,35],[359,38,397,36,"combatState"],[359,49,397,47],[359,50,397,48,"enemies"],[359,57,397,55],[359,58,397,56],[360,4,398,2],[360,5,398,3],[362,4,400,2],[363,4,401,2],[363,8,401,2,"_useState7"],[363,18,401,2],[363,21,401,58],[363,25,401,58,"useState"],[363,31,401,66],[363,32,401,66,"useState"],[363,40,401,66],[363,42,401,91],[364,8,401,93,"x"],[364,9,401,94],[364,11,401,96],[364,12,401,97],[365,8,401,99,"y"],[365,9,401,100],[365,11,401,102],[366,6,401,104],[366,7,401,105],[366,8,401,106],[367,6,401,106,"_useState8"],[367,16,401,106],[367,23,401,106,"_slicedToArray"],[367,37,401,106],[367,38,401,106,"default"],[367,45,401,106],[367,47,401,106,"_useState7"],[367,57,401,106],[368,6,401,9,"currentNinjaPosition"],[368,26,401,29],[368,29,401,29,"_useState8"],[368,39,401,29],[369,6,401,31,"setCurrentNinjaPosition"],[369,29,401,54],[369,32,401,54,"_useState8"],[369,42,401,54],[370,4,402,2],[370,8,402,2,"_useState9"],[370,18,402,2],[370,21,402,60],[370,25,402,60,"useState"],[370,31,402,68],[370,32,402,68,"useState"],[370,40,402,68],[370,42,402,69],[370,47,402,74],[370,48,402,75],[371,6,402,75,"_useState0"],[371,16,402,75],[371,23,402,75,"_slicedToArray"],[371,37,402,75],[371,38,402,75,"default"],[371,45,402,75],[371,47,402,75,"_useState9"],[371,57,402,75],[372,6,402,9,"isManualControlActive"],[372,27,402,30],[372,30,402,30,"_useState0"],[372,40,402,30],[373,6,402,32,"setIsManualControlActive"],[373,30,402,56],[373,33,402,56,"_useState0"],[373,43,402,56],[375,4,404,2],[376,4,405,2],[376,8,405,8,"updateNinjaPosition"],[376,27,405,27],[376,30,405,30],[376,34,405,30,"useCallback"],[376,40,405,41],[376,41,405,41,"useCallback"],[376,52,405,41],[376,54,405,43,"newPosition"],[376,65,405,78],[376,69,405,83],[377,6,406,4,"setCurrentNinjaPosition"],[377,29,406,27],[377,30,406,28,"newPosition"],[377,41,406,39],[377,42,406,40],[378,4,407,2],[378,5,407,3],[378,7,407,5],[378,9,407,7],[378,10,407,8],[380,4,409,2],[381,4,410,2],[381,8,410,8,"setManualControlActive"],[381,30,410,30],[381,33,410,33],[381,37,410,33,"useCallback"],[381,43,410,44],[381,44,410,44,"useCallback"],[381,55,410,44],[381,57,410,46,"active"],[381,63,410,61],[381,67,410,66],[382,6,411,4,"setIsManualControlActive"],[382,30,411,28],[382,31,411,29,"active"],[382,37,411,35],[382,38,411,36],[383,6,412,4,"console"],[383,13,412,11],[383,14,412,12,"log"],[383,17,412,15],[383,18,412,16],[383,39,412,37,"active"],[383,45,412,43],[383,48,412,46],[383,59,412,57],[383,62,412,60],[383,75,412,73],[383,88,412,86,"active"],[383,94,412,92],[383,97,412,95],[383,105,412,103],[383,108,412,106],[383,117,412,115],[383,119,412,117],[383,120,412,118],[384,4,413,2],[384,5,413,3],[384,7,413,5],[384,9,413,7],[384,10,413,8],[386,4,415,2],[387,4,416,2],[387,8,416,8,"handleProjectileHit"],[387,27,416,27],[387,30,416,31,"projectile"],[387,40,416,59],[387,44,416,64],[388,6,417,4,"console"],[388,13,417,11],[388,14,417,12,"log"],[388,17,417,15],[388,18,417,16],[388,35,417,33,"projectile"],[388,45,417,43],[388,46,417,44,"id"],[388,48,417,46],[388,62,417,60,"projectile"],[388,72,417,70],[388,73,417,71,"targetEnemyId"],[388,86,417,84],[388,94,417,92,"projectile"],[388,104,417,102],[388,105,417,103,"damage"],[388,111,417,109],[388,120,417,118],[388,121,417,119],[389,6,419,4,"setCombatState"],[389,20,419,18],[389,21,419,19,"prev"],[389,25,419,23],[389,29,419,27],[390,8,420,6],[390,12,420,12,"newState"],[390,20,420,20],[390,23,420,23],[391,10,420,25],[391,13,420,28,"prev"],[392,8,420,33],[392,9,420,34],[394,8,422,6],[395,8,423,6],[395,12,423,12,"enemyIndex"],[395,22,423,22],[395,25,423,25,"newState"],[395,33,423,33],[395,34,423,34,"enemies"],[395,41,423,41],[395,42,423,42,"findIndex"],[395,51,423,51],[395,52,423,52,"e"],[395,53,423,53],[395,57,423,57,"e"],[395,58,423,58],[395,59,423,59,"id"],[395,61,423,61],[395,66,423,66,"projectile"],[395,76,423,76],[395,77,423,77,"targetEnemyId"],[395,90,423,90],[395,91,423,91],[396,8,424,6],[396,12,424,10,"enemyIndex"],[396,22,424,20],[396,26,424,24],[396,27,424,25],[396,29,424,27],[397,10,425,8,"newState"],[397,18,425,16],[397,19,425,17,"enemies"],[397,26,425,24],[397,29,425,27],[397,30,425,28],[397,33,425,31,"newState"],[397,41,425,39],[397,42,425,40,"enemies"],[397,49,425,47],[397,50,425,48],[398,10,426,8,"newState"],[398,18,426,16],[398,19,426,17,"enemies"],[398,26,426,24],[398,27,426,25,"enemyIndex"],[398,37,426,35],[398,38,426,36],[398,41,426,39],[399,12,427,10],[399,15,427,13,"newState"],[399,23,427,21],[399,24,427,22,"enemies"],[399,31,427,29],[399,32,427,30,"enemyIndex"],[399,42,427,40],[399,43,427,41],[400,12,428,10,"health"],[400,18,428,16],[400,20,428,18,"newState"],[400,28,428,26],[400,29,428,27,"enemies"],[400,36,428,34],[400,37,428,35,"enemyIndex"],[400,47,428,45],[400,48,428,46],[400,49,428,47,"health"],[400,55,428,53],[400,58,428,56,"projectile"],[400,68,428,66],[400,69,428,67,"damage"],[400,75,428,73],[401,12,429,10,"lastDamaged"],[401,23,429,21],[401,25,429,23,"combatEngine"],[401,44,429,35],[401,45,429,35,"combatEngine"],[401,57,429,35],[401,58,429,36,"getCurrentTick"],[401,72,429,50],[401,73,429,51],[402,10,430,8],[402,11,430,9],[403,10,432,8,"console"],[403,17,432,15],[403,18,432,16,"log"],[403,21,432,19],[403,22,432,20],[403,34,432,32,"projectile"],[403,44,432,42],[403,45,432,43,"targetEnemyId"],[403,58,432,56],[403,70,432,68,"newState"],[403,78,432,76],[403,79,432,77,"enemies"],[403,86,432,84],[403,87,432,85,"enemyIndex"],[403,97,432,95],[403,98,432,96],[403,99,432,97,"health"],[403,105,432,103],[403,109,432,107,"newState"],[403,117,432,115],[403,118,432,116,"enemies"],[403,125,432,123],[403,126,432,124,"enemyIndex"],[403,136,432,134],[403,137,432,135],[403,138,432,136,"maxHealth"],[403,147,432,145],[403,149,432,147],[403,150,432,148],[404,8,433,6],[405,8,435,6],[405,15,435,13,"newState"],[405,23,435,21],[406,6,436,4],[406,7,436,5],[406,8,436,6],[408,6,438,4],[409,6,439,4,"setProjectiles"],[409,20,439,18],[409,21,439,19,"prev"],[409,25,439,23],[409,29,439,27,"prev"],[409,33,439,31],[409,34,439,32,"filter"],[409,40,439,38],[409,41,439,39,"p"],[409,42,439,40],[409,46,439,44,"p"],[409,47,439,45],[409,48,439,46,"id"],[409,50,439,48],[409,55,439,53,"projectile"],[409,65,439,63],[409,66,439,64,"id"],[409,68,439,66],[409,69,439,67],[409,70,439,68],[410,4,440,2],[410,5,440,3],[412,4,442,2],[413,4,443,2],[413,8,443,8,"castAbility"],[413,19,443,19],[413,22,443,22,"castAbility"],[413,23,443,23,"state"],[413,28,443,41],[413,30,443,43,"slotIndex"],[413,39,443,60],[413,44,443,65],[414,6,444,4],[414,10,444,10,"deck"],[414,14,444,14],[414,17,444,17,"state"],[414,22,444,22],[414,23,444,23,"abilityManager"],[414,37,444,37],[414,38,444,38,"getDeck"],[414,45,444,45],[414,46,444,46],[414,47,444,47],[415,6,445,4],[415,10,445,10,"ability"],[415,17,445,17],[415,20,445,20,"deck"],[415,24,445,24],[415,25,445,25,"slots"],[415,30,445,30],[415,31,445,31,"slotIndex"],[415,40,445,40],[415,41,445,41],[416,6,446,4],[416,10,446,8],[416,11,446,9,"ability"],[416,18,446,16],[416,20,446,18],[418,6,448,4],[419,6,449,4],[419,10,449,8,"damage"],[419,16,449,14],[419,19,449,17,"ability"],[419,26,449,24],[419,27,449,25,"stats"],[419,32,449,30],[419,33,449,31,"baseDamage"],[419,43,449,41],[421,6,451,4],[422,6,452,4,"deck"],[422,10,452,8],[422,11,452,9,"activeSynergies"],[422,26,452,24],[422,27,452,25,"forEach"],[422,34,452,32],[422,35,452,33,"synergy"],[422,42,452,40],[422,46,452,44],[423,8,453,6],[423,12,453,10,"synergy"],[423,19,453,17],[423,20,453,18,"bonus"],[423,25,453,23],[423,26,453,24,"damageBonus"],[423,37,453,35],[423,41,454,10,"synergy"],[423,48,454,17],[423,49,454,18,"requiredTags"],[423,61,454,30],[423,62,454,31,"some"],[423,66,454,35],[423,67,454,36,"tag"],[423,70,454,39],[423,74,454,43,"ability"],[423,81,454,50],[423,82,454,51,"tags"],[423,86,454,55],[423,87,454,56,"includes"],[423,95,454,64],[423,96,454,65,"tag"],[423,99,454,68],[423,100,454,69],[423,101,454,70],[423,103,454,72],[424,10,455,8,"damage"],[424,16,455,14],[424,20,455,19],[424,21,455,20],[424,24,455,23,"synergy"],[424,31,455,30],[424,32,455,31,"bonus"],[424,37,455,36],[424,38,455,37,"damageBonus"],[424,49,455,48],[424,52,455,51],[424,55,455,55],[425,8,456,6],[426,6,457,4],[426,7,457,5],[426,8,457,6],[428,6,459,4],[429,6,460,4],[429,10,460,10,"isAOE"],[429,15,460,15],[429,18,460,18,"ability"],[429,25,460,25],[429,26,460,26,"effects"],[429,33,460,33],[429,34,460,34,"includes"],[429,42,460,42],[429,43,460,43],[429,48,460,48],[429,49,460,49],[429,53,460,53,"ability"],[429,60,460,60],[429,61,460,61,"stats"],[429,66,460,66],[429,67,460,67,"aoeRadius"],[429,76,460,76],[430,6,462,4],[430,10,462,8,"isAOE"],[430,15,462,13],[430,17,462,15],[431,8,463,6,"console"],[431,15,463,13],[431,16,463,14,"log"],[431,19,463,17],[431,20,463,18],[431,39,463,37,"ability"],[431,46,463,44],[431,47,463,45,"name"],[431,51,463,49],[431,67,463,65,"ability"],[431,74,463,72],[431,75,463,73,"stats"],[431,80,463,78],[431,81,463,79,"aoeRadius"],[431,90,463,88],[431,92,463,90],[431,93,463,91],[433,8,465,6],[434,8,466,6],[434,12,466,12,"ninjaX"],[434,18,466,18],[434,21,466,21,"currentNinjaPosition"],[434,41,466,41],[434,42,466,42,"x"],[434,43,466,43],[434,46,466,46],[434,48,466,48],[434,49,466,49],[434,50,466,50],[435,8,467,6],[435,12,467,12,"ninjaY"],[435,18,467,18],[435,21,467,21,"currentNinjaPosition"],[435,41,467,41],[435,42,467,42,"y"],[435,43,467,43],[435,46,467,46],[435,48,467,48],[436,8,468,6],[436,12,468,12,"aoeRadius"],[436,21,468,21],[436,24,468,24,"ability"],[436,31,468,31],[436,32,468,32,"stats"],[436,37,468,37],[436,38,468,38,"aoeRadius"],[436,47,468,47],[437,8,470,6],[437,12,470,12,"enemiesInRange"],[437,26,470,26],[437,29,470,29,"state"],[437,34,470,34],[437,35,470,35,"enemies"],[437,42,470,42],[437,43,470,43,"filter"],[437,49,470,49],[437,50,470,50,"enemy"],[437,55,470,55],[437,59,470,59],[438,10,471,8],[438,14,471,14,"enemyX"],[438,20,471,20],[438,23,471,23,"enemy"],[438,28,471,28],[438,29,471,29,"position"],[438,37,471,37],[438,38,471,38,"x"],[438,39,471,39],[438,42,471,42],[438,46,471,46],[438,47,471,47],[438,48,471,48],[439,10,472,8],[439,14,472,14,"enemyY"],[439,20,472,20],[439,23,472,23,"enemy"],[439,28,472,28],[439,29,472,29,"position"],[439,37,472,37],[439,38,472,38,"y"],[439,39,472,39],[439,42,472,42],[439,46,472,46],[440,10,473,8],[440,14,473,14,"distance"],[440,22,473,22],[440,25,473,25,"Math"],[440,29,473,29],[440,30,473,30,"sqrt"],[440,34,473,34],[440,35,473,35,"Math"],[440,39,473,39],[440,40,473,40,"pow"],[440,43,473,43],[440,44,473,44,"enemyX"],[440,50,473,50],[440,53,473,53,"ninjaX"],[440,59,473,59],[440,61,473,61],[440,62,473,62],[440,63,473,63],[440,66,473,66,"Math"],[440,70,473,70],[440,71,473,71,"pow"],[440,74,473,74],[440,75,473,75,"enemyY"],[440,81,473,81],[440,84,473,84,"ninjaY"],[440,90,473,90],[440,92,473,92],[440,93,473,93],[440,94,473,94],[440,95,473,95],[441,10,474,8],[441,17,474,15,"distance"],[441,25,474,23],[441,29,474,27,"aoeRadius"],[441,38,474,36],[442,8,475,6],[442,9,475,7],[442,10,475,8],[443,8,477,6,"console"],[443,15,477,13],[443,16,477,14,"log"],[443,19,477,17],[443,20,477,18],[443,45,477,43,"enemiesInRange"],[443,59,477,57],[443,60,477,58,"length"],[443,66,477,64],[443,88,477,86,"aoeRadius"],[443,97,477,95],[443,107,477,105],[443,108,477,106],[445,8,479,6],[446,8,480,6,"enemiesInRange"],[446,22,480,20],[446,23,480,21,"forEach"],[446,30,480,28],[446,31,480,29,"enemy"],[446,36,480,34],[446,40,480,38],[447,10,481,8],[447,14,481,14,"damageResult"],[447,26,481,26],[447,29,481,29,"DamageCalculator"],[447,48,481,45],[447,49,481,45,"DamageCalculator"],[447,65,481,45],[447,66,481,46,"calculateDamage"],[447,81,481,61],[447,82,481,62,"damage"],[447,88,481,68],[447,90,481,70,"state"],[447,95,481,75],[447,96,481,76,"playerStats"],[447,107,481,87],[447,109,481,89,"enemy"],[447,114,481,94],[447,115,481,95,"stats"],[447,120,481,100],[447,121,481,101],[448,10,482,8,"createProjectile"],[448,26,482,24],[448,27,482,25,"enemy"],[448,32,482,30],[448,34,482,32,"damageResult"],[448,46,482,44],[448,47,482,45,"damage"],[448,53,482,51],[448,55,482,53,"currentNinjaPosition"],[448,75,482,73],[448,77,482,75],[449,12,483,10,"id"],[449,14,483,12],[449,16,483,14,"ability"],[449,23,483,21],[449,24,483,22,"id"],[449,26,483,24],[450,12,484,10,"name"],[450,16,484,14],[450,18,484,16,"ability"],[450,25,484,23],[450,26,484,24,"name"],[450,30,484,28],[451,12,485,10,"icon"],[451,16,485,14],[451,18,485,16,"ability"],[451,25,485,23],[451,26,485,24,"icon"],[452,10,486,8],[452,11,486,9],[452,12,486,10],[453,10,488,8,"console"],[453,17,488,15],[453,18,488,16,"log"],[453,21,488,19],[453,22,488,20],[453,37,488,35,"enemy"],[453,42,488,40],[453,43,488,41,"name"],[453,47,488,45],[453,55,488,53,"damageResult"],[453,67,488,65],[453,68,488,66,"damage"],[453,74,488,72],[453,83,488,81],[453,84,488,82],[454,8,489,6],[454,9,489,7],[454,10,489,8],[455,8,491,6,"console"],[455,15,491,13],[455,16,491,14,"log"],[455,19,491,17],[455,20,491,18],[455,26,491,24,"ability"],[455,33,491,31],[455,34,491,32,"name"],[455,38,491,36],[455,56,491,54,"enemiesInRange"],[455,70,491,68],[455,71,491,69,"length"],[455,77,491,75],[455,93,491,91,"damage"],[455,99,491,97],[455,118,491,116],[455,119,491,117],[456,6,493,4],[456,7,493,5],[456,13,493,11],[457,8,494,6],[458,8,495,6],[458,12,495,12,"target"],[458,18,495,18],[458,21,495,21,"findClosestEnemyInternal"],[458,45,495,45],[458,46,495,46,"state"],[458,51,495,51],[458,52,495,52,"enemies"],[458,59,495,59],[458,60,495,60],[459,8,496,6],[459,12,496,10],[459,13,496,11,"target"],[459,19,496,17],[459,21,496,19],[460,8,498,6],[460,12,498,12,"damageResult"],[460,24,498,24],[460,27,498,27,"DamageCalculator"],[460,46,498,43],[460,47,498,43,"DamageCalculator"],[460,63,498,43],[460,64,498,44,"calculateDamage"],[460,79,498,59],[460,80,498,60,"damage"],[460,86,498,66],[460,88,498,68,"state"],[460,93,498,73],[460,94,498,74,"playerStats"],[460,105,498,85],[460,107,498,87,"target"],[460,113,498,93],[460,114,498,94,"stats"],[460,119,498,99],[460,120,498,100],[462,8,500,6],[463,8,501,6,"createProjectile"],[463,24,501,22],[463,25,501,23,"target"],[463,31,501,29],[463,33,501,31,"damageResult"],[463,45,501,43],[463,46,501,44,"damage"],[463,52,501,50],[463,54,501,52,"currentNinjaPosition"],[463,74,501,72],[463,76,501,74],[464,10,502,8,"id"],[464,12,502,10],[464,14,502,12,"ability"],[464,21,502,19],[464,22,502,20,"id"],[464,24,502,22],[465,10,503,8,"name"],[465,14,503,12],[465,16,503,14,"ability"],[465,23,503,21],[465,24,503,22,"name"],[465,28,503,26],[466,10,504,8,"icon"],[466,14,504,12],[466,16,504,14,"ability"],[466,23,504,21],[466,24,504,22,"icon"],[467,8,505,6],[467,9,505,7],[467,10,505,8],[468,8,507,6,"console"],[468,15,507,13],[468,16,507,14,"log"],[468,19,507,17],[468,20,507,18],[468,26,507,24,"ability"],[468,33,507,31],[468,34,507,32,"name"],[468,38,507,36],[468,66,507,64,"damageResult"],[468,78,507,76],[468,79,507,77,"damage"],[468,85,507,83],[468,95,507,93,"damageResult"],[468,107,507,105],[468,108,507,106,"isCritical"],[468,118,507,116],[468,121,507,119],[468,131,507,129],[468,134,507,132],[468,136,507,134],[468,138,507,136],[468,139,507,137],[469,6,508,4],[471,6,510,4],[472,6,511,4],[472,10,511,8,"ability"],[472,17,511,15],[472,18,511,16,"effects"],[472,25,511,23],[472,26,511,24,"includes"],[472,34,511,32],[472,35,511,33],[472,40,511,38],[472,41,511,39],[472,45,511,43,"ability"],[472,52,511,50],[472,53,511,51,"stats"],[472,58,511,56],[472,59,511,57,"duration"],[472,67,511,65],[472,69,511,67],[473,8,512,6],[473,12,512,12,"targets"],[473,19,512,19],[473,22,512,22,"isAOE"],[473,27,512,27],[473,30,513,8,"state"],[473,35,513,13],[473,36,513,14,"enemies"],[473,43,513,21],[473,44,513,22,"filter"],[473,50,513,28],[473,51,513,29,"enemy"],[473,56,513,34],[473,60,513,38],[474,10,514,10],[474,14,514,16,"ninjaX"],[474,20,514,22],[474,23,514,25,"currentNinjaPosition"],[474,43,514,45],[474,44,514,46,"x"],[474,45,514,47],[474,48,514,50],[474,50,514,52],[475,10,515,10],[475,14,515,16,"ninjaY"],[475,20,515,22],[475,23,515,25,"currentNinjaPosition"],[475,43,515,45],[475,44,515,46,"y"],[475,45,515,47],[475,48,515,50],[475,50,515,52],[476,10,516,10],[476,14,516,16,"enemyX"],[476,20,516,22],[476,23,516,25,"enemy"],[476,28,516,30],[476,29,516,31,"position"],[476,37,516,39],[476,38,516,40,"x"],[476,39,516,41],[476,42,516,44],[476,46,516,48],[477,10,517,10],[477,14,517,16,"enemyY"],[477,20,517,22],[477,23,517,25,"enemy"],[477,28,517,30],[477,29,517,31,"position"],[477,37,517,39],[477,38,517,40,"y"],[477,39,517,41],[477,42,517,44],[477,46,517,48],[478,10,518,10],[478,14,518,16,"distance"],[478,22,518,24],[478,25,518,27,"Math"],[478,29,518,31],[478,30,518,32,"sqrt"],[478,34,518,36],[478,35,518,37,"Math"],[478,39,518,41],[478,40,518,42,"pow"],[478,43,518,45],[478,44,518,46,"enemyX"],[478,50,518,52],[478,53,518,55,"ninjaX"],[478,59,518,61],[478,61,518,63],[478,62,518,64],[478,63,518,65],[478,66,518,68,"Math"],[478,70,518,72],[478,71,518,73,"pow"],[478,74,518,76],[478,75,518,77,"enemyY"],[478,81,518,83],[478,84,518,86,"ninjaY"],[478,90,518,92],[478,92,518,94],[478,93,518,95],[478,94,518,96],[478,95,518,97],[479,10,519,10],[479,17,519,17,"distance"],[479,25,519,25],[479,29,519,29,"ability"],[479,36,519,36],[479,37,519,37,"stats"],[479,42,519,42],[479,43,519,43,"aoeRadius"],[479,52,519,52],[480,8,520,8],[480,9,520,9],[480,10,520,10],[480,13,521,8],[480,14,521,9,"findClosestEnemyInternal"],[480,38,521,33],[480,39,521,34,"state"],[480,44,521,39],[480,45,521,40,"enemies"],[480,52,521,47],[480,53,521,48],[480,54,521,49],[480,55,521,50,"filter"],[480,61,521,56],[480,62,521,57,"Boolean"],[480,69,521,64],[480,70,521,65],[481,8,523,6,"targets"],[481,15,523,13],[481,16,523,14,"forEach"],[481,23,523,21],[481,24,523,22,"target"],[481,30,523,28],[481,34,523,32],[482,10,524,8,"state"],[482,15,524,13],[482,16,524,14,"statusEffects"],[482,29,524,27],[482,30,524,28,"addEffect"],[482,39,524,37],[482,40,524,38,"target"],[482,46,524,44],[482,47,524,45,"id"],[482,49,524,47],[482,51,524,49],[483,12,525,10,"id"],[483,14,525,12],[483,16,525,14],[483,19,525,17,"ability"],[483,26,525,24],[483,27,525,25,"id"],[483,29,525,27],[483,35,525,33],[484,12,526,10,"type"],[484,16,526,14],[484,18,526,16],[484,23,526,21],[485,12,527,10,"remainingTicks"],[485,26,527,24],[485,28,527,26,"Math"],[485,32,527,30],[485,33,527,31,"floor"],[485,38,527,36],[485,39,527,37,"ability"],[485,46,527,44],[485,47,527,45,"stats"],[485,52,527,50],[485,53,527,51,"duration"],[485,61,527,59],[485,64,527,62],[485,66,527,64],[485,67,527,65],[486,12,528,10,"tickInterval"],[486,24,528,22],[486,26,528,24],[486,28,528,26],[487,12,529,10,"lastTick"],[487,20,529,18],[487,22,529,20,"state"],[487,27,529,25],[487,28,529,26,"currentTick"],[487,39,529,37],[488,12,530,10,"value"],[488,17,530,15],[488,19,530,17,"Math"],[488,23,530,21],[488,24,530,22,"floor"],[488,29,530,27],[488,30,530,28,"damage"],[488,36,530,34],[488,39,530,37],[488,42,530,40],[488,43,530,41],[489,12,531,10,"stackable"],[489,21,531,19],[489,23,531,21],[490,10,532,8],[490,11,532,9],[490,12,532,10],[491,8,533,6],[491,9,533,7],[491,10,533,8],[492,6,534,4],[494,6,536,4],[495,6,537,4],[495,10,537,8,"ability"],[495,17,537,15],[495,18,537,16,"effects"],[495,25,537,23],[495,26,537,24,"includes"],[495,34,537,32],[495,35,537,33],[495,41,537,39],[495,42,537,40],[495,46,537,44,"ability"],[495,53,537,51],[495,54,537,52,"id"],[495,56,537,54],[495,61,537,59],[495,75,537,73],[495,77,537,75],[496,8,538,6,"console"],[496,15,538,13],[496,16,538,14,"log"],[496,19,538,17],[496,20,538,18],[496,66,538,64,"ability"],[496,73,538,71],[496,74,538,72,"stats"],[496,79,538,77],[496,80,538,78,"duration"],[496,88,538,86],[496,98,538,96],[496,99,538,97],[498,8,540,6],[499,8,541,6],[499,12,541,12,"cloneX"],[499,18,541,18],[499,21,541,21,"currentNinjaPosition"],[499,41,541,41],[499,42,541,42,"x"],[499,43,541,43],[499,46,541,46],[499,48,541,48],[499,49,541,49],[499,50,541,50],[500,8,542,6],[500,12,542,12,"cloneY"],[500,18,542,18],[500,21,542,21,"currentNinjaPosition"],[500,41,542,41],[500,42,542,42,"y"],[500,43,542,43],[500,46,542,46],[500,48,542,48],[500,49,542,49],[500,50,542,50],[502,8,544,6,"state"],[502,13,544,11],[502,14,544,12,"shadowClone"],[502,25,544,23],[502,28,544,26],[503,10,545,8,"id"],[503,12,545,10],[503,14,545,12],[503,30,545,28,"Date"],[503,34,545,32],[503,35,545,33,"now"],[503,38,545,36],[503,39,545,37],[503,40,545,38],[503,42,545,40],[504,10,546,8,"remainingTicks"],[504,24,546,22],[504,26,546,24,"Math"],[504,30,546,28],[504,31,546,29,"floor"],[504,36,546,34],[504,37,546,35,"ability"],[504,44,546,42],[504,45,546,43,"stats"],[504,50,546,48],[504,51,546,49,"duration"],[504,59,546,57],[504,62,546,60],[504,64,546,62],[504,65,546,63],[505,10,546,65],[506,10,547,8,"position"],[506,18,547,16],[506,20,547,18],[507,12,547,20,"x"],[507,13,547,21],[507,15,547,23,"cloneX"],[507,21,547,29],[508,12,547,31,"y"],[508,13,547,32],[508,15,547,34,"cloneY"],[509,10,547,41],[509,11,547,42],[510,10,548,8,"damageMultiplier"],[510,26,548,24],[510,28,548,26],[510,31,548,29],[510,32,548,31],[511,8,549,6],[511,9,549,7],[512,8,551,6,"console"],[512,15,551,13],[512,16,551,14,"log"],[512,19,551,17],[512,20,551,18],[512,63,551,61,"ability"],[512,70,551,68],[512,71,551,69,"stats"],[512,76,551,74],[512,77,551,75,"duration"],[512,85,551,83],[512,108,551,106],[512,109,551,107],[513,6,552,4],[514,4,553,2],[514,5,553,3],[516,4,555,2],[517,4,556,2],[517,8,556,8,"createProjectile"],[517,24,556,24],[517,27,556,27,"createProjectile"],[517,28,556,28,"targetEnemy"],[517,39,556,52],[517,41,556,54,"damage"],[517,47,556,68],[517,49,556,70,"ninjaPos"],[517,57,556,103],[517,59,556,105,"abilityInfo"],[517,70,556,159],[517,75,556,164],[518,6,557,4],[518,10,557,10,"SCREEN_WIDTH"],[518,22,557,22],[518,25,557,25],[518,28,557,28],[519,6,558,4],[519,10,558,10,"GAME_AREA_HEIGHT"],[519,26,558,26],[519,29,558,29],[519,32,558,32],[519,35,558,35],[519,38,558,38],[519,39,558,39],[519,40,558,40],[520,6,559,4],[520,10,559,10,"NINJA_SIZE"],[520,20,559,20],[520,23,559,23],[520,25,559,25],[522,6,561,4],[523,6,562,4],[523,10,562,10,"ninjaX"],[523,16,562,16],[523,19,562,19,"ninjaPos"],[523,27,562,27],[523,30,562,30,"ninjaPos"],[523,38,562,38],[523,39,562,39,"x"],[523,40,562,40],[523,43,562,43,"NINJA_SIZE"],[523,53,562,53],[523,56,562,56],[523,57,562,57],[523,60,562,60,"SCREEN_WIDTH"],[523,72,562,72],[523,75,562,75],[523,76,562,76],[524,6,563,4],[524,10,563,10,"ninjaY"],[524,16,563,16],[524,19,563,19,"ninjaPos"],[524,27,563,27],[524,30,563,30,"ninjaPos"],[524,38,563,38],[524,39,563,39,"y"],[524,40,563,40],[524,43,563,43,"NINJA_SIZE"],[524,53,563,53],[524,56,563,56],[524,57,563,57],[524,60,563,60,"GAME_AREA_HEIGHT"],[524,76,563,76],[524,79,563,79],[524,80,563,80],[525,6,564,4],[525,10,564,10,"ENEMY_SIZE"],[525,20,564,20],[525,23,564,23],[525,25,564,25],[526,6,566,4],[526,10,566,10,"projectile"],[526,20,566,38],[526,23,566,41],[527,8,567,6,"id"],[527,10,567,8],[527,12,567,10],[527,20,567,18,"Date"],[527,24,567,22],[527,25,567,23,"now"],[527,28,567,26],[527,29,567,27],[527,30,567,28],[527,34,567,32,"Math"],[527,38,567,36],[527,39,567,37,"random"],[527,45,567,43],[527,46,567,44],[527,47,567,45],[527,49,567,47],[528,8,568,6,"x"],[528,9,568,7],[528,11,568,9,"ninjaX"],[528,17,568,15],[529,8,569,6,"y"],[529,9,569,7],[529,11,569,9,"ninjaY"],[529,17,569,15],[530,8,570,6,"targetX"],[530,15,570,13],[530,17,570,15,"targetEnemy"],[530,28,570,26],[530,29,570,27,"position"],[530,37,570,35],[530,38,570,36,"x"],[530,39,570,37],[530,42,570,40,"ENEMY_SIZE"],[530,52,570,50],[530,55,570,53],[530,56,570,54],[531,8,571,6,"targetY"],[531,15,571,13],[531,17,571,15,"targetEnemy"],[531,28,571,26],[531,29,571,27,"position"],[531,37,571,35],[531,38,571,36,"y"],[531,39,571,37],[531,42,571,40,"ENEMY_SIZE"],[531,52,571,50],[531,55,571,53],[531,56,571,54],[532,8,572,6,"targetEnemyId"],[532,21,572,19],[532,23,572,21,"targetEnemy"],[532,34,572,32],[532,35,572,33,"id"],[532,37,572,35],[533,8,573,6,"damage"],[533,14,573,12],[533,16,573,14,"damage"],[533,22,573,20],[534,8,574,6,"startTime"],[534,17,574,15],[534,19,574,17,"Date"],[534,23,574,21],[534,24,574,22,"now"],[534,27,574,25],[534,28,574,26],[534,29,574,27],[535,8,575,6,"duration"],[535,16,575,14],[535,18,575,16],[535,21,575,19],[536,8,575,21],[537,8,576,6],[538,8,577,6,"abilityId"],[538,17,577,15],[538,19,577,17,"abilityInfo"],[538,30,577,28],[538,32,577,30,"id"],[538,34,577,32],[538,38,577,36],[538,54,577,52],[539,8,578,6,"abilityName"],[539,19,578,17],[539,21,578,19,"abilityInfo"],[539,32,578,30],[539,34,578,32,"name"],[539,38,578,36],[539,42,578,40],[539,58,578,56],[540,8,579,6,"abilityIcon"],[540,19,579,17],[540,21,579,19,"abilityInfo"],[540,32,579,30],[540,34,579,32,"icon"],[540,38,579,36],[540,42,579,40],[540,46,579,44],[540,47,579,46],[541,6,580,4],[541,7,580,5],[542,6,582,4,"console"],[542,13,582,11],[542,14,582,12,"log"],[542,17,582,15],[542,18,582,16],[542,53,582,51,"targetEnemy"],[542,64,582,62],[542,65,582,63,"id"],[542,67,582,65],[542,75,582,73,"damage"],[542,81,582,79],[542,90,582,88],[542,91,582,89],[543,6,583,4,"console"],[543,13,583,11],[543,14,583,12,"log"],[543,17,583,15],[543,18,583,16],[543,53,583,51,"ninjaX"],[543,59,583,57],[543,64,583,62,"ninjaY"],[543,70,583,68],[543,87,583,85,"projectile"],[543,97,583,95],[543,98,583,96,"targetX"],[543,105,583,103],[543,110,583,108,"projectile"],[543,120,583,118],[543,121,583,119,"targetY"],[543,128,583,126],[543,131,583,129],[543,132,583,130],[544,6,585,4,"setProjectiles"],[544,20,585,18],[544,21,585,19,"prev"],[544,25,585,23],[544,29,585,27],[544,30,585,28],[544,33,585,31,"prev"],[544,37,585,35],[544,39,585,37,"projectile"],[544,49,585,47],[544,50,585,48],[544,51,585,49],[546,6,587,4],[547,6,588,4,"setTimeout"],[547,16,588,14],[547,17,588,15],[547,23,588,21],[548,8,589,6,"handleProjectileHit"],[548,27,589,25],[548,28,589,26,"projectile"],[548,38,589,36],[548,39,589,37],[549,6,590,4],[549,7,590,5],[549,9,590,7],[549,12,590,10],[549,13,590,11],[550,4,591,2],[550,5,591,3],[552,4,593,2],[553,4,594,2],[553,8,594,8,"spawnTestEnemy"],[553,22,594,22],[553,25,594,26,"state"],[553,30,594,44],[553,34,594,49],[554,6,595,4,"console"],[554,13,595,11],[554,14,595,12,"log"],[554,17,595,15],[554,18,595,16],[554,83,595,81],[554,84,595,82],[556,6,597,4],[557,6,598,4],[557,10,598,10,"zoneEnemy"],[557,19,598,19],[557,22,598,22,"spawnZoneEnemy"],[557,36,598,36],[557,37,598,37],[557,38,598,38],[558,6,599,4],[558,10,599,8],[558,11,599,9,"zoneEnemy"],[558,20,599,18],[558,22,599,20],[559,8,600,6,"console"],[559,15,600,13],[559,16,600,14,"log"],[559,19,600,17],[559,20,600,18],[559,76,600,74],[559,77,600,75],[560,8,601,6],[561,8,602,6,"spawnBasicTestEnemy"],[561,27,602,25],[561,28,602,26,"state"],[561,33,602,31],[561,34,602,32],[562,8,603,6],[563,6,604,4],[564,6,606,4,"console"],[564,13,606,11],[564,14,606,12,"log"],[564,17,606,15],[564,18,606,16],[564,44,606,42,"zoneEnemy"],[564,53,606,51],[564,54,606,52,"name"],[564,58,606,56],[564,63,606,61,"zoneEnemy"],[564,72,606,70],[564,73,606,71,"typeId"],[564,79,606,77],[564,94,606,92,"currentZone"],[564,105,606,103],[564,107,606,105,"id"],[564,109,606,107],[564,119,606,117,"currentZoneLevel"],[564,135,606,133],[564,137,606,135,"level"],[564,142,606,140],[564,144,606,142],[564,145,606,143],[566,6,608,4],[567,6,609,4],[567,10,609,10,"combatEnemy"],[567,21,609,34],[567,24,609,37],[568,8,610,6,"id"],[568,10,610,8],[568,12,610,10,"zoneEnemy"],[568,21,610,19],[568,22,610,20,"id"],[568,24,610,22],[569,8,611,6,"name"],[569,12,611,10],[569,14,611,12,"zoneEnemy"],[569,23,611,21],[569,24,611,22,"name"],[569,28,611,26],[570,8,612,6,"health"],[570,14,612,12],[570,16,612,14,"zoneEnemy"],[570,25,612,23],[570,26,612,24,"hp"],[570,28,612,26],[571,8,613,6,"maxHealth"],[571,17,613,15],[571,19,613,17,"zoneEnemy"],[571,28,613,26],[571,29,613,27,"maxHP"],[571,34,613,32],[572,8,614,6,"stats"],[572,13,614,11],[572,15,614,13],[573,10,615,8,"attack"],[573,16,615,14],[573,18,615,16,"zoneEnemy"],[573,27,615,25],[573,28,615,26,"attack"],[573,34,615,32],[574,10,616,8,"defense"],[574,17,616,15],[574,19,616,17],[574,21,616,19],[575,10,616,21],[576,10,617,8,"health"],[576,16,617,14],[576,18,617,16,"zoneEnemy"],[576,27,617,25],[576,28,617,26,"hp"],[576,30,617,28],[577,10,618,8,"maxHealth"],[577,19,618,17],[577,21,618,19,"zoneEnemy"],[577,30,618,28],[577,31,618,29,"maxHP"],[577,36,618,34],[578,10,619,8,"critChance"],[578,20,619,18],[578,22,619,20],[578,23,619,21],[579,10,620,8,"critDamage"],[579,20,620,18],[579,22,620,20],[579,25,620,23],[580,10,621,8,"cooldownReduction"],[580,27,621,25],[580,29,621,27],[581,8,622,6],[581,9,622,7],[582,8,623,6,"position"],[582,16,623,14],[582,18,623,16,"zoneEnemy"],[582,27,623,25],[582,28,623,26,"position"],[582,36,623,34],[583,8,624,6,"lastDamaged"],[583,19,624,17],[583,21,624,19],[583,22,624,20],[584,8,625,6],[585,8,626,6,"zoneTypeId"],[585,18,626,16],[585,20,626,18,"zoneEnemy"],[585,29,626,27],[585,30,626,28,"typeId"],[585,36,626,34],[586,8,627,6,"zoneXP"],[586,14,627,12],[586,16,627,14,"zoneEnemy"],[586,25,627,23],[586,26,627,24,"xp"],[587,6,628,4],[587,7,628,5],[588,6,630,4,"console"],[588,13,630,11],[588,14,630,12,"log"],[588,17,630,15],[588,18,630,16],[588,42,630,40,"combatEnemy"],[588,53,630,51],[588,54,630,52,"name"],[588,58,630,56],[588,67,630,65,"combatEnemy"],[588,78,630,76],[588,79,630,77,"health"],[588,85,630,83],[588,100,630,98,"currentZone"],[588,111,630,109],[588,113,630,111,"id"],[588,115,630,113],[588,125,630,123,"currentZoneLevel"],[588,141,630,139],[588,143,630,141,"level"],[588,148,630,146],[588,150,630,148],[588,151,630,149],[589,6,631,4,"state"],[589,11,631,9],[589,12,631,10,"enemies"],[589,19,631,17],[589,20,631,18,"push"],[589,24,631,22],[589,25,631,23,"combatEnemy"],[589,36,631,34],[589,37,631,35],[590,4,632,2],[590,5,632,3],[592,4,634,2],[593,4,635,2],[593,8,635,8,"spawnBasicTestEnemy"],[593,27,635,27],[593,30,635,31,"state"],[593,35,635,49],[593,39,635,54],[594,6,636,4],[594,10,636,10,"SCREEN_WIDTH"],[594,22,636,22],[594,25,636,25],[594,28,636,28],[595,6,637,4],[595,10,637,10,"GAME_AREA_HEIGHT"],[595,26,637,26],[595,29,637,29],[595,32,637,32],[595,35,637,35],[595,38,637,38],[596,6,638,4],[596,10,638,10,"ENEMY_SIZE"],[596,20,638,20],[596,23,638,23],[596,25,638,25],[597,6,640,4],[597,10,640,10,"x"],[597,11,640,11],[597,14,640,14,"Math"],[597,18,640,18],[597,19,640,19,"random"],[597,25,640,25],[597,26,640,26],[597,27,640,27],[597,31,640,31,"SCREEN_WIDTH"],[597,43,640,43],[597,46,640,46,"ENEMY_SIZE"],[597,56,640,56],[597,59,640,59],[597,60,640,60],[597,61,640,61],[597,64,640,64,"ENEMY_SIZE"],[597,74,640,74],[598,6,641,4],[598,10,641,10,"y"],[598,11,641,11],[598,14,641,14,"Math"],[598,18,641,18],[598,19,641,19,"random"],[598,25,641,25],[598,26,641,26],[598,27,641,27],[598,31,641,31,"GAME_AREA_HEIGHT"],[598,47,641,47],[598,50,641,50,"ENEMY_SIZE"],[598,60,641,60],[598,63,641,63],[598,64,641,64],[598,65,641,65],[598,68,641,68,"ENEMY_SIZE"],[598,78,641,78],[599,6,643,4],[599,10,643,10,"enemy"],[599,15,643,28],[599,18,643,31],[600,8,644,6,"id"],[600,10,644,8],[600,12,644,10],[600,30,644,28,"Date"],[600,34,644,32],[600,35,644,33,"now"],[600,38,644,36],[600,39,644,37],[600,40,644,38],[600,44,644,42,"Math"],[600,48,644,46],[600,49,644,47,"random"],[600,55,644,53],[600,56,644,54],[600,57,644,55],[600,59,644,57],[601,8,645,6,"name"],[601,12,645,10],[601,14,645,12],[601,26,645,24,"Math"],[601,30,645,28],[601,31,645,29,"floor"],[601,36,645,34],[601,37,645,35,"Math"],[601,41,645,39],[601,42,645,40,"random"],[601,48,645,46],[601,49,645,47],[601,50,645,48],[601,53,645,51],[601,56,645,54],[601,57,645,55],[601,59,645,57],[602,8,646,6,"health"],[602,14,646,12],[602,16,646,14],[602,18,646,16],[603,8,647,6,"maxHealth"],[603,17,647,15],[603,19,647,17],[603,21,647,19],[604,8,648,6,"stats"],[604,13,648,11],[604,15,648,13],[605,10,649,8,"attack"],[605,16,649,14],[605,18,649,16],[605,20,649,18],[606,10,650,8,"defense"],[606,17,650,15],[606,19,650,17],[606,21,650,19],[607,10,651,8,"health"],[607,16,651,14],[607,18,651,16],[607,20,651,18],[608,10,652,8,"maxHealth"],[608,19,652,17],[608,21,652,19],[608,23,652,21],[609,10,653,8,"critChance"],[609,20,653,18],[609,22,653,20],[609,23,653,21],[610,10,654,8,"critDamage"],[610,20,654,18],[610,22,654,20],[610,25,654,23],[611,10,655,8,"cooldownReduction"],[611,27,655,25],[611,29,655,27],[612,8,656,6],[612,9,656,7],[613,8,657,6,"position"],[613,16,657,14],[613,18,657,16],[614,10,657,18,"x"],[614,11,657,19],[615,10,657,21,"y"],[616,8,657,23],[616,9,657,24],[617,8,658,6,"lastDamaged"],[617,19,658,17],[617,21,658,19],[618,6,659,4],[618,7,659,5],[619,6,661,4,"console"],[619,13,661,11],[619,14,661,12,"log"],[619,17,661,15],[619,18,661,16],[619,42,661,40,"enemy"],[619,47,661,45],[619,48,661,46,"name"],[619,52,661,50],[619,60,661,58,"Math"],[619,64,661,62],[619,65,661,63,"round"],[619,70,661,68],[619,71,661,69,"x"],[619,72,661,70],[619,73,661,71],[619,78,661,76,"Math"],[619,82,661,80],[619,83,661,81,"round"],[619,88,661,86],[619,89,661,87,"y"],[619,90,661,88],[619,91,661,89],[619,94,661,92],[619,95,661,93],[620,6,662,4,"state"],[620,11,662,9],[620,12,662,10,"enemies"],[620,19,662,17],[620,20,662,18,"push"],[620,24,662,22],[620,25,662,23,"enemy"],[620,30,662,28],[620,31,662,29],[621,4,663,2],[621,5,663,3],[623,4,665,2],[624,4,666,2],[624,8,666,8,"startCombat"],[624,19,666,19],[624,22,666,22,"React"],[624,27,666,27],[624,28,666,27,"default"],[624,35,666,27],[624,36,666,28,"useCallback"],[624,47,666,39],[624,48,666,40],[624,54,666,46],[625,6,667,4,"console"],[625,13,667,11],[625,14,667,12,"log"],[625,17,667,15],[625,18,667,16],[625,63,667,61],[625,64,667,62],[626,6,668,4,"setCombatState"],[626,20,668,18],[626,21,668,19,"prev"],[626,25,668,23],[626,30,668,28],[627,8,668,30],[627,11,668,33,"prev"],[627,15,668,37],[628,8,668,39,"isInCombat"],[628,18,668,49],[628,20,668,51],[629,6,668,56],[629,7,668,57],[629,8,668,58],[629,9,668,59],[631,6,670,4],[632,6,671,4,"combatEngine"],[632,25,671,16],[632,26,671,16,"combatEngine"],[632,38,671,16],[632,39,671,17,"addTickCallback"],[632,54,671,32],[632,55,671,33,"handleCombatTick"],[632,71,671,49],[632,72,671,50],[633,6,672,4,"console"],[633,13,672,11],[633,14,672,12,"log"],[633,17,672,15],[633,18,672,16],[633,62,672,60],[633,63,672,61],[635,6,674,4],[636,6,675,4,"combatEngine"],[636,25,675,16],[636,26,675,16,"combatEngine"],[636,38,675,16],[636,39,675,17,"start"],[636,44,675,22],[636,45,675,23],[636,46,675,24],[637,4,676,2],[637,5,676,3],[637,7,676,5],[637,8,676,6,"combatEngine"],[637,27,676,18],[637,28,676,18,"combatEngine"],[637,40,676,18],[637,42,676,20,"handleCombatTick"],[637,58,676,36],[637,59,676,37],[637,60,676,38],[639,4,678,2],[640,4,679,2],[640,8,679,8,"stopCombat"],[640,18,679,18],[640,21,679,21,"React"],[640,26,679,26],[640,27,679,26,"default"],[640,34,679,26],[640,35,679,27,"useCallback"],[640,46,679,38],[640,47,679,39],[640,53,679,45],[641,6,680,4,"setCombatState"],[641,20,680,18],[641,21,680,19,"prev"],[641,25,680,23],[641,30,680,28],[642,8,680,30],[642,11,680,33,"prev"],[642,15,680,37],[643,8,680,39,"isInCombat"],[643,18,680,49],[643,20,680,51],[644,6,680,57],[644,7,680,58],[644,8,680,59],[644,9,680,60],[645,6,681,4,"combatEngine"],[645,25,681,16],[645,26,681,16,"combatEngine"],[645,38,681,16],[645,39,681,17,"removeTickCallback"],[645,57,681,35],[645,58,681,36,"handleCombatTick"],[645,74,681,52],[645,75,681,53],[646,4,682,2],[646,5,682,3],[646,7,682,5],[646,8,682,6,"combatEngine"],[646,27,682,18],[646,28,682,18,"combatEngine"],[646,40,682,18],[646,42,682,20,"handleCombatTick"],[646,58,682,36],[646,59,682,37],[646,60,682,38],[648,4,684,2],[649,4,685,2],[649,8,685,8,"equipAbility"],[649,20,685,20],[649,23,685,23,"equipAbility"],[649,24,685,24,"abilityId"],[649,33,685,41],[649,35,685,43,"slotIndex"],[649,44,685,60],[649,49,685,74],[650,6,686,4],[650,13,686,11,"combatState"],[650,24,686,22],[650,25,686,23,"abilityManager"],[650,39,686,37],[650,40,686,38,"equipAbility"],[650,52,686,50],[650,53,686,51,"abilityId"],[650,62,686,60],[650,64,686,62,"slotIndex"],[650,73,686,71],[650,74,686,72],[651,4,687,2],[651,5,687,3],[652,4,689,2],[652,8,689,8,"getDeck"],[652,15,689,15],[652,18,689,18,"getDeck"],[652,19,689,18],[652,24,689,24],[653,6,690,4],[653,13,690,11,"combatState"],[653,24,690,22],[653,25,690,23,"abilityManager"],[653,39,690,37],[653,40,690,38,"getDeck"],[653,47,690,45],[653,48,690,46],[653,49,690,47],[654,4,691,2],[654,5,691,3],[655,4,693,2],[655,8,693,8,"getAvailableAbilities"],[655,29,693,29],[655,32,693,32,"getAvailableAbilities"],[655,33,693,32],[655,38,693,38],[656,6,694,4],[656,13,694,11,"combatState"],[656,24,694,22],[656,25,694,23,"abilityManager"],[656,39,694,37],[656,40,694,38,"getAvailableAbilities"],[656,61,694,59],[656,62,694,60],[656,63,694,61],[657,4,695,2],[657,5,695,3],[658,4,697,2],[658,8,697,8,"upgradeAbility"],[658,22,697,22],[658,25,697,26,"abilityId"],[658,34,697,43],[658,38,697,57],[659,6,698,4],[659,13,698,11,"combatState"],[659,24,698,22],[659,25,698,23,"abilityManager"],[659,39,698,37],[659,40,698,38,"upgradeAbility"],[659,54,698,52],[659,55,698,53,"abilityId"],[659,64,698,62],[659,65,698,63],[660,4,699,2],[660,5,699,3],[662,4,701,2],[663,4,702,2],[663,8,702,8,"clearAllEnemies"],[663,23,702,23],[663,26,702,26,"clearAllEnemies"],[663,27,702,26],[663,32,702,32],[664,6,703,4,"console"],[664,13,703,11],[664,14,703,12,"log"],[664,17,703,15],[664,18,703,16],[664,67,703,65],[664,68,703,66],[665,6,704,4,"setCombatState"],[665,20,704,18],[665,21,704,19,"prev"],[665,25,704,23],[665,30,704,28],[666,8,705,6],[666,11,705,9,"prev"],[666,15,705,13],[667,8,706,6,"enemies"],[667,15,706,13],[667,17,706,15],[668,6,707,4],[668,7,707,5],[668,8,707,6],[668,9,707,7],[669,4,708,2],[669,5,708,3],[671,4,710,2],[672,4,711,2],[672,8,711,8,"triggerLevelUpExplosion"],[672,31,711,31],[672,34,711,34,"triggerLevelUpExplosion"],[672,35,711,34],[672,40,711,40],[673,6,712,4,"console"],[673,13,712,11],[673,14,712,12,"log"],[673,17,712,15],[673,18,712,16],[673,70,712,68],[673,71,712,69],[674,6,714,4],[674,10,714,10,"explosionTime"],[674,23,714,23],[674,26,714,26,"Date"],[674,30,714,30],[674,31,714,31,"now"],[674,34,714,34],[674,35,714,35],[674,36,714,36],[675,6,715,4,"setLastExplosionTime"],[675,26,715,24],[675,27,715,25,"explosionTime"],[675,40,715,38],[675,41,715,39],[676,6,717,4,"setCombatState"],[676,20,717,18],[676,21,717,19,"prev"],[676,25,717,23],[676,29,717,27],[677,8,718,6],[678,8,719,6],[678,12,719,12,"enemyCount"],[678,22,719,22],[678,25,719,25,"prev"],[678,29,719,29],[678,30,719,30,"enemies"],[678,37,719,37],[678,38,719,38,"length"],[678,44,719,44],[679,8,720,6],[679,12,720,12,"explosionXP"],[679,23,720,23],[679,26,720,26,"enemyCount"],[679,36,720,36],[679,39,720,39],[679,41,720,41],[679,42,720,42],[679,43,720,43],[680,8,721,6],[680,12,721,12,"explosionGold"],[680,25,721,25],[680,28,721,28,"enemyCount"],[680,38,721,38],[680,41,721,41],[680,42,721,42],[680,43,721,43],[680,44,721,44],[682,8,723,6,"console"],[682,15,723,13],[682,16,723,14,"log"],[682,19,723,17],[682,20,723,18],[682,44,723,42,"enemyCount"],[682,54,723,52],[682,76,723,74,"explosionXP"],[682,87,723,85],[682,98,723,96,"explosionGold"],[682,111,723,109],[682,118,723,116],[682,119,723,117],[684,8,725,6],[685,8,726,6],[685,12,726,10,"explosionXP"],[685,23,726,21],[685,26,726,24],[685,27,726,25],[685,29,726,27],[686,10,727,8,"setTimeout"],[686,20,727,18],[686,21,727,19],[686,27,727,25],[687,12,728,10,"game"],[687,16,728,14],[687,17,728,15,"updateNinja"],[687,28,728,26],[687,29,728,28,"ninja"],[687,34,728,33],[687,39,728,39],[688,14,729,12,"experience"],[688,24,729,22],[688,26,729,24,"ninja"],[688,31,729,29],[688,32,729,30,"experience"],[688,42,729,40],[688,45,729,43,"explosionXP"],[688,56,729,54],[689,14,730,12,"gold"],[689,18,730,16],[689,20,730,18,"ninja"],[689,25,730,23],[689,26,730,24,"gold"],[689,30,730,28],[689,33,730,31,"explosionGold"],[690,12,731,10],[690,13,731,11],[690,14,731,12],[690,15,731,13],[691,10,732,8],[691,11,732,9],[691,13,732,11],[691,14,732,12],[691,15,732,13],[691,16,732,14],[691,17,732,15],[692,8,733,6],[694,8,735,6],[695,8,736,6],[696,8,737,6],[696,12,737,12,"damagedEnemies"],[696,26,737,26],[696,29,737,29,"prev"],[696,33,737,33],[696,34,737,34,"enemies"],[696,41,737,41],[696,42,737,42,"map"],[696,45,737,45],[696,46,737,46,"enemy"],[696,51,737,51],[696,56,737,56],[697,10,738,8],[697,13,738,11,"enemy"],[697,18,738,16],[698,10,739,8,"health"],[698,16,739,14],[698,18,739,16],[698,19,739,17],[699,10,739,19],[700,10,740,8,"lastDamaged"],[700,21,740,19],[700,23,740,21,"combatEngine"],[700,42,740,33],[700,43,740,33,"combatEngine"],[700,55,740,33],[700,56,740,34,"getCurrentTick"],[700,70,740,48],[700,71,740,49],[701,8,741,6],[701,9,741,7],[701,10,741,8],[701,11,741,9],[702,8,743,6],[702,15,743,13],[703,10,744,8],[703,13,744,11,"prev"],[703,17,744,15],[704,10,745,8,"enemies"],[704,17,745,15],[704,19,745,17,"damagedEnemies"],[705,8,746,6],[705,9,746,7],[706,6,747,4],[706,7,747,5],[706,8,747,6],[707,4,748,2],[707,5,748,3],[709,4,750,2],[710,4,751,2],[710,8,751,8,"spawnEnemy"],[710,18,751,18],[710,21,751,22,"position"],[710,29,751,57],[710,33,751,75],[711,6,752,4],[711,10,752,10,"SCREEN_WIDTH"],[711,22,752,22],[711,25,752,25],[711,28,752,28],[712,6,753,4],[712,10,753,10,"GAME_AREA_HEIGHT"],[712,26,753,26],[712,29,753,29],[712,32,753,32],[712,35,753,35],[712,38,753,38],[712,39,753,39],[712,40,753,40],[713,6,754,4],[713,10,754,10,"ENEMY_SIZE"],[713,20,754,20],[713,23,754,23],[713,25,754,25],[715,6,756,4],[716,6,757,4],[716,10,757,10,"x"],[716,11,757,11],[716,14,757,14,"position"],[716,22,757,22],[716,24,757,24,"x"],[716,25,757,25],[716,29,757,29,"Math"],[716,33,757,33],[716,34,757,34,"random"],[716,40,757,40],[716,41,757,41],[716,42,757,42],[716,46,757,46,"SCREEN_WIDTH"],[716,58,757,58],[716,61,757,61,"ENEMY_SIZE"],[716,71,757,71],[716,74,757,74],[716,75,757,75],[716,76,757,76],[716,79,757,79,"ENEMY_SIZE"],[716,89,757,89],[717,6,758,4],[717,10,758,10,"y"],[717,11,758,11],[717,14,758,14,"position"],[717,22,758,22],[717,24,758,24,"y"],[717,25,758,25],[717,29,758,29,"Math"],[717,33,758,33],[717,34,758,34,"random"],[717,40,758,40],[717,41,758,41],[717,42,758,42],[717,46,758,46,"GAME_AREA_HEIGHT"],[717,62,758,62],[717,65,758,65,"ENEMY_SIZE"],[717,75,758,75],[717,78,758,78],[717,79,758,79],[717,80,758,80],[717,83,758,83,"ENEMY_SIZE"],[717,93,758,93],[718,6,760,4],[718,10,760,10,"enemy"],[718,15,760,28],[718,18,760,31],[719,8,761,6,"id"],[719,10,761,8],[719,12,761,10],[719,21,761,19],[719,23,761,21,"enemyCounter"],[719,35,761,33],[719,37,761,35],[720,8,762,6,"name"],[720,12,762,10],[720,14,762,12],[720,24,762,22],[721,8,763,6,"health"],[721,14,763,12],[721,16,763,14],[721,19,763,17],[722,8,764,6,"maxHealth"],[722,17,764,15],[722,19,764,17],[722,22,764,20],[723,8,765,6,"stats"],[723,13,765,11],[723,15,765,13],[724,10,766,8,"attack"],[724,16,766,14],[724,18,766,16],[724,20,766,18],[725,10,767,8,"defense"],[725,17,767,15],[725,19,767,17],[725,21,767,19],[726,10,768,8,"health"],[726,16,768,14],[726,18,768,16],[726,21,768,19],[727,10,769,8,"maxHealth"],[727,19,769,17],[727,21,769,19],[727,24,769,22],[728,10,770,8,"critChance"],[728,20,770,18],[728,22,770,20],[728,23,770,21],[729,10,771,8,"critDamage"],[729,20,771,18],[729,22,771,20],[729,25,771,23],[730,10,772,8,"cooldownReduction"],[730,27,772,25],[730,29,772,27],[731,8,773,6],[731,9,773,7],[732,8,774,6,"position"],[732,16,774,14],[732,18,774,16],[733,10,774,18,"x"],[733,11,774,19],[734,10,774,21,"y"],[735,8,774,23],[735,9,774,24],[736,8,775,6,"lastDamaged"],[736,19,775,17],[736,21,775,19],[737,6,776,4],[737,7,776,5],[738,6,778,4,"setCombatState"],[738,20,778,18],[738,21,778,19,"prev"],[738,25,778,23],[738,30,778,28],[739,8,779,6],[739,11,779,9,"prev"],[739,15,779,13],[740,8,780,6,"enemies"],[740,15,780,13],[740,17,780,15],[740,18,780,16],[740,21,780,19,"prev"],[740,25,780,23],[740,26,780,24,"enemies"],[740,33,780,31],[740,35,780,33,"enemy"],[740,40,780,38],[741,6,781,4],[741,7,781,5],[741,8,781,6],[741,9,781,7],[742,6,783,4],[742,13,783,11,"enemy"],[742,18,783,16],[743,4,784,2],[743,5,784,3],[745,4,786,2],[746,4,787,2],[746,8,787,8,"spawnBoss"],[746,17,787,17],[746,20,787,21,"bossEnemy"],[746,29,787,43],[746,33,787,48],[747,6,788,4,"console"],[747,13,788,11],[747,14,788,12,"log"],[747,17,788,15],[747,18,788,16],[747,39,788,37,"bossEnemy"],[747,48,788,46],[747,49,788,47,"name"],[747,53,788,51],[747,90,788,88],[747,91,788,89],[748,6,789,4,"setCombatState"],[748,20,789,18],[748,21,789,19,"prev"],[748,25,789,23],[748,30,789,28],[749,8,790,6],[749,11,790,9,"prev"],[749,15,790,13],[750,8,791,6,"enemies"],[750,15,791,13],[750,17,791,15],[750,18,791,16,"bossEnemy"],[750,27,791,25],[750,28,791,26],[750,29,791,27],[751,6,792,4],[751,7,792,5],[751,8,792,6],[751,9,792,7],[752,4,793,2],[752,5,793,3],[754,4,795,2],[755,4,796,2],[755,8,796,8,"clearSpecificEnemy"],[755,26,796,26],[755,29,796,30,"enemyId"],[755,36,796,45],[755,40,796,50],[756,6,797,4,"setCombatState"],[756,20,797,18],[756,21,797,19,"prev"],[756,25,797,23],[756,30,797,28],[757,8,798,6],[757,11,798,9,"prev"],[757,15,798,13],[758,8,799,6,"enemies"],[758,15,799,13],[758,17,799,15,"prev"],[758,21,799,19],[758,22,799,20,"enemies"],[758,29,799,27],[758,30,799,28,"filter"],[758,36,799,34],[758,37,799,35,"enemy"],[758,42,799,40],[758,46,799,44,"enemy"],[758,51,799,49],[758,52,799,50,"id"],[758,54,799,52],[758,59,799,57,"enemyId"],[758,66,799,64],[759,6,800,4],[759,7,800,5],[759,8,800,6],[759,9,800,7],[760,4,801,2],[760,5,801,3],[762,4,803,2],[763,4,804,2],[763,8,804,8,"useAbilityManually"],[763,26,804,26],[763,29,804,26,"_s3"],[763,32,804,26],[763,33,804,29],[763,37,804,29,"useCallback"],[763,43,804,40],[763,44,804,40,"useCallback"],[763,55,804,40],[763,57,804,40,"_s3"],[763,60,804,40],[763,61,804,42,"slotIndex"],[763,70,804,59],[763,74,804,73],[764,6,804,73,"_s3"],[764,9,804,73],[765,6,805,4,"console"],[765,13,805,11],[765,14,805,12,"log"],[765,17,805,15],[765,18,805,16],[765,53,805,51,"slotIndex"],[765,62,805,60],[765,64,805,62],[765,65,805,63],[767,6,807,4],[768,6,808,4],[768,10,808,10,"isReady"],[768,17,808,17],[768,20,808,20,"combatState"],[768,31,808,31],[768,32,808,32,"abilityManager"],[768,46,808,46],[768,47,808,47,"isAbilityReady"],[768,61,808,61],[768,62,808,62,"slotIndex"],[768,71,808,71],[768,72,808,72],[769,6,809,4],[769,10,809,8],[769,11,809,9,"isReady"],[769,18,809,16],[769,20,809,18],[770,8,810,6,"console"],[770,15,810,13],[770,16,810,14,"log"],[770,19,810,17],[770,20,810,18],[770,41,810,39,"slotIndex"],[770,50,810,48],[770,85,810,83],[770,86,810,84],[771,8,811,6],[771,15,811,13],[771,20,811,18],[772,6,812,4],[774,6,814,4],[775,6,815,4],[775,10,815,8,"combatState"],[775,21,815,19],[775,22,815,20,"enemies"],[775,29,815,27],[775,30,815,28,"length"],[775,36,815,34],[775,41,815,39],[775,42,815,40],[775,44,815,42],[776,8,816,6,"console"],[776,15,816,13],[776,16,816,14,"log"],[776,19,816,17],[776,20,816,18],[776,69,816,67],[776,70,816,68],[777,8,817,6],[777,15,817,13],[777,20,817,18],[778,6,818,4],[780,6,820,4],[781,6,821,4],[781,10,821,10,"currentTick"],[781,21,821,21],[781,24,821,24,"combatEngine"],[781,43,821,36],[781,44,821,36,"combatEngine"],[781,56,821,36],[781,57,821,37,"getCurrentTick"],[781,71,821,51],[781,72,821,52],[781,73,821,53],[782,6,822,4],[782,10,822,10,"success"],[782,17,822,17],[782,20,822,20,"combatState"],[782,31,822,31],[782,32,822,32,"abilityManager"],[782,46,822,46],[782,47,822,47,"useAbility"],[782,57,822,57],[782,58,822,58,"slotIndex"],[782,67,822,67],[782,69,822,69,"currentTick"],[782,80,822,80],[782,81,822,81],[783,6,824,4],[783,10,824,8,"success"],[783,17,824,15],[783,19,824,17],[784,8,825,6],[785,8,826,6,"setCombatState"],[785,22,826,20],[785,23,826,21,"prev"],[785,27,826,25],[785,31,826,29],[786,10,827,8],[786,14,827,14,"newState"],[786,22,827,22],[786,25,827,25],[787,12,827,27],[787,15,827,30,"prev"],[788,10,827,35],[788,11,827,36],[789,10,828,8,"castAbility"],[789,21,828,19],[789,22,828,20,"newState"],[789,30,828,28],[789,32,828,30,"slotIndex"],[789,41,828,39],[789,42,828,40],[790,10,829,8],[790,17,829,15,"newState"],[790,25,829,23],[791,8,830,6],[791,9,830,7],[791,10,830,8],[792,8,832,6,"console"],[792,15,832,13],[792,16,832,14,"log"],[792,19,832,17],[792,20,832,18],[792,65,832,63,"slotIndex"],[792,74,832,72],[792,76,832,74],[792,77,832,75],[793,8,833,6],[793,15,833,13],[793,19,833,17],[794,6,834,4],[794,7,834,5],[794,13,834,11],[795,8,835,6,"console"],[795,15,835,13],[795,16,835,14,"log"],[795,19,835,17],[795,20,835,18],[795,61,835,59,"slotIndex"],[795,70,835,68],[795,72,835,70],[795,73,835,71],[796,8,836,6],[796,15,836,13],[796,20,836,18],[797,6,837,4],[798,4,838,2],[798,5,838,3],[798,46,838,5],[798,47,838,6,"combatState"],[798,58,838,17],[798,59,838,18,"abilityManager"],[798,73,838,32],[798,75,838,34,"combatState"],[798,86,838,45],[798,87,838,46,"enemies"],[798,94,838,53],[798,95,838,54],[798,96,838,55],[799,4,839,2],[799,8,839,2,"useEffect"],[799,14,839,11],[799,15,839,11,"useEffect"],[799,24,839,11],[799,26,839,12],[799,32,839,18],[800,6,840,4,"combatEngine"],[800,25,840,16],[800,26,840,16,"combatEngine"],[800,38,840,16],[800,39,840,17,"start"],[800,44,840,22],[800,45,840,23],[800,46,840,24],[802,6,842,4],[803,6,843,4],[804,6,844,4,"console"],[804,13,844,11],[804,14,844,12,"log"],[804,17,844,15],[804,18,844,16],[804,97,844,95],[804,98,844,96],[805,6,846,4],[805,13,846,11],[805,19,846,17],[806,8,847,6,"combatEngine"],[806,27,847,18],[806,28,847,18,"combatEngine"],[806,40,847,18],[806,41,847,19,"stop"],[806,45,847,23],[806,46,847,24],[806,47,847,25],[807,6,848,4],[807,7,848,5],[808,4,849,2],[808,5,849,3],[808,7,849,5],[808,9,849,7],[808,10,849,8],[810,4,851,2],[811,4,852,2],[811,8,852,8,"saveAbilityData"],[811,23,852,23],[811,26,852,26],[811,30,852,26,"useCallback"],[811,36,852,37],[811,37,852,37,"useCallback"],[811,48,852,37],[811,50,852,38],[811,56,852,44],[812,6,853,4],[812,10,853,8,"combatState"],[812,21,853,19],[812,22,853,20,"abilityManager"],[812,36,853,34],[812,38,853,36],[813,8,854,6],[813,12,854,12,"abilityData"],[813,23,854,23],[813,26,854,26,"combatState"],[813,37,854,37],[813,38,854,38,"abilityManager"],[813,52,854,52],[813,53,854,53,"getSaveData"],[813,64,854,64],[813,65,854,65],[813,66,854,66],[814,8,855,6,"console"],[814,15,855,13],[814,16,855,14,"log"],[814,19,855,17],[814,20,855,18],[814,70,855,68],[814,72,855,70,"abilityData"],[814,83,855,81],[814,84,855,82],[815,8,856,6,"game"],[815,12,856,10],[815,13,856,11,"updateAbilityData"],[815,30,856,28],[815,31,856,29,"abilityData"],[815,42,856,40],[815,43,856,41],[816,6,857,4],[817,4,858,2],[817,5,858,3],[817,7,858,5],[817,8,858,6,"combatState"],[817,19,858,17],[817,20,858,18,"abilityManager"],[817,34,858,32],[817,36,858,34,"game"],[817,40,858,38],[817,41,858,39,"updateAbilityData"],[817,58,858,56],[817,59,858,57],[817,60,858,58],[818,4,860,2],[818,8,860,8,"contextValue"],[818,20,860,39],[818,23,860,42,"React"],[818,28,860,47],[818,29,860,47,"default"],[818,36,860,47],[818,37,860,48,"useMemo"],[818,44,860,55],[818,45,860,56],[818,52,860,63],[819,6,861,4,"combatState"],[819,17,861,15],[820,6,862,4,"projectiles"],[820,17,862,15],[821,6,863,4,"startCombat"],[821,17,863,15],[822,6,864,4,"stopCombat"],[822,16,864,14],[823,6,865,4,"equipAbility"],[823,18,865,16],[824,6,866,4,"handleEnemyKill"],[824,21,866,19],[825,6,867,4,"getDeck"],[825,13,867,11],[826,6,868,4,"getAvailableAbilities"],[826,27,868,25],[827,6,869,4,"upgradeAbility"],[827,20,869,18],[828,6,870,4,"spawnEnemy"],[828,16,870,14],[829,6,871,4,"spawnBoss"],[829,15,871,13],[830,6,872,4,"clearAllEnemies"],[830,21,872,19],[831,6,873,4,"clearSpecificEnemy"],[831,24,873,22],[832,6,874,4,"triggerLevelUpExplosion"],[832,29,874,27],[833,6,875,4,"findClosestEnemy"],[833,22,875,20],[834,6,876,4,"updateNinjaPosition"],[834,25,876,23],[835,6,877,4,"setManualControlActive"],[835,28,877,26],[836,6,878,4,"lastExplosionTime"],[836,23,878,21],[837,6,879,4,"useAbilityManually"],[837,24,879,22],[838,6,879,24],[839,6,880,4,"saveAbilityData"],[839,21,880,19],[840,6,880,21],[841,6,881,4,"shadowClone"],[841,17,881,15],[841,19,881,17,"combatState"],[841,30,881,28],[841,31,881,29,"shadowClone"],[841,42,881,40],[841,43,881,42],[842,4,882,2],[842,5,882,3],[842,6,882,4],[842,8,882,6],[843,4,883,4],[844,4,884,4],[845,4,885,4,"combatState"],[845,15,885,15],[845,17,886,4,"projectiles"],[845,28,886,15],[845,30,887,4,"lastExplosionTime"],[845,47,887,21],[846,4,888,4],[847,4,889,4,"combatState"],[847,15,889,15],[847,16,889,16,"abilityManager"],[847,30,889,30],[847,32,890,4,"combatState"],[847,43,890,15],[847,44,890,16,"enemies"],[847,51,890,23],[847,53,891,4,"combatState"],[847,64,891,15],[847,65,891,16,"shadowClone"],[847,76,891,27],[848,4,891,29],[849,4,892,4,"useAbilityManually"],[849,22,892,22],[850,4,892,24],[851,4,893,4,"saveAbilityData"],[851,19,893,19],[851,20,893,21],[852,4,893,21],[852,5,894,3],[852,6,894,4],[853,4,896,2],[853,24,897,4],[853,28,897,4,"_reactJsxDevRuntime"],[853,47,897,4],[853,48,897,4,"jsxDEV"],[853,54,897,4],[853,56,897,5,"CombatContext"],[853,69,897,18],[853,70,897,19,"Provider"],[853,78,897,27],[854,6,897,28,"value"],[854,11,897,33],[854,13,897,35,"contextValue"],[854,25,897,48],[855,6,897,48,"children"],[855,14,897,48],[855,16,898,7,"children"],[856,4,898,15],[857,6,898,15,"fileName"],[857,14,898,15],[857,16,898,15,"_jsxFileName"],[857,28,898,15],[858,6,898,15,"lineNumber"],[858,16,898,15],[859,6,898,15,"columnNumber"],[859,18,898,15],[860,4,898,15],[860,11,899,28],[860,12,899,29],[861,2,901,0],[861,3,901,1],[862,2,901,2,"_s4"],[862,5,901,2],[862,6,98,13,"CombatProvider"],[862,20,98,27],[863,4,98,27],[863,12,99,15,"useGame"],[863,24,99,22],[863,25,99,22,"useGame"],[863,32,99,22],[863,34,100,77,"useZone"],[863,46,100,84],[863,47,100,84,"useZone"],[863,54,100,84],[864,2,100,84],[865,2,100,84,"_c"],[865,4,100,84],[865,7,98,13,"CombatProvider"],[865,21,98,27],[866,2,98,27],[866,6,98,27,"_c"],[866,8,98,27],[867,2,98,27,"$RefreshReg$"],[867,14,98,27],[867,15,98,27,"_c"],[867,17,98,27],[868,0,98,27],[868,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCgB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}