{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":930,"map":[[15,2,89,0,"Object"],[15,8,89,0],[15,9,89,0,"defineProperty"],[15,23,89,0],[15,24,89,0,"exports"],[15,31,89,0],[16,4,89,0,"enumerable"],[16,14,89,0],[17,4,89,0,"get"],[17,7,89,0],[17,18,89,0,"get"],[17,19,89,0],[18,6,89,0],[18,13,89,0,"useCombat"],[18,22,89,0],[19,4,89,0],[20,2,89,0],[21,2,99,0,"Object"],[21,8,99,0],[21,9,99,0,"defineProperty"],[21,23,99,0],[21,24,99,0,"exports"],[21,31,99,0],[22,4,99,0,"enumerable"],[22,14,99,0],[23,4,99,0,"get"],[23,7,99,0],[23,18,99,0,"get"],[23,19,99,0],[24,6,99,0],[24,13,99,0,"CombatProvider"],[24,27,99,0],[25,4,99,0],[26,2,99,0],[27,2,968,2],[27,6,968,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,968,2],[27,42,968,2,"require"],[27,49,968,2],[27,50,968,2,"_dependencyMap"],[27,64,968,2],[28,2,968,2],[28,6,968,2,"_slicedToArray"],[28,20,968,2],[28,23,968,2,"_interopDefault"],[28,38,968,2],[28,39,968,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,968,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,87,0],[37,6,87,6,"CombatContext"],[37,19,87,19],[37,35,87,22],[37,39,87,22,"createContext"],[37,45,87,35],[37,46,87,35,"createContext"],[37,59,87,35],[37,61,87,67,"undefined"],[37,70,87,76],[37,71,87,77],[38,2,89,7],[38,6,89,13,"useCombat"],[38,15,89,22],[38,18,89,25,"useCombat"],[38,19,89,25],[38,24,89,50],[39,4,89,50,"_s"],[39,6,89,50],[40,4,90,2],[40,8,90,8,"context"],[40,15,90,15],[40,18,90,18],[40,22,90,18,"useContext"],[40,28,90,28],[40,29,90,28,"useContext"],[40,39,90,28],[40,41,90,29,"CombatContext"],[40,54,90,42],[40,55,90,43],[41,4,91,2],[41,8,91,6],[41,9,91,7,"context"],[41,16,91,14],[41,18,91,16],[42,6,92,4],[42,12,92,10],[42,16,92,14,"Error"],[42,21,92,19],[42,22,92,20],[42,70,92,68],[42,71,92,69],[43,4,93,2],[44,4,94,2],[44,11,94,9,"context"],[44,18,94,16],[45,2,95,0],[45,3,95,1],[46,2,95,2,"_s"],[46,4,95,2],[46,5,89,13,"useCombat"],[46,14,89,22],[47,2,97,0],[47,6,97,4,"enemyCounter"],[47,18,97,16],[47,21,97,19],[47,22,97,20],[47,23,97,21],[47,24,97,22],[49,2,99,7],[49,6,99,13,"CombatProvider"],[49,20,99,27],[49,23,99,30,"_ref"],[49,27,99,30],[49,31,99,73],[50,4,99,73,"_s4"],[50,7,99,73],[51,4,99,73],[51,8,99,73,"_s3"],[51,11,99,73],[51,14,99,73,"$RefreshSig$"],[51,26,99,73],[52,4,99,73],[52,8,99,33,"children"],[52,16,99,41],[52,19,99,41,"_ref"],[52,23,99,41],[52,24,99,33,"children"],[52,32,99,41],[53,4,100,2],[53,8,100,8,"game"],[53,12,100,12],[53,15,100,15],[53,19,100,15,"useGame"],[53,31,100,22],[53,32,100,22,"useGame"],[53,39,100,22],[53,41,100,23],[53,42,100,24],[54,4,101,2],[54,8,101,2,"_useZone"],[54,16,101,2],[54,19,101,77],[54,23,101,77,"useZone"],[54,35,101,84],[54,36,101,84,"useZone"],[54,43,101,84],[54,45,101,85],[54,46,101,86],[55,6,101,10,"currentZone"],[55,17,101,21],[55,20,101,21,"_useZone"],[55,28,101,21],[55,29,101,10,"currentZone"],[55,40,101,21],[56,6,101,23,"currentZoneLevel"],[56,22,101,39],[56,25,101,39,"_useZone"],[56,33,101,39],[56,34,101,23,"currentZoneLevel"],[56,50,101,39],[57,6,101,41,"recordEnemyKill"],[57,21,101,56],[57,24,101,56,"_useZone"],[57,32,101,56],[57,33,101,41,"recordEnemyKill"],[57,48,101,56],[58,6,101,58,"spawnZoneEnemy"],[58,20,101,72],[58,23,101,72,"_useZone"],[58,31,101,72],[58,32,101,58,"spawnZoneEnemy"],[58,46,101,72],[60,4,103,2],[61,4,104,2],[61,8,104,8,"initialCombatState"],[61,26,104,39],[61,29,104,42],[62,6,105,4,"isInCombat"],[62,16,105,14],[62,18,105,16],[62,23,105,21],[63,6,106,4,"currentTick"],[63,17,106,15],[63,19,106,17],[63,20,106,18],[64,6,107,4,"enemies"],[64,13,107,11],[64,15,107,13],[64,17,107,15],[65,6,108,4,"abilityManager"],[65,20,108,18],[65,22,108,20],[65,26,108,24,"AbilityManager"],[65,44,108,38],[65,45,108,38,"AbilityManager"],[65,59,108,38],[65,60,108,39],[65,61,108,40],[66,6,109,4,"statusEffects"],[66,19,109,17],[66,21,109,19],[66,25,109,23,"StatusEffectManager"],[66,44,109,42],[66,45,109,42,"StatusEffectManager"],[66,64,109,42],[66,65,109,43],[66,66,109,44],[67,6,110,4,"playerStats"],[67,17,110,15],[67,19,110,17],[68,8,111,6,"attack"],[68,14,111,12],[68,16,111,14],[68,18,111,16],[69,8,111,18],[70,8,112,6,"defense"],[70,15,112,13],[70,17,112,15],[70,18,112,16],[71,8,113,6,"health"],[71,14,113,12],[71,16,113,14],[71,19,113,17],[72,8,114,6,"maxHealth"],[72,17,114,15],[72,19,114,17],[72,22,114,20],[73,8,115,6,"critChance"],[73,18,115,16],[73,20,115,18],[73,21,115,19],[74,8,116,6,"critDamage"],[74,18,116,16],[74,20,116,18],[74,23,116,21],[75,8,117,6,"cooldownReduction"],[75,25,117,23],[75,27,117,25],[76,6,118,4],[77,4,119,2],[77,5,119,3],[78,4,121,2],[78,8,121,2,"_useState"],[78,17,121,2],[78,20,121,40],[78,24,121,40,"useState"],[78,30,121,48],[78,31,121,48,"useState"],[78,39,121,48],[78,41,121,62,"initialCombatState"],[78,59,121,80],[78,60,121,81],[79,6,121,81,"_useState2"],[79,16,121,81],[79,23,121,81,"_slicedToArray"],[79,37,121,81],[79,38,121,81,"default"],[79,45,121,81],[79,47,121,81,"_useState"],[79,56,121,81],[80,6,121,9,"combatState"],[80,17,121,20],[80,20,121,20,"_useState2"],[80,30,121,20],[81,6,121,22,"setCombatState"],[81,20,121,36],[81,23,121,36,"_useState2"],[81,33,121,36],[83,4,123,2],[84,4,124,2],[84,8,124,2,"useEffect"],[84,14,124,11],[84,15,124,11,"useEffect"],[84,24,124,11],[84,26,124,12],[84,32,124,18],[85,6,125,4],[85,10,125,8,"game"],[85,14,125,12],[85,15,125,13,"gameState"],[85,24,125,22],[85,25,125,23,"abilityData"],[85,36,125,34],[85,40,125,38,"combatState"],[85,51,125,49],[85,52,125,50,"abilityManager"],[85,66,125,64],[85,68,125,66],[86,8,126,6,"console"],[86,15,126,13],[86,16,126,14,"log"],[86,19,126,17],[86,20,126,18],[86,68,126,66],[86,70,126,68,"game"],[86,74,126,72],[86,75,126,73,"gameState"],[86,84,126,82],[86,85,126,83,"abilityData"],[86,96,126,94],[86,97,126,95],[87,8,127,6,"combatState"],[87,19,127,17],[87,20,127,18,"abilityManager"],[87,34,127,32],[87,35,127,33,"restoreFromSaveData"],[87,54,127,52],[87,55,127,53,"game"],[87,59,127,57],[87,60,127,58,"gameState"],[87,69,127,67],[87,70,127,68,"abilityData"],[87,81,127,79],[87,82,127,80],[89,8,129,6],[90,8,130,6,"setCombatState"],[90,22,130,20],[90,23,130,21,"prev"],[90,27,130,25],[90,32,130,30],[91,10,130,32],[91,13,130,35,"prev"],[92,8,130,40],[92,9,130,41],[92,10,130,42],[92,11,130,43],[93,6,131,4],[94,4,132,2],[94,5,132,3],[94,7,132,5],[94,8,132,6,"game"],[94,12,132,10],[94,13,132,11,"gameState"],[94,22,132,20],[94,23,132,21,"abilityData"],[94,34,132,32],[94,36,132,34,"combatState"],[94,47,132,45],[94,48,132,46,"abilityManager"],[94,62,132,60],[94,63,132,61],[94,64,132,62],[95,4,134,2],[95,8,134,2,"_useState3"],[95,18,134,2],[95,21,134,40],[95,25,134,40,"useState"],[95,31,134,48],[95,32,134,48,"useState"],[95,40,134,48],[95,42,134,69],[95,44,134,71],[95,45,134,72],[96,6,134,72,"_useState4"],[96,16,134,72],[96,23,134,72,"_slicedToArray"],[96,37,134,72],[96,38,134,72,"default"],[96,45,134,72],[96,47,134,72,"_useState3"],[96,57,134,72],[97,6,134,9,"projectiles"],[97,17,134,20],[97,20,134,20,"_useState4"],[97,30,134,20],[98,6,134,22,"setProjectiles"],[98,20,134,36],[98,23,134,36,"_useState4"],[98,33,134,36],[99,4,135,2],[99,8,135,2,"_useState5"],[99,18,135,2],[99,21,135,52],[99,25,135,52,"useState"],[99,31,135,60],[99,32,135,60,"useState"],[99,40,135,60],[99,42,135,69],[99,43,135,70],[99,44,135,71],[100,6,135,71,"_useState6"],[100,16,135,71],[100,23,135,71,"_slicedToArray"],[100,37,135,71],[100,38,135,71,"default"],[100,45,135,71],[100,47,135,71,"_useState5"],[100,57,135,71],[101,6,135,9,"lastExplosionTime"],[101,23,135,26],[101,26,135,26,"_useState6"],[101,36,135,26],[102,6,135,28,"setLastExplosionTime"],[102,26,135,48],[102,29,135,48,"_useState6"],[102,39,135,48],[103,4,136,2],[104,4,137,2],[106,4,139,2],[107,4,140,2],[107,8,140,8,"handleEnemyKill"],[107,23,140,23],[107,26,140,26],[107,30,140,26,"useCallback"],[107,36,140,37],[107,37,140,37,"useCallback"],[107,48,140,37],[107,50,140,39,"enemy"],[107,55,140,57],[107,59,140,62],[108,6,141,4,"console"],[108,13,141,11],[108,14,141,12,"log"],[108,17,141,15],[108,18,141,16],[108,73,141,71],[108,75,141,73,"enemy"],[108,80,141,78],[108,81,141,79,"id"],[108,83,141,81],[108,84,141,82],[110,6,143,4],[111,6,144,4],[111,10,144,10,"baseXpReward"],[111,22,144,22],[111,25,144,25],[111,28,144,28],[111,29,144,29],[111,30,144,30],[112,6,145,4],[112,10,145,10,"xpMultiplier"],[112,22,145,22],[112,25,145,25,"game"],[112,29,145,29],[112,30,145,30,"gameState"],[112,39,145,39],[112,40,145,40,"subscriptionBenefits"],[112,60,145,60],[112,62,145,62,"xp_multiplier"],[112,75,145,75],[112,79,145,79],[112,82,145,82],[113,6,146,4],[113,10,146,10,"dropMultiplier"],[113,24,146,24],[113,27,146,27,"game"],[113,31,146,31],[113,32,146,32,"gameState"],[113,41,146,41],[113,42,146,42,"subscriptionBenefits"],[113,62,146,62],[113,64,146,64,"drop_multiplier"],[113,79,146,79],[113,83,146,83],[113,86,146,86],[114,6,148,4],[114,10,148,10,"xpReward"],[114,18,148,18],[114,21,148,21,"Math"],[114,25,148,25],[114,26,148,26,"floor"],[114,31,148,31],[114,32,148,32,"baseXpReward"],[114,44,148,44],[114,47,148,47,"xpMultiplier"],[114,59,148,59],[114,60,148,60],[115,6,149,4],[115,10,149,10,"goldReward"],[115,20,149,20],[115,23,149,23,"Math"],[115,27,149,27],[115,28,149,28,"floor"],[115,33,149,33],[115,34,149,34],[115,36,149,36],[115,39,149,39,"dropMultiplier"],[115,53,149,53],[115,54,149,54],[116,6,151,4,"console"],[116,13,151,11],[116,14,151,12,"log"],[116,17,151,15],[116,18,151,16],[116,48,151,46,"xpReward"],[116,56,151,54],[116,67,151,65,"goldReward"],[116,77,151,75],[116,93,151,91],[116,94,151,92],[117,6,152,4,"console"],[117,13,152,11],[117,14,152,12,"log"],[117,17,152,15],[117,18,152,16],[117,60,152,58,"xpMultiplier"],[117,72,152,70],[117,94,152,92,"dropMultiplier"],[117,108,152,106],[117,110,152,108],[117,111,152,109],[118,6,153,4,"console"],[118,13,153,11],[118,14,153,12,"log"],[118,17,153,15],[118,18,153,16],[118,54,153,52,"baseXpReward"],[118,66,153,64],[118,81,153,79,"xpReward"],[118,89,153,87],[118,91,153,89],[118,92,153,90],[119,6,154,4,"console"],[119,13,154,11],[119,14,154,12,"log"],[119,17,154,15],[119,18,154,16],[119,58,154,56],[119,60,154,58,"JSON"],[119,64,154,62],[119,65,154,63,"stringify"],[119,74,154,72],[119,75,154,73,"game"],[119,79,154,77],[119,80,154,78,"gameState"],[119,89,154,87],[119,90,154,88,"subscriptionBenefits"],[119,110,154,108],[119,111,154,109],[119,112,154,110],[120,6,155,4,"console"],[120,13,155,11],[120,14,155,12,"log"],[120,17,155,15],[120,18,155,16],[120,49,155,47,"Platform"],[120,61,155,55],[120,62,155,55,"Platform"],[120,70,155,55],[120,71,155,56,"OS"],[120,73,155,58],[120,84,155,69,"Date"],[120,88,155,73],[120,89,155,74,"now"],[120,92,155,77],[120,93,155,78],[120,94,155,79],[120,96,155,81],[120,97,155,82],[122,6,157,4],[123,6,158,4],[124,6,159,4,"setTimeout"],[124,16,159,14],[124,17,159,15],[124,23,159,21],[125,8,160,6,"console"],[125,15,160,13],[125,16,160,14,"log"],[125,19,160,17],[125,20,160,18],[125,78,160,76],[125,79,160,77],[127,8,162,6],[128,8,163,6,"game"],[128,12,163,10],[128,13,163,11,"updateNinja"],[128,24,163,22],[128,25,163,24,"prev"],[128,29,163,28],[128,33,163,33],[129,10,164,8,"console"],[129,17,164,15],[129,18,164,16,"log"],[129,21,164,19],[129,22,164,20],[129,54,164,52,"prev"],[129,58,164,56],[129,59,164,57,"experience"],[129,69,164,67],[129,81,164,79,"prev"],[129,85,164,83],[129,86,164,84,"experience"],[129,96,164,94],[129,99,164,97,"xpReward"],[129,107,164,105],[129,109,164,107],[129,110,164,108],[130,10,165,8,"console"],[130,17,165,15],[130,18,165,16,"log"],[130,21,165,19],[130,22,165,20],[130,56,165,54,"prev"],[130,60,165,58],[130,61,165,59,"gold"],[130,65,165,63],[130,77,165,75,"prev"],[130,81,165,79],[130,82,165,80,"gold"],[130,86,165,84],[130,89,165,87,"goldReward"],[130,99,165,97],[130,101,165,99],[130,102,165,100],[131,10,166,8],[131,17,166,15],[132,12,167,10,"experience"],[132,22,167,20],[132,24,167,22,"prev"],[132,28,167,26],[132,29,167,27,"experience"],[132,39,167,37],[132,42,167,40,"xpReward"],[132,50,167,48],[133,12,168,10,"gold"],[133,16,168,14],[133,18,168,16,"prev"],[133,22,168,20],[133,23,168,21,"gold"],[133,27,168,25],[133,30,168,28,"goldReward"],[134,10,169,8],[134,11,169,9],[135,8,170,6],[135,9,170,7],[135,10,170,8],[137,8,172,6],[138,8,173,6],[138,12,173,12,"zoneEnemy"],[138,21,173,21],[138,24,173,24],[139,10,174,8,"id"],[139,12,174,10],[139,14,174,12,"enemy"],[139,19,174,17],[139,20,174,18,"id"],[139,22,174,20],[140,10,175,8,"typeId"],[140,16,175,14],[140,18,175,16,"enemy"],[140,23,175,21],[140,24,175,22,"zoneTypeId"],[140,34,175,32],[140,38,175,36],[140,48,175,46],[141,10,175,48],[142,10,176,8,"name"],[142,14,176,12],[142,16,176,14,"enemy"],[142,21,176,19],[142,22,176,20,"name"],[142,26,176,24],[143,10,177,8,"icon"],[143,14,177,12],[143,16,177,14],[143,20,177,18],[144,10,177,20],[145,10,178,8,"hp"],[145,12,178,10],[145,14,178,12],[145,15,178,13],[146,10,178,15],[147,10,179,8,"maxHP"],[147,15,179,13],[147,17,179,15,"enemy"],[147,22,179,20],[147,23,179,21,"maxHealth"],[147,32,179,30],[148,10,180,8,"attack"],[148,16,180,14],[148,18,180,16,"enemy"],[148,23,180,21],[148,24,180,22,"stats"],[148,29,180,27],[148,30,180,28,"attack"],[148,36,180,34],[149,10,181,8,"xp"],[149,12,181,10],[149,14,181,12,"enemy"],[149,19,181,17],[149,20,181,18,"zoneXP"],[149,26,181,24],[149,30,181,28],[149,32,181,30],[150,10,181,32],[151,10,182,8,"position"],[151,18,182,16],[151,20,182,18,"enemy"],[151,25,182,23],[151,26,182,24,"position"],[152,8,183,6],[152,9,183,7],[153,8,185,6,"console"],[153,15,185,13],[153,16,185,14,"log"],[153,19,185,17],[153,20,185,18],[153,40,185,38,"zoneEnemy"],[153,49,185,47],[153,50,185,48,"name"],[153,54,185,52],[153,59,185,57,"zoneEnemy"],[153,68,185,66],[153,69,185,67,"typeId"],[153,75,185,73],[153,113,185,111],[153,114,185,112],[154,8,186,6,"recordEnemyKill"],[154,23,186,21],[154,24,186,22,"zoneEnemy"],[154,33,186,31],[154,34,186,32],[155,6,187,4],[155,7,187,5],[155,9,187,7],[155,10,187,8],[155,11,187,9],[155,12,187,10],[155,13,187,11],[156,4,188,2],[156,5,188,3],[156,7,188,5],[156,8,188,6,"game"],[156,12,188,10],[156,13,188,11,"updateNinja"],[156,24,188,22],[156,26,188,24,"recordEnemyKill"],[156,41,188,39],[156,42,188,40],[156,43,188,41],[158,4,190,2],[159,4,191,2],[159,8,191,8,"handleCombatTick"],[159,24,191,24],[159,27,191,27,"React"],[159,32,191,32],[159,33,191,32,"default"],[159,40,191,32],[159,41,191,33,"useCallback"],[159,52,191,44],[159,53,191,45],[159,59,191,51],[160,6,191,51],[160,10,191,51,"_s2"],[160,13,191,51],[160,16,191,51,"$RefreshSig$"],[160,28,191,51],[161,6,192,4,"console"],[161,13,192,11],[161,14,192,12,"log"],[161,17,192,15],[161,18,192,16],[161,87,192,85],[161,88,192,86],[162,6,194,4],[162,10,194,8,"enemiesToKill"],[162,23,194,36],[162,26,194,39],[162,28,194,41],[162,29,194,42],[162,30,194,43],[164,6,196,4,"_s2"],[164,9,196,4],[164,10,196,4,"setCombatState"],[164,24,196,18],[164,25,196,18,"_s2"],[164,28,196,18],[164,29,196,19,"prev"],[164,33,196,23],[164,37,196,27],[165,8,196,27,"_s2"],[165,11,196,27],[166,8,197,6],[166,12,197,12,"newTick"],[166,19,197,19],[166,22,197,22,"combatEngine"],[166,41,197,34],[166,42,197,34,"combatEngine"],[166,54,197,34],[166,55,197,35,"getCurrentTick"],[166,69,197,49],[166,70,197,50],[166,71,197,51],[167,8,198,6],[167,12,198,12,"newState"],[167,20,198,20],[167,23,198,23],[168,10,198,25],[168,13,198,28,"prev"],[168,17,198,32],[169,10,198,34,"currentTick"],[169,21,198,45],[169,23,198,47,"newTick"],[170,8,198,55],[170,9,198,56],[171,8,200,6],[171,12,200,10],[171,13,200,11,"newState"],[171,21,200,19],[171,22,200,20,"isInCombat"],[171,32,200,30],[171,34,200,32],[171,41,200,39,"newState"],[171,49,200,47],[173,8,202,6],[174,8,203,6,"newState"],[174,16,203,14],[174,17,203,15,"abilityManager"],[174,31,203,29],[174,32,203,30,"updateCooldowns"],[174,47,203,45],[174,48,203,46,"newTick"],[174,55,203,53],[174,56,203,54],[176,8,205,6],[177,8,206,6],[177,12,206,12,"effectResults"],[177,25,206,25],[177,28,206,28,"newState"],[177,36,206,36],[177,37,206,37,"statusEffects"],[177,50,206,50],[177,51,206,51,"processTick"],[177,62,206,62],[177,63,206,63,"newTick"],[177,70,206,70],[177,71,206,71],[179,8,208,6],[180,8,209,6,"effectResults"],[180,21,209,19],[180,22,209,20,"forEach"],[180,29,209,27],[180,30,209,28],[180,31,209,29,"results"],[180,38,209,36],[180,40,209,38,"entityId"],[180,48,209,46],[180,53,209,51],[181,10,210,8],[181,14,210,14,"enemyIndex"],[181,24,210,24],[181,27,210,27,"newState"],[181,35,210,35],[181,36,210,36,"enemies"],[181,43,210,43],[181,44,210,44,"findIndex"],[181,53,210,53],[181,54,210,54,"e"],[181,55,210,55],[181,59,210,59,"e"],[181,60,210,60],[181,61,210,61,"id"],[181,63,210,63],[181,68,210,68,"entityId"],[181,76,210,76],[181,77,210,77],[182,10,211,8],[182,14,211,12,"enemyIndex"],[182,24,211,22],[182,28,211,26],[182,29,211,27],[182,31,211,29],[183,12,212,10,"results"],[183,19,212,17],[183,20,212,18,"forEach"],[183,27,212,25],[183,28,212,26,"result"],[183,34,212,32],[183,38,212,36],[184,14,213,12,"newState"],[184,22,213,20],[184,23,213,21,"enemies"],[184,30,213,28],[184,31,213,29,"enemyIndex"],[184,41,213,39],[184,42,213,40],[184,43,213,41,"health"],[184,49,213,47],[184,53,213,51,"result"],[184,59,213,57],[184,60,213,58,"damage"],[184,66,213,64],[185,14,214,12,"newState"],[185,22,214,20],[185,23,214,21,"enemies"],[185,30,214,28],[185,31,214,29,"enemyIndex"],[185,41,214,39],[185,42,214,40],[185,43,214,41,"lastDamaged"],[185,54,214,52],[185,57,214,55,"newTick"],[185,64,214,62],[186,12,215,10],[186,13,215,11],[186,14,215,12],[187,10,216,8],[188,8,217,6],[188,9,217,7],[188,10,217,8],[190,8,219,6],[191,8,220,6,"newState"],[191,16,220,14],[191,17,220,15,"enemies"],[191,24,220,22],[191,25,220,23,"forEach"],[191,32,220,30],[191,33,220,31,"enemy"],[191,38,220,36],[191,42,220,40],[192,10,221,8],[192,14,221,12],[192,15,221,13,"enemy"],[192,20,221,18],[192,21,221,19,"isBoss"],[192,27,221,25],[192,29,221,27],[193,12,221,29],[194,12,222,10],[195,12,223,10],[195,16,223,16,"MOVEMENT_SPEED"],[195,30,223,30],[195,33,223,33],[195,37,223,37],[195,38,223,38],[195,39,223,39],[196,12,224,10],[196,16,224,16,"SCREEN_WIDTH"],[196,28,224,28],[196,31,224,31],[196,34,224,34],[197,12,225,10],[197,16,225,16,"GAME_AREA_HEIGHT"],[197,32,225,32],[197,35,225,35],[197,38,225,38],[197,39,225,39],[197,40,225,40],[198,12,226,10],[198,16,226,16,"ENEMY_SIZE"],[198,26,226,26],[198,29,226,29],[198,31,226,31],[200,12,228,10],[201,12,229,10],[201,16,229,16,"playerX"],[201,23,229,23],[201,26,229,26,"currentNinjaPosition"],[201,46,229,46],[201,47,229,47,"x"],[201,48,229,48],[202,12,230,10],[202,16,230,16,"playerY"],[202,23,230,23],[202,26,230,26,"currentNinjaPosition"],[202,46,230,46],[202,47,230,47,"y"],[202,48,230,48],[204,12,232,10],[205,12,233,10],[205,16,233,16,"deltaX"],[205,22,233,22],[205,25,233,25,"playerX"],[205,32,233,32],[205,35,233,35,"enemy"],[205,40,233,40],[205,41,233,41,"position"],[205,49,233,49],[205,50,233,50,"x"],[205,51,233,51],[206,12,234,10],[206,16,234,16,"deltaY"],[206,22,234,22],[206,25,234,25,"playerY"],[206,32,234,32],[206,35,234,35,"enemy"],[206,40,234,40],[206,41,234,41,"position"],[206,49,234,49],[206,50,234,50,"y"],[206,51,234,51],[207,12,235,10],[207,16,235,16,"distance"],[207,24,235,24],[207,27,235,27,"Math"],[207,31,235,31],[207,32,235,32,"sqrt"],[207,36,235,36],[207,37,235,37,"deltaX"],[207,43,235,43],[207,46,235,46,"deltaX"],[207,52,235,52],[207,55,235,55,"deltaY"],[207,61,235,61],[207,64,235,64,"deltaY"],[207,70,235,70],[207,71,235,71],[209,12,237,10],[210,12,238,10],[210,16,238,14,"distance"],[210,24,238,22],[210,27,238,25],[210,29,238,27],[210,31,238,29],[211,14,239,12],[212,14,240,12],[212,18,240,18,"normalizedX"],[212,29,240,29],[212,32,240,32,"deltaX"],[212,38,240,38],[212,41,240,41,"distance"],[212,49,240,49],[213,14,241,12],[213,18,241,18,"normalizedY"],[213,29,241,29],[213,32,241,32,"deltaY"],[213,38,241,38],[213,41,241,41,"distance"],[213,49,241,49],[215,14,243,12],[216,14,244,12],[216,18,244,18,"randomFactor"],[216,30,244,30],[216,33,244,33],[216,36,244,36],[216,37,244,37],[216,38,244,38],[217,14,245,12],[217,18,245,18,"finalX"],[217,24,245,24],[217,27,245,27,"normalizedX"],[217,38,245,38],[217,41,245,41],[217,42,245,42,"Math"],[217,46,245,46],[217,47,245,47,"random"],[217,53,245,53],[217,54,245,54],[217,55,245,55],[217,58,245,58],[217,61,245,61],[217,65,245,65,"randomFactor"],[217,77,245,77],[218,14,246,12],[218,18,246,18,"finalY"],[218,24,246,24],[218,27,246,27,"normalizedY"],[218,38,246,38],[218,41,246,41],[218,42,246,42,"Math"],[218,46,246,46],[218,47,246,47,"random"],[218,53,246,53],[218,54,246,54],[218,55,246,55],[218,58,246,58],[218,61,246,61],[218,65,246,65,"randomFactor"],[218,77,246,77],[220,14,248,12],[221,14,249,12],[221,18,249,16,"newX"],[221,22,249,20],[221,25,249,23,"enemy"],[221,30,249,28],[221,31,249,29,"position"],[221,39,249,37],[221,40,249,38,"x"],[221,41,249,39],[221,44,249,43,"finalX"],[221,50,249,49],[221,53,249,52,"MOVEMENT_SPEED"],[221,67,249,67],[222,14,250,12],[222,18,250,16,"newY"],[222,22,250,20],[222,25,250,23,"enemy"],[222,30,250,28],[222,31,250,29,"position"],[222,39,250,37],[222,40,250,38,"y"],[222,41,250,39],[222,44,250,43,"finalY"],[222,50,250,49],[222,53,250,52,"MOVEMENT_SPEED"],[222,67,250,67],[224,14,252,12],[225,14,253,12,"newX"],[225,18,253,16],[225,21,253,19,"Math"],[225,25,253,23],[225,26,253,24,"max"],[225,29,253,27],[225,30,253,28],[225,31,253,29],[225,33,253,31,"Math"],[225,37,253,35],[225,38,253,36,"min"],[225,41,253,39],[225,42,253,40,"SCREEN_WIDTH"],[225,54,253,52],[225,57,253,55,"ENEMY_SIZE"],[225,67,253,65],[225,69,253,67,"newX"],[225,73,253,71],[225,74,253,72],[225,75,253,73],[226,14,254,12,"newY"],[226,18,254,16],[226,21,254,19,"Math"],[226,25,254,23],[226,26,254,24,"max"],[226,29,254,27],[226,30,254,28],[226,31,254,29],[226,33,254,31,"Math"],[226,37,254,35],[226,38,254,36,"min"],[226,41,254,39],[226,42,254,40,"GAME_AREA_HEIGHT"],[226,58,254,56],[226,61,254,59,"ENEMY_SIZE"],[226,71,254,69],[226,73,254,71,"newY"],[226,77,254,75],[226,78,254,76],[226,79,254,77],[228,14,256,12],[229,14,257,12,"enemy"],[229,19,257,17],[229,20,257,18,"position"],[229,28,257,26],[229,29,257,27,"x"],[229,30,257,28],[229,33,257,31,"newX"],[229,37,257,35],[230,14,258,12,"enemy"],[230,19,258,17],[230,20,258,18,"position"],[230,28,258,26],[230,29,258,27,"y"],[230,30,258,28],[230,33,258,31,"newY"],[230,37,258,35],[231,12,259,10],[232,12,260,10],[233,10,261,8],[234,8,262,6],[234,9,262,7],[234,10,262,8],[236,8,264,6],[237,8,265,6],[237,12,265,10,"newState"],[237,20,265,18],[237,21,265,19,"shadowClone"],[237,32,265,30],[237,34,265,32],[238,10,266,8],[239,10,267,8,"newState"],[239,18,267,16],[239,19,267,17,"shadowClone"],[239,30,267,28],[239,31,267,29,"remainingTicks"],[239,45,267,43],[239,47,267,45],[241,10,269,8],[242,10,270,8],[242,14,270,14,"cloneOffset"],[242,25,270,25],[242,28,270,28],[242,30,270,30],[242,31,270,31],[242,32,270,32],[243,10,271,8,"newState"],[243,18,271,16],[243,19,271,17,"shadowClone"],[243,30,271,28],[243,31,271,29,"position"],[243,39,271,37],[243,40,271,38,"x"],[243,41,271,39],[243,44,271,42,"currentNinjaPosition"],[243,64,271,62],[243,65,271,63,"x"],[243,66,271,64],[243,69,271,67,"cloneOffset"],[243,80,271,78],[244,10,272,8,"newState"],[244,18,272,16],[244,19,272,17,"shadowClone"],[244,30,272,28],[244,31,272,29,"position"],[244,39,272,37],[244,40,272,38,"y"],[244,41,272,39],[244,44,272,42,"currentNinjaPosition"],[244,64,272,62],[244,65,272,63,"y"],[244,66,272,64],[244,69,272,67],[244,71,272,69],[246,10,274,8],[247,10,275,8],[247,14,275,12,"newState"],[247,22,275,20],[247,23,275,21,"shadowClone"],[247,34,275,32],[247,35,275,33,"remainingTicks"],[247,49,275,47],[247,53,275,51],[247,54,275,52],[247,56,275,54],[248,12,276,10,"console"],[248,19,276,17],[248,20,276,18,"log"],[248,23,276,21],[248,24,276,22],[248,75,276,73],[248,76,276,74],[249,12,277,10,"newState"],[249,20,277,18],[249,21,277,19,"shadowClone"],[249,32,277,30],[249,35,277,33,"undefined"],[249,44,277,42],[250,10,278,8],[250,11,278,9],[250,17,278,15],[251,12,279,10],[252,12,280,10],[253,12,281,10],[253,16,281,16,"CLONE_ATTACK_INTERVAL"],[253,37,281,37],[253,40,281,40],[253,42,281,42],[254,12,282,10],[254,16,282,14,"newState"],[254,24,282,22],[254,25,282,23,"currentTick"],[254,36,282,34],[254,39,282,37,"CLONE_ATTACK_INTERVAL"],[254,60,282,58],[254,65,282,63],[254,66,282,64],[254,70,282,68,"newState"],[254,78,282,76],[254,79,282,77,"enemies"],[254,86,282,84],[254,87,282,85,"length"],[254,93,282,91],[254,96,282,94],[254,97,282,95],[254,99,282,97],[255,14,283,12,"console"],[255,21,283,19],[255,22,283,20,"log"],[255,25,283,23],[255,26,283,24],[255,83,283,81],[255,84,283,82],[257,14,285,12],[258,14,286,12],[258,18,286,18,"target"],[258,24,286,24],[258,27,286,27,"findClosestEnemyInternal"],[258,51,286,51],[258,52,286,52,"newState"],[258,60,286,60],[258,61,286,61,"enemies"],[258,68,286,68],[258,69,286,69],[259,14,287,12],[259,18,287,16,"target"],[259,24,287,22],[259,26,287,24],[260,16,288,14],[261,16,289,14],[261,20,289,20,"cloneDamage"],[261,31,289,31],[261,34,289,34,"Math"],[261,38,289,38],[261,39,289,39,"floor"],[261,44,289,44],[261,45,289,45,"newState"],[261,53,289,53],[261,54,289,54,"playerStats"],[261,65,289,65],[261,66,289,66,"attack"],[261,72,289,72],[261,75,289,75],[261,78,289,78],[261,79,289,79],[263,16,291,14],[264,16,292,14,"createProjectile"],[264,32,292,30],[264,33,292,31,"target"],[264,39,292,37],[264,41,292,39,"cloneDamage"],[264,52,292,50],[264,54,292,52,"newState"],[264,62,292,60],[264,63,292,61,"shadowClone"],[264,74,292,72],[264,75,292,73,"position"],[264,83,292,81],[264,85,292,83],[265,18,293,16,"id"],[265,20,293,18],[265,22,293,20],[265,43,293,41],[266,18,294,16,"name"],[266,22,294,20],[266,24,294,22],[266,45,294,43],[267,18,295,16,"icon"],[267,22,295,20],[267,24,295,22],[268,16,296,14],[268,17,296,15],[268,18,296,16],[269,14,297,12],[270,12,298,10],[271,10,299,8],[272,8,300,6],[274,8,302,6],[275,8,303,6],[275,12,303,10],[275,13,303,11,"isManualControlActive"],[275,34,303,32],[275,36,303,34],[276,10,304,8],[276,15,304,13],[276,19,304,17,"i"],[276,20,304,18],[276,23,304,21],[276,24,304,22],[276,26,304,24,"i"],[276,27,304,25],[276,30,304,28],[276,31,304,29],[276,33,304,31,"i"],[276,34,304,32],[276,36,304,34],[276,38,304,36],[277,12,305,10],[277,16,305,14,"newState"],[277,24,305,22],[277,25,305,23,"abilityManager"],[277,39,305,37],[277,40,305,38,"isAbilityReady"],[277,54,305,52],[277,55,305,53,"i"],[277,56,305,54],[277,57,305,55],[277,61,305,59,"newState"],[277,69,305,67],[277,70,305,68,"enemies"],[277,77,305,75],[277,78,305,76,"length"],[277,84,305,82],[277,87,305,85],[277,88,305,86],[277,90,305,88],[278,14,306,12],[278,18,306,16,"newState"],[278,26,306,24],[278,27,306,25,"abilityManager"],[278,41,306,39],[278,42,306,40,"useAbility"],[278,52,306,50],[278,53,306,51,"i"],[278,54,306,52],[278,56,306,54,"newTick"],[278,63,306,61],[278,64,306,62],[278,66,306,64],[279,16,307,14,"castAbility"],[279,27,307,25],[279,28,307,26,"newState"],[279,36,307,34],[279,38,307,36,"i"],[279,39,307,37],[279,40,307,38],[280,14,308,12],[281,12,309,10],[282,10,310,8],[283,8,311,6],[285,8,313,6],[286,8,314,6],[286,12,314,12,"deadEnemies"],[286,23,314,23],[286,26,314,26,"newState"],[286,34,314,34],[286,35,314,35,"enemies"],[286,42,314,42],[286,43,314,43,"filter"],[286,49,314,49],[286,50,314,50,"enemy"],[286,55,314,55],[286,59,314,59,"enemy"],[286,64,314,64],[286,65,314,65,"health"],[286,71,314,71],[286,75,314,75],[286,76,314,76],[286,77,314,77],[287,8,315,6,"enemiesToKill"],[287,21,315,19],[287,24,315,22],[287,25,315,23],[287,28,315,26,"deadEnemies"],[287,39,315,37],[287,40,315,38],[287,41,315,39],[287,42,315,40],[289,8,317,6],[290,8,318,6],[290,12,318,10,"deadEnemies"],[290,23,318,21],[290,24,318,22,"length"],[290,30,318,28],[290,33,318,31],[290,34,318,32],[290,36,318,34],[291,10,319,8,"console"],[291,17,319,15],[291,18,319,16,"log"],[291,21,319,19],[291,22,319,20],[291,49,319,47,"deadEnemies"],[291,60,319,58],[291,61,319,59,"length"],[291,67,319,65],[291,83,319,81],[291,85,319,83,"deadEnemies"],[291,96,319,94],[291,97,319,95,"map"],[291,100,319,98],[291,101,319,99,"e"],[291,102,319,100],[291,106,319,104],[291,109,319,107,"e"],[291,110,319,108],[291,111,319,109,"id"],[291,113,319,111],[291,117,319,115,"e"],[291,118,319,116],[291,119,319,117,"health"],[291,125,319,123],[291,130,319,128],[291,131,319,129],[291,132,319,130],[292,8,320,6],[294,8,322,6],[295,8,323,6],[295,12,323,12,"lowHealthEnemies"],[295,28,323,28],[295,31,323,31,"newState"],[295,39,323,39],[295,40,323,40,"enemies"],[295,47,323,47],[295,48,323,48,"filter"],[295,54,323,54],[295,55,323,55,"enemy"],[295,60,323,60],[295,64,323,64,"enemy"],[295,69,323,69],[295,70,323,70,"health"],[295,76,323,76],[295,80,323,80],[295,82,323,82],[295,86,323,86,"enemy"],[295,91,323,91],[295,92,323,92,"health"],[295,98,323,98],[295,101,323,101],[295,102,323,102],[295,103,323,103],[296,8,324,6],[296,12,324,10,"lowHealthEnemies"],[296,28,324,26],[296,29,324,27,"length"],[296,35,324,33],[296,38,324,36],[296,39,324,37],[296,41,324,39],[297,10,325,8,"console"],[297,17,325,15],[297,18,325,16,"log"],[297,21,325,19],[297,22,325,20],[297,61,325,59],[297,63,325,61,"lowHealthEnemies"],[297,79,325,77],[297,80,325,78,"map"],[297,83,325,81],[297,84,325,82,"e"],[297,85,325,83],[297,89,325,87],[297,92,325,90,"e"],[297,93,325,91],[297,94,325,92,"id"],[297,96,325,94],[297,100,325,98,"e"],[297,101,325,99],[297,102,325,100,"health"],[297,108,325,106],[297,112,325,110,"e"],[297,113,325,111],[297,114,325,112,"maxHealth"],[297,123,325,121],[297,128,325,126],[297,129,325,127],[297,130,325,128],[298,8,326,6],[300,8,328,6],[301,8,329,6],[301,12,329,12,"beforeCount"],[301,23,329,23],[301,26,329,26,"newState"],[301,34,329,34],[301,35,329,35,"enemies"],[301,42,329,42],[301,43,329,43,"length"],[301,49,329,49],[302,8,330,6,"newState"],[302,16,330,14],[302,17,330,15,"enemies"],[302,24,330,22],[302,27,330,25,"newState"],[302,35,330,33],[302,36,330,34,"enemies"],[302,43,330,41],[302,44,330,42,"filter"],[302,50,330,48],[302,51,330,49,"enemy"],[302,56,330,54],[302,60,330,58,"enemy"],[302,65,330,63],[302,66,330,64,"health"],[302,72,330,70],[302,75,330,73],[302,76,330,74],[302,77,330,75],[303,8,331,6],[303,12,331,12,"afterCount"],[303,22,331,22],[303,25,331,25,"newState"],[303,33,331,33],[303,34,331,34,"enemies"],[303,41,331,41],[303,42,331,42,"length"],[303,48,331,48],[304,8,333,6],[304,12,333,10,"beforeCount"],[304,23,333,21],[304,28,333,26,"afterCount"],[304,38,333,36],[304,40,333,38],[305,10,334,8,"console"],[305,17,334,15],[305,18,334,16,"log"],[305,21,334,19],[305,22,334,20],[305,52,334,50,"beforeCount"],[305,63,334,61],[305,66,334,64,"afterCount"],[305,76,334,74],[305,102,334,100],[305,103,334,101],[306,8,335,6],[308,8,337,6],[309,8,338,6],[310,8,339,6],[310,12,339,12,"MAX_ENEMIES"],[310,23,339,23],[310,26,339,26],[310,28,339,28],[310,29,339,29],[310,30,339,30],[311,8,340,6],[311,12,340,12,"MIN_SPAWN_DELAY"],[311,27,340,27],[311,30,340,30],[311,33,340,33],[311,34,340,34],[311,35,340,35],[312,8,341,6],[312,12,341,12,"now"],[312,15,341,15],[312,18,341,18,"Date"],[312,22,341,22],[312,23,341,23,"now"],[312,26,341,26],[312,27,341,27],[312,28,341,28],[313,8,342,6],[313,12,342,12,"hasBoss"],[313,19,342,19],[313,22,342,22,"newState"],[313,30,342,30],[313,31,342,31,"enemies"],[313,38,342,38],[313,39,342,39,"some"],[313,43,342,43],[313,44,342,44,"enemy"],[313,49,342,49],[313,53,342,53,"enemy"],[313,58,342,58],[313,59,342,59,"isBoss"],[313,65,342,65],[313,66,342,66],[315,8,344,6],[316,8,345,6],[316,12,345,10],[316,13,345,11,"newState"],[316,21,345,19],[316,22,345,20,"lastSpawnTime"],[316,35,345,33],[316,37,345,35],[317,10,346,8,"newState"],[317,18,346,16],[317,19,346,17,"lastSpawnTime"],[317,32,346,30],[317,35,346,33,"now"],[317,38,346,36],[318,8,347,6],[319,8,349,6,"console"],[319,15,349,13],[319,16,349,14,"log"],[319,19,349,17],[319,20,349,18],[319,53,349,51,"newState"],[319,61,349,59],[319,62,349,60,"enemies"],[319,69,349,67],[319,70,349,68,"length"],[319,76,349,74],[319,85,349,83,"MAX_ENEMIES"],[319,96,349,94],[319,109,349,107,"hasBoss"],[319,116,349,114],[319,118,349,116],[319,119,349,117],[321,8,351,6],[322,8,352,6],[322,12,352,10],[322,13,352,11,"hasBoss"],[322,20,352,18],[322,24,352,22,"newState"],[322,32,352,30],[322,33,352,31,"enemies"],[322,40,352,38],[322,41,352,39,"length"],[322,47,352,45],[322,50,352,48,"MAX_ENEMIES"],[322,61,352,59],[322,65,352,64,"now"],[322,68,352,67],[322,71,352,70,"newState"],[322,79,352,78],[322,80,352,79,"lastSpawnTime"],[322,93,352,92],[322,97,352,97,"MIN_SPAWN_DELAY"],[322,112,352,112],[322,114,352,114],[323,10,353,8,"console"],[323,17,353,15],[323,18,353,16,"log"],[323,21,353,19],[323,22,353,20],[323,43,353,41,"newState"],[323,51,353,49],[323,52,353,50,"enemies"],[323,59,353,57],[323,60,353,58,"length"],[323,66,353,64],[323,69,353,67],[323,70,353,68],[323,74,353,72,"MAX_ENEMIES"],[323,85,353,83],[323,87,353,85],[323,88,353,86],[324,10,354,8,"spawnTestEnemy"],[324,24,354,22],[324,25,354,23,"newState"],[324,33,354,31],[324,34,354,32],[325,10,355,8,"newState"],[325,18,355,16],[325,19,355,17,"lastSpawnTime"],[325,32,355,30],[325,35,355,33,"now"],[325,38,355,36],[326,8,356,6],[327,8,358,6],[327,15,358,13,"newState"],[327,23,358,21],[328,6,359,4],[328,7,359,5],[328,47,359,6],[330,6,361,4],[331,6,362,4,"console"],[331,13,362,11],[331,14,362,12,"log"],[331,17,362,15],[331,18,362,16],[331,50,362,48,"enemiesToKill"],[331,63,362,61],[331,64,362,62,"length"],[331,70,362,68],[331,101,362,99],[331,102,362,100],[332,6,364,4,"enemiesToKill"],[332,19,364,17],[332,20,364,18,"forEach"],[332,27,364,25],[332,28,364,26],[332,29,364,27,"enemy"],[332,34,364,32],[332,36,364,34,"index"],[332,41,364,39],[332,46,364,44],[333,8,365,6,"console"],[333,15,365,13],[333,16,365,14,"log"],[333,19,365,17],[333,20,365,18],[333,57,365,55,"index"],[333,62,365,60],[333,65,365,63],[333,66,365,64],[333,70,365,68,"enemiesToKill"],[333,83,365,81],[333,84,365,82,"length"],[333,90,365,88],[333,104,365,102,"enemy"],[333,109,365,107],[333,110,365,108,"id"],[333,112,365,110],[333,114,365,112],[333,115,365,113],[334,8,366,6,"handleEnemyKill"],[334,23,366,21],[334,24,366,22,"enemy"],[334,29,366,27],[334,30,366,28],[335,6,367,4],[335,7,367,5],[335,8,367,6],[336,4,368,2],[336,5,368,3],[336,7,368,5],[336,8,368,6,"handleEnemyKill"],[336,23,368,21],[336,24,368,22],[336,25,368,23],[336,26,368,24],[336,27,368,25],[338,4,370,2],[339,4,371,2],[339,8,371,8,"findClosestEnemyInternal"],[339,32,371,32],[339,35,371,36,"enemies"],[339,42,371,58],[339,46,371,83],[340,6,372,4],[340,10,372,8,"enemies"],[340,17,372,15],[340,18,372,16,"length"],[340,24,372,22],[340,29,372,27],[340,30,372,28],[340,32,372,30],[340,39,372,37],[340,43,372,41],[342,6,374,4],[343,6,375,4],[343,10,375,10,"SCREEN_WIDTH"],[343,22,375,22],[343,25,375,25],[343,28,375,28],[344,6,376,4],[344,10,376,10,"GAME_AREA_HEIGHT"],[344,26,376,26],[344,29,376,29],[344,32,376,32],[344,35,376,35],[344,38,376,38],[344,39,376,39],[344,40,376,40],[345,6,377,4],[345,10,377,10,"ninjaX"],[345,16,377,16],[345,19,377,19,"SCREEN_WIDTH"],[345,31,377,31],[345,34,377,34],[345,35,377,35],[346,6,378,4],[346,10,378,10,"ninjaY"],[346,16,378,16],[346,19,378,19,"GAME_AREA_HEIGHT"],[346,35,378,35],[346,38,378,38],[346,39,378,39],[347,6,380,4],[347,10,380,8,"closestEnemy"],[347,22,380,20],[347,25,380,23,"enemies"],[347,32,380,30],[347,33,380,31],[347,34,380,32],[347,35,380,33],[348,6,381,4],[348,10,381,8,"closestDistance"],[348,25,381,23],[348,28,381,26,"Infinity"],[348,36,381,34],[349,6,383,4,"enemies"],[349,13,383,11],[349,14,383,12,"forEach"],[349,21,383,19],[349,22,383,20,"enemy"],[349,27,383,25],[349,31,383,29],[350,8,384,6],[350,12,384,12,"distance"],[350,20,384,20],[350,23,384,23,"Math"],[350,27,384,27],[350,28,384,28,"sqrt"],[350,32,384,32],[350,33,385,8,"Math"],[350,37,385,12],[350,38,385,13,"pow"],[350,41,385,16],[350,42,385,17,"enemy"],[350,47,385,22],[350,48,385,23,"position"],[350,56,385,31],[350,57,385,32,"x"],[350,58,385,33],[350,61,385,36,"ninjaX"],[350,67,385,42],[350,69,385,44],[350,70,385,45],[350,71,385,46],[350,74,386,8,"Math"],[350,78,386,12],[350,79,386,13,"pow"],[350,82,386,16],[350,83,386,17,"enemy"],[350,88,386,22],[350,89,386,23,"position"],[350,97,386,31],[350,98,386,32,"y"],[350,99,386,33],[350,102,386,36,"ninjaY"],[350,108,386,42],[350,110,386,44],[350,111,386,45],[350,112,387,6],[350,113,387,7],[351,8,389,6],[351,12,389,10,"distance"],[351,20,389,18],[351,23,389,21,"closestDistance"],[351,38,389,36],[351,40,389,38],[352,10,390,8,"closestDistance"],[352,25,390,23],[352,28,390,26,"distance"],[352,36,390,34],[353,10,391,8,"closestEnemy"],[353,22,391,20],[353,25,391,23,"enemy"],[353,30,391,28],[354,8,392,6],[355,6,393,4],[355,7,393,5],[355,8,393,6],[356,6,395,4,"console"],[356,13,395,11],[356,14,395,12,"log"],[356,17,395,15],[356,18,395,16],[356,60,395,58,"closestDistance"],[356,75,395,73],[356,76,395,74,"toFixed"],[356,83,395,81],[356,84,395,82],[356,85,395,83],[356,86,395,84],[356,88,395,86],[356,89,395,87],[357,6,396,4],[357,13,396,11,"closestEnemy"],[357,25,396,23],[358,4,397,2],[358,5,397,3],[360,4,399,2],[361,4,400,2],[361,8,400,8,"findClosestEnemy"],[361,24,400,24],[361,27,400,27,"findClosestEnemy"],[361,28,400,27],[361,33,400,53],[362,6,401,4],[362,13,401,11,"findClosestEnemyInternal"],[362,37,401,35],[362,38,401,36,"combatState"],[362,49,401,47],[362,50,401,48,"enemies"],[362,57,401,55],[362,58,401,56],[363,4,402,2],[363,5,402,3],[365,4,404,2],[366,4,405,2],[366,8,405,2,"_useState7"],[366,18,405,2],[366,21,405,58],[366,25,405,58,"useState"],[366,31,405,66],[366,32,405,66,"useState"],[366,40,405,66],[366,42,405,91],[367,8,405,93,"x"],[367,9,405,94],[367,11,405,96],[367,12,405,97],[368,8,405,99,"y"],[368,9,405,100],[368,11,405,102],[369,6,405,104],[369,7,405,105],[369,8,405,106],[370,6,405,106,"_useState8"],[370,16,405,106],[370,23,405,106,"_slicedToArray"],[370,37,405,106],[370,38,405,106,"default"],[370,45,405,106],[370,47,405,106,"_useState7"],[370,57,405,106],[371,6,405,9,"currentNinjaPosition"],[371,26,405,29],[371,29,405,29,"_useState8"],[371,39,405,29],[372,6,405,31,"setCurrentNinjaPosition"],[372,29,405,54],[372,32,405,54,"_useState8"],[372,42,405,54],[373,4,406,2],[373,8,406,2,"_useState9"],[373,18,406,2],[373,21,406,60],[373,25,406,60,"useState"],[373,31,406,68],[373,32,406,68,"useState"],[373,40,406,68],[373,42,406,69],[373,47,406,74],[373,48,406,75],[374,6,406,75,"_useState0"],[374,16,406,75],[374,23,406,75,"_slicedToArray"],[374,37,406,75],[374,38,406,75,"default"],[374,45,406,75],[374,47,406,75,"_useState9"],[374,57,406,75],[375,6,406,9,"isManualControlActive"],[375,27,406,30],[375,30,406,30,"_useState0"],[375,40,406,30],[376,6,406,32,"setIsManualControlActive"],[376,30,406,56],[376,33,406,56,"_useState0"],[376,43,406,56],[378,4,408,2],[379,4,409,2],[379,8,409,8,"updateNinjaPosition"],[379,27,409,27],[379,30,409,30],[379,34,409,30,"useCallback"],[379,40,409,41],[379,41,409,41,"useCallback"],[379,52,409,41],[379,54,409,43,"newPosition"],[379,65,409,78],[379,69,409,83],[380,6,410,4,"setCurrentNinjaPosition"],[380,29,410,27],[380,30,410,28,"newPosition"],[380,41,410,39],[380,42,410,40],[381,4,411,2],[381,5,411,3],[381,7,411,5],[381,9,411,7],[381,10,411,8],[383,4,413,2],[384,4,414,2],[384,8,414,8,"setManualControlActive"],[384,30,414,30],[384,33,414,33],[384,37,414,33,"useCallback"],[384,43,414,44],[384,44,414,44,"useCallback"],[384,55,414,44],[384,57,414,46,"active"],[384,63,414,61],[384,67,414,66],[385,6,415,4,"setIsManualControlActive"],[385,30,415,28],[385,31,415,29,"active"],[385,37,415,35],[385,38,415,36],[386,6,416,4,"console"],[386,13,416,11],[386,14,416,12,"log"],[386,17,416,15],[386,18,416,16],[386,39,416,37,"active"],[386,45,416,43],[386,48,416,46],[386,59,416,57],[386,62,416,60],[386,75,416,73],[386,88,416,86,"active"],[386,94,416,92],[386,97,416,95],[386,105,416,103],[386,108,416,106],[386,117,416,115],[386,119,416,117],[386,120,416,118],[387,4,417,2],[387,5,417,3],[387,7,417,5],[387,9,417,7],[387,10,417,8],[389,4,419,2],[390,4,420,2],[390,8,420,8,"handleProjectileHit"],[390,27,420,27],[390,30,420,31,"projectile"],[390,40,420,59],[390,44,420,64],[391,6,421,4,"console"],[391,13,421,11],[391,14,421,12,"log"],[391,17,421,15],[391,18,421,16],[391,35,421,33,"projectile"],[391,45,421,43],[391,46,421,44,"id"],[391,48,421,46],[391,62,421,60,"projectile"],[391,72,421,70],[391,73,421,71,"targetEnemyId"],[391,86,421,84],[391,94,421,92,"projectile"],[391,104,421,102],[391,105,421,103,"damage"],[391,111,421,109],[391,120,421,118],[391,121,421,119],[392,6,423,4,"setCombatState"],[392,20,423,18],[392,21,423,19,"prev"],[392,25,423,23],[392,29,423,27],[393,8,424,6],[393,12,424,12,"newState"],[393,20,424,20],[393,23,424,23],[394,10,424,25],[394,13,424,28,"prev"],[395,8,424,33],[395,9,424,34],[397,8,426,6],[398,8,427,6],[398,12,427,12,"enemyIndex"],[398,22,427,22],[398,25,427,25,"newState"],[398,33,427,33],[398,34,427,34,"enemies"],[398,41,427,41],[398,42,427,42,"findIndex"],[398,51,427,51],[398,52,427,52,"e"],[398,53,427,53],[398,57,427,57,"e"],[398,58,427,58],[398,59,427,59,"id"],[398,61,427,61],[398,66,427,66,"projectile"],[398,76,427,76],[398,77,427,77,"targetEnemyId"],[398,90,427,90],[398,91,427,91],[399,8,428,6],[399,12,428,10,"enemyIndex"],[399,22,428,20],[399,26,428,24],[399,27,428,25],[399,29,428,27],[400,10,429,8,"newState"],[400,18,429,16],[400,19,429,17,"enemies"],[400,26,429,24],[400,29,429,27],[400,30,429,28],[400,33,429,31,"newState"],[400,41,429,39],[400,42,429,40,"enemies"],[400,49,429,47],[400,50,429,48],[401,10,430,8,"newState"],[401,18,430,16],[401,19,430,17,"enemies"],[401,26,430,24],[401,27,430,25,"enemyIndex"],[401,37,430,35],[401,38,430,36],[401,41,430,39],[402,12,431,10],[402,15,431,13,"newState"],[402,23,431,21],[402,24,431,22,"enemies"],[402,31,431,29],[402,32,431,30,"enemyIndex"],[402,42,431,40],[402,43,431,41],[403,12,432,10,"health"],[403,18,432,16],[403,20,432,18,"newState"],[403,28,432,26],[403,29,432,27,"enemies"],[403,36,432,34],[403,37,432,35,"enemyIndex"],[403,47,432,45],[403,48,432,46],[403,49,432,47,"health"],[403,55,432,53],[403,58,432,56,"projectile"],[403,68,432,66],[403,69,432,67,"damage"],[403,75,432,73],[404,12,433,10,"lastDamaged"],[404,23,433,21],[404,25,433,23,"combatEngine"],[404,44,433,35],[404,45,433,35,"combatEngine"],[404,57,433,35],[404,58,433,36,"getCurrentTick"],[404,72,433,50],[404,73,433,51],[405,10,434,8],[405,11,434,9],[406,10,436,8,"console"],[406,17,436,15],[406,18,436,16,"log"],[406,21,436,19],[406,22,436,20],[406,34,436,32,"projectile"],[406,44,436,42],[406,45,436,43,"targetEnemyId"],[406,58,436,56],[406,70,436,68,"newState"],[406,78,436,76],[406,79,436,77,"enemies"],[406,86,436,84],[406,87,436,85,"enemyIndex"],[406,97,436,95],[406,98,436,96],[406,99,436,97,"health"],[406,105,436,103],[406,109,436,107,"newState"],[406,117,436,115],[406,118,436,116,"enemies"],[406,125,436,123],[406,126,436,124,"enemyIndex"],[406,136,436,134],[406,137,436,135],[406,138,436,136,"maxHealth"],[406,147,436,145],[406,149,436,147],[406,150,436,148],[407,8,437,6],[408,8,439,6],[408,15,439,13,"newState"],[408,23,439,21],[409,6,440,4],[409,7,440,5],[409,8,440,6],[411,6,442,4],[412,6,443,4,"setProjectiles"],[412,20,443,18],[412,21,443,19,"prev"],[412,25,443,23],[412,29,443,27,"prev"],[412,33,443,31],[412,34,443,32,"filter"],[412,40,443,38],[412,41,443,39,"p"],[412,42,443,40],[412,46,443,44,"p"],[412,47,443,45],[412,48,443,46,"id"],[412,50,443,48],[412,55,443,53,"projectile"],[412,65,443,63],[412,66,443,64,"id"],[412,68,443,66],[412,69,443,67],[412,70,443,68],[413,4,444,2],[413,5,444,3],[415,4,446,2],[416,4,447,2],[416,8,447,8,"castAbility"],[416,19,447,19],[416,22,447,22,"castAbility"],[416,23,447,23,"state"],[416,28,447,41],[416,30,447,43,"slotIndex"],[416,39,447,60],[416,44,447,65],[417,6,448,4],[417,10,448,10,"deck"],[417,14,448,14],[417,17,448,17,"state"],[417,22,448,22],[417,23,448,23,"abilityManager"],[417,37,448,37],[417,38,448,38,"getDeck"],[417,45,448,45],[417,46,448,46],[417,47,448,47],[418,6,449,4],[418,10,449,10,"ability"],[418,17,449,17],[418,20,449,20,"deck"],[418,24,449,24],[418,25,449,25,"slots"],[418,30,449,30],[418,31,449,31,"slotIndex"],[418,40,449,40],[418,41,449,41],[419,6,450,4],[419,10,450,8],[419,11,450,9,"ability"],[419,18,450,16],[419,20,450,18],[421,6,452,4],[422,6,453,4],[422,10,453,8,"damage"],[422,16,453,14],[422,19,453,17,"ability"],[422,26,453,24],[422,27,453,25,"stats"],[422,32,453,30],[422,33,453,31,"baseDamage"],[422,43,453,41],[424,6,455,4],[425,6,456,4,"deck"],[425,10,456,8],[425,11,456,9,"activeSynergies"],[425,26,456,24],[425,27,456,25,"forEach"],[425,34,456,32],[425,35,456,33,"synergy"],[425,42,456,40],[425,46,456,44],[426,8,457,6],[426,12,457,10,"synergy"],[426,19,457,17],[426,20,457,18,"bonus"],[426,25,457,23],[426,26,457,24,"damageBonus"],[426,37,457,35],[426,41,458,10,"synergy"],[426,48,458,17],[426,49,458,18,"requiredTags"],[426,61,458,30],[426,62,458,31,"some"],[426,66,458,35],[426,67,458,36,"tag"],[426,70,458,39],[426,74,458,43,"ability"],[426,81,458,50],[426,82,458,51,"tags"],[426,86,458,55],[426,87,458,56,"includes"],[426,95,458,64],[426,96,458,65,"tag"],[426,99,458,68],[426,100,458,69],[426,101,458,70],[426,103,458,72],[427,10,459,8,"damage"],[427,16,459,14],[427,20,459,19],[427,21,459,20],[427,24,459,23,"synergy"],[427,31,459,30],[427,32,459,31,"bonus"],[427,37,459,36],[427,38,459,37,"damageBonus"],[427,49,459,48],[427,52,459,51],[427,55,459,55],[428,8,460,6],[429,6,461,4],[429,7,461,5],[429,8,461,6],[431,6,463,4],[432,6,464,4],[432,10,464,10,"isAOE"],[432,15,464,15],[432,18,464,18,"ability"],[432,25,464,25],[432,26,464,26,"effects"],[432,33,464,33],[432,34,464,34,"includes"],[432,42,464,42],[432,43,464,43],[432,48,464,48],[432,49,464,49],[432,53,464,53,"ability"],[432,60,464,60],[432,61,464,61,"stats"],[432,66,464,66],[432,67,464,67,"aoeRadius"],[432,76,464,76],[433,6,466,4],[433,10,466,8,"isAOE"],[433,15,466,13],[433,17,466,15],[434,8,467,6,"console"],[434,15,467,13],[434,16,467,14,"log"],[434,19,467,17],[434,20,467,18],[434,39,467,37,"ability"],[434,46,467,44],[434,47,467,45,"name"],[434,51,467,49],[434,67,467,65,"ability"],[434,74,467,72],[434,75,467,73,"stats"],[434,80,467,78],[434,81,467,79,"aoeRadius"],[434,90,467,88],[434,92,467,90],[434,93,467,91],[436,8,469,6],[437,8,470,6],[437,12,470,12,"ninjaX"],[437,18,470,18],[437,21,470,21,"currentNinjaPosition"],[437,41,470,41],[437,42,470,42,"x"],[437,43,470,43],[437,46,470,46],[437,48,470,48],[437,49,470,49],[437,50,470,50],[438,8,471,6],[438,12,471,12,"ninjaY"],[438,18,471,18],[438,21,471,21,"currentNinjaPosition"],[438,41,471,41],[438,42,471,42,"y"],[438,43,471,43],[438,46,471,46],[438,48,471,48],[439,8,472,6],[439,12,472,12,"aoeRadius"],[439,21,472,21],[439,24,472,24,"ability"],[439,31,472,31],[439,32,472,32,"stats"],[439,37,472,37],[439,38,472,38,"aoeRadius"],[439,47,472,47],[440,8,474,6],[440,12,474,12,"enemiesInRange"],[440,26,474,26],[440,29,474,29,"state"],[440,34,474,34],[440,35,474,35,"enemies"],[440,42,474,42],[440,43,474,43,"filter"],[440,49,474,49],[440,50,474,50,"enemy"],[440,55,474,55],[440,59,474,59],[441,10,475,8],[441,14,475,14,"enemyX"],[441,20,475,20],[441,23,475,23,"enemy"],[441,28,475,28],[441,29,475,29,"position"],[441,37,475,37],[441,38,475,38,"x"],[441,39,475,39],[441,42,475,42],[441,46,475,46],[441,47,475,47],[441,48,475,48],[442,10,476,8],[442,14,476,14,"enemyY"],[442,20,476,20],[442,23,476,23,"enemy"],[442,28,476,28],[442,29,476,29,"position"],[442,37,476,37],[442,38,476,38,"y"],[442,39,476,39],[442,42,476,42],[442,46,476,46],[443,10,477,8],[443,14,477,14,"distance"],[443,22,477,22],[443,25,477,25,"Math"],[443,29,477,29],[443,30,477,30,"sqrt"],[443,34,477,34],[443,35,477,35,"Math"],[443,39,477,39],[443,40,477,40,"pow"],[443,43,477,43],[443,44,477,44,"enemyX"],[443,50,477,50],[443,53,477,53,"ninjaX"],[443,59,477,59],[443,61,477,61],[443,62,477,62],[443,63,477,63],[443,66,477,66,"Math"],[443,70,477,70],[443,71,477,71,"pow"],[443,74,477,74],[443,75,477,75,"enemyY"],[443,81,477,81],[443,84,477,84,"ninjaY"],[443,90,477,90],[443,92,477,92],[443,93,477,93],[443,94,477,94],[443,95,477,95],[444,10,478,8],[444,17,478,15,"distance"],[444,25,478,23],[444,29,478,27,"aoeRadius"],[444,38,478,36],[445,8,479,6],[445,9,479,7],[445,10,479,8],[446,8,481,6,"console"],[446,15,481,13],[446,16,481,14,"log"],[446,19,481,17],[446,20,481,18],[446,45,481,43,"enemiesInRange"],[446,59,481,57],[446,60,481,58,"length"],[446,66,481,64],[446,88,481,86,"aoeRadius"],[446,97,481,95],[446,107,481,105],[446,108,481,106],[448,8,483,6],[449,8,484,6,"enemiesInRange"],[449,22,484,20],[449,23,484,21,"forEach"],[449,30,484,28],[449,31,484,29,"enemy"],[449,36,484,34],[449,40,484,38],[450,10,485,8],[450,14,485,14,"damageResult"],[450,26,485,26],[450,29,485,29,"DamageCalculator"],[450,48,485,45],[450,49,485,45,"DamageCalculator"],[450,65,485,45],[450,66,485,46,"calculateDamage"],[450,81,485,61],[450,82,485,62,"damage"],[450,88,485,68],[450,90,485,70,"state"],[450,95,485,75],[450,96,485,76,"playerStats"],[450,107,485,87],[450,109,485,89,"enemy"],[450,114,485,94],[450,115,485,95,"stats"],[450,120,485,100],[450,121,485,101],[451,10,486,8,"createProjectile"],[451,26,486,24],[451,27,486,25,"enemy"],[451,32,486,30],[451,34,486,32,"damageResult"],[451,46,486,44],[451,47,486,45,"damage"],[451,53,486,51],[451,55,486,53,"currentNinjaPosition"],[451,75,486,73],[451,77,486,75],[452,12,487,10,"id"],[452,14,487,12],[452,16,487,14,"ability"],[452,23,487,21],[452,24,487,22,"id"],[452,26,487,24],[453,12,488,10,"name"],[453,16,488,14],[453,18,488,16,"ability"],[453,25,488,23],[453,26,488,24,"name"],[453,30,488,28],[454,12,489,10,"icon"],[454,16,489,14],[454,18,489,16,"ability"],[454,25,489,23],[454,26,489,24,"icon"],[455,10,490,8],[455,11,490,9],[455,12,490,10],[456,10,492,8,"console"],[456,17,492,15],[456,18,492,16,"log"],[456,21,492,19],[456,22,492,20],[456,37,492,35,"enemy"],[456,42,492,40],[456,43,492,41,"name"],[456,47,492,45],[456,55,492,53,"damageResult"],[456,67,492,65],[456,68,492,66,"damage"],[456,74,492,72],[456,83,492,81],[456,84,492,82],[457,8,493,6],[457,9,493,7],[457,10,493,8],[458,8,495,6,"console"],[458,15,495,13],[458,16,495,14,"log"],[458,19,495,17],[458,20,495,18],[458,26,495,24,"ability"],[458,33,495,31],[458,34,495,32,"name"],[458,38,495,36],[458,56,495,54,"enemiesInRange"],[458,70,495,68],[458,71,495,69,"length"],[458,77,495,75],[458,93,495,91,"damage"],[458,99,495,97],[458,118,495,116],[458,119,495,117],[459,6,497,4],[459,7,497,5],[459,13,497,11],[460,8,498,6],[461,8,499,6],[461,12,499,12,"target"],[461,18,499,18],[461,21,499,21,"findClosestEnemyInternal"],[461,45,499,45],[461,46,499,46,"state"],[461,51,499,51],[461,52,499,52,"enemies"],[461,59,499,59],[461,60,499,60],[462,8,500,6],[462,12,500,10],[462,13,500,11,"target"],[462,19,500,17],[462,21,500,19],[463,8,502,6],[463,12,502,12,"damageResult"],[463,24,502,24],[463,27,502,27,"DamageCalculator"],[463,46,502,43],[463,47,502,43,"DamageCalculator"],[463,63,502,43],[463,64,502,44,"calculateDamage"],[463,79,502,59],[463,80,502,60,"damage"],[463,86,502,66],[463,88,502,68,"state"],[463,93,502,73],[463,94,502,74,"playerStats"],[463,105,502,85],[463,107,502,87,"target"],[463,113,502,93],[463,114,502,94,"stats"],[463,119,502,99],[463,120,502,100],[465,8,504,6],[466,8,505,6,"createProjectile"],[466,24,505,22],[466,25,505,23,"target"],[466,31,505,29],[466,33,505,31,"damageResult"],[466,45,505,43],[466,46,505,44,"damage"],[466,52,505,50],[466,54,505,52,"currentNinjaPosition"],[466,74,505,72],[466,76,505,74],[467,10,506,8,"id"],[467,12,506,10],[467,14,506,12,"ability"],[467,21,506,19],[467,22,506,20,"id"],[467,24,506,22],[468,10,507,8,"name"],[468,14,507,12],[468,16,507,14,"ability"],[468,23,507,21],[468,24,507,22,"name"],[468,28,507,26],[469,10,508,8,"icon"],[469,14,508,12],[469,16,508,14,"ability"],[469,23,508,21],[469,24,508,22,"icon"],[470,8,509,6],[470,9,509,7],[470,10,509,8],[471,8,511,6,"console"],[471,15,511,13],[471,16,511,14,"log"],[471,19,511,17],[471,20,511,18],[471,26,511,24,"ability"],[471,33,511,31],[471,34,511,32,"name"],[471,38,511,36],[471,66,511,64,"damageResult"],[471,78,511,76],[471,79,511,77,"damage"],[471,85,511,83],[471,95,511,93,"damageResult"],[471,107,511,105],[471,108,511,106,"isCritical"],[471,118,511,116],[471,121,511,119],[471,131,511,129],[471,134,511,132],[471,136,511,134],[471,138,511,136],[471,139,511,137],[472,6,512,4],[474,6,514,4],[475,6,515,4],[475,10,515,8,"ability"],[475,17,515,15],[475,18,515,16,"effects"],[475,25,515,23],[475,26,515,24,"includes"],[475,34,515,32],[475,35,515,33],[475,40,515,38],[475,41,515,39],[475,45,515,43,"ability"],[475,52,515,50],[475,53,515,51,"stats"],[475,58,515,56],[475,59,515,57,"duration"],[475,67,515,65],[475,69,515,67],[476,8,516,6],[476,12,516,12,"targets"],[476,19,516,19],[476,22,516,22,"isAOE"],[476,27,516,27],[476,30,517,8,"state"],[476,35,517,13],[476,36,517,14,"enemies"],[476,43,517,21],[476,44,517,22,"filter"],[476,50,517,28],[476,51,517,29,"enemy"],[476,56,517,34],[476,60,517,38],[477,10,518,10],[477,14,518,16,"ninjaX"],[477,20,518,22],[477,23,518,25,"currentNinjaPosition"],[477,43,518,45],[477,44,518,46,"x"],[477,45,518,47],[477,48,518,50],[477,50,518,52],[478,10,519,10],[478,14,519,16,"ninjaY"],[478,20,519,22],[478,23,519,25,"currentNinjaPosition"],[478,43,519,45],[478,44,519,46,"y"],[478,45,519,47],[478,48,519,50],[478,50,519,52],[479,10,520,10],[479,14,520,16,"enemyX"],[479,20,520,22],[479,23,520,25,"enemy"],[479,28,520,30],[479,29,520,31,"position"],[479,37,520,39],[479,38,520,40,"x"],[479,39,520,41],[479,42,520,44],[479,46,520,48],[480,10,521,10],[480,14,521,16,"enemyY"],[480,20,521,22],[480,23,521,25,"enemy"],[480,28,521,30],[480,29,521,31,"position"],[480,37,521,39],[480,38,521,40,"y"],[480,39,521,41],[480,42,521,44],[480,46,521,48],[481,10,522,10],[481,14,522,16,"distance"],[481,22,522,24],[481,25,522,27,"Math"],[481,29,522,31],[481,30,522,32,"sqrt"],[481,34,522,36],[481,35,522,37,"Math"],[481,39,522,41],[481,40,522,42,"pow"],[481,43,522,45],[481,44,522,46,"enemyX"],[481,50,522,52],[481,53,522,55,"ninjaX"],[481,59,522,61],[481,61,522,63],[481,62,522,64],[481,63,522,65],[481,66,522,68,"Math"],[481,70,522,72],[481,71,522,73,"pow"],[481,74,522,76],[481,75,522,77,"enemyY"],[481,81,522,83],[481,84,522,86,"ninjaY"],[481,90,522,92],[481,92,522,94],[481,93,522,95],[481,94,522,96],[481,95,522,97],[482,10,523,10],[482,17,523,17,"distance"],[482,25,523,25],[482,29,523,29,"ability"],[482,36,523,36],[482,37,523,37,"stats"],[482,42,523,42],[482,43,523,43,"aoeRadius"],[482,52,523,52],[483,8,524,8],[483,9,524,9],[483,10,524,10],[483,13,525,8],[483,14,525,9,"findClosestEnemyInternal"],[483,38,525,33],[483,39,525,34,"state"],[483,44,525,39],[483,45,525,40,"enemies"],[483,52,525,47],[483,53,525,48],[483,54,525,49],[483,55,525,50,"filter"],[483,61,525,56],[483,62,525,57,"Boolean"],[483,69,525,64],[483,70,525,65],[484,8,527,6,"targets"],[484,15,527,13],[484,16,527,14,"forEach"],[484,23,527,21],[484,24,527,22,"target"],[484,30,527,28],[484,34,527,32],[485,10,528,8,"state"],[485,15,528,13],[485,16,528,14,"statusEffects"],[485,29,528,27],[485,30,528,28,"addEffect"],[485,39,528,37],[485,40,528,38,"target"],[485,46,528,44],[485,47,528,45,"id"],[485,49,528,47],[485,51,528,49],[486,12,529,10,"id"],[486,14,529,12],[486,16,529,14],[486,19,529,17,"ability"],[486,26,529,24],[486,27,529,25,"id"],[486,29,529,27],[486,35,529,33],[487,12,530,10,"type"],[487,16,530,14],[487,18,530,16],[487,23,530,21],[488,12,531,10,"remainingTicks"],[488,26,531,24],[488,28,531,26,"Math"],[488,32,531,30],[488,33,531,31,"floor"],[488,38,531,36],[488,39,531,37,"ability"],[488,46,531,44],[488,47,531,45,"stats"],[488,52,531,50],[488,53,531,51,"duration"],[488,61,531,59],[488,64,531,62],[488,66,531,64],[488,67,531,65],[489,12,532,10,"tickInterval"],[489,24,532,22],[489,26,532,24],[489,28,532,26],[490,12,533,10,"lastTick"],[490,20,533,18],[490,22,533,20,"state"],[490,27,533,25],[490,28,533,26,"currentTick"],[490,39,533,37],[491,12,534,10,"value"],[491,17,534,15],[491,19,534,17,"Math"],[491,23,534,21],[491,24,534,22,"floor"],[491,29,534,27],[491,30,534,28,"damage"],[491,36,534,34],[491,39,534,37],[491,42,534,40],[491,43,534,41],[492,12,535,10,"stackable"],[492,21,535,19],[492,23,535,21],[493,10,536,8],[493,11,536,9],[493,12,536,10],[494,8,537,6],[494,9,537,7],[494,10,537,8],[495,6,538,4],[497,6,540,4],[498,6,541,4],[498,10,541,8,"ability"],[498,17,541,15],[498,18,541,16,"effects"],[498,25,541,23],[498,26,541,24,"includes"],[498,34,541,32],[498,35,541,33],[498,41,541,39],[498,42,541,40],[498,46,541,44,"ability"],[498,53,541,51],[498,54,541,52,"id"],[498,56,541,54],[498,61,541,59],[498,75,541,73],[498,77,541,75],[499,8,542,6,"console"],[499,15,542,13],[499,16,542,14,"log"],[499,19,542,17],[499,20,542,18],[499,66,542,64,"ability"],[499,73,542,71],[499,74,542,72,"stats"],[499,79,542,77],[499,80,542,78,"duration"],[499,88,542,86],[499,98,542,96],[499,99,542,97],[501,8,544,6],[502,8,545,6],[502,12,545,12,"cloneX"],[502,18,545,18],[502,21,545,21,"currentNinjaPosition"],[502,41,545,41],[502,42,545,42,"x"],[502,43,545,43],[502,46,545,46],[502,48,545,48],[502,49,545,49],[502,50,545,50],[503,8,546,6],[503,12,546,12,"cloneY"],[503,18,546,18],[503,21,546,21,"currentNinjaPosition"],[503,41,546,41],[503,42,546,42,"y"],[503,43,546,43],[503,46,546,46],[503,48,546,48],[503,49,546,49],[503,50,546,50],[505,8,548,6,"state"],[505,13,548,11],[505,14,548,12,"shadowClone"],[505,25,548,23],[505,28,548,26],[506,10,549,8,"id"],[506,12,549,10],[506,14,549,12],[506,30,549,28,"Date"],[506,34,549,32],[506,35,549,33,"now"],[506,38,549,36],[506,39,549,37],[506,40,549,38],[506,42,549,40],[507,10,550,8,"remainingTicks"],[507,24,550,22],[507,26,550,24,"Math"],[507,30,550,28],[507,31,550,29,"floor"],[507,36,550,34],[507,37,550,35,"ability"],[507,44,550,42],[507,45,550,43,"stats"],[507,50,550,48],[507,51,550,49,"duration"],[507,59,550,57],[507,62,550,60],[507,64,550,62],[507,65,550,63],[508,10,550,65],[509,10,551,8,"position"],[509,18,551,16],[509,20,551,18],[510,12,551,20,"x"],[510,13,551,21],[510,15,551,23,"cloneX"],[510,21,551,29],[511,12,551,31,"y"],[511,13,551,32],[511,15,551,34,"cloneY"],[512,10,551,41],[512,11,551,42],[513,10,552,8,"damageMultiplier"],[513,26,552,24],[513,28,552,26],[513,31,552,29],[513,32,552,31],[514,8,553,6],[514,9,553,7],[515,8,555,6,"console"],[515,15,555,13],[515,16,555,14,"log"],[515,19,555,17],[515,20,555,18],[515,63,555,61,"ability"],[515,70,555,68],[515,71,555,69,"stats"],[515,76,555,74],[515,77,555,75,"duration"],[515,85,555,83],[515,108,555,106],[515,109,555,107],[516,6,556,4],[517,4,557,2],[517,5,557,3],[519,4,559,2],[520,4,560,2],[520,8,560,8,"createProjectile"],[520,24,560,24],[520,27,560,27,"createProjectile"],[520,28,560,28,"targetEnemy"],[520,39,560,52],[520,41,560,54,"damage"],[520,47,560,68],[520,49,560,70,"ninjaPos"],[520,57,560,103],[520,59,560,105,"abilityInfo"],[520,70,560,159],[520,75,560,164],[521,6,561,4],[521,10,561,10,"SCREEN_WIDTH"],[521,22,561,22],[521,25,561,25],[521,28,561,28],[522,6,562,4],[522,10,562,10,"GAME_AREA_HEIGHT"],[522,26,562,26],[522,29,562,29],[522,32,562,32],[522,35,562,35],[522,38,562,38],[522,39,562,39],[522,40,562,40],[523,6,563,4],[523,10,563,10,"NINJA_SIZE"],[523,20,563,20],[523,23,563,23],[523,25,563,25],[525,6,565,4],[526,6,566,4],[526,10,566,10,"ninjaX"],[526,16,566,16],[526,19,566,19,"ninjaPos"],[526,27,566,27],[526,30,566,30,"ninjaPos"],[526,38,566,38],[526,39,566,39,"x"],[526,40,566,40],[526,43,566,43,"NINJA_SIZE"],[526,53,566,53],[526,56,566,56],[526,57,566,57],[526,60,566,60,"SCREEN_WIDTH"],[526,72,566,72],[526,75,566,75],[526,76,566,76],[527,6,567,4],[527,10,567,10,"ninjaY"],[527,16,567,16],[527,19,567,19,"ninjaPos"],[527,27,567,27],[527,30,567,30,"ninjaPos"],[527,38,567,38],[527,39,567,39,"y"],[527,40,567,40],[527,43,567,43,"NINJA_SIZE"],[527,53,567,53],[527,56,567,56],[527,57,567,57],[527,60,567,60,"GAME_AREA_HEIGHT"],[527,76,567,76],[527,79,567,79],[527,80,567,80],[528,6,568,4],[528,10,568,10,"ENEMY_SIZE"],[528,20,568,20],[528,23,568,23],[528,25,568,25],[529,6,570,4],[529,10,570,10,"projectile"],[529,20,570,38],[529,23,570,41],[530,8,571,6,"id"],[530,10,571,8],[530,12,571,10],[530,20,571,18,"Date"],[530,24,571,22],[530,25,571,23,"now"],[530,28,571,26],[530,29,571,27],[530,30,571,28],[530,34,571,32,"Math"],[530,38,571,36],[530,39,571,37,"random"],[530,45,571,43],[530,46,571,44],[530,47,571,45],[530,49,571,47],[531,8,572,6,"x"],[531,9,572,7],[531,11,572,9,"ninjaX"],[531,17,572,15],[532,8,573,6,"y"],[532,9,573,7],[532,11,573,9,"ninjaY"],[532,17,573,15],[533,8,574,6,"targetX"],[533,15,574,13],[533,17,574,15,"targetEnemy"],[533,28,574,26],[533,29,574,27,"position"],[533,37,574,35],[533,38,574,36,"x"],[533,39,574,37],[533,42,574,40,"ENEMY_SIZE"],[533,52,574,50],[533,55,574,53],[533,56,574,54],[534,8,575,6,"targetY"],[534,15,575,13],[534,17,575,15,"targetEnemy"],[534,28,575,26],[534,29,575,27,"position"],[534,37,575,35],[534,38,575,36,"y"],[534,39,575,37],[534,42,575,40,"ENEMY_SIZE"],[534,52,575,50],[534,55,575,53],[534,56,575,54],[535,8,576,6,"targetEnemyId"],[535,21,576,19],[535,23,576,21,"targetEnemy"],[535,34,576,32],[535,35,576,33,"id"],[535,37,576,35],[536,8,577,6,"damage"],[536,14,577,12],[536,16,577,14,"damage"],[536,22,577,20],[537,8,578,6,"startTime"],[537,17,578,15],[537,19,578,17,"Date"],[537,23,578,21],[537,24,578,22,"now"],[537,27,578,25],[537,28,578,26],[537,29,578,27],[538,8,579,6,"duration"],[538,16,579,14],[538,18,579,16],[538,21,579,19],[539,8,579,21],[540,8,580,6],[541,8,581,6,"abilityId"],[541,17,581,15],[541,19,581,17,"abilityInfo"],[541,30,581,28],[541,32,581,30,"id"],[541,34,581,32],[541,38,581,36],[541,54,581,52],[542,8,582,6,"abilityName"],[542,19,582,17],[542,21,582,19,"abilityInfo"],[542,32,582,30],[542,34,582,32,"name"],[542,38,582,36],[542,42,582,40],[542,58,582,56],[543,8,583,6,"abilityIcon"],[543,19,583,17],[543,21,583,19,"abilityInfo"],[543,32,583,30],[543,34,583,32,"icon"],[543,38,583,36],[543,42,583,40],[543,46,583,44],[543,47,583,46],[544,6,584,4],[544,7,584,5],[545,6,586,4,"console"],[545,13,586,11],[545,14,586,12,"log"],[545,17,586,15],[545,18,586,16],[545,53,586,51,"targetEnemy"],[545,64,586,62],[545,65,586,63,"id"],[545,67,586,65],[545,75,586,73,"damage"],[545,81,586,79],[545,90,586,88],[545,91,586,89],[546,6,587,4,"console"],[546,13,587,11],[546,14,587,12,"log"],[546,17,587,15],[546,18,587,16],[546,53,587,51,"ninjaX"],[546,59,587,57],[546,64,587,62,"ninjaY"],[546,70,587,68],[546,87,587,85,"projectile"],[546,97,587,95],[546,98,587,96,"targetX"],[546,105,587,103],[546,110,587,108,"projectile"],[546,120,587,118],[546,121,587,119,"targetY"],[546,128,587,126],[546,131,587,129],[546,132,587,130],[547,6,589,4,"setProjectiles"],[547,20,589,18],[547,21,589,19,"prev"],[547,25,589,23],[547,29,589,27],[547,30,589,28],[547,33,589,31,"prev"],[547,37,589,35],[547,39,589,37,"projectile"],[547,49,589,47],[547,50,589,48],[547,51,589,49],[549,6,591,4],[550,6,592,4,"setTimeout"],[550,16,592,14],[550,17,592,15],[550,23,592,21],[551,8,593,6,"handleProjectileHit"],[551,27,593,25],[551,28,593,26,"projectile"],[551,38,593,36],[551,39,593,37],[552,6,594,4],[552,7,594,5],[552,9,594,7],[552,12,594,10],[552,13,594,11],[553,4,595,2],[553,5,595,3],[555,4,597,2],[556,4,598,2],[556,8,598,8,"spawnTestEnemy"],[556,22,598,22],[556,25,598,26,"state"],[556,30,598,44],[556,34,598,49],[557,6,599,4,"console"],[557,13,599,11],[557,14,599,12,"log"],[557,17,599,15],[557,18,599,16],[557,83,599,81],[557,84,599,82],[559,6,601,4],[560,6,602,4],[560,10,602,10,"zoneEnemy"],[560,19,602,19],[560,22,602,22,"spawnZoneEnemy"],[560,36,602,36],[560,37,602,37],[560,38,602,38],[561,6,603,4],[561,10,603,8],[561,11,603,9,"zoneEnemy"],[561,20,603,18],[561,22,603,20],[562,8,604,6,"console"],[562,15,604,13],[562,16,604,14,"log"],[562,19,604,17],[562,20,604,18],[562,76,604,74],[562,77,604,75],[563,8,605,6],[564,8,606,6,"spawnBasicTestEnemy"],[564,27,606,25],[564,28,606,26,"state"],[564,33,606,31],[564,34,606,32],[565,8,607,6],[566,6,608,4],[567,6,610,4,"console"],[567,13,610,11],[567,14,610,12,"log"],[567,17,610,15],[567,18,610,16],[567,44,610,42,"zoneEnemy"],[567,53,610,51],[567,54,610,52,"name"],[567,58,610,56],[567,63,610,61,"zoneEnemy"],[567,72,610,70],[567,73,610,71,"typeId"],[567,79,610,77],[567,94,610,92,"currentZone"],[567,105,610,103],[567,107,610,105,"id"],[567,109,610,107],[567,119,610,117,"currentZoneLevel"],[567,135,610,133],[567,137,610,135,"level"],[567,142,610,140],[567,144,610,142],[567,145,610,143],[569,6,612,4],[570,6,613,4],[570,10,613,10,"combatEnemy"],[570,21,613,34],[570,24,613,37],[571,8,614,6,"id"],[571,10,614,8],[571,12,614,10,"zoneEnemy"],[571,21,614,19],[571,22,614,20,"id"],[571,24,614,22],[572,8,615,6,"name"],[572,12,615,10],[572,14,615,12,"zoneEnemy"],[572,23,615,21],[572,24,615,22,"name"],[572,28,615,26],[573,8,616,6,"health"],[573,14,616,12],[573,16,616,14,"zoneEnemy"],[573,25,616,23],[573,26,616,24,"hp"],[573,28,616,26],[574,8,617,6,"maxHealth"],[574,17,617,15],[574,19,617,17,"zoneEnemy"],[574,28,617,26],[574,29,617,27,"maxHP"],[574,34,617,32],[575,8,618,6,"stats"],[575,13,618,11],[575,15,618,13],[576,10,619,8,"attack"],[576,16,619,14],[576,18,619,16,"zoneEnemy"],[576,27,619,25],[576,28,619,26,"attack"],[576,34,619,32],[577,10,620,8,"defense"],[577,17,620,15],[577,19,620,17],[577,21,620,19],[578,10,620,21],[579,10,621,8,"health"],[579,16,621,14],[579,18,621,16,"zoneEnemy"],[579,27,621,25],[579,28,621,26,"hp"],[579,30,621,28],[580,10,622,8,"maxHealth"],[580,19,622,17],[580,21,622,19,"zoneEnemy"],[580,30,622,28],[580,31,622,29,"maxHP"],[580,36,622,34],[581,10,623,8,"critChance"],[581,20,623,18],[581,22,623,20],[581,23,623,21],[582,10,624,8,"critDamage"],[582,20,624,18],[582,22,624,20],[582,25,624,23],[583,10,625,8,"cooldownReduction"],[583,27,625,25],[583,29,625,27],[584,8,626,6],[584,9,626,7],[585,8,627,6,"position"],[585,16,627,14],[585,18,627,16,"zoneEnemy"],[585,27,627,25],[585,28,627,26,"position"],[585,36,627,34],[586,8,628,6,"lastDamaged"],[586,19,628,17],[586,21,628,19],[586,22,628,20],[587,8,629,6],[588,8,630,6,"zoneTypeId"],[588,18,630,16],[588,20,630,18,"zoneEnemy"],[588,29,630,27],[588,30,630,28,"typeId"],[588,36,630,34],[589,8,631,6,"zoneXP"],[589,14,631,12],[589,16,631,14,"zoneEnemy"],[589,25,631,23],[589,26,631,24,"xp"],[590,6,632,4],[590,7,632,5],[591,6,634,4,"console"],[591,13,634,11],[591,14,634,12,"log"],[591,17,634,15],[591,18,634,16],[591,42,634,40,"combatEnemy"],[591,53,634,51],[591,54,634,52,"name"],[591,58,634,56],[591,67,634,65,"combatEnemy"],[591,78,634,76],[591,79,634,77,"health"],[591,85,634,83],[591,100,634,98,"currentZone"],[591,111,634,109],[591,113,634,111,"id"],[591,115,634,113],[591,125,634,123,"currentZoneLevel"],[591,141,634,139],[591,143,634,141,"level"],[591,148,634,146],[591,150,634,148],[591,151,634,149],[592,6,635,4,"state"],[592,11,635,9],[592,12,635,10,"enemies"],[592,19,635,17],[592,20,635,18,"push"],[592,24,635,22],[592,25,635,23,"combatEnemy"],[592,36,635,34],[592,37,635,35],[593,4,636,2],[593,5,636,3],[595,4,638,2],[596,4,639,2],[596,8,639,8,"spawnBasicTestEnemy"],[596,27,639,27],[596,30,639,31,"state"],[596,35,639,49],[596,39,639,54],[597,6,640,4],[597,10,640,10,"SCREEN_WIDTH"],[597,22,640,22],[597,25,640,25],[597,28,640,28],[598,6,641,4],[598,10,641,10,"GAME_AREA_HEIGHT"],[598,26,641,26],[598,29,641,29],[598,32,641,32],[598,35,641,35],[598,38,641,38],[599,6,642,4],[599,10,642,10,"ENEMY_SIZE"],[599,20,642,20],[599,23,642,23],[599,25,642,25],[600,6,644,4],[600,10,644,10,"x"],[600,11,644,11],[600,14,644,14,"Math"],[600,18,644,18],[600,19,644,19,"random"],[600,25,644,25],[600,26,644,26],[600,27,644,27],[600,31,644,31,"SCREEN_WIDTH"],[600,43,644,43],[600,46,644,46,"ENEMY_SIZE"],[600,56,644,56],[600,59,644,59],[600,60,644,60],[600,61,644,61],[600,64,644,64,"ENEMY_SIZE"],[600,74,644,74],[601,6,645,4],[601,10,645,10,"y"],[601,11,645,11],[601,14,645,14,"Math"],[601,18,645,18],[601,19,645,19,"random"],[601,25,645,25],[601,26,645,26],[601,27,645,27],[601,31,645,31,"GAME_AREA_HEIGHT"],[601,47,645,47],[601,50,645,50,"ENEMY_SIZE"],[601,60,645,60],[601,63,645,63],[601,64,645,64],[601,65,645,65],[601,68,645,68,"ENEMY_SIZE"],[601,78,645,78],[602,6,647,4],[602,10,647,10,"enemy"],[602,15,647,28],[602,18,647,31],[603,8,648,6,"id"],[603,10,648,8],[603,12,648,10],[603,30,648,28,"Date"],[603,34,648,32],[603,35,648,33,"now"],[603,38,648,36],[603,39,648,37],[603,40,648,38],[603,44,648,42,"Math"],[603,48,648,46],[603,49,648,47,"random"],[603,55,648,53],[603,56,648,54],[603,57,648,55],[603,59,648,57],[604,8,649,6,"name"],[604,12,649,10],[604,14,649,12],[604,26,649,24,"Math"],[604,30,649,28],[604,31,649,29,"floor"],[604,36,649,34],[604,37,649,35,"Math"],[604,41,649,39],[604,42,649,40,"random"],[604,48,649,46],[604,49,649,47],[604,50,649,48],[604,53,649,51],[604,56,649,54],[604,57,649,55],[604,59,649,57],[605,8,650,6,"health"],[605,14,650,12],[605,16,650,14],[605,18,650,16],[606,8,651,6,"maxHealth"],[606,17,651,15],[606,19,651,17],[606,21,651,19],[607,8,652,6,"stats"],[607,13,652,11],[607,15,652,13],[608,10,653,8,"attack"],[608,16,653,14],[608,18,653,16],[608,20,653,18],[609,10,654,8,"defense"],[609,17,654,15],[609,19,654,17],[609,21,654,19],[610,10,655,8,"health"],[610,16,655,14],[610,18,655,16],[610,20,655,18],[611,10,656,8,"maxHealth"],[611,19,656,17],[611,21,656,19],[611,23,656,21],[612,10,657,8,"critChance"],[612,20,657,18],[612,22,657,20],[612,23,657,21],[613,10,658,8,"critDamage"],[613,20,658,18],[613,22,658,20],[613,25,658,23],[614,10,659,8,"cooldownReduction"],[614,27,659,25],[614,29,659,27],[615,8,660,6],[615,9,660,7],[616,8,661,6,"position"],[616,16,661,14],[616,18,661,16],[617,10,661,18,"x"],[617,11,661,19],[618,10,661,21,"y"],[619,8,661,23],[619,9,661,24],[620,8,662,6,"lastDamaged"],[620,19,662,17],[620,21,662,19],[621,6,663,4],[621,7,663,5],[622,6,665,4,"console"],[622,13,665,11],[622,14,665,12,"log"],[622,17,665,15],[622,18,665,16],[622,42,665,40,"enemy"],[622,47,665,45],[622,48,665,46,"name"],[622,52,665,50],[622,60,665,58,"Math"],[622,64,665,62],[622,65,665,63,"round"],[622,70,665,68],[622,71,665,69,"x"],[622,72,665,70],[622,73,665,71],[622,78,665,76,"Math"],[622,82,665,80],[622,83,665,81,"round"],[622,88,665,86],[622,89,665,87,"y"],[622,90,665,88],[622,91,665,89],[622,94,665,92],[622,95,665,93],[623,6,666,4,"state"],[623,11,666,9],[623,12,666,10,"enemies"],[623,19,666,17],[623,20,666,18,"push"],[623,24,666,22],[623,25,666,23,"enemy"],[623,30,666,28],[623,31,666,29],[624,4,667,2],[624,5,667,3],[626,4,669,2],[627,4,670,2],[627,8,670,8,"startCombat"],[627,19,670,19],[627,22,670,22,"React"],[627,27,670,27],[627,28,670,27,"default"],[627,35,670,27],[627,36,670,28,"useCallback"],[627,47,670,39],[627,48,670,40],[627,54,670,46],[628,6,671,4,"console"],[628,13,671,11],[628,14,671,12,"log"],[628,17,671,15],[628,18,671,16],[628,63,671,61],[628,64,671,62],[629,6,672,4,"setCombatState"],[629,20,672,18],[629,21,672,19,"prev"],[629,25,672,23],[629,30,672,28],[630,8,672,30],[630,11,672,33,"prev"],[630,15,672,37],[631,8,672,39,"isInCombat"],[631,18,672,49],[631,20,672,51],[632,6,672,56],[632,7,672,57],[632,8,672,58],[632,9,672,59],[634,6,674,4],[635,6,675,4,"combatEngine"],[635,25,675,16],[635,26,675,16,"combatEngine"],[635,38,675,16],[635,39,675,17,"addTickCallback"],[635,54,675,32],[635,55,675,33,"handleCombatTick"],[635,71,675,49],[635,72,675,50],[636,6,676,4,"console"],[636,13,676,11],[636,14,676,12,"log"],[636,17,676,15],[636,18,676,16],[636,62,676,60],[636,63,676,61],[638,6,678,4],[639,6,679,4,"combatEngine"],[639,25,679,16],[639,26,679,16,"combatEngine"],[639,38,679,16],[639,39,679,17,"start"],[639,44,679,22],[639,45,679,23],[639,46,679,24],[640,4,680,2],[640,5,680,3],[640,7,680,5],[640,8,680,6,"combatEngine"],[640,27,680,18],[640,28,680,18,"combatEngine"],[640,40,680,18],[640,42,680,20,"handleCombatTick"],[640,58,680,36],[640,59,680,37],[640,60,680,38],[642,4,682,2],[643,4,683,2],[643,8,683,8,"stopCombat"],[643,18,683,18],[643,21,683,21,"React"],[643,26,683,26],[643,27,683,26,"default"],[643,34,683,26],[643,35,683,27,"useCallback"],[643,46,683,38],[643,47,683,39],[643,53,683,45],[644,6,684,4,"setCombatState"],[644,20,684,18],[644,21,684,19,"prev"],[644,25,684,23],[644,30,684,28],[645,8,684,30],[645,11,684,33,"prev"],[645,15,684,37],[646,8,684,39,"isInCombat"],[646,18,684,49],[646,20,684,51],[647,6,684,57],[647,7,684,58],[647,8,684,59],[647,9,684,60],[648,6,685,4,"combatEngine"],[648,25,685,16],[648,26,685,16,"combatEngine"],[648,38,685,16],[648,39,685,17,"removeTickCallback"],[648,57,685,35],[648,58,685,36,"handleCombatTick"],[648,74,685,52],[648,75,685,53],[649,4,686,2],[649,5,686,3],[649,7,686,5],[649,8,686,6,"combatEngine"],[649,27,686,18],[649,28,686,18,"combatEngine"],[649,40,686,18],[649,42,686,20,"handleCombatTick"],[649,58,686,36],[649,59,686,37],[649,60,686,38],[651,4,688,2],[652,4,689,2],[652,8,689,8,"equipAbility"],[652,20,689,20],[652,23,689,23,"equipAbility"],[652,24,689,24,"abilityId"],[652,33,689,41],[652,35,689,43,"slotIndex"],[652,44,689,60],[652,49,689,74],[653,6,690,4],[653,13,690,11,"combatState"],[653,24,690,22],[653,25,690,23,"abilityManager"],[653,39,690,37],[653,40,690,38,"equipAbility"],[653,52,690,50],[653,53,690,51,"abilityId"],[653,62,690,60],[653,64,690,62,"slotIndex"],[653,73,690,71],[653,74,690,72],[654,4,691,2],[654,5,691,3],[655,4,693,2],[655,8,693,8,"getDeck"],[655,15,693,15],[655,18,693,18,"getDeck"],[655,19,693,18],[655,24,693,24],[656,6,694,4],[656,13,694,11,"combatState"],[656,24,694,22],[656,25,694,23,"abilityManager"],[656,39,694,37],[656,40,694,38,"getDeck"],[656,47,694,45],[656,48,694,46],[656,49,694,47],[657,4,695,2],[657,5,695,3],[658,4,697,2],[658,8,697,8,"getAvailableAbilities"],[658,29,697,29],[658,32,697,32,"getAvailableAbilities"],[658,33,697,32],[658,38,697,38],[659,6,698,4],[659,13,698,11,"combatState"],[659,24,698,22],[659,25,698,23,"abilityManager"],[659,39,698,37],[659,40,698,38,"getAvailableAbilities"],[659,61,698,59],[659,62,698,60],[659,63,698,61],[660,4,699,2],[660,5,699,3],[661,4,701,2],[661,8,701,8,"upgradeAbility"],[661,22,701,22],[661,25,701,26,"abilityId"],[661,34,701,43],[661,38,701,57],[662,6,702,4],[662,13,702,11,"combatState"],[662,24,702,22],[662,25,702,23,"abilityManager"],[662,39,702,37],[662,40,702,38,"upgradeAbility"],[662,54,702,52],[662,55,702,53,"abilityId"],[662,64,702,62],[662,65,702,63],[663,4,703,2],[663,5,703,3],[665,4,705,2],[666,4,706,2],[666,8,706,8,"clearAllEnemies"],[666,23,706,23],[666,26,706,26,"clearAllEnemies"],[666,27,706,26],[666,32,706,32],[667,6,707,4,"console"],[667,13,707,11],[667,14,707,12,"log"],[667,17,707,15],[667,18,707,16],[667,67,707,65],[667,68,707,66],[668,6,708,4,"setCombatState"],[668,20,708,18],[668,21,708,19,"prev"],[668,25,708,23],[668,30,708,28],[669,8,709,6],[669,11,709,9,"prev"],[669,15,709,13],[670,8,710,6,"enemies"],[670,15,710,13],[670,17,710,15],[671,6,711,4],[671,7,711,5],[671,8,711,6],[671,9,711,7],[672,4,712,2],[672,5,712,3],[674,4,714,2],[675,4,715,2],[675,8,715,8,"triggerLevelUpExplosion"],[675,31,715,31],[675,34,715,34,"triggerLevelUpExplosion"],[675,35,715,34],[675,40,715,40],[676,6,716,4,"console"],[676,13,716,11],[676,14,716,12,"log"],[676,17,716,15],[676,18,716,16],[676,70,716,68],[676,71,716,69],[677,6,718,4],[677,10,718,10,"explosionTime"],[677,23,718,23],[677,26,718,26,"Date"],[677,30,718,30],[677,31,718,31,"now"],[677,34,718,34],[677,35,718,35],[677,36,718,36],[678,6,719,4,"setLastExplosionTime"],[678,26,719,24],[678,27,719,25,"explosionTime"],[678,40,719,38],[678,41,719,39],[679,6,721,4,"setCombatState"],[679,20,721,18],[679,21,721,19,"prev"],[679,25,721,23],[679,29,721,27],[680,8,722,6],[681,8,723,6],[681,12,723,12,"enemyCount"],[681,22,723,22],[681,25,723,25,"prev"],[681,29,723,29],[681,30,723,30,"enemies"],[681,37,723,37],[681,38,723,38,"length"],[681,44,723,44],[682,8,724,6],[682,12,724,12,"explosionXP"],[682,23,724,23],[682,26,724,26,"enemyCount"],[682,36,724,36],[682,39,724,39],[682,42,724,42],[682,43,724,43],[682,44,724,44],[683,8,725,6],[683,12,725,12,"explosionGold"],[683,25,725,25],[683,28,725,28,"enemyCount"],[683,38,725,38],[683,41,725,41],[683,42,725,42],[683,43,725,43],[683,44,725,44],[685,8,727,6,"console"],[685,15,727,13],[685,16,727,14,"log"],[685,19,727,17],[685,20,727,18],[685,44,727,42,"enemyCount"],[685,54,727,52],[685,76,727,74,"explosionXP"],[685,87,727,85],[685,98,727,96,"explosionGold"],[685,111,727,109],[685,118,727,116],[685,119,727,117],[687,8,729,6],[688,8,730,6],[688,12,730,10,"explosionXP"],[688,23,730,21],[688,26,730,24],[688,27,730,25],[688,29,730,27],[689,10,731,8,"setTimeout"],[689,20,731,18],[689,21,731,19],[689,27,731,25],[690,12,732,10,"game"],[690,16,732,14],[690,17,732,15,"updateNinja"],[690,28,732,26],[690,29,732,28,"ninja"],[690,34,732,33],[690,39,732,39],[691,14,733,12,"experience"],[691,24,733,22],[691,26,733,24,"ninja"],[691,31,733,29],[691,32,733,30,"experience"],[691,42,733,40],[691,45,733,43,"explosionXP"],[691,56,733,54],[692,14,734,12,"gold"],[692,18,734,16],[692,20,734,18,"ninja"],[692,25,734,23],[692,26,734,24,"gold"],[692,30,734,28],[692,33,734,31,"explosionGold"],[693,12,735,10],[693,13,735,11],[693,14,735,12],[693,15,735,13],[694,10,736,8],[694,11,736,9],[694,13,736,11],[694,14,736,12],[694,15,736,13],[694,16,736,14],[694,17,736,15],[695,8,737,6],[697,8,739,6],[698,8,740,6],[699,8,741,6],[699,12,741,12,"damagedEnemies"],[699,26,741,26],[699,29,741,29,"prev"],[699,33,741,33],[699,34,741,34,"enemies"],[699,41,741,41],[699,42,741,42,"map"],[699,45,741,45],[699,46,741,46,"enemy"],[699,51,741,51],[699,56,741,56],[700,10,742,8],[700,13,742,11,"enemy"],[700,18,742,16],[701,10,743,8,"health"],[701,16,743,14],[701,18,743,16],[701,19,743,17],[702,10,743,19],[703,10,744,8,"lastDamaged"],[703,21,744,19],[703,23,744,21,"combatEngine"],[703,42,744,33],[703,43,744,33,"combatEngine"],[703,55,744,33],[703,56,744,34,"getCurrentTick"],[703,70,744,48],[703,71,744,49],[704,8,745,6],[704,9,745,7],[704,10,745,8],[704,11,745,9],[705,8,747,6],[705,15,747,13],[706,10,748,8],[706,13,748,11,"prev"],[706,17,748,15],[707,10,749,8,"enemies"],[707,17,749,15],[707,19,749,17,"damagedEnemies"],[708,8,750,6],[708,9,750,7],[709,6,751,4],[709,7,751,5],[709,8,751,6],[710,4,752,2],[710,5,752,3],[712,4,754,2],[713,4,755,2],[713,8,755,8,"spawnEnemy"],[713,18,755,18],[713,21,755,22,"position"],[713,29,755,57],[713,33,755,75],[714,6,756,4],[714,10,756,10,"SCREEN_WIDTH"],[714,22,756,22],[714,25,756,25],[714,28,756,28],[715,6,757,4],[715,10,757,10,"GAME_AREA_HEIGHT"],[715,26,757,26],[715,29,757,29],[715,32,757,32],[715,35,757,35],[715,38,757,38],[715,39,757,39],[715,40,757,40],[716,6,758,4],[716,10,758,10,"ENEMY_SIZE"],[716,20,758,20],[716,23,758,23],[716,25,758,25],[718,6,760,4],[719,6,761,4],[719,10,761,10,"x"],[719,11,761,11],[719,14,761,14,"position"],[719,22,761,22],[719,24,761,24,"x"],[719,25,761,25],[719,29,761,29,"Math"],[719,33,761,33],[719,34,761,34,"random"],[719,40,761,40],[719,41,761,41],[719,42,761,42],[719,46,761,46,"SCREEN_WIDTH"],[719,58,761,58],[719,61,761,61,"ENEMY_SIZE"],[719,71,761,71],[719,74,761,74],[719,75,761,75],[719,76,761,76],[719,79,761,79,"ENEMY_SIZE"],[719,89,761,89],[720,6,762,4],[720,10,762,10,"y"],[720,11,762,11],[720,14,762,14,"position"],[720,22,762,22],[720,24,762,24,"y"],[720,25,762,25],[720,29,762,29,"Math"],[720,33,762,33],[720,34,762,34,"random"],[720,40,762,40],[720,41,762,41],[720,42,762,42],[720,46,762,46,"GAME_AREA_HEIGHT"],[720,62,762,62],[720,65,762,65,"ENEMY_SIZE"],[720,75,762,75],[720,78,762,78],[720,79,762,79],[720,80,762,80],[720,83,762,83,"ENEMY_SIZE"],[720,93,762,93],[721,6,764,4],[721,10,764,10,"enemy"],[721,15,764,28],[721,18,764,31],[722,8,765,6,"id"],[722,10,765,8],[722,12,765,10],[722,21,765,19],[722,23,765,21,"enemyCounter"],[722,35,765,33],[722,37,765,35],[723,8,766,6,"name"],[723,12,766,10],[723,14,766,12],[723,24,766,22],[724,8,767,6,"health"],[724,14,767,12],[724,16,767,14],[724,19,767,17],[725,8,768,6,"maxHealth"],[725,17,768,15],[725,19,768,17],[725,22,768,20],[726,8,769,6,"stats"],[726,13,769,11],[726,15,769,13],[727,10,770,8,"attack"],[727,16,770,14],[727,18,770,16],[727,20,770,18],[728,10,771,8,"defense"],[728,17,771,15],[728,19,771,17],[728,21,771,19],[729,10,772,8,"health"],[729,16,772,14],[729,18,772,16],[729,21,772,19],[730,10,773,8,"maxHealth"],[730,19,773,17],[730,21,773,19],[730,24,773,22],[731,10,774,8,"critChance"],[731,20,774,18],[731,22,774,20],[731,23,774,21],[732,10,775,8,"critDamage"],[732,20,775,18],[732,22,775,20],[732,25,775,23],[733,10,776,8,"cooldownReduction"],[733,27,776,25],[733,29,776,27],[734,8,777,6],[734,9,777,7],[735,8,778,6,"position"],[735,16,778,14],[735,18,778,16],[736,10,778,18,"x"],[736,11,778,19],[737,10,778,21,"y"],[738,8,778,23],[738,9,778,24],[739,8,779,6,"lastDamaged"],[739,19,779,17],[739,21,779,19],[740,6,780,4],[740,7,780,5],[741,6,782,4,"setCombatState"],[741,20,782,18],[741,21,782,19,"prev"],[741,25,782,23],[741,30,782,28],[742,8,783,6],[742,11,783,9,"prev"],[742,15,783,13],[743,8,784,6,"enemies"],[743,15,784,13],[743,17,784,15],[743,18,784,16],[743,21,784,19,"prev"],[743,25,784,23],[743,26,784,24,"enemies"],[743,33,784,31],[743,35,784,33,"enemy"],[743,40,784,38],[744,6,785,4],[744,7,785,5],[744,8,785,6],[744,9,785,7],[745,6,787,4],[745,13,787,11,"enemy"],[745,18,787,16],[746,4,788,2],[746,5,788,3],[748,4,790,2],[749,4,791,2],[749,8,791,8,"spawnBoss"],[749,17,791,17],[749,20,791,21,"bossEnemy"],[749,29,791,43],[749,33,791,48],[750,6,792,4,"console"],[750,13,792,11],[750,14,792,12,"log"],[750,17,792,15],[750,18,792,16],[750,39,792,37,"bossEnemy"],[750,48,792,46],[750,49,792,47,"name"],[750,53,792,51],[750,90,792,88],[750,91,792,89],[751,6,793,4,"setCombatState"],[751,20,793,18],[751,21,793,19,"prev"],[751,25,793,23],[751,30,793,28],[752,8,794,6],[752,11,794,9,"prev"],[752,15,794,13],[753,8,795,6,"enemies"],[753,15,795,13],[753,17,795,15],[753,18,795,16,"bossEnemy"],[753,27,795,25],[753,28,795,26],[753,29,795,27],[754,6,796,4],[754,7,796,5],[754,8,796,6],[754,9,796,7],[755,4,797,2],[755,5,797,3],[757,4,799,2],[758,4,800,2],[758,8,800,8,"clearSpecificEnemy"],[758,26,800,26],[758,29,800,30,"enemyId"],[758,36,800,45],[758,40,800,50],[759,6,801,4,"setCombatState"],[759,20,801,18],[759,21,801,19,"prev"],[759,25,801,23],[759,30,801,28],[760,8,802,6],[760,11,802,9,"prev"],[760,15,802,13],[761,8,803,6,"enemies"],[761,15,803,13],[761,17,803,15,"prev"],[761,21,803,19],[761,22,803,20,"enemies"],[761,29,803,27],[761,30,803,28,"filter"],[761,36,803,34],[761,37,803,35,"enemy"],[761,42,803,40],[761,46,803,44,"enemy"],[761,51,803,49],[761,52,803,50,"id"],[761,54,803,52],[761,59,803,57,"enemyId"],[761,66,803,64],[762,6,804,4],[762,7,804,5],[762,8,804,6],[762,9,804,7],[763,4,805,2],[763,5,805,3],[765,4,807,2],[766,4,808,2],[766,8,808,8,"useAbilityManually"],[766,26,808,26],[766,29,808,26,"_s3"],[766,32,808,26],[766,33,808,29],[766,37,808,29,"useCallback"],[766,43,808,40],[766,44,808,40,"useCallback"],[766,55,808,40],[766,57,808,40,"_s3"],[766,60,808,40],[766,61,808,42,"slotIndex"],[766,70,808,59],[766,74,808,73],[767,6,808,73,"_s3"],[767,9,808,73],[768,6,809,4,"console"],[768,13,809,11],[768,14,809,12,"log"],[768,17,809,15],[768,18,809,16],[768,53,809,51,"slotIndex"],[768,62,809,60],[768,64,809,62],[768,65,809,63],[770,6,811,4],[771,6,812,4],[771,10,812,10,"isReady"],[771,17,812,17],[771,20,812,20,"combatState"],[771,31,812,31],[771,32,812,32,"abilityManager"],[771,46,812,46],[771,47,812,47,"isAbilityReady"],[771,61,812,61],[771,62,812,62,"slotIndex"],[771,71,812,71],[771,72,812,72],[772,6,813,4],[772,10,813,8],[772,11,813,9,"isReady"],[772,18,813,16],[772,20,813,18],[773,8,814,6,"console"],[773,15,814,13],[773,16,814,14,"log"],[773,19,814,17],[773,20,814,18],[773,41,814,39,"slotIndex"],[773,50,814,48],[773,85,814,83],[773,86,814,84],[774,8,815,6],[774,15,815,13],[774,20,815,18],[775,6,816,4],[777,6,818,4],[778,6,819,4],[778,10,819,8,"combatState"],[778,21,819,19],[778,22,819,20,"enemies"],[778,29,819,27],[778,30,819,28,"length"],[778,36,819,34],[778,41,819,39],[778,42,819,40],[778,44,819,42],[779,8,820,6,"console"],[779,15,820,13],[779,16,820,14,"log"],[779,19,820,17],[779,20,820,18],[779,69,820,67],[779,70,820,68],[780,8,821,6],[780,15,821,13],[780,20,821,18],[781,6,822,4],[783,6,824,4],[784,6,825,4],[784,10,825,10,"currentTick"],[784,21,825,21],[784,24,825,24,"combatEngine"],[784,43,825,36],[784,44,825,36,"combatEngine"],[784,56,825,36],[784,57,825,37,"getCurrentTick"],[784,71,825,51],[784,72,825,52],[784,73,825,53],[785,6,826,4],[785,10,826,10,"success"],[785,17,826,17],[785,20,826,20,"combatState"],[785,31,826,31],[785,32,826,32,"abilityManager"],[785,46,826,46],[785,47,826,47,"useAbility"],[785,57,826,57],[785,58,826,58,"slotIndex"],[785,67,826,67],[785,69,826,69,"currentTick"],[785,80,826,80],[785,81,826,81],[786,6,828,4],[786,10,828,8,"success"],[786,17,828,15],[786,19,828,17],[787,8,829,6],[788,8,830,6,"setCombatState"],[788,22,830,20],[788,23,830,21,"prev"],[788,27,830,25],[788,31,830,29],[789,10,831,8],[789,14,831,14,"newState"],[789,22,831,22],[789,25,831,25],[790,12,831,27],[790,15,831,30,"prev"],[791,10,831,35],[791,11,831,36],[792,10,832,8,"castAbility"],[792,21,832,19],[792,22,832,20,"newState"],[792,30,832,28],[792,32,832,30,"slotIndex"],[792,41,832,39],[792,42,832,40],[793,10,833,8],[793,17,833,15,"newState"],[793,25,833,23],[794,8,834,6],[794,9,834,7],[794,10,834,8],[795,8,836,6,"console"],[795,15,836,13],[795,16,836,14,"log"],[795,19,836,17],[795,20,836,18],[795,65,836,63,"slotIndex"],[795,74,836,72],[795,76,836,74],[795,77,836,75],[796,8,837,6],[796,15,837,13],[796,19,837,17],[797,6,838,4],[797,7,838,5],[797,13,838,11],[798,8,839,6,"console"],[798,15,839,13],[798,16,839,14,"log"],[798,19,839,17],[798,20,839,18],[798,61,839,59,"slotIndex"],[798,70,839,68],[798,72,839,70],[798,73,839,71],[799,8,840,6],[799,15,840,13],[799,20,840,18],[800,6,841,4],[801,4,842,2],[801,5,842,3],[801,46,842,5],[801,47,842,6,"combatState"],[801,58,842,17],[801,59,842,18,"abilityManager"],[801,73,842,32],[801,75,842,34,"combatState"],[801,86,842,45],[801,87,842,46,"enemies"],[801,94,842,53],[801,95,842,54],[801,96,842,55],[802,4,843,2],[802,8,843,2,"useEffect"],[802,14,843,11],[802,15,843,11,"useEffect"],[802,24,843,11],[802,26,843,12],[802,32,843,18],[803,6,844,4,"combatEngine"],[803,25,844,16],[803,26,844,16,"combatEngine"],[803,38,844,16],[803,39,844,17,"start"],[803,44,844,22],[803,45,844,23],[803,46,844,24],[805,6,846,4],[806,6,847,4],[807,6,848,4,"console"],[807,13,848,11],[807,14,848,12,"log"],[807,17,848,15],[807,18,848,16],[807,97,848,95],[807,98,848,96],[808,6,850,4],[808,13,850,11],[808,19,850,17],[809,8,851,6,"combatEngine"],[809,27,851,18],[809,28,851,18,"combatEngine"],[809,40,851,18],[809,41,851,19,"stop"],[809,45,851,23],[809,46,851,24],[809,47,851,25],[810,6,852,4],[810,7,852,5],[811,4,853,2],[811,5,853,3],[811,7,853,5],[811,9,853,7],[811,10,853,8],[813,4,855,2],[814,4,856,2],[814,8,856,2,"useEffect"],[814,14,856,11],[814,15,856,11,"useEffect"],[814,24,856,11],[814,26,856,12],[814,32,856,18],[815,6,857,4],[815,10,857,10,"processProjectileImpacts"],[815,34,857,34],[815,37,857,37,"processProjectileImpacts"],[815,38,857,37],[815,43,857,43],[816,8,858,6,"setProjectiles"],[816,22,858,20],[816,23,858,21,"currentProjectiles"],[816,41,858,39],[816,45,858,43],[817,10,859,8],[817,17,859,15,"currentProjectiles"],[817,35,859,33],[817,36,859,34,"map"],[817,39,859,37],[817,40,859,38,"projectile"],[817,50,859,48],[817,54,859,52],[818,12,860,10],[818,16,860,14],[818,17,860,15,"projectile"],[818,27,860,25],[818,29,860,27],[818,36,860,34],[818,40,860,38],[820,12,862,10],[821,12,863,10],[821,16,863,16,"currentTime"],[821,27,863,27],[821,30,863,30,"Date"],[821,34,863,34],[821,35,863,35,"now"],[821,38,863,38],[821,39,863,39],[821,40,863,40],[822,12,864,10],[822,16,864,16,"startTime"],[822,25,864,25],[822,28,864,28,"projectile"],[822,38,864,38],[822,39,864,39,"startTime"],[822,48,864,48],[822,52,864,52,"currentTime"],[822,63,864,63],[823,12,865,10],[823,16,865,16,"elapsedTime"],[823,27,865,27],[823,30,865,30,"currentTime"],[823,41,865,41],[823,44,865,44,"startTime"],[823,53,865,53],[824,12,866,10],[824,16,866,16,"progress"],[824,24,866,24],[824,27,866,27,"Math"],[824,31,866,31],[824,32,866,32,"min"],[824,35,866,35],[824,36,866,36,"elapsedTime"],[824,47,866,47],[824,51,866,51,"projectile"],[824,61,866,61],[824,62,866,62,"duration"],[824,70,866,70],[824,74,866,74],[824,77,866,77],[824,78,866,78],[824,80,866,80],[824,81,866,81],[824,82,866,82],[826,12,868,10],[827,12,869,10],[827,16,869,14,"progress"],[827,24,869,22],[827,28,869,26],[827,29,869,27],[827,33,869,31],[827,34,869,32,"projectile"],[827,44,869,42],[827,45,869,43,"hasHit"],[827,51,869,49],[827,53,869,51],[828,14,870,12,"projectile"],[828,24,870,22],[828,25,870,23,"hasHit"],[828,31,870,29],[828,34,870,32],[828,38,870,36],[829,14,872,12,"console"],[829,21,872,19],[829,22,872,20,"log"],[829,25,872,23],[829,26,872,24],[829,51,872,49,"projectile"],[829,61,872,59],[829,62,872,60,"abilityName"],[829,73,872,71],[829,87,872,85,"projectile"],[829,97,872,95],[829,98,872,96,"targetEnemyId"],[829,111,872,109],[829,119,872,117,"projectile"],[829,129,872,127],[829,130,872,128,"damage"],[829,136,872,134],[829,145,872,143],[829,146,872,144],[831,14,874,12],[832,14,875,12,"setCombatState"],[832,28,875,26],[832,29,875,27,"prev"],[832,33,875,31],[832,37,875,35],[833,16,876,14],[833,20,876,20,"newState"],[833,28,876,28],[833,31,876,31],[834,18,876,33],[834,21,876,36,"prev"],[835,16,876,41],[835,17,876,42],[836,16,877,14],[836,20,877,20,"enemyIndex"],[836,30,877,30],[836,33,877,33,"newState"],[836,41,877,41],[836,42,877,42,"enemies"],[836,49,877,49],[836,50,877,50,"findIndex"],[836,59,877,59],[836,60,877,60,"e"],[836,61,877,61],[836,65,877,65,"e"],[836,66,877,66],[836,67,877,67,"id"],[836,69,877,69],[836,74,877,74,"projectile"],[836,84,877,84],[836,85,877,85,"targetEnemyId"],[836,98,877,98],[836,99,877,99],[837,16,879,14],[837,20,879,18,"enemyIndex"],[837,30,879,28],[837,34,879,32],[837,35,879,33],[837,39,879,37,"newState"],[837,47,879,45],[837,48,879,46,"enemies"],[837,55,879,53],[837,56,879,54,"enemyIndex"],[837,66,879,64],[837,67,879,65],[837,68,879,66,"health"],[837,74,879,72],[837,77,879,75],[837,78,879,76],[837,80,879,78],[838,18,880,16,"newState"],[838,26,880,24],[838,27,880,25,"enemies"],[838,34,880,32],[838,37,880,35],[838,38,880,36],[838,41,880,39,"newState"],[838,49,880,47],[838,50,880,48,"enemies"],[838,57,880,55],[838,58,880,56],[839,18,881,16],[839,22,881,22,"enemy"],[839,27,881,27],[839,30,881,30,"newState"],[839,38,881,38],[839,39,881,39,"enemies"],[839,46,881,46],[839,47,881,47,"enemyIndex"],[839,57,881,57],[839,58,881,58],[840,18,882,16],[840,22,882,22,"newHealth"],[840,31,882,31],[840,34,882,34,"Math"],[840,38,882,38],[840,39,882,39,"max"],[840,42,882,42],[840,43,882,43],[840,44,882,44],[840,46,882,46,"enemy"],[840,51,882,51],[840,52,882,52,"health"],[840,58,882,58],[840,61,882,61,"projectile"],[840,71,882,71],[840,72,882,72,"damage"],[840,78,882,78],[840,79,882,79],[841,18,884,16,"newState"],[841,26,884,24],[841,27,884,25,"enemies"],[841,34,884,32],[841,35,884,33,"enemyIndex"],[841,45,884,43],[841,46,884,44],[841,49,884,47],[842,20,885,18],[842,23,885,21,"enemy"],[842,28,885,26],[843,20,886,18,"health"],[843,26,886,24],[843,28,886,26,"newHealth"],[843,37,886,35],[844,20,887,18,"lastDamaged"],[844,31,887,29],[844,33,887,31,"combatEngine"],[844,52,887,43],[844,53,887,43,"combatEngine"],[844,65,887,43],[844,66,887,44,"getCurrentTick"],[844,80,887,58],[844,81,887,59],[845,18,888,16],[845,19,888,17],[846,18,890,16,"console"],[846,25,890,23],[846,26,890,24,"log"],[846,29,890,27],[846,30,890,28],[846,52,890,50,"enemy"],[846,57,890,55],[846,58,890,56,"name"],[846,62,890,60],[846,74,890,72,"newHealth"],[846,83,890,81],[846,87,890,85,"enemy"],[846,92,890,90],[846,93,890,91,"maxHealth"],[846,102,890,100],[846,104,890,102],[846,105,890,103],[848,18,892,16],[849,18,893,16],[849,22,893,20,"newHealth"],[849,31,893,29],[849,35,893,33],[849,36,893,34],[849,40,893,38,"enemy"],[849,45,893,43],[849,46,893,44,"health"],[849,52,893,50],[849,55,893,53],[849,56,893,54],[849,58,893,56],[850,20,894,18,"console"],[850,27,894,25],[850,28,894,26,"log"],[850,31,894,29],[850,32,894,30],[850,55,894,53,"enemy"],[850,60,894,58],[850,61,894,59,"name"],[850,65,894,63],[850,79,894,77,"projectile"],[850,89,894,87],[850,90,894,88,"abilityName"],[850,101,894,99],[850,104,894,102],[850,105,894,103],[851,20,895,18,"setTimeout"],[851,30,895,28],[851,31,895,29],[851,37,895,35,"handleEnemyKill"],[851,52,895,50],[851,53,895,51,"enemy"],[851,58,895,56],[851,59,895,57],[851,61,895,59],[851,62,895,60],[851,63,895,61],[852,18,896,16],[853,16,897,14],[854,16,899,14],[854,23,899,21,"newState"],[854,31,899,29],[855,14,900,12],[855,15,900,13],[855,16,900,14],[856,12,901,10],[858,12,903,10],[859,12,904,10],[859,16,904,14,"progress"],[859,24,904,22],[859,28,904,26],[859,31,904,29],[859,33,904,31],[860,14,905,12],[860,21,905,19],[860,25,905,23],[861,12,906,10],[862,12,908,10],[862,19,908,17,"projectile"],[862,29,908,27],[863,10,909,8],[863,11,909,9],[863,12,909,10],[863,13,909,11,"filter"],[863,19,909,17],[863,20,909,18,"Boolean"],[863,27,909,25],[863,28,909,26],[864,8,910,6],[864,9,910,7],[864,10,910,8],[865,6,911,4],[865,7,911,5],[867,6,913,4],[868,6,914,4],[868,10,914,10,"impactInterval"],[868,24,914,24],[868,27,914,27,"setInterval"],[868,38,914,38],[868,39,914,39,"processProjectileImpacts"],[868,63,914,63],[868,65,914,65],[868,67,914,67],[868,68,914,68],[869,6,915,4],[869,13,915,11],[869,19,915,17,"clearInterval"],[869,32,915,30],[869,33,915,31,"impactInterval"],[869,47,915,45],[869,48,915,46],[870,4,916,2],[870,5,916,3],[870,7,916,5],[870,8,916,6,"handleEnemyKill"],[870,23,916,21],[870,24,916,22],[870,25,916,23],[872,4,918,2],[873,4,919,2],[873,8,919,8,"saveAbilityData"],[873,23,919,23],[873,26,919,26],[873,30,919,26,"useCallback"],[873,36,919,37],[873,37,919,37,"useCallback"],[873,48,919,37],[873,50,919,38],[873,56,919,44],[874,6,920,4],[874,10,920,8,"combatState"],[874,21,920,19],[874,22,920,20,"abilityManager"],[874,36,920,34],[874,38,920,36],[875,8,921,6],[875,12,921,12,"abilityData"],[875,23,921,23],[875,26,921,26,"combatState"],[875,37,921,37],[875,38,921,38,"abilityManager"],[875,52,921,52],[875,53,921,53,"getSaveData"],[875,64,921,64],[875,65,921,65],[875,66,921,66],[876,8,922,6,"console"],[876,15,922,13],[876,16,922,14,"log"],[876,19,922,17],[876,20,922,18],[876,70,922,68],[876,72,922,70,"abilityData"],[876,83,922,81],[876,84,922,82],[877,8,923,6,"game"],[877,12,923,10],[877,13,923,11,"updateAbilityData"],[877,30,923,28],[877,31,923,29,"abilityData"],[877,42,923,40],[877,43,923,41],[878,6,924,4],[879,4,925,2],[879,5,925,3],[879,7,925,5],[879,8,925,6,"combatState"],[879,19,925,17],[879,20,925,18,"abilityManager"],[879,34,925,32],[879,36,925,34,"game"],[879,40,925,38],[879,41,925,39,"updateAbilityData"],[879,58,925,56],[879,59,925,57],[879,60,925,58],[880,4,927,2],[880,8,927,8,"contextValue"],[880,20,927,39],[880,23,927,42,"React"],[880,28,927,47],[880,29,927,47,"default"],[880,36,927,47],[880,37,927,48,"useMemo"],[880,44,927,55],[880,45,927,56],[880,52,927,63],[881,6,928,4,"combatState"],[881,17,928,15],[882,6,929,4,"projectiles"],[882,17,929,15],[883,6,930,4,"startCombat"],[883,17,930,15],[884,6,931,4,"stopCombat"],[884,16,931,14],[885,6,932,4,"equipAbility"],[885,18,932,16],[886,6,933,4,"handleEnemyKill"],[886,21,933,19],[887,6,934,4,"getDeck"],[887,13,934,11],[888,6,935,4,"getAvailableAbilities"],[888,27,935,25],[889,6,936,4,"upgradeAbility"],[889,20,936,18],[890,6,937,4,"spawnEnemy"],[890,16,937,14],[891,6,938,4,"spawnBoss"],[891,15,938,13],[892,6,939,4,"clearAllEnemies"],[892,21,939,19],[893,6,940,4,"clearSpecificEnemy"],[893,24,940,22],[894,6,941,4,"triggerLevelUpExplosion"],[894,29,941,27],[895,6,942,4,"findClosestEnemy"],[895,22,942,20],[896,6,943,4,"updateNinjaPosition"],[896,25,943,23],[897,6,944,4,"setManualControlActive"],[897,28,944,26],[898,6,945,4,"lastExplosionTime"],[898,23,945,21],[899,6,946,4,"useAbilityManually"],[899,24,946,22],[900,6,946,24],[901,6,947,4,"saveAbilityData"],[901,21,947,19],[902,6,947,21],[903,6,948,4,"shadowClone"],[903,17,948,15],[903,19,948,17,"combatState"],[903,30,948,28],[903,31,948,29,"shadowClone"],[903,42,948,40],[903,43,948,42],[904,4,949,2],[904,5,949,3],[904,6,949,4],[904,8,949,6],[905,4,950,4],[906,4,951,4],[907,4,952,4,"combatState"],[907,15,952,15],[907,17,953,4,"projectiles"],[907,28,953,15],[907,30,954,4,"lastExplosionTime"],[907,47,954,21],[908,4,955,4],[909,4,956,4,"combatState"],[909,15,956,15],[909,16,956,16,"abilityManager"],[909,30,956,30],[909,32,957,4,"combatState"],[909,43,957,15],[909,44,957,16,"enemies"],[909,51,957,23],[909,53,958,4,"combatState"],[909,64,958,15],[909,65,958,16,"shadowClone"],[909,76,958,27],[910,4,958,29],[911,4,959,4,"useAbilityManually"],[911,22,959,22],[912,4,959,24],[913,4,960,4,"saveAbilityData"],[913,19,960,19],[913,20,960,21],[914,4,960,21],[914,5,961,3],[914,6,961,4],[915,4,963,2],[915,24,964,4],[915,28,964,4,"_reactJsxDevRuntime"],[915,47,964,4],[915,48,964,4,"jsxDEV"],[915,54,964,4],[915,56,964,5,"CombatContext"],[915,69,964,18],[915,70,964,19,"Provider"],[915,78,964,27],[916,6,964,28,"value"],[916,11,964,33],[916,13,964,35,"contextValue"],[916,25,964,48],[917,6,964,48,"children"],[917,14,964,48],[917,16,965,7,"children"],[918,4,965,15],[919,6,965,15,"fileName"],[919,14,965,15],[919,16,965,15,"_jsxFileName"],[919,28,965,15],[920,6,965,15,"lineNumber"],[920,16,965,15],[921,6,965,15,"columnNumber"],[921,18,965,15],[922,4,965,15],[922,11,966,28],[922,12,966,29],[923,2,968,0],[923,3,968,1],[924,2,968,2,"_s4"],[924,5,968,2],[924,6,99,13,"CombatProvider"],[924,20,99,27],[925,4,99,27],[925,12,100,15,"useGame"],[925,24,100,22],[925,25,100,22,"useGame"],[925,32,100,22],[925,34,101,77,"useZone"],[925,46,101,84],[925,47,101,84,"useZone"],[925,54,101,84],[926,2,101,84],[927,2,101,84,"_c"],[927,4,101,84],[927,7,99,13,"CombatProvider"],[927,21,99,27],[928,2,99,27],[928,6,99,27,"_c"],[928,8,99,27],[929,2,99,27,"$RefreshReg$"],[929,14,99,27],[929,15,99,27,"_c"],[929,17,99,27],[930,0,99,27],[930,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}