{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player\n                var attackDamage = Math.floor(enemy.stats.attack * (0.8 + Math.random() * 0.4)); // 80-120% of base damage\n                var playerDefense = newState.playerStats.defense;\n                var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.5)); // Defense reduces damage by 50%\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} - ${Math.floor(playerDefense * 0.5)} defense)`);\n\n                // Apply damage to player\n                var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // TODO: Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Game over logic needed here');\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: Math.floor(effectiveStats.health * healthRatio),\n              // Maintain health ratio\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":983,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1028,2],[27,6,1028,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1028,2],[27,42,1028,2,"require"],[27,49,1028,2],[27,50,1028,2,"_dependencyMap"],[27,64,1028,2],[28,2,1028,2],[28,6,1028,2,"_slicedToArray"],[28,20,1028,2],[28,23,1028,2,"_interopDefault"],[28,38,1028,2],[28,39,1028,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1028,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[95,4,135,2],[95,8,135,2,"_useState3"],[95,18,135,2],[95,21,135,40],[95,25,135,40,"useState"],[95,31,135,48],[95,32,135,48,"useState"],[95,40,135,48],[95,42,135,69],[95,44,135,71],[95,45,135,72],[96,6,135,72,"_useState4"],[96,16,135,72],[96,23,135,72,"_slicedToArray"],[96,37,135,72],[96,38,135,72,"default"],[96,45,135,72],[96,47,135,72,"_useState3"],[96,57,135,72],[97,6,135,9,"projectiles"],[97,17,135,20],[97,20,135,20,"_useState4"],[97,30,135,20],[98,6,135,22,"setProjectiles"],[98,20,135,36],[98,23,135,36,"_useState4"],[98,33,135,36],[99,4,136,2],[99,8,136,2,"_useState5"],[99,18,136,2],[99,21,136,52],[99,25,136,52,"useState"],[99,31,136,60],[99,32,136,60,"useState"],[99,40,136,60],[99,42,136,69],[99,43,136,70],[99,44,136,71],[100,6,136,71,"_useState6"],[100,16,136,71],[100,23,136,71,"_slicedToArray"],[100,37,136,71],[100,38,136,71,"default"],[100,45,136,71],[100,47,136,71,"_useState5"],[100,57,136,71],[101,6,136,9,"lastExplosionTime"],[101,23,136,26],[101,26,136,26,"_useState6"],[101,36,136,26],[102,6,136,28,"setLastExplosionTime"],[102,26,136,48],[102,29,136,48,"_useState6"],[102,39,136,48],[103,4,137,2],[104,4,138,2],[106,4,140,2],[107,4,141,2],[107,8,141,8,"handleEnemyKill"],[107,23,141,23],[107,26,141,26],[107,30,141,26,"useCallback"],[107,36,141,37],[107,37,141,37,"useCallback"],[107,48,141,37],[107,50,141,39,"enemy"],[107,55,141,57],[107,59,141,62],[108,6,142,4,"console"],[108,13,142,11],[108,14,142,12,"log"],[108,17,142,15],[108,18,142,16],[108,73,142,71],[108,75,142,73,"enemy"],[108,80,142,78],[108,81,142,79,"id"],[108,83,142,81],[108,84,142,82],[110,6,144,4],[111,6,145,4],[111,10,145,10,"baseXpReward"],[111,22,145,22],[111,25,145,25],[111,28,145,28],[111,29,145,29],[111,30,145,30],[112,6,146,4],[112,10,146,10,"xpMultiplier"],[112,22,146,22],[112,25,146,25,"game"],[112,29,146,29],[112,30,146,30,"gameState"],[112,39,146,39],[112,40,146,40,"subscriptionBenefits"],[112,60,146,60],[112,62,146,62,"xp_multiplier"],[112,75,146,75],[112,79,146,79],[112,82,146,82],[113,6,147,4],[113,10,147,10,"dropMultiplier"],[113,24,147,24],[113,27,147,27,"game"],[113,31,147,31],[113,32,147,32,"gameState"],[113,41,147,41],[113,42,147,42,"subscriptionBenefits"],[113,62,147,62],[113,64,147,64,"drop_multiplier"],[113,79,147,79],[113,83,147,83],[113,86,147,86],[114,6,149,4],[114,10,149,10,"xpReward"],[114,18,149,18],[114,21,149,21,"Math"],[114,25,149,25],[114,26,149,26,"floor"],[114,31,149,31],[114,32,149,32,"baseXpReward"],[114,44,149,44],[114,47,149,47,"xpMultiplier"],[114,59,149,59],[114,60,149,60],[115,6,150,4],[115,10,150,10,"goldReward"],[115,20,150,20],[115,23,150,23,"Math"],[115,27,150,27],[115,28,150,28,"floor"],[115,33,150,33],[115,34,150,34],[115,38,150,38],[115,41,150,41,"dropMultiplier"],[115,55,150,55],[115,56,150,56],[115,57,150,57],[115,58,150,58],[117,6,152,4,"console"],[117,13,152,11],[117,14,152,12,"log"],[117,17,152,15],[117,18,152,16],[117,48,152,46,"xpReward"],[117,56,152,54],[117,67,152,65,"goldReward"],[117,77,152,75],[117,93,152,91],[117,94,152,92],[118,6,153,4,"console"],[118,13,153,11],[118,14,153,12,"log"],[118,17,153,15],[118,18,153,16],[118,60,153,58,"xpMultiplier"],[118,72,153,70],[118,94,153,92,"dropMultiplier"],[118,108,153,106],[118,110,153,108],[118,111,153,109],[119,6,154,4,"console"],[119,13,154,11],[119,14,154,12,"log"],[119,17,154,15],[119,18,154,16],[119,54,154,52,"baseXpReward"],[119,66,154,64],[119,81,154,79,"xpReward"],[119,89,154,87],[119,91,154,89],[119,92,154,90],[120,6,155,4,"console"],[120,13,155,11],[120,14,155,12,"log"],[120,17,155,15],[120,18,155,16],[120,58,155,56],[120,60,155,58,"JSON"],[120,64,155,62],[120,65,155,63,"stringify"],[120,74,155,72],[120,75,155,73,"game"],[120,79,155,77],[120,80,155,78,"gameState"],[120,89,155,87],[120,90,155,88,"subscriptionBenefits"],[120,110,155,108],[120,111,155,109],[120,112,155,110],[121,6,156,4,"console"],[121,13,156,11],[121,14,156,12,"log"],[121,17,156,15],[121,18,156,16],[121,49,156,47,"Platform"],[121,61,156,55],[121,62,156,55,"Platform"],[121,70,156,55],[121,71,156,56,"OS"],[121,73,156,58],[121,84,156,69,"Date"],[121,88,156,73],[121,89,156,74,"now"],[121,92,156,77],[121,93,156,78],[121,94,156,79],[121,96,156,81],[121,97,156,82],[123,6,158,4],[124,6,159,4],[125,6,160,4,"setTimeout"],[125,16,160,14],[125,17,160,15],[125,23,160,21],[126,8,161,6,"console"],[126,15,161,13],[126,16,161,14,"log"],[126,19,161,17],[126,20,161,18],[126,78,161,76],[126,79,161,77],[128,8,163,6],[129,8,164,6,"game"],[129,12,164,10],[129,13,164,11,"updateNinja"],[129,24,164,22],[129,25,164,24,"prev"],[129,29,164,28],[129,33,164,33],[130,10,165,8,"console"],[130,17,165,15],[130,18,165,16,"log"],[130,21,165,19],[130,22,165,20],[130,54,165,52,"prev"],[130,58,165,56],[130,59,165,57,"experience"],[130,69,165,67],[130,81,165,79,"prev"],[130,85,165,83],[130,86,165,84,"experience"],[130,96,165,94],[130,99,165,97,"xpReward"],[130,107,165,105],[130,109,165,107],[130,110,165,108],[131,10,166,8,"console"],[131,17,166,15],[131,18,166,16,"log"],[131,21,166,19],[131,22,166,20],[131,56,166,54,"prev"],[131,60,166,58],[131,61,166,59,"gold"],[131,65,166,63],[131,77,166,75,"prev"],[131,81,166,79],[131,82,166,80,"gold"],[131,86,166,84],[131,89,166,87,"goldReward"],[131,99,166,97],[131,101,166,99],[131,102,166,100],[132,10,167,8],[132,17,167,15],[133,12,168,10,"experience"],[133,22,168,20],[133,24,168,22,"prev"],[133,28,168,26],[133,29,168,27,"experience"],[133,39,168,37],[133,42,168,40,"xpReward"],[133,50,168,48],[134,12,169,10,"gold"],[134,16,169,14],[134,18,169,16,"prev"],[134,22,169,20],[134,23,169,21,"gold"],[134,27,169,25],[134,30,169,28,"goldReward"],[135,10,170,8],[135,11,170,9],[136,8,171,6],[136,9,171,7],[136,10,171,8],[138,8,173,6],[139,8,174,6],[139,12,174,12,"zoneEnemy"],[139,21,174,21],[139,24,174,24],[140,10,175,8,"id"],[140,12,175,10],[140,14,175,12,"enemy"],[140,19,175,17],[140,20,175,18,"id"],[140,22,175,20],[141,10,176,8,"typeId"],[141,16,176,14],[141,18,176,16,"enemy"],[141,23,176,21],[141,24,176,22,"zoneTypeId"],[141,34,176,32],[141,38,176,36],[141,48,176,46],[142,10,176,48],[143,10,177,8,"name"],[143,14,177,12],[143,16,177,14,"enemy"],[143,21,177,19],[143,22,177,20,"name"],[143,26,177,24],[144,10,178,8,"icon"],[144,14,178,12],[144,16,178,14],[144,20,178,18],[145,10,178,20],[146,10,179,8,"hp"],[146,12,179,10],[146,14,179,12],[146,15,179,13],[147,10,179,15],[148,10,180,8,"maxHP"],[148,15,180,13],[148,17,180,15,"enemy"],[148,22,180,20],[148,23,180,21,"maxHealth"],[148,32,180,30],[149,10,181,8,"attack"],[149,16,181,14],[149,18,181,16,"enemy"],[149,23,181,21],[149,24,181,22,"stats"],[149,29,181,27],[149,30,181,28,"attack"],[149,36,181,34],[150,10,182,8,"xp"],[150,12,182,10],[150,14,182,12,"enemy"],[150,19,182,17],[150,20,182,18,"zoneXP"],[150,26,182,24],[150,30,182,28],[150,32,182,30],[151,10,182,32],[152,10,183,8,"position"],[152,18,183,16],[152,20,183,18,"enemy"],[152,25,183,23],[152,26,183,24,"position"],[153,8,184,6],[153,9,184,7],[154,8,186,6,"console"],[154,15,186,13],[154,16,186,14,"log"],[154,19,186,17],[154,20,186,18],[154,40,186,38,"zoneEnemy"],[154,49,186,47],[154,50,186,48,"name"],[154,54,186,52],[154,59,186,57,"zoneEnemy"],[154,68,186,66],[154,69,186,67,"typeId"],[154,75,186,73],[154,113,186,111],[154,114,186,112],[155,8,187,6,"recordEnemyKill"],[155,23,187,21],[155,24,187,22,"zoneEnemy"],[155,33,187,31],[155,34,187,32],[156,6,188,4],[156,7,188,5],[156,9,188,7],[156,10,188,8],[156,11,188,9],[156,12,188,10],[156,13,188,11],[157,4,189,2],[157,5,189,3],[157,7,189,5],[157,8,189,6,"game"],[157,12,189,10],[157,13,189,11,"updateNinja"],[157,24,189,22],[157,26,189,24,"recordEnemyKill"],[157,41,189,39],[157,42,189,40],[157,43,189,41],[159,4,191,2],[160,4,192,2],[160,8,192,8,"handleCombatTick"],[160,24,192,24],[160,27,192,27,"React"],[160,32,192,32],[160,33,192,32,"default"],[160,40,192,32],[160,41,192,33,"useCallback"],[160,52,192,44],[160,53,192,45],[160,59,192,51],[161,6,192,51],[161,10,192,51,"_s2"],[161,13,192,51],[161,16,192,51,"$RefreshSig$"],[161,28,192,51],[162,6,193,4,"console"],[162,13,193,11],[162,14,193,12,"log"],[162,17,193,15],[162,18,193,16],[162,87,193,85],[162,88,193,86],[163,6,195,4],[163,10,195,8,"enemiesToKill"],[163,23,195,36],[163,26,195,39],[163,28,195,41],[163,29,195,42],[163,30,195,43],[165,6,197,4,"_s2"],[165,9,197,4],[165,10,197,4,"setCombatState"],[165,24,197,18],[165,25,197,18,"_s2"],[165,28,197,18],[165,29,197,19,"prev"],[165,33,197,23],[165,37,197,27],[166,8,197,27,"_s2"],[166,11,197,27],[167,8,198,6],[167,12,198,12,"newTick"],[167,19,198,19],[167,22,198,22,"combatEngine"],[167,41,198,34],[167,42,198,34,"combatEngine"],[167,54,198,34],[167,55,198,35,"getCurrentTick"],[167,69,198,49],[167,70,198,50],[167,71,198,51],[168,8,199,6],[168,12,199,12,"newState"],[168,20,199,20],[168,23,199,23],[169,10,199,25],[169,13,199,28,"prev"],[169,17,199,32],[170,10,199,34,"currentTick"],[170,21,199,45],[170,23,199,47,"newTick"],[171,8,199,55],[171,9,199,56],[172,8,201,6],[172,12,201,10],[172,13,201,11,"newState"],[172,21,201,19],[172,22,201,20,"isInCombat"],[172,32,201,30],[172,34,201,32],[172,41,201,39,"newState"],[172,49,201,47],[174,8,203,6],[175,8,204,6,"newState"],[175,16,204,14],[175,17,204,15,"abilityManager"],[175,31,204,29],[175,32,204,30,"updateCooldowns"],[175,47,204,45],[175,48,204,46,"newTick"],[175,55,204,53],[175,56,204,54],[177,8,206,6],[178,8,207,6],[178,12,207,12,"effectResults"],[178,25,207,25],[178,28,207,28,"newState"],[178,36,207,36],[178,37,207,37,"statusEffects"],[178,50,207,50],[178,51,207,51,"processTick"],[178,62,207,62],[178,63,207,63,"newTick"],[178,70,207,70],[178,71,207,71],[180,8,209,6],[181,8,210,6,"effectResults"],[181,21,210,19],[181,22,210,20,"forEach"],[181,29,210,27],[181,30,210,28],[181,31,210,29,"results"],[181,38,210,36],[181,40,210,38,"entityId"],[181,48,210,46],[181,53,210,51],[182,10,211,8],[182,14,211,14,"enemyIndex"],[182,24,211,24],[182,27,211,27,"newState"],[182,35,211,35],[182,36,211,36,"enemies"],[182,43,211,43],[182,44,211,44,"findIndex"],[182,53,211,53],[182,54,211,54,"e"],[182,55,211,55],[182,59,211,59,"e"],[182,60,211,60],[182,61,211,61,"id"],[182,63,211,63],[182,68,211,68,"entityId"],[182,76,211,76],[182,77,211,77],[183,10,212,8],[183,14,212,12,"enemyIndex"],[183,24,212,22],[183,28,212,26],[183,29,212,27],[183,31,212,29],[184,12,213,10,"results"],[184,19,213,17],[184,20,213,18,"forEach"],[184,27,213,25],[184,28,213,26,"result"],[184,34,213,32],[184,38,213,36],[185,14,214,12,"newState"],[185,22,214,20],[185,23,214,21,"enemies"],[185,30,214,28],[185,31,214,29,"enemyIndex"],[185,41,214,39],[185,42,214,40],[185,43,214,41,"health"],[185,49,214,47],[185,53,214,51,"result"],[185,59,214,57],[185,60,214,58,"damage"],[185,66,214,64],[186,14,215,12,"newState"],[186,22,215,20],[186,23,215,21,"enemies"],[186,30,215,28],[186,31,215,29,"enemyIndex"],[186,41,215,39],[186,42,215,40],[186,43,215,41,"lastDamaged"],[186,54,215,52],[186,57,215,55,"newTick"],[186,64,215,62],[187,12,216,10],[187,13,216,11],[187,14,216,12],[188,10,217,8],[189,8,218,6],[189,9,218,7],[189,10,218,8],[191,8,220,6],[192,8,221,6,"newState"],[192,16,221,14],[192,17,221,15,"enemies"],[192,24,221,22],[192,25,221,23,"forEach"],[192,32,221,30],[192,33,221,31,"enemy"],[192,38,221,36],[192,42,221,40],[193,10,222,8],[193,14,222,12],[193,15,222,13,"enemy"],[193,20,222,18],[193,21,222,19,"isBoss"],[193,27,222,25],[193,29,222,27],[194,12,222,29],[195,12,223,10],[196,12,224,10],[196,16,224,16,"MOVEMENT_SPEED"],[196,30,224,30],[196,33,224,33],[196,37,224,37],[196,38,224,38],[196,39,224,39],[197,12,225,10],[197,16,225,16,"SCREEN_WIDTH"],[197,28,225,28],[197,31,225,31],[197,34,225,34],[198,12,226,10],[198,16,226,16,"GAME_AREA_HEIGHT"],[198,32,226,32],[198,35,226,35],[198,38,226,38],[198,39,226,39],[198,40,226,40],[199,12,227,10],[199,16,227,16,"ENEMY_SIZE"],[199,26,227,26],[199,29,227,29],[199,31,227,31],[201,12,229,10],[202,12,230,10],[202,16,230,16,"playerX"],[202,23,230,23],[202,26,230,26,"currentNinjaPosition"],[202,46,230,46],[202,47,230,47,"x"],[202,48,230,48],[203,12,231,10],[203,16,231,16,"playerY"],[203,23,231,23],[203,26,231,26,"currentNinjaPosition"],[203,46,231,46],[203,47,231,47,"y"],[203,48,231,48],[205,12,233,10],[206,12,234,10],[206,16,234,16,"deltaX"],[206,22,234,22],[206,25,234,25,"playerX"],[206,32,234,32],[206,35,234,35,"enemy"],[206,40,234,40],[206,41,234,41,"position"],[206,49,234,49],[206,50,234,50,"x"],[206,51,234,51],[207,12,235,10],[207,16,235,16,"deltaY"],[207,22,235,22],[207,25,235,25,"playerY"],[207,32,235,32],[207,35,235,35,"enemy"],[207,40,235,40],[207,41,235,41,"position"],[207,49,235,49],[207,50,235,50,"y"],[207,51,235,51],[208,12,236,10],[208,16,236,16,"distance"],[208,24,236,24],[208,27,236,27,"Math"],[208,31,236,31],[208,32,236,32,"sqrt"],[208,36,236,36],[208,37,236,37,"deltaX"],[208,43,236,43],[208,46,236,46,"deltaX"],[208,52,236,52],[208,55,236,55,"deltaY"],[208,61,236,61],[208,64,236,64,"deltaY"],[208,70,236,70],[208,71,236,71],[210,12,238,10],[211,12,239,10],[211,16,239,16,"ATTACK_RANGE"],[211,28,239,28],[211,31,239,31],[211,33,239,33],[211,34,239,34],[211,35,239,35],[212,12,240,10],[212,16,240,16,"ATTACK_COOLDOWN"],[212,31,240,31],[212,34,240,34],[212,36,240,36],[212,37,240,37],[212,38,240,38],[214,12,242,10],[214,16,242,14,"distance"],[214,24,242,22],[214,28,242,26,"ATTACK_RANGE"],[214,40,242,38],[214,42,242,40],[215,14,243,12],[216,14,244,12],[216,18,244,16],[216,19,244,17,"enemy"],[216,24,244,22],[216,25,244,23,"lastAttackTick"],[216,39,244,37],[216,41,244,39,"enemy"],[216,46,244,44],[216,47,244,45,"lastAttackTick"],[216,61,244,59],[216,64,244,62],[216,65,244,63],[217,14,246,12],[217,18,246,16,"newState"],[217,26,246,24],[217,27,246,25,"currentTick"],[217,38,246,36],[217,41,246,39,"enemy"],[217,46,246,44],[217,47,246,45,"lastAttackTick"],[217,61,246,59],[217,65,246,63,"ATTACK_COOLDOWN"],[217,80,246,78],[217,82,246,80],[218,16,247,14],[219,16,248,14],[219,20,248,20,"attackDamage"],[219,32,248,32],[219,35,248,35,"Math"],[219,39,248,39],[219,40,248,40,"floor"],[219,45,248,45],[219,46,248,46,"enemy"],[219,51,248,51],[219,52,248,52,"stats"],[219,57,248,57],[219,58,248,58,"attack"],[219,64,248,64],[219,68,248,68],[219,71,248,71],[219,74,248,74,"Math"],[219,78,248,78],[219,79,248,79,"random"],[219,85,248,85],[219,86,248,86],[219,87,248,87],[219,90,248,90],[219,93,248,93],[219,94,248,94],[219,95,248,95],[219,96,248,96],[219,97,248,97],[220,16,249,14],[220,20,249,20,"playerDefense"],[220,33,249,33],[220,36,249,36,"newState"],[220,44,249,44],[220,45,249,45,"playerStats"],[220,56,249,56],[220,57,249,57,"defense"],[220,64,249,64],[221,16,250,14],[221,20,250,20,"finalDamage"],[221,31,250,31],[221,34,250,34,"Math"],[221,38,250,38],[221,39,250,39,"max"],[221,42,250,42],[221,43,250,43],[221,44,250,44],[221,46,250,46,"attackDamage"],[221,58,250,58],[221,61,250,61,"Math"],[221,65,250,65],[221,66,250,66,"floor"],[221,71,250,71],[221,72,250,72,"playerDefense"],[221,85,250,85],[221,88,250,88],[221,91,250,91],[221,92,250,92],[221,93,250,93],[221,94,250,94],[221,95,250,95],[223,16,252,14,"console"],[223,23,252,21],[223,24,252,22,"log"],[223,27,252,25],[223,28,252,26],[223,49,252,47,"enemy"],[223,54,252,52],[223,55,252,53,"name"],[223,59,252,57],[223,82,252,80,"finalDamage"],[223,93,252,91],[223,105,252,103,"attackDamage"],[223,117,252,115],[223,123,252,121,"Math"],[223,127,252,125],[223,128,252,126,"floor"],[223,133,252,131],[223,134,252,132,"playerDefense"],[223,147,252,145],[223,150,252,148],[223,153,252,151],[223,154,252,152],[223,165,252,163],[223,166,252,164],[225,16,254,14],[226,16,255,14],[226,20,255,20,"newPlayerHealth"],[226,35,255,35],[226,38,255,38,"Math"],[226,42,255,42],[226,43,255,43,"max"],[226,46,255,46],[226,47,255,47],[226,48,255,48],[226,50,255,50,"newState"],[226,58,255,58],[226,59,255,59,"playerStats"],[226,70,255,70],[226,71,255,71,"health"],[226,77,255,77],[226,80,255,80,"finalDamage"],[226,91,255,91],[226,92,255,92],[227,16,256,14,"newState"],[227,24,256,22],[227,25,256,23,"playerStats"],[227,36,256,34],[227,37,256,35,"health"],[227,43,256,41],[227,46,256,44,"newPlayerHealth"],[227,61,256,59],[228,16,258,14,"console"],[228,23,258,21],[228,24,258,22,"log"],[228,27,258,25],[228,28,258,26],[228,49,258,47,"newState"],[228,57,258,55],[228,58,258,56,"playerStats"],[228,69,258,67],[228,70,258,68,"health"],[228,76,258,74],[228,80,258,78,"newState"],[228,88,258,86],[228,89,258,87,"playerStats"],[228,100,258,98],[228,101,258,99,"maxHealth"],[228,110,258,108],[228,120,258,118,"finalDamage"],[228,131,258,129],[228,141,258,139],[228,142,258,140],[230,16,260,14],[231,16,261,14,"enemy"],[231,21,261,19],[231,22,261,20,"lastAttackTick"],[231,36,261,34],[231,39,261,37,"newState"],[231,47,261,45],[231,48,261,46,"currentTick"],[231,59,261,57],[233,16,263,14],[234,16,264,14],[234,20,264,18,"newPlayerHealth"],[234,35,264,33],[234,39,264,37],[234,40,264,38],[234,42,264,40],[235,18,265,16,"console"],[235,25,265,23],[235,26,265,24,"log"],[235,29,265,27],[235,30,265,28],[235,79,265,77],[235,80,265,78],[236,16,266,14],[237,14,267,12],[238,12,268,10],[238,13,268,11],[238,19,268,17],[239,14,269,12],[240,14,270,12],[241,14,271,12],[241,18,271,16,"distance"],[241,26,271,24],[241,29,271,27],[241,31,271,29],[241,33,271,31],[242,16,272,14],[243,16,273,14],[243,20,273,20,"normalizedX"],[243,31,273,31],[243,34,273,34,"deltaX"],[243,40,273,40],[243,43,273,43,"distance"],[243,51,273,51],[244,16,274,14],[244,20,274,20,"normalizedY"],[244,31,274,31],[244,34,274,34,"deltaY"],[244,40,274,40],[244,43,274,43,"distance"],[244,51,274,51],[246,16,276,14],[247,16,277,14],[247,20,277,20,"randomFactor"],[247,32,277,32],[247,35,277,35],[247,38,277,38],[247,39,277,39],[247,40,277,40],[248,16,278,14],[248,20,278,20,"finalX"],[248,26,278,26],[248,29,278,29,"normalizedX"],[248,40,278,40],[248,43,278,43],[248,44,278,44,"Math"],[248,48,278,48],[248,49,278,49,"random"],[248,55,278,55],[248,56,278,56],[248,57,278,57],[248,60,278,60],[248,63,278,63],[248,67,278,67,"randomFactor"],[248,79,278,79],[249,16,279,14],[249,20,279,20,"finalY"],[249,26,279,26],[249,29,279,29,"normalizedY"],[249,40,279,40],[249,43,279,43],[249,44,279,44,"Math"],[249,48,279,48],[249,49,279,49,"random"],[249,55,279,55],[249,56,279,56],[249,57,279,57],[249,60,279,60],[249,63,279,63],[249,67,279,67,"randomFactor"],[249,79,279,79],[251,16,281,14],[252,16,282,14],[252,20,282,18,"newX"],[252,24,282,22],[252,27,282,25,"enemy"],[252,32,282,30],[252,33,282,31,"position"],[252,41,282,39],[252,42,282,40,"x"],[252,43,282,41],[252,46,282,45,"finalX"],[252,52,282,51],[252,55,282,54,"MOVEMENT_SPEED"],[252,69,282,69],[253,16,283,14],[253,20,283,18,"newY"],[253,24,283,22],[253,27,283,25,"enemy"],[253,32,283,30],[253,33,283,31,"position"],[253,41,283,39],[253,42,283,40,"y"],[253,43,283,41],[253,46,283,45,"finalY"],[253,52,283,51],[253,55,283,54,"MOVEMENT_SPEED"],[253,69,283,69],[255,16,285,14],[256,16,286,14,"newX"],[256,20,286,18],[256,23,286,21,"Math"],[256,27,286,25],[256,28,286,26,"max"],[256,31,286,29],[256,32,286,30],[256,33,286,31],[256,35,286,33,"Math"],[256,39,286,37],[256,40,286,38,"min"],[256,43,286,41],[256,44,286,42,"SCREEN_WIDTH"],[256,56,286,54],[256,59,286,57,"ENEMY_SIZE"],[256,69,286,67],[256,71,286,69,"newX"],[256,75,286,73],[256,76,286,74],[256,77,286,75],[257,16,287,14,"newY"],[257,20,287,18],[257,23,287,21,"Math"],[257,27,287,25],[257,28,287,26,"max"],[257,31,287,29],[257,32,287,30],[257,33,287,31],[257,35,287,33,"Math"],[257,39,287,37],[257,40,287,38,"min"],[257,43,287,41],[257,44,287,42,"GAME_AREA_HEIGHT"],[257,60,287,58],[257,63,287,61,"ENEMY_SIZE"],[257,73,287,71],[257,75,287,73,"newY"],[257,79,287,77],[257,80,287,78],[257,81,287,79],[259,16,289,14],[260,16,290,14,"enemy"],[260,21,290,19],[260,22,290,20,"position"],[260,30,290,28],[260,31,290,29,"x"],[260,32,290,30],[260,35,290,33,"newX"],[260,39,290,37],[261,16,291,14,"enemy"],[261,21,291,19],[261,22,291,20,"position"],[261,30,291,28],[261,31,291,29,"y"],[261,32,291,30],[261,35,291,33,"newY"],[261,39,291,37],[262,14,292,12],[263,14,293,12],[264,12,294,10],[265,10,295,8],[266,8,296,6],[266,9,296,7],[266,10,296,8],[268,8,298,6],[269,8,299,6],[269,12,299,10,"newState"],[269,20,299,18],[269,21,299,19,"playerStats"],[269,32,299,30],[269,36,299,34,"game"],[269,40,299,38],[269,41,299,39,"gameState"],[269,50,299,48],[269,51,299,49,"ninja"],[269,56,299,54],[269,58,299,56],[270,10,300,8],[270,14,300,14,"effectiveStats"],[270,28,300,28],[270,31,300,31,"game"],[270,35,300,35],[270,36,300,36,"getEffectiveStats"],[270,53,300,53],[270,54,300,54],[270,55,300,55],[272,10,302,8],[273,10,303,8],[273,14,303,12,"newState"],[273,22,303,20],[273,23,303,21,"playerStats"],[273,34,303,32],[273,35,303,33,"attack"],[273,41,303,39],[273,46,303,44,"effectiveStats"],[273,60,303,58],[273,61,303,59,"attack"],[273,67,303,65],[273,71,304,12,"newState"],[273,79,304,20],[273,80,304,21,"playerStats"],[273,91,304,32],[273,92,304,33,"defense"],[273,99,304,40],[273,104,304,45,"effectiveStats"],[273,118,304,59],[273,119,304,60,"defense"],[273,126,304,67],[273,130,305,12,"newState"],[273,138,305,20],[273,139,305,21,"playerStats"],[273,150,305,32],[273,151,305,33,"maxHealth"],[273,160,305,42],[273,165,305,47,"effectiveStats"],[273,179,305,61],[273,180,305,62,"health"],[273,186,305,68],[273,188,305,70],[274,12,307,10],[275,12,308,10],[275,16,308,16,"healthRatio"],[275,27,308,27],[275,30,308,30,"newState"],[275,38,308,38],[275,39,308,39,"playerStats"],[275,50,308,50],[275,51,308,51,"maxHealth"],[275,60,308,60],[275,63,308,63],[275,64,308,64],[275,67,309,12,"newState"],[275,75,309,20],[275,76,309,21,"playerStats"],[275,87,309,32],[275,88,309,33,"health"],[275,94,309,39],[275,97,309,42,"newState"],[275,105,309,50],[275,106,309,51,"playerStats"],[275,117,309,62],[275,118,309,63,"maxHealth"],[275,127,309,72],[275,130,309,75],[275,131,309,76],[276,12,311,10,"console"],[276,19,311,17],[276,20,311,18,"log"],[276,23,311,21],[276,24,311,22],[276,58,311,56,"newState"],[276,66,311,64],[276,67,311,65,"playerStats"],[276,78,311,76],[276,79,311,77,"attack"],[276,85,311,83],[276,91,311,89,"effectiveStats"],[276,105,311,103],[276,106,311,104,"attack"],[276,112,311,110],[276,125,311,123,"newState"],[276,133,311,131],[276,134,311,132,"playerStats"],[276,145,311,143],[276,146,311,144,"defense"],[276,153,311,151],[276,159,311,157,"effectiveStats"],[276,173,311,171],[276,174,311,172,"defense"],[276,181,311,179],[276,192,311,190,"newState"],[276,200,311,198],[276,201,311,199,"playerStats"],[276,212,311,210],[276,213,311,211,"maxHealth"],[276,222,311,220],[276,228,311,226,"effectiveStats"],[276,242,311,240],[276,243,311,241,"health"],[276,249,311,247],[276,251,311,249],[276,252,311,250],[277,12,313,10,"newState"],[277,20,313,18],[277,21,313,19,"playerStats"],[277,32,313,30],[277,35,313,33],[278,14,314,12],[278,17,314,15,"newState"],[278,25,314,23],[278,26,314,24,"playerStats"],[278,37,314,35],[279,14,315,12,"attack"],[279,20,315,18],[279,22,315,20,"effectiveStats"],[279,36,315,34],[279,37,315,35,"attack"],[279,43,315,41],[280,14,316,12,"defense"],[280,21,316,19],[280,23,316,21,"effectiveStats"],[280,37,316,35],[280,38,316,36,"defense"],[280,45,316,43],[281,14,317,12,"maxHealth"],[281,23,317,21],[281,25,317,23,"effectiveStats"],[281,39,317,37],[281,40,317,38,"health"],[281,46,317,44],[282,14,318,12,"health"],[282,20,318,18],[282,22,318,20,"Math"],[282,26,318,24],[282,27,318,25,"floor"],[282,32,318,30],[282,33,318,31,"effectiveStats"],[282,47,318,45],[282,48,318,46,"health"],[282,54,318,52],[282,57,318,55,"healthRatio"],[282,68,318,66],[282,69,318,67],[283,14,318,69],[284,14,319,12,"critChance"],[284,24,319,22],[284,26,319,24,"effectiveStats"],[284,40,319,38],[284,41,319,39,"critChance"],[284,51,319,49],[284,55,319,53,"newState"],[284,63,319,61],[284,64,319,62,"playerStats"],[284,75,319,73],[284,76,319,74,"critChance"],[284,86,319,84],[285,14,320,12,"critDamage"],[285,24,320,22],[285,26,320,24,"effectiveStats"],[285,40,320,38],[285,41,320,39,"critDamage"],[285,51,320,49],[285,55,320,53,"newState"],[285,63,320,61],[285,64,320,62,"playerStats"],[285,75,320,73],[285,76,320,74,"critDamage"],[285,86,320,84],[286,14,321,12,"cooldownReduction"],[286,31,321,29],[286,33,321,31,"effectiveStats"],[286,47,321,45],[286,48,321,46,"cooldownReduction"],[286,65,321,63],[286,69,321,67,"newState"],[286,77,321,75],[286,78,321,76,"playerStats"],[286,89,321,87],[286,90,321,88,"cooldownReduction"],[287,12,322,10],[287,13,322,11],[288,10,323,8],[289,8,324,6],[290,8,325,6],[290,12,325,10,"newState"],[290,20,325,18],[290,21,325,19,"shadowClone"],[290,32,325,30],[290,34,325,32],[291,10,326,8],[292,10,327,8,"newState"],[292,18,327,16],[292,19,327,17,"shadowClone"],[292,30,327,28],[292,31,327,29,"remainingTicks"],[292,45,327,43],[292,47,327,45],[294,10,329,8],[295,10,330,8],[295,14,330,14,"cloneOffset"],[295,25,330,25],[295,28,330,28],[295,30,330,30],[295,31,330,31],[295,32,330,32],[296,10,331,8,"newState"],[296,18,331,16],[296,19,331,17,"shadowClone"],[296,30,331,28],[296,31,331,29,"position"],[296,39,331,37],[296,40,331,38,"x"],[296,41,331,39],[296,44,331,42,"currentNinjaPosition"],[296,64,331,62],[296,65,331,63,"x"],[296,66,331,64],[296,69,331,67,"cloneOffset"],[296,80,331,78],[297,10,332,8,"newState"],[297,18,332,16],[297,19,332,17,"shadowClone"],[297,30,332,28],[297,31,332,29,"position"],[297,39,332,37],[297,40,332,38,"y"],[297,41,332,39],[297,44,332,42,"currentNinjaPosition"],[297,64,332,62],[297,65,332,63,"y"],[297,66,332,64],[297,69,332,67],[297,71,332,69],[299,10,334,8],[300,10,335,8],[300,14,335,12,"newState"],[300,22,335,20],[300,23,335,21,"shadowClone"],[300,34,335,32],[300,35,335,33,"remainingTicks"],[300,49,335,47],[300,53,335,51],[300,54,335,52],[300,56,335,54],[301,12,336,10,"console"],[301,19,336,17],[301,20,336,18,"log"],[301,23,336,21],[301,24,336,22],[301,75,336,73],[301,76,336,74],[302,12,337,10,"newState"],[302,20,337,18],[302,21,337,19,"shadowClone"],[302,32,337,30],[302,35,337,33,"undefined"],[302,44,337,42],[303,10,338,8],[303,11,338,9],[303,17,338,15],[304,12,339,10],[305,12,340,10],[306,12,341,10],[306,16,341,16,"CLONE_ATTACK_INTERVAL"],[306,37,341,37],[306,40,341,40],[306,42,341,42],[307,12,342,10],[307,16,342,14,"newState"],[307,24,342,22],[307,25,342,23,"currentTick"],[307,36,342,34],[307,39,342,37,"CLONE_ATTACK_INTERVAL"],[307,60,342,58],[307,65,342,63],[307,66,342,64],[307,70,342,68,"newState"],[307,78,342,76],[307,79,342,77,"enemies"],[307,86,342,84],[307,87,342,85,"length"],[307,93,342,91],[307,96,342,94],[307,97,342,95],[307,99,342,97],[308,14,343,12,"console"],[308,21,343,19],[308,22,343,20,"log"],[308,25,343,23],[308,26,343,24],[308,83,343,81],[308,84,343,82],[310,14,345,12],[311,14,346,12],[311,18,346,18,"target"],[311,24,346,24],[311,27,346,27,"findClosestEnemyInternal"],[311,51,346,51],[311,52,346,52,"newState"],[311,60,346,60],[311,61,346,61,"enemies"],[311,68,346,68],[311,69,346,69],[312,14,347,12],[312,18,347,16,"target"],[312,24,347,22],[312,26,347,24],[313,16,348,14],[314,16,349,14],[314,20,349,20,"cloneDamage"],[314,31,349,31],[314,34,349,34,"Math"],[314,38,349,38],[314,39,349,39,"floor"],[314,44,349,44],[314,45,349,45,"newState"],[314,53,349,53],[314,54,349,54,"playerStats"],[314,65,349,65],[314,66,349,66,"attack"],[314,72,349,72],[314,75,349,75],[314,78,349,78],[314,79,349,79],[316,16,351,14],[317,16,352,14,"createProjectile"],[317,32,352,30],[317,33,352,31,"target"],[317,39,352,37],[317,41,352,39,"cloneDamage"],[317,52,352,50],[317,54,352,52,"newState"],[317,62,352,60],[317,63,352,61,"shadowClone"],[317,74,352,72],[317,75,352,73,"position"],[317,83,352,81],[317,85,352,83],[318,18,353,16,"id"],[318,20,353,18],[318,22,353,20],[318,43,353,41],[319,18,354,16,"name"],[319,22,354,20],[319,24,354,22],[319,45,354,43],[320,18,355,16,"icon"],[320,22,355,20],[320,24,355,22],[321,16,356,14],[321,17,356,15],[321,18,356,16],[322,14,357,12],[323,12,358,10],[324,10,359,8],[325,8,360,6],[327,8,362,6],[328,8,363,6],[328,12,363,10],[328,13,363,11,"isManualControlActive"],[328,34,363,32],[328,36,363,34],[329,10,364,8],[329,15,364,13],[329,19,364,17,"i"],[329,20,364,18],[329,23,364,21],[329,24,364,22],[329,26,364,24,"i"],[329,27,364,25],[329,30,364,28],[329,31,364,29],[329,33,364,31,"i"],[329,34,364,32],[329,36,364,34],[329,38,364,36],[330,12,365,10],[330,16,365,14,"newState"],[330,24,365,22],[330,25,365,23,"abilityManager"],[330,39,365,37],[330,40,365,38,"isAbilityReady"],[330,54,365,52],[330,55,365,53,"i"],[330,56,365,54],[330,57,365,55],[330,61,365,59,"newState"],[330,69,365,67],[330,70,365,68,"enemies"],[330,77,365,75],[330,78,365,76,"length"],[330,84,365,82],[330,87,365,85],[330,88,365,86],[330,90,365,88],[331,14,366,12],[331,18,366,16,"newState"],[331,26,366,24],[331,27,366,25,"abilityManager"],[331,41,366,39],[331,42,366,40,"useAbility"],[331,52,366,50],[331,53,366,51,"i"],[331,54,366,52],[331,56,366,54,"newTick"],[331,63,366,61],[331,64,366,62],[331,66,366,64],[332,16,367,14,"castAbility"],[332,27,367,25],[332,28,367,26,"newState"],[332,36,367,34],[332,38,367,36,"i"],[332,39,367,37],[332,40,367,38],[333,14,368,12],[334,12,369,10],[335,10,370,8],[336,8,371,6],[338,8,373,6],[339,8,374,6],[339,12,374,12,"deadEnemies"],[339,23,374,23],[339,26,374,26,"newState"],[339,34,374,34],[339,35,374,35,"enemies"],[339,42,374,42],[339,43,374,43,"filter"],[339,49,374,49],[339,50,374,50,"enemy"],[339,55,374,55],[339,59,374,59,"enemy"],[339,64,374,64],[339,65,374,65,"health"],[339,71,374,71],[339,75,374,75],[339,76,374,76],[339,77,374,77],[340,8,375,6,"enemiesToKill"],[340,21,375,19],[340,24,375,22],[340,25,375,23],[340,28,375,26,"deadEnemies"],[340,39,375,37],[340,40,375,38],[340,41,375,39],[340,42,375,40],[342,8,377,6],[343,8,378,6],[343,12,378,10,"deadEnemies"],[343,23,378,21],[343,24,378,22,"length"],[343,30,378,28],[343,33,378,31],[343,34,378,32],[343,36,378,34],[344,10,379,8,"console"],[344,17,379,15],[344,18,379,16,"log"],[344,21,379,19],[344,22,379,20],[344,49,379,47,"deadEnemies"],[344,60,379,58],[344,61,379,59,"length"],[344,67,379,65],[344,83,379,81],[344,85,379,83,"deadEnemies"],[344,96,379,94],[344,97,379,95,"map"],[344,100,379,98],[344,101,379,99,"e"],[344,102,379,100],[344,106,379,104],[344,109,379,107,"e"],[344,110,379,108],[344,111,379,109,"id"],[344,113,379,111],[344,117,379,115,"e"],[344,118,379,116],[344,119,379,117,"health"],[344,125,379,123],[344,130,379,128],[344,131,379,129],[344,132,379,130],[345,8,380,6],[347,8,382,6],[348,8,383,6],[348,12,383,12,"lowHealthEnemies"],[348,28,383,28],[348,31,383,31,"newState"],[348,39,383,39],[348,40,383,40,"enemies"],[348,47,383,47],[348,48,383,48,"filter"],[348,54,383,54],[348,55,383,55,"enemy"],[348,60,383,60],[348,64,383,64,"enemy"],[348,69,383,69],[348,70,383,70,"health"],[348,76,383,76],[348,80,383,80],[348,82,383,82],[348,86,383,86,"enemy"],[348,91,383,91],[348,92,383,92,"health"],[348,98,383,98],[348,101,383,101],[348,102,383,102],[348,103,383,103],[349,8,384,6],[349,12,384,10,"lowHealthEnemies"],[349,28,384,26],[349,29,384,27,"length"],[349,35,384,33],[349,38,384,36],[349,39,384,37],[349,41,384,39],[350,10,385,8,"console"],[350,17,385,15],[350,18,385,16,"log"],[350,21,385,19],[350,22,385,20],[350,61,385,59],[350,63,385,61,"lowHealthEnemies"],[350,79,385,77],[350,80,385,78,"map"],[350,83,385,81],[350,84,385,82,"e"],[350,85,385,83],[350,89,385,87],[350,92,385,90,"e"],[350,93,385,91],[350,94,385,92,"id"],[350,96,385,94],[350,100,385,98,"e"],[350,101,385,99],[350,102,385,100,"health"],[350,108,385,106],[350,112,385,110,"e"],[350,113,385,111],[350,114,385,112,"maxHealth"],[350,123,385,121],[350,128,385,126],[350,129,385,127],[350,130,385,128],[351,8,386,6],[353,8,388,6],[354,8,389,6],[354,12,389,12,"beforeCount"],[354,23,389,23],[354,26,389,26,"newState"],[354,34,389,34],[354,35,389,35,"enemies"],[354,42,389,42],[354,43,389,43,"length"],[354,49,389,49],[355,8,390,6,"newState"],[355,16,390,14],[355,17,390,15,"enemies"],[355,24,390,22],[355,27,390,25,"newState"],[355,35,390,33],[355,36,390,34,"enemies"],[355,43,390,41],[355,44,390,42,"filter"],[355,50,390,48],[355,51,390,49,"enemy"],[355,56,390,54],[355,60,390,58,"enemy"],[355,65,390,63],[355,66,390,64,"health"],[355,72,390,70],[355,75,390,73],[355,76,390,74],[355,77,390,75],[356,8,391,6],[356,12,391,12,"afterCount"],[356,22,391,22],[356,25,391,25,"newState"],[356,33,391,33],[356,34,391,34,"enemies"],[356,41,391,41],[356,42,391,42,"length"],[356,48,391,48],[357,8,393,6],[357,12,393,10,"beforeCount"],[357,23,393,21],[357,28,393,26,"afterCount"],[357,38,393,36],[357,40,393,38],[358,10,394,8,"console"],[358,17,394,15],[358,18,394,16,"log"],[358,21,394,19],[358,22,394,20],[358,52,394,50,"beforeCount"],[358,63,394,61],[358,66,394,64,"afterCount"],[358,76,394,74],[358,102,394,100],[358,103,394,101],[359,8,395,6],[361,8,397,6],[362,8,398,6],[363,8,399,6],[363,12,399,12,"MAX_ENEMIES"],[363,23,399,23],[363,26,399,26],[363,28,399,28],[363,29,399,29],[363,30,399,30],[364,8,400,6],[364,12,400,12,"MIN_SPAWN_DELAY"],[364,27,400,27],[364,30,400,30],[364,33,400,33],[364,34,400,34],[364,35,400,35],[365,8,401,6],[365,12,401,12,"now"],[365,15,401,15],[365,18,401,18,"Date"],[365,22,401,22],[365,23,401,23,"now"],[365,26,401,26],[365,27,401,27],[365,28,401,28],[366,8,402,6],[366,12,402,12,"hasBoss"],[366,19,402,19],[366,22,402,22,"newState"],[366,30,402,30],[366,31,402,31,"enemies"],[366,38,402,38],[366,39,402,39,"some"],[366,43,402,43],[366,44,402,44,"enemy"],[366,49,402,49],[366,53,402,53,"enemy"],[366,58,402,58],[366,59,402,59,"isBoss"],[366,65,402,65],[366,66,402,66],[368,8,404,6],[369,8,405,6],[369,12,405,10],[369,13,405,11,"newState"],[369,21,405,19],[369,22,405,20,"lastSpawnTime"],[369,35,405,33],[369,37,405,35],[370,10,406,8,"newState"],[370,18,406,16],[370,19,406,17,"lastSpawnTime"],[370,32,406,30],[370,35,406,33,"now"],[370,38,406,36],[371,8,407,6],[372,8,409,6,"console"],[372,15,409,13],[372,16,409,14,"log"],[372,19,409,17],[372,20,409,18],[372,53,409,51,"newState"],[372,61,409,59],[372,62,409,60,"enemies"],[372,69,409,67],[372,70,409,68,"length"],[372,76,409,74],[372,85,409,83,"MAX_ENEMIES"],[372,96,409,94],[372,109,409,107,"hasBoss"],[372,116,409,114],[372,118,409,116],[372,119,409,117],[374,8,411,6],[375,8,412,6],[375,12,412,10],[375,13,412,11,"hasBoss"],[375,20,412,18],[375,24,412,22,"newState"],[375,32,412,30],[375,33,412,31,"enemies"],[375,40,412,38],[375,41,412,39,"length"],[375,47,412,45],[375,50,412,48,"MAX_ENEMIES"],[375,61,412,59],[375,65,412,64,"now"],[375,68,412,67],[375,71,412,70,"newState"],[375,79,412,78],[375,80,412,79,"lastSpawnTime"],[375,93,412,92],[375,97,412,97,"MIN_SPAWN_DELAY"],[375,112,412,112],[375,114,412,114],[376,10,413,8,"console"],[376,17,413,15],[376,18,413,16,"log"],[376,21,413,19],[376,22,413,20],[376,43,413,41,"newState"],[376,51,413,49],[376,52,413,50,"enemies"],[376,59,413,57],[376,60,413,58,"length"],[376,66,413,64],[376,69,413,67],[376,70,413,68],[376,74,413,72,"MAX_ENEMIES"],[376,85,413,83],[376,87,413,85],[376,88,413,86],[377,10,414,8,"spawnTestEnemy"],[377,24,414,22],[377,25,414,23,"newState"],[377,33,414,31],[377,34,414,32],[378,10,415,8,"newState"],[378,18,415,16],[378,19,415,17,"lastSpawnTime"],[378,32,415,30],[378,35,415,33,"now"],[378,38,415,36],[379,8,416,6],[380,8,418,6],[380,15,418,13,"newState"],[380,23,418,21],[381,6,419,4],[381,7,419,5],[381,47,419,6],[383,6,421,4],[384,6,422,4,"console"],[384,13,422,11],[384,14,422,12,"log"],[384,17,422,15],[384,18,422,16],[384,50,422,48,"enemiesToKill"],[384,63,422,61],[384,64,422,62,"length"],[384,70,422,68],[384,101,422,99],[384,102,422,100],[385,6,424,4,"enemiesToKill"],[385,19,424,17],[385,20,424,18,"forEach"],[385,27,424,25],[385,28,424,26],[385,29,424,27,"enemy"],[385,34,424,32],[385,36,424,34,"index"],[385,41,424,39],[385,46,424,44],[386,8,425,6,"console"],[386,15,425,13],[386,16,425,14,"log"],[386,19,425,17],[386,20,425,18],[386,57,425,55,"index"],[386,62,425,60],[386,65,425,63],[386,66,425,64],[386,70,425,68,"enemiesToKill"],[386,83,425,81],[386,84,425,82,"length"],[386,90,425,88],[386,104,425,102,"enemy"],[386,109,425,107],[386,110,425,108,"id"],[386,112,425,110],[386,114,425,112],[386,115,425,113],[387,8,426,6,"handleEnemyKill"],[387,23,426,21],[387,24,426,22,"enemy"],[387,29,426,27],[387,30,426,28],[388,6,427,4],[388,7,427,5],[388,8,427,6],[389,4,428,2],[389,5,428,3],[389,7,428,5],[389,8,428,6,"handleEnemyKill"],[389,23,428,21],[389,24,428,22],[389,25,428,23],[389,26,428,24],[389,27,428,25],[391,4,430,2],[392,4,431,2],[392,8,431,8,"findClosestEnemyInternal"],[392,32,431,32],[392,35,431,36,"enemies"],[392,42,431,58],[392,46,431,83],[393,6,432,4],[393,10,432,8,"enemies"],[393,17,432,15],[393,18,432,16,"length"],[393,24,432,22],[393,29,432,27],[393,30,432,28],[393,32,432,30],[393,39,432,37],[393,43,432,41],[395,6,434,4],[396,6,435,4],[396,10,435,10,"SCREEN_WIDTH"],[396,22,435,22],[396,25,435,25],[396,28,435,28],[397,6,436,4],[397,10,436,10,"GAME_AREA_HEIGHT"],[397,26,436,26],[397,29,436,29],[397,32,436,32],[397,35,436,35],[397,38,436,38],[397,39,436,39],[397,40,436,40],[398,6,437,4],[398,10,437,10,"ninjaX"],[398,16,437,16],[398,19,437,19,"SCREEN_WIDTH"],[398,31,437,31],[398,34,437,34],[398,35,437,35],[399,6,438,4],[399,10,438,10,"ninjaY"],[399,16,438,16],[399,19,438,19,"GAME_AREA_HEIGHT"],[399,35,438,35],[399,38,438,38],[399,39,438,39],[400,6,440,4],[400,10,440,8,"closestEnemy"],[400,22,440,20],[400,25,440,23,"enemies"],[400,32,440,30],[400,33,440,31],[400,34,440,32],[400,35,440,33],[401,6,441,4],[401,10,441,8,"closestDistance"],[401,25,441,23],[401,28,441,26,"Infinity"],[401,36,441,34],[402,6,443,4,"enemies"],[402,13,443,11],[402,14,443,12,"forEach"],[402,21,443,19],[402,22,443,20,"enemy"],[402,27,443,25],[402,31,443,29],[403,8,444,6],[403,12,444,12,"distance"],[403,20,444,20],[403,23,444,23,"Math"],[403,27,444,27],[403,28,444,28,"sqrt"],[403,32,444,32],[403,33,445,8,"Math"],[403,37,445,12],[403,38,445,13,"pow"],[403,41,445,16],[403,42,445,17,"enemy"],[403,47,445,22],[403,48,445,23,"position"],[403,56,445,31],[403,57,445,32,"x"],[403,58,445,33],[403,61,445,36,"ninjaX"],[403,67,445,42],[403,69,445,44],[403,70,445,45],[403,71,445,46],[403,74,446,8,"Math"],[403,78,446,12],[403,79,446,13,"pow"],[403,82,446,16],[403,83,446,17,"enemy"],[403,88,446,22],[403,89,446,23,"position"],[403,97,446,31],[403,98,446,32,"y"],[403,99,446,33],[403,102,446,36,"ninjaY"],[403,108,446,42],[403,110,446,44],[403,111,446,45],[403,112,447,6],[403,113,447,7],[404,8,449,6],[404,12,449,10,"distance"],[404,20,449,18],[404,23,449,21,"closestDistance"],[404,38,449,36],[404,40,449,38],[405,10,450,8,"closestDistance"],[405,25,450,23],[405,28,450,26,"distance"],[405,36,450,34],[406,10,451,8,"closestEnemy"],[406,22,451,20],[406,25,451,23,"enemy"],[406,30,451,28],[407,8,452,6],[408,6,453,4],[408,7,453,5],[408,8,453,6],[409,6,455,4,"console"],[409,13,455,11],[409,14,455,12,"log"],[409,17,455,15],[409,18,455,16],[409,60,455,58,"closestDistance"],[409,75,455,73],[409,76,455,74,"toFixed"],[409,83,455,81],[409,84,455,82],[409,85,455,83],[409,86,455,84],[409,88,455,86],[409,89,455,87],[410,6,456,4],[410,13,456,11,"closestEnemy"],[410,25,456,23],[411,4,457,2],[411,5,457,3],[413,4,459,2],[414,4,460,2],[414,8,460,8,"findClosestEnemy"],[414,24,460,24],[414,27,460,27,"findClosestEnemy"],[414,28,460,27],[414,33,460,53],[415,6,461,4],[415,13,461,11,"findClosestEnemyInternal"],[415,37,461,35],[415,38,461,36,"combatState"],[415,49,461,47],[415,50,461,48,"enemies"],[415,57,461,55],[415,58,461,56],[416,4,462,2],[416,5,462,3],[418,4,464,2],[419,4,465,2],[419,8,465,2,"_useState7"],[419,18,465,2],[419,21,465,58],[419,25,465,58,"useState"],[419,31,465,66],[419,32,465,66,"useState"],[419,40,465,66],[419,42,465,91],[420,8,465,93,"x"],[420,9,465,94],[420,11,465,96],[420,12,465,97],[421,8,465,99,"y"],[421,9,465,100],[421,11,465,102],[422,6,465,104],[422,7,465,105],[422,8,465,106],[423,6,465,106,"_useState8"],[423,16,465,106],[423,23,465,106,"_slicedToArray"],[423,37,465,106],[423,38,465,106,"default"],[423,45,465,106],[423,47,465,106,"_useState7"],[423,57,465,106],[424,6,465,9,"currentNinjaPosition"],[424,26,465,29],[424,29,465,29,"_useState8"],[424,39,465,29],[425,6,465,31,"setCurrentNinjaPosition"],[425,29,465,54],[425,32,465,54,"_useState8"],[425,42,465,54],[426,4,466,2],[426,8,466,2,"_useState9"],[426,18,466,2],[426,21,466,60],[426,25,466,60,"useState"],[426,31,466,68],[426,32,466,68,"useState"],[426,40,466,68],[426,42,466,69],[426,47,466,74],[426,48,466,75],[427,6,466,75,"_useState0"],[427,16,466,75],[427,23,466,75,"_slicedToArray"],[427,37,466,75],[427,38,466,75,"default"],[427,45,466,75],[427,47,466,75,"_useState9"],[427,57,466,75],[428,6,466,9,"isManualControlActive"],[428,27,466,30],[428,30,466,30,"_useState0"],[428,40,466,30],[429,6,466,32,"setIsManualControlActive"],[429,30,466,56],[429,33,466,56,"_useState0"],[429,43,466,56],[431,4,468,2],[432,4,469,2],[432,8,469,8,"updateNinjaPosition"],[432,27,469,27],[432,30,469,30],[432,34,469,30,"useCallback"],[432,40,469,41],[432,41,469,41,"useCallback"],[432,52,469,41],[432,54,469,43,"newPosition"],[432,65,469,78],[432,69,469,83],[433,6,470,4,"setCurrentNinjaPosition"],[433,29,470,27],[433,30,470,28,"newPosition"],[433,41,470,39],[433,42,470,40],[434,4,471,2],[434,5,471,3],[434,7,471,5],[434,9,471,7],[434,10,471,8],[436,4,473,2],[437,4,474,2],[437,8,474,8,"setManualControlActive"],[437,30,474,30],[437,33,474,33],[437,37,474,33,"useCallback"],[437,43,474,44],[437,44,474,44,"useCallback"],[437,55,474,44],[437,57,474,46,"active"],[437,63,474,61],[437,67,474,66],[438,6,475,4,"setIsManualControlActive"],[438,30,475,28],[438,31,475,29,"active"],[438,37,475,35],[438,38,475,36],[439,6,476,4,"console"],[439,13,476,11],[439,14,476,12,"log"],[439,17,476,15],[439,18,476,16],[439,39,476,37,"active"],[439,45,476,43],[439,48,476,46],[439,59,476,57],[439,62,476,60],[439,75,476,73],[439,88,476,86,"active"],[439,94,476,92],[439,97,476,95],[439,105,476,103],[439,108,476,106],[439,117,476,115],[439,119,476,117],[439,120,476,118],[440,4,477,2],[440,5,477,3],[440,7,477,5],[440,9,477,7],[440,10,477,8],[442,4,479,2],[443,4,480,2],[443,8,480,8,"handleProjectileHit"],[443,27,480,27],[443,30,480,31,"projectile"],[443,40,480,59],[443,44,480,64],[444,6,481,4,"console"],[444,13,481,11],[444,14,481,12,"log"],[444,17,481,15],[444,18,481,16],[444,35,481,33,"projectile"],[444,45,481,43],[444,46,481,44,"id"],[444,48,481,46],[444,62,481,60,"projectile"],[444,72,481,70],[444,73,481,71,"targetEnemyId"],[444,86,481,84],[444,94,481,92,"projectile"],[444,104,481,102],[444,105,481,103,"damage"],[444,111,481,109],[444,120,481,118],[444,121,481,119],[445,6,483,4,"setCombatState"],[445,20,483,18],[445,21,483,19,"prev"],[445,25,483,23],[445,29,483,27],[446,8,484,6],[446,12,484,12,"newState"],[446,20,484,20],[446,23,484,23],[447,10,484,25],[447,13,484,28,"prev"],[448,8,484,33],[448,9,484,34],[450,8,486,6],[451,8,487,6],[451,12,487,12,"enemyIndex"],[451,22,487,22],[451,25,487,25,"newState"],[451,33,487,33],[451,34,487,34,"enemies"],[451,41,487,41],[451,42,487,42,"findIndex"],[451,51,487,51],[451,52,487,52,"e"],[451,53,487,53],[451,57,487,57,"e"],[451,58,487,58],[451,59,487,59,"id"],[451,61,487,61],[451,66,487,66,"projectile"],[451,76,487,76],[451,77,487,77,"targetEnemyId"],[451,90,487,90],[451,91,487,91],[452,8,488,6],[452,12,488,10,"enemyIndex"],[452,22,488,20],[452,26,488,24],[452,27,488,25],[452,29,488,27],[453,10,489,8,"newState"],[453,18,489,16],[453,19,489,17,"enemies"],[453,26,489,24],[453,29,489,27],[453,30,489,28],[453,33,489,31,"newState"],[453,41,489,39],[453,42,489,40,"enemies"],[453,49,489,47],[453,50,489,48],[454,10,490,8,"newState"],[454,18,490,16],[454,19,490,17,"enemies"],[454,26,490,24],[454,27,490,25,"enemyIndex"],[454,37,490,35],[454,38,490,36],[454,41,490,39],[455,12,491,10],[455,15,491,13,"newState"],[455,23,491,21],[455,24,491,22,"enemies"],[455,31,491,29],[455,32,491,30,"enemyIndex"],[455,42,491,40],[455,43,491,41],[456,12,492,10,"health"],[456,18,492,16],[456,20,492,18,"newState"],[456,28,492,26],[456,29,492,27,"enemies"],[456,36,492,34],[456,37,492,35,"enemyIndex"],[456,47,492,45],[456,48,492,46],[456,49,492,47,"health"],[456,55,492,53],[456,58,492,56,"projectile"],[456,68,492,66],[456,69,492,67,"damage"],[456,75,492,73],[457,12,493,10,"lastDamaged"],[457,23,493,21],[457,25,493,23,"combatEngine"],[457,44,493,35],[457,45,493,35,"combatEngine"],[457,57,493,35],[457,58,493,36,"getCurrentTick"],[457,72,493,50],[457,73,493,51],[458,10,494,8],[458,11,494,9],[459,10,496,8,"console"],[459,17,496,15],[459,18,496,16,"log"],[459,21,496,19],[459,22,496,20],[459,34,496,32,"projectile"],[459,44,496,42],[459,45,496,43,"targetEnemyId"],[459,58,496,56],[459,70,496,68,"newState"],[459,78,496,76],[459,79,496,77,"enemies"],[459,86,496,84],[459,87,496,85,"enemyIndex"],[459,97,496,95],[459,98,496,96],[459,99,496,97,"health"],[459,105,496,103],[459,109,496,107,"newState"],[459,117,496,115],[459,118,496,116,"enemies"],[459,125,496,123],[459,126,496,124,"enemyIndex"],[459,136,496,134],[459,137,496,135],[459,138,496,136,"maxHealth"],[459,147,496,145],[459,149,496,147],[459,150,496,148],[460,8,497,6],[461,8,499,6],[461,15,499,13,"newState"],[461,23,499,21],[462,6,500,4],[462,7,500,5],[462,8,500,6],[464,6,502,4],[465,6,503,4,"setProjectiles"],[465,20,503,18],[465,21,503,19,"prev"],[465,25,503,23],[465,29,503,27,"prev"],[465,33,503,31],[465,34,503,32,"filter"],[465,40,503,38],[465,41,503,39,"p"],[465,42,503,40],[465,46,503,44,"p"],[465,47,503,45],[465,48,503,46,"id"],[465,50,503,48],[465,55,503,53,"projectile"],[465,65,503,63],[465,66,503,64,"id"],[465,68,503,66],[465,69,503,67],[465,70,503,68],[466,4,504,2],[466,5,504,3],[468,4,506,2],[469,4,507,2],[469,8,507,8,"castAbility"],[469,19,507,19],[469,22,507,22,"castAbility"],[469,23,507,23,"state"],[469,28,507,41],[469,30,507,43,"slotIndex"],[469,39,507,60],[469,44,507,65],[470,6,508,4],[470,10,508,10,"deck"],[470,14,508,14],[470,17,508,17,"state"],[470,22,508,22],[470,23,508,23,"abilityManager"],[470,37,508,37],[470,38,508,38,"getDeck"],[470,45,508,45],[470,46,508,46],[470,47,508,47],[471,6,509,4],[471,10,509,10,"ability"],[471,17,509,17],[471,20,509,20,"deck"],[471,24,509,24],[471,25,509,25,"slots"],[471,30,509,30],[471,31,509,31,"slotIndex"],[471,40,509,40],[471,41,509,41],[472,6,510,4],[472,10,510,8],[472,11,510,9,"ability"],[472,18,510,16],[472,20,510,18],[474,6,512,4],[475,6,513,4],[475,10,513,8,"damage"],[475,16,513,14],[475,19,513,17,"ability"],[475,26,513,24],[475,27,513,25,"stats"],[475,32,513,30],[475,33,513,31,"baseDamage"],[475,43,513,41],[477,6,515,4],[478,6,516,4,"deck"],[478,10,516,8],[478,11,516,9,"activeSynergies"],[478,26,516,24],[478,27,516,25,"forEach"],[478,34,516,32],[478,35,516,33,"synergy"],[478,42,516,40],[478,46,516,44],[479,8,517,6],[479,12,517,10,"synergy"],[479,19,517,17],[479,20,517,18,"bonus"],[479,25,517,23],[479,26,517,24,"damageBonus"],[479,37,517,35],[479,41,518,10,"synergy"],[479,48,518,17],[479,49,518,18,"requiredTags"],[479,61,518,30],[479,62,518,31,"some"],[479,66,518,35],[479,67,518,36,"tag"],[479,70,518,39],[479,74,518,43,"ability"],[479,81,518,50],[479,82,518,51,"tags"],[479,86,518,55],[479,87,518,56,"includes"],[479,95,518,64],[479,96,518,65,"tag"],[479,99,518,68],[479,100,518,69],[479,101,518,70],[479,103,518,72],[480,10,519,8,"damage"],[480,16,519,14],[480,20,519,19],[480,21,519,20],[480,24,519,23,"synergy"],[480,31,519,30],[480,32,519,31,"bonus"],[480,37,519,36],[480,38,519,37,"damageBonus"],[480,49,519,48],[480,52,519,51],[480,55,519,55],[481,8,520,6],[482,6,521,4],[482,7,521,5],[482,8,521,6],[484,6,523,4],[485,6,524,4],[485,10,524,10,"isAOE"],[485,15,524,15],[485,18,524,18,"ability"],[485,25,524,25],[485,26,524,26,"effects"],[485,33,524,33],[485,34,524,34,"includes"],[485,42,524,42],[485,43,524,43],[485,48,524,48],[485,49,524,49],[485,53,524,53,"ability"],[485,60,524,60],[485,61,524,61,"stats"],[485,66,524,66],[485,67,524,67,"aoeRadius"],[485,76,524,76],[486,6,526,4],[486,10,526,8,"isAOE"],[486,15,526,13],[486,17,526,15],[487,8,527,6,"console"],[487,15,527,13],[487,16,527,14,"log"],[487,19,527,17],[487,20,527,18],[487,39,527,37,"ability"],[487,46,527,44],[487,47,527,45,"name"],[487,51,527,49],[487,67,527,65,"ability"],[487,74,527,72],[487,75,527,73,"stats"],[487,80,527,78],[487,81,527,79,"aoeRadius"],[487,90,527,88],[487,92,527,90],[487,93,527,91],[489,8,529,6],[490,8,530,6],[490,12,530,12,"ninjaX"],[490,18,530,18],[490,21,530,21,"currentNinjaPosition"],[490,41,530,41],[490,42,530,42,"x"],[490,43,530,43],[490,46,530,46],[490,48,530,48],[490,49,530,49],[490,50,530,50],[491,8,531,6],[491,12,531,12,"ninjaY"],[491,18,531,18],[491,21,531,21,"currentNinjaPosition"],[491,41,531,41],[491,42,531,42,"y"],[491,43,531,43],[491,46,531,46],[491,48,531,48],[492,8,532,6],[492,12,532,12,"aoeRadius"],[492,21,532,21],[492,24,532,24,"ability"],[492,31,532,31],[492,32,532,32,"stats"],[492,37,532,37],[492,38,532,38,"aoeRadius"],[492,47,532,47],[493,8,534,6],[493,12,534,12,"enemiesInRange"],[493,26,534,26],[493,29,534,29,"state"],[493,34,534,34],[493,35,534,35,"enemies"],[493,42,534,42],[493,43,534,43,"filter"],[493,49,534,49],[493,50,534,50,"enemy"],[493,55,534,55],[493,59,534,59],[494,10,535,8],[494,14,535,14,"enemyX"],[494,20,535,20],[494,23,535,23,"enemy"],[494,28,535,28],[494,29,535,29,"position"],[494,37,535,37],[494,38,535,38,"x"],[494,39,535,39],[494,42,535,42],[494,46,535,46],[494,47,535,47],[494,48,535,48],[495,10,536,8],[495,14,536,14,"enemyY"],[495,20,536,20],[495,23,536,23,"enemy"],[495,28,536,28],[495,29,536,29,"position"],[495,37,536,37],[495,38,536,38,"y"],[495,39,536,39],[495,42,536,42],[495,46,536,46],[496,10,537,8],[496,14,537,14,"distance"],[496,22,537,22],[496,25,537,25,"Math"],[496,29,537,29],[496,30,537,30,"sqrt"],[496,34,537,34],[496,35,537,35,"Math"],[496,39,537,39],[496,40,537,40,"pow"],[496,43,537,43],[496,44,537,44,"enemyX"],[496,50,537,50],[496,53,537,53,"ninjaX"],[496,59,537,59],[496,61,537,61],[496,62,537,62],[496,63,537,63],[496,66,537,66,"Math"],[496,70,537,70],[496,71,537,71,"pow"],[496,74,537,74],[496,75,537,75,"enemyY"],[496,81,537,81],[496,84,537,84,"ninjaY"],[496,90,537,90],[496,92,537,92],[496,93,537,93],[496,94,537,94],[496,95,537,95],[497,10,538,8],[497,17,538,15,"distance"],[497,25,538,23],[497,29,538,27,"aoeRadius"],[497,38,538,36],[498,8,539,6],[498,9,539,7],[498,10,539,8],[499,8,541,6,"console"],[499,15,541,13],[499,16,541,14,"log"],[499,19,541,17],[499,20,541,18],[499,45,541,43,"enemiesInRange"],[499,59,541,57],[499,60,541,58,"length"],[499,66,541,64],[499,88,541,86,"aoeRadius"],[499,97,541,95],[499,107,541,105],[499,108,541,106],[501,8,543,6],[502,8,544,6,"enemiesInRange"],[502,22,544,20],[502,23,544,21,"forEach"],[502,30,544,28],[502,31,544,29,"enemy"],[502,36,544,34],[502,40,544,38],[503,10,545,8],[503,14,545,14,"damageResult"],[503,26,545,26],[503,29,545,29,"DamageCalculator"],[503,48,545,45],[503,49,545,45,"DamageCalculator"],[503,65,545,45],[503,66,545,46,"calculateDamage"],[503,81,545,61],[503,82,545,62,"damage"],[503,88,545,68],[503,90,545,70,"state"],[503,95,545,75],[503,96,545,76,"playerStats"],[503,107,545,87],[503,109,545,89,"enemy"],[503,114,545,94],[503,115,545,95,"stats"],[503,120,545,100],[503,121,545,101],[504,10,546,8,"createProjectile"],[504,26,546,24],[504,27,546,25,"enemy"],[504,32,546,30],[504,34,546,32,"damageResult"],[504,46,546,44],[504,47,546,45,"damage"],[504,53,546,51],[504,55,546,53,"currentNinjaPosition"],[504,75,546,73],[504,77,546,75],[505,12,547,10,"id"],[505,14,547,12],[505,16,547,14,"ability"],[505,23,547,21],[505,24,547,22,"id"],[505,26,547,24],[506,12,548,10,"name"],[506,16,548,14],[506,18,548,16,"ability"],[506,25,548,23],[506,26,548,24,"name"],[506,30,548,28],[507,12,549,10,"icon"],[507,16,549,14],[507,18,549,16,"ability"],[507,25,549,23],[507,26,549,24,"icon"],[508,10,550,8],[508,11,550,9],[508,12,550,10],[509,10,552,8,"console"],[509,17,552,15],[509,18,552,16,"log"],[509,21,552,19],[509,22,552,20],[509,37,552,35,"enemy"],[509,42,552,40],[509,43,552,41,"name"],[509,47,552,45],[509,55,552,53,"damageResult"],[509,67,552,65],[509,68,552,66,"damage"],[509,74,552,72],[509,83,552,81],[509,84,552,82],[510,8,553,6],[510,9,553,7],[510,10,553,8],[511,8,555,6,"console"],[511,15,555,13],[511,16,555,14,"log"],[511,19,555,17],[511,20,555,18],[511,26,555,24,"ability"],[511,33,555,31],[511,34,555,32,"name"],[511,38,555,36],[511,56,555,54,"enemiesInRange"],[511,70,555,68],[511,71,555,69,"length"],[511,77,555,75],[511,93,555,91,"damage"],[511,99,555,97],[511,118,555,116],[511,119,555,117],[512,6,557,4],[512,7,557,5],[512,13,557,11],[513,8,558,6],[514,8,559,6],[514,12,559,12,"target"],[514,18,559,18],[514,21,559,21,"findClosestEnemyInternal"],[514,45,559,45],[514,46,559,46,"state"],[514,51,559,51],[514,52,559,52,"enemies"],[514,59,559,59],[514,60,559,60],[515,8,560,6],[515,12,560,10],[515,13,560,11,"target"],[515,19,560,17],[515,21,560,19],[516,8,562,6],[516,12,562,12,"damageResult"],[516,24,562,24],[516,27,562,27,"DamageCalculator"],[516,46,562,43],[516,47,562,43,"DamageCalculator"],[516,63,562,43],[516,64,562,44,"calculateDamage"],[516,79,562,59],[516,80,562,60,"damage"],[516,86,562,66],[516,88,562,68,"state"],[516,93,562,73],[516,94,562,74,"playerStats"],[516,105,562,85],[516,107,562,87,"target"],[516,113,562,93],[516,114,562,94,"stats"],[516,119,562,99],[516,120,562,100],[518,8,564,6],[519,8,565,6,"createProjectile"],[519,24,565,22],[519,25,565,23,"target"],[519,31,565,29],[519,33,565,31,"damageResult"],[519,45,565,43],[519,46,565,44,"damage"],[519,52,565,50],[519,54,565,52,"currentNinjaPosition"],[519,74,565,72],[519,76,565,74],[520,10,566,8,"id"],[520,12,566,10],[520,14,566,12,"ability"],[520,21,566,19],[520,22,566,20,"id"],[520,24,566,22],[521,10,567,8,"name"],[521,14,567,12],[521,16,567,14,"ability"],[521,23,567,21],[521,24,567,22,"name"],[521,28,567,26],[522,10,568,8,"icon"],[522,14,568,12],[522,16,568,14,"ability"],[522,23,568,21],[522,24,568,22,"icon"],[523,8,569,6],[523,9,569,7],[523,10,569,8],[524,8,571,6,"console"],[524,15,571,13],[524,16,571,14,"log"],[524,19,571,17],[524,20,571,18],[524,26,571,24,"ability"],[524,33,571,31],[524,34,571,32,"name"],[524,38,571,36],[524,66,571,64,"damageResult"],[524,78,571,76],[524,79,571,77,"damage"],[524,85,571,83],[524,95,571,93,"damageResult"],[524,107,571,105],[524,108,571,106,"isCritical"],[524,118,571,116],[524,121,571,119],[524,131,571,129],[524,134,571,132],[524,136,571,134],[524,138,571,136],[524,139,571,137],[525,6,572,4],[527,6,574,4],[528,6,575,4],[528,10,575,8,"ability"],[528,17,575,15],[528,18,575,16,"effects"],[528,25,575,23],[528,26,575,24,"includes"],[528,34,575,32],[528,35,575,33],[528,40,575,38],[528,41,575,39],[528,45,575,43,"ability"],[528,52,575,50],[528,53,575,51,"stats"],[528,58,575,56],[528,59,575,57,"duration"],[528,67,575,65],[528,69,575,67],[529,8,576,6],[529,12,576,12,"targets"],[529,19,576,19],[529,22,576,22,"isAOE"],[529,27,576,27],[529,30,577,8,"state"],[529,35,577,13],[529,36,577,14,"enemies"],[529,43,577,21],[529,44,577,22,"filter"],[529,50,577,28],[529,51,577,29,"enemy"],[529,56,577,34],[529,60,577,38],[530,10,578,10],[530,14,578,16,"ninjaX"],[530,20,578,22],[530,23,578,25,"currentNinjaPosition"],[530,43,578,45],[530,44,578,46,"x"],[530,45,578,47],[530,48,578,50],[530,50,578,52],[531,10,579,10],[531,14,579,16,"ninjaY"],[531,20,579,22],[531,23,579,25,"currentNinjaPosition"],[531,43,579,45],[531,44,579,46,"y"],[531,45,579,47],[531,48,579,50],[531,50,579,52],[532,10,580,10],[532,14,580,16,"enemyX"],[532,20,580,22],[532,23,580,25,"enemy"],[532,28,580,30],[532,29,580,31,"position"],[532,37,580,39],[532,38,580,40,"x"],[532,39,580,41],[532,42,580,44],[532,46,580,48],[533,10,581,10],[533,14,581,16,"enemyY"],[533,20,581,22],[533,23,581,25,"enemy"],[533,28,581,30],[533,29,581,31,"position"],[533,37,581,39],[533,38,581,40,"y"],[533,39,581,41],[533,42,581,44],[533,46,581,48],[534,10,582,10],[534,14,582,16,"distance"],[534,22,582,24],[534,25,582,27,"Math"],[534,29,582,31],[534,30,582,32,"sqrt"],[534,34,582,36],[534,35,582,37,"Math"],[534,39,582,41],[534,40,582,42,"pow"],[534,43,582,45],[534,44,582,46,"enemyX"],[534,50,582,52],[534,53,582,55,"ninjaX"],[534,59,582,61],[534,61,582,63],[534,62,582,64],[534,63,582,65],[534,66,582,68,"Math"],[534,70,582,72],[534,71,582,73,"pow"],[534,74,582,76],[534,75,582,77,"enemyY"],[534,81,582,83],[534,84,582,86,"ninjaY"],[534,90,582,92],[534,92,582,94],[534,93,582,95],[534,94,582,96],[534,95,582,97],[535,10,583,10],[535,17,583,17,"distance"],[535,25,583,25],[535,29,583,29,"ability"],[535,36,583,36],[535,37,583,37,"stats"],[535,42,583,42],[535,43,583,43,"aoeRadius"],[535,52,583,52],[536,8,584,8],[536,9,584,9],[536,10,584,10],[536,13,585,8],[536,14,585,9,"findClosestEnemyInternal"],[536,38,585,33],[536,39,585,34,"state"],[536,44,585,39],[536,45,585,40,"enemies"],[536,52,585,47],[536,53,585,48],[536,54,585,49],[536,55,585,50,"filter"],[536,61,585,56],[536,62,585,57,"Boolean"],[536,69,585,64],[536,70,585,65],[537,8,587,6,"targets"],[537,15,587,13],[537,16,587,14,"forEach"],[537,23,587,21],[537,24,587,22,"target"],[537,30,587,28],[537,34,587,32],[538,10,588,8,"state"],[538,15,588,13],[538,16,588,14,"statusEffects"],[538,29,588,27],[538,30,588,28,"addEffect"],[538,39,588,37],[538,40,588,38,"target"],[538,46,588,44],[538,47,588,45,"id"],[538,49,588,47],[538,51,588,49],[539,12,589,10,"id"],[539,14,589,12],[539,16,589,14],[539,19,589,17,"ability"],[539,26,589,24],[539,27,589,25,"id"],[539,29,589,27],[539,35,589,33],[540,12,590,10,"type"],[540,16,590,14],[540,18,590,16],[540,23,590,21],[541,12,591,10,"remainingTicks"],[541,26,591,24],[541,28,591,26,"Math"],[541,32,591,30],[541,33,591,31,"floor"],[541,38,591,36],[541,39,591,37,"ability"],[541,46,591,44],[541,47,591,45,"stats"],[541,52,591,50],[541,53,591,51,"duration"],[541,61,591,59],[541,64,591,62],[541,66,591,64],[541,67,591,65],[542,12,592,10,"tickInterval"],[542,24,592,22],[542,26,592,24],[542,28,592,26],[543,12,593,10,"lastTick"],[543,20,593,18],[543,22,593,20,"state"],[543,27,593,25],[543,28,593,26,"currentTick"],[543,39,593,37],[544,12,594,10,"value"],[544,17,594,15],[544,19,594,17,"Math"],[544,23,594,21],[544,24,594,22,"floor"],[544,29,594,27],[544,30,594,28,"damage"],[544,36,594,34],[544,39,594,37],[544,42,594,40],[544,43,594,41],[545,12,595,10,"stackable"],[545,21,595,19],[545,23,595,21],[546,10,596,8],[546,11,596,9],[546,12,596,10],[547,8,597,6],[547,9,597,7],[547,10,597,8],[548,6,598,4],[550,6,600,4],[551,6,601,4],[551,10,601,8,"ability"],[551,17,601,15],[551,18,601,16,"effects"],[551,25,601,23],[551,26,601,24,"includes"],[551,34,601,32],[551,35,601,33],[551,41,601,39],[551,42,601,40],[551,46,601,44,"ability"],[551,53,601,51],[551,54,601,52,"id"],[551,56,601,54],[551,61,601,59],[551,75,601,73],[551,77,601,75],[552,8,602,6,"console"],[552,15,602,13],[552,16,602,14,"log"],[552,19,602,17],[552,20,602,18],[552,66,602,64,"ability"],[552,73,602,71],[552,74,602,72,"stats"],[552,79,602,77],[552,80,602,78,"duration"],[552,88,602,86],[552,98,602,96],[552,99,602,97],[554,8,604,6],[555,8,605,6],[555,12,605,12,"cloneX"],[555,18,605,18],[555,21,605,21,"currentNinjaPosition"],[555,41,605,41],[555,42,605,42,"x"],[555,43,605,43],[555,46,605,46],[555,48,605,48],[555,49,605,49],[555,50,605,50],[556,8,606,6],[556,12,606,12,"cloneY"],[556,18,606,18],[556,21,606,21,"currentNinjaPosition"],[556,41,606,41],[556,42,606,42,"y"],[556,43,606,43],[556,46,606,46],[556,48,606,48],[556,49,606,49],[556,50,606,50],[558,8,608,6,"state"],[558,13,608,11],[558,14,608,12,"shadowClone"],[558,25,608,23],[558,28,608,26],[559,10,609,8,"id"],[559,12,609,10],[559,14,609,12],[559,30,609,28,"Date"],[559,34,609,32],[559,35,609,33,"now"],[559,38,609,36],[559,39,609,37],[559,40,609,38],[559,42,609,40],[560,10,610,8,"remainingTicks"],[560,24,610,22],[560,26,610,24,"Math"],[560,30,610,28],[560,31,610,29,"floor"],[560,36,610,34],[560,37,610,35,"ability"],[560,44,610,42],[560,45,610,43,"stats"],[560,50,610,48],[560,51,610,49,"duration"],[560,59,610,57],[560,62,610,60],[560,64,610,62],[560,65,610,63],[561,10,610,65],[562,10,611,8,"position"],[562,18,611,16],[562,20,611,18],[563,12,611,20,"x"],[563,13,611,21],[563,15,611,23,"cloneX"],[563,21,611,29],[564,12,611,31,"y"],[564,13,611,32],[564,15,611,34,"cloneY"],[565,10,611,41],[565,11,611,42],[566,10,612,8,"damageMultiplier"],[566,26,612,24],[566,28,612,26],[566,31,612,29],[566,32,612,31],[567,8,613,6],[567,9,613,7],[568,8,615,6,"console"],[568,15,615,13],[568,16,615,14,"log"],[568,19,615,17],[568,20,615,18],[568,63,615,61,"ability"],[568,70,615,68],[568,71,615,69,"stats"],[568,76,615,74],[568,77,615,75,"duration"],[568,85,615,83],[568,108,615,106],[568,109,615,107],[569,6,616,4],[570,4,617,2],[570,5,617,3],[572,4,619,2],[573,4,620,2],[573,8,620,8,"createProjectile"],[573,24,620,24],[573,27,620,27,"createProjectile"],[573,28,620,28,"targetEnemy"],[573,39,620,52],[573,41,620,54,"damage"],[573,47,620,68],[573,49,620,70,"ninjaPos"],[573,57,620,103],[573,59,620,105,"abilityInfo"],[573,70,620,159],[573,75,620,164],[574,6,621,4],[574,10,621,10,"SCREEN_WIDTH"],[574,22,621,22],[574,25,621,25],[574,28,621,28],[575,6,622,4],[575,10,622,10,"GAME_AREA_HEIGHT"],[575,26,622,26],[575,29,622,29],[575,32,622,32],[575,35,622,35],[575,38,622,38],[575,39,622,39],[575,40,622,40],[576,6,623,4],[576,10,623,10,"NINJA_SIZE"],[576,20,623,20],[576,23,623,23],[576,25,623,25],[578,6,625,4],[579,6,626,4],[579,10,626,10,"ninjaX"],[579,16,626,16],[579,19,626,19,"ninjaPos"],[579,27,626,27],[579,30,626,30,"ninjaPos"],[579,38,626,38],[579,39,626,39,"x"],[579,40,626,40],[579,43,626,43,"NINJA_SIZE"],[579,53,626,53],[579,56,626,56],[579,57,626,57],[579,60,626,60,"SCREEN_WIDTH"],[579,72,626,72],[579,75,626,75],[579,76,626,76],[580,6,627,4],[580,10,627,10,"ninjaY"],[580,16,627,16],[580,19,627,19,"ninjaPos"],[580,27,627,27],[580,30,627,30,"ninjaPos"],[580,38,627,38],[580,39,627,39,"y"],[580,40,627,40],[580,43,627,43,"NINJA_SIZE"],[580,53,627,53],[580,56,627,56],[580,57,627,57],[580,60,627,60,"GAME_AREA_HEIGHT"],[580,76,627,76],[580,79,627,79],[580,80,627,80],[581,6,628,4],[581,10,628,10,"ENEMY_SIZE"],[581,20,628,20],[581,23,628,23],[581,25,628,25],[582,6,630,4],[582,10,630,10,"projectile"],[582,20,630,38],[582,23,630,41],[583,8,631,6,"id"],[583,10,631,8],[583,12,631,10],[583,20,631,18,"Date"],[583,24,631,22],[583,25,631,23,"now"],[583,28,631,26],[583,29,631,27],[583,30,631,28],[583,34,631,32,"Math"],[583,38,631,36],[583,39,631,37,"random"],[583,45,631,43],[583,46,631,44],[583,47,631,45],[583,49,631,47],[584,8,632,6,"x"],[584,9,632,7],[584,11,632,9,"ninjaX"],[584,17,632,15],[585,8,633,6,"y"],[585,9,633,7],[585,11,633,9,"ninjaY"],[585,17,633,15],[586,8,634,6,"targetX"],[586,15,634,13],[586,17,634,15,"targetEnemy"],[586,28,634,26],[586,29,634,27,"position"],[586,37,634,35],[586,38,634,36,"x"],[586,39,634,37],[586,42,634,40,"ENEMY_SIZE"],[586,52,634,50],[586,55,634,53],[586,56,634,54],[587,8,635,6,"targetY"],[587,15,635,13],[587,17,635,15,"targetEnemy"],[587,28,635,26],[587,29,635,27,"position"],[587,37,635,35],[587,38,635,36,"y"],[587,39,635,37],[587,42,635,40,"ENEMY_SIZE"],[587,52,635,50],[587,55,635,53],[587,56,635,54],[588,8,636,6,"targetEnemyId"],[588,21,636,19],[588,23,636,21,"targetEnemy"],[588,34,636,32],[588,35,636,33,"id"],[588,37,636,35],[589,8,637,6,"damage"],[589,14,637,12],[589,16,637,14,"damage"],[589,22,637,20],[590,8,638,6,"startTime"],[590,17,638,15],[590,19,638,17,"Date"],[590,23,638,21],[590,24,638,22,"now"],[590,27,638,25],[590,28,638,26],[590,29,638,27],[591,8,639,6,"duration"],[591,16,639,14],[591,18,639,16],[591,21,639,19],[592,8,639,21],[593,8,640,6],[594,8,641,6,"abilityId"],[594,17,641,15],[594,19,641,17,"abilityInfo"],[594,30,641,28],[594,32,641,30,"id"],[594,34,641,32],[594,38,641,36],[594,54,641,52],[595,8,642,6,"abilityName"],[595,19,642,17],[595,21,642,19,"abilityInfo"],[595,32,642,30],[595,34,642,32,"name"],[595,38,642,36],[595,42,642,40],[595,58,642,56],[596,8,643,6,"abilityIcon"],[596,19,643,17],[596,21,643,19,"abilityInfo"],[596,32,643,30],[596,34,643,32,"icon"],[596,38,643,36],[596,42,643,40],[596,46,643,44],[596,47,643,46],[597,6,644,4],[597,7,644,5],[598,6,646,4,"console"],[598,13,646,11],[598,14,646,12,"log"],[598,17,646,15],[598,18,646,16],[598,53,646,51,"targetEnemy"],[598,64,646,62],[598,65,646,63,"id"],[598,67,646,65],[598,75,646,73,"damage"],[598,81,646,79],[598,90,646,88],[598,91,646,89],[599,6,647,4,"console"],[599,13,647,11],[599,14,647,12,"log"],[599,17,647,15],[599,18,647,16],[599,53,647,51,"ninjaX"],[599,59,647,57],[599,64,647,62,"ninjaY"],[599,70,647,68],[599,87,647,85,"projectile"],[599,97,647,95],[599,98,647,96,"targetX"],[599,105,647,103],[599,110,647,108,"projectile"],[599,120,647,118],[599,121,647,119,"targetY"],[599,128,647,126],[599,131,647,129],[599,132,647,130],[600,6,649,4,"setProjectiles"],[600,20,649,18],[600,21,649,19,"prev"],[600,25,649,23],[600,29,649,27],[600,30,649,28],[600,33,649,31,"prev"],[600,37,649,35],[600,39,649,37,"projectile"],[600,49,649,47],[600,50,649,48],[600,51,649,49],[602,6,651,4],[603,6,652,4,"setTimeout"],[603,16,652,14],[603,17,652,15],[603,23,652,21],[604,8,653,6,"handleProjectileHit"],[604,27,653,25],[604,28,653,26,"projectile"],[604,38,653,36],[604,39,653,37],[605,6,654,4],[605,7,654,5],[605,9,654,7],[605,12,654,10],[605,13,654,11],[606,4,655,2],[606,5,655,3],[608,4,657,2],[609,4,658,2],[609,8,658,8,"spawnTestEnemy"],[609,22,658,22],[609,25,658,26,"state"],[609,30,658,44],[609,34,658,49],[610,6,659,4,"console"],[610,13,659,11],[610,14,659,12,"log"],[610,17,659,15],[610,18,659,16],[610,83,659,81],[610,84,659,82],[612,6,661,4],[613,6,662,4],[613,10,662,10,"zoneEnemy"],[613,19,662,19],[613,22,662,22,"spawnZoneEnemy"],[613,36,662,36],[613,37,662,37],[613,38,662,38],[614,6,663,4],[614,10,663,8],[614,11,663,9,"zoneEnemy"],[614,20,663,18],[614,22,663,20],[615,8,664,6,"console"],[615,15,664,13],[615,16,664,14,"log"],[615,19,664,17],[615,20,664,18],[615,76,664,74],[615,77,664,75],[616,8,665,6],[617,8,666,6,"spawnBasicTestEnemy"],[617,27,666,25],[617,28,666,26,"state"],[617,33,666,31],[617,34,666,32],[618,8,667,6],[619,6,668,4],[620,6,670,4,"console"],[620,13,670,11],[620,14,670,12,"log"],[620,17,670,15],[620,18,670,16],[620,44,670,42,"zoneEnemy"],[620,53,670,51],[620,54,670,52,"name"],[620,58,670,56],[620,63,670,61,"zoneEnemy"],[620,72,670,70],[620,73,670,71,"typeId"],[620,79,670,77],[620,94,670,92,"currentZone"],[620,105,670,103],[620,107,670,105,"id"],[620,109,670,107],[620,119,670,117,"currentZoneLevel"],[620,135,670,133],[620,137,670,135,"level"],[620,142,670,140],[620,144,670,142],[620,145,670,143],[622,6,672,4],[623,6,673,4],[623,10,673,10,"combatEnemy"],[623,21,673,34],[623,24,673,37],[624,8,674,6,"id"],[624,10,674,8],[624,12,674,10,"zoneEnemy"],[624,21,674,19],[624,22,674,20,"id"],[624,24,674,22],[625,8,675,6,"name"],[625,12,675,10],[625,14,675,12,"zoneEnemy"],[625,23,675,21],[625,24,675,22,"name"],[625,28,675,26],[626,8,676,6,"health"],[626,14,676,12],[626,16,676,14,"zoneEnemy"],[626,25,676,23],[626,26,676,24,"hp"],[626,28,676,26],[627,8,677,6,"maxHealth"],[627,17,677,15],[627,19,677,17,"zoneEnemy"],[627,28,677,26],[627,29,677,27,"maxHP"],[627,34,677,32],[628,8,678,6,"stats"],[628,13,678,11],[628,15,678,13],[629,10,679,8,"attack"],[629,16,679,14],[629,18,679,16,"zoneEnemy"],[629,27,679,25],[629,28,679,26,"attack"],[629,34,679,32],[630,10,680,8,"defense"],[630,17,680,15],[630,19,680,17],[630,21,680,19],[631,10,680,21],[632,10,681,8,"health"],[632,16,681,14],[632,18,681,16,"zoneEnemy"],[632,27,681,25],[632,28,681,26,"hp"],[632,30,681,28],[633,10,682,8,"maxHealth"],[633,19,682,17],[633,21,682,19,"zoneEnemy"],[633,30,682,28],[633,31,682,29,"maxHP"],[633,36,682,34],[634,10,683,8,"critChance"],[634,20,683,18],[634,22,683,20],[634,23,683,21],[635,10,684,8,"critDamage"],[635,20,684,18],[635,22,684,20],[635,25,684,23],[636,10,685,8,"cooldownReduction"],[636,27,685,25],[636,29,685,27],[637,8,686,6],[637,9,686,7],[638,8,687,6,"position"],[638,16,687,14],[638,18,687,16,"zoneEnemy"],[638,27,687,25],[638,28,687,26,"position"],[638,36,687,34],[639,8,688,6,"lastDamaged"],[639,19,688,17],[639,21,688,19],[639,22,688,20],[640,8,689,6],[641,8,690,6,"zoneTypeId"],[641,18,690,16],[641,20,690,18,"zoneEnemy"],[641,29,690,27],[641,30,690,28,"typeId"],[641,36,690,34],[642,8,691,6,"zoneXP"],[642,14,691,12],[642,16,691,14,"zoneEnemy"],[642,25,691,23],[642,26,691,24,"xp"],[643,6,692,4],[643,7,692,5],[644,6,694,4,"console"],[644,13,694,11],[644,14,694,12,"log"],[644,17,694,15],[644,18,694,16],[644,42,694,40,"combatEnemy"],[644,53,694,51],[644,54,694,52,"name"],[644,58,694,56],[644,67,694,65,"combatEnemy"],[644,78,694,76],[644,79,694,77,"health"],[644,85,694,83],[644,100,694,98,"currentZone"],[644,111,694,109],[644,113,694,111,"id"],[644,115,694,113],[644,125,694,123,"currentZoneLevel"],[644,141,694,139],[644,143,694,141,"level"],[644,148,694,146],[644,150,694,148],[644,151,694,149],[645,6,695,4,"state"],[645,11,695,9],[645,12,695,10,"enemies"],[645,19,695,17],[645,20,695,18,"push"],[645,24,695,22],[645,25,695,23,"combatEnemy"],[645,36,695,34],[645,37,695,35],[646,4,696,2],[646,5,696,3],[648,4,698,2],[649,4,699,2],[649,8,699,8,"spawnBasicTestEnemy"],[649,27,699,27],[649,30,699,31,"state"],[649,35,699,49],[649,39,699,54],[650,6,700,4],[650,10,700,10,"SCREEN_WIDTH"],[650,22,700,22],[650,25,700,25],[650,28,700,28],[651,6,701,4],[651,10,701,10,"GAME_AREA_HEIGHT"],[651,26,701,26],[651,29,701,29],[651,32,701,32],[651,35,701,35],[651,38,701,38],[652,6,702,4],[652,10,702,10,"ENEMY_SIZE"],[652,20,702,20],[652,23,702,23],[652,25,702,25],[653,6,704,4],[653,10,704,10,"x"],[653,11,704,11],[653,14,704,14,"Math"],[653,18,704,18],[653,19,704,19,"random"],[653,25,704,25],[653,26,704,26],[653,27,704,27],[653,31,704,31,"SCREEN_WIDTH"],[653,43,704,43],[653,46,704,46,"ENEMY_SIZE"],[653,56,704,56],[653,59,704,59],[653,60,704,60],[653,61,704,61],[653,64,704,64,"ENEMY_SIZE"],[653,74,704,74],[654,6,705,4],[654,10,705,10,"y"],[654,11,705,11],[654,14,705,14,"Math"],[654,18,705,18],[654,19,705,19,"random"],[654,25,705,25],[654,26,705,26],[654,27,705,27],[654,31,705,31,"GAME_AREA_HEIGHT"],[654,47,705,47],[654,50,705,50,"ENEMY_SIZE"],[654,60,705,60],[654,63,705,63],[654,64,705,64],[654,65,705,65],[654,68,705,68,"ENEMY_SIZE"],[654,78,705,78],[655,6,707,4],[655,10,707,10,"enemy"],[655,15,707,28],[655,18,707,31],[656,8,708,6,"id"],[656,10,708,8],[656,12,708,10],[656,30,708,28,"Date"],[656,34,708,32],[656,35,708,33,"now"],[656,38,708,36],[656,39,708,37],[656,40,708,38],[656,44,708,42,"Math"],[656,48,708,46],[656,49,708,47,"random"],[656,55,708,53],[656,56,708,54],[656,57,708,55],[656,59,708,57],[657,8,709,6,"name"],[657,12,709,10],[657,14,709,12],[657,26,709,24,"Math"],[657,30,709,28],[657,31,709,29,"floor"],[657,36,709,34],[657,37,709,35,"Math"],[657,41,709,39],[657,42,709,40,"random"],[657,48,709,46],[657,49,709,47],[657,50,709,48],[657,53,709,51],[657,56,709,54],[657,57,709,55],[657,59,709,57],[658,8,710,6,"health"],[658,14,710,12],[658,16,710,14],[658,18,710,16],[659,8,711,6,"maxHealth"],[659,17,711,15],[659,19,711,17],[659,21,711,19],[660,8,712,6,"stats"],[660,13,712,11],[660,15,712,13],[661,10,713,8,"attack"],[661,16,713,14],[661,18,713,16],[661,20,713,18],[662,10,714,8,"defense"],[662,17,714,15],[662,19,714,17],[662,21,714,19],[663,10,715,8,"health"],[663,16,715,14],[663,18,715,16],[663,20,715,18],[664,10,716,8,"maxHealth"],[664,19,716,17],[664,21,716,19],[664,23,716,21],[665,10,717,8,"critChance"],[665,20,717,18],[665,22,717,20],[665,23,717,21],[666,10,718,8,"critDamage"],[666,20,718,18],[666,22,718,20],[666,25,718,23],[667,10,719,8,"cooldownReduction"],[667,27,719,25],[667,29,719,27],[668,8,720,6],[668,9,720,7],[669,8,721,6,"position"],[669,16,721,14],[669,18,721,16],[670,10,721,18,"x"],[670,11,721,19],[671,10,721,21,"y"],[672,8,721,23],[672,9,721,24],[673,8,722,6,"lastDamaged"],[673,19,722,17],[673,21,722,19],[674,6,723,4],[674,7,723,5],[675,6,725,4,"console"],[675,13,725,11],[675,14,725,12,"log"],[675,17,725,15],[675,18,725,16],[675,42,725,40,"enemy"],[675,47,725,45],[675,48,725,46,"name"],[675,52,725,50],[675,60,725,58,"Math"],[675,64,725,62],[675,65,725,63,"round"],[675,70,725,68],[675,71,725,69,"x"],[675,72,725,70],[675,73,725,71],[675,78,725,76,"Math"],[675,82,725,80],[675,83,725,81,"round"],[675,88,725,86],[675,89,725,87,"y"],[675,90,725,88],[675,91,725,89],[675,94,725,92],[675,95,725,93],[676,6,726,4,"state"],[676,11,726,9],[676,12,726,10,"enemies"],[676,19,726,17],[676,20,726,18,"push"],[676,24,726,22],[676,25,726,23,"enemy"],[676,30,726,28],[676,31,726,29],[677,4,727,2],[677,5,727,3],[679,4,729,2],[680,4,730,2],[680,8,730,8,"startCombat"],[680,19,730,19],[680,22,730,22,"React"],[680,27,730,27],[680,28,730,27,"default"],[680,35,730,27],[680,36,730,28,"useCallback"],[680,47,730,39],[680,48,730,40],[680,54,730,46],[681,6,731,4,"console"],[681,13,731,11],[681,14,731,12,"log"],[681,17,731,15],[681,18,731,16],[681,63,731,61],[681,64,731,62],[682,6,732,4,"setCombatState"],[682,20,732,18],[682,21,732,19,"prev"],[682,25,732,23],[682,30,732,28],[683,8,732,30],[683,11,732,33,"prev"],[683,15,732,37],[684,8,732,39,"isInCombat"],[684,18,732,49],[684,20,732,51],[685,6,732,56],[685,7,732,57],[685,8,732,58],[685,9,732,59],[687,6,734,4],[688,6,735,4,"combatEngine"],[688,25,735,16],[688,26,735,16,"combatEngine"],[688,38,735,16],[688,39,735,17,"addTickCallback"],[688,54,735,32],[688,55,735,33,"handleCombatTick"],[688,71,735,49],[688,72,735,50],[689,6,736,4,"console"],[689,13,736,11],[689,14,736,12,"log"],[689,17,736,15],[689,18,736,16],[689,62,736,60],[689,63,736,61],[691,6,738,4],[692,6,739,4,"combatEngine"],[692,25,739,16],[692,26,739,16,"combatEngine"],[692,38,739,16],[692,39,739,17,"start"],[692,44,739,22],[692,45,739,23],[692,46,739,24],[693,4,740,2],[693,5,740,3],[693,7,740,5],[693,8,740,6,"combatEngine"],[693,27,740,18],[693,28,740,18,"combatEngine"],[693,40,740,18],[693,42,740,20,"handleCombatTick"],[693,58,740,36],[693,59,740,37],[693,60,740,38],[695,4,742,2],[696,4,743,2],[696,8,743,8,"stopCombat"],[696,18,743,18],[696,21,743,21,"React"],[696,26,743,26],[696,27,743,26,"default"],[696,34,743,26],[696,35,743,27,"useCallback"],[696,46,743,38],[696,47,743,39],[696,53,743,45],[697,6,744,4,"setCombatState"],[697,20,744,18],[697,21,744,19,"prev"],[697,25,744,23],[697,30,744,28],[698,8,744,30],[698,11,744,33,"prev"],[698,15,744,37],[699,8,744,39,"isInCombat"],[699,18,744,49],[699,20,744,51],[700,6,744,57],[700,7,744,58],[700,8,744,59],[700,9,744,60],[701,6,745,4,"combatEngine"],[701,25,745,16],[701,26,745,16,"combatEngine"],[701,38,745,16],[701,39,745,17,"removeTickCallback"],[701,57,745,35],[701,58,745,36,"handleCombatTick"],[701,74,745,52],[701,75,745,53],[702,4,746,2],[702,5,746,3],[702,7,746,5],[702,8,746,6,"combatEngine"],[702,27,746,18],[702,28,746,18,"combatEngine"],[702,40,746,18],[702,42,746,20,"handleCombatTick"],[702,58,746,36],[702,59,746,37],[702,60,746,38],[704,4,748,2],[705,4,749,2],[705,8,749,8,"equipAbility"],[705,20,749,20],[705,23,749,23,"equipAbility"],[705,24,749,24,"abilityId"],[705,33,749,41],[705,35,749,43,"slotIndex"],[705,44,749,60],[705,49,749,74],[706,6,750,4],[706,13,750,11,"combatState"],[706,24,750,22],[706,25,750,23,"abilityManager"],[706,39,750,37],[706,40,750,38,"equipAbility"],[706,52,750,50],[706,53,750,51,"abilityId"],[706,62,750,60],[706,64,750,62,"slotIndex"],[706,73,750,71],[706,74,750,72],[707,4,751,2],[707,5,751,3],[708,4,753,2],[708,8,753,8,"getDeck"],[708,15,753,15],[708,18,753,18,"getDeck"],[708,19,753,18],[708,24,753,24],[709,6,754,4],[709,13,754,11,"combatState"],[709,24,754,22],[709,25,754,23,"abilityManager"],[709,39,754,37],[709,40,754,38,"getDeck"],[709,47,754,45],[709,48,754,46],[709,49,754,47],[710,4,755,2],[710,5,755,3],[711,4,757,2],[711,8,757,8,"getAvailableAbilities"],[711,29,757,29],[711,32,757,32,"getAvailableAbilities"],[711,33,757,32],[711,38,757,38],[712,6,758,4],[712,13,758,11,"combatState"],[712,24,758,22],[712,25,758,23,"abilityManager"],[712,39,758,37],[712,40,758,38,"getAvailableAbilities"],[712,61,758,59],[712,62,758,60],[712,63,758,61],[713,4,759,2],[713,5,759,3],[714,4,761,2],[714,8,761,8,"upgradeAbility"],[714,22,761,22],[714,25,761,26,"abilityId"],[714,34,761,43],[714,38,761,57],[715,6,762,4],[715,13,762,11,"combatState"],[715,24,762,22],[715,25,762,23,"abilityManager"],[715,39,762,37],[715,40,762,38,"upgradeAbility"],[715,54,762,52],[715,55,762,53,"abilityId"],[715,64,762,62],[715,65,762,63],[716,4,763,2],[716,5,763,3],[718,4,765,2],[719,4,766,2],[719,8,766,8,"clearAllEnemies"],[719,23,766,23],[719,26,766,26,"clearAllEnemies"],[719,27,766,26],[719,32,766,32],[720,6,767,4,"console"],[720,13,767,11],[720,14,767,12,"log"],[720,17,767,15],[720,18,767,16],[720,67,767,65],[720,68,767,66],[721,6,768,4,"setCombatState"],[721,20,768,18],[721,21,768,19,"prev"],[721,25,768,23],[721,30,768,28],[722,8,769,6],[722,11,769,9,"prev"],[722,15,769,13],[723,8,770,6,"enemies"],[723,15,770,13],[723,17,770,15],[724,6,771,4],[724,7,771,5],[724,8,771,6],[724,9,771,7],[725,4,772,2],[725,5,772,3],[727,4,774,2],[728,4,775,2],[728,8,775,8,"triggerLevelUpExplosion"],[728,31,775,31],[728,34,775,34,"triggerLevelUpExplosion"],[728,35,775,34],[728,40,775,40],[729,6,776,4,"console"],[729,13,776,11],[729,14,776,12,"log"],[729,17,776,15],[729,18,776,16],[729,70,776,68],[729,71,776,69],[730,6,778,4],[730,10,778,10,"explosionTime"],[730,23,778,23],[730,26,778,26,"Date"],[730,30,778,30],[730,31,778,31,"now"],[730,34,778,34],[730,35,778,35],[730,36,778,36],[731,6,779,4,"setLastExplosionTime"],[731,26,779,24],[731,27,779,25,"explosionTime"],[731,40,779,38],[731,41,779,39],[732,6,781,4,"setCombatState"],[732,20,781,18],[732,21,781,19,"prev"],[732,25,781,23],[732,29,781,27],[733,8,782,6],[734,8,783,6],[734,12,783,12,"enemyCount"],[734,22,783,22],[734,25,783,25,"prev"],[734,29,783,29],[734,30,783,30,"enemies"],[734,37,783,37],[734,38,783,38,"length"],[734,44,783,44],[735,8,784,6],[735,12,784,12,"explosionXP"],[735,23,784,23],[735,26,784,26,"enemyCount"],[735,36,784,36],[735,39,784,39],[735,42,784,42],[735,43,784,43],[735,44,784,44],[736,8,785,6],[736,12,785,12,"explosionGold"],[736,25,785,25],[736,28,785,28,"enemyCount"],[736,38,785,38],[736,41,785,41],[736,44,785,44],[736,45,785,45],[736,46,785,46],[738,8,787,6,"console"],[738,15,787,13],[738,16,787,14,"log"],[738,19,787,17],[738,20,787,18],[738,44,787,42,"enemyCount"],[738,54,787,52],[738,76,787,74,"explosionXP"],[738,87,787,85],[738,98,787,96,"explosionGold"],[738,111,787,109],[738,118,787,116],[738,119,787,117],[740,8,789,6],[741,8,790,6],[741,12,790,10,"explosionXP"],[741,23,790,21],[741,26,790,24],[741,27,790,25],[741,29,790,27],[742,10,791,8,"setTimeout"],[742,20,791,18],[742,21,791,19],[742,27,791,25],[743,12,792,10,"game"],[743,16,792,14],[743,17,792,15,"updateNinja"],[743,28,792,26],[743,29,792,28,"ninja"],[743,34,792,33],[743,39,792,39],[744,14,793,12,"experience"],[744,24,793,22],[744,26,793,24,"ninja"],[744,31,793,29],[744,32,793,30,"experience"],[744,42,793,40],[744,45,793,43,"explosionXP"],[744,56,793,54],[745,14,794,12,"gold"],[745,18,794,16],[745,20,794,18,"ninja"],[745,25,794,23],[745,26,794,24,"gold"],[745,30,794,28],[745,33,794,31,"explosionGold"],[746,12,795,10],[746,13,795,11],[746,14,795,12],[746,15,795,13],[747,10,796,8],[747,11,796,9],[747,13,796,11],[747,14,796,12],[747,15,796,13],[747,16,796,14],[747,17,796,15],[748,8,797,6],[750,8,799,6],[751,8,800,6],[752,8,801,6],[752,12,801,12,"damagedEnemies"],[752,26,801,26],[752,29,801,29,"prev"],[752,33,801,33],[752,34,801,34,"enemies"],[752,41,801,41],[752,42,801,42,"map"],[752,45,801,45],[752,46,801,46,"enemy"],[752,51,801,51],[752,56,801,56],[753,10,802,8],[753,13,802,11,"enemy"],[753,18,802,16],[754,10,803,8,"health"],[754,16,803,14],[754,18,803,16],[754,19,803,17],[755,10,803,19],[756,10,804,8,"lastDamaged"],[756,21,804,19],[756,23,804,21,"combatEngine"],[756,42,804,33],[756,43,804,33,"combatEngine"],[756,55,804,33],[756,56,804,34,"getCurrentTick"],[756,70,804,48],[756,71,804,49],[757,8,805,6],[757,9,805,7],[757,10,805,8],[757,11,805,9],[758,8,807,6],[758,15,807,13],[759,10,808,8],[759,13,808,11,"prev"],[759,17,808,15],[760,10,809,8,"enemies"],[760,17,809,15],[760,19,809,17,"damagedEnemies"],[761,8,810,6],[761,9,810,7],[762,6,811,4],[762,7,811,5],[762,8,811,6],[763,4,812,2],[763,5,812,3],[765,4,814,2],[766,4,815,2],[766,8,815,8,"spawnEnemy"],[766,18,815,18],[766,21,815,22,"position"],[766,29,815,57],[766,33,815,75],[767,6,816,4],[767,10,816,10,"SCREEN_WIDTH"],[767,22,816,22],[767,25,816,25],[767,28,816,28],[768,6,817,4],[768,10,817,10,"GAME_AREA_HEIGHT"],[768,26,817,26],[768,29,817,29],[768,32,817,32],[768,35,817,35],[768,38,817,38],[768,39,817,39],[768,40,817,40],[769,6,818,4],[769,10,818,10,"ENEMY_SIZE"],[769,20,818,20],[769,23,818,23],[769,25,818,25],[771,6,820,4],[772,6,821,4],[772,10,821,10,"x"],[772,11,821,11],[772,14,821,14,"position"],[772,22,821,22],[772,24,821,24,"x"],[772,25,821,25],[772,29,821,29,"Math"],[772,33,821,33],[772,34,821,34,"random"],[772,40,821,40],[772,41,821,41],[772,42,821,42],[772,46,821,46,"SCREEN_WIDTH"],[772,58,821,58],[772,61,821,61,"ENEMY_SIZE"],[772,71,821,71],[772,74,821,74],[772,75,821,75],[772,76,821,76],[772,79,821,79,"ENEMY_SIZE"],[772,89,821,89],[773,6,822,4],[773,10,822,10,"y"],[773,11,822,11],[773,14,822,14,"position"],[773,22,822,22],[773,24,822,24,"y"],[773,25,822,25],[773,29,822,29,"Math"],[773,33,822,33],[773,34,822,34,"random"],[773,40,822,40],[773,41,822,41],[773,42,822,42],[773,46,822,46,"GAME_AREA_HEIGHT"],[773,62,822,62],[773,65,822,65,"ENEMY_SIZE"],[773,75,822,75],[773,78,822,78],[773,79,822,79],[773,80,822,80],[773,83,822,83,"ENEMY_SIZE"],[773,93,822,93],[774,6,824,4],[774,10,824,10,"enemy"],[774,15,824,28],[774,18,824,31],[775,8,825,6,"id"],[775,10,825,8],[775,12,825,10],[775,21,825,19],[775,23,825,21,"enemyCounter"],[775,35,825,33],[775,37,825,35],[776,8,826,6,"name"],[776,12,826,10],[776,14,826,12],[776,24,826,22],[777,8,827,6,"health"],[777,14,827,12],[777,16,827,14],[777,19,827,17],[778,8,828,6,"maxHealth"],[778,17,828,15],[778,19,828,17],[778,22,828,20],[779,8,829,6,"stats"],[779,13,829,11],[779,15,829,13],[780,10,830,8,"attack"],[780,16,830,14],[780,18,830,16],[780,20,830,18],[781,10,831,8,"defense"],[781,17,831,15],[781,19,831,17],[781,21,831,19],[782,10,832,8,"health"],[782,16,832,14],[782,18,832,16],[782,21,832,19],[783,10,833,8,"maxHealth"],[783,19,833,17],[783,21,833,19],[783,24,833,22],[784,10,834,8,"critChance"],[784,20,834,18],[784,22,834,20],[784,23,834,21],[785,10,835,8,"critDamage"],[785,20,835,18],[785,22,835,20],[785,25,835,23],[786,10,836,8,"cooldownReduction"],[786,27,836,25],[786,29,836,27],[787,8,837,6],[787,9,837,7],[788,8,838,6,"position"],[788,16,838,14],[788,18,838,16],[789,10,838,18,"x"],[789,11,838,19],[790,10,838,21,"y"],[791,8,838,23],[791,9,838,24],[792,8,839,6,"lastDamaged"],[792,19,839,17],[792,21,839,19],[793,6,840,4],[793,7,840,5],[794,6,842,4,"setCombatState"],[794,20,842,18],[794,21,842,19,"prev"],[794,25,842,23],[794,30,842,28],[795,8,843,6],[795,11,843,9,"prev"],[795,15,843,13],[796,8,844,6,"enemies"],[796,15,844,13],[796,17,844,15],[796,18,844,16],[796,21,844,19,"prev"],[796,25,844,23],[796,26,844,24,"enemies"],[796,33,844,31],[796,35,844,33,"enemy"],[796,40,844,38],[797,6,845,4],[797,7,845,5],[797,8,845,6],[797,9,845,7],[798,6,847,4],[798,13,847,11,"enemy"],[798,18,847,16],[799,4,848,2],[799,5,848,3],[801,4,850,2],[802,4,851,2],[802,8,851,8,"spawnBoss"],[802,17,851,17],[802,20,851,21,"bossEnemy"],[802,29,851,43],[802,33,851,48],[803,6,852,4,"console"],[803,13,852,11],[803,14,852,12,"log"],[803,17,852,15],[803,18,852,16],[803,39,852,37,"bossEnemy"],[803,48,852,46],[803,49,852,47,"name"],[803,53,852,51],[803,90,852,88],[803,91,852,89],[804,6,853,4,"setCombatState"],[804,20,853,18],[804,21,853,19,"prev"],[804,25,853,23],[804,30,853,28],[805,8,854,6],[805,11,854,9,"prev"],[805,15,854,13],[806,8,855,6,"enemies"],[806,15,855,13],[806,17,855,15],[806,18,855,16,"bossEnemy"],[806,27,855,25],[806,28,855,26],[806,29,855,27],[807,6,856,4],[807,7,856,5],[807,8,856,6],[807,9,856,7],[808,4,857,2],[808,5,857,3],[810,4,859,2],[811,4,860,2],[811,8,860,8,"clearSpecificEnemy"],[811,26,860,26],[811,29,860,30,"enemyId"],[811,36,860,45],[811,40,860,50],[812,6,861,4,"setCombatState"],[812,20,861,18],[812,21,861,19,"prev"],[812,25,861,23],[812,30,861,28],[813,8,862,6],[813,11,862,9,"prev"],[813,15,862,13],[814,8,863,6,"enemies"],[814,15,863,13],[814,17,863,15,"prev"],[814,21,863,19],[814,22,863,20,"enemies"],[814,29,863,27],[814,30,863,28,"filter"],[814,36,863,34],[814,37,863,35,"enemy"],[814,42,863,40],[814,46,863,44,"enemy"],[814,51,863,49],[814,52,863,50,"id"],[814,54,863,52],[814,59,863,57,"enemyId"],[814,66,863,64],[815,6,864,4],[815,7,864,5],[815,8,864,6],[815,9,864,7],[816,4,865,2],[816,5,865,3],[818,4,867,2],[819,4,868,2],[819,8,868,8,"useAbilityManually"],[819,26,868,26],[819,29,868,26,"_s3"],[819,32,868,26],[819,33,868,29],[819,37,868,29,"useCallback"],[819,43,868,40],[819,44,868,40,"useCallback"],[819,55,868,40],[819,57,868,40,"_s3"],[819,60,868,40],[819,61,868,42,"slotIndex"],[819,70,868,59],[819,74,868,73],[820,6,868,73,"_s3"],[820,9,868,73],[821,6,869,4,"console"],[821,13,869,11],[821,14,869,12,"log"],[821,17,869,15],[821,18,869,16],[821,53,869,51,"slotIndex"],[821,62,869,60],[821,64,869,62],[821,65,869,63],[823,6,871,4],[824,6,872,4],[824,10,872,10,"isReady"],[824,17,872,17],[824,20,872,20,"combatState"],[824,31,872,31],[824,32,872,32,"abilityManager"],[824,46,872,46],[824,47,872,47,"isAbilityReady"],[824,61,872,61],[824,62,872,62,"slotIndex"],[824,71,872,71],[824,72,872,72],[825,6,873,4],[825,10,873,8],[825,11,873,9,"isReady"],[825,18,873,16],[825,20,873,18],[826,8,874,6,"console"],[826,15,874,13],[826,16,874,14,"log"],[826,19,874,17],[826,20,874,18],[826,41,874,39,"slotIndex"],[826,50,874,48],[826,85,874,83],[826,86,874,84],[827,8,875,6],[827,15,875,13],[827,20,875,18],[828,6,876,4],[830,6,878,4],[831,6,879,4],[831,10,879,8,"combatState"],[831,21,879,19],[831,22,879,20,"enemies"],[831,29,879,27],[831,30,879,28,"length"],[831,36,879,34],[831,41,879,39],[831,42,879,40],[831,44,879,42],[832,8,880,6,"console"],[832,15,880,13],[832,16,880,14,"log"],[832,19,880,17],[832,20,880,18],[832,69,880,67],[832,70,880,68],[833,8,881,6],[833,15,881,13],[833,20,881,18],[834,6,882,4],[836,6,884,4],[837,6,885,4],[837,10,885,10,"currentTick"],[837,21,885,21],[837,24,885,24,"combatEngine"],[837,43,885,36],[837,44,885,36,"combatEngine"],[837,56,885,36],[837,57,885,37,"getCurrentTick"],[837,71,885,51],[837,72,885,52],[837,73,885,53],[838,6,886,4],[838,10,886,10,"success"],[838,17,886,17],[838,20,886,20,"combatState"],[838,31,886,31],[838,32,886,32,"abilityManager"],[838,46,886,46],[838,47,886,47,"useAbility"],[838,57,886,57],[838,58,886,58,"slotIndex"],[838,67,886,67],[838,69,886,69,"currentTick"],[838,80,886,80],[838,81,886,81],[839,6,888,4],[839,10,888,8,"success"],[839,17,888,15],[839,19,888,17],[840,8,889,6],[841,8,890,6,"setCombatState"],[841,22,890,20],[841,23,890,21,"prev"],[841,27,890,25],[841,31,890,29],[842,10,891,8],[842,14,891,14,"newState"],[842,22,891,22],[842,25,891,25],[843,12,891,27],[843,15,891,30,"prev"],[844,10,891,35],[844,11,891,36],[845,10,892,8,"castAbility"],[845,21,892,19],[845,22,892,20,"newState"],[845,30,892,28],[845,32,892,30,"slotIndex"],[845,41,892,39],[845,42,892,40],[846,10,893,8],[846,17,893,15,"newState"],[846,25,893,23],[847,8,894,6],[847,9,894,7],[847,10,894,8],[848,8,896,6,"console"],[848,15,896,13],[848,16,896,14,"log"],[848,19,896,17],[848,20,896,18],[848,65,896,63,"slotIndex"],[848,74,896,72],[848,76,896,74],[848,77,896,75],[849,8,897,6],[849,15,897,13],[849,19,897,17],[850,6,898,4],[850,7,898,5],[850,13,898,11],[851,8,899,6,"console"],[851,15,899,13],[851,16,899,14,"log"],[851,19,899,17],[851,20,899,18],[851,61,899,59,"slotIndex"],[851,70,899,68],[851,72,899,70],[851,73,899,71],[852,8,900,6],[852,15,900,13],[852,20,900,18],[853,6,901,4],[854,4,902,2],[854,5,902,3],[854,46,902,5],[854,47,902,6,"combatState"],[854,58,902,17],[854,59,902,18,"abilityManager"],[854,73,902,32],[854,75,902,34,"combatState"],[854,86,902,45],[854,87,902,46,"enemies"],[854,94,902,53],[854,95,902,54],[854,96,902,55],[855,4,903,2],[855,8,903,2,"useEffect"],[855,14,903,11],[855,15,903,11,"useEffect"],[855,24,903,11],[855,26,903,12],[855,32,903,18],[856,6,904,4,"combatEngine"],[856,25,904,16],[856,26,904,16,"combatEngine"],[856,38,904,16],[856,39,904,17,"start"],[856,44,904,22],[856,45,904,23],[856,46,904,24],[858,6,906,4],[859,6,907,4],[860,6,908,4,"console"],[860,13,908,11],[860,14,908,12,"log"],[860,17,908,15],[860,18,908,16],[860,97,908,95],[860,98,908,96],[861,6,910,4],[861,13,910,11],[861,19,910,17],[862,8,911,6,"combatEngine"],[862,27,911,18],[862,28,911,18,"combatEngine"],[862,40,911,18],[862,41,911,19,"stop"],[862,45,911,23],[862,46,911,24],[862,47,911,25],[863,6,912,4],[863,7,912,5],[864,4,913,2],[864,5,913,3],[864,7,913,5],[864,9,913,7],[864,10,913,8],[866,4,915,2],[867,4,916,2],[867,8,916,2,"useEffect"],[867,14,916,11],[867,15,916,11,"useEffect"],[867,24,916,11],[867,26,916,12],[867,32,916,18],[868,6,917,4],[868,10,917,10,"processProjectileImpacts"],[868,34,917,34],[868,37,917,37,"processProjectileImpacts"],[868,38,917,37],[868,43,917,43],[869,8,918,6,"setProjectiles"],[869,22,918,20],[869,23,918,21,"currentProjectiles"],[869,41,918,39],[869,45,918,43],[870,10,919,8],[870,17,919,15,"currentProjectiles"],[870,35,919,33],[870,36,919,34,"map"],[870,39,919,37],[870,40,919,38,"projectile"],[870,50,919,48],[870,54,919,52],[871,12,920,10],[871,16,920,14],[871,17,920,15,"projectile"],[871,27,920,25],[871,29,920,27],[871,36,920,34],[871,40,920,38],[873,12,922,10],[874,12,923,10],[874,16,923,16,"currentTime"],[874,27,923,27],[874,30,923,30,"Date"],[874,34,923,34],[874,35,923,35,"now"],[874,38,923,38],[874,39,923,39],[874,40,923,40],[875,12,924,10],[875,16,924,16,"startTime"],[875,25,924,25],[875,28,924,28,"projectile"],[875,38,924,38],[875,39,924,39,"startTime"],[875,48,924,48],[875,52,924,52,"currentTime"],[875,63,924,63],[876,12,925,10],[876,16,925,16,"elapsedTime"],[876,27,925,27],[876,30,925,30,"currentTime"],[876,41,925,41],[876,44,925,44,"startTime"],[876,53,925,53],[877,12,926,10],[877,16,926,16,"progress"],[877,24,926,24],[877,27,926,27,"Math"],[877,31,926,31],[877,32,926,32,"min"],[877,35,926,35],[877,36,926,36,"elapsedTime"],[877,47,926,47],[877,51,926,51,"projectile"],[877,61,926,61],[877,62,926,62,"duration"],[877,70,926,70],[877,74,926,74],[877,77,926,77],[877,78,926,78],[877,80,926,80],[877,81,926,81],[877,82,926,82],[879,12,928,10],[880,12,929,10],[880,16,929,14,"progress"],[880,24,929,22],[880,28,929,26],[880,29,929,27],[880,33,929,31],[880,34,929,32,"projectile"],[880,44,929,42],[880,45,929,43,"hasHit"],[880,51,929,49],[880,53,929,51],[881,14,930,12,"projectile"],[881,24,930,22],[881,25,930,23,"hasHit"],[881,31,930,29],[881,34,930,32],[881,38,930,36],[882,14,932,12,"console"],[882,21,932,19],[882,22,932,20,"log"],[882,25,932,23],[882,26,932,24],[882,51,932,49,"projectile"],[882,61,932,59],[882,62,932,60,"abilityName"],[882,73,932,71],[882,87,932,85,"projectile"],[882,97,932,95],[882,98,932,96,"targetEnemyId"],[882,111,932,109],[882,119,932,117,"projectile"],[882,129,932,127],[882,130,932,128,"damage"],[882,136,932,134],[882,145,932,143],[882,146,932,144],[884,14,934,12],[885,14,935,12,"setCombatState"],[885,28,935,26],[885,29,935,27,"prev"],[885,33,935,31],[885,37,935,35],[886,16,936,14],[886,20,936,20,"newState"],[886,28,936,28],[886,31,936,31],[887,18,936,33],[887,21,936,36,"prev"],[888,16,936,41],[888,17,936,42],[889,16,937,14],[889,20,937,20,"enemyIndex"],[889,30,937,30],[889,33,937,33,"newState"],[889,41,937,41],[889,42,937,42,"enemies"],[889,49,937,49],[889,50,937,50,"findIndex"],[889,59,937,59],[889,60,937,60,"e"],[889,61,937,61],[889,65,937,65,"e"],[889,66,937,66],[889,67,937,67,"id"],[889,69,937,69],[889,74,937,74,"projectile"],[889,84,937,84],[889,85,937,85,"targetEnemyId"],[889,98,937,98],[889,99,937,99],[890,16,939,14],[890,20,939,18,"enemyIndex"],[890,30,939,28],[890,34,939,32],[890,35,939,33],[890,39,939,37,"newState"],[890,47,939,45],[890,48,939,46,"enemies"],[890,55,939,53],[890,56,939,54,"enemyIndex"],[890,66,939,64],[890,67,939,65],[890,68,939,66,"health"],[890,74,939,72],[890,77,939,75],[890,78,939,76],[890,80,939,78],[891,18,940,16,"newState"],[891,26,940,24],[891,27,940,25,"enemies"],[891,34,940,32],[891,37,940,35],[891,38,940,36],[891,41,940,39,"newState"],[891,49,940,47],[891,50,940,48,"enemies"],[891,57,940,55],[891,58,940,56],[892,18,941,16],[892,22,941,22,"enemy"],[892,27,941,27],[892,30,941,30,"newState"],[892,38,941,38],[892,39,941,39,"enemies"],[892,46,941,46],[892,47,941,47,"enemyIndex"],[892,57,941,57],[892,58,941,58],[893,18,942,16],[893,22,942,22,"newHealth"],[893,31,942,31],[893,34,942,34,"Math"],[893,38,942,38],[893,39,942,39,"max"],[893,42,942,42],[893,43,942,43],[893,44,942,44],[893,46,942,46,"enemy"],[893,51,942,51],[893,52,942,52,"health"],[893,58,942,58],[893,61,942,61,"projectile"],[893,71,942,71],[893,72,942,72,"damage"],[893,78,942,78],[893,79,942,79],[894,18,944,16,"newState"],[894,26,944,24],[894,27,944,25,"enemies"],[894,34,944,32],[894,35,944,33,"enemyIndex"],[894,45,944,43],[894,46,944,44],[894,49,944,47],[895,20,945,18],[895,23,945,21,"enemy"],[895,28,945,26],[896,20,946,18,"health"],[896,26,946,24],[896,28,946,26,"newHealth"],[896,37,946,35],[897,20,947,18,"lastDamaged"],[897,31,947,29],[897,33,947,31,"combatEngine"],[897,52,947,43],[897,53,947,43,"combatEngine"],[897,65,947,43],[897,66,947,44,"getCurrentTick"],[897,80,947,58],[897,81,947,59],[898,18,948,16],[898,19,948,17],[899,18,950,16,"console"],[899,25,950,23],[899,26,950,24,"log"],[899,29,950,27],[899,30,950,28],[899,52,950,50,"enemy"],[899,57,950,55],[899,58,950,56,"name"],[899,62,950,60],[899,74,950,72,"newHealth"],[899,83,950,81],[899,87,950,85,"enemy"],[899,92,950,90],[899,93,950,91,"maxHealth"],[899,102,950,100],[899,104,950,102],[899,105,950,103],[901,18,952,16],[902,18,953,16],[902,22,953,20,"newHealth"],[902,31,953,29],[902,35,953,33],[902,36,953,34],[902,40,953,38,"enemy"],[902,45,953,43],[902,46,953,44,"health"],[902,52,953,50],[902,55,953,53],[902,56,953,54],[902,58,953,56],[903,20,954,18,"console"],[903,27,954,25],[903,28,954,26,"log"],[903,31,954,29],[903,32,954,30],[903,55,954,53,"enemy"],[903,60,954,58],[903,61,954,59,"name"],[903,65,954,63],[903,79,954,77,"projectile"],[903,89,954,87],[903,90,954,88,"abilityName"],[903,101,954,99],[903,104,954,102],[903,105,954,103],[904,20,955,18,"setTimeout"],[904,30,955,28],[904,31,955,29],[904,37,955,35,"handleEnemyKill"],[904,52,955,50],[904,53,955,51,"enemy"],[904,58,955,56],[904,59,955,57],[904,61,955,59],[904,62,955,60],[904,63,955,61],[905,18,956,16],[906,16,957,14],[907,16,959,14],[907,23,959,21,"newState"],[907,31,959,29],[908,14,960,12],[908,15,960,13],[908,16,960,14],[909,12,961,10],[911,12,963,10],[912,12,964,10],[912,16,964,14,"progress"],[912,24,964,22],[912,28,964,26],[912,31,964,29],[912,33,964,31],[913,14,965,12],[913,21,965,19],[913,25,965,23],[914,12,966,10],[915,12,968,10],[915,19,968,17,"projectile"],[915,29,968,27],[916,10,969,8],[916,11,969,9],[916,12,969,10],[916,13,969,11,"filter"],[916,19,969,17],[916,20,969,18,"Boolean"],[916,27,969,25],[916,28,969,26],[917,8,970,6],[917,9,970,7],[917,10,970,8],[918,6,971,4],[918,7,971,5],[920,6,973,4],[921,6,974,4],[921,10,974,10,"impactInterval"],[921,24,974,24],[921,27,974,27,"setInterval"],[921,38,974,38],[921,39,974,39,"processProjectileImpacts"],[921,63,974,63],[921,65,974,65],[921,67,974,67],[921,68,974,68],[922,6,975,4],[922,13,975,11],[922,19,975,17,"clearInterval"],[922,32,975,30],[922,33,975,31,"impactInterval"],[922,47,975,45],[922,48,975,46],[923,4,976,2],[923,5,976,3],[923,7,976,5],[923,8,976,6,"handleEnemyKill"],[923,23,976,21],[923,24,976,22],[923,25,976,23],[925,4,978,2],[926,4,979,2],[926,8,979,8,"saveAbilityData"],[926,23,979,23],[926,26,979,26],[926,30,979,26,"useCallback"],[926,36,979,37],[926,37,979,37,"useCallback"],[926,48,979,37],[926,50,979,38],[926,56,979,44],[927,6,980,4],[927,10,980,8,"combatState"],[927,21,980,19],[927,22,980,20,"abilityManager"],[927,36,980,34],[927,38,980,36],[928,8,981,6],[928,12,981,12,"abilityData"],[928,23,981,23],[928,26,981,26,"combatState"],[928,37,981,37],[928,38,981,38,"abilityManager"],[928,52,981,52],[928,53,981,53,"getSaveData"],[928,64,981,64],[928,65,981,65],[928,66,981,66],[929,8,982,6,"console"],[929,15,982,13],[929,16,982,14,"log"],[929,19,982,17],[929,20,982,18],[929,70,982,68],[929,72,982,70,"abilityData"],[929,83,982,81],[929,84,982,82],[930,8,983,6,"game"],[930,12,983,10],[930,13,983,11,"updateAbilityData"],[930,30,983,28],[930,31,983,29,"abilityData"],[930,42,983,40],[930,43,983,41],[931,6,984,4],[932,4,985,2],[932,5,985,3],[932,7,985,5],[932,8,985,6,"combatState"],[932,19,985,17],[932,20,985,18,"abilityManager"],[932,34,985,32],[932,36,985,34,"game"],[932,40,985,38],[932,41,985,39,"updateAbilityData"],[932,58,985,56],[932,59,985,57],[932,60,985,58],[933,4,987,2],[933,8,987,8,"contextValue"],[933,20,987,39],[933,23,987,42,"React"],[933,28,987,47],[933,29,987,47,"default"],[933,36,987,47],[933,37,987,48,"useMemo"],[933,44,987,55],[933,45,987,56],[933,52,987,63],[934,6,988,4,"combatState"],[934,17,988,15],[935,6,989,4,"projectiles"],[935,17,989,15],[936,6,990,4,"startCombat"],[936,17,990,15],[937,6,991,4,"stopCombat"],[937,16,991,14],[938,6,992,4,"equipAbility"],[938,18,992,16],[939,6,993,4,"handleEnemyKill"],[939,21,993,19],[940,6,994,4,"getDeck"],[940,13,994,11],[941,6,995,4,"getAvailableAbilities"],[941,27,995,25],[942,6,996,4,"upgradeAbility"],[942,20,996,18],[943,6,997,4,"spawnEnemy"],[943,16,997,14],[944,6,998,4,"spawnBoss"],[944,15,998,13],[945,6,999,4,"clearAllEnemies"],[945,21,999,19],[946,6,1000,4,"clearSpecificEnemy"],[946,24,1000,22],[947,6,1001,4,"triggerLevelUpExplosion"],[947,29,1001,27],[948,6,1002,4,"findClosestEnemy"],[948,22,1002,20],[949,6,1003,4,"updateNinjaPosition"],[949,25,1003,23],[950,6,1004,4,"setManualControlActive"],[950,28,1004,26],[951,6,1005,4,"lastExplosionTime"],[951,23,1005,21],[952,6,1006,4,"useAbilityManually"],[952,24,1006,22],[953,6,1006,24],[954,6,1007,4,"saveAbilityData"],[954,21,1007,19],[955,6,1007,21],[956,6,1008,4,"shadowClone"],[956,17,1008,15],[956,19,1008,17,"combatState"],[956,30,1008,28],[956,31,1008,29,"shadowClone"],[956,42,1008,40],[956,43,1008,42],[957,4,1009,2],[957,5,1009,3],[957,6,1009,4],[957,8,1009,6],[958,4,1010,4],[959,4,1011,4],[960,4,1012,4,"combatState"],[960,15,1012,15],[960,17,1013,4,"projectiles"],[960,28,1013,15],[960,30,1014,4,"lastExplosionTime"],[960,47,1014,21],[961,4,1015,4],[962,4,1016,4,"combatState"],[962,15,1016,15],[962,16,1016,16,"abilityManager"],[962,30,1016,30],[962,32,1017,4,"combatState"],[962,43,1017,15],[962,44,1017,16,"enemies"],[962,51,1017,23],[962,53,1018,4,"combatState"],[962,64,1018,15],[962,65,1018,16,"shadowClone"],[962,76,1018,27],[963,4,1018,29],[964,4,1019,4,"useAbilityManually"],[964,22,1019,22],[965,4,1019,24],[966,4,1020,4,"saveAbilityData"],[966,19,1020,19],[966,20,1020,21],[967,4,1020,21],[967,5,1021,3],[967,6,1021,4],[968,4,1023,2],[968,24,1024,4],[968,28,1024,4,"_reactJsxDevRuntime"],[968,47,1024,4],[968,48,1024,4,"jsxDEV"],[968,54,1024,4],[968,56,1024,5,"CombatContext"],[968,69,1024,18],[968,70,1024,19,"Provider"],[968,78,1024,27],[969,6,1024,28,"value"],[969,11,1024,33],[969,13,1024,35,"contextValue"],[969,25,1024,48],[970,6,1024,48,"children"],[970,14,1024,48],[970,16,1025,7,"children"],[971,4,1025,15],[972,6,1025,15,"fileName"],[972,14,1025,15],[972,16,1025,15,"_jsxFileName"],[972,28,1025,15],[973,6,1025,15,"lineNumber"],[973,16,1025,15],[974,6,1025,15,"columnNumber"],[974,18,1025,15],[975,4,1025,15],[975,11,1026,28],[975,12,1026,29],[976,2,1028,0],[976,3,1028,1],[977,2,1028,2,"_s4"],[977,5,1028,2],[977,6,100,13,"CombatProvider"],[977,20,100,27],[978,4,100,27],[978,12,101,15,"useGame"],[978,24,101,22],[978,25,101,22,"useGame"],[978,32,101,22],[978,34,102,77,"useZone"],[978,46,102,84],[978,47,102,84,"useZone"],[978,54,102,84],[979,2,102,84],[980,2,102,84,"_c"],[980,4,102,84],[980,7,100,13,"CombatProvider"],[980,21,100,27],[981,2,100,27],[981,6,100,27,"_c"],[981,8,100,27],[982,2,100,27,"$RefreshReg$"],[982,14,100,27],[982,15,100,27,"_c"],[982,17,100,27],[983,0,100,27],[983,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR2E;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}