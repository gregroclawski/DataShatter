{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Use zone-based XP system instead of base XP to avoid conflicts\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n\n      // Use zone XP if available, otherwise fallback to ultra boosted base XP\n      var baseXpReward = enemy.zoneXP || 5000; // Use zone XP system, fallback to 5000 for non-zone enemies\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // IMMEDIATE XP AWARD - No setTimeout delays for instant feedback\n      console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards IMMEDIATELY`);\n\n      // Award XP and gold using GameContext - SYNCHRONOUS for instant feedback\n      game.updateNinja(prev => {\n        console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n\n      // Convert CombatEnemy to CurrentEnemy format for zone progression\n      var zoneEnemy = {\n        id: enemy.id,\n        typeId: enemy.zoneTypeId || 'test_orc',\n        // Use zone type ID if available, fallback to test\n        name: enemy.name,\n        icon: '🧌',\n        // Default icon for test enemies\n        hp: 0,\n        // Dead enemy\n        maxHP: enemy.maxHealth,\n        attack: enemy.stats.attack,\n        xp: enemy.zoneXP || 20,\n        // Use zone XP if available, fallback to base reward\n        position: enemy.position\n      };\n\n      // Record the zone kill for progression (if in a zone) - IMMEDIATE\n      recordEnemyKill(zoneEnemy);\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1135,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1195,2],[27,6,1195,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1195,2],[27,42,1195,2,"require"],[27,49,1195,2],[27,50,1195,2,"_dependencyMap"],[27,64,1195,2],[28,2,1195,2],[28,6,1195,2,"_slicedToArray"],[28,20,1195,2],[28,23,1195,2,"_interopDefault"],[28,38,1195,2],[28,39,1195,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1195,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,94,0],[37,6,94,6,"CombatContext"],[37,19,94,19],[37,35,94,22],[37,39,94,22,"createContext"],[37,45,94,35],[37,46,94,35,"createContext"],[37,59,94,35],[37,61,94,67,"undefined"],[37,70,94,76],[37,71,94,77],[38,2,96,7],[38,6,96,13,"useCombat"],[38,15,96,22],[38,18,96,25,"useCombat"],[38,19,96,25],[38,24,96,50],[39,4,96,50,"_s"],[39,6,96,50],[40,4,97,2],[40,8,97,8,"context"],[40,15,97,15],[40,18,97,18],[40,22,97,18,"useContext"],[40,28,97,28],[40,29,97,28,"useContext"],[40,39,97,28],[40,41,97,29,"CombatContext"],[40,54,97,42],[40,55,97,43],[41,4,98,2],[41,8,98,6],[41,9,98,7,"context"],[41,16,98,14],[41,18,98,16],[42,6,99,4],[42,12,99,10],[42,16,99,14,"Error"],[42,21,99,19],[42,22,99,20],[42,70,99,68],[42,71,99,69],[43,4,100,2],[44,4,101,2],[44,11,101,9,"context"],[44,18,101,16],[45,2,102,0],[45,3,102,1],[46,2,102,2,"_s"],[46,4,102,2],[46,5,96,13,"useCombat"],[46,14,96,22],[47,2,104,0],[47,6,104,4,"enemyCounter"],[47,18,104,16],[47,21,104,19],[47,22,104,20],[47,23,104,21],[47,24,104,22],[49,2,106,7],[49,6,106,13,"CombatProvider"],[49,20,106,27],[49,23,106,30,"_ref"],[49,27,106,30],[49,31,106,73],[50,4,106,73,"_s4"],[50,7,106,73],[51,4,106,73],[51,8,106,73,"_s3"],[51,11,106,73],[51,14,106,73,"$RefreshSig$"],[51,26,106,73],[52,4,106,73],[52,8,106,33,"children"],[52,16,106,41],[52,19,106,41,"_ref"],[52,23,106,41],[52,24,106,33,"children"],[52,32,106,41],[53,4,107,2],[53,8,107,8,"game"],[53,12,107,12],[53,15,107,15],[53,19,107,15,"useGame"],[53,31,107,22],[53,32,107,22,"useGame"],[53,39,107,22],[53,41,107,23],[53,42,107,24],[54,4,108,2],[54,8,108,2,"_useZone"],[54,16,108,2],[54,19,108,77],[54,23,108,77,"useZone"],[54,35,108,84],[54,36,108,84,"useZone"],[54,43,108,84],[54,45,108,85],[54,46,108,86],[55,6,108,10,"currentZone"],[55,17,108,21],[55,20,108,21,"_useZone"],[55,28,108,21],[55,29,108,10,"currentZone"],[55,40,108,21],[56,6,108,23,"currentZoneLevel"],[56,22,108,39],[56,25,108,39,"_useZone"],[56,33,108,39],[56,34,108,23,"currentZoneLevel"],[56,50,108,39],[57,6,108,41,"recordEnemyKill"],[57,21,108,56],[57,24,108,56,"_useZone"],[57,32,108,56],[57,33,108,41,"recordEnemyKill"],[57,48,108,56],[58,6,108,58,"spawnZoneEnemy"],[58,20,108,72],[58,23,108,72,"_useZone"],[58,31,108,72],[58,32,108,58,"spawnZoneEnemy"],[58,46,108,72],[60,4,110,2],[61,4,111,2],[61,8,111,8,"initialCombatState"],[61,26,111,39],[61,29,111,42],[62,6,112,4,"isInCombat"],[62,16,112,14],[62,18,112,16],[62,23,112,21],[63,6,113,4,"currentTick"],[63,17,113,15],[63,19,113,17],[63,20,113,18],[64,6,114,4,"enemies"],[64,13,114,11],[64,15,114,13],[64,17,114,15],[65,6,115,4,"abilityManager"],[65,20,115,18],[65,22,115,20],[65,26,115,24,"AbilityManager"],[65,44,115,38],[65,45,115,38,"AbilityManager"],[65,59,115,38],[65,60,115,39],[65,61,115,40],[66,6,116,4,"statusEffects"],[66,19,116,17],[66,21,116,19],[66,25,116,23,"StatusEffectManager"],[66,44,116,42],[66,45,116,42,"StatusEffectManager"],[66,64,116,42],[66,65,116,43],[66,66,116,44],[67,6,117,4,"playerStats"],[67,17,117,15],[67,19,117,17],[68,8,118,6,"attack"],[68,14,118,12],[68,16,118,14],[68,18,118,16],[69,8,118,18],[70,8,119,6,"defense"],[70,15,119,13],[70,17,119,15],[70,18,119,16],[71,8,120,6,"health"],[71,14,120,12],[71,16,120,14],[71,19,120,17],[72,8,121,6,"maxHealth"],[72,17,121,15],[72,19,121,17],[72,22,121,20],[73,8,122,6,"critChance"],[73,18,122,16],[73,20,122,18],[73,21,122,19],[74,8,123,6,"critDamage"],[74,18,123,16],[74,20,123,18],[74,23,123,21],[75,8,124,6,"cooldownReduction"],[75,25,124,23],[75,27,124,25],[76,6,125,4],[77,4,126,2],[77,5,126,3],[78,4,128,2],[78,8,128,2,"_useState"],[78,17,128,2],[78,20,128,40],[78,24,128,40,"useState"],[78,30,128,48],[78,31,128,48,"useState"],[78,39,128,48],[78,41,128,62,"initialCombatState"],[78,59,128,80],[78,60,128,81],[79,6,128,81,"_useState2"],[79,16,128,81],[79,23,128,81,"_slicedToArray"],[79,37,128,81],[79,38,128,81,"default"],[79,45,128,81],[79,47,128,81,"_useState"],[79,56,128,81],[80,6,128,9,"combatState"],[80,17,128,20],[80,20,128,20,"_useState2"],[80,30,128,20],[81,6,128,22,"setCombatState"],[81,20,128,36],[81,23,128,36,"_useState2"],[81,33,128,36],[83,4,130,2],[84,4,131,2],[84,8,131,2,"useEffect"],[84,14,131,11],[84,15,131,11,"useEffect"],[84,24,131,11],[84,26,131,12],[84,32,131,18],[85,6,132,4],[85,10,132,8,"game"],[85,14,132,12],[85,15,132,13,"gameState"],[85,24,132,22],[85,25,132,23,"abilityData"],[85,36,132,34],[85,40,132,38,"combatState"],[85,51,132,49],[85,52,132,50,"abilityManager"],[85,66,132,64],[85,68,132,66],[86,8,133,6,"console"],[86,15,133,13],[86,16,133,14,"log"],[86,19,133,17],[86,20,133,18],[86,68,133,66],[86,70,133,68,"game"],[86,74,133,72],[86,75,133,73,"gameState"],[86,84,133,82],[86,85,133,83,"abilityData"],[86,96,133,94],[86,97,133,95],[87,8,134,6,"combatState"],[87,19,134,17],[87,20,134,18,"abilityManager"],[87,34,134,32],[87,35,134,33,"restoreFromSaveData"],[87,54,134,52],[87,55,134,53,"game"],[87,59,134,57],[87,60,134,58,"gameState"],[87,69,134,67],[87,70,134,68,"abilityData"],[87,81,134,79],[87,82,134,80],[89,8,136,6],[90,8,137,6,"setCombatState"],[90,22,137,20],[90,23,137,21,"prev"],[90,27,137,25],[90,32,137,30],[91,10,137,32],[91,13,137,35,"prev"],[92,8,137,40],[92,9,137,41],[92,10,137,42],[92,11,137,43],[93,6,138,4],[94,4,139,2],[94,5,139,3],[94,7,139,5],[94,8,139,6,"game"],[94,12,139,10],[94,13,139,11,"gameState"],[94,22,139,20],[94,23,139,21,"abilityData"],[94,34,139,32],[94,36,139,34,"combatState"],[94,47,139,45],[94,48,139,46,"abilityManager"],[94,62,139,60],[94,63,139,61],[94,64,139,62],[96,4,141,2],[97,4,142,2],[97,8,142,2,"useEffect"],[97,14,142,11],[97,15,142,11,"useEffect"],[97,24,142,11],[97,26,142,12],[97,32,142,18],[98,6,143,4],[98,10,143,8,"game"],[98,14,143,12],[98,15,143,13,"gameState"],[98,24,143,22],[98,25,143,23,"ninja"],[98,30,143,28],[98,32,143,30],[99,8,144,6],[99,12,144,12,"effectiveStats"],[99,26,144,26],[99,29,144,29,"game"],[99,33,144,33],[99,34,144,34,"getEffectiveStats"],[99,51,144,51],[99,52,144,52],[99,53,144,53],[100,8,146,6,"setCombatState"],[100,22,146,20],[100,23,146,21,"prev"],[100,27,146,25],[100,31,146,29],[101,10,147,8],[102,10,148,8],[102,14,148,12,"prev"],[102,18,148,16],[102,19,148,17,"playerStats"],[102,30,148,28],[102,31,148,29,"maxHealth"],[102,40,148,38],[102,45,148,43],[102,48,148,46],[102,52,148,50,"prev"],[102,56,148,54],[102,57,148,55,"playerStats"],[102,68,148,66],[102,69,148,67,"attack"],[102,75,148,73],[102,80,148,78],[102,82,148,80],[102,84,148,82],[103,12,149,10,"console"],[103,19,149,17],[103,20,149,18,"log"],[103,23,149,21],[103,24,149,22],[103,60,149,58,"effectiveStats"],[103,74,149,72],[103,75,149,73,"health"],[103,81,149,79],[103,93,149,91,"effectiveStats"],[103,107,149,105],[103,108,149,106,"attack"],[103,114,149,112],[103,127,149,125,"effectiveStats"],[103,141,149,139],[103,142,149,140,"defense"],[103,149,149,147],[103,151,149,149],[103,152,149,150],[104,12,151,10],[104,19,151,17],[105,14,152,12],[105,17,152,15,"prev"],[105,21,152,19],[106,14,153,12,"playerStats"],[106,25,153,23],[106,27,153,25],[107,16,154,14,"attack"],[107,22,154,20],[107,24,154,22,"effectiveStats"],[107,38,154,36],[107,39,154,37,"attack"],[107,45,154,43],[108,16,155,14,"defense"],[108,23,155,21],[108,25,155,23,"effectiveStats"],[108,39,155,37],[108,40,155,38,"defense"],[108,47,155,45],[109,16,156,14,"health"],[109,22,156,20],[109,24,156,22,"effectiveStats"],[109,38,156,36],[109,39,156,37,"health"],[109,45,156,43],[110,16,156,45],[111,16,157,14,"maxHealth"],[111,25,157,23],[111,27,157,25,"effectiveStats"],[111,41,157,39],[111,42,157,40,"health"],[111,48,157,46],[112,16,158,14,"critChance"],[112,26,158,24],[112,28,158,26,"effectiveStats"],[112,42,158,40],[112,43,158,41,"critChance"],[112,53,158,51],[112,57,158,55],[112,58,158,56],[113,16,159,14,"critDamage"],[113,26,159,24],[113,28,159,26,"effectiveStats"],[113,42,159,40],[113,43,159,41,"critDamage"],[113,53,159,51],[113,57,159,55],[113,60,159,58],[114,16,160,14,"cooldownReduction"],[114,33,160,31],[114,35,160,33,"effectiveStats"],[114,49,160,47],[114,50,160,48,"cooldownReduction"],[114,67,160,65],[114,71,160,69],[115,14,161,12],[116,12,162,10],[116,13,162,11],[117,10,163,8],[118,10,164,8],[118,17,164,15,"prev"],[118,21,164,19],[119,8,165,6],[119,9,165,7],[119,10,165,8],[120,6,166,4],[121,4,167,2],[121,5,167,3],[121,7,167,5],[121,8,167,6,"game"],[121,12,167,10],[121,13,167,11,"gameState"],[121,22,167,20],[121,23,167,21,"ninja"],[121,28,167,26],[121,29,167,27],[121,30,167,28],[122,4,169,2],[122,8,169,2,"_useState3"],[122,18,169,2],[122,21,169,40],[122,25,169,40,"useState"],[122,31,169,48],[122,32,169,48,"useState"],[122,40,169,48],[122,42,169,69],[122,44,169,71],[122,45,169,72],[123,6,169,72,"_useState4"],[123,16,169,72],[123,23,169,72,"_slicedToArray"],[123,37,169,72],[123,38,169,72,"default"],[123,45,169,72],[123,47,169,72,"_useState3"],[123,57,169,72],[124,6,169,9,"projectiles"],[124,17,169,20],[124,20,169,20,"_useState4"],[124,30,169,20],[125,6,169,22,"setProjectiles"],[125,20,169,36],[125,23,169,36,"_useState4"],[125,33,169,36],[126,4,170,2],[126,8,170,2,"_useState5"],[126,18,170,2],[126,21,170,52],[126,25,170,52,"useState"],[126,31,170,60],[126,32,170,60,"useState"],[126,40,170,60],[126,42,170,69],[126,43,170,70],[126,44,170,71],[127,6,170,71,"_useState6"],[127,16,170,71],[127,23,170,71,"_slicedToArray"],[127,37,170,71],[127,38,170,71,"default"],[127,45,170,71],[127,47,170,71,"_useState5"],[127,57,170,71],[128,6,170,9,"lastExplosionTime"],[128,23,170,26],[128,26,170,26,"_useState6"],[128,36,170,26],[129,6,170,28,"setLastExplosionTime"],[129,26,170,48],[129,29,170,48,"_useState6"],[129,39,170,48],[130,4,171,2],[131,4,172,2],[133,4,174,2],[134,4,175,2],[134,8,175,8,"handleEnemyKill"],[134,23,175,23],[134,26,175,26],[134,30,175,26,"useCallback"],[134,36,175,37],[134,37,175,37,"useCallback"],[134,48,175,37],[134,50,175,39,"enemy"],[134,55,175,57],[134,59,175,62],[135,6,176,4,"console"],[135,13,176,11],[135,14,176,12,"log"],[135,17,176,15],[135,18,176,16],[135,61,176,59,"enemy"],[135,66,176,64],[135,67,176,65,"name"],[135,71,176,69],[135,80,176,78,"enemy"],[135,85,176,83],[135,86,176,84,"id"],[135,88,176,86],[135,91,176,89],[135,92,176,90],[136,6,177,4,"console"],[136,13,177,11],[136,14,177,12,"log"],[136,17,177,15],[136,18,177,16],[136,73,177,71],[136,75,177,73,"enemy"],[136,80,177,78],[136,81,177,79,"id"],[136,83,177,81],[136,84,177,82],[138,6,179,4],[139,6,180,4],[139,10,180,10,"xpMultiplier"],[139,22,180,22],[139,25,180,25,"game"],[139,29,180,29],[139,30,180,30,"gameState"],[139,39,180,39],[139,40,180,40,"subscriptionBenefits"],[139,60,180,60],[139,62,180,62,"xp_multiplier"],[139,75,180,75],[139,79,180,79],[139,82,180,82],[140,6,181,4],[140,10,181,10,"dropMultiplier"],[140,24,181,24],[140,27,181,27,"game"],[140,31,181,31],[140,32,181,32,"gameState"],[140,41,181,41],[140,42,181,42,"subscriptionBenefits"],[140,62,181,62],[140,64,181,64,"drop_multiplier"],[140,79,181,79],[140,83,181,83],[140,86,181,86],[142,6,183,4],[143,6,184,4],[143,10,184,10,"baseXpReward"],[143,22,184,22],[143,25,184,25,"enemy"],[143,30,184,30],[143,31,184,31,"zoneXP"],[143,37,184,37],[143,41,184,41],[143,45,184,45],[143,46,184,46],[143,47,184,47],[144,6,185,4],[144,10,185,10,"xpReward"],[144,18,185,18],[144,21,185,21,"Math"],[144,25,185,25],[144,26,185,26,"floor"],[144,31,185,31],[144,32,185,32,"baseXpReward"],[144,44,185,44],[144,47,185,47,"xpMultiplier"],[144,59,185,59],[144,60,185,60],[145,6,186,4],[145,10,186,10,"goldReward"],[145,20,186,20],[145,23,186,23,"Math"],[145,27,186,27],[145,28,186,28,"floor"],[145,33,186,33],[145,34,186,34],[145,39,186,39],[145,42,186,42,"dropMultiplier"],[145,56,186,56],[145,57,186,57],[145,58,186,58],[145,59,186,59],[147,6,188,4,"console"],[147,13,188,11],[147,14,188,12,"log"],[147,17,188,15],[147,18,188,16],[147,48,188,46,"xpReward"],[147,56,188,54],[147,67,188,65,"goldReward"],[147,77,188,75],[147,93,188,91],[147,94,188,92],[148,6,189,4,"console"],[148,13,189,11],[148,14,189,12,"log"],[148,17,189,15],[148,18,189,16],[148,60,189,58,"xpMultiplier"],[148,72,189,70],[148,94,189,92,"dropMultiplier"],[148,108,189,106],[148,110,189,108],[148,111,189,109],[149,6,190,4,"console"],[149,13,190,11],[149,14,190,12,"log"],[149,17,190,15],[149,18,190,16],[149,54,190,52,"baseXpReward"],[149,66,190,64],[149,81,190,79,"xpReward"],[149,89,190,87],[149,91,190,89],[149,92,190,90],[150,6,191,4,"console"],[150,13,191,11],[150,14,191,12,"log"],[150,17,191,15],[150,18,191,16],[150,58,191,56],[150,60,191,58,"JSON"],[150,64,191,62],[150,65,191,63,"stringify"],[150,74,191,72],[150,75,191,73,"game"],[150,79,191,77],[150,80,191,78,"gameState"],[150,89,191,87],[150,90,191,88,"subscriptionBenefits"],[150,110,191,108],[150,111,191,109],[150,112,191,110],[151,6,192,4,"console"],[151,13,192,11],[151,14,192,12,"log"],[151,17,192,15],[151,18,192,16],[151,49,192,47,"Platform"],[151,61,192,55],[151,62,192,55,"Platform"],[151,70,192,55],[151,71,192,56,"OS"],[151,73,192,58],[151,84,192,69,"Date"],[151,88,192,73],[151,89,192,74,"now"],[151,92,192,77],[151,93,192,78],[151,94,192,79],[151,96,192,81],[151,97,192,82],[153,6,194,4],[154,6,195,4,"console"],[154,13,195,11],[154,14,195,12,"log"],[154,17,195,15],[154,18,195,16],[154,88,195,86],[154,89,195,87],[156,6,197,4],[157,6,198,4,"game"],[157,10,198,8],[157,11,198,9,"updateNinja"],[157,22,198,20],[157,23,198,22,"prev"],[157,27,198,26],[157,31,198,31],[158,8,199,6,"console"],[158,15,199,13],[158,16,199,14,"log"],[158,19,199,17],[158,20,199,18],[158,52,199,50,"prev"],[158,56,199,54],[158,57,199,55,"experience"],[158,67,199,65],[158,79,199,77,"prev"],[158,83,199,81],[158,84,199,82,"experience"],[158,94,199,92],[158,97,199,95,"xpReward"],[158,105,199,103],[158,107,199,105],[158,108,199,106],[159,8,200,6,"console"],[159,15,200,13],[159,16,200,14,"log"],[159,19,200,17],[159,20,200,18],[159,54,200,52,"prev"],[159,58,200,56],[159,59,200,57,"gold"],[159,63,200,61],[159,75,200,73,"prev"],[159,79,200,77],[159,80,200,78,"gold"],[159,84,200,82],[159,87,200,85,"goldReward"],[159,97,200,95],[159,99,200,97],[159,100,200,98],[160,8,201,6],[160,15,201,13],[161,10,202,8,"experience"],[161,20,202,18],[161,22,202,20,"prev"],[161,26,202,24],[161,27,202,25,"experience"],[161,37,202,35],[161,40,202,38,"xpReward"],[161,48,202,46],[162,10,203,8,"gold"],[162,14,203,12],[162,16,203,14,"prev"],[162,20,203,18],[162,21,203,19,"gold"],[162,25,203,23],[162,28,203,26,"goldReward"],[163,8,204,6],[163,9,204,7],[164,6,205,4],[164,7,205,5],[164,8,205,6],[166,6,207,4],[167,6,208,4],[167,10,208,10,"zoneEnemy"],[167,19,208,19],[167,22,208,22],[168,8,209,6,"id"],[168,10,209,8],[168,12,209,10,"enemy"],[168,17,209,15],[168,18,209,16,"id"],[168,20,209,18],[169,8,210,6,"typeId"],[169,14,210,12],[169,16,210,14,"enemy"],[169,21,210,19],[169,22,210,20,"zoneTypeId"],[169,32,210,30],[169,36,210,34],[169,46,210,44],[170,8,210,46],[171,8,211,6,"name"],[171,12,211,10],[171,14,211,12,"enemy"],[171,19,211,17],[171,20,211,18,"name"],[171,24,211,22],[172,8,212,6,"icon"],[172,12,212,10],[172,14,212,12],[172,18,212,16],[173,8,212,18],[174,8,213,6,"hp"],[174,10,213,8],[174,12,213,10],[174,13,213,11],[175,8,213,13],[176,8,214,6,"maxHP"],[176,13,214,11],[176,15,214,13,"enemy"],[176,20,214,18],[176,21,214,19,"maxHealth"],[176,30,214,28],[177,8,215,6,"attack"],[177,14,215,12],[177,16,215,14,"enemy"],[177,21,215,19],[177,22,215,20,"stats"],[177,27,215,25],[177,28,215,26,"attack"],[177,34,215,32],[178,8,216,6,"xp"],[178,10,216,8],[178,12,216,10,"enemy"],[178,17,216,15],[178,18,216,16,"zoneXP"],[178,24,216,22],[178,28,216,26],[178,30,216,28],[179,8,216,30],[180,8,217,6,"position"],[180,16,217,14],[180,18,217,16,"enemy"],[180,23,217,21],[180,24,217,22,"position"],[181,6,218,4],[181,7,218,5],[183,6,220,2],[184,6,221,2,"recordEnemyKill"],[184,21,221,17],[184,22,221,18,"zoneEnemy"],[184,31,221,27],[184,32,221,28],[185,4,222,2],[185,5,222,3],[185,7,222,5],[185,8,222,6,"game"],[185,12,222,10],[185,13,222,11,"updateNinja"],[185,24,222,22],[185,26,222,24,"recordEnemyKill"],[185,41,222,39],[185,42,222,40],[185,43,222,41],[187,4,224,2],[188,4,225,2],[188,8,225,8,"handleCombatTick"],[188,24,225,24],[188,27,225,27,"React"],[188,32,225,32],[188,33,225,32,"default"],[188,40,225,32],[188,41,225,33,"useCallback"],[188,52,225,44],[188,53,225,45],[188,59,225,51],[189,6,225,51],[189,10,225,51,"_s2"],[189,13,225,51],[189,16,225,51,"$RefreshSig$"],[189,28,225,51],[190,6,226,4,"console"],[190,13,226,11],[190,14,226,12,"log"],[190,17,226,15],[190,18,226,16],[190,87,226,85],[190,88,226,86],[191,6,227,4,"console"],[191,13,227,11],[191,14,227,12,"log"],[191,17,227,15],[191,18,227,16],[191,65,227,63,"isManualControlActive"],[191,86,227,84],[191,99,227,97,"game"],[191,103,227,101],[191,104,227,102,"gameState"],[191,113,227,111],[191,114,227,112,"isAlive"],[191,121,227,119],[191,123,227,121],[191,124,227,122],[192,6,229,4],[192,10,229,8,"enemiesToKill"],[192,23,229,36],[192,26,229,39],[192,28,229,41],[192,29,229,42],[192,30,229,43],[194,6,231,4,"_s2"],[194,9,231,4],[194,10,231,4,"setCombatState"],[194,24,231,18],[194,25,231,18,"_s2"],[194,28,231,18],[194,29,231,19,"prev"],[194,33,231,23],[194,37,231,27],[195,8,231,27,"_s2"],[195,11,231,27],[196,8,232,6],[196,12,232,12,"newTick"],[196,19,232,19],[196,22,232,22,"combatEngine"],[196,41,232,34],[196,42,232,34,"combatEngine"],[196,54,232,34],[196,55,232,35,"getCurrentTick"],[196,69,232,49],[196,70,232,50],[196,71,232,51],[197,8,233,6],[197,12,233,12,"newState"],[197,20,233,20],[197,23,233,23],[198,10,233,25],[198,13,233,28,"prev"],[198,17,233,32],[199,10,233,34,"currentTick"],[199,21,233,45],[199,23,233,47,"newTick"],[200,8,233,55],[200,9,233,56],[201,8,235,6],[201,12,235,10],[201,13,235,11,"newState"],[201,21,235,19],[201,22,235,20,"isInCombat"],[201,32,235,30],[201,34,235,32],[201,41,235,39,"newState"],[201,49,235,47],[203,8,237,6],[204,8,238,6,"newState"],[204,16,238,14],[204,17,238,15,"abilityManager"],[204,31,238,29],[204,32,238,30,"updateCooldowns"],[204,47,238,45],[204,48,238,46,"newTick"],[204,55,238,53],[204,56,238,54],[206,8,240,6],[207,8,241,6],[207,12,241,12,"effectResults"],[207,25,241,25],[207,28,241,28,"newState"],[207,36,241,36],[207,37,241,37,"statusEffects"],[207,50,241,50],[207,51,241,51,"processTick"],[207,62,241,62],[207,63,241,63,"newTick"],[207,70,241,70],[207,71,241,71],[209,8,243,6],[210,8,244,6,"effectResults"],[210,21,244,19],[210,22,244,20,"forEach"],[210,29,244,27],[210,30,244,28],[210,31,244,29,"results"],[210,38,244,36],[210,40,244,38,"entityId"],[210,48,244,46],[210,53,244,51],[211,10,245,8],[211,14,245,14,"enemyIndex"],[211,24,245,24],[211,27,245,27,"newState"],[211,35,245,35],[211,36,245,36,"enemies"],[211,43,245,43],[211,44,245,44,"findIndex"],[211,53,245,53],[211,54,245,54,"e"],[211,55,245,55],[211,59,245,59,"e"],[211,60,245,60],[211,61,245,61,"id"],[211,63,245,63],[211,68,245,68,"entityId"],[211,76,245,76],[211,77,245,77],[212,10,246,8],[212,14,246,12,"enemyIndex"],[212,24,246,22],[212,28,246,26],[212,29,246,27],[212,31,246,29],[213,12,247,10,"results"],[213,19,247,17],[213,20,247,18,"forEach"],[213,27,247,25],[213,28,247,26,"result"],[213,34,247,32],[213,38,247,36],[214,14,248,12,"newState"],[214,22,248,20],[214,23,248,21,"enemies"],[214,30,248,28],[214,31,248,29,"enemyIndex"],[214,41,248,39],[214,42,248,40],[214,43,248,41,"health"],[214,49,248,47],[214,53,248,51,"result"],[214,59,248,57],[214,60,248,58,"damage"],[214,66,248,64],[215,14,249,12,"newState"],[215,22,249,20],[215,23,249,21,"enemies"],[215,30,249,28],[215,31,249,29,"enemyIndex"],[215,41,249,39],[215,42,249,40],[215,43,249,41,"lastDamaged"],[215,54,249,52],[215,57,249,55,"newTick"],[215,64,249,62],[216,12,250,10],[216,13,250,11],[216,14,250,12],[217,10,251,8],[218,8,252,6],[218,9,252,7],[218,10,252,8],[220,8,254,6],[221,8,255,6],[222,8,256,6],[222,12,256,10,"newState"],[222,20,256,18],[222,21,256,19,"playerStats"],[222,32,256,30],[222,36,256,34,"game"],[222,40,256,38],[222,41,256,39,"gameState"],[222,50,256,48],[222,51,256,49,"ninja"],[222,56,256,54],[222,58,256,56],[223,10,257,8],[223,14,257,14,"effectiveStats"],[223,28,257,28],[223,31,257,31,"game"],[223,35,257,35],[223,36,257,36,"getEffectiveStats"],[223,53,257,53],[223,54,257,54],[223,55,257,55],[225,10,259,8],[226,10,260,8],[226,14,260,12,"newState"],[226,22,260,20],[226,23,260,21,"playerStats"],[226,34,260,32],[226,35,260,33,"attack"],[226,41,260,39],[226,46,260,44,"effectiveStats"],[226,60,260,58],[226,61,260,59,"attack"],[226,67,260,65],[226,71,261,12,"newState"],[226,79,261,20],[226,80,261,21,"playerStats"],[226,91,261,32],[226,92,261,33,"defense"],[226,99,261,40],[226,104,261,45,"effectiveStats"],[226,118,261,59],[226,119,261,60,"defense"],[226,126,261,67],[226,130,262,12,"newState"],[226,138,262,20],[226,139,262,21,"playerStats"],[226,150,262,32],[226,151,262,33,"maxHealth"],[226,160,262,42],[226,165,262,47,"effectiveStats"],[226,179,262,61],[226,180,262,62,"maxHealth"],[226,189,262,71],[226,191,262,73],[227,12,264,10,"console"],[227,19,264,17],[227,20,264,18,"log"],[227,23,264,21],[227,24,264,22],[227,58,264,56,"newState"],[227,66,264,64],[227,67,264,65,"playerStats"],[227,78,264,76],[227,79,264,77,"attack"],[227,85,264,83],[227,91,264,89,"effectiveStats"],[227,105,264,103],[227,106,264,104,"attack"],[227,112,264,110],[227,125,264,123,"newState"],[227,133,264,131],[227,134,264,132,"playerStats"],[227,145,264,143],[227,146,264,144,"defense"],[227,153,264,151],[227,159,264,157,"effectiveStats"],[227,173,264,171],[227,174,264,172,"defense"],[227,181,264,179],[227,192,264,190,"newState"],[227,200,264,198],[227,201,264,199,"playerStats"],[227,212,264,210],[227,213,264,211,"maxHealth"],[227,222,264,220],[227,228,264,226,"effectiveStats"],[227,242,264,240],[227,243,264,241,"maxHealth"],[227,252,264,250],[227,254,264,252],[227,255,264,253],[229,12,266,10],[230,12,267,10],[230,16,267,14,"newHealth"],[230,25,267,23],[230,28,267,26,"newState"],[230,36,267,34],[230,37,267,35,"playerStats"],[230,48,267,46],[230,49,267,47,"health"],[230,55,267,53],[231,12,268,10],[231,16,268,14,"newState"],[231,24,268,22],[231,25,268,23,"playerStats"],[231,36,268,34],[231,37,268,35,"maxHealth"],[231,46,268,44],[231,51,268,49,"effectiveStats"],[231,65,268,63],[231,66,268,64,"maxHealth"],[231,75,268,73],[231,77,268,75],[232,14,269,12],[233,14,270,12],[233,18,270,16,"effectiveStats"],[233,32,270,30],[233,33,270,31,"maxHealth"],[233,42,270,40],[233,45,270,43,"newState"],[233,53,270,51],[233,54,270,52,"playerStats"],[233,65,270,63],[233,66,270,64,"maxHealth"],[233,75,270,73],[233,78,270,76],[233,81,270,79],[233,83,270,81],[234,16,271,14],[235,16,272,14],[235,20,272,20,"healthRatio"],[235,31,272,31],[235,34,272,34,"newState"],[235,42,272,42],[235,43,272,43,"playerStats"],[235,54,272,54],[235,55,272,55,"maxHealth"],[235,64,272,64],[235,67,272,67],[235,68,272,68],[235,71,273,16,"newState"],[235,79,273,24],[235,80,273,25,"playerStats"],[235,91,273,36],[235,92,273,37,"health"],[235,98,273,43],[235,101,273,46,"newState"],[235,109,273,54],[235,110,273,55,"playerStats"],[235,121,273,66],[235,122,273,67,"maxHealth"],[235,131,273,76],[235,134,273,79],[235,135,273,80],[236,16,274,14,"newHealth"],[236,25,274,23],[236,28,274,26,"Math"],[236,32,274,30],[236,33,274,31,"floor"],[236,38,274,36],[236,39,274,37,"effectiveStats"],[236,53,274,51],[236,54,274,52,"maxHealth"],[236,63,274,61],[236,66,274,64,"healthRatio"],[236,77,274,75],[236,78,274,76],[237,14,275,12],[237,15,275,13],[237,21,275,19],[237,25,275,23,"newState"],[237,33,275,31],[237,34,275,32,"playerStats"],[237,45,275,43],[237,46,275,44,"health"],[237,52,275,50],[237,55,275,53,"effectiveStats"],[237,69,275,67],[237,70,275,68,"maxHealth"],[237,79,275,77],[237,81,275,79],[238,16,276,14],[239,16,277,14,"newHealth"],[239,25,277,23],[239,28,277,26,"effectiveStats"],[239,42,277,40],[239,43,277,41,"maxHealth"],[239,52,277,50],[240,14,278,12],[241,14,279,12],[242,12,280,10],[243,12,282,10,"newState"],[243,20,282,18],[243,21,282,19,"playerStats"],[243,32,282,30],[243,35,282,33],[244,14,283,12],[244,17,283,15,"newState"],[244,25,283,23],[244,26,283,24,"playerStats"],[244,37,283,35],[245,14,284,12,"attack"],[245,20,284,18],[245,22,284,20,"effectiveStats"],[245,36,284,34],[245,37,284,35,"attack"],[245,43,284,41],[246,14,285,12,"defense"],[246,21,285,19],[246,23,285,21,"effectiveStats"],[246,37,285,35],[246,38,285,36,"defense"],[246,45,285,43],[247,14,286,12,"maxHealth"],[247,23,286,21],[247,25,286,23,"effectiveStats"],[247,39,286,37],[247,40,286,38,"maxHealth"],[247,49,286,47],[248,14,286,49],[249,14,287,12,"health"],[249,20,287,18],[249,22,287,20,"newHealth"],[249,31,287,29],[250,14,287,31],[251,14,288,12,"critChance"],[251,24,288,22],[251,26,288,24,"effectiveStats"],[251,40,288,38],[251,41,288,39,"critChance"],[251,51,288,49],[251,55,288,53,"newState"],[251,63,288,61],[251,64,288,62,"playerStats"],[251,75,288,73],[251,76,288,74,"critChance"],[251,86,288,84],[252,14,289,12,"critDamage"],[252,24,289,22],[252,26,289,24,"effectiveStats"],[252,40,289,38],[252,41,289,39,"critDamage"],[252,51,289,49],[252,55,289,53,"newState"],[252,63,289,61],[252,64,289,62,"playerStats"],[252,75,289,73],[252,76,289,74,"critDamage"],[252,86,289,84],[253,14,290,12,"cooldownReduction"],[253,31,290,29],[253,33,290,31,"effectiveStats"],[253,47,290,45],[253,48,290,46,"cooldownReduction"],[253,65,290,63],[253,69,290,67,"newState"],[253,77,290,75],[253,78,290,76,"playerStats"],[253,89,290,87],[253,90,290,88,"cooldownReduction"],[254,12,291,10],[254,13,291,11],[255,10,292,8],[257,10,294,8],[258,10,295,8],[258,14,295,12,"game"],[258,18,295,16],[258,19,295,17,"gameState"],[258,28,295,26],[258,29,295,27,"isAlive"],[258,36,295,34],[258,40,296,12,"game"],[258,44,296,16],[258,45,296,17,"gameState"],[258,54,296,26],[258,55,296,27,"ninja"],[258,60,296,32],[258,61,296,33,"health"],[258,67,296,39],[258,72,296,44,"effectiveStats"],[258,86,296,58],[258,87,296,59,"maxHealth"],[258,96,296,68],[258,100,297,12,"newState"],[258,108,297,20],[258,109,297,21,"playerStats"],[258,120,297,32],[258,121,297,33,"health"],[258,127,297,39],[258,130,297,42,"effectiveStats"],[258,144,297,56],[258,145,297,57,"maxHealth"],[258,154,297,66],[258,157,297,69],[258,160,297,72],[258,162,297,74],[259,12,298,10,"console"],[259,19,298,17],[259,20,298,18,"log"],[259,23,298,21],[259,24,298,22],[259,58,298,56,"newState"],[259,66,298,64],[259,67,298,65,"playerStats"],[259,78,298,76],[259,79,298,77,"health"],[259,85,298,83],[259,91,298,89,"game"],[259,95,298,93],[259,96,298,94,"gameState"],[259,105,298,103],[259,106,298,104,"ninja"],[259,111,298,109],[259,112,298,110,"health"],[259,118,298,116],[259,139,298,137],[259,140,298,138],[260,12,299,10,"newState"],[260,20,299,18],[260,21,299,19,"playerStats"],[260,32,299,30],[260,33,299,31,"health"],[260,39,299,37],[260,42,299,40,"game"],[260,46,299,44],[260,47,299,45,"gameState"],[260,56,299,54],[260,57,299,55,"ninja"],[260,62,299,60],[260,63,299,61,"health"],[260,69,299,67],[261,10,300,8],[262,8,301,6],[264,8,303,6],[265,8,304,6,"newState"],[265,16,304,14],[265,17,304,15,"enemies"],[265,24,304,22],[265,25,304,23,"forEach"],[265,32,304,30],[265,33,304,31,"enemy"],[265,38,304,36],[265,42,304,40],[266,10,305,8],[266,14,305,12],[266,15,305,13,"enemy"],[266,20,305,18],[266,21,305,19,"isBoss"],[266,27,305,25],[266,29,305,27],[267,12,305,29],[268,12,306,10],[269,12,307,10],[269,16,307,16,"MOVEMENT_SPEED"],[269,30,307,30],[269,33,307,33],[269,37,307,37],[269,38,307,38],[269,39,307,39],[270,12,308,10],[270,16,308,16,"SCREEN_WIDTH"],[270,28,308,28],[270,31,308,31],[270,34,308,34],[271,12,309,10],[271,16,309,16,"GAME_AREA_HEIGHT"],[271,32,309,32],[271,35,309,35],[271,38,309,38],[271,39,309,39],[271,40,309,40],[272,12,310,10],[272,16,310,16,"ENEMY_SIZE"],[272,26,310,26],[272,29,310,29],[272,31,310,31],[274,12,312,10],[275,12,313,10],[275,16,313,16,"playerX"],[275,23,313,23],[275,26,313,26,"currentNinjaPosition"],[275,46,313,46],[275,47,313,47,"x"],[275,48,313,48],[276,12,314,10],[276,16,314,16,"playerY"],[276,23,314,23],[276,26,314,26,"currentNinjaPosition"],[276,46,314,46],[276,47,314,47,"y"],[276,48,314,48],[278,12,316,10],[279,12,317,10],[279,16,317,16,"deltaX"],[279,22,317,22],[279,25,317,25,"playerX"],[279,32,317,32],[279,35,317,35,"enemy"],[279,40,317,40],[279,41,317,41,"position"],[279,49,317,49],[279,50,317,50,"x"],[279,51,317,51],[280,12,318,10],[280,16,318,16,"deltaY"],[280,22,318,22],[280,25,318,25,"playerY"],[280,32,318,32],[280,35,318,35,"enemy"],[280,40,318,40],[280,41,318,41,"position"],[280,49,318,49],[280,50,318,50,"y"],[280,51,318,51],[281,12,319,10],[281,16,319,16,"distance"],[281,24,319,24],[281,27,319,27,"Math"],[281,31,319,31],[281,32,319,32,"sqrt"],[281,36,319,36],[281,37,319,37,"deltaX"],[281,43,319,43],[281,46,319,46,"deltaX"],[281,52,319,52],[281,55,319,55,"deltaY"],[281,61,319,61],[281,64,319,64,"deltaY"],[281,70,319,70],[281,71,319,71],[283,12,321,10],[284,12,322,10],[284,16,322,16,"ATTACK_RANGE"],[284,28,322,28],[284,31,322,31],[284,33,322,33],[284,34,322,34],[284,35,322,35],[285,12,323,10],[285,16,323,16,"ATTACK_COOLDOWN"],[285,31,323,31],[285,34,323,34],[285,36,323,36],[285,37,323,37],[285,38,323,38],[287,12,325,10],[287,16,325,14,"distance"],[287,24,325,22],[287,28,325,26,"ATTACK_RANGE"],[287,40,325,38],[287,42,325,40],[288,14,326,12],[289,14,327,12],[289,18,327,16],[289,19,327,17,"enemy"],[289,24,327,22],[289,25,327,23,"lastAttackTick"],[289,39,327,37],[289,41,327,39,"enemy"],[289,46,327,44],[289,47,327,45,"lastAttackTick"],[289,61,327,59],[289,64,327,62],[289,65,327,63],[290,14,329,12],[290,18,329,16,"newState"],[290,26,329,24],[290,27,329,25,"currentTick"],[290,38,329,36],[290,41,329,39,"enemy"],[290,46,329,44],[290,47,329,45,"lastAttackTick"],[290,61,329,59],[290,65,329,63,"ATTACK_COOLDOWN"],[290,80,329,78],[290,82,329,80],[291,16,330,14],[292,16,331,14],[292,20,331,18],[292,21,331,19,"game"],[292,25,331,23],[292,26,331,24,"gameState"],[292,35,331,33],[292,36,331,34,"isAlive"],[292,43,331,41],[292,45,331,43],[293,18,332,16,"console"],[293,25,332,23],[293,26,332,24,"log"],[293,29,332,27],[293,30,332,28],[293,49,332,47,"enemy"],[293,54,332,52],[293,55,332,53,"name"],[293,59,332,57],[293,93,332,91],[293,94,332,92],[294,18,333,16],[295,18,334,16,"enemy"],[295,23,334,21],[295,24,334,22,"lastAttackTick"],[295,38,334,36],[295,41,334,39,"newState"],[295,49,334,47],[295,50,334,48,"currentTick"],[295,61,334,59],[296,16,335,14],[296,17,335,15],[296,23,335,21],[297,18,336,16],[298,18,337,16],[298,22,337,22,"isPlayerInvincible"],[298,40,337,40],[298,43,337,43,"game"],[298,47,337,47],[298,48,337,48,"gameState"],[298,57,337,57],[298,58,337,58,"isInvincible"],[298,70,337,70],[298,74,338,41,"game"],[298,78,338,45],[298,79,338,46,"gameState"],[298,88,338,55],[298,89,338,56,"invincibilityEndTime"],[298,109,338,76],[298,113,339,41,"Date"],[298,117,339,45],[298,118,339,46,"now"],[298,121,339,49],[298,122,339,50],[298,123,339,51],[298,126,339,54,"game"],[298,130,339,58],[298,131,339,59,"gameState"],[298,140,339,68],[298,141,339,69,"invincibilityEndTime"],[298,161,339,89],[299,18,341,16],[299,22,341,20,"isPlayerInvincible"],[299,40,341,38],[299,42,341,40],[300,20,342,18,"console"],[300,27,342,25],[300,28,342,26,"log"],[300,31,342,29],[300,32,342,30],[300,51,342,49,"enemy"],[300,56,342,54],[300,57,342,55,"name"],[300,61,342,59],[300,101,342,99],[300,102,342,100],[301,20,343,18],[302,20,344,18,"enemy"],[302,25,344,23],[302,26,344,24,"lastAttackTick"],[302,40,344,38],[302,43,344,41,"newState"],[302,51,344,49],[302,52,344,50,"currentTick"],[302,63,344,61],[303,18,345,16],[303,19,345,17],[303,25,345,23],[304,20,346,16],[305,20,347,16],[305,24,347,22,"baseAttack"],[305,34,347,32],[305,37,347,35,"enemy"],[305,42,347,40],[305,43,347,41,"stats"],[305,48,347,46],[305,49,347,47,"attack"],[305,55,347,53],[305,58,347,56],[305,61,347,59],[305,62,347,60],[305,63,347,61],[306,20,348,16],[306,24,348,22,"attackDamage"],[306,36,348,34],[306,39,348,37,"Math"],[306,43,348,41],[306,44,348,42,"floor"],[306,49,348,47],[306,50,348,48,"baseAttack"],[306,60,348,58],[306,64,348,62],[306,67,348,65],[306,70,348,68,"Math"],[306,74,348,72],[306,75,348,73,"random"],[306,81,348,79],[306,82,348,80],[306,83,348,81],[306,86,348,84],[306,89,348,87],[306,90,348,88],[306,91,348,89],[306,92,348,90],[306,93,348,91],[307,20,349,16],[307,24,349,22,"playerDefense"],[307,37,349,35],[307,40,349,38,"newState"],[307,48,349,46],[307,49,349,47,"playerStats"],[307,60,349,58],[307,61,349,59,"defense"],[307,68,349,66],[308,20,350,16],[308,24,350,22,"finalDamage"],[308,35,350,33],[308,38,350,36,"Math"],[308,42,350,40],[308,43,350,41,"max"],[308,46,350,44],[308,47,350,45],[308,48,350,46],[308,50,350,48,"attackDamage"],[308,62,350,60],[308,65,350,63,"Math"],[308,69,350,67],[308,70,350,68,"floor"],[308,75,350,73],[308,76,350,74,"playerDefense"],[308,89,350,87],[308,92,350,90],[308,95,350,93],[308,96,350,94],[308,97,350,95],[308,98,350,96],[308,99,350,97],[310,20,352,16,"console"],[310,27,352,23],[310,28,352,24,"log"],[310,31,352,27],[310,32,352,28],[310,53,352,49,"enemy"],[310,58,352,54],[310,59,352,55,"name"],[310,63,352,59],[310,86,352,82,"finalDamage"],[310,97,352,93],[310,109,352,105,"attackDamage"],[310,121,352,117],[310,132,352,128,"Math"],[310,136,352,132],[310,137,352,133,"floor"],[310,142,352,138],[310,143,352,139,"playerDefense"],[310,156,352,152],[310,159,352,155],[310,162,352,158],[310,163,352,159],[310,184,352,180],[310,185,352,181],[312,20,354,16],[313,20,355,16],[313,24,355,22,"newPlayerHealth"],[313,39,355,37],[313,42,355,40,"Math"],[313,46,355,44],[313,47,355,45,"max"],[313,50,355,48],[313,51,355,49],[313,52,355,50],[313,54,355,52,"newState"],[313,62,355,60],[313,63,355,61,"playerStats"],[313,74,355,72],[313,75,355,73,"health"],[313,81,355,79],[313,84,355,82,"finalDamage"],[313,95,355,93],[313,96,355,94],[314,20,356,16,"newState"],[314,28,356,24],[314,29,356,25,"playerStats"],[314,40,356,36],[314,41,356,37,"health"],[314,47,356,43],[314,50,356,46,"newPlayerHealth"],[314,65,356,61],[315,20,358,16,"console"],[315,27,358,23],[315,28,358,24,"log"],[315,31,358,27],[315,32,358,28],[315,53,358,49,"newState"],[315,61,358,57],[315,62,358,58,"playerStats"],[315,73,358,69],[315,74,358,70,"health"],[315,80,358,76],[315,84,358,80,"newState"],[315,92,358,88],[315,93,358,89,"playerStats"],[315,104,358,100],[315,105,358,101,"maxHealth"],[315,114,358,110],[315,124,358,120,"finalDamage"],[315,135,358,131],[315,145,358,141],[315,146,358,142],[317,20,360,16],[318,20,361,16,"enemy"],[318,25,361,21],[318,26,361,22,"lastAttackTick"],[318,40,361,36],[318,43,361,39,"newState"],[318,51,361,47],[318,52,361,48,"currentTick"],[318,63,361,59],[320,20,363,16],[321,20,364,16],[321,24,364,20,"newPlayerHealth"],[321,39,364,35],[321,43,364,39],[321,44,364,40],[321,46,364,42],[322,22,365,18,"console"],[322,29,365,25],[322,30,365,26,"log"],[322,33,365,29],[322,34,365,30],[322,84,365,80],[322,85,365,81],[323,22,366,18],[324,22,367,18,"setTimeout"],[324,32,367,28],[324,33,367,29],[324,39,367,35],[325,24,368,20],[326,24,369,20,"game"],[326,28,369,24],[326,29,369,25,"updateGameState"],[326,44,369,40],[326,45,369,41],[327,26,369,43,"isAlive"],[327,33,369,50],[327,35,369,52],[328,24,369,58],[328,25,369,59],[328,26,369,60],[329,22,370,18],[329,23,370,19],[329,25,370,21],[329,28,370,24],[329,29,370,25],[330,20,371,16],[331,18,372,16],[332,16,373,14],[333,14,374,12],[334,12,375,10],[334,13,375,11],[334,19,375,17],[335,14,376,12],[336,14,377,12],[337,14,378,12],[337,18,378,16,"distance"],[337,26,378,24],[337,29,378,27],[337,31,378,29],[337,33,378,31],[338,16,379,14],[339,16,380,14],[339,20,380,20,"normalizedX"],[339,31,380,31],[339,34,380,34,"deltaX"],[339,40,380,40],[339,43,380,43,"distance"],[339,51,380,51],[340,16,381,14],[340,20,381,20,"normalizedY"],[340,31,381,31],[340,34,381,34,"deltaY"],[340,40,381,40],[340,43,381,43,"distance"],[340,51,381,51],[342,16,383,14],[343,16,384,14],[343,20,384,20,"randomFactor"],[343,32,384,32],[343,35,384,35],[343,38,384,38],[343,39,384,39],[343,40,384,40],[344,16,385,14],[344,20,385,20,"finalX"],[344,26,385,26],[344,29,385,29,"normalizedX"],[344,40,385,40],[344,43,385,43],[344,44,385,44,"Math"],[344,48,385,48],[344,49,385,49,"random"],[344,55,385,55],[344,56,385,56],[344,57,385,57],[344,60,385,60],[344,63,385,63],[344,67,385,67,"randomFactor"],[344,79,385,79],[345,16,386,14],[345,20,386,20,"finalY"],[345,26,386,26],[345,29,386,29,"normalizedY"],[345,40,386,40],[345,43,386,43],[345,44,386,44,"Math"],[345,48,386,48],[345,49,386,49,"random"],[345,55,386,55],[345,56,386,56],[345,57,386,57],[345,60,386,60],[345,63,386,63],[345,67,386,67,"randomFactor"],[345,79,386,79],[347,16,388,14],[348,16,389,14],[348,20,389,18,"newX"],[348,24,389,22],[348,27,389,25,"enemy"],[348,32,389,30],[348,33,389,31,"position"],[348,41,389,39],[348,42,389,40,"x"],[348,43,389,41],[348,46,389,45,"finalX"],[348,52,389,51],[348,55,389,54,"MOVEMENT_SPEED"],[348,69,389,69],[349,16,390,14],[349,20,390,18,"newY"],[349,24,390,22],[349,27,390,25,"enemy"],[349,32,390,30],[349,33,390,31,"position"],[349,41,390,39],[349,42,390,40,"y"],[349,43,390,41],[349,46,390,45,"finalY"],[349,52,390,51],[349,55,390,54,"MOVEMENT_SPEED"],[349,69,390,69],[351,16,392,14],[352,16,393,14,"newX"],[352,20,393,18],[352,23,393,21,"Math"],[352,27,393,25],[352,28,393,26,"max"],[352,31,393,29],[352,32,393,30],[352,33,393,31],[352,35,393,33,"Math"],[352,39,393,37],[352,40,393,38,"min"],[352,43,393,41],[352,44,393,42,"SCREEN_WIDTH"],[352,56,393,54],[352,59,393,57,"ENEMY_SIZE"],[352,69,393,67],[352,71,393,69,"newX"],[352,75,393,73],[352,76,393,74],[352,77,393,75],[353,16,394,14,"newY"],[353,20,394,18],[353,23,394,21,"Math"],[353,27,394,25],[353,28,394,26,"max"],[353,31,394,29],[353,32,394,30],[353,33,394,31],[353,35,394,33,"Math"],[353,39,394,37],[353,40,394,38,"min"],[353,43,394,41],[353,44,394,42,"GAME_AREA_HEIGHT"],[353,60,394,58],[353,63,394,61,"ENEMY_SIZE"],[353,73,394,71],[353,75,394,73,"newY"],[353,79,394,77],[353,80,394,78],[353,81,394,79],[355,16,396,14],[356,16,397,14,"enemy"],[356,21,397,19],[356,22,397,20,"position"],[356,30,397,28],[356,31,397,29,"x"],[356,32,397,30],[356,35,397,33,"newX"],[356,39,397,37],[357,16,398,14,"enemy"],[357,21,398,19],[357,22,398,20,"position"],[357,30,398,28],[357,31,398,29,"y"],[357,32,398,30],[357,35,398,33,"newY"],[357,39,398,37],[358,14,399,12],[359,14,400,12],[360,12,401,10],[361,10,402,8],[362,8,403,6],[362,9,403,7],[362,10,403,8],[364,8,405,6],[365,8,406,6],[365,12,406,10,"newState"],[365,20,406,18],[365,21,406,19,"shadowClone"],[365,32,406,30],[365,34,406,32],[366,10,407,8],[367,10,408,8,"newState"],[367,18,408,16],[367,19,408,17,"shadowClone"],[367,30,408,28],[367,31,408,29,"remainingTicks"],[367,45,408,43],[367,47,408,45],[369,10,410,8],[370,10,411,8],[370,14,411,14,"cloneOffset"],[370,25,411,25],[370,28,411,28],[370,30,411,30],[370,31,411,31],[370,32,411,32],[371,10,412,8,"newState"],[371,18,412,16],[371,19,412,17,"shadowClone"],[371,30,412,28],[371,31,412,29,"position"],[371,39,412,37],[371,40,412,38,"x"],[371,41,412,39],[371,44,412,42,"currentNinjaPosition"],[371,64,412,62],[371,65,412,63,"x"],[371,66,412,64],[371,69,412,67,"cloneOffset"],[371,80,412,78],[372,10,413,8,"newState"],[372,18,413,16],[372,19,413,17,"shadowClone"],[372,30,413,28],[372,31,413,29,"position"],[372,39,413,37],[372,40,413,38,"y"],[372,41,413,39],[372,44,413,42,"currentNinjaPosition"],[372,64,413,62],[372,65,413,63,"y"],[372,66,413,64],[372,69,413,67],[372,71,413,69],[374,10,415,8],[375,10,416,8],[375,14,416,12,"newState"],[375,22,416,20],[375,23,416,21,"shadowClone"],[375,34,416,32],[375,35,416,33,"remainingTicks"],[375,49,416,47],[375,53,416,51],[375,54,416,52],[375,56,416,54],[376,12,417,10,"console"],[376,19,417,17],[376,20,417,18,"log"],[376,23,417,21],[376,24,417,22],[376,75,417,73],[376,76,417,74],[377,12,418,10,"newState"],[377,20,418,18],[377,21,418,19,"shadowClone"],[377,32,418,30],[377,35,418,33,"undefined"],[377,44,418,42],[378,10,419,8],[378,11,419,9],[378,17,419,15],[379,12,420,10],[380,12,421,10],[381,12,422,10],[381,16,422,16,"CLONE_ATTACK_INTERVAL"],[381,37,422,37],[381,40,422,40],[381,42,422,42],[382,12,423,10],[382,16,423,14,"newState"],[382,24,423,22],[382,25,423,23,"currentTick"],[382,36,423,34],[382,39,423,37,"CLONE_ATTACK_INTERVAL"],[382,60,423,58],[382,65,423,63],[382,66,423,64],[382,70,423,68,"newState"],[382,78,423,76],[382,79,423,77,"enemies"],[382,86,423,84],[382,87,423,85,"length"],[382,93,423,91],[382,96,423,94],[382,97,423,95],[382,99,423,97],[383,14,424,12,"console"],[383,21,424,19],[383,22,424,20,"log"],[383,25,424,23],[383,26,424,24],[383,83,424,81],[383,84,424,82],[385,14,426,12],[386,14,427,12],[386,18,427,18,"target"],[386,24,427,24],[386,27,427,27,"findClosestEnemyInternal"],[386,51,427,51],[386,52,427,52,"newState"],[386,60,427,60],[386,61,427,61,"enemies"],[386,68,427,68],[386,69,427,69],[387,14,428,12],[387,18,428,16,"target"],[387,24,428,22],[387,26,428,24],[388,16,429,14],[389,16,430,14],[389,20,430,20,"cloneDamage"],[389,31,430,31],[389,34,430,34,"Math"],[389,38,430,38],[389,39,430,39,"floor"],[389,44,430,44],[389,45,430,45,"newState"],[389,53,430,53],[389,54,430,54,"playerStats"],[389,65,430,65],[389,66,430,66,"attack"],[389,72,430,72],[389,75,430,75],[389,78,430,78],[389,79,430,79],[391,16,432,14],[392,16,433,14,"createProjectile"],[392,32,433,30],[392,33,433,31,"target"],[392,39,433,37],[392,41,433,39,"cloneDamage"],[392,52,433,50],[392,54,433,52,"newState"],[392,62,433,60],[392,63,433,61,"shadowClone"],[392,74,433,72],[392,75,433,73,"position"],[392,83,433,81],[392,85,433,83],[393,18,434,16,"id"],[393,20,434,18],[393,22,434,20],[393,43,434,41],[394,18,435,16,"name"],[394,22,435,20],[394,24,435,22],[394,45,435,43],[395,18,436,16,"icon"],[395,22,436,20],[395,24,436,22],[396,16,437,14],[396,17,437,15],[396,18,437,16],[397,14,438,12],[398,12,439,10],[399,10,440,8],[400,8,441,6],[402,8,443,6],[403,8,444,6],[404,8,445,6,"console"],[404,15,445,13],[404,16,445,14,"log"],[404,19,445,17],[404,20,445,18],[404,63,445,61,"isManualControlActive"],[404,84,445,82],[404,97,445,95,"game"],[404,101,445,99],[404,102,445,100,"gameState"],[404,111,445,109],[404,112,445,110,"isAlive"],[404,119,445,117],[404,121,445,119],[404,122,445,120],[405,8,446,6],[405,12,446,10],[405,13,446,11,"isManualControlActive"],[405,34,446,32],[405,38,446,36,"game"],[405,42,446,40],[405,43,446,41,"gameState"],[405,52,446,50],[405,53,446,51,"isAlive"],[405,60,446,58],[405,62,446,60],[406,10,447,8],[406,15,447,13],[406,19,447,17,"i"],[406,20,447,18],[406,23,447,21],[406,24,447,22],[406,26,447,24,"i"],[406,27,447,25],[406,30,447,28],[406,31,447,29],[406,33,447,31,"i"],[406,34,447,32],[406,36,447,34],[406,38,447,36],[407,12,448,10],[407,16,448,14,"newState"],[407,24,448,22],[407,25,448,23,"abilityManager"],[407,39,448,37],[407,40,448,38,"isAbilityReady"],[407,54,448,52],[407,55,448,53,"i"],[407,56,448,54],[407,57,448,55],[407,61,448,59,"newState"],[407,69,448,67],[407,70,448,68,"enemies"],[407,77,448,75],[407,78,448,76,"length"],[407,84,448,82],[407,87,448,85],[407,88,448,86],[407,90,448,88],[408,14,449,12],[408,18,449,16,"newState"],[408,26,449,24],[408,27,449,25,"abilityManager"],[408,41,449,39],[408,42,449,40,"useAbility"],[408,52,449,50],[408,53,449,51,"i"],[408,54,449,52],[408,56,449,54,"newTick"],[408,63,449,61],[408,64,449,62],[408,66,449,64],[409,16,450,14,"console"],[409,23,450,21],[409,24,450,22,"log"],[409,27,450,25],[409,28,450,26],[409,73,450,71,"i"],[409,74,450,72],[409,76,450,74],[409,77,450,75],[410,16,451,14,"castAbility"],[410,27,451,25],[410,28,451,26,"newState"],[410,36,451,34],[410,38,451,36,"i"],[410,39,451,37],[410,40,451,38],[411,14,452,12],[412,12,453,10],[413,10,454,8],[414,8,455,6],[416,8,457,6],[417,8,458,6],[417,12,458,12,"dyingEnemies"],[417,24,458,24],[417,27,458,27,"newState"],[417,35,458,35],[417,36,458,36,"enemies"],[417,43,458,43],[417,44,458,44,"filter"],[417,50,458,50],[417,51,458,51,"enemy"],[417,56,458,56],[417,60,458,60,"enemy"],[417,65,458,65],[417,66,458,66,"isDying"],[417,73,458,73],[417,77,458,77,"enemy"],[417,82,458,82],[417,83,458,83,"health"],[417,89,458,89],[417,93,458,93],[417,94,458,94],[417,95,458,95],[418,8,459,6],[418,12,459,12,"deadEnemies"],[418,23,459,23],[418,26,459,26,"newState"],[418,34,459,34],[418,35,459,35,"enemies"],[418,42,459,42],[418,43,459,43,"filter"],[418,49,459,49],[418,50,459,50,"enemy"],[418,55,459,55],[418,59,459,59,"enemy"],[418,64,459,64],[418,65,459,65,"health"],[418,71,459,71],[418,75,459,75],[418,76,459,76],[418,80,459,80],[418,81,459,81,"enemy"],[418,86,459,86],[418,87,459,87,"isDying"],[418,94,459,94],[418,95,459,95],[420,8,461,6],[421,8,462,6,"enemiesToKill"],[421,21,462,19],[421,24,462,22],[421,25,462,23],[421,28,462,26,"deadEnemies"],[421,39,462,37],[421,41,462,39],[421,44,462,42,"dyingEnemies"],[421,56,462,54],[421,57,462,55],[421,58,462,56],[421,59,462,57],[423,8,464,6],[424,8,465,6],[424,12,465,12,"currentTime"],[424,23,465,23],[424,26,465,26,"Date"],[424,30,465,30],[424,31,465,31,"now"],[424,34,465,34],[424,35,465,35],[424,36,465,36],[425,8,466,6,"newState"],[425,16,466,14],[425,17,466,15,"enemies"],[425,24,466,22],[425,27,466,25,"newState"],[425,35,466,33],[425,36,466,34,"enemies"],[425,43,466,41],[425,44,466,42,"filter"],[425,50,466,48],[425,51,466,49,"enemy"],[425,56,466,54],[425,60,466,58],[426,10,467,8],[426,14,467,12,"enemy"],[426,19,467,17],[426,20,467,18,"isDying"],[426,27,467,25],[426,31,467,29,"enemy"],[426,36,467,34],[426,37,467,35,"deathStartTime"],[426,51,467,49],[426,53,467,51],[427,12,468,10],[427,16,468,16,"animationDuration"],[427,33,468,33],[427,36,468,36],[427,39,468,39],[427,40,468,40],[427,41,468,41],[428,12,469,10],[428,16,469,16,"isAnimationComplete"],[428,35,469,35],[428,38,469,38,"currentTime"],[428,49,469,49],[428,52,469,52,"enemy"],[428,57,469,57],[428,58,469,58,"deathStartTime"],[428,72,469,72],[428,76,469,76,"animationDuration"],[428,93,469,93],[429,12,470,10],[429,16,470,14,"isAnimationComplete"],[429,35,470,33],[429,37,470,35],[430,14,471,12,"console"],[430,21,471,19],[430,22,471,20,"log"],[430,25,471,23],[430,26,471,24],[430,58,471,56,"enemy"],[430,63,471,61],[430,64,471,62,"name"],[430,68,471,66],[430,86,471,84,"currentTime"],[430,97,471,95],[430,100,471,98,"enemy"],[430,105,471,103],[430,106,471,104,"deathStartTime"],[430,120,471,118],[430,129,471,127],[430,130,471,128],[431,14,472,12],[431,21,472,19],[431,26,472,24],[431,27,472,25],[431,28,472,26],[432,12,473,10],[433,10,474,8],[434,10,475,8],[434,17,475,15],[434,21,475,19],[434,22,475,20],[434,23,475,21],[435,8,476,6],[435,9,476,7],[435,10,476,8],[437,8,478,6],[438,8,479,6],[438,12,479,10,"deadEnemies"],[438,23,479,21],[438,24,479,22,"length"],[438,30,479,28],[438,33,479,31],[438,34,479,32],[438,36,479,34],[439,10,480,8,"console"],[439,17,480,15],[439,18,480,16,"log"],[439,21,480,19],[439,22,480,20],[439,49,480,47,"deadEnemies"],[439,60,480,58],[439,61,480,59,"length"],[439,67,480,65],[439,83,480,81],[439,85,480,83,"deadEnemies"],[439,96,480,94],[439,97,480,95,"map"],[439,100,480,98],[439,101,480,99,"e"],[439,102,480,100],[439,106,480,104],[439,109,480,107,"e"],[439,110,480,108],[439,111,480,109,"id"],[439,113,480,111],[439,117,480,115,"e"],[439,118,480,116],[439,119,480,117,"health"],[439,125,480,123],[439,130,480,128],[439,131,480,129],[439,132,480,130],[440,8,481,6],[442,8,483,6],[443,8,484,6],[443,12,484,12,"lowHealthEnemies"],[443,28,484,28],[443,31,484,31,"newState"],[443,39,484,39],[443,40,484,40,"enemies"],[443,47,484,47],[443,48,484,48,"filter"],[443,54,484,54],[443,55,484,55,"enemy"],[443,60,484,60],[443,64,484,64,"enemy"],[443,69,484,69],[443,70,484,70,"health"],[443,76,484,76],[443,80,484,80],[443,82,484,82],[443,86,484,86,"enemy"],[443,91,484,91],[443,92,484,92,"health"],[443,98,484,98],[443,101,484,101],[443,102,484,102],[443,103,484,103],[444,8,485,6],[444,12,485,10,"lowHealthEnemies"],[444,28,485,26],[444,29,485,27,"length"],[444,35,485,33],[444,38,485,36],[444,39,485,37],[444,41,485,39],[445,10,486,8,"console"],[445,17,486,15],[445,18,486,16,"log"],[445,21,486,19],[445,22,486,20],[445,61,486,59],[445,63,486,61,"lowHealthEnemies"],[445,79,486,77],[445,80,486,78,"map"],[445,83,486,81],[445,84,486,82,"e"],[445,85,486,83],[445,89,486,87],[445,92,486,90,"e"],[445,93,486,91],[445,94,486,92,"id"],[445,96,486,94],[445,100,486,98,"e"],[445,101,486,99],[445,102,486,100,"health"],[445,108,486,106],[445,112,486,110,"e"],[445,113,486,111],[445,114,486,112,"maxHealth"],[445,123,486,121],[445,128,486,126],[445,129,486,127],[445,130,486,128],[446,8,487,6],[448,8,489,6],[449,8,490,6],[449,12,490,12,"beforeCount"],[449,23,490,23],[449,26,490,26,"newState"],[449,34,490,34],[449,35,490,35,"enemies"],[449,42,490,42],[449,43,490,43,"length"],[449,49,490,49],[450,8,491,6,"newState"],[450,16,491,14],[450,17,491,15,"enemies"],[450,24,491,22],[450,27,491,25,"newState"],[450,35,491,33],[450,36,491,34,"enemies"],[450,43,491,41],[450,44,491,42,"filter"],[450,50,491,48],[450,51,491,49,"enemy"],[450,56,491,54],[450,60,491,58,"enemy"],[450,65,491,63],[450,66,491,64,"health"],[450,72,491,70],[450,75,491,73],[450,76,491,74],[450,77,491,75],[451,8,492,6],[451,12,492,12,"afterCount"],[451,22,492,22],[451,25,492,25,"newState"],[451,33,492,33],[451,34,492,34,"enemies"],[451,41,492,41],[451,42,492,42,"length"],[451,48,492,48],[452,8,494,6],[452,12,494,10,"beforeCount"],[452,23,494,21],[452,28,494,26,"afterCount"],[452,38,494,36],[452,40,494,38],[453,10,495,8,"console"],[453,17,495,15],[453,18,495,16,"log"],[453,21,495,19],[453,22,495,20],[453,52,495,50,"beforeCount"],[453,63,495,61],[453,66,495,64,"afterCount"],[453,76,495,74],[453,102,495,100],[453,103,495,101],[454,8,496,6],[456,8,498,6],[457,8,499,6],[458,8,500,6],[458,12,500,12,"MAX_ENEMIES"],[458,23,500,23],[458,26,500,26],[458,28,500,28],[458,29,500,29],[458,30,500,30],[459,8,501,6],[459,12,501,12,"MIN_SPAWN_DELAY"],[459,27,501,27],[459,30,501,30],[459,33,501,33],[459,34,501,34],[459,35,501,35],[460,8,502,6],[460,12,502,12,"now"],[460,15,502,15],[460,18,502,18,"Date"],[460,22,502,22],[460,23,502,23,"now"],[460,26,502,26],[460,27,502,27],[460,28,502,28],[461,8,503,6],[461,12,503,12,"hasBoss"],[461,19,503,19],[461,22,503,22,"newState"],[461,30,503,30],[461,31,503,31,"enemies"],[461,38,503,38],[461,39,503,39,"some"],[461,43,503,43],[461,44,503,44,"enemy"],[461,49,503,49],[461,53,503,53,"enemy"],[461,58,503,58],[461,59,503,59,"isBoss"],[461,65,503,65],[461,66,503,66],[463,8,505,6],[464,8,506,6],[464,12,506,10],[464,13,506,11,"newState"],[464,21,506,19],[464,22,506,20,"lastSpawnTime"],[464,35,506,33],[464,37,506,35],[465,10,507,8,"newState"],[465,18,507,16],[465,19,507,17,"lastSpawnTime"],[465,32,507,30],[465,35,507,33,"now"],[465,38,507,36],[466,8,508,6],[467,8,510,6,"console"],[467,15,510,13],[467,16,510,14,"log"],[467,19,510,17],[467,20,510,18],[467,53,510,51,"newState"],[467,61,510,59],[467,62,510,60,"enemies"],[467,69,510,67],[467,70,510,68,"length"],[467,76,510,74],[467,85,510,83,"MAX_ENEMIES"],[467,96,510,94],[467,109,510,107,"hasBoss"],[467,116,510,114],[467,118,510,116],[467,119,510,117],[469,8,512,6],[470,8,513,6],[470,12,513,10],[470,13,513,11,"hasBoss"],[470,20,513,18],[470,24,513,22,"newState"],[470,32,513,30],[470,33,513,31,"enemies"],[470,40,513,38],[470,41,513,39,"length"],[470,47,513,45],[470,50,513,48,"MAX_ENEMIES"],[470,61,513,59],[470,65,513,64,"now"],[470,68,513,67],[470,71,513,70,"newState"],[470,79,513,78],[470,80,513,79,"lastSpawnTime"],[470,93,513,92],[470,97,513,97,"MIN_SPAWN_DELAY"],[470,112,513,112],[470,114,513,114],[471,10,514,8,"console"],[471,17,514,15],[471,18,514,16,"log"],[471,21,514,19],[471,22,514,20],[471,43,514,41,"newState"],[471,51,514,49],[471,52,514,50,"enemies"],[471,59,514,57],[471,60,514,58,"length"],[471,66,514,64],[471,69,514,67],[471,70,514,68],[471,74,514,72,"MAX_ENEMIES"],[471,85,514,83],[471,87,514,85],[471,88,514,86],[472,10,515,8,"spawnTestEnemy"],[472,24,515,22],[472,25,515,23,"newState"],[472,33,515,31],[472,34,515,32],[473,10,516,8,"newState"],[473,18,516,16],[473,19,516,17,"lastSpawnTime"],[473,32,516,30],[473,35,516,33,"now"],[473,38,516,36],[474,8,517,6],[475,8,519,6],[475,15,519,13,"newState"],[475,23,519,21],[476,6,520,4],[476,7,520,5],[476,47,520,6],[478,6,522,4],[479,6,523,4,"console"],[479,13,523,11],[479,14,523,12,"log"],[479,17,523,15],[479,18,523,16],[479,50,523,48,"enemiesToKill"],[479,63,523,61],[479,64,523,62,"length"],[479,70,523,68],[479,101,523,99],[479,102,523,100],[480,6,525,4,"enemiesToKill"],[480,19,525,17],[480,20,525,18,"forEach"],[480,27,525,25],[480,28,525,26],[480,29,525,27,"enemy"],[480,34,525,32],[480,36,525,34,"index"],[480,41,525,39],[480,46,525,44],[481,8,526,6,"console"],[481,15,526,13],[481,16,526,14,"log"],[481,19,526,17],[481,20,526,18],[481,57,526,55,"index"],[481,62,526,60],[481,65,526,63],[481,66,526,64],[481,70,526,68,"enemiesToKill"],[481,83,526,81],[481,84,526,82,"length"],[481,90,526,88],[481,104,526,102,"enemy"],[481,109,526,107],[481,110,526,108,"id"],[481,112,526,110],[481,114,526,112],[481,115,526,113],[482,8,527,6,"handleEnemyKill"],[482,23,527,21],[482,24,527,22,"enemy"],[482,29,527,27],[482,30,527,28],[483,6,528,4],[483,7,528,5],[483,8,528,6],[484,4,529,2],[484,5,529,3],[484,7,529,5],[484,8,529,6,"handleEnemyKill"],[484,23,529,21],[484,24,529,22],[484,25,529,23],[484,26,529,24],[484,27,529,25],[486,4,531,2],[487,4,532,2],[487,8,532,8,"findClosestEnemyInternal"],[487,32,532,32],[487,35,532,36,"enemies"],[487,42,532,58],[487,46,532,83],[488,6,533,4],[488,10,533,8,"enemies"],[488,17,533,15],[488,18,533,16,"length"],[488,24,533,22],[488,29,533,27],[488,30,533,28],[488,32,533,30],[488,39,533,37],[488,43,533,41],[490,6,535,4],[491,6,536,4],[491,10,536,10,"SCREEN_WIDTH"],[491,22,536,22],[491,25,536,25],[491,28,536,28],[492,6,537,4],[492,10,537,10,"GAME_AREA_HEIGHT"],[492,26,537,26],[492,29,537,29],[492,32,537,32],[492,35,537,35],[492,38,537,38],[492,39,537,39],[492,40,537,40],[493,6,538,4],[493,10,538,10,"ninjaX"],[493,16,538,16],[493,19,538,19,"SCREEN_WIDTH"],[493,31,538,31],[493,34,538,34],[493,35,538,35],[494,6,539,4],[494,10,539,10,"ninjaY"],[494,16,539,16],[494,19,539,19,"GAME_AREA_HEIGHT"],[494,35,539,35],[494,38,539,38],[494,39,539,39],[495,6,541,4],[495,10,541,8,"closestEnemy"],[495,22,541,20],[495,25,541,23,"enemies"],[495,32,541,30],[495,33,541,31],[495,34,541,32],[495,35,541,33],[496,6,542,4],[496,10,542,8,"closestDistance"],[496,25,542,23],[496,28,542,26,"Infinity"],[496,36,542,34],[497,6,544,4,"enemies"],[497,13,544,11],[497,14,544,12,"forEach"],[497,21,544,19],[497,22,544,20,"enemy"],[497,27,544,25],[497,31,544,29],[498,8,545,6],[498,12,545,12,"distance"],[498,20,545,20],[498,23,545,23,"Math"],[498,27,545,27],[498,28,545,28,"sqrt"],[498,32,545,32],[498,33,546,8,"Math"],[498,37,546,12],[498,38,546,13,"pow"],[498,41,546,16],[498,42,546,17,"enemy"],[498,47,546,22],[498,48,546,23,"position"],[498,56,546,31],[498,57,546,32,"x"],[498,58,546,33],[498,61,546,36,"ninjaX"],[498,67,546,42],[498,69,546,44],[498,70,546,45],[498,71,546,46],[498,74,547,8,"Math"],[498,78,547,12],[498,79,547,13,"pow"],[498,82,547,16],[498,83,547,17,"enemy"],[498,88,547,22],[498,89,547,23,"position"],[498,97,547,31],[498,98,547,32,"y"],[498,99,547,33],[498,102,547,36,"ninjaY"],[498,108,547,42],[498,110,547,44],[498,111,547,45],[498,112,548,6],[498,113,548,7],[499,8,550,6],[499,12,550,10,"distance"],[499,20,550,18],[499,23,550,21,"closestDistance"],[499,38,550,36],[499,40,550,38],[500,10,551,8,"closestDistance"],[500,25,551,23],[500,28,551,26,"distance"],[500,36,551,34],[501,10,552,8,"closestEnemy"],[501,22,552,20],[501,25,552,23,"enemy"],[501,30,552,28],[502,8,553,6],[503,6,554,4],[503,7,554,5],[503,8,554,6],[504,6,556,4,"console"],[504,13,556,11],[504,14,556,12,"log"],[504,17,556,15],[504,18,556,16],[504,60,556,58,"closestDistance"],[504,75,556,73],[504,76,556,74,"toFixed"],[504,83,556,81],[504,84,556,82],[504,85,556,83],[504,86,556,84],[504,88,556,86],[504,89,556,87],[505,6,557,4],[505,13,557,11,"closestEnemy"],[505,25,557,23],[506,4,558,2],[506,5,558,3],[508,4,560,2],[509,4,561,2],[509,8,561,8,"findClosestEnemy"],[509,24,561,24],[509,27,561,27,"findClosestEnemy"],[509,28,561,27],[509,33,561,53],[510,6,562,4],[510,13,562,11,"findClosestEnemyInternal"],[510,37,562,35],[510,38,562,36,"combatState"],[510,49,562,47],[510,50,562,48,"enemies"],[510,57,562,55],[510,58,562,56],[511,4,563,2],[511,5,563,3],[513,4,565,2],[514,4,566,2],[514,8,566,2,"_useState7"],[514,18,566,2],[514,21,566,58],[514,25,566,58,"useState"],[514,31,566,66],[514,32,566,66,"useState"],[514,40,566,66],[514,42,566,91],[515,8,566,93,"x"],[515,9,566,94],[515,11,566,96],[515,12,566,97],[516,8,566,99,"y"],[516,9,566,100],[516,11,566,102],[517,6,566,104],[517,7,566,105],[517,8,566,106],[518,6,566,106,"_useState8"],[518,16,566,106],[518,23,566,106,"_slicedToArray"],[518,37,566,106],[518,38,566,106,"default"],[518,45,566,106],[518,47,566,106,"_useState7"],[518,57,566,106],[519,6,566,9,"currentNinjaPosition"],[519,26,566,29],[519,29,566,29,"_useState8"],[519,39,566,29],[520,6,566,31,"setCurrentNinjaPosition"],[520,29,566,54],[520,32,566,54,"_useState8"],[520,42,566,54],[521,4,567,2],[521,8,567,2,"_useState9"],[521,18,567,2],[521,21,567,60],[521,25,567,60,"useState"],[521,31,567,68],[521,32,567,68,"useState"],[521,40,567,68],[521,42,567,69],[521,47,567,74],[521,48,567,75],[522,6,567,75,"_useState0"],[522,16,567,75],[522,23,567,75,"_slicedToArray"],[522,37,567,75],[522,38,567,75,"default"],[522,45,567,75],[522,47,567,75,"_useState9"],[522,57,567,75],[523,6,567,9,"isManualControlActive"],[523,27,567,30],[523,30,567,30,"_useState0"],[523,40,567,30],[524,6,567,32,"setIsManualControlActive"],[524,30,567,56],[524,33,567,56,"_useState0"],[524,43,567,56],[526,4,569,2],[527,4,570,2],[527,8,570,8,"updateNinjaPosition"],[527,27,570,27],[527,30,570,30],[527,34,570,30,"useCallback"],[527,40,570,41],[527,41,570,41,"useCallback"],[527,52,570,41],[527,54,570,43,"newPosition"],[527,65,570,78],[527,69,570,83],[528,6,571,4,"setCurrentNinjaPosition"],[528,29,571,27],[528,30,571,28,"newPosition"],[528,41,571,39],[528,42,571,40],[529,4,572,2],[529,5,572,3],[529,7,572,5],[529,9,572,7],[529,10,572,8],[531,4,574,2],[532,4,575,2],[532,8,575,8,"setManualControlActive"],[532,30,575,30],[532,33,575,33],[532,37,575,33,"useCallback"],[532,43,575,44],[532,44,575,44,"useCallback"],[532,55,575,44],[532,57,575,46,"active"],[532,63,575,61],[532,67,575,66],[533,6,576,4,"setIsManualControlActive"],[533,30,576,28],[533,31,576,29,"active"],[533,37,576,35],[533,38,576,36],[534,6,577,4,"console"],[534,13,577,11],[534,14,577,12,"log"],[534,17,577,15],[534,18,577,16],[534,39,577,37,"active"],[534,45,577,43],[534,48,577,46],[534,59,577,57],[534,62,577,60],[534,75,577,73],[534,88,577,86,"active"],[534,94,577,92],[534,97,577,95],[534,105,577,103],[534,108,577,106],[534,117,577,115],[534,119,577,117],[534,120,577,118],[535,4,578,2],[535,5,578,3],[535,7,578,5],[535,9,578,7],[535,10,578,8],[537,4,580,2],[538,4,581,2],[538,8,581,8,"handleProjectileHit"],[538,27,581,27],[538,30,581,31,"projectile"],[538,40,581,59],[538,44,581,64],[539,6,582,4,"console"],[539,13,582,11],[539,14,582,12,"log"],[539,17,582,15],[539,18,582,16],[539,35,582,33,"projectile"],[539,45,582,43],[539,46,582,44,"id"],[539,48,582,46],[539,62,582,60,"projectile"],[539,72,582,70],[539,73,582,71,"targetEnemyId"],[539,86,582,84],[539,94,582,92,"projectile"],[539,104,582,102],[539,105,582,103,"damage"],[539,111,582,109],[539,120,582,118],[539,121,582,119],[540,6,584,4,"setCombatState"],[540,20,584,18],[540,21,584,19,"prev"],[540,25,584,23],[540,29,584,27],[541,8,585,6],[541,12,585,12,"newState"],[541,20,585,20],[541,23,585,23],[542,10,585,25],[542,13,585,28,"prev"],[543,8,585,33],[543,9,585,34],[545,8,587,6],[546,8,588,6],[546,12,588,12,"enemyIndex"],[546,22,588,22],[546,25,588,25,"newState"],[546,33,588,33],[546,34,588,34,"enemies"],[546,41,588,41],[546,42,588,42,"findIndex"],[546,51,588,51],[546,52,588,52,"e"],[546,53,588,53],[546,57,588,57,"e"],[546,58,588,58],[546,59,588,59,"id"],[546,61,588,61],[546,66,588,66,"projectile"],[546,76,588,76],[546,77,588,77,"targetEnemyId"],[546,90,588,90],[546,91,588,91],[547,8,589,6],[547,12,589,10,"enemyIndex"],[547,22,589,20],[547,26,589,24],[547,27,589,25],[547,29,589,27],[548,10,590,8,"newState"],[548,18,590,16],[548,19,590,17,"enemies"],[548,26,590,24],[548,29,590,27],[548,30,590,28],[548,33,590,31,"newState"],[548,41,590,39],[548,42,590,40,"enemies"],[548,49,590,47],[548,50,590,48],[549,10,591,8,"newState"],[549,18,591,16],[549,19,591,17,"enemies"],[549,26,591,24],[549,27,591,25,"enemyIndex"],[549,37,591,35],[549,38,591,36],[549,41,591,39],[550,12,592,10],[550,15,592,13,"newState"],[550,23,592,21],[550,24,592,22,"enemies"],[550,31,592,29],[550,32,592,30,"enemyIndex"],[550,42,592,40],[550,43,592,41],[551,12,593,10,"health"],[551,18,593,16],[551,20,593,18,"newState"],[551,28,593,26],[551,29,593,27,"enemies"],[551,36,593,34],[551,37,593,35,"enemyIndex"],[551,47,593,45],[551,48,593,46],[551,49,593,47,"health"],[551,55,593,53],[551,58,593,56,"projectile"],[551,68,593,66],[551,69,593,67,"damage"],[551,75,593,73],[552,12,594,10,"lastDamaged"],[552,23,594,21],[552,25,594,23,"combatEngine"],[552,44,594,35],[552,45,594,35,"combatEngine"],[552,57,594,35],[552,58,594,36,"getCurrentTick"],[552,72,594,50],[552,73,594,51],[553,10,595,8],[553,11,595,9],[554,10,597,8,"console"],[554,17,597,15],[554,18,597,16,"log"],[554,21,597,19],[554,22,597,20],[554,34,597,32,"projectile"],[554,44,597,42],[554,45,597,43,"targetEnemyId"],[554,58,597,56],[554,70,597,68,"newState"],[554,78,597,76],[554,79,597,77,"enemies"],[554,86,597,84],[554,87,597,85,"enemyIndex"],[554,97,597,95],[554,98,597,96],[554,99,597,97,"health"],[554,105,597,103],[554,109,597,107,"newState"],[554,117,597,115],[554,118,597,116,"enemies"],[554,125,597,123],[554,126,597,124,"enemyIndex"],[554,136,597,134],[554,137,597,135],[554,138,597,136,"maxHealth"],[554,147,597,145],[554,149,597,147],[554,150,597,148],[555,8,598,6],[556,8,600,6],[556,15,600,13,"newState"],[556,23,600,21],[557,6,601,4],[557,7,601,5],[557,8,601,6],[559,6,603,4],[560,6,604,4,"setProjectiles"],[560,20,604,18],[560,21,604,19,"prev"],[560,25,604,23],[560,29,604,27,"prev"],[560,33,604,31],[560,34,604,32,"filter"],[560,40,604,38],[560,41,604,39,"p"],[560,42,604,40],[560,46,604,44,"p"],[560,47,604,45],[560,48,604,46,"id"],[560,50,604,48],[560,55,604,53,"projectile"],[560,65,604,63],[560,66,604,64,"id"],[560,68,604,66],[560,69,604,67],[560,70,604,68],[561,4,605,2],[561,5,605,3],[563,4,607,2],[564,4,608,2],[564,8,608,8,"castAbility"],[564,19,608,19],[564,22,608,22,"castAbility"],[564,23,608,23,"state"],[564,28,608,41],[564,30,608,43,"slotIndex"],[564,39,608,60],[564,44,608,65],[565,6,609,4],[565,10,609,10,"deck"],[565,14,609,14],[565,17,609,17,"state"],[565,22,609,22],[565,23,609,23,"abilityManager"],[565,37,609,37],[565,38,609,38,"getDeck"],[565,45,609,45],[565,46,609,46],[565,47,609,47],[566,6,610,4],[566,10,610,10,"ability"],[566,17,610,17],[566,20,610,20,"deck"],[566,24,610,24],[566,25,610,25,"slots"],[566,30,610,30],[566,31,610,31,"slotIndex"],[566,40,610,40],[566,41,610,41],[567,6,611,4],[567,10,611,8],[567,11,611,9,"ability"],[567,18,611,16],[567,20,611,18],[568,6,613,4,"console"],[568,13,613,11],[568,14,613,12,"log"],[568,17,613,15],[568,18,613,16],[568,43,613,41,"ability"],[568,50,613,48],[568,51,613,49,"id"],[568,53,613,51],[568,67,613,65,"slotIndex"],[568,76,613,74],[568,78,613,76],[568,79,613,77],[570,6,615,4],[571,6,616,4],[571,10,616,8,"damage"],[571,16,616,14],[571,19,616,17,"ability"],[571,26,616,24],[571,27,616,25,"stats"],[571,32,616,30],[571,33,616,31,"baseDamage"],[571,43,616,41],[573,6,618,4],[574,6,619,4,"deck"],[574,10,619,8],[574,11,619,9,"activeSynergies"],[574,26,619,24],[574,27,619,25,"forEach"],[574,34,619,32],[574,35,619,33,"synergy"],[574,42,619,40],[574,46,619,44],[575,8,620,6],[575,12,620,10,"synergy"],[575,19,620,17],[575,20,620,18,"bonus"],[575,25,620,23],[575,26,620,24,"damageBonus"],[575,37,620,35],[575,41,621,10,"synergy"],[575,48,621,17],[575,49,621,18,"requiredTags"],[575,61,621,30],[575,62,621,31,"some"],[575,66,621,35],[575,67,621,36,"tag"],[575,70,621,39],[575,74,621,43,"ability"],[575,81,621,50],[575,82,621,51,"tags"],[575,86,621,55],[575,87,621,56,"includes"],[575,95,621,64],[575,96,621,65,"tag"],[575,99,621,68],[575,100,621,69],[575,101,621,70],[575,103,621,72],[576,10,622,8,"damage"],[576,16,622,14],[576,20,622,19],[576,21,622,20],[576,24,622,23,"synergy"],[576,31,622,30],[576,32,622,31,"bonus"],[576,37,622,36],[576,38,622,37,"damageBonus"],[576,49,622,48],[576,52,622,51],[576,55,622,55],[577,8,623,6],[578,6,624,4],[578,7,624,5],[578,8,624,6],[580,6,626,4],[581,6,627,4],[581,10,627,10,"isAOE"],[581,15,627,15],[581,18,627,18,"ability"],[581,25,627,25],[581,26,627,26,"effects"],[581,33,627,33],[581,34,627,34,"includes"],[581,42,627,42],[581,43,627,43],[581,48,627,48],[581,49,627,49],[581,53,627,53,"ability"],[581,60,627,60],[581,61,627,61,"stats"],[581,66,627,66],[581,67,627,67,"aoeRadius"],[581,76,627,76],[582,6,628,4,"console"],[582,13,628,11],[582,14,628,12,"log"],[582,17,628,15],[582,18,628,16],[582,39,628,37,"ability"],[582,46,628,44],[582,47,628,45,"name"],[582,51,628,49],[582,66,628,64,"JSON"],[582,70,628,68],[582,71,628,69,"stringify"],[582,80,628,78],[582,81,628,79,"ability"],[582,88,628,86],[582,89,628,87,"effects"],[582,96,628,94],[582,97,628,95],[582,113,628,111,"ability"],[582,120,628,118],[582,121,628,119,"stats"],[582,126,628,124],[582,127,628,125,"aoeRadius"],[582,136,628,134],[582,148,628,146,"isAOE"],[582,153,628,151],[582,155,628,153],[582,156,628,154],[583,6,630,4],[583,10,630,8,"isAOE"],[583,15,630,13],[583,17,630,15],[584,8,631,6,"console"],[584,15,631,13],[584,16,631,14,"log"],[584,19,631,17],[584,20,631,18],[584,39,631,37,"ability"],[584,46,631,44],[584,47,631,45,"name"],[584,51,631,49],[584,67,631,65,"ability"],[584,74,631,72],[584,75,631,73,"stats"],[584,80,631,78],[584,81,631,79,"aoeRadius"],[584,90,631,88],[584,92,631,90],[584,93,631,91],[586,8,633,6],[587,8,634,6],[588,8,635,6],[588,12,635,12,"ninjaX"],[588,18,635,18],[588,21,635,21,"currentNinjaPosition"],[588,41,635,41],[588,42,635,42,"x"],[588,43,635,43],[588,46,635,46],[588,48,635,48],[588,49,635,49],[588,50,635,50],[589,8,636,6],[589,12,636,12,"ninjaY"],[589,18,636,18],[589,21,636,21,"currentNinjaPosition"],[589,41,636,41],[589,42,636,42,"y"],[589,43,636,43],[589,46,636,46],[589,48,636,48],[590,8,637,6],[590,12,637,12,"aoeRadius"],[590,21,637,21],[590,24,637,24,"ability"],[590,31,637,31],[590,32,637,32,"stats"],[590,37,637,37],[590,38,637,38,"aoeRadius"],[590,47,637,47],[591,8,639,6],[591,12,639,12,"enemiesInRange"],[591,26,639,26],[591,29,639,29,"state"],[591,34,639,34],[591,35,639,35,"enemies"],[591,42,639,42],[591,43,639,43,"filter"],[591,49,639,49],[591,50,639,50,"enemy"],[591,55,639,55],[591,59,639,59],[592,10,640,8],[592,14,640,14,"enemyX"],[592,20,640,20],[592,23,640,23,"enemy"],[592,28,640,28],[592,29,640,29,"position"],[592,37,640,37],[592,38,640,38,"x"],[592,39,640,39],[592,42,640,42],[592,46,640,46],[592,47,640,47],[592,48,640,48],[593,10,641,8],[593,14,641,14,"enemyY"],[593,20,641,20],[593,23,641,23,"enemy"],[593,28,641,28],[593,29,641,29,"position"],[593,37,641,37],[593,38,641,38,"y"],[593,39,641,39],[593,42,641,42],[593,46,641,46],[594,10,642,8],[594,14,642,14,"distance"],[594,22,642,22],[594,25,642,25,"Math"],[594,29,642,29],[594,30,642,30,"sqrt"],[594,34,642,34],[594,35,642,35,"Math"],[594,39,642,39],[594,40,642,40,"pow"],[594,43,642,43],[594,44,642,44,"enemyX"],[594,50,642,50],[594,53,642,53,"ninjaX"],[594,59,642,59],[594,61,642,61],[594,62,642,62],[594,63,642,63],[594,66,642,66,"Math"],[594,70,642,70],[594,71,642,71,"pow"],[594,74,642,74],[594,75,642,75,"enemyY"],[594,81,642,81],[594,84,642,84,"ninjaY"],[594,90,642,90],[594,92,642,92],[594,93,642,93],[594,94,642,94],[594,95,642,95],[595,10,643,8],[595,17,643,15,"distance"],[595,25,643,23],[595,29,643,27,"aoeRadius"],[595,38,643,36],[596,8,644,6],[596,9,644,7],[596,10,644,8],[597,8,646,6,"console"],[597,15,646,13],[597,16,646,14,"log"],[597,19,646,17],[597,20,646,18],[597,45,646,43,"enemiesInRange"],[597,59,646,57],[597,60,646,58,"length"],[597,66,646,64],[597,88,646,86,"aoeRadius"],[597,97,646,95],[597,107,646,105],[597,108,646,106],[599,8,648,6],[600,8,649,6,"enemiesInRange"],[600,22,649,20],[600,23,649,21,"forEach"],[600,30,649,28],[600,31,649,29,"enemy"],[600,36,649,34],[600,40,649,38],[601,10,650,8],[601,14,650,14,"damageResult"],[601,26,650,26],[601,29,650,29,"DamageCalculator"],[601,48,650,45],[601,49,650,45,"DamageCalculator"],[601,65,650,45],[601,66,650,46,"calculateDamage"],[601,81,650,61],[601,82,650,62,"damage"],[601,88,650,68],[601,90,650,70,"state"],[601,95,650,75],[601,96,650,76,"playerStats"],[601,107,650,87],[601,109,650,89,"enemy"],[601,114,650,94],[601,115,650,95,"stats"],[601,120,650,100],[601,121,650,101],[602,10,651,8,"createProjectile"],[602,26,651,24],[602,27,651,25,"enemy"],[602,32,651,30],[602,34,651,32,"damageResult"],[602,46,651,44],[602,47,651,45,"damage"],[602,53,651,51],[602,55,651,53,"currentNinjaPosition"],[602,75,651,73],[602,77,651,75],[603,12,652,10,"id"],[603,14,652,12],[603,16,652,14,"ability"],[603,23,652,21],[603,24,652,22,"id"],[603,26,652,24],[604,12,653,10,"name"],[604,16,653,14],[604,18,653,16,"ability"],[604,25,653,23],[604,26,653,24,"name"],[604,30,653,28],[605,12,654,10,"icon"],[605,16,654,14],[605,18,654,16,"ability"],[605,25,654,23],[605,26,654,24,"icon"],[606,10,655,8],[606,11,655,9],[606,12,655,10],[607,10,656,8,"console"],[607,17,656,15],[607,18,656,16,"log"],[607,21,656,19],[607,22,656,20],[607,37,656,35,"enemy"],[607,42,656,40],[607,43,656,41,"name"],[607,47,656,45],[607,55,656,53,"damageResult"],[607,67,656,65],[607,68,656,66,"damage"],[607,74,656,72],[607,83,656,81],[607,84,656,82],[609,10,658,8],[610,10,659,8],[610,14,659,12,"damageResult"],[610,26,659,24],[610,27,659,25,"damage"],[610,33,659,31],[610,37,659,35,"enemy"],[610,42,659,40],[610,43,659,41,"health"],[610,49,659,47],[610,51,659,49],[611,12,660,10,"console"],[611,19,660,17],[611,20,660,18,"log"],[611,23,660,21],[611,24,660,22],[611,67,660,65,"enemy"],[611,72,660,70],[611,73,660,71,"name"],[611,77,660,75],[611,90,660,88,"damageResult"],[611,102,660,100],[611,103,660,101,"damage"],[611,109,660,107],[611,124,660,122,"enemy"],[611,129,660,127],[611,130,660,128,"health"],[611,136,660,134],[611,139,660,137],[611,140,660,138],[612,10,661,8],[613,8,662,6],[613,9,662,7],[613,10,662,8],[614,8,664,6,"console"],[614,15,664,13],[614,16,664,14,"log"],[614,19,664,17],[614,20,664,18],[614,26,664,24,"ability"],[614,33,664,31],[614,34,664,32,"name"],[614,38,664,36],[614,56,664,54,"enemiesInRange"],[614,70,664,68],[614,71,664,69,"length"],[614,77,664,75],[614,93,664,91,"damage"],[614,99,664,97],[614,118,664,116],[614,119,664,117],[615,6,666,4],[615,7,666,5],[615,13,666,11],[616,8,667,6],[617,8,668,6],[617,12,668,12,"target"],[617,18,668,18],[617,21,668,21,"findClosestEnemyInternal"],[617,45,668,45],[617,46,668,46,"state"],[617,51,668,51],[617,52,668,52,"enemies"],[617,59,668,59],[617,60,668,60],[618,8,669,6],[618,12,669,10],[618,13,669,11,"target"],[618,19,669,17],[618,21,669,19],[619,8,671,6],[619,12,671,12,"damageResult"],[619,24,671,24],[619,27,671,27,"DamageCalculator"],[619,46,671,43],[619,47,671,43,"DamageCalculator"],[619,63,671,43],[619,64,671,44,"calculateDamage"],[619,79,671,59],[619,80,671,60,"damage"],[619,86,671,66],[619,88,671,68,"state"],[619,93,671,73],[619,94,671,74,"playerStats"],[619,105,671,85],[619,107,671,87,"target"],[619,113,671,93],[619,114,671,94,"stats"],[619,119,671,99],[619,120,671,100],[621,8,673,6],[622,8,674,6,"console"],[622,15,674,13],[622,16,674,14,"log"],[622,19,674,17],[622,20,674,18],[622,71,674,69,"target"],[622,77,674,75],[622,78,674,76,"name"],[622,82,674,80],[622,91,674,89,"damageResult"],[622,103,674,101],[622,104,674,102,"damage"],[622,110,674,108],[622,119,674,117],[622,120,674,118],[623,8,675,6,"createProjectile"],[623,24,675,22],[623,25,675,23,"target"],[623,31,675,29],[623,33,675,31,"damageResult"],[623,45,675,43],[623,46,675,44,"damage"],[623,52,675,50],[623,54,675,52,"currentNinjaPosition"],[623,74,675,72],[623,76,675,74],[624,10,676,8,"id"],[624,12,676,10],[624,14,676,12,"ability"],[624,21,676,19],[624,22,676,20,"id"],[624,24,676,22],[625,10,677,8,"name"],[625,14,677,12],[625,16,677,14,"ability"],[625,23,677,21],[625,24,677,22,"name"],[625,28,677,26],[626,10,678,8,"icon"],[626,14,678,12],[626,16,678,14,"ability"],[626,23,678,21],[626,24,678,22,"icon"],[627,8,679,6],[627,9,679,7],[627,10,679,8],[628,8,681,6,"console"],[628,15,681,13],[628,16,681,14,"log"],[628,19,681,17],[628,20,681,18],[628,26,681,24,"ability"],[628,33,681,31],[628,34,681,32,"name"],[628,38,681,36],[628,66,681,64,"damageResult"],[628,78,681,76],[628,79,681,77,"damage"],[628,85,681,83],[628,95,681,93,"damageResult"],[628,107,681,105],[628,108,681,106,"isCritical"],[628,118,681,116],[628,121,681,119],[628,131,681,129],[628,134,681,132],[628,136,681,134],[628,138,681,136],[628,139,681,137],[630,8,683,6],[631,8,684,6],[631,12,684,10,"damageResult"],[631,24,684,22],[631,25,684,23,"damage"],[631,31,684,29],[631,35,684,33,"target"],[631,41,684,39],[631,42,684,40,"health"],[631,48,684,46],[631,50,684,48],[632,10,685,8,"console"],[632,17,685,15],[632,18,685,16,"log"],[632,21,685,19],[632,22,685,20],[632,75,685,73,"target"],[632,81,685,79],[632,82,685,80,"name"],[632,86,685,84],[632,99,685,97,"damageResult"],[632,111,685,109],[632,112,685,110,"damage"],[632,118,685,116],[632,133,685,131,"target"],[632,139,685,137],[632,140,685,138,"health"],[632,146,685,144],[632,149,685,147],[632,150,685,148],[633,8,686,6],[634,6,687,4],[636,6,689,4],[637,6,690,4],[637,10,690,8,"ability"],[637,17,690,15],[637,18,690,16,"effects"],[637,25,690,23],[637,26,690,24,"includes"],[637,34,690,32],[637,35,690,33],[637,40,690,38],[637,41,690,39],[637,45,690,43,"ability"],[637,52,690,50],[637,53,690,51,"stats"],[637,58,690,56],[637,59,690,57,"duration"],[637,67,690,65],[637,69,690,67],[638,8,691,6],[638,12,691,12,"targets"],[638,19,691,19],[638,22,691,22,"isAOE"],[638,27,691,27],[638,30,692,8,"state"],[638,35,692,13],[638,36,692,14,"enemies"],[638,43,692,21],[638,44,692,22,"filter"],[638,50,692,28],[638,51,692,29,"enemy"],[638,56,692,34],[638,60,692,38],[639,10,693,10],[639,14,693,16,"ninjaX"],[639,20,693,22],[639,23,693,25,"currentNinjaPosition"],[639,43,693,45],[639,44,693,46,"x"],[639,45,693,47],[639,48,693,50],[639,50,693,52],[640,10,694,10],[640,14,694,16,"ninjaY"],[640,20,694,22],[640,23,694,25,"currentNinjaPosition"],[640,43,694,45],[640,44,694,46,"y"],[640,45,694,47],[640,48,694,50],[640,50,694,52],[641,10,695,10],[641,14,695,16,"enemyX"],[641,20,695,22],[641,23,695,25,"enemy"],[641,28,695,30],[641,29,695,31,"position"],[641,37,695,39],[641,38,695,40,"x"],[641,39,695,41],[641,42,695,44],[641,46,695,48],[642,10,696,10],[642,14,696,16,"enemyY"],[642,20,696,22],[642,23,696,25,"enemy"],[642,28,696,30],[642,29,696,31,"position"],[642,37,696,39],[642,38,696,40,"y"],[642,39,696,41],[642,42,696,44],[642,46,696,48],[643,10,697,10],[643,14,697,16,"distance"],[643,22,697,24],[643,25,697,27,"Math"],[643,29,697,31],[643,30,697,32,"sqrt"],[643,34,697,36],[643,35,697,37,"Math"],[643,39,697,41],[643,40,697,42,"pow"],[643,43,697,45],[643,44,697,46,"enemyX"],[643,50,697,52],[643,53,697,55,"ninjaX"],[643,59,697,61],[643,61,697,63],[643,62,697,64],[643,63,697,65],[643,66,697,68,"Math"],[643,70,697,72],[643,71,697,73,"pow"],[643,74,697,76],[643,75,697,77,"enemyY"],[643,81,697,83],[643,84,697,86,"ninjaY"],[643,90,697,92],[643,92,697,94],[643,93,697,95],[643,94,697,96],[643,95,697,97],[644,10,698,10],[644,17,698,17,"distance"],[644,25,698,25],[644,29,698,29,"ability"],[644,36,698,36],[644,37,698,37,"stats"],[644,42,698,42],[644,43,698,43,"aoeRadius"],[644,52,698,52],[645,8,699,8],[645,9,699,9],[645,10,699,10],[645,13,700,8],[645,14,700,9,"findClosestEnemyInternal"],[645,38,700,33],[645,39,700,34,"state"],[645,44,700,39],[645,45,700,40,"enemies"],[645,52,700,47],[645,53,700,48],[645,54,700,49],[645,55,700,50,"filter"],[645,61,700,56],[645,62,700,57,"Boolean"],[645,69,700,64],[645,70,700,65],[646,8,702,6,"targets"],[646,15,702,13],[646,16,702,14,"forEach"],[646,23,702,21],[646,24,702,22,"target"],[646,30,702,28],[646,34,702,32],[647,10,703,8,"state"],[647,15,703,13],[647,16,703,14,"statusEffects"],[647,29,703,27],[647,30,703,28,"addEffect"],[647,39,703,37],[647,40,703,38,"target"],[647,46,703,44],[647,47,703,45,"id"],[647,49,703,47],[647,51,703,49],[648,12,704,10,"id"],[648,14,704,12],[648,16,704,14],[648,19,704,17,"ability"],[648,26,704,24],[648,27,704,25,"id"],[648,29,704,27],[648,35,704,33],[649,12,705,10,"type"],[649,16,705,14],[649,18,705,16],[649,23,705,21],[650,12,706,10,"remainingTicks"],[650,26,706,24],[650,28,706,26,"Math"],[650,32,706,30],[650,33,706,31,"floor"],[650,38,706,36],[650,39,706,37,"ability"],[650,46,706,44],[650,47,706,45,"stats"],[650,52,706,50],[650,53,706,51,"duration"],[650,61,706,59],[650,64,706,62],[650,66,706,64],[650,67,706,65],[651,12,707,10,"tickInterval"],[651,24,707,22],[651,26,707,24],[651,28,707,26],[652,12,708,10,"lastTick"],[652,20,708,18],[652,22,708,20,"state"],[652,27,708,25],[652,28,708,26,"currentTick"],[652,39,708,37],[653,12,709,10,"value"],[653,17,709,15],[653,19,709,17,"Math"],[653,23,709,21],[653,24,709,22,"floor"],[653,29,709,27],[653,30,709,28,"damage"],[653,36,709,34],[653,39,709,37],[653,42,709,40],[653,43,709,41],[654,12,710,10,"stackable"],[654,21,710,19],[654,23,710,21],[655,10,711,8],[655,11,711,9],[655,12,711,10],[656,8,712,6],[656,9,712,7],[656,10,712,8],[657,6,713,4],[659,6,715,4],[660,6,716,4],[660,10,716,8,"ability"],[660,17,716,15],[660,18,716,16,"effects"],[660,25,716,23],[660,26,716,24,"includes"],[660,34,716,32],[660,35,716,33],[660,41,716,39],[660,42,716,40],[660,46,716,44,"ability"],[660,53,716,51],[660,54,716,52,"id"],[660,56,716,54],[660,61,716,59],[660,75,716,73],[660,77,716,75],[661,8,717,6,"console"],[661,15,717,13],[661,16,717,14,"log"],[661,19,717,17],[661,20,717,18],[661,66,717,64,"ability"],[661,73,717,71],[661,74,717,72,"stats"],[661,79,717,77],[661,80,717,78,"duration"],[661,88,717,86],[661,98,717,96],[661,99,717,97],[663,8,719,6],[664,8,720,6],[664,12,720,12,"cloneX"],[664,18,720,18],[664,21,720,21,"currentNinjaPosition"],[664,41,720,41],[664,42,720,42,"x"],[664,43,720,43],[664,46,720,46],[664,48,720,48],[664,49,720,49],[664,50,720,50],[665,8,721,6],[665,12,721,12,"cloneY"],[665,18,721,18],[665,21,721,21,"currentNinjaPosition"],[665,41,721,41],[665,42,721,42,"y"],[665,43,721,43],[665,46,721,46],[665,48,721,48],[665,49,721,49],[665,50,721,50],[667,8,723,6,"state"],[667,13,723,11],[667,14,723,12,"shadowClone"],[667,25,723,23],[667,28,723,26],[668,10,724,8,"id"],[668,12,724,10],[668,14,724,12],[668,30,724,28,"Date"],[668,34,724,32],[668,35,724,33,"now"],[668,38,724,36],[668,39,724,37],[668,40,724,38],[668,42,724,40],[669,10,725,8,"remainingTicks"],[669,24,725,22],[669,26,725,24,"Math"],[669,30,725,28],[669,31,725,29,"floor"],[669,36,725,34],[669,37,725,35,"ability"],[669,44,725,42],[669,45,725,43,"stats"],[669,50,725,48],[669,51,725,49,"duration"],[669,59,725,57],[669,62,725,60],[669,64,725,62],[669,65,725,63],[670,10,725,65],[671,10,726,8,"position"],[671,18,726,16],[671,20,726,18],[672,12,726,20,"x"],[672,13,726,21],[672,15,726,23,"cloneX"],[672,21,726,29],[673,12,726,31,"y"],[673,13,726,32],[673,15,726,34,"cloneY"],[674,10,726,41],[674,11,726,42],[675,10,727,8,"damageMultiplier"],[675,26,727,24],[675,28,727,26],[675,31,727,29],[675,32,727,31],[676,8,728,6],[676,9,728,7],[677,8,730,6,"console"],[677,15,730,13],[677,16,730,14,"log"],[677,19,730,17],[677,20,730,18],[677,63,730,61,"ability"],[677,70,730,68],[677,71,730,69,"stats"],[677,76,730,74],[677,77,730,75,"duration"],[677,85,730,83],[677,108,730,106],[677,109,730,107],[678,6,731,4],[679,4,732,2],[679,5,732,3],[681,4,734,2],[682,4,735,2],[682,8,735,8,"createProjectile"],[682,24,735,24],[682,27,735,27,"createProjectile"],[682,28,735,28,"targetEnemy"],[682,39,735,52],[682,41,735,54,"damage"],[682,47,735,68],[682,49,735,70,"ninjaPos"],[682,57,735,103],[682,59,735,105,"abilityInfo"],[682,70,735,159],[682,72,735,161,"isAOE"],[682,77,735,176],[682,79,735,178,"aoeRadius"],[682,88,735,196],[682,93,735,201],[683,6,736,4],[683,10,736,8],[683,11,736,9,"targetEnemy"],[683,22,736,20],[683,24,736,22],[684,8,737,6,"console"],[684,15,737,13],[684,16,737,14,"log"],[684,19,737,17],[684,20,737,18],[684,65,737,63],[684,66,737,64],[685,8,738,6],[685,15,738,13],[685,19,738,17],[686,6,739,4],[687,6,741,4],[687,10,741,10,"SCREEN_WIDTH"],[687,22,741,22],[687,25,741,25],[687,28,741,28],[688,6,742,4],[688,10,742,10,"GAME_AREA_HEIGHT"],[688,26,742,26],[688,29,742,29],[688,32,742,32],[688,35,742,35],[688,38,742,38],[688,39,742,39],[688,40,742,40],[689,6,743,4],[689,10,743,10,"NINJA_SIZE"],[689,20,743,20],[689,23,743,23],[689,25,743,25],[691,6,745,4],[692,6,746,4],[692,10,746,10,"ninjaX"],[692,16,746,16],[692,19,746,19,"ninjaPos"],[692,27,746,27],[692,30,746,30,"ninjaPos"],[692,38,746,38],[692,39,746,39,"x"],[692,40,746,40],[692,43,746,43,"NINJA_SIZE"],[692,53,746,53],[692,56,746,56],[692,57,746,57],[692,60,746,60,"SCREEN_WIDTH"],[692,72,746,72],[692,75,746,75],[692,76,746,76],[693,6,747,4],[693,10,747,10,"ninjaY"],[693,16,747,16],[693,19,747,19,"ninjaPos"],[693,27,747,27],[693,30,747,30,"ninjaPos"],[693,38,747,38],[693,39,747,39,"y"],[693,40,747,40],[693,43,747,43,"NINJA_SIZE"],[693,53,747,53],[693,56,747,56],[693,57,747,57],[693,60,747,60,"GAME_AREA_HEIGHT"],[693,76,747,76],[693,79,747,79],[693,80,747,80],[694,6,748,4],[694,10,748,10,"ENEMY_SIZE"],[694,20,748,20],[694,23,748,23],[694,25,748,25],[695,6,750,4],[695,10,750,10,"projectileId"],[695,22,750,22],[695,25,750,25],[695,33,750,33,"Date"],[695,37,750,37],[695,38,750,38,"now"],[695,41,750,41],[695,42,750,42],[695,43,750,43],[695,47,750,47,"Math"],[695,51,750,51],[695,52,750,52,"random"],[695,58,750,58],[695,59,750,59],[695,60,750,60],[695,62,750,62],[696,6,752,4],[696,10,752,10,"projectile"],[696,20,752,38],[696,23,752,41],[697,8,753,6,"id"],[697,10,753,8],[697,12,753,10,"projectileId"],[697,24,753,22],[698,8,754,6,"x"],[698,9,754,7],[698,11,754,9,"ninjaX"],[698,17,754,15],[699,8,755,6,"y"],[699,9,755,7],[699,11,755,9,"ninjaY"],[699,17,755,15],[700,8,756,6,"targetX"],[700,15,756,13],[700,17,756,15,"targetEnemy"],[700,28,756,26],[700,29,756,27,"position"],[700,37,756,35],[700,38,756,36,"x"],[700,39,756,37],[700,42,756,40,"ENEMY_SIZE"],[700,52,756,50],[700,55,756,53],[700,56,756,54],[701,8,757,6,"targetY"],[701,15,757,13],[701,17,757,15,"targetEnemy"],[701,28,757,26],[701,29,757,27,"position"],[701,37,757,35],[701,38,757,36,"y"],[701,39,757,37],[701,42,757,40,"ENEMY_SIZE"],[701,52,757,50],[701,55,757,53],[701,56,757,54],[702,8,758,6,"targetEnemyId"],[702,21,758,19],[702,23,758,21,"targetEnemy"],[702,34,758,32],[702,35,758,33,"id"],[702,37,758,35],[703,8,759,6,"damage"],[703,14,759,12],[703,16,759,14,"damage"],[703,22,759,20],[704,8,760,6,"startTime"],[704,17,760,15],[704,19,760,17,"Date"],[704,23,760,21],[704,24,760,22,"now"],[704,27,760,25],[704,28,760,26],[704,29,760,27],[705,8,761,6,"duration"],[705,16,761,14],[705,18,761,16],[705,21,761,19],[706,8,761,21],[707,8,762,6],[708,8,763,6,"abilityId"],[708,17,763,15],[708,19,763,17,"abilityInfo"],[708,30,763,28],[708,32,763,30,"id"],[708,34,763,32],[708,38,763,36],[708,54,763,52],[709,8,764,6,"abilityName"],[709,19,764,17],[709,21,764,19,"abilityInfo"],[709,32,764,30],[709,34,764,32,"name"],[709,38,764,36],[709,42,764,40],[709,58,764,56],[710,8,765,6,"abilityIcon"],[710,19,765,17],[710,21,765,19,"abilityInfo"],[710,32,765,30],[710,34,765,32,"icon"],[710,38,765,36],[710,42,765,40],[710,46,765,44],[711,8,765,46],[712,8,766,6],[713,8,767,6,"isAOE"],[713,13,767,11],[713,15,767,13,"isAOE"],[713,20,767,18],[713,24,767,22],[713,29,767,27],[714,8,768,6,"aoeRadius"],[714,17,768,15],[714,19,768,17,"aoeRadius"],[714,28,768,26],[714,32,768,30],[715,6,769,4],[715,7,769,5],[716,6,771,4,"console"],[716,13,771,11],[716,14,771,12,"log"],[716,17,771,15],[716,18,771,16],[716,44,771,42,"abilityInfo"],[716,55,771,53],[716,57,771,55,"name"],[716,61,771,59],[716,65,771,63],[716,81,771,79],[716,101,771,99,"projectileId"],[716,113,771,111],[716,128,771,126,"targetEnemy"],[716,139,771,137],[716,140,771,138,"name"],[716,144,771,142],[716,152,771,150,"damage"],[716,158,771,156],[716,167,771,165],[716,168,771,166],[717,6,772,4,"console"],[717,13,772,11],[717,14,772,12,"log"],[717,17,772,15],[717,18,772,16],[717,48,772,46,"isAOE"],[717,53,772,51],[717,68,772,66,"aoeRadius"],[717,77,772,75],[717,89,772,87,"damage"],[717,95,772,93],[717,97,772,95],[717,98,772,96],[718,6,774,4,"console"],[718,13,774,11],[718,14,774,12,"log"],[718,17,774,15],[718,18,774,16],[718,53,774,51,"targetEnemy"],[718,64,774,62],[718,65,774,63,"id"],[718,67,774,65],[718,75,774,73,"damage"],[718,81,774,79],[718,90,774,88],[718,91,774,89],[719,6,775,4,"console"],[719,13,775,11],[719,14,775,12,"log"],[719,17,775,15],[719,18,775,16],[719,53,775,51,"ninjaX"],[719,59,775,57],[719,64,775,62,"ninjaY"],[719,70,775,68],[719,87,775,85,"projectile"],[719,97,775,95],[719,98,775,96,"targetX"],[719,105,775,103],[719,110,775,108,"projectile"],[719,120,775,118],[719,121,775,119,"targetY"],[719,128,775,126],[719,131,775,129],[719,132,775,130],[720,6,777,4,"setProjectiles"],[720,20,777,18],[720,21,777,19,"prev"],[720,25,777,23],[720,29,777,27],[720,30,777,28],[720,33,777,31,"prev"],[720,37,777,35],[720,39,777,37,"projectile"],[720,49,777,47],[720,50,777,48],[720,51,777,49],[722,6,779,4],[723,6,780,4,"setTimeout"],[723,16,780,14],[723,17,780,15],[723,23,780,21],[724,8,781,6,"handleProjectileHit"],[724,27,781,25],[724,28,781,26,"projectile"],[724,38,781,36],[724,39,781,37],[725,6,782,4],[725,7,782,5],[725,9,782,7],[725,12,782,10],[725,13,782,11],[726,6,784,4],[726,13,784,11,"projectile"],[726,23,784,21],[727,4,785,2],[727,5,785,3],[729,4,787,2],[730,4,788,2],[730,8,788,8,"spawnTestEnemy"],[730,22,788,22],[730,25,788,26,"state"],[730,30,788,44],[730,34,788,49],[731,6,789,4,"console"],[731,13,789,11],[731,14,789,12,"log"],[731,17,789,15],[731,18,789,16],[731,83,789,81],[731,84,789,82],[733,6,791,4],[734,6,792,4],[734,10,792,10,"zoneEnemy"],[734,19,792,19],[734,22,792,22,"spawnZoneEnemy"],[734,36,792,36],[734,37,792,37],[734,38,792,38],[735,6,793,4],[735,10,793,8],[735,11,793,9,"zoneEnemy"],[735,20,793,18],[735,22,793,20],[736,8,794,6,"console"],[736,15,794,13],[736,16,794,14,"log"],[736,19,794,17],[736,20,794,18],[736,76,794,74],[736,77,794,75],[737,8,795,6],[738,8,796,6,"spawnBasicTestEnemy"],[738,27,796,25],[738,28,796,26,"state"],[738,33,796,31],[738,34,796,32],[739,8,797,6],[740,6,798,4],[741,6,800,4,"console"],[741,13,800,11],[741,14,800,12,"log"],[741,17,800,15],[741,18,800,16],[741,44,800,42,"zoneEnemy"],[741,53,800,51],[741,54,800,52,"name"],[741,58,800,56],[741,63,800,61,"zoneEnemy"],[741,72,800,70],[741,73,800,71,"typeId"],[741,79,800,77],[741,94,800,92,"currentZone"],[741,105,800,103],[741,107,800,105,"id"],[741,109,800,107],[741,119,800,117,"currentZoneLevel"],[741,135,800,133],[741,137,800,135,"level"],[741,142,800,140],[741,144,800,142],[741,145,800,143],[743,6,802,4],[744,6,803,4],[744,10,803,10,"combatEnemy"],[744,21,803,34],[744,24,803,37],[745,8,804,6,"id"],[745,10,804,8],[745,12,804,10,"zoneEnemy"],[745,21,804,19],[745,22,804,20,"id"],[745,24,804,22],[746,8,805,6,"name"],[746,12,805,10],[746,14,805,12,"zoneEnemy"],[746,23,805,21],[746,24,805,22,"name"],[746,28,805,26],[747,8,806,6,"health"],[747,14,806,12],[747,16,806,14,"zoneEnemy"],[747,25,806,23],[747,26,806,24,"hp"],[747,28,806,26],[748,8,807,6,"maxHealth"],[748,17,807,15],[748,19,807,17,"zoneEnemy"],[748,28,807,26],[748,29,807,27,"maxHP"],[748,34,807,32],[749,8,808,6,"stats"],[749,13,808,11],[749,15,808,13],[750,10,809,8,"attack"],[750,16,809,14],[750,18,809,16,"zoneEnemy"],[750,27,809,25],[750,28,809,26,"attack"],[750,34,809,32],[751,10,810,8,"defense"],[751,17,810,15],[751,19,810,17],[751,21,810,19],[752,10,810,21],[753,10,811,8,"health"],[753,16,811,14],[753,18,811,16,"zoneEnemy"],[753,27,811,25],[753,28,811,26,"hp"],[753,30,811,28],[754,10,812,8,"maxHealth"],[754,19,812,17],[754,21,812,19,"zoneEnemy"],[754,30,812,28],[754,31,812,29,"maxHP"],[754,36,812,34],[755,10,813,8,"critChance"],[755,20,813,18],[755,22,813,20],[755,23,813,21],[756,10,814,8,"critDamage"],[756,20,814,18],[756,22,814,20],[756,25,814,23],[757,10,815,8,"cooldownReduction"],[757,27,815,25],[757,29,815,27],[758,8,816,6],[758,9,816,7],[759,8,817,6,"position"],[759,16,817,14],[759,18,817,16,"zoneEnemy"],[759,27,817,25],[759,28,817,26,"position"],[759,36,817,34],[760,8,818,6,"lastDamaged"],[760,19,818,17],[760,21,818,19],[760,22,818,20],[761,8,819,6],[762,8,820,6,"zoneTypeId"],[762,18,820,16],[762,20,820,18,"zoneEnemy"],[762,29,820,27],[762,30,820,28,"typeId"],[762,36,820,34],[763,8,821,6,"zoneXP"],[763,14,821,12],[763,16,821,14,"zoneEnemy"],[763,25,821,23],[763,26,821,24,"xp"],[764,6,822,4],[764,7,822,5],[765,6,824,4,"console"],[765,13,824,11],[765,14,824,12,"log"],[765,17,824,15],[765,18,824,16],[765,42,824,40,"combatEnemy"],[765,53,824,51],[765,54,824,52,"name"],[765,58,824,56],[765,67,824,65,"combatEnemy"],[765,78,824,76],[765,79,824,77,"health"],[765,85,824,83],[765,100,824,98,"currentZone"],[765,111,824,109],[765,113,824,111,"id"],[765,115,824,113],[765,125,824,123,"currentZoneLevel"],[765,141,824,139],[765,143,824,141,"level"],[765,148,824,146],[765,150,824,148],[765,151,824,149],[766,6,825,4,"state"],[766,11,825,9],[766,12,825,10,"enemies"],[766,19,825,17],[766,20,825,18,"push"],[766,24,825,22],[766,25,825,23,"combatEnemy"],[766,36,825,34],[766,37,825,35],[767,4,826,2],[767,5,826,3],[769,4,828,2],[770,4,829,2],[770,8,829,8,"spawnBasicTestEnemy"],[770,27,829,27],[770,30,829,31,"state"],[770,35,829,49],[770,39,829,54],[771,6,830,4],[771,10,830,10,"SCREEN_WIDTH"],[771,22,830,22],[771,25,830,25],[771,28,830,28],[772,6,831,4],[772,10,831,10,"GAME_AREA_HEIGHT"],[772,26,831,26],[772,29,831,29],[772,32,831,32],[772,35,831,35],[772,38,831,38],[773,6,832,4],[773,10,832,10,"ENEMY_SIZE"],[773,20,832,20],[773,23,832,23],[773,25,832,25],[774,6,834,4],[774,10,834,10,"x"],[774,11,834,11],[774,14,834,14,"Math"],[774,18,834,18],[774,19,834,19,"random"],[774,25,834,25],[774,26,834,26],[774,27,834,27],[774,31,834,31,"SCREEN_WIDTH"],[774,43,834,43],[774,46,834,46,"ENEMY_SIZE"],[774,56,834,56],[774,59,834,59],[774,60,834,60],[774,61,834,61],[774,64,834,64,"ENEMY_SIZE"],[774,74,834,74],[775,6,835,4],[775,10,835,10,"y"],[775,11,835,11],[775,14,835,14,"Math"],[775,18,835,18],[775,19,835,19,"random"],[775,25,835,25],[775,26,835,26],[775,27,835,27],[775,31,835,31,"GAME_AREA_HEIGHT"],[775,47,835,47],[775,50,835,50,"ENEMY_SIZE"],[775,60,835,60],[775,63,835,63],[775,64,835,64],[775,65,835,65],[775,68,835,68,"ENEMY_SIZE"],[775,78,835,78],[776,6,837,4],[776,10,837,10,"enemy"],[776,15,837,28],[776,18,837,31],[777,8,838,6,"id"],[777,10,838,8],[777,12,838,10],[777,30,838,28,"Date"],[777,34,838,32],[777,35,838,33,"now"],[777,38,838,36],[777,39,838,37],[777,40,838,38],[777,44,838,42,"Math"],[777,48,838,46],[777,49,838,47,"random"],[777,55,838,53],[777,56,838,54],[777,57,838,55],[777,59,838,57],[778,8,839,6,"name"],[778,12,839,10],[778,14,839,12],[778,26,839,24,"Math"],[778,30,839,28],[778,31,839,29,"floor"],[778,36,839,34],[778,37,839,35,"Math"],[778,41,839,39],[778,42,839,40,"random"],[778,48,839,46],[778,49,839,47],[778,50,839,48],[778,53,839,51],[778,56,839,54],[778,57,839,55],[778,59,839,57],[779,8,840,6,"health"],[779,14,840,12],[779,16,840,14],[779,18,840,16],[780,8,841,6,"maxHealth"],[780,17,841,15],[780,19,841,17],[780,21,841,19],[781,8,842,6,"stats"],[781,13,842,11],[781,15,842,13],[782,10,843,8,"attack"],[782,16,843,14],[782,18,843,16],[782,20,843,18],[783,10,844,8,"defense"],[783,17,844,15],[783,19,844,17],[783,21,844,19],[784,10,845,8,"health"],[784,16,845,14],[784,18,845,16],[784,20,845,18],[785,10,846,8,"maxHealth"],[785,19,846,17],[785,21,846,19],[785,23,846,21],[786,10,847,8,"critChance"],[786,20,847,18],[786,22,847,20],[786,23,847,21],[787,10,848,8,"critDamage"],[787,20,848,18],[787,22,848,20],[787,25,848,23],[788,10,849,8,"cooldownReduction"],[788,27,849,25],[788,29,849,27],[789,8,850,6],[789,9,850,7],[790,8,851,6,"position"],[790,16,851,14],[790,18,851,16],[791,10,851,18,"x"],[791,11,851,19],[792,10,851,21,"y"],[793,8,851,23],[793,9,851,24],[794,8,852,6,"lastDamaged"],[794,19,852,17],[794,21,852,19],[795,6,853,4],[795,7,853,5],[796,6,855,4,"console"],[796,13,855,11],[796,14,855,12,"log"],[796,17,855,15],[796,18,855,16],[796,42,855,40,"enemy"],[796,47,855,45],[796,48,855,46,"name"],[796,52,855,50],[796,60,855,58,"Math"],[796,64,855,62],[796,65,855,63,"round"],[796,70,855,68],[796,71,855,69,"x"],[796,72,855,70],[796,73,855,71],[796,78,855,76,"Math"],[796,82,855,80],[796,83,855,81,"round"],[796,88,855,86],[796,89,855,87,"y"],[796,90,855,88],[796,91,855,89],[796,94,855,92],[796,95,855,93],[797,6,856,4,"state"],[797,11,856,9],[797,12,856,10,"enemies"],[797,19,856,17],[797,20,856,18,"push"],[797,24,856,22],[797,25,856,23,"enemy"],[797,30,856,28],[797,31,856,29],[798,4,857,2],[798,5,857,3],[800,4,859,2],[801,4,860,2],[801,8,860,8,"startCombat"],[801,19,860,19],[801,22,860,22,"React"],[801,27,860,27],[801,28,860,27,"default"],[801,35,860,27],[801,36,860,28,"useCallback"],[801,47,860,39],[801,48,860,40],[801,54,860,46],[802,6,861,4,"console"],[802,13,861,11],[802,14,861,12,"log"],[802,17,861,15],[802,18,861,16],[802,63,861,61],[802,64,861,62],[803,6,862,4,"setCombatState"],[803,20,862,18],[803,21,862,19,"prev"],[803,25,862,23],[803,30,862,28],[804,8,862,30],[804,11,862,33,"prev"],[804,15,862,37],[805,8,862,39,"isInCombat"],[805,18,862,49],[805,20,862,51],[806,6,862,56],[806,7,862,57],[806,8,862,58],[806,9,862,59],[808,6,864,4],[809,6,865,4,"combatEngine"],[809,25,865,16],[809,26,865,16,"combatEngine"],[809,38,865,16],[809,39,865,17,"addTickCallback"],[809,54,865,32],[809,55,865,33,"handleCombatTick"],[809,71,865,49],[809,72,865,50],[810,6,866,4,"console"],[810,13,866,11],[810,14,866,12,"log"],[810,17,866,15],[810,18,866,16],[810,62,866,60],[810,63,866,61],[812,6,868,4],[813,6,869,4,"combatEngine"],[813,25,869,16],[813,26,869,16,"combatEngine"],[813,38,869,16],[813,39,869,17,"start"],[813,44,869,22],[813,45,869,23],[813,46,869,24],[814,4,870,2],[814,5,870,3],[814,7,870,5],[814,8,870,6,"combatEngine"],[814,27,870,18],[814,28,870,18,"combatEngine"],[814,40,870,18],[814,42,870,20,"handleCombatTick"],[814,58,870,36],[814,59,870,37],[814,60,870,38],[816,4,872,2],[817,4,873,2],[817,8,873,8,"stopCombat"],[817,18,873,18],[817,21,873,21,"React"],[817,26,873,26],[817,27,873,26,"default"],[817,34,873,26],[817,35,873,27,"useCallback"],[817,46,873,38],[817,47,873,39],[817,53,873,45],[818,6,874,4,"setCombatState"],[818,20,874,18],[818,21,874,19,"prev"],[818,25,874,23],[818,30,874,28],[819,8,874,30],[819,11,874,33,"prev"],[819,15,874,37],[820,8,874,39,"isInCombat"],[820,18,874,49],[820,20,874,51],[821,6,874,57],[821,7,874,58],[821,8,874,59],[821,9,874,60],[822,6,875,4,"combatEngine"],[822,25,875,16],[822,26,875,16,"combatEngine"],[822,38,875,16],[822,39,875,17,"removeTickCallback"],[822,57,875,35],[822,58,875,36,"handleCombatTick"],[822,74,875,52],[822,75,875,53],[823,4,876,2],[823,5,876,3],[823,7,876,5],[823,8,876,6,"combatEngine"],[823,27,876,18],[823,28,876,18,"combatEngine"],[823,40,876,18],[823,42,876,20,"handleCombatTick"],[823,58,876,36],[823,59,876,37],[823,60,876,38],[825,4,878,2],[826,4,879,2],[826,8,879,8,"equipAbility"],[826,20,879,20],[826,23,879,23,"equipAbility"],[826,24,879,24,"abilityId"],[826,33,879,41],[826,35,879,43,"slotIndex"],[826,44,879,60],[826,49,879,74],[827,6,880,4],[827,13,880,11,"combatState"],[827,24,880,22],[827,25,880,23,"abilityManager"],[827,39,880,37],[827,40,880,38,"equipAbility"],[827,52,880,50],[827,53,880,51,"abilityId"],[827,62,880,60],[827,64,880,62,"slotIndex"],[827,73,880,71],[827,74,880,72],[828,4,881,2],[828,5,881,3],[829,4,883,2],[829,8,883,8,"getDeck"],[829,15,883,15],[829,18,883,18,"getDeck"],[829,19,883,18],[829,24,883,24],[830,6,884,4],[830,13,884,11,"combatState"],[830,24,884,22],[830,25,884,23,"abilityManager"],[830,39,884,37],[830,40,884,38,"getDeck"],[830,47,884,45],[830,48,884,46],[830,49,884,47],[831,4,885,2],[831,5,885,3],[832,4,887,2],[832,8,887,8,"getAvailableAbilities"],[832,29,887,29],[832,32,887,32,"getAvailableAbilities"],[832,33,887,32],[832,38,887,38],[833,6,888,4],[833,13,888,11,"combatState"],[833,24,888,22],[833,25,888,23,"abilityManager"],[833,39,888,37],[833,40,888,38,"getAvailableAbilities"],[833,61,888,59],[833,62,888,60],[833,63,888,61],[834,4,889,2],[834,5,889,3],[835,4,891,2],[835,8,891,8,"upgradeAbility"],[835,22,891,22],[835,25,891,26,"abilityId"],[835,34,891,43],[835,38,891,57],[836,6,892,4],[836,13,892,11,"combatState"],[836,24,892,22],[836,25,892,23,"abilityManager"],[836,39,892,37],[836,40,892,38,"upgradeAbility"],[836,54,892,52],[836,55,892,53,"abilityId"],[836,64,892,62],[836,65,892,63],[837,4,893,2],[837,5,893,3],[839,4,895,2],[840,4,896,2],[840,8,896,8,"clearAllEnemies"],[840,23,896,23],[840,26,896,26,"clearAllEnemies"],[840,27,896,26],[840,32,896,32],[841,6,897,4,"console"],[841,13,897,11],[841,14,897,12,"log"],[841,17,897,15],[841,18,897,16],[841,67,897,65],[841,68,897,66],[842,6,898,4,"setCombatState"],[842,20,898,18],[842,21,898,19,"prev"],[842,25,898,23],[842,30,898,28],[843,8,899,6],[843,11,899,9,"prev"],[843,15,899,13],[844,8,900,6,"enemies"],[844,15,900,13],[844,17,900,15],[845,6,901,4],[845,7,901,5],[845,8,901,6],[845,9,901,7],[846,4,902,2],[846,5,902,3],[848,4,904,2],[849,4,905,2],[851,4,907,2],[852,4,908,2],[852,8,908,8,"spawnEnemy"],[852,18,908,18],[852,21,908,22,"position"],[852,29,908,57],[852,33,908,75],[853,6,909,4],[853,10,909,10,"SCREEN_WIDTH"],[853,22,909,22],[853,25,909,25],[853,28,909,28],[854,6,910,4],[854,10,910,10,"GAME_AREA_HEIGHT"],[854,26,910,26],[854,29,910,29],[854,32,910,32],[854,35,910,35],[854,38,910,38],[854,39,910,39],[854,40,910,40],[855,6,911,4],[855,10,911,10,"ENEMY_SIZE"],[855,20,911,20],[855,23,911,23],[855,25,911,25],[857,6,913,4],[858,6,914,4],[858,10,914,10,"x"],[858,11,914,11],[858,14,914,14,"position"],[858,22,914,22],[858,24,914,24,"x"],[858,25,914,25],[858,29,914,29,"Math"],[858,33,914,33],[858,34,914,34,"random"],[858,40,914,40],[858,41,914,41],[858,42,914,42],[858,46,914,46,"SCREEN_WIDTH"],[858,58,914,58],[858,61,914,61,"ENEMY_SIZE"],[858,71,914,71],[858,74,914,74],[858,75,914,75],[858,76,914,76],[858,79,914,79,"ENEMY_SIZE"],[858,89,914,89],[859,6,915,4],[859,10,915,10,"y"],[859,11,915,11],[859,14,915,14,"position"],[859,22,915,22],[859,24,915,24,"y"],[859,25,915,25],[859,29,915,29,"Math"],[859,33,915,33],[859,34,915,34,"random"],[859,40,915,40],[859,41,915,41],[859,42,915,42],[859,46,915,46,"GAME_AREA_HEIGHT"],[859,62,915,62],[859,65,915,65,"ENEMY_SIZE"],[859,75,915,75],[859,78,915,78],[859,79,915,79],[859,80,915,80],[859,83,915,83,"ENEMY_SIZE"],[859,93,915,93],[860,6,917,4],[860,10,917,10,"enemy"],[860,15,917,28],[860,18,917,31],[861,8,918,6,"id"],[861,10,918,8],[861,12,918,10],[861,21,918,19],[861,23,918,21,"enemyCounter"],[861,35,918,33],[861,37,918,35],[862,8,919,6,"name"],[862,12,919,10],[862,14,919,12],[862,24,919,22],[863,8,920,6,"health"],[863,14,920,12],[863,16,920,14],[863,19,920,17],[864,8,921,6,"maxHealth"],[864,17,921,15],[864,19,921,17],[864,22,921,20],[865,8,922,6,"stats"],[865,13,922,11],[865,15,922,13],[866,10,923,8,"attack"],[866,16,923,14],[866,18,923,16],[866,20,923,18],[867,10,924,8,"defense"],[867,17,924,15],[867,19,924,17],[867,21,924,19],[868,10,925,8,"health"],[868,16,925,14],[868,18,925,16],[868,21,925,19],[869,10,926,8,"maxHealth"],[869,19,926,17],[869,21,926,19],[869,24,926,22],[870,10,927,8,"critChance"],[870,20,927,18],[870,22,927,20],[870,23,927,21],[871,10,928,8,"critDamage"],[871,20,928,18],[871,22,928,20],[871,25,928,23],[872,10,929,8,"cooldownReduction"],[872,27,929,25],[872,29,929,27],[873,8,930,6],[873,9,930,7],[874,8,931,6,"position"],[874,16,931,14],[874,18,931,16],[875,10,931,18,"x"],[875,11,931,19],[876,10,931,21,"y"],[877,8,931,23],[877,9,931,24],[878,8,932,6,"lastDamaged"],[878,19,932,17],[878,21,932,19],[879,6,933,4],[879,7,933,5],[880,6,935,4,"setCombatState"],[880,20,935,18],[880,21,935,19,"prev"],[880,25,935,23],[880,30,935,28],[881,8,936,6],[881,11,936,9,"prev"],[881,15,936,13],[882,8,937,6,"enemies"],[882,15,937,13],[882,17,937,15],[882,18,937,16],[882,21,937,19,"prev"],[882,25,937,23],[882,26,937,24,"enemies"],[882,33,937,31],[882,35,937,33,"enemy"],[882,40,937,38],[883,6,938,4],[883,7,938,5],[883,8,938,6],[883,9,938,7],[884,6,940,4],[884,13,940,11,"enemy"],[884,18,940,16],[885,4,941,2],[885,5,941,3],[887,4,943,2],[888,4,944,2],[888,8,944,8,"spawnBoss"],[888,17,944,17],[888,20,944,21,"bossEnemy"],[888,29,944,43],[888,33,944,48],[889,6,945,4,"console"],[889,13,945,11],[889,14,945,12,"log"],[889,17,945,15],[889,18,945,16],[889,39,945,37,"bossEnemy"],[889,48,945,46],[889,49,945,47,"name"],[889,53,945,51],[889,90,945,88],[889,91,945,89],[890,6,946,4,"setCombatState"],[890,20,946,18],[890,21,946,19,"prev"],[890,25,946,23],[890,30,946,28],[891,8,947,6],[891,11,947,9,"prev"],[891,15,947,13],[892,8,948,6,"enemies"],[892,15,948,13],[892,17,948,15],[892,18,948,16,"bossEnemy"],[892,27,948,25],[892,28,948,26],[892,29,948,27],[893,6,949,4],[893,7,949,5],[893,8,949,6],[893,9,949,7],[894,4,950,2],[894,5,950,3],[896,4,952,2],[897,4,953,2],[897,8,953,8,"clearSpecificEnemy"],[897,26,953,26],[897,29,953,30,"enemyId"],[897,36,953,45],[897,40,953,50],[898,6,954,4,"setCombatState"],[898,20,954,18],[898,21,954,19,"prev"],[898,25,954,23],[898,30,954,28],[899,8,955,6],[899,11,955,9,"prev"],[899,15,955,13],[900,8,956,6,"enemies"],[900,15,956,13],[900,17,956,15,"prev"],[900,21,956,19],[900,22,956,20,"enemies"],[900,29,956,27],[900,30,956,28,"filter"],[900,36,956,34],[900,37,956,35,"enemy"],[900,42,956,40],[900,46,956,44,"enemy"],[900,51,956,49],[900,52,956,50,"id"],[900,54,956,52],[900,59,956,57,"enemyId"],[900,66,956,64],[901,6,957,4],[901,7,957,5],[901,8,957,6],[901,9,957,7],[902,4,958,2],[902,5,958,3],[904,4,960,2],[905,4,961,2],[905,8,961,8,"useAbilityManually"],[905,26,961,26],[905,29,961,26,"_s3"],[905,32,961,26],[905,33,961,29],[905,37,961,29,"useCallback"],[905,43,961,40],[905,44,961,40,"useCallback"],[905,55,961,40],[905,57,961,40,"_s3"],[905,60,961,40],[905,61,961,42,"slotIndex"],[905,70,961,59],[905,74,961,73],[906,6,961,73,"_s3"],[906,9,961,73],[907,6,962,4,"console"],[907,13,962,11],[907,14,962,12,"log"],[907,17,962,15],[907,18,962,16],[907,64,962,62,"slotIndex"],[907,73,962,71],[907,82,962,80],[907,83,962,81],[908,6,963,4,"console"],[908,13,963,11],[908,14,963,12,"log"],[908,17,963,15],[908,18,963,16],[908,65,963,63,"slotIndex"],[908,74,963,72],[908,76,963,74],[908,77,963,75],[909,6,964,4,"console"],[909,13,964,11],[909,14,964,12,"log"],[909,17,964,15],[909,18,964,16],[909,53,964,51,"slotIndex"],[909,62,964,60],[909,64,964,62],[909,65,964,63],[911,6,966,4],[912,6,967,4],[912,10,967,8],[912,11,967,9,"game"],[912,15,967,13],[912,16,967,14,"gameState"],[912,25,967,23],[912,26,967,24,"isAlive"],[912,33,967,31],[912,35,967,33],[913,8,968,6,"console"],[913,15,968,13],[913,16,968,14,"log"],[913,19,968,17],[913,20,968,18],[913,70,968,68],[913,71,968,69],[914,8,969,6],[914,15,969,13],[914,20,969,18],[915,6,970,4],[917,6,972,4],[918,6,973,4],[918,10,973,10,"isReady"],[918,17,973,17],[918,20,973,20,"combatState"],[918,31,973,31],[918,32,973,32,"abilityManager"],[918,46,973,46],[918,47,973,47,"isAbilityReady"],[918,61,973,61],[918,62,973,62,"slotIndex"],[918,71,973,71],[918,72,973,72],[919,6,974,4],[919,10,974,8],[919,11,974,9,"isReady"],[919,18,974,16],[919,20,974,18],[920,8,975,6,"console"],[920,15,975,13],[920,16,975,14,"log"],[920,19,975,17],[920,20,975,18],[920,41,975,39,"slotIndex"],[920,50,975,48],[920,85,975,83],[920,86,975,84],[921,8,976,6],[921,15,976,13],[921,20,976,18],[922,6,977,4],[924,6,979,4],[925,6,980,4],[925,10,980,8,"combatState"],[925,21,980,19],[925,22,980,20,"enemies"],[925,29,980,27],[925,30,980,28,"length"],[925,36,980,34],[925,41,980,39],[925,42,980,40],[925,44,980,42],[926,8,981,6,"console"],[926,15,981,13],[926,16,981,14,"log"],[926,19,981,17],[926,20,981,18],[926,69,981,67],[926,70,981,68],[927,8,982,6],[927,15,982,13],[927,20,982,18],[928,6,983,4],[930,6,985,4],[931,6,986,4],[931,10,986,10,"currentTick"],[931,21,986,21],[931,24,986,24,"combatEngine"],[931,43,986,36],[931,44,986,36,"combatEngine"],[931,56,986,36],[931,57,986,37,"getCurrentTick"],[931,71,986,51],[931,72,986,52],[931,73,986,53],[932,6,987,4],[932,10,987,10,"success"],[932,17,987,17],[932,20,987,20,"combatState"],[932,31,987,31],[932,32,987,32,"abilityManager"],[932,46,987,46],[932,47,987,47,"useAbility"],[932,57,987,57],[932,58,987,58,"slotIndex"],[932,67,987,67],[932,69,987,69,"currentTick"],[932,80,987,80],[932,81,987,81],[933,6,989,4],[933,10,989,8,"success"],[933,17,989,15],[933,19,989,17],[934,8,990,6],[935,8,991,6,"setCombatState"],[935,22,991,20],[935,23,991,21,"prev"],[935,27,991,25],[935,31,991,29],[936,10,992,8],[936,14,992,14,"newState"],[936,22,992,22],[936,25,992,25],[937,12,992,27],[937,15,992,30,"prev"],[938,10,992,35],[938,11,992,36],[939,10,993,8,"castAbility"],[939,21,993,19],[939,22,993,20,"newState"],[939,30,993,28],[939,32,993,30,"slotIndex"],[939,41,993,39],[939,42,993,40],[940,10,994,8],[940,17,994,15,"newState"],[940,25,994,23],[941,8,995,6],[941,9,995,7],[941,10,995,8],[942,8,997,6,"console"],[942,15,997,13],[942,16,997,14,"log"],[942,19,997,17],[942,20,997,18],[942,65,997,63,"slotIndex"],[942,74,997,72],[942,76,997,74],[942,77,997,75],[943,8,998,6],[943,15,998,13],[943,19,998,17],[944,6,999,4],[944,7,999,5],[944,13,999,11],[945,8,1000,6,"console"],[945,15,1000,13],[945,16,1000,14,"log"],[945,19,1000,17],[945,20,1000,18],[945,61,1000,59,"slotIndex"],[945,70,1000,68],[945,72,1000,70],[945,73,1000,71],[946,8,1001,6],[946,15,1001,13],[946,20,1001,18],[947,6,1002,4],[948,4,1003,2],[948,5,1003,3],[948,46,1003,5],[948,47,1003,6,"combatState"],[948,58,1003,17],[948,59,1003,18,"abilityManager"],[948,73,1003,32],[948,75,1003,34,"combatState"],[948,86,1003,45],[948,87,1003,46,"enemies"],[948,94,1003,53],[948,95,1003,54],[948,96,1003,55],[949,4,1004,2],[949,8,1004,2,"useEffect"],[949,14,1004,11],[949,15,1004,11,"useEffect"],[949,24,1004,11],[949,26,1004,12],[949,32,1004,18],[950,6,1005,4,"combatEngine"],[950,25,1005,16],[950,26,1005,16,"combatEngine"],[950,38,1005,16],[950,39,1005,17,"start"],[950,44,1005,22],[950,45,1005,23],[950,46,1005,24],[952,6,1007,4],[953,6,1008,4],[954,6,1009,4,"console"],[954,13,1009,11],[954,14,1009,12,"log"],[954,17,1009,15],[954,18,1009,16],[954,97,1009,95],[954,98,1009,96],[955,6,1011,4],[955,13,1011,11],[955,19,1011,17],[956,8,1012,6,"combatEngine"],[956,27,1012,18],[956,28,1012,18,"combatEngine"],[956,40,1012,18],[956,41,1012,19,"stop"],[956,45,1012,23],[956,46,1012,24],[956,47,1012,25],[957,6,1013,4],[957,7,1013,5],[958,4,1014,2],[958,5,1014,3],[958,7,1014,5],[958,9,1014,7],[958,10,1014,8],[960,4,1016,2],[961,4,1017,2],[961,8,1017,2,"useEffect"],[961,14,1017,11],[961,15,1017,11,"useEffect"],[961,24,1017,11],[961,26,1017,12],[961,32,1017,18],[962,6,1018,4],[962,10,1018,10,"processProjectileImpacts"],[962,34,1018,34],[962,37,1018,37,"processProjectileImpacts"],[962,38,1018,37],[962,43,1018,43],[963,8,1019,6,"setProjectiles"],[963,22,1019,20],[963,23,1019,21,"currentProjectiles"],[963,41,1019,39],[963,45,1019,43],[964,10,1020,8],[964,17,1020,15,"currentProjectiles"],[964,35,1020,33],[964,36,1020,34,"map"],[964,39,1020,37],[964,40,1020,38,"projectile"],[964,50,1020,48],[964,54,1020,52],[965,12,1021,10],[965,16,1021,14],[965,17,1021,15,"projectile"],[965,27,1021,25],[965,29,1021,27],[965,36,1021,34],[965,40,1021,38],[967,12,1023,10],[968,12,1024,10],[968,16,1024,16,"currentTime"],[968,27,1024,27],[968,30,1024,30,"Date"],[968,34,1024,34],[968,35,1024,35,"now"],[968,38,1024,38],[968,39,1024,39],[968,40,1024,40],[969,12,1025,10],[969,16,1025,16,"startTime"],[969,25,1025,25],[969,28,1025,28,"projectile"],[969,38,1025,38],[969,39,1025,39,"startTime"],[969,48,1025,48],[969,52,1025,52,"currentTime"],[969,63,1025,63],[970,12,1026,10],[970,16,1026,16,"elapsedTime"],[970,27,1026,27],[970,30,1026,30,"currentTime"],[970,41,1026,41],[970,44,1026,44,"startTime"],[970,53,1026,53],[971,12,1027,10],[971,16,1027,16,"progress"],[971,24,1027,24],[971,27,1027,27,"Math"],[971,31,1027,31],[971,32,1027,32,"min"],[971,35,1027,35],[971,36,1027,36,"elapsedTime"],[971,47,1027,47],[971,51,1027,51,"projectile"],[971,61,1027,61],[971,62,1027,62,"duration"],[971,70,1027,70],[971,74,1027,74],[971,77,1027,77],[971,78,1027,78],[971,80,1027,80],[971,81,1027,81],[971,82,1027,82],[973,12,1029,10],[974,12,1030,10],[974,16,1030,14,"progress"],[974,24,1030,22],[974,28,1030,26],[974,29,1030,27],[974,33,1030,31],[974,34,1030,32,"projectile"],[974,44,1030,42],[974,45,1030,43,"hasHit"],[974,51,1030,49],[974,53,1030,51],[975,14,1031,12,"projectile"],[975,24,1031,22],[975,25,1031,23,"hasHit"],[975,31,1031,29],[975,34,1031,32],[975,38,1031,36],[976,14,1033,12,"console"],[976,21,1033,19],[976,22,1033,20,"log"],[976,25,1033,23],[976,26,1033,24],[976,51,1033,49,"projectile"],[976,61,1033,59],[976,62,1033,60,"abilityName"],[976,73,1033,71],[976,97,1033,95],[976,98,1033,96],[977,14,1034,12,"setCombatState"],[977,28,1034,26],[977,29,1034,27,"prev"],[977,33,1034,31],[977,37,1034,35],[978,16,1035,14],[978,20,1035,20,"newState"],[978,28,1035,28],[978,31,1035,31],[979,18,1035,33],[979,21,1035,36,"prev"],[980,16,1035,41],[980,17,1035,42],[981,16,1037,14],[981,20,1037,18,"projectile"],[981,30,1037,28],[981,31,1037,29,"isAOE"],[981,36,1037,34],[981,40,1037,38,"projectile"],[981,50,1037,48],[981,51,1037,49,"aoeRadius"],[981,60,1037,58],[981,64,1037,62,"projectile"],[981,74,1037,72],[981,75,1037,73,"aoeRadius"],[981,84,1037,82],[981,87,1037,85],[981,88,1037,86],[981,90,1037,88],[982,18,1038,16],[983,18,1039,16,"console"],[983,25,1039,23],[983,26,1039,24,"log"],[983,29,1039,27],[983,30,1039,28],[983,59,1039,57,"projectile"],[983,69,1039,67],[983,70,1039,68,"abilityName"],[983,81,1039,79],[983,97,1039,95,"projectile"],[983,107,1039,105],[983,108,1039,106,"aoeRadius"],[983,117,1039,115],[983,119,1039,117],[983,120,1039,118],[984,18,1041,16],[984,22,1041,22,"impactX"],[984,29,1041,29],[984,32,1041,32,"projectile"],[984,42,1041,42],[984,43,1041,43,"targetX"],[984,50,1041,50],[985,18,1042,16],[985,22,1042,22,"impactY"],[985,29,1042,29],[985,32,1042,32,"projectile"],[985,42,1042,42],[985,43,1042,43,"targetY"],[985,50,1042,50],[986,18,1043,16],[986,22,1043,22,"enemiesKilled"],[986,35,1043,50],[986,38,1043,53],[986,40,1043,55],[988,18,1045,16],[989,18,1046,16,"newState"],[989,26,1046,24],[989,27,1046,25,"enemies"],[989,34,1046,32],[989,37,1046,35,"newState"],[989,45,1046,43],[989,46,1046,44,"enemies"],[989,53,1046,51],[989,54,1046,52,"map"],[989,57,1046,55],[989,58,1046,56,"enemy"],[989,63,1046,61],[989,67,1046,65],[990,20,1047,18],[990,24,1047,22,"enemy"],[990,29,1047,27],[990,30,1047,28,"health"],[990,36,1047,34],[990,40,1047,38],[990,41,1047,39],[990,45,1047,43,"enemy"],[990,50,1047,48],[990,51,1047,49,"markedForDeath"],[990,65,1047,63],[990,67,1047,65],[990,74,1047,72,"enemy"],[990,79,1047,77],[991,20,1049,18],[991,24,1049,24,"enemyX"],[991,30,1049,30],[991,33,1049,33,"enemy"],[991,38,1049,38],[991,39,1049,39,"position"],[991,47,1049,47],[991,48,1049,48,"x"],[991,49,1049,49],[991,52,1049,52],[991,56,1049,56],[991,57,1049,57],[991,58,1049,58],[992,20,1050,18],[992,24,1050,24,"enemyY"],[992,30,1050,30],[992,33,1050,33,"enemy"],[992,38,1050,38],[992,39,1050,39,"position"],[992,47,1050,47],[992,48,1050,48,"y"],[992,49,1050,49],[992,52,1050,52],[992,56,1050,56],[993,20,1051,18],[993,24,1051,24,"distance"],[993,32,1051,32],[993,35,1051,35,"Math"],[993,39,1051,39],[993,40,1051,40,"sqrt"],[993,44,1051,44],[993,45,1051,45,"Math"],[993,49,1051,49],[993,50,1051,50,"pow"],[993,53,1051,53],[993,54,1051,54,"enemyX"],[993,60,1051,60],[993,63,1051,63,"impactX"],[993,70,1051,70],[993,72,1051,72],[993,73,1051,73],[993,74,1051,74],[993,77,1051,77,"Math"],[993,81,1051,81],[993,82,1051,82,"pow"],[993,85,1051,85],[993,86,1051,86,"enemyY"],[993,92,1051,92],[993,95,1051,95,"impactY"],[993,102,1051,102],[993,104,1051,104],[993,105,1051,105],[993,106,1051,106],[993,107,1051,107],[994,20,1053,18,"console"],[994,27,1053,25],[994,28,1053,26,"log"],[994,31,1053,29],[994,32,1053,30],[994,58,1053,56,"enemy"],[994,63,1053,61],[994,64,1053,62,"name"],[994,68,1053,66],[994,76,1053,74,"enemyX"],[994,82,1053,80],[994,87,1053,85,"enemyY"],[994,93,1053,91],[994,109,1053,107,"impactX"],[994,116,1053,114],[994,121,1053,119,"impactY"],[994,128,1053,126],[994,135,1053,133,"distance"],[994,143,1053,141],[994,144,1053,142,"toFixed"],[994,151,1053,149],[994,152,1053,150],[994,153,1053,151],[994,154,1053,152],[994,169,1053,167,"projectile"],[994,179,1053,177],[994,180,1053,178,"aoeRadius"],[994,189,1053,187],[994,194,1053,192],[994,195,1053,193],[995,20,1055,18],[995,24,1055,22,"distance"],[995,32,1055,30],[995,36,1055,34,"projectile"],[995,46,1055,44],[995,47,1055,45,"aoeRadius"],[995,56,1055,54],[995,58,1055,56],[996,22,1056,20],[997,22,1057,20],[997,26,1057,26,"newHealth"],[997,35,1057,35],[997,38,1057,38,"Math"],[997,42,1057,42],[997,43,1057,43,"max"],[997,46,1057,46],[997,47,1057,47],[997,48,1057,48],[997,50,1057,50,"enemy"],[997,55,1057,55],[997,56,1057,56,"health"],[997,62,1057,62],[997,65,1057,65,"projectile"],[997,75,1057,75],[997,76,1057,76,"damage"],[997,82,1057,82],[997,83,1057,83],[998,22,1059,20,"console"],[998,29,1059,27],[998,30,1059,28,"log"],[998,33,1059,31],[998,34,1059,32],[998,52,1059,50,"enemy"],[998,57,1059,55],[998,58,1059,56,"name"],[998,62,1059,60],[998,74,1059,72,"projectile"],[998,84,1059,82],[998,85,1059,83,"damage"],[998,91,1059,89],[998,103,1059,101,"enemy"],[998,108,1059,106],[998,109,1059,107,"health"],[998,115,1059,113],[998,122,1059,120,"newHealth"],[998,131,1059,129],[998,134,1059,132],[998,135,1059,133],[1000,22,1061,20],[1001,22,1062,20],[1001,26,1062,24,"newHealth"],[1001,35,1062,33],[1001,39,1062,37],[1001,40,1062,38],[1001,44,1062,42,"enemy"],[1001,49,1062,47],[1001,50,1062,48,"health"],[1001,56,1062,54],[1001,59,1062,57],[1001,60,1062,58],[1001,62,1062,60],[1002,24,1063,22,"console"],[1002,31,1063,29],[1002,32,1063,30,"log"],[1002,35,1063,33],[1002,36,1063,34],[1002,52,1063,50,"enemy"],[1002,57,1063,55],[1002,58,1063,56,"name"],[1002,62,1063,60],[1002,76,1063,74,"projectile"],[1002,86,1063,84],[1002,87,1063,85,"abilityName"],[1002,98,1063,96],[1002,101,1063,99],[1002,102,1063,100],[1003,24,1064,22,"enemiesKilled"],[1003,37,1064,35],[1003,38,1064,36,"push"],[1003,42,1064,40],[1003,43,1064,41,"enemy"],[1003,48,1064,46],[1003,49,1064,47],[1003,50,1064,48],[1003,51,1064,49],[1005,24,1066,22],[1005,31,1066,29],[1006,26,1067,24],[1006,29,1067,27,"enemy"],[1006,34,1067,32],[1007,26,1068,24,"health"],[1007,32,1068,30],[1007,34,1068,32],[1007,35,1068,33],[1008,26,1069,24,"markedForDeath"],[1008,40,1069,38],[1008,42,1069,40],[1008,46,1069,44],[1009,26,1070,24,"lastDamaged"],[1009,37,1070,35],[1009,39,1070,37,"combatEngine"],[1009,58,1070,49],[1009,59,1070,49,"combatEngine"],[1009,71,1070,49],[1009,72,1070,50,"getCurrentTick"],[1009,86,1070,64],[1009,87,1070,65],[1010,24,1071,22],[1010,25,1071,23],[1011,22,1072,20],[1011,23,1072,21],[1011,29,1072,27],[1012,24,1073,22],[1012,31,1073,29],[1013,26,1074,24],[1013,29,1074,27,"enemy"],[1013,34,1074,32],[1014,26,1075,24,"health"],[1014,32,1075,30],[1014,34,1075,32,"newHealth"],[1014,43,1075,41],[1015,26,1076,24,"lastDamaged"],[1015,37,1076,35],[1015,39,1076,37,"combatEngine"],[1015,58,1076,49],[1015,59,1076,49,"combatEngine"],[1015,71,1076,49],[1015,72,1076,50,"getCurrentTick"],[1015,86,1076,64],[1015,87,1076,65],[1016,24,1077,22],[1016,25,1077,23],[1017,22,1078,20],[1018,20,1079,18],[1019,20,1081,18],[1019,27,1081,25,"enemy"],[1019,32,1081,30],[1019,33,1081,31],[1019,34,1081,32],[1020,18,1082,16],[1020,19,1082,17],[1020,20,1082,18],[1022,18,1084,16],[1023,18,1085,16],[1023,22,1085,20,"enemiesKilled"],[1023,35,1085,33],[1023,36,1085,34,"length"],[1023,42,1085,40],[1023,45,1085,43],[1023,46,1085,44],[1023,48,1085,46],[1024,20,1086,18,"console"],[1024,27,1086,25],[1024,28,1086,26,"log"],[1024,31,1086,29],[1024,32,1086,30],[1024,52,1086,50,"enemiesKilled"],[1024,65,1086,63],[1024,66,1086,64,"length"],[1024,72,1086,70],[1024,94,1086,92,"projectile"],[1024,104,1086,102],[1024,105,1086,103,"abilityName"],[1024,116,1086,114],[1024,118,1086,116],[1024,119,1086,117],[1025,20,1087,18,"setTimeout"],[1025,30,1087,28],[1025,31,1087,29],[1025,37,1087,35],[1026,22,1088,20,"enemiesKilled"],[1026,35,1088,33],[1026,36,1088,34,"forEach"],[1026,43,1088,41],[1026,44,1088,42,"enemy"],[1026,49,1088,47],[1026,53,1088,51,"handleEnemyKill"],[1026,68,1088,66],[1026,69,1088,67,"enemy"],[1026,74,1088,72],[1026,75,1088,73],[1026,76,1088,74],[1027,20,1089,18],[1027,21,1089,19],[1027,23,1089,21],[1027,24,1089,22],[1027,25,1089,23],[1028,18,1090,16],[1029,16,1092,14],[1029,17,1092,15],[1029,23,1092,21],[1030,18,1093,16],[1031,18,1094,16],[1031,22,1094,22,"enemyIndex"],[1031,32,1094,32],[1031,35,1094,35,"newState"],[1031,43,1094,43],[1031,44,1094,44,"enemies"],[1031,51,1094,51],[1031,52,1094,52,"findIndex"],[1031,61,1094,61],[1031,62,1094,62,"e"],[1031,63,1094,63],[1031,67,1094,67,"e"],[1031,68,1094,68],[1031,69,1094,69,"id"],[1031,71,1094,71],[1031,76,1094,76,"projectile"],[1031,86,1094,86],[1031,87,1094,87,"targetEnemyId"],[1031,100,1094,100],[1031,101,1094,101],[1032,18,1096,16],[1032,22,1096,20,"enemyIndex"],[1032,32,1096,30],[1032,36,1096,34],[1032,37,1096,35],[1032,41,1096,39,"newState"],[1032,49,1096,47],[1032,50,1096,48,"enemies"],[1032,57,1096,55],[1032,58,1096,56,"enemyIndex"],[1032,68,1096,66],[1032,69,1096,67],[1032,70,1096,68,"health"],[1032,76,1096,74],[1032,79,1096,77],[1032,80,1096,78],[1032,84,1096,82],[1032,85,1096,83,"newState"],[1032,93,1096,91],[1032,94,1096,92,"enemies"],[1032,101,1096,99],[1032,102,1096,100,"enemyIndex"],[1032,112,1096,110],[1032,113,1096,111],[1032,114,1096,112,"markedForDeath"],[1032,128,1096,126],[1032,130,1096,128],[1033,20,1097,18,"newState"],[1033,28,1097,26],[1033,29,1097,27,"enemies"],[1033,36,1097,34],[1033,39,1097,37],[1033,40,1097,38],[1033,43,1097,41,"newState"],[1033,51,1097,49],[1033,52,1097,50,"enemies"],[1033,59,1097,57],[1033,60,1097,58],[1034,20,1098,18],[1034,24,1098,24,"enemy"],[1034,29,1098,29],[1034,32,1098,32,"newState"],[1034,40,1098,40],[1034,41,1098,41,"enemies"],[1034,48,1098,48],[1034,49,1098,49,"enemyIndex"],[1034,59,1098,59],[1034,60,1098,60],[1035,20,1099,18],[1035,24,1099,24,"newHealth"],[1035,33,1099,33],[1035,36,1099,36,"Math"],[1035,40,1099,40],[1035,41,1099,41,"max"],[1035,44,1099,44],[1035,45,1099,45],[1035,46,1099,46],[1035,48,1099,48,"enemy"],[1035,53,1099,53],[1035,54,1099,54,"health"],[1035,60,1099,60],[1035,63,1099,63,"projectile"],[1035,73,1099,73],[1035,74,1099,74,"damage"],[1035,80,1099,80],[1035,81,1099,81],[1036,20,1101,18,"newState"],[1036,28,1101,26],[1036,29,1101,27,"enemies"],[1036,36,1101,34],[1036,37,1101,35,"enemyIndex"],[1036,47,1101,45],[1036,48,1101,46],[1036,51,1101,49],[1037,22,1102,20],[1037,25,1102,23,"enemy"],[1037,30,1102,28],[1038,22,1103,20,"health"],[1038,28,1103,26],[1038,30,1103,28,"newHealth"],[1038,39,1103,37],[1039,22,1104,20,"lastDamaged"],[1039,33,1104,31],[1039,35,1104,33,"combatEngine"],[1039,54,1104,45],[1039,55,1104,45,"combatEngine"],[1039,67,1104,45],[1039,68,1104,46,"getCurrentTick"],[1039,82,1104,60],[1039,83,1104,61],[1040,20,1105,18],[1040,21,1105,19],[1041,20,1107,18,"console"],[1041,27,1107,25],[1041,28,1107,26,"log"],[1041,31,1107,29],[1041,32,1107,30],[1041,60,1107,58,"enemy"],[1041,65,1107,63],[1041,66,1107,64,"name"],[1041,70,1107,68],[1041,82,1107,80,"newHealth"],[1041,91,1107,89],[1041,95,1107,93,"enemy"],[1041,100,1107,98],[1041,101,1107,99,"maxHealth"],[1041,110,1107,108],[1041,112,1107,110],[1041,113,1107,111],[1043,20,1109,18],[1044,20,1110,18],[1044,24,1110,22,"newHealth"],[1044,33,1110,31],[1044,37,1110,35],[1044,38,1110,36],[1044,42,1110,40,"enemy"],[1044,47,1110,45],[1044,48,1110,46,"health"],[1044,54,1110,52],[1044,57,1110,55],[1044,58,1110,56],[1044,60,1110,58],[1045,22,1111,20,"console"],[1045,29,1111,27],[1045,30,1111,28,"log"],[1045,33,1111,31],[1045,34,1111,32],[1045,54,1111,52,"enemy"],[1045,59,1111,57],[1045,60,1111,58,"name"],[1045,64,1111,62],[1045,78,1111,76,"projectile"],[1045,88,1111,86],[1045,89,1111,87,"abilityName"],[1045,100,1111,98],[1045,136,1111,134],[1045,137,1111,135],[1047,22,1113,20],[1048,22,1114,20,"newState"],[1048,30,1114,28],[1048,31,1114,29,"enemies"],[1048,38,1114,36],[1048,39,1114,37,"enemyIndex"],[1048,49,1114,47],[1048,50,1114,48],[1048,53,1114,51],[1049,24,1115,22],[1049,27,1115,25,"newState"],[1049,35,1115,33],[1049,36,1115,34,"enemies"],[1049,43,1115,41],[1049,44,1115,42,"enemyIndex"],[1049,54,1115,52],[1049,55,1115,53],[1050,24,1116,22,"health"],[1050,30,1116,28],[1050,32,1116,30],[1050,33,1116,31],[1051,24,1117,22,"isDying"],[1051,31,1117,29],[1051,33,1117,31],[1051,37,1117,35],[1052,24,1118,22,"deathStartTime"],[1052,38,1118,36],[1052,40,1118,38,"Date"],[1052,44,1118,42],[1052,45,1118,43,"now"],[1052,48,1118,46],[1052,49,1118,47],[1053,22,1119,20],[1053,23,1119,21],[1054,20,1120,18],[1054,21,1120,19],[1054,27,1120,25],[1054,31,1120,29,"enemy"],[1054,36,1120,34],[1054,37,1120,35,"health"],[1054,43,1120,41],[1054,46,1120,44],[1054,47,1120,45],[1054,49,1120,47],[1055,22,1121,20,"console"],[1055,29,1121,27],[1055,30,1121,28,"log"],[1055,33,1121,31],[1055,34,1121,32],[1055,48,1121,46,"enemy"],[1055,53,1121,51],[1055,54,1121,52,"name"],[1055,58,1121,56],[1055,70,1121,68,"projectile"],[1055,80,1121,78],[1055,81,1121,79,"damage"],[1055,87,1121,85],[1055,99,1121,97,"enemy"],[1055,104,1121,102],[1055,105,1121,103,"health"],[1055,111,1121,109],[1055,117,1121,115,"newHealth"],[1055,126,1121,124],[1055,129,1121,127],[1055,130,1121,128],[1056,20,1122,18],[1057,18,1123,16],[1058,16,1124,14],[1059,16,1126,14],[1059,23,1126,21,"newState"],[1059,31,1126,29],[1060,14,1127,12],[1060,15,1127,13],[1060,16,1127,14],[1061,12,1128,10],[1063,12,1130,10],[1064,12,1131,10],[1064,16,1131,14,"progress"],[1064,24,1131,22],[1064,28,1131,26],[1064,31,1131,29],[1064,33,1131,31],[1065,14,1132,12],[1065,21,1132,19],[1065,25,1132,23],[1066,12,1133,10],[1067,12,1135,10],[1067,19,1135,17,"projectile"],[1067,29,1135,27],[1068,10,1136,8],[1068,11,1136,9],[1068,12,1136,10],[1068,13,1136,11,"filter"],[1068,19,1136,17],[1068,20,1136,18,"Boolean"],[1068,27,1136,25],[1068,28,1136,26],[1069,8,1137,6],[1069,9,1137,7],[1069,10,1137,8],[1070,6,1138,4],[1070,7,1138,5],[1072,6,1140,4],[1073,6,1141,4],[1073,10,1141,10,"impactInterval"],[1073,24,1141,24],[1073,27,1141,27,"setInterval"],[1073,38,1141,38],[1073,39,1141,39,"processProjectileImpacts"],[1073,63,1141,63],[1073,65,1141,65],[1073,67,1141,67],[1073,68,1141,68],[1074,6,1142,4],[1074,13,1142,11],[1074,19,1142,17,"clearInterval"],[1074,32,1142,30],[1074,33,1142,31,"impactInterval"],[1074,47,1142,45],[1074,48,1142,46],[1075,4,1143,2],[1075,5,1143,3],[1075,7,1143,5],[1075,8,1143,6,"handleEnemyKill"],[1075,23,1143,21],[1075,24,1143,22],[1075,25,1143,23],[1077,4,1145,2],[1078,4,1146,2],[1078,8,1146,8,"saveAbilityData"],[1078,23,1146,23],[1078,26,1146,26],[1078,30,1146,26,"useCallback"],[1078,36,1146,37],[1078,37,1146,37,"useCallback"],[1078,48,1146,37],[1078,50,1146,38],[1078,56,1146,44],[1079,6,1147,4],[1079,10,1147,8,"combatState"],[1079,21,1147,19],[1079,22,1147,20,"abilityManager"],[1079,36,1147,34],[1079,38,1147,36],[1080,8,1148,6],[1080,12,1148,12,"abilityData"],[1080,23,1148,23],[1080,26,1148,26,"combatState"],[1080,37,1148,37],[1080,38,1148,38,"abilityManager"],[1080,52,1148,52],[1080,53,1148,53,"getSaveData"],[1080,64,1148,64],[1080,65,1148,65],[1080,66,1148,66],[1081,8,1149,6,"console"],[1081,15,1149,13],[1081,16,1149,14,"log"],[1081,19,1149,17],[1081,20,1149,18],[1081,70,1149,68],[1081,72,1149,70,"abilityData"],[1081,83,1149,81],[1081,84,1149,82],[1082,8,1150,6,"game"],[1082,12,1150,10],[1082,13,1150,11,"updateAbilityData"],[1082,30,1150,28],[1082,31,1150,29,"abilityData"],[1082,42,1150,40],[1082,43,1150,41],[1083,6,1151,4],[1084,4,1152,2],[1084,5,1152,3],[1084,7,1152,5],[1084,8,1152,6,"combatState"],[1084,19,1152,17],[1084,20,1152,18,"abilityManager"],[1084,34,1152,32],[1084,36,1152,34,"game"],[1084,40,1152,38],[1084,41,1152,39,"updateAbilityData"],[1084,58,1152,56],[1084,59,1152,57],[1084,60,1152,58],[1085,4,1154,2],[1085,8,1154,8,"contextValue"],[1085,20,1154,39],[1085,23,1154,42,"React"],[1085,28,1154,47],[1085,29,1154,47,"default"],[1085,36,1154,47],[1085,37,1154,48,"useMemo"],[1085,44,1154,55],[1085,45,1154,56],[1085,52,1154,63],[1086,6,1155,4,"combatState"],[1086,17,1155,15],[1087,6,1156,4,"projectiles"],[1087,17,1156,15],[1088,6,1157,4,"startCombat"],[1088,17,1157,15],[1089,6,1158,4,"stopCombat"],[1089,16,1158,14],[1090,6,1159,4,"equipAbility"],[1090,18,1159,16],[1091,6,1160,4,"handleEnemyKill"],[1091,21,1160,19],[1092,6,1161,4,"getDeck"],[1092,13,1161,11],[1093,6,1162,4,"getAvailableAbilities"],[1093,27,1162,25],[1094,6,1163,4,"upgradeAbility"],[1094,20,1163,18],[1095,6,1164,4,"spawnEnemy"],[1095,16,1164,14],[1096,6,1165,4,"spawnBoss"],[1096,15,1165,13],[1097,6,1166,4,"clearAllEnemies"],[1097,21,1166,19],[1098,6,1167,4,"clearSpecificEnemy"],[1098,24,1167,22],[1099,6,1168,4],[1100,6,1169,4,"findClosestEnemy"],[1100,22,1169,20],[1101,6,1170,4,"updateNinjaPosition"],[1101,25,1170,23],[1102,6,1171,4,"setManualControlActive"],[1102,28,1171,26],[1103,6,1172,4,"lastExplosionTime"],[1103,23,1172,21],[1104,6,1173,4,"useAbilityManually"],[1104,24,1173,22],[1105,6,1173,24],[1106,6,1174,4,"saveAbilityData"],[1106,21,1174,19],[1107,6,1174,21],[1108,6,1175,4,"shadowClone"],[1108,17,1175,15],[1108,19,1175,17,"combatState"],[1108,30,1175,28],[1108,31,1175,29,"shadowClone"],[1108,42,1175,40],[1108,43,1175,42],[1109,4,1176,2],[1109,5,1176,3],[1109,6,1176,4],[1109,8,1176,6],[1110,4,1177,4],[1111,4,1178,4],[1112,4,1179,4,"combatState"],[1112,15,1179,15],[1112,17,1180,4,"projectiles"],[1112,28,1180,15],[1112,30,1181,4,"lastExplosionTime"],[1112,47,1181,21],[1113,4,1182,4],[1114,4,1183,4,"combatState"],[1114,15,1183,15],[1114,16,1183,16,"abilityManager"],[1114,30,1183,30],[1114,32,1184,4,"combatState"],[1114,43,1184,15],[1114,44,1184,16,"enemies"],[1114,51,1184,23],[1114,53,1185,4,"combatState"],[1114,64,1185,15],[1114,65,1185,16,"shadowClone"],[1114,76,1185,27],[1115,4,1185,29],[1116,4,1186,4,"useAbilityManually"],[1116,22,1186,22],[1117,4,1186,24],[1118,4,1187,4,"saveAbilityData"],[1118,19,1187,19],[1118,20,1187,21],[1119,4,1187,21],[1119,5,1188,3],[1119,6,1188,4],[1120,4,1190,2],[1120,24,1191,4],[1120,28,1191,4,"_reactJsxDevRuntime"],[1120,47,1191,4],[1120,48,1191,4,"jsxDEV"],[1120,54,1191,4],[1120,56,1191,5,"CombatContext"],[1120,69,1191,18],[1120,70,1191,19,"Provider"],[1120,78,1191,27],[1121,6,1191,28,"value"],[1121,11,1191,33],[1121,13,1191,35,"contextValue"],[1121,25,1191,48],[1122,6,1191,48,"children"],[1122,14,1191,48],[1122,16,1192,7,"children"],[1123,4,1192,15],[1124,6,1192,15,"fileName"],[1124,14,1192,15],[1124,16,1192,15,"_jsxFileName"],[1124,28,1192,15],[1125,6,1192,15,"lineNumber"],[1125,16,1192,15],[1126,6,1192,15,"columnNumber"],[1126,18,1192,15],[1127,4,1192,15],[1127,11,1193,28],[1127,12,1193,29],[1128,2,1195,0],[1128,3,1195,1],[1129,2,1195,2,"_s4"],[1129,5,1195,2],[1129,6,106,13,"CombatProvider"],[1129,20,106,27],[1130,4,106,27],[1130,12,107,15,"useGame"],[1130,24,107,22],[1130,25,107,22,"useGame"],[1130,32,107,22],[1130,34,108,77,"useZone"],[1130,46,108,84],[1130,47,108,84,"useZone"],[1130,54,108,84],[1131,2,108,84],[1132,2,108,84,"_c"],[1132,4,108,84],[1132,7,106,13,"CombatProvider"],[1132,21,106,27],[1133,2,106,27],[1133,6,106,27,"_c"],[1133,8,106,27],[1134,2,106,27,"$RefreshReg$"],[1134,14,106,27],[1134,15,106,27,"_c"],[1134,17,106,27],[1135,0,106,27],[1135,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCuB;KDO;GHiB;6CKG;mBHM;4BIa;sDCC,sBD;0BEE;WFG;OJE;+BOoD;6BC+D;mBDG;OPiC;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KGiB;0BUK;KVG;GLC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDKI,sCL;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;epBG;KoBE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;qBwCM;mBtC2B;MsCG;GxCG;oByCG;mBvCE;MuCG;GzCC;6B0CG;mBxCC;mCyCE,6BzC;MwCC;G1CC;yC4CG;qB1C8B;O0CI;G5CQ;YCC;W4CO;K5CE;GDC;YCG;qC6CC;qBxBC;sCyBC;2B7Cc;wD8CY;iB9CoC;6BQK;0CuCC,+BvC;mBRC;8DKK,sCL;a6CiC;SzBS;OwBC;K7CC;W4CI,mC5C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}