{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      var xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      var goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n      console.log(`💰 ENEMY KILL - Awarding ${xpReward} XP and ${goldReward} gold for ${enemy.name}`);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal immediately\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        var unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        console.log(`💀 BULK PROCESSING: ${enemiesToKill.length} total kills, ${unprocessedEnemies.length} unprocessed`);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          var totalXP = 0;\n          var totalGold = 0;\n          var zoneKills = [];\n          var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          var goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              var wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, []); // Empty dependency array - handleEnemyKill is stable\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    var _useState7 = (0, _react.useState)({\n        x: 195,\n        y: 400\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"lv0RwSXXMNmrzfA074n/0ziwNOM=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1164,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1230,2],[27,6,1230,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1230,2],[27,42,1230,2,"require"],[27,49,1230,2],[27,50,1230,2,"_dependencyMap"],[27,64,1230,2],[28,2,1230,2],[28,6,1230,2,"_slicedToArray"],[28,20,1230,2],[28,23,1230,2,"_interopDefault"],[28,38,1230,2],[28,39,1230,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1230,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,94,0],[36,6,94,6,"CombatContext"],[36,19,94,19],[36,35,94,22],[36,39,94,22,"createContext"],[36,45,94,35],[36,46,94,35,"createContext"],[36,59,94,35],[36,61,94,67,"undefined"],[36,70,94,76],[36,71,94,77],[37,2,96,7],[37,6,96,13,"useCombat"],[37,15,96,22],[37,18,96,25,"useCombat"],[37,19,96,25],[37,24,96,50],[38,4,96,50,"_s"],[38,6,96,50],[39,4,97,2],[39,8,97,8,"context"],[39,15,97,15],[39,18,97,18],[39,22,97,18,"useContext"],[39,28,97,28],[39,29,97,28,"useContext"],[39,39,97,28],[39,41,97,29,"CombatContext"],[39,54,97,42],[39,55,97,43],[40,4,98,2],[40,8,98,6],[40,9,98,7,"context"],[40,16,98,14],[40,18,98,16],[41,6,99,4],[41,12,99,10],[41,16,99,14,"Error"],[41,21,99,19],[41,22,99,20],[41,70,99,68],[41,71,99,69],[42,4,100,2],[43,4,101,2],[43,11,101,9,"context"],[43,18,101,16],[44,2,102,0],[44,3,102,1],[45,2,102,2,"_s"],[45,4,102,2],[45,5,96,13,"useCombat"],[45,14,96,22],[46,2,104,0],[46,6,104,4,"enemyCounter"],[46,18,104,16],[46,21,104,19],[46,22,104,20],[46,23,104,21],[46,24,104,22],[48,2,106,7],[48,6,106,13,"CombatProvider"],[48,20,106,27],[48,23,106,30,"_ref"],[48,27,106,30],[48,31,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,106,73],[51,8,106,33,"children"],[51,16,106,41],[51,19,106,41,"_ref"],[51,23,106,41],[51,24,106,33,"children"],[51,32,106,41],[52,4,107,2],[52,8,107,8,"game"],[52,12,107,12],[52,15,107,15],[52,19,107,15,"useGame"],[52,31,107,22],[52,32,107,22,"useGame"],[52,39,107,22],[52,41,107,23],[52,42,107,24],[53,4,108,2],[53,8,108,2,"_useZone"],[53,16,108,2],[53,19,108,77],[53,23,108,77,"useZone"],[53,35,108,84],[53,36,108,84,"useZone"],[53,43,108,84],[53,45,108,85],[53,46,108,86],[54,6,108,10,"currentZone"],[54,17,108,21],[54,20,108,21,"_useZone"],[54,28,108,21],[54,29,108,10,"currentZone"],[54,40,108,21],[55,6,108,23,"currentZoneLevel"],[55,22,108,39],[55,25,108,39,"_useZone"],[55,33,108,39],[55,34,108,23,"currentZoneLevel"],[55,50,108,39],[56,6,108,41,"recordEnemyKill"],[56,21,108,56],[56,24,108,56,"_useZone"],[56,32,108,56],[56,33,108,41,"recordEnemyKill"],[56,48,108,56],[57,6,108,58,"spawnZoneEnemy"],[57,20,108,72],[57,23,108,72,"_useZone"],[57,31,108,72],[57,32,108,58,"spawnZoneEnemy"],[57,46,108,72],[59,4,110,2],[60,4,111,2],[60,8,111,8,"initialCombatState"],[60,26,111,39],[60,29,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,8,128,2,"_useState"],[77,17,128,2],[77,20,128,40],[77,24,128,40,"useState"],[77,30,128,48],[77,31,128,48,"useState"],[77,39,128,48],[77,41,128,62,"initialCombatState"],[77,59,128,80],[77,60,128,81],[78,6,128,81,"_useState2"],[78,16,128,81],[78,23,128,81,"_slicedToArray"],[78,37,128,81],[78,38,128,81,"default"],[78,45,128,81],[78,47,128,81,"_useState"],[78,56,128,81],[79,6,128,9,"combatState"],[79,17,128,20],[79,20,128,20,"_useState2"],[79,30,128,20],[80,6,128,22,"setCombatState"],[80,20,128,36],[80,23,128,36,"_useState2"],[80,33,128,36],[82,4,130,2],[83,4,131,2],[83,8,131,2,"useEffect"],[83,14,131,11],[83,15,131,11,"useEffect"],[83,24,131,11],[83,26,131,12],[83,32,131,18],[84,6,132,4],[84,10,132,8,"game"],[84,14,132,12],[84,15,132,13,"gameState"],[84,24,132,22],[84,25,132,23,"abilityData"],[84,36,132,34],[84,40,132,38,"combatState"],[84,51,132,49],[84,52,132,50,"abilityManager"],[84,66,132,64],[84,68,132,66],[85,8,133,6,"console"],[85,15,133,13],[85,16,133,14,"log"],[85,19,133,17],[85,20,133,18],[85,68,133,66],[85,70,133,68,"game"],[85,74,133,72],[85,75,133,73,"gameState"],[85,84,133,82],[85,85,133,83,"abilityData"],[85,96,133,94],[85,97,133,95],[86,8,134,6,"combatState"],[86,19,134,17],[86,20,134,18,"abilityManager"],[86,34,134,32],[86,35,134,33,"restoreFromSaveData"],[86,54,134,52],[86,55,134,53,"game"],[86,59,134,57],[86,60,134,58,"gameState"],[86,69,134,67],[86,70,134,68,"abilityData"],[86,81,134,79],[86,82,134,80],[88,8,136,6],[89,8,137,6,"setCombatState"],[89,22,137,20],[89,23,137,21,"prev"],[89,27,137,25],[89,32,137,30],[90,10,137,32],[90,13,137,35,"prev"],[91,8,137,40],[91,9,137,41],[91,10,137,42],[91,11,137,43],[92,6,138,4],[93,4,139,2],[93,5,139,3],[93,7,139,5],[93,8,139,6,"game"],[93,12,139,10],[93,13,139,11,"gameState"],[93,22,139,20],[93,23,139,21,"abilityData"],[93,34,139,32],[93,36,139,34,"combatState"],[93,47,139,45],[93,48,139,46,"abilityManager"],[93,62,139,60],[93,63,139,61],[93,64,139,62],[95,4,141,2],[96,4,142,2],[96,8,142,2,"useEffect"],[96,14,142,11],[96,15,142,11,"useEffect"],[96,24,142,11],[96,26,142,12],[96,32,142,18],[97,6,143,4],[97,10,143,8,"game"],[97,14,143,12],[97,15,143,13,"gameState"],[97,24,143,22],[97,25,143,23,"ninja"],[97,30,143,28],[97,32,143,30],[98,8,144,6],[98,12,144,12,"effectiveStats"],[98,26,144,26],[98,29,144,29,"game"],[98,33,144,33],[98,34,144,34,"getEffectiveStats"],[98,51,144,51],[98,52,144,52],[98,53,144,53],[99,8,146,6,"setCombatState"],[99,22,146,20],[99,23,146,21,"prev"],[99,27,146,25],[99,31,146,29],[100,10,147,8],[101,10,148,8],[101,14,148,12,"prev"],[101,18,148,16],[101,19,148,17,"playerStats"],[101,30,148,28],[101,31,148,29,"maxHealth"],[101,40,148,38],[101,45,148,43],[101,48,148,46],[101,52,148,50,"prev"],[101,56,148,54],[101,57,148,55,"playerStats"],[101,68,148,66],[101,69,148,67,"attack"],[101,75,148,73],[101,80,148,78],[101,82,148,80],[101,84,148,82],[102,12,149,10,"console"],[102,19,149,17],[102,20,149,18,"log"],[102,23,149,21],[102,24,149,22],[102,60,149,58,"effectiveStats"],[102,74,149,72],[102,75,149,73,"health"],[102,81,149,79],[102,93,149,91,"effectiveStats"],[102,107,149,105],[102,108,149,106,"attack"],[102,114,149,112],[102,127,149,125,"effectiveStats"],[102,141,149,139],[102,142,149,140,"defense"],[102,149,149,147],[102,151,149,149],[102,152,149,150],[103,12,151,10],[103,19,151,17],[104,14,152,12],[104,17,152,15,"prev"],[104,21,152,19],[105,14,153,12,"playerStats"],[105,25,153,23],[105,27,153,25],[106,16,154,14,"attack"],[106,22,154,20],[106,24,154,22,"effectiveStats"],[106,38,154,36],[106,39,154,37,"attack"],[106,45,154,43],[107,16,155,14,"defense"],[107,23,155,21],[107,25,155,23,"effectiveStats"],[107,39,155,37],[107,40,155,38,"defense"],[107,47,155,45],[108,16,156,14,"health"],[108,22,156,20],[108,24,156,22,"effectiveStats"],[108,38,156,36],[108,39,156,37,"health"],[108,45,156,43],[109,16,156,45],[110,16,157,14,"maxHealth"],[110,25,157,23],[110,27,157,25,"effectiveStats"],[110,41,157,39],[110,42,157,40,"health"],[110,48,157,46],[111,16,158,14,"critChance"],[111,26,158,24],[111,28,158,26,"effectiveStats"],[111,42,158,40],[111,43,158,41,"critChance"],[111,53,158,51],[111,57,158,55],[111,58,158,56],[112,16,159,14,"critDamage"],[112,26,159,24],[112,28,159,26,"effectiveStats"],[112,42,159,40],[112,43,159,41,"critDamage"],[112,53,159,51],[112,57,159,55],[112,60,159,58],[113,16,160,14,"cooldownReduction"],[113,33,160,31],[113,35,160,33,"effectiveStats"],[113,49,160,47],[113,50,160,48,"cooldownReduction"],[113,67,160,65],[113,71,160,69],[114,14,161,12],[115,12,162,10],[115,13,162,11],[116,10,163,8],[117,10,164,8],[117,17,164,15,"prev"],[117,21,164,19],[118,8,165,6],[118,9,165,7],[118,10,165,8],[119,6,166,4],[120,4,167,2],[120,5,167,3],[120,7,167,5],[120,8,167,6,"game"],[120,12,167,10],[120,13,167,11,"gameState"],[120,22,167,20],[120,23,167,21,"ninja"],[120,28,167,26],[120,29,167,27],[120,30,167,28],[121,4,169,2],[121,8,169,2,"_useState3"],[121,18,169,2],[121,21,169,40],[121,25,169,40,"useState"],[121,31,169,48],[121,32,169,48,"useState"],[121,40,169,48],[121,42,169,69],[121,44,169,71],[121,45,169,72],[122,6,169,72,"_useState4"],[122,16,169,72],[122,23,169,72,"_slicedToArray"],[122,37,169,72],[122,38,169,72,"default"],[122,45,169,72],[122,47,169,72,"_useState3"],[122,57,169,72],[123,6,169,9,"projectiles"],[123,17,169,20],[123,20,169,20,"_useState4"],[123,30,169,20],[124,6,169,22,"setProjectiles"],[124,20,169,36],[124,23,169,36,"_useState4"],[124,33,169,36],[125,4,170,2],[125,8,170,2,"_useState5"],[125,18,170,2],[125,21,170,52],[125,25,170,52,"useState"],[125,31,170,60],[125,32,170,60,"useState"],[125,40,170,60],[125,42,170,69],[125,43,170,70],[125,44,170,71],[126,6,170,71,"_useState6"],[126,16,170,71],[126,23,170,71,"_slicedToArray"],[126,37,170,71],[126,38,170,71,"default"],[126,45,170,71],[126,47,170,71,"_useState5"],[126,57,170,71],[127,6,170,9,"lastExplosionTime"],[127,23,170,26],[127,26,170,26,"_useState6"],[127,36,170,26],[128,6,170,28,"setLastExplosionTime"],[128,26,170,48],[128,29,170,48,"_useState6"],[128,39,170,48],[129,4,171,2],[130,4,172,2],[132,4,174,2],[133,4,175,2],[133,8,175,8,"handleEnemyKill"],[133,23,175,23],[133,26,175,26],[133,30,175,26,"useCallback"],[133,36,175,37],[133,37,175,37,"useCallback"],[133,48,175,37],[133,50,175,39,"enemy"],[133,55,175,57],[133,59,175,62],[134,6,176,4],[135,6,177,4],[135,10,177,10,"xpReward"],[135,18,177,18],[135,21,177,21],[135,22,177,22,"enemy"],[135,27,177,27],[135,28,177,28,"zoneXP"],[135,34,177,34],[135,38,177,38],[135,39,177,39],[135,44,177,44,"game"],[135,48,177,48],[135,49,177,49,"gameState"],[135,58,177,58],[135,59,177,59,"subscriptionBenefits"],[135,79,177,79],[135,81,177,81,"xp_multiplier"],[135,94,177,94],[135,98,177,98],[135,101,177,101],[135,102,177,102],[136,6,178,4],[136,10,178,10,"goldReward"],[136,20,178,20],[136,23,178,23],[136,25,178,25],[136,29,178,29,"game"],[136,33,178,33],[136,34,178,34,"gameState"],[136,43,178,43],[136,44,178,44,"subscriptionBenefits"],[136,64,178,64],[136,66,178,66,"drop_multiplier"],[136,81,178,81],[136,85,178,85],[136,88,178,88],[136,89,178,89],[137,6,180,4,"console"],[137,13,180,11],[137,14,180,12,"log"],[137,17,180,15],[137,18,180,16],[137,46,180,44,"xpReward"],[137,54,180,52],[137,65,180,63,"goldReward"],[137,75,180,73],[137,88,180,86,"enemy"],[137,93,180,91],[137,94,180,92,"name"],[137,98,180,96],[137,100,180,98],[137,101,180,99],[139,6,182,4],[140,6,183,4,"game"],[140,10,183,8],[140,11,183,9,"updateNinja"],[140,22,183,20],[140,23,183,21,"prev"],[140,27,183,25],[140,32,183,30],[141,8,184,6,"experience"],[141,18,184,16],[141,20,184,18,"prev"],[141,24,184,22],[141,25,184,23,"experience"],[141,35,184,33],[141,38,184,36,"xpReward"],[141,46,184,44],[142,8,185,6,"gold"],[142,12,185,10],[142,14,185,12,"prev"],[142,18,185,16],[142,19,185,17,"gold"],[142,23,185,21],[142,26,185,24,"goldReward"],[143,6,186,4],[143,7,186,5],[143,8,186,6],[143,9,186,7],[145,6,188,4],[146,6,189,4,"setCombatState"],[146,20,189,18],[146,21,189,19,"prevState"],[146,30,189,28],[146,35,189,33],[147,8,190,6],[147,11,190,9,"prevState"],[147,20,190,18],[148,8,191,6,"enemies"],[148,15,191,13],[148,17,191,15,"prevState"],[148,26,191,24],[148,27,191,25,"enemies"],[148,34,191,32],[148,35,191,33,"map"],[148,38,191,36],[148,39,191,37,"e"],[148,40,191,38],[148,44,192,8,"e"],[148,45,192,9],[148,46,192,10,"id"],[148,48,192,12],[148,53,192,17,"enemy"],[148,58,192,22],[148,59,192,23,"id"],[148,61,192,25],[148,64,192,28],[149,10,192,30],[149,13,192,33,"e"],[149,14,192,34],[150,10,192,36,"xpAwarded"],[150,19,192,45],[150,21,192,47],[151,8,192,52],[151,9,192,53],[151,12,192,56,"e"],[151,13,193,6],[152,6,194,4],[152,7,194,5],[152,8,194,6],[152,9,194,7],[154,6,196,4],[155,6,197,4],[155,10,197,8,"enemy"],[155,15,197,13],[155,16,197,14,"zoneTypeId"],[155,26,197,24],[155,28,197,26],[156,8,198,6,"recordEnemyKill"],[156,23,198,21],[156,24,198,22],[157,10,199,8,"id"],[157,12,199,10],[157,14,199,12,"enemy"],[157,19,199,17],[157,20,199,18,"id"],[157,22,199,20],[158,10,200,8,"typeId"],[158,16,200,14],[158,18,200,16,"enemy"],[158,23,200,21],[158,24,200,22,"zoneTypeId"],[158,34,200,32],[159,10,201,8,"name"],[159,14,201,12],[159,16,201,14,"enemy"],[159,21,201,19],[159,22,201,20,"name"],[159,26,201,24],[160,10,202,8,"icon"],[160,14,202,12],[160,16,202,14],[160,20,202,18],[161,10,203,8,"hp"],[161,12,203,10],[161,14,203,12],[161,15,203,13],[162,10,204,8,"maxHP"],[162,15,204,13],[162,17,204,15,"enemy"],[162,22,204,20],[162,23,204,21,"maxHealth"],[162,32,204,30],[163,10,205,8,"attack"],[163,16,205,14],[163,18,205,16,"enemy"],[163,23,205,21],[163,24,205,22,"stats"],[163,29,205,27],[163,30,205,28,"attack"],[163,36,205,34],[164,10,206,8,"xp"],[164,12,206,10],[164,14,206,12,"enemy"],[164,19,206,17],[164,20,206,18,"zoneXP"],[164,26,206,24],[164,30,206,28],[164,31,206,29],[165,10,207,8,"position"],[165,18,207,16],[165,20,207,18,"enemy"],[165,25,207,23],[165,26,207,24,"position"],[166,8,208,6],[166,9,208,7],[166,10,208,8],[167,6,209,4],[168,4,210,2],[168,5,210,3],[168,7,210,5],[168,8,210,6,"game"],[168,12,210,10],[168,13,210,11,"updateNinja"],[168,24,210,22],[168,26,210,24,"game"],[168,30,210,28],[168,31,210,29,"gameState"],[168,40,210,38],[168,41,210,39,"subscriptionBenefits"],[168,61,210,59],[168,63,210,61,"recordEnemyKill"],[168,78,210,76],[168,79,210,77],[168,80,210,78],[170,4,212,2],[171,4,213,2],[172,4,214,2],[172,8,214,8,"handleCombatTick"],[172,24,214,24],[172,27,214,27,"React"],[172,32,214,32],[172,33,214,32,"default"],[172,40,214,32],[172,41,214,33,"useCallback"],[172,52,214,44],[172,53,214,45],[172,59,214,51],[173,6,214,51],[173,10,214,51,"_s2"],[173,13,214,51],[173,16,214,51,"$RefreshSig$"],[173,28,214,51],[174,6,215,4,"console"],[174,13,215,11],[174,14,215,12,"log"],[174,17,215,15],[174,18,215,16],[174,87,215,85],[174,88,215,86],[175,6,216,4,"console"],[175,13,216,11],[175,14,216,12,"log"],[175,17,216,15],[175,18,216,16],[175,65,216,63,"isManualControlActive"],[175,86,216,84],[175,99,216,97,"game"],[175,103,216,101],[175,104,216,102,"gameState"],[175,113,216,111],[175,114,216,112,"isAlive"],[175,121,216,119],[175,123,216,121],[175,124,216,122],[176,6,218,4],[176,10,218,8,"enemiesToKill"],[176,23,218,36],[176,26,218,39],[176,28,218,41],[176,29,218,42],[176,30,218,43],[178,6,220,4,"_s2"],[178,9,220,4],[178,10,220,4,"setCombatState"],[178,24,220,18],[178,25,220,18,"_s2"],[178,28,220,18],[178,29,220,19,"prev"],[178,33,220,23],[178,37,220,27],[179,8,220,27,"_s2"],[179,11,220,27],[180,8,221,6],[180,12,221,12,"newTick"],[180,19,221,19],[180,22,221,22,"combatEngine"],[180,41,221,34],[180,42,221,34,"combatEngine"],[180,54,221,34],[180,55,221,35,"getCurrentTick"],[180,69,221,49],[180,70,221,50],[180,71,221,51],[181,8,222,6],[181,12,222,12,"newState"],[181,20,222,20],[181,23,222,23],[182,10,222,25],[182,13,222,28,"prev"],[182,17,222,32],[183,10,222,34,"currentTick"],[183,21,222,45],[183,23,222,47,"newTick"],[184,8,222,55],[184,9,222,56],[185,8,224,6],[185,12,224,10],[185,13,224,11,"newState"],[185,21,224,19],[185,22,224,20,"isInCombat"],[185,32,224,30],[185,34,224,32],[185,41,224,39,"newState"],[185,49,224,47],[187,8,226,6],[188,8,227,6,"newState"],[188,16,227,14],[188,17,227,15,"abilityManager"],[188,31,227,29],[188,32,227,30,"updateCooldowns"],[188,47,227,45],[188,48,227,46,"newTick"],[188,55,227,53],[188,56,227,54],[190,8,229,6],[191,8,230,6],[191,12,230,12,"effectResults"],[191,25,230,25],[191,28,230,28,"newState"],[191,36,230,36],[191,37,230,37,"statusEffects"],[191,50,230,50],[191,51,230,51,"processTick"],[191,62,230,62],[191,63,230,63,"newTick"],[191,70,230,70],[191,71,230,71],[193,8,232,6],[194,8,233,6,"effectResults"],[194,21,233,19],[194,22,233,20,"forEach"],[194,29,233,27],[194,30,233,28],[194,31,233,29,"results"],[194,38,233,36],[194,40,233,38,"entityId"],[194,48,233,46],[194,53,233,51],[195,10,234,8],[195,14,234,14,"enemyIndex"],[195,24,234,24],[195,27,234,27,"newState"],[195,35,234,35],[195,36,234,36,"enemies"],[195,43,234,43],[195,44,234,44,"findIndex"],[195,53,234,53],[195,54,234,54,"e"],[195,55,234,55],[195,59,234,59,"e"],[195,60,234,60],[195,61,234,61,"id"],[195,63,234,63],[195,68,234,68,"entityId"],[195,76,234,76],[195,77,234,77],[196,10,235,8],[196,14,235,12,"enemyIndex"],[196,24,235,22],[196,28,235,26],[196,29,235,27],[196,31,235,29],[197,12,236,10,"results"],[197,19,236,17],[197,20,236,18,"forEach"],[197,27,236,25],[197,28,236,26,"result"],[197,34,236,32],[197,38,236,36],[198,14,237,12,"newState"],[198,22,237,20],[198,23,237,21,"enemies"],[198,30,237,28],[198,31,237,29,"enemyIndex"],[198,41,237,39],[198,42,237,40],[198,43,237,41,"health"],[198,49,237,47],[198,53,237,51,"result"],[198,59,237,57],[198,60,237,58,"damage"],[198,66,237,64],[199,14,238,12,"newState"],[199,22,238,20],[199,23,238,21,"enemies"],[199,30,238,28],[199,31,238,29,"enemyIndex"],[199,41,238,39],[199,42,238,40],[199,43,238,41,"lastDamaged"],[199,54,238,52],[199,57,238,55,"newTick"],[199,64,238,62],[200,12,239,10],[200,13,239,11],[200,14,239,12],[201,10,240,8],[202,8,241,6],[202,9,241,7],[202,10,241,8],[204,8,243,6],[205,8,244,6],[206,8,245,6],[206,12,245,10,"newState"],[206,20,245,18],[206,21,245,19,"playerStats"],[206,32,245,30],[206,36,245,34,"game"],[206,40,245,38],[206,41,245,39,"gameState"],[206,50,245,48],[206,51,245,49,"ninja"],[206,56,245,54],[206,58,245,56],[207,10,246,8],[207,14,246,14,"effectiveStats"],[207,28,246,28],[207,31,246,31,"game"],[207,35,246,35],[207,36,246,36,"getEffectiveStats"],[207,53,246,53],[207,54,246,54],[207,55,246,55],[209,10,248,8],[210,10,249,8],[210,14,249,12,"newState"],[210,22,249,20],[210,23,249,21,"playerStats"],[210,34,249,32],[210,35,249,33,"attack"],[210,41,249,39],[210,46,249,44,"effectiveStats"],[210,60,249,58],[210,61,249,59,"attack"],[210,67,249,65],[210,71,250,12,"newState"],[210,79,250,20],[210,80,250,21,"playerStats"],[210,91,250,32],[210,92,250,33,"defense"],[210,99,250,40],[210,104,250,45,"effectiveStats"],[210,118,250,59],[210,119,250,60,"defense"],[210,126,250,67],[210,130,251,12,"newState"],[210,138,251,20],[210,139,251,21,"playerStats"],[210,150,251,32],[210,151,251,33,"maxHealth"],[210,160,251,42],[210,165,251,47,"effectiveStats"],[210,179,251,61],[210,180,251,62,"maxHealth"],[210,189,251,71],[210,191,251,73],[211,12,253,10,"console"],[211,19,253,17],[211,20,253,18,"log"],[211,23,253,21],[211,24,253,22],[211,58,253,56,"newState"],[211,66,253,64],[211,67,253,65,"playerStats"],[211,78,253,76],[211,79,253,77,"attack"],[211,85,253,83],[211,91,253,89,"effectiveStats"],[211,105,253,103],[211,106,253,104,"attack"],[211,112,253,110],[211,125,253,123,"newState"],[211,133,253,131],[211,134,253,132,"playerStats"],[211,145,253,143],[211,146,253,144,"defense"],[211,153,253,151],[211,159,253,157,"effectiveStats"],[211,173,253,171],[211,174,253,172,"defense"],[211,181,253,179],[211,192,253,190,"newState"],[211,200,253,198],[211,201,253,199,"playerStats"],[211,212,253,210],[211,213,253,211,"maxHealth"],[211,222,253,220],[211,228,253,226,"effectiveStats"],[211,242,253,240],[211,243,253,241,"maxHealth"],[211,252,253,250],[211,254,253,252],[211,255,253,253],[213,12,255,10],[214,12,256,10],[214,16,256,14,"newHealth"],[214,25,256,23],[214,28,256,26,"newState"],[214,36,256,34],[214,37,256,35,"playerStats"],[214,48,256,46],[214,49,256,47,"health"],[214,55,256,53],[215,12,257,10],[215,16,257,14,"newState"],[215,24,257,22],[215,25,257,23,"playerStats"],[215,36,257,34],[215,37,257,35,"maxHealth"],[215,46,257,44],[215,51,257,49,"effectiveStats"],[215,65,257,63],[215,66,257,64,"maxHealth"],[215,75,257,73],[215,77,257,75],[216,14,258,12],[217,14,259,12],[217,18,259,16,"effectiveStats"],[217,32,259,30],[217,33,259,31,"maxHealth"],[217,42,259,40],[217,45,259,43,"newState"],[217,53,259,51],[217,54,259,52,"playerStats"],[217,65,259,63],[217,66,259,64,"maxHealth"],[217,75,259,73],[217,78,259,76],[217,81,259,79],[217,83,259,81],[218,16,260,14],[219,16,261,14],[219,20,261,20,"healthRatio"],[219,31,261,31],[219,34,261,34,"newState"],[219,42,261,42],[219,43,261,43,"playerStats"],[219,54,261,54],[219,55,261,55,"maxHealth"],[219,64,261,64],[219,67,261,67],[219,68,261,68],[219,71,262,16,"newState"],[219,79,262,24],[219,80,262,25,"playerStats"],[219,91,262,36],[219,92,262,37,"health"],[219,98,262,43],[219,101,262,46,"newState"],[219,109,262,54],[219,110,262,55,"playerStats"],[219,121,262,66],[219,122,262,67,"maxHealth"],[219,131,262,76],[219,134,262,79],[219,135,262,80],[220,16,263,14,"newHealth"],[220,25,263,23],[220,28,263,26,"Math"],[220,32,263,30],[220,33,263,31,"floor"],[220,38,263,36],[220,39,263,37,"effectiveStats"],[220,53,263,51],[220,54,263,52,"maxHealth"],[220,63,263,61],[220,66,263,64,"healthRatio"],[220,77,263,75],[220,78,263,76],[221,14,264,12],[221,15,264,13],[221,21,264,19],[221,25,264,23,"newState"],[221,33,264,31],[221,34,264,32,"playerStats"],[221,45,264,43],[221,46,264,44,"health"],[221,52,264,50],[221,55,264,53,"effectiveStats"],[221,69,264,67],[221,70,264,68,"maxHealth"],[221,79,264,77],[221,81,264,79],[222,16,265,14],[223,16,266,14,"newHealth"],[223,25,266,23],[223,28,266,26,"effectiveStats"],[223,42,266,40],[223,43,266,41,"maxHealth"],[223,52,266,50],[224,14,267,12],[225,14,268,12],[226,12,269,10],[227,12,271,10,"newState"],[227,20,271,18],[227,21,271,19,"playerStats"],[227,32,271,30],[227,35,271,33],[228,14,272,12],[228,17,272,15,"newState"],[228,25,272,23],[228,26,272,24,"playerStats"],[228,37,272,35],[229,14,273,12,"attack"],[229,20,273,18],[229,22,273,20,"effectiveStats"],[229,36,273,34],[229,37,273,35,"attack"],[229,43,273,41],[230,14,274,12,"defense"],[230,21,274,19],[230,23,274,21,"effectiveStats"],[230,37,274,35],[230,38,274,36,"defense"],[230,45,274,43],[231,14,275,12,"maxHealth"],[231,23,275,21],[231,25,275,23,"effectiveStats"],[231,39,275,37],[231,40,275,38,"maxHealth"],[231,49,275,47],[232,14,275,49],[233,14,276,12,"health"],[233,20,276,18],[233,22,276,20,"newHealth"],[233,31,276,29],[234,14,276,31],[235,14,277,12,"critChance"],[235,24,277,22],[235,26,277,24,"effectiveStats"],[235,40,277,38],[235,41,277,39,"critChance"],[235,51,277,49],[235,55,277,53,"newState"],[235,63,277,61],[235,64,277,62,"playerStats"],[235,75,277,73],[235,76,277,74,"critChance"],[235,86,277,84],[236,14,278,12,"critDamage"],[236,24,278,22],[236,26,278,24,"effectiveStats"],[236,40,278,38],[236,41,278,39,"critDamage"],[236,51,278,49],[236,55,278,53,"newState"],[236,63,278,61],[236,64,278,62,"playerStats"],[236,75,278,73],[236,76,278,74,"critDamage"],[236,86,278,84],[237,14,279,12,"cooldownReduction"],[237,31,279,29],[237,33,279,31,"effectiveStats"],[237,47,279,45],[237,48,279,46,"cooldownReduction"],[237,65,279,63],[237,69,279,67,"newState"],[237,77,279,75],[237,78,279,76,"playerStats"],[237,89,279,87],[237,90,279,88,"cooldownReduction"],[238,12,280,10],[238,13,280,11],[239,10,281,8],[241,10,283,8],[242,10,284,8],[242,14,284,12,"game"],[242,18,284,16],[242,19,284,17,"gameState"],[242,28,284,26],[242,29,284,27,"isAlive"],[242,36,284,34],[242,40,285,12,"game"],[242,44,285,16],[242,45,285,17,"gameState"],[242,54,285,26],[242,55,285,27,"ninja"],[242,60,285,32],[242,61,285,33,"health"],[242,67,285,39],[242,72,285,44,"effectiveStats"],[242,86,285,58],[242,87,285,59,"maxHealth"],[242,96,285,68],[242,100,286,12,"newState"],[242,108,286,20],[242,109,286,21,"playerStats"],[242,120,286,32],[242,121,286,33,"health"],[242,127,286,39],[242,130,286,42,"effectiveStats"],[242,144,286,56],[242,145,286,57,"maxHealth"],[242,154,286,66],[242,157,286,69],[242,160,286,72],[242,162,286,74],[243,12,287,10,"console"],[243,19,287,17],[243,20,287,18,"log"],[243,23,287,21],[243,24,287,22],[243,58,287,56,"newState"],[243,66,287,64],[243,67,287,65,"playerStats"],[243,78,287,76],[243,79,287,77,"health"],[243,85,287,83],[243,91,287,89,"game"],[243,95,287,93],[243,96,287,94,"gameState"],[243,105,287,103],[243,106,287,104,"ninja"],[243,111,287,109],[243,112,287,110,"health"],[243,118,287,116],[243,139,287,137],[243,140,287,138],[244,12,288,10,"newState"],[244,20,288,18],[244,21,288,19,"playerStats"],[244,32,288,30],[244,33,288,31,"health"],[244,39,288,37],[244,42,288,40,"game"],[244,46,288,44],[244,47,288,45,"gameState"],[244,56,288,54],[244,57,288,55,"ninja"],[244,62,288,60],[244,63,288,61,"health"],[244,69,288,67],[245,10,289,8],[246,8,290,6],[248,8,292,6],[249,8,293,6,"newState"],[249,16,293,14],[249,17,293,15,"enemies"],[249,24,293,22],[249,25,293,23,"forEach"],[249,32,293,30],[249,33,293,31,"enemy"],[249,38,293,36],[249,42,293,40],[250,10,294,8],[250,14,294,12],[250,15,294,13,"enemy"],[250,20,294,18],[250,21,294,19,"isBoss"],[250,27,294,25],[250,29,294,27],[251,12,294,29],[252,12,295,10],[253,12,296,10],[253,16,296,16,"MOVEMENT_SPEED"],[253,30,296,30],[253,33,296,33],[253,37,296,37],[253,38,296,38],[253,39,296,39],[254,12,297,10],[254,16,297,16,"SCREEN_WIDTH"],[254,28,297,28],[254,31,297,31],[254,34,297,34],[255,12,298,10],[255,16,298,16,"GAME_AREA_HEIGHT"],[255,32,298,32],[255,35,298,35],[255,38,298,38],[255,39,298,39],[255,40,298,40],[256,12,299,10],[256,16,299,16,"ENEMY_SIZE"],[256,26,299,26],[256,29,299,29],[256,31,299,31],[258,12,301,10],[259,12,302,10],[259,16,302,16,"playerX"],[259,23,302,23],[259,26,302,26,"currentNinjaPosition"],[259,46,302,46],[259,47,302,47,"x"],[259,48,302,48],[260,12,303,10],[260,16,303,16,"playerY"],[260,23,303,23],[260,26,303,26,"currentNinjaPosition"],[260,46,303,46],[260,47,303,47,"y"],[260,48,303,48],[262,12,305,10],[263,12,306,10],[263,16,306,16,"deltaX"],[263,22,306,22],[263,25,306,25,"playerX"],[263,32,306,32],[263,35,306,35,"enemy"],[263,40,306,40],[263,41,306,41,"position"],[263,49,306,49],[263,50,306,50,"x"],[263,51,306,51],[264,12,307,10],[264,16,307,16,"deltaY"],[264,22,307,22],[264,25,307,25,"playerY"],[264,32,307,32],[264,35,307,35,"enemy"],[264,40,307,40],[264,41,307,41,"position"],[264,49,307,49],[264,50,307,50,"y"],[264,51,307,51],[265,12,308,10],[265,16,308,16,"distance"],[265,24,308,24],[265,27,308,27,"Math"],[265,31,308,31],[265,32,308,32,"sqrt"],[265,36,308,36],[265,37,308,37,"deltaX"],[265,43,308,43],[265,46,308,46,"deltaX"],[265,52,308,52],[265,55,308,55,"deltaY"],[265,61,308,61],[265,64,308,64,"deltaY"],[265,70,308,70],[265,71,308,71],[267,12,310,10],[268,12,311,10],[268,16,311,16,"ATTACK_RANGE"],[268,28,311,28],[268,31,311,31],[268,33,311,33],[268,34,311,34],[268,35,311,35],[269,12,312,10],[269,16,312,16,"ATTACK_COOLDOWN"],[269,31,312,31],[269,34,312,34],[269,36,312,36],[269,37,312,37],[269,38,312,38],[271,12,314,10],[271,16,314,14,"distance"],[271,24,314,22],[271,28,314,26,"ATTACK_RANGE"],[271,40,314,38],[271,42,314,40],[272,14,315,12],[273,14,316,12],[273,18,316,16],[273,19,316,17,"enemy"],[273,24,316,22],[273,25,316,23,"lastAttackTick"],[273,39,316,37],[273,41,316,39,"enemy"],[273,46,316,44],[273,47,316,45,"lastAttackTick"],[273,61,316,59],[273,64,316,62],[273,65,316,63],[274,14,318,12],[274,18,318,16,"newState"],[274,26,318,24],[274,27,318,25,"currentTick"],[274,38,318,36],[274,41,318,39,"enemy"],[274,46,318,44],[274,47,318,45,"lastAttackTick"],[274,61,318,59],[274,65,318,63,"ATTACK_COOLDOWN"],[274,80,318,78],[274,82,318,80],[275,16,319,14],[276,16,320,14],[276,20,320,18],[276,21,320,19,"game"],[276,25,320,23],[276,26,320,24,"gameState"],[276,35,320,33],[276,36,320,34,"isAlive"],[276,43,320,41],[276,45,320,43],[277,18,321,16,"console"],[277,25,321,23],[277,26,321,24,"log"],[277,29,321,27],[277,30,321,28],[277,49,321,47,"enemy"],[277,54,321,52],[277,55,321,53,"name"],[277,59,321,57],[277,93,321,91],[277,94,321,92],[278,18,322,16],[279,18,323,16,"enemy"],[279,23,323,21],[279,24,323,22,"lastAttackTick"],[279,38,323,36],[279,41,323,39,"newState"],[279,49,323,47],[279,50,323,48,"currentTick"],[279,61,323,59],[280,16,324,14],[280,17,324,15],[280,23,324,21],[281,18,325,16],[282,18,326,16],[282,22,326,22,"isPlayerInvincible"],[282,40,326,40],[282,43,326,43,"game"],[282,47,326,47],[282,48,326,48,"gameState"],[282,57,326,57],[282,58,326,58,"isInvincible"],[282,70,326,70],[282,74,327,41,"game"],[282,78,327,45],[282,79,327,46,"gameState"],[282,88,327,55],[282,89,327,56,"invincibilityEndTime"],[282,109,327,76],[282,113,328,41,"Date"],[282,117,328,45],[282,118,328,46,"now"],[282,121,328,49],[282,122,328,50],[282,123,328,51],[282,126,328,54,"game"],[282,130,328,58],[282,131,328,59,"gameState"],[282,140,328,68],[282,141,328,69,"invincibilityEndTime"],[282,161,328,89],[283,18,330,16],[283,22,330,20,"isPlayerInvincible"],[283,40,330,38],[283,42,330,40],[284,20,331,18,"console"],[284,27,331,25],[284,28,331,26,"log"],[284,31,331,29],[284,32,331,30],[284,51,331,49,"enemy"],[284,56,331,54],[284,57,331,55,"name"],[284,61,331,59],[284,101,331,99],[284,102,331,100],[285,20,332,18],[286,20,333,18,"enemy"],[286,25,333,23],[286,26,333,24,"lastAttackTick"],[286,40,333,38],[286,43,333,41,"newState"],[286,51,333,49],[286,52,333,50,"currentTick"],[286,63,333,61],[287,18,334,16],[287,19,334,17],[287,25,334,23],[288,20,335,16],[289,20,336,16],[289,24,336,22,"baseAttack"],[289,34,336,32],[289,37,336,35,"enemy"],[289,42,336,40],[289,43,336,41,"stats"],[289,48,336,46],[289,49,336,47,"attack"],[289,55,336,53],[289,58,336,56],[289,61,336,59],[289,62,336,60],[289,63,336,61],[290,20,337,16],[290,24,337,22,"attackDamage"],[290,36,337,34],[290,39,337,37,"Math"],[290,43,337,41],[290,44,337,42,"floor"],[290,49,337,47],[290,50,337,48,"baseAttack"],[290,60,337,58],[290,64,337,62],[290,67,337,65],[290,70,337,68,"Math"],[290,74,337,72],[290,75,337,73,"random"],[290,81,337,79],[290,82,337,80],[290,83,337,81],[290,86,337,84],[290,89,337,87],[290,90,337,88],[290,91,337,89],[290,92,337,90],[290,93,337,91],[291,20,338,16],[291,24,338,22,"playerDefense"],[291,37,338,35],[291,40,338,38,"newState"],[291,48,338,46],[291,49,338,47,"playerStats"],[291,60,338,58],[291,61,338,59,"defense"],[291,68,338,66],[292,20,339,16],[292,24,339,22,"finalDamage"],[292,35,339,33],[292,38,339,36,"Math"],[292,42,339,40],[292,43,339,41,"max"],[292,46,339,44],[292,47,339,45],[292,48,339,46],[292,50,339,48,"attackDamage"],[292,62,339,60],[292,65,339,63,"Math"],[292,69,339,67],[292,70,339,68,"floor"],[292,75,339,73],[292,76,339,74,"playerDefense"],[292,89,339,87],[292,92,339,90],[292,95,339,93],[292,96,339,94],[292,97,339,95],[292,98,339,96],[292,99,339,97],[294,20,341,16,"console"],[294,27,341,23],[294,28,341,24,"log"],[294,31,341,27],[294,32,341,28],[294,53,341,49,"enemy"],[294,58,341,54],[294,59,341,55,"name"],[294,63,341,59],[294,86,341,82,"finalDamage"],[294,97,341,93],[294,109,341,105,"attackDamage"],[294,121,341,117],[294,132,341,128,"Math"],[294,136,341,132],[294,137,341,133,"floor"],[294,142,341,138],[294,143,341,139,"playerDefense"],[294,156,341,152],[294,159,341,155],[294,162,341,158],[294,163,341,159],[294,184,341,180],[294,185,341,181],[296,20,343,16],[297,20,344,16],[297,24,344,22,"newPlayerHealth"],[297,39,344,37],[297,42,344,40,"Math"],[297,46,344,44],[297,47,344,45,"max"],[297,50,344,48],[297,51,344,49],[297,52,344,50],[297,54,344,52,"newState"],[297,62,344,60],[297,63,344,61,"playerStats"],[297,74,344,72],[297,75,344,73,"health"],[297,81,344,79],[297,84,344,82,"finalDamage"],[297,95,344,93],[297,96,344,94],[298,20,345,16,"newState"],[298,28,345,24],[298,29,345,25,"playerStats"],[298,40,345,36],[298,41,345,37,"health"],[298,47,345,43],[298,50,345,46,"newPlayerHealth"],[298,65,345,61],[299,20,347,16,"console"],[299,27,347,23],[299,28,347,24,"log"],[299,31,347,27],[299,32,347,28],[299,53,347,49,"newState"],[299,61,347,57],[299,62,347,58,"playerStats"],[299,73,347,69],[299,74,347,70,"health"],[299,80,347,76],[299,84,347,80,"newState"],[299,92,347,88],[299,93,347,89,"playerStats"],[299,104,347,100],[299,105,347,101,"maxHealth"],[299,114,347,110],[299,124,347,120,"finalDamage"],[299,135,347,131],[299,145,347,141],[299,146,347,142],[301,20,349,16],[302,20,350,16,"enemy"],[302,25,350,21],[302,26,350,22,"lastAttackTick"],[302,40,350,36],[302,43,350,39,"newState"],[302,51,350,47],[302,52,350,48,"currentTick"],[302,63,350,59],[304,20,352,16],[305,20,353,16],[305,24,353,20,"newPlayerHealth"],[305,39,353,35],[305,43,353,39],[305,44,353,40],[305,46,353,42],[306,22,354,18,"console"],[306,29,354,25],[306,30,354,26,"log"],[306,33,354,29],[306,34,354,30],[306,84,354,80],[306,85,354,81],[307,22,355,18],[308,22,356,18,"game"],[308,26,356,22],[308,27,356,23,"updateGameState"],[308,42,356,38],[308,43,356,39],[309,24,356,41,"isAlive"],[309,31,356,48],[309,33,356,50],[310,22,356,56],[310,23,356,57],[310,24,356,58],[311,20,357,16],[312,18,358,16],[313,16,359,14],[314,14,360,12],[315,12,361,10],[315,13,361,11],[315,19,361,17],[316,14,362,12],[317,14,363,12],[318,14,364,12],[318,18,364,16,"distance"],[318,26,364,24],[318,29,364,27],[318,31,364,29],[318,33,364,31],[319,16,365,14],[320,16,366,14],[320,20,366,20,"normalizedX"],[320,31,366,31],[320,34,366,34,"deltaX"],[320,40,366,40],[320,43,366,43,"distance"],[320,51,366,51],[321,16,367,14],[321,20,367,20,"normalizedY"],[321,31,367,31],[321,34,367,34,"deltaY"],[321,40,367,40],[321,43,367,43,"distance"],[321,51,367,51],[323,16,369,14],[324,16,370,14],[324,20,370,20,"randomFactor"],[324,32,370,32],[324,35,370,35],[324,38,370,38],[324,39,370,39],[324,40,370,40],[325,16,371,14],[325,20,371,20,"finalX"],[325,26,371,26],[325,29,371,29,"normalizedX"],[325,40,371,40],[325,43,371,43],[325,44,371,44,"Math"],[325,48,371,48],[325,49,371,49,"random"],[325,55,371,55],[325,56,371,56],[325,57,371,57],[325,60,371,60],[325,63,371,63],[325,67,371,67,"randomFactor"],[325,79,371,79],[326,16,372,14],[326,20,372,20,"finalY"],[326,26,372,26],[326,29,372,29,"normalizedY"],[326,40,372,40],[326,43,372,43],[326,44,372,44,"Math"],[326,48,372,48],[326,49,372,49,"random"],[326,55,372,55],[326,56,372,56],[326,57,372,57],[326,60,372,60],[326,63,372,63],[326,67,372,67,"randomFactor"],[326,79,372,79],[328,16,374,14],[329,16,375,14],[329,20,375,18,"newX"],[329,24,375,22],[329,27,375,25,"enemy"],[329,32,375,30],[329,33,375,31,"position"],[329,41,375,39],[329,42,375,40,"x"],[329,43,375,41],[329,46,375,45,"finalX"],[329,52,375,51],[329,55,375,54,"MOVEMENT_SPEED"],[329,69,375,69],[330,16,376,14],[330,20,376,18,"newY"],[330,24,376,22],[330,27,376,25,"enemy"],[330,32,376,30],[330,33,376,31,"position"],[330,41,376,39],[330,42,376,40,"y"],[330,43,376,41],[330,46,376,45,"finalY"],[330,52,376,51],[330,55,376,54,"MOVEMENT_SPEED"],[330,69,376,69],[332,16,378,14],[333,16,379,14,"newX"],[333,20,379,18],[333,23,379,21,"Math"],[333,27,379,25],[333,28,379,26,"max"],[333,31,379,29],[333,32,379,30],[333,33,379,31],[333,35,379,33,"Math"],[333,39,379,37],[333,40,379,38,"min"],[333,43,379,41],[333,44,379,42,"SCREEN_WIDTH"],[333,56,379,54],[333,59,379,57,"ENEMY_SIZE"],[333,69,379,67],[333,71,379,69,"newX"],[333,75,379,73],[333,76,379,74],[333,77,379,75],[334,16,380,14,"newY"],[334,20,380,18],[334,23,380,21,"Math"],[334,27,380,25],[334,28,380,26,"max"],[334,31,380,29],[334,32,380,30],[334,33,380,31],[334,35,380,33,"Math"],[334,39,380,37],[334,40,380,38,"min"],[334,43,380,41],[334,44,380,42,"GAME_AREA_HEIGHT"],[334,60,380,58],[334,63,380,61,"ENEMY_SIZE"],[334,73,380,71],[334,75,380,73,"newY"],[334,79,380,77],[334,80,380,78],[334,81,380,79],[336,16,382,14],[337,16,383,14,"enemy"],[337,21,383,19],[337,22,383,20,"position"],[337,30,383,28],[337,31,383,29,"x"],[337,32,383,30],[337,35,383,33,"newX"],[337,39,383,37],[338,16,384,14,"enemy"],[338,21,384,19],[338,22,384,20,"position"],[338,30,384,28],[338,31,384,29,"y"],[338,32,384,30],[338,35,384,33,"newY"],[338,39,384,37],[339,14,385,12],[340,14,386,12],[341,12,387,10],[342,10,388,8],[343,8,389,6],[343,9,389,7],[343,10,389,8],[345,8,391,6],[346,8,392,6],[346,12,392,10,"newState"],[346,20,392,18],[346,21,392,19,"shadowClone"],[346,32,392,30],[346,34,392,32],[347,10,393,8],[348,10,394,8,"newState"],[348,18,394,16],[348,19,394,17,"shadowClone"],[348,30,394,28],[348,31,394,29,"remainingTicks"],[348,45,394,43],[348,47,394,45],[350,10,396,8],[351,10,397,8],[351,14,397,14,"cloneOffset"],[351,25,397,25],[351,28,397,28],[351,30,397,30],[351,31,397,31],[351,32,397,32],[352,10,398,8,"newState"],[352,18,398,16],[352,19,398,17,"shadowClone"],[352,30,398,28],[352,31,398,29,"position"],[352,39,398,37],[352,40,398,38,"x"],[352,41,398,39],[352,44,398,42,"currentNinjaPosition"],[352,64,398,62],[352,65,398,63,"x"],[352,66,398,64],[352,69,398,67,"cloneOffset"],[352,80,398,78],[353,10,399,8,"newState"],[353,18,399,16],[353,19,399,17,"shadowClone"],[353,30,399,28],[353,31,399,29,"position"],[353,39,399,37],[353,40,399,38,"y"],[353,41,399,39],[353,44,399,42,"currentNinjaPosition"],[353,64,399,62],[353,65,399,63,"y"],[353,66,399,64],[353,69,399,67],[353,71,399,69],[355,10,401,8],[356,10,402,8],[356,14,402,12,"newState"],[356,22,402,20],[356,23,402,21,"shadowClone"],[356,34,402,32],[356,35,402,33,"remainingTicks"],[356,49,402,47],[356,53,402,51],[356,54,402,52],[356,56,402,54],[357,12,403,10,"console"],[357,19,403,17],[357,20,403,18,"log"],[357,23,403,21],[357,24,403,22],[357,75,403,73],[357,76,403,74],[358,12,404,10,"newState"],[358,20,404,18],[358,21,404,19,"shadowClone"],[358,32,404,30],[358,35,404,33,"undefined"],[358,44,404,42],[359,10,405,8],[359,11,405,9],[359,17,405,15],[360,12,406,10],[361,12,407,10],[362,12,408,10],[362,16,408,16,"CLONE_ATTACK_INTERVAL"],[362,37,408,37],[362,40,408,40],[362,42,408,42],[363,12,409,10],[363,16,409,14,"newState"],[363,24,409,22],[363,25,409,23,"currentTick"],[363,36,409,34],[363,39,409,37,"CLONE_ATTACK_INTERVAL"],[363,60,409,58],[363,65,409,63],[363,66,409,64],[363,70,409,68,"newState"],[363,78,409,76],[363,79,409,77,"enemies"],[363,86,409,84],[363,87,409,85,"length"],[363,93,409,91],[363,96,409,94],[363,97,409,95],[363,99,409,97],[364,14,410,12,"console"],[364,21,410,19],[364,22,410,20,"log"],[364,25,410,23],[364,26,410,24],[364,83,410,81],[364,84,410,82],[366,14,412,12],[367,14,413,12],[367,18,413,18,"target"],[367,24,413,24],[367,27,413,27,"findClosestEnemyInternal"],[367,51,413,51],[367,52,413,52,"newState"],[367,60,413,60],[367,61,413,61,"enemies"],[367,68,413,68],[367,69,413,69],[368,14,414,12],[368,18,414,16,"target"],[368,24,414,22],[368,26,414,24],[369,16,415,14],[370,16,416,14],[370,20,416,20,"cloneDamage"],[370,31,416,31],[370,34,416,34,"Math"],[370,38,416,38],[370,39,416,39,"floor"],[370,44,416,44],[370,45,416,45,"newState"],[370,53,416,53],[370,54,416,54,"playerStats"],[370,65,416,65],[370,66,416,66,"attack"],[370,72,416,72],[370,75,416,75],[370,78,416,78],[370,79,416,79],[372,16,418,14],[373,16,419,14,"createProjectile"],[373,32,419,30],[373,33,419,31,"target"],[373,39,419,37],[373,41,419,39,"cloneDamage"],[373,52,419,50],[373,54,419,52,"newState"],[373,62,419,60],[373,63,419,61,"shadowClone"],[373,74,419,72],[373,75,419,73,"position"],[373,83,419,81],[373,85,419,83],[374,18,420,16,"id"],[374,20,420,18],[374,22,420,20],[374,43,420,41],[375,18,421,16,"name"],[375,22,421,20],[375,24,421,22],[375,45,421,43],[376,18,422,16,"icon"],[376,22,422,20],[376,24,422,22],[377,16,423,14],[377,17,423,15],[377,18,423,16],[378,14,424,12],[379,12,425,10],[380,10,426,8],[381,8,427,6],[383,8,429,6],[384,8,430,6],[385,8,431,6,"console"],[385,15,431,13],[385,16,431,14,"log"],[385,19,431,17],[385,20,431,18],[385,63,431,61,"isManualControlActive"],[385,84,431,82],[385,97,431,95,"game"],[385,101,431,99],[385,102,431,100,"gameState"],[385,111,431,109],[385,112,431,110,"isAlive"],[385,119,431,117],[385,121,431,119],[385,122,431,120],[386,8,432,6],[386,12,432,10],[386,13,432,11,"isManualControlActive"],[386,34,432,32],[386,38,432,36,"game"],[386,42,432,40],[386,43,432,41,"gameState"],[386,52,432,50],[386,53,432,51,"isAlive"],[386,60,432,58],[386,62,432,60],[387,10,433,8],[387,15,433,13],[387,19,433,17,"i"],[387,20,433,18],[387,23,433,21],[387,24,433,22],[387,26,433,24,"i"],[387,27,433,25],[387,30,433,28],[387,31,433,29],[387,33,433,31,"i"],[387,34,433,32],[387,36,433,34],[387,38,433,36],[388,12,434,10],[388,16,434,14,"newState"],[388,24,434,22],[388,25,434,23,"abilityManager"],[388,39,434,37],[388,40,434,38,"isAbilityReady"],[388,54,434,52],[388,55,434,53,"i"],[388,56,434,54],[388,57,434,55],[388,61,434,59,"newState"],[388,69,434,67],[388,70,434,68,"enemies"],[388,77,434,75],[388,78,434,76,"length"],[388,84,434,82],[388,87,434,85],[388,88,434,86],[388,90,434,88],[389,14,435,12],[389,18,435,16,"newState"],[389,26,435,24],[389,27,435,25,"abilityManager"],[389,41,435,39],[389,42,435,40,"useAbility"],[389,52,435,50],[389,53,435,51,"i"],[389,54,435,52],[389,56,435,54,"newTick"],[389,63,435,61],[389,64,435,62],[389,66,435,64],[390,16,436,14,"console"],[390,23,436,21],[390,24,436,22,"log"],[390,27,436,25],[390,28,436,26],[390,73,436,71,"i"],[390,74,436,72],[390,76,436,74],[390,77,436,75],[391,16,437,14,"castAbility"],[391,27,437,25],[391,28,437,26,"newState"],[391,36,437,34],[391,38,437,36,"i"],[391,39,437,37],[391,40,437,38],[392,14,438,12],[393,12,439,10],[394,10,440,8],[395,8,441,6],[397,8,443,6],[398,8,444,6],[398,12,444,12,"dyingEnemies"],[398,24,444,24],[398,27,444,27,"newState"],[398,35,444,35],[398,36,444,36,"enemies"],[398,43,444,43],[398,44,444,44,"filter"],[398,50,444,50],[398,51,444,51,"enemy"],[398,56,444,56],[398,60,444,60,"enemy"],[398,65,444,65],[398,66,444,66,"isDying"],[398,73,444,73],[398,77,444,77,"enemy"],[398,82,444,82],[398,83,444,83,"health"],[398,89,444,89],[398,93,444,93],[398,94,444,94],[398,95,444,95],[399,8,445,6],[399,12,445,12,"deadEnemies"],[399,23,445,23],[399,26,445,26,"newState"],[399,34,445,34],[399,35,445,35,"enemies"],[399,42,445,42],[399,43,445,43,"filter"],[399,49,445,49],[399,50,445,50,"enemy"],[399,55,445,55],[399,59,445,59,"enemy"],[399,64,445,64],[399,65,445,65,"health"],[399,71,445,71],[399,75,445,75],[399,76,445,76],[399,80,445,80],[399,81,445,81,"enemy"],[399,86,445,86],[399,87,445,87,"isDying"],[399,94,445,94],[399,95,445,95],[401,8,447,6],[402,8,448,6,"enemiesToKill"],[402,21,448,19],[402,24,448,22],[402,25,448,23],[402,28,448,26,"deadEnemies"],[402,39,448,37],[402,41,448,39],[402,44,448,42,"dyingEnemies"],[402,56,448,54],[402,57,448,55],[402,58,448,56],[402,59,448,57],[404,8,450,6],[405,8,451,6],[405,12,451,12,"currentTime"],[405,23,451,23],[405,26,451,26,"Date"],[405,30,451,30],[405,31,451,31,"now"],[405,34,451,34],[405,35,451,35],[405,36,451,36],[406,8,452,6,"newState"],[406,16,452,14],[406,17,452,15,"enemies"],[406,24,452,22],[406,27,452,25,"newState"],[406,35,452,33],[406,36,452,34,"enemies"],[406,43,452,41],[406,44,452,42,"filter"],[406,50,452,48],[406,51,452,49,"enemy"],[406,56,452,54],[406,60,452,58],[407,10,453,8],[407,14,453,12,"enemy"],[407,19,453,17],[407,20,453,18,"isDying"],[407,27,453,25],[407,31,453,29,"enemy"],[407,36,453,34],[407,37,453,35,"deathStartTime"],[407,51,453,49],[407,53,453,51],[408,12,454,10],[408,16,454,16,"animationDuration"],[408,33,454,33],[408,36,454,36],[408,39,454,39],[408,40,454,40],[408,41,454,41],[409,12,455,10],[409,16,455,16,"isAnimationComplete"],[409,35,455,35],[409,38,455,38,"currentTime"],[409,49,455,49],[409,52,455,52,"enemy"],[409,57,455,57],[409,58,455,58,"deathStartTime"],[409,72,455,72],[409,76,455,76,"animationDuration"],[409,93,455,93],[410,12,456,10],[410,16,456,14,"isAnimationComplete"],[410,35,456,33],[410,37,456,35],[411,14,457,12,"console"],[411,21,457,19],[411,22,457,20,"log"],[411,25,457,23],[411,26,457,24],[411,58,457,56,"enemy"],[411,63,457,61],[411,64,457,62,"name"],[411,68,457,66],[411,86,457,84,"currentTime"],[411,97,457,95],[411,100,457,98,"enemy"],[411,105,457,103],[411,106,457,104,"deathStartTime"],[411,120,457,118],[411,129,457,127],[411,130,457,128],[412,14,458,12],[412,21,458,19],[412,26,458,24],[412,27,458,25],[412,28,458,26],[413,12,459,10],[414,10,460,8],[415,10,461,8],[415,17,461,15],[415,21,461,19],[415,22,461,20],[415,23,461,21],[416,8,462,6],[416,9,462,7],[416,10,462,8],[418,8,464,6],[419,8,465,6],[419,12,465,10,"deadEnemies"],[419,23,465,21],[419,24,465,22,"length"],[419,30,465,28],[419,33,465,31],[419,34,465,32],[419,36,465,34],[420,10,466,8,"console"],[420,17,466,15],[420,18,466,16,"log"],[420,21,466,19],[420,22,466,20],[420,49,466,47,"deadEnemies"],[420,60,466,58],[420,61,466,59,"length"],[420,67,466,65],[420,83,466,81],[420,85,466,83,"deadEnemies"],[420,96,466,94],[420,97,466,95,"map"],[420,100,466,98],[420,101,466,99,"e"],[420,102,466,100],[420,106,466,104],[420,109,466,107,"e"],[420,110,466,108],[420,111,466,109,"id"],[420,113,466,111],[420,117,466,115,"e"],[420,118,466,116],[420,119,466,117,"health"],[420,125,466,123],[420,130,466,128],[420,131,466,129],[420,132,466,130],[421,8,467,6],[423,8,469,6],[424,8,470,6],[424,12,470,12,"lowHealthEnemies"],[424,28,470,28],[424,31,470,31,"newState"],[424,39,470,39],[424,40,470,40,"enemies"],[424,47,470,47],[424,48,470,48,"filter"],[424,54,470,54],[424,55,470,55,"enemy"],[424,60,470,60],[424,64,470,64,"enemy"],[424,69,470,69],[424,70,470,70,"health"],[424,76,470,76],[424,80,470,80],[424,82,470,82],[424,86,470,86,"enemy"],[424,91,470,91],[424,92,470,92,"health"],[424,98,470,98],[424,101,470,101],[424,102,470,102],[424,103,470,103],[425,8,471,6],[425,12,471,10,"lowHealthEnemies"],[425,28,471,26],[425,29,471,27,"length"],[425,35,471,33],[425,38,471,36],[425,39,471,37],[425,41,471,39],[426,10,472,8,"console"],[426,17,472,15],[426,18,472,16,"log"],[426,21,472,19],[426,22,472,20],[426,61,472,59],[426,63,472,61,"lowHealthEnemies"],[426,79,472,77],[426,80,472,78,"map"],[426,83,472,81],[426,84,472,82,"e"],[426,85,472,83],[426,89,472,87],[426,92,472,90,"e"],[426,93,472,91],[426,94,472,92,"id"],[426,96,472,94],[426,100,472,98,"e"],[426,101,472,99],[426,102,472,100,"health"],[426,108,472,106],[426,112,472,110,"e"],[426,113,472,111],[426,114,472,112,"maxHealth"],[426,123,472,121],[426,128,472,126],[426,129,472,127],[426,130,472,128],[427,8,473,6],[429,8,475,6],[430,8,476,6],[430,12,476,12,"beforeCount"],[430,23,476,23],[430,26,476,26,"newState"],[430,34,476,34],[430,35,476,35,"enemies"],[430,42,476,42],[430,43,476,43,"length"],[430,49,476,49],[431,8,477,6,"newState"],[431,16,477,14],[431,17,477,15,"enemies"],[431,24,477,22],[431,27,477,25,"newState"],[431,35,477,33],[431,36,477,34,"enemies"],[431,43,477,41],[431,44,477,42,"filter"],[431,50,477,48],[431,51,477,49,"enemy"],[431,56,477,54],[431,60,477,58,"enemy"],[431,65,477,63],[431,66,477,64,"health"],[431,72,477,70],[431,75,477,73],[431,76,477,74],[431,77,477,75],[432,8,478,6],[432,12,478,12,"afterCount"],[432,22,478,22],[432,25,478,25,"newState"],[432,33,478,33],[432,34,478,34,"enemies"],[432,41,478,41],[432,42,478,42,"length"],[432,48,478,48],[433,8,480,6],[433,12,480,10,"beforeCount"],[433,23,480,21],[433,28,480,26,"afterCount"],[433,38,480,36],[433,40,480,38],[434,10,481,8,"console"],[434,17,481,15],[434,18,481,16,"log"],[434,21,481,19],[434,22,481,20],[434,52,481,50,"beforeCount"],[434,63,481,61],[434,66,481,64,"afterCount"],[434,76,481,74],[434,102,481,100],[434,103,481,101],[435,8,482,6],[437,8,484,6],[438,8,485,6],[439,8,486,6],[439,12,486,12,"MAX_ENEMIES"],[439,23,486,23],[439,26,486,26],[439,28,486,28],[439,29,486,29],[439,30,486,30],[440,8,487,6],[440,12,487,12,"MIN_SPAWN_DELAY"],[440,27,487,27],[440,30,487,30],[440,33,487,33],[440,34,487,34],[440,35,487,35],[441,8,488,6],[441,12,488,12,"now"],[441,15,488,15],[441,18,488,18,"Date"],[441,22,488,22],[441,23,488,23,"now"],[441,26,488,26],[441,27,488,27],[441,28,488,28],[442,8,489,6],[442,12,489,12,"hasBoss"],[442,19,489,19],[442,22,489,22,"newState"],[442,30,489,30],[442,31,489,31,"enemies"],[442,38,489,38],[442,39,489,39,"some"],[442,43,489,43],[442,44,489,44,"enemy"],[442,49,489,49],[442,53,489,53,"enemy"],[442,58,489,58],[442,59,489,59,"isBoss"],[442,65,489,65],[442,66,489,66],[444,8,491,6],[445,8,492,6],[445,12,492,10],[445,13,492,11,"newState"],[445,21,492,19],[445,22,492,20,"lastSpawnTime"],[445,35,492,33],[445,37,492,35],[446,10,493,8,"newState"],[446,18,493,16],[446,19,493,17,"lastSpawnTime"],[446,32,493,30],[446,35,493,33,"now"],[446,38,493,36],[447,8,494,6],[448,8,496,6,"console"],[448,15,496,13],[448,16,496,14,"log"],[448,19,496,17],[448,20,496,18],[448,53,496,51,"newState"],[448,61,496,59],[448,62,496,60,"enemies"],[448,69,496,67],[448,70,496,68,"length"],[448,76,496,74],[448,85,496,83,"MAX_ENEMIES"],[448,96,496,94],[448,109,496,107,"hasBoss"],[448,116,496,114],[448,118,496,116],[448,119,496,117],[450,8,498,6],[451,8,499,6],[451,12,499,10],[451,13,499,11,"hasBoss"],[451,20,499,18],[451,24,499,22,"newState"],[451,32,499,30],[451,33,499,31,"enemies"],[451,40,499,38],[451,41,499,39,"length"],[451,47,499,45],[451,50,499,48,"MAX_ENEMIES"],[451,61,499,59],[451,65,499,64,"now"],[451,68,499,67],[451,71,499,70,"newState"],[451,79,499,78],[451,80,499,79,"lastSpawnTime"],[451,93,499,92],[451,97,499,97,"MIN_SPAWN_DELAY"],[451,112,499,112],[451,114,499,114],[452,10,500,8,"console"],[452,17,500,15],[452,18,500,16,"log"],[452,21,500,19],[452,22,500,20],[452,43,500,41,"newState"],[452,51,500,49],[452,52,500,50,"enemies"],[452,59,500,57],[452,60,500,58,"length"],[452,66,500,64],[452,69,500,67],[452,70,500,68],[452,74,500,72,"MAX_ENEMIES"],[452,85,500,83],[452,87,500,85],[452,88,500,86],[453,10,501,8,"spawnTestEnemy"],[453,24,501,22],[453,25,501,23,"newState"],[453,33,501,31],[453,34,501,32],[454,10,502,8,"newState"],[454,18,502,16],[454,19,502,17,"lastSpawnTime"],[454,32,502,30],[454,35,502,33,"now"],[454,38,502,36],[455,8,503,6],[456,8,505,6],[456,15,505,13,"newState"],[456,23,505,21],[457,6,506,4],[457,7,506,5],[457,47,506,6],[459,6,508,4],[460,6,509,4],[460,10,509,8,"enemiesToKill"],[460,23,509,21],[460,24,509,22,"length"],[460,30,509,28],[460,33,509,31],[460,34,509,32],[460,36,509,34],[461,8,510,6],[462,8,511,6],[462,12,511,12,"unprocessedEnemies"],[462,30,511,30],[462,33,511,33,"enemiesToKill"],[462,46,511,46],[462,47,511,47,"filter"],[462,53,511,53],[462,54,511,54,"enemy"],[462,59,511,59],[462,63,511,63],[462,64,511,64,"enemy"],[462,69,511,69],[462,70,511,70,"xpAwarded"],[462,79,511,79],[462,80,511,80],[463,8,513,6,"console"],[463,15,513,13],[463,16,513,14,"log"],[463,19,513,17],[463,20,513,18],[463,43,513,41,"enemiesToKill"],[463,56,513,54],[463,57,513,55,"length"],[463,63,513,61],[463,80,513,78,"unprocessedEnemies"],[463,98,513,96],[463,99,513,97,"length"],[463,105,513,103],[463,119,513,117],[463,120,513,118],[464,8,515,6],[464,12,515,10,"unprocessedEnemies"],[464,30,515,28],[464,31,515,29,"length"],[464,37,515,35],[464,40,515,38],[464,41,515,39],[464,43,515,41],[465,10,516,8],[466,10,517,8],[466,14,517,12,"totalXP"],[466,21,517,19],[466,24,517,22],[466,25,517,23],[467,10,518,8],[467,14,518,12,"totalGold"],[467,23,518,21],[467,26,518,24],[467,27,518,25],[468,10,519,8],[468,14,519,14,"zoneKills"],[468,23,519,30],[468,26,519,33],[468,28,519,35],[469,10,521,8],[469,14,521,14,"xpMultiplier"],[469,26,521,26],[469,29,521,29,"game"],[469,33,521,33],[469,34,521,34,"gameState"],[469,43,521,43],[469,44,521,44,"subscriptionBenefits"],[469,64,521,64],[469,66,521,66,"xp_multiplier"],[469,79,521,79],[469,83,521,83],[469,86,521,86],[470,10,522,8],[470,14,522,14,"goldMultiplier"],[470,28,522,28],[470,31,522,31,"game"],[470,35,522,35],[470,36,522,36,"gameState"],[470,45,522,45],[470,46,522,46,"subscriptionBenefits"],[470,66,522,66],[470,68,522,68,"drop_multiplier"],[470,83,522,83],[470,87,522,87],[470,90,522,90],[471,10,524,8,"unprocessedEnemies"],[471,28,524,26],[471,29,524,27,"forEach"],[471,36,524,34],[471,37,524,35,"enemy"],[471,42,524,40],[471,46,524,44],[472,12,525,10,"totalXP"],[472,19,525,17],[472,23,525,21],[472,24,525,22,"enemy"],[472,29,525,27],[472,30,525,28,"zoneXP"],[472,36,525,34],[472,40,525,38],[472,41,525,39],[472,45,525,43,"xpMultiplier"],[472,57,525,55],[473,12,526,10,"totalGold"],[473,21,526,19],[473,25,526,23],[473,27,526,25],[473,30,526,28,"goldMultiplier"],[473,44,526,42],[474,12,528,10],[474,16,528,14,"enemy"],[474,21,528,19],[474,22,528,20,"zoneTypeId"],[474,32,528,30],[474,34,528,32],[475,14,529,12,"zoneKills"],[475,23,529,21],[475,24,529,22,"push"],[475,28,529,26],[475,29,529,27],[476,16,530,14,"id"],[476,18,530,16],[476,20,530,18,"enemy"],[476,25,530,23],[476,26,530,24,"id"],[476,28,530,26],[477,16,531,14,"typeId"],[477,22,531,20],[477,24,531,22,"enemy"],[477,29,531,27],[477,30,531,28,"zoneTypeId"],[477,40,531,38],[478,16,532,14,"name"],[478,20,532,18],[478,22,532,20,"enemy"],[478,27,532,25],[478,28,532,26,"name"],[478,32,532,30],[479,16,533,14,"icon"],[479,20,533,18],[479,22,533,20],[479,26,533,24],[480,16,534,14,"hp"],[480,18,534,16],[480,20,534,18],[480,21,534,19],[481,16,535,14,"maxHP"],[481,21,535,19],[481,23,535,21,"enemy"],[481,28,535,26],[481,29,535,27,"maxHealth"],[481,38,535,36],[482,16,536,14,"attack"],[482,22,536,20],[482,24,536,22,"enemy"],[482,29,536,27],[482,30,536,28,"stats"],[482,35,536,33],[482,36,536,34,"attack"],[482,42,536,40],[483,16,537,14,"xp"],[483,18,537,16],[483,20,537,18,"enemy"],[483,25,537,23],[483,26,537,24,"zoneXP"],[483,32,537,30],[483,36,537,34],[483,37,537,35],[484,16,538,14,"position"],[484,24,538,22],[484,26,538,24,"enemy"],[484,31,538,29],[484,32,538,30,"position"],[485,14,539,12],[485,15,539,13],[485,16,539,14],[486,12,540,10],[487,10,541,8],[487,11,541,9],[487,12,541,10],[489,10,543,8],[490,10,544,8,"game"],[490,14,544,12],[490,15,544,13,"updateNinja"],[490,26,544,24],[490,27,544,25,"prev"],[490,31,544,29],[490,36,544,34],[491,12,545,10,"experience"],[491,22,545,20],[491,24,545,22,"prev"],[491,28,545,26],[491,29,545,27,"experience"],[491,39,545,37],[491,42,545,40,"totalXP"],[491,49,545,47],[492,12,546,10,"gold"],[492,16,546,14],[492,18,546,16,"prev"],[492,22,546,20],[492,23,546,21,"gold"],[492,27,546,25],[492,30,546,28,"totalGold"],[493,10,547,8],[493,11,547,9],[493,12,547,10],[493,13,547,11],[495,10,549,8],[496,10,550,8,"zoneKills"],[496,19,550,17],[496,20,550,18,"forEach"],[496,27,550,25],[496,28,550,26,"zoneEnemy"],[496,37,550,35],[496,41,550,39,"recordEnemyKill"],[496,56,550,54],[496,57,550,55,"zoneEnemy"],[496,66,550,64],[496,67,550,65],[496,68,550,66],[498,10,552,8],[499,10,553,8,"setCombatState"],[499,24,553,22],[499,25,553,23,"prev"],[499,29,553,27],[499,34,553,32],[500,12,554,10],[500,15,554,13,"prev"],[500,19,554,17],[501,12,555,10,"enemies"],[501,19,555,17],[501,21,555,19,"prev"],[501,25,555,23],[501,26,555,24,"enemies"],[501,33,555,31],[501,34,555,32,"map"],[501,37,555,35],[501,38,555,36,"enemy"],[501,43,555,41],[501,47,555,45],[502,14,556,12],[502,18,556,18,"wasProcessed"],[502,30,556,30],[502,33,556,33,"unprocessedEnemies"],[502,51,556,51],[502,52,556,52,"find"],[502,56,556,56],[502,57,556,57,"processed"],[502,66,556,66],[502,70,556,70,"processed"],[502,79,556,79],[502,80,556,80,"id"],[502,82,556,82],[502,87,556,87,"enemy"],[502,92,556,92],[502,93,556,93,"id"],[502,95,556,95],[502,96,556,96],[503,14,557,12],[503,21,557,19,"wasProcessed"],[503,33,557,31],[503,36,557,34],[504,16,557,36],[504,19,557,39,"enemy"],[504,24,557,44],[505,16,557,46,"xpAwarded"],[505,25,557,55],[505,27,557,57],[506,14,557,62],[506,15,557,63],[506,18,557,66,"enemy"],[506,23,557,71],[507,12,558,10],[507,13,558,11],[508,10,559,8],[508,11,559,9],[508,12,559,10],[508,13,559,11],[509,8,560,6],[510,6,561,4],[511,4,562,2],[511,5,562,3],[511,7,562,5],[511,9,562,7],[511,10,562,8],[511,11,562,9],[511,12,562,10],[513,4,564,2],[514,4,565,2],[514,8,565,8,"findClosestEnemyInternal"],[514,32,565,32],[514,35,565,36,"enemies"],[514,42,565,58],[514,46,565,83],[515,6,566,4],[515,10,566,8,"enemies"],[515,17,566,15],[515,18,566,16,"length"],[515,24,566,22],[515,29,566,27],[515,30,566,28],[515,32,566,30],[515,39,566,37],[515,43,566,41],[517,6,568,4],[518,6,569,4],[518,10,569,10,"SCREEN_WIDTH"],[518,22,569,22],[518,25,569,25],[518,28,569,28],[519,6,570,4],[519,10,570,10,"GAME_AREA_HEIGHT"],[519,26,570,26],[519,29,570,29],[519,32,570,32],[519,35,570,35],[519,38,570,38],[519,39,570,39],[519,40,570,40],[520,6,571,4],[520,10,571,10,"ninjaX"],[520,16,571,16],[520,19,571,19,"SCREEN_WIDTH"],[520,31,571,31],[520,34,571,34],[520,35,571,35],[521,6,572,4],[521,10,572,10,"ninjaY"],[521,16,572,16],[521,19,572,19,"GAME_AREA_HEIGHT"],[521,35,572,35],[521,38,572,38],[521,39,572,39],[522,6,574,4],[522,10,574,8,"closestEnemy"],[522,22,574,20],[522,25,574,23,"enemies"],[522,32,574,30],[522,33,574,31],[522,34,574,32],[522,35,574,33],[523,6,575,4],[523,10,575,8,"closestDistance"],[523,25,575,23],[523,28,575,26,"Infinity"],[523,36,575,34],[524,6,577,4,"enemies"],[524,13,577,11],[524,14,577,12,"forEach"],[524,21,577,19],[524,22,577,20,"enemy"],[524,27,577,25],[524,31,577,29],[525,8,578,6],[525,12,578,12,"distance"],[525,20,578,20],[525,23,578,23,"Math"],[525,27,578,27],[525,28,578,28,"sqrt"],[525,32,578,32],[525,33,579,8,"Math"],[525,37,579,12],[525,38,579,13,"pow"],[525,41,579,16],[525,42,579,17,"enemy"],[525,47,579,22],[525,48,579,23,"position"],[525,56,579,31],[525,57,579,32,"x"],[525,58,579,33],[525,61,579,36,"ninjaX"],[525,67,579,42],[525,69,579,44],[525,70,579,45],[525,71,579,46],[525,74,580,8,"Math"],[525,78,580,12],[525,79,580,13,"pow"],[525,82,580,16],[525,83,580,17,"enemy"],[525,88,580,22],[525,89,580,23,"position"],[525,97,580,31],[525,98,580,32,"y"],[525,99,580,33],[525,102,580,36,"ninjaY"],[525,108,580,42],[525,110,580,44],[525,111,580,45],[525,112,581,6],[525,113,581,7],[526,8,583,6],[526,12,583,10,"distance"],[526,20,583,18],[526,23,583,21,"closestDistance"],[526,38,583,36],[526,40,583,38],[527,10,584,8,"closestDistance"],[527,25,584,23],[527,28,584,26,"distance"],[527,36,584,34],[528,10,585,8,"closestEnemy"],[528,22,585,20],[528,25,585,23,"enemy"],[528,30,585,28],[529,8,586,6],[530,6,587,4],[530,7,587,5],[530,8,587,6],[531,6,589,4,"console"],[531,13,589,11],[531,14,589,12,"log"],[531,17,589,15],[531,18,589,16],[531,60,589,58,"closestDistance"],[531,75,589,73],[531,76,589,74,"toFixed"],[531,83,589,81],[531,84,589,82],[531,85,589,83],[531,86,589,84],[531,88,589,86],[531,89,589,87],[532,6,590,4],[532,13,590,11,"closestEnemy"],[532,25,590,23],[533,4,591,2],[533,5,591,3],[535,4,593,2],[536,4,594,2],[536,8,594,8,"findClosestEnemy"],[536,24,594,24],[536,27,594,27,"findClosestEnemy"],[536,28,594,27],[536,33,594,53],[537,6,595,4],[537,13,595,11,"findClosestEnemyInternal"],[537,37,595,35],[537,38,595,36,"combatState"],[537,49,595,47],[537,50,595,48,"enemies"],[537,57,595,55],[537,58,595,56],[538,4,596,2],[538,5,596,3],[540,4,598,2],[541,4,599,2],[542,4,600,2],[542,8,600,2,"_useState7"],[542,18,600,2],[542,21,600,58],[542,25,600,58,"useState"],[542,31,600,66],[542,32,600,66,"useState"],[542,40,600,66],[542,42,600,91],[543,8,600,93,"x"],[543,9,600,94],[543,11,600,96],[543,14,600,99],[544,8,600,101,"y"],[544,9,600,102],[544,11,600,104],[545,6,600,108],[545,7,600,109],[545,8,600,110],[546,6,600,110,"_useState8"],[546,16,600,110],[546,23,600,110,"_slicedToArray"],[546,37,600,110],[546,38,600,110,"default"],[546,45,600,110],[546,47,600,110,"_useState7"],[546,57,600,110],[547,6,600,9,"currentNinjaPosition"],[547,26,600,29],[547,29,600,29,"_useState8"],[547,39,600,29],[548,6,600,31,"setCurrentNinjaPosition"],[548,29,600,54],[548,32,600,54,"_useState8"],[548,42,600,54],[549,4,601,2],[549,8,601,2,"_useState9"],[549,18,601,2],[549,21,601,60],[549,25,601,60,"useState"],[549,31,601,68],[549,32,601,68,"useState"],[549,40,601,68],[549,42,601,69],[549,47,601,74],[549,48,601,75],[550,6,601,75,"_useState0"],[550,16,601,75],[550,23,601,75,"_slicedToArray"],[550,37,601,75],[550,38,601,75,"default"],[550,45,601,75],[550,47,601,75,"_useState9"],[550,57,601,75],[551,6,601,9,"isManualControlActive"],[551,27,601,30],[551,30,601,30,"_useState0"],[551,40,601,30],[552,6,601,32,"setIsManualControlActive"],[552,30,601,56],[552,33,601,56,"_useState0"],[552,43,601,56],[554,4,603,2],[555,4,604,2],[555,8,604,8,"updateNinjaPosition"],[555,27,604,27],[555,30,604,30],[555,34,604,30,"useCallback"],[555,40,604,41],[555,41,604,41,"useCallback"],[555,52,604,41],[555,54,604,43,"newPosition"],[555,65,604,78],[555,69,604,83],[556,6,605,4,"setCurrentNinjaPosition"],[556,29,605,27],[556,30,605,28,"newPosition"],[556,41,605,39],[556,42,605,40],[557,4,606,2],[557,5,606,3],[557,7,606,5],[557,9,606,7],[557,10,606,8],[559,4,608,2],[560,4,609,2],[560,8,609,8,"setManualControlActive"],[560,30,609,30],[560,33,609,33],[560,37,609,33,"useCallback"],[560,43,609,44],[560,44,609,44,"useCallback"],[560,55,609,44],[560,57,609,46,"active"],[560,63,609,61],[560,67,609,66],[561,6,610,4,"setIsManualControlActive"],[561,30,610,28],[561,31,610,29,"active"],[561,37,610,35],[561,38,610,36],[562,6,611,4,"console"],[562,13,611,11],[562,14,611,12,"log"],[562,17,611,15],[562,18,611,16],[562,39,611,37,"active"],[562,45,611,43],[562,48,611,46],[562,59,611,57],[562,62,611,60],[562,75,611,73],[562,88,611,86,"active"],[562,94,611,92],[562,97,611,95],[562,105,611,103],[562,108,611,106],[562,117,611,115],[562,119,611,117],[562,120,611,118],[563,4,612,2],[563,5,612,3],[563,7,612,5],[563,9,612,7],[563,10,612,8],[565,4,614,2],[566,4,615,2],[566,8,615,8,"handleProjectileHit"],[566,27,615,27],[566,30,615,31,"projectile"],[566,40,615,59],[566,44,615,64],[567,6,616,4,"console"],[567,13,616,11],[567,14,616,12,"log"],[567,17,616,15],[567,18,616,16],[567,35,616,33,"projectile"],[567,45,616,43],[567,46,616,44,"id"],[567,48,616,46],[567,62,616,60,"projectile"],[567,72,616,70],[567,73,616,71,"targetEnemyId"],[567,86,616,84],[567,94,616,92,"projectile"],[567,104,616,102],[567,105,616,103,"damage"],[567,111,616,109],[567,120,616,118],[567,121,616,119],[568,6,618,4,"setCombatState"],[568,20,618,18],[568,21,618,19,"prev"],[568,25,618,23],[568,29,618,27],[569,8,619,6],[569,12,619,12,"newState"],[569,20,619,20],[569,23,619,23],[570,10,619,25],[570,13,619,28,"prev"],[571,8,619,33],[571,9,619,34],[573,8,621,6],[574,8,622,6],[574,12,622,12,"enemyIndex"],[574,22,622,22],[574,25,622,25,"newState"],[574,33,622,33],[574,34,622,34,"enemies"],[574,41,622,41],[574,42,622,42,"findIndex"],[574,51,622,51],[574,52,622,52,"e"],[574,53,622,53],[574,57,622,57,"e"],[574,58,622,58],[574,59,622,59,"id"],[574,61,622,61],[574,66,622,66,"projectile"],[574,76,622,76],[574,77,622,77,"targetEnemyId"],[574,90,622,90],[574,91,622,91],[575,8,623,6],[575,12,623,10,"enemyIndex"],[575,22,623,20],[575,26,623,24],[575,27,623,25],[575,29,623,27],[576,10,624,8,"newState"],[576,18,624,16],[576,19,624,17,"enemies"],[576,26,624,24],[576,29,624,27],[576,30,624,28],[576,33,624,31,"newState"],[576,41,624,39],[576,42,624,40,"enemies"],[576,49,624,47],[576,50,624,48],[577,10,625,8,"newState"],[577,18,625,16],[577,19,625,17,"enemies"],[577,26,625,24],[577,27,625,25,"enemyIndex"],[577,37,625,35],[577,38,625,36],[577,41,625,39],[578,12,626,10],[578,15,626,13,"newState"],[578,23,626,21],[578,24,626,22,"enemies"],[578,31,626,29],[578,32,626,30,"enemyIndex"],[578,42,626,40],[578,43,626,41],[579,12,627,10,"health"],[579,18,627,16],[579,20,627,18,"newState"],[579,28,627,26],[579,29,627,27,"enemies"],[579,36,627,34],[579,37,627,35,"enemyIndex"],[579,47,627,45],[579,48,627,46],[579,49,627,47,"health"],[579,55,627,53],[579,58,627,56,"projectile"],[579,68,627,66],[579,69,627,67,"damage"],[579,75,627,73],[580,12,628,10,"lastDamaged"],[580,23,628,21],[580,25,628,23,"combatEngine"],[580,44,628,35],[580,45,628,35,"combatEngine"],[580,57,628,35],[580,58,628,36,"getCurrentTick"],[580,72,628,50],[580,73,628,51],[581,10,629,8],[581,11,629,9],[582,10,631,8,"console"],[582,17,631,15],[582,18,631,16,"log"],[582,21,631,19],[582,22,631,20],[582,34,631,32,"projectile"],[582,44,631,42],[582,45,631,43,"targetEnemyId"],[582,58,631,56],[582,70,631,68,"newState"],[582,78,631,76],[582,79,631,77,"enemies"],[582,86,631,84],[582,87,631,85,"enemyIndex"],[582,97,631,95],[582,98,631,96],[582,99,631,97,"health"],[582,105,631,103],[582,109,631,107,"newState"],[582,117,631,115],[582,118,631,116,"enemies"],[582,125,631,123],[582,126,631,124,"enemyIndex"],[582,136,631,134],[582,137,631,135],[582,138,631,136,"maxHealth"],[582,147,631,145],[582,149,631,147],[582,150,631,148],[583,8,632,6],[584,8,634,6],[584,15,634,13,"newState"],[584,23,634,21],[585,6,635,4],[585,7,635,5],[585,8,635,6],[587,6,637,4],[588,6,638,4,"setProjectiles"],[588,20,638,18],[588,21,638,19,"prev"],[588,25,638,23],[588,29,638,27,"prev"],[588,33,638,31],[588,34,638,32,"filter"],[588,40,638,38],[588,41,638,39,"p"],[588,42,638,40],[588,46,638,44,"p"],[588,47,638,45],[588,48,638,46,"id"],[588,50,638,48],[588,55,638,53,"projectile"],[588,65,638,63],[588,66,638,64,"id"],[588,68,638,66],[588,69,638,67],[588,70,638,68],[589,4,639,2],[589,5,639,3],[591,4,641,2],[592,4,642,2],[592,8,642,8,"castAbility"],[592,19,642,19],[592,22,642,22,"castAbility"],[592,23,642,23,"state"],[592,28,642,41],[592,30,642,43,"slotIndex"],[592,39,642,60],[592,44,642,65],[593,6,643,4],[593,10,643,10,"deck"],[593,14,643,14],[593,17,643,17,"state"],[593,22,643,22],[593,23,643,23,"abilityManager"],[593,37,643,37],[593,38,643,38,"getDeck"],[593,45,643,45],[593,46,643,46],[593,47,643,47],[594,6,644,4],[594,10,644,10,"ability"],[594,17,644,17],[594,20,644,20,"deck"],[594,24,644,24],[594,25,644,25,"slots"],[594,30,644,30],[594,31,644,31,"slotIndex"],[594,40,644,40],[594,41,644,41],[595,6,645,4],[595,10,645,8],[595,11,645,9,"ability"],[595,18,645,16],[595,20,645,18],[596,6,647,4,"console"],[596,13,647,11],[596,14,647,12,"log"],[596,17,647,15],[596,18,647,16],[596,43,647,41,"ability"],[596,50,647,48],[596,51,647,49,"id"],[596,53,647,51],[596,67,647,65,"slotIndex"],[596,76,647,74],[596,78,647,76],[596,79,647,77],[598,6,649,4],[599,6,650,4],[599,10,650,8,"damage"],[599,16,650,14],[599,19,650,17,"ability"],[599,26,650,24],[599,27,650,25,"stats"],[599,32,650,30],[599,33,650,31,"baseDamage"],[599,43,650,41],[601,6,652,4],[602,6,653,4,"deck"],[602,10,653,8],[602,11,653,9,"activeSynergies"],[602,26,653,24],[602,27,653,25,"forEach"],[602,34,653,32],[602,35,653,33,"synergy"],[602,42,653,40],[602,46,653,44],[603,8,654,6],[603,12,654,10,"synergy"],[603,19,654,17],[603,20,654,18,"bonus"],[603,25,654,23],[603,26,654,24,"damageBonus"],[603,37,654,35],[603,41,655,10,"synergy"],[603,48,655,17],[603,49,655,18,"requiredTags"],[603,61,655,30],[603,62,655,31,"some"],[603,66,655,35],[603,67,655,36,"tag"],[603,70,655,39],[603,74,655,43,"ability"],[603,81,655,50],[603,82,655,51,"tags"],[603,86,655,55],[603,87,655,56,"includes"],[603,95,655,64],[603,96,655,65,"tag"],[603,99,655,68],[603,100,655,69],[603,101,655,70],[603,103,655,72],[604,10,656,8,"damage"],[604,16,656,14],[604,20,656,19],[604,21,656,20],[604,24,656,23,"synergy"],[604,31,656,30],[604,32,656,31,"bonus"],[604,37,656,36],[604,38,656,37,"damageBonus"],[604,49,656,48],[604,52,656,51],[604,55,656,55],[605,8,657,6],[606,6,658,4],[606,7,658,5],[606,8,658,6],[608,6,660,4],[609,6,661,4],[609,10,661,10,"isAOE"],[609,15,661,15],[609,18,661,18,"ability"],[609,25,661,25],[609,26,661,26,"effects"],[609,33,661,33],[609,34,661,34,"includes"],[609,42,661,42],[609,43,661,43],[609,48,661,48],[609,49,661,49],[609,53,661,53,"ability"],[609,60,661,60],[609,61,661,61,"stats"],[609,66,661,66],[609,67,661,67,"aoeRadius"],[609,76,661,76],[610,6,662,4,"console"],[610,13,662,11],[610,14,662,12,"log"],[610,17,662,15],[610,18,662,16],[610,39,662,37,"ability"],[610,46,662,44],[610,47,662,45,"name"],[610,51,662,49],[610,66,662,64,"JSON"],[610,70,662,68],[610,71,662,69,"stringify"],[610,80,662,78],[610,81,662,79,"ability"],[610,88,662,86],[610,89,662,87,"effects"],[610,96,662,94],[610,97,662,95],[610,113,662,111,"ability"],[610,120,662,118],[610,121,662,119,"stats"],[610,126,662,124],[610,127,662,125,"aoeRadius"],[610,136,662,134],[610,148,662,146,"isAOE"],[610,153,662,151],[610,155,662,153],[610,156,662,154],[611,6,664,4],[611,10,664,8,"isAOE"],[611,15,664,13],[611,17,664,15],[612,8,665,6,"console"],[612,15,665,13],[612,16,665,14,"log"],[612,19,665,17],[612,20,665,18],[612,39,665,37,"ability"],[612,46,665,44],[612,47,665,45,"name"],[612,51,665,49],[612,67,665,65,"ability"],[612,74,665,72],[612,75,665,73,"stats"],[612,80,665,78],[612,81,665,79,"aoeRadius"],[612,90,665,88],[612,92,665,90],[612,93,665,91],[614,8,667,6],[615,8,668,6],[616,8,669,6],[616,12,669,12,"ninjaX"],[616,18,669,18],[616,21,669,21,"currentNinjaPosition"],[616,41,669,41],[616,42,669,42,"x"],[616,43,669,43],[616,46,669,46],[616,48,669,48],[616,49,669,49],[616,50,669,50],[617,8,670,6],[617,12,670,12,"ninjaY"],[617,18,670,18],[617,21,670,21,"currentNinjaPosition"],[617,41,670,41],[617,42,670,42,"y"],[617,43,670,43],[617,46,670,46],[617,48,670,48],[618,8,671,6],[618,12,671,12,"aoeRadius"],[618,21,671,21],[618,24,671,24,"ability"],[618,31,671,31],[618,32,671,32,"stats"],[618,37,671,37],[618,38,671,38,"aoeRadius"],[618,47,671,47],[619,8,673,6],[619,12,673,12,"enemiesInRange"],[619,26,673,26],[619,29,673,29,"state"],[619,34,673,34],[619,35,673,35,"enemies"],[619,42,673,42],[619,43,673,43,"filter"],[619,49,673,49],[619,50,673,50,"enemy"],[619,55,673,55],[619,59,673,59],[620,10,674,8],[620,14,674,14,"enemyX"],[620,20,674,20],[620,23,674,23,"enemy"],[620,28,674,28],[620,29,674,29,"position"],[620,37,674,37],[620,38,674,38,"x"],[620,39,674,39],[620,42,674,42],[620,46,674,46],[620,47,674,47],[620,48,674,48],[621,10,675,8],[621,14,675,14,"enemyY"],[621,20,675,20],[621,23,675,23,"enemy"],[621,28,675,28],[621,29,675,29,"position"],[621,37,675,37],[621,38,675,38,"y"],[621,39,675,39],[621,42,675,42],[621,46,675,46],[622,10,676,8],[622,14,676,14,"distance"],[622,22,676,22],[622,25,676,25,"Math"],[622,29,676,29],[622,30,676,30,"sqrt"],[622,34,676,34],[622,35,676,35,"Math"],[622,39,676,39],[622,40,676,40,"pow"],[622,43,676,43],[622,44,676,44,"enemyX"],[622,50,676,50],[622,53,676,53,"ninjaX"],[622,59,676,59],[622,61,676,61],[622,62,676,62],[622,63,676,63],[622,66,676,66,"Math"],[622,70,676,70],[622,71,676,71,"pow"],[622,74,676,74],[622,75,676,75,"enemyY"],[622,81,676,81],[622,84,676,84,"ninjaY"],[622,90,676,90],[622,92,676,92],[622,93,676,93],[622,94,676,94],[622,95,676,95],[623,10,677,8],[623,17,677,15,"distance"],[623,25,677,23],[623,29,677,27,"aoeRadius"],[623,38,677,36],[624,8,678,6],[624,9,678,7],[624,10,678,8],[625,8,680,6,"console"],[625,15,680,13],[625,16,680,14,"log"],[625,19,680,17],[625,20,680,18],[625,45,680,43,"enemiesInRange"],[625,59,680,57],[625,60,680,58,"length"],[625,66,680,64],[625,88,680,86,"aoeRadius"],[625,97,680,95],[625,107,680,105],[625,108,680,106],[627,8,682,6],[628,8,683,6,"enemiesInRange"],[628,22,683,20],[628,23,683,21,"forEach"],[628,30,683,28],[628,31,683,29,"enemy"],[628,36,683,34],[628,40,683,38],[629,10,684,8],[629,14,684,14,"damageResult"],[629,26,684,26],[629,29,684,29,"DamageCalculator"],[629,48,684,45],[629,49,684,45,"DamageCalculator"],[629,65,684,45],[629,66,684,46,"calculateDamage"],[629,81,684,61],[629,82,684,62,"damage"],[629,88,684,68],[629,90,684,70,"state"],[629,95,684,75],[629,96,684,76,"playerStats"],[629,107,684,87],[629,109,684,89,"enemy"],[629,114,684,94],[629,115,684,95,"stats"],[629,120,684,100],[629,121,684,101],[630,10,685,8,"createProjectile"],[630,26,685,24],[630,27,685,25,"enemy"],[630,32,685,30],[630,34,685,32,"damageResult"],[630,46,685,44],[630,47,685,45,"damage"],[630,53,685,51],[630,55,685,53,"currentNinjaPosition"],[630,75,685,73],[630,77,685,75],[631,12,686,10,"id"],[631,14,686,12],[631,16,686,14,"ability"],[631,23,686,21],[631,24,686,22,"id"],[631,26,686,24],[632,12,687,10,"name"],[632,16,687,14],[632,18,687,16,"ability"],[632,25,687,23],[632,26,687,24,"name"],[632,30,687,28],[633,12,688,10,"icon"],[633,16,688,14],[633,18,688,16,"ability"],[633,25,688,23],[633,26,688,24,"icon"],[634,10,689,8],[634,11,689,9],[634,12,689,10],[635,10,690,8,"console"],[635,17,690,15],[635,18,690,16,"log"],[635,21,690,19],[635,22,690,20],[635,37,690,35,"enemy"],[635,42,690,40],[635,43,690,41,"name"],[635,47,690,45],[635,55,690,53,"damageResult"],[635,67,690,65],[635,68,690,66,"damage"],[635,74,690,72],[635,83,690,81],[635,84,690,82],[637,10,692,8],[638,10,693,8],[638,14,693,12,"damageResult"],[638,26,693,24],[638,27,693,25,"damage"],[638,33,693,31],[638,37,693,35,"enemy"],[638,42,693,40],[638,43,693,41,"health"],[638,49,693,47],[638,51,693,49],[639,12,694,10,"console"],[639,19,694,17],[639,20,694,18,"log"],[639,23,694,21],[639,24,694,22],[639,67,694,65,"enemy"],[639,72,694,70],[639,73,694,71,"name"],[639,77,694,75],[639,90,694,88,"damageResult"],[639,102,694,100],[639,103,694,101,"damage"],[639,109,694,107],[639,124,694,122,"enemy"],[639,129,694,127],[639,130,694,128,"health"],[639,136,694,134],[639,139,694,137],[639,140,694,138],[640,10,695,8],[641,8,696,6],[641,9,696,7],[641,10,696,8],[642,8,698,6,"console"],[642,15,698,13],[642,16,698,14,"log"],[642,19,698,17],[642,20,698,18],[642,26,698,24,"ability"],[642,33,698,31],[642,34,698,32,"name"],[642,38,698,36],[642,56,698,54,"enemiesInRange"],[642,70,698,68],[642,71,698,69,"length"],[642,77,698,75],[642,93,698,91,"damage"],[642,99,698,97],[642,118,698,116],[642,119,698,117],[643,6,700,4],[643,7,700,5],[643,13,700,11],[644,8,701,6],[645,8,702,6],[645,12,702,12,"target"],[645,18,702,18],[645,21,702,21,"findClosestEnemyInternal"],[645,45,702,45],[645,46,702,46,"state"],[645,51,702,51],[645,52,702,52,"enemies"],[645,59,702,59],[645,60,702,60],[646,8,703,6],[646,12,703,10],[646,13,703,11,"target"],[646,19,703,17],[646,21,703,19],[647,8,705,6],[647,12,705,12,"damageResult"],[647,24,705,24],[647,27,705,27,"DamageCalculator"],[647,46,705,43],[647,47,705,43,"DamageCalculator"],[647,63,705,43],[647,64,705,44,"calculateDamage"],[647,79,705,59],[647,80,705,60,"damage"],[647,86,705,66],[647,88,705,68,"state"],[647,93,705,73],[647,94,705,74,"playerStats"],[647,105,705,85],[647,107,705,87,"target"],[647,113,705,93],[647,114,705,94,"stats"],[647,119,705,99],[647,120,705,100],[649,8,707,6],[650,8,708,6,"console"],[650,15,708,13],[650,16,708,14,"log"],[650,19,708,17],[650,20,708,18],[650,71,708,69,"target"],[650,77,708,75],[650,78,708,76,"name"],[650,82,708,80],[650,91,708,89,"damageResult"],[650,103,708,101],[650,104,708,102,"damage"],[650,110,708,108],[650,119,708,117],[650,120,708,118],[651,8,709,6,"createProjectile"],[651,24,709,22],[651,25,709,23,"target"],[651,31,709,29],[651,33,709,31,"damageResult"],[651,45,709,43],[651,46,709,44,"damage"],[651,52,709,50],[651,54,709,52,"currentNinjaPosition"],[651,74,709,72],[651,76,709,74],[652,10,710,8,"id"],[652,12,710,10],[652,14,710,12,"ability"],[652,21,710,19],[652,22,710,20,"id"],[652,24,710,22],[653,10,711,8,"name"],[653,14,711,12],[653,16,711,14,"ability"],[653,23,711,21],[653,24,711,22,"name"],[653,28,711,26],[654,10,712,8,"icon"],[654,14,712,12],[654,16,712,14,"ability"],[654,23,712,21],[654,24,712,22,"icon"],[655,8,713,6],[655,9,713,7],[655,10,713,8],[656,8,715,6,"console"],[656,15,715,13],[656,16,715,14,"log"],[656,19,715,17],[656,20,715,18],[656,26,715,24,"ability"],[656,33,715,31],[656,34,715,32,"name"],[656,38,715,36],[656,66,715,64,"damageResult"],[656,78,715,76],[656,79,715,77,"damage"],[656,85,715,83],[656,95,715,93,"damageResult"],[656,107,715,105],[656,108,715,106,"isCritical"],[656,118,715,116],[656,121,715,119],[656,131,715,129],[656,134,715,132],[656,136,715,134],[656,138,715,136],[656,139,715,137],[658,8,717,6],[659,8,718,6],[659,12,718,10,"damageResult"],[659,24,718,22],[659,25,718,23,"damage"],[659,31,718,29],[659,35,718,33,"target"],[659,41,718,39],[659,42,718,40,"health"],[659,48,718,46],[659,50,718,48],[660,10,719,8,"console"],[660,17,719,15],[660,18,719,16,"log"],[660,21,719,19],[660,22,719,20],[660,75,719,73,"target"],[660,81,719,79],[660,82,719,80,"name"],[660,86,719,84],[660,99,719,97,"damageResult"],[660,111,719,109],[660,112,719,110,"damage"],[660,118,719,116],[660,133,719,131,"target"],[660,139,719,137],[660,140,719,138,"health"],[660,146,719,144],[660,149,719,147],[660,150,719,148],[661,8,720,6],[662,6,721,4],[664,6,723,4],[665,6,724,4],[665,10,724,8,"ability"],[665,17,724,15],[665,18,724,16,"effects"],[665,25,724,23],[665,26,724,24,"includes"],[665,34,724,32],[665,35,724,33],[665,40,724,38],[665,41,724,39],[665,45,724,43,"ability"],[665,52,724,50],[665,53,724,51,"stats"],[665,58,724,56],[665,59,724,57,"duration"],[665,67,724,65],[665,69,724,67],[666,8,725,6],[666,12,725,12,"targets"],[666,19,725,19],[666,22,725,22,"isAOE"],[666,27,725,27],[666,30,726,8,"state"],[666,35,726,13],[666,36,726,14,"enemies"],[666,43,726,21],[666,44,726,22,"filter"],[666,50,726,28],[666,51,726,29,"enemy"],[666,56,726,34],[666,60,726,38],[667,10,727,10],[667,14,727,16,"ninjaX"],[667,20,727,22],[667,23,727,25,"currentNinjaPosition"],[667,43,727,45],[667,44,727,46,"x"],[667,45,727,47],[667,48,727,50],[667,50,727,52],[668,10,728,10],[668,14,728,16,"ninjaY"],[668,20,728,22],[668,23,728,25,"currentNinjaPosition"],[668,43,728,45],[668,44,728,46,"y"],[668,45,728,47],[668,48,728,50],[668,50,728,52],[669,10,729,10],[669,14,729,16,"enemyX"],[669,20,729,22],[669,23,729,25,"enemy"],[669,28,729,30],[669,29,729,31,"position"],[669,37,729,39],[669,38,729,40,"x"],[669,39,729,41],[669,42,729,44],[669,46,729,48],[670,10,730,10],[670,14,730,16,"enemyY"],[670,20,730,22],[670,23,730,25,"enemy"],[670,28,730,30],[670,29,730,31,"position"],[670,37,730,39],[670,38,730,40,"y"],[670,39,730,41],[670,42,730,44],[670,46,730,48],[671,10,731,10],[671,14,731,16,"distance"],[671,22,731,24],[671,25,731,27,"Math"],[671,29,731,31],[671,30,731,32,"sqrt"],[671,34,731,36],[671,35,731,37,"Math"],[671,39,731,41],[671,40,731,42,"pow"],[671,43,731,45],[671,44,731,46,"enemyX"],[671,50,731,52],[671,53,731,55,"ninjaX"],[671,59,731,61],[671,61,731,63],[671,62,731,64],[671,63,731,65],[671,66,731,68,"Math"],[671,70,731,72],[671,71,731,73,"pow"],[671,74,731,76],[671,75,731,77,"enemyY"],[671,81,731,83],[671,84,731,86,"ninjaY"],[671,90,731,92],[671,92,731,94],[671,93,731,95],[671,94,731,96],[671,95,731,97],[672,10,732,10],[672,17,732,17,"distance"],[672,25,732,25],[672,29,732,29,"ability"],[672,36,732,36],[672,37,732,37,"stats"],[672,42,732,42],[672,43,732,43,"aoeRadius"],[672,52,732,52],[673,8,733,8],[673,9,733,9],[673,10,733,10],[673,13,734,8],[673,14,734,9,"findClosestEnemyInternal"],[673,38,734,33],[673,39,734,34,"state"],[673,44,734,39],[673,45,734,40,"enemies"],[673,52,734,47],[673,53,734,48],[673,54,734,49],[673,55,734,50,"filter"],[673,61,734,56],[673,62,734,57,"Boolean"],[673,69,734,64],[673,70,734,65],[674,8,736,6,"targets"],[674,15,736,13],[674,16,736,14,"forEach"],[674,23,736,21],[674,24,736,22,"target"],[674,30,736,28],[674,34,736,32],[675,10,737,8,"state"],[675,15,737,13],[675,16,737,14,"statusEffects"],[675,29,737,27],[675,30,737,28,"addEffect"],[675,39,737,37],[675,40,737,38,"target"],[675,46,737,44],[675,47,737,45,"id"],[675,49,737,47],[675,51,737,49],[676,12,738,10,"id"],[676,14,738,12],[676,16,738,14],[676,19,738,17,"ability"],[676,26,738,24],[676,27,738,25,"id"],[676,29,738,27],[676,35,738,33],[677,12,739,10,"type"],[677,16,739,14],[677,18,739,16],[677,23,739,21],[678,12,740,10,"remainingTicks"],[678,26,740,24],[678,28,740,26,"Math"],[678,32,740,30],[678,33,740,31,"floor"],[678,38,740,36],[678,39,740,37,"ability"],[678,46,740,44],[678,47,740,45,"stats"],[678,52,740,50],[678,53,740,51,"duration"],[678,61,740,59],[678,64,740,62],[678,66,740,64],[678,67,740,65],[679,12,741,10,"tickInterval"],[679,24,741,22],[679,26,741,24],[679,28,741,26],[680,12,742,10,"lastTick"],[680,20,742,18],[680,22,742,20,"state"],[680,27,742,25],[680,28,742,26,"currentTick"],[680,39,742,37],[681,12,743,10,"value"],[681,17,743,15],[681,19,743,17,"Math"],[681,23,743,21],[681,24,743,22,"floor"],[681,29,743,27],[681,30,743,28,"damage"],[681,36,743,34],[681,39,743,37],[681,42,743,40],[681,43,743,41],[682,12,744,10,"stackable"],[682,21,744,19],[682,23,744,21],[683,10,745,8],[683,11,745,9],[683,12,745,10],[684,8,746,6],[684,9,746,7],[684,10,746,8],[685,6,747,4],[687,6,749,4],[688,6,750,4],[688,10,750,8,"ability"],[688,17,750,15],[688,18,750,16,"effects"],[688,25,750,23],[688,26,750,24,"includes"],[688,34,750,32],[688,35,750,33],[688,41,750,39],[688,42,750,40],[688,46,750,44,"ability"],[688,53,750,51],[688,54,750,52,"id"],[688,56,750,54],[688,61,750,59],[688,75,750,73],[688,77,750,75],[689,8,751,6,"console"],[689,15,751,13],[689,16,751,14,"log"],[689,19,751,17],[689,20,751,18],[689,66,751,64,"ability"],[689,73,751,71],[689,74,751,72,"stats"],[689,79,751,77],[689,80,751,78,"duration"],[689,88,751,86],[689,98,751,96],[689,99,751,97],[691,8,753,6],[692,8,754,6],[692,12,754,12,"cloneX"],[692,18,754,18],[692,21,754,21,"currentNinjaPosition"],[692,41,754,41],[692,42,754,42,"x"],[692,43,754,43],[692,46,754,46],[692,48,754,48],[692,49,754,49],[692,50,754,50],[693,8,755,6],[693,12,755,12,"cloneY"],[693,18,755,18],[693,21,755,21,"currentNinjaPosition"],[693,41,755,41],[693,42,755,42,"y"],[693,43,755,43],[693,46,755,46],[693,48,755,48],[693,49,755,49],[693,50,755,50],[695,8,757,6,"state"],[695,13,757,11],[695,14,757,12,"shadowClone"],[695,25,757,23],[695,28,757,26],[696,10,758,8,"id"],[696,12,758,10],[696,14,758,12],[696,30,758,28,"Date"],[696,34,758,32],[696,35,758,33,"now"],[696,38,758,36],[696,39,758,37],[696,40,758,38],[696,42,758,40],[697,10,759,8,"remainingTicks"],[697,24,759,22],[697,26,759,24,"Math"],[697,30,759,28],[697,31,759,29,"floor"],[697,36,759,34],[697,37,759,35,"ability"],[697,44,759,42],[697,45,759,43,"stats"],[697,50,759,48],[697,51,759,49,"duration"],[697,59,759,57],[697,62,759,60],[697,64,759,62],[697,65,759,63],[698,10,759,65],[699,10,760,8,"position"],[699,18,760,16],[699,20,760,18],[700,12,760,20,"x"],[700,13,760,21],[700,15,760,23,"cloneX"],[700,21,760,29],[701,12,760,31,"y"],[701,13,760,32],[701,15,760,34,"cloneY"],[702,10,760,41],[702,11,760,42],[703,10,761,8,"damageMultiplier"],[703,26,761,24],[703,28,761,26],[703,31,761,29],[703,32,761,31],[704,8,762,6],[704,9,762,7],[705,8,764,6,"console"],[705,15,764,13],[705,16,764,14,"log"],[705,19,764,17],[705,20,764,18],[705,63,764,61,"ability"],[705,70,764,68],[705,71,764,69,"stats"],[705,76,764,74],[705,77,764,75,"duration"],[705,85,764,83],[705,108,764,106],[705,109,764,107],[706,6,765,4],[707,4,766,2],[707,5,766,3],[709,4,768,2],[710,4,769,2],[710,8,769,8,"createProjectile"],[710,24,769,24],[710,27,769,27,"createProjectile"],[710,28,769,28,"targetEnemy"],[710,39,769,52],[710,41,769,54,"damage"],[710,47,769,68],[710,49,769,70,"ninjaPos"],[710,57,769,103],[710,59,769,105,"abilityInfo"],[710,70,769,159],[710,72,769,161,"isAOE"],[710,77,769,176],[710,79,769,178,"aoeRadius"],[710,88,769,196],[710,93,769,201],[711,6,770,4],[711,10,770,8],[711,11,770,9,"targetEnemy"],[711,22,770,20],[711,24,770,22],[712,8,771,6,"console"],[712,15,771,13],[712,16,771,14,"log"],[712,19,771,17],[712,20,771,18],[712,65,771,63],[712,66,771,64],[713,8,772,6],[713,15,772,13],[713,19,772,17],[714,6,773,4],[715,6,775,4],[715,10,775,10,"SCREEN_WIDTH"],[715,22,775,22],[715,25,775,25],[715,28,775,28],[716,6,776,4],[716,10,776,10,"GAME_AREA_HEIGHT"],[716,26,776,26],[716,29,776,29],[716,32,776,32],[716,35,776,35],[716,38,776,38],[716,39,776,39],[716,40,776,40],[717,6,777,4],[717,10,777,10,"NINJA_SIZE"],[717,20,777,20],[717,23,777,23],[717,25,777,25],[719,6,779,4],[720,6,780,4],[720,10,780,10,"ninjaX"],[720,16,780,16],[720,19,780,19,"ninjaPos"],[720,27,780,27],[720,30,780,30,"ninjaPos"],[720,38,780,38],[720,39,780,39,"x"],[720,40,780,40],[720,43,780,43,"NINJA_SIZE"],[720,53,780,53],[720,56,780,56],[720,57,780,57],[720,60,780,60,"SCREEN_WIDTH"],[720,72,780,72],[720,75,780,75],[720,76,780,76],[721,6,781,4],[721,10,781,10,"ninjaY"],[721,16,781,16],[721,19,781,19,"ninjaPos"],[721,27,781,27],[721,30,781,30,"ninjaPos"],[721,38,781,38],[721,39,781,39,"y"],[721,40,781,40],[721,43,781,43,"NINJA_SIZE"],[721,53,781,53],[721,56,781,56],[721,57,781,57],[721,60,781,60,"GAME_AREA_HEIGHT"],[721,76,781,76],[721,79,781,79],[721,80,781,80],[722,6,782,4],[722,10,782,10,"ENEMY_SIZE"],[722,20,782,20],[722,23,782,23],[722,25,782,25],[723,6,784,4],[723,10,784,10,"projectileId"],[723,22,784,22],[723,25,784,25],[723,33,784,33,"Date"],[723,37,784,37],[723,38,784,38,"now"],[723,41,784,41],[723,42,784,42],[723,43,784,43],[723,47,784,47,"Math"],[723,51,784,51],[723,52,784,52,"random"],[723,58,784,58],[723,59,784,59],[723,60,784,60],[723,62,784,62],[724,6,786,4],[724,10,786,10,"projectile"],[724,20,786,38],[724,23,786,41],[725,8,787,6,"id"],[725,10,787,8],[725,12,787,10,"projectileId"],[725,24,787,22],[726,8,788,6,"x"],[726,9,788,7],[726,11,788,9,"ninjaX"],[726,17,788,15],[727,8,789,6,"y"],[727,9,789,7],[727,11,789,9,"ninjaY"],[727,17,789,15],[728,8,790,6,"targetX"],[728,15,790,13],[728,17,790,15,"targetEnemy"],[728,28,790,26],[728,29,790,27,"position"],[728,37,790,35],[728,38,790,36,"x"],[728,39,790,37],[728,42,790,40,"ENEMY_SIZE"],[728,52,790,50],[728,55,790,53],[728,56,790,54],[729,8,791,6,"targetY"],[729,15,791,13],[729,17,791,15,"targetEnemy"],[729,28,791,26],[729,29,791,27,"position"],[729,37,791,35],[729,38,791,36,"y"],[729,39,791,37],[729,42,791,40,"ENEMY_SIZE"],[729,52,791,50],[729,55,791,53],[729,56,791,54],[730,8,792,6,"targetEnemyId"],[730,21,792,19],[730,23,792,21,"targetEnemy"],[730,34,792,32],[730,35,792,33,"id"],[730,37,792,35],[731,8,793,6,"damage"],[731,14,793,12],[731,16,793,14,"damage"],[731,22,793,20],[732,8,794,6,"startTime"],[732,17,794,15],[732,19,794,17,"Date"],[732,23,794,21],[732,24,794,22,"now"],[732,27,794,25],[732,28,794,26],[732,29,794,27],[733,8,795,6,"duration"],[733,16,795,14],[733,18,795,16],[733,21,795,19],[734,8,795,21],[735,8,796,6],[736,8,797,6,"abilityId"],[736,17,797,15],[736,19,797,17,"abilityInfo"],[736,30,797,28],[736,32,797,30,"id"],[736,34,797,32],[736,38,797,36],[736,54,797,52],[737,8,798,6,"abilityName"],[737,19,798,17],[737,21,798,19,"abilityInfo"],[737,32,798,30],[737,34,798,32,"name"],[737,38,798,36],[737,42,798,40],[737,58,798,56],[738,8,799,6,"abilityIcon"],[738,19,799,17],[738,21,799,19,"abilityInfo"],[738,32,799,30],[738,34,799,32,"icon"],[738,38,799,36],[738,42,799,40],[738,46,799,44],[739,8,799,46],[740,8,800,6],[741,8,801,6,"isAOE"],[741,13,801,11],[741,15,801,13,"isAOE"],[741,20,801,18],[741,24,801,22],[741,29,801,27],[742,8,802,6,"aoeRadius"],[742,17,802,15],[742,19,802,17,"aoeRadius"],[742,28,802,26],[742,32,802,30],[743,6,803,4],[743,7,803,5],[744,6,805,4,"console"],[744,13,805,11],[744,14,805,12,"log"],[744,17,805,15],[744,18,805,16],[744,44,805,42,"abilityInfo"],[744,55,805,53],[744,57,805,55,"name"],[744,61,805,59],[744,65,805,63],[744,81,805,79],[744,101,805,99,"projectileId"],[744,113,805,111],[744,128,805,126,"targetEnemy"],[744,139,805,137],[744,140,805,138,"name"],[744,144,805,142],[744,152,805,150,"damage"],[744,158,805,156],[744,167,805,165],[744,168,805,166],[745,6,806,4,"console"],[745,13,806,11],[745,14,806,12,"log"],[745,17,806,15],[745,18,806,16],[745,48,806,46,"isAOE"],[745,53,806,51],[745,68,806,66,"aoeRadius"],[745,77,806,75],[745,89,806,87,"damage"],[745,95,806,93],[745,97,806,95],[745,98,806,96],[746,6,808,4,"console"],[746,13,808,11],[746,14,808,12,"log"],[746,17,808,15],[746,18,808,16],[746,53,808,51,"targetEnemy"],[746,64,808,62],[746,65,808,63,"id"],[746,67,808,65],[746,75,808,73,"damage"],[746,81,808,79],[746,90,808,88],[746,91,808,89],[747,6,809,4,"console"],[747,13,809,11],[747,14,809,12,"log"],[747,17,809,15],[747,18,809,16],[747,53,809,51,"ninjaX"],[747,59,809,57],[747,64,809,62,"ninjaY"],[747,70,809,68],[747,87,809,85,"projectile"],[747,97,809,95],[747,98,809,96,"targetX"],[747,105,809,103],[747,110,809,108,"projectile"],[747,120,809,118],[747,121,809,119,"targetY"],[747,128,809,126],[747,131,809,129],[747,132,809,130],[748,6,811,4,"setProjectiles"],[748,20,811,18],[748,21,811,19,"prev"],[748,25,811,23],[748,29,811,27],[748,30,811,28],[748,33,811,31,"prev"],[748,37,811,35],[748,39,811,37,"projectile"],[748,49,811,47],[748,50,811,48],[748,51,811,49],[750,6,813,4],[751,6,814,4,"setTimeout"],[751,16,814,14],[751,17,814,15],[751,23,814,21],[752,8,815,6,"handleProjectileHit"],[752,27,815,25],[752,28,815,26,"projectile"],[752,38,815,36],[752,39,815,37],[753,6,816,4],[753,7,816,5],[753,9,816,7],[753,12,816,10],[753,13,816,11],[754,6,818,4],[754,13,818,11,"projectile"],[754,23,818,21],[755,4,819,2],[755,5,819,3],[757,4,821,2],[758,4,822,2],[758,8,822,8,"spawnTestEnemy"],[758,22,822,22],[758,25,822,26,"state"],[758,30,822,44],[758,34,822,49],[759,6,823,4,"console"],[759,13,823,11],[759,14,823,12,"log"],[759,17,823,15],[759,18,823,16],[759,83,823,81],[759,84,823,82],[761,6,825,4],[762,6,826,4],[762,10,826,10,"zoneEnemy"],[762,19,826,19],[762,22,826,22,"spawnZoneEnemy"],[762,36,826,36],[762,37,826,37],[762,38,826,38],[763,6,827,4],[763,10,827,8],[763,11,827,9,"zoneEnemy"],[763,20,827,18],[763,22,827,20],[764,8,828,6,"console"],[764,15,828,13],[764,16,828,14,"log"],[764,19,828,17],[764,20,828,18],[764,76,828,74],[764,77,828,75],[765,8,829,6],[766,8,830,6,"spawnBasicTestEnemy"],[766,27,830,25],[766,28,830,26,"state"],[766,33,830,31],[766,34,830,32],[767,8,831,6],[768,6,832,4],[769,6,834,4,"console"],[769,13,834,11],[769,14,834,12,"log"],[769,17,834,15],[769,18,834,16],[769,44,834,42,"zoneEnemy"],[769,53,834,51],[769,54,834,52,"name"],[769,58,834,56],[769,63,834,61,"zoneEnemy"],[769,72,834,70],[769,73,834,71,"typeId"],[769,79,834,77],[769,94,834,92,"currentZone"],[769,105,834,103],[769,107,834,105,"id"],[769,109,834,107],[769,119,834,117,"currentZoneLevel"],[769,135,834,133],[769,137,834,135,"level"],[769,142,834,140],[769,144,834,142],[769,145,834,143],[771,6,836,4],[772,6,837,4],[772,10,837,10,"combatEnemy"],[772,21,837,34],[772,24,837,37],[773,8,838,6,"id"],[773,10,838,8],[773,12,838,10,"zoneEnemy"],[773,21,838,19],[773,22,838,20,"id"],[773,24,838,22],[774,8,839,6,"name"],[774,12,839,10],[774,14,839,12,"zoneEnemy"],[774,23,839,21],[774,24,839,22,"name"],[774,28,839,26],[775,8,840,6,"health"],[775,14,840,12],[775,16,840,14,"zoneEnemy"],[775,25,840,23],[775,26,840,24,"hp"],[775,28,840,26],[776,8,841,6,"maxHealth"],[776,17,841,15],[776,19,841,17,"zoneEnemy"],[776,28,841,26],[776,29,841,27,"maxHP"],[776,34,841,32],[777,8,842,6,"stats"],[777,13,842,11],[777,15,842,13],[778,10,843,8,"attack"],[778,16,843,14],[778,18,843,16,"zoneEnemy"],[778,27,843,25],[778,28,843,26,"attack"],[778,34,843,32],[779,10,844,8,"defense"],[779,17,844,15],[779,19,844,17],[779,21,844,19],[780,10,844,21],[781,10,845,8,"health"],[781,16,845,14],[781,18,845,16,"zoneEnemy"],[781,27,845,25],[781,28,845,26,"hp"],[781,30,845,28],[782,10,846,8,"maxHealth"],[782,19,846,17],[782,21,846,19,"zoneEnemy"],[782,30,846,28],[782,31,846,29,"maxHP"],[782,36,846,34],[783,10,847,8,"critChance"],[783,20,847,18],[783,22,847,20],[783,23,847,21],[784,10,848,8,"critDamage"],[784,20,848,18],[784,22,848,20],[784,25,848,23],[785,10,849,8,"cooldownReduction"],[785,27,849,25],[785,29,849,27],[786,8,850,6],[786,9,850,7],[787,8,851,6,"position"],[787,16,851,14],[787,18,851,16,"zoneEnemy"],[787,27,851,25],[787,28,851,26,"position"],[787,36,851,34],[788,8,852,6,"lastDamaged"],[788,19,852,17],[788,21,852,19],[788,22,852,20],[789,8,853,6],[790,8,854,6,"zoneTypeId"],[790,18,854,16],[790,20,854,18,"zoneEnemy"],[790,29,854,27],[790,30,854,28,"typeId"],[790,36,854,34],[791,8,855,6,"zoneXP"],[791,14,855,12],[791,16,855,14,"zoneEnemy"],[791,25,855,23],[791,26,855,24,"xp"],[792,6,856,4],[792,7,856,5],[793,6,858,4,"console"],[793,13,858,11],[793,14,858,12,"log"],[793,17,858,15],[793,18,858,16],[793,42,858,40,"combatEnemy"],[793,53,858,51],[793,54,858,52,"name"],[793,58,858,56],[793,67,858,65,"combatEnemy"],[793,78,858,76],[793,79,858,77,"health"],[793,85,858,83],[793,100,858,98,"currentZone"],[793,111,858,109],[793,113,858,111,"id"],[793,115,858,113],[793,125,858,123,"currentZoneLevel"],[793,141,858,139],[793,143,858,141,"level"],[793,148,858,146],[793,150,858,148],[793,151,858,149],[794,6,859,4,"state"],[794,11,859,9],[794,12,859,10,"enemies"],[794,19,859,17],[794,20,859,18,"push"],[794,24,859,22],[794,25,859,23,"combatEnemy"],[794,36,859,34],[794,37,859,35],[795,4,860,2],[795,5,860,3],[797,4,862,2],[798,4,863,2],[798,8,863,8,"spawnBasicTestEnemy"],[798,27,863,27],[798,30,863,31,"state"],[798,35,863,49],[798,39,863,54],[799,6,864,4],[799,10,864,10,"SCREEN_WIDTH"],[799,22,864,22],[799,25,864,25],[799,28,864,28],[800,6,865,4],[800,10,865,10,"GAME_AREA_HEIGHT"],[800,26,865,26],[800,29,865,29],[800,32,865,32],[800,35,865,35],[800,38,865,38],[801,6,866,4],[801,10,866,10,"ENEMY_SIZE"],[801,20,866,20],[801,23,866,23],[801,25,866,25],[802,6,868,4],[802,10,868,10,"x"],[802,11,868,11],[802,14,868,14,"Math"],[802,18,868,18],[802,19,868,19,"random"],[802,25,868,25],[802,26,868,26],[802,27,868,27],[802,31,868,31,"SCREEN_WIDTH"],[802,43,868,43],[802,46,868,46,"ENEMY_SIZE"],[802,56,868,56],[802,59,868,59],[802,60,868,60],[802,61,868,61],[802,64,868,64,"ENEMY_SIZE"],[802,74,868,74],[803,6,869,4],[803,10,869,10,"y"],[803,11,869,11],[803,14,869,14,"Math"],[803,18,869,18],[803,19,869,19,"random"],[803,25,869,25],[803,26,869,26],[803,27,869,27],[803,31,869,31,"GAME_AREA_HEIGHT"],[803,47,869,47],[803,50,869,50,"ENEMY_SIZE"],[803,60,869,60],[803,63,869,63],[803,64,869,64],[803,65,869,65],[803,68,869,68,"ENEMY_SIZE"],[803,78,869,78],[804,6,871,4],[804,10,871,10,"enemy"],[804,15,871,28],[804,18,871,31],[805,8,872,6,"id"],[805,10,872,8],[805,12,872,10],[805,30,872,28,"Date"],[805,34,872,32],[805,35,872,33,"now"],[805,38,872,36],[805,39,872,37],[805,40,872,38],[805,44,872,42,"Math"],[805,48,872,46],[805,49,872,47,"random"],[805,55,872,53],[805,56,872,54],[805,57,872,55],[805,59,872,57],[806,8,873,6,"name"],[806,12,873,10],[806,14,873,12],[806,26,873,24,"Math"],[806,30,873,28],[806,31,873,29,"floor"],[806,36,873,34],[806,37,873,35,"Math"],[806,41,873,39],[806,42,873,40,"random"],[806,48,873,46],[806,49,873,47],[806,50,873,48],[806,53,873,51],[806,56,873,54],[806,57,873,55],[806,59,873,57],[807,8,874,6,"health"],[807,14,874,12],[807,16,874,14],[807,18,874,16],[808,8,875,6,"maxHealth"],[808,17,875,15],[808,19,875,17],[808,21,875,19],[809,8,876,6,"stats"],[809,13,876,11],[809,15,876,13],[810,10,877,8,"attack"],[810,16,877,14],[810,18,877,16],[810,20,877,18],[811,10,878,8,"defense"],[811,17,878,15],[811,19,878,17],[811,21,878,19],[812,10,879,8,"health"],[812,16,879,14],[812,18,879,16],[812,20,879,18],[813,10,880,8,"maxHealth"],[813,19,880,17],[813,21,880,19],[813,23,880,21],[814,10,881,8,"critChance"],[814,20,881,18],[814,22,881,20],[814,23,881,21],[815,10,882,8,"critDamage"],[815,20,882,18],[815,22,882,20],[815,25,882,23],[816,10,883,8,"cooldownReduction"],[816,27,883,25],[816,29,883,27],[817,8,884,6],[817,9,884,7],[818,8,885,6,"position"],[818,16,885,14],[818,18,885,16],[819,10,885,18,"x"],[819,11,885,19],[820,10,885,21,"y"],[821,8,885,23],[821,9,885,24],[822,8,886,6,"lastDamaged"],[822,19,886,17],[822,21,886,19],[823,6,887,4],[823,7,887,5],[824,6,889,4,"console"],[824,13,889,11],[824,14,889,12,"log"],[824,17,889,15],[824,18,889,16],[824,42,889,40,"enemy"],[824,47,889,45],[824,48,889,46,"name"],[824,52,889,50],[824,60,889,58,"Math"],[824,64,889,62],[824,65,889,63,"round"],[824,70,889,68],[824,71,889,69,"x"],[824,72,889,70],[824,73,889,71],[824,78,889,76,"Math"],[824,82,889,80],[824,83,889,81,"round"],[824,88,889,86],[824,89,889,87,"y"],[824,90,889,88],[824,91,889,89],[824,94,889,92],[824,95,889,93],[825,6,890,4,"state"],[825,11,890,9],[825,12,890,10,"enemies"],[825,19,890,17],[825,20,890,18,"push"],[825,24,890,22],[825,25,890,23,"enemy"],[825,30,890,28],[825,31,890,29],[826,4,891,2],[826,5,891,3],[828,4,893,2],[829,4,894,2],[830,4,895,2],[830,8,895,8,"startCombat"],[830,19,895,19],[830,22,895,22,"React"],[830,27,895,27],[830,28,895,27,"default"],[830,35,895,27],[830,36,895,28,"useCallback"],[830,47,895,39],[830,48,895,40],[830,54,895,46],[831,6,896,4,"console"],[831,13,896,11],[831,14,896,12,"log"],[831,17,896,15],[831,18,896,16],[831,63,896,61],[831,64,896,62],[832,6,897,4,"setCombatState"],[832,20,897,18],[832,21,897,19,"prev"],[832,25,897,23],[832,30,897,28],[833,8,897,30],[833,11,897,33,"prev"],[833,15,897,37],[834,8,897,39,"isInCombat"],[834,18,897,49],[834,20,897,51],[835,6,897,56],[835,7,897,57],[835,8,897,58],[835,9,897,59],[837,6,899,4],[838,6,900,4,"combatEngine"],[838,25,900,16],[838,26,900,16,"combatEngine"],[838,38,900,16],[838,39,900,17,"addTickCallback"],[838,54,900,32],[838,55,900,33,"handleCombatTick"],[838,71,900,49],[838,72,900,50],[839,6,901,4,"console"],[839,13,901,11],[839,14,901,12,"log"],[839,17,901,15],[839,18,901,16],[839,62,901,60],[839,63,901,61],[841,6,903,4],[842,6,904,4,"combatEngine"],[842,25,904,16],[842,26,904,16,"combatEngine"],[842,38,904,16],[842,39,904,17,"start"],[842,44,904,22],[842,45,904,23],[842,46,904,24],[843,4,905,2],[843,5,905,3],[843,7,905,5],[843,8,905,6,"combatEngine"],[843,27,905,18],[843,28,905,18,"combatEngine"],[843,40,905,18],[843,42,905,20,"handleCombatTick"],[843,58,905,36],[843,59,905,37],[843,60,905,38],[845,4,907,2],[846,4,908,2],[846,8,908,8,"stopCombat"],[846,18,908,18],[846,21,908,21,"React"],[846,26,908,26],[846,27,908,26,"default"],[846,34,908,26],[846,35,908,27,"useCallback"],[846,46,908,38],[846,47,908,39],[846,53,908,45],[847,6,909,4,"setCombatState"],[847,20,909,18],[847,21,909,19,"prev"],[847,25,909,23],[847,30,909,28],[848,8,909,30],[848,11,909,33,"prev"],[848,15,909,37],[849,8,909,39,"isInCombat"],[849,18,909,49],[849,20,909,51],[850,6,909,57],[850,7,909,58],[850,8,909,59],[850,9,909,60],[851,6,910,4,"combatEngine"],[851,25,910,16],[851,26,910,16,"combatEngine"],[851,38,910,16],[851,39,910,17,"removeTickCallback"],[851,57,910,35],[851,58,910,36,"handleCombatTick"],[851,74,910,52],[851,75,910,53],[852,4,911,2],[852,5,911,3],[852,7,911,5],[852,8,911,6,"combatEngine"],[852,27,911,18],[852,28,911,18,"combatEngine"],[852,40,911,18],[852,42,911,20,"handleCombatTick"],[852,58,911,36],[852,59,911,37],[852,60,911,38],[854,4,913,2],[855,4,914,2],[855,8,914,8,"equipAbility"],[855,20,914,20],[855,23,914,23,"equipAbility"],[855,24,914,24,"abilityId"],[855,33,914,41],[855,35,914,43,"slotIndex"],[855,44,914,60],[855,49,914,74],[856,6,915,4],[856,13,915,11,"combatState"],[856,24,915,22],[856,25,915,23,"abilityManager"],[856,39,915,37],[856,40,915,38,"equipAbility"],[856,52,915,50],[856,53,915,51,"abilityId"],[856,62,915,60],[856,64,915,62,"slotIndex"],[856,73,915,71],[856,74,915,72],[857,4,916,2],[857,5,916,3],[858,4,918,2],[858,8,918,8,"getDeck"],[858,15,918,15],[858,18,918,18,"getDeck"],[858,19,918,18],[858,24,918,24],[859,6,919,4],[859,13,919,11,"combatState"],[859,24,919,22],[859,25,919,23,"abilityManager"],[859,39,919,37],[859,40,919,38,"getDeck"],[859,47,919,45],[859,48,919,46],[859,49,919,47],[860,4,920,2],[860,5,920,3],[861,4,922,2],[861,8,922,8,"getAvailableAbilities"],[861,29,922,29],[861,32,922,32,"getAvailableAbilities"],[861,33,922,32],[861,38,922,38],[862,6,923,4],[862,13,923,11,"combatState"],[862,24,923,22],[862,25,923,23,"abilityManager"],[862,39,923,37],[862,40,923,38,"getAvailableAbilities"],[862,61,923,59],[862,62,923,60],[862,63,923,61],[863,4,924,2],[863,5,924,3],[864,4,926,2],[864,8,926,8,"upgradeAbility"],[864,22,926,22],[864,25,926,26,"abilityId"],[864,34,926,43],[864,38,926,57],[865,6,927,4],[865,13,927,11,"combatState"],[865,24,927,22],[865,25,927,23,"abilityManager"],[865,39,927,37],[865,40,927,38,"upgradeAbility"],[865,54,927,52],[865,55,927,53,"abilityId"],[865,64,927,62],[865,65,927,63],[866,4,928,2],[866,5,928,3],[868,4,930,2],[869,4,931,2],[869,8,931,8,"clearAllEnemies"],[869,23,931,23],[869,26,931,26,"clearAllEnemies"],[869,27,931,26],[869,32,931,32],[870,6,932,4,"console"],[870,13,932,11],[870,14,932,12,"log"],[870,17,932,15],[870,18,932,16],[870,67,932,65],[870,68,932,66],[871,6,933,4,"setCombatState"],[871,20,933,18],[871,21,933,19,"prev"],[871,25,933,23],[871,30,933,28],[872,8,934,6],[872,11,934,9,"prev"],[872,15,934,13],[873,8,935,6,"enemies"],[873,15,935,13],[873,17,935,15],[874,6,936,4],[874,7,936,5],[874,8,936,6],[874,9,936,7],[875,4,937,2],[875,5,937,3],[877,4,939,2],[878,4,940,2],[880,4,942,2],[881,4,943,2],[881,8,943,8,"spawnEnemy"],[881,18,943,18],[881,21,943,22,"position"],[881,29,943,57],[881,33,943,75],[882,6,944,4],[882,10,944,10,"SCREEN_WIDTH"],[882,22,944,22],[882,25,944,25],[882,28,944,28],[883,6,945,4],[883,10,945,10,"GAME_AREA_HEIGHT"],[883,26,945,26],[883,29,945,29],[883,32,945,32],[883,35,945,35],[883,38,945,38],[883,39,945,39],[883,40,945,40],[884,6,946,4],[884,10,946,10,"ENEMY_SIZE"],[884,20,946,20],[884,23,946,23],[884,25,946,25],[886,6,948,4],[887,6,949,4],[887,10,949,10,"x"],[887,11,949,11],[887,14,949,14,"position"],[887,22,949,22],[887,24,949,24,"x"],[887,25,949,25],[887,29,949,29,"Math"],[887,33,949,33],[887,34,949,34,"random"],[887,40,949,40],[887,41,949,41],[887,42,949,42],[887,46,949,46,"SCREEN_WIDTH"],[887,58,949,58],[887,61,949,61,"ENEMY_SIZE"],[887,71,949,71],[887,74,949,74],[887,75,949,75],[887,76,949,76],[887,79,949,79,"ENEMY_SIZE"],[887,89,949,89],[888,6,950,4],[888,10,950,10,"y"],[888,11,950,11],[888,14,950,14,"position"],[888,22,950,22],[888,24,950,24,"y"],[888,25,950,25],[888,29,950,29,"Math"],[888,33,950,33],[888,34,950,34,"random"],[888,40,950,40],[888,41,950,41],[888,42,950,42],[888,46,950,46,"GAME_AREA_HEIGHT"],[888,62,950,62],[888,65,950,65,"ENEMY_SIZE"],[888,75,950,75],[888,78,950,78],[888,79,950,79],[888,80,950,80],[888,83,950,83,"ENEMY_SIZE"],[888,93,950,93],[889,6,952,4],[889,10,952,10,"enemy"],[889,15,952,28],[889,18,952,31],[890,8,953,6,"id"],[890,10,953,8],[890,12,953,10],[890,21,953,19],[890,23,953,21,"enemyCounter"],[890,35,953,33],[890,37,953,35],[891,8,954,6,"name"],[891,12,954,10],[891,14,954,12],[891,24,954,22],[892,8,955,6,"health"],[892,14,955,12],[892,16,955,14],[892,19,955,17],[893,8,956,6,"maxHealth"],[893,17,956,15],[893,19,956,17],[893,22,956,20],[894,8,957,6,"stats"],[894,13,957,11],[894,15,957,13],[895,10,958,8,"attack"],[895,16,958,14],[895,18,958,16],[895,20,958,18],[896,10,959,8,"defense"],[896,17,959,15],[896,19,959,17],[896,21,959,19],[897,10,960,8,"health"],[897,16,960,14],[897,18,960,16],[897,21,960,19],[898,10,961,8,"maxHealth"],[898,19,961,17],[898,21,961,19],[898,24,961,22],[899,10,962,8,"critChance"],[899,20,962,18],[899,22,962,20],[899,23,962,21],[900,10,963,8,"critDamage"],[900,20,963,18],[900,22,963,20],[900,25,963,23],[901,10,964,8,"cooldownReduction"],[901,27,964,25],[901,29,964,27],[902,8,965,6],[902,9,965,7],[903,8,966,6,"position"],[903,16,966,14],[903,18,966,16],[904,10,966,18,"x"],[904,11,966,19],[905,10,966,21,"y"],[906,8,966,23],[906,9,966,24],[907,8,967,6,"lastDamaged"],[907,19,967,17],[907,21,967,19],[908,6,968,4],[908,7,968,5],[909,6,970,4,"setCombatState"],[909,20,970,18],[909,21,970,19,"prev"],[909,25,970,23],[909,30,970,28],[910,8,971,6],[910,11,971,9,"prev"],[910,15,971,13],[911,8,972,6,"enemies"],[911,15,972,13],[911,17,972,15],[911,18,972,16],[911,21,972,19,"prev"],[911,25,972,23],[911,26,972,24,"enemies"],[911,33,972,31],[911,35,972,33,"enemy"],[911,40,972,38],[912,6,973,4],[912,7,973,5],[912,8,973,6],[912,9,973,7],[913,6,975,4],[913,13,975,11,"enemy"],[913,18,975,16],[914,4,976,2],[914,5,976,3],[916,4,978,2],[917,4,979,2],[917,8,979,8,"spawnBoss"],[917,17,979,17],[917,20,979,21,"bossEnemy"],[917,29,979,43],[917,33,979,48],[918,6,980,4,"console"],[918,13,980,11],[918,14,980,12,"log"],[918,17,980,15],[918,18,980,16],[918,39,980,37,"bossEnemy"],[918,48,980,46],[918,49,980,47,"name"],[918,53,980,51],[918,90,980,88],[918,91,980,89],[919,6,981,4,"setCombatState"],[919,20,981,18],[919,21,981,19,"prev"],[919,25,981,23],[919,30,981,28],[920,8,982,6],[920,11,982,9,"prev"],[920,15,982,13],[921,8,983,6,"enemies"],[921,15,983,13],[921,17,983,15],[921,18,983,16,"bossEnemy"],[921,27,983,25],[921,28,983,26],[921,29,983,27],[922,6,984,4],[922,7,984,5],[922,8,984,6],[922,9,984,7],[923,4,985,2],[923,5,985,3],[925,4,987,2],[926,4,988,2],[926,8,988,8,"clearSpecificEnemy"],[926,26,988,26],[926,29,988,30,"enemyId"],[926,36,988,45],[926,40,988,50],[927,6,989,4,"setCombatState"],[927,20,989,18],[927,21,989,19,"prev"],[927,25,989,23],[927,30,989,28],[928,8,990,6],[928,11,990,9,"prev"],[928,15,990,13],[929,8,991,6,"enemies"],[929,15,991,13],[929,17,991,15,"prev"],[929,21,991,19],[929,22,991,20,"enemies"],[929,29,991,27],[929,30,991,28,"filter"],[929,36,991,34],[929,37,991,35,"enemy"],[929,42,991,40],[929,46,991,44,"enemy"],[929,51,991,49],[929,52,991,50,"id"],[929,54,991,52],[929,59,991,57,"enemyId"],[929,66,991,64],[930,6,992,4],[930,7,992,5],[930,8,992,6],[930,9,992,7],[931,4,993,2],[931,5,993,3],[933,4,995,2],[934,4,996,2],[934,8,996,8,"useAbilityManually"],[934,26,996,26],[934,29,996,26,"_s3"],[934,32,996,26],[934,33,996,29],[934,37,996,29,"useCallback"],[934,43,996,40],[934,44,996,40,"useCallback"],[934,55,996,40],[934,57,996,40,"_s3"],[934,60,996,40],[934,61,996,42,"slotIndex"],[934,70,996,59],[934,74,996,73],[935,6,996,73,"_s3"],[935,9,996,73],[936,6,997,4,"console"],[936,13,997,11],[936,14,997,12,"log"],[936,17,997,15],[936,18,997,16],[936,64,997,62,"slotIndex"],[936,73,997,71],[936,82,997,80],[936,83,997,81],[937,6,998,4,"console"],[937,13,998,11],[937,14,998,12,"log"],[937,17,998,15],[937,18,998,16],[937,65,998,63,"slotIndex"],[937,74,998,72],[937,76,998,74],[937,77,998,75],[938,6,999,4,"console"],[938,13,999,11],[938,14,999,12,"log"],[938,17,999,15],[938,18,999,16],[938,53,999,51,"slotIndex"],[938,62,999,60],[938,64,999,62],[938,65,999,63],[940,6,1001,4],[941,6,1002,4],[941,10,1002,8],[941,11,1002,9,"game"],[941,15,1002,13],[941,16,1002,14,"gameState"],[941,25,1002,23],[941,26,1002,24,"isAlive"],[941,33,1002,31],[941,35,1002,33],[942,8,1003,6,"console"],[942,15,1003,13],[942,16,1003,14,"log"],[942,19,1003,17],[942,20,1003,18],[942,70,1003,68],[942,71,1003,69],[943,8,1004,6],[943,15,1004,13],[943,20,1004,18],[944,6,1005,4],[946,6,1007,4],[947,6,1008,4],[947,10,1008,10,"isReady"],[947,17,1008,17],[947,20,1008,20,"combatState"],[947,31,1008,31],[947,32,1008,32,"abilityManager"],[947,46,1008,46],[947,47,1008,47,"isAbilityReady"],[947,61,1008,61],[947,62,1008,62,"slotIndex"],[947,71,1008,71],[947,72,1008,72],[948,6,1009,4],[948,10,1009,8],[948,11,1009,9,"isReady"],[948,18,1009,16],[948,20,1009,18],[949,8,1010,6,"console"],[949,15,1010,13],[949,16,1010,14,"log"],[949,19,1010,17],[949,20,1010,18],[949,41,1010,39,"slotIndex"],[949,50,1010,48],[949,85,1010,83],[949,86,1010,84],[950,8,1011,6],[950,15,1011,13],[950,20,1011,18],[951,6,1012,4],[953,6,1014,4],[954,6,1015,4],[954,10,1015,8,"combatState"],[954,21,1015,19],[954,22,1015,20,"enemies"],[954,29,1015,27],[954,30,1015,28,"length"],[954,36,1015,34],[954,41,1015,39],[954,42,1015,40],[954,44,1015,42],[955,8,1016,6,"console"],[955,15,1016,13],[955,16,1016,14,"log"],[955,19,1016,17],[955,20,1016,18],[955,69,1016,67],[955,70,1016,68],[956,8,1017,6],[956,15,1017,13],[956,20,1017,18],[957,6,1018,4],[959,6,1020,4],[960,6,1021,4],[960,10,1021,10,"currentTick"],[960,21,1021,21],[960,24,1021,24,"combatEngine"],[960,43,1021,36],[960,44,1021,36,"combatEngine"],[960,56,1021,36],[960,57,1021,37,"getCurrentTick"],[960,71,1021,51],[960,72,1021,52],[960,73,1021,53],[961,6,1022,4],[961,10,1022,10,"success"],[961,17,1022,17],[961,20,1022,20,"combatState"],[961,31,1022,31],[961,32,1022,32,"abilityManager"],[961,46,1022,46],[961,47,1022,47,"useAbility"],[961,57,1022,57],[961,58,1022,58,"slotIndex"],[961,67,1022,67],[961,69,1022,69,"currentTick"],[961,80,1022,80],[961,81,1022,81],[962,6,1024,4],[962,10,1024,8,"success"],[962,17,1024,15],[962,19,1024,17],[963,8,1025,6],[964,8,1026,6,"setCombatState"],[964,22,1026,20],[964,23,1026,21,"prev"],[964,27,1026,25],[964,31,1026,29],[965,10,1027,8],[965,14,1027,14,"newState"],[965,22,1027,22],[965,25,1027,25],[966,12,1027,27],[966,15,1027,30,"prev"],[967,10,1027,35],[967,11,1027,36],[968,10,1028,8,"castAbility"],[968,21,1028,19],[968,22,1028,20,"newState"],[968,30,1028,28],[968,32,1028,30,"slotIndex"],[968,41,1028,39],[968,42,1028,40],[969,10,1029,8],[969,17,1029,15,"newState"],[969,25,1029,23],[970,8,1030,6],[970,9,1030,7],[970,10,1030,8],[971,8,1032,6,"console"],[971,15,1032,13],[971,16,1032,14,"log"],[971,19,1032,17],[971,20,1032,18],[971,65,1032,63,"slotIndex"],[971,74,1032,72],[971,76,1032,74],[971,77,1032,75],[972,8,1033,6],[972,15,1033,13],[972,19,1033,17],[973,6,1034,4],[973,7,1034,5],[973,13,1034,11],[974,8,1035,6,"console"],[974,15,1035,13],[974,16,1035,14,"log"],[974,19,1035,17],[974,20,1035,18],[974,61,1035,59,"slotIndex"],[974,70,1035,68],[974,72,1035,70],[974,73,1035,71],[975,8,1036,6],[975,15,1036,13],[975,20,1036,18],[976,6,1037,4],[977,4,1038,2],[977,5,1038,3],[977,46,1038,5],[977,47,1038,6,"combatState"],[977,58,1038,17],[977,59,1038,18,"abilityManager"],[977,73,1038,32],[977,75,1038,34,"combatState"],[977,86,1038,45],[977,87,1038,46,"enemies"],[977,94,1038,53],[977,95,1038,54],[977,96,1038,55],[978,4,1039,2],[978,8,1039,2,"useEffect"],[978,14,1039,11],[978,15,1039,11,"useEffect"],[978,24,1039,11],[978,26,1039,12],[978,32,1039,18],[979,6,1040,4,"combatEngine"],[979,25,1040,16],[979,26,1040,16,"combatEngine"],[979,38,1040,16],[979,39,1040,17,"start"],[979,44,1040,22],[979,45,1040,23],[979,46,1040,24],[981,6,1042,4],[982,6,1043,4],[983,6,1044,4,"console"],[983,13,1044,11],[983,14,1044,12,"log"],[983,17,1044,15],[983,18,1044,16],[983,97,1044,95],[983,98,1044,96],[984,6,1046,4],[984,13,1046,11],[984,19,1046,17],[985,8,1047,6,"combatEngine"],[985,27,1047,18],[985,28,1047,18,"combatEngine"],[985,40,1047,18],[985,41,1047,19,"stop"],[985,45,1047,23],[985,46,1047,24],[985,47,1047,25],[986,6,1048,4],[986,7,1048,5],[987,4,1049,2],[987,5,1049,3],[987,7,1049,5],[987,9,1049,7],[987,10,1049,8],[989,4,1051,2],[990,4,1052,2],[990,8,1052,2,"useEffect"],[990,14,1052,11],[990,15,1052,11,"useEffect"],[990,24,1052,11],[990,26,1052,12],[990,32,1052,18],[991,6,1053,4],[991,10,1053,10,"processProjectileImpacts"],[991,34,1053,34],[991,37,1053,37,"processProjectileImpacts"],[991,38,1053,37],[991,43,1053,43],[992,8,1054,6,"setProjectiles"],[992,22,1054,20],[992,23,1054,21,"currentProjectiles"],[992,41,1054,39],[992,45,1054,43],[993,10,1055,8],[993,17,1055,15,"currentProjectiles"],[993,35,1055,33],[993,36,1055,34,"map"],[993,39,1055,37],[993,40,1055,38,"projectile"],[993,50,1055,48],[993,54,1055,52],[994,12,1056,10],[994,16,1056,14],[994,17,1056,15,"projectile"],[994,27,1056,25],[994,29,1056,27],[994,36,1056,34],[994,40,1056,38],[996,12,1058,10],[997,12,1059,10],[997,16,1059,16,"currentTime"],[997,27,1059,27],[997,30,1059,30,"Date"],[997,34,1059,34],[997,35,1059,35,"now"],[997,38,1059,38],[997,39,1059,39],[997,40,1059,40],[998,12,1060,10],[998,16,1060,16,"startTime"],[998,25,1060,25],[998,28,1060,28,"projectile"],[998,38,1060,38],[998,39,1060,39,"startTime"],[998,48,1060,48],[998,52,1060,52,"currentTime"],[998,63,1060,63],[999,12,1061,10],[999,16,1061,16,"elapsedTime"],[999,27,1061,27],[999,30,1061,30,"currentTime"],[999,41,1061,41],[999,44,1061,44,"startTime"],[999,53,1061,53],[1000,12,1062,10],[1000,16,1062,16,"progress"],[1000,24,1062,24],[1000,27,1062,27,"Math"],[1000,31,1062,31],[1000,32,1062,32,"min"],[1000,35,1062,35],[1000,36,1062,36,"elapsedTime"],[1000,47,1062,47],[1000,51,1062,51,"projectile"],[1000,61,1062,61],[1000,62,1062,62,"duration"],[1000,70,1062,70],[1000,74,1062,74],[1000,77,1062,77],[1000,78,1062,78],[1000,80,1062,80],[1000,81,1062,81],[1000,82,1062,82],[1002,12,1064,10],[1003,12,1065,10],[1003,16,1065,14,"progress"],[1003,24,1065,22],[1003,28,1065,26],[1003,29,1065,27],[1003,33,1065,31],[1003,34,1065,32,"projectile"],[1003,44,1065,42],[1003,45,1065,43,"hasHit"],[1003,51,1065,49],[1003,53,1065,51],[1004,14,1066,12,"projectile"],[1004,24,1066,22],[1004,25,1066,23,"hasHit"],[1004,31,1066,29],[1004,34,1066,32],[1004,38,1066,36],[1005,14,1068,12,"console"],[1005,21,1068,19],[1005,22,1068,20,"log"],[1005,25,1068,23],[1005,26,1068,24],[1005,51,1068,49,"projectile"],[1005,61,1068,59],[1005,62,1068,60,"abilityName"],[1005,73,1068,71],[1005,97,1068,95],[1005,98,1068,96],[1006,14,1069,12,"setCombatState"],[1006,28,1069,26],[1006,29,1069,27,"prev"],[1006,33,1069,31],[1006,37,1069,35],[1007,16,1070,14],[1007,20,1070,20,"newState"],[1007,28,1070,28],[1007,31,1070,31],[1008,18,1070,33],[1008,21,1070,36,"prev"],[1009,16,1070,41],[1009,17,1070,42],[1010,16,1072,14],[1010,20,1072,18,"projectile"],[1010,30,1072,28],[1010,31,1072,29,"isAOE"],[1010,36,1072,34],[1010,40,1072,38,"projectile"],[1010,50,1072,48],[1010,51,1072,49,"aoeRadius"],[1010,60,1072,58],[1010,64,1072,62,"projectile"],[1010,74,1072,72],[1010,75,1072,73,"aoeRadius"],[1010,84,1072,82],[1010,87,1072,85],[1010,88,1072,86],[1010,90,1072,88],[1011,18,1073,16],[1012,18,1074,16,"console"],[1012,25,1074,23],[1012,26,1074,24,"log"],[1012,29,1074,27],[1012,30,1074,28],[1012,59,1074,57,"projectile"],[1012,69,1074,67],[1012,70,1074,68,"abilityName"],[1012,81,1074,79],[1012,97,1074,95,"projectile"],[1012,107,1074,105],[1012,108,1074,106,"aoeRadius"],[1012,117,1074,115],[1012,119,1074,117],[1012,120,1074,118],[1013,18,1076,16],[1013,22,1076,22,"impactX"],[1013,29,1076,29],[1013,32,1076,32,"projectile"],[1013,42,1076,42],[1013,43,1076,43,"targetX"],[1013,50,1076,50],[1014,18,1077,16],[1014,22,1077,22,"impactY"],[1014,29,1077,29],[1014,32,1077,32,"projectile"],[1014,42,1077,42],[1014,43,1077,43,"targetY"],[1014,50,1077,50],[1015,18,1078,16],[1015,22,1078,22,"enemiesKilled"],[1015,35,1078,50],[1015,38,1078,53],[1015,40,1078,55],[1017,18,1080,16],[1018,18,1081,16,"newState"],[1018,26,1081,24],[1018,27,1081,25,"enemies"],[1018,34,1081,32],[1018,37,1081,35,"newState"],[1018,45,1081,43],[1018,46,1081,44,"enemies"],[1018,53,1081,51],[1018,54,1081,52,"map"],[1018,57,1081,55],[1018,58,1081,56,"enemy"],[1018,63,1081,61],[1018,67,1081,65],[1019,20,1082,18],[1019,24,1082,22,"enemy"],[1019,29,1082,27],[1019,30,1082,28,"health"],[1019,36,1082,34],[1019,40,1082,38],[1019,41,1082,39],[1019,45,1082,43,"enemy"],[1019,50,1082,48],[1019,51,1082,49,"markedForDeath"],[1019,65,1082,63],[1019,67,1082,65],[1019,74,1082,72,"enemy"],[1019,79,1082,77],[1020,20,1084,18],[1020,24,1084,24,"enemyX"],[1020,30,1084,30],[1020,33,1084,33,"enemy"],[1020,38,1084,38],[1020,39,1084,39,"position"],[1020,47,1084,47],[1020,48,1084,48,"x"],[1020,49,1084,49],[1020,52,1084,52],[1020,56,1084,56],[1020,57,1084,57],[1020,58,1084,58],[1021,20,1085,18],[1021,24,1085,24,"enemyY"],[1021,30,1085,30],[1021,33,1085,33,"enemy"],[1021,38,1085,38],[1021,39,1085,39,"position"],[1021,47,1085,47],[1021,48,1085,48,"y"],[1021,49,1085,49],[1021,52,1085,52],[1021,56,1085,56],[1022,20,1086,18],[1022,24,1086,24,"distance"],[1022,32,1086,32],[1022,35,1086,35,"Math"],[1022,39,1086,39],[1022,40,1086,40,"sqrt"],[1022,44,1086,44],[1022,45,1086,45,"Math"],[1022,49,1086,49],[1022,50,1086,50,"pow"],[1022,53,1086,53],[1022,54,1086,54,"enemyX"],[1022,60,1086,60],[1022,63,1086,63,"impactX"],[1022,70,1086,70],[1022,72,1086,72],[1022,73,1086,73],[1022,74,1086,74],[1022,77,1086,77,"Math"],[1022,81,1086,81],[1022,82,1086,82,"pow"],[1022,85,1086,85],[1022,86,1086,86,"enemyY"],[1022,92,1086,92],[1022,95,1086,95,"impactY"],[1022,102,1086,102],[1022,104,1086,104],[1022,105,1086,105],[1022,106,1086,106],[1022,107,1086,107],[1023,20,1088,18,"console"],[1023,27,1088,25],[1023,28,1088,26,"log"],[1023,31,1088,29],[1023,32,1088,30],[1023,58,1088,56,"enemy"],[1023,63,1088,61],[1023,64,1088,62,"name"],[1023,68,1088,66],[1023,76,1088,74,"enemyX"],[1023,82,1088,80],[1023,87,1088,85,"enemyY"],[1023,93,1088,91],[1023,109,1088,107,"impactX"],[1023,116,1088,114],[1023,121,1088,119,"impactY"],[1023,128,1088,126],[1023,135,1088,133,"distance"],[1023,143,1088,141],[1023,144,1088,142,"toFixed"],[1023,151,1088,149],[1023,152,1088,150],[1023,153,1088,151],[1023,154,1088,152],[1023,169,1088,167,"projectile"],[1023,179,1088,177],[1023,180,1088,178,"aoeRadius"],[1023,189,1088,187],[1023,194,1088,192],[1023,195,1088,193],[1024,20,1090,18],[1024,24,1090,22,"distance"],[1024,32,1090,30],[1024,36,1090,34,"projectile"],[1024,46,1090,44],[1024,47,1090,45,"aoeRadius"],[1024,56,1090,54],[1024,58,1090,56],[1025,22,1091,20],[1026,22,1092,20],[1026,26,1092,26,"newHealth"],[1026,35,1092,35],[1026,38,1092,38,"Math"],[1026,42,1092,42],[1026,43,1092,43,"max"],[1026,46,1092,46],[1026,47,1092,47],[1026,48,1092,48],[1026,50,1092,50,"enemy"],[1026,55,1092,55],[1026,56,1092,56,"health"],[1026,62,1092,62],[1026,65,1092,65,"projectile"],[1026,75,1092,75],[1026,76,1092,76,"damage"],[1026,82,1092,82],[1026,83,1092,83],[1027,22,1094,20,"console"],[1027,29,1094,27],[1027,30,1094,28,"log"],[1027,33,1094,31],[1027,34,1094,32],[1027,52,1094,50,"enemy"],[1027,57,1094,55],[1027,58,1094,56,"name"],[1027,62,1094,60],[1027,74,1094,72,"projectile"],[1027,84,1094,82],[1027,85,1094,83,"damage"],[1027,91,1094,89],[1027,103,1094,101,"enemy"],[1027,108,1094,106],[1027,109,1094,107,"health"],[1027,115,1094,113],[1027,122,1094,120,"newHealth"],[1027,131,1094,129],[1027,134,1094,132],[1027,135,1094,133],[1029,22,1096,20],[1030,22,1097,20],[1030,26,1097,24,"newHealth"],[1030,35,1097,33],[1030,39,1097,37],[1030,40,1097,38],[1030,44,1097,42,"enemy"],[1030,49,1097,47],[1030,50,1097,48,"health"],[1030,56,1097,54],[1030,59,1097,57],[1030,60,1097,58],[1030,62,1097,60],[1031,24,1098,22,"console"],[1031,31,1098,29],[1031,32,1098,30,"log"],[1031,35,1098,33],[1031,36,1098,34],[1031,52,1098,50,"enemy"],[1031,57,1098,55],[1031,58,1098,56,"name"],[1031,62,1098,60],[1031,76,1098,74,"projectile"],[1031,86,1098,84],[1031,87,1098,85,"abilityName"],[1031,98,1098,96],[1031,101,1098,99],[1031,102,1098,100],[1032,24,1099,22,"enemiesKilled"],[1032,37,1099,35],[1032,38,1099,36,"push"],[1032,42,1099,40],[1032,43,1099,41,"enemy"],[1032,48,1099,46],[1032,49,1099,47],[1032,50,1099,48],[1032,51,1099,49],[1034,24,1101,22],[1034,31,1101,29],[1035,26,1102,24],[1035,29,1102,27,"enemy"],[1035,34,1102,32],[1036,26,1103,24,"health"],[1036,32,1103,30],[1036,34,1103,32],[1036,35,1103,33],[1037,26,1104,24,"markedForDeath"],[1037,40,1104,38],[1037,42,1104,40],[1037,46,1104,44],[1038,26,1105,24,"lastDamaged"],[1038,37,1105,35],[1038,39,1105,37,"combatEngine"],[1038,58,1105,49],[1038,59,1105,49,"combatEngine"],[1038,71,1105,49],[1038,72,1105,50,"getCurrentTick"],[1038,86,1105,64],[1038,87,1105,65],[1039,24,1106,22],[1039,25,1106,23],[1040,22,1107,20],[1040,23,1107,21],[1040,29,1107,27],[1041,24,1108,22],[1041,31,1108,29],[1042,26,1109,24],[1042,29,1109,27,"enemy"],[1042,34,1109,32],[1043,26,1110,24,"health"],[1043,32,1110,30],[1043,34,1110,32,"newHealth"],[1043,43,1110,41],[1044,26,1111,24,"lastDamaged"],[1044,37,1111,35],[1044,39,1111,37,"combatEngine"],[1044,58,1111,49],[1044,59,1111,49,"combatEngine"],[1044,71,1111,49],[1044,72,1111,50,"getCurrentTick"],[1044,86,1111,64],[1044,87,1111,65],[1045,24,1112,22],[1045,25,1112,23],[1046,22,1113,20],[1047,20,1114,18],[1048,20,1116,18],[1048,27,1116,25,"enemy"],[1048,32,1116,30],[1048,33,1116,31],[1048,34,1116,32],[1049,18,1117,16],[1049,19,1117,17],[1049,20,1117,18],[1051,18,1119,16],[1052,18,1120,16],[1052,22,1120,20,"enemiesKilled"],[1052,35,1120,33],[1052,36,1120,34,"length"],[1052,42,1120,40],[1052,45,1120,43],[1052,46,1120,44],[1052,48,1120,46],[1053,20,1121,18,"console"],[1053,27,1121,25],[1053,28,1121,26,"log"],[1053,31,1121,29],[1053,32,1121,30],[1053,52,1121,50,"enemiesKilled"],[1053,65,1121,63],[1053,66,1121,64,"length"],[1053,72,1121,70],[1053,94,1121,92,"projectile"],[1053,104,1121,102],[1053,105,1121,103,"abilityName"],[1053,116,1121,114],[1053,118,1121,116],[1053,119,1121,117],[1054,20,1122,18,"setTimeout"],[1054,30,1122,28],[1054,31,1122,29],[1054,37,1122,35],[1055,22,1123,20,"enemiesKilled"],[1055,35,1123,33],[1055,36,1123,34,"forEach"],[1055,43,1123,41],[1055,44,1123,42,"enemy"],[1055,49,1123,47],[1055,53,1123,51,"handleEnemyKill"],[1055,68,1123,66],[1055,69,1123,67,"enemy"],[1055,74,1123,72],[1055,75,1123,73],[1055,76,1123,74],[1056,20,1124,18],[1056,21,1124,19],[1056,23,1124,21],[1056,24,1124,22],[1056,25,1124,23],[1057,18,1125,16],[1058,16,1127,14],[1058,17,1127,15],[1058,23,1127,21],[1059,18,1128,16],[1060,18,1129,16],[1060,22,1129,22,"enemyIndex"],[1060,32,1129,32],[1060,35,1129,35,"newState"],[1060,43,1129,43],[1060,44,1129,44,"enemies"],[1060,51,1129,51],[1060,52,1129,52,"findIndex"],[1060,61,1129,61],[1060,62,1129,62,"e"],[1060,63,1129,63],[1060,67,1129,67,"e"],[1060,68,1129,68],[1060,69,1129,69,"id"],[1060,71,1129,71],[1060,76,1129,76,"projectile"],[1060,86,1129,86],[1060,87,1129,87,"targetEnemyId"],[1060,100,1129,100],[1060,101,1129,101],[1061,18,1131,16],[1061,22,1131,20,"enemyIndex"],[1061,32,1131,30],[1061,36,1131,34],[1061,37,1131,35],[1061,41,1131,39,"newState"],[1061,49,1131,47],[1061,50,1131,48,"enemies"],[1061,57,1131,55],[1061,58,1131,56,"enemyIndex"],[1061,68,1131,66],[1061,69,1131,67],[1061,70,1131,68,"health"],[1061,76,1131,74],[1061,79,1131,77],[1061,80,1131,78],[1061,84,1131,82],[1061,85,1131,83,"newState"],[1061,93,1131,91],[1061,94,1131,92,"enemies"],[1061,101,1131,99],[1061,102,1131,100,"enemyIndex"],[1061,112,1131,110],[1061,113,1131,111],[1061,114,1131,112,"markedForDeath"],[1061,128,1131,126],[1061,130,1131,128],[1062,20,1132,18,"newState"],[1062,28,1132,26],[1062,29,1132,27,"enemies"],[1062,36,1132,34],[1062,39,1132,37],[1062,40,1132,38],[1062,43,1132,41,"newState"],[1062,51,1132,49],[1062,52,1132,50,"enemies"],[1062,59,1132,57],[1062,60,1132,58],[1063,20,1133,18],[1063,24,1133,24,"enemy"],[1063,29,1133,29],[1063,32,1133,32,"newState"],[1063,40,1133,40],[1063,41,1133,41,"enemies"],[1063,48,1133,48],[1063,49,1133,49,"enemyIndex"],[1063,59,1133,59],[1063,60,1133,60],[1064,20,1134,18],[1064,24,1134,24,"newHealth"],[1064,33,1134,33],[1064,36,1134,36,"Math"],[1064,40,1134,40],[1064,41,1134,41,"max"],[1064,44,1134,44],[1064,45,1134,45],[1064,46,1134,46],[1064,48,1134,48,"enemy"],[1064,53,1134,53],[1064,54,1134,54,"health"],[1064,60,1134,60],[1064,63,1134,63,"projectile"],[1064,73,1134,73],[1064,74,1134,74,"damage"],[1064,80,1134,80],[1064,81,1134,81],[1065,20,1136,18,"newState"],[1065,28,1136,26],[1065,29,1136,27,"enemies"],[1065,36,1136,34],[1065,37,1136,35,"enemyIndex"],[1065,47,1136,45],[1065,48,1136,46],[1065,51,1136,49],[1066,22,1137,20],[1066,25,1137,23,"enemy"],[1066,30,1137,28],[1067,22,1138,20,"health"],[1067,28,1138,26],[1067,30,1138,28,"newHealth"],[1067,39,1138,37],[1068,22,1139,20,"lastDamaged"],[1068,33,1139,31],[1068,35,1139,33,"combatEngine"],[1068,54,1139,45],[1068,55,1139,45,"combatEngine"],[1068,67,1139,45],[1068,68,1139,46,"getCurrentTick"],[1068,82,1139,60],[1068,83,1139,61],[1069,20,1140,18],[1069,21,1140,19],[1070,20,1142,18,"console"],[1070,27,1142,25],[1070,28,1142,26,"log"],[1070,31,1142,29],[1070,32,1142,30],[1070,60,1142,58,"enemy"],[1070,65,1142,63],[1070,66,1142,64,"name"],[1070,70,1142,68],[1070,82,1142,80,"newHealth"],[1070,91,1142,89],[1070,95,1142,93,"enemy"],[1070,100,1142,98],[1070,101,1142,99,"maxHealth"],[1070,110,1142,108],[1070,112,1142,110],[1070,113,1142,111],[1072,20,1144,18],[1073,20,1145,18],[1073,24,1145,22,"newHealth"],[1073,33,1145,31],[1073,37,1145,35],[1073,38,1145,36],[1073,42,1145,40,"enemy"],[1073,47,1145,45],[1073,48,1145,46,"health"],[1073,54,1145,52],[1073,57,1145,55],[1073,58,1145,56],[1073,60,1145,58],[1074,22,1146,20,"console"],[1074,29,1146,27],[1074,30,1146,28,"log"],[1074,33,1146,31],[1074,34,1146,32],[1074,54,1146,52,"enemy"],[1074,59,1146,57],[1074,60,1146,58,"name"],[1074,64,1146,62],[1074,78,1146,76,"projectile"],[1074,88,1146,86],[1074,89,1146,87,"abilityName"],[1074,100,1146,98],[1074,136,1146,134],[1074,137,1146,135],[1076,22,1148,20],[1077,22,1149,20,"newState"],[1077,30,1149,28],[1077,31,1149,29,"enemies"],[1077,38,1149,36],[1077,39,1149,37,"enemyIndex"],[1077,49,1149,47],[1077,50,1149,48],[1077,53,1149,51],[1078,24,1150,22],[1078,27,1150,25,"newState"],[1078,35,1150,33],[1078,36,1150,34,"enemies"],[1078,43,1150,41],[1078,44,1150,42,"enemyIndex"],[1078,54,1150,52],[1078,55,1150,53],[1079,24,1151,22,"health"],[1079,30,1151,28],[1079,32,1151,30],[1079,33,1151,31],[1080,24,1152,22,"isDying"],[1080,31,1152,29],[1080,33,1152,31],[1080,37,1152,35],[1081,24,1153,22,"deathStartTime"],[1081,38,1153,36],[1081,40,1153,38,"Date"],[1081,44,1153,42],[1081,45,1153,43,"now"],[1081,48,1153,46],[1081,49,1153,47],[1082,22,1154,20],[1082,23,1154,21],[1083,20,1155,18],[1083,21,1155,19],[1083,27,1155,25],[1083,31,1155,29,"enemy"],[1083,36,1155,34],[1083,37,1155,35,"health"],[1083,43,1155,41],[1083,46,1155,44],[1083,47,1155,45],[1083,49,1155,47],[1084,22,1156,20,"console"],[1084,29,1156,27],[1084,30,1156,28,"log"],[1084,33,1156,31],[1084,34,1156,32],[1084,48,1156,46,"enemy"],[1084,53,1156,51],[1084,54,1156,52,"name"],[1084,58,1156,56],[1084,70,1156,68,"projectile"],[1084,80,1156,78],[1084,81,1156,79,"damage"],[1084,87,1156,85],[1084,99,1156,97,"enemy"],[1084,104,1156,102],[1084,105,1156,103,"health"],[1084,111,1156,109],[1084,117,1156,115,"newHealth"],[1084,126,1156,124],[1084,129,1156,127],[1084,130,1156,128],[1085,20,1157,18],[1086,18,1158,16],[1087,16,1159,14],[1088,16,1161,14],[1088,23,1161,21,"newState"],[1088,31,1161,29],[1089,14,1162,12],[1089,15,1162,13],[1089,16,1162,14],[1090,12,1163,10],[1092,12,1165,10],[1093,12,1166,10],[1093,16,1166,14,"progress"],[1093,24,1166,22],[1093,28,1166,26],[1093,31,1166,29],[1093,33,1166,31],[1094,14,1167,12],[1094,21,1167,19],[1094,25,1167,23],[1095,12,1168,10],[1096,12,1170,10],[1096,19,1170,17,"projectile"],[1096,29,1170,27],[1097,10,1171,8],[1097,11,1171,9],[1097,12,1171,10],[1097,13,1171,11,"filter"],[1097,19,1171,17],[1097,20,1171,18,"Boolean"],[1097,27,1171,25],[1097,28,1171,26],[1098,8,1172,6],[1098,9,1172,7],[1098,10,1172,8],[1099,6,1173,4],[1099,7,1173,5],[1101,6,1175,4],[1102,6,1176,4],[1102,10,1176,10,"impactInterval"],[1102,24,1176,24],[1102,27,1176,27,"setInterval"],[1102,38,1176,38],[1102,39,1176,39,"processProjectileImpacts"],[1102,63,1176,63],[1102,65,1176,65],[1102,67,1176,67],[1102,68,1176,68],[1103,6,1177,4],[1103,13,1177,11],[1103,19,1177,17,"clearInterval"],[1103,32,1177,30],[1103,33,1177,31,"impactInterval"],[1103,47,1177,45],[1103,48,1177,46],[1104,4,1178,2],[1104,5,1178,3],[1104,7,1178,5],[1104,8,1178,6,"handleEnemyKill"],[1104,23,1178,21],[1104,24,1178,22],[1104,25,1178,23],[1106,4,1180,2],[1107,4,1181,2],[1107,8,1181,8,"saveAbilityData"],[1107,23,1181,23],[1107,26,1181,26],[1107,30,1181,26,"useCallback"],[1107,36,1181,37],[1107,37,1181,37,"useCallback"],[1107,48,1181,37],[1107,50,1181,38],[1107,56,1181,44],[1108,6,1182,4],[1108,10,1182,8,"combatState"],[1108,21,1182,19],[1108,22,1182,20,"abilityManager"],[1108,36,1182,34],[1108,38,1182,36],[1109,8,1183,6],[1109,12,1183,12,"abilityData"],[1109,23,1183,23],[1109,26,1183,26,"combatState"],[1109,37,1183,37],[1109,38,1183,38,"abilityManager"],[1109,52,1183,52],[1109,53,1183,53,"getSaveData"],[1109,64,1183,64],[1109,65,1183,65],[1109,66,1183,66],[1110,8,1184,6,"console"],[1110,15,1184,13],[1110,16,1184,14,"log"],[1110,19,1184,17],[1110,20,1184,18],[1110,70,1184,68],[1110,72,1184,70,"abilityData"],[1110,83,1184,81],[1110,84,1184,82],[1111,8,1185,6,"game"],[1111,12,1185,10],[1111,13,1185,11,"updateAbilityData"],[1111,30,1185,28],[1111,31,1185,29,"abilityData"],[1111,42,1185,40],[1111,43,1185,41],[1112,6,1186,4],[1113,4,1187,2],[1113,5,1187,3],[1113,7,1187,5],[1113,8,1187,6,"combatState"],[1113,19,1187,17],[1113,20,1187,18,"abilityManager"],[1113,34,1187,32],[1113,36,1187,34,"game"],[1113,40,1187,38],[1113,41,1187,39,"updateAbilityData"],[1113,58,1187,56],[1113,59,1187,57],[1113,60,1187,58],[1114,4,1189,2],[1114,8,1189,8,"contextValue"],[1114,20,1189,39],[1114,23,1189,42,"React"],[1114,28,1189,47],[1114,29,1189,47,"default"],[1114,36,1189,47],[1114,37,1189,48,"useMemo"],[1114,44,1189,55],[1114,45,1189,56],[1114,52,1189,63],[1115,6,1190,4,"combatState"],[1115,17,1190,15],[1116,6,1191,4,"projectiles"],[1116,17,1191,15],[1117,6,1192,4,"startCombat"],[1117,17,1192,15],[1118,6,1193,4,"stopCombat"],[1118,16,1193,14],[1119,6,1194,4,"equipAbility"],[1119,18,1194,16],[1120,6,1195,4,"handleEnemyKill"],[1120,21,1195,19],[1121,6,1196,4,"getDeck"],[1121,13,1196,11],[1122,6,1197,4,"getAvailableAbilities"],[1122,27,1197,25],[1123,6,1198,4,"upgradeAbility"],[1123,20,1198,18],[1124,6,1199,4,"spawnEnemy"],[1124,16,1199,14],[1125,6,1200,4,"spawnBoss"],[1125,15,1200,13],[1126,6,1201,4,"clearAllEnemies"],[1126,21,1201,19],[1127,6,1202,4,"clearSpecificEnemy"],[1127,24,1202,22],[1128,6,1203,4],[1129,6,1204,4,"findClosestEnemy"],[1129,22,1204,20],[1130,6,1205,4,"updateNinjaPosition"],[1130,25,1205,23],[1131,6,1206,4,"setManualControlActive"],[1131,28,1206,26],[1132,6,1207,4,"lastExplosionTime"],[1132,23,1207,21],[1133,6,1208,4,"useAbilityManually"],[1133,24,1208,22],[1134,6,1208,24],[1135,6,1209,4,"saveAbilityData"],[1135,21,1209,19],[1136,6,1209,21],[1137,6,1210,4,"shadowClone"],[1137,17,1210,15],[1137,19,1210,17,"combatState"],[1137,30,1210,28],[1137,31,1210,29,"shadowClone"],[1137,42,1210,40],[1137,43,1210,42],[1138,4,1211,2],[1138,5,1211,3],[1138,6,1211,4],[1138,8,1211,6],[1139,4,1212,4],[1140,4,1213,4],[1141,4,1214,4,"combatState"],[1141,15,1214,15],[1141,17,1215,4,"projectiles"],[1141,28,1215,15],[1141,30,1216,4,"lastExplosionTime"],[1141,47,1216,21],[1142,4,1217,4],[1143,4,1218,4,"combatState"],[1143,15,1218,15],[1143,16,1218,16,"abilityManager"],[1143,30,1218,30],[1143,32,1219,4,"combatState"],[1143,43,1219,15],[1143,44,1219,16,"enemies"],[1143,51,1219,23],[1143,53,1220,4,"combatState"],[1143,64,1220,15],[1143,65,1220,16,"shadowClone"],[1143,76,1220,27],[1144,4,1220,29],[1145,4,1221,4,"useAbilityManually"],[1145,22,1221,22],[1146,4,1221,24],[1147,4,1222,4,"saveAbilityData"],[1147,19,1222,19],[1147,20,1222,21],[1148,4,1222,21],[1148,5,1223,3],[1148,6,1223,4],[1149,4,1225,2],[1149,24,1226,4],[1149,28,1226,4,"_reactJsxDevRuntime"],[1149,47,1226,4],[1149,48,1226,4,"jsxDEV"],[1149,54,1226,4],[1149,56,1226,5,"CombatContext"],[1149,69,1226,18],[1149,70,1226,19,"Provider"],[1149,78,1226,27],[1150,6,1226,28,"value"],[1150,11,1226,33],[1150,13,1226,35,"contextValue"],[1150,25,1226,48],[1151,6,1226,48,"children"],[1151,14,1226,48],[1151,16,1227,7,"children"],[1152,4,1227,15],[1153,6,1227,15,"fileName"],[1153,14,1227,15],[1153,16,1227,15,"_jsxFileName"],[1153,28,1227,15],[1154,6,1227,15,"lineNumber"],[1154,16,1227,15],[1155,6,1227,15,"columnNumber"],[1155,18,1227,15],[1156,4,1227,15],[1156,11,1228,28],[1156,12,1228,29],[1157,2,1230,0],[1157,3,1230,1],[1158,2,1230,2,"_s4"],[1158,5,1230,2],[1158,6,106,13,"CombatProvider"],[1158,20,106,27],[1159,4,106,27],[1159,12,107,15,"useGame"],[1159,24,107,22],[1159,25,107,22,"useGame"],[1159,32,107,22],[1159,34,108,77,"useZone"],[1159,46,108,84],[1159,47,108,84,"useZone"],[1159,54,108,84],[1160,2,108,84],[1161,2,108,84,"_c"],[1161,4,108,84],[1161,7,106,13,"CombatProvider"],[1161,21,106,27],[1162,2,106,27],[1162,6,106,27,"_c"],[1162,8,106,27],[1163,2,106,27,"$RefreshReg$"],[1163,14,106,27],[1163,15,106,27,"_c"],[1163,17,106,27],[1164,0,106,27],[1164,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","setTimeout$argument_0","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCQ;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;ORgG;mDSuD,2CT;kDSC,4CT;iDSO;OTU;mGUI,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;sDSK,yBT;mCUa;SViB;yBFG;UEG;0BWG,uCX;uBJG;oCgBE;yDCC,sCD;WhBE;UIC;GNG;mCoBG;oBCY;KDU;GpBI;2BsBG;GtBE;0CuBQ;GvBE;6CwBG;GxBG;8ByBG;mBvBG;oDMI,sCN;KuBa;mBCG,oBC,2BD,CD;GzBC;sB4BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G5BoB;2BkCG;mBR0C,6BQ;eCG;KDE;GlCG;yBoCG;GpCsC;8BqCG;GrC4B;wCsCI;mBpCE,uCoC;GtCQ;uCuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBzBC;sC0BC;2BlDc;wDmDY;iBnDoC;6BiCK;0CmBC,+BnB;mBjCC;8DMK,sCN;akDiC;S1BS;OyBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}