{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":666,"map":[[15,2,71,0,"Object"],[15,8,71,0],[15,9,71,0,"defineProperty"],[15,23,71,0],[15,24,71,0,"exports"],[15,31,71,0],[16,4,71,0,"enumerable"],[16,14,71,0],[17,4,71,0,"get"],[17,7,71,0],[17,18,71,0,"get"],[17,19,71,0],[18,6,71,0],[18,13,71,0,"useCombat"],[18,22,71,0],[19,4,71,0],[20,2,71,0],[21,2,81,0,"Object"],[21,8,81,0],[21,9,81,0,"defineProperty"],[21,23,81,0],[21,24,81,0,"exports"],[21,31,81,0],[22,4,81,0,"enumerable"],[22,14,81,0],[23,4,81,0,"get"],[23,7,81,0],[23,18,81,0,"get"],[23,19,81,0],[24,6,81,0],[24,13,81,0,"CombatProvider"],[24,27,81,0],[25,4,81,0],[26,2,81,0],[27,2,675,2],[27,6,675,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,675,2],[27,42,675,2,"require"],[27,49,675,2],[27,50,675,2,"_dependencyMap"],[27,64,675,2],[28,2,675,2],[28,6,675,2,"_slicedToArray"],[28,20,675,2],[28,23,675,2,"_interopDefault"],[28,38,675,2],[28,39,675,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,675,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,69,0],[36,6,69,6,"CombatContext"],[36,19,69,19],[36,35,69,22],[36,39,69,22,"createContext"],[36,45,69,35],[36,46,69,35,"createContext"],[36,59,69,35],[36,61,69,67,"undefined"],[36,70,69,76],[36,71,69,77],[37,2,71,7],[37,6,71,13,"useCombat"],[37,15,71,22],[37,18,71,25,"useCombat"],[37,19,71,25],[37,24,71,50],[38,4,71,50,"_s"],[38,6,71,50],[39,4,72,2],[39,8,72,8,"context"],[39,15,72,15],[39,18,72,18],[39,22,72,18,"useContext"],[39,28,72,28],[39,29,72,28,"useContext"],[39,39,72,28],[39,41,72,29,"CombatContext"],[39,54,72,42],[39,55,72,43],[40,4,73,2],[40,8,73,6],[40,9,73,7,"context"],[40,16,73,14],[40,18,73,16],[41,6,74,4],[41,12,74,10],[41,16,74,14,"Error"],[41,21,74,19],[41,22,74,20],[41,70,74,68],[41,71,74,69],[42,4,75,2],[43,4,76,2],[43,11,76,9,"context"],[43,18,76,16],[44,2,77,0],[44,3,77,1],[45,2,77,2,"_s"],[45,4,77,2],[45,5,71,13,"useCombat"],[45,14,71,22],[46,2,79,0],[46,6,79,4,"enemyCounter"],[46,18,79,16],[46,21,79,19],[46,22,79,20],[46,23,79,21],[46,24,79,22],[48,2,81,7],[48,6,81,13,"CombatProvider"],[48,20,81,27],[48,23,81,30,"_ref"],[48,27,81,30],[48,31,81,73],[49,4,81,73,"_s4"],[49,7,81,73],[50,4,81,73],[50,8,81,73,"_s3"],[50,11,81,73],[50,14,81,73,"$RefreshSig$"],[50,26,81,73],[51,4,81,73],[51,8,81,33,"children"],[51,16,81,41],[51,19,81,41,"_ref"],[51,23,81,41],[51,24,81,33,"children"],[51,32,81,41],[52,4,82,2],[52,8,82,2,"_useGame"],[52,16,82,2],[52,19,82,26],[52,23,82,26,"useGame"],[52,35,82,33],[52,36,82,33,"useGame"],[52,43,82,33],[52,45,82,34],[52,46,82,35],[53,6,82,10,"updateNinja"],[53,17,82,21],[53,20,82,21,"_useGame"],[53,28,82,21],[53,29,82,10,"updateNinja"],[53,40,82,21],[54,4,83,2],[54,8,83,2,"_useZone"],[54,16,83,2],[54,19,83,30],[54,23,83,30,"useZone"],[54,35,83,37],[54,36,83,37,"useZone"],[54,43,83,37],[54,45,83,38],[54,46,83,39],[55,6,83,10,"recordEnemyKill"],[55,21,83,25],[55,24,83,25,"_useZone"],[55,32,83,25],[55,33,83,10,"recordEnemyKill"],[55,48,83,25],[56,4,85,2],[56,8,85,2,"_useState"],[56,17,85,2],[56,20,85,40],[56,24,85,40,"useState"],[56,30,85,48],[56,31,85,48,"useState"],[56,39,85,48],[56,41,85,62],[57,8,86,4,"isInCombat"],[57,18,86,14],[57,20,86,16],[57,25,86,21],[58,8,87,4,"currentTick"],[58,19,87,15],[58,21,87,17],[58,22,87,18],[59,8,88,4,"enemies"],[59,15,88,11],[59,17,88,13],[59,19,88,15],[60,8,89,4,"abilityManager"],[60,22,89,18],[60,24,89,20],[60,28,89,24,"AbilityManager"],[60,46,89,38],[60,47,89,38,"AbilityManager"],[60,61,89,38],[60,62,89,39],[60,63,89,40],[61,8,90,4,"statusEffects"],[61,21,90,17],[61,23,90,19],[61,27,90,23,"StatusEffectManager"],[61,46,90,42],[61,47,90,42,"StatusEffectManager"],[61,66,90,42],[61,67,90,43],[61,68,90,44],[62,8,91,4,"playerStats"],[62,19,91,15],[62,21,91,17],[63,10,92,6,"attack"],[63,16,92,12],[63,18,92,14],[63,20,92,16],[64,10,92,18],[65,10,93,6,"defense"],[65,17,93,13],[65,19,93,15],[65,20,93,16],[66,10,94,6,"health"],[66,16,94,12],[66,18,94,14],[66,21,94,17],[67,10,95,6,"maxHealth"],[67,19,95,15],[67,21,95,17],[67,24,95,20],[68,10,96,6,"critChance"],[68,20,96,16],[68,22,96,18],[68,23,96,19],[69,10,97,6,"critDamage"],[69,20,97,16],[69,22,97,18],[69,25,97,21],[70,10,98,6,"cooldownReduction"],[70,27,98,23],[70,29,98,25],[71,8,99,4],[72,6,100,2],[72,7,100,3],[72,8,100,4],[73,6,100,4,"_useState2"],[73,16,100,4],[73,23,100,4,"_slicedToArray"],[73,37,100,4],[73,38,100,4,"default"],[73,45,100,4],[73,47,100,4,"_useState"],[73,56,100,4],[74,6,85,9,"combatState"],[74,17,85,20],[74,20,85,20,"_useState2"],[74,30,85,20],[75,6,85,22,"setCombatState"],[75,20,85,36],[75,23,85,36,"_useState2"],[75,33,85,36],[76,4,102,2],[76,8,102,2,"_useState3"],[76,18,102,2],[76,21,102,40],[76,25,102,40,"useState"],[76,31,102,48],[76,32,102,48,"useState"],[76,40,102,48],[76,42,102,69],[76,44,102,71],[76,45,102,72],[77,6,102,72,"_useState4"],[77,16,102,72],[77,23,102,72,"_slicedToArray"],[77,37,102,72],[77,38,102,72,"default"],[77,45,102,72],[77,47,102,72,"_useState3"],[77,57,102,72],[78,6,102,9,"projectiles"],[78,17,102,20],[78,20,102,20,"_useState4"],[78,30,102,20],[79,6,102,22,"setProjectiles"],[79,20,102,36],[79,23,102,36,"_useState4"],[79,33,102,36],[80,4,103,2],[80,8,103,2,"_useState5"],[80,18,103,2],[80,21,103,52],[80,25,103,52,"useState"],[80,31,103,60],[80,32,103,60,"useState"],[80,40,103,60],[80,42,103,69],[80,43,103,70],[80,44,103,71],[81,6,103,71,"_useState6"],[81,16,103,71],[81,23,103,71,"_slicedToArray"],[81,37,103,71],[81,38,103,71,"default"],[81,45,103,71],[81,47,103,71,"_useState5"],[81,57,103,71],[82,6,103,9,"lastExplosionTime"],[82,23,103,26],[82,26,103,26,"_useState6"],[82,36,103,26],[83,6,103,28,"setLastExplosionTime"],[83,26,103,48],[83,29,103,48,"_useState6"],[83,39,103,48],[84,4,104,2],[85,4,105,2],[87,4,107,2],[88,4,108,2],[88,8,108,8,"handleEnemyKill"],[88,23,108,23],[88,26,108,26],[88,30,108,26,"useCallback"],[88,36,108,37],[88,37,108,37,"useCallback"],[88,48,108,37],[88,50,108,39,"enemy"],[88,55,108,57],[88,59,108,62],[89,6,109,4,"console"],[89,13,109,11],[89,14,109,12,"log"],[89,17,109,15],[89,18,109,16],[89,46,109,44,"enemy"],[89,51,109,49],[89,52,109,50,"maxHealth"],[89,61,109,59],[89,63,109,61],[89,64,109,62],[91,6,111,4],[92,6,112,4],[92,10,112,10,"xpReward"],[92,18,112,18],[92,21,112,21],[92,23,112,23],[92,24,112,24],[92,25,112,25],[93,6,113,4],[93,10,113,10,"goldReward"],[93,20,113,20],[93,23,113,23],[93,25,113,25],[94,6,115,4,"console"],[94,13,115,11],[94,14,115,12,"log"],[94,17,115,15],[94,18,115,16],[94,33,115,31,"xpReward"],[94,41,115,39],[94,52,115,50,"goldReward"],[94,62,115,60],[94,78,115,76],[94,79,115,77],[96,6,117,4],[97,6,118,4],[98,6,119,4,"setTimeout"],[98,16,119,14],[98,17,119,15],[98,23,119,21],[99,8,120,6],[100,8,121,6,"updateNinja"],[100,19,121,17],[100,20,121,19,"prev"],[100,24,121,23],[100,28,121,28],[101,10,122,8,"console"],[101,17,122,15],[101,18,122,16,"log"],[101,21,122,19],[101,22,122,20],[101,39,122,37,"prev"],[101,43,122,41],[101,44,122,42,"experience"],[101,54,122,52],[101,66,122,64,"prev"],[101,70,122,68],[101,71,122,69,"experience"],[101,81,122,79],[101,84,122,82,"xpReward"],[101,92,122,90],[101,94,122,92],[101,95,122,93],[102,10,123,8],[102,17,123,15],[103,12,124,10,"experience"],[103,22,124,20],[103,24,124,22,"prev"],[103,28,124,26],[103,29,124,27,"experience"],[103,39,124,37],[103,42,124,40,"xpReward"],[103,50,124,48],[104,12,125,10,"gold"],[104,16,125,14],[104,18,125,16,"prev"],[104,22,125,20],[104,23,125,21,"gold"],[104,27,125,25],[104,30,125,28,"goldReward"],[105,10,126,8],[105,11,126,9],[106,8,127,6],[106,9,127,7],[106,10,127,8],[108,8,129,6],[109,8,130,6],[109,12,130,12,"zoneEnemy"],[109,21,130,21],[109,24,130,24],[110,10,131,8,"id"],[110,12,131,10],[110,14,131,12,"enemy"],[110,19,131,17],[110,20,131,18,"id"],[110,22,131,20],[111,10,132,8,"typeId"],[111,16,132,14],[111,18,132,16],[111,28,132,26],[112,10,132,28],[113,10,133,8,"name"],[113,14,133,12],[113,16,133,14,"enemy"],[113,21,133,19],[113,22,133,20,"name"],[113,26,133,24],[114,10,134,8,"icon"],[114,14,134,12],[114,16,134,14],[114,20,134,18],[115,10,134,20],[116,10,135,8,"hp"],[116,12,135,10],[116,14,135,12],[116,15,135,13],[117,10,135,15],[118,10,136,8,"maxHP"],[118,15,136,13],[118,17,136,15,"enemy"],[118,22,136,20],[118,23,136,21,"maxHealth"],[118,32,136,30],[119,10,137,8,"attack"],[119,16,137,14],[119,18,137,16,"enemy"],[119,23,137,21],[119,24,137,22,"stats"],[119,29,137,27],[119,30,137,28,"attack"],[119,36,137,34],[120,10,138,8,"xp"],[120,12,138,10],[120,14,138,12],[120,16,138,14],[121,10,138,16],[122,10,139,8,"position"],[122,18,139,16],[122,20,139,18,"enemy"],[122,25,139,23],[122,26,139,24,"position"],[123,8,140,6],[123,9,140,7],[124,8,141,6,"recordEnemyKill"],[124,23,141,21],[124,24,141,22,"zoneEnemy"],[124,33,141,31],[124,34,141,32],[125,6,142,4],[125,7,142,5],[125,9,142,7],[125,10,142,8],[125,11,142,9],[125,12,142,10],[125,13,142,11],[126,4,143,2],[126,5,143,3],[126,7,143,5],[126,8,143,6,"updateNinja"],[126,19,143,17],[126,21,143,19,"recordEnemyKill"],[126,36,143,34],[126,37,143,35],[126,38,143,36],[128,4,145,2],[129,4,146,2],[129,8,146,8,"handleCombatTick"],[129,24,146,24],[129,27,146,27,"React"],[129,32,146,32],[129,33,146,32,"default"],[129,40,146,32],[129,41,146,33,"useCallback"],[129,52,146,44],[129,53,146,45],[129,59,146,51],[130,6,146,51],[130,10,146,51,"_s2"],[130,13,146,51],[130,16,146,51,"$RefreshSig$"],[130,28,146,51],[131,6,147,4,"console"],[131,13,147,11],[131,14,147,12,"log"],[131,17,147,15],[131,18,147,16],[131,45,147,43],[131,46,147,44],[132,6,149,4],[132,10,149,8,"enemiesToKill"],[132,23,149,36],[132,26,149,39],[132,28,149,41],[132,29,149,42],[132,30,149,43],[134,6,151,4,"_s2"],[134,9,151,4],[134,10,151,4,"setCombatState"],[134,24,151,18],[134,25,151,18,"_s2"],[134,28,151,18],[134,29,151,19,"prev"],[134,33,151,23],[134,37,151,27],[135,8,151,27,"_s2"],[135,11,151,27],[136,8,152,6],[136,12,152,12,"newTick"],[136,19,152,19],[136,22,152,22,"combatEngine"],[136,41,152,34],[136,42,152,34,"combatEngine"],[136,54,152,34],[136,55,152,35,"getCurrentTick"],[136,69,152,49],[136,70,152,50],[136,71,152,51],[137,8,153,6],[137,12,153,12,"newState"],[137,20,153,20],[137,23,153,23],[138,10,153,25],[138,13,153,28,"prev"],[138,17,153,32],[139,10,153,34,"currentTick"],[139,21,153,45],[139,23,153,47,"newTick"],[140,8,153,55],[140,9,153,56],[141,8,155,6],[141,12,155,10],[141,13,155,11,"newState"],[141,21,155,19],[141,22,155,20,"isInCombat"],[141,32,155,30],[141,34,155,32],[141,41,155,39,"newState"],[141,49,155,47],[143,8,157,6],[144,8,158,6,"newState"],[144,16,158,14],[144,17,158,15,"abilityManager"],[144,31,158,29],[144,32,158,30,"updateCooldowns"],[144,47,158,45],[144,48,158,46,"newTick"],[144,55,158,53],[144,56,158,54],[146,8,160,6],[147,8,161,6],[147,12,161,12,"effectResults"],[147,25,161,25],[147,28,161,28,"newState"],[147,36,161,36],[147,37,161,37,"statusEffects"],[147,50,161,50],[147,51,161,51,"processTick"],[147,62,161,62],[147,63,161,63,"newTick"],[147,70,161,70],[147,71,161,71],[149,8,163,6],[150,8,164,6,"effectResults"],[150,21,164,19],[150,22,164,20,"forEach"],[150,29,164,27],[150,30,164,28],[150,31,164,29,"results"],[150,38,164,36],[150,40,164,38,"entityId"],[150,48,164,46],[150,53,164,51],[151,10,165,8],[151,14,165,14,"enemyIndex"],[151,24,165,24],[151,27,165,27,"newState"],[151,35,165,35],[151,36,165,36,"enemies"],[151,43,165,43],[151,44,165,44,"findIndex"],[151,53,165,53],[151,54,165,54,"e"],[151,55,165,55],[151,59,165,59,"e"],[151,60,165,60],[151,61,165,61,"id"],[151,63,165,63],[151,68,165,68,"entityId"],[151,76,165,76],[151,77,165,77],[152,10,166,8],[152,14,166,12,"enemyIndex"],[152,24,166,22],[152,28,166,26],[152,29,166,27],[152,31,166,29],[153,12,167,10,"results"],[153,19,167,17],[153,20,167,18,"forEach"],[153,27,167,25],[153,28,167,26,"result"],[153,34,167,32],[153,38,167,36],[154,14,168,12,"newState"],[154,22,168,20],[154,23,168,21,"enemies"],[154,30,168,28],[154,31,168,29,"enemyIndex"],[154,41,168,39],[154,42,168,40],[154,43,168,41,"health"],[154,49,168,47],[154,53,168,51,"result"],[154,59,168,57],[154,60,168,58,"damage"],[154,66,168,64],[155,14,169,12,"newState"],[155,22,169,20],[155,23,169,21,"enemies"],[155,30,169,28],[155,31,169,29,"enemyIndex"],[155,41,169,39],[155,42,169,40],[155,43,169,41,"lastDamaged"],[155,54,169,52],[155,57,169,55,"newTick"],[155,64,169,62],[156,12,170,10],[156,13,170,11],[156,14,170,12],[157,10,171,8],[158,8,172,6],[158,9,172,7],[158,10,172,8],[160,8,174,6],[161,8,175,6,"newState"],[161,16,175,14],[161,17,175,15,"enemies"],[161,24,175,22],[161,25,175,23,"forEach"],[161,32,175,30],[161,33,175,31,"enemy"],[161,38,175,36],[161,42,175,40],[162,10,176,8],[162,14,176,12],[162,15,176,13,"enemy"],[162,20,176,18],[162,21,176,19,"isBoss"],[162,27,176,25],[162,29,176,27],[163,12,176,29],[164,12,177,10],[165,12,178,10],[165,16,178,16,"MOVEMENT_SPEED"],[165,30,178,30],[165,33,178,33],[165,37,178,37],[165,38,178,38],[165,39,178,39],[166,12,179,10],[166,16,179,16,"SCREEN_WIDTH"],[166,28,179,28],[166,31,179,31],[166,34,179,34],[167,12,180,10],[167,16,180,16,"GAME_AREA_HEIGHT"],[167,32,180,32],[167,35,180,35],[167,38,180,38],[167,39,180,39],[167,40,180,40],[168,12,181,10],[168,16,181,16,"ENEMY_SIZE"],[168,26,181,26],[168,29,181,29],[168,31,181,31],[170,12,183,10],[171,12,184,10],[171,16,184,16,"playerX"],[171,23,184,23],[171,26,184,26,"currentNinjaPosition"],[171,46,184,46],[171,47,184,47,"x"],[171,48,184,48],[172,12,185,10],[172,16,185,16,"playerY"],[172,23,185,23],[172,26,185,26,"currentNinjaPosition"],[172,46,185,46],[172,47,185,47,"y"],[172,48,185,48],[174,12,187,10],[175,12,188,10],[175,16,188,16,"deltaX"],[175,22,188,22],[175,25,188,25,"playerX"],[175,32,188,32],[175,35,188,35,"enemy"],[175,40,188,40],[175,41,188,41,"position"],[175,49,188,49],[175,50,188,50,"x"],[175,51,188,51],[176,12,189,10],[176,16,189,16,"deltaY"],[176,22,189,22],[176,25,189,25,"playerY"],[176,32,189,32],[176,35,189,35,"enemy"],[176,40,189,40],[176,41,189,41,"position"],[176,49,189,49],[176,50,189,50,"y"],[176,51,189,51],[177,12,190,10],[177,16,190,16,"distance"],[177,24,190,24],[177,27,190,27,"Math"],[177,31,190,31],[177,32,190,32,"sqrt"],[177,36,190,36],[177,37,190,37,"deltaX"],[177,43,190,43],[177,46,190,46,"deltaX"],[177,52,190,52],[177,55,190,55,"deltaY"],[177,61,190,61],[177,64,190,64,"deltaY"],[177,70,190,70],[177,71,190,71],[179,12,192,10],[180,12,193,10],[180,16,193,14,"distance"],[180,24,193,22],[180,27,193,25],[180,29,193,27],[180,31,193,29],[181,14,194,12],[182,14,195,12],[182,18,195,18,"normalizedX"],[182,29,195,29],[182,32,195,32,"deltaX"],[182,38,195,38],[182,41,195,41,"distance"],[182,49,195,49],[183,14,196,12],[183,18,196,18,"normalizedY"],[183,29,196,29],[183,32,196,32,"deltaY"],[183,38,196,38],[183,41,196,41,"distance"],[183,49,196,49],[185,14,198,12],[186,14,199,12],[186,18,199,18,"randomFactor"],[186,30,199,30],[186,33,199,33],[186,36,199,36],[186,37,199,37],[186,38,199,38],[187,14,200,12],[187,18,200,18,"finalX"],[187,24,200,24],[187,27,200,27,"normalizedX"],[187,38,200,38],[187,41,200,41],[187,42,200,42,"Math"],[187,46,200,46],[187,47,200,47,"random"],[187,53,200,53],[187,54,200,54],[187,55,200,55],[187,58,200,58],[187,61,200,61],[187,65,200,65,"randomFactor"],[187,77,200,77],[188,14,201,12],[188,18,201,18,"finalY"],[188,24,201,24],[188,27,201,27,"normalizedY"],[188,38,201,38],[188,41,201,41],[188,42,201,42,"Math"],[188,46,201,46],[188,47,201,47,"random"],[188,53,201,53],[188,54,201,54],[188,55,201,55],[188,58,201,58],[188,61,201,61],[188,65,201,65,"randomFactor"],[188,77,201,77],[190,14,203,12],[191,14,204,12],[191,18,204,16,"newX"],[191,22,204,20],[191,25,204,23,"enemy"],[191,30,204,28],[191,31,204,29,"position"],[191,39,204,37],[191,40,204,38,"x"],[191,41,204,39],[191,44,204,43,"finalX"],[191,50,204,49],[191,53,204,52,"MOVEMENT_SPEED"],[191,67,204,67],[192,14,205,12],[192,18,205,16,"newY"],[192,22,205,20],[192,25,205,23,"enemy"],[192,30,205,28],[192,31,205,29,"position"],[192,39,205,37],[192,40,205,38,"y"],[192,41,205,39],[192,44,205,43,"finalY"],[192,50,205,49],[192,53,205,52,"MOVEMENT_SPEED"],[192,67,205,67],[194,14,207,12],[195,14,208,12,"newX"],[195,18,208,16],[195,21,208,19,"Math"],[195,25,208,23],[195,26,208,24,"max"],[195,29,208,27],[195,30,208,28],[195,31,208,29],[195,33,208,31,"Math"],[195,37,208,35],[195,38,208,36,"min"],[195,41,208,39],[195,42,208,40,"SCREEN_WIDTH"],[195,54,208,52],[195,57,208,55,"ENEMY_SIZE"],[195,67,208,65],[195,69,208,67,"newX"],[195,73,208,71],[195,74,208,72],[195,75,208,73],[196,14,209,12,"newY"],[196,18,209,16],[196,21,209,19,"Math"],[196,25,209,23],[196,26,209,24,"max"],[196,29,209,27],[196,30,209,28],[196,31,209,29],[196,33,209,31,"Math"],[196,37,209,35],[196,38,209,36,"min"],[196,41,209,39],[196,42,209,40,"GAME_AREA_HEIGHT"],[196,58,209,56],[196,61,209,59,"ENEMY_SIZE"],[196,71,209,69],[196,73,209,71,"newY"],[196,77,209,75],[196,78,209,76],[196,79,209,77],[198,14,211,12],[199,14,212,12,"enemy"],[199,19,212,17],[199,20,212,18,"position"],[199,28,212,26],[199,29,212,27,"x"],[199,30,212,28],[199,33,212,31,"newX"],[199,37,212,35],[200,14,213,12,"enemy"],[200,19,213,17],[200,20,213,18,"position"],[200,28,213,26],[200,29,213,27,"y"],[200,30,213,28],[200,33,213,31,"newY"],[200,37,213,35],[201,12,214,10],[202,12,215,10],[203,10,216,8],[204,8,217,6],[204,9,217,7],[204,10,217,8],[206,8,219,6],[207,8,220,6],[207,12,220,10],[207,13,220,11,"isManualControlActive"],[207,34,220,32],[207,36,220,34],[208,10,221,8],[208,15,221,13],[208,19,221,17,"i"],[208,20,221,18],[208,23,221,21],[208,24,221,22],[208,26,221,24,"i"],[208,27,221,25],[208,30,221,28],[208,31,221,29],[208,33,221,31,"i"],[208,34,221,32],[208,36,221,34],[208,38,221,36],[209,12,222,10],[209,16,222,14,"newState"],[209,24,222,22],[209,25,222,23,"abilityManager"],[209,39,222,37],[209,40,222,38,"isAbilityReady"],[209,54,222,52],[209,55,222,53,"i"],[209,56,222,54],[209,57,222,55],[209,61,222,59,"newState"],[209,69,222,67],[209,70,222,68,"enemies"],[209,77,222,75],[209,78,222,76,"length"],[209,84,222,82],[209,87,222,85],[209,88,222,86],[209,90,222,88],[210,14,223,12],[210,18,223,16,"newState"],[210,26,223,24],[210,27,223,25,"abilityManager"],[210,41,223,39],[210,42,223,40,"useAbility"],[210,52,223,50],[210,53,223,51,"i"],[210,54,223,52],[210,56,223,54,"newTick"],[210,63,223,61],[210,64,223,62],[210,66,223,64],[211,16,224,14,"castAbility"],[211,27,224,25],[211,28,224,26,"newState"],[211,36,224,34],[211,38,224,36,"i"],[211,39,224,37],[211,40,224,38],[212,14,225,12],[213,12,226,10],[214,10,227,8],[215,8,228,6],[217,8,230,6],[218,8,231,6],[218,12,231,12,"deadEnemies"],[218,23,231,23],[218,26,231,26,"newState"],[218,34,231,34],[218,35,231,35,"enemies"],[218,42,231,42],[218,43,231,43,"filter"],[218,49,231,49],[218,50,231,50,"enemy"],[218,55,231,55],[218,59,231,59,"enemy"],[218,64,231,64],[218,65,231,65,"health"],[218,71,231,71],[218,75,231,75],[218,76,231,76],[218,77,231,77],[219,8,232,6,"enemiesToKill"],[219,21,232,19],[219,24,232,22],[219,25,232,23],[219,28,232,26,"deadEnemies"],[219,39,232,37],[219,40,232,38],[219,41,232,39],[219,42,232,40],[221,8,234,6],[222,8,235,6,"newState"],[222,16,235,14],[222,17,235,15,"enemies"],[222,24,235,22],[222,27,235,25,"newState"],[222,35,235,33],[222,36,235,34,"enemies"],[222,43,235,41],[222,44,235,42,"filter"],[222,50,235,48],[222,51,235,49,"enemy"],[222,56,235,54],[222,60,235,58,"enemy"],[222,65,235,63],[222,66,235,64,"health"],[222,72,235,70],[222,75,235,73],[222,76,235,74],[222,77,235,75],[224,8,237,6],[225,8,238,6],[226,8,239,6],[226,12,239,12,"MAX_ENEMIES"],[226,23,239,23],[226,26,239,26],[226,28,239,28],[227,8,240,6],[227,12,240,12,"MIN_SPAWN_DELAY"],[227,27,240,27],[227,30,240,30],[227,33,240,33],[227,34,240,34],[227,35,240,35],[228,8,241,6],[228,12,241,12,"now"],[228,15,241,15],[228,18,241,18,"Date"],[228,22,241,22],[228,23,241,23,"now"],[228,26,241,26],[228,27,241,27],[228,28,241,28],[229,8,242,6],[229,12,242,12,"hasBoss"],[229,19,242,19],[229,22,242,22,"newState"],[229,30,242,30],[229,31,242,31,"enemies"],[229,38,242,38],[229,39,242,39,"some"],[229,43,242,43],[229,44,242,44,"enemy"],[229,49,242,49],[229,53,242,53,"enemy"],[229,58,242,58],[229,59,242,59,"isBoss"],[229,65,242,65],[229,66,242,66],[231,8,244,6],[232,8,245,6],[232,12,245,10],[232,13,245,11,"newState"],[232,21,245,19],[232,22,245,20,"lastSpawnTime"],[232,35,245,33],[232,37,245,35],[233,10,246,8,"newState"],[233,18,246,16],[233,19,246,17,"lastSpawnTime"],[233,32,246,30],[233,35,246,33,"now"],[233,38,246,36],[234,8,247,6],[235,8,249,6,"console"],[235,15,249,13],[235,16,249,14,"log"],[235,19,249,17],[235,20,249,18],[235,53,249,51,"newState"],[235,61,249,59],[235,62,249,60,"enemies"],[235,69,249,67],[235,70,249,68,"length"],[235,76,249,74],[235,85,249,83,"MAX_ENEMIES"],[235,96,249,94],[235,109,249,107,"hasBoss"],[235,116,249,114],[235,118,249,116],[235,119,249,117],[237,8,251,6],[238,8,252,6],[238,12,252,10],[238,13,252,11,"hasBoss"],[238,20,252,18],[238,24,252,22,"newState"],[238,32,252,30],[238,33,252,31,"enemies"],[238,40,252,38],[238,41,252,39,"length"],[238,47,252,45],[238,50,252,48,"MAX_ENEMIES"],[238,61,252,59],[238,65,252,64,"now"],[238,68,252,67],[238,71,252,70,"newState"],[238,79,252,78],[238,80,252,79,"lastSpawnTime"],[238,93,252,92],[238,97,252,97,"MIN_SPAWN_DELAY"],[238,112,252,112],[238,114,252,114],[239,10,253,8,"console"],[239,17,253,15],[239,18,253,16,"log"],[239,21,253,19],[239,22,253,20],[239,43,253,41,"newState"],[239,51,253,49],[239,52,253,50,"enemies"],[239,59,253,57],[239,60,253,58,"length"],[239,66,253,64],[239,69,253,67],[239,70,253,68],[239,74,253,72,"MAX_ENEMIES"],[239,85,253,83],[239,87,253,85],[239,88,253,86],[240,10,254,8,"spawnTestEnemy"],[240,24,254,22],[240,25,254,23,"newState"],[240,33,254,31],[240,34,254,32],[241,10,255,8,"newState"],[241,18,255,16],[241,19,255,17,"lastSpawnTime"],[241,32,255,30],[241,35,255,33,"now"],[241,38,255,36],[242,8,256,6],[243,8,258,6],[243,15,258,13,"newState"],[243,23,258,21],[244,6,259,4],[244,7,259,5],[244,47,259,6],[246,6,261,4],[247,6,262,4,"enemiesToKill"],[247,19,262,17],[247,20,262,18,"forEach"],[247,27,262,25],[247,28,262,26,"enemy"],[247,33,262,31],[247,37,262,35],[248,8,263,6,"handleEnemyKill"],[248,23,263,21],[248,24,263,22,"enemy"],[248,29,263,27],[248,30,263,28],[249,6,264,4],[249,7,264,5],[249,8,264,6],[250,4,265,2],[250,5,265,3],[250,7,265,5],[250,8,265,6,"handleEnemyKill"],[250,23,265,21],[250,24,265,22],[250,25,265,23],[250,26,265,24],[250,27,265,25],[252,4,267,2],[253,4,268,2],[253,8,268,8,"findClosestEnemyInternal"],[253,32,268,32],[253,35,268,36,"enemies"],[253,42,268,58],[253,46,268,83],[254,6,269,4],[254,10,269,8,"enemies"],[254,17,269,15],[254,18,269,16,"length"],[254,24,269,22],[254,29,269,27],[254,30,269,28],[254,32,269,30],[254,39,269,37],[254,43,269,41],[256,6,271,4],[257,6,272,4],[257,10,272,10,"SCREEN_WIDTH"],[257,22,272,22],[257,25,272,25],[257,28,272,28],[258,6,273,4],[258,10,273,10,"GAME_AREA_HEIGHT"],[258,26,273,26],[258,29,273,29],[258,32,273,32],[258,35,273,35],[258,38,273,38],[258,39,273,39],[258,40,273,40],[259,6,274,4],[259,10,274,10,"ninjaX"],[259,16,274,16],[259,19,274,19,"SCREEN_WIDTH"],[259,31,274,31],[259,34,274,34],[259,35,274,35],[260,6,275,4],[260,10,275,10,"ninjaY"],[260,16,275,16],[260,19,275,19,"GAME_AREA_HEIGHT"],[260,35,275,35],[260,38,275,38],[260,39,275,39],[261,6,277,4],[261,10,277,8,"closestEnemy"],[261,22,277,20],[261,25,277,23,"enemies"],[261,32,277,30],[261,33,277,31],[261,34,277,32],[261,35,277,33],[262,6,278,4],[262,10,278,8,"closestDistance"],[262,25,278,23],[262,28,278,26,"Infinity"],[262,36,278,34],[263,6,280,4,"enemies"],[263,13,280,11],[263,14,280,12,"forEach"],[263,21,280,19],[263,22,280,20,"enemy"],[263,27,280,25],[263,31,280,29],[264,8,281,6],[264,12,281,12,"distance"],[264,20,281,20],[264,23,281,23,"Math"],[264,27,281,27],[264,28,281,28,"sqrt"],[264,32,281,32],[264,33,282,8,"Math"],[264,37,282,12],[264,38,282,13,"pow"],[264,41,282,16],[264,42,282,17,"enemy"],[264,47,282,22],[264,48,282,23,"position"],[264,56,282,31],[264,57,282,32,"x"],[264,58,282,33],[264,61,282,36,"ninjaX"],[264,67,282,42],[264,69,282,44],[264,70,282,45],[264,71,282,46],[264,74,283,8,"Math"],[264,78,283,12],[264,79,283,13,"pow"],[264,82,283,16],[264,83,283,17,"enemy"],[264,88,283,22],[264,89,283,23,"position"],[264,97,283,31],[264,98,283,32,"y"],[264,99,283,33],[264,102,283,36,"ninjaY"],[264,108,283,42],[264,110,283,44],[264,111,283,45],[264,112,284,6],[264,113,284,7],[265,8,286,6],[265,12,286,10,"distance"],[265,20,286,18],[265,23,286,21,"closestDistance"],[265,38,286,36],[265,40,286,38],[266,10,287,8,"closestDistance"],[266,25,287,23],[266,28,287,26,"distance"],[266,36,287,34],[267,10,288,8,"closestEnemy"],[267,22,288,20],[267,25,288,23,"enemy"],[267,30,288,28],[268,8,289,6],[269,6,290,4],[269,7,290,5],[269,8,290,6],[270,6,292,4,"console"],[270,13,292,11],[270,14,292,12,"log"],[270,17,292,15],[270,18,292,16],[270,60,292,58,"closestDistance"],[270,75,292,73],[270,76,292,74,"toFixed"],[270,83,292,81],[270,84,292,82],[270,85,292,83],[270,86,292,84],[270,88,292,86],[270,89,292,87],[271,6,293,4],[271,13,293,11,"closestEnemy"],[271,25,293,23],[272,4,294,2],[272,5,294,3],[274,4,296,2],[275,4,297,2],[275,8,297,8,"findClosestEnemy"],[275,24,297,24],[275,27,297,27,"findClosestEnemy"],[275,28,297,27],[275,33,297,53],[276,6,298,4],[276,13,298,11,"findClosestEnemyInternal"],[276,37,298,35],[276,38,298,36,"combatState"],[276,49,298,47],[276,50,298,48,"enemies"],[276,57,298,55],[276,58,298,56],[277,4,299,2],[277,5,299,3],[279,4,301,2],[280,4,302,2],[280,8,302,2,"_useState7"],[280,18,302,2],[280,21,302,58],[280,25,302,58,"useState"],[280,31,302,66],[280,32,302,66,"useState"],[280,40,302,66],[280,42,302,91],[281,8,302,93,"x"],[281,9,302,94],[281,11,302,96],[281,12,302,97],[282,8,302,99,"y"],[282,9,302,100],[282,11,302,102],[283,6,302,104],[283,7,302,105],[283,8,302,106],[284,6,302,106,"_useState8"],[284,16,302,106],[284,23,302,106,"_slicedToArray"],[284,37,302,106],[284,38,302,106,"default"],[284,45,302,106],[284,47,302,106,"_useState7"],[284,57,302,106],[285,6,302,9,"currentNinjaPosition"],[285,26,302,29],[285,29,302,29,"_useState8"],[285,39,302,29],[286,6,302,31,"setCurrentNinjaPosition"],[286,29,302,54],[286,32,302,54,"_useState8"],[286,42,302,54],[287,4,303,2],[287,8,303,2,"_useState9"],[287,18,303,2],[287,21,303,60],[287,25,303,60,"useState"],[287,31,303,68],[287,32,303,68,"useState"],[287,40,303,68],[287,42,303,69],[287,47,303,74],[287,48,303,75],[288,6,303,75,"_useState0"],[288,16,303,75],[288,23,303,75,"_slicedToArray"],[288,37,303,75],[288,38,303,75,"default"],[288,45,303,75],[288,47,303,75,"_useState9"],[288,57,303,75],[289,6,303,9,"isManualControlActive"],[289,27,303,30],[289,30,303,30,"_useState0"],[289,40,303,30],[290,6,303,32,"setIsManualControlActive"],[290,30,303,56],[290,33,303,56,"_useState0"],[290,43,303,56],[292,4,305,2],[293,4,306,2],[293,8,306,8,"updateNinjaPosition"],[293,27,306,27],[293,30,306,30],[293,34,306,30,"useCallback"],[293,40,306,41],[293,41,306,41,"useCallback"],[293,52,306,41],[293,54,306,43,"newPosition"],[293,65,306,78],[293,69,306,83],[294,6,307,4,"setCurrentNinjaPosition"],[294,29,307,27],[294,30,307,28,"newPosition"],[294,41,307,39],[294,42,307,40],[295,4,308,2],[295,5,308,3],[295,7,308,5],[295,9,308,7],[295,10,308,8],[297,4,310,2],[298,4,311,2],[298,8,311,8,"setManualControlActive"],[298,30,311,30],[298,33,311,33],[298,37,311,33,"useCallback"],[298,43,311,44],[298,44,311,44,"useCallback"],[298,55,311,44],[298,57,311,46,"active"],[298,63,311,61],[298,67,311,66],[299,6,312,4,"setIsManualControlActive"],[299,30,312,28],[299,31,312,29,"active"],[299,37,312,35],[299,38,312,36],[300,6,313,4,"console"],[300,13,313,11],[300,14,313,12,"log"],[300,17,313,15],[300,18,313,16],[300,39,313,37,"active"],[300,45,313,43],[300,48,313,46],[300,59,313,57],[300,62,313,60],[300,75,313,73],[300,88,313,86,"active"],[300,94,313,92],[300,97,313,95],[300,105,313,103],[300,108,313,106],[300,117,313,115],[300,119,313,117],[300,120,313,118],[301,4,314,2],[301,5,314,3],[301,7,314,5],[301,9,314,7],[301,10,314,8],[303,4,316,2],[304,4,317,2],[304,8,317,8,"handleProjectileHit"],[304,27,317,27],[304,30,317,31,"projectile"],[304,40,317,59],[304,44,317,64],[305,6,318,4,"console"],[305,13,318,11],[305,14,318,12,"log"],[305,17,318,15],[305,18,318,16],[305,35,318,33,"projectile"],[305,45,318,43],[305,46,318,44,"id"],[305,48,318,46],[305,62,318,60,"projectile"],[305,72,318,70],[305,73,318,71,"targetEnemyId"],[305,86,318,84],[305,94,318,92,"projectile"],[305,104,318,102],[305,105,318,103,"damage"],[305,111,318,109],[305,120,318,118],[305,121,318,119],[306,6,320,4,"setCombatState"],[306,20,320,18],[306,21,320,19,"prev"],[306,25,320,23],[306,29,320,27],[307,8,321,6],[307,12,321,12,"newState"],[307,20,321,20],[307,23,321,23],[308,10,321,25],[308,13,321,28,"prev"],[309,8,321,33],[309,9,321,34],[311,8,323,6],[312,8,324,6],[312,12,324,12,"enemyIndex"],[312,22,324,22],[312,25,324,25,"newState"],[312,33,324,33],[312,34,324,34,"enemies"],[312,41,324,41],[312,42,324,42,"findIndex"],[312,51,324,51],[312,52,324,52,"e"],[312,53,324,53],[312,57,324,57,"e"],[312,58,324,58],[312,59,324,59,"id"],[312,61,324,61],[312,66,324,66,"projectile"],[312,76,324,76],[312,77,324,77,"targetEnemyId"],[312,90,324,90],[312,91,324,91],[313,8,325,6],[313,12,325,10,"enemyIndex"],[313,22,325,20],[313,26,325,24],[313,27,325,25],[313,29,325,27],[314,10,326,8,"newState"],[314,18,326,16],[314,19,326,17,"enemies"],[314,26,326,24],[314,29,326,27],[314,30,326,28],[314,33,326,31,"newState"],[314,41,326,39],[314,42,326,40,"enemies"],[314,49,326,47],[314,50,326,48],[315,10,327,8,"newState"],[315,18,327,16],[315,19,327,17,"enemies"],[315,26,327,24],[315,27,327,25,"enemyIndex"],[315,37,327,35],[315,38,327,36],[315,41,327,39],[316,12,328,10],[316,15,328,13,"newState"],[316,23,328,21],[316,24,328,22,"enemies"],[316,31,328,29],[316,32,328,30,"enemyIndex"],[316,42,328,40],[316,43,328,41],[317,12,329,10,"health"],[317,18,329,16],[317,20,329,18,"newState"],[317,28,329,26],[317,29,329,27,"enemies"],[317,36,329,34],[317,37,329,35,"enemyIndex"],[317,47,329,45],[317,48,329,46],[317,49,329,47,"health"],[317,55,329,53],[317,58,329,56,"projectile"],[317,68,329,66],[317,69,329,67,"damage"],[317,75,329,73],[318,12,330,10,"lastDamaged"],[318,23,330,21],[318,25,330,23,"combatEngine"],[318,44,330,35],[318,45,330,35,"combatEngine"],[318,57,330,35],[318,58,330,36,"getCurrentTick"],[318,72,330,50],[318,73,330,51],[319,10,331,8],[319,11,331,9],[320,10,333,8,"console"],[320,17,333,15],[320,18,333,16,"log"],[320,21,333,19],[320,22,333,20],[320,34,333,32,"projectile"],[320,44,333,42],[320,45,333,43,"targetEnemyId"],[320,58,333,56],[320,70,333,68,"newState"],[320,78,333,76],[320,79,333,77,"enemies"],[320,86,333,84],[320,87,333,85,"enemyIndex"],[320,97,333,95],[320,98,333,96],[320,99,333,97,"health"],[320,105,333,103],[320,109,333,107,"newState"],[320,117,333,115],[320,118,333,116,"enemies"],[320,125,333,123],[320,126,333,124,"enemyIndex"],[320,136,333,134],[320,137,333,135],[320,138,333,136,"maxHealth"],[320,147,333,145],[320,149,333,147],[320,150,333,148],[321,8,334,6],[322,8,336,6],[322,15,336,13,"newState"],[322,23,336,21],[323,6,337,4],[323,7,337,5],[323,8,337,6],[325,6,339,4],[326,6,340,4,"setProjectiles"],[326,20,340,18],[326,21,340,19,"prev"],[326,25,340,23],[326,29,340,27,"prev"],[326,33,340,31],[326,34,340,32,"filter"],[326,40,340,38],[326,41,340,39,"p"],[326,42,340,40],[326,46,340,44,"p"],[326,47,340,45],[326,48,340,46,"id"],[326,50,340,48],[326,55,340,53,"projectile"],[326,65,340,63],[326,66,340,64,"id"],[326,68,340,66],[326,69,340,67],[326,70,340,68],[327,4,341,2],[327,5,341,3],[329,4,343,2],[330,4,344,2],[330,8,344,8,"castAbility"],[330,19,344,19],[330,22,344,22,"castAbility"],[330,23,344,23,"state"],[330,28,344,41],[330,30,344,43,"slotIndex"],[330,39,344,60],[330,44,344,65],[331,6,345,4],[331,10,345,10,"deck"],[331,14,345,14],[331,17,345,17,"state"],[331,22,345,22],[331,23,345,23,"abilityManager"],[331,37,345,37],[331,38,345,38,"getDeck"],[331,45,345,45],[331,46,345,46],[331,47,345,47],[332,6,346,4],[332,10,346,10,"ability"],[332,17,346,17],[332,20,346,20,"deck"],[332,24,346,24],[332,25,346,25,"slots"],[332,30,346,30],[332,31,346,31,"slotIndex"],[332,40,346,40],[332,41,346,41],[333,6,347,4],[333,10,347,8],[333,11,347,9,"ability"],[333,18,347,16],[333,20,347,18],[335,6,349,4],[336,6,350,4],[336,10,350,10,"target"],[336,16,350,16],[336,19,350,19,"findClosestEnemyInternal"],[336,43,350,43],[336,44,350,44,"state"],[336,49,350,49],[336,50,350,50,"enemies"],[336,57,350,57],[336,58,350,58],[337,6,351,4],[337,10,351,8],[337,11,351,9,"target"],[337,17,351,15],[337,19,351,17],[339,6,353,4],[340,6,354,4],[340,10,354,8,"damage"],[340,16,354,14],[340,19,354,17,"ability"],[340,26,354,24],[340,27,354,25,"stats"],[340,32,354,30],[340,33,354,31,"baseDamage"],[340,43,354,41],[342,6,356,4],[343,6,357,4,"deck"],[343,10,357,8],[343,11,357,9,"activeSynergies"],[343,26,357,24],[343,27,357,25,"forEach"],[343,34,357,32],[343,35,357,33,"synergy"],[343,42,357,40],[343,46,357,44],[344,8,358,6],[344,12,358,10,"synergy"],[344,19,358,17],[344,20,358,18,"bonus"],[344,25,358,23],[344,26,358,24,"damageBonus"],[344,37,358,35],[344,41,359,10,"synergy"],[344,48,359,17],[344,49,359,18,"requiredTags"],[344,61,359,30],[344,62,359,31,"some"],[344,66,359,35],[344,67,359,36,"tag"],[344,70,359,39],[344,74,359,43,"ability"],[344,81,359,50],[344,82,359,51,"tags"],[344,86,359,55],[344,87,359,56,"includes"],[344,95,359,64],[344,96,359,65,"tag"],[344,99,359,68],[344,100,359,69],[344,101,359,70],[344,103,359,72],[345,10,360,8,"damage"],[345,16,360,14],[345,20,360,19],[345,21,360,20],[345,24,360,23,"synergy"],[345,31,360,30],[345,32,360,31,"bonus"],[345,37,360,36],[345,38,360,37,"damageBonus"],[345,49,360,48],[345,52,360,51],[345,55,360,55],[346,8,361,6],[347,6,362,4],[347,7,362,5],[347,8,362,6],[349,6,364,4],[350,6,365,4],[350,10,365,10,"damageResult"],[350,22,365,22],[350,25,365,25,"DamageCalculator"],[350,44,365,41],[350,45,365,41,"DamageCalculator"],[350,61,365,41],[350,62,365,42,"calculateDamage"],[350,77,365,57],[350,78,365,58,"damage"],[350,84,365,64],[350,86,365,66,"state"],[350,91,365,71],[350,92,365,72,"playerStats"],[350,103,365,83],[350,105,365,85,"target"],[350,111,365,91],[350,112,365,92,"stats"],[350,117,365,97],[350,118,365,98],[352,6,367,4],[353,6,368,4,"createProjectile"],[353,22,368,20],[353,23,368,21,"target"],[353,29,368,27],[353,31,368,29,"damageResult"],[353,43,368,41],[353,44,368,42,"damage"],[353,50,368,48],[353,52,368,50,"currentNinjaPosition"],[353,72,368,70],[353,73,368,71],[355,6,370,4],[356,6,371,4],[356,10,371,8,"ability"],[356,17,371,15],[356,18,371,16,"effects"],[356,25,371,23],[356,26,371,24,"includes"],[356,34,371,32],[356,35,371,33],[356,40,371,38],[356,41,371,39],[356,45,371,43,"ability"],[356,52,371,50],[356,53,371,51,"stats"],[356,58,371,56],[356,59,371,57,"duration"],[356,67,371,65],[356,69,371,67],[357,8,372,6,"state"],[357,13,372,11],[357,14,372,12,"statusEffects"],[357,27,372,25],[357,28,372,26,"addEffect"],[357,37,372,35],[357,38,372,36,"target"],[357,44,372,42],[357,45,372,43,"id"],[357,47,372,45],[357,49,372,47],[358,10,373,8,"id"],[358,12,373,10],[358,14,373,12],[358,17,373,15,"ability"],[358,24,373,22],[358,25,373,23,"id"],[358,27,373,25],[358,33,373,31],[359,10,374,8,"type"],[359,14,374,12],[359,16,374,14],[359,21,374,19],[360,10,375,8,"remainingTicks"],[360,24,375,22],[360,26,375,24,"Math"],[360,30,375,28],[360,31,375,29,"floor"],[360,36,375,34],[360,37,375,35,"ability"],[360,44,375,42],[360,45,375,43,"stats"],[360,50,375,48],[360,51,375,49,"duration"],[360,59,375,57],[360,62,375,60],[360,64,375,62],[360,65,375,63],[361,10,375,65],[362,10,376,8,"tickInterval"],[362,22,376,20],[362,24,376,22],[362,26,376,24],[363,10,376,26],[364,10,377,8,"lastTick"],[364,18,377,16],[364,20,377,18,"state"],[364,25,377,23],[364,26,377,24,"currentTick"],[364,37,377,35],[365,10,378,8,"value"],[365,15,378,13],[365,17,378,15,"Math"],[365,21,378,19],[365,22,378,20,"floor"],[365,27,378,25],[365,28,378,26,"damage"],[365,34,378,32],[365,37,378,35],[365,40,378,38],[365,41,378,39],[366,10,378,41],[367,10,379,8,"stackable"],[367,19,379,17],[367,21,379,19],[368,8,380,6],[368,9,380,7],[368,10,380,8],[369,6,381,4],[370,6,383,4,"console"],[370,13,383,11],[370,14,383,12,"log"],[370,17,383,15],[370,18,383,16],[370,24,383,22,"ability"],[370,31,383,29],[370,32,383,30,"name"],[370,36,383,34],[370,69,383,67,"damageResult"],[370,81,383,79],[370,82,383,80,"damage"],[370,88,383,86],[370,98,383,96,"damageResult"],[370,110,383,108],[370,111,383,109,"isCritical"],[370,121,383,119],[370,124,383,122],[370,134,383,132],[370,137,383,135],[370,139,383,137],[370,141,383,139],[370,142,383,140],[371,4,384,2],[371,5,384,3],[373,4,386,2],[374,4,387,2],[374,8,387,8,"createProjectile"],[374,24,387,24],[374,27,387,27,"createProjectile"],[374,28,387,28,"targetEnemy"],[374,39,387,52],[374,41,387,54,"damage"],[374,47,387,68],[374,49,387,70,"ninjaPos"],[374,57,387,103],[374,62,387,108],[375,6,388,4],[375,10,388,10,"SCREEN_WIDTH"],[375,22,388,22],[375,25,388,25],[375,28,388,28],[376,6,389,4],[376,10,389,10,"GAME_AREA_HEIGHT"],[376,26,389,26],[376,29,389,29],[376,32,389,32],[376,35,389,35],[376,38,389,38],[376,39,389,39],[376,40,389,40],[377,6,390,4],[377,10,390,10,"NINJA_SIZE"],[377,20,390,20],[377,23,390,23],[377,25,390,25],[379,6,392,4],[380,6,393,4],[380,10,393,10,"ninjaX"],[380,16,393,16],[380,19,393,19,"ninjaPos"],[380,27,393,27],[380,30,393,30,"ninjaPos"],[380,38,393,38],[380,39,393,39,"x"],[380,40,393,40],[380,43,393,43,"NINJA_SIZE"],[380,53,393,53],[380,56,393,56],[380,57,393,57],[380,60,393,60,"SCREEN_WIDTH"],[380,72,393,72],[380,75,393,75],[380,76,393,76],[381,6,394,4],[381,10,394,10,"ninjaY"],[381,16,394,16],[381,19,394,19,"ninjaPos"],[381,27,394,27],[381,30,394,30,"ninjaPos"],[381,38,394,38],[381,39,394,39,"y"],[381,40,394,40],[381,43,394,43,"NINJA_SIZE"],[381,53,394,53],[381,56,394,56],[381,57,394,57],[381,60,394,60,"GAME_AREA_HEIGHT"],[381,76,394,76],[381,79,394,79],[381,80,394,80],[382,6,395,4],[382,10,395,10,"ENEMY_SIZE"],[382,20,395,20],[382,23,395,23],[382,25,395,25],[383,6,397,4],[383,10,397,10,"projectile"],[383,20,397,38],[383,23,397,41],[384,8,398,6,"id"],[384,10,398,8],[384,12,398,10],[384,20,398,18,"Date"],[384,24,398,22],[384,25,398,23,"now"],[384,28,398,26],[384,29,398,27],[384,30,398,28],[384,34,398,32,"Math"],[384,38,398,36],[384,39,398,37,"random"],[384,45,398,43],[384,46,398,44],[384,47,398,45],[384,49,398,47],[385,8,399,6,"x"],[385,9,399,7],[385,11,399,9,"ninjaX"],[385,17,399,15],[386,8,400,6,"y"],[386,9,400,7],[386,11,400,9,"ninjaY"],[386,17,400,15],[387,8,401,6,"targetX"],[387,15,401,13],[387,17,401,15,"targetEnemy"],[387,28,401,26],[387,29,401,27,"position"],[387,37,401,35],[387,38,401,36,"x"],[387,39,401,37],[387,42,401,40,"ENEMY_SIZE"],[387,52,401,50],[387,55,401,53],[387,56,401,54],[388,8,402,6,"targetY"],[388,15,402,13],[388,17,402,15,"targetEnemy"],[388,28,402,26],[388,29,402,27,"position"],[388,37,402,35],[388,38,402,36,"y"],[388,39,402,37],[388,42,402,40,"ENEMY_SIZE"],[388,52,402,50],[388,55,402,53],[388,56,402,54],[389,8,403,6,"targetEnemyId"],[389,21,403,19],[389,23,403,21,"targetEnemy"],[389,34,403,32],[389,35,403,33,"id"],[389,37,403,35],[390,8,404,6,"damage"],[390,14,404,12],[390,16,404,14,"damage"],[390,22,404,20],[391,8,405,6,"startTime"],[391,17,405,15],[391,19,405,17,"Date"],[391,23,405,21],[391,24,405,22,"now"],[391,27,405,25],[391,28,405,26],[391,29,405,27],[392,8,406,6,"duration"],[392,16,406,14],[392,18,406,16],[392,21,406,19],[392,22,406,21],[393,6,407,4],[393,7,407,5],[394,6,409,4,"console"],[394,13,409,11],[394,14,409,12,"log"],[394,17,409,15],[394,18,409,16],[394,53,409,51,"targetEnemy"],[394,64,409,62],[394,65,409,63,"id"],[394,67,409,65],[394,75,409,73,"damage"],[394,81,409,79],[394,90,409,88],[394,91,409,89],[395,6,410,4,"console"],[395,13,410,11],[395,14,410,12,"log"],[395,17,410,15],[395,18,410,16],[395,53,410,51,"ninjaX"],[395,59,410,57],[395,64,410,62,"ninjaY"],[395,70,410,68],[395,87,410,85,"projectile"],[395,97,410,95],[395,98,410,96,"targetX"],[395,105,410,103],[395,110,410,108,"projectile"],[395,120,410,118],[395,121,410,119,"targetY"],[395,128,410,126],[395,131,410,129],[395,132,410,130],[396,6,412,4,"setProjectiles"],[396,20,412,18],[396,21,412,19,"prev"],[396,25,412,23],[396,29,412,27],[396,30,412,28],[396,33,412,31,"prev"],[396,37,412,35],[396,39,412,37,"projectile"],[396,49,412,47],[396,50,412,48],[396,51,412,49],[398,6,414,4],[399,6,415,4,"setTimeout"],[399,16,415,14],[399,17,415,15],[399,23,415,21],[400,8,416,6,"handleProjectileHit"],[400,27,416,25],[400,28,416,26,"projectile"],[400,38,416,36],[400,39,416,37],[401,6,417,4],[401,7,417,5],[401,9,417,7],[401,12,417,10],[401,13,417,11],[402,4,418,2],[402,5,418,3],[404,4,420,2],[405,4,421,2],[405,8,421,8,"spawnTestEnemy"],[405,22,421,22],[405,25,421,26,"state"],[405,30,421,44],[405,34,421,49],[406,6,422,4],[407,6,423,4],[407,10,423,10,"SCREEN_WIDTH"],[407,22,423,22],[407,25,423,25],[407,28,423,28],[407,29,423,29],[407,30,423,30],[408,6,424,4],[408,10,424,10,"GAME_AREA_HEIGHT"],[408,26,424,26],[408,29,424,29],[408,32,424,32],[408,35,424,35],[408,38,424,38],[408,39,424,39],[408,40,424,40],[409,6,425,4],[409,10,425,10,"ENEMY_SIZE"],[409,20,425,20],[409,23,425,23],[409,25,425,25],[411,6,427,4],[412,6,428,4],[412,10,428,10,"x"],[412,11,428,11],[412,14,428,14,"Math"],[412,18,428,18],[412,19,428,19,"random"],[412,25,428,25],[412,26,428,26],[412,27,428,27],[412,31,428,31,"SCREEN_WIDTH"],[412,43,428,43],[412,46,428,46,"ENEMY_SIZE"],[412,56,428,56],[412,59,428,59],[412,60,428,60],[412,61,428,61],[412,64,428,64,"ENEMY_SIZE"],[412,74,428,74],[412,75,428,75],[412,76,428,76],[413,6,429,4],[413,10,429,10,"y"],[413,11,429,11],[413,14,429,14,"Math"],[413,18,429,18],[413,19,429,19,"random"],[413,25,429,25],[413,26,429,26],[413,27,429,27],[413,31,429,31,"GAME_AREA_HEIGHT"],[413,47,429,47],[413,50,429,50,"ENEMY_SIZE"],[413,60,429,60],[413,63,429,63],[413,64,429,64],[413,65,429,65],[413,68,429,68,"ENEMY_SIZE"],[413,78,429,78],[413,79,429,79],[413,80,429,80],[415,6,431,4],[415,10,431,10,"enemy"],[415,15,431,28],[415,18,431,31],[416,8,432,6,"id"],[416,10,432,8],[416,12,432,10],[416,21,432,19],[416,23,432,21,"enemyCounter"],[416,35,432,33],[416,37,432,35],[417,8,433,6,"name"],[417,12,433,10],[417,14,433,12],[417,24,433,22],[418,8,434,6,"health"],[418,14,434,12],[418,16,434,14],[418,19,434,17],[419,8,435,6,"maxHealth"],[419,17,435,15],[419,19,435,17],[419,22,435,20],[420,8,436,6,"stats"],[420,13,436,11],[420,15,436,13],[421,10,437,8,"attack"],[421,16,437,14],[421,18,437,16],[421,20,437,18],[422,10,438,8,"defense"],[422,17,438,15],[422,19,438,17],[422,21,438,19],[423,10,439,8,"health"],[423,16,439,14],[423,18,439,16],[423,21,439,19],[424,10,440,8,"maxHealth"],[424,19,440,17],[424,21,440,19],[424,24,440,22],[425,10,441,8,"critChance"],[425,20,441,18],[425,22,441,20],[425,23,441,21],[426,10,442,8,"critDamage"],[426,20,442,18],[426,22,442,20],[426,25,442,23],[427,10,443,8,"cooldownReduction"],[427,27,443,25],[427,29,443,27],[428,8,444,6],[428,9,444,7],[429,8,445,6,"position"],[429,16,445,14],[429,18,445,16],[430,10,445,18,"x"],[430,11,445,19],[431,10,445,21,"y"],[432,8,445,23],[432,9,445,24],[433,8,446,6,"lastDamaged"],[433,19,446,17],[433,21,446,19],[434,6,447,4],[434,7,447,5],[435,6,449,4,"state"],[435,11,449,9],[435,12,449,10,"enemies"],[435,19,449,17],[435,20,449,18,"push"],[435,24,449,22],[435,25,449,23,"enemy"],[435,30,449,28],[435,31,449,29],[436,4,450,2],[436,5,450,3],[438,4,452,2],[439,4,453,2],[439,8,453,8,"startCombat"],[439,19,453,19],[439,22,453,22,"React"],[439,27,453,27],[439,28,453,27,"default"],[439,35,453,27],[439,36,453,28,"useCallback"],[439,47,453,39],[439,48,453,40],[439,54,453,46],[440,6,454,4,"console"],[440,13,454,11],[440,14,454,12,"log"],[440,17,454,15],[440,18,454,16],[440,63,454,61],[440,64,454,62],[441,6,455,4,"setCombatState"],[441,20,455,18],[441,21,455,19,"prev"],[441,25,455,23],[441,30,455,28],[442,8,455,30],[442,11,455,33,"prev"],[442,15,455,37],[443,8,455,39,"isInCombat"],[443,18,455,49],[443,20,455,51],[444,6,455,56],[444,7,455,57],[444,8,455,58],[444,9,455,59],[446,6,457,4],[447,6,458,4,"combatEngine"],[447,25,458,16],[447,26,458,16,"combatEngine"],[447,38,458,16],[447,39,458,17,"addTickCallback"],[447,54,458,32],[447,55,458,33,"handleCombatTick"],[447,71,458,49],[447,72,458,50],[448,6,459,4,"console"],[448,13,459,11],[448,14,459,12,"log"],[448,17,459,15],[448,18,459,16],[448,62,459,60],[448,63,459,61],[450,6,461,4],[451,6,462,4,"combatEngine"],[451,25,462,16],[451,26,462,16,"combatEngine"],[451,38,462,16],[451,39,462,17,"start"],[451,44,462,22],[451,45,462,23],[451,46,462,24],[452,4,463,2],[452,5,463,3],[452,7,463,5],[452,8,463,6,"combatEngine"],[452,27,463,18],[452,28,463,18,"combatEngine"],[452,40,463,18],[452,42,463,20,"handleCombatTick"],[452,58,463,36],[452,59,463,37],[452,60,463,38],[454,4,465,2],[455,4,466,2],[455,8,466,8,"stopCombat"],[455,18,466,18],[455,21,466,21,"React"],[455,26,466,26],[455,27,466,26,"default"],[455,34,466,26],[455,35,466,27,"useCallback"],[455,46,466,38],[455,47,466,39],[455,53,466,45],[456,6,467,4,"setCombatState"],[456,20,467,18],[456,21,467,19,"prev"],[456,25,467,23],[456,30,467,28],[457,8,467,30],[457,11,467,33,"prev"],[457,15,467,37],[458,8,467,39,"isInCombat"],[458,18,467,49],[458,20,467,51],[459,6,467,57],[459,7,467,58],[459,8,467,59],[459,9,467,60],[460,6,468,4,"combatEngine"],[460,25,468,16],[460,26,468,16,"combatEngine"],[460,38,468,16],[460,39,468,17,"removeTickCallback"],[460,57,468,35],[460,58,468,36,"handleCombatTick"],[460,74,468,52],[460,75,468,53],[461,4,469,2],[461,5,469,3],[461,7,469,5],[461,8,469,6,"combatEngine"],[461,27,469,18],[461,28,469,18,"combatEngine"],[461,40,469,18],[461,42,469,20,"handleCombatTick"],[461,58,469,36],[461,59,469,37],[461,60,469,38],[463,4,471,2],[464,4,472,2],[464,8,472,8,"equipAbility"],[464,20,472,20],[464,23,472,23,"equipAbility"],[464,24,472,24,"abilityId"],[464,33,472,41],[464,35,472,43,"slotIndex"],[464,44,472,60],[464,49,472,74],[465,6,473,4],[465,13,473,11,"combatState"],[465,24,473,22],[465,25,473,23,"abilityManager"],[465,39,473,37],[465,40,473,38,"equipAbility"],[465,52,473,50],[465,53,473,51,"abilityId"],[465,62,473,60],[465,64,473,62,"slotIndex"],[465,73,473,71],[465,74,473,72],[466,4,474,2],[466,5,474,3],[467,4,476,2],[467,8,476,8,"getDeck"],[467,15,476,15],[467,18,476,18,"getDeck"],[467,19,476,18],[467,24,476,24],[468,6,477,4],[468,13,477,11,"combatState"],[468,24,477,22],[468,25,477,23,"abilityManager"],[468,39,477,37],[468,40,477,38,"getDeck"],[468,47,477,45],[468,48,477,46],[468,49,477,47],[469,4,478,2],[469,5,478,3],[470,4,480,2],[470,8,480,8,"getAvailableAbilities"],[470,29,480,29],[470,32,480,32,"getAvailableAbilities"],[470,33,480,32],[470,38,480,38],[471,6,481,4],[471,13,481,11,"combatState"],[471,24,481,22],[471,25,481,23,"abilityManager"],[471,39,481,37],[471,40,481,38,"getAvailableAbilities"],[471,61,481,59],[471,62,481,60],[471,63,481,61],[472,4,482,2],[472,5,482,3],[473,4,484,2],[473,8,484,8,"upgradeAbility"],[473,22,484,22],[473,25,484,26,"abilityId"],[473,34,484,43],[473,38,484,57],[474,6,485,4],[474,13,485,11,"combatState"],[474,24,485,22],[474,25,485,23,"abilityManager"],[474,39,485,37],[474,40,485,38,"upgradeAbility"],[474,54,485,52],[474,55,485,53,"abilityId"],[474,64,485,62],[474,65,485,63],[475,4,486,2],[475,5,486,3],[477,4,488,2],[478,4,489,2],[478,8,489,8,"clearAllEnemies"],[478,23,489,23],[478,26,489,26,"clearAllEnemies"],[478,27,489,26],[478,32,489,32],[479,6,490,4,"console"],[479,13,490,11],[479,14,490,12,"log"],[479,17,490,15],[479,18,490,16],[479,67,490,65],[479,68,490,66],[480,6,491,4,"setCombatState"],[480,20,491,18],[480,21,491,19,"prev"],[480,25,491,23],[480,30,491,28],[481,8,492,6],[481,11,492,9,"prev"],[481,15,492,13],[482,8,493,6,"enemies"],[482,15,493,13],[482,17,493,15],[483,6,494,4],[483,7,494,5],[483,8,494,6],[483,9,494,7],[484,4,495,2],[484,5,495,3],[486,4,497,2],[487,4,498,2],[487,8,498,8,"triggerLevelUpExplosion"],[487,31,498,31],[487,34,498,34,"triggerLevelUpExplosion"],[487,35,498,34],[487,40,498,40],[488,6,499,4,"console"],[488,13,499,11],[488,14,499,12,"log"],[488,17,499,15],[488,18,499,16],[488,70,499,68],[488,71,499,69],[489,6,501,4],[489,10,501,10,"explosionTime"],[489,23,501,23],[489,26,501,26,"Date"],[489,30,501,30],[489,31,501,31,"now"],[489,34,501,34],[489,35,501,35],[489,36,501,36],[490,6,502,4,"setLastExplosionTime"],[490,26,502,24],[490,27,502,25,"explosionTime"],[490,40,502,38],[490,41,502,39],[491,6,504,4,"setCombatState"],[491,20,504,18],[491,21,504,19,"prev"],[491,25,504,23],[491,29,504,27],[492,8,505,6],[493,8,506,6],[493,12,506,12,"enemyCount"],[493,22,506,22],[493,25,506,25,"prev"],[493,29,506,29],[493,30,506,30,"enemies"],[493,37,506,37],[493,38,506,38,"length"],[493,44,506,44],[494,8,507,6],[494,12,507,12,"explosionXP"],[494,23,507,23],[494,26,507,26,"enemyCount"],[494,36,507,36],[494,39,507,39],[494,41,507,41],[494,42,507,42],[494,43,507,43],[495,8,508,6],[495,12,508,12,"explosionGold"],[495,25,508,25],[495,28,508,28,"enemyCount"],[495,38,508,38],[495,41,508,41],[495,42,508,42],[495,43,508,43],[495,44,508,44],[497,8,510,6,"console"],[497,15,510,13],[497,16,510,14,"log"],[497,19,510,17],[497,20,510,18],[497,44,510,42,"enemyCount"],[497,54,510,52],[497,76,510,74,"explosionXP"],[497,87,510,85],[497,98,510,96,"explosionGold"],[497,111,510,109],[497,118,510,116],[497,119,510,117],[499,8,512,6],[500,8,513,6],[500,12,513,10,"explosionXP"],[500,23,513,21],[500,26,513,24],[500,27,513,25],[500,29,513,27],[501,10,514,8,"setTimeout"],[501,20,514,18],[501,21,514,19],[501,27,514,25],[502,12,515,10,"updateNinja"],[502,23,515,21],[502,24,515,23,"ninja"],[502,29,515,28],[502,34,515,34],[503,14,516,12,"experience"],[503,24,516,22],[503,26,516,24,"ninja"],[503,31,516,29],[503,32,516,30,"experience"],[503,42,516,40],[503,45,516,43,"explosionXP"],[503,56,516,54],[504,14,517,12,"gold"],[504,18,517,16],[504,20,517,18,"ninja"],[504,25,517,23],[504,26,517,24,"gold"],[504,30,517,28],[504,33,517,31,"explosionGold"],[505,12,518,10],[505,13,518,11],[505,14,518,12],[505,15,518,13],[506,10,519,8],[506,11,519,9],[506,13,519,11],[506,14,519,12],[506,15,519,13],[506,16,519,14],[506,17,519,15],[507,8,520,6],[509,8,522,6],[510,8,523,6],[511,8,524,6],[511,12,524,12,"damagedEnemies"],[511,26,524,26],[511,29,524,29,"prev"],[511,33,524,33],[511,34,524,34,"enemies"],[511,41,524,41],[511,42,524,42,"map"],[511,45,524,45],[511,46,524,46,"enemy"],[511,51,524,51],[511,56,524,56],[512,10,525,8],[512,13,525,11,"enemy"],[512,18,525,16],[513,10,526,8,"health"],[513,16,526,14],[513,18,526,16],[513,19,526,17],[514,10,526,19],[515,10,527,8,"lastDamaged"],[515,21,527,19],[515,23,527,21,"combatEngine"],[515,42,527,33],[515,43,527,33,"combatEngine"],[515,55,527,33],[515,56,527,34,"getCurrentTick"],[515,70,527,48],[515,71,527,49],[516,8,528,6],[516,9,528,7],[516,10,528,8],[516,11,528,9],[517,8,530,6],[517,15,530,13],[518,10,531,8],[518,13,531,11,"prev"],[518,17,531,15],[519,10,532,8,"enemies"],[519,17,532,15],[519,19,532,17,"damagedEnemies"],[520,8,533,6],[520,9,533,7],[521,6,534,4],[521,7,534,5],[521,8,534,6],[522,4,535,2],[522,5,535,3],[524,4,537,2],[525,4,538,2],[525,8,538,8,"spawnEnemy"],[525,18,538,18],[525,21,538,22,"position"],[525,29,538,57],[525,33,538,75],[526,6,539,4],[526,10,539,10,"SCREEN_WIDTH"],[526,22,539,22],[526,25,539,25],[526,28,539,28],[527,6,540,4],[527,10,540,10,"GAME_AREA_HEIGHT"],[527,26,540,26],[527,29,540,29],[527,32,540,32],[527,35,540,35],[527,38,540,38],[527,39,540,39],[527,40,540,40],[528,6,541,4],[528,10,541,10,"ENEMY_SIZE"],[528,20,541,20],[528,23,541,23],[528,25,541,25],[530,6,543,4],[531,6,544,4],[531,10,544,10,"x"],[531,11,544,11],[531,14,544,14,"position"],[531,22,544,22],[531,24,544,24,"x"],[531,25,544,25],[531,29,544,29,"Math"],[531,33,544,33],[531,34,544,34,"random"],[531,40,544,40],[531,41,544,41],[531,42,544,42],[531,46,544,46,"SCREEN_WIDTH"],[531,58,544,58],[531,61,544,61,"ENEMY_SIZE"],[531,71,544,71],[531,74,544,74],[531,75,544,75],[531,76,544,76],[531,79,544,79,"ENEMY_SIZE"],[531,89,544,89],[532,6,545,4],[532,10,545,10,"y"],[532,11,545,11],[532,14,545,14,"position"],[532,22,545,22],[532,24,545,24,"y"],[532,25,545,25],[532,29,545,29,"Math"],[532,33,545,33],[532,34,545,34,"random"],[532,40,545,40],[532,41,545,41],[532,42,545,42],[532,46,545,46,"GAME_AREA_HEIGHT"],[532,62,545,62],[532,65,545,65,"ENEMY_SIZE"],[532,75,545,75],[532,78,545,78],[532,79,545,79],[532,80,545,80],[532,83,545,83,"ENEMY_SIZE"],[532,93,545,93],[533,6,547,4],[533,10,547,10,"enemy"],[533,15,547,28],[533,18,547,31],[534,8,548,6,"id"],[534,10,548,8],[534,12,548,10],[534,21,548,19],[534,23,548,21,"enemyCounter"],[534,35,548,33],[534,37,548,35],[535,8,549,6,"name"],[535,12,549,10],[535,14,549,12],[535,24,549,22],[536,8,550,6,"health"],[536,14,550,12],[536,16,550,14],[536,19,550,17],[537,8,551,6,"maxHealth"],[537,17,551,15],[537,19,551,17],[537,22,551,20],[538,8,552,6,"stats"],[538,13,552,11],[538,15,552,13],[539,10,553,8,"attack"],[539,16,553,14],[539,18,553,16],[539,20,553,18],[540,10,554,8,"defense"],[540,17,554,15],[540,19,554,17],[540,21,554,19],[541,10,555,8,"health"],[541,16,555,14],[541,18,555,16],[541,21,555,19],[542,10,556,8,"maxHealth"],[542,19,556,17],[542,21,556,19],[542,24,556,22],[543,10,557,8,"critChance"],[543,20,557,18],[543,22,557,20],[543,23,557,21],[544,10,558,8,"critDamage"],[544,20,558,18],[544,22,558,20],[544,25,558,23],[545,10,559,8,"cooldownReduction"],[545,27,559,25],[545,29,559,27],[546,8,560,6],[546,9,560,7],[547,8,561,6,"position"],[547,16,561,14],[547,18,561,16],[548,10,561,18,"x"],[548,11,561,19],[549,10,561,21,"y"],[550,8,561,23],[550,9,561,24],[551,8,562,6,"lastDamaged"],[551,19,562,17],[551,21,562,19],[552,6,563,4],[552,7,563,5],[553,6,565,4,"setCombatState"],[553,20,565,18],[553,21,565,19,"prev"],[553,25,565,23],[553,30,565,28],[554,8,566,6],[554,11,566,9,"prev"],[554,15,566,13],[555,8,567,6,"enemies"],[555,15,567,13],[555,17,567,15],[555,18,567,16],[555,21,567,19,"prev"],[555,25,567,23],[555,26,567,24,"enemies"],[555,33,567,31],[555,35,567,33,"enemy"],[555,40,567,38],[556,6,568,4],[556,7,568,5],[556,8,568,6],[556,9,568,7],[557,6,570,4],[557,13,570,11,"enemy"],[557,18,570,16],[558,4,571,2],[558,5,571,3],[560,4,573,2],[561,4,574,2],[561,8,574,8,"spawnBoss"],[561,17,574,17],[561,20,574,21,"bossEnemy"],[561,29,574,43],[561,33,574,48],[562,6,575,4,"console"],[562,13,575,11],[562,14,575,12,"log"],[562,17,575,15],[562,18,575,16],[562,39,575,37,"bossEnemy"],[562,48,575,46],[562,49,575,47,"name"],[562,53,575,51],[562,90,575,88],[562,91,575,89],[563,6,576,4,"setCombatState"],[563,20,576,18],[563,21,576,19,"prev"],[563,25,576,23],[563,30,576,28],[564,8,577,6],[564,11,577,9,"prev"],[564,15,577,13],[565,8,578,6,"enemies"],[565,15,578,13],[565,17,578,15],[565,18,578,16,"bossEnemy"],[565,27,578,25],[565,28,578,26],[565,29,578,27],[566,6,579,4],[566,7,579,5],[566,8,579,6],[566,9,579,7],[567,4,580,2],[567,5,580,3],[569,4,582,2],[570,4,583,2],[570,8,583,8,"clearSpecificEnemy"],[570,26,583,26],[570,29,583,30,"enemyId"],[570,36,583,45],[570,40,583,50],[571,6,584,4,"setCombatState"],[571,20,584,18],[571,21,584,19,"prev"],[571,25,584,23],[571,30,584,28],[572,8,585,6],[572,11,585,9,"prev"],[572,15,585,13],[573,8,586,6,"enemies"],[573,15,586,13],[573,17,586,15,"prev"],[573,21,586,19],[573,22,586,20,"enemies"],[573,29,586,27],[573,30,586,28,"filter"],[573,36,586,34],[573,37,586,35,"enemy"],[573,42,586,40],[573,46,586,44,"enemy"],[573,51,586,49],[573,52,586,50,"id"],[573,54,586,52],[573,59,586,57,"enemyId"],[573,66,586,64],[574,6,587,4],[574,7,587,5],[574,8,587,6],[574,9,587,7],[575,4,588,2],[575,5,588,3],[577,4,590,2],[578,4,591,2],[578,8,591,8,"useAbilityManually"],[578,26,591,26],[578,29,591,26,"_s3"],[578,32,591,26],[578,33,591,29],[578,37,591,29,"useCallback"],[578,43,591,40],[578,44,591,40,"useCallback"],[578,55,591,40],[578,57,591,40,"_s3"],[578,60,591,40],[578,61,591,42,"slotIndex"],[578,70,591,59],[578,74,591,73],[579,6,591,73,"_s3"],[579,9,591,73],[580,6,592,4,"console"],[580,13,592,11],[580,14,592,12,"log"],[580,17,592,15],[580,18,592,16],[580,53,592,51,"slotIndex"],[580,62,592,60],[580,64,592,62],[580,65,592,63],[582,6,594,4],[583,6,595,4],[583,10,595,10,"isReady"],[583,17,595,17],[583,20,595,20,"combatState"],[583,31,595,31],[583,32,595,32,"abilityManager"],[583,46,595,46],[583,47,595,47,"isAbilityReady"],[583,61,595,61],[583,62,595,62,"slotIndex"],[583,71,595,71],[583,72,595,72],[584,6,596,4],[584,10,596,8],[584,11,596,9,"isReady"],[584,18,596,16],[584,20,596,18],[585,8,597,6,"console"],[585,15,597,13],[585,16,597,14,"log"],[585,19,597,17],[585,20,597,18],[585,41,597,39,"slotIndex"],[585,50,597,48],[585,85,597,83],[585,86,597,84],[586,8,598,6],[586,15,598,13],[586,20,598,18],[587,6,599,4],[589,6,601,4],[590,6,602,4],[590,10,602,8,"combatState"],[590,21,602,19],[590,22,602,20,"enemies"],[590,29,602,27],[590,30,602,28,"length"],[590,36,602,34],[590,41,602,39],[590,42,602,40],[590,44,602,42],[591,8,603,6,"console"],[591,15,603,13],[591,16,603,14,"log"],[591,19,603,17],[591,20,603,18],[591,69,603,67],[591,70,603,68],[592,8,604,6],[592,15,604,13],[592,20,604,18],[593,6,605,4],[595,6,607,4],[596,6,608,4],[596,10,608,10,"currentTick"],[596,21,608,21],[596,24,608,24,"combatEngine"],[596,43,608,36],[596,44,608,36,"combatEngine"],[596,56,608,36],[596,57,608,37,"getCurrentTick"],[596,71,608,51],[596,72,608,52],[596,73,608,53],[597,6,609,4],[597,10,609,10,"success"],[597,17,609,17],[597,20,609,20,"combatState"],[597,31,609,31],[597,32,609,32,"abilityManager"],[597,46,609,46],[597,47,609,47,"useAbility"],[597,57,609,57],[597,58,609,58,"slotIndex"],[597,67,609,67],[597,69,609,69,"currentTick"],[597,80,609,80],[597,81,609,81],[598,6,611,4],[598,10,611,8,"success"],[598,17,611,15],[598,19,611,17],[599,8,612,6],[600,8,613,6,"setCombatState"],[600,22,613,20],[600,23,613,21,"prev"],[600,27,613,25],[600,31,613,29],[601,10,614,8],[601,14,614,14,"newState"],[601,22,614,22],[601,25,614,25],[602,12,614,27],[602,15,614,30,"prev"],[603,10,614,35],[603,11,614,36],[604,10,615,8,"castAbility"],[604,21,615,19],[604,22,615,20,"newState"],[604,30,615,28],[604,32,615,30,"slotIndex"],[604,41,615,39],[604,42,615,40],[605,10,616,8],[605,17,616,15,"newState"],[605,25,616,23],[606,8,617,6],[606,9,617,7],[606,10,617,8],[607,8,619,6,"console"],[607,15,619,13],[607,16,619,14,"log"],[607,19,619,17],[607,20,619,18],[607,65,619,63,"slotIndex"],[607,74,619,72],[607,76,619,74],[607,77,619,75],[608,8,620,6],[608,15,620,13],[608,19,620,17],[609,6,621,4],[609,7,621,5],[609,13,621,11],[610,8,622,6,"console"],[610,15,622,13],[610,16,622,14,"log"],[610,19,622,17],[610,20,622,18],[610,61,622,59,"slotIndex"],[610,70,622,68],[610,72,622,70],[610,73,622,71],[611,8,623,6],[611,15,623,13],[611,20,623,18],[612,6,624,4],[613,4,625,2],[613,5,625,3],[613,46,625,5],[613,47,625,6,"combatState"],[613,58,625,17],[613,59,625,18,"abilityManager"],[613,73,625,32],[613,75,625,34,"combatState"],[613,86,625,45],[613,87,625,46,"enemies"],[613,94,625,53],[613,95,625,54],[613,96,625,55],[614,4,626,2],[614,8,626,2,"useEffect"],[614,14,626,11],[614,15,626,11,"useEffect"],[614,24,626,11],[614,26,626,12],[614,32,626,18],[615,6,627,4,"combatEngine"],[615,25,627,16],[615,26,627,16,"combatEngine"],[615,38,627,16],[615,39,627,17,"start"],[615,44,627,22],[615,45,627,23],[615,46,627,24],[617,6,629,4],[618,6,630,4],[619,6,631,4,"console"],[619,13,631,11],[619,14,631,12,"log"],[619,17,631,15],[619,18,631,16],[619,97,631,95],[619,98,631,96],[620,6,633,4],[620,13,633,11],[620,19,633,17],[621,8,634,6,"combatEngine"],[621,27,634,18],[621,28,634,18,"combatEngine"],[621,40,634,18],[621,41,634,19,"stop"],[621,45,634,23],[621,46,634,24],[621,47,634,25],[622,6,635,4],[622,7,635,5],[623,4,636,2],[623,5,636,3],[623,7,636,5],[623,9,636,7],[623,10,636,8],[624,4,638,2],[624,8,638,8,"contextValue"],[624,20,638,39],[624,23,638,42,"React"],[624,28,638,47],[624,29,638,47,"default"],[624,36,638,47],[624,37,638,48,"useMemo"],[624,44,638,55],[624,45,638,56],[624,52,638,63],[625,6,639,4,"combatState"],[625,17,639,15],[626,6,640,4,"projectiles"],[626,17,640,15],[627,6,641,4,"startCombat"],[627,17,641,15],[628,6,642,4,"stopCombat"],[628,16,642,14],[629,6,643,4,"equipAbility"],[629,18,643,16],[630,6,644,4,"handleEnemyKill"],[630,21,644,19],[631,6,645,4,"getDeck"],[631,13,645,11],[632,6,646,4,"getAvailableAbilities"],[632,27,646,25],[633,6,647,4,"upgradeAbility"],[633,20,647,18],[634,6,648,4,"spawnEnemy"],[634,16,648,14],[635,6,649,4,"spawnBoss"],[635,15,649,13],[636,6,650,4,"clearAllEnemies"],[636,21,650,19],[637,6,651,4,"clearSpecificEnemy"],[637,24,651,22],[638,6,652,4,"triggerLevelUpExplosion"],[638,29,652,27],[639,6,653,4,"findClosestEnemy"],[639,22,653,20],[640,6,654,4,"updateNinjaPosition"],[640,25,654,23],[641,6,655,4,"setManualControlActive"],[641,28,655,26],[642,6,656,4,"lastExplosionTime"],[642,23,656,21],[643,6,657,4,"useAbilityManually"],[643,24,657,22],[643,25,657,24],[644,4,658,2],[644,5,658,3],[644,6,658,4],[644,8,658,6],[645,4,659,4],[646,4,660,4],[647,4,661,4,"combatState"],[647,15,661,15],[647,17,662,4,"projectiles"],[647,28,662,15],[647,30,663,4,"lastExplosionTime"],[647,47,663,21],[648,4,664,4],[649,4,665,4,"combatState"],[649,15,665,15],[649,16,665,16,"abilityManager"],[649,30,665,30],[649,32,666,4,"combatState"],[649,43,666,15],[649,44,666,16,"enemies"],[649,51,666,23],[649,53,667,4,"useAbilityManually"],[649,71,667,22],[649,72,667,24],[650,4,667,24],[650,5,668,3],[650,6,668,4],[651,4,670,2],[651,24,671,4],[651,28,671,4,"_reactJsxDevRuntime"],[651,47,671,4],[651,48,671,4,"jsxDEV"],[651,54,671,4],[651,56,671,5,"CombatContext"],[651,69,671,18],[651,70,671,19,"Provider"],[651,78,671,27],[652,6,671,28,"value"],[652,11,671,33],[652,13,671,35,"contextValue"],[652,25,671,48],[653,6,671,48,"children"],[653,14,671,48],[653,16,672,7,"children"],[654,4,672,15],[655,6,672,15,"fileName"],[655,14,672,15],[655,16,672,15,"_jsxFileName"],[655,28,672,15],[656,6,672,15,"lineNumber"],[656,16,672,15],[657,6,672,15,"columnNumber"],[657,18,672,15],[658,4,672,15],[658,11,673,28],[658,12,673,29],[659,2,675,0],[659,3,675,1],[660,2,675,2,"_s4"],[660,5,675,2],[660,6,81,13,"CombatProvider"],[660,20,81,27],[661,4,81,27],[661,12,82,26,"useGame"],[661,24,82,33],[661,25,82,33,"useGame"],[661,32,82,33],[661,34,83,30,"useZone"],[661,46,83,37],[661,47,83,37,"useZone"],[661,54,83,37],[662,2,83,37],[663,2,83,37,"_c"],[663,4,83,37],[663,7,81,13,"CombatProvider"],[663,21,81,27],[664,2,81,27],[664,6,81,27,"_c"],[664,8,81,27],[665,2,81,27,"$RefreshReg$"],[665,14,81,27],[665,15,81,27,"_c"],[665,17,81,27],[666,0,81,27],[666,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCsE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;yCuCG;qBlCsB;OkCI;GvCQ;YwCC;WCO;KDE;GxCC;wD0CE;I1CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}