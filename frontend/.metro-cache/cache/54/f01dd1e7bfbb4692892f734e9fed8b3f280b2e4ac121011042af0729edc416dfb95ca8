{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1070,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1121,2],[27,6,1121,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1121,2],[27,42,1121,2,"require"],[27,49,1121,2],[27,50,1121,2,"_dependencyMap"],[27,64,1121,2],[28,2,1121,2],[28,6,1121,2,"_slicedToArray"],[28,20,1121,2],[28,23,1121,2,"_interopDefault"],[28,38,1121,2],[28,39,1121,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1121,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"maxHealth"],[224,189,256,71],[224,191,256,73],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"maxHealth"],[225,252,258,250],[225,254,258,252],[225,255,258,253],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"maxHealth"],[229,75,262,73],[229,77,262,75],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"maxHealth"],[231,42,264,40],[231,45,264,43,"newState"],[231,53,264,51],[231,54,264,52,"playerStats"],[231,65,264,63],[231,66,264,64,"maxHealth"],[231,75,264,73],[231,78,264,76],[231,81,264,79],[231,83,264,81],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"maxHealth"],[234,63,268,61],[234,66,268,64,"healthRatio"],[234,77,268,75],[234,78,268,76],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"maxHealth"],[235,79,269,77],[235,81,269,79],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"maxHealth"],[237,52,271,50],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"maxHealth"],[245,49,280,47],[246,14,280,49],[247,14,281,12,"health"],[247,20,281,18],[247,22,281,20,"newHealth"],[247,31,281,29],[248,14,281,31],[249,14,282,12,"critChance"],[249,24,282,22],[249,26,282,24,"effectiveStats"],[249,40,282,38],[249,41,282,39,"critChance"],[249,51,282,49],[249,55,282,53,"newState"],[249,63,282,61],[249,64,282,62,"playerStats"],[249,75,282,73],[249,76,282,74,"critChance"],[249,86,282,84],[250,14,283,12,"critDamage"],[250,24,283,22],[250,26,283,24,"effectiveStats"],[250,40,283,38],[250,41,283,39,"critDamage"],[250,51,283,49],[250,55,283,53,"newState"],[250,63,283,61],[250,64,283,62,"playerStats"],[250,75,283,73],[250,76,283,74,"critDamage"],[250,86,283,84],[251,14,284,12,"cooldownReduction"],[251,31,284,29],[251,33,284,31,"effectiveStats"],[251,47,284,45],[251,48,284,46,"cooldownReduction"],[251,65,284,63],[251,69,284,67,"newState"],[251,77,284,75],[251,78,284,76,"playerStats"],[251,89,284,87],[251,90,284,88,"cooldownReduction"],[252,12,285,10],[252,13,285,11],[253,10,286,8],[255,10,288,8],[256,10,289,8],[256,14,289,12,"game"],[256,18,289,16],[256,19,289,17,"gameState"],[256,28,289,26],[256,29,289,27,"isAlive"],[256,36,289,34],[256,40,290,12,"game"],[256,44,290,16],[256,45,290,17,"gameState"],[256,54,290,26],[256,55,290,27,"ninja"],[256,60,290,32],[256,61,290,33,"health"],[256,67,290,39],[256,72,290,44,"effectiveStats"],[256,86,290,58],[256,87,290,59,"maxHealth"],[256,96,290,68],[256,100,291,12,"newState"],[256,108,291,20],[256,109,291,21,"playerStats"],[256,120,291,32],[256,121,291,33,"health"],[256,127,291,39],[256,130,291,42,"effectiveStats"],[256,144,291,56],[256,145,291,57,"maxHealth"],[256,154,291,66],[256,157,291,69],[256,160,291,72],[256,162,291,74],[257,12,292,10,"console"],[257,19,292,17],[257,20,292,18,"log"],[257,23,292,21],[257,24,292,22],[257,58,292,56,"newState"],[257,66,292,64],[257,67,292,65,"playerStats"],[257,78,292,76],[257,79,292,77,"health"],[257,85,292,83],[257,91,292,89,"game"],[257,95,292,93],[257,96,292,94,"gameState"],[257,105,292,103],[257,106,292,104,"ninja"],[257,111,292,109],[257,112,292,110,"health"],[257,118,292,116],[257,139,292,137],[257,140,292,138],[258,12,293,10,"newState"],[258,20,293,18],[258,21,293,19,"playerStats"],[258,32,293,30],[258,33,293,31,"health"],[258,39,293,37],[258,42,293,40,"game"],[258,46,293,44],[258,47,293,45,"gameState"],[258,56,293,54],[258,57,293,55,"ninja"],[258,62,293,60],[258,63,293,61,"health"],[258,69,293,67],[259,10,294,8],[260,8,295,6],[262,8,297,6],[263,8,298,6,"newState"],[263,16,298,14],[263,17,298,15,"enemies"],[263,24,298,22],[263,25,298,23,"forEach"],[263,32,298,30],[263,33,298,31,"enemy"],[263,38,298,36],[263,42,298,40],[264,10,299,8],[264,14,299,12],[264,15,299,13,"enemy"],[264,20,299,18],[264,21,299,19,"isBoss"],[264,27,299,25],[264,29,299,27],[265,12,299,29],[266,12,300,10],[267,12,301,10],[267,16,301,16,"MOVEMENT_SPEED"],[267,30,301,30],[267,33,301,33],[267,37,301,37],[267,38,301,38],[267,39,301,39],[268,12,302,10],[268,16,302,16,"SCREEN_WIDTH"],[268,28,302,28],[268,31,302,31],[268,34,302,34],[269,12,303,10],[269,16,303,16,"GAME_AREA_HEIGHT"],[269,32,303,32],[269,35,303,35],[269,38,303,38],[269,39,303,39],[269,40,303,40],[270,12,304,10],[270,16,304,16,"ENEMY_SIZE"],[270,26,304,26],[270,29,304,29],[270,31,304,31],[272,12,306,10],[273,12,307,10],[273,16,307,16,"playerX"],[273,23,307,23],[273,26,307,26,"currentNinjaPosition"],[273,46,307,46],[273,47,307,47,"x"],[273,48,307,48],[274,12,308,10],[274,16,308,16,"playerY"],[274,23,308,23],[274,26,308,26,"currentNinjaPosition"],[274,46,308,46],[274,47,308,47,"y"],[274,48,308,48],[276,12,310,10],[277,12,311,10],[277,16,311,16,"deltaX"],[277,22,311,22],[277,25,311,25,"playerX"],[277,32,311,32],[277,35,311,35,"enemy"],[277,40,311,40],[277,41,311,41,"position"],[277,49,311,49],[277,50,311,50,"x"],[277,51,311,51],[278,12,312,10],[278,16,312,16,"deltaY"],[278,22,312,22],[278,25,312,25,"playerY"],[278,32,312,32],[278,35,312,35,"enemy"],[278,40,312,40],[278,41,312,41,"position"],[278,49,312,49],[278,50,312,50,"y"],[278,51,312,51],[279,12,313,10],[279,16,313,16,"distance"],[279,24,313,24],[279,27,313,27,"Math"],[279,31,313,31],[279,32,313,32,"sqrt"],[279,36,313,36],[279,37,313,37,"deltaX"],[279,43,313,43],[279,46,313,46,"deltaX"],[279,52,313,52],[279,55,313,55,"deltaY"],[279,61,313,61],[279,64,313,64,"deltaY"],[279,70,313,70],[279,71,313,71],[281,12,315,10],[282,12,316,10],[282,16,316,16,"ATTACK_RANGE"],[282,28,316,28],[282,31,316,31],[282,33,316,33],[282,34,316,34],[282,35,316,35],[283,12,317,10],[283,16,317,16,"ATTACK_COOLDOWN"],[283,31,317,31],[283,34,317,34],[283,36,317,36],[283,37,317,37],[283,38,317,38],[285,12,319,10],[285,16,319,14,"distance"],[285,24,319,22],[285,28,319,26,"ATTACK_RANGE"],[285,40,319,38],[285,42,319,40],[286,14,320,12],[287,14,321,12],[287,18,321,16],[287,19,321,17,"enemy"],[287,24,321,22],[287,25,321,23,"lastAttackTick"],[287,39,321,37],[287,41,321,39,"enemy"],[287,46,321,44],[287,47,321,45,"lastAttackTick"],[287,61,321,59],[287,64,321,62],[287,65,321,63],[288,14,323,12],[288,18,323,16,"newState"],[288,26,323,24],[288,27,323,25,"currentTick"],[288,38,323,36],[288,41,323,39,"enemy"],[288,46,323,44],[288,47,323,45,"lastAttackTick"],[288,61,323,59],[288,65,323,63,"ATTACK_COOLDOWN"],[288,80,323,78],[288,82,323,80],[289,16,324,14],[290,16,325,14],[290,20,325,18],[290,21,325,19,"game"],[290,25,325,23],[290,26,325,24,"gameState"],[290,35,325,33],[290,36,325,34,"isAlive"],[290,43,325,41],[290,45,325,43],[291,18,326,16,"console"],[291,25,326,23],[291,26,326,24,"log"],[291,29,326,27],[291,30,326,28],[291,49,326,47,"enemy"],[291,54,326,52],[291,55,326,53,"name"],[291,59,326,57],[291,93,326,91],[291,94,326,92],[292,18,327,16],[293,18,328,16,"enemy"],[293,23,328,21],[293,24,328,22,"lastAttackTick"],[293,38,328,36],[293,41,328,39,"newState"],[293,49,328,47],[293,50,328,48,"currentTick"],[293,61,328,59],[294,16,329,14],[294,17,329,15],[294,23,329,21],[295,18,330,16],[296,18,331,16],[296,22,331,22,"isPlayerInvincible"],[296,40,331,40],[296,43,331,43,"game"],[296,47,331,47],[296,48,331,48,"gameState"],[296,57,331,57],[296,58,331,58,"isInvincible"],[296,70,331,70],[296,74,332,41,"game"],[296,78,332,45],[296,79,332,46,"gameState"],[296,88,332,55],[296,89,332,56,"invincibilityEndTime"],[296,109,332,76],[296,113,333,41,"Date"],[296,117,333,45],[296,118,333,46,"now"],[296,121,333,49],[296,122,333,50],[296,123,333,51],[296,126,333,54,"game"],[296,130,333,58],[296,131,333,59,"gameState"],[296,140,333,68],[296,141,333,69,"invincibilityEndTime"],[296,161,333,89],[297,18,335,16],[297,22,335,20,"isPlayerInvincible"],[297,40,335,38],[297,42,335,40],[298,20,336,18,"console"],[298,27,336,25],[298,28,336,26,"log"],[298,31,336,29],[298,32,336,30],[298,51,336,49,"enemy"],[298,56,336,54],[298,57,336,55,"name"],[298,61,336,59],[298,101,336,99],[298,102,336,100],[299,20,337,18],[300,20,338,18,"enemy"],[300,25,338,23],[300,26,338,24,"lastAttackTick"],[300,40,338,38],[300,43,338,41,"newState"],[300,51,338,49],[300,52,338,50,"currentTick"],[300,63,338,61],[301,18,339,16],[301,19,339,17],[301,25,339,23],[302,20,340,16],[303,20,341,16],[303,24,341,22,"baseAttack"],[303,34,341,32],[303,37,341,35,"enemy"],[303,42,341,40],[303,43,341,41,"stats"],[303,48,341,46],[303,49,341,47,"attack"],[303,55,341,53],[303,58,341,56],[303,61,341,59],[303,62,341,60],[303,63,341,61],[304,20,342,16],[304,24,342,22,"attackDamage"],[304,36,342,34],[304,39,342,37,"Math"],[304,43,342,41],[304,44,342,42,"floor"],[304,49,342,47],[304,50,342,48,"baseAttack"],[304,60,342,58],[304,64,342,62],[304,67,342,65],[304,70,342,68,"Math"],[304,74,342,72],[304,75,342,73,"random"],[304,81,342,79],[304,82,342,80],[304,83,342,81],[304,86,342,84],[304,89,342,87],[304,90,342,88],[304,91,342,89],[304,92,342,90],[304,93,342,91],[305,20,343,16],[305,24,343,22,"playerDefense"],[305,37,343,35],[305,40,343,38,"newState"],[305,48,343,46],[305,49,343,47,"playerStats"],[305,60,343,58],[305,61,343,59,"defense"],[305,68,343,66],[306,20,344,16],[306,24,344,22,"finalDamage"],[306,35,344,33],[306,38,344,36,"Math"],[306,42,344,40],[306,43,344,41,"max"],[306,46,344,44],[306,47,344,45],[306,48,344,46],[306,50,344,48,"attackDamage"],[306,62,344,60],[306,65,344,63,"Math"],[306,69,344,67],[306,70,344,68,"floor"],[306,75,344,73],[306,76,344,74,"playerDefense"],[306,89,344,87],[306,92,344,90],[306,95,344,93],[306,96,344,94],[306,97,344,95],[306,98,344,96],[306,99,344,97],[308,20,346,16,"console"],[308,27,346,23],[308,28,346,24,"log"],[308,31,346,27],[308,32,346,28],[308,53,346,49,"enemy"],[308,58,346,54],[308,59,346,55,"name"],[308,63,346,59],[308,86,346,82,"finalDamage"],[308,97,346,93],[308,109,346,105,"attackDamage"],[308,121,346,117],[308,132,346,128,"Math"],[308,136,346,132],[308,137,346,133,"floor"],[308,142,346,138],[308,143,346,139,"playerDefense"],[308,156,346,152],[308,159,346,155],[308,162,346,158],[308,163,346,159],[308,184,346,180],[308,185,346,181],[310,20,348,16],[311,20,349,16],[311,24,349,22,"newPlayerHealth"],[311,39,349,37],[311,42,349,40,"Math"],[311,46,349,44],[311,47,349,45,"max"],[311,50,349,48],[311,51,349,49],[311,52,349,50],[311,54,349,52,"newState"],[311,62,349,60],[311,63,349,61,"playerStats"],[311,74,349,72],[311,75,349,73,"health"],[311,81,349,79],[311,84,349,82,"finalDamage"],[311,95,349,93],[311,96,349,94],[312,20,350,16,"newState"],[312,28,350,24],[312,29,350,25,"playerStats"],[312,40,350,36],[312,41,350,37,"health"],[312,47,350,43],[312,50,350,46,"newPlayerHealth"],[312,65,350,61],[313,20,352,16,"console"],[313,27,352,23],[313,28,352,24,"log"],[313,31,352,27],[313,32,352,28],[313,53,352,49,"newState"],[313,61,352,57],[313,62,352,58,"playerStats"],[313,73,352,69],[313,74,352,70,"health"],[313,80,352,76],[313,84,352,80,"newState"],[313,92,352,88],[313,93,352,89,"playerStats"],[313,104,352,100],[313,105,352,101,"maxHealth"],[313,114,352,110],[313,124,352,120,"finalDamage"],[313,135,352,131],[313,145,352,141],[313,146,352,142],[315,20,354,16],[316,20,355,16,"enemy"],[316,25,355,21],[316,26,355,22,"lastAttackTick"],[316,40,355,36],[316,43,355,39,"newState"],[316,51,355,47],[316,52,355,48,"currentTick"],[316,63,355,59],[318,20,357,16],[319,20,358,16],[319,24,358,20,"newPlayerHealth"],[319,39,358,35],[319,43,358,39],[319,44,358,40],[319,46,358,42],[320,22,359,18,"console"],[320,29,359,25],[320,30,359,26,"log"],[320,33,359,29],[320,34,359,30],[320,84,359,80],[320,85,359,81],[321,22,360,18],[322,22,361,18,"setTimeout"],[322,32,361,28],[322,33,361,29],[322,39,361,35],[323,24,362,20],[324,24,363,20,"game"],[324,28,363,24],[324,29,363,25,"updateGameState"],[324,44,363,40],[324,45,363,41],[325,26,363,43,"isAlive"],[325,33,363,50],[325,35,363,52],[326,24,363,58],[326,25,363,59],[326,26,363,60],[327,22,364,18],[327,23,364,19],[327,25,364,21],[327,28,364,24],[327,29,364,25],[328,20,365,16],[329,18,366,16],[330,16,367,14],[331,14,368,12],[332,12,369,10],[332,13,369,11],[332,19,369,17],[333,14,370,12],[334,14,371,12],[335,14,372,12],[335,18,372,16,"distance"],[335,26,372,24],[335,29,372,27],[335,31,372,29],[335,33,372,31],[336,16,373,14],[337,16,374,14],[337,20,374,20,"normalizedX"],[337,31,374,31],[337,34,374,34,"deltaX"],[337,40,374,40],[337,43,374,43,"distance"],[337,51,374,51],[338,16,375,14],[338,20,375,20,"normalizedY"],[338,31,375,31],[338,34,375,34,"deltaY"],[338,40,375,40],[338,43,375,43,"distance"],[338,51,375,51],[340,16,377,14],[341,16,378,14],[341,20,378,20,"randomFactor"],[341,32,378,32],[341,35,378,35],[341,38,378,38],[341,39,378,39],[341,40,378,40],[342,16,379,14],[342,20,379,20,"finalX"],[342,26,379,26],[342,29,379,29,"normalizedX"],[342,40,379,40],[342,43,379,43],[342,44,379,44,"Math"],[342,48,379,48],[342,49,379,49,"random"],[342,55,379,55],[342,56,379,56],[342,57,379,57],[342,60,379,60],[342,63,379,63],[342,67,379,67,"randomFactor"],[342,79,379,79],[343,16,380,14],[343,20,380,20,"finalY"],[343,26,380,26],[343,29,380,29,"normalizedY"],[343,40,380,40],[343,43,380,43],[343,44,380,44,"Math"],[343,48,380,48],[343,49,380,49,"random"],[343,55,380,55],[343,56,380,56],[343,57,380,57],[343,60,380,60],[343,63,380,63],[343,67,380,67,"randomFactor"],[343,79,380,79],[345,16,382,14],[346,16,383,14],[346,20,383,18,"newX"],[346,24,383,22],[346,27,383,25,"enemy"],[346,32,383,30],[346,33,383,31,"position"],[346,41,383,39],[346,42,383,40,"x"],[346,43,383,41],[346,46,383,45,"finalX"],[346,52,383,51],[346,55,383,54,"MOVEMENT_SPEED"],[346,69,383,69],[347,16,384,14],[347,20,384,18,"newY"],[347,24,384,22],[347,27,384,25,"enemy"],[347,32,384,30],[347,33,384,31,"position"],[347,41,384,39],[347,42,384,40,"y"],[347,43,384,41],[347,46,384,45,"finalY"],[347,52,384,51],[347,55,384,54,"MOVEMENT_SPEED"],[347,69,384,69],[349,16,386,14],[350,16,387,14,"newX"],[350,20,387,18],[350,23,387,21,"Math"],[350,27,387,25],[350,28,387,26,"max"],[350,31,387,29],[350,32,387,30],[350,33,387,31],[350,35,387,33,"Math"],[350,39,387,37],[350,40,387,38,"min"],[350,43,387,41],[350,44,387,42,"SCREEN_WIDTH"],[350,56,387,54],[350,59,387,57,"ENEMY_SIZE"],[350,69,387,67],[350,71,387,69,"newX"],[350,75,387,73],[350,76,387,74],[350,77,387,75],[351,16,388,14,"newY"],[351,20,388,18],[351,23,388,21,"Math"],[351,27,388,25],[351,28,388,26,"max"],[351,31,388,29],[351,32,388,30],[351,33,388,31],[351,35,388,33,"Math"],[351,39,388,37],[351,40,388,38,"min"],[351,43,388,41],[351,44,388,42,"GAME_AREA_HEIGHT"],[351,60,388,58],[351,63,388,61,"ENEMY_SIZE"],[351,73,388,71],[351,75,388,73,"newY"],[351,79,388,77],[351,80,388,78],[351,81,388,79],[353,16,390,14],[354,16,391,14,"enemy"],[354,21,391,19],[354,22,391,20,"position"],[354,30,391,28],[354,31,391,29,"x"],[354,32,391,30],[354,35,391,33,"newX"],[354,39,391,37],[355,16,392,14,"enemy"],[355,21,392,19],[355,22,392,20,"position"],[355,30,392,28],[355,31,392,29,"y"],[355,32,392,30],[355,35,392,33,"newY"],[355,39,392,37],[356,14,393,12],[357,14,394,12],[358,12,395,10],[359,10,396,8],[360,8,397,6],[360,9,397,7],[360,10,397,8],[362,8,399,6],[363,8,400,6],[363,12,400,10,"newState"],[363,20,400,18],[363,21,400,19,"shadowClone"],[363,32,400,30],[363,34,400,32],[364,10,401,8],[365,10,402,8,"newState"],[365,18,402,16],[365,19,402,17,"shadowClone"],[365,30,402,28],[365,31,402,29,"remainingTicks"],[365,45,402,43],[365,47,402,45],[367,10,404,8],[368,10,405,8],[368,14,405,14,"cloneOffset"],[368,25,405,25],[368,28,405,28],[368,30,405,30],[368,31,405,31],[368,32,405,32],[369,10,406,8,"newState"],[369,18,406,16],[369,19,406,17,"shadowClone"],[369,30,406,28],[369,31,406,29,"position"],[369,39,406,37],[369,40,406,38,"x"],[369,41,406,39],[369,44,406,42,"currentNinjaPosition"],[369,64,406,62],[369,65,406,63,"x"],[369,66,406,64],[369,69,406,67,"cloneOffset"],[369,80,406,78],[370,10,407,8,"newState"],[370,18,407,16],[370,19,407,17,"shadowClone"],[370,30,407,28],[370,31,407,29,"position"],[370,39,407,37],[370,40,407,38,"y"],[370,41,407,39],[370,44,407,42,"currentNinjaPosition"],[370,64,407,62],[370,65,407,63,"y"],[370,66,407,64],[370,69,407,67],[370,71,407,69],[372,10,409,8],[373,10,410,8],[373,14,410,12,"newState"],[373,22,410,20],[373,23,410,21,"shadowClone"],[373,34,410,32],[373,35,410,33,"remainingTicks"],[373,49,410,47],[373,53,410,51],[373,54,410,52],[373,56,410,54],[374,12,411,10,"console"],[374,19,411,17],[374,20,411,18,"log"],[374,23,411,21],[374,24,411,22],[374,75,411,73],[374,76,411,74],[375,12,412,10,"newState"],[375,20,412,18],[375,21,412,19,"shadowClone"],[375,32,412,30],[375,35,412,33,"undefined"],[375,44,412,42],[376,10,413,8],[376,11,413,9],[376,17,413,15],[377,12,414,10],[378,12,415,10],[379,12,416,10],[379,16,416,16,"CLONE_ATTACK_INTERVAL"],[379,37,416,37],[379,40,416,40],[379,42,416,42],[380,12,417,10],[380,16,417,14,"newState"],[380,24,417,22],[380,25,417,23,"currentTick"],[380,36,417,34],[380,39,417,37,"CLONE_ATTACK_INTERVAL"],[380,60,417,58],[380,65,417,63],[380,66,417,64],[380,70,417,68,"newState"],[380,78,417,76],[380,79,417,77,"enemies"],[380,86,417,84],[380,87,417,85,"length"],[380,93,417,91],[380,96,417,94],[380,97,417,95],[380,99,417,97],[381,14,418,12,"console"],[381,21,418,19],[381,22,418,20,"log"],[381,25,418,23],[381,26,418,24],[381,83,418,81],[381,84,418,82],[383,14,420,12],[384,14,421,12],[384,18,421,18,"target"],[384,24,421,24],[384,27,421,27,"findClosestEnemyInternal"],[384,51,421,51],[384,52,421,52,"newState"],[384,60,421,60],[384,61,421,61,"enemies"],[384,68,421,68],[384,69,421,69],[385,14,422,12],[385,18,422,16,"target"],[385,24,422,22],[385,26,422,24],[386,16,423,14],[387,16,424,14],[387,20,424,20,"cloneDamage"],[387,31,424,31],[387,34,424,34,"Math"],[387,38,424,38],[387,39,424,39,"floor"],[387,44,424,44],[387,45,424,45,"newState"],[387,53,424,53],[387,54,424,54,"playerStats"],[387,65,424,65],[387,66,424,66,"attack"],[387,72,424,72],[387,75,424,75],[387,78,424,78],[387,79,424,79],[389,16,426,14],[390,16,427,14,"createProjectile"],[390,32,427,30],[390,33,427,31,"target"],[390,39,427,37],[390,41,427,39,"cloneDamage"],[390,52,427,50],[390,54,427,52,"newState"],[390,62,427,60],[390,63,427,61,"shadowClone"],[390,74,427,72],[390,75,427,73,"position"],[390,83,427,81],[390,85,427,83],[391,18,428,16,"id"],[391,20,428,18],[391,22,428,20],[391,43,428,41],[392,18,429,16,"name"],[392,22,429,20],[392,24,429,22],[392,45,429,43],[393,18,430,16,"icon"],[393,22,430,20],[393,24,430,22],[394,16,431,14],[394,17,431,15],[394,18,431,16],[395,14,432,12],[396,12,433,10],[397,10,434,8],[398,8,435,6],[400,8,437,6],[401,8,438,6],[402,8,439,6],[402,12,439,10],[402,13,439,11,"isManualControlActive"],[402,34,439,32],[402,38,439,36,"game"],[402,42,439,40],[402,43,439,41,"gameState"],[402,52,439,50],[402,53,439,51,"isAlive"],[402,60,439,58],[402,62,439,60],[403,10,440,8],[403,15,440,13],[403,19,440,17,"i"],[403,20,440,18],[403,23,440,21],[403,24,440,22],[403,26,440,24,"i"],[403,27,440,25],[403,30,440,28],[403,31,440,29],[403,33,440,31,"i"],[403,34,440,32],[403,36,440,34],[403,38,440,36],[404,12,441,10],[404,16,441,14,"newState"],[404,24,441,22],[404,25,441,23,"abilityManager"],[404,39,441,37],[404,40,441,38,"isAbilityReady"],[404,54,441,52],[404,55,441,53,"i"],[404,56,441,54],[404,57,441,55],[404,61,441,59,"newState"],[404,69,441,67],[404,70,441,68,"enemies"],[404,77,441,75],[404,78,441,76,"length"],[404,84,441,82],[404,87,441,85],[404,88,441,86],[404,90,441,88],[405,14,442,12],[405,18,442,16,"newState"],[405,26,442,24],[405,27,442,25,"abilityManager"],[405,41,442,39],[405,42,442,40,"useAbility"],[405,52,442,50],[405,53,442,51,"i"],[405,54,442,52],[405,56,442,54,"newTick"],[405,63,442,61],[405,64,442,62],[405,66,442,64],[406,16,443,14,"castAbility"],[406,27,443,25],[406,28,443,26,"newState"],[406,36,443,34],[406,38,443,36,"i"],[406,39,443,37],[406,40,443,38],[407,14,444,12],[408,12,445,10],[409,10,446,8],[410,8,447,6],[412,8,449,6],[413,8,450,6],[413,12,450,12,"deadEnemies"],[413,23,450,23],[413,26,450,26,"newState"],[413,34,450,34],[413,35,450,35,"enemies"],[413,42,450,42],[413,43,450,43,"filter"],[413,49,450,49],[413,50,450,50,"enemy"],[413,55,450,55],[413,59,450,59,"enemy"],[413,64,450,64],[413,65,450,65,"health"],[413,71,450,71],[413,75,450,75],[413,76,450,76],[413,77,450,77],[414,8,451,6,"enemiesToKill"],[414,21,451,19],[414,24,451,22],[414,25,451,23],[414,28,451,26,"deadEnemies"],[414,39,451,37],[414,40,451,38],[414,41,451,39],[414,42,451,40],[416,8,453,6],[417,8,454,6],[417,12,454,10,"deadEnemies"],[417,23,454,21],[417,24,454,22,"length"],[417,30,454,28],[417,33,454,31],[417,34,454,32],[417,36,454,34],[418,10,455,8,"console"],[418,17,455,15],[418,18,455,16,"log"],[418,21,455,19],[418,22,455,20],[418,49,455,47,"deadEnemies"],[418,60,455,58],[418,61,455,59,"length"],[418,67,455,65],[418,83,455,81],[418,85,455,83,"deadEnemies"],[418,96,455,94],[418,97,455,95,"map"],[418,100,455,98],[418,101,455,99,"e"],[418,102,455,100],[418,106,455,104],[418,109,455,107,"e"],[418,110,455,108],[418,111,455,109,"id"],[418,113,455,111],[418,117,455,115,"e"],[418,118,455,116],[418,119,455,117,"health"],[418,125,455,123],[418,130,455,128],[418,131,455,129],[418,132,455,130],[419,8,456,6],[421,8,458,6],[422,8,459,6],[422,12,459,12,"lowHealthEnemies"],[422,28,459,28],[422,31,459,31,"newState"],[422,39,459,39],[422,40,459,40,"enemies"],[422,47,459,47],[422,48,459,48,"filter"],[422,54,459,54],[422,55,459,55,"enemy"],[422,60,459,60],[422,64,459,64,"enemy"],[422,69,459,69],[422,70,459,70,"health"],[422,76,459,76],[422,80,459,80],[422,82,459,82],[422,86,459,86,"enemy"],[422,91,459,91],[422,92,459,92,"health"],[422,98,459,98],[422,101,459,101],[422,102,459,102],[422,103,459,103],[423,8,460,6],[423,12,460,10,"lowHealthEnemies"],[423,28,460,26],[423,29,460,27,"length"],[423,35,460,33],[423,38,460,36],[423,39,460,37],[423,41,460,39],[424,10,461,8,"console"],[424,17,461,15],[424,18,461,16,"log"],[424,21,461,19],[424,22,461,20],[424,61,461,59],[424,63,461,61,"lowHealthEnemies"],[424,79,461,77],[424,80,461,78,"map"],[424,83,461,81],[424,84,461,82,"e"],[424,85,461,83],[424,89,461,87],[424,92,461,90,"e"],[424,93,461,91],[424,94,461,92,"id"],[424,96,461,94],[424,100,461,98,"e"],[424,101,461,99],[424,102,461,100,"health"],[424,108,461,106],[424,112,461,110,"e"],[424,113,461,111],[424,114,461,112,"maxHealth"],[424,123,461,121],[424,128,461,126],[424,129,461,127],[424,130,461,128],[425,8,462,6],[427,8,464,6],[428,8,465,6],[428,12,465,12,"beforeCount"],[428,23,465,23],[428,26,465,26,"newState"],[428,34,465,34],[428,35,465,35,"enemies"],[428,42,465,42],[428,43,465,43,"length"],[428,49,465,49],[429,8,466,6,"newState"],[429,16,466,14],[429,17,466,15,"enemies"],[429,24,466,22],[429,27,466,25,"newState"],[429,35,466,33],[429,36,466,34,"enemies"],[429,43,466,41],[429,44,466,42,"filter"],[429,50,466,48],[429,51,466,49,"enemy"],[429,56,466,54],[429,60,466,58,"enemy"],[429,65,466,63],[429,66,466,64,"health"],[429,72,466,70],[429,75,466,73],[429,76,466,74],[429,77,466,75],[430,8,467,6],[430,12,467,12,"afterCount"],[430,22,467,22],[430,25,467,25,"newState"],[430,33,467,33],[430,34,467,34,"enemies"],[430,41,467,41],[430,42,467,42,"length"],[430,48,467,48],[431,8,469,6],[431,12,469,10,"beforeCount"],[431,23,469,21],[431,28,469,26,"afterCount"],[431,38,469,36],[431,40,469,38],[432,10,470,8,"console"],[432,17,470,15],[432,18,470,16,"log"],[432,21,470,19],[432,22,470,20],[432,52,470,50,"beforeCount"],[432,63,470,61],[432,66,470,64,"afterCount"],[432,76,470,74],[432,102,470,100],[432,103,470,101],[433,8,471,6],[435,8,473,6],[436,8,474,6],[437,8,475,6],[437,12,475,12,"MAX_ENEMIES"],[437,23,475,23],[437,26,475,26],[437,28,475,28],[437,29,475,29],[437,30,475,30],[438,8,476,6],[438,12,476,12,"MIN_SPAWN_DELAY"],[438,27,476,27],[438,30,476,30],[438,33,476,33],[438,34,476,34],[438,35,476,35],[439,8,477,6],[439,12,477,12,"now"],[439,15,477,15],[439,18,477,18,"Date"],[439,22,477,22],[439,23,477,23,"now"],[439,26,477,26],[439,27,477,27],[439,28,477,28],[440,8,478,6],[440,12,478,12,"hasBoss"],[440,19,478,19],[440,22,478,22,"newState"],[440,30,478,30],[440,31,478,31,"enemies"],[440,38,478,38],[440,39,478,39,"some"],[440,43,478,43],[440,44,478,44,"enemy"],[440,49,478,49],[440,53,478,53,"enemy"],[440,58,478,58],[440,59,478,59,"isBoss"],[440,65,478,65],[440,66,478,66],[442,8,480,6],[443,8,481,6],[443,12,481,10],[443,13,481,11,"newState"],[443,21,481,19],[443,22,481,20,"lastSpawnTime"],[443,35,481,33],[443,37,481,35],[444,10,482,8,"newState"],[444,18,482,16],[444,19,482,17,"lastSpawnTime"],[444,32,482,30],[444,35,482,33,"now"],[444,38,482,36],[445,8,483,6],[446,8,485,6,"console"],[446,15,485,13],[446,16,485,14,"log"],[446,19,485,17],[446,20,485,18],[446,53,485,51,"newState"],[446,61,485,59],[446,62,485,60,"enemies"],[446,69,485,67],[446,70,485,68,"length"],[446,76,485,74],[446,85,485,83,"MAX_ENEMIES"],[446,96,485,94],[446,109,485,107,"hasBoss"],[446,116,485,114],[446,118,485,116],[446,119,485,117],[448,8,487,6],[449,8,488,6],[449,12,488,10],[449,13,488,11,"hasBoss"],[449,20,488,18],[449,24,488,22,"newState"],[449,32,488,30],[449,33,488,31,"enemies"],[449,40,488,38],[449,41,488,39,"length"],[449,47,488,45],[449,50,488,48,"MAX_ENEMIES"],[449,61,488,59],[449,65,488,64,"now"],[449,68,488,67],[449,71,488,70,"newState"],[449,79,488,78],[449,80,488,79,"lastSpawnTime"],[449,93,488,92],[449,97,488,97,"MIN_SPAWN_DELAY"],[449,112,488,112],[449,114,488,114],[450,10,489,8,"console"],[450,17,489,15],[450,18,489,16,"log"],[450,21,489,19],[450,22,489,20],[450,43,489,41,"newState"],[450,51,489,49],[450,52,489,50,"enemies"],[450,59,489,57],[450,60,489,58,"length"],[450,66,489,64],[450,69,489,67],[450,70,489,68],[450,74,489,72,"MAX_ENEMIES"],[450,85,489,83],[450,87,489,85],[450,88,489,86],[451,10,490,8,"spawnTestEnemy"],[451,24,490,22],[451,25,490,23,"newState"],[451,33,490,31],[451,34,490,32],[452,10,491,8,"newState"],[452,18,491,16],[452,19,491,17,"lastSpawnTime"],[452,32,491,30],[452,35,491,33,"now"],[452,38,491,36],[453,8,492,6],[454,8,494,6],[454,15,494,13,"newState"],[454,23,494,21],[455,6,495,4],[455,7,495,5],[455,47,495,6],[457,6,497,4],[458,6,498,4,"console"],[458,13,498,11],[458,14,498,12,"log"],[458,17,498,15],[458,18,498,16],[458,50,498,48,"enemiesToKill"],[458,63,498,61],[458,64,498,62,"length"],[458,70,498,68],[458,101,498,99],[458,102,498,100],[459,6,500,4,"enemiesToKill"],[459,19,500,17],[459,20,500,18,"forEach"],[459,27,500,25],[459,28,500,26],[459,29,500,27,"enemy"],[459,34,500,32],[459,36,500,34,"index"],[459,41,500,39],[459,46,500,44],[460,8,501,6,"console"],[460,15,501,13],[460,16,501,14,"log"],[460,19,501,17],[460,20,501,18],[460,57,501,55,"index"],[460,62,501,60],[460,65,501,63],[460,66,501,64],[460,70,501,68,"enemiesToKill"],[460,83,501,81],[460,84,501,82,"length"],[460,90,501,88],[460,104,501,102,"enemy"],[460,109,501,107],[460,110,501,108,"id"],[460,112,501,110],[460,114,501,112],[460,115,501,113],[461,8,502,6,"handleEnemyKill"],[461,23,502,21],[461,24,502,22,"enemy"],[461,29,502,27],[461,30,502,28],[462,6,503,4],[462,7,503,5],[462,8,503,6],[463,4,504,2],[463,5,504,3],[463,7,504,5],[463,8,504,6,"handleEnemyKill"],[463,23,504,21],[463,24,504,22],[463,25,504,23],[463,26,504,24],[463,27,504,25],[465,4,506,2],[466,4,507,2],[466,8,507,8,"findClosestEnemyInternal"],[466,32,507,32],[466,35,507,36,"enemies"],[466,42,507,58],[466,46,507,83],[467,6,508,4],[467,10,508,8,"enemies"],[467,17,508,15],[467,18,508,16,"length"],[467,24,508,22],[467,29,508,27],[467,30,508,28],[467,32,508,30],[467,39,508,37],[467,43,508,41],[469,6,510,4],[470,6,511,4],[470,10,511,10,"SCREEN_WIDTH"],[470,22,511,22],[470,25,511,25],[470,28,511,28],[471,6,512,4],[471,10,512,10,"GAME_AREA_HEIGHT"],[471,26,512,26],[471,29,512,29],[471,32,512,32],[471,35,512,35],[471,38,512,38],[471,39,512,39],[471,40,512,40],[472,6,513,4],[472,10,513,10,"ninjaX"],[472,16,513,16],[472,19,513,19,"SCREEN_WIDTH"],[472,31,513,31],[472,34,513,34],[472,35,513,35],[473,6,514,4],[473,10,514,10,"ninjaY"],[473,16,514,16],[473,19,514,19,"GAME_AREA_HEIGHT"],[473,35,514,35],[473,38,514,38],[473,39,514,39],[474,6,516,4],[474,10,516,8,"closestEnemy"],[474,22,516,20],[474,25,516,23,"enemies"],[474,32,516,30],[474,33,516,31],[474,34,516,32],[474,35,516,33],[475,6,517,4],[475,10,517,8,"closestDistance"],[475,25,517,23],[475,28,517,26,"Infinity"],[475,36,517,34],[476,6,519,4,"enemies"],[476,13,519,11],[476,14,519,12,"forEach"],[476,21,519,19],[476,22,519,20,"enemy"],[476,27,519,25],[476,31,519,29],[477,8,520,6],[477,12,520,12,"distance"],[477,20,520,20],[477,23,520,23,"Math"],[477,27,520,27],[477,28,520,28,"sqrt"],[477,32,520,32],[477,33,521,8,"Math"],[477,37,521,12],[477,38,521,13,"pow"],[477,41,521,16],[477,42,521,17,"enemy"],[477,47,521,22],[477,48,521,23,"position"],[477,56,521,31],[477,57,521,32,"x"],[477,58,521,33],[477,61,521,36,"ninjaX"],[477,67,521,42],[477,69,521,44],[477,70,521,45],[477,71,521,46],[477,74,522,8,"Math"],[477,78,522,12],[477,79,522,13,"pow"],[477,82,522,16],[477,83,522,17,"enemy"],[477,88,522,22],[477,89,522,23,"position"],[477,97,522,31],[477,98,522,32,"y"],[477,99,522,33],[477,102,522,36,"ninjaY"],[477,108,522,42],[477,110,522,44],[477,111,522,45],[477,112,523,6],[477,113,523,7],[478,8,525,6],[478,12,525,10,"distance"],[478,20,525,18],[478,23,525,21,"closestDistance"],[478,38,525,36],[478,40,525,38],[479,10,526,8,"closestDistance"],[479,25,526,23],[479,28,526,26,"distance"],[479,36,526,34],[480,10,527,8,"closestEnemy"],[480,22,527,20],[480,25,527,23,"enemy"],[480,30,527,28],[481,8,528,6],[482,6,529,4],[482,7,529,5],[482,8,529,6],[483,6,531,4,"console"],[483,13,531,11],[483,14,531,12,"log"],[483,17,531,15],[483,18,531,16],[483,60,531,58,"closestDistance"],[483,75,531,73],[483,76,531,74,"toFixed"],[483,83,531,81],[483,84,531,82],[483,85,531,83],[483,86,531,84],[483,88,531,86],[483,89,531,87],[484,6,532,4],[484,13,532,11,"closestEnemy"],[484,25,532,23],[485,4,533,2],[485,5,533,3],[487,4,535,2],[488,4,536,2],[488,8,536,8,"findClosestEnemy"],[488,24,536,24],[488,27,536,27,"findClosestEnemy"],[488,28,536,27],[488,33,536,53],[489,6,537,4],[489,13,537,11,"findClosestEnemyInternal"],[489,37,537,35],[489,38,537,36,"combatState"],[489,49,537,47],[489,50,537,48,"enemies"],[489,57,537,55],[489,58,537,56],[490,4,538,2],[490,5,538,3],[492,4,540,2],[493,4,541,2],[493,8,541,2,"_useState7"],[493,18,541,2],[493,21,541,58],[493,25,541,58,"useState"],[493,31,541,66],[493,32,541,66,"useState"],[493,40,541,66],[493,42,541,91],[494,8,541,93,"x"],[494,9,541,94],[494,11,541,96],[494,12,541,97],[495,8,541,99,"y"],[495,9,541,100],[495,11,541,102],[496,6,541,104],[496,7,541,105],[496,8,541,106],[497,6,541,106,"_useState8"],[497,16,541,106],[497,23,541,106,"_slicedToArray"],[497,37,541,106],[497,38,541,106,"default"],[497,45,541,106],[497,47,541,106,"_useState7"],[497,57,541,106],[498,6,541,9,"currentNinjaPosition"],[498,26,541,29],[498,29,541,29,"_useState8"],[498,39,541,29],[499,6,541,31,"setCurrentNinjaPosition"],[499,29,541,54],[499,32,541,54,"_useState8"],[499,42,541,54],[500,4,542,2],[500,8,542,2,"_useState9"],[500,18,542,2],[500,21,542,60],[500,25,542,60,"useState"],[500,31,542,68],[500,32,542,68,"useState"],[500,40,542,68],[500,42,542,69],[500,47,542,74],[500,48,542,75],[501,6,542,75,"_useState0"],[501,16,542,75],[501,23,542,75,"_slicedToArray"],[501,37,542,75],[501,38,542,75,"default"],[501,45,542,75],[501,47,542,75,"_useState9"],[501,57,542,75],[502,6,542,9,"isManualControlActive"],[502,27,542,30],[502,30,542,30,"_useState0"],[502,40,542,30],[503,6,542,32,"setIsManualControlActive"],[503,30,542,56],[503,33,542,56,"_useState0"],[503,43,542,56],[505,4,544,2],[506,4,545,2],[506,8,545,8,"updateNinjaPosition"],[506,27,545,27],[506,30,545,30],[506,34,545,30,"useCallback"],[506,40,545,41],[506,41,545,41,"useCallback"],[506,52,545,41],[506,54,545,43,"newPosition"],[506,65,545,78],[506,69,545,83],[507,6,546,4,"setCurrentNinjaPosition"],[507,29,546,27],[507,30,546,28,"newPosition"],[507,41,546,39],[507,42,546,40],[508,4,547,2],[508,5,547,3],[508,7,547,5],[508,9,547,7],[508,10,547,8],[510,4,549,2],[511,4,550,2],[511,8,550,8,"setManualControlActive"],[511,30,550,30],[511,33,550,33],[511,37,550,33,"useCallback"],[511,43,550,44],[511,44,550,44,"useCallback"],[511,55,550,44],[511,57,550,46,"active"],[511,63,550,61],[511,67,550,66],[512,6,551,4,"setIsManualControlActive"],[512,30,551,28],[512,31,551,29,"active"],[512,37,551,35],[512,38,551,36],[513,6,552,4,"console"],[513,13,552,11],[513,14,552,12,"log"],[513,17,552,15],[513,18,552,16],[513,39,552,37,"active"],[513,45,552,43],[513,48,552,46],[513,59,552,57],[513,62,552,60],[513,75,552,73],[513,88,552,86,"active"],[513,94,552,92],[513,97,552,95],[513,105,552,103],[513,108,552,106],[513,117,552,115],[513,119,552,117],[513,120,552,118],[514,4,553,2],[514,5,553,3],[514,7,553,5],[514,9,553,7],[514,10,553,8],[516,4,555,2],[517,4,556,2],[517,8,556,8,"handleProjectileHit"],[517,27,556,27],[517,30,556,31,"projectile"],[517,40,556,59],[517,44,556,64],[518,6,557,4,"console"],[518,13,557,11],[518,14,557,12,"log"],[518,17,557,15],[518,18,557,16],[518,35,557,33,"projectile"],[518,45,557,43],[518,46,557,44,"id"],[518,48,557,46],[518,62,557,60,"projectile"],[518,72,557,70],[518,73,557,71,"targetEnemyId"],[518,86,557,84],[518,94,557,92,"projectile"],[518,104,557,102],[518,105,557,103,"damage"],[518,111,557,109],[518,120,557,118],[518,121,557,119],[519,6,559,4,"setCombatState"],[519,20,559,18],[519,21,559,19,"prev"],[519,25,559,23],[519,29,559,27],[520,8,560,6],[520,12,560,12,"newState"],[520,20,560,20],[520,23,560,23],[521,10,560,25],[521,13,560,28,"prev"],[522,8,560,33],[522,9,560,34],[524,8,562,6],[525,8,563,6],[525,12,563,12,"enemyIndex"],[525,22,563,22],[525,25,563,25,"newState"],[525,33,563,33],[525,34,563,34,"enemies"],[525,41,563,41],[525,42,563,42,"findIndex"],[525,51,563,51],[525,52,563,52,"e"],[525,53,563,53],[525,57,563,57,"e"],[525,58,563,58],[525,59,563,59,"id"],[525,61,563,61],[525,66,563,66,"projectile"],[525,76,563,76],[525,77,563,77,"targetEnemyId"],[525,90,563,90],[525,91,563,91],[526,8,564,6],[526,12,564,10,"enemyIndex"],[526,22,564,20],[526,26,564,24],[526,27,564,25],[526,29,564,27],[527,10,565,8,"newState"],[527,18,565,16],[527,19,565,17,"enemies"],[527,26,565,24],[527,29,565,27],[527,30,565,28],[527,33,565,31,"newState"],[527,41,565,39],[527,42,565,40,"enemies"],[527,49,565,47],[527,50,565,48],[528,10,566,8,"newState"],[528,18,566,16],[528,19,566,17,"enemies"],[528,26,566,24],[528,27,566,25,"enemyIndex"],[528,37,566,35],[528,38,566,36],[528,41,566,39],[529,12,567,10],[529,15,567,13,"newState"],[529,23,567,21],[529,24,567,22,"enemies"],[529,31,567,29],[529,32,567,30,"enemyIndex"],[529,42,567,40],[529,43,567,41],[530,12,568,10,"health"],[530,18,568,16],[530,20,568,18,"newState"],[530,28,568,26],[530,29,568,27,"enemies"],[530,36,568,34],[530,37,568,35,"enemyIndex"],[530,47,568,45],[530,48,568,46],[530,49,568,47,"health"],[530,55,568,53],[530,58,568,56,"projectile"],[530,68,568,66],[530,69,568,67,"damage"],[530,75,568,73],[531,12,569,10,"lastDamaged"],[531,23,569,21],[531,25,569,23,"combatEngine"],[531,44,569,35],[531,45,569,35,"combatEngine"],[531,57,569,35],[531,58,569,36,"getCurrentTick"],[531,72,569,50],[531,73,569,51],[532,10,570,8],[532,11,570,9],[533,10,572,8,"console"],[533,17,572,15],[533,18,572,16,"log"],[533,21,572,19],[533,22,572,20],[533,34,572,32,"projectile"],[533,44,572,42],[533,45,572,43,"targetEnemyId"],[533,58,572,56],[533,70,572,68,"newState"],[533,78,572,76],[533,79,572,77,"enemies"],[533,86,572,84],[533,87,572,85,"enemyIndex"],[533,97,572,95],[533,98,572,96],[533,99,572,97,"health"],[533,105,572,103],[533,109,572,107,"newState"],[533,117,572,115],[533,118,572,116,"enemies"],[533,125,572,123],[533,126,572,124,"enemyIndex"],[533,136,572,134],[533,137,572,135],[533,138,572,136,"maxHealth"],[533,147,572,145],[533,149,572,147],[533,150,572,148],[534,8,573,6],[535,8,575,6],[535,15,575,13,"newState"],[535,23,575,21],[536,6,576,4],[536,7,576,5],[536,8,576,6],[538,6,578,4],[539,6,579,4,"setProjectiles"],[539,20,579,18],[539,21,579,19,"prev"],[539,25,579,23],[539,29,579,27,"prev"],[539,33,579,31],[539,34,579,32,"filter"],[539,40,579,38],[539,41,579,39,"p"],[539,42,579,40],[539,46,579,44,"p"],[539,47,579,45],[539,48,579,46,"id"],[539,50,579,48],[539,55,579,53,"projectile"],[539,65,579,63],[539,66,579,64,"id"],[539,68,579,66],[539,69,579,67],[539,70,579,68],[540,4,580,2],[540,5,580,3],[542,4,582,2],[543,4,583,2],[543,8,583,8,"castAbility"],[543,19,583,19],[543,22,583,22,"castAbility"],[543,23,583,23,"state"],[543,28,583,41],[543,30,583,43,"slotIndex"],[543,39,583,60],[543,44,583,65],[544,6,584,4],[544,10,584,10,"deck"],[544,14,584,14],[544,17,584,17,"state"],[544,22,584,22],[544,23,584,23,"abilityManager"],[544,37,584,37],[544,38,584,38,"getDeck"],[544,45,584,45],[544,46,584,46],[544,47,584,47],[545,6,585,4],[545,10,585,10,"ability"],[545,17,585,17],[545,20,585,20,"deck"],[545,24,585,24],[545,25,585,25,"slots"],[545,30,585,30],[545,31,585,31,"slotIndex"],[545,40,585,40],[545,41,585,41],[546,6,586,4],[546,10,586,8],[546,11,586,9,"ability"],[546,18,586,16],[546,20,586,18],[548,6,588,4],[549,6,589,4],[549,10,589,8,"damage"],[549,16,589,14],[549,19,589,17,"ability"],[549,26,589,24],[549,27,589,25,"stats"],[549,32,589,30],[549,33,589,31,"baseDamage"],[549,43,589,41],[551,6,591,4],[552,6,592,4,"deck"],[552,10,592,8],[552,11,592,9,"activeSynergies"],[552,26,592,24],[552,27,592,25,"forEach"],[552,34,592,32],[552,35,592,33,"synergy"],[552,42,592,40],[552,46,592,44],[553,8,593,6],[553,12,593,10,"synergy"],[553,19,593,17],[553,20,593,18,"bonus"],[553,25,593,23],[553,26,593,24,"damageBonus"],[553,37,593,35],[553,41,594,10,"synergy"],[553,48,594,17],[553,49,594,18,"requiredTags"],[553,61,594,30],[553,62,594,31,"some"],[553,66,594,35],[553,67,594,36,"tag"],[553,70,594,39],[553,74,594,43,"ability"],[553,81,594,50],[553,82,594,51,"tags"],[553,86,594,55],[553,87,594,56,"includes"],[553,95,594,64],[553,96,594,65,"tag"],[553,99,594,68],[553,100,594,69],[553,101,594,70],[553,103,594,72],[554,10,595,8,"damage"],[554,16,595,14],[554,20,595,19],[554,21,595,20],[554,24,595,23,"synergy"],[554,31,595,30],[554,32,595,31,"bonus"],[554,37,595,36],[554,38,595,37,"damageBonus"],[554,49,595,48],[554,52,595,51],[554,55,595,55],[555,8,596,6],[556,6,597,4],[556,7,597,5],[556,8,597,6],[558,6,599,4],[559,6,600,4],[559,10,600,10,"isAOE"],[559,15,600,15],[559,18,600,18,"ability"],[559,25,600,25],[559,26,600,26,"effects"],[559,33,600,33],[559,34,600,34,"includes"],[559,42,600,42],[559,43,600,43],[559,48,600,48],[559,49,600,49],[559,53,600,53,"ability"],[559,60,600,60],[559,61,600,61,"stats"],[559,66,600,66],[559,67,600,67,"aoeRadius"],[559,76,600,76],[560,6,602,4],[560,10,602,8,"isAOE"],[560,15,602,13],[560,17,602,15],[561,8,603,6,"console"],[561,15,603,13],[561,16,603,14,"log"],[561,19,603,17],[561,20,603,18],[561,39,603,37,"ability"],[561,46,603,44],[561,47,603,45,"name"],[561,51,603,49],[561,67,603,65,"ability"],[561,74,603,72],[561,75,603,73,"stats"],[561,80,603,78],[561,81,603,79,"aoeRadius"],[561,90,603,88],[561,92,603,90],[561,93,603,91],[563,8,605,6],[564,8,606,6],[564,12,606,12,"ninjaX"],[564,18,606,18],[564,21,606,21,"currentNinjaPosition"],[564,41,606,41],[564,42,606,42,"x"],[564,43,606,43],[564,46,606,46],[564,48,606,48],[564,49,606,49],[564,50,606,50],[565,8,607,6],[565,12,607,12,"ninjaY"],[565,18,607,18],[565,21,607,21,"currentNinjaPosition"],[565,41,607,41],[565,42,607,42,"y"],[565,43,607,43],[565,46,607,46],[565,48,607,48],[566,8,608,6],[566,12,608,12,"aoeRadius"],[566,21,608,21],[566,24,608,24,"ability"],[566,31,608,31],[566,32,608,32,"stats"],[566,37,608,37],[566,38,608,38,"aoeRadius"],[566,47,608,47],[567,8,610,6],[567,12,610,12,"enemiesInRange"],[567,26,610,26],[567,29,610,29,"state"],[567,34,610,34],[567,35,610,35,"enemies"],[567,42,610,42],[567,43,610,43,"filter"],[567,49,610,49],[567,50,610,50,"enemy"],[567,55,610,55],[567,59,610,59],[568,10,611,8],[568,14,611,14,"enemyX"],[568,20,611,20],[568,23,611,23,"enemy"],[568,28,611,28],[568,29,611,29,"position"],[568,37,611,37],[568,38,611,38,"x"],[568,39,611,39],[568,42,611,42],[568,46,611,46],[568,47,611,47],[568,48,611,48],[569,10,612,8],[569,14,612,14,"enemyY"],[569,20,612,20],[569,23,612,23,"enemy"],[569,28,612,28],[569,29,612,29,"position"],[569,37,612,37],[569,38,612,38,"y"],[569,39,612,39],[569,42,612,42],[569,46,612,46],[570,10,613,8],[570,14,613,14,"distance"],[570,22,613,22],[570,25,613,25,"Math"],[570,29,613,29],[570,30,613,30,"sqrt"],[570,34,613,34],[570,35,613,35,"Math"],[570,39,613,39],[570,40,613,40,"pow"],[570,43,613,43],[570,44,613,44,"enemyX"],[570,50,613,50],[570,53,613,53,"ninjaX"],[570,59,613,59],[570,61,613,61],[570,62,613,62],[570,63,613,63],[570,66,613,66,"Math"],[570,70,613,70],[570,71,613,71,"pow"],[570,74,613,74],[570,75,613,75,"enemyY"],[570,81,613,81],[570,84,613,84,"ninjaY"],[570,90,613,90],[570,92,613,92],[570,93,613,93],[570,94,613,94],[570,95,613,95],[571,10,614,8],[571,17,614,15,"distance"],[571,25,614,23],[571,29,614,27,"aoeRadius"],[571,38,614,36],[572,8,615,6],[572,9,615,7],[572,10,615,8],[573,8,617,6,"console"],[573,15,617,13],[573,16,617,14,"log"],[573,19,617,17],[573,20,617,18],[573,45,617,43,"enemiesInRange"],[573,59,617,57],[573,60,617,58,"length"],[573,66,617,64],[573,88,617,86,"aoeRadius"],[573,97,617,95],[573,107,617,105],[573,108,617,106],[575,8,619,6],[576,8,620,6,"enemiesInRange"],[576,22,620,20],[576,23,620,21,"forEach"],[576,30,620,28],[576,31,620,29,"enemy"],[576,36,620,34],[576,40,620,38],[577,10,621,8],[577,14,621,14,"damageResult"],[577,26,621,26],[577,29,621,29,"DamageCalculator"],[577,48,621,45],[577,49,621,45,"DamageCalculator"],[577,65,621,45],[577,66,621,46,"calculateDamage"],[577,81,621,61],[577,82,621,62,"damage"],[577,88,621,68],[577,90,621,70,"state"],[577,95,621,75],[577,96,621,76,"playerStats"],[577,107,621,87],[577,109,621,89,"enemy"],[577,114,621,94],[577,115,621,95,"stats"],[577,120,621,100],[577,121,621,101],[578,10,622,8,"createProjectile"],[578,26,622,24],[578,27,622,25,"enemy"],[578,32,622,30],[578,34,622,32,"damageResult"],[578,46,622,44],[578,47,622,45,"damage"],[578,53,622,51],[578,55,622,53,"currentNinjaPosition"],[578,75,622,73],[578,77,622,75],[579,12,623,10,"id"],[579,14,623,12],[579,16,623,14,"ability"],[579,23,623,21],[579,24,623,22,"id"],[579,26,623,24],[580,12,624,10,"name"],[580,16,624,14],[580,18,624,16,"ability"],[580,25,624,23],[580,26,624,24,"name"],[580,30,624,28],[581,12,625,10,"icon"],[581,16,625,14],[581,18,625,16,"ability"],[581,25,625,23],[581,26,625,24,"icon"],[582,10,626,8],[582,11,626,9],[582,12,626,10],[583,10,628,8,"console"],[583,17,628,15],[583,18,628,16,"log"],[583,21,628,19],[583,22,628,20],[583,37,628,35,"enemy"],[583,42,628,40],[583,43,628,41,"name"],[583,47,628,45],[583,55,628,53,"damageResult"],[583,67,628,65],[583,68,628,66,"damage"],[583,74,628,72],[583,83,628,81],[583,84,628,82],[584,8,629,6],[584,9,629,7],[584,10,629,8],[585,8,631,6,"console"],[585,15,631,13],[585,16,631,14,"log"],[585,19,631,17],[585,20,631,18],[585,26,631,24,"ability"],[585,33,631,31],[585,34,631,32,"name"],[585,38,631,36],[585,56,631,54,"enemiesInRange"],[585,70,631,68],[585,71,631,69,"length"],[585,77,631,75],[585,93,631,91,"damage"],[585,99,631,97],[585,118,631,116],[585,119,631,117],[586,6,633,4],[586,7,633,5],[586,13,633,11],[587,8,634,6],[588,8,635,6],[588,12,635,12,"target"],[588,18,635,18],[588,21,635,21,"findClosestEnemyInternal"],[588,45,635,45],[588,46,635,46,"state"],[588,51,635,51],[588,52,635,52,"enemies"],[588,59,635,59],[588,60,635,60],[589,8,636,6],[589,12,636,10],[589,13,636,11,"target"],[589,19,636,17],[589,21,636,19],[590,8,638,6],[590,12,638,12,"damageResult"],[590,24,638,24],[590,27,638,27,"DamageCalculator"],[590,46,638,43],[590,47,638,43,"DamageCalculator"],[590,63,638,43],[590,64,638,44,"calculateDamage"],[590,79,638,59],[590,80,638,60,"damage"],[590,86,638,66],[590,88,638,68,"state"],[590,93,638,73],[590,94,638,74,"playerStats"],[590,105,638,85],[590,107,638,87,"target"],[590,113,638,93],[590,114,638,94,"stats"],[590,119,638,99],[590,120,638,100],[592,8,640,6],[593,8,641,6,"createProjectile"],[593,24,641,22],[593,25,641,23,"target"],[593,31,641,29],[593,33,641,31,"damageResult"],[593,45,641,43],[593,46,641,44,"damage"],[593,52,641,50],[593,54,641,52,"currentNinjaPosition"],[593,74,641,72],[593,76,641,74],[594,10,642,8,"id"],[594,12,642,10],[594,14,642,12,"ability"],[594,21,642,19],[594,22,642,20,"id"],[594,24,642,22],[595,10,643,8,"name"],[595,14,643,12],[595,16,643,14,"ability"],[595,23,643,21],[595,24,643,22,"name"],[595,28,643,26],[596,10,644,8,"icon"],[596,14,644,12],[596,16,644,14,"ability"],[596,23,644,21],[596,24,644,22,"icon"],[597,8,645,6],[597,9,645,7],[597,10,645,8],[598,8,647,6,"console"],[598,15,647,13],[598,16,647,14,"log"],[598,19,647,17],[598,20,647,18],[598,26,647,24,"ability"],[598,33,647,31],[598,34,647,32,"name"],[598,38,647,36],[598,66,647,64,"damageResult"],[598,78,647,76],[598,79,647,77,"damage"],[598,85,647,83],[598,95,647,93,"damageResult"],[598,107,647,105],[598,108,647,106,"isCritical"],[598,118,647,116],[598,121,647,119],[598,131,647,129],[598,134,647,132],[598,136,647,134],[598,138,647,136],[598,139,647,137],[599,6,648,4],[601,6,650,4],[602,6,651,4],[602,10,651,8,"ability"],[602,17,651,15],[602,18,651,16,"effects"],[602,25,651,23],[602,26,651,24,"includes"],[602,34,651,32],[602,35,651,33],[602,40,651,38],[602,41,651,39],[602,45,651,43,"ability"],[602,52,651,50],[602,53,651,51,"stats"],[602,58,651,56],[602,59,651,57,"duration"],[602,67,651,65],[602,69,651,67],[603,8,652,6],[603,12,652,12,"targets"],[603,19,652,19],[603,22,652,22,"isAOE"],[603,27,652,27],[603,30,653,8,"state"],[603,35,653,13],[603,36,653,14,"enemies"],[603,43,653,21],[603,44,653,22,"filter"],[603,50,653,28],[603,51,653,29,"enemy"],[603,56,653,34],[603,60,653,38],[604,10,654,10],[604,14,654,16,"ninjaX"],[604,20,654,22],[604,23,654,25,"currentNinjaPosition"],[604,43,654,45],[604,44,654,46,"x"],[604,45,654,47],[604,48,654,50],[604,50,654,52],[605,10,655,10],[605,14,655,16,"ninjaY"],[605,20,655,22],[605,23,655,25,"currentNinjaPosition"],[605,43,655,45],[605,44,655,46,"y"],[605,45,655,47],[605,48,655,50],[605,50,655,52],[606,10,656,10],[606,14,656,16,"enemyX"],[606,20,656,22],[606,23,656,25,"enemy"],[606,28,656,30],[606,29,656,31,"position"],[606,37,656,39],[606,38,656,40,"x"],[606,39,656,41],[606,42,656,44],[606,46,656,48],[607,10,657,10],[607,14,657,16,"enemyY"],[607,20,657,22],[607,23,657,25,"enemy"],[607,28,657,30],[607,29,657,31,"position"],[607,37,657,39],[607,38,657,40,"y"],[607,39,657,41],[607,42,657,44],[607,46,657,48],[608,10,658,10],[608,14,658,16,"distance"],[608,22,658,24],[608,25,658,27,"Math"],[608,29,658,31],[608,30,658,32,"sqrt"],[608,34,658,36],[608,35,658,37,"Math"],[608,39,658,41],[608,40,658,42,"pow"],[608,43,658,45],[608,44,658,46,"enemyX"],[608,50,658,52],[608,53,658,55,"ninjaX"],[608,59,658,61],[608,61,658,63],[608,62,658,64],[608,63,658,65],[608,66,658,68,"Math"],[608,70,658,72],[608,71,658,73,"pow"],[608,74,658,76],[608,75,658,77,"enemyY"],[608,81,658,83],[608,84,658,86,"ninjaY"],[608,90,658,92],[608,92,658,94],[608,93,658,95],[608,94,658,96],[608,95,658,97],[609,10,659,10],[609,17,659,17,"distance"],[609,25,659,25],[609,29,659,29,"ability"],[609,36,659,36],[609,37,659,37,"stats"],[609,42,659,42],[609,43,659,43,"aoeRadius"],[609,52,659,52],[610,8,660,8],[610,9,660,9],[610,10,660,10],[610,13,661,8],[610,14,661,9,"findClosestEnemyInternal"],[610,38,661,33],[610,39,661,34,"state"],[610,44,661,39],[610,45,661,40,"enemies"],[610,52,661,47],[610,53,661,48],[610,54,661,49],[610,55,661,50,"filter"],[610,61,661,56],[610,62,661,57,"Boolean"],[610,69,661,64],[610,70,661,65],[611,8,663,6,"targets"],[611,15,663,13],[611,16,663,14,"forEach"],[611,23,663,21],[611,24,663,22,"target"],[611,30,663,28],[611,34,663,32],[612,10,664,8,"state"],[612,15,664,13],[612,16,664,14,"statusEffects"],[612,29,664,27],[612,30,664,28,"addEffect"],[612,39,664,37],[612,40,664,38,"target"],[612,46,664,44],[612,47,664,45,"id"],[612,49,664,47],[612,51,664,49],[613,12,665,10,"id"],[613,14,665,12],[613,16,665,14],[613,19,665,17,"ability"],[613,26,665,24],[613,27,665,25,"id"],[613,29,665,27],[613,35,665,33],[614,12,666,10,"type"],[614,16,666,14],[614,18,666,16],[614,23,666,21],[615,12,667,10,"remainingTicks"],[615,26,667,24],[615,28,667,26,"Math"],[615,32,667,30],[615,33,667,31,"floor"],[615,38,667,36],[615,39,667,37,"ability"],[615,46,667,44],[615,47,667,45,"stats"],[615,52,667,50],[615,53,667,51,"duration"],[615,61,667,59],[615,64,667,62],[615,66,667,64],[615,67,667,65],[616,12,668,10,"tickInterval"],[616,24,668,22],[616,26,668,24],[616,28,668,26],[617,12,669,10,"lastTick"],[617,20,669,18],[617,22,669,20,"state"],[617,27,669,25],[617,28,669,26,"currentTick"],[617,39,669,37],[618,12,670,10,"value"],[618,17,670,15],[618,19,670,17,"Math"],[618,23,670,21],[618,24,670,22,"floor"],[618,29,670,27],[618,30,670,28,"damage"],[618,36,670,34],[618,39,670,37],[618,42,670,40],[618,43,670,41],[619,12,671,10,"stackable"],[619,21,671,19],[619,23,671,21],[620,10,672,8],[620,11,672,9],[620,12,672,10],[621,8,673,6],[621,9,673,7],[621,10,673,8],[622,6,674,4],[624,6,676,4],[625,6,677,4],[625,10,677,8,"ability"],[625,17,677,15],[625,18,677,16,"effects"],[625,25,677,23],[625,26,677,24,"includes"],[625,34,677,32],[625,35,677,33],[625,41,677,39],[625,42,677,40],[625,46,677,44,"ability"],[625,53,677,51],[625,54,677,52,"id"],[625,56,677,54],[625,61,677,59],[625,75,677,73],[625,77,677,75],[626,8,678,6,"console"],[626,15,678,13],[626,16,678,14,"log"],[626,19,678,17],[626,20,678,18],[626,66,678,64,"ability"],[626,73,678,71],[626,74,678,72,"stats"],[626,79,678,77],[626,80,678,78,"duration"],[626,88,678,86],[626,98,678,96],[626,99,678,97],[628,8,680,6],[629,8,681,6],[629,12,681,12,"cloneX"],[629,18,681,18],[629,21,681,21,"currentNinjaPosition"],[629,41,681,41],[629,42,681,42,"x"],[629,43,681,43],[629,46,681,46],[629,48,681,48],[629,49,681,49],[629,50,681,50],[630,8,682,6],[630,12,682,12,"cloneY"],[630,18,682,18],[630,21,682,21,"currentNinjaPosition"],[630,41,682,41],[630,42,682,42,"y"],[630,43,682,43],[630,46,682,46],[630,48,682,48],[630,49,682,49],[630,50,682,50],[632,8,684,6,"state"],[632,13,684,11],[632,14,684,12,"shadowClone"],[632,25,684,23],[632,28,684,26],[633,10,685,8,"id"],[633,12,685,10],[633,14,685,12],[633,30,685,28,"Date"],[633,34,685,32],[633,35,685,33,"now"],[633,38,685,36],[633,39,685,37],[633,40,685,38],[633,42,685,40],[634,10,686,8,"remainingTicks"],[634,24,686,22],[634,26,686,24,"Math"],[634,30,686,28],[634,31,686,29,"floor"],[634,36,686,34],[634,37,686,35,"ability"],[634,44,686,42],[634,45,686,43,"stats"],[634,50,686,48],[634,51,686,49,"duration"],[634,59,686,57],[634,62,686,60],[634,64,686,62],[634,65,686,63],[635,10,686,65],[636,10,687,8,"position"],[636,18,687,16],[636,20,687,18],[637,12,687,20,"x"],[637,13,687,21],[637,15,687,23,"cloneX"],[637,21,687,29],[638,12,687,31,"y"],[638,13,687,32],[638,15,687,34,"cloneY"],[639,10,687,41],[639,11,687,42],[640,10,688,8,"damageMultiplier"],[640,26,688,24],[640,28,688,26],[640,31,688,29],[640,32,688,31],[641,8,689,6],[641,9,689,7],[642,8,691,6,"console"],[642,15,691,13],[642,16,691,14,"log"],[642,19,691,17],[642,20,691,18],[642,63,691,61,"ability"],[642,70,691,68],[642,71,691,69,"stats"],[642,76,691,74],[642,77,691,75,"duration"],[642,85,691,83],[642,108,691,106],[642,109,691,107],[643,6,692,4],[644,4,693,2],[644,5,693,3],[646,4,695,2],[647,4,696,2],[647,8,696,8,"createProjectile"],[647,24,696,24],[647,27,696,27,"createProjectile"],[647,28,696,28,"targetEnemy"],[647,39,696,52],[647,41,696,54,"damage"],[647,47,696,68],[647,49,696,70,"ninjaPos"],[647,57,696,103],[647,59,696,105,"abilityInfo"],[647,70,696,159],[647,75,696,164],[648,6,697,4],[648,10,697,8],[648,11,697,9,"targetEnemy"],[648,22,697,20],[648,24,697,22],[649,8,698,6,"console"],[649,15,698,13],[649,16,698,14,"log"],[649,19,698,17],[649,20,698,18],[649,65,698,63],[649,66,698,64],[650,8,699,6],[650,15,699,13],[650,19,699,17],[651,6,700,4],[652,6,702,4],[652,10,702,10,"SCREEN_WIDTH"],[652,22,702,22],[652,25,702,25],[652,28,702,28],[653,6,703,4],[653,10,703,10,"GAME_AREA_HEIGHT"],[653,26,703,26],[653,29,703,29],[653,32,703,32],[653,35,703,35],[653,38,703,38],[653,39,703,39],[653,40,703,40],[654,6,704,4],[654,10,704,10,"NINJA_SIZE"],[654,20,704,20],[654,23,704,23],[654,25,704,25],[656,6,706,4],[657,6,707,4],[657,10,707,10,"ninjaX"],[657,16,707,16],[657,19,707,19,"ninjaPos"],[657,27,707,27],[657,30,707,30,"ninjaPos"],[657,38,707,38],[657,39,707,39,"x"],[657,40,707,40],[657,43,707,43,"NINJA_SIZE"],[657,53,707,53],[657,56,707,56],[657,57,707,57],[657,60,707,60,"SCREEN_WIDTH"],[657,72,707,72],[657,75,707,75],[657,76,707,76],[658,6,708,4],[658,10,708,10,"ninjaY"],[658,16,708,16],[658,19,708,19,"ninjaPos"],[658,27,708,27],[658,30,708,30,"ninjaPos"],[658,38,708,38],[658,39,708,39,"y"],[658,40,708,40],[658,43,708,43,"NINJA_SIZE"],[658,53,708,53],[658,56,708,56],[658,57,708,57],[658,60,708,60,"GAME_AREA_HEIGHT"],[658,76,708,76],[658,79,708,79],[658,80,708,80],[659,6,709,4],[659,10,709,10,"ENEMY_SIZE"],[659,20,709,20],[659,23,709,23],[659,25,709,25],[660,6,711,4],[660,10,711,10,"projectileId"],[660,22,711,22],[660,25,711,25],[660,33,711,33,"Date"],[660,37,711,37],[660,38,711,38,"now"],[660,41,711,41],[660,42,711,42],[660,43,711,43],[660,47,711,47,"Math"],[660,51,711,51],[660,52,711,52,"random"],[660,58,711,58],[660,59,711,59],[660,60,711,60],[660,62,711,62],[661,6,713,4],[661,10,713,10,"projectile"],[661,20,713,38],[661,23,713,41],[662,8,714,6,"id"],[662,10,714,8],[662,12,714,10,"projectileId"],[662,24,714,22],[663,8,715,6,"x"],[663,9,715,7],[663,11,715,9,"ninjaX"],[663,17,715,15],[664,8,716,6,"y"],[664,9,716,7],[664,11,716,9,"ninjaY"],[664,17,716,15],[665,8,717,6,"targetX"],[665,15,717,13],[665,17,717,15,"targetEnemy"],[665,28,717,26],[665,29,717,27,"position"],[665,37,717,35],[665,38,717,36,"x"],[665,39,717,37],[665,42,717,40,"ENEMY_SIZE"],[665,52,717,50],[665,55,717,53],[665,56,717,54],[666,8,718,6,"targetY"],[666,15,718,13],[666,17,718,15,"targetEnemy"],[666,28,718,26],[666,29,718,27,"position"],[666,37,718,35],[666,38,718,36,"y"],[666,39,718,37],[666,42,718,40,"ENEMY_SIZE"],[666,52,718,50],[666,55,718,53],[666,56,718,54],[667,8,719,6,"targetEnemyId"],[667,21,719,19],[667,23,719,21,"targetEnemy"],[667,34,719,32],[667,35,719,33,"id"],[667,37,719,35],[668,8,720,6,"damage"],[668,14,720,12],[668,16,720,14,"damage"],[668,22,720,20],[669,8,721,6,"startTime"],[669,17,721,15],[669,19,721,17,"Date"],[669,23,721,21],[669,24,721,22,"now"],[669,27,721,25],[669,28,721,26],[669,29,721,27],[670,8,722,6,"duration"],[670,16,722,14],[670,18,722,16],[670,21,722,19],[671,8,722,21],[672,8,723,6],[673,8,724,6,"abilityId"],[673,17,724,15],[673,19,724,17,"abilityInfo"],[673,30,724,28],[673,32,724,30,"id"],[673,34,724,32],[673,38,724,36],[673,54,724,52],[674,8,725,6,"abilityName"],[674,19,725,17],[674,21,725,19,"abilityInfo"],[674,32,725,30],[674,34,725,32,"name"],[674,38,725,36],[674,42,725,40],[674,58,725,56],[675,8,726,6,"abilityIcon"],[675,19,726,17],[675,21,726,19,"abilityInfo"],[675,32,726,30],[675,34,726,32,"icon"],[675,38,726,36],[675,42,726,40],[675,46,726,44],[675,47,726,46],[676,6,727,4],[676,7,727,5],[677,6,729,4,"console"],[677,13,729,11],[677,14,729,12,"log"],[677,17,729,15],[677,18,729,16],[677,44,729,42,"abilityInfo"],[677,55,729,53],[677,57,729,55,"name"],[677,61,729,59],[677,65,729,63],[677,81,729,79],[677,101,729,99,"projectileId"],[677,113,729,111],[677,128,729,126,"targetEnemy"],[677,139,729,137],[677,140,729,138,"name"],[677,144,729,142],[677,152,729,150,"damage"],[677,158,729,156],[677,167,729,165],[677,168,729,166],[678,6,731,4,"console"],[678,13,731,11],[678,14,731,12,"log"],[678,17,731,15],[678,18,731,16],[678,53,731,51,"targetEnemy"],[678,64,731,62],[678,65,731,63,"id"],[678,67,731,65],[678,75,731,73,"damage"],[678,81,731,79],[678,90,731,88],[678,91,731,89],[679,6,732,4,"console"],[679,13,732,11],[679,14,732,12,"log"],[679,17,732,15],[679,18,732,16],[679,53,732,51,"ninjaX"],[679,59,732,57],[679,64,732,62,"ninjaY"],[679,70,732,68],[679,87,732,85,"projectile"],[679,97,732,95],[679,98,732,96,"targetX"],[679,105,732,103],[679,110,732,108,"projectile"],[679,120,732,118],[679,121,732,119,"targetY"],[679,128,732,126],[679,131,732,129],[679,132,732,130],[680,6,734,4,"setProjectiles"],[680,20,734,18],[680,21,734,19,"prev"],[680,25,734,23],[680,29,734,27],[680,30,734,28],[680,33,734,31,"prev"],[680,37,734,35],[680,39,734,37,"projectile"],[680,49,734,47],[680,50,734,48],[680,51,734,49],[682,6,736,4],[683,6,737,4,"setTimeout"],[683,16,737,14],[683,17,737,15],[683,23,737,21],[684,8,738,6,"handleProjectileHit"],[684,27,738,25],[684,28,738,26,"projectile"],[684,38,738,36],[684,39,738,37],[685,6,739,4],[685,7,739,5],[685,9,739,7],[685,12,739,10],[685,13,739,11],[686,6,741,4],[686,13,741,11,"projectile"],[686,23,741,21],[687,4,742,2],[687,5,742,3],[689,4,744,2],[690,4,745,2],[690,8,745,8,"spawnTestEnemy"],[690,22,745,22],[690,25,745,26,"state"],[690,30,745,44],[690,34,745,49],[691,6,746,4,"console"],[691,13,746,11],[691,14,746,12,"log"],[691,17,746,15],[691,18,746,16],[691,83,746,81],[691,84,746,82],[693,6,748,4],[694,6,749,4],[694,10,749,10,"zoneEnemy"],[694,19,749,19],[694,22,749,22,"spawnZoneEnemy"],[694,36,749,36],[694,37,749,37],[694,38,749,38],[695,6,750,4],[695,10,750,8],[695,11,750,9,"zoneEnemy"],[695,20,750,18],[695,22,750,20],[696,8,751,6,"console"],[696,15,751,13],[696,16,751,14,"log"],[696,19,751,17],[696,20,751,18],[696,76,751,74],[696,77,751,75],[697,8,752,6],[698,8,753,6,"spawnBasicTestEnemy"],[698,27,753,25],[698,28,753,26,"state"],[698,33,753,31],[698,34,753,32],[699,8,754,6],[700,6,755,4],[701,6,757,4,"console"],[701,13,757,11],[701,14,757,12,"log"],[701,17,757,15],[701,18,757,16],[701,44,757,42,"zoneEnemy"],[701,53,757,51],[701,54,757,52,"name"],[701,58,757,56],[701,63,757,61,"zoneEnemy"],[701,72,757,70],[701,73,757,71,"typeId"],[701,79,757,77],[701,94,757,92,"currentZone"],[701,105,757,103],[701,107,757,105,"id"],[701,109,757,107],[701,119,757,117,"currentZoneLevel"],[701,135,757,133],[701,137,757,135,"level"],[701,142,757,140],[701,144,757,142],[701,145,757,143],[703,6,759,4],[704,6,760,4],[704,10,760,10,"combatEnemy"],[704,21,760,34],[704,24,760,37],[705,8,761,6,"id"],[705,10,761,8],[705,12,761,10,"zoneEnemy"],[705,21,761,19],[705,22,761,20,"id"],[705,24,761,22],[706,8,762,6,"name"],[706,12,762,10],[706,14,762,12,"zoneEnemy"],[706,23,762,21],[706,24,762,22,"name"],[706,28,762,26],[707,8,763,6,"health"],[707,14,763,12],[707,16,763,14,"zoneEnemy"],[707,25,763,23],[707,26,763,24,"hp"],[707,28,763,26],[708,8,764,6,"maxHealth"],[708,17,764,15],[708,19,764,17,"zoneEnemy"],[708,28,764,26],[708,29,764,27,"maxHP"],[708,34,764,32],[709,8,765,6,"stats"],[709,13,765,11],[709,15,765,13],[710,10,766,8,"attack"],[710,16,766,14],[710,18,766,16,"zoneEnemy"],[710,27,766,25],[710,28,766,26,"attack"],[710,34,766,32],[711,10,767,8,"defense"],[711,17,767,15],[711,19,767,17],[711,21,767,19],[712,10,767,21],[713,10,768,8,"health"],[713,16,768,14],[713,18,768,16,"zoneEnemy"],[713,27,768,25],[713,28,768,26,"hp"],[713,30,768,28],[714,10,769,8,"maxHealth"],[714,19,769,17],[714,21,769,19,"zoneEnemy"],[714,30,769,28],[714,31,769,29,"maxHP"],[714,36,769,34],[715,10,770,8,"critChance"],[715,20,770,18],[715,22,770,20],[715,23,770,21],[716,10,771,8,"critDamage"],[716,20,771,18],[716,22,771,20],[716,25,771,23],[717,10,772,8,"cooldownReduction"],[717,27,772,25],[717,29,772,27],[718,8,773,6],[718,9,773,7],[719,8,774,6,"position"],[719,16,774,14],[719,18,774,16,"zoneEnemy"],[719,27,774,25],[719,28,774,26,"position"],[719,36,774,34],[720,8,775,6,"lastDamaged"],[720,19,775,17],[720,21,775,19],[720,22,775,20],[721,8,776,6],[722,8,777,6,"zoneTypeId"],[722,18,777,16],[722,20,777,18,"zoneEnemy"],[722,29,777,27],[722,30,777,28,"typeId"],[722,36,777,34],[723,8,778,6,"zoneXP"],[723,14,778,12],[723,16,778,14,"zoneEnemy"],[723,25,778,23],[723,26,778,24,"xp"],[724,6,779,4],[724,7,779,5],[725,6,781,4,"console"],[725,13,781,11],[725,14,781,12,"log"],[725,17,781,15],[725,18,781,16],[725,42,781,40,"combatEnemy"],[725,53,781,51],[725,54,781,52,"name"],[725,58,781,56],[725,67,781,65,"combatEnemy"],[725,78,781,76],[725,79,781,77,"health"],[725,85,781,83],[725,100,781,98,"currentZone"],[725,111,781,109],[725,113,781,111,"id"],[725,115,781,113],[725,125,781,123,"currentZoneLevel"],[725,141,781,139],[725,143,781,141,"level"],[725,148,781,146],[725,150,781,148],[725,151,781,149],[726,6,782,4,"state"],[726,11,782,9],[726,12,782,10,"enemies"],[726,19,782,17],[726,20,782,18,"push"],[726,24,782,22],[726,25,782,23,"combatEnemy"],[726,36,782,34],[726,37,782,35],[727,4,783,2],[727,5,783,3],[729,4,785,2],[730,4,786,2],[730,8,786,8,"spawnBasicTestEnemy"],[730,27,786,27],[730,30,786,31,"state"],[730,35,786,49],[730,39,786,54],[731,6,787,4],[731,10,787,10,"SCREEN_WIDTH"],[731,22,787,22],[731,25,787,25],[731,28,787,28],[732,6,788,4],[732,10,788,10,"GAME_AREA_HEIGHT"],[732,26,788,26],[732,29,788,29],[732,32,788,32],[732,35,788,35],[732,38,788,38],[733,6,789,4],[733,10,789,10,"ENEMY_SIZE"],[733,20,789,20],[733,23,789,23],[733,25,789,25],[734,6,791,4],[734,10,791,10,"x"],[734,11,791,11],[734,14,791,14,"Math"],[734,18,791,18],[734,19,791,19,"random"],[734,25,791,25],[734,26,791,26],[734,27,791,27],[734,31,791,31,"SCREEN_WIDTH"],[734,43,791,43],[734,46,791,46,"ENEMY_SIZE"],[734,56,791,56],[734,59,791,59],[734,60,791,60],[734,61,791,61],[734,64,791,64,"ENEMY_SIZE"],[734,74,791,74],[735,6,792,4],[735,10,792,10,"y"],[735,11,792,11],[735,14,792,14,"Math"],[735,18,792,18],[735,19,792,19,"random"],[735,25,792,25],[735,26,792,26],[735,27,792,27],[735,31,792,31,"GAME_AREA_HEIGHT"],[735,47,792,47],[735,50,792,50,"ENEMY_SIZE"],[735,60,792,60],[735,63,792,63],[735,64,792,64],[735,65,792,65],[735,68,792,68,"ENEMY_SIZE"],[735,78,792,78],[736,6,794,4],[736,10,794,10,"enemy"],[736,15,794,28],[736,18,794,31],[737,8,795,6,"id"],[737,10,795,8],[737,12,795,10],[737,30,795,28,"Date"],[737,34,795,32],[737,35,795,33,"now"],[737,38,795,36],[737,39,795,37],[737,40,795,38],[737,44,795,42,"Math"],[737,48,795,46],[737,49,795,47,"random"],[737,55,795,53],[737,56,795,54],[737,57,795,55],[737,59,795,57],[738,8,796,6,"name"],[738,12,796,10],[738,14,796,12],[738,26,796,24,"Math"],[738,30,796,28],[738,31,796,29,"floor"],[738,36,796,34],[738,37,796,35,"Math"],[738,41,796,39],[738,42,796,40,"random"],[738,48,796,46],[738,49,796,47],[738,50,796,48],[738,53,796,51],[738,56,796,54],[738,57,796,55],[738,59,796,57],[739,8,797,6,"health"],[739,14,797,12],[739,16,797,14],[739,18,797,16],[740,8,798,6,"maxHealth"],[740,17,798,15],[740,19,798,17],[740,21,798,19],[741,8,799,6,"stats"],[741,13,799,11],[741,15,799,13],[742,10,800,8,"attack"],[742,16,800,14],[742,18,800,16],[742,20,800,18],[743,10,801,8,"defense"],[743,17,801,15],[743,19,801,17],[743,21,801,19],[744,10,802,8,"health"],[744,16,802,14],[744,18,802,16],[744,20,802,18],[745,10,803,8,"maxHealth"],[745,19,803,17],[745,21,803,19],[745,23,803,21],[746,10,804,8,"critChance"],[746,20,804,18],[746,22,804,20],[746,23,804,21],[747,10,805,8,"critDamage"],[747,20,805,18],[747,22,805,20],[747,25,805,23],[748,10,806,8,"cooldownReduction"],[748,27,806,25],[748,29,806,27],[749,8,807,6],[749,9,807,7],[750,8,808,6,"position"],[750,16,808,14],[750,18,808,16],[751,10,808,18,"x"],[751,11,808,19],[752,10,808,21,"y"],[753,8,808,23],[753,9,808,24],[754,8,809,6,"lastDamaged"],[754,19,809,17],[754,21,809,19],[755,6,810,4],[755,7,810,5],[756,6,812,4,"console"],[756,13,812,11],[756,14,812,12,"log"],[756,17,812,15],[756,18,812,16],[756,42,812,40,"enemy"],[756,47,812,45],[756,48,812,46,"name"],[756,52,812,50],[756,60,812,58,"Math"],[756,64,812,62],[756,65,812,63,"round"],[756,70,812,68],[756,71,812,69,"x"],[756,72,812,70],[756,73,812,71],[756,78,812,76,"Math"],[756,82,812,80],[756,83,812,81,"round"],[756,88,812,86],[756,89,812,87,"y"],[756,90,812,88],[756,91,812,89],[756,94,812,92],[756,95,812,93],[757,6,813,4,"state"],[757,11,813,9],[757,12,813,10,"enemies"],[757,19,813,17],[757,20,813,18,"push"],[757,24,813,22],[757,25,813,23,"enemy"],[757,30,813,28],[757,31,813,29],[758,4,814,2],[758,5,814,3],[760,4,816,2],[761,4,817,2],[761,8,817,8,"startCombat"],[761,19,817,19],[761,22,817,22,"React"],[761,27,817,27],[761,28,817,27,"default"],[761,35,817,27],[761,36,817,28,"useCallback"],[761,47,817,39],[761,48,817,40],[761,54,817,46],[762,6,818,4,"console"],[762,13,818,11],[762,14,818,12,"log"],[762,17,818,15],[762,18,818,16],[762,63,818,61],[762,64,818,62],[763,6,819,4,"setCombatState"],[763,20,819,18],[763,21,819,19,"prev"],[763,25,819,23],[763,30,819,28],[764,8,819,30],[764,11,819,33,"prev"],[764,15,819,37],[765,8,819,39,"isInCombat"],[765,18,819,49],[765,20,819,51],[766,6,819,56],[766,7,819,57],[766,8,819,58],[766,9,819,59],[768,6,821,4],[769,6,822,4,"combatEngine"],[769,25,822,16],[769,26,822,16,"combatEngine"],[769,38,822,16],[769,39,822,17,"addTickCallback"],[769,54,822,32],[769,55,822,33,"handleCombatTick"],[769,71,822,49],[769,72,822,50],[770,6,823,4,"console"],[770,13,823,11],[770,14,823,12,"log"],[770,17,823,15],[770,18,823,16],[770,62,823,60],[770,63,823,61],[772,6,825,4],[773,6,826,4,"combatEngine"],[773,25,826,16],[773,26,826,16,"combatEngine"],[773,38,826,16],[773,39,826,17,"start"],[773,44,826,22],[773,45,826,23],[773,46,826,24],[774,4,827,2],[774,5,827,3],[774,7,827,5],[774,8,827,6,"combatEngine"],[774,27,827,18],[774,28,827,18,"combatEngine"],[774,40,827,18],[774,42,827,20,"handleCombatTick"],[774,58,827,36],[774,59,827,37],[774,60,827,38],[776,4,829,2],[777,4,830,2],[777,8,830,8,"stopCombat"],[777,18,830,18],[777,21,830,21,"React"],[777,26,830,26],[777,27,830,26,"default"],[777,34,830,26],[777,35,830,27,"useCallback"],[777,46,830,38],[777,47,830,39],[777,53,830,45],[778,6,831,4,"setCombatState"],[778,20,831,18],[778,21,831,19,"prev"],[778,25,831,23],[778,30,831,28],[779,8,831,30],[779,11,831,33,"prev"],[779,15,831,37],[780,8,831,39,"isInCombat"],[780,18,831,49],[780,20,831,51],[781,6,831,57],[781,7,831,58],[781,8,831,59],[781,9,831,60],[782,6,832,4,"combatEngine"],[782,25,832,16],[782,26,832,16,"combatEngine"],[782,38,832,16],[782,39,832,17,"removeTickCallback"],[782,57,832,35],[782,58,832,36,"handleCombatTick"],[782,74,832,52],[782,75,832,53],[783,4,833,2],[783,5,833,3],[783,7,833,5],[783,8,833,6,"combatEngine"],[783,27,833,18],[783,28,833,18,"combatEngine"],[783,40,833,18],[783,42,833,20,"handleCombatTick"],[783,58,833,36],[783,59,833,37],[783,60,833,38],[785,4,835,2],[786,4,836,2],[786,8,836,8,"equipAbility"],[786,20,836,20],[786,23,836,23,"equipAbility"],[786,24,836,24,"abilityId"],[786,33,836,41],[786,35,836,43,"slotIndex"],[786,44,836,60],[786,49,836,74],[787,6,837,4],[787,13,837,11,"combatState"],[787,24,837,22],[787,25,837,23,"abilityManager"],[787,39,837,37],[787,40,837,38,"equipAbility"],[787,52,837,50],[787,53,837,51,"abilityId"],[787,62,837,60],[787,64,837,62,"slotIndex"],[787,73,837,71],[787,74,837,72],[788,4,838,2],[788,5,838,3],[789,4,840,2],[789,8,840,8,"getDeck"],[789,15,840,15],[789,18,840,18,"getDeck"],[789,19,840,18],[789,24,840,24],[790,6,841,4],[790,13,841,11,"combatState"],[790,24,841,22],[790,25,841,23,"abilityManager"],[790,39,841,37],[790,40,841,38,"getDeck"],[790,47,841,45],[790,48,841,46],[790,49,841,47],[791,4,842,2],[791,5,842,3],[792,4,844,2],[792,8,844,8,"getAvailableAbilities"],[792,29,844,29],[792,32,844,32,"getAvailableAbilities"],[792,33,844,32],[792,38,844,38],[793,6,845,4],[793,13,845,11,"combatState"],[793,24,845,22],[793,25,845,23,"abilityManager"],[793,39,845,37],[793,40,845,38,"getAvailableAbilities"],[793,61,845,59],[793,62,845,60],[793,63,845,61],[794,4,846,2],[794,5,846,3],[795,4,848,2],[795,8,848,8,"upgradeAbility"],[795,22,848,22],[795,25,848,26,"abilityId"],[795,34,848,43],[795,38,848,57],[796,6,849,4],[796,13,849,11,"combatState"],[796,24,849,22],[796,25,849,23,"abilityManager"],[796,39,849,37],[796,40,849,38,"upgradeAbility"],[796,54,849,52],[796,55,849,53,"abilityId"],[796,64,849,62],[796,65,849,63],[797,4,850,2],[797,5,850,3],[799,4,852,2],[800,4,853,2],[800,8,853,8,"clearAllEnemies"],[800,23,853,23],[800,26,853,26,"clearAllEnemies"],[800,27,853,26],[800,32,853,32],[801,6,854,4,"console"],[801,13,854,11],[801,14,854,12,"log"],[801,17,854,15],[801,18,854,16],[801,67,854,65],[801,68,854,66],[802,6,855,4,"setCombatState"],[802,20,855,18],[802,21,855,19,"prev"],[802,25,855,23],[802,30,855,28],[803,8,856,6],[803,11,856,9,"prev"],[803,15,856,13],[804,8,857,6,"enemies"],[804,15,857,13],[804,17,857,15],[805,6,858,4],[805,7,858,5],[805,8,858,6],[805,9,858,7],[806,4,859,2],[806,5,859,3],[808,4,861,2],[809,4,862,2],[809,8,862,8,"triggerLevelUpExplosion"],[809,31,862,31],[809,34,862,34,"triggerLevelUpExplosion"],[809,35,862,34],[809,40,862,40],[810,6,863,4,"console"],[810,13,863,11],[810,14,863,12,"log"],[810,17,863,15],[810,18,863,16],[810,70,863,68],[810,71,863,69],[811,6,865,4],[811,10,865,10,"explosionTime"],[811,23,865,23],[811,26,865,26,"Date"],[811,30,865,30],[811,31,865,31,"now"],[811,34,865,34],[811,35,865,35],[811,36,865,36],[812,6,866,4,"setLastExplosionTime"],[812,26,866,24],[812,27,866,25,"explosionTime"],[812,40,866,38],[812,41,866,39],[813,6,868,4,"setCombatState"],[813,20,868,18],[813,21,868,19,"prev"],[813,25,868,23],[813,29,868,27],[814,8,869,6],[815,8,870,6],[815,12,870,12,"enemyCount"],[815,22,870,22],[815,25,870,25,"prev"],[815,29,870,29],[815,30,870,30,"enemies"],[815,37,870,37],[815,38,870,38,"length"],[815,44,870,44],[816,8,871,6],[816,12,871,12,"explosionXP"],[816,23,871,23],[816,26,871,26,"enemyCount"],[816,36,871,36],[816,39,871,39],[816,42,871,42],[816,43,871,43],[816,44,871,44],[817,8,872,6],[817,12,872,12,"explosionGold"],[817,25,872,25],[817,28,872,28,"enemyCount"],[817,38,872,38],[817,41,872,41],[817,44,872,44],[817,45,872,45],[817,46,872,46],[819,8,874,6,"console"],[819,15,874,13],[819,16,874,14,"log"],[819,19,874,17],[819,20,874,18],[819,44,874,42,"enemyCount"],[819,54,874,52],[819,76,874,74,"explosionXP"],[819,87,874,85],[819,98,874,96,"explosionGold"],[819,111,874,109],[819,118,874,116],[819,119,874,117],[821,8,876,6],[822,8,877,6],[822,12,877,10,"explosionXP"],[822,23,877,21],[822,26,877,24],[822,27,877,25],[822,29,877,27],[823,10,878,8,"setTimeout"],[823,20,878,18],[823,21,878,19],[823,27,878,25],[824,12,879,10,"game"],[824,16,879,14],[824,17,879,15,"updateNinja"],[824,28,879,26],[824,29,879,28,"ninja"],[824,34,879,33],[824,39,879,39],[825,14,880,12,"experience"],[825,24,880,22],[825,26,880,24,"ninja"],[825,31,880,29],[825,32,880,30,"experience"],[825,42,880,40],[825,45,880,43,"explosionXP"],[825,56,880,54],[826,14,881,12,"gold"],[826,18,881,16],[826,20,881,18,"ninja"],[826,25,881,23],[826,26,881,24,"gold"],[826,30,881,28],[826,33,881,31,"explosionGold"],[827,12,882,10],[827,13,882,11],[827,14,882,12],[827,15,882,13],[828,10,883,8],[828,11,883,9],[828,13,883,11],[828,14,883,12],[828,15,883,13],[828,16,883,14],[828,17,883,15],[829,8,884,6],[831,8,886,6],[832,8,887,6],[833,8,888,6],[833,12,888,12,"damagedEnemies"],[833,26,888,26],[833,29,888,29,"prev"],[833,33,888,33],[833,34,888,34,"enemies"],[833,41,888,41],[833,42,888,42,"map"],[833,45,888,45],[833,46,888,46,"enemy"],[833,51,888,51],[833,56,888,56],[834,10,889,8],[834,13,889,11,"enemy"],[834,18,889,16],[835,10,890,8,"health"],[835,16,890,14],[835,18,890,16],[835,19,890,17],[836,10,890,19],[837,10,891,8,"lastDamaged"],[837,21,891,19],[837,23,891,21,"combatEngine"],[837,42,891,33],[837,43,891,33,"combatEngine"],[837,55,891,33],[837,56,891,34,"getCurrentTick"],[837,70,891,48],[837,71,891,49],[838,8,892,6],[838,9,892,7],[838,10,892,8],[838,11,892,9],[839,8,894,6],[839,15,894,13],[840,10,895,8],[840,13,895,11,"prev"],[840,17,895,15],[841,10,896,8,"enemies"],[841,17,896,15],[841,19,896,17,"damagedEnemies"],[842,8,897,6],[842,9,897,7],[843,6,898,4],[843,7,898,5],[843,8,898,6],[844,4,899,2],[844,5,899,3],[846,4,901,2],[847,4,902,2],[847,8,902,8,"spawnEnemy"],[847,18,902,18],[847,21,902,22,"position"],[847,29,902,57],[847,33,902,75],[848,6,903,4],[848,10,903,10,"SCREEN_WIDTH"],[848,22,903,22],[848,25,903,25],[848,28,903,28],[849,6,904,4],[849,10,904,10,"GAME_AREA_HEIGHT"],[849,26,904,26],[849,29,904,29],[849,32,904,32],[849,35,904,35],[849,38,904,38],[849,39,904,39],[849,40,904,40],[850,6,905,4],[850,10,905,10,"ENEMY_SIZE"],[850,20,905,20],[850,23,905,23],[850,25,905,25],[852,6,907,4],[853,6,908,4],[853,10,908,10,"x"],[853,11,908,11],[853,14,908,14,"position"],[853,22,908,22],[853,24,908,24,"x"],[853,25,908,25],[853,29,908,29,"Math"],[853,33,908,33],[853,34,908,34,"random"],[853,40,908,40],[853,41,908,41],[853,42,908,42],[853,46,908,46,"SCREEN_WIDTH"],[853,58,908,58],[853,61,908,61,"ENEMY_SIZE"],[853,71,908,71],[853,74,908,74],[853,75,908,75],[853,76,908,76],[853,79,908,79,"ENEMY_SIZE"],[853,89,908,89],[854,6,909,4],[854,10,909,10,"y"],[854,11,909,11],[854,14,909,14,"position"],[854,22,909,22],[854,24,909,24,"y"],[854,25,909,25],[854,29,909,29,"Math"],[854,33,909,33],[854,34,909,34,"random"],[854,40,909,40],[854,41,909,41],[854,42,909,42],[854,46,909,46,"GAME_AREA_HEIGHT"],[854,62,909,62],[854,65,909,65,"ENEMY_SIZE"],[854,75,909,75],[854,78,909,78],[854,79,909,79],[854,80,909,80],[854,83,909,83,"ENEMY_SIZE"],[854,93,909,93],[855,6,911,4],[855,10,911,10,"enemy"],[855,15,911,28],[855,18,911,31],[856,8,912,6,"id"],[856,10,912,8],[856,12,912,10],[856,21,912,19],[856,23,912,21,"enemyCounter"],[856,35,912,33],[856,37,912,35],[857,8,913,6,"name"],[857,12,913,10],[857,14,913,12],[857,24,913,22],[858,8,914,6,"health"],[858,14,914,12],[858,16,914,14],[858,19,914,17],[859,8,915,6,"maxHealth"],[859,17,915,15],[859,19,915,17],[859,22,915,20],[860,8,916,6,"stats"],[860,13,916,11],[860,15,916,13],[861,10,917,8,"attack"],[861,16,917,14],[861,18,917,16],[861,20,917,18],[862,10,918,8,"defense"],[862,17,918,15],[862,19,918,17],[862,21,918,19],[863,10,919,8,"health"],[863,16,919,14],[863,18,919,16],[863,21,919,19],[864,10,920,8,"maxHealth"],[864,19,920,17],[864,21,920,19],[864,24,920,22],[865,10,921,8,"critChance"],[865,20,921,18],[865,22,921,20],[865,23,921,21],[866,10,922,8,"critDamage"],[866,20,922,18],[866,22,922,20],[866,25,922,23],[867,10,923,8,"cooldownReduction"],[867,27,923,25],[867,29,923,27],[868,8,924,6],[868,9,924,7],[869,8,925,6,"position"],[869,16,925,14],[869,18,925,16],[870,10,925,18,"x"],[870,11,925,19],[871,10,925,21,"y"],[872,8,925,23],[872,9,925,24],[873,8,926,6,"lastDamaged"],[873,19,926,17],[873,21,926,19],[874,6,927,4],[874,7,927,5],[875,6,929,4,"setCombatState"],[875,20,929,18],[875,21,929,19,"prev"],[875,25,929,23],[875,30,929,28],[876,8,930,6],[876,11,930,9,"prev"],[876,15,930,13],[877,8,931,6,"enemies"],[877,15,931,13],[877,17,931,15],[877,18,931,16],[877,21,931,19,"prev"],[877,25,931,23],[877,26,931,24,"enemies"],[877,33,931,31],[877,35,931,33,"enemy"],[877,40,931,38],[878,6,932,4],[878,7,932,5],[878,8,932,6],[878,9,932,7],[879,6,934,4],[879,13,934,11,"enemy"],[879,18,934,16],[880,4,935,2],[880,5,935,3],[882,4,937,2],[883,4,938,2],[883,8,938,8,"spawnBoss"],[883,17,938,17],[883,20,938,21,"bossEnemy"],[883,29,938,43],[883,33,938,48],[884,6,939,4,"console"],[884,13,939,11],[884,14,939,12,"log"],[884,17,939,15],[884,18,939,16],[884,39,939,37,"bossEnemy"],[884,48,939,46],[884,49,939,47,"name"],[884,53,939,51],[884,90,939,88],[884,91,939,89],[885,6,940,4,"setCombatState"],[885,20,940,18],[885,21,940,19,"prev"],[885,25,940,23],[885,30,940,28],[886,8,941,6],[886,11,941,9,"prev"],[886,15,941,13],[887,8,942,6,"enemies"],[887,15,942,13],[887,17,942,15],[887,18,942,16,"bossEnemy"],[887,27,942,25],[887,28,942,26],[887,29,942,27],[888,6,943,4],[888,7,943,5],[888,8,943,6],[888,9,943,7],[889,4,944,2],[889,5,944,3],[891,4,946,2],[892,4,947,2],[892,8,947,8,"clearSpecificEnemy"],[892,26,947,26],[892,29,947,30,"enemyId"],[892,36,947,45],[892,40,947,50],[893,6,948,4,"setCombatState"],[893,20,948,18],[893,21,948,19,"prev"],[893,25,948,23],[893,30,948,28],[894,8,949,6],[894,11,949,9,"prev"],[894,15,949,13],[895,8,950,6,"enemies"],[895,15,950,13],[895,17,950,15,"prev"],[895,21,950,19],[895,22,950,20,"enemies"],[895,29,950,27],[895,30,950,28,"filter"],[895,36,950,34],[895,37,950,35,"enemy"],[895,42,950,40],[895,46,950,44,"enemy"],[895,51,950,49],[895,52,950,50,"id"],[895,54,950,52],[895,59,950,57,"enemyId"],[895,66,950,64],[896,6,951,4],[896,7,951,5],[896,8,951,6],[896,9,951,7],[897,4,952,2],[897,5,952,3],[899,4,954,2],[900,4,955,2],[900,8,955,8,"useAbilityManually"],[900,26,955,26],[900,29,955,26,"_s3"],[900,32,955,26],[900,33,955,29],[900,37,955,29,"useCallback"],[900,43,955,40],[900,44,955,40,"useCallback"],[900,55,955,40],[900,57,955,40,"_s3"],[900,60,955,40],[900,61,955,42,"slotIndex"],[900,70,955,59],[900,74,955,73],[901,6,955,73,"_s3"],[901,9,955,73],[902,6,956,4,"console"],[902,13,956,11],[902,14,956,12,"log"],[902,17,956,15],[902,18,956,16],[902,53,956,51,"slotIndex"],[902,62,956,60],[902,64,956,62],[902,65,956,63],[904,6,958,4],[905,6,959,4],[905,10,959,8],[905,11,959,9,"game"],[905,15,959,13],[905,16,959,14,"gameState"],[905,25,959,23],[905,26,959,24,"isAlive"],[905,33,959,31],[905,35,959,33],[906,8,960,6,"console"],[906,15,960,13],[906,16,960,14,"log"],[906,19,960,17],[906,20,960,18],[906,70,960,68],[906,71,960,69],[907,8,961,6],[907,15,961,13],[907,20,961,18],[908,6,962,4],[910,6,964,4],[911,6,965,4],[911,10,965,10,"isReady"],[911,17,965,17],[911,20,965,20,"combatState"],[911,31,965,31],[911,32,965,32,"abilityManager"],[911,46,965,46],[911,47,965,47,"isAbilityReady"],[911,61,965,61],[911,62,965,62,"slotIndex"],[911,71,965,71],[911,72,965,72],[912,6,966,4],[912,10,966,8],[912,11,966,9,"isReady"],[912,18,966,16],[912,20,966,18],[913,8,967,6,"console"],[913,15,967,13],[913,16,967,14,"log"],[913,19,967,17],[913,20,967,18],[913,41,967,39,"slotIndex"],[913,50,967,48],[913,85,967,83],[913,86,967,84],[914,8,968,6],[914,15,968,13],[914,20,968,18],[915,6,969,4],[917,6,971,4],[918,6,972,4],[918,10,972,8,"combatState"],[918,21,972,19],[918,22,972,20,"enemies"],[918,29,972,27],[918,30,972,28,"length"],[918,36,972,34],[918,41,972,39],[918,42,972,40],[918,44,972,42],[919,8,973,6,"console"],[919,15,973,13],[919,16,973,14,"log"],[919,19,973,17],[919,20,973,18],[919,69,973,67],[919,70,973,68],[920,8,974,6],[920,15,974,13],[920,20,974,18],[921,6,975,4],[923,6,977,4],[924,6,978,4],[924,10,978,10,"currentTick"],[924,21,978,21],[924,24,978,24,"combatEngine"],[924,43,978,36],[924,44,978,36,"combatEngine"],[924,56,978,36],[924,57,978,37,"getCurrentTick"],[924,71,978,51],[924,72,978,52],[924,73,978,53],[925,6,979,4],[925,10,979,10,"success"],[925,17,979,17],[925,20,979,20,"combatState"],[925,31,979,31],[925,32,979,32,"abilityManager"],[925,46,979,46],[925,47,979,47,"useAbility"],[925,57,979,57],[925,58,979,58,"slotIndex"],[925,67,979,67],[925,69,979,69,"currentTick"],[925,80,979,80],[925,81,979,81],[926,6,981,4],[926,10,981,8,"success"],[926,17,981,15],[926,19,981,17],[927,8,982,6],[928,8,983,6,"setCombatState"],[928,22,983,20],[928,23,983,21,"prev"],[928,27,983,25],[928,31,983,29],[929,10,984,8],[929,14,984,14,"newState"],[929,22,984,22],[929,25,984,25],[930,12,984,27],[930,15,984,30,"prev"],[931,10,984,35],[931,11,984,36],[932,10,985,8,"castAbility"],[932,21,985,19],[932,22,985,20,"newState"],[932,30,985,28],[932,32,985,30,"slotIndex"],[932,41,985,39],[932,42,985,40],[933,10,986,8],[933,17,986,15,"newState"],[933,25,986,23],[934,8,987,6],[934,9,987,7],[934,10,987,8],[935,8,989,6,"console"],[935,15,989,13],[935,16,989,14,"log"],[935,19,989,17],[935,20,989,18],[935,65,989,63,"slotIndex"],[935,74,989,72],[935,76,989,74],[935,77,989,75],[936,8,990,6],[936,15,990,13],[936,19,990,17],[937,6,991,4],[937,7,991,5],[937,13,991,11],[938,8,992,6,"console"],[938,15,992,13],[938,16,992,14,"log"],[938,19,992,17],[938,20,992,18],[938,61,992,59,"slotIndex"],[938,70,992,68],[938,72,992,70],[938,73,992,71],[939,8,993,6],[939,15,993,13],[939,20,993,18],[940,6,994,4],[941,4,995,2],[941,5,995,3],[941,46,995,5],[941,47,995,6,"combatState"],[941,58,995,17],[941,59,995,18,"abilityManager"],[941,73,995,32],[941,75,995,34,"combatState"],[941,86,995,45],[941,87,995,46,"enemies"],[941,94,995,53],[941,95,995,54],[941,96,995,55],[942,4,996,2],[942,8,996,2,"useEffect"],[942,14,996,11],[942,15,996,11,"useEffect"],[942,24,996,11],[942,26,996,12],[942,32,996,18],[943,6,997,4,"combatEngine"],[943,25,997,16],[943,26,997,16,"combatEngine"],[943,38,997,16],[943,39,997,17,"start"],[943,44,997,22],[943,45,997,23],[943,46,997,24],[945,6,999,4],[946,6,1000,4],[947,6,1001,4,"console"],[947,13,1001,11],[947,14,1001,12,"log"],[947,17,1001,15],[947,18,1001,16],[947,97,1001,95],[947,98,1001,96],[948,6,1003,4],[948,13,1003,11],[948,19,1003,17],[949,8,1004,6,"combatEngine"],[949,27,1004,18],[949,28,1004,18,"combatEngine"],[949,40,1004,18],[949,41,1004,19,"stop"],[949,45,1004,23],[949,46,1004,24],[949,47,1004,25],[950,6,1005,4],[950,7,1005,5],[951,4,1006,2],[951,5,1006,3],[951,7,1006,5],[951,9,1006,7],[951,10,1006,8],[953,4,1008,2],[954,4,1009,2],[954,8,1009,2,"useEffect"],[954,14,1009,11],[954,15,1009,11,"useEffect"],[954,24,1009,11],[954,26,1009,12],[954,32,1009,18],[955,6,1010,4],[955,10,1010,10,"processProjectileImpacts"],[955,34,1010,34],[955,37,1010,37,"processProjectileImpacts"],[955,38,1010,37],[955,43,1010,43],[956,8,1011,6,"setProjectiles"],[956,22,1011,20],[956,23,1011,21,"currentProjectiles"],[956,41,1011,39],[956,45,1011,43],[957,10,1012,8],[957,17,1012,15,"currentProjectiles"],[957,35,1012,33],[957,36,1012,34,"map"],[957,39,1012,37],[957,40,1012,38,"projectile"],[957,50,1012,48],[957,54,1012,52],[958,12,1013,10],[958,16,1013,14],[958,17,1013,15,"projectile"],[958,27,1013,25],[958,29,1013,27],[958,36,1013,34],[958,40,1013,38],[960,12,1015,10],[961,12,1016,10],[961,16,1016,16,"currentTime"],[961,27,1016,27],[961,30,1016,30,"Date"],[961,34,1016,34],[961,35,1016,35,"now"],[961,38,1016,38],[961,39,1016,39],[961,40,1016,40],[962,12,1017,10],[962,16,1017,16,"startTime"],[962,25,1017,25],[962,28,1017,28,"projectile"],[962,38,1017,38],[962,39,1017,39,"startTime"],[962,48,1017,48],[962,52,1017,52,"currentTime"],[962,63,1017,63],[963,12,1018,10],[963,16,1018,16,"elapsedTime"],[963,27,1018,27],[963,30,1018,30,"currentTime"],[963,41,1018,41],[963,44,1018,44,"startTime"],[963,53,1018,53],[964,12,1019,10],[964,16,1019,16,"progress"],[964,24,1019,24],[964,27,1019,27,"Math"],[964,31,1019,31],[964,32,1019,32,"min"],[964,35,1019,35],[964,36,1019,36,"elapsedTime"],[964,47,1019,47],[964,51,1019,51,"projectile"],[964,61,1019,61],[964,62,1019,62,"duration"],[964,70,1019,70],[964,74,1019,74],[964,77,1019,77],[964,78,1019,78],[964,80,1019,80],[964,81,1019,81],[964,82,1019,82],[966,12,1021,10],[967,12,1022,10],[967,16,1022,14,"progress"],[967,24,1022,22],[967,28,1022,26],[967,29,1022,27],[967,33,1022,31],[967,34,1022,32,"projectile"],[967,44,1022,42],[967,45,1022,43,"hasHit"],[967,51,1022,49],[967,53,1022,51],[968,14,1023,12,"projectile"],[968,24,1023,22],[968,25,1023,23,"hasHit"],[968,31,1023,29],[968,34,1023,32],[968,38,1023,36],[969,14,1025,12,"console"],[969,21,1025,19],[969,22,1025,20,"log"],[969,25,1025,23],[969,26,1025,24],[969,51,1025,49,"projectile"],[969,61,1025,59],[969,62,1025,60,"abilityName"],[969,73,1025,71],[969,87,1025,85,"projectile"],[969,97,1025,95],[969,98,1025,96,"targetEnemyId"],[969,111,1025,109],[969,119,1025,117,"projectile"],[969,129,1025,127],[969,130,1025,128,"damage"],[969,136,1025,134],[969,145,1025,143],[969,146,1025,144],[971,14,1027,12],[972,14,1028,12,"setCombatState"],[972,28,1028,26],[972,29,1028,27,"prev"],[972,33,1028,31],[972,37,1028,35],[973,16,1029,14],[973,20,1029,20,"newState"],[973,28,1029,28],[973,31,1029,31],[974,18,1029,33],[974,21,1029,36,"prev"],[975,16,1029,41],[975,17,1029,42],[976,16,1030,14],[976,20,1030,20,"enemyIndex"],[976,30,1030,30],[976,33,1030,33,"newState"],[976,41,1030,41],[976,42,1030,42,"enemies"],[976,49,1030,49],[976,50,1030,50,"findIndex"],[976,59,1030,59],[976,60,1030,60,"e"],[976,61,1030,61],[976,65,1030,65,"e"],[976,66,1030,66],[976,67,1030,67,"id"],[976,69,1030,69],[976,74,1030,74,"projectile"],[976,84,1030,84],[976,85,1030,85,"targetEnemyId"],[976,98,1030,98],[976,99,1030,99],[977,16,1032,14],[977,20,1032,18,"enemyIndex"],[977,30,1032,28],[977,34,1032,32],[977,35,1032,33],[977,39,1032,37,"newState"],[977,47,1032,45],[977,48,1032,46,"enemies"],[977,55,1032,53],[977,56,1032,54,"enemyIndex"],[977,66,1032,64],[977,67,1032,65],[977,68,1032,66,"health"],[977,74,1032,72],[977,77,1032,75],[977,78,1032,76],[977,80,1032,78],[978,18,1033,16,"newState"],[978,26,1033,24],[978,27,1033,25,"enemies"],[978,34,1033,32],[978,37,1033,35],[978,38,1033,36],[978,41,1033,39,"newState"],[978,49,1033,47],[978,50,1033,48,"enemies"],[978,57,1033,55],[978,58,1033,56],[979,18,1034,16],[979,22,1034,22,"enemy"],[979,27,1034,27],[979,30,1034,30,"newState"],[979,38,1034,38],[979,39,1034,39,"enemies"],[979,46,1034,46],[979,47,1034,47,"enemyIndex"],[979,57,1034,57],[979,58,1034,58],[980,18,1035,16],[980,22,1035,22,"newHealth"],[980,31,1035,31],[980,34,1035,34,"Math"],[980,38,1035,38],[980,39,1035,39,"max"],[980,42,1035,42],[980,43,1035,43],[980,44,1035,44],[980,46,1035,46,"enemy"],[980,51,1035,51],[980,52,1035,52,"health"],[980,58,1035,58],[980,61,1035,61,"projectile"],[980,71,1035,71],[980,72,1035,72,"damage"],[980,78,1035,78],[980,79,1035,79],[981,18,1037,16,"newState"],[981,26,1037,24],[981,27,1037,25,"enemies"],[981,34,1037,32],[981,35,1037,33,"enemyIndex"],[981,45,1037,43],[981,46,1037,44],[981,49,1037,47],[982,20,1038,18],[982,23,1038,21,"enemy"],[982,28,1038,26],[983,20,1039,18,"health"],[983,26,1039,24],[983,28,1039,26,"newHealth"],[983,37,1039,35],[984,20,1040,18,"lastDamaged"],[984,31,1040,29],[984,33,1040,31,"combatEngine"],[984,52,1040,43],[984,53,1040,43,"combatEngine"],[984,65,1040,43],[984,66,1040,44,"getCurrentTick"],[984,80,1040,58],[984,81,1040,59],[985,18,1041,16],[985,19,1041,17],[986,18,1043,16,"console"],[986,25,1043,23],[986,26,1043,24,"log"],[986,29,1043,27],[986,30,1043,28],[986,52,1043,50,"enemy"],[986,57,1043,55],[986,58,1043,56,"name"],[986,62,1043,60],[986,74,1043,72,"newHealth"],[986,83,1043,81],[986,87,1043,85,"enemy"],[986,92,1043,90],[986,93,1043,91,"maxHealth"],[986,102,1043,100],[986,104,1043,102],[986,105,1043,103],[988,18,1045,16],[989,18,1046,16],[989,22,1046,20,"newHealth"],[989,31,1046,29],[989,35,1046,33],[989,36,1046,34],[989,40,1046,38,"enemy"],[989,45,1046,43],[989,46,1046,44,"health"],[989,52,1046,50],[989,55,1046,53],[989,56,1046,54],[989,58,1046,56],[990,20,1047,18,"console"],[990,27,1047,25],[990,28,1047,26,"log"],[990,31,1047,29],[990,32,1047,30],[990,55,1047,53,"enemy"],[990,60,1047,58],[990,61,1047,59,"name"],[990,65,1047,63],[990,79,1047,77,"projectile"],[990,89,1047,87],[990,90,1047,88,"abilityName"],[990,101,1047,99],[990,104,1047,102],[990,105,1047,103],[991,20,1048,18,"setTimeout"],[991,30,1048,28],[991,31,1048,29],[991,37,1048,35,"handleEnemyKill"],[991,52,1048,50],[991,53,1048,51,"enemy"],[991,58,1048,56],[991,59,1048,57],[991,61,1048,59],[991,62,1048,60],[991,63,1048,61],[992,18,1049,16],[993,16,1050,14],[994,16,1052,14],[994,23,1052,21,"newState"],[994,31,1052,29],[995,14,1053,12],[995,15,1053,13],[995,16,1053,14],[996,12,1054,10],[998,12,1056,10],[999,12,1057,10],[999,16,1057,14,"progress"],[999,24,1057,22],[999,28,1057,26],[999,31,1057,29],[999,33,1057,31],[1000,14,1058,12],[1000,21,1058,19],[1000,25,1058,23],[1001,12,1059,10],[1002,12,1061,10],[1002,19,1061,17,"projectile"],[1002,29,1061,27],[1003,10,1062,8],[1003,11,1062,9],[1003,12,1062,10],[1003,13,1062,11,"filter"],[1003,19,1062,17],[1003,20,1062,18,"Boolean"],[1003,27,1062,25],[1003,28,1062,26],[1004,8,1063,6],[1004,9,1063,7],[1004,10,1063,8],[1005,6,1064,4],[1005,7,1064,5],[1007,6,1066,4],[1008,6,1067,4],[1008,10,1067,10,"impactInterval"],[1008,24,1067,24],[1008,27,1067,27,"setInterval"],[1008,38,1067,38],[1008,39,1067,39,"processProjectileImpacts"],[1008,63,1067,63],[1008,65,1067,65],[1008,67,1067,67],[1008,68,1067,68],[1009,6,1068,4],[1009,13,1068,11],[1009,19,1068,17,"clearInterval"],[1009,32,1068,30],[1009,33,1068,31,"impactInterval"],[1009,47,1068,45],[1009,48,1068,46],[1010,4,1069,2],[1010,5,1069,3],[1010,7,1069,5],[1010,8,1069,6,"handleEnemyKill"],[1010,23,1069,21],[1010,24,1069,22],[1010,25,1069,23],[1012,4,1071,2],[1013,4,1072,2],[1013,8,1072,8,"saveAbilityData"],[1013,23,1072,23],[1013,26,1072,26],[1013,30,1072,26,"useCallback"],[1013,36,1072,37],[1013,37,1072,37,"useCallback"],[1013,48,1072,37],[1013,50,1072,38],[1013,56,1072,44],[1014,6,1073,4],[1014,10,1073,8,"combatState"],[1014,21,1073,19],[1014,22,1073,20,"abilityManager"],[1014,36,1073,34],[1014,38,1073,36],[1015,8,1074,6],[1015,12,1074,12,"abilityData"],[1015,23,1074,23],[1015,26,1074,26,"combatState"],[1015,37,1074,37],[1015,38,1074,38,"abilityManager"],[1015,52,1074,52],[1015,53,1074,53,"getSaveData"],[1015,64,1074,64],[1015,65,1074,65],[1015,66,1074,66],[1016,8,1075,6,"console"],[1016,15,1075,13],[1016,16,1075,14,"log"],[1016,19,1075,17],[1016,20,1075,18],[1016,70,1075,68],[1016,72,1075,70,"abilityData"],[1016,83,1075,81],[1016,84,1075,82],[1017,8,1076,6,"game"],[1017,12,1076,10],[1017,13,1076,11,"updateAbilityData"],[1017,30,1076,28],[1017,31,1076,29,"abilityData"],[1017,42,1076,40],[1017,43,1076,41],[1018,6,1077,4],[1019,4,1078,2],[1019,5,1078,3],[1019,7,1078,5],[1019,8,1078,6,"combatState"],[1019,19,1078,17],[1019,20,1078,18,"abilityManager"],[1019,34,1078,32],[1019,36,1078,34,"game"],[1019,40,1078,38],[1019,41,1078,39,"updateAbilityData"],[1019,58,1078,56],[1019,59,1078,57],[1019,60,1078,58],[1020,4,1080,2],[1020,8,1080,8,"contextValue"],[1020,20,1080,39],[1020,23,1080,42,"React"],[1020,28,1080,47],[1020,29,1080,47,"default"],[1020,36,1080,47],[1020,37,1080,48,"useMemo"],[1020,44,1080,55],[1020,45,1080,56],[1020,52,1080,63],[1021,6,1081,4,"combatState"],[1021,17,1081,15],[1022,6,1082,4,"projectiles"],[1022,17,1082,15],[1023,6,1083,4,"startCombat"],[1023,17,1083,15],[1024,6,1084,4,"stopCombat"],[1024,16,1084,14],[1025,6,1085,4,"equipAbility"],[1025,18,1085,16],[1026,6,1086,4,"handleEnemyKill"],[1026,21,1086,19],[1027,6,1087,4,"getDeck"],[1027,13,1087,11],[1028,6,1088,4,"getAvailableAbilities"],[1028,27,1088,25],[1029,6,1089,4,"upgradeAbility"],[1029,20,1089,18],[1030,6,1090,4,"spawnEnemy"],[1030,16,1090,14],[1031,6,1091,4,"spawnBoss"],[1031,15,1091,13],[1032,6,1092,4,"clearAllEnemies"],[1032,21,1092,19],[1033,6,1093,4,"clearSpecificEnemy"],[1033,24,1093,22],[1034,6,1094,4,"triggerLevelUpExplosion"],[1034,29,1094,27],[1035,6,1095,4,"findClosestEnemy"],[1035,22,1095,20],[1036,6,1096,4,"updateNinjaPosition"],[1036,25,1096,23],[1037,6,1097,4,"setManualControlActive"],[1037,28,1097,26],[1038,6,1098,4,"lastExplosionTime"],[1038,23,1098,21],[1039,6,1099,4,"useAbilityManually"],[1039,24,1099,22],[1040,6,1099,24],[1041,6,1100,4,"saveAbilityData"],[1041,21,1100,19],[1042,6,1100,21],[1043,6,1101,4,"shadowClone"],[1043,17,1101,15],[1043,19,1101,17,"combatState"],[1043,30,1101,28],[1043,31,1101,29,"shadowClone"],[1043,42,1101,40],[1043,43,1101,42],[1044,4,1102,2],[1044,5,1102,3],[1044,6,1102,4],[1044,8,1102,6],[1045,4,1103,4],[1046,4,1104,4],[1047,4,1105,4,"combatState"],[1047,15,1105,15],[1047,17,1106,4,"projectiles"],[1047,28,1106,15],[1047,30,1107,4,"lastExplosionTime"],[1047,47,1107,21],[1048,4,1108,4],[1049,4,1109,4,"combatState"],[1049,15,1109,15],[1049,16,1109,16,"abilityManager"],[1049,30,1109,30],[1049,32,1110,4,"combatState"],[1049,43,1110,15],[1049,44,1110,16,"enemies"],[1049,51,1110,23],[1049,53,1111,4,"combatState"],[1049,64,1111,15],[1049,65,1111,16,"shadowClone"],[1049,76,1111,27],[1050,4,1111,29],[1051,4,1112,4,"useAbilityManually"],[1051,22,1112,22],[1052,4,1112,24],[1053,4,1113,4,"saveAbilityData"],[1053,19,1113,19],[1053,20,1113,21],[1054,4,1113,21],[1054,5,1114,3],[1054,6,1114,4],[1055,4,1116,2],[1055,24,1117,4],[1055,28,1117,4,"_reactJsxDevRuntime"],[1055,47,1117,4],[1055,48,1117,4,"jsxDEV"],[1055,54,1117,4],[1055,56,1117,5,"CombatContext"],[1055,69,1117,18],[1055,70,1117,19,"Provider"],[1055,78,1117,27],[1056,6,1117,28,"value"],[1056,11,1117,33],[1056,13,1117,35,"contextValue"],[1056,25,1117,48],[1057,6,1117,48,"children"],[1057,14,1117,48],[1057,16,1118,7,"children"],[1058,4,1118,15],[1059,6,1118,15,"fileName"],[1059,14,1118,15],[1059,16,1118,15,"_jsxFileName"],[1059,28,1118,15],[1060,6,1118,15,"lineNumber"],[1060,16,1118,15],[1061,6,1118,15,"columnNumber"],[1061,18,1118,15],[1062,4,1118,15],[1062,11,1119,28],[1062,12,1119,29],[1063,2,1121,0],[1063,3,1121,1],[1064,2,1121,2,"_s4"],[1064,5,1121,2],[1064,6,100,13,"CombatProvider"],[1064,20,100,27],[1065,4,100,27],[1065,12,101,15,"useGame"],[1065,24,101,22],[1065,25,101,22,"useGame"],[1065,32,101,22],[1065,34,102,77,"useZone"],[1065,46,102,84],[1065,47,102,84,"useZone"],[1065,54,102,84],[1066,2,102,84],[1067,2,102,84,"_c"],[1067,4,102,84],[1067,7,100,13,"CombatProvider"],[1067,21,100,27],[1068,2,100,27],[1068,6,100,27,"_c"],[1068,8,100,27],[1069,2,100,27,"$RefreshReg$"],[1069,14,100,27],[1069,15,100,27,"_c"],[1069,17,100,27],[1070,0,100,27],[1070,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C4B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}