{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 5000; // 250X Base XP reward per kill (ULTRA BOOSTED for extremely fast progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 5000; // SAME AS REGULAR KILL XP (5000 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}! (${enemy.health} → ${newHealth})`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      console.log(`🔍 XP DEBUG: Scheduling handleEnemyKill for ${enemy.name} (ID: ${enemy.id})`);\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 NON-FATAL DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    } else {\n                      console.log(`⚠️ XP DEBUG: Enemy ${enemy.name} already dead (health: ${enemy.health}), no XP awarded`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1208,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1151,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1212,2],[27,6,1212,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1212,2],[27,42,1212,2,"require"],[27,49,1212,2],[27,50,1212,2,"_dependencyMap"],[27,64,1212,2],[28,2,1212,2],[28,6,1212,2,"_slicedToArray"],[28,20,1212,2],[28,23,1212,2,"_interopDefault"],[28,38,1212,2],[28,39,1212,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1212,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,61,173,59,"enemy"],[135,66,173,64],[135,67,173,65,"name"],[135,71,173,69],[135,80,173,78,"enemy"],[135,85,173,83],[135,86,173,84,"id"],[135,88,173,86],[135,91,173,89],[135,92,173,90],[136,6,174,4,"console"],[136,13,174,11],[136,14,174,12,"log"],[136,17,174,15],[136,18,174,16],[136,73,174,71],[136,75,174,73,"enemy"],[136,80,174,78],[136,81,174,79,"id"],[136,83,174,81],[136,84,174,82],[138,6,176,4],[139,6,177,4],[139,10,177,10,"baseXpReward"],[139,22,177,22],[139,25,177,25],[139,29,177,29],[139,30,177,30],[139,31,177,31],[140,6,178,4],[140,10,178,10,"xpMultiplier"],[140,22,178,22],[140,25,178,25,"game"],[140,29,178,29],[140,30,178,30,"gameState"],[140,39,178,39],[140,40,178,40,"subscriptionBenefits"],[140,60,178,60],[140,62,178,62,"xp_multiplier"],[140,75,178,75],[140,79,178,79],[140,82,178,82],[141,6,179,4],[141,10,179,10,"dropMultiplier"],[141,24,179,24],[141,27,179,27,"game"],[141,31,179,31],[141,32,179,32,"gameState"],[141,41,179,41],[141,42,179,42,"subscriptionBenefits"],[141,62,179,62],[141,64,179,64,"drop_multiplier"],[141,79,179,79],[141,83,179,83],[141,86,179,86],[142,6,181,4],[142,10,181,10,"xpReward"],[142,18,181,18],[142,21,181,21,"Math"],[142,25,181,25],[142,26,181,26,"floor"],[142,31,181,31],[142,32,181,32,"baseXpReward"],[142,44,181,44],[142,47,181,47,"xpMultiplier"],[142,59,181,59],[142,60,181,60],[143,6,182,4],[143,10,182,10,"goldReward"],[143,20,182,20],[143,23,182,23,"Math"],[143,27,182,27],[143,28,182,28,"floor"],[143,33,182,33],[143,34,182,34],[143,39,182,39],[143,42,182,42,"dropMultiplier"],[143,56,182,56],[143,57,182,57],[143,58,182,58],[143,59,182,59],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,48,184,46,"xpReward"],[145,56,184,54],[145,67,184,65,"goldReward"],[145,77,184,75],[145,93,184,91],[145,94,184,92],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,60,185,58,"xpMultiplier"],[146,72,185,70],[146,94,185,92,"dropMultiplier"],[146,108,185,106],[146,110,185,108],[146,111,185,109],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,54,186,52,"baseXpReward"],[147,66,186,64],[147,81,186,79,"xpReward"],[147,89,186,87],[147,91,186,89],[147,92,186,90],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,58,187,56],[148,60,187,58,"JSON"],[148,64,187,62],[148,65,187,63,"stringify"],[148,74,187,72],[148,75,187,73,"game"],[148,79,187,77],[148,80,187,78,"gameState"],[148,89,187,87],[148,90,187,88,"subscriptionBenefits"],[148,110,187,108],[148,111,187,109],[148,112,187,110],[149,6,188,4,"console"],[149,13,188,11],[149,14,188,12,"log"],[149,17,188,15],[149,18,188,16],[149,49,188,47,"Platform"],[149,61,188,55],[149,62,188,55,"Platform"],[149,70,188,55],[149,71,188,56,"OS"],[149,73,188,58],[149,84,188,69,"Date"],[149,88,188,73],[149,89,188,74,"now"],[149,92,188,77],[149,93,188,78],[149,94,188,79],[149,96,188,81],[149,97,188,82],[151,6,190,4],[152,6,191,4],[153,6,192,4,"setTimeout"],[153,16,192,14],[153,17,192,15],[153,23,192,21],[154,8,193,6,"console"],[154,15,193,13],[154,16,193,14,"log"],[154,19,193,17],[154,20,193,18],[154,78,193,76],[154,79,193,77],[156,8,195,6],[157,8,196,6,"game"],[157,12,196,10],[157,13,196,11,"updateNinja"],[157,24,196,22],[157,25,196,24,"prev"],[157,29,196,28],[157,33,196,33],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,54,197,52,"prev"],[158,58,197,56],[158,59,197,57,"experience"],[158,69,197,67],[158,81,197,79,"prev"],[158,85,197,83],[158,86,197,84,"experience"],[158,96,197,94],[158,99,197,97,"xpReward"],[158,107,197,105],[158,109,197,107],[158,110,197,108],[159,10,198,8,"console"],[159,17,198,15],[159,18,198,16,"log"],[159,21,198,19],[159,22,198,20],[159,56,198,54,"prev"],[159,60,198,58],[159,61,198,59,"gold"],[159,65,198,63],[159,77,198,75,"prev"],[159,81,198,79],[159,82,198,80,"gold"],[159,86,198,84],[159,89,198,87,"goldReward"],[159,99,198,97],[159,101,198,99],[159,102,198,100],[160,10,199,8],[160,17,199,15],[161,12,200,10,"experience"],[161,22,200,20],[161,24,200,22,"prev"],[161,28,200,26],[161,29,200,27,"experience"],[161,39,200,37],[161,42,200,40,"xpReward"],[161,50,200,48],[162,12,201,10,"gold"],[162,16,201,14],[162,18,201,16,"prev"],[162,22,201,20],[162,23,201,21,"gold"],[162,27,201,25],[162,30,201,28,"goldReward"],[163,10,202,8],[163,11,202,9],[164,8,203,6],[164,9,203,7],[164,10,203,8],[166,8,205,6],[167,8,206,6],[167,12,206,12,"zoneEnemy"],[167,21,206,21],[167,24,206,24],[168,10,207,8,"id"],[168,12,207,10],[168,14,207,12,"enemy"],[168,19,207,17],[168,20,207,18,"id"],[168,22,207,20],[169,10,208,8,"typeId"],[169,16,208,14],[169,18,208,16,"enemy"],[169,23,208,21],[169,24,208,22,"zoneTypeId"],[169,34,208,32],[169,38,208,36],[169,48,208,46],[170,10,208,48],[171,10,209,8,"name"],[171,14,209,12],[171,16,209,14,"enemy"],[171,21,209,19],[171,22,209,20,"name"],[171,26,209,24],[172,10,210,8,"icon"],[172,14,210,12],[172,16,210,14],[172,20,210,18],[173,10,210,20],[174,10,211,8,"hp"],[174,12,211,10],[174,14,211,12],[174,15,211,13],[175,10,211,15],[176,10,212,8,"maxHP"],[176,15,212,13],[176,17,212,15,"enemy"],[176,22,212,20],[176,23,212,21,"maxHealth"],[176,32,212,30],[177,10,213,8,"attack"],[177,16,213,14],[177,18,213,16,"enemy"],[177,23,213,21],[177,24,213,22,"stats"],[177,29,213,27],[177,30,213,28,"attack"],[177,36,213,34],[178,10,214,8,"xp"],[178,12,214,10],[178,14,214,12,"enemy"],[178,19,214,17],[178,20,214,18,"zoneXP"],[178,26,214,24],[178,30,214,28],[178,32,214,30],[179,10,214,32],[180,10,215,8,"position"],[180,18,215,16],[180,20,215,18,"enemy"],[180,25,215,23],[180,26,215,24,"position"],[181,8,216,6],[181,9,216,7],[182,8,218,6,"console"],[182,15,218,13],[182,16,218,14,"log"],[182,19,218,17],[182,20,218,18],[182,40,218,38,"zoneEnemy"],[182,49,218,47],[182,50,218,48,"name"],[182,54,218,52],[182,59,218,57,"zoneEnemy"],[182,68,218,66],[182,69,218,67,"typeId"],[182,75,218,73],[182,113,218,111],[182,114,218,112],[183,8,219,6,"recordEnemyKill"],[183,23,219,21],[183,24,219,22,"zoneEnemy"],[183,33,219,31],[183,34,219,32],[184,6,220,4],[184,7,220,5],[184,9,220,7],[184,10,220,8],[184,11,220,9],[184,12,220,10],[184,13,220,11],[185,4,221,2],[185,5,221,3],[185,7,221,5],[185,8,221,6,"game"],[185,12,221,10],[185,13,221,11,"updateNinja"],[185,24,221,22],[185,26,221,24,"recordEnemyKill"],[185,41,221,39],[185,42,221,40],[185,43,221,41],[187,4,223,2],[188,4,224,2],[188,8,224,8,"handleCombatTick"],[188,24,224,24],[188,27,224,27,"React"],[188,32,224,32],[188,33,224,32,"default"],[188,40,224,32],[188,41,224,33,"useCallback"],[188,52,224,44],[188,53,224,45],[188,59,224,51],[189,6,224,51],[189,10,224,51,"_s2"],[189,13,224,51],[189,16,224,51,"$RefreshSig$"],[189,28,224,51],[190,6,225,4,"console"],[190,13,225,11],[190,14,225,12,"log"],[190,17,225,15],[190,18,225,16],[190,87,225,85],[190,88,225,86],[191,6,226,4,"console"],[191,13,226,11],[191,14,226,12,"log"],[191,17,226,15],[191,18,226,16],[191,65,226,63,"isManualControlActive"],[191,86,226,84],[191,99,226,97,"game"],[191,103,226,101],[191,104,226,102,"gameState"],[191,113,226,111],[191,114,226,112,"isAlive"],[191,121,226,119],[191,123,226,121],[191,124,226,122],[192,6,228,4],[192,10,228,8,"enemiesToKill"],[192,23,228,36],[192,26,228,39],[192,28,228,41],[192,29,228,42],[192,30,228,43],[194,6,230,4,"_s2"],[194,9,230,4],[194,10,230,4,"setCombatState"],[194,24,230,18],[194,25,230,18,"_s2"],[194,28,230,18],[194,29,230,19,"prev"],[194,33,230,23],[194,37,230,27],[195,8,230,27,"_s2"],[195,11,230,27],[196,8,231,6],[196,12,231,12,"newTick"],[196,19,231,19],[196,22,231,22,"combatEngine"],[196,41,231,34],[196,42,231,34,"combatEngine"],[196,54,231,34],[196,55,231,35,"getCurrentTick"],[196,69,231,49],[196,70,231,50],[196,71,231,51],[197,8,232,6],[197,12,232,12,"newState"],[197,20,232,20],[197,23,232,23],[198,10,232,25],[198,13,232,28,"prev"],[198,17,232,32],[199,10,232,34,"currentTick"],[199,21,232,45],[199,23,232,47,"newTick"],[200,8,232,55],[200,9,232,56],[201,8,234,6],[201,12,234,10],[201,13,234,11,"newState"],[201,21,234,19],[201,22,234,20,"isInCombat"],[201,32,234,30],[201,34,234,32],[201,41,234,39,"newState"],[201,49,234,47],[203,8,236,6],[204,8,237,6,"newState"],[204,16,237,14],[204,17,237,15,"abilityManager"],[204,31,237,29],[204,32,237,30,"updateCooldowns"],[204,47,237,45],[204,48,237,46,"newTick"],[204,55,237,53],[204,56,237,54],[206,8,239,6],[207,8,240,6],[207,12,240,12,"effectResults"],[207,25,240,25],[207,28,240,28,"newState"],[207,36,240,36],[207,37,240,37,"statusEffects"],[207,50,240,50],[207,51,240,51,"processTick"],[207,62,240,62],[207,63,240,63,"newTick"],[207,70,240,70],[207,71,240,71],[209,8,242,6],[210,8,243,6,"effectResults"],[210,21,243,19],[210,22,243,20,"forEach"],[210,29,243,27],[210,30,243,28],[210,31,243,29,"results"],[210,38,243,36],[210,40,243,38,"entityId"],[210,48,243,46],[210,53,243,51],[211,10,244,8],[211,14,244,14,"enemyIndex"],[211,24,244,24],[211,27,244,27,"newState"],[211,35,244,35],[211,36,244,36,"enemies"],[211,43,244,43],[211,44,244,44,"findIndex"],[211,53,244,53],[211,54,244,54,"e"],[211,55,244,55],[211,59,244,59,"e"],[211,60,244,60],[211,61,244,61,"id"],[211,63,244,63],[211,68,244,68,"entityId"],[211,76,244,76],[211,77,244,77],[212,10,245,8],[212,14,245,12,"enemyIndex"],[212,24,245,22],[212,28,245,26],[212,29,245,27],[212,31,245,29],[213,12,246,10,"results"],[213,19,246,17],[213,20,246,18,"forEach"],[213,27,246,25],[213,28,246,26,"result"],[213,34,246,32],[213,38,246,36],[214,14,247,12,"newState"],[214,22,247,20],[214,23,247,21,"enemies"],[214,30,247,28],[214,31,247,29,"enemyIndex"],[214,41,247,39],[214,42,247,40],[214,43,247,41,"health"],[214,49,247,47],[214,53,247,51,"result"],[214,59,247,57],[214,60,247,58,"damage"],[214,66,247,64],[215,14,248,12,"newState"],[215,22,248,20],[215,23,248,21,"enemies"],[215,30,248,28],[215,31,248,29,"enemyIndex"],[215,41,248,39],[215,42,248,40],[215,43,248,41,"lastDamaged"],[215,54,248,52],[215,57,248,55,"newTick"],[215,64,248,62],[216,12,249,10],[216,13,249,11],[216,14,249,12],[217,10,250,8],[218,8,251,6],[218,9,251,7],[218,10,251,8],[220,8,253,6],[221,8,254,6],[222,8,255,6],[222,12,255,10,"newState"],[222,20,255,18],[222,21,255,19,"playerStats"],[222,32,255,30],[222,36,255,34,"game"],[222,40,255,38],[222,41,255,39,"gameState"],[222,50,255,48],[222,51,255,49,"ninja"],[222,56,255,54],[222,58,255,56],[223,10,256,8],[223,14,256,14,"effectiveStats"],[223,28,256,28],[223,31,256,31,"game"],[223,35,256,35],[223,36,256,36,"getEffectiveStats"],[223,53,256,53],[223,54,256,54],[223,55,256,55],[225,10,258,8],[226,10,259,8],[226,14,259,12,"newState"],[226,22,259,20],[226,23,259,21,"playerStats"],[226,34,259,32],[226,35,259,33,"attack"],[226,41,259,39],[226,46,259,44,"effectiveStats"],[226,60,259,58],[226,61,259,59,"attack"],[226,67,259,65],[226,71,260,12,"newState"],[226,79,260,20],[226,80,260,21,"playerStats"],[226,91,260,32],[226,92,260,33,"defense"],[226,99,260,40],[226,104,260,45,"effectiveStats"],[226,118,260,59],[226,119,260,60,"defense"],[226,126,260,67],[226,130,261,12,"newState"],[226,138,261,20],[226,139,261,21,"playerStats"],[226,150,261,32],[226,151,261,33,"maxHealth"],[226,160,261,42],[226,165,261,47,"effectiveStats"],[226,179,261,61],[226,180,261,62,"maxHealth"],[226,189,261,71],[226,191,261,73],[227,12,263,10,"console"],[227,19,263,17],[227,20,263,18,"log"],[227,23,263,21],[227,24,263,22],[227,58,263,56,"newState"],[227,66,263,64],[227,67,263,65,"playerStats"],[227,78,263,76],[227,79,263,77,"attack"],[227,85,263,83],[227,91,263,89,"effectiveStats"],[227,105,263,103],[227,106,263,104,"attack"],[227,112,263,110],[227,125,263,123,"newState"],[227,133,263,131],[227,134,263,132,"playerStats"],[227,145,263,143],[227,146,263,144,"defense"],[227,153,263,151],[227,159,263,157,"effectiveStats"],[227,173,263,171],[227,174,263,172,"defense"],[227,181,263,179],[227,192,263,190,"newState"],[227,200,263,198],[227,201,263,199,"playerStats"],[227,212,263,210],[227,213,263,211,"maxHealth"],[227,222,263,220],[227,228,263,226,"effectiveStats"],[227,242,263,240],[227,243,263,241,"maxHealth"],[227,252,263,250],[227,254,263,252],[227,255,263,253],[229,12,265,10],[230,12,266,10],[230,16,266,14,"newHealth"],[230,25,266,23],[230,28,266,26,"newState"],[230,36,266,34],[230,37,266,35,"playerStats"],[230,48,266,46],[230,49,266,47,"health"],[230,55,266,53],[231,12,267,10],[231,16,267,14,"newState"],[231,24,267,22],[231,25,267,23,"playerStats"],[231,36,267,34],[231,37,267,35,"maxHealth"],[231,46,267,44],[231,51,267,49,"effectiveStats"],[231,65,267,63],[231,66,267,64,"maxHealth"],[231,75,267,73],[231,77,267,75],[232,14,268,12],[233,14,269,12],[233,18,269,16,"effectiveStats"],[233,32,269,30],[233,33,269,31,"maxHealth"],[233,42,269,40],[233,45,269,43,"newState"],[233,53,269,51],[233,54,269,52,"playerStats"],[233,65,269,63],[233,66,269,64,"maxHealth"],[233,75,269,73],[233,78,269,76],[233,81,269,79],[233,83,269,81],[234,16,270,14],[235,16,271,14],[235,20,271,20,"healthRatio"],[235,31,271,31],[235,34,271,34,"newState"],[235,42,271,42],[235,43,271,43,"playerStats"],[235,54,271,54],[235,55,271,55,"maxHealth"],[235,64,271,64],[235,67,271,67],[235,68,271,68],[235,71,272,16,"newState"],[235,79,272,24],[235,80,272,25,"playerStats"],[235,91,272,36],[235,92,272,37,"health"],[235,98,272,43],[235,101,272,46,"newState"],[235,109,272,54],[235,110,272,55,"playerStats"],[235,121,272,66],[235,122,272,67,"maxHealth"],[235,131,272,76],[235,134,272,79],[235,135,272,80],[236,16,273,14,"newHealth"],[236,25,273,23],[236,28,273,26,"Math"],[236,32,273,30],[236,33,273,31,"floor"],[236,38,273,36],[236,39,273,37,"effectiveStats"],[236,53,273,51],[236,54,273,52,"maxHealth"],[236,63,273,61],[236,66,273,64,"healthRatio"],[236,77,273,75],[236,78,273,76],[237,14,274,12],[237,15,274,13],[237,21,274,19],[237,25,274,23,"newState"],[237,33,274,31],[237,34,274,32,"playerStats"],[237,45,274,43],[237,46,274,44,"health"],[237,52,274,50],[237,55,274,53,"effectiveStats"],[237,69,274,67],[237,70,274,68,"maxHealth"],[237,79,274,77],[237,81,274,79],[238,16,275,14],[239,16,276,14,"newHealth"],[239,25,276,23],[239,28,276,26,"effectiveStats"],[239,42,276,40],[239,43,276,41,"maxHealth"],[239,52,276,50],[240,14,277,12],[241,14,278,12],[242,12,279,10],[243,12,281,10,"newState"],[243,20,281,18],[243,21,281,19,"playerStats"],[243,32,281,30],[243,35,281,33],[244,14,282,12],[244,17,282,15,"newState"],[244,25,282,23],[244,26,282,24,"playerStats"],[244,37,282,35],[245,14,283,12,"attack"],[245,20,283,18],[245,22,283,20,"effectiveStats"],[245,36,283,34],[245,37,283,35,"attack"],[245,43,283,41],[246,14,284,12,"defense"],[246,21,284,19],[246,23,284,21,"effectiveStats"],[246,37,284,35],[246,38,284,36,"defense"],[246,45,284,43],[247,14,285,12,"maxHealth"],[247,23,285,21],[247,25,285,23,"effectiveStats"],[247,39,285,37],[247,40,285,38,"maxHealth"],[247,49,285,47],[248,14,285,49],[249,14,286,12,"health"],[249,20,286,18],[249,22,286,20,"newHealth"],[249,31,286,29],[250,14,286,31],[251,14,287,12,"critChance"],[251,24,287,22],[251,26,287,24,"effectiveStats"],[251,40,287,38],[251,41,287,39,"critChance"],[251,51,287,49],[251,55,287,53,"newState"],[251,63,287,61],[251,64,287,62,"playerStats"],[251,75,287,73],[251,76,287,74,"critChance"],[251,86,287,84],[252,14,288,12,"critDamage"],[252,24,288,22],[252,26,288,24,"effectiveStats"],[252,40,288,38],[252,41,288,39,"critDamage"],[252,51,288,49],[252,55,288,53,"newState"],[252,63,288,61],[252,64,288,62,"playerStats"],[252,75,288,73],[252,76,288,74,"critDamage"],[252,86,288,84],[253,14,289,12,"cooldownReduction"],[253,31,289,29],[253,33,289,31,"effectiveStats"],[253,47,289,45],[253,48,289,46,"cooldownReduction"],[253,65,289,63],[253,69,289,67,"newState"],[253,77,289,75],[253,78,289,76,"playerStats"],[253,89,289,87],[253,90,289,88,"cooldownReduction"],[254,12,290,10],[254,13,290,11],[255,10,291,8],[257,10,293,8],[258,10,294,8],[258,14,294,12,"game"],[258,18,294,16],[258,19,294,17,"gameState"],[258,28,294,26],[258,29,294,27,"isAlive"],[258,36,294,34],[258,40,295,12,"game"],[258,44,295,16],[258,45,295,17,"gameState"],[258,54,295,26],[258,55,295,27,"ninja"],[258,60,295,32],[258,61,295,33,"health"],[258,67,295,39],[258,72,295,44,"effectiveStats"],[258,86,295,58],[258,87,295,59,"maxHealth"],[258,96,295,68],[258,100,296,12,"newState"],[258,108,296,20],[258,109,296,21,"playerStats"],[258,120,296,32],[258,121,296,33,"health"],[258,127,296,39],[258,130,296,42,"effectiveStats"],[258,144,296,56],[258,145,296,57,"maxHealth"],[258,154,296,66],[258,157,296,69],[258,160,296,72],[258,162,296,74],[259,12,297,10,"console"],[259,19,297,17],[259,20,297,18,"log"],[259,23,297,21],[259,24,297,22],[259,58,297,56,"newState"],[259,66,297,64],[259,67,297,65,"playerStats"],[259,78,297,76],[259,79,297,77,"health"],[259,85,297,83],[259,91,297,89,"game"],[259,95,297,93],[259,96,297,94,"gameState"],[259,105,297,103],[259,106,297,104,"ninja"],[259,111,297,109],[259,112,297,110,"health"],[259,118,297,116],[259,139,297,137],[259,140,297,138],[260,12,298,10,"newState"],[260,20,298,18],[260,21,298,19,"playerStats"],[260,32,298,30],[260,33,298,31,"health"],[260,39,298,37],[260,42,298,40,"game"],[260,46,298,44],[260,47,298,45,"gameState"],[260,56,298,54],[260,57,298,55,"ninja"],[260,62,298,60],[260,63,298,61,"health"],[260,69,298,67],[261,10,299,8],[262,8,300,6],[264,8,302,6],[265,8,303,6,"newState"],[265,16,303,14],[265,17,303,15,"enemies"],[265,24,303,22],[265,25,303,23,"forEach"],[265,32,303,30],[265,33,303,31,"enemy"],[265,38,303,36],[265,42,303,40],[266,10,304,8],[266,14,304,12],[266,15,304,13,"enemy"],[266,20,304,18],[266,21,304,19,"isBoss"],[266,27,304,25],[266,29,304,27],[267,12,304,29],[268,12,305,10],[269,12,306,10],[269,16,306,16,"MOVEMENT_SPEED"],[269,30,306,30],[269,33,306,33],[269,37,306,37],[269,38,306,38],[269,39,306,39],[270,12,307,10],[270,16,307,16,"SCREEN_WIDTH"],[270,28,307,28],[270,31,307,31],[270,34,307,34],[271,12,308,10],[271,16,308,16,"GAME_AREA_HEIGHT"],[271,32,308,32],[271,35,308,35],[271,38,308,38],[271,39,308,39],[271,40,308,40],[272,12,309,10],[272,16,309,16,"ENEMY_SIZE"],[272,26,309,26],[272,29,309,29],[272,31,309,31],[274,12,311,10],[275,12,312,10],[275,16,312,16,"playerX"],[275,23,312,23],[275,26,312,26,"currentNinjaPosition"],[275,46,312,46],[275,47,312,47,"x"],[275,48,312,48],[276,12,313,10],[276,16,313,16,"playerY"],[276,23,313,23],[276,26,313,26,"currentNinjaPosition"],[276,46,313,46],[276,47,313,47,"y"],[276,48,313,48],[278,12,315,10],[279,12,316,10],[279,16,316,16,"deltaX"],[279,22,316,22],[279,25,316,25,"playerX"],[279,32,316,32],[279,35,316,35,"enemy"],[279,40,316,40],[279,41,316,41,"position"],[279,49,316,49],[279,50,316,50,"x"],[279,51,316,51],[280,12,317,10],[280,16,317,16,"deltaY"],[280,22,317,22],[280,25,317,25,"playerY"],[280,32,317,32],[280,35,317,35,"enemy"],[280,40,317,40],[280,41,317,41,"position"],[280,49,317,49],[280,50,317,50,"y"],[280,51,317,51],[281,12,318,10],[281,16,318,16,"distance"],[281,24,318,24],[281,27,318,27,"Math"],[281,31,318,31],[281,32,318,32,"sqrt"],[281,36,318,36],[281,37,318,37,"deltaX"],[281,43,318,43],[281,46,318,46,"deltaX"],[281,52,318,52],[281,55,318,55,"deltaY"],[281,61,318,61],[281,64,318,64,"deltaY"],[281,70,318,70],[281,71,318,71],[283,12,320,10],[284,12,321,10],[284,16,321,16,"ATTACK_RANGE"],[284,28,321,28],[284,31,321,31],[284,33,321,33],[284,34,321,34],[284,35,321,35],[285,12,322,10],[285,16,322,16,"ATTACK_COOLDOWN"],[285,31,322,31],[285,34,322,34],[285,36,322,36],[285,37,322,37],[285,38,322,38],[287,12,324,10],[287,16,324,14,"distance"],[287,24,324,22],[287,28,324,26,"ATTACK_RANGE"],[287,40,324,38],[287,42,324,40],[288,14,325,12],[289,14,326,12],[289,18,326,16],[289,19,326,17,"enemy"],[289,24,326,22],[289,25,326,23,"lastAttackTick"],[289,39,326,37],[289,41,326,39,"enemy"],[289,46,326,44],[289,47,326,45,"lastAttackTick"],[289,61,326,59],[289,64,326,62],[289,65,326,63],[290,14,328,12],[290,18,328,16,"newState"],[290,26,328,24],[290,27,328,25,"currentTick"],[290,38,328,36],[290,41,328,39,"enemy"],[290,46,328,44],[290,47,328,45,"lastAttackTick"],[290,61,328,59],[290,65,328,63,"ATTACK_COOLDOWN"],[290,80,328,78],[290,82,328,80],[291,16,329,14],[292,16,330,14],[292,20,330,18],[292,21,330,19,"game"],[292,25,330,23],[292,26,330,24,"gameState"],[292,35,330,33],[292,36,330,34,"isAlive"],[292,43,330,41],[292,45,330,43],[293,18,331,16,"console"],[293,25,331,23],[293,26,331,24,"log"],[293,29,331,27],[293,30,331,28],[293,49,331,47,"enemy"],[293,54,331,52],[293,55,331,53,"name"],[293,59,331,57],[293,93,331,91],[293,94,331,92],[294,18,332,16],[295,18,333,16,"enemy"],[295,23,333,21],[295,24,333,22,"lastAttackTick"],[295,38,333,36],[295,41,333,39,"newState"],[295,49,333,47],[295,50,333,48,"currentTick"],[295,61,333,59],[296,16,334,14],[296,17,334,15],[296,23,334,21],[297,18,335,16],[298,18,336,16],[298,22,336,22,"isPlayerInvincible"],[298,40,336,40],[298,43,336,43,"game"],[298,47,336,47],[298,48,336,48,"gameState"],[298,57,336,57],[298,58,336,58,"isInvincible"],[298,70,336,70],[298,74,337,41,"game"],[298,78,337,45],[298,79,337,46,"gameState"],[298,88,337,55],[298,89,337,56,"invincibilityEndTime"],[298,109,337,76],[298,113,338,41,"Date"],[298,117,338,45],[298,118,338,46,"now"],[298,121,338,49],[298,122,338,50],[298,123,338,51],[298,126,338,54,"game"],[298,130,338,58],[298,131,338,59,"gameState"],[298,140,338,68],[298,141,338,69,"invincibilityEndTime"],[298,161,338,89],[299,18,340,16],[299,22,340,20,"isPlayerInvincible"],[299,40,340,38],[299,42,340,40],[300,20,341,18,"console"],[300,27,341,25],[300,28,341,26,"log"],[300,31,341,29],[300,32,341,30],[300,51,341,49,"enemy"],[300,56,341,54],[300,57,341,55,"name"],[300,61,341,59],[300,101,341,99],[300,102,341,100],[301,20,342,18],[302,20,343,18,"enemy"],[302,25,343,23],[302,26,343,24,"lastAttackTick"],[302,40,343,38],[302,43,343,41,"newState"],[302,51,343,49],[302,52,343,50,"currentTick"],[302,63,343,61],[303,18,344,16],[303,19,344,17],[303,25,344,23],[304,20,345,16],[305,20,346,16],[305,24,346,22,"baseAttack"],[305,34,346,32],[305,37,346,35,"enemy"],[305,42,346,40],[305,43,346,41,"stats"],[305,48,346,46],[305,49,346,47,"attack"],[305,55,346,53],[305,58,346,56],[305,61,346,59],[305,62,346,60],[305,63,346,61],[306,20,347,16],[306,24,347,22,"attackDamage"],[306,36,347,34],[306,39,347,37,"Math"],[306,43,347,41],[306,44,347,42,"floor"],[306,49,347,47],[306,50,347,48,"baseAttack"],[306,60,347,58],[306,64,347,62],[306,67,347,65],[306,70,347,68,"Math"],[306,74,347,72],[306,75,347,73,"random"],[306,81,347,79],[306,82,347,80],[306,83,347,81],[306,86,347,84],[306,89,347,87],[306,90,347,88],[306,91,347,89],[306,92,347,90],[306,93,347,91],[307,20,348,16],[307,24,348,22,"playerDefense"],[307,37,348,35],[307,40,348,38,"newState"],[307,48,348,46],[307,49,348,47,"playerStats"],[307,60,348,58],[307,61,348,59,"defense"],[307,68,348,66],[308,20,349,16],[308,24,349,22,"finalDamage"],[308,35,349,33],[308,38,349,36,"Math"],[308,42,349,40],[308,43,349,41,"max"],[308,46,349,44],[308,47,349,45],[308,48,349,46],[308,50,349,48,"attackDamage"],[308,62,349,60],[308,65,349,63,"Math"],[308,69,349,67],[308,70,349,68,"floor"],[308,75,349,73],[308,76,349,74,"playerDefense"],[308,89,349,87],[308,92,349,90],[308,95,349,93],[308,96,349,94],[308,97,349,95],[308,98,349,96],[308,99,349,97],[310,20,351,16,"console"],[310,27,351,23],[310,28,351,24,"log"],[310,31,351,27],[310,32,351,28],[310,53,351,49,"enemy"],[310,58,351,54],[310,59,351,55,"name"],[310,63,351,59],[310,86,351,82,"finalDamage"],[310,97,351,93],[310,109,351,105,"attackDamage"],[310,121,351,117],[310,132,351,128,"Math"],[310,136,351,132],[310,137,351,133,"floor"],[310,142,351,138],[310,143,351,139,"playerDefense"],[310,156,351,152],[310,159,351,155],[310,162,351,158],[310,163,351,159],[310,184,351,180],[310,185,351,181],[312,20,353,16],[313,20,354,16],[313,24,354,22,"newPlayerHealth"],[313,39,354,37],[313,42,354,40,"Math"],[313,46,354,44],[313,47,354,45,"max"],[313,50,354,48],[313,51,354,49],[313,52,354,50],[313,54,354,52,"newState"],[313,62,354,60],[313,63,354,61,"playerStats"],[313,74,354,72],[313,75,354,73,"health"],[313,81,354,79],[313,84,354,82,"finalDamage"],[313,95,354,93],[313,96,354,94],[314,20,355,16,"newState"],[314,28,355,24],[314,29,355,25,"playerStats"],[314,40,355,36],[314,41,355,37,"health"],[314,47,355,43],[314,50,355,46,"newPlayerHealth"],[314,65,355,61],[315,20,357,16,"console"],[315,27,357,23],[315,28,357,24,"log"],[315,31,357,27],[315,32,357,28],[315,53,357,49,"newState"],[315,61,357,57],[315,62,357,58,"playerStats"],[315,73,357,69],[315,74,357,70,"health"],[315,80,357,76],[315,84,357,80,"newState"],[315,92,357,88],[315,93,357,89,"playerStats"],[315,104,357,100],[315,105,357,101,"maxHealth"],[315,114,357,110],[315,124,357,120,"finalDamage"],[315,135,357,131],[315,145,357,141],[315,146,357,142],[317,20,359,16],[318,20,360,16,"enemy"],[318,25,360,21],[318,26,360,22,"lastAttackTick"],[318,40,360,36],[318,43,360,39,"newState"],[318,51,360,47],[318,52,360,48,"currentTick"],[318,63,360,59],[320,20,362,16],[321,20,363,16],[321,24,363,20,"newPlayerHealth"],[321,39,363,35],[321,43,363,39],[321,44,363,40],[321,46,363,42],[322,22,364,18,"console"],[322,29,364,25],[322,30,364,26,"log"],[322,33,364,29],[322,34,364,30],[322,84,364,80],[322,85,364,81],[323,22,365,18],[324,22,366,18,"setTimeout"],[324,32,366,28],[324,33,366,29],[324,39,366,35],[325,24,367,20],[326,24,368,20,"game"],[326,28,368,24],[326,29,368,25,"updateGameState"],[326,44,368,40],[326,45,368,41],[327,26,368,43,"isAlive"],[327,33,368,50],[327,35,368,52],[328,24,368,58],[328,25,368,59],[328,26,368,60],[329,22,369,18],[329,23,369,19],[329,25,369,21],[329,28,369,24],[329,29,369,25],[330,20,370,16],[331,18,371,16],[332,16,372,14],[333,14,373,12],[334,12,374,10],[334,13,374,11],[334,19,374,17],[335,14,375,12],[336,14,376,12],[337,14,377,12],[337,18,377,16,"distance"],[337,26,377,24],[337,29,377,27],[337,31,377,29],[337,33,377,31],[338,16,378,14],[339,16,379,14],[339,20,379,20,"normalizedX"],[339,31,379,31],[339,34,379,34,"deltaX"],[339,40,379,40],[339,43,379,43,"distance"],[339,51,379,51],[340,16,380,14],[340,20,380,20,"normalizedY"],[340,31,380,31],[340,34,380,34,"deltaY"],[340,40,380,40],[340,43,380,43,"distance"],[340,51,380,51],[342,16,382,14],[343,16,383,14],[343,20,383,20,"randomFactor"],[343,32,383,32],[343,35,383,35],[343,38,383,38],[343,39,383,39],[343,40,383,40],[344,16,384,14],[344,20,384,20,"finalX"],[344,26,384,26],[344,29,384,29,"normalizedX"],[344,40,384,40],[344,43,384,43],[344,44,384,44,"Math"],[344,48,384,48],[344,49,384,49,"random"],[344,55,384,55],[344,56,384,56],[344,57,384,57],[344,60,384,60],[344,63,384,63],[344,67,384,67,"randomFactor"],[344,79,384,79],[345,16,385,14],[345,20,385,20,"finalY"],[345,26,385,26],[345,29,385,29,"normalizedY"],[345,40,385,40],[345,43,385,43],[345,44,385,44,"Math"],[345,48,385,48],[345,49,385,49,"random"],[345,55,385,55],[345,56,385,56],[345,57,385,57],[345,60,385,60],[345,63,385,63],[345,67,385,67,"randomFactor"],[345,79,385,79],[347,16,387,14],[348,16,388,14],[348,20,388,18,"newX"],[348,24,388,22],[348,27,388,25,"enemy"],[348,32,388,30],[348,33,388,31,"position"],[348,41,388,39],[348,42,388,40,"x"],[348,43,388,41],[348,46,388,45,"finalX"],[348,52,388,51],[348,55,388,54,"MOVEMENT_SPEED"],[348,69,388,69],[349,16,389,14],[349,20,389,18,"newY"],[349,24,389,22],[349,27,389,25,"enemy"],[349,32,389,30],[349,33,389,31,"position"],[349,41,389,39],[349,42,389,40,"y"],[349,43,389,41],[349,46,389,45,"finalY"],[349,52,389,51],[349,55,389,54,"MOVEMENT_SPEED"],[349,69,389,69],[351,16,391,14],[352,16,392,14,"newX"],[352,20,392,18],[352,23,392,21,"Math"],[352,27,392,25],[352,28,392,26,"max"],[352,31,392,29],[352,32,392,30],[352,33,392,31],[352,35,392,33,"Math"],[352,39,392,37],[352,40,392,38,"min"],[352,43,392,41],[352,44,392,42,"SCREEN_WIDTH"],[352,56,392,54],[352,59,392,57,"ENEMY_SIZE"],[352,69,392,67],[352,71,392,69,"newX"],[352,75,392,73],[352,76,392,74],[352,77,392,75],[353,16,393,14,"newY"],[353,20,393,18],[353,23,393,21,"Math"],[353,27,393,25],[353,28,393,26,"max"],[353,31,393,29],[353,32,393,30],[353,33,393,31],[353,35,393,33,"Math"],[353,39,393,37],[353,40,393,38,"min"],[353,43,393,41],[353,44,393,42,"GAME_AREA_HEIGHT"],[353,60,393,58],[353,63,393,61,"ENEMY_SIZE"],[353,73,393,71],[353,75,393,73,"newY"],[353,79,393,77],[353,80,393,78],[353,81,393,79],[355,16,395,14],[356,16,396,14,"enemy"],[356,21,396,19],[356,22,396,20,"position"],[356,30,396,28],[356,31,396,29,"x"],[356,32,396,30],[356,35,396,33,"newX"],[356,39,396,37],[357,16,397,14,"enemy"],[357,21,397,19],[357,22,397,20,"position"],[357,30,397,28],[357,31,397,29,"y"],[357,32,397,30],[357,35,397,33,"newY"],[357,39,397,37],[358,14,398,12],[359,14,399,12],[360,12,400,10],[361,10,401,8],[362,8,402,6],[362,9,402,7],[362,10,402,8],[364,8,404,6],[365,8,405,6],[365,12,405,10,"newState"],[365,20,405,18],[365,21,405,19,"shadowClone"],[365,32,405,30],[365,34,405,32],[366,10,406,8],[367,10,407,8,"newState"],[367,18,407,16],[367,19,407,17,"shadowClone"],[367,30,407,28],[367,31,407,29,"remainingTicks"],[367,45,407,43],[367,47,407,45],[369,10,409,8],[370,10,410,8],[370,14,410,14,"cloneOffset"],[370,25,410,25],[370,28,410,28],[370,30,410,30],[370,31,410,31],[370,32,410,32],[371,10,411,8,"newState"],[371,18,411,16],[371,19,411,17,"shadowClone"],[371,30,411,28],[371,31,411,29,"position"],[371,39,411,37],[371,40,411,38,"x"],[371,41,411,39],[371,44,411,42,"currentNinjaPosition"],[371,64,411,62],[371,65,411,63,"x"],[371,66,411,64],[371,69,411,67,"cloneOffset"],[371,80,411,78],[372,10,412,8,"newState"],[372,18,412,16],[372,19,412,17,"shadowClone"],[372,30,412,28],[372,31,412,29,"position"],[372,39,412,37],[372,40,412,38,"y"],[372,41,412,39],[372,44,412,42,"currentNinjaPosition"],[372,64,412,62],[372,65,412,63,"y"],[372,66,412,64],[372,69,412,67],[372,71,412,69],[374,10,414,8],[375,10,415,8],[375,14,415,12,"newState"],[375,22,415,20],[375,23,415,21,"shadowClone"],[375,34,415,32],[375,35,415,33,"remainingTicks"],[375,49,415,47],[375,53,415,51],[375,54,415,52],[375,56,415,54],[376,12,416,10,"console"],[376,19,416,17],[376,20,416,18,"log"],[376,23,416,21],[376,24,416,22],[376,75,416,73],[376,76,416,74],[377,12,417,10,"newState"],[377,20,417,18],[377,21,417,19,"shadowClone"],[377,32,417,30],[377,35,417,33,"undefined"],[377,44,417,42],[378,10,418,8],[378,11,418,9],[378,17,418,15],[379,12,419,10],[380,12,420,10],[381,12,421,10],[381,16,421,16,"CLONE_ATTACK_INTERVAL"],[381,37,421,37],[381,40,421,40],[381,42,421,42],[382,12,422,10],[382,16,422,14,"newState"],[382,24,422,22],[382,25,422,23,"currentTick"],[382,36,422,34],[382,39,422,37,"CLONE_ATTACK_INTERVAL"],[382,60,422,58],[382,65,422,63],[382,66,422,64],[382,70,422,68,"newState"],[382,78,422,76],[382,79,422,77,"enemies"],[382,86,422,84],[382,87,422,85,"length"],[382,93,422,91],[382,96,422,94],[382,97,422,95],[382,99,422,97],[383,14,423,12,"console"],[383,21,423,19],[383,22,423,20,"log"],[383,25,423,23],[383,26,423,24],[383,83,423,81],[383,84,423,82],[385,14,425,12],[386,14,426,12],[386,18,426,18,"target"],[386,24,426,24],[386,27,426,27,"findClosestEnemyInternal"],[386,51,426,51],[386,52,426,52,"newState"],[386,60,426,60],[386,61,426,61,"enemies"],[386,68,426,68],[386,69,426,69],[387,14,427,12],[387,18,427,16,"target"],[387,24,427,22],[387,26,427,24],[388,16,428,14],[389,16,429,14],[389,20,429,20,"cloneDamage"],[389,31,429,31],[389,34,429,34,"Math"],[389,38,429,38],[389,39,429,39,"floor"],[389,44,429,44],[389,45,429,45,"newState"],[389,53,429,53],[389,54,429,54,"playerStats"],[389,65,429,65],[389,66,429,66,"attack"],[389,72,429,72],[389,75,429,75],[389,78,429,78],[389,79,429,79],[391,16,431,14],[392,16,432,14,"createProjectile"],[392,32,432,30],[392,33,432,31,"target"],[392,39,432,37],[392,41,432,39,"cloneDamage"],[392,52,432,50],[392,54,432,52,"newState"],[392,62,432,60],[392,63,432,61,"shadowClone"],[392,74,432,72],[392,75,432,73,"position"],[392,83,432,81],[392,85,432,83],[393,18,433,16,"id"],[393,20,433,18],[393,22,433,20],[393,43,433,41],[394,18,434,16,"name"],[394,22,434,20],[394,24,434,22],[394,45,434,43],[395,18,435,16,"icon"],[395,22,435,20],[395,24,435,22],[396,16,436,14],[396,17,436,15],[396,18,436,16],[397,14,437,12],[398,12,438,10],[399,10,439,8],[400,8,440,6],[402,8,442,6],[403,8,443,6],[404,8,444,6,"console"],[404,15,444,13],[404,16,444,14,"log"],[404,19,444,17],[404,20,444,18],[404,63,444,61,"isManualControlActive"],[404,84,444,82],[404,97,444,95,"game"],[404,101,444,99],[404,102,444,100,"gameState"],[404,111,444,109],[404,112,444,110,"isAlive"],[404,119,444,117],[404,121,444,119],[404,122,444,120],[405,8,445,6],[405,12,445,10],[405,13,445,11,"isManualControlActive"],[405,34,445,32],[405,38,445,36,"game"],[405,42,445,40],[405,43,445,41,"gameState"],[405,52,445,50],[405,53,445,51,"isAlive"],[405,60,445,58],[405,62,445,60],[406,10,446,8],[406,15,446,13],[406,19,446,17,"i"],[406,20,446,18],[406,23,446,21],[406,24,446,22],[406,26,446,24,"i"],[406,27,446,25],[406,30,446,28],[406,31,446,29],[406,33,446,31,"i"],[406,34,446,32],[406,36,446,34],[406,38,446,36],[407,12,447,10],[407,16,447,14,"newState"],[407,24,447,22],[407,25,447,23,"abilityManager"],[407,39,447,37],[407,40,447,38,"isAbilityReady"],[407,54,447,52],[407,55,447,53,"i"],[407,56,447,54],[407,57,447,55],[407,61,447,59,"newState"],[407,69,447,67],[407,70,447,68,"enemies"],[407,77,447,75],[407,78,447,76,"length"],[407,84,447,82],[407,87,447,85],[407,88,447,86],[407,90,447,88],[408,14,448,12],[408,18,448,16,"newState"],[408,26,448,24],[408,27,448,25,"abilityManager"],[408,41,448,39],[408,42,448,40,"useAbility"],[408,52,448,50],[408,53,448,51,"i"],[408,54,448,52],[408,56,448,54,"newTick"],[408,63,448,61],[408,64,448,62],[408,66,448,64],[409,16,449,14,"console"],[409,23,449,21],[409,24,449,22,"log"],[409,27,449,25],[409,28,449,26],[409,73,449,71,"i"],[409,74,449,72],[409,76,449,74],[409,77,449,75],[410,16,450,14,"castAbility"],[410,27,450,25],[410,28,450,26,"newState"],[410,36,450,34],[410,38,450,36,"i"],[410,39,450,37],[410,40,450,38],[411,14,451,12],[412,12,452,10],[413,10,453,8],[414,8,454,6],[416,8,456,6],[417,8,457,6],[417,12,457,12,"deadEnemies"],[417,23,457,23],[417,26,457,26,"newState"],[417,34,457,34],[417,35,457,35,"enemies"],[417,42,457,42],[417,43,457,43,"filter"],[417,49,457,49],[417,50,457,50,"enemy"],[417,55,457,55],[417,59,457,59,"enemy"],[417,64,457,64],[417,65,457,65,"health"],[417,71,457,71],[417,75,457,75],[417,76,457,76],[417,77,457,77],[418,8,458,6,"enemiesToKill"],[418,21,458,19],[418,24,458,22],[418,25,458,23],[418,28,458,26,"deadEnemies"],[418,39,458,37],[418,40,458,38],[418,41,458,39],[418,42,458,40],[420,8,460,6],[421,8,461,6],[421,12,461,10,"deadEnemies"],[421,23,461,21],[421,24,461,22,"length"],[421,30,461,28],[421,33,461,31],[421,34,461,32],[421,36,461,34],[422,10,462,8,"console"],[422,17,462,15],[422,18,462,16,"log"],[422,21,462,19],[422,22,462,20],[422,49,462,47,"deadEnemies"],[422,60,462,58],[422,61,462,59,"length"],[422,67,462,65],[422,83,462,81],[422,85,462,83,"deadEnemies"],[422,96,462,94],[422,97,462,95,"map"],[422,100,462,98],[422,101,462,99,"e"],[422,102,462,100],[422,106,462,104],[422,109,462,107,"e"],[422,110,462,108],[422,111,462,109,"id"],[422,113,462,111],[422,117,462,115,"e"],[422,118,462,116],[422,119,462,117,"health"],[422,125,462,123],[422,130,462,128],[422,131,462,129],[422,132,462,130],[423,8,463,6],[425,8,465,6],[426,8,466,6],[426,12,466,12,"lowHealthEnemies"],[426,28,466,28],[426,31,466,31,"newState"],[426,39,466,39],[426,40,466,40,"enemies"],[426,47,466,47],[426,48,466,48,"filter"],[426,54,466,54],[426,55,466,55,"enemy"],[426,60,466,60],[426,64,466,64,"enemy"],[426,69,466,69],[426,70,466,70,"health"],[426,76,466,76],[426,80,466,80],[426,82,466,82],[426,86,466,86,"enemy"],[426,91,466,91],[426,92,466,92,"health"],[426,98,466,98],[426,101,466,101],[426,102,466,102],[426,103,466,103],[427,8,467,6],[427,12,467,10,"lowHealthEnemies"],[427,28,467,26],[427,29,467,27,"length"],[427,35,467,33],[427,38,467,36],[427,39,467,37],[427,41,467,39],[428,10,468,8,"console"],[428,17,468,15],[428,18,468,16,"log"],[428,21,468,19],[428,22,468,20],[428,61,468,59],[428,63,468,61,"lowHealthEnemies"],[428,79,468,77],[428,80,468,78,"map"],[428,83,468,81],[428,84,468,82,"e"],[428,85,468,83],[428,89,468,87],[428,92,468,90,"e"],[428,93,468,91],[428,94,468,92,"id"],[428,96,468,94],[428,100,468,98,"e"],[428,101,468,99],[428,102,468,100,"health"],[428,108,468,106],[428,112,468,110,"e"],[428,113,468,111],[428,114,468,112,"maxHealth"],[428,123,468,121],[428,128,468,126],[428,129,468,127],[428,130,468,128],[429,8,469,6],[431,8,471,6],[432,8,472,6],[432,12,472,12,"beforeCount"],[432,23,472,23],[432,26,472,26,"newState"],[432,34,472,34],[432,35,472,35,"enemies"],[432,42,472,42],[432,43,472,43,"length"],[432,49,472,49],[433,8,473,6,"newState"],[433,16,473,14],[433,17,473,15,"enemies"],[433,24,473,22],[433,27,473,25,"newState"],[433,35,473,33],[433,36,473,34,"enemies"],[433,43,473,41],[433,44,473,42,"filter"],[433,50,473,48],[433,51,473,49,"enemy"],[433,56,473,54],[433,60,473,58,"enemy"],[433,65,473,63],[433,66,473,64,"health"],[433,72,473,70],[433,75,473,73],[433,76,473,74],[433,77,473,75],[434,8,474,6],[434,12,474,12,"afterCount"],[434,22,474,22],[434,25,474,25,"newState"],[434,33,474,33],[434,34,474,34,"enemies"],[434,41,474,41],[434,42,474,42,"length"],[434,48,474,48],[435,8,476,6],[435,12,476,10,"beforeCount"],[435,23,476,21],[435,28,476,26,"afterCount"],[435,38,476,36],[435,40,476,38],[436,10,477,8,"console"],[436,17,477,15],[436,18,477,16,"log"],[436,21,477,19],[436,22,477,20],[436,52,477,50,"beforeCount"],[436,63,477,61],[436,66,477,64,"afterCount"],[436,76,477,74],[436,102,477,100],[436,103,477,101],[437,8,478,6],[439,8,480,6],[440,8,481,6],[441,8,482,6],[441,12,482,12,"MAX_ENEMIES"],[441,23,482,23],[441,26,482,26],[441,28,482,28],[441,29,482,29],[441,30,482,30],[442,8,483,6],[442,12,483,12,"MIN_SPAWN_DELAY"],[442,27,483,27],[442,30,483,30],[442,33,483,33],[442,34,483,34],[442,35,483,35],[443,8,484,6],[443,12,484,12,"now"],[443,15,484,15],[443,18,484,18,"Date"],[443,22,484,22],[443,23,484,23,"now"],[443,26,484,26],[443,27,484,27],[443,28,484,28],[444,8,485,6],[444,12,485,12,"hasBoss"],[444,19,485,19],[444,22,485,22,"newState"],[444,30,485,30],[444,31,485,31,"enemies"],[444,38,485,38],[444,39,485,39,"some"],[444,43,485,43],[444,44,485,44,"enemy"],[444,49,485,49],[444,53,485,53,"enemy"],[444,58,485,58],[444,59,485,59,"isBoss"],[444,65,485,65],[444,66,485,66],[446,8,487,6],[447,8,488,6],[447,12,488,10],[447,13,488,11,"newState"],[447,21,488,19],[447,22,488,20,"lastSpawnTime"],[447,35,488,33],[447,37,488,35],[448,10,489,8,"newState"],[448,18,489,16],[448,19,489,17,"lastSpawnTime"],[448,32,489,30],[448,35,489,33,"now"],[448,38,489,36],[449,8,490,6],[450,8,492,6,"console"],[450,15,492,13],[450,16,492,14,"log"],[450,19,492,17],[450,20,492,18],[450,53,492,51,"newState"],[450,61,492,59],[450,62,492,60,"enemies"],[450,69,492,67],[450,70,492,68,"length"],[450,76,492,74],[450,85,492,83,"MAX_ENEMIES"],[450,96,492,94],[450,109,492,107,"hasBoss"],[450,116,492,114],[450,118,492,116],[450,119,492,117],[452,8,494,6],[453,8,495,6],[453,12,495,10],[453,13,495,11,"hasBoss"],[453,20,495,18],[453,24,495,22,"newState"],[453,32,495,30],[453,33,495,31,"enemies"],[453,40,495,38],[453,41,495,39,"length"],[453,47,495,45],[453,50,495,48,"MAX_ENEMIES"],[453,61,495,59],[453,65,495,64,"now"],[453,68,495,67],[453,71,495,70,"newState"],[453,79,495,78],[453,80,495,79,"lastSpawnTime"],[453,93,495,92],[453,97,495,97,"MIN_SPAWN_DELAY"],[453,112,495,112],[453,114,495,114],[454,10,496,8,"console"],[454,17,496,15],[454,18,496,16,"log"],[454,21,496,19],[454,22,496,20],[454,43,496,41,"newState"],[454,51,496,49],[454,52,496,50,"enemies"],[454,59,496,57],[454,60,496,58,"length"],[454,66,496,64],[454,69,496,67],[454,70,496,68],[454,74,496,72,"MAX_ENEMIES"],[454,85,496,83],[454,87,496,85],[454,88,496,86],[455,10,497,8,"spawnTestEnemy"],[455,24,497,22],[455,25,497,23,"newState"],[455,33,497,31],[455,34,497,32],[456,10,498,8,"newState"],[456,18,498,16],[456,19,498,17,"lastSpawnTime"],[456,32,498,30],[456,35,498,33,"now"],[456,38,498,36],[457,8,499,6],[458,8,501,6],[458,15,501,13,"newState"],[458,23,501,21],[459,6,502,4],[459,7,502,5],[459,47,502,6],[461,6,504,4],[462,6,505,4,"console"],[462,13,505,11],[462,14,505,12,"log"],[462,17,505,15],[462,18,505,16],[462,50,505,48,"enemiesToKill"],[462,63,505,61],[462,64,505,62,"length"],[462,70,505,68],[462,101,505,99],[462,102,505,100],[463,6,507,4,"enemiesToKill"],[463,19,507,17],[463,20,507,18,"forEach"],[463,27,507,25],[463,28,507,26],[463,29,507,27,"enemy"],[463,34,507,32],[463,36,507,34,"index"],[463,41,507,39],[463,46,507,44],[464,8,508,6,"console"],[464,15,508,13],[464,16,508,14,"log"],[464,19,508,17],[464,20,508,18],[464,57,508,55,"index"],[464,62,508,60],[464,65,508,63],[464,66,508,64],[464,70,508,68,"enemiesToKill"],[464,83,508,81],[464,84,508,82,"length"],[464,90,508,88],[464,104,508,102,"enemy"],[464,109,508,107],[464,110,508,108,"id"],[464,112,508,110],[464,114,508,112],[464,115,508,113],[465,8,509,6,"handleEnemyKill"],[465,23,509,21],[465,24,509,22,"enemy"],[465,29,509,27],[465,30,509,28],[466,6,510,4],[466,7,510,5],[466,8,510,6],[467,4,511,2],[467,5,511,3],[467,7,511,5],[467,8,511,6,"handleEnemyKill"],[467,23,511,21],[467,24,511,22],[467,25,511,23],[467,26,511,24],[467,27,511,25],[469,4,513,2],[470,4,514,2],[470,8,514,8,"findClosestEnemyInternal"],[470,32,514,32],[470,35,514,36,"enemies"],[470,42,514,58],[470,46,514,83],[471,6,515,4],[471,10,515,8,"enemies"],[471,17,515,15],[471,18,515,16,"length"],[471,24,515,22],[471,29,515,27],[471,30,515,28],[471,32,515,30],[471,39,515,37],[471,43,515,41],[473,6,517,4],[474,6,518,4],[474,10,518,10,"SCREEN_WIDTH"],[474,22,518,22],[474,25,518,25],[474,28,518,28],[475,6,519,4],[475,10,519,10,"GAME_AREA_HEIGHT"],[475,26,519,26],[475,29,519,29],[475,32,519,32],[475,35,519,35],[475,38,519,38],[475,39,519,39],[475,40,519,40],[476,6,520,4],[476,10,520,10,"ninjaX"],[476,16,520,16],[476,19,520,19,"SCREEN_WIDTH"],[476,31,520,31],[476,34,520,34],[476,35,520,35],[477,6,521,4],[477,10,521,10,"ninjaY"],[477,16,521,16],[477,19,521,19,"GAME_AREA_HEIGHT"],[477,35,521,35],[477,38,521,38],[477,39,521,39],[478,6,523,4],[478,10,523,8,"closestEnemy"],[478,22,523,20],[478,25,523,23,"enemies"],[478,32,523,30],[478,33,523,31],[478,34,523,32],[478,35,523,33],[479,6,524,4],[479,10,524,8,"closestDistance"],[479,25,524,23],[479,28,524,26,"Infinity"],[479,36,524,34],[480,6,526,4,"enemies"],[480,13,526,11],[480,14,526,12,"forEach"],[480,21,526,19],[480,22,526,20,"enemy"],[480,27,526,25],[480,31,526,29],[481,8,527,6],[481,12,527,12,"distance"],[481,20,527,20],[481,23,527,23,"Math"],[481,27,527,27],[481,28,527,28,"sqrt"],[481,32,527,32],[481,33,528,8,"Math"],[481,37,528,12],[481,38,528,13,"pow"],[481,41,528,16],[481,42,528,17,"enemy"],[481,47,528,22],[481,48,528,23,"position"],[481,56,528,31],[481,57,528,32,"x"],[481,58,528,33],[481,61,528,36,"ninjaX"],[481,67,528,42],[481,69,528,44],[481,70,528,45],[481,71,528,46],[481,74,529,8,"Math"],[481,78,529,12],[481,79,529,13,"pow"],[481,82,529,16],[481,83,529,17,"enemy"],[481,88,529,22],[481,89,529,23,"position"],[481,97,529,31],[481,98,529,32,"y"],[481,99,529,33],[481,102,529,36,"ninjaY"],[481,108,529,42],[481,110,529,44],[481,111,529,45],[481,112,530,6],[481,113,530,7],[482,8,532,6],[482,12,532,10,"distance"],[482,20,532,18],[482,23,532,21,"closestDistance"],[482,38,532,36],[482,40,532,38],[483,10,533,8,"closestDistance"],[483,25,533,23],[483,28,533,26,"distance"],[483,36,533,34],[484,10,534,8,"closestEnemy"],[484,22,534,20],[484,25,534,23,"enemy"],[484,30,534,28],[485,8,535,6],[486,6,536,4],[486,7,536,5],[486,8,536,6],[487,6,538,4,"console"],[487,13,538,11],[487,14,538,12,"log"],[487,17,538,15],[487,18,538,16],[487,60,538,58,"closestDistance"],[487,75,538,73],[487,76,538,74,"toFixed"],[487,83,538,81],[487,84,538,82],[487,85,538,83],[487,86,538,84],[487,88,538,86],[487,89,538,87],[488,6,539,4],[488,13,539,11,"closestEnemy"],[488,25,539,23],[489,4,540,2],[489,5,540,3],[491,4,542,2],[492,4,543,2],[492,8,543,8,"findClosestEnemy"],[492,24,543,24],[492,27,543,27,"findClosestEnemy"],[492,28,543,27],[492,33,543,53],[493,6,544,4],[493,13,544,11,"findClosestEnemyInternal"],[493,37,544,35],[493,38,544,36,"combatState"],[493,49,544,47],[493,50,544,48,"enemies"],[493,57,544,55],[493,58,544,56],[494,4,545,2],[494,5,545,3],[496,4,547,2],[497,4,548,2],[497,8,548,2,"_useState7"],[497,18,548,2],[497,21,548,58],[497,25,548,58,"useState"],[497,31,548,66],[497,32,548,66,"useState"],[497,40,548,66],[497,42,548,91],[498,8,548,93,"x"],[498,9,548,94],[498,11,548,96],[498,12,548,97],[499,8,548,99,"y"],[499,9,548,100],[499,11,548,102],[500,6,548,104],[500,7,548,105],[500,8,548,106],[501,6,548,106,"_useState8"],[501,16,548,106],[501,23,548,106,"_slicedToArray"],[501,37,548,106],[501,38,548,106,"default"],[501,45,548,106],[501,47,548,106,"_useState7"],[501,57,548,106],[502,6,548,9,"currentNinjaPosition"],[502,26,548,29],[502,29,548,29,"_useState8"],[502,39,548,29],[503,6,548,31,"setCurrentNinjaPosition"],[503,29,548,54],[503,32,548,54,"_useState8"],[503,42,548,54],[504,4,549,2],[504,8,549,2,"_useState9"],[504,18,549,2],[504,21,549,60],[504,25,549,60,"useState"],[504,31,549,68],[504,32,549,68,"useState"],[504,40,549,68],[504,42,549,69],[504,47,549,74],[504,48,549,75],[505,6,549,75,"_useState0"],[505,16,549,75],[505,23,549,75,"_slicedToArray"],[505,37,549,75],[505,38,549,75,"default"],[505,45,549,75],[505,47,549,75,"_useState9"],[505,57,549,75],[506,6,549,9,"isManualControlActive"],[506,27,549,30],[506,30,549,30,"_useState0"],[506,40,549,30],[507,6,549,32,"setIsManualControlActive"],[507,30,549,56],[507,33,549,56,"_useState0"],[507,43,549,56],[509,4,551,2],[510,4,552,2],[510,8,552,8,"updateNinjaPosition"],[510,27,552,27],[510,30,552,30],[510,34,552,30,"useCallback"],[510,40,552,41],[510,41,552,41,"useCallback"],[510,52,552,41],[510,54,552,43,"newPosition"],[510,65,552,78],[510,69,552,83],[511,6,553,4,"setCurrentNinjaPosition"],[511,29,553,27],[511,30,553,28,"newPosition"],[511,41,553,39],[511,42,553,40],[512,4,554,2],[512,5,554,3],[512,7,554,5],[512,9,554,7],[512,10,554,8],[514,4,556,2],[515,4,557,2],[515,8,557,8,"setManualControlActive"],[515,30,557,30],[515,33,557,33],[515,37,557,33,"useCallback"],[515,43,557,44],[515,44,557,44,"useCallback"],[515,55,557,44],[515,57,557,46,"active"],[515,63,557,61],[515,67,557,66],[516,6,558,4,"setIsManualControlActive"],[516,30,558,28],[516,31,558,29,"active"],[516,37,558,35],[516,38,558,36],[517,6,559,4,"console"],[517,13,559,11],[517,14,559,12,"log"],[517,17,559,15],[517,18,559,16],[517,39,559,37,"active"],[517,45,559,43],[517,48,559,46],[517,59,559,57],[517,62,559,60],[517,75,559,73],[517,88,559,86,"active"],[517,94,559,92],[517,97,559,95],[517,105,559,103],[517,108,559,106],[517,117,559,115],[517,119,559,117],[517,120,559,118],[518,4,560,2],[518,5,560,3],[518,7,560,5],[518,9,560,7],[518,10,560,8],[520,4,562,2],[521,4,563,2],[521,8,563,8,"handleProjectileHit"],[521,27,563,27],[521,30,563,31,"projectile"],[521,40,563,59],[521,44,563,64],[522,6,564,4,"console"],[522,13,564,11],[522,14,564,12,"log"],[522,17,564,15],[522,18,564,16],[522,35,564,33,"projectile"],[522,45,564,43],[522,46,564,44,"id"],[522,48,564,46],[522,62,564,60,"projectile"],[522,72,564,70],[522,73,564,71,"targetEnemyId"],[522,86,564,84],[522,94,564,92,"projectile"],[522,104,564,102],[522,105,564,103,"damage"],[522,111,564,109],[522,120,564,118],[522,121,564,119],[523,6,566,4,"setCombatState"],[523,20,566,18],[523,21,566,19,"prev"],[523,25,566,23],[523,29,566,27],[524,8,567,6],[524,12,567,12,"newState"],[524,20,567,20],[524,23,567,23],[525,10,567,25],[525,13,567,28,"prev"],[526,8,567,33],[526,9,567,34],[528,8,569,6],[529,8,570,6],[529,12,570,12,"enemyIndex"],[529,22,570,22],[529,25,570,25,"newState"],[529,33,570,33],[529,34,570,34,"enemies"],[529,41,570,41],[529,42,570,42,"findIndex"],[529,51,570,51],[529,52,570,52,"e"],[529,53,570,53],[529,57,570,57,"e"],[529,58,570,58],[529,59,570,59,"id"],[529,61,570,61],[529,66,570,66,"projectile"],[529,76,570,76],[529,77,570,77,"targetEnemyId"],[529,90,570,90],[529,91,570,91],[530,8,571,6],[530,12,571,10,"enemyIndex"],[530,22,571,20],[530,26,571,24],[530,27,571,25],[530,29,571,27],[531,10,572,8,"newState"],[531,18,572,16],[531,19,572,17,"enemies"],[531,26,572,24],[531,29,572,27],[531,30,572,28],[531,33,572,31,"newState"],[531,41,572,39],[531,42,572,40,"enemies"],[531,49,572,47],[531,50,572,48],[532,10,573,8,"newState"],[532,18,573,16],[532,19,573,17,"enemies"],[532,26,573,24],[532,27,573,25,"enemyIndex"],[532,37,573,35],[532,38,573,36],[532,41,573,39],[533,12,574,10],[533,15,574,13,"newState"],[533,23,574,21],[533,24,574,22,"enemies"],[533,31,574,29],[533,32,574,30,"enemyIndex"],[533,42,574,40],[533,43,574,41],[534,12,575,10,"health"],[534,18,575,16],[534,20,575,18,"newState"],[534,28,575,26],[534,29,575,27,"enemies"],[534,36,575,34],[534,37,575,35,"enemyIndex"],[534,47,575,45],[534,48,575,46],[534,49,575,47,"health"],[534,55,575,53],[534,58,575,56,"projectile"],[534,68,575,66],[534,69,575,67,"damage"],[534,75,575,73],[535,12,576,10,"lastDamaged"],[535,23,576,21],[535,25,576,23,"combatEngine"],[535,44,576,35],[535,45,576,35,"combatEngine"],[535,57,576,35],[535,58,576,36,"getCurrentTick"],[535,72,576,50],[535,73,576,51],[536,10,577,8],[536,11,577,9],[537,10,579,8,"console"],[537,17,579,15],[537,18,579,16,"log"],[537,21,579,19],[537,22,579,20],[537,34,579,32,"projectile"],[537,44,579,42],[537,45,579,43,"targetEnemyId"],[537,58,579,56],[537,70,579,68,"newState"],[537,78,579,76],[537,79,579,77,"enemies"],[537,86,579,84],[537,87,579,85,"enemyIndex"],[537,97,579,95],[537,98,579,96],[537,99,579,97,"health"],[537,105,579,103],[537,109,579,107,"newState"],[537,117,579,115],[537,118,579,116,"enemies"],[537,125,579,123],[537,126,579,124,"enemyIndex"],[537,136,579,134],[537,137,579,135],[537,138,579,136,"maxHealth"],[537,147,579,145],[537,149,579,147],[537,150,579,148],[538,8,580,6],[539,8,582,6],[539,15,582,13,"newState"],[539,23,582,21],[540,6,583,4],[540,7,583,5],[540,8,583,6],[542,6,585,4],[543,6,586,4,"setProjectiles"],[543,20,586,18],[543,21,586,19,"prev"],[543,25,586,23],[543,29,586,27,"prev"],[543,33,586,31],[543,34,586,32,"filter"],[543,40,586,38],[543,41,586,39,"p"],[543,42,586,40],[543,46,586,44,"p"],[543,47,586,45],[543,48,586,46,"id"],[543,50,586,48],[543,55,586,53,"projectile"],[543,65,586,63],[543,66,586,64,"id"],[543,68,586,66],[543,69,586,67],[543,70,586,68],[544,4,587,2],[544,5,587,3],[546,4,589,2],[547,4,590,2],[547,8,590,8,"castAbility"],[547,19,590,19],[547,22,590,22,"castAbility"],[547,23,590,23,"state"],[547,28,590,41],[547,30,590,43,"slotIndex"],[547,39,590,60],[547,44,590,65],[548,6,591,4],[548,10,591,10,"deck"],[548,14,591,14],[548,17,591,17,"state"],[548,22,591,22],[548,23,591,23,"abilityManager"],[548,37,591,37],[548,38,591,38,"getDeck"],[548,45,591,45],[548,46,591,46],[548,47,591,47],[549,6,592,4],[549,10,592,10,"ability"],[549,17,592,17],[549,20,592,20,"deck"],[549,24,592,24],[549,25,592,25,"slots"],[549,30,592,30],[549,31,592,31,"slotIndex"],[549,40,592,40],[549,41,592,41],[550,6,593,4],[550,10,593,8],[550,11,593,9,"ability"],[550,18,593,16],[550,20,593,18],[551,6,595,4,"console"],[551,13,595,11],[551,14,595,12,"log"],[551,17,595,15],[551,18,595,16],[551,43,595,41,"ability"],[551,50,595,48],[551,51,595,49,"id"],[551,53,595,51],[551,67,595,65,"slotIndex"],[551,76,595,74],[551,78,595,76],[551,79,595,77],[553,6,597,4],[554,6,598,4],[554,10,598,8,"damage"],[554,16,598,14],[554,19,598,17,"ability"],[554,26,598,24],[554,27,598,25,"stats"],[554,32,598,30],[554,33,598,31,"baseDamage"],[554,43,598,41],[556,6,600,4],[557,6,601,4,"deck"],[557,10,601,8],[557,11,601,9,"activeSynergies"],[557,26,601,24],[557,27,601,25,"forEach"],[557,34,601,32],[557,35,601,33,"synergy"],[557,42,601,40],[557,46,601,44],[558,8,602,6],[558,12,602,10,"synergy"],[558,19,602,17],[558,20,602,18,"bonus"],[558,25,602,23],[558,26,602,24,"damageBonus"],[558,37,602,35],[558,41,603,10,"synergy"],[558,48,603,17],[558,49,603,18,"requiredTags"],[558,61,603,30],[558,62,603,31,"some"],[558,66,603,35],[558,67,603,36,"tag"],[558,70,603,39],[558,74,603,43,"ability"],[558,81,603,50],[558,82,603,51,"tags"],[558,86,603,55],[558,87,603,56,"includes"],[558,95,603,64],[558,96,603,65,"tag"],[558,99,603,68],[558,100,603,69],[558,101,603,70],[558,103,603,72],[559,10,604,8,"damage"],[559,16,604,14],[559,20,604,19],[559,21,604,20],[559,24,604,23,"synergy"],[559,31,604,30],[559,32,604,31,"bonus"],[559,37,604,36],[559,38,604,37,"damageBonus"],[559,49,604,48],[559,52,604,51],[559,55,604,55],[560,8,605,6],[561,6,606,4],[561,7,606,5],[561,8,606,6],[563,6,608,4],[564,6,609,4],[564,10,609,10,"isAOE"],[564,15,609,15],[564,18,609,18,"ability"],[564,25,609,25],[564,26,609,26,"effects"],[564,33,609,33],[564,34,609,34,"includes"],[564,42,609,42],[564,43,609,43],[564,48,609,48],[564,49,609,49],[564,53,609,53,"ability"],[564,60,609,60],[564,61,609,61,"stats"],[564,66,609,66],[564,67,609,67,"aoeRadius"],[564,76,609,76],[565,6,610,4,"console"],[565,13,610,11],[565,14,610,12,"log"],[565,17,610,15],[565,18,610,16],[565,39,610,37,"ability"],[565,46,610,44],[565,47,610,45,"name"],[565,51,610,49],[565,66,610,64,"JSON"],[565,70,610,68],[565,71,610,69,"stringify"],[565,80,610,78],[565,81,610,79,"ability"],[565,88,610,86],[565,89,610,87,"effects"],[565,96,610,94],[565,97,610,95],[565,113,610,111,"ability"],[565,120,610,118],[565,121,610,119,"stats"],[565,126,610,124],[565,127,610,125,"aoeRadius"],[565,136,610,134],[565,148,610,146,"isAOE"],[565,153,610,151],[565,155,610,153],[565,156,610,154],[566,6,612,4],[566,10,612,8,"isAOE"],[566,15,612,13],[566,17,612,15],[567,8,613,6,"console"],[567,15,613,13],[567,16,613,14,"log"],[567,19,613,17],[567,20,613,18],[567,39,613,37,"ability"],[567,46,613,44],[567,47,613,45,"name"],[567,51,613,49],[567,67,613,65,"ability"],[567,74,613,72],[567,75,613,73,"stats"],[567,80,613,78],[567,81,613,79,"aoeRadius"],[567,90,613,88],[567,92,613,90],[567,93,613,91],[569,8,615,6],[570,8,616,6],[571,8,617,6],[571,12,617,12,"ninjaX"],[571,18,617,18],[571,21,617,21,"currentNinjaPosition"],[571,41,617,41],[571,42,617,42,"x"],[571,43,617,43],[571,46,617,46],[571,48,617,48],[571,49,617,49],[571,50,617,50],[572,8,618,6],[572,12,618,12,"ninjaY"],[572,18,618,18],[572,21,618,21,"currentNinjaPosition"],[572,41,618,41],[572,42,618,42,"y"],[572,43,618,43],[572,46,618,46],[572,48,618,48],[573,8,619,6],[573,12,619,12,"aoeRadius"],[573,21,619,21],[573,24,619,24,"ability"],[573,31,619,31],[573,32,619,32,"stats"],[573,37,619,37],[573,38,619,38,"aoeRadius"],[573,47,619,47],[574,8,621,6],[574,12,621,12,"enemiesInRange"],[574,26,621,26],[574,29,621,29,"state"],[574,34,621,34],[574,35,621,35,"enemies"],[574,42,621,42],[574,43,621,43,"filter"],[574,49,621,49],[574,50,621,50,"enemy"],[574,55,621,55],[574,59,621,59],[575,10,622,8],[575,14,622,14,"enemyX"],[575,20,622,20],[575,23,622,23,"enemy"],[575,28,622,28],[575,29,622,29,"position"],[575,37,622,37],[575,38,622,38,"x"],[575,39,622,39],[575,42,622,42],[575,46,622,46],[575,47,622,47],[575,48,622,48],[576,10,623,8],[576,14,623,14,"enemyY"],[576,20,623,20],[576,23,623,23,"enemy"],[576,28,623,28],[576,29,623,29,"position"],[576,37,623,37],[576,38,623,38,"y"],[576,39,623,39],[576,42,623,42],[576,46,623,46],[577,10,624,8],[577,14,624,14,"distance"],[577,22,624,22],[577,25,624,25,"Math"],[577,29,624,29],[577,30,624,30,"sqrt"],[577,34,624,34],[577,35,624,35,"Math"],[577,39,624,39],[577,40,624,40,"pow"],[577,43,624,43],[577,44,624,44,"enemyX"],[577,50,624,50],[577,53,624,53,"ninjaX"],[577,59,624,59],[577,61,624,61],[577,62,624,62],[577,63,624,63],[577,66,624,66,"Math"],[577,70,624,70],[577,71,624,71,"pow"],[577,74,624,74],[577,75,624,75,"enemyY"],[577,81,624,81],[577,84,624,84,"ninjaY"],[577,90,624,90],[577,92,624,92],[577,93,624,93],[577,94,624,94],[577,95,624,95],[578,10,625,8],[578,17,625,15,"distance"],[578,25,625,23],[578,29,625,27,"aoeRadius"],[578,38,625,36],[579,8,626,6],[579,9,626,7],[579,10,626,8],[580,8,628,6,"console"],[580,15,628,13],[580,16,628,14,"log"],[580,19,628,17],[580,20,628,18],[580,45,628,43,"enemiesInRange"],[580,59,628,57],[580,60,628,58,"length"],[580,66,628,64],[580,88,628,86,"aoeRadius"],[580,97,628,95],[580,107,628,105],[580,108,628,106],[582,8,630,6],[583,8,631,6,"enemiesInRange"],[583,22,631,20],[583,23,631,21,"forEach"],[583,30,631,28],[583,31,631,29,"enemy"],[583,36,631,34],[583,40,631,38],[584,10,632,8],[584,14,632,14,"damageResult"],[584,26,632,26],[584,29,632,29,"DamageCalculator"],[584,48,632,45],[584,49,632,45,"DamageCalculator"],[584,65,632,45],[584,66,632,46,"calculateDamage"],[584,81,632,61],[584,82,632,62,"damage"],[584,88,632,68],[584,90,632,70,"state"],[584,95,632,75],[584,96,632,76,"playerStats"],[584,107,632,87],[584,109,632,89,"enemy"],[584,114,632,94],[584,115,632,95,"stats"],[584,120,632,100],[584,121,632,101],[585,10,633,8,"createProjectile"],[585,26,633,24],[585,27,633,25,"enemy"],[585,32,633,30],[585,34,633,32,"damageResult"],[585,46,633,44],[585,47,633,45,"damage"],[585,53,633,51],[585,55,633,53,"currentNinjaPosition"],[585,75,633,73],[585,77,633,75],[586,12,634,10,"id"],[586,14,634,12],[586,16,634,14,"ability"],[586,23,634,21],[586,24,634,22,"id"],[586,26,634,24],[587,12,635,10,"name"],[587,16,635,14],[587,18,635,16,"ability"],[587,25,635,23],[587,26,635,24,"name"],[587,30,635,28],[588,12,636,10,"icon"],[588,16,636,14],[588,18,636,16,"ability"],[588,25,636,23],[588,26,636,24,"icon"],[589,10,637,8],[589,11,637,9],[589,12,637,10],[590,10,638,8,"console"],[590,17,638,15],[590,18,638,16,"log"],[590,21,638,19],[590,22,638,20],[590,37,638,35,"enemy"],[590,42,638,40],[590,43,638,41,"name"],[590,47,638,45],[590,55,638,53,"damageResult"],[590,67,638,65],[590,68,638,66,"damage"],[590,74,638,72],[590,83,638,81],[590,84,638,82],[592,10,640,8],[593,10,641,8],[593,14,641,12,"damageResult"],[593,26,641,24],[593,27,641,25,"damage"],[593,33,641,31],[593,37,641,35,"enemy"],[593,42,641,40],[593,43,641,41,"health"],[593,49,641,47],[593,51,641,49],[594,12,642,10,"console"],[594,19,642,17],[594,20,642,18,"log"],[594,23,642,21],[594,24,642,22],[594,67,642,65,"enemy"],[594,72,642,70],[594,73,642,71,"name"],[594,77,642,75],[594,90,642,88,"damageResult"],[594,102,642,100],[594,103,642,101,"damage"],[594,109,642,107],[594,124,642,122,"enemy"],[594,129,642,127],[594,130,642,128,"health"],[594,136,642,134],[594,139,642,137],[594,140,642,138],[595,10,643,8],[596,8,644,6],[596,9,644,7],[596,10,644,8],[597,8,646,6,"console"],[597,15,646,13],[597,16,646,14,"log"],[597,19,646,17],[597,20,646,18],[597,26,646,24,"ability"],[597,33,646,31],[597,34,646,32,"name"],[597,38,646,36],[597,56,646,54,"enemiesInRange"],[597,70,646,68],[597,71,646,69,"length"],[597,77,646,75],[597,93,646,91,"damage"],[597,99,646,97],[597,118,646,116],[597,119,646,117],[598,6,648,4],[598,7,648,5],[598,13,648,11],[599,8,649,6],[600,8,650,6],[600,12,650,12,"target"],[600,18,650,18],[600,21,650,21,"findClosestEnemyInternal"],[600,45,650,45],[600,46,650,46,"state"],[600,51,650,51],[600,52,650,52,"enemies"],[600,59,650,59],[600,60,650,60],[601,8,651,6],[601,12,651,10],[601,13,651,11,"target"],[601,19,651,17],[601,21,651,19],[602,8,653,6],[602,12,653,12,"damageResult"],[602,24,653,24],[602,27,653,27,"DamageCalculator"],[602,46,653,43],[602,47,653,43,"DamageCalculator"],[602,63,653,43],[602,64,653,44,"calculateDamage"],[602,79,653,59],[602,80,653,60,"damage"],[602,86,653,66],[602,88,653,68,"state"],[602,93,653,73],[602,94,653,74,"playerStats"],[602,105,653,85],[602,107,653,87,"target"],[602,113,653,93],[602,114,653,94,"stats"],[602,119,653,99],[602,120,653,100],[604,8,655,6],[605,8,656,6,"createProjectile"],[605,24,656,22],[605,25,656,23,"target"],[605,31,656,29],[605,33,656,31,"damageResult"],[605,45,656,43],[605,46,656,44,"damage"],[605,52,656,50],[605,54,656,52,"currentNinjaPosition"],[605,74,656,72],[605,76,656,74],[606,10,657,8,"id"],[606,12,657,10],[606,14,657,12,"ability"],[606,21,657,19],[606,22,657,20,"id"],[606,24,657,22],[607,10,658,8,"name"],[607,14,658,12],[607,16,658,14,"ability"],[607,23,658,21],[607,24,658,22,"name"],[607,28,658,26],[608,10,659,8,"icon"],[608,14,659,12],[608,16,659,14,"ability"],[608,23,659,21],[608,24,659,22,"icon"],[609,8,660,6],[609,9,660,7],[609,10,660,8],[610,8,662,6,"console"],[610,15,662,13],[610,16,662,14,"log"],[610,19,662,17],[610,20,662,18],[610,26,662,24,"ability"],[610,33,662,31],[610,34,662,32,"name"],[610,38,662,36],[610,66,662,64,"damageResult"],[610,78,662,76],[610,79,662,77,"damage"],[610,85,662,83],[610,95,662,93,"damageResult"],[610,107,662,105],[610,108,662,106,"isCritical"],[610,118,662,116],[610,121,662,119],[610,131,662,129],[610,134,662,132],[610,136,662,134],[610,138,662,136],[610,139,662,137],[611,6,663,4],[613,6,665,4],[614,6,666,4],[614,10,666,8,"ability"],[614,17,666,15],[614,18,666,16,"effects"],[614,25,666,23],[614,26,666,24,"includes"],[614,34,666,32],[614,35,666,33],[614,40,666,38],[614,41,666,39],[614,45,666,43,"ability"],[614,52,666,50],[614,53,666,51,"stats"],[614,58,666,56],[614,59,666,57,"duration"],[614,67,666,65],[614,69,666,67],[615,8,667,6],[615,12,667,12,"targets"],[615,19,667,19],[615,22,667,22,"isAOE"],[615,27,667,27],[615,30,668,8,"state"],[615,35,668,13],[615,36,668,14,"enemies"],[615,43,668,21],[615,44,668,22,"filter"],[615,50,668,28],[615,51,668,29,"enemy"],[615,56,668,34],[615,60,668,38],[616,10,669,10],[616,14,669,16,"ninjaX"],[616,20,669,22],[616,23,669,25,"currentNinjaPosition"],[616,43,669,45],[616,44,669,46,"x"],[616,45,669,47],[616,48,669,50],[616,50,669,52],[617,10,670,10],[617,14,670,16,"ninjaY"],[617,20,670,22],[617,23,670,25,"currentNinjaPosition"],[617,43,670,45],[617,44,670,46,"y"],[617,45,670,47],[617,48,670,50],[617,50,670,52],[618,10,671,10],[618,14,671,16,"enemyX"],[618,20,671,22],[618,23,671,25,"enemy"],[618,28,671,30],[618,29,671,31,"position"],[618,37,671,39],[618,38,671,40,"x"],[618,39,671,41],[618,42,671,44],[618,46,671,48],[619,10,672,10],[619,14,672,16,"enemyY"],[619,20,672,22],[619,23,672,25,"enemy"],[619,28,672,30],[619,29,672,31,"position"],[619,37,672,39],[619,38,672,40,"y"],[619,39,672,41],[619,42,672,44],[619,46,672,48],[620,10,673,10],[620,14,673,16,"distance"],[620,22,673,24],[620,25,673,27,"Math"],[620,29,673,31],[620,30,673,32,"sqrt"],[620,34,673,36],[620,35,673,37,"Math"],[620,39,673,41],[620,40,673,42,"pow"],[620,43,673,45],[620,44,673,46,"enemyX"],[620,50,673,52],[620,53,673,55,"ninjaX"],[620,59,673,61],[620,61,673,63],[620,62,673,64],[620,63,673,65],[620,66,673,68,"Math"],[620,70,673,72],[620,71,673,73,"pow"],[620,74,673,76],[620,75,673,77,"enemyY"],[620,81,673,83],[620,84,673,86,"ninjaY"],[620,90,673,92],[620,92,673,94],[620,93,673,95],[620,94,673,96],[620,95,673,97],[621,10,674,10],[621,17,674,17,"distance"],[621,25,674,25],[621,29,674,29,"ability"],[621,36,674,36],[621,37,674,37,"stats"],[621,42,674,42],[621,43,674,43,"aoeRadius"],[621,52,674,52],[622,8,675,8],[622,9,675,9],[622,10,675,10],[622,13,676,8],[622,14,676,9,"findClosestEnemyInternal"],[622,38,676,33],[622,39,676,34,"state"],[622,44,676,39],[622,45,676,40,"enemies"],[622,52,676,47],[622,53,676,48],[622,54,676,49],[622,55,676,50,"filter"],[622,61,676,56],[622,62,676,57,"Boolean"],[622,69,676,64],[622,70,676,65],[623,8,678,6,"targets"],[623,15,678,13],[623,16,678,14,"forEach"],[623,23,678,21],[623,24,678,22,"target"],[623,30,678,28],[623,34,678,32],[624,10,679,8,"state"],[624,15,679,13],[624,16,679,14,"statusEffects"],[624,29,679,27],[624,30,679,28,"addEffect"],[624,39,679,37],[624,40,679,38,"target"],[624,46,679,44],[624,47,679,45,"id"],[624,49,679,47],[624,51,679,49],[625,12,680,10,"id"],[625,14,680,12],[625,16,680,14],[625,19,680,17,"ability"],[625,26,680,24],[625,27,680,25,"id"],[625,29,680,27],[625,35,680,33],[626,12,681,10,"type"],[626,16,681,14],[626,18,681,16],[626,23,681,21],[627,12,682,10,"remainingTicks"],[627,26,682,24],[627,28,682,26,"Math"],[627,32,682,30],[627,33,682,31,"floor"],[627,38,682,36],[627,39,682,37,"ability"],[627,46,682,44],[627,47,682,45,"stats"],[627,52,682,50],[627,53,682,51,"duration"],[627,61,682,59],[627,64,682,62],[627,66,682,64],[627,67,682,65],[628,12,683,10,"tickInterval"],[628,24,683,22],[628,26,683,24],[628,28,683,26],[629,12,684,10,"lastTick"],[629,20,684,18],[629,22,684,20,"state"],[629,27,684,25],[629,28,684,26,"currentTick"],[629,39,684,37],[630,12,685,10,"value"],[630,17,685,15],[630,19,685,17,"Math"],[630,23,685,21],[630,24,685,22,"floor"],[630,29,685,27],[630,30,685,28,"damage"],[630,36,685,34],[630,39,685,37],[630,42,685,40],[630,43,685,41],[631,12,686,10,"stackable"],[631,21,686,19],[631,23,686,21],[632,10,687,8],[632,11,687,9],[632,12,687,10],[633,8,688,6],[633,9,688,7],[633,10,688,8],[634,6,689,4],[636,6,691,4],[637,6,692,4],[637,10,692,8,"ability"],[637,17,692,15],[637,18,692,16,"effects"],[637,25,692,23],[637,26,692,24,"includes"],[637,34,692,32],[637,35,692,33],[637,41,692,39],[637,42,692,40],[637,46,692,44,"ability"],[637,53,692,51],[637,54,692,52,"id"],[637,56,692,54],[637,61,692,59],[637,75,692,73],[637,77,692,75],[638,8,693,6,"console"],[638,15,693,13],[638,16,693,14,"log"],[638,19,693,17],[638,20,693,18],[638,66,693,64,"ability"],[638,73,693,71],[638,74,693,72,"stats"],[638,79,693,77],[638,80,693,78,"duration"],[638,88,693,86],[638,98,693,96],[638,99,693,97],[640,8,695,6],[641,8,696,6],[641,12,696,12,"cloneX"],[641,18,696,18],[641,21,696,21,"currentNinjaPosition"],[641,41,696,41],[641,42,696,42,"x"],[641,43,696,43],[641,46,696,46],[641,48,696,48],[641,49,696,49],[641,50,696,50],[642,8,697,6],[642,12,697,12,"cloneY"],[642,18,697,18],[642,21,697,21,"currentNinjaPosition"],[642,41,697,41],[642,42,697,42,"y"],[642,43,697,43],[642,46,697,46],[642,48,697,48],[642,49,697,49],[642,50,697,50],[644,8,699,6,"state"],[644,13,699,11],[644,14,699,12,"shadowClone"],[644,25,699,23],[644,28,699,26],[645,10,700,8,"id"],[645,12,700,10],[645,14,700,12],[645,30,700,28,"Date"],[645,34,700,32],[645,35,700,33,"now"],[645,38,700,36],[645,39,700,37],[645,40,700,38],[645,42,700,40],[646,10,701,8,"remainingTicks"],[646,24,701,22],[646,26,701,24,"Math"],[646,30,701,28],[646,31,701,29,"floor"],[646,36,701,34],[646,37,701,35,"ability"],[646,44,701,42],[646,45,701,43,"stats"],[646,50,701,48],[646,51,701,49,"duration"],[646,59,701,57],[646,62,701,60],[646,64,701,62],[646,65,701,63],[647,10,701,65],[648,10,702,8,"position"],[648,18,702,16],[648,20,702,18],[649,12,702,20,"x"],[649,13,702,21],[649,15,702,23,"cloneX"],[649,21,702,29],[650,12,702,31,"y"],[650,13,702,32],[650,15,702,34,"cloneY"],[651,10,702,41],[651,11,702,42],[652,10,703,8,"damageMultiplier"],[652,26,703,24],[652,28,703,26],[652,31,703,29],[652,32,703,31],[653,8,704,6],[653,9,704,7],[654,8,706,6,"console"],[654,15,706,13],[654,16,706,14,"log"],[654,19,706,17],[654,20,706,18],[654,63,706,61,"ability"],[654,70,706,68],[654,71,706,69,"stats"],[654,76,706,74],[654,77,706,75,"duration"],[654,85,706,83],[654,108,706,106],[654,109,706,107],[655,6,707,4],[656,4,708,2],[656,5,708,3],[658,4,710,2],[659,4,711,2],[659,8,711,8,"createProjectile"],[659,24,711,24],[659,27,711,27,"createProjectile"],[659,28,711,28,"targetEnemy"],[659,39,711,52],[659,41,711,54,"damage"],[659,47,711,68],[659,49,711,70,"ninjaPos"],[659,57,711,103],[659,59,711,105,"abilityInfo"],[659,70,711,159],[659,72,711,161,"isAOE"],[659,77,711,176],[659,79,711,178,"aoeRadius"],[659,88,711,196],[659,93,711,201],[660,6,712,4],[660,10,712,8],[660,11,712,9,"targetEnemy"],[660,22,712,20],[660,24,712,22],[661,8,713,6,"console"],[661,15,713,13],[661,16,713,14,"log"],[661,19,713,17],[661,20,713,18],[661,65,713,63],[661,66,713,64],[662,8,714,6],[662,15,714,13],[662,19,714,17],[663,6,715,4],[664,6,717,4],[664,10,717,10,"SCREEN_WIDTH"],[664,22,717,22],[664,25,717,25],[664,28,717,28],[665,6,718,4],[665,10,718,10,"GAME_AREA_HEIGHT"],[665,26,718,26],[665,29,718,29],[665,32,718,32],[665,35,718,35],[665,38,718,38],[665,39,718,39],[665,40,718,40],[666,6,719,4],[666,10,719,10,"NINJA_SIZE"],[666,20,719,20],[666,23,719,23],[666,25,719,25],[668,6,721,4],[669,6,722,4],[669,10,722,10,"ninjaX"],[669,16,722,16],[669,19,722,19,"ninjaPos"],[669,27,722,27],[669,30,722,30,"ninjaPos"],[669,38,722,38],[669,39,722,39,"x"],[669,40,722,40],[669,43,722,43,"NINJA_SIZE"],[669,53,722,53],[669,56,722,56],[669,57,722,57],[669,60,722,60,"SCREEN_WIDTH"],[669,72,722,72],[669,75,722,75],[669,76,722,76],[670,6,723,4],[670,10,723,10,"ninjaY"],[670,16,723,16],[670,19,723,19,"ninjaPos"],[670,27,723,27],[670,30,723,30,"ninjaPos"],[670,38,723,38],[670,39,723,39,"y"],[670,40,723,40],[670,43,723,43,"NINJA_SIZE"],[670,53,723,53],[670,56,723,56],[670,57,723,57],[670,60,723,60,"GAME_AREA_HEIGHT"],[670,76,723,76],[670,79,723,79],[670,80,723,80],[671,6,724,4],[671,10,724,10,"ENEMY_SIZE"],[671,20,724,20],[671,23,724,23],[671,25,724,25],[672,6,726,4],[672,10,726,10,"projectileId"],[672,22,726,22],[672,25,726,25],[672,33,726,33,"Date"],[672,37,726,37],[672,38,726,38,"now"],[672,41,726,41],[672,42,726,42],[672,43,726,43],[672,47,726,47,"Math"],[672,51,726,51],[672,52,726,52,"random"],[672,58,726,58],[672,59,726,59],[672,60,726,60],[672,62,726,62],[673,6,728,4],[673,10,728,10,"projectile"],[673,20,728,38],[673,23,728,41],[674,8,729,6,"id"],[674,10,729,8],[674,12,729,10,"projectileId"],[674,24,729,22],[675,8,730,6,"x"],[675,9,730,7],[675,11,730,9,"ninjaX"],[675,17,730,15],[676,8,731,6,"y"],[676,9,731,7],[676,11,731,9,"ninjaY"],[676,17,731,15],[677,8,732,6,"targetX"],[677,15,732,13],[677,17,732,15,"targetEnemy"],[677,28,732,26],[677,29,732,27,"position"],[677,37,732,35],[677,38,732,36,"x"],[677,39,732,37],[677,42,732,40,"ENEMY_SIZE"],[677,52,732,50],[677,55,732,53],[677,56,732,54],[678,8,733,6,"targetY"],[678,15,733,13],[678,17,733,15,"targetEnemy"],[678,28,733,26],[678,29,733,27,"position"],[678,37,733,35],[678,38,733,36,"y"],[678,39,733,37],[678,42,733,40,"ENEMY_SIZE"],[678,52,733,50],[678,55,733,53],[678,56,733,54],[679,8,734,6,"targetEnemyId"],[679,21,734,19],[679,23,734,21,"targetEnemy"],[679,34,734,32],[679,35,734,33,"id"],[679,37,734,35],[680,8,735,6,"damage"],[680,14,735,12],[680,16,735,14,"damage"],[680,22,735,20],[681,8,736,6,"startTime"],[681,17,736,15],[681,19,736,17,"Date"],[681,23,736,21],[681,24,736,22,"now"],[681,27,736,25],[681,28,736,26],[681,29,736,27],[682,8,737,6,"duration"],[682,16,737,14],[682,18,737,16],[682,21,737,19],[683,8,737,21],[684,8,738,6],[685,8,739,6,"abilityId"],[685,17,739,15],[685,19,739,17,"abilityInfo"],[685,30,739,28],[685,32,739,30,"id"],[685,34,739,32],[685,38,739,36],[685,54,739,52],[686,8,740,6,"abilityName"],[686,19,740,17],[686,21,740,19,"abilityInfo"],[686,32,740,30],[686,34,740,32,"name"],[686,38,740,36],[686,42,740,40],[686,58,740,56],[687,8,741,6,"abilityIcon"],[687,19,741,17],[687,21,741,19,"abilityInfo"],[687,32,741,30],[687,34,741,32,"icon"],[687,38,741,36],[687,42,741,40],[687,46,741,44],[688,8,741,46],[689,8,742,6],[690,8,743,6,"isAOE"],[690,13,743,11],[690,15,743,13,"isAOE"],[690,20,743,18],[690,24,743,22],[690,29,743,27],[691,8,744,6,"aoeRadius"],[691,17,744,15],[691,19,744,17,"aoeRadius"],[691,28,744,26],[691,32,744,30],[692,6,745,4],[692,7,745,5],[693,6,747,4,"console"],[693,13,747,11],[693,14,747,12,"log"],[693,17,747,15],[693,18,747,16],[693,44,747,42,"abilityInfo"],[693,55,747,53],[693,57,747,55,"name"],[693,61,747,59],[693,65,747,63],[693,81,747,79],[693,101,747,99,"projectileId"],[693,113,747,111],[693,128,747,126,"targetEnemy"],[693,139,747,137],[693,140,747,138,"name"],[693,144,747,142],[693,152,747,150,"damage"],[693,158,747,156],[693,167,747,165],[693,168,747,166],[694,6,748,4,"console"],[694,13,748,11],[694,14,748,12,"log"],[694,17,748,15],[694,18,748,16],[694,48,748,46,"isAOE"],[694,53,748,51],[694,68,748,66,"aoeRadius"],[694,77,748,75],[694,89,748,87,"damage"],[694,95,748,93],[694,97,748,95],[694,98,748,96],[695,6,750,4,"console"],[695,13,750,11],[695,14,750,12,"log"],[695,17,750,15],[695,18,750,16],[695,53,750,51,"targetEnemy"],[695,64,750,62],[695,65,750,63,"id"],[695,67,750,65],[695,75,750,73,"damage"],[695,81,750,79],[695,90,750,88],[695,91,750,89],[696,6,751,4,"console"],[696,13,751,11],[696,14,751,12,"log"],[696,17,751,15],[696,18,751,16],[696,53,751,51,"ninjaX"],[696,59,751,57],[696,64,751,62,"ninjaY"],[696,70,751,68],[696,87,751,85,"projectile"],[696,97,751,95],[696,98,751,96,"targetX"],[696,105,751,103],[696,110,751,108,"projectile"],[696,120,751,118],[696,121,751,119,"targetY"],[696,128,751,126],[696,131,751,129],[696,132,751,130],[697,6,753,4,"setProjectiles"],[697,20,753,18],[697,21,753,19,"prev"],[697,25,753,23],[697,29,753,27],[697,30,753,28],[697,33,753,31,"prev"],[697,37,753,35],[697,39,753,37,"projectile"],[697,49,753,47],[697,50,753,48],[697,51,753,49],[699,6,755,4],[700,6,756,4,"setTimeout"],[700,16,756,14],[700,17,756,15],[700,23,756,21],[701,8,757,6,"handleProjectileHit"],[701,27,757,25],[701,28,757,26,"projectile"],[701,38,757,36],[701,39,757,37],[702,6,758,4],[702,7,758,5],[702,9,758,7],[702,12,758,10],[702,13,758,11],[703,6,760,4],[703,13,760,11,"projectile"],[703,23,760,21],[704,4,761,2],[704,5,761,3],[706,4,763,2],[707,4,764,2],[707,8,764,8,"spawnTestEnemy"],[707,22,764,22],[707,25,764,26,"state"],[707,30,764,44],[707,34,764,49],[708,6,765,4,"console"],[708,13,765,11],[708,14,765,12,"log"],[708,17,765,15],[708,18,765,16],[708,83,765,81],[708,84,765,82],[710,6,767,4],[711,6,768,4],[711,10,768,10,"zoneEnemy"],[711,19,768,19],[711,22,768,22,"spawnZoneEnemy"],[711,36,768,36],[711,37,768,37],[711,38,768,38],[712,6,769,4],[712,10,769,8],[712,11,769,9,"zoneEnemy"],[712,20,769,18],[712,22,769,20],[713,8,770,6,"console"],[713,15,770,13],[713,16,770,14,"log"],[713,19,770,17],[713,20,770,18],[713,76,770,74],[713,77,770,75],[714,8,771,6],[715,8,772,6,"spawnBasicTestEnemy"],[715,27,772,25],[715,28,772,26,"state"],[715,33,772,31],[715,34,772,32],[716,8,773,6],[717,6,774,4],[718,6,776,4,"console"],[718,13,776,11],[718,14,776,12,"log"],[718,17,776,15],[718,18,776,16],[718,44,776,42,"zoneEnemy"],[718,53,776,51],[718,54,776,52,"name"],[718,58,776,56],[718,63,776,61,"zoneEnemy"],[718,72,776,70],[718,73,776,71,"typeId"],[718,79,776,77],[718,94,776,92,"currentZone"],[718,105,776,103],[718,107,776,105,"id"],[718,109,776,107],[718,119,776,117,"currentZoneLevel"],[718,135,776,133],[718,137,776,135,"level"],[718,142,776,140],[718,144,776,142],[718,145,776,143],[720,6,778,4],[721,6,779,4],[721,10,779,10,"combatEnemy"],[721,21,779,34],[721,24,779,37],[722,8,780,6,"id"],[722,10,780,8],[722,12,780,10,"zoneEnemy"],[722,21,780,19],[722,22,780,20,"id"],[722,24,780,22],[723,8,781,6,"name"],[723,12,781,10],[723,14,781,12,"zoneEnemy"],[723,23,781,21],[723,24,781,22,"name"],[723,28,781,26],[724,8,782,6,"health"],[724,14,782,12],[724,16,782,14,"zoneEnemy"],[724,25,782,23],[724,26,782,24,"hp"],[724,28,782,26],[725,8,783,6,"maxHealth"],[725,17,783,15],[725,19,783,17,"zoneEnemy"],[725,28,783,26],[725,29,783,27,"maxHP"],[725,34,783,32],[726,8,784,6,"stats"],[726,13,784,11],[726,15,784,13],[727,10,785,8,"attack"],[727,16,785,14],[727,18,785,16,"zoneEnemy"],[727,27,785,25],[727,28,785,26,"attack"],[727,34,785,32],[728,10,786,8,"defense"],[728,17,786,15],[728,19,786,17],[728,21,786,19],[729,10,786,21],[730,10,787,8,"health"],[730,16,787,14],[730,18,787,16,"zoneEnemy"],[730,27,787,25],[730,28,787,26,"hp"],[730,30,787,28],[731,10,788,8,"maxHealth"],[731,19,788,17],[731,21,788,19,"zoneEnemy"],[731,30,788,28],[731,31,788,29,"maxHP"],[731,36,788,34],[732,10,789,8,"critChance"],[732,20,789,18],[732,22,789,20],[732,23,789,21],[733,10,790,8,"critDamage"],[733,20,790,18],[733,22,790,20],[733,25,790,23],[734,10,791,8,"cooldownReduction"],[734,27,791,25],[734,29,791,27],[735,8,792,6],[735,9,792,7],[736,8,793,6,"position"],[736,16,793,14],[736,18,793,16,"zoneEnemy"],[736,27,793,25],[736,28,793,26,"position"],[736,36,793,34],[737,8,794,6,"lastDamaged"],[737,19,794,17],[737,21,794,19],[737,22,794,20],[738,8,795,6],[739,8,796,6,"zoneTypeId"],[739,18,796,16],[739,20,796,18,"zoneEnemy"],[739,29,796,27],[739,30,796,28,"typeId"],[739,36,796,34],[740,8,797,6,"zoneXP"],[740,14,797,12],[740,16,797,14,"zoneEnemy"],[740,25,797,23],[740,26,797,24,"xp"],[741,6,798,4],[741,7,798,5],[742,6,800,4,"console"],[742,13,800,11],[742,14,800,12,"log"],[742,17,800,15],[742,18,800,16],[742,42,800,40,"combatEnemy"],[742,53,800,51],[742,54,800,52,"name"],[742,58,800,56],[742,67,800,65,"combatEnemy"],[742,78,800,76],[742,79,800,77,"health"],[742,85,800,83],[742,100,800,98,"currentZone"],[742,111,800,109],[742,113,800,111,"id"],[742,115,800,113],[742,125,800,123,"currentZoneLevel"],[742,141,800,139],[742,143,800,141,"level"],[742,148,800,146],[742,150,800,148],[742,151,800,149],[743,6,801,4,"state"],[743,11,801,9],[743,12,801,10,"enemies"],[743,19,801,17],[743,20,801,18,"push"],[743,24,801,22],[743,25,801,23,"combatEnemy"],[743,36,801,34],[743,37,801,35],[744,4,802,2],[744,5,802,3],[746,4,804,2],[747,4,805,2],[747,8,805,8,"spawnBasicTestEnemy"],[747,27,805,27],[747,30,805,31,"state"],[747,35,805,49],[747,39,805,54],[748,6,806,4],[748,10,806,10,"SCREEN_WIDTH"],[748,22,806,22],[748,25,806,25],[748,28,806,28],[749,6,807,4],[749,10,807,10,"GAME_AREA_HEIGHT"],[749,26,807,26],[749,29,807,29],[749,32,807,32],[749,35,807,35],[749,38,807,38],[750,6,808,4],[750,10,808,10,"ENEMY_SIZE"],[750,20,808,20],[750,23,808,23],[750,25,808,25],[751,6,810,4],[751,10,810,10,"x"],[751,11,810,11],[751,14,810,14,"Math"],[751,18,810,18],[751,19,810,19,"random"],[751,25,810,25],[751,26,810,26],[751,27,810,27],[751,31,810,31,"SCREEN_WIDTH"],[751,43,810,43],[751,46,810,46,"ENEMY_SIZE"],[751,56,810,56],[751,59,810,59],[751,60,810,60],[751,61,810,61],[751,64,810,64,"ENEMY_SIZE"],[751,74,810,74],[752,6,811,4],[752,10,811,10,"y"],[752,11,811,11],[752,14,811,14,"Math"],[752,18,811,18],[752,19,811,19,"random"],[752,25,811,25],[752,26,811,26],[752,27,811,27],[752,31,811,31,"GAME_AREA_HEIGHT"],[752,47,811,47],[752,50,811,50,"ENEMY_SIZE"],[752,60,811,60],[752,63,811,63],[752,64,811,64],[752,65,811,65],[752,68,811,68,"ENEMY_SIZE"],[752,78,811,78],[753,6,813,4],[753,10,813,10,"enemy"],[753,15,813,28],[753,18,813,31],[754,8,814,6,"id"],[754,10,814,8],[754,12,814,10],[754,30,814,28,"Date"],[754,34,814,32],[754,35,814,33,"now"],[754,38,814,36],[754,39,814,37],[754,40,814,38],[754,44,814,42,"Math"],[754,48,814,46],[754,49,814,47,"random"],[754,55,814,53],[754,56,814,54],[754,57,814,55],[754,59,814,57],[755,8,815,6,"name"],[755,12,815,10],[755,14,815,12],[755,26,815,24,"Math"],[755,30,815,28],[755,31,815,29,"floor"],[755,36,815,34],[755,37,815,35,"Math"],[755,41,815,39],[755,42,815,40,"random"],[755,48,815,46],[755,49,815,47],[755,50,815,48],[755,53,815,51],[755,56,815,54],[755,57,815,55],[755,59,815,57],[756,8,816,6,"health"],[756,14,816,12],[756,16,816,14],[756,18,816,16],[757,8,817,6,"maxHealth"],[757,17,817,15],[757,19,817,17],[757,21,817,19],[758,8,818,6,"stats"],[758,13,818,11],[758,15,818,13],[759,10,819,8,"attack"],[759,16,819,14],[759,18,819,16],[759,20,819,18],[760,10,820,8,"defense"],[760,17,820,15],[760,19,820,17],[760,21,820,19],[761,10,821,8,"health"],[761,16,821,14],[761,18,821,16],[761,20,821,18],[762,10,822,8,"maxHealth"],[762,19,822,17],[762,21,822,19],[762,23,822,21],[763,10,823,8,"critChance"],[763,20,823,18],[763,22,823,20],[763,23,823,21],[764,10,824,8,"critDamage"],[764,20,824,18],[764,22,824,20],[764,25,824,23],[765,10,825,8,"cooldownReduction"],[765,27,825,25],[765,29,825,27],[766,8,826,6],[766,9,826,7],[767,8,827,6,"position"],[767,16,827,14],[767,18,827,16],[768,10,827,18,"x"],[768,11,827,19],[769,10,827,21,"y"],[770,8,827,23],[770,9,827,24],[771,8,828,6,"lastDamaged"],[771,19,828,17],[771,21,828,19],[772,6,829,4],[772,7,829,5],[773,6,831,4,"console"],[773,13,831,11],[773,14,831,12,"log"],[773,17,831,15],[773,18,831,16],[773,42,831,40,"enemy"],[773,47,831,45],[773,48,831,46,"name"],[773,52,831,50],[773,60,831,58,"Math"],[773,64,831,62],[773,65,831,63,"round"],[773,70,831,68],[773,71,831,69,"x"],[773,72,831,70],[773,73,831,71],[773,78,831,76,"Math"],[773,82,831,80],[773,83,831,81,"round"],[773,88,831,86],[773,89,831,87,"y"],[773,90,831,88],[773,91,831,89],[773,94,831,92],[773,95,831,93],[774,6,832,4,"state"],[774,11,832,9],[774,12,832,10,"enemies"],[774,19,832,17],[774,20,832,18,"push"],[774,24,832,22],[774,25,832,23,"enemy"],[774,30,832,28],[774,31,832,29],[775,4,833,2],[775,5,833,3],[777,4,835,2],[778,4,836,2],[778,8,836,8,"startCombat"],[778,19,836,19],[778,22,836,22,"React"],[778,27,836,27],[778,28,836,27,"default"],[778,35,836,27],[778,36,836,28,"useCallback"],[778,47,836,39],[778,48,836,40],[778,54,836,46],[779,6,837,4,"console"],[779,13,837,11],[779,14,837,12,"log"],[779,17,837,15],[779,18,837,16],[779,63,837,61],[779,64,837,62],[780,6,838,4,"setCombatState"],[780,20,838,18],[780,21,838,19,"prev"],[780,25,838,23],[780,30,838,28],[781,8,838,30],[781,11,838,33,"prev"],[781,15,838,37],[782,8,838,39,"isInCombat"],[782,18,838,49],[782,20,838,51],[783,6,838,56],[783,7,838,57],[783,8,838,58],[783,9,838,59],[785,6,840,4],[786,6,841,4,"combatEngine"],[786,25,841,16],[786,26,841,16,"combatEngine"],[786,38,841,16],[786,39,841,17,"addTickCallback"],[786,54,841,32],[786,55,841,33,"handleCombatTick"],[786,71,841,49],[786,72,841,50],[787,6,842,4,"console"],[787,13,842,11],[787,14,842,12,"log"],[787,17,842,15],[787,18,842,16],[787,62,842,60],[787,63,842,61],[789,6,844,4],[790,6,845,4,"combatEngine"],[790,25,845,16],[790,26,845,16,"combatEngine"],[790,38,845,16],[790,39,845,17,"start"],[790,44,845,22],[790,45,845,23],[790,46,845,24],[791,4,846,2],[791,5,846,3],[791,7,846,5],[791,8,846,6,"combatEngine"],[791,27,846,18],[791,28,846,18,"combatEngine"],[791,40,846,18],[791,42,846,20,"handleCombatTick"],[791,58,846,36],[791,59,846,37],[791,60,846,38],[793,4,848,2],[794,4,849,2],[794,8,849,8,"stopCombat"],[794,18,849,18],[794,21,849,21,"React"],[794,26,849,26],[794,27,849,26,"default"],[794,34,849,26],[794,35,849,27,"useCallback"],[794,46,849,38],[794,47,849,39],[794,53,849,45],[795,6,850,4,"setCombatState"],[795,20,850,18],[795,21,850,19,"prev"],[795,25,850,23],[795,30,850,28],[796,8,850,30],[796,11,850,33,"prev"],[796,15,850,37],[797,8,850,39,"isInCombat"],[797,18,850,49],[797,20,850,51],[798,6,850,57],[798,7,850,58],[798,8,850,59],[798,9,850,60],[799,6,851,4,"combatEngine"],[799,25,851,16],[799,26,851,16,"combatEngine"],[799,38,851,16],[799,39,851,17,"removeTickCallback"],[799,57,851,35],[799,58,851,36,"handleCombatTick"],[799,74,851,52],[799,75,851,53],[800,4,852,2],[800,5,852,3],[800,7,852,5],[800,8,852,6,"combatEngine"],[800,27,852,18],[800,28,852,18,"combatEngine"],[800,40,852,18],[800,42,852,20,"handleCombatTick"],[800,58,852,36],[800,59,852,37],[800,60,852,38],[802,4,854,2],[803,4,855,2],[803,8,855,8,"equipAbility"],[803,20,855,20],[803,23,855,23,"equipAbility"],[803,24,855,24,"abilityId"],[803,33,855,41],[803,35,855,43,"slotIndex"],[803,44,855,60],[803,49,855,74],[804,6,856,4],[804,13,856,11,"combatState"],[804,24,856,22],[804,25,856,23,"abilityManager"],[804,39,856,37],[804,40,856,38,"equipAbility"],[804,52,856,50],[804,53,856,51,"abilityId"],[804,62,856,60],[804,64,856,62,"slotIndex"],[804,73,856,71],[804,74,856,72],[805,4,857,2],[805,5,857,3],[806,4,859,2],[806,8,859,8,"getDeck"],[806,15,859,15],[806,18,859,18,"getDeck"],[806,19,859,18],[806,24,859,24],[807,6,860,4],[807,13,860,11,"combatState"],[807,24,860,22],[807,25,860,23,"abilityManager"],[807,39,860,37],[807,40,860,38,"getDeck"],[807,47,860,45],[807,48,860,46],[807,49,860,47],[808,4,861,2],[808,5,861,3],[809,4,863,2],[809,8,863,8,"getAvailableAbilities"],[809,29,863,29],[809,32,863,32,"getAvailableAbilities"],[809,33,863,32],[809,38,863,38],[810,6,864,4],[810,13,864,11,"combatState"],[810,24,864,22],[810,25,864,23,"abilityManager"],[810,39,864,37],[810,40,864,38,"getAvailableAbilities"],[810,61,864,59],[810,62,864,60],[810,63,864,61],[811,4,865,2],[811,5,865,3],[812,4,867,2],[812,8,867,8,"upgradeAbility"],[812,22,867,22],[812,25,867,26,"abilityId"],[812,34,867,43],[812,38,867,57],[813,6,868,4],[813,13,868,11,"combatState"],[813,24,868,22],[813,25,868,23,"abilityManager"],[813,39,868,37],[813,40,868,38,"upgradeAbility"],[813,54,868,52],[813,55,868,53,"abilityId"],[813,64,868,62],[813,65,868,63],[814,4,869,2],[814,5,869,3],[816,4,871,2],[817,4,872,2],[817,8,872,8,"clearAllEnemies"],[817,23,872,23],[817,26,872,26,"clearAllEnemies"],[817,27,872,26],[817,32,872,32],[818,6,873,4,"console"],[818,13,873,11],[818,14,873,12,"log"],[818,17,873,15],[818,18,873,16],[818,67,873,65],[818,68,873,66],[819,6,874,4,"setCombatState"],[819,20,874,18],[819,21,874,19,"prev"],[819,25,874,23],[819,30,874,28],[820,8,875,6],[820,11,875,9,"prev"],[820,15,875,13],[821,8,876,6,"enemies"],[821,15,876,13],[821,17,876,15],[822,6,877,4],[822,7,877,5],[822,8,877,6],[822,9,877,7],[823,4,878,2],[823,5,878,3],[825,4,880,2],[826,4,881,2],[826,8,881,8,"triggerLevelUpExplosion"],[826,31,881,31],[826,34,881,34,"triggerLevelUpExplosion"],[826,35,881,34],[826,40,881,40],[827,6,882,4,"console"],[827,13,882,11],[827,14,882,12,"log"],[827,17,882,15],[827,18,882,16],[827,70,882,68],[827,71,882,69],[828,6,884,4],[828,10,884,10,"explosionTime"],[828,23,884,23],[828,26,884,26,"Date"],[828,30,884,30],[828,31,884,31,"now"],[828,34,884,34],[828,35,884,35],[828,36,884,36],[829,6,885,4,"setLastExplosionTime"],[829,26,885,24],[829,27,885,25,"explosionTime"],[829,40,885,38],[829,41,885,39],[830,6,887,4,"setCombatState"],[830,20,887,18],[830,21,887,19,"prev"],[830,25,887,23],[830,29,887,27],[831,8,888,6],[832,8,889,6],[832,12,889,12,"enemyCount"],[832,22,889,22],[832,25,889,25,"prev"],[832,29,889,29],[832,30,889,30,"enemies"],[832,37,889,37],[832,38,889,38,"length"],[832,44,889,44],[833,8,890,6],[833,12,890,12,"explosionXP"],[833,23,890,23],[833,26,890,26,"enemyCount"],[833,36,890,36],[833,39,890,39],[833,43,890,43],[833,44,890,44],[833,45,890,45],[834,8,891,6],[834,12,891,12,"explosionGold"],[834,25,891,25],[834,28,891,28,"enemyCount"],[834,38,891,38],[834,41,891,41],[834,44,891,44],[834,45,891,45],[834,46,891,46],[836,8,893,6,"console"],[836,15,893,13],[836,16,893,14,"log"],[836,19,893,17],[836,20,893,18],[836,44,893,42,"enemyCount"],[836,54,893,52],[836,76,893,74,"explosionXP"],[836,87,893,85],[836,98,893,96,"explosionGold"],[836,111,893,109],[836,118,893,116],[836,119,893,117],[838,8,895,6],[839,8,896,6],[839,12,896,10,"explosionXP"],[839,23,896,21],[839,26,896,24],[839,27,896,25],[839,29,896,27],[840,10,897,8,"setTimeout"],[840,20,897,18],[840,21,897,19],[840,27,897,25],[841,12,898,10,"game"],[841,16,898,14],[841,17,898,15,"updateNinja"],[841,28,898,26],[841,29,898,28,"ninja"],[841,34,898,33],[841,39,898,39],[842,14,899,12,"experience"],[842,24,899,22],[842,26,899,24,"ninja"],[842,31,899,29],[842,32,899,30,"experience"],[842,42,899,40],[842,45,899,43,"explosionXP"],[842,56,899,54],[843,14,900,12,"gold"],[843,18,900,16],[843,20,900,18,"ninja"],[843,25,900,23],[843,26,900,24,"gold"],[843,30,900,28],[843,33,900,31,"explosionGold"],[844,12,901,10],[844,13,901,11],[844,14,901,12],[844,15,901,13],[845,10,902,8],[845,11,902,9],[845,13,902,11],[845,14,902,12],[845,15,902,13],[845,16,902,14],[845,17,902,15],[846,8,903,6],[848,8,905,6],[849,8,906,6],[850,8,907,6],[850,12,907,12,"damagedEnemies"],[850,26,907,26],[850,29,907,29,"prev"],[850,33,907,33],[850,34,907,34,"enemies"],[850,41,907,41],[850,42,907,42,"map"],[850,45,907,45],[850,46,907,46,"enemy"],[850,51,907,51],[850,56,907,56],[851,10,908,8],[851,13,908,11,"enemy"],[851,18,908,16],[852,10,909,8,"health"],[852,16,909,14],[852,18,909,16],[852,19,909,17],[853,10,909,19],[854,10,910,8,"lastDamaged"],[854,21,910,19],[854,23,910,21,"combatEngine"],[854,42,910,33],[854,43,910,33,"combatEngine"],[854,55,910,33],[854,56,910,34,"getCurrentTick"],[854,70,910,48],[854,71,910,49],[855,8,911,6],[855,9,911,7],[855,10,911,8],[855,11,911,9],[856,8,913,6],[856,15,913,13],[857,10,914,8],[857,13,914,11,"prev"],[857,17,914,15],[858,10,915,8,"enemies"],[858,17,915,15],[858,19,915,17,"damagedEnemies"],[859,8,916,6],[859,9,916,7],[860,6,917,4],[860,7,917,5],[860,8,917,6],[861,4,918,2],[861,5,918,3],[863,4,920,2],[864,4,921,2],[864,8,921,8,"spawnEnemy"],[864,18,921,18],[864,21,921,22,"position"],[864,29,921,57],[864,33,921,75],[865,6,922,4],[865,10,922,10,"SCREEN_WIDTH"],[865,22,922,22],[865,25,922,25],[865,28,922,28],[866,6,923,4],[866,10,923,10,"GAME_AREA_HEIGHT"],[866,26,923,26],[866,29,923,29],[866,32,923,32],[866,35,923,35],[866,38,923,38],[866,39,923,39],[866,40,923,40],[867,6,924,4],[867,10,924,10,"ENEMY_SIZE"],[867,20,924,20],[867,23,924,23],[867,25,924,25],[869,6,926,4],[870,6,927,4],[870,10,927,10,"x"],[870,11,927,11],[870,14,927,14,"position"],[870,22,927,22],[870,24,927,24,"x"],[870,25,927,25],[870,29,927,29,"Math"],[870,33,927,33],[870,34,927,34,"random"],[870,40,927,40],[870,41,927,41],[870,42,927,42],[870,46,927,46,"SCREEN_WIDTH"],[870,58,927,58],[870,61,927,61,"ENEMY_SIZE"],[870,71,927,71],[870,74,927,74],[870,75,927,75],[870,76,927,76],[870,79,927,79,"ENEMY_SIZE"],[870,89,927,89],[871,6,928,4],[871,10,928,10,"y"],[871,11,928,11],[871,14,928,14,"position"],[871,22,928,22],[871,24,928,24,"y"],[871,25,928,25],[871,29,928,29,"Math"],[871,33,928,33],[871,34,928,34,"random"],[871,40,928,40],[871,41,928,41],[871,42,928,42],[871,46,928,46,"GAME_AREA_HEIGHT"],[871,62,928,62],[871,65,928,65,"ENEMY_SIZE"],[871,75,928,75],[871,78,928,78],[871,79,928,79],[871,80,928,80],[871,83,928,83,"ENEMY_SIZE"],[871,93,928,93],[872,6,930,4],[872,10,930,10,"enemy"],[872,15,930,28],[872,18,930,31],[873,8,931,6,"id"],[873,10,931,8],[873,12,931,10],[873,21,931,19],[873,23,931,21,"enemyCounter"],[873,35,931,33],[873,37,931,35],[874,8,932,6,"name"],[874,12,932,10],[874,14,932,12],[874,24,932,22],[875,8,933,6,"health"],[875,14,933,12],[875,16,933,14],[875,19,933,17],[876,8,934,6,"maxHealth"],[876,17,934,15],[876,19,934,17],[876,22,934,20],[877,8,935,6,"stats"],[877,13,935,11],[877,15,935,13],[878,10,936,8,"attack"],[878,16,936,14],[878,18,936,16],[878,20,936,18],[879,10,937,8,"defense"],[879,17,937,15],[879,19,937,17],[879,21,937,19],[880,10,938,8,"health"],[880,16,938,14],[880,18,938,16],[880,21,938,19],[881,10,939,8,"maxHealth"],[881,19,939,17],[881,21,939,19],[881,24,939,22],[882,10,940,8,"critChance"],[882,20,940,18],[882,22,940,20],[882,23,940,21],[883,10,941,8,"critDamage"],[883,20,941,18],[883,22,941,20],[883,25,941,23],[884,10,942,8,"cooldownReduction"],[884,27,942,25],[884,29,942,27],[885,8,943,6],[885,9,943,7],[886,8,944,6,"position"],[886,16,944,14],[886,18,944,16],[887,10,944,18,"x"],[887,11,944,19],[888,10,944,21,"y"],[889,8,944,23],[889,9,944,24],[890,8,945,6,"lastDamaged"],[890,19,945,17],[890,21,945,19],[891,6,946,4],[891,7,946,5],[892,6,948,4,"setCombatState"],[892,20,948,18],[892,21,948,19,"prev"],[892,25,948,23],[892,30,948,28],[893,8,949,6],[893,11,949,9,"prev"],[893,15,949,13],[894,8,950,6,"enemies"],[894,15,950,13],[894,17,950,15],[894,18,950,16],[894,21,950,19,"prev"],[894,25,950,23],[894,26,950,24,"enemies"],[894,33,950,31],[894,35,950,33,"enemy"],[894,40,950,38],[895,6,951,4],[895,7,951,5],[895,8,951,6],[895,9,951,7],[896,6,953,4],[896,13,953,11,"enemy"],[896,18,953,16],[897,4,954,2],[897,5,954,3],[899,4,956,2],[900,4,957,2],[900,8,957,8,"spawnBoss"],[900,17,957,17],[900,20,957,21,"bossEnemy"],[900,29,957,43],[900,33,957,48],[901,6,958,4,"console"],[901,13,958,11],[901,14,958,12,"log"],[901,17,958,15],[901,18,958,16],[901,39,958,37,"bossEnemy"],[901,48,958,46],[901,49,958,47,"name"],[901,53,958,51],[901,90,958,88],[901,91,958,89],[902,6,959,4,"setCombatState"],[902,20,959,18],[902,21,959,19,"prev"],[902,25,959,23],[902,30,959,28],[903,8,960,6],[903,11,960,9,"prev"],[903,15,960,13],[904,8,961,6,"enemies"],[904,15,961,13],[904,17,961,15],[904,18,961,16,"bossEnemy"],[904,27,961,25],[904,28,961,26],[904,29,961,27],[905,6,962,4],[905,7,962,5],[905,8,962,6],[905,9,962,7],[906,4,963,2],[906,5,963,3],[908,4,965,2],[909,4,966,2],[909,8,966,8,"clearSpecificEnemy"],[909,26,966,26],[909,29,966,30,"enemyId"],[909,36,966,45],[909,40,966,50],[910,6,967,4,"setCombatState"],[910,20,967,18],[910,21,967,19,"prev"],[910,25,967,23],[910,30,967,28],[911,8,968,6],[911,11,968,9,"prev"],[911,15,968,13],[912,8,969,6,"enemies"],[912,15,969,13],[912,17,969,15,"prev"],[912,21,969,19],[912,22,969,20,"enemies"],[912,29,969,27],[912,30,969,28,"filter"],[912,36,969,34],[912,37,969,35,"enemy"],[912,42,969,40],[912,46,969,44,"enemy"],[912,51,969,49],[912,52,969,50,"id"],[912,54,969,52],[912,59,969,57,"enemyId"],[912,66,969,64],[913,6,970,4],[913,7,970,5],[913,8,970,6],[913,9,970,7],[914,4,971,2],[914,5,971,3],[916,4,973,2],[917,4,974,2],[917,8,974,8,"useAbilityManually"],[917,26,974,26],[917,29,974,26,"_s3"],[917,32,974,26],[917,33,974,29],[917,37,974,29,"useCallback"],[917,43,974,40],[917,44,974,40,"useCallback"],[917,55,974,40],[917,57,974,40,"_s3"],[917,60,974,40],[917,61,974,42,"slotIndex"],[917,70,974,59],[917,74,974,73],[918,6,974,73,"_s3"],[918,9,974,73],[919,6,975,4,"console"],[919,13,975,11],[919,14,975,12,"log"],[919,17,975,15],[919,18,975,16],[919,64,975,62,"slotIndex"],[919,73,975,71],[919,82,975,80],[919,83,975,81],[920,6,976,4,"console"],[920,13,976,11],[920,14,976,12,"log"],[920,17,976,15],[920,18,976,16],[920,65,976,63,"slotIndex"],[920,74,976,72],[920,76,976,74],[920,77,976,75],[921,6,977,4,"console"],[921,13,977,11],[921,14,977,12,"log"],[921,17,977,15],[921,18,977,16],[921,53,977,51,"slotIndex"],[921,62,977,60],[921,64,977,62],[921,65,977,63],[923,6,979,4],[924,6,980,4],[924,10,980,8],[924,11,980,9,"game"],[924,15,980,13],[924,16,980,14,"gameState"],[924,25,980,23],[924,26,980,24,"isAlive"],[924,33,980,31],[924,35,980,33],[925,8,981,6,"console"],[925,15,981,13],[925,16,981,14,"log"],[925,19,981,17],[925,20,981,18],[925,70,981,68],[925,71,981,69],[926,8,982,6],[926,15,982,13],[926,20,982,18],[927,6,983,4],[929,6,985,4],[930,6,986,4],[930,10,986,10,"isReady"],[930,17,986,17],[930,20,986,20,"combatState"],[930,31,986,31],[930,32,986,32,"abilityManager"],[930,46,986,46],[930,47,986,47,"isAbilityReady"],[930,61,986,61],[930,62,986,62,"slotIndex"],[930,71,986,71],[930,72,986,72],[931,6,987,4],[931,10,987,8],[931,11,987,9,"isReady"],[931,18,987,16],[931,20,987,18],[932,8,988,6,"console"],[932,15,988,13],[932,16,988,14,"log"],[932,19,988,17],[932,20,988,18],[932,41,988,39,"slotIndex"],[932,50,988,48],[932,85,988,83],[932,86,988,84],[933,8,989,6],[933,15,989,13],[933,20,989,18],[934,6,990,4],[936,6,992,4],[937,6,993,4],[937,10,993,8,"combatState"],[937,21,993,19],[937,22,993,20,"enemies"],[937,29,993,27],[937,30,993,28,"length"],[937,36,993,34],[937,41,993,39],[937,42,993,40],[937,44,993,42],[938,8,994,6,"console"],[938,15,994,13],[938,16,994,14,"log"],[938,19,994,17],[938,20,994,18],[938,69,994,67],[938,70,994,68],[939,8,995,6],[939,15,995,13],[939,20,995,18],[940,6,996,4],[942,6,998,4],[943,6,999,4],[943,10,999,10,"currentTick"],[943,21,999,21],[943,24,999,24,"combatEngine"],[943,43,999,36],[943,44,999,36,"combatEngine"],[943,56,999,36],[943,57,999,37,"getCurrentTick"],[943,71,999,51],[943,72,999,52],[943,73,999,53],[944,6,1000,4],[944,10,1000,10,"success"],[944,17,1000,17],[944,20,1000,20,"combatState"],[944,31,1000,31],[944,32,1000,32,"abilityManager"],[944,46,1000,46],[944,47,1000,47,"useAbility"],[944,57,1000,57],[944,58,1000,58,"slotIndex"],[944,67,1000,67],[944,69,1000,69,"currentTick"],[944,80,1000,80],[944,81,1000,81],[945,6,1002,4],[945,10,1002,8,"success"],[945,17,1002,15],[945,19,1002,17],[946,8,1003,6],[947,8,1004,6,"setCombatState"],[947,22,1004,20],[947,23,1004,21,"prev"],[947,27,1004,25],[947,31,1004,29],[948,10,1005,8],[948,14,1005,14,"newState"],[948,22,1005,22],[948,25,1005,25],[949,12,1005,27],[949,15,1005,30,"prev"],[950,10,1005,35],[950,11,1005,36],[951,10,1006,8,"castAbility"],[951,21,1006,19],[951,22,1006,20,"newState"],[951,30,1006,28],[951,32,1006,30,"slotIndex"],[951,41,1006,39],[951,42,1006,40],[952,10,1007,8],[952,17,1007,15,"newState"],[952,25,1007,23],[953,8,1008,6],[953,9,1008,7],[953,10,1008,8],[954,8,1010,6,"console"],[954,15,1010,13],[954,16,1010,14,"log"],[954,19,1010,17],[954,20,1010,18],[954,65,1010,63,"slotIndex"],[954,74,1010,72],[954,76,1010,74],[954,77,1010,75],[955,8,1011,6],[955,15,1011,13],[955,19,1011,17],[956,6,1012,4],[956,7,1012,5],[956,13,1012,11],[957,8,1013,6,"console"],[957,15,1013,13],[957,16,1013,14,"log"],[957,19,1013,17],[957,20,1013,18],[957,61,1013,59,"slotIndex"],[957,70,1013,68],[957,72,1013,70],[957,73,1013,71],[958,8,1014,6],[958,15,1014,13],[958,20,1014,18],[959,6,1015,4],[960,4,1016,2],[960,5,1016,3],[960,46,1016,5],[960,47,1016,6,"combatState"],[960,58,1016,17],[960,59,1016,18,"abilityManager"],[960,73,1016,32],[960,75,1016,34,"combatState"],[960,86,1016,45],[960,87,1016,46,"enemies"],[960,94,1016,53],[960,95,1016,54],[960,96,1016,55],[961,4,1017,2],[961,8,1017,2,"useEffect"],[961,14,1017,11],[961,15,1017,11,"useEffect"],[961,24,1017,11],[961,26,1017,12],[961,32,1017,18],[962,6,1018,4,"combatEngine"],[962,25,1018,16],[962,26,1018,16,"combatEngine"],[962,38,1018,16],[962,39,1018,17,"start"],[962,44,1018,22],[962,45,1018,23],[962,46,1018,24],[964,6,1020,4],[965,6,1021,4],[966,6,1022,4,"console"],[966,13,1022,11],[966,14,1022,12,"log"],[966,17,1022,15],[966,18,1022,16],[966,97,1022,95],[966,98,1022,96],[967,6,1024,4],[967,13,1024,11],[967,19,1024,17],[968,8,1025,6,"combatEngine"],[968,27,1025,18],[968,28,1025,18,"combatEngine"],[968,40,1025,18],[968,41,1025,19,"stop"],[968,45,1025,23],[968,46,1025,24],[968,47,1025,25],[969,6,1026,4],[969,7,1026,5],[970,4,1027,2],[970,5,1027,3],[970,7,1027,5],[970,9,1027,7],[970,10,1027,8],[972,4,1029,2],[973,4,1030,2],[973,8,1030,2,"useEffect"],[973,14,1030,11],[973,15,1030,11,"useEffect"],[973,24,1030,11],[973,26,1030,12],[973,32,1030,18],[974,6,1031,4],[974,10,1031,10,"processProjectileImpacts"],[974,34,1031,34],[974,37,1031,37,"processProjectileImpacts"],[974,38,1031,37],[974,43,1031,43],[975,8,1032,6,"setProjectiles"],[975,22,1032,20],[975,23,1032,21,"currentProjectiles"],[975,41,1032,39],[975,45,1032,43],[976,10,1033,8],[976,17,1033,15,"currentProjectiles"],[976,35,1033,33],[976,36,1033,34,"map"],[976,39,1033,37],[976,40,1033,38,"projectile"],[976,50,1033,48],[976,54,1033,52],[977,12,1034,10],[977,16,1034,14],[977,17,1034,15,"projectile"],[977,27,1034,25],[977,29,1034,27],[977,36,1034,34],[977,40,1034,38],[979,12,1036,10],[980,12,1037,10],[980,16,1037,16,"currentTime"],[980,27,1037,27],[980,30,1037,30,"Date"],[980,34,1037,34],[980,35,1037,35,"now"],[980,38,1037,38],[980,39,1037,39],[980,40,1037,40],[981,12,1038,10],[981,16,1038,16,"startTime"],[981,25,1038,25],[981,28,1038,28,"projectile"],[981,38,1038,38],[981,39,1038,39,"startTime"],[981,48,1038,48],[981,52,1038,52,"currentTime"],[981,63,1038,63],[982,12,1039,10],[982,16,1039,16,"elapsedTime"],[982,27,1039,27],[982,30,1039,30,"currentTime"],[982,41,1039,41],[982,44,1039,44,"startTime"],[982,53,1039,53],[983,12,1040,10],[983,16,1040,16,"progress"],[983,24,1040,24],[983,27,1040,27,"Math"],[983,31,1040,31],[983,32,1040,32,"min"],[983,35,1040,35],[983,36,1040,36,"elapsedTime"],[983,47,1040,47],[983,51,1040,51,"projectile"],[983,61,1040,61],[983,62,1040,62,"duration"],[983,70,1040,70],[983,74,1040,74],[983,77,1040,77],[983,78,1040,78],[983,80,1040,80],[983,81,1040,81],[983,82,1040,82],[985,12,1042,10],[986,12,1043,10],[986,16,1043,14,"progress"],[986,24,1043,22],[986,28,1043,26],[986,29,1043,27],[986,33,1043,31],[986,34,1043,32,"projectile"],[986,44,1043,42],[986,45,1043,43,"hasHit"],[986,51,1043,49],[986,53,1043,51],[987,14,1044,12,"projectile"],[987,24,1044,22],[987,25,1044,23,"hasHit"],[987,31,1044,29],[987,34,1044,32],[987,38,1044,36],[988,14,1046,12,"setCombatState"],[988,28,1046,26],[988,29,1046,27,"prev"],[988,33,1046,31],[988,37,1046,35],[989,16,1047,14],[989,20,1047,20,"newState"],[989,28,1047,28],[989,31,1047,31],[990,18,1047,33],[990,21,1047,36,"prev"],[991,16,1047,41],[991,17,1047,42],[992,16,1049,14],[992,20,1049,18,"projectile"],[992,30,1049,28],[992,31,1049,29,"isAOE"],[992,36,1049,34],[992,40,1049,38,"projectile"],[992,50,1049,48],[992,51,1049,49,"aoeRadius"],[992,60,1049,58],[992,64,1049,62,"projectile"],[992,74,1049,72],[992,75,1049,73,"aoeRadius"],[992,84,1049,82],[992,87,1049,85],[992,88,1049,86],[992,90,1049,88],[993,18,1050,16],[994,18,1051,16,"console"],[994,25,1051,23],[994,26,1051,24,"log"],[994,29,1051,27],[994,30,1051,28],[994,59,1051,57,"projectile"],[994,69,1051,67],[994,70,1051,68,"abilityName"],[994,81,1051,79],[994,97,1051,95,"projectile"],[994,107,1051,105],[994,108,1051,106,"aoeRadius"],[994,117,1051,115],[994,119,1051,117],[994,120,1051,118],[995,18,1053,16],[995,22,1053,22,"impactX"],[995,29,1053,29],[995,32,1053,32,"projectile"],[995,42,1053,42],[995,43,1053,43,"targetX"],[995,50,1053,50],[996,18,1054,16],[996,22,1054,22,"impactY"],[996,29,1054,29],[996,32,1054,32,"projectile"],[996,42,1054,42],[996,43,1054,43,"targetY"],[996,50,1054,50],[997,18,1055,16],[997,22,1055,22,"enemiesKilled"],[997,35,1055,50],[997,38,1055,53],[997,40,1055,55],[999,18,1057,16],[1000,18,1058,16,"newState"],[1000,26,1058,24],[1000,27,1058,25,"enemies"],[1000,34,1058,32],[1000,37,1058,35,"newState"],[1000,45,1058,43],[1000,46,1058,44,"enemies"],[1000,53,1058,51],[1000,54,1058,52,"map"],[1000,57,1058,55],[1000,58,1058,56,"enemy"],[1000,63,1058,61],[1000,67,1058,65],[1001,20,1059,18],[1001,24,1059,22,"enemy"],[1001,29,1059,27],[1001,30,1059,28,"health"],[1001,36,1059,34],[1001,40,1059,38],[1001,41,1059,39],[1001,45,1059,43,"enemy"],[1001,50,1059,48],[1001,51,1059,49,"markedForDeath"],[1001,65,1059,63],[1001,67,1059,65],[1001,74,1059,72,"enemy"],[1001,79,1059,77],[1002,20,1061,18],[1002,24,1061,24,"enemyX"],[1002,30,1061,30],[1002,33,1061,33,"enemy"],[1002,38,1061,38],[1002,39,1061,39,"position"],[1002,47,1061,47],[1002,48,1061,48,"x"],[1002,49,1061,49],[1002,52,1061,52],[1002,56,1061,56],[1002,57,1061,57],[1002,58,1061,58],[1003,20,1062,18],[1003,24,1062,24,"enemyY"],[1003,30,1062,30],[1003,33,1062,33,"enemy"],[1003,38,1062,38],[1003,39,1062,39,"position"],[1003,47,1062,47],[1003,48,1062,48,"y"],[1003,49,1062,49],[1003,52,1062,52],[1003,56,1062,56],[1004,20,1063,18],[1004,24,1063,24,"distance"],[1004,32,1063,32],[1004,35,1063,35,"Math"],[1004,39,1063,39],[1004,40,1063,40,"sqrt"],[1004,44,1063,44],[1004,45,1063,45,"Math"],[1004,49,1063,49],[1004,50,1063,50,"pow"],[1004,53,1063,53],[1004,54,1063,54,"enemyX"],[1004,60,1063,60],[1004,63,1063,63,"impactX"],[1004,70,1063,70],[1004,72,1063,72],[1004,73,1063,73],[1004,74,1063,74],[1004,77,1063,77,"Math"],[1004,81,1063,81],[1004,82,1063,82,"pow"],[1004,85,1063,85],[1004,86,1063,86,"enemyY"],[1004,92,1063,92],[1004,95,1063,95,"impactY"],[1004,102,1063,102],[1004,104,1063,104],[1004,105,1063,105],[1004,106,1063,106],[1004,107,1063,107],[1005,20,1065,18,"console"],[1005,27,1065,25],[1005,28,1065,26,"log"],[1005,31,1065,29],[1005,32,1065,30],[1005,58,1065,56,"enemy"],[1005,63,1065,61],[1005,64,1065,62,"name"],[1005,68,1065,66],[1005,76,1065,74,"enemyX"],[1005,82,1065,80],[1005,87,1065,85,"enemyY"],[1005,93,1065,91],[1005,109,1065,107,"impactX"],[1005,116,1065,114],[1005,121,1065,119,"impactY"],[1005,128,1065,126],[1005,135,1065,133,"distance"],[1005,143,1065,141],[1005,144,1065,142,"toFixed"],[1005,151,1065,149],[1005,152,1065,150],[1005,153,1065,151],[1005,154,1065,152],[1005,169,1065,167,"projectile"],[1005,179,1065,177],[1005,180,1065,178,"aoeRadius"],[1005,189,1065,187],[1005,194,1065,192],[1005,195,1065,193],[1006,20,1067,18],[1006,24,1067,22,"distance"],[1006,32,1067,30],[1006,36,1067,34,"projectile"],[1006,46,1067,44],[1006,47,1067,45,"aoeRadius"],[1006,56,1067,54],[1006,58,1067,56],[1007,22,1068,20],[1008,22,1069,20],[1008,26,1069,26,"newHealth"],[1008,35,1069,35],[1008,38,1069,38,"Math"],[1008,42,1069,42],[1008,43,1069,43,"max"],[1008,46,1069,46],[1008,47,1069,47],[1008,48,1069,48],[1008,50,1069,50,"enemy"],[1008,55,1069,55],[1008,56,1069,56,"health"],[1008,62,1069,62],[1008,65,1069,65,"projectile"],[1008,75,1069,75],[1008,76,1069,76,"damage"],[1008,82,1069,82],[1008,83,1069,83],[1009,22,1071,20,"console"],[1009,29,1071,27],[1009,30,1071,28,"log"],[1009,33,1071,31],[1009,34,1071,32],[1009,52,1071,50,"enemy"],[1009,57,1071,55],[1009,58,1071,56,"name"],[1009,62,1071,60],[1009,74,1071,72,"projectile"],[1009,84,1071,82],[1009,85,1071,83,"damage"],[1009,91,1071,89],[1009,103,1071,101,"enemy"],[1009,108,1071,106],[1009,109,1071,107,"health"],[1009,115,1071,113],[1009,122,1071,120,"newHealth"],[1009,131,1071,129],[1009,134,1071,132],[1009,135,1071,133],[1011,22,1073,20],[1012,22,1074,20],[1012,26,1074,24,"newHealth"],[1012,35,1074,33],[1012,39,1074,37],[1012,40,1074,38],[1012,44,1074,42,"enemy"],[1012,49,1074,47],[1012,50,1074,48,"health"],[1012,56,1074,54],[1012,59,1074,57],[1012,60,1074,58],[1012,62,1074,60],[1013,24,1075,22,"console"],[1013,31,1075,29],[1013,32,1075,30,"log"],[1013,35,1075,33],[1013,36,1075,34],[1013,52,1075,50,"enemy"],[1013,57,1075,55],[1013,58,1075,56,"name"],[1013,62,1075,60],[1013,76,1075,74,"projectile"],[1013,86,1075,84],[1013,87,1075,85,"abilityName"],[1013,98,1075,96],[1013,101,1075,99],[1013,102,1075,100],[1014,24,1076,22,"enemiesKilled"],[1014,37,1076,35],[1014,38,1076,36,"push"],[1014,42,1076,40],[1014,43,1076,41,"enemy"],[1014,48,1076,46],[1014,49,1076,47],[1014,50,1076,48],[1014,51,1076,49],[1016,24,1078,22],[1016,31,1078,29],[1017,26,1079,24],[1017,29,1079,27,"enemy"],[1017,34,1079,32],[1018,26,1080,24,"health"],[1018,32,1080,30],[1018,34,1080,32],[1018,35,1080,33],[1019,26,1081,24,"markedForDeath"],[1019,40,1081,38],[1019,42,1081,40],[1019,46,1081,44],[1020,26,1082,24,"lastDamaged"],[1020,37,1082,35],[1020,39,1082,37,"combatEngine"],[1020,58,1082,49],[1020,59,1082,49,"combatEngine"],[1020,71,1082,49],[1020,72,1082,50,"getCurrentTick"],[1020,86,1082,64],[1020,87,1082,65],[1021,24,1083,22],[1021,25,1083,23],[1022,22,1084,20],[1022,23,1084,21],[1022,29,1084,27],[1023,24,1085,22],[1023,31,1085,29],[1024,26,1086,24],[1024,29,1086,27,"enemy"],[1024,34,1086,32],[1025,26,1087,24,"health"],[1025,32,1087,30],[1025,34,1087,32,"newHealth"],[1025,43,1087,41],[1026,26,1088,24,"lastDamaged"],[1026,37,1088,35],[1026,39,1088,37,"combatEngine"],[1026,58,1088,49],[1026,59,1088,49,"combatEngine"],[1026,71,1088,49],[1026,72,1088,50,"getCurrentTick"],[1026,86,1088,64],[1026,87,1088,65],[1027,24,1089,22],[1027,25,1089,23],[1028,22,1090,20],[1029,20,1091,18],[1030,20,1093,18],[1030,27,1093,25,"enemy"],[1030,32,1093,30],[1030,33,1093,31],[1030,34,1093,32],[1031,18,1094,16],[1031,19,1094,17],[1031,20,1094,18],[1033,18,1096,16],[1034,18,1097,16],[1034,22,1097,20,"enemiesKilled"],[1034,35,1097,33],[1034,36,1097,34,"length"],[1034,42,1097,40],[1034,45,1097,43],[1034,46,1097,44],[1034,48,1097,46],[1035,20,1098,18,"console"],[1035,27,1098,25],[1035,28,1098,26,"log"],[1035,31,1098,29],[1035,32,1098,30],[1035,52,1098,50,"enemiesKilled"],[1035,65,1098,63],[1035,66,1098,64,"length"],[1035,72,1098,70],[1035,94,1098,92,"projectile"],[1035,104,1098,102],[1035,105,1098,103,"abilityName"],[1035,116,1098,114],[1035,118,1098,116],[1035,119,1098,117],[1036,20,1099,18,"setTimeout"],[1036,30,1099,28],[1036,31,1099,29],[1036,37,1099,35],[1037,22,1100,20,"enemiesKilled"],[1037,35,1100,33],[1037,36,1100,34,"forEach"],[1037,43,1100,41],[1037,44,1100,42,"enemy"],[1037,49,1100,47],[1037,53,1100,51,"handleEnemyKill"],[1037,68,1100,66],[1037,69,1100,67,"enemy"],[1037,74,1100,72],[1037,75,1100,73],[1037,76,1100,74],[1038,20,1101,18],[1038,21,1101,19],[1038,23,1101,21],[1038,24,1101,22],[1038,25,1101,23],[1039,18,1102,16],[1040,16,1104,14],[1040,17,1104,15],[1040,23,1104,21],[1041,18,1105,16],[1042,18,1106,16],[1042,22,1106,22,"enemyIndex"],[1042,32,1106,32],[1042,35,1106,35,"newState"],[1042,43,1106,43],[1042,44,1106,44,"enemies"],[1042,51,1106,51],[1042,52,1106,52,"findIndex"],[1042,61,1106,61],[1042,62,1106,62,"e"],[1042,63,1106,63],[1042,67,1106,67,"e"],[1042,68,1106,68],[1042,69,1106,69,"id"],[1042,71,1106,71],[1042,76,1106,76,"projectile"],[1042,86,1106,86],[1042,87,1106,87,"targetEnemyId"],[1042,100,1106,100],[1042,101,1106,101],[1043,18,1108,16],[1043,22,1108,20,"enemyIndex"],[1043,32,1108,30],[1043,36,1108,34],[1043,37,1108,35],[1043,41,1108,39,"newState"],[1043,49,1108,47],[1043,50,1108,48,"enemies"],[1043,57,1108,55],[1043,58,1108,56,"enemyIndex"],[1043,68,1108,66],[1043,69,1108,67],[1043,70,1108,68,"health"],[1043,76,1108,74],[1043,79,1108,77],[1043,80,1108,78],[1043,84,1108,82],[1043,85,1108,83,"newState"],[1043,93,1108,91],[1043,94,1108,92,"enemies"],[1043,101,1108,99],[1043,102,1108,100,"enemyIndex"],[1043,112,1108,110],[1043,113,1108,111],[1043,114,1108,112,"markedForDeath"],[1043,128,1108,126],[1043,130,1108,128],[1044,20,1109,18,"newState"],[1044,28,1109,26],[1044,29,1109,27,"enemies"],[1044,36,1109,34],[1044,39,1109,37],[1044,40,1109,38],[1044,43,1109,41,"newState"],[1044,51,1109,49],[1044,52,1109,50,"enemies"],[1044,59,1109,57],[1044,60,1109,58],[1045,20,1110,18],[1045,24,1110,24,"enemy"],[1045,29,1110,29],[1045,32,1110,32,"newState"],[1045,40,1110,40],[1045,41,1110,41,"enemies"],[1045,48,1110,48],[1045,49,1110,49,"enemyIndex"],[1045,59,1110,59],[1045,60,1110,60],[1046,20,1111,18],[1046,24,1111,24,"newHealth"],[1046,33,1111,33],[1046,36,1111,36,"Math"],[1046,40,1111,40],[1046,41,1111,41,"max"],[1046,44,1111,44],[1046,45,1111,45],[1046,46,1111,46],[1046,48,1111,48,"enemy"],[1046,53,1111,53],[1046,54,1111,54,"health"],[1046,60,1111,60],[1046,63,1111,63,"projectile"],[1046,73,1111,73],[1046,74,1111,74,"damage"],[1046,80,1111,80],[1046,81,1111,81],[1047,20,1113,18,"newState"],[1047,28,1113,26],[1047,29,1113,27,"enemies"],[1047,36,1113,34],[1047,37,1113,35,"enemyIndex"],[1047,47,1113,45],[1047,48,1113,46],[1047,51,1113,49],[1048,22,1114,20],[1048,25,1114,23,"enemy"],[1048,30,1114,28],[1049,22,1115,20,"health"],[1049,28,1115,26],[1049,30,1115,28,"newHealth"],[1049,39,1115,37],[1050,22,1116,20,"lastDamaged"],[1050,33,1116,31],[1050,35,1116,33,"combatEngine"],[1050,54,1116,45],[1050,55,1116,45,"combatEngine"],[1050,67,1116,45],[1050,68,1116,46,"getCurrentTick"],[1050,82,1116,60],[1050,83,1116,61],[1051,20,1117,18],[1051,21,1117,19],[1052,20,1119,18,"console"],[1052,27,1119,25],[1052,28,1119,26,"log"],[1052,31,1119,29],[1052,32,1119,30],[1052,60,1119,58,"enemy"],[1052,65,1119,63],[1052,66,1119,64,"name"],[1052,70,1119,68],[1052,82,1119,80,"newHealth"],[1052,91,1119,89],[1052,95,1119,93,"enemy"],[1052,100,1119,98],[1052,101,1119,99,"maxHealth"],[1052,110,1119,108],[1052,112,1119,110],[1052,113,1119,111],[1054,20,1121,18],[1055,20,1122,18],[1055,24,1122,22,"newHealth"],[1055,33,1122,31],[1055,37,1122,35],[1055,38,1122,36],[1055,42,1122,40,"enemy"],[1055,47,1122,45],[1055,48,1122,46,"health"],[1055,54,1122,52],[1055,57,1122,55],[1055,58,1122,56],[1055,60,1122,58],[1056,22,1123,20,"console"],[1056,29,1123,27],[1056,30,1123,28,"log"],[1056,33,1123,31],[1056,34,1123,32],[1056,60,1123,58,"enemy"],[1056,65,1123,63],[1056,66,1123,64,"name"],[1056,70,1123,68],[1056,84,1123,82,"projectile"],[1056,94,1123,92],[1056,95,1123,93,"abilityName"],[1056,106,1123,104],[1056,112,1123,110,"enemy"],[1056,117,1123,115],[1056,118,1123,116,"health"],[1056,124,1123,122],[1056,130,1123,128,"newHealth"],[1056,139,1123,137],[1056,142,1123,140],[1056,143,1123,141],[1058,22,1125,20],[1059,22,1126,20,"newState"],[1059,30,1126,28],[1059,31,1126,29,"enemies"],[1059,38,1126,36],[1059,39,1126,37,"enemyIndex"],[1059,49,1126,47],[1059,50,1126,48],[1059,53,1126,51],[1060,24,1127,22],[1060,27,1127,25,"newState"],[1060,35,1127,33],[1060,36,1127,34,"enemies"],[1060,43,1127,41],[1060,44,1127,42,"enemyIndex"],[1060,54,1127,52],[1060,55,1127,53],[1061,24,1128,22,"health"],[1061,30,1128,28],[1061,32,1128,30],[1061,33,1128,31],[1062,24,1129,22,"markedForDeath"],[1062,38,1129,36],[1062,40,1129,38],[1063,22,1130,20],[1063,23,1130,21],[1065,22,1132,20],[1066,22,1133,20,"console"],[1066,29,1133,27],[1066,30,1133,28,"log"],[1066,33,1133,31],[1066,34,1133,32],[1066,81,1133,79,"enemy"],[1066,86,1133,84],[1066,87,1133,85,"name"],[1066,91,1133,89],[1066,100,1133,98,"enemy"],[1066,105,1133,103],[1066,106,1133,104,"id"],[1066,108,1133,106],[1066,111,1133,109],[1066,112,1133,110],[1067,22,1134,20,"setTimeout"],[1067,32,1134,30],[1067,33,1134,31],[1067,39,1134,37,"handleEnemyKill"],[1067,54,1134,52],[1067,55,1134,53,"enemy"],[1067,60,1134,58],[1067,61,1134,59],[1067,63,1134,61],[1067,64,1134,62],[1067,65,1134,63],[1068,20,1135,18],[1068,21,1135,19],[1068,27,1135,25],[1068,31,1135,29,"enemy"],[1068,36,1135,34],[1068,37,1135,35,"health"],[1068,43,1135,41],[1068,46,1135,44],[1068,47,1135,45],[1068,49,1135,47],[1069,22,1136,20,"console"],[1069,29,1136,27],[1069,30,1136,28,"log"],[1069,33,1136,31],[1069,34,1136,32],[1069,58,1136,56,"enemy"],[1069,63,1136,61],[1069,64,1136,62,"name"],[1069,68,1136,66],[1069,80,1136,78,"projectile"],[1069,90,1136,88],[1069,91,1136,89,"damage"],[1069,97,1136,95],[1069,109,1136,107,"enemy"],[1069,114,1136,112],[1069,115,1136,113,"health"],[1069,121,1136,119],[1069,127,1136,125,"newHealth"],[1069,136,1136,134],[1069,139,1136,137],[1069,140,1136,138],[1070,20,1137,18],[1070,21,1137,19],[1070,27,1137,25],[1071,22,1138,20,"console"],[1071,29,1138,27],[1071,30,1138,28,"log"],[1071,33,1138,31],[1071,34,1138,32],[1071,56,1138,54,"enemy"],[1071,61,1138,59],[1071,62,1138,60,"name"],[1071,66,1138,64],[1071,92,1138,90,"enemy"],[1071,97,1138,95],[1071,98,1138,96,"health"],[1071,104,1138,102],[1071,122,1138,120],[1071,123,1138,121],[1072,20,1139,18],[1073,18,1140,16],[1074,16,1141,14],[1075,16,1143,14],[1075,23,1143,21,"newState"],[1075,31,1143,29],[1076,14,1144,12],[1076,15,1144,13],[1076,16,1144,14],[1077,12,1145,10],[1079,12,1147,10],[1080,12,1148,10],[1080,16,1148,14,"progress"],[1080,24,1148,22],[1080,28,1148,26],[1080,31,1148,29],[1080,33,1148,31],[1081,14,1149,12],[1081,21,1149,19],[1081,25,1149,23],[1082,12,1150,10],[1083,12,1152,10],[1083,19,1152,17,"projectile"],[1083,29,1152,27],[1084,10,1153,8],[1084,11,1153,9],[1084,12,1153,10],[1084,13,1153,11,"filter"],[1084,19,1153,17],[1084,20,1153,18,"Boolean"],[1084,27,1153,25],[1084,28,1153,26],[1085,8,1154,6],[1085,9,1154,7],[1085,10,1154,8],[1086,6,1155,4],[1086,7,1155,5],[1088,6,1157,4],[1089,6,1158,4],[1089,10,1158,10,"impactInterval"],[1089,24,1158,24],[1089,27,1158,27,"setInterval"],[1089,38,1158,38],[1089,39,1158,39,"processProjectileImpacts"],[1089,63,1158,63],[1089,65,1158,65],[1089,67,1158,67],[1089,68,1158,68],[1090,6,1159,4],[1090,13,1159,11],[1090,19,1159,17,"clearInterval"],[1090,32,1159,30],[1090,33,1159,31,"impactInterval"],[1090,47,1159,45],[1090,48,1159,46],[1091,4,1160,2],[1091,5,1160,3],[1091,7,1160,5],[1091,8,1160,6,"handleEnemyKill"],[1091,23,1160,21],[1091,24,1160,22],[1091,25,1160,23],[1093,4,1162,2],[1094,4,1163,2],[1094,8,1163,8,"saveAbilityData"],[1094,23,1163,23],[1094,26,1163,26],[1094,30,1163,26,"useCallback"],[1094,36,1163,37],[1094,37,1163,37,"useCallback"],[1094,48,1163,37],[1094,50,1163,38],[1094,56,1163,44],[1095,6,1164,4],[1095,10,1164,8,"combatState"],[1095,21,1164,19],[1095,22,1164,20,"abilityManager"],[1095,36,1164,34],[1095,38,1164,36],[1096,8,1165,6],[1096,12,1165,12,"abilityData"],[1096,23,1165,23],[1096,26,1165,26,"combatState"],[1096,37,1165,37],[1096,38,1165,38,"abilityManager"],[1096,52,1165,52],[1096,53,1165,53,"getSaveData"],[1096,64,1165,64],[1096,65,1165,65],[1096,66,1165,66],[1097,8,1166,6,"console"],[1097,15,1166,13],[1097,16,1166,14,"log"],[1097,19,1166,17],[1097,20,1166,18],[1097,70,1166,68],[1097,72,1166,70,"abilityData"],[1097,83,1166,81],[1097,84,1166,82],[1098,8,1167,6,"game"],[1098,12,1167,10],[1098,13,1167,11,"updateAbilityData"],[1098,30,1167,28],[1098,31,1167,29,"abilityData"],[1098,42,1167,40],[1098,43,1167,41],[1099,6,1168,4],[1100,4,1169,2],[1100,5,1169,3],[1100,7,1169,5],[1100,8,1169,6,"combatState"],[1100,19,1169,17],[1100,20,1169,18,"abilityManager"],[1100,34,1169,32],[1100,36,1169,34,"game"],[1100,40,1169,38],[1100,41,1169,39,"updateAbilityData"],[1100,58,1169,56],[1100,59,1169,57],[1100,60,1169,58],[1101,4,1171,2],[1101,8,1171,8,"contextValue"],[1101,20,1171,39],[1101,23,1171,42,"React"],[1101,28,1171,47],[1101,29,1171,47,"default"],[1101,36,1171,47],[1101,37,1171,48,"useMemo"],[1101,44,1171,55],[1101,45,1171,56],[1101,52,1171,63],[1102,6,1172,4,"combatState"],[1102,17,1172,15],[1103,6,1173,4,"projectiles"],[1103,17,1173,15],[1104,6,1174,4,"startCombat"],[1104,17,1174,15],[1105,6,1175,4,"stopCombat"],[1105,16,1175,14],[1106,6,1176,4,"equipAbility"],[1106,18,1176,16],[1107,6,1177,4,"handleEnemyKill"],[1107,21,1177,19],[1108,6,1178,4,"getDeck"],[1108,13,1178,11],[1109,6,1179,4,"getAvailableAbilities"],[1109,27,1179,25],[1110,6,1180,4,"upgradeAbility"],[1110,20,1180,18],[1111,6,1181,4,"spawnEnemy"],[1111,16,1181,14],[1112,6,1182,4,"spawnBoss"],[1112,15,1182,13],[1113,6,1183,4,"clearAllEnemies"],[1113,21,1183,19],[1114,6,1184,4,"clearSpecificEnemy"],[1114,24,1184,22],[1115,6,1185,4,"triggerLevelUpExplosion"],[1115,29,1185,27],[1116,6,1186,4,"findClosestEnemy"],[1116,22,1186,20],[1117,6,1187,4,"updateNinjaPosition"],[1117,25,1187,23],[1118,6,1188,4,"setManualControlActive"],[1118,28,1188,26],[1119,6,1189,4,"lastExplosionTime"],[1119,23,1189,21],[1120,6,1190,4,"useAbilityManually"],[1120,24,1190,22],[1121,6,1190,24],[1122,6,1191,4,"saveAbilityData"],[1122,21,1191,19],[1123,6,1191,21],[1124,6,1192,4,"shadowClone"],[1124,17,1192,15],[1124,19,1192,17,"combatState"],[1124,30,1192,28],[1124,31,1192,29,"shadowClone"],[1124,42,1192,40],[1124,43,1192,42],[1125,4,1193,2],[1125,5,1193,3],[1125,6,1193,4],[1125,8,1193,6],[1126,4,1194,4],[1127,4,1195,4],[1128,4,1196,4,"combatState"],[1128,15,1196,15],[1128,17,1197,4,"projectiles"],[1128,28,1197,15],[1128,30,1198,4,"lastExplosionTime"],[1128,47,1198,21],[1129,4,1199,4],[1130,4,1200,4,"combatState"],[1130,15,1200,15],[1130,16,1200,16,"abilityManager"],[1130,30,1200,30],[1130,32,1201,4,"combatState"],[1130,43,1201,15],[1130,44,1201,16,"enemies"],[1130,51,1201,23],[1130,53,1202,4,"combatState"],[1130,64,1202,15],[1130,65,1202,16,"shadowClone"],[1130,76,1202,27],[1131,4,1202,29],[1132,4,1203,4,"useAbilityManually"],[1132,22,1203,22],[1133,4,1203,24],[1134,4,1204,4,"saveAbilityData"],[1134,19,1204,19],[1134,20,1204,21],[1135,4,1204,21],[1135,5,1205,3],[1135,6,1205,4],[1136,4,1207,2],[1136,24,1208,4],[1136,28,1208,4,"_reactJsxDevRuntime"],[1136,47,1208,4],[1136,48,1208,4,"jsxDEV"],[1136,54,1208,4],[1136,56,1208,5,"CombatContext"],[1136,69,1208,18],[1136,70,1208,19,"Provider"],[1136,78,1208,27],[1137,6,1208,28,"value"],[1137,11,1208,33],[1137,13,1208,35,"contextValue"],[1137,25,1208,48],[1138,6,1208,48,"children"],[1138,14,1208,48],[1138,16,1209,7,"children"],[1139,4,1209,15],[1140,6,1209,15,"fileName"],[1140,14,1209,15],[1140,16,1209,15,"_jsxFileName"],[1140,28,1209,15],[1141,6,1209,15,"lineNumber"],[1141,16,1209,15],[1142,6,1209,15,"columnNumber"],[1142,18,1209,15],[1143,4,1209,15],[1143,11,1210,28],[1143,12,1210,29],[1144,2,1212,0],[1144,3,1212,1],[1145,2,1212,2,"_s4"],[1145,5,1212,2],[1145,6,103,13,"CombatProvider"],[1145,20,103,27],[1146,4,103,27],[1146,12,104,15,"useGame"],[1146,24,104,22],[1146,25,104,22,"useGame"],[1146,32,104,22],[1146,34,105,77,"useZone"],[1146,46,105,84],[1146,47,105,84,"useZone"],[1146,54,105,84],[1147,2,105,84],[1148,2,105,84,"_c"],[1148,4,105,84],[1148,7,103,13,"CombatProvider"],[1148,21,103,27],[1149,2,103,27],[1149,6,103,27,"_c"],[1149,8,103,27],[1150,2,103,27,"$RefreshReg$"],[1150,14,103,27],[1150,15,103,27,"_c"],[1150,17,103,27],[1151,0,103,27],[1151,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCoB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE4B,4BF;a+CU;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}