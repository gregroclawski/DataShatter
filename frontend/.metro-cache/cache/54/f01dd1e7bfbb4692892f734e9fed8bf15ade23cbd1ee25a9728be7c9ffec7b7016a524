{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: When player is revived, sync the combat state with game state health\n          if (game.gameState.isAlive && effectiveStats.health === effectiveStats.maxHealth && newState.playerStats.health !== effectiveStats.health) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${effectiveStats.health} (Full health restoration detected)`);\n            newState.playerStats.health = effectiveStats.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is invincible\n                var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                if (isPlayerInvincible) {\n                  console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                  // Update enemy attack cooldown even if blocked\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                  var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                  var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                  var playerDefense = newState.playerStats.defense;\n                  var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                  console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                  // Apply damage to player\n                  var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                  newState.playerStats.health = newPlayerHealth;\n                  console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                  // Update enemy attack cooldown\n                  enemy.lastAttackTick = newState.currentTick;\n\n                  // Handle player death if health reaches 0\n                  if (newPlayerHealth <= 0) {\n                    console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                    // Set player as dead and trigger revival modal\n                    setTimeout(() => {\n                      // Set isAlive to false to trigger revival system\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }, 100);\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades) - DUPLICATE REMOVED\n        // This duplicate sync block has been removed to prevent conflicts with the main sync above\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1057,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1107,2],[27,6,1107,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1107,2],[27,42,1107,2,"require"],[27,49,1107,2],[27,50,1107,2,"_dependencyMap"],[27,64,1107,2],[28,2,1107,2],[28,6,1107,2,"_slicedToArray"],[28,20,1107,2],[28,23,1107,2,"_interopDefault"],[28,38,1107,2],[28,39,1107,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1107,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"maxHealth"],[224,189,256,71],[224,191,256,73],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"maxHealth"],[225,252,258,250],[225,254,258,252],[225,255,258,253],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"maxHealth"],[229,75,262,73],[229,77,262,75],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"maxHealth"],[231,42,264,40],[231,45,264,43,"newState"],[231,53,264,51],[231,54,264,52,"playerStats"],[231,65,264,63],[231,66,264,64,"maxHealth"],[231,75,264,73],[231,78,264,76],[231,81,264,79],[231,83,264,81],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"maxHealth"],[234,63,268,61],[234,66,268,64,"healthRatio"],[234,77,268,75],[234,78,268,76],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"maxHealth"],[235,79,269,77],[235,81,269,79],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"maxHealth"],[237,52,271,50],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"maxHealth"],[245,49,280,47],[246,14,280,49],[247,14,281,12,"health"],[247,20,281,18],[247,22,281,20,"newHealth"],[247,31,281,29],[248,14,281,31],[249,14,282,12,"critChance"],[249,24,282,22],[249,26,282,24,"effectiveStats"],[249,40,282,38],[249,41,282,39,"critChance"],[249,51,282,49],[249,55,282,53,"newState"],[249,63,282,61],[249,64,282,62,"playerStats"],[249,75,282,73],[249,76,282,74,"critChance"],[249,86,282,84],[250,14,283,12,"critDamage"],[250,24,283,22],[250,26,283,24,"effectiveStats"],[250,40,283,38],[250,41,283,39,"critDamage"],[250,51,283,49],[250,55,283,53,"newState"],[250,63,283,61],[250,64,283,62,"playerStats"],[250,75,283,73],[250,76,283,74,"critDamage"],[250,86,283,84],[251,14,284,12,"cooldownReduction"],[251,31,284,29],[251,33,284,31,"effectiveStats"],[251,47,284,45],[251,48,284,46,"cooldownReduction"],[251,65,284,63],[251,69,284,67,"newState"],[251,77,284,75],[251,78,284,76,"playerStats"],[251,89,284,87],[251,90,284,88,"cooldownReduction"],[252,12,285,10],[252,13,285,11],[253,10,286,8],[255,10,288,8],[256,10,289,8],[256,14,289,12,"game"],[256,18,289,16],[256,19,289,17,"gameState"],[256,28,289,26],[256,29,289,27,"isAlive"],[256,36,289,34],[256,40,289,38,"effectiveStats"],[256,54,289,52],[256,55,289,53,"health"],[256,61,289,59],[256,66,289,64,"effectiveStats"],[256,80,289,78],[256,81,289,79,"maxHealth"],[256,90,289,88],[256,94,290,12,"newState"],[256,102,290,20],[256,103,290,21,"playerStats"],[256,114,290,32],[256,115,290,33,"health"],[256,121,290,39],[256,126,290,44,"effectiveStats"],[256,140,290,58],[256,141,290,59,"health"],[256,147,290,65],[256,149,290,67],[257,12,291,10,"console"],[257,19,291,17],[257,20,291,18,"log"],[257,23,291,21],[257,24,291,22],[257,58,291,56,"newState"],[257,66,291,64],[257,67,291,65,"playerStats"],[257,78,291,76],[257,79,291,77,"health"],[257,85,291,83],[257,91,291,89,"effectiveStats"],[257,105,291,103],[257,106,291,104,"health"],[257,112,291,110],[257,149,291,147],[257,150,291,148],[258,12,292,10,"newState"],[258,20,292,18],[258,21,292,19,"playerStats"],[258,32,292,30],[258,33,292,31,"health"],[258,39,292,37],[258,42,292,40,"effectiveStats"],[258,56,292,54],[258,57,292,55,"health"],[258,63,292,61],[259,10,293,8],[260,8,294,6],[262,8,296,6],[263,8,297,6,"newState"],[263,16,297,14],[263,17,297,15,"enemies"],[263,24,297,22],[263,25,297,23,"forEach"],[263,32,297,30],[263,33,297,31,"enemy"],[263,38,297,36],[263,42,297,40],[264,10,298,8],[264,14,298,12],[264,15,298,13,"enemy"],[264,20,298,18],[264,21,298,19,"isBoss"],[264,27,298,25],[264,29,298,27],[265,12,298,29],[266,12,299,10],[267,12,300,10],[267,16,300,16,"MOVEMENT_SPEED"],[267,30,300,30],[267,33,300,33],[267,37,300,37],[267,38,300,38],[267,39,300,39],[268,12,301,10],[268,16,301,16,"SCREEN_WIDTH"],[268,28,301,28],[268,31,301,31],[268,34,301,34],[269,12,302,10],[269,16,302,16,"GAME_AREA_HEIGHT"],[269,32,302,32],[269,35,302,35],[269,38,302,38],[269,39,302,39],[269,40,302,40],[270,12,303,10],[270,16,303,16,"ENEMY_SIZE"],[270,26,303,26],[270,29,303,29],[270,31,303,31],[272,12,305,10],[273,12,306,10],[273,16,306,16,"playerX"],[273,23,306,23],[273,26,306,26,"currentNinjaPosition"],[273,46,306,46],[273,47,306,47,"x"],[273,48,306,48],[274,12,307,10],[274,16,307,16,"playerY"],[274,23,307,23],[274,26,307,26,"currentNinjaPosition"],[274,46,307,46],[274,47,307,47,"y"],[274,48,307,48],[276,12,309,10],[277,12,310,10],[277,16,310,16,"deltaX"],[277,22,310,22],[277,25,310,25,"playerX"],[277,32,310,32],[277,35,310,35,"enemy"],[277,40,310,40],[277,41,310,41,"position"],[277,49,310,49],[277,50,310,50,"x"],[277,51,310,51],[278,12,311,10],[278,16,311,16,"deltaY"],[278,22,311,22],[278,25,311,25,"playerY"],[278,32,311,32],[278,35,311,35,"enemy"],[278,40,311,40],[278,41,311,41,"position"],[278,49,311,49],[278,50,311,50,"y"],[278,51,311,51],[279,12,312,10],[279,16,312,16,"distance"],[279,24,312,24],[279,27,312,27,"Math"],[279,31,312,31],[279,32,312,32,"sqrt"],[279,36,312,36],[279,37,312,37,"deltaX"],[279,43,312,43],[279,46,312,46,"deltaX"],[279,52,312,52],[279,55,312,55,"deltaY"],[279,61,312,61],[279,64,312,64,"deltaY"],[279,70,312,70],[279,71,312,71],[281,12,314,10],[282,12,315,10],[282,16,315,16,"ATTACK_RANGE"],[282,28,315,28],[282,31,315,31],[282,33,315,33],[282,34,315,34],[282,35,315,35],[283,12,316,10],[283,16,316,16,"ATTACK_COOLDOWN"],[283,31,316,31],[283,34,316,34],[283,36,316,36],[283,37,316,37],[283,38,316,38],[285,12,318,10],[285,16,318,14,"distance"],[285,24,318,22],[285,28,318,26,"ATTACK_RANGE"],[285,40,318,38],[285,42,318,40],[286,14,319,12],[287,14,320,12],[287,18,320,16],[287,19,320,17,"enemy"],[287,24,320,22],[287,25,320,23,"lastAttackTick"],[287,39,320,37],[287,41,320,39,"enemy"],[287,46,320,44],[287,47,320,45,"lastAttackTick"],[287,61,320,59],[287,64,320,62],[287,65,320,63],[288,14,322,12],[288,18,322,16,"newState"],[288,26,322,24],[288,27,322,25,"currentTick"],[288,38,322,36],[288,41,322,39,"enemy"],[288,46,322,44],[288,47,322,45,"lastAttackTick"],[288,61,322,59],[288,65,322,63,"ATTACK_COOLDOWN"],[288,80,322,78],[288,82,322,80],[289,16,323,14],[290,16,324,14],[290,20,324,20,"isPlayerInvincible"],[290,38,324,38],[290,41,324,41,"game"],[290,45,324,45],[290,46,324,46,"gameState"],[290,55,324,55],[290,56,324,56,"isInvincible"],[290,68,324,68],[290,72,325,39,"game"],[290,76,325,43],[290,77,325,44,"gameState"],[290,86,325,53],[290,87,325,54,"invincibilityEndTime"],[290,107,325,74],[290,111,326,39,"Date"],[290,115,326,43],[290,116,326,44,"now"],[290,119,326,47],[290,120,326,48],[290,121,326,49],[290,124,326,52,"game"],[290,128,326,56],[290,129,326,57,"gameState"],[290,138,326,66],[290,139,326,67,"invincibilityEndTime"],[290,159,326,87],[291,16,328,14],[291,20,328,18,"isPlayerInvincible"],[291,38,328,36],[291,40,328,38],[292,18,329,16,"console"],[292,25,329,23],[292,26,329,24,"log"],[292,29,329,27],[292,30,329,28],[292,49,329,47,"enemy"],[292,54,329,52],[292,55,329,53,"name"],[292,59,329,57],[292,99,329,97],[292,100,329,98],[293,18,330,16],[294,18,331,16,"enemy"],[294,23,331,21],[294,24,331,22,"lastAttackTick"],[294,38,331,36],[294,41,331,39,"newState"],[294,49,331,47],[294,50,331,48,"currentTick"],[294,61,331,59],[295,16,332,14],[295,17,332,15],[295,23,332,21],[296,18,333,16],[297,18,334,16],[297,22,334,22,"baseAttack"],[297,32,334,32],[297,35,334,35,"enemy"],[297,40,334,40],[297,41,334,41,"stats"],[297,46,334,46],[297,47,334,47,"attack"],[297,53,334,53],[297,56,334,56],[297,59,334,59],[297,60,334,60],[297,61,334,61],[298,18,335,16],[298,22,335,22,"attackDamage"],[298,34,335,34],[298,37,335,37,"Math"],[298,41,335,41],[298,42,335,42,"floor"],[298,47,335,47],[298,48,335,48,"baseAttack"],[298,58,335,58],[298,62,335,62],[298,65,335,65],[298,68,335,68,"Math"],[298,72,335,72],[298,73,335,73,"random"],[298,79,335,79],[298,80,335,80],[298,81,335,81],[298,84,335,84],[298,87,335,87],[298,88,335,88],[298,89,335,89],[298,90,335,90],[298,91,335,91],[299,18,336,16],[299,22,336,22,"playerDefense"],[299,35,336,35],[299,38,336,38,"newState"],[299,46,336,46],[299,47,336,47,"playerStats"],[299,58,336,58],[299,59,336,59,"defense"],[299,66,336,66],[300,18,337,16],[300,22,337,22,"finalDamage"],[300,33,337,33],[300,36,337,36,"Math"],[300,40,337,40],[300,41,337,41,"max"],[300,44,337,44],[300,45,337,45],[300,46,337,46],[300,48,337,48,"attackDamage"],[300,60,337,60],[300,63,337,63,"Math"],[300,67,337,67],[300,68,337,68,"floor"],[300,73,337,73],[300,74,337,74,"playerDefense"],[300,87,337,87],[300,90,337,90],[300,93,337,93],[300,94,337,94],[300,95,337,95],[300,96,337,96],[300,97,337,97],[302,18,339,16,"console"],[302,25,339,23],[302,26,339,24,"log"],[302,29,339,27],[302,30,339,28],[302,51,339,49,"enemy"],[302,56,339,54],[302,57,339,55,"name"],[302,61,339,59],[302,84,339,82,"finalDamage"],[302,95,339,93],[302,107,339,105,"attackDamage"],[302,119,339,117],[302,130,339,128,"Math"],[302,134,339,132],[302,135,339,133,"floor"],[302,140,339,138],[302,141,339,139,"playerDefense"],[302,154,339,152],[302,157,339,155],[302,160,339,158],[302,161,339,159],[302,182,339,180],[302,183,339,181],[304,18,341,16],[305,18,342,16],[305,22,342,22,"newPlayerHealth"],[305,37,342,37],[305,40,342,40,"Math"],[305,44,342,44],[305,45,342,45,"max"],[305,48,342,48],[305,49,342,49],[305,50,342,50],[305,52,342,52,"newState"],[305,60,342,60],[305,61,342,61,"playerStats"],[305,72,342,72],[305,73,342,73,"health"],[305,79,342,79],[305,82,342,82,"finalDamage"],[305,93,342,93],[305,94,342,94],[306,18,343,16,"newState"],[306,26,343,24],[306,27,343,25,"playerStats"],[306,38,343,36],[306,39,343,37,"health"],[306,45,343,43],[306,48,343,46,"newPlayerHealth"],[306,63,343,61],[307,18,345,16,"console"],[307,25,345,23],[307,26,345,24,"log"],[307,29,345,27],[307,30,345,28],[307,51,345,49,"newState"],[307,59,345,57],[307,60,345,58,"playerStats"],[307,71,345,69],[307,72,345,70,"health"],[307,78,345,76],[307,82,345,80,"newState"],[307,90,345,88],[307,91,345,89,"playerStats"],[307,102,345,100],[307,103,345,101,"maxHealth"],[307,112,345,110],[307,122,345,120,"finalDamage"],[307,133,345,131],[307,143,345,141],[307,144,345,142],[309,18,347,16],[310,18,348,16,"enemy"],[310,23,348,21],[310,24,348,22,"lastAttackTick"],[310,38,348,36],[310,41,348,39,"newState"],[310,49,348,47],[310,50,348,48,"currentTick"],[310,61,348,59],[312,18,350,16],[313,18,351,16],[313,22,351,20,"newPlayerHealth"],[313,37,351,35],[313,41,351,39],[313,42,351,40],[313,44,351,42],[314,20,352,18,"console"],[314,27,352,25],[314,28,352,26,"log"],[314,31,352,29],[314,32,352,30],[314,82,352,80],[314,83,352,81],[315,20,353,18],[316,20,354,18,"setTimeout"],[316,30,354,28],[316,31,354,29],[316,37,354,35],[317,22,355,20],[318,22,356,20,"game"],[318,26,356,24],[318,27,356,25,"updateGameState"],[318,42,356,40],[318,43,356,41],[319,24,356,43,"isAlive"],[319,31,356,50],[319,33,356,52],[320,22,356,58],[320,23,356,59],[320,24,356,60],[321,20,357,18],[321,21,357,19],[321,23,357,21],[321,26,357,24],[321,27,357,25],[322,18,358,16],[323,16,359,14],[324,14,360,12],[325,12,361,10],[325,13,361,11],[325,19,361,17],[326,14,362,12],[327,14,363,12],[328,14,364,12],[328,18,364,16,"distance"],[328,26,364,24],[328,29,364,27],[328,31,364,29],[328,33,364,31],[329,16,365,14],[330,16,366,14],[330,20,366,20,"normalizedX"],[330,31,366,31],[330,34,366,34,"deltaX"],[330,40,366,40],[330,43,366,43,"distance"],[330,51,366,51],[331,16,367,14],[331,20,367,20,"normalizedY"],[331,31,367,31],[331,34,367,34,"deltaY"],[331,40,367,40],[331,43,367,43,"distance"],[331,51,367,51],[333,16,369,14],[334,16,370,14],[334,20,370,20,"randomFactor"],[334,32,370,32],[334,35,370,35],[334,38,370,38],[334,39,370,39],[334,40,370,40],[335,16,371,14],[335,20,371,20,"finalX"],[335,26,371,26],[335,29,371,29,"normalizedX"],[335,40,371,40],[335,43,371,43],[335,44,371,44,"Math"],[335,48,371,48],[335,49,371,49,"random"],[335,55,371,55],[335,56,371,56],[335,57,371,57],[335,60,371,60],[335,63,371,63],[335,67,371,67,"randomFactor"],[335,79,371,79],[336,16,372,14],[336,20,372,20,"finalY"],[336,26,372,26],[336,29,372,29,"normalizedY"],[336,40,372,40],[336,43,372,43],[336,44,372,44,"Math"],[336,48,372,48],[336,49,372,49,"random"],[336,55,372,55],[336,56,372,56],[336,57,372,57],[336,60,372,60],[336,63,372,63],[336,67,372,67,"randomFactor"],[336,79,372,79],[338,16,374,14],[339,16,375,14],[339,20,375,18,"newX"],[339,24,375,22],[339,27,375,25,"enemy"],[339,32,375,30],[339,33,375,31,"position"],[339,41,375,39],[339,42,375,40,"x"],[339,43,375,41],[339,46,375,45,"finalX"],[339,52,375,51],[339,55,375,54,"MOVEMENT_SPEED"],[339,69,375,69],[340,16,376,14],[340,20,376,18,"newY"],[340,24,376,22],[340,27,376,25,"enemy"],[340,32,376,30],[340,33,376,31,"position"],[340,41,376,39],[340,42,376,40,"y"],[340,43,376,41],[340,46,376,45,"finalY"],[340,52,376,51],[340,55,376,54,"MOVEMENT_SPEED"],[340,69,376,69],[342,16,378,14],[343,16,379,14,"newX"],[343,20,379,18],[343,23,379,21,"Math"],[343,27,379,25],[343,28,379,26,"max"],[343,31,379,29],[343,32,379,30],[343,33,379,31],[343,35,379,33,"Math"],[343,39,379,37],[343,40,379,38,"min"],[343,43,379,41],[343,44,379,42,"SCREEN_WIDTH"],[343,56,379,54],[343,59,379,57,"ENEMY_SIZE"],[343,69,379,67],[343,71,379,69,"newX"],[343,75,379,73],[343,76,379,74],[343,77,379,75],[344,16,380,14,"newY"],[344,20,380,18],[344,23,380,21,"Math"],[344,27,380,25],[344,28,380,26,"max"],[344,31,380,29],[344,32,380,30],[344,33,380,31],[344,35,380,33,"Math"],[344,39,380,37],[344,40,380,38,"min"],[344,43,380,41],[344,44,380,42,"GAME_AREA_HEIGHT"],[344,60,380,58],[344,63,380,61,"ENEMY_SIZE"],[344,73,380,71],[344,75,380,73,"newY"],[344,79,380,77],[344,80,380,78],[344,81,380,79],[346,16,382,14],[347,16,383,14,"enemy"],[347,21,383,19],[347,22,383,20,"position"],[347,30,383,28],[347,31,383,29,"x"],[347,32,383,30],[347,35,383,33,"newX"],[347,39,383,37],[348,16,384,14,"enemy"],[348,21,384,19],[348,22,384,20,"position"],[348,30,384,28],[348,31,384,29,"y"],[348,32,384,30],[348,35,384,33,"newY"],[348,39,384,37],[349,14,385,12],[350,14,386,12],[351,12,387,10],[352,10,388,8],[353,8,389,6],[353,9,389,7],[353,10,389,8],[355,8,391,6],[356,8,392,6],[357,8,393,6],[357,12,393,10,"newState"],[357,20,393,18],[357,21,393,19,"shadowClone"],[357,32,393,30],[357,34,393,32],[358,10,394,8],[359,10,395,8,"newState"],[359,18,395,16],[359,19,395,17,"shadowClone"],[359,30,395,28],[359,31,395,29,"remainingTicks"],[359,45,395,43],[359,47,395,45],[361,10,397,8],[362,10,398,8],[362,14,398,14,"cloneOffset"],[362,25,398,25],[362,28,398,28],[362,30,398,30],[362,31,398,31],[362,32,398,32],[363,10,399,8,"newState"],[363,18,399,16],[363,19,399,17,"shadowClone"],[363,30,399,28],[363,31,399,29,"position"],[363,39,399,37],[363,40,399,38,"x"],[363,41,399,39],[363,44,399,42,"currentNinjaPosition"],[363,64,399,62],[363,65,399,63,"x"],[363,66,399,64],[363,69,399,67,"cloneOffset"],[363,80,399,78],[364,10,400,8,"newState"],[364,18,400,16],[364,19,400,17,"shadowClone"],[364,30,400,28],[364,31,400,29,"position"],[364,39,400,37],[364,40,400,38,"y"],[364,41,400,39],[364,44,400,42,"currentNinjaPosition"],[364,64,400,62],[364,65,400,63,"y"],[364,66,400,64],[364,69,400,67],[364,71,400,69],[366,10,402,8],[367,10,403,8],[367,14,403,12,"newState"],[367,22,403,20],[367,23,403,21,"shadowClone"],[367,34,403,32],[367,35,403,33,"remainingTicks"],[367,49,403,47],[367,53,403,51],[367,54,403,52],[367,56,403,54],[368,12,404,10,"console"],[368,19,404,17],[368,20,404,18,"log"],[368,23,404,21],[368,24,404,22],[368,75,404,73],[368,76,404,74],[369,12,405,10,"newState"],[369,20,405,18],[369,21,405,19,"shadowClone"],[369,32,405,30],[369,35,405,33,"undefined"],[369,44,405,42],[370,10,406,8],[370,11,406,9],[370,17,406,15],[371,12,407,10],[372,12,408,10],[373,12,409,10],[373,16,409,16,"CLONE_ATTACK_INTERVAL"],[373,37,409,37],[373,40,409,40],[373,42,409,42],[374,12,410,10],[374,16,410,14,"newState"],[374,24,410,22],[374,25,410,23,"currentTick"],[374,36,410,34],[374,39,410,37,"CLONE_ATTACK_INTERVAL"],[374,60,410,58],[374,65,410,63],[374,66,410,64],[374,70,410,68,"newState"],[374,78,410,76],[374,79,410,77,"enemies"],[374,86,410,84],[374,87,410,85,"length"],[374,93,410,91],[374,96,410,94],[374,97,410,95],[374,99,410,97],[375,14,411,12,"console"],[375,21,411,19],[375,22,411,20,"log"],[375,25,411,23],[375,26,411,24],[375,83,411,81],[375,84,411,82],[377,14,413,12],[378,14,414,12],[378,18,414,18,"target"],[378,24,414,24],[378,27,414,27,"findClosestEnemyInternal"],[378,51,414,51],[378,52,414,52,"newState"],[378,60,414,60],[378,61,414,61,"enemies"],[378,68,414,68],[378,69,414,69],[379,14,415,12],[379,18,415,16,"target"],[379,24,415,22],[379,26,415,24],[380,16,416,14],[381,16,417,14],[381,20,417,20,"cloneDamage"],[381,31,417,31],[381,34,417,34,"Math"],[381,38,417,38],[381,39,417,39,"floor"],[381,44,417,44],[381,45,417,45,"newState"],[381,53,417,53],[381,54,417,54,"playerStats"],[381,65,417,65],[381,66,417,66,"attack"],[381,72,417,72],[381,75,417,75],[381,78,417,78],[381,79,417,79],[383,16,419,14],[384,16,420,14,"createProjectile"],[384,32,420,30],[384,33,420,31,"target"],[384,39,420,37],[384,41,420,39,"cloneDamage"],[384,52,420,50],[384,54,420,52,"newState"],[384,62,420,60],[384,63,420,61,"shadowClone"],[384,74,420,72],[384,75,420,73,"position"],[384,83,420,81],[384,85,420,83],[385,18,421,16,"id"],[385,20,421,18],[385,22,421,20],[385,43,421,41],[386,18,422,16,"name"],[386,22,422,20],[386,24,422,22],[386,45,422,43],[387,18,423,16,"icon"],[387,22,423,20],[387,24,423,22],[388,16,424,14],[388,17,424,15],[388,18,424,16],[389,14,425,12],[390,12,426,10],[391,10,427,8],[392,8,428,6],[394,8,430,6],[395,8,431,6],[395,12,431,10],[395,13,431,11,"isManualControlActive"],[395,34,431,32],[395,36,431,34],[396,10,432,8],[396,15,432,13],[396,19,432,17,"i"],[396,20,432,18],[396,23,432,21],[396,24,432,22],[396,26,432,24,"i"],[396,27,432,25],[396,30,432,28],[396,31,432,29],[396,33,432,31,"i"],[396,34,432,32],[396,36,432,34],[396,38,432,36],[397,12,433,10],[397,16,433,14,"newState"],[397,24,433,22],[397,25,433,23,"abilityManager"],[397,39,433,37],[397,40,433,38,"isAbilityReady"],[397,54,433,52],[397,55,433,53,"i"],[397,56,433,54],[397,57,433,55],[397,61,433,59,"newState"],[397,69,433,67],[397,70,433,68,"enemies"],[397,77,433,75],[397,78,433,76,"length"],[397,84,433,82],[397,87,433,85],[397,88,433,86],[397,90,433,88],[398,14,434,12],[398,18,434,16,"newState"],[398,26,434,24],[398,27,434,25,"abilityManager"],[398,41,434,39],[398,42,434,40,"useAbility"],[398,52,434,50],[398,53,434,51,"i"],[398,54,434,52],[398,56,434,54,"newTick"],[398,63,434,61],[398,64,434,62],[398,66,434,64],[399,16,435,14,"castAbility"],[399,27,435,25],[399,28,435,26,"newState"],[399,36,435,34],[399,38,435,36,"i"],[399,39,435,37],[399,40,435,38],[400,14,436,12],[401,12,437,10],[402,10,438,8],[403,8,439,6],[405,8,441,6],[406,8,442,6],[406,12,442,12,"deadEnemies"],[406,23,442,23],[406,26,442,26,"newState"],[406,34,442,34],[406,35,442,35,"enemies"],[406,42,442,42],[406,43,442,43,"filter"],[406,49,442,49],[406,50,442,50,"enemy"],[406,55,442,55],[406,59,442,59,"enemy"],[406,64,442,64],[406,65,442,65,"health"],[406,71,442,71],[406,75,442,75],[406,76,442,76],[406,77,442,77],[407,8,443,6,"enemiesToKill"],[407,21,443,19],[407,24,443,22],[407,25,443,23],[407,28,443,26,"deadEnemies"],[407,39,443,37],[407,40,443,38],[407,41,443,39],[407,42,443,40],[409,8,445,6],[410,8,446,6],[410,12,446,10,"deadEnemies"],[410,23,446,21],[410,24,446,22,"length"],[410,30,446,28],[410,33,446,31],[410,34,446,32],[410,36,446,34],[411,10,447,8,"console"],[411,17,447,15],[411,18,447,16,"log"],[411,21,447,19],[411,22,447,20],[411,49,447,47,"deadEnemies"],[411,60,447,58],[411,61,447,59,"length"],[411,67,447,65],[411,83,447,81],[411,85,447,83,"deadEnemies"],[411,96,447,94],[411,97,447,95,"map"],[411,100,447,98],[411,101,447,99,"e"],[411,102,447,100],[411,106,447,104],[411,109,447,107,"e"],[411,110,447,108],[411,111,447,109,"id"],[411,113,447,111],[411,117,447,115,"e"],[411,118,447,116],[411,119,447,117,"health"],[411,125,447,123],[411,130,447,128],[411,131,447,129],[411,132,447,130],[412,8,448,6],[414,8,450,6],[415,8,451,6],[415,12,451,12,"lowHealthEnemies"],[415,28,451,28],[415,31,451,31,"newState"],[415,39,451,39],[415,40,451,40,"enemies"],[415,47,451,47],[415,48,451,48,"filter"],[415,54,451,54],[415,55,451,55,"enemy"],[415,60,451,60],[415,64,451,64,"enemy"],[415,69,451,69],[415,70,451,70,"health"],[415,76,451,76],[415,80,451,80],[415,82,451,82],[415,86,451,86,"enemy"],[415,91,451,91],[415,92,451,92,"health"],[415,98,451,98],[415,101,451,101],[415,102,451,102],[415,103,451,103],[416,8,452,6],[416,12,452,10,"lowHealthEnemies"],[416,28,452,26],[416,29,452,27,"length"],[416,35,452,33],[416,38,452,36],[416,39,452,37],[416,41,452,39],[417,10,453,8,"console"],[417,17,453,15],[417,18,453,16,"log"],[417,21,453,19],[417,22,453,20],[417,61,453,59],[417,63,453,61,"lowHealthEnemies"],[417,79,453,77],[417,80,453,78,"map"],[417,83,453,81],[417,84,453,82,"e"],[417,85,453,83],[417,89,453,87],[417,92,453,90,"e"],[417,93,453,91],[417,94,453,92,"id"],[417,96,453,94],[417,100,453,98,"e"],[417,101,453,99],[417,102,453,100,"health"],[417,108,453,106],[417,112,453,110,"e"],[417,113,453,111],[417,114,453,112,"maxHealth"],[417,123,453,121],[417,128,453,126],[417,129,453,127],[417,130,453,128],[418,8,454,6],[420,8,456,6],[421,8,457,6],[421,12,457,12,"beforeCount"],[421,23,457,23],[421,26,457,26,"newState"],[421,34,457,34],[421,35,457,35,"enemies"],[421,42,457,42],[421,43,457,43,"length"],[421,49,457,49],[422,8,458,6,"newState"],[422,16,458,14],[422,17,458,15,"enemies"],[422,24,458,22],[422,27,458,25,"newState"],[422,35,458,33],[422,36,458,34,"enemies"],[422,43,458,41],[422,44,458,42,"filter"],[422,50,458,48],[422,51,458,49,"enemy"],[422,56,458,54],[422,60,458,58,"enemy"],[422,65,458,63],[422,66,458,64,"health"],[422,72,458,70],[422,75,458,73],[422,76,458,74],[422,77,458,75],[423,8,459,6],[423,12,459,12,"afterCount"],[423,22,459,22],[423,25,459,25,"newState"],[423,33,459,33],[423,34,459,34,"enemies"],[423,41,459,41],[423,42,459,42,"length"],[423,48,459,48],[424,8,461,6],[424,12,461,10,"beforeCount"],[424,23,461,21],[424,28,461,26,"afterCount"],[424,38,461,36],[424,40,461,38],[425,10,462,8,"console"],[425,17,462,15],[425,18,462,16,"log"],[425,21,462,19],[425,22,462,20],[425,52,462,50,"beforeCount"],[425,63,462,61],[425,66,462,64,"afterCount"],[425,76,462,74],[425,102,462,100],[425,103,462,101],[426,8,463,6],[428,8,465,6],[429,8,466,6],[430,8,467,6],[430,12,467,12,"MAX_ENEMIES"],[430,23,467,23],[430,26,467,26],[430,28,467,28],[430,29,467,29],[430,30,467,30],[431,8,468,6],[431,12,468,12,"MIN_SPAWN_DELAY"],[431,27,468,27],[431,30,468,30],[431,33,468,33],[431,34,468,34],[431,35,468,35],[432,8,469,6],[432,12,469,12,"now"],[432,15,469,15],[432,18,469,18,"Date"],[432,22,469,22],[432,23,469,23,"now"],[432,26,469,26],[432,27,469,27],[432,28,469,28],[433,8,470,6],[433,12,470,12,"hasBoss"],[433,19,470,19],[433,22,470,22,"newState"],[433,30,470,30],[433,31,470,31,"enemies"],[433,38,470,38],[433,39,470,39,"some"],[433,43,470,43],[433,44,470,44,"enemy"],[433,49,470,49],[433,53,470,53,"enemy"],[433,58,470,58],[433,59,470,59,"isBoss"],[433,65,470,65],[433,66,470,66],[435,8,472,6],[436,8,473,6],[436,12,473,10],[436,13,473,11,"newState"],[436,21,473,19],[436,22,473,20,"lastSpawnTime"],[436,35,473,33],[436,37,473,35],[437,10,474,8,"newState"],[437,18,474,16],[437,19,474,17,"lastSpawnTime"],[437,32,474,30],[437,35,474,33,"now"],[437,38,474,36],[438,8,475,6],[439,8,477,6,"console"],[439,15,477,13],[439,16,477,14,"log"],[439,19,477,17],[439,20,477,18],[439,53,477,51,"newState"],[439,61,477,59],[439,62,477,60,"enemies"],[439,69,477,67],[439,70,477,68,"length"],[439,76,477,74],[439,85,477,83,"MAX_ENEMIES"],[439,96,477,94],[439,109,477,107,"hasBoss"],[439,116,477,114],[439,118,477,116],[439,119,477,117],[441,8,479,6],[442,8,480,6],[442,12,480,10],[442,13,480,11,"hasBoss"],[442,20,480,18],[442,24,480,22,"newState"],[442,32,480,30],[442,33,480,31,"enemies"],[442,40,480,38],[442,41,480,39,"length"],[442,47,480,45],[442,50,480,48,"MAX_ENEMIES"],[442,61,480,59],[442,65,480,64,"now"],[442,68,480,67],[442,71,480,70,"newState"],[442,79,480,78],[442,80,480,79,"lastSpawnTime"],[442,93,480,92],[442,97,480,97,"MIN_SPAWN_DELAY"],[442,112,480,112],[442,114,480,114],[443,10,481,8,"console"],[443,17,481,15],[443,18,481,16,"log"],[443,21,481,19],[443,22,481,20],[443,43,481,41,"newState"],[443,51,481,49],[443,52,481,50,"enemies"],[443,59,481,57],[443,60,481,58,"length"],[443,66,481,64],[443,69,481,67],[443,70,481,68],[443,74,481,72,"MAX_ENEMIES"],[443,85,481,83],[443,87,481,85],[443,88,481,86],[444,10,482,8,"spawnTestEnemy"],[444,24,482,22],[444,25,482,23,"newState"],[444,33,482,31],[444,34,482,32],[445,10,483,8,"newState"],[445,18,483,16],[445,19,483,17,"lastSpawnTime"],[445,32,483,30],[445,35,483,33,"now"],[445,38,483,36],[446,8,484,6],[447,8,486,6],[447,15,486,13,"newState"],[447,23,486,21],[448,6,487,4],[448,7,487,5],[448,47,487,6],[450,6,489,4],[451,6,490,4,"console"],[451,13,490,11],[451,14,490,12,"log"],[451,17,490,15],[451,18,490,16],[451,50,490,48,"enemiesToKill"],[451,63,490,61],[451,64,490,62,"length"],[451,70,490,68],[451,101,490,99],[451,102,490,100],[452,6,492,4,"enemiesToKill"],[452,19,492,17],[452,20,492,18,"forEach"],[452,27,492,25],[452,28,492,26],[452,29,492,27,"enemy"],[452,34,492,32],[452,36,492,34,"index"],[452,41,492,39],[452,46,492,44],[453,8,493,6,"console"],[453,15,493,13],[453,16,493,14,"log"],[453,19,493,17],[453,20,493,18],[453,57,493,55,"index"],[453,62,493,60],[453,65,493,63],[453,66,493,64],[453,70,493,68,"enemiesToKill"],[453,83,493,81],[453,84,493,82,"length"],[453,90,493,88],[453,104,493,102,"enemy"],[453,109,493,107],[453,110,493,108,"id"],[453,112,493,110],[453,114,493,112],[453,115,493,113],[454,8,494,6,"handleEnemyKill"],[454,23,494,21],[454,24,494,22,"enemy"],[454,29,494,27],[454,30,494,28],[455,6,495,4],[455,7,495,5],[455,8,495,6],[456,4,496,2],[456,5,496,3],[456,7,496,5],[456,8,496,6,"handleEnemyKill"],[456,23,496,21],[456,24,496,22],[456,25,496,23],[456,26,496,24],[456,27,496,25],[458,4,498,2],[459,4,499,2],[459,8,499,8,"findClosestEnemyInternal"],[459,32,499,32],[459,35,499,36,"enemies"],[459,42,499,58],[459,46,499,83],[460,6,500,4],[460,10,500,8,"enemies"],[460,17,500,15],[460,18,500,16,"length"],[460,24,500,22],[460,29,500,27],[460,30,500,28],[460,32,500,30],[460,39,500,37],[460,43,500,41],[462,6,502,4],[463,6,503,4],[463,10,503,10,"SCREEN_WIDTH"],[463,22,503,22],[463,25,503,25],[463,28,503,28],[464,6,504,4],[464,10,504,10,"GAME_AREA_HEIGHT"],[464,26,504,26],[464,29,504,29],[464,32,504,32],[464,35,504,35],[464,38,504,38],[464,39,504,39],[464,40,504,40],[465,6,505,4],[465,10,505,10,"ninjaX"],[465,16,505,16],[465,19,505,19,"SCREEN_WIDTH"],[465,31,505,31],[465,34,505,34],[465,35,505,35],[466,6,506,4],[466,10,506,10,"ninjaY"],[466,16,506,16],[466,19,506,19,"GAME_AREA_HEIGHT"],[466,35,506,35],[466,38,506,38],[466,39,506,39],[467,6,508,4],[467,10,508,8,"closestEnemy"],[467,22,508,20],[467,25,508,23,"enemies"],[467,32,508,30],[467,33,508,31],[467,34,508,32],[467,35,508,33],[468,6,509,4],[468,10,509,8,"closestDistance"],[468,25,509,23],[468,28,509,26,"Infinity"],[468,36,509,34],[469,6,511,4,"enemies"],[469,13,511,11],[469,14,511,12,"forEach"],[469,21,511,19],[469,22,511,20,"enemy"],[469,27,511,25],[469,31,511,29],[470,8,512,6],[470,12,512,12,"distance"],[470,20,512,20],[470,23,512,23,"Math"],[470,27,512,27],[470,28,512,28,"sqrt"],[470,32,512,32],[470,33,513,8,"Math"],[470,37,513,12],[470,38,513,13,"pow"],[470,41,513,16],[470,42,513,17,"enemy"],[470,47,513,22],[470,48,513,23,"position"],[470,56,513,31],[470,57,513,32,"x"],[470,58,513,33],[470,61,513,36,"ninjaX"],[470,67,513,42],[470,69,513,44],[470,70,513,45],[470,71,513,46],[470,74,514,8,"Math"],[470,78,514,12],[470,79,514,13,"pow"],[470,82,514,16],[470,83,514,17,"enemy"],[470,88,514,22],[470,89,514,23,"position"],[470,97,514,31],[470,98,514,32,"y"],[470,99,514,33],[470,102,514,36,"ninjaY"],[470,108,514,42],[470,110,514,44],[470,111,514,45],[470,112,515,6],[470,113,515,7],[471,8,517,6],[471,12,517,10,"distance"],[471,20,517,18],[471,23,517,21,"closestDistance"],[471,38,517,36],[471,40,517,38],[472,10,518,8,"closestDistance"],[472,25,518,23],[472,28,518,26,"distance"],[472,36,518,34],[473,10,519,8,"closestEnemy"],[473,22,519,20],[473,25,519,23,"enemy"],[473,30,519,28],[474,8,520,6],[475,6,521,4],[475,7,521,5],[475,8,521,6],[476,6,523,4,"console"],[476,13,523,11],[476,14,523,12,"log"],[476,17,523,15],[476,18,523,16],[476,60,523,58,"closestDistance"],[476,75,523,73],[476,76,523,74,"toFixed"],[476,83,523,81],[476,84,523,82],[476,85,523,83],[476,86,523,84],[476,88,523,86],[476,89,523,87],[477,6,524,4],[477,13,524,11,"closestEnemy"],[477,25,524,23],[478,4,525,2],[478,5,525,3],[480,4,527,2],[481,4,528,2],[481,8,528,8,"findClosestEnemy"],[481,24,528,24],[481,27,528,27,"findClosestEnemy"],[481,28,528,27],[481,33,528,53],[482,6,529,4],[482,13,529,11,"findClosestEnemyInternal"],[482,37,529,35],[482,38,529,36,"combatState"],[482,49,529,47],[482,50,529,48,"enemies"],[482,57,529,55],[482,58,529,56],[483,4,530,2],[483,5,530,3],[485,4,532,2],[486,4,533,2],[486,8,533,2,"_useState7"],[486,18,533,2],[486,21,533,58],[486,25,533,58,"useState"],[486,31,533,66],[486,32,533,66,"useState"],[486,40,533,66],[486,42,533,91],[487,8,533,93,"x"],[487,9,533,94],[487,11,533,96],[487,12,533,97],[488,8,533,99,"y"],[488,9,533,100],[488,11,533,102],[489,6,533,104],[489,7,533,105],[489,8,533,106],[490,6,533,106,"_useState8"],[490,16,533,106],[490,23,533,106,"_slicedToArray"],[490,37,533,106],[490,38,533,106,"default"],[490,45,533,106],[490,47,533,106,"_useState7"],[490,57,533,106],[491,6,533,9,"currentNinjaPosition"],[491,26,533,29],[491,29,533,29,"_useState8"],[491,39,533,29],[492,6,533,31,"setCurrentNinjaPosition"],[492,29,533,54],[492,32,533,54,"_useState8"],[492,42,533,54],[493,4,534,2],[493,8,534,2,"_useState9"],[493,18,534,2],[493,21,534,60],[493,25,534,60,"useState"],[493,31,534,68],[493,32,534,68,"useState"],[493,40,534,68],[493,42,534,69],[493,47,534,74],[493,48,534,75],[494,6,534,75,"_useState0"],[494,16,534,75],[494,23,534,75,"_slicedToArray"],[494,37,534,75],[494,38,534,75,"default"],[494,45,534,75],[494,47,534,75,"_useState9"],[494,57,534,75],[495,6,534,9,"isManualControlActive"],[495,27,534,30],[495,30,534,30,"_useState0"],[495,40,534,30],[496,6,534,32,"setIsManualControlActive"],[496,30,534,56],[496,33,534,56,"_useState0"],[496,43,534,56],[498,4,536,2],[499,4,537,2],[499,8,537,8,"updateNinjaPosition"],[499,27,537,27],[499,30,537,30],[499,34,537,30,"useCallback"],[499,40,537,41],[499,41,537,41,"useCallback"],[499,52,537,41],[499,54,537,43,"newPosition"],[499,65,537,78],[499,69,537,83],[500,6,538,4,"setCurrentNinjaPosition"],[500,29,538,27],[500,30,538,28,"newPosition"],[500,41,538,39],[500,42,538,40],[501,4,539,2],[501,5,539,3],[501,7,539,5],[501,9,539,7],[501,10,539,8],[503,4,541,2],[504,4,542,2],[504,8,542,8,"setManualControlActive"],[504,30,542,30],[504,33,542,33],[504,37,542,33,"useCallback"],[504,43,542,44],[504,44,542,44,"useCallback"],[504,55,542,44],[504,57,542,46,"active"],[504,63,542,61],[504,67,542,66],[505,6,543,4,"setIsManualControlActive"],[505,30,543,28],[505,31,543,29,"active"],[505,37,543,35],[505,38,543,36],[506,6,544,4,"console"],[506,13,544,11],[506,14,544,12,"log"],[506,17,544,15],[506,18,544,16],[506,39,544,37,"active"],[506,45,544,43],[506,48,544,46],[506,59,544,57],[506,62,544,60],[506,75,544,73],[506,88,544,86,"active"],[506,94,544,92],[506,97,544,95],[506,105,544,103],[506,108,544,106],[506,117,544,115],[506,119,544,117],[506,120,544,118],[507,4,545,2],[507,5,545,3],[507,7,545,5],[507,9,545,7],[507,10,545,8],[509,4,547,2],[510,4,548,2],[510,8,548,8,"handleProjectileHit"],[510,27,548,27],[510,30,548,31,"projectile"],[510,40,548,59],[510,44,548,64],[511,6,549,4,"console"],[511,13,549,11],[511,14,549,12,"log"],[511,17,549,15],[511,18,549,16],[511,35,549,33,"projectile"],[511,45,549,43],[511,46,549,44,"id"],[511,48,549,46],[511,62,549,60,"projectile"],[511,72,549,70],[511,73,549,71,"targetEnemyId"],[511,86,549,84],[511,94,549,92,"projectile"],[511,104,549,102],[511,105,549,103,"damage"],[511,111,549,109],[511,120,549,118],[511,121,549,119],[512,6,551,4,"setCombatState"],[512,20,551,18],[512,21,551,19,"prev"],[512,25,551,23],[512,29,551,27],[513,8,552,6],[513,12,552,12,"newState"],[513,20,552,20],[513,23,552,23],[514,10,552,25],[514,13,552,28,"prev"],[515,8,552,33],[515,9,552,34],[517,8,554,6],[518,8,555,6],[518,12,555,12,"enemyIndex"],[518,22,555,22],[518,25,555,25,"newState"],[518,33,555,33],[518,34,555,34,"enemies"],[518,41,555,41],[518,42,555,42,"findIndex"],[518,51,555,51],[518,52,555,52,"e"],[518,53,555,53],[518,57,555,57,"e"],[518,58,555,58],[518,59,555,59,"id"],[518,61,555,61],[518,66,555,66,"projectile"],[518,76,555,76],[518,77,555,77,"targetEnemyId"],[518,90,555,90],[518,91,555,91],[519,8,556,6],[519,12,556,10,"enemyIndex"],[519,22,556,20],[519,26,556,24],[519,27,556,25],[519,29,556,27],[520,10,557,8,"newState"],[520,18,557,16],[520,19,557,17,"enemies"],[520,26,557,24],[520,29,557,27],[520,30,557,28],[520,33,557,31,"newState"],[520,41,557,39],[520,42,557,40,"enemies"],[520,49,557,47],[520,50,557,48],[521,10,558,8,"newState"],[521,18,558,16],[521,19,558,17,"enemies"],[521,26,558,24],[521,27,558,25,"enemyIndex"],[521,37,558,35],[521,38,558,36],[521,41,558,39],[522,12,559,10],[522,15,559,13,"newState"],[522,23,559,21],[522,24,559,22,"enemies"],[522,31,559,29],[522,32,559,30,"enemyIndex"],[522,42,559,40],[522,43,559,41],[523,12,560,10,"health"],[523,18,560,16],[523,20,560,18,"newState"],[523,28,560,26],[523,29,560,27,"enemies"],[523,36,560,34],[523,37,560,35,"enemyIndex"],[523,47,560,45],[523,48,560,46],[523,49,560,47,"health"],[523,55,560,53],[523,58,560,56,"projectile"],[523,68,560,66],[523,69,560,67,"damage"],[523,75,560,73],[524,12,561,10,"lastDamaged"],[524,23,561,21],[524,25,561,23,"combatEngine"],[524,44,561,35],[524,45,561,35,"combatEngine"],[524,57,561,35],[524,58,561,36,"getCurrentTick"],[524,72,561,50],[524,73,561,51],[525,10,562,8],[525,11,562,9],[526,10,564,8,"console"],[526,17,564,15],[526,18,564,16,"log"],[526,21,564,19],[526,22,564,20],[526,34,564,32,"projectile"],[526,44,564,42],[526,45,564,43,"targetEnemyId"],[526,58,564,56],[526,70,564,68,"newState"],[526,78,564,76],[526,79,564,77,"enemies"],[526,86,564,84],[526,87,564,85,"enemyIndex"],[526,97,564,95],[526,98,564,96],[526,99,564,97,"health"],[526,105,564,103],[526,109,564,107,"newState"],[526,117,564,115],[526,118,564,116,"enemies"],[526,125,564,123],[526,126,564,124,"enemyIndex"],[526,136,564,134],[526,137,564,135],[526,138,564,136,"maxHealth"],[526,147,564,145],[526,149,564,147],[526,150,564,148],[527,8,565,6],[528,8,567,6],[528,15,567,13,"newState"],[528,23,567,21],[529,6,568,4],[529,7,568,5],[529,8,568,6],[531,6,570,4],[532,6,571,4,"setProjectiles"],[532,20,571,18],[532,21,571,19,"prev"],[532,25,571,23],[532,29,571,27,"prev"],[532,33,571,31],[532,34,571,32,"filter"],[532,40,571,38],[532,41,571,39,"p"],[532,42,571,40],[532,46,571,44,"p"],[532,47,571,45],[532,48,571,46,"id"],[532,50,571,48],[532,55,571,53,"projectile"],[532,65,571,63],[532,66,571,64,"id"],[532,68,571,66],[532,69,571,67],[532,70,571,68],[533,4,572,2],[533,5,572,3],[535,4,574,2],[536,4,575,2],[536,8,575,8,"castAbility"],[536,19,575,19],[536,22,575,22,"castAbility"],[536,23,575,23,"state"],[536,28,575,41],[536,30,575,43,"slotIndex"],[536,39,575,60],[536,44,575,65],[537,6,576,4],[537,10,576,10,"deck"],[537,14,576,14],[537,17,576,17,"state"],[537,22,576,22],[537,23,576,23,"abilityManager"],[537,37,576,37],[537,38,576,38,"getDeck"],[537,45,576,45],[537,46,576,46],[537,47,576,47],[538,6,577,4],[538,10,577,10,"ability"],[538,17,577,17],[538,20,577,20,"deck"],[538,24,577,24],[538,25,577,25,"slots"],[538,30,577,30],[538,31,577,31,"slotIndex"],[538,40,577,40],[538,41,577,41],[539,6,578,4],[539,10,578,8],[539,11,578,9,"ability"],[539,18,578,16],[539,20,578,18],[541,6,580,4],[542,6,581,4],[542,10,581,8,"damage"],[542,16,581,14],[542,19,581,17,"ability"],[542,26,581,24],[542,27,581,25,"stats"],[542,32,581,30],[542,33,581,31,"baseDamage"],[542,43,581,41],[544,6,583,4],[545,6,584,4,"deck"],[545,10,584,8],[545,11,584,9,"activeSynergies"],[545,26,584,24],[545,27,584,25,"forEach"],[545,34,584,32],[545,35,584,33,"synergy"],[545,42,584,40],[545,46,584,44],[546,8,585,6],[546,12,585,10,"synergy"],[546,19,585,17],[546,20,585,18,"bonus"],[546,25,585,23],[546,26,585,24,"damageBonus"],[546,37,585,35],[546,41,586,10,"synergy"],[546,48,586,17],[546,49,586,18,"requiredTags"],[546,61,586,30],[546,62,586,31,"some"],[546,66,586,35],[546,67,586,36,"tag"],[546,70,586,39],[546,74,586,43,"ability"],[546,81,586,50],[546,82,586,51,"tags"],[546,86,586,55],[546,87,586,56,"includes"],[546,95,586,64],[546,96,586,65,"tag"],[546,99,586,68],[546,100,586,69],[546,101,586,70],[546,103,586,72],[547,10,587,8,"damage"],[547,16,587,14],[547,20,587,19],[547,21,587,20],[547,24,587,23,"synergy"],[547,31,587,30],[547,32,587,31,"bonus"],[547,37,587,36],[547,38,587,37,"damageBonus"],[547,49,587,48],[547,52,587,51],[547,55,587,55],[548,8,588,6],[549,6,589,4],[549,7,589,5],[549,8,589,6],[551,6,591,4],[552,6,592,4],[552,10,592,10,"isAOE"],[552,15,592,15],[552,18,592,18,"ability"],[552,25,592,25],[552,26,592,26,"effects"],[552,33,592,33],[552,34,592,34,"includes"],[552,42,592,42],[552,43,592,43],[552,48,592,48],[552,49,592,49],[552,53,592,53,"ability"],[552,60,592,60],[552,61,592,61,"stats"],[552,66,592,66],[552,67,592,67,"aoeRadius"],[552,76,592,76],[553,6,594,4],[553,10,594,8,"isAOE"],[553,15,594,13],[553,17,594,15],[554,8,595,6,"console"],[554,15,595,13],[554,16,595,14,"log"],[554,19,595,17],[554,20,595,18],[554,39,595,37,"ability"],[554,46,595,44],[554,47,595,45,"name"],[554,51,595,49],[554,67,595,65,"ability"],[554,74,595,72],[554,75,595,73,"stats"],[554,80,595,78],[554,81,595,79,"aoeRadius"],[554,90,595,88],[554,92,595,90],[554,93,595,91],[556,8,597,6],[557,8,598,6],[557,12,598,12,"ninjaX"],[557,18,598,18],[557,21,598,21,"currentNinjaPosition"],[557,41,598,41],[557,42,598,42,"x"],[557,43,598,43],[557,46,598,46],[557,48,598,48],[557,49,598,49],[557,50,598,50],[558,8,599,6],[558,12,599,12,"ninjaY"],[558,18,599,18],[558,21,599,21,"currentNinjaPosition"],[558,41,599,41],[558,42,599,42,"y"],[558,43,599,43],[558,46,599,46],[558,48,599,48],[559,8,600,6],[559,12,600,12,"aoeRadius"],[559,21,600,21],[559,24,600,24,"ability"],[559,31,600,31],[559,32,600,32,"stats"],[559,37,600,37],[559,38,600,38,"aoeRadius"],[559,47,600,47],[560,8,602,6],[560,12,602,12,"enemiesInRange"],[560,26,602,26],[560,29,602,29,"state"],[560,34,602,34],[560,35,602,35,"enemies"],[560,42,602,42],[560,43,602,43,"filter"],[560,49,602,49],[560,50,602,50,"enemy"],[560,55,602,55],[560,59,602,59],[561,10,603,8],[561,14,603,14,"enemyX"],[561,20,603,20],[561,23,603,23,"enemy"],[561,28,603,28],[561,29,603,29,"position"],[561,37,603,37],[561,38,603,38,"x"],[561,39,603,39],[561,42,603,42],[561,46,603,46],[561,47,603,47],[561,48,603,48],[562,10,604,8],[562,14,604,14,"enemyY"],[562,20,604,20],[562,23,604,23,"enemy"],[562,28,604,28],[562,29,604,29,"position"],[562,37,604,37],[562,38,604,38,"y"],[562,39,604,39],[562,42,604,42],[562,46,604,46],[563,10,605,8],[563,14,605,14,"distance"],[563,22,605,22],[563,25,605,25,"Math"],[563,29,605,29],[563,30,605,30,"sqrt"],[563,34,605,34],[563,35,605,35,"Math"],[563,39,605,39],[563,40,605,40,"pow"],[563,43,605,43],[563,44,605,44,"enemyX"],[563,50,605,50],[563,53,605,53,"ninjaX"],[563,59,605,59],[563,61,605,61],[563,62,605,62],[563,63,605,63],[563,66,605,66,"Math"],[563,70,605,70],[563,71,605,71,"pow"],[563,74,605,74],[563,75,605,75,"enemyY"],[563,81,605,81],[563,84,605,84,"ninjaY"],[563,90,605,90],[563,92,605,92],[563,93,605,93],[563,94,605,94],[563,95,605,95],[564,10,606,8],[564,17,606,15,"distance"],[564,25,606,23],[564,29,606,27,"aoeRadius"],[564,38,606,36],[565,8,607,6],[565,9,607,7],[565,10,607,8],[566,8,609,6,"console"],[566,15,609,13],[566,16,609,14,"log"],[566,19,609,17],[566,20,609,18],[566,45,609,43,"enemiesInRange"],[566,59,609,57],[566,60,609,58,"length"],[566,66,609,64],[566,88,609,86,"aoeRadius"],[566,97,609,95],[566,107,609,105],[566,108,609,106],[568,8,611,6],[569,8,612,6,"enemiesInRange"],[569,22,612,20],[569,23,612,21,"forEach"],[569,30,612,28],[569,31,612,29,"enemy"],[569,36,612,34],[569,40,612,38],[570,10,613,8],[570,14,613,14,"damageResult"],[570,26,613,26],[570,29,613,29,"DamageCalculator"],[570,48,613,45],[570,49,613,45,"DamageCalculator"],[570,65,613,45],[570,66,613,46,"calculateDamage"],[570,81,613,61],[570,82,613,62,"damage"],[570,88,613,68],[570,90,613,70,"state"],[570,95,613,75],[570,96,613,76,"playerStats"],[570,107,613,87],[570,109,613,89,"enemy"],[570,114,613,94],[570,115,613,95,"stats"],[570,120,613,100],[570,121,613,101],[571,10,614,8,"createProjectile"],[571,26,614,24],[571,27,614,25,"enemy"],[571,32,614,30],[571,34,614,32,"damageResult"],[571,46,614,44],[571,47,614,45,"damage"],[571,53,614,51],[571,55,614,53,"currentNinjaPosition"],[571,75,614,73],[571,77,614,75],[572,12,615,10,"id"],[572,14,615,12],[572,16,615,14,"ability"],[572,23,615,21],[572,24,615,22,"id"],[572,26,615,24],[573,12,616,10,"name"],[573,16,616,14],[573,18,616,16,"ability"],[573,25,616,23],[573,26,616,24,"name"],[573,30,616,28],[574,12,617,10,"icon"],[574,16,617,14],[574,18,617,16,"ability"],[574,25,617,23],[574,26,617,24,"icon"],[575,10,618,8],[575,11,618,9],[575,12,618,10],[576,10,620,8,"console"],[576,17,620,15],[576,18,620,16,"log"],[576,21,620,19],[576,22,620,20],[576,37,620,35,"enemy"],[576,42,620,40],[576,43,620,41,"name"],[576,47,620,45],[576,55,620,53,"damageResult"],[576,67,620,65],[576,68,620,66,"damage"],[576,74,620,72],[576,83,620,81],[576,84,620,82],[577,8,621,6],[577,9,621,7],[577,10,621,8],[578,8,623,6,"console"],[578,15,623,13],[578,16,623,14,"log"],[578,19,623,17],[578,20,623,18],[578,26,623,24,"ability"],[578,33,623,31],[578,34,623,32,"name"],[578,38,623,36],[578,56,623,54,"enemiesInRange"],[578,70,623,68],[578,71,623,69,"length"],[578,77,623,75],[578,93,623,91,"damage"],[578,99,623,97],[578,118,623,116],[578,119,623,117],[579,6,625,4],[579,7,625,5],[579,13,625,11],[580,8,626,6],[581,8,627,6],[581,12,627,12,"target"],[581,18,627,18],[581,21,627,21,"findClosestEnemyInternal"],[581,45,627,45],[581,46,627,46,"state"],[581,51,627,51],[581,52,627,52,"enemies"],[581,59,627,59],[581,60,627,60],[582,8,628,6],[582,12,628,10],[582,13,628,11,"target"],[582,19,628,17],[582,21,628,19],[583,8,630,6],[583,12,630,12,"damageResult"],[583,24,630,24],[583,27,630,27,"DamageCalculator"],[583,46,630,43],[583,47,630,43,"DamageCalculator"],[583,63,630,43],[583,64,630,44,"calculateDamage"],[583,79,630,59],[583,80,630,60,"damage"],[583,86,630,66],[583,88,630,68,"state"],[583,93,630,73],[583,94,630,74,"playerStats"],[583,105,630,85],[583,107,630,87,"target"],[583,113,630,93],[583,114,630,94,"stats"],[583,119,630,99],[583,120,630,100],[585,8,632,6],[586,8,633,6,"createProjectile"],[586,24,633,22],[586,25,633,23,"target"],[586,31,633,29],[586,33,633,31,"damageResult"],[586,45,633,43],[586,46,633,44,"damage"],[586,52,633,50],[586,54,633,52,"currentNinjaPosition"],[586,74,633,72],[586,76,633,74],[587,10,634,8,"id"],[587,12,634,10],[587,14,634,12,"ability"],[587,21,634,19],[587,22,634,20,"id"],[587,24,634,22],[588,10,635,8,"name"],[588,14,635,12],[588,16,635,14,"ability"],[588,23,635,21],[588,24,635,22,"name"],[588,28,635,26],[589,10,636,8,"icon"],[589,14,636,12],[589,16,636,14,"ability"],[589,23,636,21],[589,24,636,22,"icon"],[590,8,637,6],[590,9,637,7],[590,10,637,8],[591,8,639,6,"console"],[591,15,639,13],[591,16,639,14,"log"],[591,19,639,17],[591,20,639,18],[591,26,639,24,"ability"],[591,33,639,31],[591,34,639,32,"name"],[591,38,639,36],[591,66,639,64,"damageResult"],[591,78,639,76],[591,79,639,77,"damage"],[591,85,639,83],[591,95,639,93,"damageResult"],[591,107,639,105],[591,108,639,106,"isCritical"],[591,118,639,116],[591,121,639,119],[591,131,639,129],[591,134,639,132],[591,136,639,134],[591,138,639,136],[591,139,639,137],[592,6,640,4],[594,6,642,4],[595,6,643,4],[595,10,643,8,"ability"],[595,17,643,15],[595,18,643,16,"effects"],[595,25,643,23],[595,26,643,24,"includes"],[595,34,643,32],[595,35,643,33],[595,40,643,38],[595,41,643,39],[595,45,643,43,"ability"],[595,52,643,50],[595,53,643,51,"stats"],[595,58,643,56],[595,59,643,57,"duration"],[595,67,643,65],[595,69,643,67],[596,8,644,6],[596,12,644,12,"targets"],[596,19,644,19],[596,22,644,22,"isAOE"],[596,27,644,27],[596,30,645,8,"state"],[596,35,645,13],[596,36,645,14,"enemies"],[596,43,645,21],[596,44,645,22,"filter"],[596,50,645,28],[596,51,645,29,"enemy"],[596,56,645,34],[596,60,645,38],[597,10,646,10],[597,14,646,16,"ninjaX"],[597,20,646,22],[597,23,646,25,"currentNinjaPosition"],[597,43,646,45],[597,44,646,46,"x"],[597,45,646,47],[597,48,646,50],[597,50,646,52],[598,10,647,10],[598,14,647,16,"ninjaY"],[598,20,647,22],[598,23,647,25,"currentNinjaPosition"],[598,43,647,45],[598,44,647,46,"y"],[598,45,647,47],[598,48,647,50],[598,50,647,52],[599,10,648,10],[599,14,648,16,"enemyX"],[599,20,648,22],[599,23,648,25,"enemy"],[599,28,648,30],[599,29,648,31,"position"],[599,37,648,39],[599,38,648,40,"x"],[599,39,648,41],[599,42,648,44],[599,46,648,48],[600,10,649,10],[600,14,649,16,"enemyY"],[600,20,649,22],[600,23,649,25,"enemy"],[600,28,649,30],[600,29,649,31,"position"],[600,37,649,39],[600,38,649,40,"y"],[600,39,649,41],[600,42,649,44],[600,46,649,48],[601,10,650,10],[601,14,650,16,"distance"],[601,22,650,24],[601,25,650,27,"Math"],[601,29,650,31],[601,30,650,32,"sqrt"],[601,34,650,36],[601,35,650,37,"Math"],[601,39,650,41],[601,40,650,42,"pow"],[601,43,650,45],[601,44,650,46,"enemyX"],[601,50,650,52],[601,53,650,55,"ninjaX"],[601,59,650,61],[601,61,650,63],[601,62,650,64],[601,63,650,65],[601,66,650,68,"Math"],[601,70,650,72],[601,71,650,73,"pow"],[601,74,650,76],[601,75,650,77,"enemyY"],[601,81,650,83],[601,84,650,86,"ninjaY"],[601,90,650,92],[601,92,650,94],[601,93,650,95],[601,94,650,96],[601,95,650,97],[602,10,651,10],[602,17,651,17,"distance"],[602,25,651,25],[602,29,651,29,"ability"],[602,36,651,36],[602,37,651,37,"stats"],[602,42,651,42],[602,43,651,43,"aoeRadius"],[602,52,651,52],[603,8,652,8],[603,9,652,9],[603,10,652,10],[603,13,653,8],[603,14,653,9,"findClosestEnemyInternal"],[603,38,653,33],[603,39,653,34,"state"],[603,44,653,39],[603,45,653,40,"enemies"],[603,52,653,47],[603,53,653,48],[603,54,653,49],[603,55,653,50,"filter"],[603,61,653,56],[603,62,653,57,"Boolean"],[603,69,653,64],[603,70,653,65],[604,8,655,6,"targets"],[604,15,655,13],[604,16,655,14,"forEach"],[604,23,655,21],[604,24,655,22,"target"],[604,30,655,28],[604,34,655,32],[605,10,656,8,"state"],[605,15,656,13],[605,16,656,14,"statusEffects"],[605,29,656,27],[605,30,656,28,"addEffect"],[605,39,656,37],[605,40,656,38,"target"],[605,46,656,44],[605,47,656,45,"id"],[605,49,656,47],[605,51,656,49],[606,12,657,10,"id"],[606,14,657,12],[606,16,657,14],[606,19,657,17,"ability"],[606,26,657,24],[606,27,657,25,"id"],[606,29,657,27],[606,35,657,33],[607,12,658,10,"type"],[607,16,658,14],[607,18,658,16],[607,23,658,21],[608,12,659,10,"remainingTicks"],[608,26,659,24],[608,28,659,26,"Math"],[608,32,659,30],[608,33,659,31,"floor"],[608,38,659,36],[608,39,659,37,"ability"],[608,46,659,44],[608,47,659,45,"stats"],[608,52,659,50],[608,53,659,51,"duration"],[608,61,659,59],[608,64,659,62],[608,66,659,64],[608,67,659,65],[609,12,660,10,"tickInterval"],[609,24,660,22],[609,26,660,24],[609,28,660,26],[610,12,661,10,"lastTick"],[610,20,661,18],[610,22,661,20,"state"],[610,27,661,25],[610,28,661,26,"currentTick"],[610,39,661,37],[611,12,662,10,"value"],[611,17,662,15],[611,19,662,17,"Math"],[611,23,662,21],[611,24,662,22,"floor"],[611,29,662,27],[611,30,662,28,"damage"],[611,36,662,34],[611,39,662,37],[611,42,662,40],[611,43,662,41],[612,12,663,10,"stackable"],[612,21,663,19],[612,23,663,21],[613,10,664,8],[613,11,664,9],[613,12,664,10],[614,8,665,6],[614,9,665,7],[614,10,665,8],[615,6,666,4],[617,6,668,4],[618,6,669,4],[618,10,669,8,"ability"],[618,17,669,15],[618,18,669,16,"effects"],[618,25,669,23],[618,26,669,24,"includes"],[618,34,669,32],[618,35,669,33],[618,41,669,39],[618,42,669,40],[618,46,669,44,"ability"],[618,53,669,51],[618,54,669,52,"id"],[618,56,669,54],[618,61,669,59],[618,75,669,73],[618,77,669,75],[619,8,670,6,"console"],[619,15,670,13],[619,16,670,14,"log"],[619,19,670,17],[619,20,670,18],[619,66,670,64,"ability"],[619,73,670,71],[619,74,670,72,"stats"],[619,79,670,77],[619,80,670,78,"duration"],[619,88,670,86],[619,98,670,96],[619,99,670,97],[621,8,672,6],[622,8,673,6],[622,12,673,12,"cloneX"],[622,18,673,18],[622,21,673,21,"currentNinjaPosition"],[622,41,673,41],[622,42,673,42,"x"],[622,43,673,43],[622,46,673,46],[622,48,673,48],[622,49,673,49],[622,50,673,50],[623,8,674,6],[623,12,674,12,"cloneY"],[623,18,674,18],[623,21,674,21,"currentNinjaPosition"],[623,41,674,41],[623,42,674,42,"y"],[623,43,674,43],[623,46,674,46],[623,48,674,48],[623,49,674,49],[623,50,674,50],[625,8,676,6,"state"],[625,13,676,11],[625,14,676,12,"shadowClone"],[625,25,676,23],[625,28,676,26],[626,10,677,8,"id"],[626,12,677,10],[626,14,677,12],[626,30,677,28,"Date"],[626,34,677,32],[626,35,677,33,"now"],[626,38,677,36],[626,39,677,37],[626,40,677,38],[626,42,677,40],[627,10,678,8,"remainingTicks"],[627,24,678,22],[627,26,678,24,"Math"],[627,30,678,28],[627,31,678,29,"floor"],[627,36,678,34],[627,37,678,35,"ability"],[627,44,678,42],[627,45,678,43,"stats"],[627,50,678,48],[627,51,678,49,"duration"],[627,59,678,57],[627,62,678,60],[627,64,678,62],[627,65,678,63],[628,10,678,65],[629,10,679,8,"position"],[629,18,679,16],[629,20,679,18],[630,12,679,20,"x"],[630,13,679,21],[630,15,679,23,"cloneX"],[630,21,679,29],[631,12,679,31,"y"],[631,13,679,32],[631,15,679,34,"cloneY"],[632,10,679,41],[632,11,679,42],[633,10,680,8,"damageMultiplier"],[633,26,680,24],[633,28,680,26],[633,31,680,29],[633,32,680,31],[634,8,681,6],[634,9,681,7],[635,8,683,6,"console"],[635,15,683,13],[635,16,683,14,"log"],[635,19,683,17],[635,20,683,18],[635,63,683,61,"ability"],[635,70,683,68],[635,71,683,69,"stats"],[635,76,683,74],[635,77,683,75,"duration"],[635,85,683,83],[635,108,683,106],[635,109,683,107],[636,6,684,4],[637,4,685,2],[637,5,685,3],[639,4,687,2],[640,4,688,2],[640,8,688,8,"createProjectile"],[640,24,688,24],[640,27,688,27,"createProjectile"],[640,28,688,28,"targetEnemy"],[640,39,688,52],[640,41,688,54,"damage"],[640,47,688,68],[640,49,688,70,"ninjaPos"],[640,57,688,103],[640,59,688,105,"abilityInfo"],[640,70,688,159],[640,75,688,164],[641,6,689,4],[641,10,689,8],[641,11,689,9,"targetEnemy"],[641,22,689,20],[641,24,689,22],[642,8,690,6,"console"],[642,15,690,13],[642,16,690,14,"log"],[642,19,690,17],[642,20,690,18],[642,65,690,63],[642,66,690,64],[643,8,691,6],[643,15,691,13],[643,19,691,17],[644,6,692,4],[645,6,694,4],[645,10,694,10,"SCREEN_WIDTH"],[645,22,694,22],[645,25,694,25],[645,28,694,28],[646,6,695,4],[646,10,695,10,"GAME_AREA_HEIGHT"],[646,26,695,26],[646,29,695,29],[646,32,695,32],[646,35,695,35],[646,38,695,38],[646,39,695,39],[646,40,695,40],[647,6,696,4],[647,10,696,10,"NINJA_SIZE"],[647,20,696,20],[647,23,696,23],[647,25,696,25],[649,6,698,4],[650,6,699,4],[650,10,699,10,"ninjaX"],[650,16,699,16],[650,19,699,19,"ninjaPos"],[650,27,699,27],[650,30,699,30,"ninjaPos"],[650,38,699,38],[650,39,699,39,"x"],[650,40,699,40],[650,43,699,43,"NINJA_SIZE"],[650,53,699,53],[650,56,699,56],[650,57,699,57],[650,60,699,60,"SCREEN_WIDTH"],[650,72,699,72],[650,75,699,75],[650,76,699,76],[651,6,700,4],[651,10,700,10,"ninjaY"],[651,16,700,16],[651,19,700,19,"ninjaPos"],[651,27,700,27],[651,30,700,30,"ninjaPos"],[651,38,700,38],[651,39,700,39,"y"],[651,40,700,40],[651,43,700,43,"NINJA_SIZE"],[651,53,700,53],[651,56,700,56],[651,57,700,57],[651,60,700,60,"GAME_AREA_HEIGHT"],[651,76,700,76],[651,79,700,79],[651,80,700,80],[652,6,701,4],[652,10,701,10,"ENEMY_SIZE"],[652,20,701,20],[652,23,701,23],[652,25,701,25],[653,6,703,4],[653,10,703,10,"projectileId"],[653,22,703,22],[653,25,703,25],[653,33,703,33,"Date"],[653,37,703,37],[653,38,703,38,"now"],[653,41,703,41],[653,42,703,42],[653,43,703,43],[653,47,703,47,"Math"],[653,51,703,51],[653,52,703,52,"random"],[653,58,703,58],[653,59,703,59],[653,60,703,60],[653,62,703,62],[654,6,705,4],[654,10,705,10,"projectile"],[654,20,705,38],[654,23,705,41],[655,8,706,6,"id"],[655,10,706,8],[655,12,706,10,"projectileId"],[655,24,706,22],[656,8,707,6,"x"],[656,9,707,7],[656,11,707,9,"ninjaX"],[656,17,707,15],[657,8,708,6,"y"],[657,9,708,7],[657,11,708,9,"ninjaY"],[657,17,708,15],[658,8,709,6,"targetX"],[658,15,709,13],[658,17,709,15,"targetEnemy"],[658,28,709,26],[658,29,709,27,"position"],[658,37,709,35],[658,38,709,36,"x"],[658,39,709,37],[658,42,709,40,"ENEMY_SIZE"],[658,52,709,50],[658,55,709,53],[658,56,709,54],[659,8,710,6,"targetY"],[659,15,710,13],[659,17,710,15,"targetEnemy"],[659,28,710,26],[659,29,710,27,"position"],[659,37,710,35],[659,38,710,36,"y"],[659,39,710,37],[659,42,710,40,"ENEMY_SIZE"],[659,52,710,50],[659,55,710,53],[659,56,710,54],[660,8,711,6,"targetEnemyId"],[660,21,711,19],[660,23,711,21,"targetEnemy"],[660,34,711,32],[660,35,711,33,"id"],[660,37,711,35],[661,8,712,6,"damage"],[661,14,712,12],[661,16,712,14,"damage"],[661,22,712,20],[662,8,713,6,"startTime"],[662,17,713,15],[662,19,713,17,"Date"],[662,23,713,21],[662,24,713,22,"now"],[662,27,713,25],[662,28,713,26],[662,29,713,27],[663,8,714,6,"duration"],[663,16,714,14],[663,18,714,16],[663,21,714,19],[664,8,714,21],[665,8,715,6],[666,8,716,6,"abilityId"],[666,17,716,15],[666,19,716,17,"abilityInfo"],[666,30,716,28],[666,32,716,30,"id"],[666,34,716,32],[666,38,716,36],[666,54,716,52],[667,8,717,6,"abilityName"],[667,19,717,17],[667,21,717,19,"abilityInfo"],[667,32,717,30],[667,34,717,32,"name"],[667,38,717,36],[667,42,717,40],[667,58,717,56],[668,8,718,6,"abilityIcon"],[668,19,718,17],[668,21,718,19,"abilityInfo"],[668,32,718,30],[668,34,718,32,"icon"],[668,38,718,36],[668,42,718,40],[668,46,718,44],[668,47,718,46],[669,6,719,4],[669,7,719,5],[670,6,721,4,"console"],[670,13,721,11],[670,14,721,12,"log"],[670,17,721,15],[670,18,721,16],[670,44,721,42,"abilityInfo"],[670,55,721,53],[670,57,721,55,"name"],[670,61,721,59],[670,65,721,63],[670,81,721,79],[670,101,721,99,"projectileId"],[670,113,721,111],[670,128,721,126,"targetEnemy"],[670,139,721,137],[670,140,721,138,"name"],[670,144,721,142],[670,152,721,150,"damage"],[670,158,721,156],[670,167,721,165],[670,168,721,166],[671,6,723,4,"console"],[671,13,723,11],[671,14,723,12,"log"],[671,17,723,15],[671,18,723,16],[671,53,723,51,"targetEnemy"],[671,64,723,62],[671,65,723,63,"id"],[671,67,723,65],[671,75,723,73,"damage"],[671,81,723,79],[671,90,723,88],[671,91,723,89],[672,6,724,4,"console"],[672,13,724,11],[672,14,724,12,"log"],[672,17,724,15],[672,18,724,16],[672,53,724,51,"ninjaX"],[672,59,724,57],[672,64,724,62,"ninjaY"],[672,70,724,68],[672,87,724,85,"projectile"],[672,97,724,95],[672,98,724,96,"targetX"],[672,105,724,103],[672,110,724,108,"projectile"],[672,120,724,118],[672,121,724,119,"targetY"],[672,128,724,126],[672,131,724,129],[672,132,724,130],[673,6,726,4,"setProjectiles"],[673,20,726,18],[673,21,726,19,"prev"],[673,25,726,23],[673,29,726,27],[673,30,726,28],[673,33,726,31,"prev"],[673,37,726,35],[673,39,726,37,"projectile"],[673,49,726,47],[673,50,726,48],[673,51,726,49],[675,6,728,4],[676,6,729,4,"setTimeout"],[676,16,729,14],[676,17,729,15],[676,23,729,21],[677,8,730,6,"handleProjectileHit"],[677,27,730,25],[677,28,730,26,"projectile"],[677,38,730,36],[677,39,730,37],[678,6,731,4],[678,7,731,5],[678,9,731,7],[678,12,731,10],[678,13,731,11],[679,6,733,4],[679,13,733,11,"projectile"],[679,23,733,21],[680,4,734,2],[680,5,734,3],[682,4,736,2],[683,4,737,2],[683,8,737,8,"spawnTestEnemy"],[683,22,737,22],[683,25,737,26,"state"],[683,30,737,44],[683,34,737,49],[684,6,738,4,"console"],[684,13,738,11],[684,14,738,12,"log"],[684,17,738,15],[684,18,738,16],[684,83,738,81],[684,84,738,82],[686,6,740,4],[687,6,741,4],[687,10,741,10,"zoneEnemy"],[687,19,741,19],[687,22,741,22,"spawnZoneEnemy"],[687,36,741,36],[687,37,741,37],[687,38,741,38],[688,6,742,4],[688,10,742,8],[688,11,742,9,"zoneEnemy"],[688,20,742,18],[688,22,742,20],[689,8,743,6,"console"],[689,15,743,13],[689,16,743,14,"log"],[689,19,743,17],[689,20,743,18],[689,76,743,74],[689,77,743,75],[690,8,744,6],[691,8,745,6,"spawnBasicTestEnemy"],[691,27,745,25],[691,28,745,26,"state"],[691,33,745,31],[691,34,745,32],[692,8,746,6],[693,6,747,4],[694,6,749,4,"console"],[694,13,749,11],[694,14,749,12,"log"],[694,17,749,15],[694,18,749,16],[694,44,749,42,"zoneEnemy"],[694,53,749,51],[694,54,749,52,"name"],[694,58,749,56],[694,63,749,61,"zoneEnemy"],[694,72,749,70],[694,73,749,71,"typeId"],[694,79,749,77],[694,94,749,92,"currentZone"],[694,105,749,103],[694,107,749,105,"id"],[694,109,749,107],[694,119,749,117,"currentZoneLevel"],[694,135,749,133],[694,137,749,135,"level"],[694,142,749,140],[694,144,749,142],[694,145,749,143],[696,6,751,4],[697,6,752,4],[697,10,752,10,"combatEnemy"],[697,21,752,34],[697,24,752,37],[698,8,753,6,"id"],[698,10,753,8],[698,12,753,10,"zoneEnemy"],[698,21,753,19],[698,22,753,20,"id"],[698,24,753,22],[699,8,754,6,"name"],[699,12,754,10],[699,14,754,12,"zoneEnemy"],[699,23,754,21],[699,24,754,22,"name"],[699,28,754,26],[700,8,755,6,"health"],[700,14,755,12],[700,16,755,14,"zoneEnemy"],[700,25,755,23],[700,26,755,24,"hp"],[700,28,755,26],[701,8,756,6,"maxHealth"],[701,17,756,15],[701,19,756,17,"zoneEnemy"],[701,28,756,26],[701,29,756,27,"maxHP"],[701,34,756,32],[702,8,757,6,"stats"],[702,13,757,11],[702,15,757,13],[703,10,758,8,"attack"],[703,16,758,14],[703,18,758,16,"zoneEnemy"],[703,27,758,25],[703,28,758,26,"attack"],[703,34,758,32],[704,10,759,8,"defense"],[704,17,759,15],[704,19,759,17],[704,21,759,19],[705,10,759,21],[706,10,760,8,"health"],[706,16,760,14],[706,18,760,16,"zoneEnemy"],[706,27,760,25],[706,28,760,26,"hp"],[706,30,760,28],[707,10,761,8,"maxHealth"],[707,19,761,17],[707,21,761,19,"zoneEnemy"],[707,30,761,28],[707,31,761,29,"maxHP"],[707,36,761,34],[708,10,762,8,"critChance"],[708,20,762,18],[708,22,762,20],[708,23,762,21],[709,10,763,8,"critDamage"],[709,20,763,18],[709,22,763,20],[709,25,763,23],[710,10,764,8,"cooldownReduction"],[710,27,764,25],[710,29,764,27],[711,8,765,6],[711,9,765,7],[712,8,766,6,"position"],[712,16,766,14],[712,18,766,16,"zoneEnemy"],[712,27,766,25],[712,28,766,26,"position"],[712,36,766,34],[713,8,767,6,"lastDamaged"],[713,19,767,17],[713,21,767,19],[713,22,767,20],[714,8,768,6],[715,8,769,6,"zoneTypeId"],[715,18,769,16],[715,20,769,18,"zoneEnemy"],[715,29,769,27],[715,30,769,28,"typeId"],[715,36,769,34],[716,8,770,6,"zoneXP"],[716,14,770,12],[716,16,770,14,"zoneEnemy"],[716,25,770,23],[716,26,770,24,"xp"],[717,6,771,4],[717,7,771,5],[718,6,773,4,"console"],[718,13,773,11],[718,14,773,12,"log"],[718,17,773,15],[718,18,773,16],[718,42,773,40,"combatEnemy"],[718,53,773,51],[718,54,773,52,"name"],[718,58,773,56],[718,67,773,65,"combatEnemy"],[718,78,773,76],[718,79,773,77,"health"],[718,85,773,83],[718,100,773,98,"currentZone"],[718,111,773,109],[718,113,773,111,"id"],[718,115,773,113],[718,125,773,123,"currentZoneLevel"],[718,141,773,139],[718,143,773,141,"level"],[718,148,773,146],[718,150,773,148],[718,151,773,149],[719,6,774,4,"state"],[719,11,774,9],[719,12,774,10,"enemies"],[719,19,774,17],[719,20,774,18,"push"],[719,24,774,22],[719,25,774,23,"combatEnemy"],[719,36,774,34],[719,37,774,35],[720,4,775,2],[720,5,775,3],[722,4,777,2],[723,4,778,2],[723,8,778,8,"spawnBasicTestEnemy"],[723,27,778,27],[723,30,778,31,"state"],[723,35,778,49],[723,39,778,54],[724,6,779,4],[724,10,779,10,"SCREEN_WIDTH"],[724,22,779,22],[724,25,779,25],[724,28,779,28],[725,6,780,4],[725,10,780,10,"GAME_AREA_HEIGHT"],[725,26,780,26],[725,29,780,29],[725,32,780,32],[725,35,780,35],[725,38,780,38],[726,6,781,4],[726,10,781,10,"ENEMY_SIZE"],[726,20,781,20],[726,23,781,23],[726,25,781,25],[727,6,783,4],[727,10,783,10,"x"],[727,11,783,11],[727,14,783,14,"Math"],[727,18,783,18],[727,19,783,19,"random"],[727,25,783,25],[727,26,783,26],[727,27,783,27],[727,31,783,31,"SCREEN_WIDTH"],[727,43,783,43],[727,46,783,46,"ENEMY_SIZE"],[727,56,783,56],[727,59,783,59],[727,60,783,60],[727,61,783,61],[727,64,783,64,"ENEMY_SIZE"],[727,74,783,74],[728,6,784,4],[728,10,784,10,"y"],[728,11,784,11],[728,14,784,14,"Math"],[728,18,784,18],[728,19,784,19,"random"],[728,25,784,25],[728,26,784,26],[728,27,784,27],[728,31,784,31,"GAME_AREA_HEIGHT"],[728,47,784,47],[728,50,784,50,"ENEMY_SIZE"],[728,60,784,60],[728,63,784,63],[728,64,784,64],[728,65,784,65],[728,68,784,68,"ENEMY_SIZE"],[728,78,784,78],[729,6,786,4],[729,10,786,10,"enemy"],[729,15,786,28],[729,18,786,31],[730,8,787,6,"id"],[730,10,787,8],[730,12,787,10],[730,30,787,28,"Date"],[730,34,787,32],[730,35,787,33,"now"],[730,38,787,36],[730,39,787,37],[730,40,787,38],[730,44,787,42,"Math"],[730,48,787,46],[730,49,787,47,"random"],[730,55,787,53],[730,56,787,54],[730,57,787,55],[730,59,787,57],[731,8,788,6,"name"],[731,12,788,10],[731,14,788,12],[731,26,788,24,"Math"],[731,30,788,28],[731,31,788,29,"floor"],[731,36,788,34],[731,37,788,35,"Math"],[731,41,788,39],[731,42,788,40,"random"],[731,48,788,46],[731,49,788,47],[731,50,788,48],[731,53,788,51],[731,56,788,54],[731,57,788,55],[731,59,788,57],[732,8,789,6,"health"],[732,14,789,12],[732,16,789,14],[732,18,789,16],[733,8,790,6,"maxHealth"],[733,17,790,15],[733,19,790,17],[733,21,790,19],[734,8,791,6,"stats"],[734,13,791,11],[734,15,791,13],[735,10,792,8,"attack"],[735,16,792,14],[735,18,792,16],[735,20,792,18],[736,10,793,8,"defense"],[736,17,793,15],[736,19,793,17],[736,21,793,19],[737,10,794,8,"health"],[737,16,794,14],[737,18,794,16],[737,20,794,18],[738,10,795,8,"maxHealth"],[738,19,795,17],[738,21,795,19],[738,23,795,21],[739,10,796,8,"critChance"],[739,20,796,18],[739,22,796,20],[739,23,796,21],[740,10,797,8,"critDamage"],[740,20,797,18],[740,22,797,20],[740,25,797,23],[741,10,798,8,"cooldownReduction"],[741,27,798,25],[741,29,798,27],[742,8,799,6],[742,9,799,7],[743,8,800,6,"position"],[743,16,800,14],[743,18,800,16],[744,10,800,18,"x"],[744,11,800,19],[745,10,800,21,"y"],[746,8,800,23],[746,9,800,24],[747,8,801,6,"lastDamaged"],[747,19,801,17],[747,21,801,19],[748,6,802,4],[748,7,802,5],[749,6,804,4,"console"],[749,13,804,11],[749,14,804,12,"log"],[749,17,804,15],[749,18,804,16],[749,42,804,40,"enemy"],[749,47,804,45],[749,48,804,46,"name"],[749,52,804,50],[749,60,804,58,"Math"],[749,64,804,62],[749,65,804,63,"round"],[749,70,804,68],[749,71,804,69,"x"],[749,72,804,70],[749,73,804,71],[749,78,804,76,"Math"],[749,82,804,80],[749,83,804,81,"round"],[749,88,804,86],[749,89,804,87,"y"],[749,90,804,88],[749,91,804,89],[749,94,804,92],[749,95,804,93],[750,6,805,4,"state"],[750,11,805,9],[750,12,805,10,"enemies"],[750,19,805,17],[750,20,805,18,"push"],[750,24,805,22],[750,25,805,23,"enemy"],[750,30,805,28],[750,31,805,29],[751,4,806,2],[751,5,806,3],[753,4,808,2],[754,4,809,2],[754,8,809,8,"startCombat"],[754,19,809,19],[754,22,809,22,"React"],[754,27,809,27],[754,28,809,27,"default"],[754,35,809,27],[754,36,809,28,"useCallback"],[754,47,809,39],[754,48,809,40],[754,54,809,46],[755,6,810,4,"console"],[755,13,810,11],[755,14,810,12,"log"],[755,17,810,15],[755,18,810,16],[755,63,810,61],[755,64,810,62],[756,6,811,4,"setCombatState"],[756,20,811,18],[756,21,811,19,"prev"],[756,25,811,23],[756,30,811,28],[757,8,811,30],[757,11,811,33,"prev"],[757,15,811,37],[758,8,811,39,"isInCombat"],[758,18,811,49],[758,20,811,51],[759,6,811,56],[759,7,811,57],[759,8,811,58],[759,9,811,59],[761,6,813,4],[762,6,814,4,"combatEngine"],[762,25,814,16],[762,26,814,16,"combatEngine"],[762,38,814,16],[762,39,814,17,"addTickCallback"],[762,54,814,32],[762,55,814,33,"handleCombatTick"],[762,71,814,49],[762,72,814,50],[763,6,815,4,"console"],[763,13,815,11],[763,14,815,12,"log"],[763,17,815,15],[763,18,815,16],[763,62,815,60],[763,63,815,61],[765,6,817,4],[766,6,818,4,"combatEngine"],[766,25,818,16],[766,26,818,16,"combatEngine"],[766,38,818,16],[766,39,818,17,"start"],[766,44,818,22],[766,45,818,23],[766,46,818,24],[767,4,819,2],[767,5,819,3],[767,7,819,5],[767,8,819,6,"combatEngine"],[767,27,819,18],[767,28,819,18,"combatEngine"],[767,40,819,18],[767,42,819,20,"handleCombatTick"],[767,58,819,36],[767,59,819,37],[767,60,819,38],[769,4,821,2],[770,4,822,2],[770,8,822,8,"stopCombat"],[770,18,822,18],[770,21,822,21,"React"],[770,26,822,26],[770,27,822,26,"default"],[770,34,822,26],[770,35,822,27,"useCallback"],[770,46,822,38],[770,47,822,39],[770,53,822,45],[771,6,823,4,"setCombatState"],[771,20,823,18],[771,21,823,19,"prev"],[771,25,823,23],[771,30,823,28],[772,8,823,30],[772,11,823,33,"prev"],[772,15,823,37],[773,8,823,39,"isInCombat"],[773,18,823,49],[773,20,823,51],[774,6,823,57],[774,7,823,58],[774,8,823,59],[774,9,823,60],[775,6,824,4,"combatEngine"],[775,25,824,16],[775,26,824,16,"combatEngine"],[775,38,824,16],[775,39,824,17,"removeTickCallback"],[775,57,824,35],[775,58,824,36,"handleCombatTick"],[775,74,824,52],[775,75,824,53],[776,4,825,2],[776,5,825,3],[776,7,825,5],[776,8,825,6,"combatEngine"],[776,27,825,18],[776,28,825,18,"combatEngine"],[776,40,825,18],[776,42,825,20,"handleCombatTick"],[776,58,825,36],[776,59,825,37],[776,60,825,38],[778,4,827,2],[779,4,828,2],[779,8,828,8,"equipAbility"],[779,20,828,20],[779,23,828,23,"equipAbility"],[779,24,828,24,"abilityId"],[779,33,828,41],[779,35,828,43,"slotIndex"],[779,44,828,60],[779,49,828,74],[780,6,829,4],[780,13,829,11,"combatState"],[780,24,829,22],[780,25,829,23,"abilityManager"],[780,39,829,37],[780,40,829,38,"equipAbility"],[780,52,829,50],[780,53,829,51,"abilityId"],[780,62,829,60],[780,64,829,62,"slotIndex"],[780,73,829,71],[780,74,829,72],[781,4,830,2],[781,5,830,3],[782,4,832,2],[782,8,832,8,"getDeck"],[782,15,832,15],[782,18,832,18,"getDeck"],[782,19,832,18],[782,24,832,24],[783,6,833,4],[783,13,833,11,"combatState"],[783,24,833,22],[783,25,833,23,"abilityManager"],[783,39,833,37],[783,40,833,38,"getDeck"],[783,47,833,45],[783,48,833,46],[783,49,833,47],[784,4,834,2],[784,5,834,3],[785,4,836,2],[785,8,836,8,"getAvailableAbilities"],[785,29,836,29],[785,32,836,32,"getAvailableAbilities"],[785,33,836,32],[785,38,836,38],[786,6,837,4],[786,13,837,11,"combatState"],[786,24,837,22],[786,25,837,23,"abilityManager"],[786,39,837,37],[786,40,837,38,"getAvailableAbilities"],[786,61,837,59],[786,62,837,60],[786,63,837,61],[787,4,838,2],[787,5,838,3],[788,4,840,2],[788,8,840,8,"upgradeAbility"],[788,22,840,22],[788,25,840,26,"abilityId"],[788,34,840,43],[788,38,840,57],[789,6,841,4],[789,13,841,11,"combatState"],[789,24,841,22],[789,25,841,23,"abilityManager"],[789,39,841,37],[789,40,841,38,"upgradeAbility"],[789,54,841,52],[789,55,841,53,"abilityId"],[789,64,841,62],[789,65,841,63],[790,4,842,2],[790,5,842,3],[792,4,844,2],[793,4,845,2],[793,8,845,8,"clearAllEnemies"],[793,23,845,23],[793,26,845,26,"clearAllEnemies"],[793,27,845,26],[793,32,845,32],[794,6,846,4,"console"],[794,13,846,11],[794,14,846,12,"log"],[794,17,846,15],[794,18,846,16],[794,67,846,65],[794,68,846,66],[795,6,847,4,"setCombatState"],[795,20,847,18],[795,21,847,19,"prev"],[795,25,847,23],[795,30,847,28],[796,8,848,6],[796,11,848,9,"prev"],[796,15,848,13],[797,8,849,6,"enemies"],[797,15,849,13],[797,17,849,15],[798,6,850,4],[798,7,850,5],[798,8,850,6],[798,9,850,7],[799,4,851,2],[799,5,851,3],[801,4,853,2],[802,4,854,2],[802,8,854,8,"triggerLevelUpExplosion"],[802,31,854,31],[802,34,854,34,"triggerLevelUpExplosion"],[802,35,854,34],[802,40,854,40],[803,6,855,4,"console"],[803,13,855,11],[803,14,855,12,"log"],[803,17,855,15],[803,18,855,16],[803,70,855,68],[803,71,855,69],[804,6,857,4],[804,10,857,10,"explosionTime"],[804,23,857,23],[804,26,857,26,"Date"],[804,30,857,30],[804,31,857,31,"now"],[804,34,857,34],[804,35,857,35],[804,36,857,36],[805,6,858,4,"setLastExplosionTime"],[805,26,858,24],[805,27,858,25,"explosionTime"],[805,40,858,38],[805,41,858,39],[806,6,860,4,"setCombatState"],[806,20,860,18],[806,21,860,19,"prev"],[806,25,860,23],[806,29,860,27],[807,8,861,6],[808,8,862,6],[808,12,862,12,"enemyCount"],[808,22,862,22],[808,25,862,25,"prev"],[808,29,862,29],[808,30,862,30,"enemies"],[808,37,862,37],[808,38,862,38,"length"],[808,44,862,44],[809,8,863,6],[809,12,863,12,"explosionXP"],[809,23,863,23],[809,26,863,26,"enemyCount"],[809,36,863,36],[809,39,863,39],[809,42,863,42],[809,43,863,43],[809,44,863,44],[810,8,864,6],[810,12,864,12,"explosionGold"],[810,25,864,25],[810,28,864,28,"enemyCount"],[810,38,864,38],[810,41,864,41],[810,44,864,44],[810,45,864,45],[810,46,864,46],[812,8,866,6,"console"],[812,15,866,13],[812,16,866,14,"log"],[812,19,866,17],[812,20,866,18],[812,44,866,42,"enemyCount"],[812,54,866,52],[812,76,866,74,"explosionXP"],[812,87,866,85],[812,98,866,96,"explosionGold"],[812,111,866,109],[812,118,866,116],[812,119,866,117],[814,8,868,6],[815,8,869,6],[815,12,869,10,"explosionXP"],[815,23,869,21],[815,26,869,24],[815,27,869,25],[815,29,869,27],[816,10,870,8,"setTimeout"],[816,20,870,18],[816,21,870,19],[816,27,870,25],[817,12,871,10,"game"],[817,16,871,14],[817,17,871,15,"updateNinja"],[817,28,871,26],[817,29,871,28,"ninja"],[817,34,871,33],[817,39,871,39],[818,14,872,12,"experience"],[818,24,872,22],[818,26,872,24,"ninja"],[818,31,872,29],[818,32,872,30,"experience"],[818,42,872,40],[818,45,872,43,"explosionXP"],[818,56,872,54],[819,14,873,12,"gold"],[819,18,873,16],[819,20,873,18,"ninja"],[819,25,873,23],[819,26,873,24,"gold"],[819,30,873,28],[819,33,873,31,"explosionGold"],[820,12,874,10],[820,13,874,11],[820,14,874,12],[820,15,874,13],[821,10,875,8],[821,11,875,9],[821,13,875,11],[821,14,875,12],[821,15,875,13],[821,16,875,14],[821,17,875,15],[822,8,876,6],[824,8,878,6],[825,8,879,6],[826,8,880,6],[826,12,880,12,"damagedEnemies"],[826,26,880,26],[826,29,880,29,"prev"],[826,33,880,33],[826,34,880,34,"enemies"],[826,41,880,41],[826,42,880,42,"map"],[826,45,880,45],[826,46,880,46,"enemy"],[826,51,880,51],[826,56,880,56],[827,10,881,8],[827,13,881,11,"enemy"],[827,18,881,16],[828,10,882,8,"health"],[828,16,882,14],[828,18,882,16],[828,19,882,17],[829,10,882,19],[830,10,883,8,"lastDamaged"],[830,21,883,19],[830,23,883,21,"combatEngine"],[830,42,883,33],[830,43,883,33,"combatEngine"],[830,55,883,33],[830,56,883,34,"getCurrentTick"],[830,70,883,48],[830,71,883,49],[831,8,884,6],[831,9,884,7],[831,10,884,8],[831,11,884,9],[832,8,886,6],[832,15,886,13],[833,10,887,8],[833,13,887,11,"prev"],[833,17,887,15],[834,10,888,8,"enemies"],[834,17,888,15],[834,19,888,17,"damagedEnemies"],[835,8,889,6],[835,9,889,7],[836,6,890,4],[836,7,890,5],[836,8,890,6],[837,4,891,2],[837,5,891,3],[839,4,893,2],[840,4,894,2],[840,8,894,8,"spawnEnemy"],[840,18,894,18],[840,21,894,22,"position"],[840,29,894,57],[840,33,894,75],[841,6,895,4],[841,10,895,10,"SCREEN_WIDTH"],[841,22,895,22],[841,25,895,25],[841,28,895,28],[842,6,896,4],[842,10,896,10,"GAME_AREA_HEIGHT"],[842,26,896,26],[842,29,896,29],[842,32,896,32],[842,35,896,35],[842,38,896,38],[842,39,896,39],[842,40,896,40],[843,6,897,4],[843,10,897,10,"ENEMY_SIZE"],[843,20,897,20],[843,23,897,23],[843,25,897,25],[845,6,899,4],[846,6,900,4],[846,10,900,10,"x"],[846,11,900,11],[846,14,900,14,"position"],[846,22,900,22],[846,24,900,24,"x"],[846,25,900,25],[846,29,900,29,"Math"],[846,33,900,33],[846,34,900,34,"random"],[846,40,900,40],[846,41,900,41],[846,42,900,42],[846,46,900,46,"SCREEN_WIDTH"],[846,58,900,58],[846,61,900,61,"ENEMY_SIZE"],[846,71,900,71],[846,74,900,74],[846,75,900,75],[846,76,900,76],[846,79,900,79,"ENEMY_SIZE"],[846,89,900,89],[847,6,901,4],[847,10,901,10,"y"],[847,11,901,11],[847,14,901,14,"position"],[847,22,901,22],[847,24,901,24,"y"],[847,25,901,25],[847,29,901,29,"Math"],[847,33,901,33],[847,34,901,34,"random"],[847,40,901,40],[847,41,901,41],[847,42,901,42],[847,46,901,46,"GAME_AREA_HEIGHT"],[847,62,901,62],[847,65,901,65,"ENEMY_SIZE"],[847,75,901,75],[847,78,901,78],[847,79,901,79],[847,80,901,80],[847,83,901,83,"ENEMY_SIZE"],[847,93,901,93],[848,6,903,4],[848,10,903,10,"enemy"],[848,15,903,28],[848,18,903,31],[849,8,904,6,"id"],[849,10,904,8],[849,12,904,10],[849,21,904,19],[849,23,904,21,"enemyCounter"],[849,35,904,33],[849,37,904,35],[850,8,905,6,"name"],[850,12,905,10],[850,14,905,12],[850,24,905,22],[851,8,906,6,"health"],[851,14,906,12],[851,16,906,14],[851,19,906,17],[852,8,907,6,"maxHealth"],[852,17,907,15],[852,19,907,17],[852,22,907,20],[853,8,908,6,"stats"],[853,13,908,11],[853,15,908,13],[854,10,909,8,"attack"],[854,16,909,14],[854,18,909,16],[854,20,909,18],[855,10,910,8,"defense"],[855,17,910,15],[855,19,910,17],[855,21,910,19],[856,10,911,8,"health"],[856,16,911,14],[856,18,911,16],[856,21,911,19],[857,10,912,8,"maxHealth"],[857,19,912,17],[857,21,912,19],[857,24,912,22],[858,10,913,8,"critChance"],[858,20,913,18],[858,22,913,20],[858,23,913,21],[859,10,914,8,"critDamage"],[859,20,914,18],[859,22,914,20],[859,25,914,23],[860,10,915,8,"cooldownReduction"],[860,27,915,25],[860,29,915,27],[861,8,916,6],[861,9,916,7],[862,8,917,6,"position"],[862,16,917,14],[862,18,917,16],[863,10,917,18,"x"],[863,11,917,19],[864,10,917,21,"y"],[865,8,917,23],[865,9,917,24],[866,8,918,6,"lastDamaged"],[866,19,918,17],[866,21,918,19],[867,6,919,4],[867,7,919,5],[868,6,921,4,"setCombatState"],[868,20,921,18],[868,21,921,19,"prev"],[868,25,921,23],[868,30,921,28],[869,8,922,6],[869,11,922,9,"prev"],[869,15,922,13],[870,8,923,6,"enemies"],[870,15,923,13],[870,17,923,15],[870,18,923,16],[870,21,923,19,"prev"],[870,25,923,23],[870,26,923,24,"enemies"],[870,33,923,31],[870,35,923,33,"enemy"],[870,40,923,38],[871,6,924,4],[871,7,924,5],[871,8,924,6],[871,9,924,7],[872,6,926,4],[872,13,926,11,"enemy"],[872,18,926,16],[873,4,927,2],[873,5,927,3],[875,4,929,2],[876,4,930,2],[876,8,930,8,"spawnBoss"],[876,17,930,17],[876,20,930,21,"bossEnemy"],[876,29,930,43],[876,33,930,48],[877,6,931,4,"console"],[877,13,931,11],[877,14,931,12,"log"],[877,17,931,15],[877,18,931,16],[877,39,931,37,"bossEnemy"],[877,48,931,46],[877,49,931,47,"name"],[877,53,931,51],[877,90,931,88],[877,91,931,89],[878,6,932,4,"setCombatState"],[878,20,932,18],[878,21,932,19,"prev"],[878,25,932,23],[878,30,932,28],[879,8,933,6],[879,11,933,9,"prev"],[879,15,933,13],[880,8,934,6,"enemies"],[880,15,934,13],[880,17,934,15],[880,18,934,16,"bossEnemy"],[880,27,934,25],[880,28,934,26],[880,29,934,27],[881,6,935,4],[881,7,935,5],[881,8,935,6],[881,9,935,7],[882,4,936,2],[882,5,936,3],[884,4,938,2],[885,4,939,2],[885,8,939,8,"clearSpecificEnemy"],[885,26,939,26],[885,29,939,30,"enemyId"],[885,36,939,45],[885,40,939,50],[886,6,940,4,"setCombatState"],[886,20,940,18],[886,21,940,19,"prev"],[886,25,940,23],[886,30,940,28],[887,8,941,6],[887,11,941,9,"prev"],[887,15,941,13],[888,8,942,6,"enemies"],[888,15,942,13],[888,17,942,15,"prev"],[888,21,942,19],[888,22,942,20,"enemies"],[888,29,942,27],[888,30,942,28,"filter"],[888,36,942,34],[888,37,942,35,"enemy"],[888,42,942,40],[888,46,942,44,"enemy"],[888,51,942,49],[888,52,942,50,"id"],[888,54,942,52],[888,59,942,57,"enemyId"],[888,66,942,64],[889,6,943,4],[889,7,943,5],[889,8,943,6],[889,9,943,7],[890,4,944,2],[890,5,944,3],[892,4,946,2],[893,4,947,2],[893,8,947,8,"useAbilityManually"],[893,26,947,26],[893,29,947,26,"_s3"],[893,32,947,26],[893,33,947,29],[893,37,947,29,"useCallback"],[893,43,947,40],[893,44,947,40,"useCallback"],[893,55,947,40],[893,57,947,40,"_s3"],[893,60,947,40],[893,61,947,42,"slotIndex"],[893,70,947,59],[893,74,947,73],[894,6,947,73,"_s3"],[894,9,947,73],[895,6,948,4,"console"],[895,13,948,11],[895,14,948,12,"log"],[895,17,948,15],[895,18,948,16],[895,53,948,51,"slotIndex"],[895,62,948,60],[895,64,948,62],[895,65,948,63],[897,6,950,4],[898,6,951,4],[898,10,951,10,"isReady"],[898,17,951,17],[898,20,951,20,"combatState"],[898,31,951,31],[898,32,951,32,"abilityManager"],[898,46,951,46],[898,47,951,47,"isAbilityReady"],[898,61,951,61],[898,62,951,62,"slotIndex"],[898,71,951,71],[898,72,951,72],[899,6,952,4],[899,10,952,8],[899,11,952,9,"isReady"],[899,18,952,16],[899,20,952,18],[900,8,953,6,"console"],[900,15,953,13],[900,16,953,14,"log"],[900,19,953,17],[900,20,953,18],[900,41,953,39,"slotIndex"],[900,50,953,48],[900,85,953,83],[900,86,953,84],[901,8,954,6],[901,15,954,13],[901,20,954,18],[902,6,955,4],[904,6,957,4],[905,6,958,4],[905,10,958,8,"combatState"],[905,21,958,19],[905,22,958,20,"enemies"],[905,29,958,27],[905,30,958,28,"length"],[905,36,958,34],[905,41,958,39],[905,42,958,40],[905,44,958,42],[906,8,959,6,"console"],[906,15,959,13],[906,16,959,14,"log"],[906,19,959,17],[906,20,959,18],[906,69,959,67],[906,70,959,68],[907,8,960,6],[907,15,960,13],[907,20,960,18],[908,6,961,4],[910,6,963,4],[911,6,964,4],[911,10,964,10,"currentTick"],[911,21,964,21],[911,24,964,24,"combatEngine"],[911,43,964,36],[911,44,964,36,"combatEngine"],[911,56,964,36],[911,57,964,37,"getCurrentTick"],[911,71,964,51],[911,72,964,52],[911,73,964,53],[912,6,965,4],[912,10,965,10,"success"],[912,17,965,17],[912,20,965,20,"combatState"],[912,31,965,31],[912,32,965,32,"abilityManager"],[912,46,965,46],[912,47,965,47,"useAbility"],[912,57,965,57],[912,58,965,58,"slotIndex"],[912,67,965,67],[912,69,965,69,"currentTick"],[912,80,965,80],[912,81,965,81],[913,6,967,4],[913,10,967,8,"success"],[913,17,967,15],[913,19,967,17],[914,8,968,6],[915,8,969,6,"setCombatState"],[915,22,969,20],[915,23,969,21,"prev"],[915,27,969,25],[915,31,969,29],[916,10,970,8],[916,14,970,14,"newState"],[916,22,970,22],[916,25,970,25],[917,12,970,27],[917,15,970,30,"prev"],[918,10,970,35],[918,11,970,36],[919,10,971,8,"castAbility"],[919,21,971,19],[919,22,971,20,"newState"],[919,30,971,28],[919,32,971,30,"slotIndex"],[919,41,971,39],[919,42,971,40],[920,10,972,8],[920,17,972,15,"newState"],[920,25,972,23],[921,8,973,6],[921,9,973,7],[921,10,973,8],[922,8,975,6,"console"],[922,15,975,13],[922,16,975,14,"log"],[922,19,975,17],[922,20,975,18],[922,65,975,63,"slotIndex"],[922,74,975,72],[922,76,975,74],[922,77,975,75],[923,8,976,6],[923,15,976,13],[923,19,976,17],[924,6,977,4],[924,7,977,5],[924,13,977,11],[925,8,978,6,"console"],[925,15,978,13],[925,16,978,14,"log"],[925,19,978,17],[925,20,978,18],[925,61,978,59,"slotIndex"],[925,70,978,68],[925,72,978,70],[925,73,978,71],[926,8,979,6],[926,15,979,13],[926,20,979,18],[927,6,980,4],[928,4,981,2],[928,5,981,3],[928,46,981,5],[928,47,981,6,"combatState"],[928,58,981,17],[928,59,981,18,"abilityManager"],[928,73,981,32],[928,75,981,34,"combatState"],[928,86,981,45],[928,87,981,46,"enemies"],[928,94,981,53],[928,95,981,54],[928,96,981,55],[929,4,982,2],[929,8,982,2,"useEffect"],[929,14,982,11],[929,15,982,11,"useEffect"],[929,24,982,11],[929,26,982,12],[929,32,982,18],[930,6,983,4,"combatEngine"],[930,25,983,16],[930,26,983,16,"combatEngine"],[930,38,983,16],[930,39,983,17,"start"],[930,44,983,22],[930,45,983,23],[930,46,983,24],[932,6,985,4],[933,6,986,4],[934,6,987,4,"console"],[934,13,987,11],[934,14,987,12,"log"],[934,17,987,15],[934,18,987,16],[934,97,987,95],[934,98,987,96],[935,6,989,4],[935,13,989,11],[935,19,989,17],[936,8,990,6,"combatEngine"],[936,27,990,18],[936,28,990,18,"combatEngine"],[936,40,990,18],[936,41,990,19,"stop"],[936,45,990,23],[936,46,990,24],[936,47,990,25],[937,6,991,4],[937,7,991,5],[938,4,992,2],[938,5,992,3],[938,7,992,5],[938,9,992,7],[938,10,992,8],[940,4,994,2],[941,4,995,2],[941,8,995,2,"useEffect"],[941,14,995,11],[941,15,995,11,"useEffect"],[941,24,995,11],[941,26,995,12],[941,32,995,18],[942,6,996,4],[942,10,996,10,"processProjectileImpacts"],[942,34,996,34],[942,37,996,37,"processProjectileImpacts"],[942,38,996,37],[942,43,996,43],[943,8,997,6,"setProjectiles"],[943,22,997,20],[943,23,997,21,"currentProjectiles"],[943,41,997,39],[943,45,997,43],[944,10,998,8],[944,17,998,15,"currentProjectiles"],[944,35,998,33],[944,36,998,34,"map"],[944,39,998,37],[944,40,998,38,"projectile"],[944,50,998,48],[944,54,998,52],[945,12,999,10],[945,16,999,14],[945,17,999,15,"projectile"],[945,27,999,25],[945,29,999,27],[945,36,999,34],[945,40,999,38],[947,12,1001,10],[948,12,1002,10],[948,16,1002,16,"currentTime"],[948,27,1002,27],[948,30,1002,30,"Date"],[948,34,1002,34],[948,35,1002,35,"now"],[948,38,1002,38],[948,39,1002,39],[948,40,1002,40],[949,12,1003,10],[949,16,1003,16,"startTime"],[949,25,1003,25],[949,28,1003,28,"projectile"],[949,38,1003,38],[949,39,1003,39,"startTime"],[949,48,1003,48],[949,52,1003,52,"currentTime"],[949,63,1003,63],[950,12,1004,10],[950,16,1004,16,"elapsedTime"],[950,27,1004,27],[950,30,1004,30,"currentTime"],[950,41,1004,41],[950,44,1004,44,"startTime"],[950,53,1004,53],[951,12,1005,10],[951,16,1005,16,"progress"],[951,24,1005,24],[951,27,1005,27,"Math"],[951,31,1005,31],[951,32,1005,32,"min"],[951,35,1005,35],[951,36,1005,36,"elapsedTime"],[951,47,1005,47],[951,51,1005,51,"projectile"],[951,61,1005,61],[951,62,1005,62,"duration"],[951,70,1005,70],[951,74,1005,74],[951,77,1005,77],[951,78,1005,78],[951,80,1005,80],[951,81,1005,81],[951,82,1005,82],[953,12,1007,10],[954,12,1008,10],[954,16,1008,14,"progress"],[954,24,1008,22],[954,28,1008,26],[954,29,1008,27],[954,33,1008,31],[954,34,1008,32,"projectile"],[954,44,1008,42],[954,45,1008,43,"hasHit"],[954,51,1008,49],[954,53,1008,51],[955,14,1009,12,"projectile"],[955,24,1009,22],[955,25,1009,23,"hasHit"],[955,31,1009,29],[955,34,1009,32],[955,38,1009,36],[956,14,1011,12,"console"],[956,21,1011,19],[956,22,1011,20,"log"],[956,25,1011,23],[956,26,1011,24],[956,51,1011,49,"projectile"],[956,61,1011,59],[956,62,1011,60,"abilityName"],[956,73,1011,71],[956,87,1011,85,"projectile"],[956,97,1011,95],[956,98,1011,96,"targetEnemyId"],[956,111,1011,109],[956,119,1011,117,"projectile"],[956,129,1011,127],[956,130,1011,128,"damage"],[956,136,1011,134],[956,145,1011,143],[956,146,1011,144],[958,14,1013,12],[959,14,1014,12,"setCombatState"],[959,28,1014,26],[959,29,1014,27,"prev"],[959,33,1014,31],[959,37,1014,35],[960,16,1015,14],[960,20,1015,20,"newState"],[960,28,1015,28],[960,31,1015,31],[961,18,1015,33],[961,21,1015,36,"prev"],[962,16,1015,41],[962,17,1015,42],[963,16,1016,14],[963,20,1016,20,"enemyIndex"],[963,30,1016,30],[963,33,1016,33,"newState"],[963,41,1016,41],[963,42,1016,42,"enemies"],[963,49,1016,49],[963,50,1016,50,"findIndex"],[963,59,1016,59],[963,60,1016,60,"e"],[963,61,1016,61],[963,65,1016,65,"e"],[963,66,1016,66],[963,67,1016,67,"id"],[963,69,1016,69],[963,74,1016,74,"projectile"],[963,84,1016,84],[963,85,1016,85,"targetEnemyId"],[963,98,1016,98],[963,99,1016,99],[964,16,1018,14],[964,20,1018,18,"enemyIndex"],[964,30,1018,28],[964,34,1018,32],[964,35,1018,33],[964,39,1018,37,"newState"],[964,47,1018,45],[964,48,1018,46,"enemies"],[964,55,1018,53],[964,56,1018,54,"enemyIndex"],[964,66,1018,64],[964,67,1018,65],[964,68,1018,66,"health"],[964,74,1018,72],[964,77,1018,75],[964,78,1018,76],[964,80,1018,78],[965,18,1019,16,"newState"],[965,26,1019,24],[965,27,1019,25,"enemies"],[965,34,1019,32],[965,37,1019,35],[965,38,1019,36],[965,41,1019,39,"newState"],[965,49,1019,47],[965,50,1019,48,"enemies"],[965,57,1019,55],[965,58,1019,56],[966,18,1020,16],[966,22,1020,22,"enemy"],[966,27,1020,27],[966,30,1020,30,"newState"],[966,38,1020,38],[966,39,1020,39,"enemies"],[966,46,1020,46],[966,47,1020,47,"enemyIndex"],[966,57,1020,57],[966,58,1020,58],[967,18,1021,16],[967,22,1021,22,"newHealth"],[967,31,1021,31],[967,34,1021,34,"Math"],[967,38,1021,38],[967,39,1021,39,"max"],[967,42,1021,42],[967,43,1021,43],[967,44,1021,44],[967,46,1021,46,"enemy"],[967,51,1021,51],[967,52,1021,52,"health"],[967,58,1021,58],[967,61,1021,61,"projectile"],[967,71,1021,71],[967,72,1021,72,"damage"],[967,78,1021,78],[967,79,1021,79],[968,18,1023,16,"newState"],[968,26,1023,24],[968,27,1023,25,"enemies"],[968,34,1023,32],[968,35,1023,33,"enemyIndex"],[968,45,1023,43],[968,46,1023,44],[968,49,1023,47],[969,20,1024,18],[969,23,1024,21,"enemy"],[969,28,1024,26],[970,20,1025,18,"health"],[970,26,1025,24],[970,28,1025,26,"newHealth"],[970,37,1025,35],[971,20,1026,18,"lastDamaged"],[971,31,1026,29],[971,33,1026,31,"combatEngine"],[971,52,1026,43],[971,53,1026,43,"combatEngine"],[971,65,1026,43],[971,66,1026,44,"getCurrentTick"],[971,80,1026,58],[971,81,1026,59],[972,18,1027,16],[972,19,1027,17],[973,18,1029,16,"console"],[973,25,1029,23],[973,26,1029,24,"log"],[973,29,1029,27],[973,30,1029,28],[973,52,1029,50,"enemy"],[973,57,1029,55],[973,58,1029,56,"name"],[973,62,1029,60],[973,74,1029,72,"newHealth"],[973,83,1029,81],[973,87,1029,85,"enemy"],[973,92,1029,90],[973,93,1029,91,"maxHealth"],[973,102,1029,100],[973,104,1029,102],[973,105,1029,103],[975,18,1031,16],[976,18,1032,16],[976,22,1032,20,"newHealth"],[976,31,1032,29],[976,35,1032,33],[976,36,1032,34],[976,40,1032,38,"enemy"],[976,45,1032,43],[976,46,1032,44,"health"],[976,52,1032,50],[976,55,1032,53],[976,56,1032,54],[976,58,1032,56],[977,20,1033,18,"console"],[977,27,1033,25],[977,28,1033,26,"log"],[977,31,1033,29],[977,32,1033,30],[977,55,1033,53,"enemy"],[977,60,1033,58],[977,61,1033,59,"name"],[977,65,1033,63],[977,79,1033,77,"projectile"],[977,89,1033,87],[977,90,1033,88,"abilityName"],[977,101,1033,99],[977,104,1033,102],[977,105,1033,103],[978,20,1034,18,"setTimeout"],[978,30,1034,28],[978,31,1034,29],[978,37,1034,35,"handleEnemyKill"],[978,52,1034,50],[978,53,1034,51,"enemy"],[978,58,1034,56],[978,59,1034,57],[978,61,1034,59],[978,62,1034,60],[978,63,1034,61],[979,18,1035,16],[980,16,1036,14],[981,16,1038,14],[981,23,1038,21,"newState"],[981,31,1038,29],[982,14,1039,12],[982,15,1039,13],[982,16,1039,14],[983,12,1040,10],[985,12,1042,10],[986,12,1043,10],[986,16,1043,14,"progress"],[986,24,1043,22],[986,28,1043,26],[986,31,1043,29],[986,33,1043,31],[987,14,1044,12],[987,21,1044,19],[987,25,1044,23],[988,12,1045,10],[989,12,1047,10],[989,19,1047,17,"projectile"],[989,29,1047,27],[990,10,1048,8],[990,11,1048,9],[990,12,1048,10],[990,13,1048,11,"filter"],[990,19,1048,17],[990,20,1048,18,"Boolean"],[990,27,1048,25],[990,28,1048,26],[991,8,1049,6],[991,9,1049,7],[991,10,1049,8],[992,6,1050,4],[992,7,1050,5],[994,6,1052,4],[995,6,1053,4],[995,10,1053,10,"impactInterval"],[995,24,1053,24],[995,27,1053,27,"setInterval"],[995,38,1053,38],[995,39,1053,39,"processProjectileImpacts"],[995,63,1053,63],[995,65,1053,65],[995,67,1053,67],[995,68,1053,68],[996,6,1054,4],[996,13,1054,11],[996,19,1054,17,"clearInterval"],[996,32,1054,30],[996,33,1054,31,"impactInterval"],[996,47,1054,45],[996,48,1054,46],[997,4,1055,2],[997,5,1055,3],[997,7,1055,5],[997,8,1055,6,"handleEnemyKill"],[997,23,1055,21],[997,24,1055,22],[997,25,1055,23],[999,4,1057,2],[1000,4,1058,2],[1000,8,1058,8,"saveAbilityData"],[1000,23,1058,23],[1000,26,1058,26],[1000,30,1058,26,"useCallback"],[1000,36,1058,37],[1000,37,1058,37,"useCallback"],[1000,48,1058,37],[1000,50,1058,38],[1000,56,1058,44],[1001,6,1059,4],[1001,10,1059,8,"combatState"],[1001,21,1059,19],[1001,22,1059,20,"abilityManager"],[1001,36,1059,34],[1001,38,1059,36],[1002,8,1060,6],[1002,12,1060,12,"abilityData"],[1002,23,1060,23],[1002,26,1060,26,"combatState"],[1002,37,1060,37],[1002,38,1060,38,"abilityManager"],[1002,52,1060,52],[1002,53,1060,53,"getSaveData"],[1002,64,1060,64],[1002,65,1060,65],[1002,66,1060,66],[1003,8,1061,6,"console"],[1003,15,1061,13],[1003,16,1061,14,"log"],[1003,19,1061,17],[1003,20,1061,18],[1003,70,1061,68],[1003,72,1061,70,"abilityData"],[1003,83,1061,81],[1003,84,1061,82],[1004,8,1062,6,"game"],[1004,12,1062,10],[1004,13,1062,11,"updateAbilityData"],[1004,30,1062,28],[1004,31,1062,29,"abilityData"],[1004,42,1062,40],[1004,43,1062,41],[1005,6,1063,4],[1006,4,1064,2],[1006,5,1064,3],[1006,7,1064,5],[1006,8,1064,6,"combatState"],[1006,19,1064,17],[1006,20,1064,18,"abilityManager"],[1006,34,1064,32],[1006,36,1064,34,"game"],[1006,40,1064,38],[1006,41,1064,39,"updateAbilityData"],[1006,58,1064,56],[1006,59,1064,57],[1006,60,1064,58],[1007,4,1066,2],[1007,8,1066,8,"contextValue"],[1007,20,1066,39],[1007,23,1066,42,"React"],[1007,28,1066,47],[1007,29,1066,47,"default"],[1007,36,1066,47],[1007,37,1066,48,"useMemo"],[1007,44,1066,55],[1007,45,1066,56],[1007,52,1066,63],[1008,6,1067,4,"combatState"],[1008,17,1067,15],[1009,6,1068,4,"projectiles"],[1009,17,1068,15],[1010,6,1069,4,"startCombat"],[1010,17,1069,15],[1011,6,1070,4,"stopCombat"],[1011,16,1070,14],[1012,6,1071,4,"equipAbility"],[1012,18,1071,16],[1013,6,1072,4,"handleEnemyKill"],[1013,21,1072,19],[1014,6,1073,4,"getDeck"],[1014,13,1073,11],[1015,6,1074,4,"getAvailableAbilities"],[1015,27,1074,25],[1016,6,1075,4,"upgradeAbility"],[1016,20,1075,18],[1017,6,1076,4,"spawnEnemy"],[1017,16,1076,14],[1018,6,1077,4,"spawnBoss"],[1018,15,1077,13],[1019,6,1078,4,"clearAllEnemies"],[1019,21,1078,19],[1020,6,1079,4,"clearSpecificEnemy"],[1020,24,1079,22],[1021,6,1080,4,"triggerLevelUpExplosion"],[1021,29,1080,27],[1022,6,1081,4,"findClosestEnemy"],[1022,22,1081,20],[1023,6,1082,4,"updateNinjaPosition"],[1023,25,1082,23],[1024,6,1083,4,"setManualControlActive"],[1024,28,1083,26],[1025,6,1084,4,"lastExplosionTime"],[1025,23,1084,21],[1026,6,1085,4,"useAbilityManually"],[1026,24,1085,22],[1027,6,1085,24],[1028,6,1086,4,"saveAbilityData"],[1028,21,1086,19],[1029,6,1086,21],[1030,6,1087,4,"shadowClone"],[1030,17,1087,15],[1030,19,1087,17,"combatState"],[1030,30,1087,28],[1030,31,1087,29,"shadowClone"],[1030,42,1087,40],[1030,43,1087,42],[1031,4,1088,2],[1031,5,1088,3],[1031,6,1088,4],[1031,8,1088,6],[1032,4,1089,4],[1033,4,1090,4],[1034,4,1091,4,"combatState"],[1034,15,1091,15],[1034,17,1092,4,"projectiles"],[1034,28,1092,15],[1034,30,1093,4,"lastExplosionTime"],[1034,47,1093,21],[1035,4,1094,4],[1036,4,1095,4,"combatState"],[1036,15,1095,15],[1036,16,1095,16,"abilityManager"],[1036,30,1095,30],[1036,32,1096,4,"combatState"],[1036,43,1096,15],[1036,44,1096,16,"enemies"],[1036,51,1096,23],[1036,53,1097,4,"combatState"],[1036,64,1097,15],[1036,65,1097,16,"shadowClone"],[1036,76,1097,27],[1037,4,1097,29],[1038,4,1098,4,"useAbilityManually"],[1038,22,1098,22],[1039,4,1098,24],[1040,4,1099,4,"saveAbilityData"],[1040,19,1099,19],[1040,20,1099,21],[1041,4,1099,21],[1041,5,1100,3],[1041,6,1100,4],[1042,4,1102,2],[1042,24,1103,4],[1042,28,1103,4,"_reactJsxDevRuntime"],[1042,47,1103,4],[1042,48,1103,4,"jsxDEV"],[1042,54,1103,4],[1042,56,1103,5,"CombatContext"],[1042,69,1103,18],[1042,70,1103,19,"Provider"],[1042,78,1103,27],[1043,6,1103,28,"value"],[1043,11,1103,33],[1043,13,1103,35,"contextValue"],[1043,25,1103,48],[1044,6,1103,48,"children"],[1044,14,1103,48],[1044,16,1104,7,"children"],[1045,4,1104,15],[1046,6,1104,15,"fileName"],[1046,14,1104,15],[1046,16,1104,15,"_jsxFileName"],[1046,28,1104,15],[1047,6,1104,15,"lineNumber"],[1047,16,1104,15],[1048,6,1104,15,"columnNumber"],[1048,18,1104,15],[1049,4,1104,15],[1049,11,1105,28],[1049,12,1105,29],[1050,2,1107,0],[1050,3,1107,1],[1051,2,1107,2,"_s4"],[1051,5,1107,2],[1051,6,100,13,"CombatProvider"],[1051,20,100,27],[1052,4,100,27],[1052,12,101,15,"useGame"],[1052,24,101,22],[1052,25,101,22,"useGame"],[1052,32,101,22],[1052,34,102,77,"useZone"],[1052,46,102,84],[1052,47,102,84,"useZone"],[1052,54,102,84],[1053,2,102,84],[1054,2,102,84,"_c"],[1054,4,102,84],[1054,7,100,13,"CombatProvider"],[1054,21,100,27],[1055,2,100,27],[1055,6,100,27,"_c"],[1055,8,100,27],[1056,2,100,27,"$RefreshReg$"],[1056,14,100,27],[1056,15,100,27,"_c"],[1056,17,100,27],[1057,0,100,27],[1057,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQmD;6BNyD;mBMG;ORgC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}