{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 5x faster and smoother\n            var MOVEMENT_SPEED = 1.5; // 5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            var newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            var newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (var i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"M7idUr+15+29eHjcIfL4MGsNNLE=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":613,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,620,2],[27,6,620,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,620,2],[27,42,620,2,"require"],[27,49,620,2],[27,50,620,2,"_dependencyMap"],[27,64,620,2],[28,2,620,2],[28,6,620,2,"_slicedToArray"],[28,20,620,2],[28,23,620,2,"_interopDefault"],[28,38,620,2],[28,39,620,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,620,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,65,0],[36,6,65,6,"CombatContext"],[36,19,65,19],[36,35,65,22],[36,39,65,22,"createContext"],[36,45,65,35],[36,46,65,35,"createContext"],[36,59,65,35],[36,61,65,67,"undefined"],[36,70,65,76],[36,71,65,77],[37,2,67,7],[37,6,67,13,"useCombat"],[37,15,67,22],[37,18,67,25,"useCombat"],[37,19,67,25],[37,24,67,50],[38,4,67,50,"_s"],[38,6,67,50],[39,4,68,2],[39,8,68,8,"context"],[39,15,68,15],[39,18,68,18],[39,22,68,18,"useContext"],[39,28,68,28],[39,29,68,28,"useContext"],[39,39,68,28],[39,41,68,29,"CombatContext"],[39,54,68,42],[39,55,68,43],[40,4,69,2],[40,8,69,6],[40,9,69,7,"context"],[40,16,69,14],[40,18,69,16],[41,6,70,4],[41,12,70,10],[41,16,70,14,"Error"],[41,21,70,19],[41,22,70,20],[41,70,70,68],[41,71,70,69],[42,4,71,2],[43,4,72,2],[43,11,72,9,"context"],[43,18,72,16],[44,2,73,0],[44,3,73,1],[45,2,73,2,"_s"],[45,4,73,2],[45,5,67,13,"useCombat"],[45,14,67,22],[46,2,75,0],[46,6,75,4,"enemyCounter"],[46,18,75,16],[46,21,75,19],[46,22,75,20],[46,23,75,21],[46,24,75,22],[48,2,77,7],[48,6,77,13,"CombatProvider"],[48,20,77,27],[48,23,77,30,"_ref"],[48,27,77,30],[48,31,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,77,73],[50,8,77,33,"children"],[50,16,77,41],[50,19,77,41,"_ref"],[50,23,77,41],[50,24,77,33,"children"],[50,32,77,41],[51,4,78,2],[51,8,78,2,"_useGame"],[51,16,78,2],[51,19,78,26],[51,23,78,26,"useGame"],[51,35,78,33],[51,36,78,33,"useGame"],[51,43,78,33],[51,45,78,34],[51,46,78,35],[52,6,78,10,"updateNinja"],[52,17,78,21],[52,20,78,21,"_useGame"],[52,28,78,21],[52,29,78,10,"updateNinja"],[52,40,78,21],[53,4,79,2],[53,8,79,2,"_useZone"],[53,16,79,2],[53,19,79,30],[53,23,79,30,"useZone"],[53,35,79,37],[53,36,79,37,"useZone"],[53,43,79,37],[53,45,79,38],[53,46,79,39],[54,6,79,10,"recordEnemyKill"],[54,21,79,25],[54,24,79,25,"_useZone"],[54,32,79,25],[54,33,79,10,"recordEnemyKill"],[54,48,79,25],[55,4,81,2],[55,8,81,2,"_useState"],[55,17,81,2],[55,20,81,40],[55,24,81,40,"useState"],[55,30,81,48],[55,31,81,48,"useState"],[55,39,81,48],[55,41,81,62],[56,8,82,4,"isInCombat"],[56,18,82,14],[56,20,82,16],[56,25,82,21],[57,8,83,4,"currentTick"],[57,19,83,15],[57,21,83,17],[57,22,83,18],[58,8,84,4,"enemies"],[58,15,84,11],[58,17,84,13],[58,19,84,15],[59,8,85,4,"abilityManager"],[59,22,85,18],[59,24,85,20],[59,28,85,24,"AbilityManager"],[59,46,85,38],[59,47,85,38,"AbilityManager"],[59,61,85,38],[59,62,85,39],[59,63,85,40],[60,8,86,4,"statusEffects"],[60,21,86,17],[60,23,86,19],[60,27,86,23,"StatusEffectManager"],[60,46,86,42],[60,47,86,42,"StatusEffectManager"],[60,66,86,42],[60,67,86,43],[60,68,86,44],[61,8,87,4,"playerStats"],[61,19,87,15],[61,21,87,17],[62,10,88,6,"attack"],[62,16,88,12],[62,18,88,14],[62,20,88,16],[63,10,88,18],[64,10,89,6,"defense"],[64,17,89,13],[64,19,89,15],[64,20,89,16],[65,10,90,6,"health"],[65,16,90,12],[65,18,90,14],[65,21,90,17],[66,10,91,6,"maxHealth"],[66,19,91,15],[66,21,91,17],[66,24,91,20],[67,10,92,6,"critChance"],[67,20,92,16],[67,22,92,18],[67,23,92,19],[68,10,93,6,"critDamage"],[68,20,93,16],[68,22,93,18],[68,25,93,21],[69,10,94,6,"cooldownReduction"],[69,27,94,23],[69,29,94,25],[70,8,95,4],[71,6,96,2],[71,7,96,3],[71,8,96,4],[72,6,96,4,"_useState2"],[72,16,96,4],[72,23,96,4,"_slicedToArray"],[72,37,96,4],[72,38,96,4,"default"],[72,45,96,4],[72,47,96,4,"_useState"],[72,56,96,4],[73,6,81,9,"combatState"],[73,17,81,20],[73,20,81,20,"_useState2"],[73,30,81,20],[74,6,81,22,"setCombatState"],[74,20,81,36],[74,23,81,36,"_useState2"],[74,33,81,36],[75,4,98,2],[75,8,98,2,"_useState3"],[75,18,98,2],[75,21,98,40],[75,25,98,40,"useState"],[75,31,98,48],[75,32,98,48,"useState"],[75,40,98,48],[75,42,98,69],[75,44,98,71],[75,45,98,72],[76,6,98,72,"_useState4"],[76,16,98,72],[76,23,98,72,"_slicedToArray"],[76,37,98,72],[76,38,98,72,"default"],[76,45,98,72],[76,47,98,72,"_useState3"],[76,57,98,72],[77,6,98,9,"projectiles"],[77,17,98,20],[77,20,98,20,"_useState4"],[77,30,98,20],[78,6,98,22,"setProjectiles"],[78,20,98,36],[78,23,98,36,"_useState4"],[78,33,98,36],[79,4,99,2],[79,8,99,2,"_useState5"],[79,18,99,2],[79,21,99,52],[79,25,99,52,"useState"],[79,31,99,60],[79,32,99,60,"useState"],[79,40,99,60],[79,42,99,69],[79,43,99,70],[79,44,99,71],[80,6,99,71,"_useState6"],[80,16,99,71],[80,23,99,71,"_slicedToArray"],[80,37,99,71],[80,38,99,71,"default"],[80,45,99,71],[80,47,99,71,"_useState5"],[80,57,99,71],[81,6,99,9,"lastExplosionTime"],[81,23,99,26],[81,26,99,26,"_useState6"],[81,36,99,26],[82,6,99,28,"setLastExplosionTime"],[82,26,99,48],[82,29,99,48,"_useState6"],[82,39,99,48],[83,4,100,2],[84,4,101,2],[86,4,103,2],[87,4,104,2],[87,8,104,8,"handleEnemyKill"],[87,23,104,23],[87,26,104,26],[87,30,104,26,"useCallback"],[87,36,104,37],[87,37,104,37,"useCallback"],[87,48,104,37],[87,50,104,39,"enemy"],[87,55,104,57],[87,59,104,62],[88,6,105,4,"console"],[88,13,105,11],[88,14,105,12,"log"],[88,17,105,15],[88,18,105,16],[88,46,105,44,"enemy"],[88,51,105,49],[88,52,105,50,"maxHealth"],[88,61,105,59],[88,63,105,61],[88,64,105,62],[90,6,107,4],[91,6,108,4],[91,10,108,10,"xpReward"],[91,18,108,18],[91,21,108,21],[91,23,108,23],[91,24,108,24],[91,25,108,25],[92,6,109,4],[92,10,109,10,"goldReward"],[92,20,109,20],[92,23,109,23],[92,25,109,25],[93,6,111,4,"console"],[93,13,111,11],[93,14,111,12,"log"],[93,17,111,15],[93,18,111,16],[93,33,111,31,"xpReward"],[93,41,111,39],[93,52,111,50,"goldReward"],[93,62,111,60],[93,78,111,76],[93,79,111,77],[95,6,113,4],[96,6,114,4],[97,6,115,4,"setTimeout"],[97,16,115,14],[97,17,115,15],[97,23,115,21],[98,8,116,6],[99,8,117,6,"updateNinja"],[99,19,117,17],[99,20,117,19,"prev"],[99,24,117,23],[99,28,117,28],[100,10,118,8,"console"],[100,17,118,15],[100,18,118,16,"log"],[100,21,118,19],[100,22,118,20],[100,39,118,37,"prev"],[100,43,118,41],[100,44,118,42,"experience"],[100,54,118,52],[100,66,118,64,"prev"],[100,70,118,68],[100,71,118,69,"experience"],[100,81,118,79],[100,84,118,82,"xpReward"],[100,92,118,90],[100,94,118,92],[100,95,118,93],[101,10,119,8],[101,17,119,15],[102,12,120,10,"experience"],[102,22,120,20],[102,24,120,22,"prev"],[102,28,120,26],[102,29,120,27,"experience"],[102,39,120,37],[102,42,120,40,"xpReward"],[102,50,120,48],[103,12,121,10,"gold"],[103,16,121,14],[103,18,121,16,"prev"],[103,22,121,20],[103,23,121,21,"gold"],[103,27,121,25],[103,30,121,28,"goldReward"],[104,10,122,8],[104,11,122,9],[105,8,123,6],[105,9,123,7],[105,10,123,8],[107,8,125,6],[108,8,126,6],[108,12,126,12,"zoneEnemy"],[108,21,126,21],[108,24,126,24],[109,10,127,8,"id"],[109,12,127,10],[109,14,127,12,"enemy"],[109,19,127,17],[109,20,127,18,"id"],[109,22,127,20],[110,10,128,8,"typeId"],[110,16,128,14],[110,18,128,16],[110,28,128,26],[111,10,128,28],[112,10,129,8,"name"],[112,14,129,12],[112,16,129,14,"enemy"],[112,21,129,19],[112,22,129,20,"name"],[112,26,129,24],[113,10,130,8,"icon"],[113,14,130,12],[113,16,130,14],[113,20,130,18],[114,10,130,20],[115,10,131,8,"hp"],[115,12,131,10],[115,14,131,12],[115,15,131,13],[116,10,131,15],[117,10,132,8,"maxHP"],[117,15,132,13],[117,17,132,15,"enemy"],[117,22,132,20],[117,23,132,21,"maxHealth"],[117,32,132,30],[118,10,133,8,"attack"],[118,16,133,14],[118,18,133,16,"enemy"],[118,23,133,21],[118,24,133,22,"stats"],[118,29,133,27],[118,30,133,28,"attack"],[118,36,133,34],[119,10,134,8,"xp"],[119,12,134,10],[119,14,134,12],[119,16,134,14],[120,10,134,16],[121,10,135,8,"position"],[121,18,135,16],[121,20,135,18,"enemy"],[121,25,135,23],[121,26,135,24,"position"],[122,8,136,6],[122,9,136,7],[123,8,137,6,"recordEnemyKill"],[123,23,137,21],[123,24,137,22,"zoneEnemy"],[123,33,137,31],[123,34,137,32],[124,6,138,4],[124,7,138,5],[124,9,138,7],[124,10,138,8],[124,11,138,9],[124,12,138,10],[124,13,138,11],[125,4,139,2],[125,5,139,3],[125,7,139,5],[125,8,139,6,"updateNinja"],[125,19,139,17],[125,21,139,19,"recordEnemyKill"],[125,36,139,34],[125,37,139,35],[125,38,139,36],[127,4,141,2],[128,4,142,2],[128,8,142,8,"handleCombatTick"],[128,24,142,24],[128,27,142,27,"React"],[128,32,142,32],[128,33,142,32,"default"],[128,40,142,32],[128,41,142,33,"useCallback"],[128,52,142,44],[128,53,142,45],[128,59,142,51],[129,6,142,51],[129,10,142,51,"_s2"],[129,13,142,51],[129,16,142,51,"$RefreshSig$"],[129,28,142,51],[130,6,143,4,"console"],[130,13,143,11],[130,14,143,12,"log"],[130,17,143,15],[130,18,143,16],[130,45,143,43],[130,46,143,44],[131,6,145,4],[131,10,145,8,"enemiesToKill"],[131,23,145,36],[131,26,145,39],[131,28,145,41],[131,29,145,42],[131,30,145,43],[133,6,147,4,"_s2"],[133,9,147,4],[133,10,147,4,"setCombatState"],[133,24,147,18],[133,25,147,18,"_s2"],[133,28,147,18],[133,29,147,19,"prev"],[133,33,147,23],[133,37,147,27],[134,8,147,27,"_s2"],[134,11,147,27],[135,8,148,6],[135,12,148,12,"newTick"],[135,19,148,19],[135,22,148,22,"combatEngine"],[135,41,148,34],[135,42,148,34,"combatEngine"],[135,54,148,34],[135,55,148,35,"getCurrentTick"],[135,69,148,49],[135,70,148,50],[135,71,148,51],[136,8,149,6],[136,12,149,12,"newState"],[136,20,149,20],[136,23,149,23],[137,10,149,25],[137,13,149,28,"prev"],[137,17,149,32],[138,10,149,34,"currentTick"],[138,21,149,45],[138,23,149,47,"newTick"],[139,8,149,55],[139,9,149,56],[140,8,151,6],[140,12,151,10],[140,13,151,11,"newState"],[140,21,151,19],[140,22,151,20,"isInCombat"],[140,32,151,30],[140,34,151,32],[140,41,151,39,"newState"],[140,49,151,47],[142,8,153,6],[143,8,154,6,"newState"],[143,16,154,14],[143,17,154,15,"abilityManager"],[143,31,154,29],[143,32,154,30,"updateCooldowns"],[143,47,154,45],[143,48,154,46,"newTick"],[143,55,154,53],[143,56,154,54],[145,8,156,6],[146,8,157,6],[146,12,157,12,"effectResults"],[146,25,157,25],[146,28,157,28,"newState"],[146,36,157,36],[146,37,157,37,"statusEffects"],[146,50,157,50],[146,51,157,51,"processTick"],[146,62,157,62],[146,63,157,63,"newTick"],[146,70,157,70],[146,71,157,71],[148,8,159,6],[149,8,160,6,"effectResults"],[149,21,160,19],[149,22,160,20,"forEach"],[149,29,160,27],[149,30,160,28],[149,31,160,29,"results"],[149,38,160,36],[149,40,160,38,"entityId"],[149,48,160,46],[149,53,160,51],[150,10,161,8],[150,14,161,14,"enemyIndex"],[150,24,161,24],[150,27,161,27,"newState"],[150,35,161,35],[150,36,161,36,"enemies"],[150,43,161,43],[150,44,161,44,"findIndex"],[150,53,161,53],[150,54,161,54,"e"],[150,55,161,55],[150,59,161,59,"e"],[150,60,161,60],[150,61,161,61,"id"],[150,63,161,63],[150,68,161,68,"entityId"],[150,76,161,76],[150,77,161,77],[151,10,162,8],[151,14,162,12,"enemyIndex"],[151,24,162,22],[151,28,162,26],[151,29,162,27],[151,31,162,29],[152,12,163,10,"results"],[152,19,163,17],[152,20,163,18,"forEach"],[152,27,163,25],[152,28,163,26,"result"],[152,34,163,32],[152,38,163,36],[153,14,164,12,"newState"],[153,22,164,20],[153,23,164,21,"enemies"],[153,30,164,28],[153,31,164,29,"enemyIndex"],[153,41,164,39],[153,42,164,40],[153,43,164,41,"health"],[153,49,164,47],[153,53,164,51,"result"],[153,59,164,57],[153,60,164,58,"damage"],[153,66,164,64],[154,14,165,12,"newState"],[154,22,165,20],[154,23,165,21,"enemies"],[154,30,165,28],[154,31,165,29,"enemyIndex"],[154,41,165,39],[154,42,165,40],[154,43,165,41,"lastDamaged"],[154,54,165,52],[154,57,165,55,"newTick"],[154,64,165,62],[155,12,166,10],[155,13,166,11],[155,14,166,12],[156,10,167,8],[157,8,168,6],[157,9,168,7],[157,10,168,8],[159,8,170,6],[160,8,171,6,"newState"],[160,16,171,14],[160,17,171,15,"enemies"],[160,24,171,22],[160,25,171,23,"forEach"],[160,32,171,30],[160,33,171,31,"enemy"],[160,38,171,36],[160,42,171,40],[161,10,172,8],[161,14,172,12],[161,15,172,13,"enemy"],[161,20,172,18],[161,21,172,19,"isBoss"],[161,27,172,25],[161,29,172,27],[162,12,172,29],[163,12,173,10],[164,12,174,10],[164,16,174,16,"MOVEMENT_SPEED"],[164,30,174,30],[164,33,174,33],[164,36,174,36],[164,37,174,37],[164,38,174,38],[165,12,175,10],[165,16,175,16,"SCREEN_WIDTH"],[165,28,175,28],[165,31,175,31],[165,34,175,34],[166,12,176,10],[166,16,176,16,"GAME_AREA_HEIGHT"],[166,32,176,32],[166,35,176,35],[166,38,176,38],[166,39,176,39],[166,40,176,40],[167,12,177,10],[167,16,177,16,"ENEMY_SIZE"],[167,26,177,26],[167,29,177,29],[167,31,177,31],[169,12,179,10],[170,12,180,10],[170,16,180,14],[170,17,180,15,"enemy"],[170,22,180,20],[170,23,180,21,"movementDirection"],[170,40,180,38],[170,42,180,40],[171,14,181,12],[172,14,182,12,"enemy"],[172,19,182,17],[172,20,182,18,"movementDirection"],[172,37,182,35],[172,40,182,38],[173,16,183,14,"x"],[173,17,183,15],[173,19,183,17],[173,20,183,18,"Math"],[173,24,183,22],[173,25,183,23,"random"],[173,31,183,29],[173,32,183,30],[173,33,183,31],[173,36,183,34],[173,39,183,37],[173,43,183,41],[173,44,183,42],[174,16,183,44],[175,16,184,14,"y"],[175,17,184,15],[175,19,184,17],[175,20,184,18,"Math"],[175,24,184,22],[175,25,184,23,"random"],[175,31,184,29],[175,32,184,30],[175,33,184,31],[175,36,184,34],[175,39,184,37],[175,43,184,41],[176,14,185,12],[176,15,185,13],[177,12,186,10],[179,12,188,10],[180,12,189,10],[180,16,189,14,"newX"],[180,20,189,18],[180,23,189,21,"enemy"],[180,28,189,26],[180,29,189,27,"position"],[180,37,189,35],[180,38,189,36,"x"],[180,39,189,37],[180,42,189,41,"enemy"],[180,47,189,46],[180,48,189,47,"movementDirection"],[180,65,189,64],[180,66,189,65,"x"],[180,67,189,66],[180,70,189,69,"MOVEMENT_SPEED"],[180,84,189,84],[181,12,190,10],[181,16,190,14,"newY"],[181,20,190,18],[181,23,190,21,"enemy"],[181,28,190,26],[181,29,190,27,"position"],[181,37,190,35],[181,38,190,36,"y"],[181,39,190,37],[181,42,190,41,"enemy"],[181,47,190,46],[181,48,190,47,"movementDirection"],[181,65,190,64],[181,66,190,65,"y"],[181,67,190,66],[181,70,190,69,"MOVEMENT_SPEED"],[181,84,190,84],[183,12,192,10],[184,12,193,10],[184,16,193,14,"newX"],[184,20,193,18],[184,24,193,22],[184,25,193,23],[184,29,193,27,"newX"],[184,33,193,31],[184,37,193,35,"SCREEN_WIDTH"],[184,49,193,47],[184,52,193,50,"ENEMY_SIZE"],[184,62,193,60],[184,64,193,62],[185,14,194,12,"enemy"],[185,19,194,17],[185,20,194,18,"movementDirection"],[185,37,194,35],[185,38,194,36,"x"],[185,39,194,37],[185,43,194,41],[185,44,194,42],[185,45,194,43],[186,14,195,12,"newX"],[186,18,195,16],[186,21,195,19,"Math"],[186,25,195,23],[186,26,195,24,"max"],[186,29,195,27],[186,30,195,28],[186,31,195,29],[186,33,195,31,"Math"],[186,37,195,35],[186,38,195,36,"min"],[186,41,195,39],[186,42,195,40,"SCREEN_WIDTH"],[186,54,195,52],[186,57,195,55,"ENEMY_SIZE"],[186,67,195,65],[186,69,195,67,"newX"],[186,73,195,71],[186,74,195,72],[186,75,195,73],[187,12,196,10],[188,12,197,10],[188,16,197,14,"newY"],[188,20,197,18],[188,24,197,22],[188,25,197,23],[188,29,197,27,"newY"],[188,33,197,31],[188,37,197,35,"GAME_AREA_HEIGHT"],[188,53,197,51],[188,56,197,54,"ENEMY_SIZE"],[188,66,197,64],[188,68,197,66],[189,14,198,12,"enemy"],[189,19,198,17],[189,20,198,18,"movementDirection"],[189,37,198,35],[189,38,198,36,"y"],[189,39,198,37],[189,43,198,41],[189,44,198,42],[189,45,198,43],[190,14,199,12,"newY"],[190,18,199,16],[190,21,199,19,"Math"],[190,25,199,23],[190,26,199,24,"max"],[190,29,199,27],[190,30,199,28],[190,31,199,29],[190,33,199,31,"Math"],[190,37,199,35],[190,38,199,36,"min"],[190,41,199,39],[190,42,199,40,"GAME_AREA_HEIGHT"],[190,58,199,56],[190,61,199,59,"ENEMY_SIZE"],[190,71,199,69],[190,73,199,71,"newY"],[190,77,199,75],[190,78,199,76],[190,79,199,77],[191,12,200,10],[193,12,202,10],[194,12,203,10,"enemy"],[194,17,203,15],[194,18,203,16,"position"],[194,26,203,24],[194,27,203,25,"x"],[194,28,203,26],[194,31,203,29,"newX"],[194,35,203,33],[195,12,204,10,"enemy"],[195,17,204,15],[195,18,204,16,"position"],[195,26,204,24],[195,27,204,25,"y"],[195,28,204,26],[195,31,204,29,"newY"],[195,35,204,33],[197,12,206,10],[198,12,207,10],[198,16,207,14,"Math"],[198,20,207,18],[198,21,207,19,"random"],[198,27,207,25],[198,28,207,26],[198,29,207,27],[198,32,207,30],[198,36,207,34],[198,38,207,36],[199,14,207,38],[200,14,208,12,"enemy"],[200,19,208,17],[200,20,208,18,"movementDirection"],[200,37,208,35],[200,40,208,38],[201,16,209,14,"x"],[201,17,209,15],[201,19,209,17],[201,20,209,18,"Math"],[201,24,209,22],[201,25,209,23,"random"],[201,31,209,29],[201,32,209,30],[201,33,209,31],[201,36,209,34],[201,39,209,37],[201,43,209,41],[201,44,209,42],[202,16,210,14,"y"],[202,17,210,15],[202,19,210,17],[202,20,210,18,"Math"],[202,24,210,22],[202,25,210,23,"random"],[202,31,210,29],[202,32,210,30],[202,33,210,31],[202,36,210,34],[202,39,210,37],[202,43,210,41],[203,14,211,12],[203,15,211,13],[204,12,212,10],[205,10,213,8],[206,8,214,6],[206,9,214,7],[206,10,214,8],[208,8,216,6],[209,8,217,6],[209,13,217,11],[209,17,217,15,"i"],[209,18,217,16],[209,21,217,19],[209,22,217,20],[209,24,217,22,"i"],[209,25,217,23],[209,28,217,26],[209,29,217,27],[209,31,217,29,"i"],[209,32,217,30],[209,34,217,32],[209,36,217,34],[210,10,218,8],[210,14,218,12,"newState"],[210,22,218,20],[210,23,218,21,"abilityManager"],[210,37,218,35],[210,38,218,36,"isAbilityReady"],[210,52,218,50],[210,53,218,51,"i"],[210,54,218,52],[210,55,218,53],[210,59,218,57,"newState"],[210,67,218,65],[210,68,218,66,"enemies"],[210,75,218,73],[210,76,218,74,"length"],[210,82,218,80],[210,85,218,83],[210,86,218,84],[210,88,218,86],[211,12,219,10],[211,16,219,14,"newState"],[211,24,219,22],[211,25,219,23,"abilityManager"],[211,39,219,37],[211,40,219,38,"useAbility"],[211,50,219,48],[211,51,219,49,"i"],[211,52,219,50],[211,54,219,52,"newTick"],[211,61,219,59],[211,62,219,60],[211,64,219,62],[212,14,220,12,"castAbility"],[212,25,220,23],[212,26,220,24,"newState"],[212,34,220,32],[212,36,220,34,"i"],[212,37,220,35],[212,38,220,36],[213,12,221,10],[214,10,222,8],[215,8,223,6],[217,8,225,6],[218,8,226,6],[218,12,226,12,"deadEnemies"],[218,23,226,23],[218,26,226,26,"newState"],[218,34,226,34],[218,35,226,35,"enemies"],[218,42,226,42],[218,43,226,43,"filter"],[218,49,226,49],[218,50,226,50,"enemy"],[218,55,226,55],[218,59,226,59,"enemy"],[218,64,226,64],[218,65,226,65,"health"],[218,71,226,71],[218,75,226,75],[218,76,226,76],[218,77,226,77],[219,8,227,6,"enemiesToKill"],[219,21,227,19],[219,24,227,22],[219,25,227,23],[219,28,227,26,"deadEnemies"],[219,39,227,37],[219,40,227,38],[219,41,227,39],[219,42,227,40],[221,8,229,6],[222,8,230,6,"newState"],[222,16,230,14],[222,17,230,15,"enemies"],[222,24,230,22],[222,27,230,25,"newState"],[222,35,230,33],[222,36,230,34,"enemies"],[222,43,230,41],[222,44,230,42,"filter"],[222,50,230,48],[222,51,230,49,"enemy"],[222,56,230,54],[222,60,230,58,"enemy"],[222,65,230,63],[222,66,230,64,"health"],[222,72,230,70],[222,75,230,73],[222,76,230,74],[222,77,230,75],[224,8,232,6],[225,8,233,6],[226,8,234,6],[226,12,234,12,"MAX_ENEMIES"],[226,23,234,23],[226,26,234,26],[226,28,234,28],[227,8,235,6],[227,12,235,12,"MIN_SPAWN_DELAY"],[227,27,235,27],[227,30,235,30],[227,33,235,33],[227,34,235,34],[227,35,235,35],[228,8,236,6],[228,12,236,12,"now"],[228,15,236,15],[228,18,236,18,"Date"],[228,22,236,22],[228,23,236,23,"now"],[228,26,236,26],[228,27,236,27],[228,28,236,28],[229,8,237,6],[229,12,237,12,"hasBoss"],[229,19,237,19],[229,22,237,22,"newState"],[229,30,237,30],[229,31,237,31,"enemies"],[229,38,237,38],[229,39,237,39,"some"],[229,43,237,43],[229,44,237,44,"enemy"],[229,49,237,49],[229,53,237,53,"enemy"],[229,58,237,58],[229,59,237,59,"isBoss"],[229,65,237,65],[229,66,237,66],[231,8,239,6],[232,8,240,6],[232,12,240,10],[232,13,240,11,"newState"],[232,21,240,19],[232,22,240,20,"lastSpawnTime"],[232,35,240,33],[232,37,240,35],[233,10,241,8,"newState"],[233,18,241,16],[233,19,241,17,"lastSpawnTime"],[233,32,241,30],[233,35,241,33,"now"],[233,38,241,36],[234,8,242,6],[235,8,244,6,"console"],[235,15,244,13],[235,16,244,14,"log"],[235,19,244,17],[235,20,244,18],[235,53,244,51,"newState"],[235,61,244,59],[235,62,244,60,"enemies"],[235,69,244,67],[235,70,244,68,"length"],[235,76,244,74],[235,85,244,83,"MAX_ENEMIES"],[235,96,244,94],[235,109,244,107,"hasBoss"],[235,116,244,114],[235,118,244,116],[235,119,244,117],[237,8,246,6],[238,8,247,6],[238,12,247,10],[238,13,247,11,"hasBoss"],[238,20,247,18],[238,24,247,22,"newState"],[238,32,247,30],[238,33,247,31,"enemies"],[238,40,247,38],[238,41,247,39,"length"],[238,47,247,45],[238,50,247,48,"MAX_ENEMIES"],[238,61,247,59],[238,65,247,64,"now"],[238,68,247,67],[238,71,247,70,"newState"],[238,79,247,78],[238,80,247,79,"lastSpawnTime"],[238,93,247,92],[238,97,247,97,"MIN_SPAWN_DELAY"],[238,112,247,112],[238,114,247,114],[239,10,248,8,"console"],[239,17,248,15],[239,18,248,16,"log"],[239,21,248,19],[239,22,248,20],[239,43,248,41,"newState"],[239,51,248,49],[239,52,248,50,"enemies"],[239,59,248,57],[239,60,248,58,"length"],[239,66,248,64],[239,69,248,67],[239,70,248,68],[239,74,248,72,"MAX_ENEMIES"],[239,85,248,83],[239,87,248,85],[239,88,248,86],[240,10,249,8,"spawnTestEnemy"],[240,24,249,22],[240,25,249,23,"newState"],[240,33,249,31],[240,34,249,32],[241,10,250,8,"newState"],[241,18,250,16],[241,19,250,17,"lastSpawnTime"],[241,32,250,30],[241,35,250,33,"now"],[241,38,250,36],[242,8,251,6],[243,8,253,6],[243,15,253,13,"newState"],[243,23,253,21],[244,6,254,4],[244,7,254,5],[244,47,254,6],[246,6,256,4],[247,6,257,4,"enemiesToKill"],[247,19,257,17],[247,20,257,18,"forEach"],[247,27,257,25],[247,28,257,26,"enemy"],[247,33,257,31],[247,37,257,35],[248,8,258,6,"handleEnemyKill"],[248,23,258,21],[248,24,258,22,"enemy"],[248,29,258,27],[248,30,258,28],[249,6,259,4],[249,7,259,5],[249,8,259,6],[250,4,260,2],[250,5,260,3],[250,7,260,5],[250,8,260,6,"handleEnemyKill"],[250,23,260,21],[250,24,260,22],[250,25,260,23],[250,26,260,24],[250,27,260,25],[252,4,262,2],[253,4,263,2],[253,8,263,8,"findClosestEnemyInternal"],[253,32,263,32],[253,35,263,36,"enemies"],[253,42,263,58],[253,46,263,83],[254,6,264,4],[254,10,264,8,"enemies"],[254,17,264,15],[254,18,264,16,"length"],[254,24,264,22],[254,29,264,27],[254,30,264,28],[254,32,264,30],[254,39,264,37],[254,43,264,41],[256,6,266,4],[257,6,267,4],[257,10,267,10,"SCREEN_WIDTH"],[257,22,267,22],[257,25,267,25],[257,28,267,28],[258,6,268,4],[258,10,268,10,"GAME_AREA_HEIGHT"],[258,26,268,26],[258,29,268,29],[258,32,268,32],[258,35,268,35],[258,38,268,38],[258,39,268,39],[258,40,268,40],[259,6,269,4],[259,10,269,10,"ninjaX"],[259,16,269,16],[259,19,269,19,"SCREEN_WIDTH"],[259,31,269,31],[259,34,269,34],[259,35,269,35],[260,6,270,4],[260,10,270,10,"ninjaY"],[260,16,270,16],[260,19,270,19,"GAME_AREA_HEIGHT"],[260,35,270,35],[260,38,270,38],[260,39,270,39],[261,6,272,4],[261,10,272,8,"closestEnemy"],[261,22,272,20],[261,25,272,23,"enemies"],[261,32,272,30],[261,33,272,31],[261,34,272,32],[261,35,272,33],[262,6,273,4],[262,10,273,8,"closestDistance"],[262,25,273,23],[262,28,273,26,"Infinity"],[262,36,273,34],[263,6,275,4,"enemies"],[263,13,275,11],[263,14,275,12,"forEach"],[263,21,275,19],[263,22,275,20,"enemy"],[263,27,275,25],[263,31,275,29],[264,8,276,6],[264,12,276,12,"distance"],[264,20,276,20],[264,23,276,23,"Math"],[264,27,276,27],[264,28,276,28,"sqrt"],[264,32,276,32],[264,33,277,8,"Math"],[264,37,277,12],[264,38,277,13,"pow"],[264,41,277,16],[264,42,277,17,"enemy"],[264,47,277,22],[264,48,277,23,"position"],[264,56,277,31],[264,57,277,32,"x"],[264,58,277,33],[264,61,277,36,"ninjaX"],[264,67,277,42],[264,69,277,44],[264,70,277,45],[264,71,277,46],[264,74,278,8,"Math"],[264,78,278,12],[264,79,278,13,"pow"],[264,82,278,16],[264,83,278,17,"enemy"],[264,88,278,22],[264,89,278,23,"position"],[264,97,278,31],[264,98,278,32,"y"],[264,99,278,33],[264,102,278,36,"ninjaY"],[264,108,278,42],[264,110,278,44],[264,111,278,45],[264,112,279,6],[264,113,279,7],[265,8,281,6],[265,12,281,10,"distance"],[265,20,281,18],[265,23,281,21,"closestDistance"],[265,38,281,36],[265,40,281,38],[266,10,282,8,"closestDistance"],[266,25,282,23],[266,28,282,26,"distance"],[266,36,282,34],[267,10,283,8,"closestEnemy"],[267,22,283,20],[267,25,283,23,"enemy"],[267,30,283,28],[268,8,284,6],[269,6,285,4],[269,7,285,5],[269,8,285,6],[270,6,287,4,"console"],[270,13,287,11],[270,14,287,12,"log"],[270,17,287,15],[270,18,287,16],[270,60,287,58,"closestDistance"],[270,75,287,73],[270,76,287,74,"toFixed"],[270,83,287,81],[270,84,287,82],[270,85,287,83],[270,86,287,84],[270,88,287,86],[270,89,287,87],[271,6,288,4],[271,13,288,11,"closestEnemy"],[271,25,288,23],[272,4,289,2],[272,5,289,3],[274,4,291,2],[275,4,292,2],[275,8,292,8,"findClosestEnemy"],[275,24,292,24],[275,27,292,27,"findClosestEnemy"],[275,28,292,27],[275,33,292,53],[276,6,293,4],[276,13,293,11,"findClosestEnemyInternal"],[276,37,293,35],[276,38,293,36,"combatState"],[276,49,293,47],[276,50,293,48,"enemies"],[276,57,293,55],[276,58,293,56],[277,4,294,2],[277,5,294,3],[279,4,296,2],[280,4,297,2],[280,8,297,2,"_useState7"],[280,18,297,2],[280,21,297,58],[280,25,297,58,"useState"],[280,31,297,66],[280,32,297,66,"useState"],[280,40,297,66],[280,42,297,91],[281,8,297,93,"x"],[281,9,297,94],[281,11,297,96],[281,12,297,97],[282,8,297,99,"y"],[282,9,297,100],[282,11,297,102],[283,6,297,104],[283,7,297,105],[283,8,297,106],[284,6,297,106,"_useState8"],[284,16,297,106],[284,23,297,106,"_slicedToArray"],[284,37,297,106],[284,38,297,106,"default"],[284,45,297,106],[284,47,297,106,"_useState7"],[284,57,297,106],[285,6,297,9,"currentNinjaPosition"],[285,26,297,29],[285,29,297,29,"_useState8"],[285,39,297,29],[286,6,297,31,"setCurrentNinjaPosition"],[286,29,297,54],[286,32,297,54,"_useState8"],[286,42,297,54],[288,4,299,2],[289,4,300,2],[289,8,300,8,"updateNinjaPosition"],[289,27,300,27],[289,30,300,30],[289,34,300,30,"useCallback"],[289,40,300,41],[289,41,300,41,"useCallback"],[289,52,300,41],[289,54,300,43,"newPosition"],[289,65,300,78],[289,69,300,83],[290,6,301,4,"setCurrentNinjaPosition"],[290,29,301,27],[290,30,301,28,"newPosition"],[290,41,301,39],[290,42,301,40],[291,4,302,2],[291,5,302,3],[291,7,302,5],[291,9,302,7],[291,10,302,8],[293,4,304,2],[294,4,305,2],[294,8,305,8,"handleProjectileHit"],[294,27,305,27],[294,30,305,31,"projectile"],[294,40,305,59],[294,44,305,64],[295,6,306,4,"console"],[295,13,306,11],[295,14,306,12,"log"],[295,17,306,15],[295,18,306,16],[295,35,306,33,"projectile"],[295,45,306,43],[295,46,306,44,"id"],[295,48,306,46],[295,62,306,60,"projectile"],[295,72,306,70],[295,73,306,71,"targetEnemyId"],[295,86,306,84],[295,94,306,92,"projectile"],[295,104,306,102],[295,105,306,103,"damage"],[295,111,306,109],[295,120,306,118],[295,121,306,119],[296,6,308,4,"setCombatState"],[296,20,308,18],[296,21,308,19,"prev"],[296,25,308,23],[296,29,308,27],[297,8,309,6],[297,12,309,12,"newState"],[297,20,309,20],[297,23,309,23],[298,10,309,25],[298,13,309,28,"prev"],[299,8,309,33],[299,9,309,34],[301,8,311,6],[302,8,312,6],[302,12,312,12,"enemyIndex"],[302,22,312,22],[302,25,312,25,"newState"],[302,33,312,33],[302,34,312,34,"enemies"],[302,41,312,41],[302,42,312,42,"findIndex"],[302,51,312,51],[302,52,312,52,"e"],[302,53,312,53],[302,57,312,57,"e"],[302,58,312,58],[302,59,312,59,"id"],[302,61,312,61],[302,66,312,66,"projectile"],[302,76,312,76],[302,77,312,77,"targetEnemyId"],[302,90,312,90],[302,91,312,91],[303,8,313,6],[303,12,313,10,"enemyIndex"],[303,22,313,20],[303,26,313,24],[303,27,313,25],[303,29,313,27],[304,10,314,8,"newState"],[304,18,314,16],[304,19,314,17,"enemies"],[304,26,314,24],[304,29,314,27],[304,30,314,28],[304,33,314,31,"newState"],[304,41,314,39],[304,42,314,40,"enemies"],[304,49,314,47],[304,50,314,48],[305,10,315,8,"newState"],[305,18,315,16],[305,19,315,17,"enemies"],[305,26,315,24],[305,27,315,25,"enemyIndex"],[305,37,315,35],[305,38,315,36],[305,41,315,39],[306,12,316,10],[306,15,316,13,"newState"],[306,23,316,21],[306,24,316,22,"enemies"],[306,31,316,29],[306,32,316,30,"enemyIndex"],[306,42,316,40],[306,43,316,41],[307,12,317,10,"health"],[307,18,317,16],[307,20,317,18,"newState"],[307,28,317,26],[307,29,317,27,"enemies"],[307,36,317,34],[307,37,317,35,"enemyIndex"],[307,47,317,45],[307,48,317,46],[307,49,317,47,"health"],[307,55,317,53],[307,58,317,56,"projectile"],[307,68,317,66],[307,69,317,67,"damage"],[307,75,317,73],[308,12,318,10,"lastDamaged"],[308,23,318,21],[308,25,318,23,"combatEngine"],[308,44,318,35],[308,45,318,35,"combatEngine"],[308,57,318,35],[308,58,318,36,"getCurrentTick"],[308,72,318,50],[308,73,318,51],[309,10,319,8],[309,11,319,9],[310,10,321,8,"console"],[310,17,321,15],[310,18,321,16,"log"],[310,21,321,19],[310,22,321,20],[310,34,321,32,"projectile"],[310,44,321,42],[310,45,321,43,"targetEnemyId"],[310,58,321,56],[310,70,321,68,"newState"],[310,78,321,76],[310,79,321,77,"enemies"],[310,86,321,84],[310,87,321,85,"enemyIndex"],[310,97,321,95],[310,98,321,96],[310,99,321,97,"health"],[310,105,321,103],[310,109,321,107,"newState"],[310,117,321,115],[310,118,321,116,"enemies"],[310,125,321,123],[310,126,321,124,"enemyIndex"],[310,136,321,134],[310,137,321,135],[310,138,321,136,"maxHealth"],[310,147,321,145],[310,149,321,147],[310,150,321,148],[311,8,322,6],[312,8,324,6],[312,15,324,13,"newState"],[312,23,324,21],[313,6,325,4],[313,7,325,5],[313,8,325,6],[315,6,327,4],[316,6,328,4,"setProjectiles"],[316,20,328,18],[316,21,328,19,"prev"],[316,25,328,23],[316,29,328,27,"prev"],[316,33,328,31],[316,34,328,32,"filter"],[316,40,328,38],[316,41,328,39,"p"],[316,42,328,40],[316,46,328,44,"p"],[316,47,328,45],[316,48,328,46,"id"],[316,50,328,48],[316,55,328,53,"projectile"],[316,65,328,63],[316,66,328,64,"id"],[316,68,328,66],[316,69,328,67],[316,70,328,68],[317,4,329,2],[317,5,329,3],[319,4,331,2],[320,4,332,2],[320,8,332,8,"castAbility"],[320,19,332,19],[320,22,332,22,"castAbility"],[320,23,332,23,"state"],[320,28,332,41],[320,30,332,43,"slotIndex"],[320,39,332,60],[320,44,332,65],[321,6,333,4],[321,10,333,10,"deck"],[321,14,333,14],[321,17,333,17,"state"],[321,22,333,22],[321,23,333,23,"abilityManager"],[321,37,333,37],[321,38,333,38,"getDeck"],[321,45,333,45],[321,46,333,46],[321,47,333,47],[322,6,334,4],[322,10,334,10,"ability"],[322,17,334,17],[322,20,334,20,"deck"],[322,24,334,24],[322,25,334,25,"slots"],[322,30,334,30],[322,31,334,31,"slotIndex"],[322,40,334,40],[322,41,334,41],[323,6,335,4],[323,10,335,8],[323,11,335,9,"ability"],[323,18,335,16],[323,20,335,18],[325,6,337,4],[326,6,338,4],[326,10,338,10,"target"],[326,16,338,16],[326,19,338,19,"findClosestEnemyInternal"],[326,43,338,43],[326,44,338,44,"state"],[326,49,338,49],[326,50,338,50,"enemies"],[326,57,338,57],[326,58,338,58],[327,6,339,4],[327,10,339,8],[327,11,339,9,"target"],[327,17,339,15],[327,19,339,17],[329,6,341,4],[330,6,342,4],[330,10,342,8,"damage"],[330,16,342,14],[330,19,342,17,"ability"],[330,26,342,24],[330,27,342,25,"stats"],[330,32,342,30],[330,33,342,31,"baseDamage"],[330,43,342,41],[332,6,344,4],[333,6,345,4,"deck"],[333,10,345,8],[333,11,345,9,"activeSynergies"],[333,26,345,24],[333,27,345,25,"forEach"],[333,34,345,32],[333,35,345,33,"synergy"],[333,42,345,40],[333,46,345,44],[334,8,346,6],[334,12,346,10,"synergy"],[334,19,346,17],[334,20,346,18,"bonus"],[334,25,346,23],[334,26,346,24,"damageBonus"],[334,37,346,35],[334,41,347,10,"synergy"],[334,48,347,17],[334,49,347,18,"requiredTags"],[334,61,347,30],[334,62,347,31,"some"],[334,66,347,35],[334,67,347,36,"tag"],[334,70,347,39],[334,74,347,43,"ability"],[334,81,347,50],[334,82,347,51,"tags"],[334,86,347,55],[334,87,347,56,"includes"],[334,95,347,64],[334,96,347,65,"tag"],[334,99,347,68],[334,100,347,69],[334,101,347,70],[334,103,347,72],[335,10,348,8,"damage"],[335,16,348,14],[335,20,348,19],[335,21,348,20],[335,24,348,23,"synergy"],[335,31,348,30],[335,32,348,31,"bonus"],[335,37,348,36],[335,38,348,37,"damageBonus"],[335,49,348,48],[335,52,348,51],[335,55,348,55],[336,8,349,6],[337,6,350,4],[337,7,350,5],[337,8,350,6],[339,6,352,4],[340,6,353,4],[340,10,353,10,"damageResult"],[340,22,353,22],[340,25,353,25,"DamageCalculator"],[340,44,353,41],[340,45,353,41,"DamageCalculator"],[340,61,353,41],[340,62,353,42,"calculateDamage"],[340,77,353,57],[340,78,353,58,"damage"],[340,84,353,64],[340,86,353,66,"state"],[340,91,353,71],[340,92,353,72,"playerStats"],[340,103,353,83],[340,105,353,85,"target"],[340,111,353,91],[340,112,353,92,"stats"],[340,117,353,97],[340,118,353,98],[342,6,355,4],[343,6,356,4,"createProjectile"],[343,22,356,20],[343,23,356,21,"target"],[343,29,356,27],[343,31,356,29,"damageResult"],[343,43,356,41],[343,44,356,42,"damage"],[343,50,356,48],[343,52,356,50,"currentNinjaPosition"],[343,72,356,70],[343,73,356,71],[345,6,358,4],[346,6,359,4],[346,10,359,8,"ability"],[346,17,359,15],[346,18,359,16,"effects"],[346,25,359,23],[346,26,359,24,"includes"],[346,34,359,32],[346,35,359,33],[346,40,359,38],[346,41,359,39],[346,45,359,43,"ability"],[346,52,359,50],[346,53,359,51,"stats"],[346,58,359,56],[346,59,359,57,"duration"],[346,67,359,65],[346,69,359,67],[347,8,360,6,"state"],[347,13,360,11],[347,14,360,12,"statusEffects"],[347,27,360,25],[347,28,360,26,"addEffect"],[347,37,360,35],[347,38,360,36,"target"],[347,44,360,42],[347,45,360,43,"id"],[347,47,360,45],[347,49,360,47],[348,10,361,8,"id"],[348,12,361,10],[348,14,361,12],[348,17,361,15,"ability"],[348,24,361,22],[348,25,361,23,"id"],[348,27,361,25],[348,33,361,31],[349,10,362,8,"type"],[349,14,362,12],[349,16,362,14],[349,21,362,19],[350,10,363,8,"remainingTicks"],[350,24,363,22],[350,26,363,24,"Math"],[350,30,363,28],[350,31,363,29,"floor"],[350,36,363,34],[350,37,363,35,"ability"],[350,44,363,42],[350,45,363,43,"stats"],[350,50,363,48],[350,51,363,49,"duration"],[350,59,363,57],[350,62,363,60],[350,64,363,62],[350,65,363,63],[351,10,363,65],[352,10,364,8,"tickInterval"],[352,22,364,20],[352,24,364,22],[352,26,364,24],[353,10,364,26],[354,10,365,8,"lastTick"],[354,18,365,16],[354,20,365,18,"state"],[354,25,365,23],[354,26,365,24,"currentTick"],[354,37,365,35],[355,10,366,8,"value"],[355,15,366,13],[355,17,366,15,"Math"],[355,21,366,19],[355,22,366,20,"floor"],[355,27,366,25],[355,28,366,26,"damage"],[355,34,366,32],[355,37,366,35],[355,40,366,38],[355,41,366,39],[356,10,366,41],[357,10,367,8,"stackable"],[357,19,367,17],[357,21,367,19],[358,8,368,6],[358,9,368,7],[358,10,368,8],[359,6,369,4],[360,6,371,4,"console"],[360,13,371,11],[360,14,371,12,"log"],[360,17,371,15],[360,18,371,16],[360,24,371,22,"ability"],[360,31,371,29],[360,32,371,30,"name"],[360,36,371,34],[360,69,371,67,"damageResult"],[360,81,371,79],[360,82,371,80,"damage"],[360,88,371,86],[360,98,371,96,"damageResult"],[360,110,371,108],[360,111,371,109,"isCritical"],[360,121,371,119],[360,124,371,122],[360,134,371,132],[360,137,371,135],[360,139,371,137],[360,141,371,139],[360,142,371,140],[361,4,372,2],[361,5,372,3],[363,4,374,2],[364,4,375,2],[364,8,375,8,"createProjectile"],[364,24,375,24],[364,27,375,27,"createProjectile"],[364,28,375,28,"targetEnemy"],[364,39,375,52],[364,41,375,54,"damage"],[364,47,375,68],[364,49,375,70,"ninjaPos"],[364,57,375,103],[364,62,375,108],[365,6,376,4],[365,10,376,10,"SCREEN_WIDTH"],[365,22,376,22],[365,25,376,25],[365,28,376,28],[366,6,377,4],[366,10,377,10,"GAME_AREA_HEIGHT"],[366,26,377,26],[366,29,377,29],[366,32,377,32],[366,35,377,35],[366,38,377,38],[366,39,377,39],[366,40,377,40],[367,6,378,4],[367,10,378,10,"NINJA_SIZE"],[367,20,378,20],[367,23,378,23],[367,25,378,25],[369,6,380,4],[370,6,381,4],[370,10,381,10,"ninjaX"],[370,16,381,16],[370,19,381,19,"ninjaPos"],[370,27,381,27],[370,30,381,30,"ninjaPos"],[370,38,381,38],[370,39,381,39,"x"],[370,40,381,40],[370,43,381,43,"NINJA_SIZE"],[370,53,381,53],[370,56,381,56],[370,57,381,57],[370,60,381,60,"SCREEN_WIDTH"],[370,72,381,72],[370,75,381,75],[370,76,381,76],[371,6,382,4],[371,10,382,10,"ninjaY"],[371,16,382,16],[371,19,382,19,"ninjaPos"],[371,27,382,27],[371,30,382,30,"ninjaPos"],[371,38,382,38],[371,39,382,39,"y"],[371,40,382,40],[371,43,382,43,"NINJA_SIZE"],[371,53,382,53],[371,56,382,56],[371,57,382,57],[371,60,382,60,"GAME_AREA_HEIGHT"],[371,76,382,76],[371,79,382,79],[371,80,382,80],[372,6,383,4],[372,10,383,10,"ENEMY_SIZE"],[372,20,383,20],[372,23,383,23],[372,25,383,25],[373,6,385,4],[373,10,385,10,"projectile"],[373,20,385,38],[373,23,385,41],[374,8,386,6,"id"],[374,10,386,8],[374,12,386,10],[374,20,386,18,"Date"],[374,24,386,22],[374,25,386,23,"now"],[374,28,386,26],[374,29,386,27],[374,30,386,28],[374,34,386,32,"Math"],[374,38,386,36],[374,39,386,37,"random"],[374,45,386,43],[374,46,386,44],[374,47,386,45],[374,49,386,47],[375,8,387,6,"x"],[375,9,387,7],[375,11,387,9,"ninjaX"],[375,17,387,15],[376,8,388,6,"y"],[376,9,388,7],[376,11,388,9,"ninjaY"],[376,17,388,15],[377,8,389,6,"targetX"],[377,15,389,13],[377,17,389,15,"targetEnemy"],[377,28,389,26],[377,29,389,27,"position"],[377,37,389,35],[377,38,389,36,"x"],[377,39,389,37],[377,42,389,40,"ENEMY_SIZE"],[377,52,389,50],[377,55,389,53],[377,56,389,54],[378,8,390,6,"targetY"],[378,15,390,13],[378,17,390,15,"targetEnemy"],[378,28,390,26],[378,29,390,27,"position"],[378,37,390,35],[378,38,390,36,"y"],[378,39,390,37],[378,42,390,40,"ENEMY_SIZE"],[378,52,390,50],[378,55,390,53],[378,56,390,54],[379,8,391,6,"targetEnemyId"],[379,21,391,19],[379,23,391,21,"targetEnemy"],[379,34,391,32],[379,35,391,33,"id"],[379,37,391,35],[380,8,392,6,"damage"],[380,14,392,12],[380,16,392,14,"damage"],[380,22,392,20],[381,8,393,6,"startTime"],[381,17,393,15],[381,19,393,17,"Date"],[381,23,393,21],[381,24,393,22,"now"],[381,27,393,25],[381,28,393,26],[381,29,393,27],[382,8,394,6,"duration"],[382,16,394,14],[382,18,394,16],[382,21,394,19],[382,22,394,21],[383,6,395,4],[383,7,395,5],[384,6,397,4,"console"],[384,13,397,11],[384,14,397,12,"log"],[384,17,397,15],[384,18,397,16],[384,53,397,51,"targetEnemy"],[384,64,397,62],[384,65,397,63,"id"],[384,67,397,65],[384,75,397,73,"damage"],[384,81,397,79],[384,90,397,88],[384,91,397,89],[385,6,398,4,"console"],[385,13,398,11],[385,14,398,12,"log"],[385,17,398,15],[385,18,398,16],[385,53,398,51,"ninjaX"],[385,59,398,57],[385,64,398,62,"ninjaY"],[385,70,398,68],[385,87,398,85,"projectile"],[385,97,398,95],[385,98,398,96,"targetX"],[385,105,398,103],[385,110,398,108,"projectile"],[385,120,398,118],[385,121,398,119,"targetY"],[385,128,398,126],[385,131,398,129],[385,132,398,130],[386,6,400,4,"setProjectiles"],[386,20,400,18],[386,21,400,19,"prev"],[386,25,400,23],[386,29,400,27],[386,30,400,28],[386,33,400,31,"prev"],[386,37,400,35],[386,39,400,37,"projectile"],[386,49,400,47],[386,50,400,48],[386,51,400,49],[388,6,402,4],[389,6,403,4,"setTimeout"],[389,16,403,14],[389,17,403,15],[389,23,403,21],[390,8,404,6,"handleProjectileHit"],[390,27,404,25],[390,28,404,26,"projectile"],[390,38,404,36],[390,39,404,37],[391,6,405,4],[391,7,405,5],[391,9,405,7],[391,12,405,10],[391,13,405,11],[392,4,406,2],[392,5,406,3],[394,4,408,2],[395,4,409,2],[395,8,409,8,"spawnTestEnemy"],[395,22,409,22],[395,25,409,26,"state"],[395,30,409,44],[395,34,409,49],[396,6,410,4],[397,6,411,4],[397,10,411,10,"SCREEN_WIDTH"],[397,22,411,22],[397,25,411,25],[397,28,411,28],[397,29,411,29],[397,30,411,30],[398,6,412,4],[398,10,412,10,"GAME_AREA_HEIGHT"],[398,26,412,26],[398,29,412,29],[398,32,412,32],[398,35,412,35],[398,38,412,38],[398,39,412,39],[398,40,412,40],[399,6,413,4],[399,10,413,10,"ENEMY_SIZE"],[399,20,413,20],[399,23,413,23],[399,25,413,25],[401,6,415,4],[402,6,416,4],[402,10,416,10,"x"],[402,11,416,11],[402,14,416,14,"Math"],[402,18,416,18],[402,19,416,19,"random"],[402,25,416,25],[402,26,416,26],[402,27,416,27],[402,31,416,31,"SCREEN_WIDTH"],[402,43,416,43],[402,46,416,46,"ENEMY_SIZE"],[402,56,416,56],[402,59,416,59],[402,60,416,60],[402,61,416,61],[402,64,416,64,"ENEMY_SIZE"],[402,74,416,74],[402,75,416,75],[402,76,416,76],[403,6,417,4],[403,10,417,10,"y"],[403,11,417,11],[403,14,417,14,"Math"],[403,18,417,18],[403,19,417,19,"random"],[403,25,417,25],[403,26,417,26],[403,27,417,27],[403,31,417,31,"GAME_AREA_HEIGHT"],[403,47,417,47],[403,50,417,50,"ENEMY_SIZE"],[403,60,417,60],[403,63,417,63],[403,64,417,64],[403,65,417,65],[403,68,417,68,"ENEMY_SIZE"],[403,78,417,78],[403,79,417,79],[403,80,417,80],[405,6,419,4],[405,10,419,10,"enemy"],[405,15,419,28],[405,18,419,31],[406,8,420,6,"id"],[406,10,420,8],[406,12,420,10],[406,21,420,19],[406,23,420,21,"enemyCounter"],[406,35,420,33],[406,37,420,35],[407,8,421,6,"name"],[407,12,421,10],[407,14,421,12],[407,24,421,22],[408,8,422,6,"health"],[408,14,422,12],[408,16,422,14],[408,19,422,17],[409,8,423,6,"maxHealth"],[409,17,423,15],[409,19,423,17],[409,22,423,20],[410,8,424,6,"stats"],[410,13,424,11],[410,15,424,13],[411,10,425,8,"attack"],[411,16,425,14],[411,18,425,16],[411,20,425,18],[412,10,426,8,"defense"],[412,17,426,15],[412,19,426,17],[412,21,426,19],[413,10,427,8,"health"],[413,16,427,14],[413,18,427,16],[413,21,427,19],[414,10,428,8,"maxHealth"],[414,19,428,17],[414,21,428,19],[414,24,428,22],[415,10,429,8,"critChance"],[415,20,429,18],[415,22,429,20],[415,23,429,21],[416,10,430,8,"critDamage"],[416,20,430,18],[416,22,430,20],[416,25,430,23],[417,10,431,8,"cooldownReduction"],[417,27,431,25],[417,29,431,27],[418,8,432,6],[418,9,432,7],[419,8,433,6,"position"],[419,16,433,14],[419,18,433,16],[420,10,433,18,"x"],[420,11,433,19],[421,10,433,21,"y"],[422,8,433,23],[422,9,433,24],[423,8,434,6,"lastDamaged"],[423,19,434,17],[423,21,434,19],[424,6,435,4],[424,7,435,5],[425,6,437,4,"state"],[425,11,437,9],[425,12,437,10,"enemies"],[425,19,437,17],[425,20,437,18,"push"],[425,24,437,22],[425,25,437,23,"enemy"],[425,30,437,28],[425,31,437,29],[426,4,438,2],[426,5,438,3],[428,4,440,2],[429,4,441,2],[429,8,441,8,"startCombat"],[429,19,441,19],[429,22,441,22,"React"],[429,27,441,27],[429,28,441,27,"default"],[429,35,441,27],[429,36,441,28,"useCallback"],[429,47,441,39],[429,48,441,40],[429,54,441,46],[430,6,442,4,"console"],[430,13,442,11],[430,14,442,12,"log"],[430,17,442,15],[430,18,442,16],[430,63,442,61],[430,64,442,62],[431,6,443,4,"setCombatState"],[431,20,443,18],[431,21,443,19,"prev"],[431,25,443,23],[431,30,443,28],[432,8,443,30],[432,11,443,33,"prev"],[432,15,443,37],[433,8,443,39,"isInCombat"],[433,18,443,49],[433,20,443,51],[434,6,443,56],[434,7,443,57],[434,8,443,58],[434,9,443,59],[436,6,445,4],[437,6,446,4,"combatEngine"],[437,25,446,16],[437,26,446,16,"combatEngine"],[437,38,446,16],[437,39,446,17,"addTickCallback"],[437,54,446,32],[437,55,446,33,"handleCombatTick"],[437,71,446,49],[437,72,446,50],[438,6,447,4,"console"],[438,13,447,11],[438,14,447,12,"log"],[438,17,447,15],[438,18,447,16],[438,62,447,60],[438,63,447,61],[440,6,449,4],[441,6,450,4,"combatEngine"],[441,25,450,16],[441,26,450,16,"combatEngine"],[441,38,450,16],[441,39,450,17,"start"],[441,44,450,22],[441,45,450,23],[441,46,450,24],[442,4,451,2],[442,5,451,3],[442,7,451,5],[442,8,451,6,"combatEngine"],[442,27,451,18],[442,28,451,18,"combatEngine"],[442,40,451,18],[442,42,451,20,"handleCombatTick"],[442,58,451,36],[442,59,451,37],[442,60,451,38],[444,4,453,2],[445,4,454,2],[445,8,454,8,"stopCombat"],[445,18,454,18],[445,21,454,21,"React"],[445,26,454,26],[445,27,454,26,"default"],[445,34,454,26],[445,35,454,27,"useCallback"],[445,46,454,38],[445,47,454,39],[445,53,454,45],[446,6,455,4,"setCombatState"],[446,20,455,18],[446,21,455,19,"prev"],[446,25,455,23],[446,30,455,28],[447,8,455,30],[447,11,455,33,"prev"],[447,15,455,37],[448,8,455,39,"isInCombat"],[448,18,455,49],[448,20,455,51],[449,6,455,57],[449,7,455,58],[449,8,455,59],[449,9,455,60],[450,6,456,4,"combatEngine"],[450,25,456,16],[450,26,456,16,"combatEngine"],[450,38,456,16],[450,39,456,17,"removeTickCallback"],[450,57,456,35],[450,58,456,36,"handleCombatTick"],[450,74,456,52],[450,75,456,53],[451,4,457,2],[451,5,457,3],[451,7,457,5],[451,8,457,6,"combatEngine"],[451,27,457,18],[451,28,457,18,"combatEngine"],[451,40,457,18],[451,42,457,20,"handleCombatTick"],[451,58,457,36],[451,59,457,37],[451,60,457,38],[453,4,459,2],[454,4,460,2],[454,8,460,8,"equipAbility"],[454,20,460,20],[454,23,460,23,"equipAbility"],[454,24,460,24,"abilityId"],[454,33,460,41],[454,35,460,43,"slotIndex"],[454,44,460,60],[454,49,460,74],[455,6,461,4],[455,13,461,11,"combatState"],[455,24,461,22],[455,25,461,23,"abilityManager"],[455,39,461,37],[455,40,461,38,"equipAbility"],[455,52,461,50],[455,53,461,51,"abilityId"],[455,62,461,60],[455,64,461,62,"slotIndex"],[455,73,461,71],[455,74,461,72],[456,4,462,2],[456,5,462,3],[457,4,464,2],[457,8,464,8,"getDeck"],[457,15,464,15],[457,18,464,18,"getDeck"],[457,19,464,18],[457,24,464,24],[458,6,465,4],[458,13,465,11,"combatState"],[458,24,465,22],[458,25,465,23,"abilityManager"],[458,39,465,37],[458,40,465,38,"getDeck"],[458,47,465,45],[458,48,465,46],[458,49,465,47],[459,4,466,2],[459,5,466,3],[460,4,468,2],[460,8,468,8,"getAvailableAbilities"],[460,29,468,29],[460,32,468,32,"getAvailableAbilities"],[460,33,468,32],[460,38,468,38],[461,6,469,4],[461,13,469,11,"combatState"],[461,24,469,22],[461,25,469,23,"abilityManager"],[461,39,469,37],[461,40,469,38,"getAvailableAbilities"],[461,61,469,59],[461,62,469,60],[461,63,469,61],[462,4,470,2],[462,5,470,3],[463,4,472,2],[463,8,472,8,"upgradeAbility"],[463,22,472,22],[463,25,472,26,"abilityId"],[463,34,472,43],[463,38,472,57],[464,6,473,4],[464,13,473,11,"combatState"],[464,24,473,22],[464,25,473,23,"abilityManager"],[464,39,473,37],[464,40,473,38,"upgradeAbility"],[464,54,473,52],[464,55,473,53,"abilityId"],[464,64,473,62],[464,65,473,63],[465,4,474,2],[465,5,474,3],[467,4,476,2],[468,4,477,2],[468,8,477,8,"clearAllEnemies"],[468,23,477,23],[468,26,477,26,"clearAllEnemies"],[468,27,477,26],[468,32,477,32],[469,6,478,4,"console"],[469,13,478,11],[469,14,478,12,"log"],[469,17,478,15],[469,18,478,16],[469,67,478,65],[469,68,478,66],[470,6,479,4,"setCombatState"],[470,20,479,18],[470,21,479,19,"prev"],[470,25,479,23],[470,30,479,28],[471,8,480,6],[471,11,480,9,"prev"],[471,15,480,13],[472,8,481,6,"enemies"],[472,15,481,13],[472,17,481,15],[473,6,482,4],[473,7,482,5],[473,8,482,6],[473,9,482,7],[474,4,483,2],[474,5,483,3],[476,4,485,2],[477,4,486,2],[477,8,486,8,"triggerLevelUpExplosion"],[477,31,486,31],[477,34,486,34,"triggerLevelUpExplosion"],[477,35,486,34],[477,40,486,40],[478,6,487,4,"console"],[478,13,487,11],[478,14,487,12,"log"],[478,17,487,15],[478,18,487,16],[478,70,487,68],[478,71,487,69],[479,6,489,4],[479,10,489,10,"explosionTime"],[479,23,489,23],[479,26,489,26,"Date"],[479,30,489,30],[479,31,489,31,"now"],[479,34,489,34],[479,35,489,35],[479,36,489,36],[480,6,490,4,"setLastExplosionTime"],[480,26,490,24],[480,27,490,25,"explosionTime"],[480,40,490,38],[480,41,490,39],[481,6,492,4,"setCombatState"],[481,20,492,18],[481,21,492,19,"prev"],[481,25,492,23],[481,29,492,27],[482,8,493,6],[483,8,494,6],[483,12,494,12,"enemyCount"],[483,22,494,22],[483,25,494,25,"prev"],[483,29,494,29],[483,30,494,30,"enemies"],[483,37,494,37],[483,38,494,38,"length"],[483,44,494,44],[484,8,495,6],[484,12,495,12,"explosionXP"],[484,23,495,23],[484,26,495,26,"enemyCount"],[484,36,495,36],[484,39,495,39],[484,41,495,41],[484,42,495,42],[484,43,495,43],[485,8,496,6],[485,12,496,12,"explosionGold"],[485,25,496,25],[485,28,496,28,"enemyCount"],[485,38,496,38],[485,41,496,41],[485,42,496,42],[485,43,496,43],[485,44,496,44],[487,8,498,6,"console"],[487,15,498,13],[487,16,498,14,"log"],[487,19,498,17],[487,20,498,18],[487,44,498,42,"enemyCount"],[487,54,498,52],[487,76,498,74,"explosionXP"],[487,87,498,85],[487,98,498,96,"explosionGold"],[487,111,498,109],[487,118,498,116],[487,119,498,117],[489,8,500,6],[490,8,501,6],[490,12,501,10,"explosionXP"],[490,23,501,21],[490,26,501,24],[490,27,501,25],[490,29,501,27],[491,10,502,8,"setTimeout"],[491,20,502,18],[491,21,502,19],[491,27,502,25],[492,12,503,10,"updateNinja"],[492,23,503,21],[492,24,503,23,"ninja"],[492,29,503,28],[492,34,503,34],[493,14,504,12,"experience"],[493,24,504,22],[493,26,504,24,"ninja"],[493,31,504,29],[493,32,504,30,"experience"],[493,42,504,40],[493,45,504,43,"explosionXP"],[493,56,504,54],[494,14,505,12,"gold"],[494,18,505,16],[494,20,505,18,"ninja"],[494,25,505,23],[494,26,505,24,"gold"],[494,30,505,28],[494,33,505,31,"explosionGold"],[495,12,506,10],[495,13,506,11],[495,14,506,12],[495,15,506,13],[496,10,507,8],[496,11,507,9],[496,13,507,11],[496,14,507,12],[496,15,507,13],[496,16,507,14],[496,17,507,15],[497,8,508,6],[499,8,510,6],[500,8,511,6],[501,8,512,6],[501,12,512,12,"damagedEnemies"],[501,26,512,26],[501,29,512,29,"prev"],[501,33,512,33],[501,34,512,34,"enemies"],[501,41,512,41],[501,42,512,42,"map"],[501,45,512,45],[501,46,512,46,"enemy"],[501,51,512,51],[501,56,512,56],[502,10,513,8],[502,13,513,11,"enemy"],[502,18,513,16],[503,10,514,8,"health"],[503,16,514,14],[503,18,514,16],[503,19,514,17],[504,10,514,19],[505,10,515,8,"lastDamaged"],[505,21,515,19],[505,23,515,21,"combatEngine"],[505,42,515,33],[505,43,515,33,"combatEngine"],[505,55,515,33],[505,56,515,34,"getCurrentTick"],[505,70,515,48],[505,71,515,49],[506,8,516,6],[506,9,516,7],[506,10,516,8],[506,11,516,9],[507,8,518,6],[507,15,518,13],[508,10,519,8],[508,13,519,11,"prev"],[508,17,519,15],[509,10,520,8,"enemies"],[509,17,520,15],[509,19,520,17,"damagedEnemies"],[510,8,521,6],[510,9,521,7],[511,6,522,4],[511,7,522,5],[511,8,522,6],[512,4,523,2],[512,5,523,3],[514,4,525,2],[515,4,526,2],[515,8,526,8,"spawnEnemy"],[515,18,526,18],[515,21,526,22,"position"],[515,29,526,57],[515,33,526,75],[516,6,527,4],[516,10,527,10,"SCREEN_WIDTH"],[516,22,527,22],[516,25,527,25],[516,28,527,28],[517,6,528,4],[517,10,528,10,"GAME_AREA_HEIGHT"],[517,26,528,26],[517,29,528,29],[517,32,528,32],[517,35,528,35],[517,38,528,38],[517,39,528,39],[517,40,528,40],[518,6,529,4],[518,10,529,10,"ENEMY_SIZE"],[518,20,529,20],[518,23,529,23],[518,25,529,25],[520,6,531,4],[521,6,532,4],[521,10,532,10,"x"],[521,11,532,11],[521,14,532,14,"position"],[521,22,532,22],[521,24,532,24,"x"],[521,25,532,25],[521,29,532,29,"Math"],[521,33,532,33],[521,34,532,34,"random"],[521,40,532,40],[521,41,532,41],[521,42,532,42],[521,46,532,46,"SCREEN_WIDTH"],[521,58,532,58],[521,61,532,61,"ENEMY_SIZE"],[521,71,532,71],[521,74,532,74],[521,75,532,75],[521,76,532,76],[521,79,532,79,"ENEMY_SIZE"],[521,89,532,89],[522,6,533,4],[522,10,533,10,"y"],[522,11,533,11],[522,14,533,14,"position"],[522,22,533,22],[522,24,533,24,"y"],[522,25,533,25],[522,29,533,29,"Math"],[522,33,533,33],[522,34,533,34,"random"],[522,40,533,40],[522,41,533,41],[522,42,533,42],[522,46,533,46,"GAME_AREA_HEIGHT"],[522,62,533,62],[522,65,533,65,"ENEMY_SIZE"],[522,75,533,75],[522,78,533,78],[522,79,533,79],[522,80,533,80],[522,83,533,83,"ENEMY_SIZE"],[522,93,533,93],[523,6,535,4],[523,10,535,10,"enemy"],[523,15,535,28],[523,18,535,31],[524,8,536,6,"id"],[524,10,536,8],[524,12,536,10],[524,21,536,19],[524,23,536,21,"enemyCounter"],[524,35,536,33],[524,37,536,35],[525,8,537,6,"name"],[525,12,537,10],[525,14,537,12],[525,24,537,22],[526,8,538,6,"health"],[526,14,538,12],[526,16,538,14],[526,19,538,17],[527,8,539,6,"maxHealth"],[527,17,539,15],[527,19,539,17],[527,22,539,20],[528,8,540,6,"stats"],[528,13,540,11],[528,15,540,13],[529,10,541,8,"attack"],[529,16,541,14],[529,18,541,16],[529,20,541,18],[530,10,542,8,"defense"],[530,17,542,15],[530,19,542,17],[530,21,542,19],[531,10,543,8,"health"],[531,16,543,14],[531,18,543,16],[531,21,543,19],[532,10,544,8,"maxHealth"],[532,19,544,17],[532,21,544,19],[532,24,544,22],[533,10,545,8,"critChance"],[533,20,545,18],[533,22,545,20],[533,23,545,21],[534,10,546,8,"critDamage"],[534,20,546,18],[534,22,546,20],[534,25,546,23],[535,10,547,8,"cooldownReduction"],[535,27,547,25],[535,29,547,27],[536,8,548,6],[536,9,548,7],[537,8,549,6,"position"],[537,16,549,14],[537,18,549,16],[538,10,549,18,"x"],[538,11,549,19],[539,10,549,21,"y"],[540,8,549,23],[540,9,549,24],[541,8,550,6,"lastDamaged"],[541,19,550,17],[541,21,550,19],[542,6,551,4],[542,7,551,5],[543,6,553,4,"setCombatState"],[543,20,553,18],[543,21,553,19,"prev"],[543,25,553,23],[543,30,553,28],[544,8,554,6],[544,11,554,9,"prev"],[544,15,554,13],[545,8,555,6,"enemies"],[545,15,555,13],[545,17,555,15],[545,18,555,16],[545,21,555,19,"prev"],[545,25,555,23],[545,26,555,24,"enemies"],[545,33,555,31],[545,35,555,33,"enemy"],[545,40,555,38],[546,6,556,4],[546,7,556,5],[546,8,556,6],[546,9,556,7],[547,6,558,4],[547,13,558,11,"enemy"],[547,18,558,16],[548,4,559,2],[548,5,559,3],[550,4,561,2],[551,4,562,2],[551,8,562,8,"spawnBoss"],[551,17,562,17],[551,20,562,21,"bossEnemy"],[551,29,562,43],[551,33,562,48],[552,6,563,4,"console"],[552,13,563,11],[552,14,563,12,"log"],[552,17,563,15],[552,18,563,16],[552,39,563,37,"bossEnemy"],[552,48,563,46],[552,49,563,47,"name"],[552,53,563,51],[552,90,563,88],[552,91,563,89],[553,6,564,4,"setCombatState"],[553,20,564,18],[553,21,564,19,"prev"],[553,25,564,23],[553,30,564,28],[554,8,565,6],[554,11,565,9,"prev"],[554,15,565,13],[555,8,566,6,"enemies"],[555,15,566,13],[555,17,566,15],[555,18,566,16,"bossEnemy"],[555,27,566,25],[555,28,566,26],[555,29,566,27],[556,6,567,4],[556,7,567,5],[556,8,567,6],[556,9,567,7],[557,4,568,2],[557,5,568,3],[559,4,570,2],[560,4,571,2],[560,8,571,8,"clearSpecificEnemy"],[560,26,571,26],[560,29,571,30,"enemyId"],[560,36,571,45],[560,40,571,50],[561,6,572,4,"setCombatState"],[561,20,572,18],[561,21,572,19,"prev"],[561,25,572,23],[561,30,572,28],[562,8,573,6],[562,11,573,9,"prev"],[562,15,573,13],[563,8,574,6,"enemies"],[563,15,574,13],[563,17,574,15,"prev"],[563,21,574,19],[563,22,574,20,"enemies"],[563,29,574,27],[563,30,574,28,"filter"],[563,36,574,34],[563,37,574,35,"enemy"],[563,42,574,40],[563,46,574,44,"enemy"],[563,51,574,49],[563,52,574,50,"id"],[563,54,574,52],[563,59,574,57,"enemyId"],[563,66,574,64],[564,6,575,4],[564,7,575,5],[564,8,575,6],[564,9,575,7],[565,4,576,2],[565,5,576,3],[566,4,577,2],[566,8,577,2,"useEffect"],[566,14,577,11],[566,15,577,11,"useEffect"],[566,24,577,11],[566,26,577,12],[566,32,577,18],[567,6,578,4,"combatEngine"],[567,25,578,16],[567,26,578,16,"combatEngine"],[567,38,578,16],[567,39,578,17,"start"],[567,44,578,22],[567,45,578,23],[567,46,578,24],[569,6,580,4],[570,6,581,4,"combatState"],[570,17,581,15],[570,18,581,16,"abilityManager"],[570,32,581,30],[570,33,581,31,"equipAbility"],[570,45,581,43],[570,46,581,44],[570,62,581,60],[570,64,581,62],[570,65,581,63],[570,66,581,64],[571,6,582,4,"combatState"],[571,17,582,15],[571,18,582,16,"abilityManager"],[571,32,582,30],[571,33,582,31,"equipAbility"],[571,45,582,43],[571,46,582,44],[571,61,582,59],[571,63,582,61],[571,64,582,62],[571,65,582,63],[572,6,584,4],[572,13,584,11],[572,19,584,17],[573,8,585,6,"combatEngine"],[573,27,585,18],[573,28,585,18,"combatEngine"],[573,40,585,18],[573,41,585,19,"stop"],[573,45,585,23],[573,46,585,24],[573,47,585,25],[574,6,586,4],[574,7,586,5],[575,4,587,2],[575,5,587,3],[575,7,587,5],[575,9,587,7],[575,10,587,8],[576,4,589,2],[576,8,589,8,"contextValue"],[576,20,589,39],[576,23,589,42,"React"],[576,28,589,47],[576,29,589,47,"default"],[576,36,589,47],[576,37,589,48,"useMemo"],[576,44,589,55],[576,45,589,56],[576,52,589,63],[577,6,590,4,"combatState"],[577,17,590,15],[578,6,591,4,"projectiles"],[578,17,591,15],[579,6,592,4,"startCombat"],[579,17,592,15],[580,6,593,4,"stopCombat"],[580,16,593,14],[581,6,594,4,"equipAbility"],[581,18,594,16],[582,6,595,4,"handleEnemyKill"],[582,21,595,19],[583,6,596,4,"getDeck"],[583,13,596,11],[584,6,597,4,"getAvailableAbilities"],[584,27,597,25],[585,6,598,4,"upgradeAbility"],[585,20,598,18],[586,6,599,4,"spawnEnemy"],[586,16,599,14],[587,6,600,4,"spawnBoss"],[587,15,600,13],[588,6,601,4,"clearAllEnemies"],[588,21,601,19],[589,6,602,4,"clearSpecificEnemy"],[589,24,602,22],[590,6,603,4,"triggerLevelUpExplosion"],[590,29,603,27],[591,6,604,4,"findClosestEnemy"],[591,22,604,20],[592,6,605,4,"updateNinjaPosition"],[592,25,605,23],[593,6,606,4,"lastExplosionTime"],[594,4,607,2],[594,5,607,3],[594,6,607,4],[594,8,607,6],[595,4,608,4],[596,4,609,4],[597,4,610,4,"combatState"],[597,15,610,15],[597,17,611,4,"projectiles"],[597,28,611,15],[597,30,612,4,"lastExplosionTime"],[597,47,612,21],[597,48,613,3],[597,49,613,4],[598,4,615,2],[598,24,616,4],[598,28,616,4,"_reactJsxDevRuntime"],[598,47,616,4],[598,48,616,4,"jsxDEV"],[598,54,616,4],[598,56,616,5,"CombatContext"],[598,69,616,18],[598,70,616,19,"Provider"],[598,78,616,27],[599,6,616,28,"value"],[599,11,616,33],[599,13,616,35,"contextValue"],[599,25,616,48],[600,6,616,48,"children"],[600,14,616,48],[600,16,617,7,"children"],[601,4,617,15],[602,6,617,15,"fileName"],[602,14,617,15],[602,16,617,15,"_jsxFileName"],[602,28,617,15],[603,6,617,15,"lineNumber"],[603,16,617,15],[604,6,617,15,"columnNumber"],[604,18,617,15],[605,4,617,15],[605,11,618,28],[605,12,618,29],[606,2,620,0],[606,3,620,1],[607,2,620,2,"_s3"],[607,5,620,2],[607,6,77,13,"CombatProvider"],[607,20,77,27],[608,4,77,27],[608,12,78,26,"useGame"],[608,24,78,33],[608,25,78,33,"useGame"],[608,32,78,33],[608,34,79,30,"useZone"],[608,46,79,37],[608,47,79,37,"useZone"],[608,54,79,37],[609,2,79,37],[610,2,79,37,"_c"],[610,4,79,37],[610,7,77,13,"CombatProvider"],[610,21,77,27],[611,2,77,27],[611,6,77,27,"_c"],[611,8,77,27],[612,2,77,27,"$RefreshReg$"],[612,14,77,27],[612,15,77,27,"_c"],[612,17,77,27],[613,0,77,27],[613,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBM;GhBE;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}