{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":698,"map":[[15,2,75,0,"Object"],[15,8,75,0],[15,9,75,0,"defineProperty"],[15,23,75,0],[15,24,75,0,"exports"],[15,31,75,0],[16,4,75,0,"enumerable"],[16,14,75,0],[17,4,75,0,"get"],[17,7,75,0],[17,18,75,0,"get"],[17,19,75,0],[18,6,75,0],[18,13,75,0,"useCombat"],[18,22,75,0],[19,4,75,0],[20,2,75,0],[21,2,85,0,"Object"],[21,8,85,0],[21,9,85,0,"defineProperty"],[21,23,85,0],[21,24,85,0,"exports"],[21,31,85,0],[22,4,85,0,"enumerable"],[22,14,85,0],[23,4,85,0,"get"],[23,7,85,0],[23,18,85,0,"get"],[23,19,85,0],[24,6,85,0],[24,13,85,0,"CombatProvider"],[24,27,85,0],[25,4,85,0],[26,2,85,0],[27,2,711,2],[27,6,711,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,711,2],[27,42,711,2,"require"],[27,49,711,2],[27,50,711,2,"_dependencyMap"],[27,64,711,2],[28,2,711,2],[28,6,711,2,"_slicedToArray"],[28,20,711,2],[28,23,711,2,"_interopDefault"],[28,38,711,2],[28,39,711,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,711,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,73,0],[37,6,73,6,"CombatContext"],[37,19,73,19],[37,35,73,22],[37,39,73,22,"createContext"],[37,45,73,35],[37,46,73,35,"createContext"],[37,59,73,35],[37,61,73,67,"undefined"],[37,70,73,76],[37,71,73,77],[38,2,75,7],[38,6,75,13,"useCombat"],[38,15,75,22],[38,18,75,25,"useCombat"],[38,19,75,25],[38,24,75,50],[39,4,75,50,"_s"],[39,6,75,50],[40,4,76,2],[40,8,76,8,"context"],[40,15,76,15],[40,18,76,18],[40,22,76,18,"useContext"],[40,28,76,28],[40,29,76,28,"useContext"],[40,39,76,28],[40,41,76,29,"CombatContext"],[40,54,76,42],[40,55,76,43],[41,4,77,2],[41,8,77,6],[41,9,77,7,"context"],[41,16,77,14],[41,18,77,16],[42,6,78,4],[42,12,78,10],[42,16,78,14,"Error"],[42,21,78,19],[42,22,78,20],[42,70,78,68],[42,71,78,69],[43,4,79,2],[44,4,80,2],[44,11,80,9,"context"],[44,18,80,16],[45,2,81,0],[45,3,81,1],[46,2,81,2,"_s"],[46,4,81,2],[46,5,75,13,"useCombat"],[46,14,75,22],[47,2,83,0],[47,6,83,4,"enemyCounter"],[47,18,83,16],[47,21,83,19],[47,22,83,20],[47,23,83,21],[47,24,83,22],[49,2,85,7],[49,6,85,13,"CombatProvider"],[49,20,85,27],[49,23,85,30,"_ref"],[49,27,85,30],[49,31,85,73],[50,4,85,73,"_s4"],[50,7,85,73],[51,4,85,73],[51,8,85,73,"_s3"],[51,11,85,73],[51,14,85,73,"$RefreshSig$"],[51,26,85,73],[52,4,85,73],[52,8,85,33,"children"],[52,16,85,41],[52,19,85,41,"_ref"],[52,23,85,41],[52,24,85,33,"children"],[52,32,85,41],[53,4,86,2],[53,8,86,2,"_useGame"],[53,16,86,2],[53,19,86,26],[53,23,86,26,"useGame"],[53,35,86,33],[53,36,86,33,"useGame"],[53,43,86,33],[53,45,86,34],[53,46,86,35],[54,6,86,10,"updateNinja"],[54,17,86,21],[54,20,86,21,"_useGame"],[54,28,86,21],[54,29,86,10,"updateNinja"],[54,40,86,21],[55,4,87,2],[55,8,87,2,"_useZone"],[55,16,87,2],[55,19,87,30],[55,23,87,30,"useZone"],[55,35,87,37],[55,36,87,37,"useZone"],[55,43,87,37],[55,45,87,38],[55,46,87,39],[56,6,87,10,"recordEnemyKill"],[56,21,87,25],[56,24,87,25,"_useZone"],[56,32,87,25],[56,33,87,10,"recordEnemyKill"],[56,48,87,25],[57,4,89,2],[57,8,89,2,"_useState"],[57,17,89,2],[57,20,89,40],[57,24,89,40,"useState"],[57,30,89,48],[57,31,89,48,"useState"],[57,39,89,48],[57,41,89,62],[58,8,90,4,"isInCombat"],[58,18,90,14],[58,20,90,16],[58,25,90,21],[59,8,91,4,"currentTick"],[59,19,91,15],[59,21,91,17],[59,22,91,18],[60,8,92,4,"enemies"],[60,15,92,11],[60,17,92,13],[60,19,92,15],[61,8,93,4,"abilityManager"],[61,22,93,18],[61,24,93,20],[61,28,93,24,"AbilityManager"],[61,46,93,38],[61,47,93,38,"AbilityManager"],[61,61,93,38],[61,62,93,39],[61,63,93,40],[62,8,94,4,"statusEffects"],[62,21,94,17],[62,23,94,19],[62,27,94,23,"StatusEffectManager"],[62,46,94,42],[62,47,94,42,"StatusEffectManager"],[62,66,94,42],[62,67,94,43],[62,68,94,44],[63,8,95,4,"playerStats"],[63,19,95,15],[63,21,95,17],[64,10,96,6,"attack"],[64,16,96,12],[64,18,96,14],[64,20,96,16],[65,10,96,18],[66,10,97,6,"defense"],[66,17,97,13],[66,19,97,15],[66,20,97,16],[67,10,98,6,"health"],[67,16,98,12],[67,18,98,14],[67,21,98,17],[68,10,99,6,"maxHealth"],[68,19,99,15],[68,21,99,17],[68,24,99,20],[69,10,100,6,"critChance"],[69,20,100,16],[69,22,100,18],[69,23,100,19],[70,10,101,6,"critDamage"],[70,20,101,16],[70,22,101,18],[70,25,101,21],[71,10,102,6,"cooldownReduction"],[71,27,102,23],[71,29,102,25],[72,8,103,4],[73,6,104,2],[73,7,104,3],[73,8,104,4],[74,6,104,4,"_useState2"],[74,16,104,4],[74,23,104,4,"_slicedToArray"],[74,37,104,4],[74,38,104,4,"default"],[74,45,104,4],[74,47,104,4,"_useState"],[74,56,104,4],[75,6,89,9,"combatState"],[75,17,89,20],[75,20,89,20,"_useState2"],[75,30,89,20],[76,6,89,22,"setCombatState"],[76,20,89,36],[76,23,89,36,"_useState2"],[76,33,89,36],[77,4,106,2],[77,8,106,2,"_useState3"],[77,18,106,2],[77,21,106,40],[77,25,106,40,"useState"],[77,31,106,48],[77,32,106,48,"useState"],[77,40,106,48],[77,42,106,69],[77,44,106,71],[77,45,106,72],[78,6,106,72,"_useState4"],[78,16,106,72],[78,23,106,72,"_slicedToArray"],[78,37,106,72],[78,38,106,72,"default"],[78,45,106,72],[78,47,106,72,"_useState3"],[78,57,106,72],[79,6,106,9,"projectiles"],[79,17,106,20],[79,20,106,20,"_useState4"],[79,30,106,20],[80,6,106,22,"setProjectiles"],[80,20,106,36],[80,23,106,36,"_useState4"],[80,33,106,36],[81,4,107,2],[81,8,107,2,"_useState5"],[81,18,107,2],[81,21,107,52],[81,25,107,52,"useState"],[81,31,107,60],[81,32,107,60,"useState"],[81,40,107,60],[81,42,107,69],[81,43,107,70],[81,44,107,71],[82,6,107,71,"_useState6"],[82,16,107,71],[82,23,107,71,"_slicedToArray"],[82,37,107,71],[82,38,107,71,"default"],[82,45,107,71],[82,47,107,71,"_useState5"],[82,57,107,71],[83,6,107,9,"lastExplosionTime"],[83,23,107,26],[83,26,107,26,"_useState6"],[83,36,107,26],[84,6,107,28,"setLastExplosionTime"],[84,26,107,48],[84,29,107,48,"_useState6"],[84,39,107,48],[85,4,108,2],[86,4,109,2],[88,4,111,2],[89,4,112,2],[89,8,112,8,"handleEnemyKill"],[89,23,112,23],[89,26,112,26],[89,30,112,26,"useCallback"],[89,36,112,37],[89,37,112,37,"useCallback"],[89,48,112,37],[89,50,112,39,"enemy"],[89,55,112,57],[89,59,112,62],[90,6,113,4,"console"],[90,13,113,11],[90,14,113,12,"log"],[90,17,113,15],[90,18,113,16],[90,73,113,71],[90,75,113,73,"enemy"],[90,80,113,78],[90,81,113,79,"id"],[90,83,113,81],[90,84,113,82],[92,6,115,4],[93,6,116,4],[93,10,116,10,"xpReward"],[93,18,116,18],[93,21,116,21],[93,23,116,23],[93,24,116,24],[93,25,116,25],[94,6,117,4],[94,10,117,10,"goldReward"],[94,20,117,20],[94,23,117,23],[94,25,117,25],[95,6,119,4,"console"],[95,13,119,11],[95,14,119,12,"log"],[95,17,119,15],[95,18,119,16],[95,48,119,46,"xpReward"],[95,56,119,54],[95,67,119,65,"goldReward"],[95,77,119,75],[95,93,119,91],[95,94,119,92],[96,6,120,4,"console"],[96,13,120,11],[96,14,120,12,"log"],[96,17,120,15],[96,18,120,16],[96,49,120,47,"Platform"],[96,61,120,55],[96,62,120,55,"Platform"],[96,70,120,55],[96,71,120,56,"OS"],[96,73,120,58],[96,84,120,69,"Date"],[96,88,120,73],[96,89,120,74,"now"],[96,92,120,77],[96,93,120,78],[96,94,120,79],[96,96,120,81],[96,97,120,82],[98,6,122,4],[99,6,123,4],[100,6,124,4,"setTimeout"],[100,16,124,14],[100,17,124,15],[100,23,124,21],[101,8,125,6,"console"],[101,15,125,13],[101,16,125,14,"log"],[101,19,125,17],[101,20,125,18],[101,78,125,76],[101,79,125,77],[103,8,127,6],[104,8,128,6,"updateNinja"],[104,19,128,17],[104,20,128,19,"prev"],[104,24,128,23],[104,28,128,28],[105,10,129,8,"console"],[105,17,129,15],[105,18,129,16,"log"],[105,21,129,19],[105,22,129,20],[105,54,129,52,"prev"],[105,58,129,56],[105,59,129,57,"experience"],[105,69,129,67],[105,81,129,79,"prev"],[105,85,129,83],[105,86,129,84,"experience"],[105,96,129,94],[105,99,129,97,"xpReward"],[105,107,129,105],[105,109,129,107],[105,110,129,108],[106,10,130,8,"console"],[106,17,130,15],[106,18,130,16,"log"],[106,21,130,19],[106,22,130,20],[106,56,130,54,"prev"],[106,60,130,58],[106,61,130,59,"gold"],[106,65,130,63],[106,77,130,75,"prev"],[106,81,130,79],[106,82,130,80,"gold"],[106,86,130,84],[106,89,130,87,"goldReward"],[106,99,130,97],[106,101,130,99],[106,102,130,100],[107,10,131,8],[107,17,131,15],[108,12,132,10,"experience"],[108,22,132,20],[108,24,132,22,"prev"],[108,28,132,26],[108,29,132,27,"experience"],[108,39,132,37],[108,42,132,40,"xpReward"],[108,50,132,48],[109,12,133,10,"gold"],[109,16,133,14],[109,18,133,16,"prev"],[109,22,133,20],[109,23,133,21,"gold"],[109,27,133,25],[109,30,133,28,"goldReward"],[110,10,134,8],[110,11,134,9],[111,8,135,6],[111,9,135,7],[111,10,135,8],[113,8,137,6],[114,8,138,6],[114,12,138,12,"zoneEnemy"],[114,21,138,21],[114,24,138,24],[115,10,139,8,"id"],[115,12,139,10],[115,14,139,12,"enemy"],[115,19,139,17],[115,20,139,18,"id"],[115,22,139,20],[116,10,140,8,"typeId"],[116,16,140,14],[116,18,140,16],[116,28,140,26],[117,10,140,28],[118,10,141,8,"name"],[118,14,141,12],[118,16,141,14,"enemy"],[118,21,141,19],[118,22,141,20,"name"],[118,26,141,24],[119,10,142,8,"icon"],[119,14,142,12],[119,16,142,14],[119,20,142,18],[120,10,142,20],[121,10,143,8,"hp"],[121,12,143,10],[121,14,143,12],[121,15,143,13],[122,10,143,15],[123,10,144,8,"maxHP"],[123,15,144,13],[123,17,144,15,"enemy"],[123,22,144,20],[123,23,144,21,"maxHealth"],[123,32,144,30],[124,10,145,8,"attack"],[124,16,145,14],[124,18,145,16,"enemy"],[124,23,145,21],[124,24,145,22,"stats"],[124,29,145,27],[124,30,145,28,"attack"],[124,36,145,34],[125,10,146,8,"xp"],[125,12,146,10],[125,14,146,12],[125,16,146,14],[126,10,146,16],[127,10,147,8,"position"],[127,18,147,16],[127,20,147,18,"enemy"],[127,25,147,23],[127,26,147,24,"position"],[128,8,148,6],[128,9,148,7],[129,8,149,6,"recordEnemyKill"],[129,23,149,21],[129,24,149,22,"zoneEnemy"],[129,33,149,31],[129,34,149,32],[130,6,150,4],[130,7,150,5],[130,9,150,7],[130,10,150,8],[130,11,150,9],[130,12,150,10],[130,13,150,11],[131,4,151,2],[131,5,151,3],[131,7,151,5],[131,8,151,6,"updateNinja"],[131,19,151,17],[131,21,151,19,"recordEnemyKill"],[131,36,151,34],[131,37,151,35],[131,38,151,36],[133,4,153,2],[134,4,154,2],[134,8,154,8,"handleCombatTick"],[134,24,154,24],[134,27,154,27,"React"],[134,32,154,32],[134,33,154,32,"default"],[134,40,154,32],[134,41,154,33,"useCallback"],[134,52,154,44],[134,53,154,45],[134,59,154,51],[135,6,154,51],[135,10,154,51,"_s2"],[135,13,154,51],[135,16,154,51,"$RefreshSig$"],[135,28,154,51],[136,6,155,4,"console"],[136,13,155,11],[136,14,155,12,"log"],[136,17,155,15],[136,18,155,16],[136,87,155,85],[136,88,155,86],[137,6,157,4],[137,10,157,8,"enemiesToKill"],[137,23,157,36],[137,26,157,39],[137,28,157,41],[137,29,157,42],[137,30,157,43],[139,6,159,4,"_s2"],[139,9,159,4],[139,10,159,4,"setCombatState"],[139,24,159,18],[139,25,159,18,"_s2"],[139,28,159,18],[139,29,159,19,"prev"],[139,33,159,23],[139,37,159,27],[140,8,159,27,"_s2"],[140,11,159,27],[141,8,160,6],[141,12,160,12,"newTick"],[141,19,160,19],[141,22,160,22,"combatEngine"],[141,41,160,34],[141,42,160,34,"combatEngine"],[141,54,160,34],[141,55,160,35,"getCurrentTick"],[141,69,160,49],[141,70,160,50],[141,71,160,51],[142,8,161,6],[142,12,161,12,"newState"],[142,20,161,20],[142,23,161,23],[143,10,161,25],[143,13,161,28,"prev"],[143,17,161,32],[144,10,161,34,"currentTick"],[144,21,161,45],[144,23,161,47,"newTick"],[145,8,161,55],[145,9,161,56],[146,8,163,6],[146,12,163,10],[146,13,163,11,"newState"],[146,21,163,19],[146,22,163,20,"isInCombat"],[146,32,163,30],[146,34,163,32],[146,41,163,39,"newState"],[146,49,163,47],[148,8,165,6],[149,8,166,6,"newState"],[149,16,166,14],[149,17,166,15,"abilityManager"],[149,31,166,29],[149,32,166,30,"updateCooldowns"],[149,47,166,45],[149,48,166,46,"newTick"],[149,55,166,53],[149,56,166,54],[151,8,168,6],[152,8,169,6],[152,12,169,12,"effectResults"],[152,25,169,25],[152,28,169,28,"newState"],[152,36,169,36],[152,37,169,37,"statusEffects"],[152,50,169,50],[152,51,169,51,"processTick"],[152,62,169,62],[152,63,169,63,"newTick"],[152,70,169,70],[152,71,169,71],[154,8,171,6],[155,8,172,6,"effectResults"],[155,21,172,19],[155,22,172,20,"forEach"],[155,29,172,27],[155,30,172,28],[155,31,172,29,"results"],[155,38,172,36],[155,40,172,38,"entityId"],[155,48,172,46],[155,53,172,51],[156,10,173,8],[156,14,173,14,"enemyIndex"],[156,24,173,24],[156,27,173,27,"newState"],[156,35,173,35],[156,36,173,36,"enemies"],[156,43,173,43],[156,44,173,44,"findIndex"],[156,53,173,53],[156,54,173,54,"e"],[156,55,173,55],[156,59,173,59,"e"],[156,60,173,60],[156,61,173,61,"id"],[156,63,173,63],[156,68,173,68,"entityId"],[156,76,173,76],[156,77,173,77],[157,10,174,8],[157,14,174,12,"enemyIndex"],[157,24,174,22],[157,28,174,26],[157,29,174,27],[157,31,174,29],[158,12,175,10,"results"],[158,19,175,17],[158,20,175,18,"forEach"],[158,27,175,25],[158,28,175,26,"result"],[158,34,175,32],[158,38,175,36],[159,14,176,12,"newState"],[159,22,176,20],[159,23,176,21,"enemies"],[159,30,176,28],[159,31,176,29,"enemyIndex"],[159,41,176,39],[159,42,176,40],[159,43,176,41,"health"],[159,49,176,47],[159,53,176,51,"result"],[159,59,176,57],[159,60,176,58,"damage"],[159,66,176,64],[160,14,177,12,"newState"],[160,22,177,20],[160,23,177,21,"enemies"],[160,30,177,28],[160,31,177,29,"enemyIndex"],[160,41,177,39],[160,42,177,40],[160,43,177,41,"lastDamaged"],[160,54,177,52],[160,57,177,55,"newTick"],[160,64,177,62],[161,12,178,10],[161,13,178,11],[161,14,178,12],[162,10,179,8],[163,8,180,6],[163,9,180,7],[163,10,180,8],[165,8,182,6],[166,8,183,6,"newState"],[166,16,183,14],[166,17,183,15,"enemies"],[166,24,183,22],[166,25,183,23,"forEach"],[166,32,183,30],[166,33,183,31,"enemy"],[166,38,183,36],[166,42,183,40],[167,10,184,8],[167,14,184,12],[167,15,184,13,"enemy"],[167,20,184,18],[167,21,184,19,"isBoss"],[167,27,184,25],[167,29,184,27],[168,12,184,29],[169,12,185,10],[170,12,186,10],[170,16,186,16,"MOVEMENT_SPEED"],[170,30,186,30],[170,33,186,33],[170,37,186,37],[170,38,186,38],[170,39,186,39],[171,12,187,10],[171,16,187,16,"SCREEN_WIDTH"],[171,28,187,28],[171,31,187,31],[171,34,187,34],[172,12,188,10],[172,16,188,16,"GAME_AREA_HEIGHT"],[172,32,188,32],[172,35,188,35],[172,38,188,38],[172,39,188,39],[172,40,188,40],[173,12,189,10],[173,16,189,16,"ENEMY_SIZE"],[173,26,189,26],[173,29,189,29],[173,31,189,31],[175,12,191,10],[176,12,192,10],[176,16,192,16,"playerX"],[176,23,192,23],[176,26,192,26,"currentNinjaPosition"],[176,46,192,46],[176,47,192,47,"x"],[176,48,192,48],[177,12,193,10],[177,16,193,16,"playerY"],[177,23,193,23],[177,26,193,26,"currentNinjaPosition"],[177,46,193,46],[177,47,193,47,"y"],[177,48,193,48],[179,12,195,10],[180,12,196,10],[180,16,196,16,"deltaX"],[180,22,196,22],[180,25,196,25,"playerX"],[180,32,196,32],[180,35,196,35,"enemy"],[180,40,196,40],[180,41,196,41,"position"],[180,49,196,49],[180,50,196,50,"x"],[180,51,196,51],[181,12,197,10],[181,16,197,16,"deltaY"],[181,22,197,22],[181,25,197,25,"playerY"],[181,32,197,32],[181,35,197,35,"enemy"],[181,40,197,40],[181,41,197,41,"position"],[181,49,197,49],[181,50,197,50,"y"],[181,51,197,51],[182,12,198,10],[182,16,198,16,"distance"],[182,24,198,24],[182,27,198,27,"Math"],[182,31,198,31],[182,32,198,32,"sqrt"],[182,36,198,36],[182,37,198,37,"deltaX"],[182,43,198,43],[182,46,198,46,"deltaX"],[182,52,198,52],[182,55,198,55,"deltaY"],[182,61,198,61],[182,64,198,64,"deltaY"],[182,70,198,70],[182,71,198,71],[184,12,200,10],[185,12,201,10],[185,16,201,14,"distance"],[185,24,201,22],[185,27,201,25],[185,29,201,27],[185,31,201,29],[186,14,202,12],[187,14,203,12],[187,18,203,18,"normalizedX"],[187,29,203,29],[187,32,203,32,"deltaX"],[187,38,203,38],[187,41,203,41,"distance"],[187,49,203,49],[188,14,204,12],[188,18,204,18,"normalizedY"],[188,29,204,29],[188,32,204,32,"deltaY"],[188,38,204,38],[188,41,204,41,"distance"],[188,49,204,49],[190,14,206,12],[191,14,207,12],[191,18,207,18,"randomFactor"],[191,30,207,30],[191,33,207,33],[191,36,207,36],[191,37,207,37],[191,38,207,38],[192,14,208,12],[192,18,208,18,"finalX"],[192,24,208,24],[192,27,208,27,"normalizedX"],[192,38,208,38],[192,41,208,41],[192,42,208,42,"Math"],[192,46,208,46],[192,47,208,47,"random"],[192,53,208,53],[192,54,208,54],[192,55,208,55],[192,58,208,58],[192,61,208,61],[192,65,208,65,"randomFactor"],[192,77,208,77],[193,14,209,12],[193,18,209,18,"finalY"],[193,24,209,24],[193,27,209,27,"normalizedY"],[193,38,209,38],[193,41,209,41],[193,42,209,42,"Math"],[193,46,209,46],[193,47,209,47,"random"],[193,53,209,53],[193,54,209,54],[193,55,209,55],[193,58,209,58],[193,61,209,61],[193,65,209,65,"randomFactor"],[193,77,209,77],[195,14,211,12],[196,14,212,12],[196,18,212,16,"newX"],[196,22,212,20],[196,25,212,23,"enemy"],[196,30,212,28],[196,31,212,29,"position"],[196,39,212,37],[196,40,212,38,"x"],[196,41,212,39],[196,44,212,43,"finalX"],[196,50,212,49],[196,53,212,52,"MOVEMENT_SPEED"],[196,67,212,67],[197,14,213,12],[197,18,213,16,"newY"],[197,22,213,20],[197,25,213,23,"enemy"],[197,30,213,28],[197,31,213,29,"position"],[197,39,213,37],[197,40,213,38,"y"],[197,41,213,39],[197,44,213,43,"finalY"],[197,50,213,49],[197,53,213,52,"MOVEMENT_SPEED"],[197,67,213,67],[199,14,215,12],[200,14,216,12,"newX"],[200,18,216,16],[200,21,216,19,"Math"],[200,25,216,23],[200,26,216,24,"max"],[200,29,216,27],[200,30,216,28],[200,31,216,29],[200,33,216,31,"Math"],[200,37,216,35],[200,38,216,36,"min"],[200,41,216,39],[200,42,216,40,"SCREEN_WIDTH"],[200,54,216,52],[200,57,216,55,"ENEMY_SIZE"],[200,67,216,65],[200,69,216,67,"newX"],[200,73,216,71],[200,74,216,72],[200,75,216,73],[201,14,217,12,"newY"],[201,18,217,16],[201,21,217,19,"Math"],[201,25,217,23],[201,26,217,24,"max"],[201,29,217,27],[201,30,217,28],[201,31,217,29],[201,33,217,31,"Math"],[201,37,217,35],[201,38,217,36,"min"],[201,41,217,39],[201,42,217,40,"GAME_AREA_HEIGHT"],[201,58,217,56],[201,61,217,59,"ENEMY_SIZE"],[201,71,217,69],[201,73,217,71,"newY"],[201,77,217,75],[201,78,217,76],[201,79,217,77],[203,14,219,12],[204,14,220,12,"enemy"],[204,19,220,17],[204,20,220,18,"position"],[204,28,220,26],[204,29,220,27,"x"],[204,30,220,28],[204,33,220,31,"newX"],[204,37,220,35],[205,14,221,12,"enemy"],[205,19,221,17],[205,20,221,18,"position"],[205,28,221,26],[205,29,221,27,"y"],[205,30,221,28],[205,33,221,31,"newY"],[205,37,221,35],[206,12,222,10],[207,12,223,10],[208,10,224,8],[209,8,225,6],[209,9,225,7],[209,10,225,8],[211,8,227,6],[212,8,228,6],[212,12,228,10],[212,13,228,11,"isManualControlActive"],[212,34,228,32],[212,36,228,34],[213,10,229,8],[213,15,229,13],[213,19,229,17,"i"],[213,20,229,18],[213,23,229,21],[213,24,229,22],[213,26,229,24,"i"],[213,27,229,25],[213,30,229,28],[213,31,229,29],[213,33,229,31,"i"],[213,34,229,32],[213,36,229,34],[213,38,229,36],[214,12,230,10],[214,16,230,14,"newState"],[214,24,230,22],[214,25,230,23,"abilityManager"],[214,39,230,37],[214,40,230,38,"isAbilityReady"],[214,54,230,52],[214,55,230,53,"i"],[214,56,230,54],[214,57,230,55],[214,61,230,59,"newState"],[214,69,230,67],[214,70,230,68,"enemies"],[214,77,230,75],[214,78,230,76,"length"],[214,84,230,82],[214,87,230,85],[214,88,230,86],[214,90,230,88],[215,14,231,12],[215,18,231,16,"newState"],[215,26,231,24],[215,27,231,25,"abilityManager"],[215,41,231,39],[215,42,231,40,"useAbility"],[215,52,231,50],[215,53,231,51,"i"],[215,54,231,52],[215,56,231,54,"newTick"],[215,63,231,61],[215,64,231,62],[215,66,231,64],[216,16,232,14,"castAbility"],[216,27,232,25],[216,28,232,26,"newState"],[216,36,232,34],[216,38,232,36,"i"],[216,39,232,37],[216,40,232,38],[217,14,233,12],[218,12,234,10],[219,10,235,8],[220,8,236,6],[222,8,238,6],[223,8,239,6],[223,12,239,12,"deadEnemies"],[223,23,239,23],[223,26,239,26,"newState"],[223,34,239,34],[223,35,239,35,"enemies"],[223,42,239,42],[223,43,239,43,"filter"],[223,49,239,49],[223,50,239,50,"enemy"],[223,55,239,55],[223,59,239,59,"enemy"],[223,64,239,64],[223,65,239,65,"health"],[223,71,239,71],[223,75,239,75],[223,76,239,76],[223,77,239,77],[224,8,240,6,"enemiesToKill"],[224,21,240,19],[224,24,240,22],[224,25,240,23],[224,28,240,26,"deadEnemies"],[224,39,240,37],[224,40,240,38],[224,41,240,39],[224,42,240,40],[226,8,242,6],[227,8,243,6],[227,12,243,10,"deadEnemies"],[227,23,243,21],[227,24,243,22,"length"],[227,30,243,28],[227,33,243,31],[227,34,243,32],[227,36,243,34],[228,10,244,8,"console"],[228,17,244,15],[228,18,244,16,"log"],[228,21,244,19],[228,22,244,20],[228,49,244,47,"deadEnemies"],[228,60,244,58],[228,61,244,59,"length"],[228,67,244,65],[228,83,244,81],[228,85,244,83,"deadEnemies"],[228,96,244,94],[228,97,244,95,"map"],[228,100,244,98],[228,101,244,99,"e"],[228,102,244,100],[228,106,244,104],[228,109,244,107,"e"],[228,110,244,108],[228,111,244,109,"id"],[228,113,244,111],[228,117,244,115,"e"],[228,118,244,116],[228,119,244,117,"health"],[228,125,244,123],[228,130,244,128],[228,131,244,129],[228,132,244,130],[229,8,245,6],[231,8,247,6],[232,8,248,6],[232,12,248,12,"lowHealthEnemies"],[232,28,248,28],[232,31,248,31,"newState"],[232,39,248,39],[232,40,248,40,"enemies"],[232,47,248,47],[232,48,248,48,"filter"],[232,54,248,54],[232,55,248,55,"enemy"],[232,60,248,60],[232,64,248,64,"enemy"],[232,69,248,69],[232,70,248,70,"health"],[232,76,248,76],[232,80,248,80],[232,82,248,82],[232,86,248,86,"enemy"],[232,91,248,91],[232,92,248,92,"health"],[232,98,248,98],[232,101,248,101],[232,102,248,102],[232,103,248,103],[233,8,249,6],[233,12,249,10,"lowHealthEnemies"],[233,28,249,26],[233,29,249,27,"length"],[233,35,249,33],[233,38,249,36],[233,39,249,37],[233,41,249,39],[234,10,250,8,"console"],[234,17,250,15],[234,18,250,16,"log"],[234,21,250,19],[234,22,250,20],[234,61,250,59],[234,63,250,61,"lowHealthEnemies"],[234,79,250,77],[234,80,250,78,"map"],[234,83,250,81],[234,84,250,82,"e"],[234,85,250,83],[234,89,250,87],[234,92,250,90,"e"],[234,93,250,91],[234,94,250,92,"id"],[234,96,250,94],[234,100,250,98,"e"],[234,101,250,99],[234,102,250,100,"health"],[234,108,250,106],[234,112,250,110,"e"],[234,113,250,111],[234,114,250,112,"maxHealth"],[234,123,250,121],[234,128,250,126],[234,129,250,127],[234,130,250,128],[235,8,251,6],[237,8,253,6],[238,8,254,6],[238,12,254,12,"beforeCount"],[238,23,254,23],[238,26,254,26,"newState"],[238,34,254,34],[238,35,254,35,"enemies"],[238,42,254,42],[238,43,254,43,"length"],[238,49,254,49],[239,8,255,6,"newState"],[239,16,255,14],[239,17,255,15,"enemies"],[239,24,255,22],[239,27,255,25,"newState"],[239,35,255,33],[239,36,255,34,"enemies"],[239,43,255,41],[239,44,255,42,"filter"],[239,50,255,48],[239,51,255,49,"enemy"],[239,56,255,54],[239,60,255,58,"enemy"],[239,65,255,63],[239,66,255,64,"health"],[239,72,255,70],[239,75,255,73],[239,76,255,74],[239,77,255,75],[240,8,256,6],[240,12,256,12,"afterCount"],[240,22,256,22],[240,25,256,25,"newState"],[240,33,256,33],[240,34,256,34,"enemies"],[240,41,256,41],[240,42,256,42,"length"],[240,48,256,48],[241,8,258,6],[241,12,258,10,"beforeCount"],[241,23,258,21],[241,28,258,26,"afterCount"],[241,38,258,36],[241,40,258,38],[242,10,259,8,"console"],[242,17,259,15],[242,18,259,16,"log"],[242,21,259,19],[242,22,259,20],[242,52,259,50,"beforeCount"],[242,63,259,61],[242,66,259,64,"afterCount"],[242,76,259,74],[242,102,259,100],[242,103,259,101],[243,8,260,6],[245,8,262,6],[246,8,263,6],[247,8,264,6],[247,12,264,12,"MAX_ENEMIES"],[247,23,264,23],[247,26,264,26],[247,28,264,28],[248,8,265,6],[248,12,265,12,"MIN_SPAWN_DELAY"],[248,27,265,27],[248,30,265,30],[248,33,265,33],[248,34,265,34],[248,35,265,35],[249,8,266,6],[249,12,266,12,"now"],[249,15,266,15],[249,18,266,18,"Date"],[249,22,266,22],[249,23,266,23,"now"],[249,26,266,26],[249,27,266,27],[249,28,266,28],[250,8,267,6],[250,12,267,12,"hasBoss"],[250,19,267,19],[250,22,267,22,"newState"],[250,30,267,30],[250,31,267,31,"enemies"],[250,38,267,38],[250,39,267,39,"some"],[250,43,267,43],[250,44,267,44,"enemy"],[250,49,267,49],[250,53,267,53,"enemy"],[250,58,267,58],[250,59,267,59,"isBoss"],[250,65,267,65],[250,66,267,66],[252,8,269,6],[253,8,270,6],[253,12,270,10],[253,13,270,11,"newState"],[253,21,270,19],[253,22,270,20,"lastSpawnTime"],[253,35,270,33],[253,37,270,35],[254,10,271,8,"newState"],[254,18,271,16],[254,19,271,17,"lastSpawnTime"],[254,32,271,30],[254,35,271,33,"now"],[254,38,271,36],[255,8,272,6],[256,8,274,6,"console"],[256,15,274,13],[256,16,274,14,"log"],[256,19,274,17],[256,20,274,18],[256,53,274,51,"newState"],[256,61,274,59],[256,62,274,60,"enemies"],[256,69,274,67],[256,70,274,68,"length"],[256,76,274,74],[256,85,274,83,"MAX_ENEMIES"],[256,96,274,94],[256,109,274,107,"hasBoss"],[256,116,274,114],[256,118,274,116],[256,119,274,117],[258,8,276,6],[259,8,277,6],[259,12,277,10],[259,13,277,11,"hasBoss"],[259,20,277,18],[259,24,277,22,"newState"],[259,32,277,30],[259,33,277,31,"enemies"],[259,40,277,38],[259,41,277,39,"length"],[259,47,277,45],[259,50,277,48,"MAX_ENEMIES"],[259,61,277,59],[259,65,277,64,"now"],[259,68,277,67],[259,71,277,70,"newState"],[259,79,277,78],[259,80,277,79,"lastSpawnTime"],[259,93,277,92],[259,97,277,97,"MIN_SPAWN_DELAY"],[259,112,277,112],[259,114,277,114],[260,10,278,8,"console"],[260,17,278,15],[260,18,278,16,"log"],[260,21,278,19],[260,22,278,20],[260,43,278,41,"newState"],[260,51,278,49],[260,52,278,50,"enemies"],[260,59,278,57],[260,60,278,58,"length"],[260,66,278,64],[260,69,278,67],[260,70,278,68],[260,74,278,72,"MAX_ENEMIES"],[260,85,278,83],[260,87,278,85],[260,88,278,86],[261,10,279,8,"spawnTestEnemy"],[261,24,279,22],[261,25,279,23,"newState"],[261,33,279,31],[261,34,279,32],[262,10,280,8,"newState"],[262,18,280,16],[262,19,280,17,"lastSpawnTime"],[262,32,280,30],[262,35,280,33,"now"],[262,38,280,36],[263,8,281,6],[264,8,283,6],[264,15,283,13,"newState"],[264,23,283,21],[265,6,284,4],[265,7,284,5],[265,47,284,6],[267,6,286,4],[268,6,287,4,"console"],[268,13,287,11],[268,14,287,12,"log"],[268,17,287,15],[268,18,287,16],[268,50,287,48,"enemiesToKill"],[268,63,287,61],[268,64,287,62,"length"],[268,70,287,68],[268,101,287,99],[268,102,287,100],[269,6,289,4,"enemiesToKill"],[269,19,289,17],[269,20,289,18,"forEach"],[269,27,289,25],[269,28,289,26],[269,29,289,27,"enemy"],[269,34,289,32],[269,36,289,34,"index"],[269,41,289,39],[269,46,289,44],[270,8,290,6,"console"],[270,15,290,13],[270,16,290,14,"log"],[270,19,290,17],[270,20,290,18],[270,57,290,55,"index"],[270,62,290,60],[270,65,290,63],[270,66,290,64],[270,70,290,68,"enemiesToKill"],[270,83,290,81],[270,84,290,82,"length"],[270,90,290,88],[270,104,290,102,"enemy"],[270,109,290,107],[270,110,290,108,"id"],[270,112,290,110],[270,114,290,112],[270,115,290,113],[271,8,291,6,"handleEnemyKill"],[271,23,291,21],[271,24,291,22,"enemy"],[271,29,291,27],[271,30,291,28],[272,6,292,4],[272,7,292,5],[272,8,292,6],[273,4,293,2],[273,5,293,3],[273,7,293,5],[273,8,293,6,"handleEnemyKill"],[273,23,293,21],[273,24,293,22],[273,25,293,23],[273,26,293,24],[273,27,293,25],[275,4,295,2],[276,4,296,2],[276,8,296,8,"findClosestEnemyInternal"],[276,32,296,32],[276,35,296,36,"enemies"],[276,42,296,58],[276,46,296,83],[277,6,297,4],[277,10,297,8,"enemies"],[277,17,297,15],[277,18,297,16,"length"],[277,24,297,22],[277,29,297,27],[277,30,297,28],[277,32,297,30],[277,39,297,37],[277,43,297,41],[279,6,299,4],[280,6,300,4],[280,10,300,10,"SCREEN_WIDTH"],[280,22,300,22],[280,25,300,25],[280,28,300,28],[281,6,301,4],[281,10,301,10,"GAME_AREA_HEIGHT"],[281,26,301,26],[281,29,301,29],[281,32,301,32],[281,35,301,35],[281,38,301,38],[281,39,301,39],[281,40,301,40],[282,6,302,4],[282,10,302,10,"ninjaX"],[282,16,302,16],[282,19,302,19,"SCREEN_WIDTH"],[282,31,302,31],[282,34,302,34],[282,35,302,35],[283,6,303,4],[283,10,303,10,"ninjaY"],[283,16,303,16],[283,19,303,19,"GAME_AREA_HEIGHT"],[283,35,303,35],[283,38,303,38],[283,39,303,39],[284,6,305,4],[284,10,305,8,"closestEnemy"],[284,22,305,20],[284,25,305,23,"enemies"],[284,32,305,30],[284,33,305,31],[284,34,305,32],[284,35,305,33],[285,6,306,4],[285,10,306,8,"closestDistance"],[285,25,306,23],[285,28,306,26,"Infinity"],[285,36,306,34],[286,6,308,4,"enemies"],[286,13,308,11],[286,14,308,12,"forEach"],[286,21,308,19],[286,22,308,20,"enemy"],[286,27,308,25],[286,31,308,29],[287,8,309,6],[287,12,309,12,"distance"],[287,20,309,20],[287,23,309,23,"Math"],[287,27,309,27],[287,28,309,28,"sqrt"],[287,32,309,32],[287,33,310,8,"Math"],[287,37,310,12],[287,38,310,13,"pow"],[287,41,310,16],[287,42,310,17,"enemy"],[287,47,310,22],[287,48,310,23,"position"],[287,56,310,31],[287,57,310,32,"x"],[287,58,310,33],[287,61,310,36,"ninjaX"],[287,67,310,42],[287,69,310,44],[287,70,310,45],[287,71,310,46],[287,74,311,8,"Math"],[287,78,311,12],[287,79,311,13,"pow"],[287,82,311,16],[287,83,311,17,"enemy"],[287,88,311,22],[287,89,311,23,"position"],[287,97,311,31],[287,98,311,32,"y"],[287,99,311,33],[287,102,311,36,"ninjaY"],[287,108,311,42],[287,110,311,44],[287,111,311,45],[287,112,312,6],[287,113,312,7],[288,8,314,6],[288,12,314,10,"distance"],[288,20,314,18],[288,23,314,21,"closestDistance"],[288,38,314,36],[288,40,314,38],[289,10,315,8,"closestDistance"],[289,25,315,23],[289,28,315,26,"distance"],[289,36,315,34],[290,10,316,8,"closestEnemy"],[290,22,316,20],[290,25,316,23,"enemy"],[290,30,316,28],[291,8,317,6],[292,6,318,4],[292,7,318,5],[292,8,318,6],[293,6,320,4,"console"],[293,13,320,11],[293,14,320,12,"log"],[293,17,320,15],[293,18,320,16],[293,60,320,58,"closestDistance"],[293,75,320,73],[293,76,320,74,"toFixed"],[293,83,320,81],[293,84,320,82],[293,85,320,83],[293,86,320,84],[293,88,320,86],[293,89,320,87],[294,6,321,4],[294,13,321,11,"closestEnemy"],[294,25,321,23],[295,4,322,2],[295,5,322,3],[297,4,324,2],[298,4,325,2],[298,8,325,8,"findClosestEnemy"],[298,24,325,24],[298,27,325,27,"findClosestEnemy"],[298,28,325,27],[298,33,325,53],[299,6,326,4],[299,13,326,11,"findClosestEnemyInternal"],[299,37,326,35],[299,38,326,36,"combatState"],[299,49,326,47],[299,50,326,48,"enemies"],[299,57,326,55],[299,58,326,56],[300,4,327,2],[300,5,327,3],[302,4,329,2],[303,4,330,2],[303,8,330,2,"_useState7"],[303,18,330,2],[303,21,330,58],[303,25,330,58,"useState"],[303,31,330,66],[303,32,330,66,"useState"],[303,40,330,66],[303,42,330,91],[304,8,330,93,"x"],[304,9,330,94],[304,11,330,96],[304,12,330,97],[305,8,330,99,"y"],[305,9,330,100],[305,11,330,102],[306,6,330,104],[306,7,330,105],[306,8,330,106],[307,6,330,106,"_useState8"],[307,16,330,106],[307,23,330,106,"_slicedToArray"],[307,37,330,106],[307,38,330,106,"default"],[307,45,330,106],[307,47,330,106,"_useState7"],[307,57,330,106],[308,6,330,9,"currentNinjaPosition"],[308,26,330,29],[308,29,330,29,"_useState8"],[308,39,330,29],[309,6,330,31,"setCurrentNinjaPosition"],[309,29,330,54],[309,32,330,54,"_useState8"],[309,42,330,54],[310,4,331,2],[310,8,331,2,"_useState9"],[310,18,331,2],[310,21,331,60],[310,25,331,60,"useState"],[310,31,331,68],[310,32,331,68,"useState"],[310,40,331,68],[310,42,331,69],[310,47,331,74],[310,48,331,75],[311,6,331,75,"_useState0"],[311,16,331,75],[311,23,331,75,"_slicedToArray"],[311,37,331,75],[311,38,331,75,"default"],[311,45,331,75],[311,47,331,75,"_useState9"],[311,57,331,75],[312,6,331,9,"isManualControlActive"],[312,27,331,30],[312,30,331,30,"_useState0"],[312,40,331,30],[313,6,331,32,"setIsManualControlActive"],[313,30,331,56],[313,33,331,56,"_useState0"],[313,43,331,56],[315,4,333,2],[316,4,334,2],[316,8,334,8,"updateNinjaPosition"],[316,27,334,27],[316,30,334,30],[316,34,334,30,"useCallback"],[316,40,334,41],[316,41,334,41,"useCallback"],[316,52,334,41],[316,54,334,43,"newPosition"],[316,65,334,78],[316,69,334,83],[317,6,335,4,"setCurrentNinjaPosition"],[317,29,335,27],[317,30,335,28,"newPosition"],[317,41,335,39],[317,42,335,40],[318,4,336,2],[318,5,336,3],[318,7,336,5],[318,9,336,7],[318,10,336,8],[320,4,338,2],[321,4,339,2],[321,8,339,8,"setManualControlActive"],[321,30,339,30],[321,33,339,33],[321,37,339,33,"useCallback"],[321,43,339,44],[321,44,339,44,"useCallback"],[321,55,339,44],[321,57,339,46,"active"],[321,63,339,61],[321,67,339,66],[322,6,340,4,"setIsManualControlActive"],[322,30,340,28],[322,31,340,29,"active"],[322,37,340,35],[322,38,340,36],[323,6,341,4,"console"],[323,13,341,11],[323,14,341,12,"log"],[323,17,341,15],[323,18,341,16],[323,39,341,37,"active"],[323,45,341,43],[323,48,341,46],[323,59,341,57],[323,62,341,60],[323,75,341,73],[323,88,341,86,"active"],[323,94,341,92],[323,97,341,95],[323,105,341,103],[323,108,341,106],[323,117,341,115],[323,119,341,117],[323,120,341,118],[324,4,342,2],[324,5,342,3],[324,7,342,5],[324,9,342,7],[324,10,342,8],[326,4,344,2],[327,4,345,2],[327,8,345,8,"handleProjectileHit"],[327,27,345,27],[327,30,345,31,"projectile"],[327,40,345,59],[327,44,345,64],[328,6,346,4,"console"],[328,13,346,11],[328,14,346,12,"log"],[328,17,346,15],[328,18,346,16],[328,35,346,33,"projectile"],[328,45,346,43],[328,46,346,44,"id"],[328,48,346,46],[328,62,346,60,"projectile"],[328,72,346,70],[328,73,346,71,"targetEnemyId"],[328,86,346,84],[328,94,346,92,"projectile"],[328,104,346,102],[328,105,346,103,"damage"],[328,111,346,109],[328,120,346,118],[328,121,346,119],[329,6,348,4,"setCombatState"],[329,20,348,18],[329,21,348,19,"prev"],[329,25,348,23],[329,29,348,27],[330,8,349,6],[330,12,349,12,"newState"],[330,20,349,20],[330,23,349,23],[331,10,349,25],[331,13,349,28,"prev"],[332,8,349,33],[332,9,349,34],[334,8,351,6],[335,8,352,6],[335,12,352,12,"enemyIndex"],[335,22,352,22],[335,25,352,25,"newState"],[335,33,352,33],[335,34,352,34,"enemies"],[335,41,352,41],[335,42,352,42,"findIndex"],[335,51,352,51],[335,52,352,52,"e"],[335,53,352,53],[335,57,352,57,"e"],[335,58,352,58],[335,59,352,59,"id"],[335,61,352,61],[335,66,352,66,"projectile"],[335,76,352,76],[335,77,352,77,"targetEnemyId"],[335,90,352,90],[335,91,352,91],[336,8,353,6],[336,12,353,10,"enemyIndex"],[336,22,353,20],[336,26,353,24],[336,27,353,25],[336,29,353,27],[337,10,354,8,"newState"],[337,18,354,16],[337,19,354,17,"enemies"],[337,26,354,24],[337,29,354,27],[337,30,354,28],[337,33,354,31,"newState"],[337,41,354,39],[337,42,354,40,"enemies"],[337,49,354,47],[337,50,354,48],[338,10,355,8,"newState"],[338,18,355,16],[338,19,355,17,"enemies"],[338,26,355,24],[338,27,355,25,"enemyIndex"],[338,37,355,35],[338,38,355,36],[338,41,355,39],[339,12,356,10],[339,15,356,13,"newState"],[339,23,356,21],[339,24,356,22,"enemies"],[339,31,356,29],[339,32,356,30,"enemyIndex"],[339,42,356,40],[339,43,356,41],[340,12,357,10,"health"],[340,18,357,16],[340,20,357,18,"newState"],[340,28,357,26],[340,29,357,27,"enemies"],[340,36,357,34],[340,37,357,35,"enemyIndex"],[340,47,357,45],[340,48,357,46],[340,49,357,47,"health"],[340,55,357,53],[340,58,357,56,"projectile"],[340,68,357,66],[340,69,357,67,"damage"],[340,75,357,73],[341,12,358,10,"lastDamaged"],[341,23,358,21],[341,25,358,23,"combatEngine"],[341,44,358,35],[341,45,358,35,"combatEngine"],[341,57,358,35],[341,58,358,36,"getCurrentTick"],[341,72,358,50],[341,73,358,51],[342,10,359,8],[342,11,359,9],[343,10,361,8,"console"],[343,17,361,15],[343,18,361,16,"log"],[343,21,361,19],[343,22,361,20],[343,34,361,32,"projectile"],[343,44,361,42],[343,45,361,43,"targetEnemyId"],[343,58,361,56],[343,70,361,68,"newState"],[343,78,361,76],[343,79,361,77,"enemies"],[343,86,361,84],[343,87,361,85,"enemyIndex"],[343,97,361,95],[343,98,361,96],[343,99,361,97,"health"],[343,105,361,103],[343,109,361,107,"newState"],[343,117,361,115],[343,118,361,116,"enemies"],[343,125,361,123],[343,126,361,124,"enemyIndex"],[343,136,361,134],[343,137,361,135],[343,138,361,136,"maxHealth"],[343,147,361,145],[343,149,361,147],[343,150,361,148],[344,8,362,6],[345,8,364,6],[345,15,364,13,"newState"],[345,23,364,21],[346,6,365,4],[346,7,365,5],[346,8,365,6],[348,6,367,4],[349,6,368,4,"setProjectiles"],[349,20,368,18],[349,21,368,19,"prev"],[349,25,368,23],[349,29,368,27,"prev"],[349,33,368,31],[349,34,368,32,"filter"],[349,40,368,38],[349,41,368,39,"p"],[349,42,368,40],[349,46,368,44,"p"],[349,47,368,45],[349,48,368,46,"id"],[349,50,368,48],[349,55,368,53,"projectile"],[349,65,368,63],[349,66,368,64,"id"],[349,68,368,66],[349,69,368,67],[349,70,368,68],[350,4,369,2],[350,5,369,3],[352,4,371,2],[353,4,372,2],[353,8,372,8,"castAbility"],[353,19,372,19],[353,22,372,22,"castAbility"],[353,23,372,23,"state"],[353,28,372,41],[353,30,372,43,"slotIndex"],[353,39,372,60],[353,44,372,65],[354,6,373,4],[354,10,373,10,"deck"],[354,14,373,14],[354,17,373,17,"state"],[354,22,373,22],[354,23,373,23,"abilityManager"],[354,37,373,37],[354,38,373,38,"getDeck"],[354,45,373,45],[354,46,373,46],[354,47,373,47],[355,6,374,4],[355,10,374,10,"ability"],[355,17,374,17],[355,20,374,20,"deck"],[355,24,374,24],[355,25,374,25,"slots"],[355,30,374,30],[355,31,374,31,"slotIndex"],[355,40,374,40],[355,41,374,41],[356,6,375,4],[356,10,375,8],[356,11,375,9,"ability"],[356,18,375,16],[356,20,375,18],[358,6,377,4],[359,6,378,4],[359,10,378,10,"target"],[359,16,378,16],[359,19,378,19,"findClosestEnemyInternal"],[359,43,378,43],[359,44,378,44,"state"],[359,49,378,49],[359,50,378,50,"enemies"],[359,57,378,57],[359,58,378,58],[360,6,379,4],[360,10,379,8],[360,11,379,9,"target"],[360,17,379,15],[360,19,379,17],[362,6,381,4],[363,6,382,4],[363,10,382,8,"damage"],[363,16,382,14],[363,19,382,17,"ability"],[363,26,382,24],[363,27,382,25,"stats"],[363,32,382,30],[363,33,382,31,"baseDamage"],[363,43,382,41],[365,6,384,4],[366,6,385,4,"deck"],[366,10,385,8],[366,11,385,9,"activeSynergies"],[366,26,385,24],[366,27,385,25,"forEach"],[366,34,385,32],[366,35,385,33,"synergy"],[366,42,385,40],[366,46,385,44],[367,8,386,6],[367,12,386,10,"synergy"],[367,19,386,17],[367,20,386,18,"bonus"],[367,25,386,23],[367,26,386,24,"damageBonus"],[367,37,386,35],[367,41,387,10,"synergy"],[367,48,387,17],[367,49,387,18,"requiredTags"],[367,61,387,30],[367,62,387,31,"some"],[367,66,387,35],[367,67,387,36,"tag"],[367,70,387,39],[367,74,387,43,"ability"],[367,81,387,50],[367,82,387,51,"tags"],[367,86,387,55],[367,87,387,56,"includes"],[367,95,387,64],[367,96,387,65,"tag"],[367,99,387,68],[367,100,387,69],[367,101,387,70],[367,103,387,72],[368,10,388,8,"damage"],[368,16,388,14],[368,20,388,19],[368,21,388,20],[368,24,388,23,"synergy"],[368,31,388,30],[368,32,388,31,"bonus"],[368,37,388,36],[368,38,388,37,"damageBonus"],[368,49,388,48],[368,52,388,51],[368,55,388,55],[369,8,389,6],[370,6,390,4],[370,7,390,5],[370,8,390,6],[372,6,392,4],[373,6,393,4],[373,10,393,10,"damageResult"],[373,22,393,22],[373,25,393,25,"DamageCalculator"],[373,44,393,41],[373,45,393,41,"DamageCalculator"],[373,61,393,41],[373,62,393,42,"calculateDamage"],[373,77,393,57],[373,78,393,58,"damage"],[373,84,393,64],[373,86,393,66,"state"],[373,91,393,71],[373,92,393,72,"playerStats"],[373,103,393,83],[373,105,393,85,"target"],[373,111,393,91],[373,112,393,92,"stats"],[373,117,393,97],[373,118,393,98],[375,6,395,4],[376,6,396,4,"createProjectile"],[376,22,396,20],[376,23,396,21,"target"],[376,29,396,27],[376,31,396,29,"damageResult"],[376,43,396,41],[376,44,396,42,"damage"],[376,50,396,48],[376,52,396,50,"currentNinjaPosition"],[376,72,396,70],[376,74,396,72],[377,8,397,6,"id"],[377,10,397,8],[377,12,397,10,"ability"],[377,19,397,17],[377,20,397,18,"id"],[377,22,397,20],[378,8,398,6,"name"],[378,12,398,10],[378,14,398,12,"ability"],[378,21,398,19],[378,22,398,20,"name"],[378,26,398,24],[379,8,399,6,"icon"],[379,12,399,10],[379,14,399,12,"ability"],[379,21,399,19],[379,22,399,20,"icon"],[380,6,400,4],[380,7,400,5],[380,8,400,6],[382,6,402,4],[383,6,403,4],[383,10,403,8,"ability"],[383,17,403,15],[383,18,403,16,"effects"],[383,25,403,23],[383,26,403,24,"includes"],[383,34,403,32],[383,35,403,33],[383,40,403,38],[383,41,403,39],[383,45,403,43,"ability"],[383,52,403,50],[383,53,403,51,"stats"],[383,58,403,56],[383,59,403,57,"duration"],[383,67,403,65],[383,69,403,67],[384,8,404,6,"state"],[384,13,404,11],[384,14,404,12,"statusEffects"],[384,27,404,25],[384,28,404,26,"addEffect"],[384,37,404,35],[384,38,404,36,"target"],[384,44,404,42],[384,45,404,43,"id"],[384,47,404,45],[384,49,404,47],[385,10,405,8,"id"],[385,12,405,10],[385,14,405,12],[385,17,405,15,"ability"],[385,24,405,22],[385,25,405,23,"id"],[385,27,405,25],[385,33,405,31],[386,10,406,8,"type"],[386,14,406,12],[386,16,406,14],[386,21,406,19],[387,10,407,8,"remainingTicks"],[387,24,407,22],[387,26,407,24,"Math"],[387,30,407,28],[387,31,407,29,"floor"],[387,36,407,34],[387,37,407,35,"ability"],[387,44,407,42],[387,45,407,43,"stats"],[387,50,407,48],[387,51,407,49,"duration"],[387,59,407,57],[387,62,407,60],[387,64,407,62],[387,65,407,63],[388,10,407,65],[389,10,408,8,"tickInterval"],[389,22,408,20],[389,24,408,22],[389,26,408,24],[390,10,408,26],[391,10,409,8,"lastTick"],[391,18,409,16],[391,20,409,18,"state"],[391,25,409,23],[391,26,409,24,"currentTick"],[391,37,409,35],[392,10,410,8,"value"],[392,15,410,13],[392,17,410,15,"Math"],[392,21,410,19],[392,22,410,20,"floor"],[392,27,410,25],[392,28,410,26,"damage"],[392,34,410,32],[392,37,410,35],[392,40,410,38],[392,41,410,39],[393,10,410,41],[394,10,411,8,"stackable"],[394,19,411,17],[394,21,411,19],[395,8,412,6],[395,9,412,7],[395,10,412,8],[396,6,413,4],[397,6,415,4,"console"],[397,13,415,11],[397,14,415,12,"log"],[397,17,415,15],[397,18,415,16],[397,24,415,22,"ability"],[397,31,415,29],[397,32,415,30,"name"],[397,36,415,34],[397,69,415,67,"damageResult"],[397,81,415,79],[397,82,415,80,"damage"],[397,88,415,86],[397,98,415,96,"damageResult"],[397,110,415,108],[397,111,415,109,"isCritical"],[397,121,415,119],[397,124,415,122],[397,134,415,132],[397,137,415,135],[397,139,415,137],[397,141,415,139],[397,142,415,140],[398,4,416,2],[398,5,416,3],[400,4,418,2],[401,4,419,2],[401,8,419,8,"createProjectile"],[401,24,419,24],[401,27,419,27,"createProjectile"],[401,28,419,28,"targetEnemy"],[401,39,419,52],[401,41,419,54,"damage"],[401,47,419,68],[401,49,419,70,"ninjaPos"],[401,57,419,103],[401,59,419,105,"abilityInfo"],[401,70,419,159],[401,75,419,164],[402,6,420,4],[402,10,420,10,"SCREEN_WIDTH"],[402,22,420,22],[402,25,420,25],[402,28,420,28],[403,6,421,4],[403,10,421,10,"GAME_AREA_HEIGHT"],[403,26,421,26],[403,29,421,29],[403,32,421,32],[403,35,421,35],[403,38,421,38],[403,39,421,39],[403,40,421,40],[404,6,422,4],[404,10,422,10,"NINJA_SIZE"],[404,20,422,20],[404,23,422,23],[404,25,422,25],[406,6,424,4],[407,6,425,4],[407,10,425,10,"ninjaX"],[407,16,425,16],[407,19,425,19,"ninjaPos"],[407,27,425,27],[407,30,425,30,"ninjaPos"],[407,38,425,38],[407,39,425,39,"x"],[407,40,425,40],[407,43,425,43,"NINJA_SIZE"],[407,53,425,53],[407,56,425,56],[407,57,425,57],[407,60,425,60,"SCREEN_WIDTH"],[407,72,425,72],[407,75,425,75],[407,76,425,76],[408,6,426,4],[408,10,426,10,"ninjaY"],[408,16,426,16],[408,19,426,19,"ninjaPos"],[408,27,426,27],[408,30,426,30,"ninjaPos"],[408,38,426,38],[408,39,426,39,"y"],[408,40,426,40],[408,43,426,43,"NINJA_SIZE"],[408,53,426,53],[408,56,426,56],[408,57,426,57],[408,60,426,60,"GAME_AREA_HEIGHT"],[408,76,426,76],[408,79,426,79],[408,80,426,80],[409,6,427,4],[409,10,427,10,"ENEMY_SIZE"],[409,20,427,20],[409,23,427,23],[409,25,427,25],[410,6,429,4],[410,10,429,10,"projectile"],[410,20,429,38],[410,23,429,41],[411,8,430,6,"id"],[411,10,430,8],[411,12,430,10],[411,20,430,18,"Date"],[411,24,430,22],[411,25,430,23,"now"],[411,28,430,26],[411,29,430,27],[411,30,430,28],[411,34,430,32,"Math"],[411,38,430,36],[411,39,430,37,"random"],[411,45,430,43],[411,46,430,44],[411,47,430,45],[411,49,430,47],[412,8,431,6,"x"],[412,9,431,7],[412,11,431,9,"ninjaX"],[412,17,431,15],[413,8,432,6,"y"],[413,9,432,7],[413,11,432,9,"ninjaY"],[413,17,432,15],[414,8,433,6,"targetX"],[414,15,433,13],[414,17,433,15,"targetEnemy"],[414,28,433,26],[414,29,433,27,"position"],[414,37,433,35],[414,38,433,36,"x"],[414,39,433,37],[414,42,433,40,"ENEMY_SIZE"],[414,52,433,50],[414,55,433,53],[414,56,433,54],[415,8,434,6,"targetY"],[415,15,434,13],[415,17,434,15,"targetEnemy"],[415,28,434,26],[415,29,434,27,"position"],[415,37,434,35],[415,38,434,36,"y"],[415,39,434,37],[415,42,434,40,"ENEMY_SIZE"],[415,52,434,50],[415,55,434,53],[415,56,434,54],[416,8,435,6,"targetEnemyId"],[416,21,435,19],[416,23,435,21,"targetEnemy"],[416,34,435,32],[416,35,435,33,"id"],[416,37,435,35],[417,8,436,6,"damage"],[417,14,436,12],[417,16,436,14,"damage"],[417,22,436,20],[418,8,437,6,"startTime"],[418,17,437,15],[418,19,437,17,"Date"],[418,23,437,21],[418,24,437,22,"now"],[418,27,437,25],[418,28,437,26],[418,29,437,27],[419,8,438,6,"duration"],[419,16,438,14],[419,18,438,16],[419,21,438,19],[420,8,438,21],[421,8,439,6],[422,8,440,6,"abilityId"],[422,17,440,15],[422,19,440,17,"abilityInfo"],[422,30,440,28],[422,32,440,30,"id"],[422,34,440,32],[422,38,440,36],[422,54,440,52],[423,8,441,6,"abilityName"],[423,19,441,17],[423,21,441,19,"abilityInfo"],[423,32,441,30],[423,34,441,32,"name"],[423,38,441,36],[423,42,441,40],[423,58,441,56],[424,8,442,6,"abilityIcon"],[424,19,442,17],[424,21,442,19,"abilityInfo"],[424,32,442,30],[424,34,442,32,"icon"],[424,38,442,36],[424,42,442,40],[424,46,442,44],[424,47,442,46],[425,6,443,4],[425,7,443,5],[426,6,445,4,"console"],[426,13,445,11],[426,14,445,12,"log"],[426,17,445,15],[426,18,445,16],[426,53,445,51,"targetEnemy"],[426,64,445,62],[426,65,445,63,"id"],[426,67,445,65],[426,75,445,73,"damage"],[426,81,445,79],[426,90,445,88],[426,91,445,89],[427,6,446,4,"console"],[427,13,446,11],[427,14,446,12,"log"],[427,17,446,15],[427,18,446,16],[427,53,446,51,"ninjaX"],[427,59,446,57],[427,64,446,62,"ninjaY"],[427,70,446,68],[427,87,446,85,"projectile"],[427,97,446,95],[427,98,446,96,"targetX"],[427,105,446,103],[427,110,446,108,"projectile"],[427,120,446,118],[427,121,446,119,"targetY"],[427,128,446,126],[427,131,446,129],[427,132,446,130],[428,6,448,4,"setProjectiles"],[428,20,448,18],[428,21,448,19,"prev"],[428,25,448,23],[428,29,448,27],[428,30,448,28],[428,33,448,31,"prev"],[428,37,448,35],[428,39,448,37,"projectile"],[428,49,448,47],[428,50,448,48],[428,51,448,49],[430,6,450,4],[431,6,451,4,"setTimeout"],[431,16,451,14],[431,17,451,15],[431,23,451,21],[432,8,452,6,"handleProjectileHit"],[432,27,452,25],[432,28,452,26,"projectile"],[432,38,452,36],[432,39,452,37],[433,6,453,4],[433,7,453,5],[433,9,453,7],[433,12,453,10],[433,13,453,11],[434,4,454,2],[434,5,454,3],[436,4,456,2],[437,4,457,2],[437,8,457,8,"spawnTestEnemy"],[437,22,457,22],[437,25,457,26,"state"],[437,30,457,44],[437,34,457,49],[438,6,458,4],[439,6,459,4],[439,10,459,10,"SCREEN_WIDTH"],[439,22,459,22],[439,25,459,25],[439,28,459,28],[439,29,459,29],[439,30,459,30],[440,6,460,4],[440,10,460,10,"GAME_AREA_HEIGHT"],[440,26,460,26],[440,29,460,29],[440,32,460,32],[440,35,460,35],[440,38,460,38],[440,39,460,39],[440,40,460,40],[441,6,461,4],[441,10,461,10,"ENEMY_SIZE"],[441,20,461,20],[441,23,461,23],[441,25,461,25],[443,6,463,4],[444,6,464,4],[444,10,464,10,"x"],[444,11,464,11],[444,14,464,14,"Math"],[444,18,464,18],[444,19,464,19,"random"],[444,25,464,25],[444,26,464,26],[444,27,464,27],[444,31,464,31,"SCREEN_WIDTH"],[444,43,464,43],[444,46,464,46,"ENEMY_SIZE"],[444,56,464,56],[444,59,464,59],[444,60,464,60],[444,61,464,61],[444,64,464,64,"ENEMY_SIZE"],[444,74,464,74],[444,75,464,75],[444,76,464,76],[445,6,465,4],[445,10,465,10,"y"],[445,11,465,11],[445,14,465,14,"Math"],[445,18,465,18],[445,19,465,19,"random"],[445,25,465,25],[445,26,465,26],[445,27,465,27],[445,31,465,31,"GAME_AREA_HEIGHT"],[445,47,465,47],[445,50,465,50,"ENEMY_SIZE"],[445,60,465,60],[445,63,465,63],[445,64,465,64],[445,65,465,65],[445,68,465,68,"ENEMY_SIZE"],[445,78,465,78],[445,79,465,79],[445,80,465,80],[447,6,467,4],[447,10,467,10,"enemy"],[447,15,467,28],[447,18,467,31],[448,8,468,6,"id"],[448,10,468,8],[448,12,468,10],[448,21,468,19],[448,23,468,21,"enemyCounter"],[448,35,468,33],[448,37,468,35],[449,8,469,6,"name"],[449,12,469,10],[449,14,469,12],[449,24,469,22],[450,8,470,6,"health"],[450,14,470,12],[450,16,470,14],[450,19,470,17],[451,8,471,6,"maxHealth"],[451,17,471,15],[451,19,471,17],[451,22,471,20],[452,8,472,6,"stats"],[452,13,472,11],[452,15,472,13],[453,10,473,8,"attack"],[453,16,473,14],[453,18,473,16],[453,20,473,18],[454,10,474,8,"defense"],[454,17,474,15],[454,19,474,17],[454,21,474,19],[455,10,475,8,"health"],[455,16,475,14],[455,18,475,16],[455,21,475,19],[456,10,476,8,"maxHealth"],[456,19,476,17],[456,21,476,19],[456,24,476,22],[457,10,477,8,"critChance"],[457,20,477,18],[457,22,477,20],[457,23,477,21],[458,10,478,8,"critDamage"],[458,20,478,18],[458,22,478,20],[458,25,478,23],[459,10,479,8,"cooldownReduction"],[459,27,479,25],[459,29,479,27],[460,8,480,6],[460,9,480,7],[461,8,481,6,"position"],[461,16,481,14],[461,18,481,16],[462,10,481,18,"x"],[462,11,481,19],[463,10,481,21,"y"],[464,8,481,23],[464,9,481,24],[465,8,482,6,"lastDamaged"],[465,19,482,17],[465,21,482,19],[466,6,483,4],[466,7,483,5],[467,6,485,4,"state"],[467,11,485,9],[467,12,485,10,"enemies"],[467,19,485,17],[467,20,485,18,"push"],[467,24,485,22],[467,25,485,23,"enemy"],[467,30,485,28],[467,31,485,29],[468,4,486,2],[468,5,486,3],[470,4,488,2],[471,4,489,2],[471,8,489,8,"startCombat"],[471,19,489,19],[471,22,489,22,"React"],[471,27,489,27],[471,28,489,27,"default"],[471,35,489,27],[471,36,489,28,"useCallback"],[471,47,489,39],[471,48,489,40],[471,54,489,46],[472,6,490,4,"console"],[472,13,490,11],[472,14,490,12,"log"],[472,17,490,15],[472,18,490,16],[472,63,490,61],[472,64,490,62],[473,6,491,4,"setCombatState"],[473,20,491,18],[473,21,491,19,"prev"],[473,25,491,23],[473,30,491,28],[474,8,491,30],[474,11,491,33,"prev"],[474,15,491,37],[475,8,491,39,"isInCombat"],[475,18,491,49],[475,20,491,51],[476,6,491,56],[476,7,491,57],[476,8,491,58],[476,9,491,59],[478,6,493,4],[479,6,494,4,"combatEngine"],[479,25,494,16],[479,26,494,16,"combatEngine"],[479,38,494,16],[479,39,494,17,"addTickCallback"],[479,54,494,32],[479,55,494,33,"handleCombatTick"],[479,71,494,49],[479,72,494,50],[480,6,495,4,"console"],[480,13,495,11],[480,14,495,12,"log"],[480,17,495,15],[480,18,495,16],[480,62,495,60],[480,63,495,61],[482,6,497,4],[483,6,498,4,"combatEngine"],[483,25,498,16],[483,26,498,16,"combatEngine"],[483,38,498,16],[483,39,498,17,"start"],[483,44,498,22],[483,45,498,23],[483,46,498,24],[484,4,499,2],[484,5,499,3],[484,7,499,5],[484,8,499,6,"combatEngine"],[484,27,499,18],[484,28,499,18,"combatEngine"],[484,40,499,18],[484,42,499,20,"handleCombatTick"],[484,58,499,36],[484,59,499,37],[484,60,499,38],[486,4,501,2],[487,4,502,2],[487,8,502,8,"stopCombat"],[487,18,502,18],[487,21,502,21,"React"],[487,26,502,26],[487,27,502,26,"default"],[487,34,502,26],[487,35,502,27,"useCallback"],[487,46,502,38],[487,47,502,39],[487,53,502,45],[488,6,503,4,"setCombatState"],[488,20,503,18],[488,21,503,19,"prev"],[488,25,503,23],[488,30,503,28],[489,8,503,30],[489,11,503,33,"prev"],[489,15,503,37],[490,8,503,39,"isInCombat"],[490,18,503,49],[490,20,503,51],[491,6,503,57],[491,7,503,58],[491,8,503,59],[491,9,503,60],[492,6,504,4,"combatEngine"],[492,25,504,16],[492,26,504,16,"combatEngine"],[492,38,504,16],[492,39,504,17,"removeTickCallback"],[492,57,504,35],[492,58,504,36,"handleCombatTick"],[492,74,504,52],[492,75,504,53],[493,4,505,2],[493,5,505,3],[493,7,505,5],[493,8,505,6,"combatEngine"],[493,27,505,18],[493,28,505,18,"combatEngine"],[493,40,505,18],[493,42,505,20,"handleCombatTick"],[493,58,505,36],[493,59,505,37],[493,60,505,38],[495,4,507,2],[496,4,508,2],[496,8,508,8,"equipAbility"],[496,20,508,20],[496,23,508,23,"equipAbility"],[496,24,508,24,"abilityId"],[496,33,508,41],[496,35,508,43,"slotIndex"],[496,44,508,60],[496,49,508,74],[497,6,509,4],[497,13,509,11,"combatState"],[497,24,509,22],[497,25,509,23,"abilityManager"],[497,39,509,37],[497,40,509,38,"equipAbility"],[497,52,509,50],[497,53,509,51,"abilityId"],[497,62,509,60],[497,64,509,62,"slotIndex"],[497,73,509,71],[497,74,509,72],[498,4,510,2],[498,5,510,3],[499,4,512,2],[499,8,512,8,"getDeck"],[499,15,512,15],[499,18,512,18,"getDeck"],[499,19,512,18],[499,24,512,24],[500,6,513,4],[500,13,513,11,"combatState"],[500,24,513,22],[500,25,513,23,"abilityManager"],[500,39,513,37],[500,40,513,38,"getDeck"],[500,47,513,45],[500,48,513,46],[500,49,513,47],[501,4,514,2],[501,5,514,3],[502,4,516,2],[502,8,516,8,"getAvailableAbilities"],[502,29,516,29],[502,32,516,32,"getAvailableAbilities"],[502,33,516,32],[502,38,516,38],[503,6,517,4],[503,13,517,11,"combatState"],[503,24,517,22],[503,25,517,23,"abilityManager"],[503,39,517,37],[503,40,517,38,"getAvailableAbilities"],[503,61,517,59],[503,62,517,60],[503,63,517,61],[504,4,518,2],[504,5,518,3],[505,4,520,2],[505,8,520,8,"upgradeAbility"],[505,22,520,22],[505,25,520,26,"abilityId"],[505,34,520,43],[505,38,520,57],[506,6,521,4],[506,13,521,11,"combatState"],[506,24,521,22],[506,25,521,23,"abilityManager"],[506,39,521,37],[506,40,521,38,"upgradeAbility"],[506,54,521,52],[506,55,521,53,"abilityId"],[506,64,521,62],[506,65,521,63],[507,4,522,2],[507,5,522,3],[509,4,524,2],[510,4,525,2],[510,8,525,8,"clearAllEnemies"],[510,23,525,23],[510,26,525,26,"clearAllEnemies"],[510,27,525,26],[510,32,525,32],[511,6,526,4,"console"],[511,13,526,11],[511,14,526,12,"log"],[511,17,526,15],[511,18,526,16],[511,67,526,65],[511,68,526,66],[512,6,527,4,"setCombatState"],[512,20,527,18],[512,21,527,19,"prev"],[512,25,527,23],[512,30,527,28],[513,8,528,6],[513,11,528,9,"prev"],[513,15,528,13],[514,8,529,6,"enemies"],[514,15,529,13],[514,17,529,15],[515,6,530,4],[515,7,530,5],[515,8,530,6],[515,9,530,7],[516,4,531,2],[516,5,531,3],[518,4,533,2],[519,4,534,2],[519,8,534,8,"triggerLevelUpExplosion"],[519,31,534,31],[519,34,534,34,"triggerLevelUpExplosion"],[519,35,534,34],[519,40,534,40],[520,6,535,4,"console"],[520,13,535,11],[520,14,535,12,"log"],[520,17,535,15],[520,18,535,16],[520,70,535,68],[520,71,535,69],[521,6,537,4],[521,10,537,10,"explosionTime"],[521,23,537,23],[521,26,537,26,"Date"],[521,30,537,30],[521,31,537,31,"now"],[521,34,537,34],[521,35,537,35],[521,36,537,36],[522,6,538,4,"setLastExplosionTime"],[522,26,538,24],[522,27,538,25,"explosionTime"],[522,40,538,38],[522,41,538,39],[523,6,540,4,"setCombatState"],[523,20,540,18],[523,21,540,19,"prev"],[523,25,540,23],[523,29,540,27],[524,8,541,6],[525,8,542,6],[525,12,542,12,"enemyCount"],[525,22,542,22],[525,25,542,25,"prev"],[525,29,542,29],[525,30,542,30,"enemies"],[525,37,542,37],[525,38,542,38,"length"],[525,44,542,44],[526,8,543,6],[526,12,543,12,"explosionXP"],[526,23,543,23],[526,26,543,26,"enemyCount"],[526,36,543,36],[526,39,543,39],[526,41,543,41],[526,42,543,42],[526,43,543,43],[527,8,544,6],[527,12,544,12,"explosionGold"],[527,25,544,25],[527,28,544,28,"enemyCount"],[527,38,544,38],[527,41,544,41],[527,42,544,42],[527,43,544,43],[527,44,544,44],[529,8,546,6,"console"],[529,15,546,13],[529,16,546,14,"log"],[529,19,546,17],[529,20,546,18],[529,44,546,42,"enemyCount"],[529,54,546,52],[529,76,546,74,"explosionXP"],[529,87,546,85],[529,98,546,96,"explosionGold"],[529,111,546,109],[529,118,546,116],[529,119,546,117],[531,8,548,6],[532,8,549,6],[532,12,549,10,"explosionXP"],[532,23,549,21],[532,26,549,24],[532,27,549,25],[532,29,549,27],[533,10,550,8,"setTimeout"],[533,20,550,18],[533,21,550,19],[533,27,550,25],[534,12,551,10,"updateNinja"],[534,23,551,21],[534,24,551,23,"ninja"],[534,29,551,28],[534,34,551,34],[535,14,552,12,"experience"],[535,24,552,22],[535,26,552,24,"ninja"],[535,31,552,29],[535,32,552,30,"experience"],[535,42,552,40],[535,45,552,43,"explosionXP"],[535,56,552,54],[536,14,553,12,"gold"],[536,18,553,16],[536,20,553,18,"ninja"],[536,25,553,23],[536,26,553,24,"gold"],[536,30,553,28],[536,33,553,31,"explosionGold"],[537,12,554,10],[537,13,554,11],[537,14,554,12],[537,15,554,13],[538,10,555,8],[538,11,555,9],[538,13,555,11],[538,14,555,12],[538,15,555,13],[538,16,555,14],[538,17,555,15],[539,8,556,6],[541,8,558,6],[542,8,559,6],[543,8,560,6],[543,12,560,12,"damagedEnemies"],[543,26,560,26],[543,29,560,29,"prev"],[543,33,560,33],[543,34,560,34,"enemies"],[543,41,560,41],[543,42,560,42,"map"],[543,45,560,45],[543,46,560,46,"enemy"],[543,51,560,51],[543,56,560,56],[544,10,561,8],[544,13,561,11,"enemy"],[544,18,561,16],[545,10,562,8,"health"],[545,16,562,14],[545,18,562,16],[545,19,562,17],[546,10,562,19],[547,10,563,8,"lastDamaged"],[547,21,563,19],[547,23,563,21,"combatEngine"],[547,42,563,33],[547,43,563,33,"combatEngine"],[547,55,563,33],[547,56,563,34,"getCurrentTick"],[547,70,563,48],[547,71,563,49],[548,8,564,6],[548,9,564,7],[548,10,564,8],[548,11,564,9],[549,8,566,6],[549,15,566,13],[550,10,567,8],[550,13,567,11,"prev"],[550,17,567,15],[551,10,568,8,"enemies"],[551,17,568,15],[551,19,568,17,"damagedEnemies"],[552,8,569,6],[552,9,569,7],[553,6,570,4],[553,7,570,5],[553,8,570,6],[554,4,571,2],[554,5,571,3],[556,4,573,2],[557,4,574,2],[557,8,574,8,"spawnEnemy"],[557,18,574,18],[557,21,574,22,"position"],[557,29,574,57],[557,33,574,75],[558,6,575,4],[558,10,575,10,"SCREEN_WIDTH"],[558,22,575,22],[558,25,575,25],[558,28,575,28],[559,6,576,4],[559,10,576,10,"GAME_AREA_HEIGHT"],[559,26,576,26],[559,29,576,29],[559,32,576,32],[559,35,576,35],[559,38,576,38],[559,39,576,39],[559,40,576,40],[560,6,577,4],[560,10,577,10,"ENEMY_SIZE"],[560,20,577,20],[560,23,577,23],[560,25,577,25],[562,6,579,4],[563,6,580,4],[563,10,580,10,"x"],[563,11,580,11],[563,14,580,14,"position"],[563,22,580,22],[563,24,580,24,"x"],[563,25,580,25],[563,29,580,29,"Math"],[563,33,580,33],[563,34,580,34,"random"],[563,40,580,40],[563,41,580,41],[563,42,580,42],[563,46,580,46,"SCREEN_WIDTH"],[563,58,580,58],[563,61,580,61,"ENEMY_SIZE"],[563,71,580,71],[563,74,580,74],[563,75,580,75],[563,76,580,76],[563,79,580,79,"ENEMY_SIZE"],[563,89,580,89],[564,6,581,4],[564,10,581,10,"y"],[564,11,581,11],[564,14,581,14,"position"],[564,22,581,22],[564,24,581,24,"y"],[564,25,581,25],[564,29,581,29,"Math"],[564,33,581,33],[564,34,581,34,"random"],[564,40,581,40],[564,41,581,41],[564,42,581,42],[564,46,581,46,"GAME_AREA_HEIGHT"],[564,62,581,62],[564,65,581,65,"ENEMY_SIZE"],[564,75,581,75],[564,78,581,78],[564,79,581,79],[564,80,581,80],[564,83,581,83,"ENEMY_SIZE"],[564,93,581,93],[565,6,583,4],[565,10,583,10,"enemy"],[565,15,583,28],[565,18,583,31],[566,8,584,6,"id"],[566,10,584,8],[566,12,584,10],[566,21,584,19],[566,23,584,21,"enemyCounter"],[566,35,584,33],[566,37,584,35],[567,8,585,6,"name"],[567,12,585,10],[567,14,585,12],[567,24,585,22],[568,8,586,6,"health"],[568,14,586,12],[568,16,586,14],[568,19,586,17],[569,8,587,6,"maxHealth"],[569,17,587,15],[569,19,587,17],[569,22,587,20],[570,8,588,6,"stats"],[570,13,588,11],[570,15,588,13],[571,10,589,8,"attack"],[571,16,589,14],[571,18,589,16],[571,20,589,18],[572,10,590,8,"defense"],[572,17,590,15],[572,19,590,17],[572,21,590,19],[573,10,591,8,"health"],[573,16,591,14],[573,18,591,16],[573,21,591,19],[574,10,592,8,"maxHealth"],[574,19,592,17],[574,21,592,19],[574,24,592,22],[575,10,593,8,"critChance"],[575,20,593,18],[575,22,593,20],[575,23,593,21],[576,10,594,8,"critDamage"],[576,20,594,18],[576,22,594,20],[576,25,594,23],[577,10,595,8,"cooldownReduction"],[577,27,595,25],[577,29,595,27],[578,8,596,6],[578,9,596,7],[579,8,597,6,"position"],[579,16,597,14],[579,18,597,16],[580,10,597,18,"x"],[580,11,597,19],[581,10,597,21,"y"],[582,8,597,23],[582,9,597,24],[583,8,598,6,"lastDamaged"],[583,19,598,17],[583,21,598,19],[584,6,599,4],[584,7,599,5],[585,6,601,4,"setCombatState"],[585,20,601,18],[585,21,601,19,"prev"],[585,25,601,23],[585,30,601,28],[586,8,602,6],[586,11,602,9,"prev"],[586,15,602,13],[587,8,603,6,"enemies"],[587,15,603,13],[587,17,603,15],[587,18,603,16],[587,21,603,19,"prev"],[587,25,603,23],[587,26,603,24,"enemies"],[587,33,603,31],[587,35,603,33,"enemy"],[587,40,603,38],[588,6,604,4],[588,7,604,5],[588,8,604,6],[588,9,604,7],[589,6,606,4],[589,13,606,11,"enemy"],[589,18,606,16],[590,4,607,2],[590,5,607,3],[592,4,609,2],[593,4,610,2],[593,8,610,8,"spawnBoss"],[593,17,610,17],[593,20,610,21,"bossEnemy"],[593,29,610,43],[593,33,610,48],[594,6,611,4,"console"],[594,13,611,11],[594,14,611,12,"log"],[594,17,611,15],[594,18,611,16],[594,39,611,37,"bossEnemy"],[594,48,611,46],[594,49,611,47,"name"],[594,53,611,51],[594,90,611,88],[594,91,611,89],[595,6,612,4,"setCombatState"],[595,20,612,18],[595,21,612,19,"prev"],[595,25,612,23],[595,30,612,28],[596,8,613,6],[596,11,613,9,"prev"],[596,15,613,13],[597,8,614,6,"enemies"],[597,15,614,13],[597,17,614,15],[597,18,614,16,"bossEnemy"],[597,27,614,25],[597,28,614,26],[597,29,614,27],[598,6,615,4],[598,7,615,5],[598,8,615,6],[598,9,615,7],[599,4,616,2],[599,5,616,3],[601,4,618,2],[602,4,619,2],[602,8,619,8,"clearSpecificEnemy"],[602,26,619,26],[602,29,619,30,"enemyId"],[602,36,619,45],[602,40,619,50],[603,6,620,4,"setCombatState"],[603,20,620,18],[603,21,620,19,"prev"],[603,25,620,23],[603,30,620,28],[604,8,621,6],[604,11,621,9,"prev"],[604,15,621,13],[605,8,622,6,"enemies"],[605,15,622,13],[605,17,622,15,"prev"],[605,21,622,19],[605,22,622,20,"enemies"],[605,29,622,27],[605,30,622,28,"filter"],[605,36,622,34],[605,37,622,35,"enemy"],[605,42,622,40],[605,46,622,44,"enemy"],[605,51,622,49],[605,52,622,50,"id"],[605,54,622,52],[605,59,622,57,"enemyId"],[605,66,622,64],[606,6,623,4],[606,7,623,5],[606,8,623,6],[606,9,623,7],[607,4,624,2],[607,5,624,3],[609,4,626,2],[610,4,627,2],[610,8,627,8,"useAbilityManually"],[610,26,627,26],[610,29,627,26,"_s3"],[610,32,627,26],[610,33,627,29],[610,37,627,29,"useCallback"],[610,43,627,40],[610,44,627,40,"useCallback"],[610,55,627,40],[610,57,627,40,"_s3"],[610,60,627,40],[610,61,627,42,"slotIndex"],[610,70,627,59],[610,74,627,73],[611,6,627,73,"_s3"],[611,9,627,73],[612,6,628,4,"console"],[612,13,628,11],[612,14,628,12,"log"],[612,17,628,15],[612,18,628,16],[612,53,628,51,"slotIndex"],[612,62,628,60],[612,64,628,62],[612,65,628,63],[614,6,630,4],[615,6,631,4],[615,10,631,10,"isReady"],[615,17,631,17],[615,20,631,20,"combatState"],[615,31,631,31],[615,32,631,32,"abilityManager"],[615,46,631,46],[615,47,631,47,"isAbilityReady"],[615,61,631,61],[615,62,631,62,"slotIndex"],[615,71,631,71],[615,72,631,72],[616,6,632,4],[616,10,632,8],[616,11,632,9,"isReady"],[616,18,632,16],[616,20,632,18],[617,8,633,6,"console"],[617,15,633,13],[617,16,633,14,"log"],[617,19,633,17],[617,20,633,18],[617,41,633,39,"slotIndex"],[617,50,633,48],[617,85,633,83],[617,86,633,84],[618,8,634,6],[618,15,634,13],[618,20,634,18],[619,6,635,4],[621,6,637,4],[622,6,638,4],[622,10,638,8,"combatState"],[622,21,638,19],[622,22,638,20,"enemies"],[622,29,638,27],[622,30,638,28,"length"],[622,36,638,34],[622,41,638,39],[622,42,638,40],[622,44,638,42],[623,8,639,6,"console"],[623,15,639,13],[623,16,639,14,"log"],[623,19,639,17],[623,20,639,18],[623,69,639,67],[623,70,639,68],[624,8,640,6],[624,15,640,13],[624,20,640,18],[625,6,641,4],[627,6,643,4],[628,6,644,4],[628,10,644,10,"currentTick"],[628,21,644,21],[628,24,644,24,"combatEngine"],[628,43,644,36],[628,44,644,36,"combatEngine"],[628,56,644,36],[628,57,644,37,"getCurrentTick"],[628,71,644,51],[628,72,644,52],[628,73,644,53],[629,6,645,4],[629,10,645,10,"success"],[629,17,645,17],[629,20,645,20,"combatState"],[629,31,645,31],[629,32,645,32,"abilityManager"],[629,46,645,46],[629,47,645,47,"useAbility"],[629,57,645,57],[629,58,645,58,"slotIndex"],[629,67,645,67],[629,69,645,69,"currentTick"],[629,80,645,80],[629,81,645,81],[630,6,647,4],[630,10,647,8,"success"],[630,17,647,15],[630,19,647,17],[631,8,648,6],[632,8,649,6,"setCombatState"],[632,22,649,20],[632,23,649,21,"prev"],[632,27,649,25],[632,31,649,29],[633,10,650,8],[633,14,650,14,"newState"],[633,22,650,22],[633,25,650,25],[634,12,650,27],[634,15,650,30,"prev"],[635,10,650,35],[635,11,650,36],[636,10,651,8,"castAbility"],[636,21,651,19],[636,22,651,20,"newState"],[636,30,651,28],[636,32,651,30,"slotIndex"],[636,41,651,39],[636,42,651,40],[637,10,652,8],[637,17,652,15,"newState"],[637,25,652,23],[638,8,653,6],[638,9,653,7],[638,10,653,8],[639,8,655,6,"console"],[639,15,655,13],[639,16,655,14,"log"],[639,19,655,17],[639,20,655,18],[639,65,655,63,"slotIndex"],[639,74,655,72],[639,76,655,74],[639,77,655,75],[640,8,656,6],[640,15,656,13],[640,19,656,17],[641,6,657,4],[641,7,657,5],[641,13,657,11],[642,8,658,6,"console"],[642,15,658,13],[642,16,658,14,"log"],[642,19,658,17],[642,20,658,18],[642,61,658,59,"slotIndex"],[642,70,658,68],[642,72,658,70],[642,73,658,71],[643,8,659,6],[643,15,659,13],[643,20,659,18],[644,6,660,4],[645,4,661,2],[645,5,661,3],[645,46,661,5],[645,47,661,6,"combatState"],[645,58,661,17],[645,59,661,18,"abilityManager"],[645,73,661,32],[645,75,661,34,"combatState"],[645,86,661,45],[645,87,661,46,"enemies"],[645,94,661,53],[645,95,661,54],[645,96,661,55],[646,4,662,2],[646,8,662,2,"useEffect"],[646,14,662,11],[646,15,662,11,"useEffect"],[646,24,662,11],[646,26,662,12],[646,32,662,18],[647,6,663,4,"combatEngine"],[647,25,663,16],[647,26,663,16,"combatEngine"],[647,38,663,16],[647,39,663,17,"start"],[647,44,663,22],[647,45,663,23],[647,46,663,24],[649,6,665,4],[650,6,666,4],[651,6,667,4,"console"],[651,13,667,11],[651,14,667,12,"log"],[651,17,667,15],[651,18,667,16],[651,97,667,95],[651,98,667,96],[652,6,669,4],[652,13,669,11],[652,19,669,17],[653,8,670,6,"combatEngine"],[653,27,670,18],[653,28,670,18,"combatEngine"],[653,40,670,18],[653,41,670,19,"stop"],[653,45,670,23],[653,46,670,24],[653,47,670,25],[654,6,671,4],[654,7,671,5],[655,4,672,2],[655,5,672,3],[655,7,672,5],[655,9,672,7],[655,10,672,8],[656,4,674,2],[656,8,674,8,"contextValue"],[656,20,674,39],[656,23,674,42,"React"],[656,28,674,47],[656,29,674,47,"default"],[656,36,674,47],[656,37,674,48,"useMemo"],[656,44,674,55],[656,45,674,56],[656,52,674,63],[657,6,675,4,"combatState"],[657,17,675,15],[658,6,676,4,"projectiles"],[658,17,676,15],[659,6,677,4,"startCombat"],[659,17,677,15],[660,6,678,4,"stopCombat"],[660,16,678,14],[661,6,679,4,"equipAbility"],[661,18,679,16],[662,6,680,4,"handleEnemyKill"],[662,21,680,19],[663,6,681,4,"getDeck"],[663,13,681,11],[664,6,682,4,"getAvailableAbilities"],[664,27,682,25],[665,6,683,4,"upgradeAbility"],[665,20,683,18],[666,6,684,4,"spawnEnemy"],[666,16,684,14],[667,6,685,4,"spawnBoss"],[667,15,685,13],[668,6,686,4,"clearAllEnemies"],[668,21,686,19],[669,6,687,4,"clearSpecificEnemy"],[669,24,687,22],[670,6,688,4,"triggerLevelUpExplosion"],[670,29,688,27],[671,6,689,4,"findClosestEnemy"],[671,22,689,20],[672,6,690,4,"updateNinjaPosition"],[672,25,690,23],[673,6,691,4,"setManualControlActive"],[673,28,691,26],[674,6,692,4,"lastExplosionTime"],[674,23,692,21],[675,6,693,4,"useAbilityManually"],[675,24,693,22],[675,25,693,24],[676,4,694,2],[676,5,694,3],[676,6,694,4],[676,8,694,6],[677,4,695,4],[678,4,696,4],[679,4,697,4,"combatState"],[679,15,697,15],[679,17,698,4,"projectiles"],[679,28,698,15],[679,30,699,4,"lastExplosionTime"],[679,47,699,21],[680,4,700,4],[681,4,701,4,"combatState"],[681,15,701,15],[681,16,701,16,"abilityManager"],[681,30,701,30],[681,32,702,4,"combatState"],[681,43,702,15],[681,44,702,16,"enemies"],[681,51,702,23],[681,53,703,4,"useAbilityManually"],[681,71,703,22],[681,72,703,24],[682,4,703,24],[682,5,704,3],[682,6,704,4],[683,4,706,2],[683,24,707,4],[683,28,707,4,"_reactJsxDevRuntime"],[683,47,707,4],[683,48,707,4,"jsxDEV"],[683,54,707,4],[683,56,707,5,"CombatContext"],[683,69,707,18],[683,70,707,19,"Provider"],[683,78,707,27],[684,6,707,28,"value"],[684,11,707,33],[684,13,707,35,"contextValue"],[684,25,707,48],[685,6,707,48,"children"],[685,14,707,48],[685,16,708,7,"children"],[686,4,708,15],[687,6,708,15,"fileName"],[687,14,708,15],[687,16,708,15,"_jsxFileName"],[687,28,708,15],[688,6,708,15,"lineNumber"],[688,16,708,15],[689,6,708,15,"columnNumber"],[689,18,708,15],[690,4,708,15],[690,11,709,28],[690,12,709,29],[691,2,711,0],[691,3,711,1],[692,2,711,2,"_s4"],[692,5,711,2],[692,6,85,13,"CombatProvider"],[692,20,85,27],[693,4,85,27],[693,12,86,26,"useGame"],[693,24,86,33],[693,25,86,33,"useGame"],[693,32,86,33],[693,34,87,30,"useZone"],[693,46,87,37],[693,47,87,37,"useZone"],[693,54,87,37],[694,2,87,37],[695,2,87,37,"_c"],[695,4,87,37],[695,7,85,13,"CombatProvider"],[695,21,85,27],[696,2,85,27],[696,6,85,27,"_c"],[696,8,85,27],[697,2,85,27,"$RefreshReg$"],[697,14,85,27],[697,15,85,27,"_c"],[697,17,85,27],[698,0,85,27],[698,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBC0E;CDM;8BEI;sCC2B;eCY;kBCI;ODO;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;mGMK,6BN;uDKI,+CL;kFOE,4CP;iDKK,yBL;4CQY,qBR;KDiB;0BUK;KVG;GJC;mCeG;oBCY;KDU;GfI;2BiBG;GjBE;0CkBO;GlBE;6CmBG;GnBG;8BoBG;mBfG;oDEI,sCF;Kea;mBCG,oBC,2BD,CD;GpBC;sBuBG;iCCa;oCCE,iCD;KDG;GvB0B;2B0BG;mBL6B,6BK;exBG;KwBE;G1BC;yB2BG;G3B6B;wC4BG;mBvBE,uCuB;G5BQ;uC6BG;mBxBC,wCwB;G7BE;uB8BG;G9BE;kB+BE;G/BE;gCgCE;GhCE;yBiCE;GjCE;0BkCG;mB7BE;M6BG;GlCC;kCmCG;mB9BM;mBHU;sBCC;YDG;SGC;8C+BK;Q/BI;K8BM;GnCC;qBqCG;mBhC2B;MgCG;GrCG;oBsCG;mBjCE;MiCG;GtCC;6BuCG;mBlCC;mCmCE,6BnC;MkCC;GvCC;yCyCG;qBpCsB;OoCI;GzCQ;Y0CC;WCO;KDE;G1CC;wD4CE;I5CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}