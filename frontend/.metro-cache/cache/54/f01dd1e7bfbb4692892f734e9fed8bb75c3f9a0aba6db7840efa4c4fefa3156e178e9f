{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10 * dropMultiplier);\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    // Projectile management and animation\n    (0, _react.useEffect)(() => {\n      var processProjectiles = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate projectile progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // CRITICAL FIX: Apply damage when projectile reaches target\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n\n              // Apply damage to the target enemy\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`💥 PROJECTILE HIT: ${projectile.abilityName} hit ${enemy.name} for ${projectile.damage} damage (${newHealth}/${enemy.maxHealth} HP remaining)`);\n                }\n                return newState;\n              });\n              return null; // Remove completed projectile\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process projectiles at 60fps\n      var projectileInterval = setInterval(processProjectiles, 16);\n      return () => clearInterval(projectileInterval);\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impact - deals damage to specific enemy\n    var handleProjectileImpact = (0, _react.useCallback)((targetEnemyId, damage, abilityName) => {\n      console.log(`💥 PROJECTILE IMPACT: ${abilityName} hit enemy ${targetEnemyId} for ${damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: Math.max(0, newState.enemies[enemyIndex].health - damage),\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth} after ${abilityName} impact`);\n        } else {\n          console.log(`❌ Enemy ${targetEnemyId} not found for projectile impact`);\n        }\n        return newState;\n      });\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone,\n      // Expose shadow clone state for rendering\n      handleProjectileImpact // CRITICAL FIX: Projectile impact handling\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData,\n    // Add saveAbilityData to dependencies\n    handleProjectileImpact // Add handleProjectileImpact to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"OIFiIalIgkrdMzK8z20Xtt3mY2o=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":947,"map":[[15,2,91,0,"Object"],[15,8,91,0],[15,9,91,0,"defineProperty"],[15,23,91,0],[15,24,91,0,"exports"],[15,31,91,0],[16,4,91,0,"enumerable"],[16,14,91,0],[17,4,91,0,"get"],[17,7,91,0],[17,18,91,0,"get"],[17,19,91,0],[18,6,91,0],[18,13,91,0,"useCombat"],[18,22,91,0],[19,4,91,0],[20,2,91,0],[21,2,101,0,"Object"],[21,8,101,0],[21,9,101,0,"defineProperty"],[21,23,101,0],[21,24,101,0,"exports"],[21,31,101,0],[22,4,101,0,"enumerable"],[22,14,101,0],[23,4,101,0,"get"],[23,7,101,0],[23,18,101,0,"get"],[23,19,101,0],[24,6,101,0],[24,13,101,0,"CombatProvider"],[24,27,101,0],[25,4,101,0],[26,2,101,0],[27,2,986,2],[27,6,986,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,986,2],[27,42,986,2,"require"],[27,49,986,2],[27,50,986,2,"_dependencyMap"],[27,64,986,2],[28,2,986,2],[28,6,986,2,"_slicedToArray"],[28,20,986,2],[28,23,986,2,"_interopDefault"],[28,38,986,2],[28,39,986,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,986,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,89,0],[37,6,89,6,"CombatContext"],[37,19,89,19],[37,35,89,22],[37,39,89,22,"createContext"],[37,45,89,35],[37,46,89,35,"createContext"],[37,59,89,35],[37,61,89,67,"undefined"],[37,70,89,76],[37,71,89,77],[38,2,91,7],[38,6,91,13,"useCombat"],[38,15,91,22],[38,18,91,25,"useCombat"],[38,19,91,25],[38,24,91,50],[39,4,91,50,"_s"],[39,6,91,50],[40,4,92,2],[40,8,92,8,"context"],[40,15,92,15],[40,18,92,18],[40,22,92,18,"useContext"],[40,28,92,28],[40,29,92,28,"useContext"],[40,39,92,28],[40,41,92,29,"CombatContext"],[40,54,92,42],[40,55,92,43],[41,4,93,2],[41,8,93,6],[41,9,93,7,"context"],[41,16,93,14],[41,18,93,16],[42,6,94,4],[42,12,94,10],[42,16,94,14,"Error"],[42,21,94,19],[42,22,94,20],[42,70,94,68],[42,71,94,69],[43,4,95,2],[44,4,96,2],[44,11,96,9,"context"],[44,18,96,16],[45,2,97,0],[45,3,97,1],[46,2,97,2,"_s"],[46,4,97,2],[46,5,91,13,"useCombat"],[46,14,91,22],[47,2,99,0],[47,6,99,4,"enemyCounter"],[47,18,99,16],[47,21,99,19],[47,22,99,20],[47,23,99,21],[47,24,99,22],[49,2,101,7],[49,6,101,13,"CombatProvider"],[49,20,101,27],[49,23,101,30,"_ref"],[49,27,101,30],[49,31,101,73],[50,4,101,73,"_s4"],[50,7,101,73],[51,4,101,73],[51,8,101,73,"_s3"],[51,11,101,73],[51,14,101,73,"$RefreshSig$"],[51,26,101,73],[52,4,101,73],[52,8,101,33,"children"],[52,16,101,41],[52,19,101,41,"_ref"],[52,23,101,41],[52,24,101,33,"children"],[52,32,101,41],[53,4,102,2],[53,8,102,8,"game"],[53,12,102,12],[53,15,102,15],[53,19,102,15,"useGame"],[53,31,102,22],[53,32,102,22,"useGame"],[53,39,102,22],[53,41,102,23],[53,42,102,24],[54,4,103,2],[54,8,103,2,"_useZone"],[54,16,103,2],[54,19,103,77],[54,23,103,77,"useZone"],[54,35,103,84],[54,36,103,84,"useZone"],[54,43,103,84],[54,45,103,85],[54,46,103,86],[55,6,103,10,"currentZone"],[55,17,103,21],[55,20,103,21,"_useZone"],[55,28,103,21],[55,29,103,10,"currentZone"],[55,40,103,21],[56,6,103,23,"currentZoneLevel"],[56,22,103,39],[56,25,103,39,"_useZone"],[56,33,103,39],[56,34,103,23,"currentZoneLevel"],[56,50,103,39],[57,6,103,41,"recordEnemyKill"],[57,21,103,56],[57,24,103,56,"_useZone"],[57,32,103,56],[57,33,103,41,"recordEnemyKill"],[57,48,103,56],[58,6,103,58,"spawnZoneEnemy"],[58,20,103,72],[58,23,103,72,"_useZone"],[58,31,103,72],[58,32,103,58,"spawnZoneEnemy"],[58,46,103,72],[60,4,105,2],[61,4,106,2],[61,8,106,8,"initialCombatState"],[61,26,106,39],[61,29,106,42],[62,6,107,4,"isInCombat"],[62,16,107,14],[62,18,107,16],[62,23,107,21],[63,6,108,4,"currentTick"],[63,17,108,15],[63,19,108,17],[63,20,108,18],[64,6,109,4,"enemies"],[64,13,109,11],[64,15,109,13],[64,17,109,15],[65,6,110,4,"abilityManager"],[65,20,110,18],[65,22,110,20],[65,26,110,24,"AbilityManager"],[65,44,110,38],[65,45,110,38,"AbilityManager"],[65,59,110,38],[65,60,110,39],[65,61,110,40],[66,6,111,4,"statusEffects"],[66,19,111,17],[66,21,111,19],[66,25,111,23,"StatusEffectManager"],[66,44,111,42],[66,45,111,42,"StatusEffectManager"],[66,64,111,42],[66,65,111,43],[66,66,111,44],[67,6,112,4,"playerStats"],[67,17,112,15],[67,19,112,17],[68,8,113,6,"attack"],[68,14,113,12],[68,16,113,14],[68,18,113,16],[69,8,113,18],[70,8,114,6,"defense"],[70,15,114,13],[70,17,114,15],[70,18,114,16],[71,8,115,6,"health"],[71,14,115,12],[71,16,115,14],[71,19,115,17],[72,8,116,6,"maxHealth"],[72,17,116,15],[72,19,116,17],[72,22,116,20],[73,8,117,6,"critChance"],[73,18,117,16],[73,20,117,18],[73,21,117,19],[74,8,118,6,"critDamage"],[74,18,118,16],[74,20,118,18],[74,23,118,21],[75,8,119,6,"cooldownReduction"],[75,25,119,23],[75,27,119,25],[76,6,120,4],[77,4,121,2],[77,5,121,3],[78,4,123,2],[78,8,123,2,"_useState"],[78,17,123,2],[78,20,123,40],[78,24,123,40,"useState"],[78,30,123,48],[78,31,123,48,"useState"],[78,39,123,48],[78,41,123,62,"initialCombatState"],[78,59,123,80],[78,60,123,81],[79,6,123,81,"_useState2"],[79,16,123,81],[79,23,123,81,"_slicedToArray"],[79,37,123,81],[79,38,123,81,"default"],[79,45,123,81],[79,47,123,81,"_useState"],[79,56,123,81],[80,6,123,9,"combatState"],[80,17,123,20],[80,20,123,20,"_useState2"],[80,30,123,20],[81,6,123,22,"setCombatState"],[81,20,123,36],[81,23,123,36,"_useState2"],[81,33,123,36],[83,4,125,2],[84,4,126,2],[84,8,126,2,"useEffect"],[84,14,126,11],[84,15,126,11,"useEffect"],[84,24,126,11],[84,26,126,12],[84,32,126,18],[85,6,127,4],[85,10,127,8,"game"],[85,14,127,12],[85,15,127,13,"gameState"],[85,24,127,22],[85,25,127,23,"abilityData"],[85,36,127,34],[85,40,127,38,"combatState"],[85,51,127,49],[85,52,127,50,"abilityManager"],[85,66,127,64],[85,68,127,66],[86,8,128,6,"console"],[86,15,128,13],[86,16,128,14,"log"],[86,19,128,17],[86,20,128,18],[86,68,128,66],[86,70,128,68,"game"],[86,74,128,72],[86,75,128,73,"gameState"],[86,84,128,82],[86,85,128,83,"abilityData"],[86,96,128,94],[86,97,128,95],[87,8,129,6,"combatState"],[87,19,129,17],[87,20,129,18,"abilityManager"],[87,34,129,32],[87,35,129,33,"restoreFromSaveData"],[87,54,129,52],[87,55,129,53,"game"],[87,59,129,57],[87,60,129,58,"gameState"],[87,69,129,67],[87,70,129,68,"abilityData"],[87,81,129,79],[87,82,129,80],[89,8,131,6],[90,8,132,6,"setCombatState"],[90,22,132,20],[90,23,132,21,"prev"],[90,27,132,25],[90,32,132,30],[91,10,132,32],[91,13,132,35,"prev"],[92,8,132,40],[92,9,132,41],[92,10,132,42],[92,11,132,43],[93,6,133,4],[94,4,134,2],[94,5,134,3],[94,7,134,5],[94,8,134,6,"game"],[94,12,134,10],[94,13,134,11,"gameState"],[94,22,134,20],[94,23,134,21,"abilityData"],[94,34,134,32],[94,36,134,34,"combatState"],[94,47,134,45],[94,48,134,46,"abilityManager"],[94,62,134,60],[94,63,134,61],[94,64,134,62],[95,4,136,2],[95,8,136,2,"_useState3"],[95,18,136,2],[95,21,136,40],[95,25,136,40,"useState"],[95,31,136,48],[95,32,136,48,"useState"],[95,40,136,48],[95,42,136,69],[95,44,136,71],[95,45,136,72],[96,6,136,72,"_useState4"],[96,16,136,72],[96,23,136,72,"_slicedToArray"],[96,37,136,72],[96,38,136,72,"default"],[96,45,136,72],[96,47,136,72,"_useState3"],[96,57,136,72],[97,6,136,9,"projectiles"],[97,17,136,20],[97,20,136,20,"_useState4"],[97,30,136,20],[98,6,136,22,"setProjectiles"],[98,20,136,36],[98,23,136,36,"_useState4"],[98,33,136,36],[99,4,137,2],[99,8,137,2,"_useState5"],[99,18,137,2],[99,21,137,52],[99,25,137,52,"useState"],[99,31,137,60],[99,32,137,60,"useState"],[99,40,137,60],[99,42,137,69],[99,43,137,70],[99,44,137,71],[100,6,137,71,"_useState6"],[100,16,137,71],[100,23,137,71,"_slicedToArray"],[100,37,137,71],[100,38,137,71,"default"],[100,45,137,71],[100,47,137,71,"_useState5"],[100,57,137,71],[101,6,137,9,"lastExplosionTime"],[101,23,137,26],[101,26,137,26,"_useState6"],[101,36,137,26],[102,6,137,28,"setLastExplosionTime"],[102,26,137,48],[102,29,137,48,"_useState6"],[102,39,137,48],[103,4,138,2],[104,4,139,2],[106,4,141,2],[107,4,142,2],[107,8,142,8,"handleEnemyKill"],[107,23,142,23],[107,26,142,26],[107,30,142,26,"useCallback"],[107,36,142,37],[107,37,142,37,"useCallback"],[107,48,142,37],[107,50,142,39,"enemy"],[107,55,142,57],[107,59,142,62],[108,6,143,4,"console"],[108,13,143,11],[108,14,143,12,"log"],[108,17,143,15],[108,18,143,16],[108,73,143,71],[108,75,143,73,"enemy"],[108,80,143,78],[108,81,143,79,"id"],[108,83,143,81],[108,84,143,82],[110,6,145,4],[111,6,146,4],[111,10,146,10,"baseXpReward"],[111,22,146,22],[111,25,146,25],[111,28,146,28],[111,29,146,29],[111,30,146,30],[112,6,147,4],[112,10,147,10,"xpMultiplier"],[112,22,147,22],[112,25,147,25,"game"],[112,29,147,29],[112,30,147,30,"gameState"],[112,39,147,39],[112,40,147,40,"subscriptionBenefits"],[112,60,147,60],[112,62,147,62,"xp_multiplier"],[112,75,147,75],[112,79,147,79],[112,82,147,82],[113,6,148,4],[113,10,148,10,"dropMultiplier"],[113,24,148,24],[113,27,148,27,"game"],[113,31,148,31],[113,32,148,32,"gameState"],[113,41,148,41],[113,42,148,42,"subscriptionBenefits"],[113,62,148,62],[113,64,148,64,"drop_multiplier"],[113,79,148,79],[113,83,148,83],[113,86,148,86],[114,6,150,4],[114,10,150,10,"xpReward"],[114,18,150,18],[114,21,150,21,"Math"],[114,25,150,25],[114,26,150,26,"floor"],[114,31,150,31],[114,32,150,32,"baseXpReward"],[114,44,150,44],[114,47,150,47,"xpMultiplier"],[114,59,150,59],[114,60,150,60],[115,6,151,4],[115,10,151,10,"goldReward"],[115,20,151,20],[115,23,151,23,"Math"],[115,27,151,27],[115,28,151,28,"floor"],[115,33,151,33],[115,34,151,34],[115,36,151,36],[115,39,151,39,"dropMultiplier"],[115,53,151,53],[115,54,151,54],[116,6,153,4,"console"],[116,13,153,11],[116,14,153,12,"log"],[116,17,153,15],[116,18,153,16],[116,48,153,46,"xpReward"],[116,56,153,54],[116,67,153,65,"goldReward"],[116,77,153,75],[116,93,153,91],[116,94,153,92],[117,6,154,4,"console"],[117,13,154,11],[117,14,154,12,"log"],[117,17,154,15],[117,18,154,16],[117,60,154,58,"xpMultiplier"],[117,72,154,70],[117,94,154,92,"dropMultiplier"],[117,108,154,106],[117,110,154,108],[117,111,154,109],[118,6,155,4,"console"],[118,13,155,11],[118,14,155,12,"log"],[118,17,155,15],[118,18,155,16],[118,54,155,52,"baseXpReward"],[118,66,155,64],[118,81,155,79,"xpReward"],[118,89,155,87],[118,91,155,89],[118,92,155,90],[119,6,156,4,"console"],[119,13,156,11],[119,14,156,12,"log"],[119,17,156,15],[119,18,156,16],[119,58,156,56],[119,60,156,58,"JSON"],[119,64,156,62],[119,65,156,63,"stringify"],[119,74,156,72],[119,75,156,73,"game"],[119,79,156,77],[119,80,156,78,"gameState"],[119,89,156,87],[119,90,156,88,"subscriptionBenefits"],[119,110,156,108],[119,111,156,109],[119,112,156,110],[120,6,157,4,"console"],[120,13,157,11],[120,14,157,12,"log"],[120,17,157,15],[120,18,157,16],[120,49,157,47,"Platform"],[120,61,157,55],[120,62,157,55,"Platform"],[120,70,157,55],[120,71,157,56,"OS"],[120,73,157,58],[120,84,157,69,"Date"],[120,88,157,73],[120,89,157,74,"now"],[120,92,157,77],[120,93,157,78],[120,94,157,79],[120,96,157,81],[120,97,157,82],[122,6,159,4],[123,6,160,4],[124,6,161,4,"setTimeout"],[124,16,161,14],[124,17,161,15],[124,23,161,21],[125,8,162,6,"console"],[125,15,162,13],[125,16,162,14,"log"],[125,19,162,17],[125,20,162,18],[125,78,162,76],[125,79,162,77],[127,8,164,6],[128,8,165,6,"game"],[128,12,165,10],[128,13,165,11,"updateNinja"],[128,24,165,22],[128,25,165,24,"prev"],[128,29,165,28],[128,33,165,33],[129,10,166,8,"console"],[129,17,166,15],[129,18,166,16,"log"],[129,21,166,19],[129,22,166,20],[129,54,166,52,"prev"],[129,58,166,56],[129,59,166,57,"experience"],[129,69,166,67],[129,81,166,79,"prev"],[129,85,166,83],[129,86,166,84,"experience"],[129,96,166,94],[129,99,166,97,"xpReward"],[129,107,166,105],[129,109,166,107],[129,110,166,108],[130,10,167,8,"console"],[130,17,167,15],[130,18,167,16,"log"],[130,21,167,19],[130,22,167,20],[130,56,167,54,"prev"],[130,60,167,58],[130,61,167,59,"gold"],[130,65,167,63],[130,77,167,75,"prev"],[130,81,167,79],[130,82,167,80,"gold"],[130,86,167,84],[130,89,167,87,"goldReward"],[130,99,167,97],[130,101,167,99],[130,102,167,100],[131,10,168,8],[131,17,168,15],[132,12,169,10,"experience"],[132,22,169,20],[132,24,169,22,"prev"],[132,28,169,26],[132,29,169,27,"experience"],[132,39,169,37],[132,42,169,40,"xpReward"],[132,50,169,48],[133,12,170,10,"gold"],[133,16,170,14],[133,18,170,16,"prev"],[133,22,170,20],[133,23,170,21,"gold"],[133,27,170,25],[133,30,170,28,"goldReward"],[134,10,171,8],[134,11,171,9],[135,8,172,6],[135,9,172,7],[135,10,172,8],[137,8,174,6],[138,8,175,6],[138,12,175,12,"zoneEnemy"],[138,21,175,21],[138,24,175,24],[139,10,176,8,"id"],[139,12,176,10],[139,14,176,12,"enemy"],[139,19,176,17],[139,20,176,18,"id"],[139,22,176,20],[140,10,177,8,"typeId"],[140,16,177,14],[140,18,177,16,"enemy"],[140,23,177,21],[140,24,177,22,"zoneTypeId"],[140,34,177,32],[140,38,177,36],[140,48,177,46],[141,10,177,48],[142,10,178,8,"name"],[142,14,178,12],[142,16,178,14,"enemy"],[142,21,178,19],[142,22,178,20,"name"],[142,26,178,24],[143,10,179,8,"icon"],[143,14,179,12],[143,16,179,14],[143,20,179,18],[144,10,179,20],[145,10,180,8,"hp"],[145,12,180,10],[145,14,180,12],[145,15,180,13],[146,10,180,15],[147,10,181,8,"maxHP"],[147,15,181,13],[147,17,181,15,"enemy"],[147,22,181,20],[147,23,181,21,"maxHealth"],[147,32,181,30],[148,10,182,8,"attack"],[148,16,182,14],[148,18,182,16,"enemy"],[148,23,182,21],[148,24,182,22,"stats"],[148,29,182,27],[148,30,182,28,"attack"],[148,36,182,34],[149,10,183,8,"xp"],[149,12,183,10],[149,14,183,12,"enemy"],[149,19,183,17],[149,20,183,18,"zoneXP"],[149,26,183,24],[149,30,183,28],[149,32,183,30],[150,10,183,32],[151,10,184,8,"position"],[151,18,184,16],[151,20,184,18,"enemy"],[151,25,184,23],[151,26,184,24,"position"],[152,8,185,6],[152,9,185,7],[153,8,187,6,"console"],[153,15,187,13],[153,16,187,14,"log"],[153,19,187,17],[153,20,187,18],[153,40,187,38,"zoneEnemy"],[153,49,187,47],[153,50,187,48,"name"],[153,54,187,52],[153,59,187,57,"zoneEnemy"],[153,68,187,66],[153,69,187,67,"typeId"],[153,75,187,73],[153,113,187,111],[153,114,187,112],[154,8,188,6,"recordEnemyKill"],[154,23,188,21],[154,24,188,22,"zoneEnemy"],[154,33,188,31],[154,34,188,32],[155,6,189,4],[155,7,189,5],[155,9,189,7],[155,10,189,8],[155,11,189,9],[155,12,189,10],[155,13,189,11],[156,4,190,2],[156,5,190,3],[156,7,190,5],[156,8,190,6,"game"],[156,12,190,10],[156,13,190,11,"updateNinja"],[156,24,190,22],[156,26,190,24,"recordEnemyKill"],[156,41,190,39],[156,42,190,40],[156,43,190,41],[158,4,192,2],[159,4,193,2],[159,8,193,8,"handleCombatTick"],[159,24,193,24],[159,27,193,27,"React"],[159,32,193,32],[159,33,193,32,"default"],[159,40,193,32],[159,41,193,33,"useCallback"],[159,52,193,44],[159,53,193,45],[159,59,193,51],[160,6,193,51],[160,10,193,51,"_s2"],[160,13,193,51],[160,16,193,51,"$RefreshSig$"],[160,28,193,51],[161,6,194,4,"console"],[161,13,194,11],[161,14,194,12,"log"],[161,17,194,15],[161,18,194,16],[161,87,194,85],[161,88,194,86],[162,6,196,4],[162,10,196,8,"enemiesToKill"],[162,23,196,36],[162,26,196,39],[162,28,196,41],[162,29,196,42],[162,30,196,43],[164,6,198,4,"_s2"],[164,9,198,4],[164,10,198,4,"setCombatState"],[164,24,198,18],[164,25,198,18,"_s2"],[164,28,198,18],[164,29,198,19,"prev"],[164,33,198,23],[164,37,198,27],[165,8,198,27,"_s2"],[165,11,198,27],[166,8,199,6],[166,12,199,12,"newTick"],[166,19,199,19],[166,22,199,22,"combatEngine"],[166,41,199,34],[166,42,199,34,"combatEngine"],[166,54,199,34],[166,55,199,35,"getCurrentTick"],[166,69,199,49],[166,70,199,50],[166,71,199,51],[167,8,200,6],[167,12,200,12,"newState"],[167,20,200,20],[167,23,200,23],[168,10,200,25],[168,13,200,28,"prev"],[168,17,200,32],[169,10,200,34,"currentTick"],[169,21,200,45],[169,23,200,47,"newTick"],[170,8,200,55],[170,9,200,56],[171,8,202,6],[171,12,202,10],[171,13,202,11,"newState"],[171,21,202,19],[171,22,202,20,"isInCombat"],[171,32,202,30],[171,34,202,32],[171,41,202,39,"newState"],[171,49,202,47],[173,8,204,6],[174,8,205,6,"newState"],[174,16,205,14],[174,17,205,15,"abilityManager"],[174,31,205,29],[174,32,205,30,"updateCooldowns"],[174,47,205,45],[174,48,205,46,"newTick"],[174,55,205,53],[174,56,205,54],[176,8,207,6],[177,8,208,6],[177,12,208,12,"effectResults"],[177,25,208,25],[177,28,208,28,"newState"],[177,36,208,36],[177,37,208,37,"statusEffects"],[177,50,208,50],[177,51,208,51,"processTick"],[177,62,208,62],[177,63,208,63,"newTick"],[177,70,208,70],[177,71,208,71],[179,8,210,6],[180,8,211,6,"effectResults"],[180,21,211,19],[180,22,211,20,"forEach"],[180,29,211,27],[180,30,211,28],[180,31,211,29,"results"],[180,38,211,36],[180,40,211,38,"entityId"],[180,48,211,46],[180,53,211,51],[181,10,212,8],[181,14,212,14,"enemyIndex"],[181,24,212,24],[181,27,212,27,"newState"],[181,35,212,35],[181,36,212,36,"enemies"],[181,43,212,43],[181,44,212,44,"findIndex"],[181,53,212,53],[181,54,212,54,"e"],[181,55,212,55],[181,59,212,59,"e"],[181,60,212,60],[181,61,212,61,"id"],[181,63,212,63],[181,68,212,68,"entityId"],[181,76,212,76],[181,77,212,77],[182,10,213,8],[182,14,213,12,"enemyIndex"],[182,24,213,22],[182,28,213,26],[182,29,213,27],[182,31,213,29],[183,12,214,10,"results"],[183,19,214,17],[183,20,214,18,"forEach"],[183,27,214,25],[183,28,214,26,"result"],[183,34,214,32],[183,38,214,36],[184,14,215,12,"newState"],[184,22,215,20],[184,23,215,21,"enemies"],[184,30,215,28],[184,31,215,29,"enemyIndex"],[184,41,215,39],[184,42,215,40],[184,43,215,41,"health"],[184,49,215,47],[184,53,215,51,"result"],[184,59,215,57],[184,60,215,58,"damage"],[184,66,215,64],[185,14,216,12,"newState"],[185,22,216,20],[185,23,216,21,"enemies"],[185,30,216,28],[185,31,216,29,"enemyIndex"],[185,41,216,39],[185,42,216,40],[185,43,216,41,"lastDamaged"],[185,54,216,52],[185,57,216,55,"newTick"],[185,64,216,62],[186,12,217,10],[186,13,217,11],[186,14,217,12],[187,10,218,8],[188,8,219,6],[188,9,219,7],[188,10,219,8],[190,8,221,6],[191,8,222,6,"newState"],[191,16,222,14],[191,17,222,15,"enemies"],[191,24,222,22],[191,25,222,23,"forEach"],[191,32,222,30],[191,33,222,31,"enemy"],[191,38,222,36],[191,42,222,40],[192,10,223,8],[192,14,223,12],[192,15,223,13,"enemy"],[192,20,223,18],[192,21,223,19,"isBoss"],[192,27,223,25],[192,29,223,27],[193,12,223,29],[194,12,224,10],[195,12,225,10],[195,16,225,16,"MOVEMENT_SPEED"],[195,30,225,30],[195,33,225,33],[195,37,225,37],[195,38,225,38],[195,39,225,39],[196,12,226,10],[196,16,226,16,"SCREEN_WIDTH"],[196,28,226,28],[196,31,226,31],[196,34,226,34],[197,12,227,10],[197,16,227,16,"GAME_AREA_HEIGHT"],[197,32,227,32],[197,35,227,35],[197,38,227,38],[197,39,227,39],[197,40,227,40],[198,12,228,10],[198,16,228,16,"ENEMY_SIZE"],[198,26,228,26],[198,29,228,29],[198,31,228,31],[200,12,230,10],[201,12,231,10],[201,16,231,16,"playerX"],[201,23,231,23],[201,26,231,26,"currentNinjaPosition"],[201,46,231,46],[201,47,231,47,"x"],[201,48,231,48],[202,12,232,10],[202,16,232,16,"playerY"],[202,23,232,23],[202,26,232,26,"currentNinjaPosition"],[202,46,232,46],[202,47,232,47,"y"],[202,48,232,48],[204,12,234,10],[205,12,235,10],[205,16,235,16,"deltaX"],[205,22,235,22],[205,25,235,25,"playerX"],[205,32,235,32],[205,35,235,35,"enemy"],[205,40,235,40],[205,41,235,41,"position"],[205,49,235,49],[205,50,235,50,"x"],[205,51,235,51],[206,12,236,10],[206,16,236,16,"deltaY"],[206,22,236,22],[206,25,236,25,"playerY"],[206,32,236,32],[206,35,236,35,"enemy"],[206,40,236,40],[206,41,236,41,"position"],[206,49,236,49],[206,50,236,50,"y"],[206,51,236,51],[207,12,237,10],[207,16,237,16,"distance"],[207,24,237,24],[207,27,237,27,"Math"],[207,31,237,31],[207,32,237,32,"sqrt"],[207,36,237,36],[207,37,237,37,"deltaX"],[207,43,237,43],[207,46,237,46,"deltaX"],[207,52,237,52],[207,55,237,55,"deltaY"],[207,61,237,61],[207,64,237,64,"deltaY"],[207,70,237,70],[207,71,237,71],[209,12,239,10],[210,12,240,10],[210,16,240,14,"distance"],[210,24,240,22],[210,27,240,25],[210,29,240,27],[210,31,240,29],[211,14,241,12],[212,14,242,12],[212,18,242,18,"normalizedX"],[212,29,242,29],[212,32,242,32,"deltaX"],[212,38,242,38],[212,41,242,41,"distance"],[212,49,242,49],[213,14,243,12],[213,18,243,18,"normalizedY"],[213,29,243,29],[213,32,243,32,"deltaY"],[213,38,243,38],[213,41,243,41,"distance"],[213,49,243,49],[215,14,245,12],[216,14,246,12],[216,18,246,18,"randomFactor"],[216,30,246,30],[216,33,246,33],[216,36,246,36],[216,37,246,37],[216,38,246,38],[217,14,247,12],[217,18,247,18,"finalX"],[217,24,247,24],[217,27,247,27,"normalizedX"],[217,38,247,38],[217,41,247,41],[217,42,247,42,"Math"],[217,46,247,46],[217,47,247,47,"random"],[217,53,247,53],[217,54,247,54],[217,55,247,55],[217,58,247,58],[217,61,247,61],[217,65,247,65,"randomFactor"],[217,77,247,77],[218,14,248,12],[218,18,248,18,"finalY"],[218,24,248,24],[218,27,248,27,"normalizedY"],[218,38,248,38],[218,41,248,41],[218,42,248,42,"Math"],[218,46,248,46],[218,47,248,47,"random"],[218,53,248,53],[218,54,248,54],[218,55,248,55],[218,58,248,58],[218,61,248,61],[218,65,248,65,"randomFactor"],[218,77,248,77],[220,14,250,12],[221,14,251,12],[221,18,251,16,"newX"],[221,22,251,20],[221,25,251,23,"enemy"],[221,30,251,28],[221,31,251,29,"position"],[221,39,251,37],[221,40,251,38,"x"],[221,41,251,39],[221,44,251,43,"finalX"],[221,50,251,49],[221,53,251,52,"MOVEMENT_SPEED"],[221,67,251,67],[222,14,252,12],[222,18,252,16,"newY"],[222,22,252,20],[222,25,252,23,"enemy"],[222,30,252,28],[222,31,252,29,"position"],[222,39,252,37],[222,40,252,38,"y"],[222,41,252,39],[222,44,252,43,"finalY"],[222,50,252,49],[222,53,252,52,"MOVEMENT_SPEED"],[222,67,252,67],[224,14,254,12],[225,14,255,12,"newX"],[225,18,255,16],[225,21,255,19,"Math"],[225,25,255,23],[225,26,255,24,"max"],[225,29,255,27],[225,30,255,28],[225,31,255,29],[225,33,255,31,"Math"],[225,37,255,35],[225,38,255,36,"min"],[225,41,255,39],[225,42,255,40,"SCREEN_WIDTH"],[225,54,255,52],[225,57,255,55,"ENEMY_SIZE"],[225,67,255,65],[225,69,255,67,"newX"],[225,73,255,71],[225,74,255,72],[225,75,255,73],[226,14,256,12,"newY"],[226,18,256,16],[226,21,256,19,"Math"],[226,25,256,23],[226,26,256,24,"max"],[226,29,256,27],[226,30,256,28],[226,31,256,29],[226,33,256,31,"Math"],[226,37,256,35],[226,38,256,36,"min"],[226,41,256,39],[226,42,256,40,"GAME_AREA_HEIGHT"],[226,58,256,56],[226,61,256,59,"ENEMY_SIZE"],[226,71,256,69],[226,73,256,71,"newY"],[226,77,256,75],[226,78,256,76],[226,79,256,77],[228,14,258,12],[229,14,259,12,"enemy"],[229,19,259,17],[229,20,259,18,"position"],[229,28,259,26],[229,29,259,27,"x"],[229,30,259,28],[229,33,259,31,"newX"],[229,37,259,35],[230,14,260,12,"enemy"],[230,19,260,17],[230,20,260,18,"position"],[230,28,260,26],[230,29,260,27,"y"],[230,30,260,28],[230,33,260,31,"newY"],[230,37,260,35],[231,12,261,10],[232,12,262,10],[233,10,263,8],[234,8,264,6],[234,9,264,7],[234,10,264,8],[236,8,266,6],[237,8,267,6],[237,12,267,10,"newState"],[237,20,267,18],[237,21,267,19,"shadowClone"],[237,32,267,30],[237,34,267,32],[238,10,268,8],[239,10,269,8,"newState"],[239,18,269,16],[239,19,269,17,"shadowClone"],[239,30,269,28],[239,31,269,29,"remainingTicks"],[239,45,269,43],[239,47,269,45],[241,10,271,8],[242,10,272,8],[242,14,272,14,"cloneOffset"],[242,25,272,25],[242,28,272,28],[242,30,272,30],[242,31,272,31],[242,32,272,32],[243,10,273,8,"newState"],[243,18,273,16],[243,19,273,17,"shadowClone"],[243,30,273,28],[243,31,273,29,"position"],[243,39,273,37],[243,40,273,38,"x"],[243,41,273,39],[243,44,273,42,"currentNinjaPosition"],[243,64,273,62],[243,65,273,63,"x"],[243,66,273,64],[243,69,273,67,"cloneOffset"],[243,80,273,78],[244,10,274,8,"newState"],[244,18,274,16],[244,19,274,17,"shadowClone"],[244,30,274,28],[244,31,274,29,"position"],[244,39,274,37],[244,40,274,38,"y"],[244,41,274,39],[244,44,274,42,"currentNinjaPosition"],[244,64,274,62],[244,65,274,63,"y"],[244,66,274,64],[244,69,274,67],[244,71,274,69],[246,10,276,8],[247,10,277,8],[247,14,277,12,"newState"],[247,22,277,20],[247,23,277,21,"shadowClone"],[247,34,277,32],[247,35,277,33,"remainingTicks"],[247,49,277,47],[247,53,277,51],[247,54,277,52],[247,56,277,54],[248,12,278,10,"console"],[248,19,278,17],[248,20,278,18,"log"],[248,23,278,21],[248,24,278,22],[248,75,278,73],[248,76,278,74],[249,12,279,10,"newState"],[249,20,279,18],[249,21,279,19,"shadowClone"],[249,32,279,30],[249,35,279,33,"undefined"],[249,44,279,42],[250,10,280,8],[250,11,280,9],[250,17,280,15],[251,12,281,10],[252,12,282,10],[253,12,283,10],[253,16,283,16,"CLONE_ATTACK_INTERVAL"],[253,37,283,37],[253,40,283,40],[253,42,283,42],[254,12,284,10],[254,16,284,14,"newState"],[254,24,284,22],[254,25,284,23,"currentTick"],[254,36,284,34],[254,39,284,37,"CLONE_ATTACK_INTERVAL"],[254,60,284,58],[254,65,284,63],[254,66,284,64],[254,70,284,68,"newState"],[254,78,284,76],[254,79,284,77,"enemies"],[254,86,284,84],[254,87,284,85,"length"],[254,93,284,91],[254,96,284,94],[254,97,284,95],[254,99,284,97],[255,14,285,12,"console"],[255,21,285,19],[255,22,285,20,"log"],[255,25,285,23],[255,26,285,24],[255,83,285,81],[255,84,285,82],[257,14,287,12],[258,14,288,12],[258,18,288,18,"target"],[258,24,288,24],[258,27,288,27,"findClosestEnemyInternal"],[258,51,288,51],[258,52,288,52,"newState"],[258,60,288,60],[258,61,288,61,"enemies"],[258,68,288,68],[258,69,288,69],[259,14,289,12],[259,18,289,16,"target"],[259,24,289,22],[259,26,289,24],[260,16,290,14],[261,16,291,14],[261,20,291,20,"cloneDamage"],[261,31,291,31],[261,34,291,34,"Math"],[261,38,291,38],[261,39,291,39,"floor"],[261,44,291,44],[261,45,291,45,"newState"],[261,53,291,53],[261,54,291,54,"playerStats"],[261,65,291,65],[261,66,291,66,"attack"],[261,72,291,72],[261,75,291,75],[261,78,291,78],[261,79,291,79],[263,16,293,14],[264,16,294,14,"createProjectile"],[264,32,294,30],[264,33,294,31,"target"],[264,39,294,37],[264,41,294,39,"cloneDamage"],[264,52,294,50],[264,54,294,52,"newState"],[264,62,294,60],[264,63,294,61,"shadowClone"],[264,74,294,72],[264,75,294,73,"position"],[264,83,294,81],[264,85,294,83],[265,18,295,16,"id"],[265,20,295,18],[265,22,295,20],[265,43,295,41],[266,18,296,16,"name"],[266,22,296,20],[266,24,296,22],[266,45,296,43],[267,18,297,16,"icon"],[267,22,297,20],[267,24,297,22],[268,16,298,14],[268,17,298,15],[268,18,298,16],[269,14,299,12],[270,12,300,10],[271,10,301,8],[272,8,302,6],[274,8,304,6],[275,8,305,6],[275,12,305,10],[275,13,305,11,"isManualControlActive"],[275,34,305,32],[275,36,305,34],[276,10,306,8],[276,15,306,13],[276,19,306,17,"i"],[276,20,306,18],[276,23,306,21],[276,24,306,22],[276,26,306,24,"i"],[276,27,306,25],[276,30,306,28],[276,31,306,29],[276,33,306,31,"i"],[276,34,306,32],[276,36,306,34],[276,38,306,36],[277,12,307,10],[277,16,307,14,"newState"],[277,24,307,22],[277,25,307,23,"abilityManager"],[277,39,307,37],[277,40,307,38,"isAbilityReady"],[277,54,307,52],[277,55,307,53,"i"],[277,56,307,54],[277,57,307,55],[277,61,307,59,"newState"],[277,69,307,67],[277,70,307,68,"enemies"],[277,77,307,75],[277,78,307,76,"length"],[277,84,307,82],[277,87,307,85],[277,88,307,86],[277,90,307,88],[278,14,308,12],[278,18,308,16,"newState"],[278,26,308,24],[278,27,308,25,"abilityManager"],[278,41,308,39],[278,42,308,40,"useAbility"],[278,52,308,50],[278,53,308,51,"i"],[278,54,308,52],[278,56,308,54,"newTick"],[278,63,308,61],[278,64,308,62],[278,66,308,64],[279,16,309,14,"castAbility"],[279,27,309,25],[279,28,309,26,"newState"],[279,36,309,34],[279,38,309,36,"i"],[279,39,309,37],[279,40,309,38],[280,14,310,12],[281,12,311,10],[282,10,312,8],[283,8,313,6],[285,8,315,6],[286,8,316,6],[286,12,316,12,"deadEnemies"],[286,23,316,23],[286,26,316,26,"newState"],[286,34,316,34],[286,35,316,35,"enemies"],[286,42,316,42],[286,43,316,43,"filter"],[286,49,316,49],[286,50,316,50,"enemy"],[286,55,316,55],[286,59,316,59,"enemy"],[286,64,316,64],[286,65,316,65,"health"],[286,71,316,71],[286,75,316,75],[286,76,316,76],[286,77,316,77],[287,8,317,6,"enemiesToKill"],[287,21,317,19],[287,24,317,22],[287,25,317,23],[287,28,317,26,"deadEnemies"],[287,39,317,37],[287,40,317,38],[287,41,317,39],[287,42,317,40],[289,8,319,6],[290,8,320,6],[290,12,320,10,"deadEnemies"],[290,23,320,21],[290,24,320,22,"length"],[290,30,320,28],[290,33,320,31],[290,34,320,32],[290,36,320,34],[291,10,321,8,"console"],[291,17,321,15],[291,18,321,16,"log"],[291,21,321,19],[291,22,321,20],[291,49,321,47,"deadEnemies"],[291,60,321,58],[291,61,321,59,"length"],[291,67,321,65],[291,83,321,81],[291,85,321,83,"deadEnemies"],[291,96,321,94],[291,97,321,95,"map"],[291,100,321,98],[291,101,321,99,"e"],[291,102,321,100],[291,106,321,104],[291,109,321,107,"e"],[291,110,321,108],[291,111,321,109,"id"],[291,113,321,111],[291,117,321,115,"e"],[291,118,321,116],[291,119,321,117,"health"],[291,125,321,123],[291,130,321,128],[291,131,321,129],[291,132,321,130],[292,8,322,6],[294,8,324,6],[295,8,325,6],[295,12,325,12,"lowHealthEnemies"],[295,28,325,28],[295,31,325,31,"newState"],[295,39,325,39],[295,40,325,40,"enemies"],[295,47,325,47],[295,48,325,48,"filter"],[295,54,325,54],[295,55,325,55,"enemy"],[295,60,325,60],[295,64,325,64,"enemy"],[295,69,325,69],[295,70,325,70,"health"],[295,76,325,76],[295,80,325,80],[295,82,325,82],[295,86,325,86,"enemy"],[295,91,325,91],[295,92,325,92,"health"],[295,98,325,98],[295,101,325,101],[295,102,325,102],[295,103,325,103],[296,8,326,6],[296,12,326,10,"lowHealthEnemies"],[296,28,326,26],[296,29,326,27,"length"],[296,35,326,33],[296,38,326,36],[296,39,326,37],[296,41,326,39],[297,10,327,8,"console"],[297,17,327,15],[297,18,327,16,"log"],[297,21,327,19],[297,22,327,20],[297,61,327,59],[297,63,327,61,"lowHealthEnemies"],[297,79,327,77],[297,80,327,78,"map"],[297,83,327,81],[297,84,327,82,"e"],[297,85,327,83],[297,89,327,87],[297,92,327,90,"e"],[297,93,327,91],[297,94,327,92,"id"],[297,96,327,94],[297,100,327,98,"e"],[297,101,327,99],[297,102,327,100,"health"],[297,108,327,106],[297,112,327,110,"e"],[297,113,327,111],[297,114,327,112,"maxHealth"],[297,123,327,121],[297,128,327,126],[297,129,327,127],[297,130,327,128],[298,8,328,6],[300,8,330,6],[301,8,331,6],[301,12,331,12,"beforeCount"],[301,23,331,23],[301,26,331,26,"newState"],[301,34,331,34],[301,35,331,35,"enemies"],[301,42,331,42],[301,43,331,43,"length"],[301,49,331,49],[302,8,332,6,"newState"],[302,16,332,14],[302,17,332,15,"enemies"],[302,24,332,22],[302,27,332,25,"newState"],[302,35,332,33],[302,36,332,34,"enemies"],[302,43,332,41],[302,44,332,42,"filter"],[302,50,332,48],[302,51,332,49,"enemy"],[302,56,332,54],[302,60,332,58,"enemy"],[302,65,332,63],[302,66,332,64,"health"],[302,72,332,70],[302,75,332,73],[302,76,332,74],[302,77,332,75],[303,8,333,6],[303,12,333,12,"afterCount"],[303,22,333,22],[303,25,333,25,"newState"],[303,33,333,33],[303,34,333,34,"enemies"],[303,41,333,41],[303,42,333,42,"length"],[303,48,333,48],[304,8,335,6],[304,12,335,10,"beforeCount"],[304,23,335,21],[304,28,335,26,"afterCount"],[304,38,335,36],[304,40,335,38],[305,10,336,8,"console"],[305,17,336,15],[305,18,336,16,"log"],[305,21,336,19],[305,22,336,20],[305,52,336,50,"beforeCount"],[305,63,336,61],[305,66,336,64,"afterCount"],[305,76,336,74],[305,102,336,100],[305,103,336,101],[306,8,337,6],[308,8,339,6],[309,8,340,6],[310,8,341,6],[310,12,341,12,"MAX_ENEMIES"],[310,23,341,23],[310,26,341,26],[310,28,341,28],[310,29,341,29],[310,30,341,30],[311,8,342,6],[311,12,342,12,"MIN_SPAWN_DELAY"],[311,27,342,27],[311,30,342,30],[311,33,342,33],[311,34,342,34],[311,35,342,35],[312,8,343,6],[312,12,343,12,"now"],[312,15,343,15],[312,18,343,18,"Date"],[312,22,343,22],[312,23,343,23,"now"],[312,26,343,26],[312,27,343,27],[312,28,343,28],[313,8,344,6],[313,12,344,12,"hasBoss"],[313,19,344,19],[313,22,344,22,"newState"],[313,30,344,30],[313,31,344,31,"enemies"],[313,38,344,38],[313,39,344,39,"some"],[313,43,344,43],[313,44,344,44,"enemy"],[313,49,344,49],[313,53,344,53,"enemy"],[313,58,344,58],[313,59,344,59,"isBoss"],[313,65,344,65],[313,66,344,66],[315,8,346,6],[316,8,347,6],[316,12,347,10],[316,13,347,11,"newState"],[316,21,347,19],[316,22,347,20,"lastSpawnTime"],[316,35,347,33],[316,37,347,35],[317,10,348,8,"newState"],[317,18,348,16],[317,19,348,17,"lastSpawnTime"],[317,32,348,30],[317,35,348,33,"now"],[317,38,348,36],[318,8,349,6],[319,8,351,6,"console"],[319,15,351,13],[319,16,351,14,"log"],[319,19,351,17],[319,20,351,18],[319,53,351,51,"newState"],[319,61,351,59],[319,62,351,60,"enemies"],[319,69,351,67],[319,70,351,68,"length"],[319,76,351,74],[319,85,351,83,"MAX_ENEMIES"],[319,96,351,94],[319,109,351,107,"hasBoss"],[319,116,351,114],[319,118,351,116],[319,119,351,117],[321,8,353,6],[322,8,354,6],[322,12,354,10],[322,13,354,11,"hasBoss"],[322,20,354,18],[322,24,354,22,"newState"],[322,32,354,30],[322,33,354,31,"enemies"],[322,40,354,38],[322,41,354,39,"length"],[322,47,354,45],[322,50,354,48,"MAX_ENEMIES"],[322,61,354,59],[322,65,354,64,"now"],[322,68,354,67],[322,71,354,70,"newState"],[322,79,354,78],[322,80,354,79,"lastSpawnTime"],[322,93,354,92],[322,97,354,97,"MIN_SPAWN_DELAY"],[322,112,354,112],[322,114,354,114],[323,10,355,8,"console"],[323,17,355,15],[323,18,355,16,"log"],[323,21,355,19],[323,22,355,20],[323,43,355,41,"newState"],[323,51,355,49],[323,52,355,50,"enemies"],[323,59,355,57],[323,60,355,58,"length"],[323,66,355,64],[323,69,355,67],[323,70,355,68],[323,74,355,72,"MAX_ENEMIES"],[323,85,355,83],[323,87,355,85],[323,88,355,86],[324,10,356,8,"spawnTestEnemy"],[324,24,356,22],[324,25,356,23,"newState"],[324,33,356,31],[324,34,356,32],[325,10,357,8,"newState"],[325,18,357,16],[325,19,357,17,"lastSpawnTime"],[325,32,357,30],[325,35,357,33,"now"],[325,38,357,36],[326,8,358,6],[327,8,360,6],[327,15,360,13,"newState"],[327,23,360,21],[328,6,361,4],[328,7,361,5],[328,47,361,6],[330,6,363,4],[331,6,364,4,"console"],[331,13,364,11],[331,14,364,12,"log"],[331,17,364,15],[331,18,364,16],[331,50,364,48,"enemiesToKill"],[331,63,364,61],[331,64,364,62,"length"],[331,70,364,68],[331,101,364,99],[331,102,364,100],[332,6,366,4,"enemiesToKill"],[332,19,366,17],[332,20,366,18,"forEach"],[332,27,366,25],[332,28,366,26],[332,29,366,27,"enemy"],[332,34,366,32],[332,36,366,34,"index"],[332,41,366,39],[332,46,366,44],[333,8,367,6,"console"],[333,15,367,13],[333,16,367,14,"log"],[333,19,367,17],[333,20,367,18],[333,57,367,55,"index"],[333,62,367,60],[333,65,367,63],[333,66,367,64],[333,70,367,68,"enemiesToKill"],[333,83,367,81],[333,84,367,82,"length"],[333,90,367,88],[333,104,367,102,"enemy"],[333,109,367,107],[333,110,367,108,"id"],[333,112,367,110],[333,114,367,112],[333,115,367,113],[334,8,368,6,"handleEnemyKill"],[334,23,368,21],[334,24,368,22,"enemy"],[334,29,368,27],[334,30,368,28],[335,6,369,4],[335,7,369,5],[335,8,369,6],[336,4,370,2],[336,5,370,3],[336,7,370,5],[336,8,370,6,"handleEnemyKill"],[336,23,370,21],[336,24,370,22],[336,25,370,23],[336,26,370,24],[336,27,370,25],[338,4,372,2],[339,4,373,2],[339,8,373,8,"findClosestEnemyInternal"],[339,32,373,32],[339,35,373,36,"enemies"],[339,42,373,58],[339,46,373,83],[340,6,374,4],[340,10,374,8,"enemies"],[340,17,374,15],[340,18,374,16,"length"],[340,24,374,22],[340,29,374,27],[340,30,374,28],[340,32,374,30],[340,39,374,37],[340,43,374,41],[342,6,376,4],[343,6,377,4],[343,10,377,10,"SCREEN_WIDTH"],[343,22,377,22],[343,25,377,25],[343,28,377,28],[344,6,378,4],[344,10,378,10,"GAME_AREA_HEIGHT"],[344,26,378,26],[344,29,378,29],[344,32,378,32],[344,35,378,35],[344,38,378,38],[344,39,378,39],[344,40,378,40],[345,6,379,4],[345,10,379,10,"ninjaX"],[345,16,379,16],[345,19,379,19,"SCREEN_WIDTH"],[345,31,379,31],[345,34,379,34],[345,35,379,35],[346,6,380,4],[346,10,380,10,"ninjaY"],[346,16,380,16],[346,19,380,19,"GAME_AREA_HEIGHT"],[346,35,380,35],[346,38,380,38],[346,39,380,39],[347,6,382,4],[347,10,382,8,"closestEnemy"],[347,22,382,20],[347,25,382,23,"enemies"],[347,32,382,30],[347,33,382,31],[347,34,382,32],[347,35,382,33],[348,6,383,4],[348,10,383,8,"closestDistance"],[348,25,383,23],[348,28,383,26,"Infinity"],[348,36,383,34],[349,6,385,4,"enemies"],[349,13,385,11],[349,14,385,12,"forEach"],[349,21,385,19],[349,22,385,20,"enemy"],[349,27,385,25],[349,31,385,29],[350,8,386,6],[350,12,386,12,"distance"],[350,20,386,20],[350,23,386,23,"Math"],[350,27,386,27],[350,28,386,28,"sqrt"],[350,32,386,32],[350,33,387,8,"Math"],[350,37,387,12],[350,38,387,13,"pow"],[350,41,387,16],[350,42,387,17,"enemy"],[350,47,387,22],[350,48,387,23,"position"],[350,56,387,31],[350,57,387,32,"x"],[350,58,387,33],[350,61,387,36,"ninjaX"],[350,67,387,42],[350,69,387,44],[350,70,387,45],[350,71,387,46],[350,74,388,8,"Math"],[350,78,388,12],[350,79,388,13,"pow"],[350,82,388,16],[350,83,388,17,"enemy"],[350,88,388,22],[350,89,388,23,"position"],[350,97,388,31],[350,98,388,32,"y"],[350,99,388,33],[350,102,388,36,"ninjaY"],[350,108,388,42],[350,110,388,44],[350,111,388,45],[350,112,389,6],[350,113,389,7],[351,8,391,6],[351,12,391,10,"distance"],[351,20,391,18],[351,23,391,21,"closestDistance"],[351,38,391,36],[351,40,391,38],[352,10,392,8,"closestDistance"],[352,25,392,23],[352,28,392,26,"distance"],[352,36,392,34],[353,10,393,8,"closestEnemy"],[353,22,393,20],[353,25,393,23,"enemy"],[353,30,393,28],[354,8,394,6],[355,6,395,4],[355,7,395,5],[355,8,395,6],[356,6,397,4,"console"],[356,13,397,11],[356,14,397,12,"log"],[356,17,397,15],[356,18,397,16],[356,60,397,58,"closestDistance"],[356,75,397,73],[356,76,397,74,"toFixed"],[356,83,397,81],[356,84,397,82],[356,85,397,83],[356,86,397,84],[356,88,397,86],[356,89,397,87],[357,6,398,4],[357,13,398,11,"closestEnemy"],[357,25,398,23],[358,4,399,2],[358,5,399,3],[360,4,401,2],[361,4,402,2],[361,8,402,8,"findClosestEnemy"],[361,24,402,24],[361,27,402,27,"findClosestEnemy"],[361,28,402,27],[361,33,402,53],[362,6,403,4],[362,13,403,11,"findClosestEnemyInternal"],[362,37,403,35],[362,38,403,36,"combatState"],[362,49,403,47],[362,50,403,48,"enemies"],[362,57,403,55],[362,58,403,56],[363,4,404,2],[363,5,404,3],[365,4,406,2],[366,4,407,2],[366,8,407,2,"_useState7"],[366,18,407,2],[366,21,407,58],[366,25,407,58,"useState"],[366,31,407,66],[366,32,407,66,"useState"],[366,40,407,66],[366,42,407,91],[367,8,407,93,"x"],[367,9,407,94],[367,11,407,96],[367,12,407,97],[368,8,407,99,"y"],[368,9,407,100],[368,11,407,102],[369,6,407,104],[369,7,407,105],[369,8,407,106],[370,6,407,106,"_useState8"],[370,16,407,106],[370,23,407,106,"_slicedToArray"],[370,37,407,106],[370,38,407,106,"default"],[370,45,407,106],[370,47,407,106,"_useState7"],[370,57,407,106],[371,6,407,9,"currentNinjaPosition"],[371,26,407,29],[371,29,407,29,"_useState8"],[371,39,407,29],[372,6,407,31,"setCurrentNinjaPosition"],[372,29,407,54],[372,32,407,54,"_useState8"],[372,42,407,54],[373,4,408,2],[373,8,408,2,"_useState9"],[373,18,408,2],[373,21,408,60],[373,25,408,60,"useState"],[373,31,408,68],[373,32,408,68,"useState"],[373,40,408,68],[373,42,408,69],[373,47,408,74],[373,48,408,75],[374,6,408,75,"_useState0"],[374,16,408,75],[374,23,408,75,"_slicedToArray"],[374,37,408,75],[374,38,408,75,"default"],[374,45,408,75],[374,47,408,75,"_useState9"],[374,57,408,75],[375,6,408,9,"isManualControlActive"],[375,27,408,30],[375,30,408,30,"_useState0"],[375,40,408,30],[376,6,408,32,"setIsManualControlActive"],[376,30,408,56],[376,33,408,56,"_useState0"],[376,43,408,56],[378,4,410,2],[379,4,411,2],[379,8,411,8,"updateNinjaPosition"],[379,27,411,27],[379,30,411,30],[379,34,411,30,"useCallback"],[379,40,411,41],[379,41,411,41,"useCallback"],[379,52,411,41],[379,54,411,43,"newPosition"],[379,65,411,78],[379,69,411,83],[380,6,412,4,"setCurrentNinjaPosition"],[380,29,412,27],[380,30,412,28,"newPosition"],[380,41,412,39],[380,42,412,40],[381,4,413,2],[381,5,413,3],[381,7,413,5],[381,9,413,7],[381,10,413,8],[383,4,415,2],[384,4,416,2],[384,8,416,8,"setManualControlActive"],[384,30,416,30],[384,33,416,33],[384,37,416,33,"useCallback"],[384,43,416,44],[384,44,416,44,"useCallback"],[384,55,416,44],[384,57,416,46,"active"],[384,63,416,61],[384,67,416,66],[385,6,417,4,"setIsManualControlActive"],[385,30,417,28],[385,31,417,29,"active"],[385,37,417,35],[385,38,417,36],[386,6,418,4,"console"],[386,13,418,11],[386,14,418,12,"log"],[386,17,418,15],[386,18,418,16],[386,39,418,37,"active"],[386,45,418,43],[386,48,418,46],[386,59,418,57],[386,62,418,60],[386,75,418,73],[386,88,418,86,"active"],[386,94,418,92],[386,97,418,95],[386,105,418,103],[386,108,418,106],[386,117,418,115],[386,119,418,117],[386,120,418,118],[387,4,419,2],[387,5,419,3],[387,7,419,5],[387,9,419,7],[387,10,419,8],[389,4,421,2],[390,4,422,2],[390,8,422,8,"handleProjectileHit"],[390,27,422,27],[390,30,422,31,"projectile"],[390,40,422,59],[390,44,422,64],[391,6,423,4,"console"],[391,13,423,11],[391,14,423,12,"log"],[391,17,423,15],[391,18,423,16],[391,35,423,33,"projectile"],[391,45,423,43],[391,46,423,44,"id"],[391,48,423,46],[391,62,423,60,"projectile"],[391,72,423,70],[391,73,423,71,"targetEnemyId"],[391,86,423,84],[391,94,423,92,"projectile"],[391,104,423,102],[391,105,423,103,"damage"],[391,111,423,109],[391,120,423,118],[391,121,423,119],[392,6,425,4,"setCombatState"],[392,20,425,18],[392,21,425,19,"prev"],[392,25,425,23],[392,29,425,27],[393,8,426,6],[393,12,426,12,"newState"],[393,20,426,20],[393,23,426,23],[394,10,426,25],[394,13,426,28,"prev"],[395,8,426,33],[395,9,426,34],[397,8,428,6],[398,8,429,6],[398,12,429,12,"enemyIndex"],[398,22,429,22],[398,25,429,25,"newState"],[398,33,429,33],[398,34,429,34,"enemies"],[398,41,429,41],[398,42,429,42,"findIndex"],[398,51,429,51],[398,52,429,52,"e"],[398,53,429,53],[398,57,429,57,"e"],[398,58,429,58],[398,59,429,59,"id"],[398,61,429,61],[398,66,429,66,"projectile"],[398,76,429,76],[398,77,429,77,"targetEnemyId"],[398,90,429,90],[398,91,429,91],[399,8,430,6],[399,12,430,10,"enemyIndex"],[399,22,430,20],[399,26,430,24],[399,27,430,25],[399,29,430,27],[400,10,431,8,"newState"],[400,18,431,16],[400,19,431,17,"enemies"],[400,26,431,24],[400,29,431,27],[400,30,431,28],[400,33,431,31,"newState"],[400,41,431,39],[400,42,431,40,"enemies"],[400,49,431,47],[400,50,431,48],[401,10,432,8,"newState"],[401,18,432,16],[401,19,432,17,"enemies"],[401,26,432,24],[401,27,432,25,"enemyIndex"],[401,37,432,35],[401,38,432,36],[401,41,432,39],[402,12,433,10],[402,15,433,13,"newState"],[402,23,433,21],[402,24,433,22,"enemies"],[402,31,433,29],[402,32,433,30,"enemyIndex"],[402,42,433,40],[402,43,433,41],[403,12,434,10,"health"],[403,18,434,16],[403,20,434,18,"newState"],[403,28,434,26],[403,29,434,27,"enemies"],[403,36,434,34],[403,37,434,35,"enemyIndex"],[403,47,434,45],[403,48,434,46],[403,49,434,47,"health"],[403,55,434,53],[403,58,434,56,"projectile"],[403,68,434,66],[403,69,434,67,"damage"],[403,75,434,73],[404,12,435,10,"lastDamaged"],[404,23,435,21],[404,25,435,23,"combatEngine"],[404,44,435,35],[404,45,435,35,"combatEngine"],[404,57,435,35],[404,58,435,36,"getCurrentTick"],[404,72,435,50],[404,73,435,51],[405,10,436,8],[405,11,436,9],[406,10,438,8,"console"],[406,17,438,15],[406,18,438,16,"log"],[406,21,438,19],[406,22,438,20],[406,34,438,32,"projectile"],[406,44,438,42],[406,45,438,43,"targetEnemyId"],[406,58,438,56],[406,70,438,68,"newState"],[406,78,438,76],[406,79,438,77,"enemies"],[406,86,438,84],[406,87,438,85,"enemyIndex"],[406,97,438,95],[406,98,438,96],[406,99,438,97,"health"],[406,105,438,103],[406,109,438,107,"newState"],[406,117,438,115],[406,118,438,116,"enemies"],[406,125,438,123],[406,126,438,124,"enemyIndex"],[406,136,438,134],[406,137,438,135],[406,138,438,136,"maxHealth"],[406,147,438,145],[406,149,438,147],[406,150,438,148],[407,8,439,6],[408,8,441,6],[408,15,441,13,"newState"],[408,23,441,21],[409,6,442,4],[409,7,442,5],[409,8,442,6],[411,6,444,4],[412,6,445,4,"setProjectiles"],[412,20,445,18],[412,21,445,19,"prev"],[412,25,445,23],[412,29,445,27,"prev"],[412,33,445,31],[412,34,445,32,"filter"],[412,40,445,38],[412,41,445,39,"p"],[412,42,445,40],[412,46,445,44,"p"],[412,47,445,45],[412,48,445,46,"id"],[412,50,445,48],[412,55,445,53,"projectile"],[412,65,445,63],[412,66,445,64,"id"],[412,68,445,66],[412,69,445,67],[412,70,445,68],[413,4,446,2],[413,5,446,3],[415,4,448,2],[416,4,449,2],[416,8,449,8,"castAbility"],[416,19,449,19],[416,22,449,22,"castAbility"],[416,23,449,23,"state"],[416,28,449,41],[416,30,449,43,"slotIndex"],[416,39,449,60],[416,44,449,65],[417,6,450,4],[417,10,450,10,"deck"],[417,14,450,14],[417,17,450,17,"state"],[417,22,450,22],[417,23,450,23,"abilityManager"],[417,37,450,37],[417,38,450,38,"getDeck"],[417,45,450,45],[417,46,450,46],[417,47,450,47],[418,6,451,4],[418,10,451,10,"ability"],[418,17,451,17],[418,20,451,20,"deck"],[418,24,451,24],[418,25,451,25,"slots"],[418,30,451,30],[418,31,451,31,"slotIndex"],[418,40,451,40],[418,41,451,41],[419,6,452,4],[419,10,452,8],[419,11,452,9,"ability"],[419,18,452,16],[419,20,452,18],[421,6,454,4],[422,6,455,4],[422,10,455,8,"damage"],[422,16,455,14],[422,19,455,17,"ability"],[422,26,455,24],[422,27,455,25,"stats"],[422,32,455,30],[422,33,455,31,"baseDamage"],[422,43,455,41],[424,6,457,4],[425,6,458,4,"deck"],[425,10,458,8],[425,11,458,9,"activeSynergies"],[425,26,458,24],[425,27,458,25,"forEach"],[425,34,458,32],[425,35,458,33,"synergy"],[425,42,458,40],[425,46,458,44],[426,8,459,6],[426,12,459,10,"synergy"],[426,19,459,17],[426,20,459,18,"bonus"],[426,25,459,23],[426,26,459,24,"damageBonus"],[426,37,459,35],[426,41,460,10,"synergy"],[426,48,460,17],[426,49,460,18,"requiredTags"],[426,61,460,30],[426,62,460,31,"some"],[426,66,460,35],[426,67,460,36,"tag"],[426,70,460,39],[426,74,460,43,"ability"],[426,81,460,50],[426,82,460,51,"tags"],[426,86,460,55],[426,87,460,56,"includes"],[426,95,460,64],[426,96,460,65,"tag"],[426,99,460,68],[426,100,460,69],[426,101,460,70],[426,103,460,72],[427,10,461,8,"damage"],[427,16,461,14],[427,20,461,19],[427,21,461,20],[427,24,461,23,"synergy"],[427,31,461,30],[427,32,461,31,"bonus"],[427,37,461,36],[427,38,461,37,"damageBonus"],[427,49,461,48],[427,52,461,51],[427,55,461,55],[428,8,462,6],[429,6,463,4],[429,7,463,5],[429,8,463,6],[431,6,465,4],[432,6,466,4],[432,10,466,10,"isAOE"],[432,15,466,15],[432,18,466,18,"ability"],[432,25,466,25],[432,26,466,26,"effects"],[432,33,466,33],[432,34,466,34,"includes"],[432,42,466,42],[432,43,466,43],[432,48,466,48],[432,49,466,49],[432,53,466,53,"ability"],[432,60,466,60],[432,61,466,61,"stats"],[432,66,466,66],[432,67,466,67,"aoeRadius"],[432,76,466,76],[433,6,468,4],[433,10,468,8,"isAOE"],[433,15,468,13],[433,17,468,15],[434,8,469,6,"console"],[434,15,469,13],[434,16,469,14,"log"],[434,19,469,17],[434,20,469,18],[434,39,469,37,"ability"],[434,46,469,44],[434,47,469,45,"name"],[434,51,469,49],[434,67,469,65,"ability"],[434,74,469,72],[434,75,469,73,"stats"],[434,80,469,78],[434,81,469,79,"aoeRadius"],[434,90,469,88],[434,92,469,90],[434,93,469,91],[436,8,471,6],[437,8,472,6],[437,12,472,12,"ninjaX"],[437,18,472,18],[437,21,472,21,"currentNinjaPosition"],[437,41,472,41],[437,42,472,42,"x"],[437,43,472,43],[437,46,472,46],[437,48,472,48],[437,49,472,49],[437,50,472,50],[438,8,473,6],[438,12,473,12,"ninjaY"],[438,18,473,18],[438,21,473,21,"currentNinjaPosition"],[438,41,473,41],[438,42,473,42,"y"],[438,43,473,43],[438,46,473,46],[438,48,473,48],[439,8,474,6],[439,12,474,12,"aoeRadius"],[439,21,474,21],[439,24,474,24,"ability"],[439,31,474,31],[439,32,474,32,"stats"],[439,37,474,37],[439,38,474,38,"aoeRadius"],[439,47,474,47],[440,8,476,6],[440,12,476,12,"enemiesInRange"],[440,26,476,26],[440,29,476,29,"state"],[440,34,476,34],[440,35,476,35,"enemies"],[440,42,476,42],[440,43,476,43,"filter"],[440,49,476,49],[440,50,476,50,"enemy"],[440,55,476,55],[440,59,476,59],[441,10,477,8],[441,14,477,14,"enemyX"],[441,20,477,20],[441,23,477,23,"enemy"],[441,28,477,28],[441,29,477,29,"position"],[441,37,477,37],[441,38,477,38,"x"],[441,39,477,39],[441,42,477,42],[441,46,477,46],[441,47,477,47],[441,48,477,48],[442,10,478,8],[442,14,478,14,"enemyY"],[442,20,478,20],[442,23,478,23,"enemy"],[442,28,478,28],[442,29,478,29,"position"],[442,37,478,37],[442,38,478,38,"y"],[442,39,478,39],[442,42,478,42],[442,46,478,46],[443,10,479,8],[443,14,479,14,"distance"],[443,22,479,22],[443,25,479,25,"Math"],[443,29,479,29],[443,30,479,30,"sqrt"],[443,34,479,34],[443,35,479,35,"Math"],[443,39,479,39],[443,40,479,40,"pow"],[443,43,479,43],[443,44,479,44,"enemyX"],[443,50,479,50],[443,53,479,53,"ninjaX"],[443,59,479,59],[443,61,479,61],[443,62,479,62],[443,63,479,63],[443,66,479,66,"Math"],[443,70,479,70],[443,71,479,71,"pow"],[443,74,479,74],[443,75,479,75,"enemyY"],[443,81,479,81],[443,84,479,84,"ninjaY"],[443,90,479,90],[443,92,479,92],[443,93,479,93],[443,94,479,94],[443,95,479,95],[444,10,480,8],[444,17,480,15,"distance"],[444,25,480,23],[444,29,480,27,"aoeRadius"],[444,38,480,36],[445,8,481,6],[445,9,481,7],[445,10,481,8],[446,8,483,6,"console"],[446,15,483,13],[446,16,483,14,"log"],[446,19,483,17],[446,20,483,18],[446,45,483,43,"enemiesInRange"],[446,59,483,57],[446,60,483,58,"length"],[446,66,483,64],[446,88,483,86,"aoeRadius"],[446,97,483,95],[446,107,483,105],[446,108,483,106],[448,8,485,6],[449,8,486,6,"enemiesInRange"],[449,22,486,20],[449,23,486,21,"forEach"],[449,30,486,28],[449,31,486,29,"enemy"],[449,36,486,34],[449,40,486,38],[450,10,487,8],[450,14,487,14,"damageResult"],[450,26,487,26],[450,29,487,29,"DamageCalculator"],[450,48,487,45],[450,49,487,45,"DamageCalculator"],[450,65,487,45],[450,66,487,46,"calculateDamage"],[450,81,487,61],[450,82,487,62,"damage"],[450,88,487,68],[450,90,487,70,"state"],[450,95,487,75],[450,96,487,76,"playerStats"],[450,107,487,87],[450,109,487,89,"enemy"],[450,114,487,94],[450,115,487,95,"stats"],[450,120,487,100],[450,121,487,101],[451,10,488,8,"createProjectile"],[451,26,488,24],[451,27,488,25,"enemy"],[451,32,488,30],[451,34,488,32,"damageResult"],[451,46,488,44],[451,47,488,45,"damage"],[451,53,488,51],[451,55,488,53,"currentNinjaPosition"],[451,75,488,73],[451,77,488,75],[452,12,489,10,"id"],[452,14,489,12],[452,16,489,14,"ability"],[452,23,489,21],[452,24,489,22,"id"],[452,26,489,24],[453,12,490,10,"name"],[453,16,490,14],[453,18,490,16,"ability"],[453,25,490,23],[453,26,490,24,"name"],[453,30,490,28],[454,12,491,10,"icon"],[454,16,491,14],[454,18,491,16,"ability"],[454,25,491,23],[454,26,491,24,"icon"],[455,10,492,8],[455,11,492,9],[455,12,492,10],[456,10,494,8,"console"],[456,17,494,15],[456,18,494,16,"log"],[456,21,494,19],[456,22,494,20],[456,37,494,35,"enemy"],[456,42,494,40],[456,43,494,41,"name"],[456,47,494,45],[456,55,494,53,"damageResult"],[456,67,494,65],[456,68,494,66,"damage"],[456,74,494,72],[456,83,494,81],[456,84,494,82],[457,8,495,6],[457,9,495,7],[457,10,495,8],[458,8,497,6,"console"],[458,15,497,13],[458,16,497,14,"log"],[458,19,497,17],[458,20,497,18],[458,26,497,24,"ability"],[458,33,497,31],[458,34,497,32,"name"],[458,38,497,36],[458,56,497,54,"enemiesInRange"],[458,70,497,68],[458,71,497,69,"length"],[458,77,497,75],[458,93,497,91,"damage"],[458,99,497,97],[458,118,497,116],[458,119,497,117],[459,6,499,4],[459,7,499,5],[459,13,499,11],[460,8,500,6],[461,8,501,6],[461,12,501,12,"target"],[461,18,501,18],[461,21,501,21,"findClosestEnemyInternal"],[461,45,501,45],[461,46,501,46,"state"],[461,51,501,51],[461,52,501,52,"enemies"],[461,59,501,59],[461,60,501,60],[462,8,502,6],[462,12,502,10],[462,13,502,11,"target"],[462,19,502,17],[462,21,502,19],[463,8,504,6],[463,12,504,12,"damageResult"],[463,24,504,24],[463,27,504,27,"DamageCalculator"],[463,46,504,43],[463,47,504,43,"DamageCalculator"],[463,63,504,43],[463,64,504,44,"calculateDamage"],[463,79,504,59],[463,80,504,60,"damage"],[463,86,504,66],[463,88,504,68,"state"],[463,93,504,73],[463,94,504,74,"playerStats"],[463,105,504,85],[463,107,504,87,"target"],[463,113,504,93],[463,114,504,94,"stats"],[463,119,504,99],[463,120,504,100],[465,8,506,6],[466,8,507,6,"createProjectile"],[466,24,507,22],[466,25,507,23,"target"],[466,31,507,29],[466,33,507,31,"damageResult"],[466,45,507,43],[466,46,507,44,"damage"],[466,52,507,50],[466,54,507,52,"currentNinjaPosition"],[466,74,507,72],[466,76,507,74],[467,10,508,8,"id"],[467,12,508,10],[467,14,508,12,"ability"],[467,21,508,19],[467,22,508,20,"id"],[467,24,508,22],[468,10,509,8,"name"],[468,14,509,12],[468,16,509,14,"ability"],[468,23,509,21],[468,24,509,22,"name"],[468,28,509,26],[469,10,510,8,"icon"],[469,14,510,12],[469,16,510,14,"ability"],[469,23,510,21],[469,24,510,22,"icon"],[470,8,511,6],[470,9,511,7],[470,10,511,8],[471,8,513,6,"console"],[471,15,513,13],[471,16,513,14,"log"],[471,19,513,17],[471,20,513,18],[471,26,513,24,"ability"],[471,33,513,31],[471,34,513,32,"name"],[471,38,513,36],[471,66,513,64,"damageResult"],[471,78,513,76],[471,79,513,77,"damage"],[471,85,513,83],[471,95,513,93,"damageResult"],[471,107,513,105],[471,108,513,106,"isCritical"],[471,118,513,116],[471,121,513,119],[471,131,513,129],[471,134,513,132],[471,136,513,134],[471,138,513,136],[471,139,513,137],[472,6,514,4],[474,6,516,4],[475,6,517,4],[475,10,517,8,"ability"],[475,17,517,15],[475,18,517,16,"effects"],[475,25,517,23],[475,26,517,24,"includes"],[475,34,517,32],[475,35,517,33],[475,40,517,38],[475,41,517,39],[475,45,517,43,"ability"],[475,52,517,50],[475,53,517,51,"stats"],[475,58,517,56],[475,59,517,57,"duration"],[475,67,517,65],[475,69,517,67],[476,8,518,6],[476,12,518,12,"targets"],[476,19,518,19],[476,22,518,22,"isAOE"],[476,27,518,27],[476,30,519,8,"state"],[476,35,519,13],[476,36,519,14,"enemies"],[476,43,519,21],[476,44,519,22,"filter"],[476,50,519,28],[476,51,519,29,"enemy"],[476,56,519,34],[476,60,519,38],[477,10,520,10],[477,14,520,16,"ninjaX"],[477,20,520,22],[477,23,520,25,"currentNinjaPosition"],[477,43,520,45],[477,44,520,46,"x"],[477,45,520,47],[477,48,520,50],[477,50,520,52],[478,10,521,10],[478,14,521,16,"ninjaY"],[478,20,521,22],[478,23,521,25,"currentNinjaPosition"],[478,43,521,45],[478,44,521,46,"y"],[478,45,521,47],[478,48,521,50],[478,50,521,52],[479,10,522,10],[479,14,522,16,"enemyX"],[479,20,522,22],[479,23,522,25,"enemy"],[479,28,522,30],[479,29,522,31,"position"],[479,37,522,39],[479,38,522,40,"x"],[479,39,522,41],[479,42,522,44],[479,46,522,48],[480,10,523,10],[480,14,523,16,"enemyY"],[480,20,523,22],[480,23,523,25,"enemy"],[480,28,523,30],[480,29,523,31,"position"],[480,37,523,39],[480,38,523,40,"y"],[480,39,523,41],[480,42,523,44],[480,46,523,48],[481,10,524,10],[481,14,524,16,"distance"],[481,22,524,24],[481,25,524,27,"Math"],[481,29,524,31],[481,30,524,32,"sqrt"],[481,34,524,36],[481,35,524,37,"Math"],[481,39,524,41],[481,40,524,42,"pow"],[481,43,524,45],[481,44,524,46,"enemyX"],[481,50,524,52],[481,53,524,55,"ninjaX"],[481,59,524,61],[481,61,524,63],[481,62,524,64],[481,63,524,65],[481,66,524,68,"Math"],[481,70,524,72],[481,71,524,73,"pow"],[481,74,524,76],[481,75,524,77,"enemyY"],[481,81,524,83],[481,84,524,86,"ninjaY"],[481,90,524,92],[481,92,524,94],[481,93,524,95],[481,94,524,96],[481,95,524,97],[482,10,525,10],[482,17,525,17,"distance"],[482,25,525,25],[482,29,525,29,"ability"],[482,36,525,36],[482,37,525,37,"stats"],[482,42,525,42],[482,43,525,43,"aoeRadius"],[482,52,525,52],[483,8,526,8],[483,9,526,9],[483,10,526,10],[483,13,527,8],[483,14,527,9,"findClosestEnemyInternal"],[483,38,527,33],[483,39,527,34,"state"],[483,44,527,39],[483,45,527,40,"enemies"],[483,52,527,47],[483,53,527,48],[483,54,527,49],[483,55,527,50,"filter"],[483,61,527,56],[483,62,527,57,"Boolean"],[483,69,527,64],[483,70,527,65],[484,8,529,6,"targets"],[484,15,529,13],[484,16,529,14,"forEach"],[484,23,529,21],[484,24,529,22,"target"],[484,30,529,28],[484,34,529,32],[485,10,530,8,"state"],[485,15,530,13],[485,16,530,14,"statusEffects"],[485,29,530,27],[485,30,530,28,"addEffect"],[485,39,530,37],[485,40,530,38,"target"],[485,46,530,44],[485,47,530,45,"id"],[485,49,530,47],[485,51,530,49],[486,12,531,10,"id"],[486,14,531,12],[486,16,531,14],[486,19,531,17,"ability"],[486,26,531,24],[486,27,531,25,"id"],[486,29,531,27],[486,35,531,33],[487,12,532,10,"type"],[487,16,532,14],[487,18,532,16],[487,23,532,21],[488,12,533,10,"remainingTicks"],[488,26,533,24],[488,28,533,26,"Math"],[488,32,533,30],[488,33,533,31,"floor"],[488,38,533,36],[488,39,533,37,"ability"],[488,46,533,44],[488,47,533,45,"stats"],[488,52,533,50],[488,53,533,51,"duration"],[488,61,533,59],[488,64,533,62],[488,66,533,64],[488,67,533,65],[489,12,534,10,"tickInterval"],[489,24,534,22],[489,26,534,24],[489,28,534,26],[490,12,535,10,"lastTick"],[490,20,535,18],[490,22,535,20,"state"],[490,27,535,25],[490,28,535,26,"currentTick"],[490,39,535,37],[491,12,536,10,"value"],[491,17,536,15],[491,19,536,17,"Math"],[491,23,536,21],[491,24,536,22,"floor"],[491,29,536,27],[491,30,536,28,"damage"],[491,36,536,34],[491,39,536,37],[491,42,536,40],[491,43,536,41],[492,12,537,10,"stackable"],[492,21,537,19],[492,23,537,21],[493,10,538,8],[493,11,538,9],[493,12,538,10],[494,8,539,6],[494,9,539,7],[494,10,539,8],[495,6,540,4],[497,6,542,4],[498,6,543,4],[498,10,543,8,"ability"],[498,17,543,15],[498,18,543,16,"effects"],[498,25,543,23],[498,26,543,24,"includes"],[498,34,543,32],[498,35,543,33],[498,41,543,39],[498,42,543,40],[498,46,543,44,"ability"],[498,53,543,51],[498,54,543,52,"id"],[498,56,543,54],[498,61,543,59],[498,75,543,73],[498,77,543,75],[499,8,544,6,"console"],[499,15,544,13],[499,16,544,14,"log"],[499,19,544,17],[499,20,544,18],[499,66,544,64,"ability"],[499,73,544,71],[499,74,544,72,"stats"],[499,79,544,77],[499,80,544,78,"duration"],[499,88,544,86],[499,98,544,96],[499,99,544,97],[501,8,546,6],[502,8,547,6],[502,12,547,12,"cloneX"],[502,18,547,18],[502,21,547,21,"currentNinjaPosition"],[502,41,547,41],[502,42,547,42,"x"],[502,43,547,43],[502,46,547,46],[502,48,547,48],[502,49,547,49],[502,50,547,50],[503,8,548,6],[503,12,548,12,"cloneY"],[503,18,548,18],[503,21,548,21,"currentNinjaPosition"],[503,41,548,41],[503,42,548,42,"y"],[503,43,548,43],[503,46,548,46],[503,48,548,48],[503,49,548,49],[503,50,548,50],[505,8,550,6,"state"],[505,13,550,11],[505,14,550,12,"shadowClone"],[505,25,550,23],[505,28,550,26],[506,10,551,8,"id"],[506,12,551,10],[506,14,551,12],[506,30,551,28,"Date"],[506,34,551,32],[506,35,551,33,"now"],[506,38,551,36],[506,39,551,37],[506,40,551,38],[506,42,551,40],[507,10,552,8,"remainingTicks"],[507,24,552,22],[507,26,552,24,"Math"],[507,30,552,28],[507,31,552,29,"floor"],[507,36,552,34],[507,37,552,35,"ability"],[507,44,552,42],[507,45,552,43,"stats"],[507,50,552,48],[507,51,552,49,"duration"],[507,59,552,57],[507,62,552,60],[507,64,552,62],[507,65,552,63],[508,10,552,65],[509,10,553,8,"position"],[509,18,553,16],[509,20,553,18],[510,12,553,20,"x"],[510,13,553,21],[510,15,553,23,"cloneX"],[510,21,553,29],[511,12,553,31,"y"],[511,13,553,32],[511,15,553,34,"cloneY"],[512,10,553,41],[512,11,553,42],[513,10,554,8,"damageMultiplier"],[513,26,554,24],[513,28,554,26],[513,31,554,29],[513,32,554,31],[514,8,555,6],[514,9,555,7],[515,8,557,6,"console"],[515,15,557,13],[515,16,557,14,"log"],[515,19,557,17],[515,20,557,18],[515,63,557,61,"ability"],[515,70,557,68],[515,71,557,69,"stats"],[515,76,557,74],[515,77,557,75,"duration"],[515,85,557,83],[515,108,557,106],[515,109,557,107],[516,6,558,4],[517,4,559,2],[517,5,559,3],[519,4,561,2],[520,4,562,2],[520,8,562,8,"createProjectile"],[520,24,562,24],[520,27,562,27,"createProjectile"],[520,28,562,28,"targetEnemy"],[520,39,562,52],[520,41,562,54,"damage"],[520,47,562,68],[520,49,562,70,"ninjaPos"],[520,57,562,103],[520,59,562,105,"abilityInfo"],[520,70,562,159],[520,75,562,164],[521,6,563,4],[521,10,563,10,"SCREEN_WIDTH"],[521,22,563,22],[521,25,563,25],[521,28,563,28],[522,6,564,4],[522,10,564,10,"GAME_AREA_HEIGHT"],[522,26,564,26],[522,29,564,29],[522,32,564,32],[522,35,564,35],[522,38,564,38],[522,39,564,39],[522,40,564,40],[523,6,565,4],[523,10,565,10,"NINJA_SIZE"],[523,20,565,20],[523,23,565,23],[523,25,565,25],[525,6,567,4],[526,6,568,4],[526,10,568,10,"ninjaX"],[526,16,568,16],[526,19,568,19,"ninjaPos"],[526,27,568,27],[526,30,568,30,"ninjaPos"],[526,38,568,38],[526,39,568,39,"x"],[526,40,568,40],[526,43,568,43,"NINJA_SIZE"],[526,53,568,53],[526,56,568,56],[526,57,568,57],[526,60,568,60,"SCREEN_WIDTH"],[526,72,568,72],[526,75,568,75],[526,76,568,76],[527,6,569,4],[527,10,569,10,"ninjaY"],[527,16,569,16],[527,19,569,19,"ninjaPos"],[527,27,569,27],[527,30,569,30,"ninjaPos"],[527,38,569,38],[527,39,569,39,"y"],[527,40,569,40],[527,43,569,43,"NINJA_SIZE"],[527,53,569,53],[527,56,569,56],[527,57,569,57],[527,60,569,60,"GAME_AREA_HEIGHT"],[527,76,569,76],[527,79,569,79],[527,80,569,80],[528,6,570,4],[528,10,570,10,"ENEMY_SIZE"],[528,20,570,20],[528,23,570,23],[528,25,570,25],[529,6,572,4],[529,10,572,10,"projectile"],[529,20,572,38],[529,23,572,41],[530,8,573,6,"id"],[530,10,573,8],[530,12,573,10],[530,20,573,18,"Date"],[530,24,573,22],[530,25,573,23,"now"],[530,28,573,26],[530,29,573,27],[530,30,573,28],[530,34,573,32,"Math"],[530,38,573,36],[530,39,573,37,"random"],[530,45,573,43],[530,46,573,44],[530,47,573,45],[530,49,573,47],[531,8,574,6,"x"],[531,9,574,7],[531,11,574,9,"ninjaX"],[531,17,574,15],[532,8,575,6,"y"],[532,9,575,7],[532,11,575,9,"ninjaY"],[532,17,575,15],[533,8,576,6,"targetX"],[533,15,576,13],[533,17,576,15,"targetEnemy"],[533,28,576,26],[533,29,576,27,"position"],[533,37,576,35],[533,38,576,36,"x"],[533,39,576,37],[533,42,576,40,"ENEMY_SIZE"],[533,52,576,50],[533,55,576,53],[533,56,576,54],[534,8,577,6,"targetY"],[534,15,577,13],[534,17,577,15,"targetEnemy"],[534,28,577,26],[534,29,577,27,"position"],[534,37,577,35],[534,38,577,36,"y"],[534,39,577,37],[534,42,577,40,"ENEMY_SIZE"],[534,52,577,50],[534,55,577,53],[534,56,577,54],[535,8,578,6,"targetEnemyId"],[535,21,578,19],[535,23,578,21,"targetEnemy"],[535,34,578,32],[535,35,578,33,"id"],[535,37,578,35],[536,8,579,6,"damage"],[536,14,579,12],[536,16,579,14,"damage"],[536,22,579,20],[537,8,580,6,"startTime"],[537,17,580,15],[537,19,580,17,"Date"],[537,23,580,21],[537,24,580,22,"now"],[537,27,580,25],[537,28,580,26],[537,29,580,27],[538,8,581,6,"duration"],[538,16,581,14],[538,18,581,16],[538,21,581,19],[539,8,581,21],[540,8,582,6],[541,8,583,6,"abilityId"],[541,17,583,15],[541,19,583,17,"abilityInfo"],[541,30,583,28],[541,32,583,30,"id"],[541,34,583,32],[541,38,583,36],[541,54,583,52],[542,8,584,6,"abilityName"],[542,19,584,17],[542,21,584,19,"abilityInfo"],[542,32,584,30],[542,34,584,32,"name"],[542,38,584,36],[542,42,584,40],[542,58,584,56],[543,8,585,6,"abilityIcon"],[543,19,585,17],[543,21,585,19,"abilityInfo"],[543,32,585,30],[543,34,585,32,"icon"],[543,38,585,36],[543,42,585,40],[543,46,585,44],[543,47,585,46],[544,6,586,4],[544,7,586,5],[545,6,588,4,"console"],[545,13,588,11],[545,14,588,12,"log"],[545,17,588,15],[545,18,588,16],[545,53,588,51,"targetEnemy"],[545,64,588,62],[545,65,588,63,"id"],[545,67,588,65],[545,75,588,73,"damage"],[545,81,588,79],[545,90,588,88],[545,91,588,89],[546,6,589,4,"console"],[546,13,589,11],[546,14,589,12,"log"],[546,17,589,15],[546,18,589,16],[546,53,589,51,"ninjaX"],[546,59,589,57],[546,64,589,62,"ninjaY"],[546,70,589,68],[546,87,589,85,"projectile"],[546,97,589,95],[546,98,589,96,"targetX"],[546,105,589,103],[546,110,589,108,"projectile"],[546,120,589,118],[546,121,589,119,"targetY"],[546,128,589,126],[546,131,589,129],[546,132,589,130],[547,6,591,4,"setProjectiles"],[547,20,591,18],[547,21,591,19,"prev"],[547,25,591,23],[547,29,591,27],[547,30,591,28],[547,33,591,31,"prev"],[547,37,591,35],[547,39,591,37,"projectile"],[547,49,591,47],[547,50,591,48],[547,51,591,49],[549,6,593,4],[550,6,594,4,"setTimeout"],[550,16,594,14],[550,17,594,15],[550,23,594,21],[551,8,595,6,"handleProjectileHit"],[551,27,595,25],[551,28,595,26,"projectile"],[551,38,595,36],[551,39,595,37],[552,6,596,4],[552,7,596,5],[552,9,596,7],[552,12,596,10],[552,13,596,11],[553,4,597,2],[553,5,597,3],[555,4,599,2],[556,4,600,2],[556,8,600,8,"spawnTestEnemy"],[556,22,600,22],[556,25,600,26,"state"],[556,30,600,44],[556,34,600,49],[557,6,601,4,"console"],[557,13,601,11],[557,14,601,12,"log"],[557,17,601,15],[557,18,601,16],[557,83,601,81],[557,84,601,82],[559,6,603,4],[560,6,604,4],[560,10,604,10,"zoneEnemy"],[560,19,604,19],[560,22,604,22,"spawnZoneEnemy"],[560,36,604,36],[560,37,604,37],[560,38,604,38],[561,6,605,4],[561,10,605,8],[561,11,605,9,"zoneEnemy"],[561,20,605,18],[561,22,605,20],[562,8,606,6,"console"],[562,15,606,13],[562,16,606,14,"log"],[562,19,606,17],[562,20,606,18],[562,76,606,74],[562,77,606,75],[563,8,607,6],[564,8,608,6,"spawnBasicTestEnemy"],[564,27,608,25],[564,28,608,26,"state"],[564,33,608,31],[564,34,608,32],[565,8,609,6],[566,6,610,4],[567,6,612,4,"console"],[567,13,612,11],[567,14,612,12,"log"],[567,17,612,15],[567,18,612,16],[567,44,612,42,"zoneEnemy"],[567,53,612,51],[567,54,612,52,"name"],[567,58,612,56],[567,63,612,61,"zoneEnemy"],[567,72,612,70],[567,73,612,71,"typeId"],[567,79,612,77],[567,94,612,92,"currentZone"],[567,105,612,103],[567,107,612,105,"id"],[567,109,612,107],[567,119,612,117,"currentZoneLevel"],[567,135,612,133],[567,137,612,135,"level"],[567,142,612,140],[567,144,612,142],[567,145,612,143],[569,6,614,4],[570,6,615,4],[570,10,615,10,"combatEnemy"],[570,21,615,34],[570,24,615,37],[571,8,616,6,"id"],[571,10,616,8],[571,12,616,10,"zoneEnemy"],[571,21,616,19],[571,22,616,20,"id"],[571,24,616,22],[572,8,617,6,"name"],[572,12,617,10],[572,14,617,12,"zoneEnemy"],[572,23,617,21],[572,24,617,22,"name"],[572,28,617,26],[573,8,618,6,"health"],[573,14,618,12],[573,16,618,14,"zoneEnemy"],[573,25,618,23],[573,26,618,24,"hp"],[573,28,618,26],[574,8,619,6,"maxHealth"],[574,17,619,15],[574,19,619,17,"zoneEnemy"],[574,28,619,26],[574,29,619,27,"maxHP"],[574,34,619,32],[575,8,620,6,"stats"],[575,13,620,11],[575,15,620,13],[576,10,621,8,"attack"],[576,16,621,14],[576,18,621,16,"zoneEnemy"],[576,27,621,25],[576,28,621,26,"attack"],[576,34,621,32],[577,10,622,8,"defense"],[577,17,622,15],[577,19,622,17],[577,21,622,19],[578,10,622,21],[579,10,623,8,"health"],[579,16,623,14],[579,18,623,16,"zoneEnemy"],[579,27,623,25],[579,28,623,26,"hp"],[579,30,623,28],[580,10,624,8,"maxHealth"],[580,19,624,17],[580,21,624,19,"zoneEnemy"],[580,30,624,28],[580,31,624,29,"maxHP"],[580,36,624,34],[581,10,625,8,"critChance"],[581,20,625,18],[581,22,625,20],[581,23,625,21],[582,10,626,8,"critDamage"],[582,20,626,18],[582,22,626,20],[582,25,626,23],[583,10,627,8,"cooldownReduction"],[583,27,627,25],[583,29,627,27],[584,8,628,6],[584,9,628,7],[585,8,629,6,"position"],[585,16,629,14],[585,18,629,16,"zoneEnemy"],[585,27,629,25],[585,28,629,26,"position"],[585,36,629,34],[586,8,630,6,"lastDamaged"],[586,19,630,17],[586,21,630,19],[586,22,630,20],[587,8,631,6],[588,8,632,6,"zoneTypeId"],[588,18,632,16],[588,20,632,18,"zoneEnemy"],[588,29,632,27],[588,30,632,28,"typeId"],[588,36,632,34],[589,8,633,6,"zoneXP"],[589,14,633,12],[589,16,633,14,"zoneEnemy"],[589,25,633,23],[589,26,633,24,"xp"],[590,6,634,4],[590,7,634,5],[591,6,636,4,"console"],[591,13,636,11],[591,14,636,12,"log"],[591,17,636,15],[591,18,636,16],[591,42,636,40,"combatEnemy"],[591,53,636,51],[591,54,636,52,"name"],[591,58,636,56],[591,67,636,65,"combatEnemy"],[591,78,636,76],[591,79,636,77,"health"],[591,85,636,83],[591,100,636,98,"currentZone"],[591,111,636,109],[591,113,636,111,"id"],[591,115,636,113],[591,125,636,123,"currentZoneLevel"],[591,141,636,139],[591,143,636,141,"level"],[591,148,636,146],[591,150,636,148],[591,151,636,149],[592,6,637,4,"state"],[592,11,637,9],[592,12,637,10,"enemies"],[592,19,637,17],[592,20,637,18,"push"],[592,24,637,22],[592,25,637,23,"combatEnemy"],[592,36,637,34],[592,37,637,35],[593,4,638,2],[593,5,638,3],[595,4,640,2],[596,4,641,2],[596,8,641,8,"spawnBasicTestEnemy"],[596,27,641,27],[596,30,641,31,"state"],[596,35,641,49],[596,39,641,54],[597,6,642,4],[597,10,642,10,"SCREEN_WIDTH"],[597,22,642,22],[597,25,642,25],[597,28,642,28],[598,6,643,4],[598,10,643,10,"GAME_AREA_HEIGHT"],[598,26,643,26],[598,29,643,29],[598,32,643,32],[598,35,643,35],[598,38,643,38],[599,6,644,4],[599,10,644,10,"ENEMY_SIZE"],[599,20,644,20],[599,23,644,23],[599,25,644,25],[600,6,646,4],[600,10,646,10,"x"],[600,11,646,11],[600,14,646,14,"Math"],[600,18,646,18],[600,19,646,19,"random"],[600,25,646,25],[600,26,646,26],[600,27,646,27],[600,31,646,31,"SCREEN_WIDTH"],[600,43,646,43],[600,46,646,46,"ENEMY_SIZE"],[600,56,646,56],[600,59,646,59],[600,60,646,60],[600,61,646,61],[600,64,646,64,"ENEMY_SIZE"],[600,74,646,74],[601,6,647,4],[601,10,647,10,"y"],[601,11,647,11],[601,14,647,14,"Math"],[601,18,647,18],[601,19,647,19,"random"],[601,25,647,25],[601,26,647,26],[601,27,647,27],[601,31,647,31,"GAME_AREA_HEIGHT"],[601,47,647,47],[601,50,647,50,"ENEMY_SIZE"],[601,60,647,60],[601,63,647,63],[601,64,647,64],[601,65,647,65],[601,68,647,68,"ENEMY_SIZE"],[601,78,647,78],[602,6,649,4],[602,10,649,10,"enemy"],[602,15,649,28],[602,18,649,31],[603,8,650,6,"id"],[603,10,650,8],[603,12,650,10],[603,30,650,28,"Date"],[603,34,650,32],[603,35,650,33,"now"],[603,38,650,36],[603,39,650,37],[603,40,650,38],[603,44,650,42,"Math"],[603,48,650,46],[603,49,650,47,"random"],[603,55,650,53],[603,56,650,54],[603,57,650,55],[603,59,650,57],[604,8,651,6,"name"],[604,12,651,10],[604,14,651,12],[604,26,651,24,"Math"],[604,30,651,28],[604,31,651,29,"floor"],[604,36,651,34],[604,37,651,35,"Math"],[604,41,651,39],[604,42,651,40,"random"],[604,48,651,46],[604,49,651,47],[604,50,651,48],[604,53,651,51],[604,56,651,54],[604,57,651,55],[604,59,651,57],[605,8,652,6,"health"],[605,14,652,12],[605,16,652,14],[605,18,652,16],[606,8,653,6,"maxHealth"],[606,17,653,15],[606,19,653,17],[606,21,653,19],[607,8,654,6,"stats"],[607,13,654,11],[607,15,654,13],[608,10,655,8,"attack"],[608,16,655,14],[608,18,655,16],[608,20,655,18],[609,10,656,8,"defense"],[609,17,656,15],[609,19,656,17],[609,21,656,19],[610,10,657,8,"health"],[610,16,657,14],[610,18,657,16],[610,20,657,18],[611,10,658,8,"maxHealth"],[611,19,658,17],[611,21,658,19],[611,23,658,21],[612,10,659,8,"critChance"],[612,20,659,18],[612,22,659,20],[612,23,659,21],[613,10,660,8,"critDamage"],[613,20,660,18],[613,22,660,20],[613,25,660,23],[614,10,661,8,"cooldownReduction"],[614,27,661,25],[614,29,661,27],[615,8,662,6],[615,9,662,7],[616,8,663,6,"position"],[616,16,663,14],[616,18,663,16],[617,10,663,18,"x"],[617,11,663,19],[618,10,663,21,"y"],[619,8,663,23],[619,9,663,24],[620,8,664,6,"lastDamaged"],[620,19,664,17],[620,21,664,19],[621,6,665,4],[621,7,665,5],[622,6,667,4,"console"],[622,13,667,11],[622,14,667,12,"log"],[622,17,667,15],[622,18,667,16],[622,42,667,40,"enemy"],[622,47,667,45],[622,48,667,46,"name"],[622,52,667,50],[622,60,667,58,"Math"],[622,64,667,62],[622,65,667,63,"round"],[622,70,667,68],[622,71,667,69,"x"],[622,72,667,70],[622,73,667,71],[622,78,667,76,"Math"],[622,82,667,80],[622,83,667,81,"round"],[622,88,667,86],[622,89,667,87,"y"],[622,90,667,88],[622,91,667,89],[622,94,667,92],[622,95,667,93],[623,6,668,4,"state"],[623,11,668,9],[623,12,668,10,"enemies"],[623,19,668,17],[623,20,668,18,"push"],[623,24,668,22],[623,25,668,23,"enemy"],[623,30,668,28],[623,31,668,29],[624,4,669,2],[624,5,669,3],[626,4,671,2],[627,4,672,2],[627,8,672,8,"startCombat"],[627,19,672,19],[627,22,672,22,"React"],[627,27,672,27],[627,28,672,27,"default"],[627,35,672,27],[627,36,672,28,"useCallback"],[627,47,672,39],[627,48,672,40],[627,54,672,46],[628,6,673,4,"console"],[628,13,673,11],[628,14,673,12,"log"],[628,17,673,15],[628,18,673,16],[628,63,673,61],[628,64,673,62],[629,6,674,4,"setCombatState"],[629,20,674,18],[629,21,674,19,"prev"],[629,25,674,23],[629,30,674,28],[630,8,674,30],[630,11,674,33,"prev"],[630,15,674,37],[631,8,674,39,"isInCombat"],[631,18,674,49],[631,20,674,51],[632,6,674,56],[632,7,674,57],[632,8,674,58],[632,9,674,59],[634,6,676,4],[635,6,677,4,"combatEngine"],[635,25,677,16],[635,26,677,16,"combatEngine"],[635,38,677,16],[635,39,677,17,"addTickCallback"],[635,54,677,32],[635,55,677,33,"handleCombatTick"],[635,71,677,49],[635,72,677,50],[636,6,678,4,"console"],[636,13,678,11],[636,14,678,12,"log"],[636,17,678,15],[636,18,678,16],[636,62,678,60],[636,63,678,61],[638,6,680,4],[639,6,681,4,"combatEngine"],[639,25,681,16],[639,26,681,16,"combatEngine"],[639,38,681,16],[639,39,681,17,"start"],[639,44,681,22],[639,45,681,23],[639,46,681,24],[640,4,682,2],[640,5,682,3],[640,7,682,5],[640,8,682,6,"combatEngine"],[640,27,682,18],[640,28,682,18,"combatEngine"],[640,40,682,18],[640,42,682,20,"handleCombatTick"],[640,58,682,36],[640,59,682,37],[640,60,682,38],[642,4,684,2],[643,4,685,2],[643,8,685,8,"stopCombat"],[643,18,685,18],[643,21,685,21,"React"],[643,26,685,26],[643,27,685,26,"default"],[643,34,685,26],[643,35,685,27,"useCallback"],[643,46,685,38],[643,47,685,39],[643,53,685,45],[644,6,686,4,"setCombatState"],[644,20,686,18],[644,21,686,19,"prev"],[644,25,686,23],[644,30,686,28],[645,8,686,30],[645,11,686,33,"prev"],[645,15,686,37],[646,8,686,39,"isInCombat"],[646,18,686,49],[646,20,686,51],[647,6,686,57],[647,7,686,58],[647,8,686,59],[647,9,686,60],[648,6,687,4,"combatEngine"],[648,25,687,16],[648,26,687,16,"combatEngine"],[648,38,687,16],[648,39,687,17,"removeTickCallback"],[648,57,687,35],[648,58,687,36,"handleCombatTick"],[648,74,687,52],[648,75,687,53],[649,4,688,2],[649,5,688,3],[649,7,688,5],[649,8,688,6,"combatEngine"],[649,27,688,18],[649,28,688,18,"combatEngine"],[649,40,688,18],[649,42,688,20,"handleCombatTick"],[649,58,688,36],[649,59,688,37],[649,60,688,38],[651,4,690,2],[652,4,691,2],[652,8,691,8,"equipAbility"],[652,20,691,20],[652,23,691,23,"equipAbility"],[652,24,691,24,"abilityId"],[652,33,691,41],[652,35,691,43,"slotIndex"],[652,44,691,60],[652,49,691,74],[653,6,692,4],[653,13,692,11,"combatState"],[653,24,692,22],[653,25,692,23,"abilityManager"],[653,39,692,37],[653,40,692,38,"equipAbility"],[653,52,692,50],[653,53,692,51,"abilityId"],[653,62,692,60],[653,64,692,62,"slotIndex"],[653,73,692,71],[653,74,692,72],[654,4,693,2],[654,5,693,3],[655,4,695,2],[655,8,695,8,"getDeck"],[655,15,695,15],[655,18,695,18,"getDeck"],[655,19,695,18],[655,24,695,24],[656,6,696,4],[656,13,696,11,"combatState"],[656,24,696,22],[656,25,696,23,"abilityManager"],[656,39,696,37],[656,40,696,38,"getDeck"],[656,47,696,45],[656,48,696,46],[656,49,696,47],[657,4,697,2],[657,5,697,3],[658,4,699,2],[658,8,699,8,"getAvailableAbilities"],[658,29,699,29],[658,32,699,32,"getAvailableAbilities"],[658,33,699,32],[658,38,699,38],[659,6,700,4],[659,13,700,11,"combatState"],[659,24,700,22],[659,25,700,23,"abilityManager"],[659,39,700,37],[659,40,700,38,"getAvailableAbilities"],[659,61,700,59],[659,62,700,60],[659,63,700,61],[660,4,701,2],[660,5,701,3],[661,4,703,2],[661,8,703,8,"upgradeAbility"],[661,22,703,22],[661,25,703,26,"abilityId"],[661,34,703,43],[661,38,703,57],[662,6,704,4],[662,13,704,11,"combatState"],[662,24,704,22],[662,25,704,23,"abilityManager"],[662,39,704,37],[662,40,704,38,"upgradeAbility"],[662,54,704,52],[662,55,704,53,"abilityId"],[662,64,704,62],[662,65,704,63],[663,4,705,2],[663,5,705,3],[665,4,707,2],[666,4,708,2],[666,8,708,8,"clearAllEnemies"],[666,23,708,23],[666,26,708,26,"clearAllEnemies"],[666,27,708,26],[666,32,708,32],[667,6,709,4,"console"],[667,13,709,11],[667,14,709,12,"log"],[667,17,709,15],[667,18,709,16],[667,67,709,65],[667,68,709,66],[668,6,710,4,"setCombatState"],[668,20,710,18],[668,21,710,19,"prev"],[668,25,710,23],[668,30,710,28],[669,8,711,6],[669,11,711,9,"prev"],[669,15,711,13],[670,8,712,6,"enemies"],[670,15,712,13],[670,17,712,15],[671,6,713,4],[671,7,713,5],[671,8,713,6],[671,9,713,7],[672,4,714,2],[672,5,714,3],[674,4,716,2],[675,4,717,2],[675,8,717,8,"triggerLevelUpExplosion"],[675,31,717,31],[675,34,717,34,"triggerLevelUpExplosion"],[675,35,717,34],[675,40,717,40],[676,6,718,4,"console"],[676,13,718,11],[676,14,718,12,"log"],[676,17,718,15],[676,18,718,16],[676,70,718,68],[676,71,718,69],[677,6,720,4],[677,10,720,10,"explosionTime"],[677,23,720,23],[677,26,720,26,"Date"],[677,30,720,30],[677,31,720,31,"now"],[677,34,720,34],[677,35,720,35],[677,36,720,36],[678,6,721,4,"setLastExplosionTime"],[678,26,721,24],[678,27,721,25,"explosionTime"],[678,40,721,38],[678,41,721,39],[679,6,723,4,"setCombatState"],[679,20,723,18],[679,21,723,19,"prev"],[679,25,723,23],[679,29,723,27],[680,8,724,6],[681,8,725,6],[681,12,725,12,"enemyCount"],[681,22,725,22],[681,25,725,25,"prev"],[681,29,725,29],[681,30,725,30,"enemies"],[681,37,725,37],[681,38,725,38,"length"],[681,44,725,44],[682,8,726,6],[682,12,726,12,"explosionXP"],[682,23,726,23],[682,26,726,26,"enemyCount"],[682,36,726,36],[682,39,726,39],[682,42,726,42],[682,43,726,43],[682,44,726,44],[683,8,727,6],[683,12,727,12,"explosionGold"],[683,25,727,25],[683,28,727,28,"enemyCount"],[683,38,727,38],[683,41,727,41],[683,42,727,42],[683,43,727,43],[683,44,727,44],[685,8,729,6,"console"],[685,15,729,13],[685,16,729,14,"log"],[685,19,729,17],[685,20,729,18],[685,44,729,42,"enemyCount"],[685,54,729,52],[685,76,729,74,"explosionXP"],[685,87,729,85],[685,98,729,96,"explosionGold"],[685,111,729,109],[685,118,729,116],[685,119,729,117],[687,8,731,6],[688,8,732,6],[688,12,732,10,"explosionXP"],[688,23,732,21],[688,26,732,24],[688,27,732,25],[688,29,732,27],[689,10,733,8,"setTimeout"],[689,20,733,18],[689,21,733,19],[689,27,733,25],[690,12,734,10,"game"],[690,16,734,14],[690,17,734,15,"updateNinja"],[690,28,734,26],[690,29,734,28,"ninja"],[690,34,734,33],[690,39,734,39],[691,14,735,12,"experience"],[691,24,735,22],[691,26,735,24,"ninja"],[691,31,735,29],[691,32,735,30,"experience"],[691,42,735,40],[691,45,735,43,"explosionXP"],[691,56,735,54],[692,14,736,12,"gold"],[692,18,736,16],[692,20,736,18,"ninja"],[692,25,736,23],[692,26,736,24,"gold"],[692,30,736,28],[692,33,736,31,"explosionGold"],[693,12,737,10],[693,13,737,11],[693,14,737,12],[693,15,737,13],[694,10,738,8],[694,11,738,9],[694,13,738,11],[694,14,738,12],[694,15,738,13],[694,16,738,14],[694,17,738,15],[695,8,739,6],[697,8,741,6],[698,8,742,6],[699,8,743,6],[699,12,743,12,"damagedEnemies"],[699,26,743,26],[699,29,743,29,"prev"],[699,33,743,33],[699,34,743,34,"enemies"],[699,41,743,41],[699,42,743,42,"map"],[699,45,743,45],[699,46,743,46,"enemy"],[699,51,743,51],[699,56,743,56],[700,10,744,8],[700,13,744,11,"enemy"],[700,18,744,16],[701,10,745,8,"health"],[701,16,745,14],[701,18,745,16],[701,19,745,17],[702,10,745,19],[703,10,746,8,"lastDamaged"],[703,21,746,19],[703,23,746,21,"combatEngine"],[703,42,746,33],[703,43,746,33,"combatEngine"],[703,55,746,33],[703,56,746,34,"getCurrentTick"],[703,70,746,48],[703,71,746,49],[704,8,747,6],[704,9,747,7],[704,10,747,8],[704,11,747,9],[705,8,749,6],[705,15,749,13],[706,10,750,8],[706,13,750,11,"prev"],[706,17,750,15],[707,10,751,8,"enemies"],[707,17,751,15],[707,19,751,17,"damagedEnemies"],[708,8,752,6],[708,9,752,7],[709,6,753,4],[709,7,753,5],[709,8,753,6],[710,4,754,2],[710,5,754,3],[712,4,756,2],[713,4,757,2],[713,8,757,8,"spawnEnemy"],[713,18,757,18],[713,21,757,22,"position"],[713,29,757,57],[713,33,757,75],[714,6,758,4],[714,10,758,10,"SCREEN_WIDTH"],[714,22,758,22],[714,25,758,25],[714,28,758,28],[715,6,759,4],[715,10,759,10,"GAME_AREA_HEIGHT"],[715,26,759,26],[715,29,759,29],[715,32,759,32],[715,35,759,35],[715,38,759,38],[715,39,759,39],[715,40,759,40],[716,6,760,4],[716,10,760,10,"ENEMY_SIZE"],[716,20,760,20],[716,23,760,23],[716,25,760,25],[718,6,762,4],[719,6,763,4],[719,10,763,10,"x"],[719,11,763,11],[719,14,763,14,"position"],[719,22,763,22],[719,24,763,24,"x"],[719,25,763,25],[719,29,763,29,"Math"],[719,33,763,33],[719,34,763,34,"random"],[719,40,763,40],[719,41,763,41],[719,42,763,42],[719,46,763,46,"SCREEN_WIDTH"],[719,58,763,58],[719,61,763,61,"ENEMY_SIZE"],[719,71,763,71],[719,74,763,74],[719,75,763,75],[719,76,763,76],[719,79,763,79,"ENEMY_SIZE"],[719,89,763,89],[720,6,764,4],[720,10,764,10,"y"],[720,11,764,11],[720,14,764,14,"position"],[720,22,764,22],[720,24,764,24,"y"],[720,25,764,25],[720,29,764,29,"Math"],[720,33,764,33],[720,34,764,34,"random"],[720,40,764,40],[720,41,764,41],[720,42,764,42],[720,46,764,46,"GAME_AREA_HEIGHT"],[720,62,764,62],[720,65,764,65,"ENEMY_SIZE"],[720,75,764,75],[720,78,764,78],[720,79,764,79],[720,80,764,80],[720,83,764,83,"ENEMY_SIZE"],[720,93,764,93],[721,6,766,4],[721,10,766,10,"enemy"],[721,15,766,28],[721,18,766,31],[722,8,767,6,"id"],[722,10,767,8],[722,12,767,10],[722,21,767,19],[722,23,767,21,"enemyCounter"],[722,35,767,33],[722,37,767,35],[723,8,768,6,"name"],[723,12,768,10],[723,14,768,12],[723,24,768,22],[724,8,769,6,"health"],[724,14,769,12],[724,16,769,14],[724,19,769,17],[725,8,770,6,"maxHealth"],[725,17,770,15],[725,19,770,17],[725,22,770,20],[726,8,771,6,"stats"],[726,13,771,11],[726,15,771,13],[727,10,772,8,"attack"],[727,16,772,14],[727,18,772,16],[727,20,772,18],[728,10,773,8,"defense"],[728,17,773,15],[728,19,773,17],[728,21,773,19],[729,10,774,8,"health"],[729,16,774,14],[729,18,774,16],[729,21,774,19],[730,10,775,8,"maxHealth"],[730,19,775,17],[730,21,775,19],[730,24,775,22],[731,10,776,8,"critChance"],[731,20,776,18],[731,22,776,20],[731,23,776,21],[732,10,777,8,"critDamage"],[732,20,777,18],[732,22,777,20],[732,25,777,23],[733,10,778,8,"cooldownReduction"],[733,27,778,25],[733,29,778,27],[734,8,779,6],[734,9,779,7],[735,8,780,6,"position"],[735,16,780,14],[735,18,780,16],[736,10,780,18,"x"],[736,11,780,19],[737,10,780,21,"y"],[738,8,780,23],[738,9,780,24],[739,8,781,6,"lastDamaged"],[739,19,781,17],[739,21,781,19],[740,6,782,4],[740,7,782,5],[741,6,784,4,"setCombatState"],[741,20,784,18],[741,21,784,19,"prev"],[741,25,784,23],[741,30,784,28],[742,8,785,6],[742,11,785,9,"prev"],[742,15,785,13],[743,8,786,6,"enemies"],[743,15,786,13],[743,17,786,15],[743,18,786,16],[743,21,786,19,"prev"],[743,25,786,23],[743,26,786,24,"enemies"],[743,33,786,31],[743,35,786,33,"enemy"],[743,40,786,38],[744,6,787,4],[744,7,787,5],[744,8,787,6],[744,9,787,7],[745,6,789,4],[745,13,789,11,"enemy"],[745,18,789,16],[746,4,790,2],[746,5,790,3],[748,4,792,2],[749,4,793,2],[749,8,793,8,"spawnBoss"],[749,17,793,17],[749,20,793,21,"bossEnemy"],[749,29,793,43],[749,33,793,48],[750,6,794,4,"console"],[750,13,794,11],[750,14,794,12,"log"],[750,17,794,15],[750,18,794,16],[750,39,794,37,"bossEnemy"],[750,48,794,46],[750,49,794,47,"name"],[750,53,794,51],[750,90,794,88],[750,91,794,89],[751,6,795,4,"setCombatState"],[751,20,795,18],[751,21,795,19,"prev"],[751,25,795,23],[751,30,795,28],[752,8,796,6],[752,11,796,9,"prev"],[752,15,796,13],[753,8,797,6,"enemies"],[753,15,797,13],[753,17,797,15],[753,18,797,16,"bossEnemy"],[753,27,797,25],[753,28,797,26],[753,29,797,27],[754,6,798,4],[754,7,798,5],[754,8,798,6],[754,9,798,7],[755,4,799,2],[755,5,799,3],[757,4,801,2],[758,4,802,2],[758,8,802,8,"clearSpecificEnemy"],[758,26,802,26],[758,29,802,30,"enemyId"],[758,36,802,45],[758,40,802,50],[759,6,803,4,"setCombatState"],[759,20,803,18],[759,21,803,19,"prev"],[759,25,803,23],[759,30,803,28],[760,8,804,6],[760,11,804,9,"prev"],[760,15,804,13],[761,8,805,6,"enemies"],[761,15,805,13],[761,17,805,15,"prev"],[761,21,805,19],[761,22,805,20,"enemies"],[761,29,805,27],[761,30,805,28,"filter"],[761,36,805,34],[761,37,805,35,"enemy"],[761,42,805,40],[761,46,805,44,"enemy"],[761,51,805,49],[761,52,805,50,"id"],[761,54,805,52],[761,59,805,57,"enemyId"],[761,66,805,64],[762,6,806,4],[762,7,806,5],[762,8,806,6],[762,9,806,7],[763,4,807,2],[763,5,807,3],[765,4,809,2],[766,4,810,2],[766,8,810,8,"useAbilityManually"],[766,26,810,26],[766,29,810,26,"_s3"],[766,32,810,26],[766,33,810,29],[766,37,810,29,"useCallback"],[766,43,810,40],[766,44,810,40,"useCallback"],[766,55,810,40],[766,57,810,40,"_s3"],[766,60,810,40],[766,61,810,42,"slotIndex"],[766,70,810,59],[766,74,810,73],[767,6,810,73,"_s3"],[767,9,810,73],[768,6,811,4,"console"],[768,13,811,11],[768,14,811,12,"log"],[768,17,811,15],[768,18,811,16],[768,53,811,51,"slotIndex"],[768,62,811,60],[768,64,811,62],[768,65,811,63],[770,6,813,4],[771,6,814,4],[771,10,814,10,"isReady"],[771,17,814,17],[771,20,814,20,"combatState"],[771,31,814,31],[771,32,814,32,"abilityManager"],[771,46,814,46],[771,47,814,47,"isAbilityReady"],[771,61,814,61],[771,62,814,62,"slotIndex"],[771,71,814,71],[771,72,814,72],[772,6,815,4],[772,10,815,8],[772,11,815,9,"isReady"],[772,18,815,16],[772,20,815,18],[773,8,816,6,"console"],[773,15,816,13],[773,16,816,14,"log"],[773,19,816,17],[773,20,816,18],[773,41,816,39,"slotIndex"],[773,50,816,48],[773,85,816,83],[773,86,816,84],[774,8,817,6],[774,15,817,13],[774,20,817,18],[775,6,818,4],[777,6,820,4],[778,6,821,4],[778,10,821,8,"combatState"],[778,21,821,19],[778,22,821,20,"enemies"],[778,29,821,27],[778,30,821,28,"length"],[778,36,821,34],[778,41,821,39],[778,42,821,40],[778,44,821,42],[779,8,822,6,"console"],[779,15,822,13],[779,16,822,14,"log"],[779,19,822,17],[779,20,822,18],[779,69,822,67],[779,70,822,68],[780,8,823,6],[780,15,823,13],[780,20,823,18],[781,6,824,4],[783,6,826,4],[784,6,827,4],[784,10,827,10,"currentTick"],[784,21,827,21],[784,24,827,24,"combatEngine"],[784,43,827,36],[784,44,827,36,"combatEngine"],[784,56,827,36],[784,57,827,37,"getCurrentTick"],[784,71,827,51],[784,72,827,52],[784,73,827,53],[785,6,828,4],[785,10,828,10,"success"],[785,17,828,17],[785,20,828,20,"combatState"],[785,31,828,31],[785,32,828,32,"abilityManager"],[785,46,828,46],[785,47,828,47,"useAbility"],[785,57,828,57],[785,58,828,58,"slotIndex"],[785,67,828,67],[785,69,828,69,"currentTick"],[785,80,828,80],[785,81,828,81],[786,6,830,4],[786,10,830,8,"success"],[786,17,830,15],[786,19,830,17],[787,8,831,6],[788,8,832,6,"setCombatState"],[788,22,832,20],[788,23,832,21,"prev"],[788,27,832,25],[788,31,832,29],[789,10,833,8],[789,14,833,14,"newState"],[789,22,833,22],[789,25,833,25],[790,12,833,27],[790,15,833,30,"prev"],[791,10,833,35],[791,11,833,36],[792,10,834,8,"castAbility"],[792,21,834,19],[792,22,834,20,"newState"],[792,30,834,28],[792,32,834,30,"slotIndex"],[792,41,834,39],[792,42,834,40],[793,10,835,8],[793,17,835,15,"newState"],[793,25,835,23],[794,8,836,6],[794,9,836,7],[794,10,836,8],[795,8,838,6,"console"],[795,15,838,13],[795,16,838,14,"log"],[795,19,838,17],[795,20,838,18],[795,65,838,63,"slotIndex"],[795,74,838,72],[795,76,838,74],[795,77,838,75],[796,8,839,6],[796,15,839,13],[796,19,839,17],[797,6,840,4],[797,7,840,5],[797,13,840,11],[798,8,841,6,"console"],[798,15,841,13],[798,16,841,14,"log"],[798,19,841,17],[798,20,841,18],[798,61,841,59,"slotIndex"],[798,70,841,68],[798,72,841,70],[798,73,841,71],[799,8,842,6],[799,15,842,13],[799,20,842,18],[800,6,843,4],[801,4,844,2],[801,5,844,3],[801,46,844,5],[801,47,844,6,"combatState"],[801,58,844,17],[801,59,844,18,"abilityManager"],[801,73,844,32],[801,75,844,34,"combatState"],[801,86,844,45],[801,87,844,46,"enemies"],[801,94,844,53],[801,95,844,54],[801,96,844,55],[802,4,845,2],[802,8,845,2,"useEffect"],[802,14,845,11],[802,15,845,11,"useEffect"],[802,24,845,11],[802,26,845,12],[802,32,845,18],[803,6,846,4,"combatEngine"],[803,25,846,16],[803,26,846,16,"combatEngine"],[803,38,846,16],[803,39,846,17,"start"],[803,44,846,22],[803,45,846,23],[803,46,846,24],[805,6,848,4],[806,6,849,4],[807,6,850,4,"console"],[807,13,850,11],[807,14,850,12,"log"],[807,17,850,15],[807,18,850,16],[807,97,850,95],[807,98,850,96],[808,6,852,4],[808,13,852,11],[808,19,852,17],[809,8,853,6,"combatEngine"],[809,27,853,18],[809,28,853,18,"combatEngine"],[809,40,853,18],[809,41,853,19,"stop"],[809,45,853,23],[809,46,853,24],[809,47,853,25],[810,6,854,4],[810,7,854,5],[811,4,855,2],[811,5,855,3],[811,7,855,5],[811,9,855,7],[811,10,855,8],[812,4,856,2],[813,4,857,2],[813,8,857,2,"useEffect"],[813,14,857,11],[813,15,857,11,"useEffect"],[813,24,857,11],[813,26,857,12],[813,32,857,18],[814,6,858,4],[814,10,858,10,"processProjectiles"],[814,28,858,28],[814,31,858,31,"processProjectiles"],[814,32,858,31],[814,37,858,37],[815,8,859,6,"setProjectiles"],[815,22,859,20],[815,23,859,21,"currentProjectiles"],[815,41,859,39],[815,45,859,43],[816,10,860,8],[816,17,860,15,"currentProjectiles"],[816,35,860,33],[816,36,860,34,"map"],[816,39,860,37],[816,40,860,38,"projectile"],[816,50,860,48],[816,54,860,52],[817,12,861,10],[817,16,861,14],[817,17,861,15,"projectile"],[817,27,861,25],[817,29,861,27],[817,36,861,34],[817,40,861,38],[819,12,863,10],[820,12,864,10],[820,16,864,16,"currentTime"],[820,27,864,27],[820,30,864,30,"Date"],[820,34,864,34],[820,35,864,35,"now"],[820,38,864,38],[820,39,864,39],[820,40,864,40],[821,12,865,10],[821,16,865,16,"startTime"],[821,25,865,25],[821,28,865,28,"projectile"],[821,38,865,38],[821,39,865,39,"startTime"],[821,48,865,48],[821,52,865,52,"currentTime"],[821,63,865,63],[822,12,866,10],[822,16,866,16,"elapsedTime"],[822,27,866,27],[822,30,866,30,"currentTime"],[822,41,866,41],[822,44,866,44,"startTime"],[822,53,866,53],[823,12,867,10],[823,16,867,16,"progress"],[823,24,867,24],[823,27,867,27,"Math"],[823,31,867,31],[823,32,867,32,"min"],[823,35,867,35],[823,36,867,36,"elapsedTime"],[823,47,867,47],[823,51,867,51,"projectile"],[823,61,867,61],[823,62,867,62,"duration"],[823,70,867,70],[823,74,867,74],[823,77,867,77],[823,78,867,78],[823,80,867,80],[823,81,867,81],[823,82,867,82],[825,12,869,10],[826,12,870,10],[826,16,870,14,"progress"],[826,24,870,22],[826,28,870,26],[826,29,870,27],[826,33,870,31],[826,34,870,32,"projectile"],[826,44,870,42],[826,45,870,43,"hasHit"],[826,51,870,49],[826,53,870,51],[827,14,871,12,"projectile"],[827,24,871,22],[827,25,871,23,"hasHit"],[827,31,871,29],[827,34,871,32],[827,38,871,36],[829,14,873,12],[830,14,874,12,"setCombatState"],[830,28,874,26],[830,29,874,27,"prev"],[830,33,874,31],[830,37,874,35],[831,16,875,14],[831,20,875,20,"newState"],[831,28,875,28],[831,31,875,31],[832,18,875,33],[832,21,875,36,"prev"],[833,16,875,41],[833,17,875,42],[834,16,876,14],[834,20,876,20,"enemyIndex"],[834,30,876,30],[834,33,876,33,"newState"],[834,41,876,41],[834,42,876,42,"enemies"],[834,49,876,49],[834,50,876,50,"findIndex"],[834,59,876,59],[834,60,876,60,"e"],[834,61,876,61],[834,65,876,65,"e"],[834,66,876,66],[834,67,876,67,"id"],[834,69,876,69],[834,74,876,74,"projectile"],[834,84,876,84],[834,85,876,85,"targetEnemyId"],[834,98,876,98],[834,99,876,99],[835,16,878,14],[835,20,878,18,"enemyIndex"],[835,30,878,28],[835,34,878,32],[835,35,878,33],[835,39,878,37,"newState"],[835,47,878,45],[835,48,878,46,"enemies"],[835,55,878,53],[835,56,878,54,"enemyIndex"],[835,66,878,64],[835,67,878,65],[835,68,878,66,"health"],[835,74,878,72],[835,77,878,75],[835,78,878,76],[835,80,878,78],[836,18,879,16,"newState"],[836,26,879,24],[836,27,879,25,"enemies"],[836,34,879,32],[836,37,879,35],[836,38,879,36],[836,41,879,39,"newState"],[836,49,879,47],[836,50,879,48,"enemies"],[836,57,879,55],[836,58,879,56],[837,18,880,16],[837,22,880,22,"enemy"],[837,27,880,27],[837,30,880,30,"newState"],[837,38,880,38],[837,39,880,39,"enemies"],[837,46,880,46],[837,47,880,47,"enemyIndex"],[837,57,880,57],[837,58,880,58],[838,18,881,16],[838,22,881,22,"newHealth"],[838,31,881,31],[838,34,881,34,"Math"],[838,38,881,38],[838,39,881,39,"max"],[838,42,881,42],[838,43,881,43],[838,44,881,44],[838,46,881,46,"enemy"],[838,51,881,51],[838,52,881,52,"health"],[838,58,881,58],[838,61,881,61,"projectile"],[838,71,881,71],[838,72,881,72,"damage"],[838,78,881,78],[838,79,881,79],[839,18,883,16,"newState"],[839,26,883,24],[839,27,883,25,"enemies"],[839,34,883,32],[839,35,883,33,"enemyIndex"],[839,45,883,43],[839,46,883,44],[839,49,883,47],[840,20,884,18],[840,23,884,21,"enemy"],[840,28,884,26],[841,20,885,18,"health"],[841,26,885,24],[841,28,885,26,"newHealth"],[841,37,885,35],[842,20,886,18,"lastDamaged"],[842,31,886,29],[842,33,886,31,"combatEngine"],[842,52,886,43],[842,53,886,43,"combatEngine"],[842,65,886,43],[842,66,886,44,"getCurrentTick"],[842,80,886,58],[842,81,886,59],[843,18,887,16],[843,19,887,17],[844,18,889,16,"console"],[844,25,889,23],[844,26,889,24,"log"],[844,29,889,27],[844,30,889,28],[844,52,889,50,"projectile"],[844,62,889,60],[844,63,889,61,"abilityName"],[844,74,889,72],[844,82,889,80,"enemy"],[844,87,889,85],[844,88,889,86,"name"],[844,92,889,90],[844,100,889,98,"projectile"],[844,110,889,108],[844,111,889,109,"damage"],[844,117,889,115],[844,129,889,127,"newHealth"],[844,138,889,136],[844,142,889,140,"enemy"],[844,147,889,145],[844,148,889,146,"maxHealth"],[844,157,889,155],[844,173,889,171],[844,174,889,172],[845,16,890,14],[846,16,892,14],[846,23,892,21,"newState"],[846,31,892,29],[847,14,893,12],[847,15,893,13],[847,16,893,14],[848,14,895,12],[848,21,895,19],[848,25,895,23],[848,26,895,24],[848,27,895,25],[849,12,896,10],[850,12,898,10],[850,19,898,17,"projectile"],[850,29,898,27],[851,10,899,8],[851,11,899,9],[851,12,899,10],[851,13,899,11,"filter"],[851,19,899,17],[851,20,899,18,"Boolean"],[851,27,899,25],[851,28,899,26],[852,8,900,6],[852,9,900,7],[852,10,900,8],[853,6,901,4],[853,7,901,5],[855,6,903,4],[856,6,904,4],[856,10,904,10,"projectileInterval"],[856,28,904,28],[856,31,904,31,"setInterval"],[856,42,904,42],[856,43,904,43,"processProjectiles"],[856,61,904,61],[856,63,904,63],[856,65,904,65],[856,66,904,66],[857,6,905,4],[857,13,905,11],[857,19,905,17,"clearInterval"],[857,32,905,30],[857,33,905,31,"projectileInterval"],[857,51,905,49],[857,52,905,50],[858,4,906,2],[858,5,906,3],[858,7,906,5],[858,9,906,7],[858,10,906,8],[860,4,908,2],[861,4,909,2],[861,8,909,8,"handleProjectileImpact"],[861,30,909,30],[861,33,909,33],[861,37,909,33,"useCallback"],[861,43,909,44],[861,44,909,44,"useCallback"],[861,55,909,44],[861,57,909,45],[861,58,909,46,"targetEnemyId"],[861,71,909,67],[861,73,909,69,"damage"],[861,79,909,83],[861,81,909,85,"abilityName"],[861,92,909,104],[861,97,909,109],[862,6,910,4,"console"],[862,13,910,11],[862,14,910,12,"log"],[862,17,910,15],[862,18,910,16],[862,43,910,41,"abilityName"],[862,54,910,52],[862,68,910,66,"targetEnemyId"],[862,81,910,79],[862,89,910,87,"damage"],[862,95,910,93],[862,104,910,102],[862,105,910,103],[863,6,912,4,"setCombatState"],[863,20,912,18],[863,21,912,19,"prev"],[863,25,912,23],[863,29,912,27],[864,8,913,6],[864,12,913,12,"newState"],[864,20,913,20],[864,23,913,23],[865,10,913,25],[865,13,913,28,"prev"],[866,8,913,33],[866,9,913,34],[868,8,915,6],[869,8,916,6],[869,12,916,12,"enemyIndex"],[869,22,916,22],[869,25,916,25,"newState"],[869,33,916,33],[869,34,916,34,"enemies"],[869,41,916,41],[869,42,916,42,"findIndex"],[869,51,916,51],[869,52,916,52,"e"],[869,53,916,53],[869,57,916,57,"e"],[869,58,916,58],[869,59,916,59,"id"],[869,61,916,61],[869,66,916,66,"targetEnemyId"],[869,79,916,79],[869,80,916,80],[870,8,917,6],[870,12,917,10,"enemyIndex"],[870,22,917,20],[870,26,917,24],[870,27,917,25],[870,29,917,27],[871,10,918,8,"newState"],[871,18,918,16],[871,19,918,17,"enemies"],[871,26,918,24],[871,29,918,27],[871,30,918,28],[871,33,918,31,"newState"],[871,41,918,39],[871,42,918,40,"enemies"],[871,49,918,47],[871,50,918,48],[872,10,919,8,"newState"],[872,18,919,16],[872,19,919,17,"enemies"],[872,26,919,24],[872,27,919,25,"enemyIndex"],[872,37,919,35],[872,38,919,36],[872,41,919,39],[873,12,920,10],[873,15,920,13,"newState"],[873,23,920,21],[873,24,920,22,"enemies"],[873,31,920,29],[873,32,920,30,"enemyIndex"],[873,42,920,40],[873,43,920,41],[874,12,921,10,"health"],[874,18,921,16],[874,20,921,18,"Math"],[874,24,921,22],[874,25,921,23,"max"],[874,28,921,26],[874,29,921,27],[874,30,921,28],[874,32,921,30,"newState"],[874,40,921,38],[874,41,921,39,"enemies"],[874,48,921,46],[874,49,921,47,"enemyIndex"],[874,59,921,57],[874,60,921,58],[874,61,921,59,"health"],[874,67,921,65],[874,70,921,68,"damage"],[874,76,921,74],[874,77,921,75],[875,12,922,10,"lastDamaged"],[875,23,922,21],[875,25,922,23,"combatEngine"],[875,44,922,35],[875,45,922,35,"combatEngine"],[875,57,922,35],[875,58,922,36,"getCurrentTick"],[875,72,922,50],[875,73,922,51],[876,10,923,8],[876,11,923,9],[877,10,925,8,"console"],[877,17,925,15],[877,18,925,16,"log"],[877,21,925,19],[877,22,925,20],[877,34,925,32,"targetEnemyId"],[877,47,925,45],[877,59,925,57,"newState"],[877,67,925,65],[877,68,925,66,"enemies"],[877,75,925,73],[877,76,925,74,"enemyIndex"],[877,86,925,84],[877,87,925,85],[877,88,925,86,"health"],[877,94,925,92],[877,98,925,96,"newState"],[877,106,925,104],[877,107,925,105,"enemies"],[877,114,925,112],[877,115,925,113,"enemyIndex"],[877,125,925,123],[877,126,925,124],[877,127,925,125,"maxHealth"],[877,136,925,134],[877,146,925,144,"abilityName"],[877,157,925,155],[877,166,925,164],[877,167,925,165],[878,8,926,6],[878,9,926,7],[878,15,926,13],[879,10,927,8,"console"],[879,17,927,15],[879,18,927,16,"log"],[879,21,927,19],[879,22,927,20],[879,33,927,31,"targetEnemyId"],[879,46,927,44],[879,80,927,78],[879,81,927,79],[880,8,928,6],[881,8,930,6],[881,15,930,13,"newState"],[881,23,930,21],[882,6,931,4],[882,7,931,5],[882,8,931,6],[883,4,932,2],[883,5,932,3],[883,7,932,5],[883,9,932,7],[883,10,932,8],[885,4,934,2],[886,4,935,2],[886,8,935,8,"saveAbilityData"],[886,23,935,23],[886,26,935,26],[886,30,935,26,"useCallback"],[886,36,935,37],[886,37,935,37,"useCallback"],[886,48,935,37],[886,50,935,38],[886,56,935,44],[887,6,936,4],[887,10,936,8,"combatState"],[887,21,936,19],[887,22,936,20,"abilityManager"],[887,36,936,34],[887,38,936,36],[888,8,937,6],[888,12,937,12,"abilityData"],[888,23,937,23],[888,26,937,26,"combatState"],[888,37,937,37],[888,38,937,38,"abilityManager"],[888,52,937,52],[888,53,937,53,"getSaveData"],[888,64,937,64],[888,65,937,65],[888,66,937,66],[889,8,938,6,"console"],[889,15,938,13],[889,16,938,14,"log"],[889,19,938,17],[889,20,938,18],[889,70,938,68],[889,72,938,70,"abilityData"],[889,83,938,81],[889,84,938,82],[890,8,939,6,"game"],[890,12,939,10],[890,13,939,11,"updateAbilityData"],[890,30,939,28],[890,31,939,29,"abilityData"],[890,42,939,40],[890,43,939,41],[891,6,940,4],[892,4,941,2],[892,5,941,3],[892,7,941,5],[892,8,941,6,"combatState"],[892,19,941,17],[892,20,941,18,"abilityManager"],[892,34,941,32],[892,36,941,34,"game"],[892,40,941,38],[892,41,941,39,"updateAbilityData"],[892,58,941,56],[892,59,941,57],[892,60,941,58],[893,4,943,2],[893,8,943,8,"contextValue"],[893,20,943,39],[893,23,943,42,"React"],[893,28,943,47],[893,29,943,47,"default"],[893,36,943,47],[893,37,943,48,"useMemo"],[893,44,943,55],[893,45,943,56],[893,52,943,63],[894,6,944,4,"combatState"],[894,17,944,15],[895,6,945,4,"projectiles"],[895,17,945,15],[896,6,946,4,"startCombat"],[896,17,946,15],[897,6,947,4,"stopCombat"],[897,16,947,14],[898,6,948,4,"equipAbility"],[898,18,948,16],[899,6,949,4,"handleEnemyKill"],[899,21,949,19],[900,6,950,4,"getDeck"],[900,13,950,11],[901,6,951,4,"getAvailableAbilities"],[901,27,951,25],[902,6,952,4,"upgradeAbility"],[902,20,952,18],[903,6,953,4,"spawnEnemy"],[903,16,953,14],[904,6,954,4,"spawnBoss"],[904,15,954,13],[905,6,955,4,"clearAllEnemies"],[905,21,955,19],[906,6,956,4,"clearSpecificEnemy"],[906,24,956,22],[907,6,957,4,"triggerLevelUpExplosion"],[907,29,957,27],[908,6,958,4,"findClosestEnemy"],[908,22,958,20],[909,6,959,4,"updateNinjaPosition"],[909,25,959,23],[910,6,960,4,"setManualControlActive"],[910,28,960,26],[911,6,961,4,"lastExplosionTime"],[911,23,961,21],[912,6,962,4,"useAbilityManually"],[912,24,962,22],[913,6,962,24],[914,6,963,4,"saveAbilityData"],[914,21,963,19],[915,6,963,21],[916,6,964,4,"shadowClone"],[916,17,964,15],[916,19,964,17,"combatState"],[916,30,964,28],[916,31,964,29,"shadowClone"],[916,42,964,40],[917,6,964,42],[918,6,965,4,"handleProjectileImpact"],[918,28,965,26],[918,29,965,28],[919,4,966,2],[919,5,966,3],[919,6,966,4],[919,8,966,6],[920,4,967,4],[921,4,968,4],[922,4,969,4,"combatState"],[922,15,969,15],[922,17,970,4,"projectiles"],[922,28,970,15],[922,30,971,4,"lastExplosionTime"],[922,47,971,21],[923,4,972,4],[924,4,973,4,"combatState"],[924,15,973,15],[924,16,973,16,"abilityManager"],[924,30,973,30],[924,32,974,4,"combatState"],[924,43,974,15],[924,44,974,16,"enemies"],[924,51,974,23],[924,53,975,4,"combatState"],[924,64,975,15],[924,65,975,16,"shadowClone"],[924,76,975,27],[925,4,975,29],[926,4,976,4,"useAbilityManually"],[926,22,976,22],[927,4,976,24],[928,4,977,4,"saveAbilityData"],[928,19,977,19],[929,4,977,21],[930,4,978,4,"handleProjectileImpact"],[930,26,978,26],[930,27,978,28],[931,4,978,28],[931,5,979,3],[931,6,979,4],[932,4,981,2],[932,24,982,4],[932,28,982,4,"_reactJsxDevRuntime"],[932,47,982,4],[932,48,982,4,"jsxDEV"],[932,54,982,4],[932,56,982,5,"CombatContext"],[932,69,982,18],[932,70,982,19,"Provider"],[932,78,982,27],[933,6,982,28,"value"],[933,11,982,33],[933,13,982,35,"contextValue"],[933,25,982,48],[934,6,982,48,"children"],[934,14,982,48],[934,16,983,7,"children"],[935,4,983,15],[936,6,983,15,"fileName"],[936,14,983,15],[936,16,983,15,"_jsxFileName"],[936,28,983,15],[937,6,983,15,"lineNumber"],[937,16,983,15],[938,6,983,15,"columnNumber"],[938,18,983,15],[939,4,983,15],[939,11,984,28],[939,12,984,29],[940,2,986,0],[940,3,986,1],[941,2,986,2,"_s4"],[941,5,986,2],[941,6,101,13,"CombatProvider"],[941,20,101,27],[942,4,101,27],[942,12,102,15,"useGame"],[942,24,102,22],[942,25,102,22,"useGame"],[942,32,102,22],[942,34,103,77,"useZone"],[942,46,103,84],[942,47,103,84,"useZone"],[942,54,103,84],[943,2,103,84],[944,2,103,84,"_c"],[944,4,103,84],[944,7,101,13,"CombatProvider"],[944,21,101,27],[945,2,101,27],[945,6,101,27,"_c"],[945,8,101,27],[946,2,101,27,"$RefreshReg$"],[946,14,101,27],[946,15,101,27,"_c"],[946,17,101,27],[947,0,101,27],[947,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectiles","currentProjectiles.map$argument_0","handleProjectileImpact","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC0F;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCE;+B+CC;qB1BC;sC2BC;2B/Cc;4DME,sCN;a+CiB;S3BM;O0BC;K/CC;W8CI,uC9C;GDC;6CkDG;mBhDG;oDMI,2BN;KgDe;GlDC;sCmDG;GnDM;wDoDE;IpDuB;CFoB"},"hasCjsExports":false},"type":"js/module"}]}