{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is invincible\n                var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                if (isPlayerInvincible) {\n                  console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                  // Update enemy attack cooldown even if blocked\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                  var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                  var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                  var playerDefense = newState.playerStats.defense;\n                  var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                  console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                  // Apply damage to player\n                  var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                  newState.playerStats.health = newPlayerHealth;\n                  console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                  // Update enemy attack cooldown\n                  enemy.lastAttackTick = newState.currentTick;\n\n                  // Handle player death if health reaches 0\n                  if (newPlayerHealth <= 0) {\n                    console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                    // Set player as dead and trigger revival modal\n                    setTimeout(() => {\n                      // Set isAlive to false to trigger revival system\n                      game.updateGameState({\n                        isAlive: false\n                      });\n                    }, 100);\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades) - DUPLICATE REMOVED\n        // This duplicate sync block has been removed to prevent conflicts with the main sync above\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1057,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1108,2],[27,6,1108,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1108,2],[27,42,1108,2,"require"],[27,49,1108,2],[27,50,1108,2,"_dependencyMap"],[27,64,1108,2],[28,2,1108,2],[28,6,1108,2,"_slicedToArray"],[28,20,1108,2],[28,23,1108,2,"_interopDefault"],[28,38,1108,2],[28,39,1108,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1108,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"maxHealth"],[224,189,256,71],[224,191,256,73],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"maxHealth"],[225,252,258,250],[225,254,258,252],[225,255,258,253],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"maxHealth"],[229,75,262,73],[229,77,262,75],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"maxHealth"],[231,42,264,40],[231,45,264,43,"newState"],[231,53,264,51],[231,54,264,52,"playerStats"],[231,65,264,63],[231,66,264,64,"maxHealth"],[231,75,264,73],[231,78,264,76],[231,81,264,79],[231,83,264,81],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"maxHealth"],[234,63,268,61],[234,66,268,64,"healthRatio"],[234,77,268,75],[234,78,268,76],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"maxHealth"],[235,79,269,77],[235,81,269,79],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"maxHealth"],[237,52,271,50],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"maxHealth"],[245,49,280,47],[246,14,280,49],[247,14,281,12,"health"],[247,20,281,18],[247,22,281,20,"newHealth"],[247,31,281,29],[248,14,281,31],[249,14,282,12,"critChance"],[249,24,282,22],[249,26,282,24,"effectiveStats"],[249,40,282,38],[249,41,282,39,"critChance"],[249,51,282,49],[249,55,282,53,"newState"],[249,63,282,61],[249,64,282,62,"playerStats"],[249,75,282,73],[249,76,282,74,"critChance"],[249,86,282,84],[250,14,283,12,"critDamage"],[250,24,283,22],[250,26,283,24,"effectiveStats"],[250,40,283,38],[250,41,283,39,"critDamage"],[250,51,283,49],[250,55,283,53,"newState"],[250,63,283,61],[250,64,283,62,"playerStats"],[250,75,283,73],[250,76,283,74,"critDamage"],[250,86,283,84],[251,14,284,12,"cooldownReduction"],[251,31,284,29],[251,33,284,31,"effectiveStats"],[251,47,284,45],[251,48,284,46,"cooldownReduction"],[251,65,284,63],[251,69,284,67,"newState"],[251,77,284,75],[251,78,284,76,"playerStats"],[251,89,284,87],[251,90,284,88,"cooldownReduction"],[252,12,285,10],[252,13,285,11],[253,10,286,8],[255,10,288,8],[256,10,289,8],[256,14,289,12,"game"],[256,18,289,16],[256,19,289,17,"gameState"],[256,28,289,26],[256,29,289,27,"isAlive"],[256,36,289,34],[256,40,290,12,"game"],[256,44,290,16],[256,45,290,17,"gameState"],[256,54,290,26],[256,55,290,27,"ninja"],[256,60,290,32],[256,61,290,33,"health"],[256,67,290,39],[256,72,290,44,"effectiveStats"],[256,86,290,58],[256,87,290,59,"maxHealth"],[256,96,290,68],[256,100,291,12,"newState"],[256,108,291,20],[256,109,291,21,"playerStats"],[256,120,291,32],[256,121,291,33,"health"],[256,127,291,39],[256,130,291,42,"effectiveStats"],[256,144,291,56],[256,145,291,57,"maxHealth"],[256,154,291,66],[256,157,291,69],[256,160,291,72],[256,162,291,74],[257,12,292,10,"console"],[257,19,292,17],[257,20,292,18,"log"],[257,23,292,21],[257,24,292,22],[257,58,292,56,"newState"],[257,66,292,64],[257,67,292,65,"playerStats"],[257,78,292,76],[257,79,292,77,"health"],[257,85,292,83],[257,91,292,89,"game"],[257,95,292,93],[257,96,292,94,"gameState"],[257,105,292,103],[257,106,292,104,"ninja"],[257,111,292,109],[257,112,292,110,"health"],[257,118,292,116],[257,139,292,137],[257,140,292,138],[258,12,293,10,"newState"],[258,20,293,18],[258,21,293,19,"playerStats"],[258,32,293,30],[258,33,293,31,"health"],[258,39,293,37],[258,42,293,40,"game"],[258,46,293,44],[258,47,293,45,"gameState"],[258,56,293,54],[258,57,293,55,"ninja"],[258,62,293,60],[258,63,293,61,"health"],[258,69,293,67],[259,10,294,8],[260,8,295,6],[262,8,297,6],[263,8,298,6,"newState"],[263,16,298,14],[263,17,298,15,"enemies"],[263,24,298,22],[263,25,298,23,"forEach"],[263,32,298,30],[263,33,298,31,"enemy"],[263,38,298,36],[263,42,298,40],[264,10,299,8],[264,14,299,12],[264,15,299,13,"enemy"],[264,20,299,18],[264,21,299,19,"isBoss"],[264,27,299,25],[264,29,299,27],[265,12,299,29],[266,12,300,10],[267,12,301,10],[267,16,301,16,"MOVEMENT_SPEED"],[267,30,301,30],[267,33,301,33],[267,37,301,37],[267,38,301,38],[267,39,301,39],[268,12,302,10],[268,16,302,16,"SCREEN_WIDTH"],[268,28,302,28],[268,31,302,31],[268,34,302,34],[269,12,303,10],[269,16,303,16,"GAME_AREA_HEIGHT"],[269,32,303,32],[269,35,303,35],[269,38,303,38],[269,39,303,39],[269,40,303,40],[270,12,304,10],[270,16,304,16,"ENEMY_SIZE"],[270,26,304,26],[270,29,304,29],[270,31,304,31],[272,12,306,10],[273,12,307,10],[273,16,307,16,"playerX"],[273,23,307,23],[273,26,307,26,"currentNinjaPosition"],[273,46,307,46],[273,47,307,47,"x"],[273,48,307,48],[274,12,308,10],[274,16,308,16,"playerY"],[274,23,308,23],[274,26,308,26,"currentNinjaPosition"],[274,46,308,46],[274,47,308,47,"y"],[274,48,308,48],[276,12,310,10],[277,12,311,10],[277,16,311,16,"deltaX"],[277,22,311,22],[277,25,311,25,"playerX"],[277,32,311,32],[277,35,311,35,"enemy"],[277,40,311,40],[277,41,311,41,"position"],[277,49,311,49],[277,50,311,50,"x"],[277,51,311,51],[278,12,312,10],[278,16,312,16,"deltaY"],[278,22,312,22],[278,25,312,25,"playerY"],[278,32,312,32],[278,35,312,35,"enemy"],[278,40,312,40],[278,41,312,41,"position"],[278,49,312,49],[278,50,312,50,"y"],[278,51,312,51],[279,12,313,10],[279,16,313,16,"distance"],[279,24,313,24],[279,27,313,27,"Math"],[279,31,313,31],[279,32,313,32,"sqrt"],[279,36,313,36],[279,37,313,37,"deltaX"],[279,43,313,43],[279,46,313,46,"deltaX"],[279,52,313,52],[279,55,313,55,"deltaY"],[279,61,313,61],[279,64,313,64,"deltaY"],[279,70,313,70],[279,71,313,71],[281,12,315,10],[282,12,316,10],[282,16,316,16,"ATTACK_RANGE"],[282,28,316,28],[282,31,316,31],[282,33,316,33],[282,34,316,34],[282,35,316,35],[283,12,317,10],[283,16,317,16,"ATTACK_COOLDOWN"],[283,31,317,31],[283,34,317,34],[283,36,317,36],[283,37,317,37],[283,38,317,38],[285,12,319,10],[285,16,319,14,"distance"],[285,24,319,22],[285,28,319,26,"ATTACK_RANGE"],[285,40,319,38],[285,42,319,40],[286,14,320,12],[287,14,321,12],[287,18,321,16],[287,19,321,17,"enemy"],[287,24,321,22],[287,25,321,23,"lastAttackTick"],[287,39,321,37],[287,41,321,39,"enemy"],[287,46,321,44],[287,47,321,45,"lastAttackTick"],[287,61,321,59],[287,64,321,62],[287,65,321,63],[288,14,323,12],[288,18,323,16,"newState"],[288,26,323,24],[288,27,323,25,"currentTick"],[288,38,323,36],[288,41,323,39,"enemy"],[288,46,323,44],[288,47,323,45,"lastAttackTick"],[288,61,323,59],[288,65,323,63,"ATTACK_COOLDOWN"],[288,80,323,78],[288,82,323,80],[289,16,324,14],[290,16,325,14],[290,20,325,20,"isPlayerInvincible"],[290,38,325,38],[290,41,325,41,"game"],[290,45,325,45],[290,46,325,46,"gameState"],[290,55,325,55],[290,56,325,56,"isInvincible"],[290,68,325,68],[290,72,326,39,"game"],[290,76,326,43],[290,77,326,44,"gameState"],[290,86,326,53],[290,87,326,54,"invincibilityEndTime"],[290,107,326,74],[290,111,327,39,"Date"],[290,115,327,43],[290,116,327,44,"now"],[290,119,327,47],[290,120,327,48],[290,121,327,49],[290,124,327,52,"game"],[290,128,327,56],[290,129,327,57,"gameState"],[290,138,327,66],[290,139,327,67,"invincibilityEndTime"],[290,159,327,87],[291,16,329,14],[291,20,329,18,"isPlayerInvincible"],[291,38,329,36],[291,40,329,38],[292,18,330,16,"console"],[292,25,330,23],[292,26,330,24,"log"],[292,29,330,27],[292,30,330,28],[292,49,330,47,"enemy"],[292,54,330,52],[292,55,330,53,"name"],[292,59,330,57],[292,99,330,97],[292,100,330,98],[293,18,331,16],[294,18,332,16,"enemy"],[294,23,332,21],[294,24,332,22,"lastAttackTick"],[294,38,332,36],[294,41,332,39,"newState"],[294,49,332,47],[294,50,332,48,"currentTick"],[294,61,332,59],[295,16,333,14],[295,17,333,15],[295,23,333,21],[296,18,334,16],[297,18,335,16],[297,22,335,22,"baseAttack"],[297,32,335,32],[297,35,335,35,"enemy"],[297,40,335,40],[297,41,335,41,"stats"],[297,46,335,46],[297,47,335,47,"attack"],[297,53,335,53],[297,56,335,56],[297,59,335,59],[297,60,335,60],[297,61,335,61],[298,18,336,16],[298,22,336,22,"attackDamage"],[298,34,336,34],[298,37,336,37,"Math"],[298,41,336,41],[298,42,336,42,"floor"],[298,47,336,47],[298,48,336,48,"baseAttack"],[298,58,336,58],[298,62,336,62],[298,65,336,65],[298,68,336,68,"Math"],[298,72,336,72],[298,73,336,73,"random"],[298,79,336,79],[298,80,336,80],[298,81,336,81],[298,84,336,84],[298,87,336,87],[298,88,336,88],[298,89,336,89],[298,90,336,90],[298,91,336,91],[299,18,337,16],[299,22,337,22,"playerDefense"],[299,35,337,35],[299,38,337,38,"newState"],[299,46,337,46],[299,47,337,47,"playerStats"],[299,58,337,58],[299,59,337,59,"defense"],[299,66,337,66],[300,18,338,16],[300,22,338,22,"finalDamage"],[300,33,338,33],[300,36,338,36,"Math"],[300,40,338,40],[300,41,338,41,"max"],[300,44,338,44],[300,45,338,45],[300,46,338,46],[300,48,338,48,"attackDamage"],[300,60,338,60],[300,63,338,63,"Math"],[300,67,338,67],[300,68,338,68,"floor"],[300,73,338,73],[300,74,338,74,"playerDefense"],[300,87,338,87],[300,90,338,90],[300,93,338,93],[300,94,338,94],[300,95,338,95],[300,96,338,96],[300,97,338,97],[302,18,340,16,"console"],[302,25,340,23],[302,26,340,24,"log"],[302,29,340,27],[302,30,340,28],[302,51,340,49,"enemy"],[302,56,340,54],[302,57,340,55,"name"],[302,61,340,59],[302,84,340,82,"finalDamage"],[302,95,340,93],[302,107,340,105,"attackDamage"],[302,119,340,117],[302,130,340,128,"Math"],[302,134,340,132],[302,135,340,133,"floor"],[302,140,340,138],[302,141,340,139,"playerDefense"],[302,154,340,152],[302,157,340,155],[302,160,340,158],[302,161,340,159],[302,182,340,180],[302,183,340,181],[304,18,342,16],[305,18,343,16],[305,22,343,22,"newPlayerHealth"],[305,37,343,37],[305,40,343,40,"Math"],[305,44,343,44],[305,45,343,45,"max"],[305,48,343,48],[305,49,343,49],[305,50,343,50],[305,52,343,52,"newState"],[305,60,343,60],[305,61,343,61,"playerStats"],[305,72,343,72],[305,73,343,73,"health"],[305,79,343,79],[305,82,343,82,"finalDamage"],[305,93,343,93],[305,94,343,94],[306,18,344,16,"newState"],[306,26,344,24],[306,27,344,25,"playerStats"],[306,38,344,36],[306,39,344,37,"health"],[306,45,344,43],[306,48,344,46,"newPlayerHealth"],[306,63,344,61],[307,18,346,16,"console"],[307,25,346,23],[307,26,346,24,"log"],[307,29,346,27],[307,30,346,28],[307,51,346,49,"newState"],[307,59,346,57],[307,60,346,58,"playerStats"],[307,71,346,69],[307,72,346,70,"health"],[307,78,346,76],[307,82,346,80,"newState"],[307,90,346,88],[307,91,346,89,"playerStats"],[307,102,346,100],[307,103,346,101,"maxHealth"],[307,112,346,110],[307,122,346,120,"finalDamage"],[307,133,346,131],[307,143,346,141],[307,144,346,142],[309,18,348,16],[310,18,349,16,"enemy"],[310,23,349,21],[310,24,349,22,"lastAttackTick"],[310,38,349,36],[310,41,349,39,"newState"],[310,49,349,47],[310,50,349,48,"currentTick"],[310,61,349,59],[312,18,351,16],[313,18,352,16],[313,22,352,20,"newPlayerHealth"],[313,37,352,35],[313,41,352,39],[313,42,352,40],[313,44,352,42],[314,20,353,18,"console"],[314,27,353,25],[314,28,353,26,"log"],[314,31,353,29],[314,32,353,30],[314,82,353,80],[314,83,353,81],[315,20,354,18],[316,20,355,18,"setTimeout"],[316,30,355,28],[316,31,355,29],[316,37,355,35],[317,22,356,20],[318,22,357,20,"game"],[318,26,357,24],[318,27,357,25,"updateGameState"],[318,42,357,40],[318,43,357,41],[319,24,357,43,"isAlive"],[319,31,357,50],[319,33,357,52],[320,22,357,58],[320,23,357,59],[320,24,357,60],[321,20,358,18],[321,21,358,19],[321,23,358,21],[321,26,358,24],[321,27,358,25],[322,18,359,16],[323,16,360,14],[324,14,361,12],[325,12,362,10],[325,13,362,11],[325,19,362,17],[326,14,363,12],[327,14,364,12],[328,14,365,12],[328,18,365,16,"distance"],[328,26,365,24],[328,29,365,27],[328,31,365,29],[328,33,365,31],[329,16,366,14],[330,16,367,14],[330,20,367,20,"normalizedX"],[330,31,367,31],[330,34,367,34,"deltaX"],[330,40,367,40],[330,43,367,43,"distance"],[330,51,367,51],[331,16,368,14],[331,20,368,20,"normalizedY"],[331,31,368,31],[331,34,368,34,"deltaY"],[331,40,368,40],[331,43,368,43,"distance"],[331,51,368,51],[333,16,370,14],[334,16,371,14],[334,20,371,20,"randomFactor"],[334,32,371,32],[334,35,371,35],[334,38,371,38],[334,39,371,39],[334,40,371,40],[335,16,372,14],[335,20,372,20,"finalX"],[335,26,372,26],[335,29,372,29,"normalizedX"],[335,40,372,40],[335,43,372,43],[335,44,372,44,"Math"],[335,48,372,48],[335,49,372,49,"random"],[335,55,372,55],[335,56,372,56],[335,57,372,57],[335,60,372,60],[335,63,372,63],[335,67,372,67,"randomFactor"],[335,79,372,79],[336,16,373,14],[336,20,373,20,"finalY"],[336,26,373,26],[336,29,373,29,"normalizedY"],[336,40,373,40],[336,43,373,43],[336,44,373,44,"Math"],[336,48,373,48],[336,49,373,49,"random"],[336,55,373,55],[336,56,373,56],[336,57,373,57],[336,60,373,60],[336,63,373,63],[336,67,373,67,"randomFactor"],[336,79,373,79],[338,16,375,14],[339,16,376,14],[339,20,376,18,"newX"],[339,24,376,22],[339,27,376,25,"enemy"],[339,32,376,30],[339,33,376,31,"position"],[339,41,376,39],[339,42,376,40,"x"],[339,43,376,41],[339,46,376,45,"finalX"],[339,52,376,51],[339,55,376,54,"MOVEMENT_SPEED"],[339,69,376,69],[340,16,377,14],[340,20,377,18,"newY"],[340,24,377,22],[340,27,377,25,"enemy"],[340,32,377,30],[340,33,377,31,"position"],[340,41,377,39],[340,42,377,40,"y"],[340,43,377,41],[340,46,377,45,"finalY"],[340,52,377,51],[340,55,377,54,"MOVEMENT_SPEED"],[340,69,377,69],[342,16,379,14],[343,16,380,14,"newX"],[343,20,380,18],[343,23,380,21,"Math"],[343,27,380,25],[343,28,380,26,"max"],[343,31,380,29],[343,32,380,30],[343,33,380,31],[343,35,380,33,"Math"],[343,39,380,37],[343,40,380,38,"min"],[343,43,380,41],[343,44,380,42,"SCREEN_WIDTH"],[343,56,380,54],[343,59,380,57,"ENEMY_SIZE"],[343,69,380,67],[343,71,380,69,"newX"],[343,75,380,73],[343,76,380,74],[343,77,380,75],[344,16,381,14,"newY"],[344,20,381,18],[344,23,381,21,"Math"],[344,27,381,25],[344,28,381,26,"max"],[344,31,381,29],[344,32,381,30],[344,33,381,31],[344,35,381,33,"Math"],[344,39,381,37],[344,40,381,38,"min"],[344,43,381,41],[344,44,381,42,"GAME_AREA_HEIGHT"],[344,60,381,58],[344,63,381,61,"ENEMY_SIZE"],[344,73,381,71],[344,75,381,73,"newY"],[344,79,381,77],[344,80,381,78],[344,81,381,79],[346,16,383,14],[347,16,384,14,"enemy"],[347,21,384,19],[347,22,384,20,"position"],[347,30,384,28],[347,31,384,29,"x"],[347,32,384,30],[347,35,384,33,"newX"],[347,39,384,37],[348,16,385,14,"enemy"],[348,21,385,19],[348,22,385,20,"position"],[348,30,385,28],[348,31,385,29,"y"],[348,32,385,30],[348,35,385,33,"newY"],[348,39,385,37],[349,14,386,12],[350,14,387,12],[351,12,388,10],[352,10,389,8],[353,8,390,6],[353,9,390,7],[353,10,390,8],[355,8,392,6],[356,8,393,6],[357,8,394,6],[357,12,394,10,"newState"],[357,20,394,18],[357,21,394,19,"shadowClone"],[357,32,394,30],[357,34,394,32],[358,10,395,8],[359,10,396,8,"newState"],[359,18,396,16],[359,19,396,17,"shadowClone"],[359,30,396,28],[359,31,396,29,"remainingTicks"],[359,45,396,43],[359,47,396,45],[361,10,398,8],[362,10,399,8],[362,14,399,14,"cloneOffset"],[362,25,399,25],[362,28,399,28],[362,30,399,30],[362,31,399,31],[362,32,399,32],[363,10,400,8,"newState"],[363,18,400,16],[363,19,400,17,"shadowClone"],[363,30,400,28],[363,31,400,29,"position"],[363,39,400,37],[363,40,400,38,"x"],[363,41,400,39],[363,44,400,42,"currentNinjaPosition"],[363,64,400,62],[363,65,400,63,"x"],[363,66,400,64],[363,69,400,67,"cloneOffset"],[363,80,400,78],[364,10,401,8,"newState"],[364,18,401,16],[364,19,401,17,"shadowClone"],[364,30,401,28],[364,31,401,29,"position"],[364,39,401,37],[364,40,401,38,"y"],[364,41,401,39],[364,44,401,42,"currentNinjaPosition"],[364,64,401,62],[364,65,401,63,"y"],[364,66,401,64],[364,69,401,67],[364,71,401,69],[366,10,403,8],[367,10,404,8],[367,14,404,12,"newState"],[367,22,404,20],[367,23,404,21,"shadowClone"],[367,34,404,32],[367,35,404,33,"remainingTicks"],[367,49,404,47],[367,53,404,51],[367,54,404,52],[367,56,404,54],[368,12,405,10,"console"],[368,19,405,17],[368,20,405,18,"log"],[368,23,405,21],[368,24,405,22],[368,75,405,73],[368,76,405,74],[369,12,406,10,"newState"],[369,20,406,18],[369,21,406,19,"shadowClone"],[369,32,406,30],[369,35,406,33,"undefined"],[369,44,406,42],[370,10,407,8],[370,11,407,9],[370,17,407,15],[371,12,408,10],[372,12,409,10],[373,12,410,10],[373,16,410,16,"CLONE_ATTACK_INTERVAL"],[373,37,410,37],[373,40,410,40],[373,42,410,42],[374,12,411,10],[374,16,411,14,"newState"],[374,24,411,22],[374,25,411,23,"currentTick"],[374,36,411,34],[374,39,411,37,"CLONE_ATTACK_INTERVAL"],[374,60,411,58],[374,65,411,63],[374,66,411,64],[374,70,411,68,"newState"],[374,78,411,76],[374,79,411,77,"enemies"],[374,86,411,84],[374,87,411,85,"length"],[374,93,411,91],[374,96,411,94],[374,97,411,95],[374,99,411,97],[375,14,412,12,"console"],[375,21,412,19],[375,22,412,20,"log"],[375,25,412,23],[375,26,412,24],[375,83,412,81],[375,84,412,82],[377,14,414,12],[378,14,415,12],[378,18,415,18,"target"],[378,24,415,24],[378,27,415,27,"findClosestEnemyInternal"],[378,51,415,51],[378,52,415,52,"newState"],[378,60,415,60],[378,61,415,61,"enemies"],[378,68,415,68],[378,69,415,69],[379,14,416,12],[379,18,416,16,"target"],[379,24,416,22],[379,26,416,24],[380,16,417,14],[381,16,418,14],[381,20,418,20,"cloneDamage"],[381,31,418,31],[381,34,418,34,"Math"],[381,38,418,38],[381,39,418,39,"floor"],[381,44,418,44],[381,45,418,45,"newState"],[381,53,418,53],[381,54,418,54,"playerStats"],[381,65,418,65],[381,66,418,66,"attack"],[381,72,418,72],[381,75,418,75],[381,78,418,78],[381,79,418,79],[383,16,420,14],[384,16,421,14,"createProjectile"],[384,32,421,30],[384,33,421,31,"target"],[384,39,421,37],[384,41,421,39,"cloneDamage"],[384,52,421,50],[384,54,421,52,"newState"],[384,62,421,60],[384,63,421,61,"shadowClone"],[384,74,421,72],[384,75,421,73,"position"],[384,83,421,81],[384,85,421,83],[385,18,422,16,"id"],[385,20,422,18],[385,22,422,20],[385,43,422,41],[386,18,423,16,"name"],[386,22,423,20],[386,24,423,22],[386,45,423,43],[387,18,424,16,"icon"],[387,22,424,20],[387,24,424,22],[388,16,425,14],[388,17,425,15],[388,18,425,16],[389,14,426,12],[390,12,427,10],[391,10,428,8],[392,8,429,6],[394,8,431,6],[395,8,432,6],[395,12,432,10],[395,13,432,11,"isManualControlActive"],[395,34,432,32],[395,36,432,34],[396,10,433,8],[396,15,433,13],[396,19,433,17,"i"],[396,20,433,18],[396,23,433,21],[396,24,433,22],[396,26,433,24,"i"],[396,27,433,25],[396,30,433,28],[396,31,433,29],[396,33,433,31,"i"],[396,34,433,32],[396,36,433,34],[396,38,433,36],[397,12,434,10],[397,16,434,14,"newState"],[397,24,434,22],[397,25,434,23,"abilityManager"],[397,39,434,37],[397,40,434,38,"isAbilityReady"],[397,54,434,52],[397,55,434,53,"i"],[397,56,434,54],[397,57,434,55],[397,61,434,59,"newState"],[397,69,434,67],[397,70,434,68,"enemies"],[397,77,434,75],[397,78,434,76,"length"],[397,84,434,82],[397,87,434,85],[397,88,434,86],[397,90,434,88],[398,14,435,12],[398,18,435,16,"newState"],[398,26,435,24],[398,27,435,25,"abilityManager"],[398,41,435,39],[398,42,435,40,"useAbility"],[398,52,435,50],[398,53,435,51,"i"],[398,54,435,52],[398,56,435,54,"newTick"],[398,63,435,61],[398,64,435,62],[398,66,435,64],[399,16,436,14,"castAbility"],[399,27,436,25],[399,28,436,26,"newState"],[399,36,436,34],[399,38,436,36,"i"],[399,39,436,37],[399,40,436,38],[400,14,437,12],[401,12,438,10],[402,10,439,8],[403,8,440,6],[405,8,442,6],[406,8,443,6],[406,12,443,12,"deadEnemies"],[406,23,443,23],[406,26,443,26,"newState"],[406,34,443,34],[406,35,443,35,"enemies"],[406,42,443,42],[406,43,443,43,"filter"],[406,49,443,49],[406,50,443,50,"enemy"],[406,55,443,55],[406,59,443,59,"enemy"],[406,64,443,64],[406,65,443,65,"health"],[406,71,443,71],[406,75,443,75],[406,76,443,76],[406,77,443,77],[407,8,444,6,"enemiesToKill"],[407,21,444,19],[407,24,444,22],[407,25,444,23],[407,28,444,26,"deadEnemies"],[407,39,444,37],[407,40,444,38],[407,41,444,39],[407,42,444,40],[409,8,446,6],[410,8,447,6],[410,12,447,10,"deadEnemies"],[410,23,447,21],[410,24,447,22,"length"],[410,30,447,28],[410,33,447,31],[410,34,447,32],[410,36,447,34],[411,10,448,8,"console"],[411,17,448,15],[411,18,448,16,"log"],[411,21,448,19],[411,22,448,20],[411,49,448,47,"deadEnemies"],[411,60,448,58],[411,61,448,59,"length"],[411,67,448,65],[411,83,448,81],[411,85,448,83,"deadEnemies"],[411,96,448,94],[411,97,448,95,"map"],[411,100,448,98],[411,101,448,99,"e"],[411,102,448,100],[411,106,448,104],[411,109,448,107,"e"],[411,110,448,108],[411,111,448,109,"id"],[411,113,448,111],[411,117,448,115,"e"],[411,118,448,116],[411,119,448,117,"health"],[411,125,448,123],[411,130,448,128],[411,131,448,129],[411,132,448,130],[412,8,449,6],[414,8,451,6],[415,8,452,6],[415,12,452,12,"lowHealthEnemies"],[415,28,452,28],[415,31,452,31,"newState"],[415,39,452,39],[415,40,452,40,"enemies"],[415,47,452,47],[415,48,452,48,"filter"],[415,54,452,54],[415,55,452,55,"enemy"],[415,60,452,60],[415,64,452,64,"enemy"],[415,69,452,69],[415,70,452,70,"health"],[415,76,452,76],[415,80,452,80],[415,82,452,82],[415,86,452,86,"enemy"],[415,91,452,91],[415,92,452,92,"health"],[415,98,452,98],[415,101,452,101],[415,102,452,102],[415,103,452,103],[416,8,453,6],[416,12,453,10,"lowHealthEnemies"],[416,28,453,26],[416,29,453,27,"length"],[416,35,453,33],[416,38,453,36],[416,39,453,37],[416,41,453,39],[417,10,454,8,"console"],[417,17,454,15],[417,18,454,16,"log"],[417,21,454,19],[417,22,454,20],[417,61,454,59],[417,63,454,61,"lowHealthEnemies"],[417,79,454,77],[417,80,454,78,"map"],[417,83,454,81],[417,84,454,82,"e"],[417,85,454,83],[417,89,454,87],[417,92,454,90,"e"],[417,93,454,91],[417,94,454,92,"id"],[417,96,454,94],[417,100,454,98,"e"],[417,101,454,99],[417,102,454,100,"health"],[417,108,454,106],[417,112,454,110,"e"],[417,113,454,111],[417,114,454,112,"maxHealth"],[417,123,454,121],[417,128,454,126],[417,129,454,127],[417,130,454,128],[418,8,455,6],[420,8,457,6],[421,8,458,6],[421,12,458,12,"beforeCount"],[421,23,458,23],[421,26,458,26,"newState"],[421,34,458,34],[421,35,458,35,"enemies"],[421,42,458,42],[421,43,458,43,"length"],[421,49,458,49],[422,8,459,6,"newState"],[422,16,459,14],[422,17,459,15,"enemies"],[422,24,459,22],[422,27,459,25,"newState"],[422,35,459,33],[422,36,459,34,"enemies"],[422,43,459,41],[422,44,459,42,"filter"],[422,50,459,48],[422,51,459,49,"enemy"],[422,56,459,54],[422,60,459,58,"enemy"],[422,65,459,63],[422,66,459,64,"health"],[422,72,459,70],[422,75,459,73],[422,76,459,74],[422,77,459,75],[423,8,460,6],[423,12,460,12,"afterCount"],[423,22,460,22],[423,25,460,25,"newState"],[423,33,460,33],[423,34,460,34,"enemies"],[423,41,460,41],[423,42,460,42,"length"],[423,48,460,48],[424,8,462,6],[424,12,462,10,"beforeCount"],[424,23,462,21],[424,28,462,26,"afterCount"],[424,38,462,36],[424,40,462,38],[425,10,463,8,"console"],[425,17,463,15],[425,18,463,16,"log"],[425,21,463,19],[425,22,463,20],[425,52,463,50,"beforeCount"],[425,63,463,61],[425,66,463,64,"afterCount"],[425,76,463,74],[425,102,463,100],[425,103,463,101],[426,8,464,6],[428,8,466,6],[429,8,467,6],[430,8,468,6],[430,12,468,12,"MAX_ENEMIES"],[430,23,468,23],[430,26,468,26],[430,28,468,28],[430,29,468,29],[430,30,468,30],[431,8,469,6],[431,12,469,12,"MIN_SPAWN_DELAY"],[431,27,469,27],[431,30,469,30],[431,33,469,33],[431,34,469,34],[431,35,469,35],[432,8,470,6],[432,12,470,12,"now"],[432,15,470,15],[432,18,470,18,"Date"],[432,22,470,22],[432,23,470,23,"now"],[432,26,470,26],[432,27,470,27],[432,28,470,28],[433,8,471,6],[433,12,471,12,"hasBoss"],[433,19,471,19],[433,22,471,22,"newState"],[433,30,471,30],[433,31,471,31,"enemies"],[433,38,471,38],[433,39,471,39,"some"],[433,43,471,43],[433,44,471,44,"enemy"],[433,49,471,49],[433,53,471,53,"enemy"],[433,58,471,58],[433,59,471,59,"isBoss"],[433,65,471,65],[433,66,471,66],[435,8,473,6],[436,8,474,6],[436,12,474,10],[436,13,474,11,"newState"],[436,21,474,19],[436,22,474,20,"lastSpawnTime"],[436,35,474,33],[436,37,474,35],[437,10,475,8,"newState"],[437,18,475,16],[437,19,475,17,"lastSpawnTime"],[437,32,475,30],[437,35,475,33,"now"],[437,38,475,36],[438,8,476,6],[439,8,478,6,"console"],[439,15,478,13],[439,16,478,14,"log"],[439,19,478,17],[439,20,478,18],[439,53,478,51,"newState"],[439,61,478,59],[439,62,478,60,"enemies"],[439,69,478,67],[439,70,478,68,"length"],[439,76,478,74],[439,85,478,83,"MAX_ENEMIES"],[439,96,478,94],[439,109,478,107,"hasBoss"],[439,116,478,114],[439,118,478,116],[439,119,478,117],[441,8,480,6],[442,8,481,6],[442,12,481,10],[442,13,481,11,"hasBoss"],[442,20,481,18],[442,24,481,22,"newState"],[442,32,481,30],[442,33,481,31,"enemies"],[442,40,481,38],[442,41,481,39,"length"],[442,47,481,45],[442,50,481,48,"MAX_ENEMIES"],[442,61,481,59],[442,65,481,64,"now"],[442,68,481,67],[442,71,481,70,"newState"],[442,79,481,78],[442,80,481,79,"lastSpawnTime"],[442,93,481,92],[442,97,481,97,"MIN_SPAWN_DELAY"],[442,112,481,112],[442,114,481,114],[443,10,482,8,"console"],[443,17,482,15],[443,18,482,16,"log"],[443,21,482,19],[443,22,482,20],[443,43,482,41,"newState"],[443,51,482,49],[443,52,482,50,"enemies"],[443,59,482,57],[443,60,482,58,"length"],[443,66,482,64],[443,69,482,67],[443,70,482,68],[443,74,482,72,"MAX_ENEMIES"],[443,85,482,83],[443,87,482,85],[443,88,482,86],[444,10,483,8,"spawnTestEnemy"],[444,24,483,22],[444,25,483,23,"newState"],[444,33,483,31],[444,34,483,32],[445,10,484,8,"newState"],[445,18,484,16],[445,19,484,17,"lastSpawnTime"],[445,32,484,30],[445,35,484,33,"now"],[445,38,484,36],[446,8,485,6],[447,8,487,6],[447,15,487,13,"newState"],[447,23,487,21],[448,6,488,4],[448,7,488,5],[448,47,488,6],[450,6,490,4],[451,6,491,4,"console"],[451,13,491,11],[451,14,491,12,"log"],[451,17,491,15],[451,18,491,16],[451,50,491,48,"enemiesToKill"],[451,63,491,61],[451,64,491,62,"length"],[451,70,491,68],[451,101,491,99],[451,102,491,100],[452,6,493,4,"enemiesToKill"],[452,19,493,17],[452,20,493,18,"forEach"],[452,27,493,25],[452,28,493,26],[452,29,493,27,"enemy"],[452,34,493,32],[452,36,493,34,"index"],[452,41,493,39],[452,46,493,44],[453,8,494,6,"console"],[453,15,494,13],[453,16,494,14,"log"],[453,19,494,17],[453,20,494,18],[453,57,494,55,"index"],[453,62,494,60],[453,65,494,63],[453,66,494,64],[453,70,494,68,"enemiesToKill"],[453,83,494,81],[453,84,494,82,"length"],[453,90,494,88],[453,104,494,102,"enemy"],[453,109,494,107],[453,110,494,108,"id"],[453,112,494,110],[453,114,494,112],[453,115,494,113],[454,8,495,6,"handleEnemyKill"],[454,23,495,21],[454,24,495,22,"enemy"],[454,29,495,27],[454,30,495,28],[455,6,496,4],[455,7,496,5],[455,8,496,6],[456,4,497,2],[456,5,497,3],[456,7,497,5],[456,8,497,6,"handleEnemyKill"],[456,23,497,21],[456,24,497,22],[456,25,497,23],[456,26,497,24],[456,27,497,25],[458,4,499,2],[459,4,500,2],[459,8,500,8,"findClosestEnemyInternal"],[459,32,500,32],[459,35,500,36,"enemies"],[459,42,500,58],[459,46,500,83],[460,6,501,4],[460,10,501,8,"enemies"],[460,17,501,15],[460,18,501,16,"length"],[460,24,501,22],[460,29,501,27],[460,30,501,28],[460,32,501,30],[460,39,501,37],[460,43,501,41],[462,6,503,4],[463,6,504,4],[463,10,504,10,"SCREEN_WIDTH"],[463,22,504,22],[463,25,504,25],[463,28,504,28],[464,6,505,4],[464,10,505,10,"GAME_AREA_HEIGHT"],[464,26,505,26],[464,29,505,29],[464,32,505,32],[464,35,505,35],[464,38,505,38],[464,39,505,39],[464,40,505,40],[465,6,506,4],[465,10,506,10,"ninjaX"],[465,16,506,16],[465,19,506,19,"SCREEN_WIDTH"],[465,31,506,31],[465,34,506,34],[465,35,506,35],[466,6,507,4],[466,10,507,10,"ninjaY"],[466,16,507,16],[466,19,507,19,"GAME_AREA_HEIGHT"],[466,35,507,35],[466,38,507,38],[466,39,507,39],[467,6,509,4],[467,10,509,8,"closestEnemy"],[467,22,509,20],[467,25,509,23,"enemies"],[467,32,509,30],[467,33,509,31],[467,34,509,32],[467,35,509,33],[468,6,510,4],[468,10,510,8,"closestDistance"],[468,25,510,23],[468,28,510,26,"Infinity"],[468,36,510,34],[469,6,512,4,"enemies"],[469,13,512,11],[469,14,512,12,"forEach"],[469,21,512,19],[469,22,512,20,"enemy"],[469,27,512,25],[469,31,512,29],[470,8,513,6],[470,12,513,12,"distance"],[470,20,513,20],[470,23,513,23,"Math"],[470,27,513,27],[470,28,513,28,"sqrt"],[470,32,513,32],[470,33,514,8,"Math"],[470,37,514,12],[470,38,514,13,"pow"],[470,41,514,16],[470,42,514,17,"enemy"],[470,47,514,22],[470,48,514,23,"position"],[470,56,514,31],[470,57,514,32,"x"],[470,58,514,33],[470,61,514,36,"ninjaX"],[470,67,514,42],[470,69,514,44],[470,70,514,45],[470,71,514,46],[470,74,515,8,"Math"],[470,78,515,12],[470,79,515,13,"pow"],[470,82,515,16],[470,83,515,17,"enemy"],[470,88,515,22],[470,89,515,23,"position"],[470,97,515,31],[470,98,515,32,"y"],[470,99,515,33],[470,102,515,36,"ninjaY"],[470,108,515,42],[470,110,515,44],[470,111,515,45],[470,112,516,6],[470,113,516,7],[471,8,518,6],[471,12,518,10,"distance"],[471,20,518,18],[471,23,518,21,"closestDistance"],[471,38,518,36],[471,40,518,38],[472,10,519,8,"closestDistance"],[472,25,519,23],[472,28,519,26,"distance"],[472,36,519,34],[473,10,520,8,"closestEnemy"],[473,22,520,20],[473,25,520,23,"enemy"],[473,30,520,28],[474,8,521,6],[475,6,522,4],[475,7,522,5],[475,8,522,6],[476,6,524,4,"console"],[476,13,524,11],[476,14,524,12,"log"],[476,17,524,15],[476,18,524,16],[476,60,524,58,"closestDistance"],[476,75,524,73],[476,76,524,74,"toFixed"],[476,83,524,81],[476,84,524,82],[476,85,524,83],[476,86,524,84],[476,88,524,86],[476,89,524,87],[477,6,525,4],[477,13,525,11,"closestEnemy"],[477,25,525,23],[478,4,526,2],[478,5,526,3],[480,4,528,2],[481,4,529,2],[481,8,529,8,"findClosestEnemy"],[481,24,529,24],[481,27,529,27,"findClosestEnemy"],[481,28,529,27],[481,33,529,53],[482,6,530,4],[482,13,530,11,"findClosestEnemyInternal"],[482,37,530,35],[482,38,530,36,"combatState"],[482,49,530,47],[482,50,530,48,"enemies"],[482,57,530,55],[482,58,530,56],[483,4,531,2],[483,5,531,3],[485,4,533,2],[486,4,534,2],[486,8,534,2,"_useState7"],[486,18,534,2],[486,21,534,58],[486,25,534,58,"useState"],[486,31,534,66],[486,32,534,66,"useState"],[486,40,534,66],[486,42,534,91],[487,8,534,93,"x"],[487,9,534,94],[487,11,534,96],[487,12,534,97],[488,8,534,99,"y"],[488,9,534,100],[488,11,534,102],[489,6,534,104],[489,7,534,105],[489,8,534,106],[490,6,534,106,"_useState8"],[490,16,534,106],[490,23,534,106,"_slicedToArray"],[490,37,534,106],[490,38,534,106,"default"],[490,45,534,106],[490,47,534,106,"_useState7"],[490,57,534,106],[491,6,534,9,"currentNinjaPosition"],[491,26,534,29],[491,29,534,29,"_useState8"],[491,39,534,29],[492,6,534,31,"setCurrentNinjaPosition"],[492,29,534,54],[492,32,534,54,"_useState8"],[492,42,534,54],[493,4,535,2],[493,8,535,2,"_useState9"],[493,18,535,2],[493,21,535,60],[493,25,535,60,"useState"],[493,31,535,68],[493,32,535,68,"useState"],[493,40,535,68],[493,42,535,69],[493,47,535,74],[493,48,535,75],[494,6,535,75,"_useState0"],[494,16,535,75],[494,23,535,75,"_slicedToArray"],[494,37,535,75],[494,38,535,75,"default"],[494,45,535,75],[494,47,535,75,"_useState9"],[494,57,535,75],[495,6,535,9,"isManualControlActive"],[495,27,535,30],[495,30,535,30,"_useState0"],[495,40,535,30],[496,6,535,32,"setIsManualControlActive"],[496,30,535,56],[496,33,535,56,"_useState0"],[496,43,535,56],[498,4,537,2],[499,4,538,2],[499,8,538,8,"updateNinjaPosition"],[499,27,538,27],[499,30,538,30],[499,34,538,30,"useCallback"],[499,40,538,41],[499,41,538,41,"useCallback"],[499,52,538,41],[499,54,538,43,"newPosition"],[499,65,538,78],[499,69,538,83],[500,6,539,4,"setCurrentNinjaPosition"],[500,29,539,27],[500,30,539,28,"newPosition"],[500,41,539,39],[500,42,539,40],[501,4,540,2],[501,5,540,3],[501,7,540,5],[501,9,540,7],[501,10,540,8],[503,4,542,2],[504,4,543,2],[504,8,543,8,"setManualControlActive"],[504,30,543,30],[504,33,543,33],[504,37,543,33,"useCallback"],[504,43,543,44],[504,44,543,44,"useCallback"],[504,55,543,44],[504,57,543,46,"active"],[504,63,543,61],[504,67,543,66],[505,6,544,4,"setIsManualControlActive"],[505,30,544,28],[505,31,544,29,"active"],[505,37,544,35],[505,38,544,36],[506,6,545,4,"console"],[506,13,545,11],[506,14,545,12,"log"],[506,17,545,15],[506,18,545,16],[506,39,545,37,"active"],[506,45,545,43],[506,48,545,46],[506,59,545,57],[506,62,545,60],[506,75,545,73],[506,88,545,86,"active"],[506,94,545,92],[506,97,545,95],[506,105,545,103],[506,108,545,106],[506,117,545,115],[506,119,545,117],[506,120,545,118],[507,4,546,2],[507,5,546,3],[507,7,546,5],[507,9,546,7],[507,10,546,8],[509,4,548,2],[510,4,549,2],[510,8,549,8,"handleProjectileHit"],[510,27,549,27],[510,30,549,31,"projectile"],[510,40,549,59],[510,44,549,64],[511,6,550,4,"console"],[511,13,550,11],[511,14,550,12,"log"],[511,17,550,15],[511,18,550,16],[511,35,550,33,"projectile"],[511,45,550,43],[511,46,550,44,"id"],[511,48,550,46],[511,62,550,60,"projectile"],[511,72,550,70],[511,73,550,71,"targetEnemyId"],[511,86,550,84],[511,94,550,92,"projectile"],[511,104,550,102],[511,105,550,103,"damage"],[511,111,550,109],[511,120,550,118],[511,121,550,119],[512,6,552,4,"setCombatState"],[512,20,552,18],[512,21,552,19,"prev"],[512,25,552,23],[512,29,552,27],[513,8,553,6],[513,12,553,12,"newState"],[513,20,553,20],[513,23,553,23],[514,10,553,25],[514,13,553,28,"prev"],[515,8,553,33],[515,9,553,34],[517,8,555,6],[518,8,556,6],[518,12,556,12,"enemyIndex"],[518,22,556,22],[518,25,556,25,"newState"],[518,33,556,33],[518,34,556,34,"enemies"],[518,41,556,41],[518,42,556,42,"findIndex"],[518,51,556,51],[518,52,556,52,"e"],[518,53,556,53],[518,57,556,57,"e"],[518,58,556,58],[518,59,556,59,"id"],[518,61,556,61],[518,66,556,66,"projectile"],[518,76,556,76],[518,77,556,77,"targetEnemyId"],[518,90,556,90],[518,91,556,91],[519,8,557,6],[519,12,557,10,"enemyIndex"],[519,22,557,20],[519,26,557,24],[519,27,557,25],[519,29,557,27],[520,10,558,8,"newState"],[520,18,558,16],[520,19,558,17,"enemies"],[520,26,558,24],[520,29,558,27],[520,30,558,28],[520,33,558,31,"newState"],[520,41,558,39],[520,42,558,40,"enemies"],[520,49,558,47],[520,50,558,48],[521,10,559,8,"newState"],[521,18,559,16],[521,19,559,17,"enemies"],[521,26,559,24],[521,27,559,25,"enemyIndex"],[521,37,559,35],[521,38,559,36],[521,41,559,39],[522,12,560,10],[522,15,560,13,"newState"],[522,23,560,21],[522,24,560,22,"enemies"],[522,31,560,29],[522,32,560,30,"enemyIndex"],[522,42,560,40],[522,43,560,41],[523,12,561,10,"health"],[523,18,561,16],[523,20,561,18,"newState"],[523,28,561,26],[523,29,561,27,"enemies"],[523,36,561,34],[523,37,561,35,"enemyIndex"],[523,47,561,45],[523,48,561,46],[523,49,561,47,"health"],[523,55,561,53],[523,58,561,56,"projectile"],[523,68,561,66],[523,69,561,67,"damage"],[523,75,561,73],[524,12,562,10,"lastDamaged"],[524,23,562,21],[524,25,562,23,"combatEngine"],[524,44,562,35],[524,45,562,35,"combatEngine"],[524,57,562,35],[524,58,562,36,"getCurrentTick"],[524,72,562,50],[524,73,562,51],[525,10,563,8],[525,11,563,9],[526,10,565,8,"console"],[526,17,565,15],[526,18,565,16,"log"],[526,21,565,19],[526,22,565,20],[526,34,565,32,"projectile"],[526,44,565,42],[526,45,565,43,"targetEnemyId"],[526,58,565,56],[526,70,565,68,"newState"],[526,78,565,76],[526,79,565,77,"enemies"],[526,86,565,84],[526,87,565,85,"enemyIndex"],[526,97,565,95],[526,98,565,96],[526,99,565,97,"health"],[526,105,565,103],[526,109,565,107,"newState"],[526,117,565,115],[526,118,565,116,"enemies"],[526,125,565,123],[526,126,565,124,"enemyIndex"],[526,136,565,134],[526,137,565,135],[526,138,565,136,"maxHealth"],[526,147,565,145],[526,149,565,147],[526,150,565,148],[527,8,566,6],[528,8,568,6],[528,15,568,13,"newState"],[528,23,568,21],[529,6,569,4],[529,7,569,5],[529,8,569,6],[531,6,571,4],[532,6,572,4,"setProjectiles"],[532,20,572,18],[532,21,572,19,"prev"],[532,25,572,23],[532,29,572,27,"prev"],[532,33,572,31],[532,34,572,32,"filter"],[532,40,572,38],[532,41,572,39,"p"],[532,42,572,40],[532,46,572,44,"p"],[532,47,572,45],[532,48,572,46,"id"],[532,50,572,48],[532,55,572,53,"projectile"],[532,65,572,63],[532,66,572,64,"id"],[532,68,572,66],[532,69,572,67],[532,70,572,68],[533,4,573,2],[533,5,573,3],[535,4,575,2],[536,4,576,2],[536,8,576,8,"castAbility"],[536,19,576,19],[536,22,576,22,"castAbility"],[536,23,576,23,"state"],[536,28,576,41],[536,30,576,43,"slotIndex"],[536,39,576,60],[536,44,576,65],[537,6,577,4],[537,10,577,10,"deck"],[537,14,577,14],[537,17,577,17,"state"],[537,22,577,22],[537,23,577,23,"abilityManager"],[537,37,577,37],[537,38,577,38,"getDeck"],[537,45,577,45],[537,46,577,46],[537,47,577,47],[538,6,578,4],[538,10,578,10,"ability"],[538,17,578,17],[538,20,578,20,"deck"],[538,24,578,24],[538,25,578,25,"slots"],[538,30,578,30],[538,31,578,31,"slotIndex"],[538,40,578,40],[538,41,578,41],[539,6,579,4],[539,10,579,8],[539,11,579,9,"ability"],[539,18,579,16],[539,20,579,18],[541,6,581,4],[542,6,582,4],[542,10,582,8,"damage"],[542,16,582,14],[542,19,582,17,"ability"],[542,26,582,24],[542,27,582,25,"stats"],[542,32,582,30],[542,33,582,31,"baseDamage"],[542,43,582,41],[544,6,584,4],[545,6,585,4,"deck"],[545,10,585,8],[545,11,585,9,"activeSynergies"],[545,26,585,24],[545,27,585,25,"forEach"],[545,34,585,32],[545,35,585,33,"synergy"],[545,42,585,40],[545,46,585,44],[546,8,586,6],[546,12,586,10,"synergy"],[546,19,586,17],[546,20,586,18,"bonus"],[546,25,586,23],[546,26,586,24,"damageBonus"],[546,37,586,35],[546,41,587,10,"synergy"],[546,48,587,17],[546,49,587,18,"requiredTags"],[546,61,587,30],[546,62,587,31,"some"],[546,66,587,35],[546,67,587,36,"tag"],[546,70,587,39],[546,74,587,43,"ability"],[546,81,587,50],[546,82,587,51,"tags"],[546,86,587,55],[546,87,587,56,"includes"],[546,95,587,64],[546,96,587,65,"tag"],[546,99,587,68],[546,100,587,69],[546,101,587,70],[546,103,587,72],[547,10,588,8,"damage"],[547,16,588,14],[547,20,588,19],[547,21,588,20],[547,24,588,23,"synergy"],[547,31,588,30],[547,32,588,31,"bonus"],[547,37,588,36],[547,38,588,37,"damageBonus"],[547,49,588,48],[547,52,588,51],[547,55,588,55],[548,8,589,6],[549,6,590,4],[549,7,590,5],[549,8,590,6],[551,6,592,4],[552,6,593,4],[552,10,593,10,"isAOE"],[552,15,593,15],[552,18,593,18,"ability"],[552,25,593,25],[552,26,593,26,"effects"],[552,33,593,33],[552,34,593,34,"includes"],[552,42,593,42],[552,43,593,43],[552,48,593,48],[552,49,593,49],[552,53,593,53,"ability"],[552,60,593,60],[552,61,593,61,"stats"],[552,66,593,66],[552,67,593,67,"aoeRadius"],[552,76,593,76],[553,6,595,4],[553,10,595,8,"isAOE"],[553,15,595,13],[553,17,595,15],[554,8,596,6,"console"],[554,15,596,13],[554,16,596,14,"log"],[554,19,596,17],[554,20,596,18],[554,39,596,37,"ability"],[554,46,596,44],[554,47,596,45,"name"],[554,51,596,49],[554,67,596,65,"ability"],[554,74,596,72],[554,75,596,73,"stats"],[554,80,596,78],[554,81,596,79,"aoeRadius"],[554,90,596,88],[554,92,596,90],[554,93,596,91],[556,8,598,6],[557,8,599,6],[557,12,599,12,"ninjaX"],[557,18,599,18],[557,21,599,21,"currentNinjaPosition"],[557,41,599,41],[557,42,599,42,"x"],[557,43,599,43],[557,46,599,46],[557,48,599,48],[557,49,599,49],[557,50,599,50],[558,8,600,6],[558,12,600,12,"ninjaY"],[558,18,600,18],[558,21,600,21,"currentNinjaPosition"],[558,41,600,41],[558,42,600,42,"y"],[558,43,600,43],[558,46,600,46],[558,48,600,48],[559,8,601,6],[559,12,601,12,"aoeRadius"],[559,21,601,21],[559,24,601,24,"ability"],[559,31,601,31],[559,32,601,32,"stats"],[559,37,601,37],[559,38,601,38,"aoeRadius"],[559,47,601,47],[560,8,603,6],[560,12,603,12,"enemiesInRange"],[560,26,603,26],[560,29,603,29,"state"],[560,34,603,34],[560,35,603,35,"enemies"],[560,42,603,42],[560,43,603,43,"filter"],[560,49,603,49],[560,50,603,50,"enemy"],[560,55,603,55],[560,59,603,59],[561,10,604,8],[561,14,604,14,"enemyX"],[561,20,604,20],[561,23,604,23,"enemy"],[561,28,604,28],[561,29,604,29,"position"],[561,37,604,37],[561,38,604,38,"x"],[561,39,604,39],[561,42,604,42],[561,46,604,46],[561,47,604,47],[561,48,604,48],[562,10,605,8],[562,14,605,14,"enemyY"],[562,20,605,20],[562,23,605,23,"enemy"],[562,28,605,28],[562,29,605,29,"position"],[562,37,605,37],[562,38,605,38,"y"],[562,39,605,39],[562,42,605,42],[562,46,605,46],[563,10,606,8],[563,14,606,14,"distance"],[563,22,606,22],[563,25,606,25,"Math"],[563,29,606,29],[563,30,606,30,"sqrt"],[563,34,606,34],[563,35,606,35,"Math"],[563,39,606,39],[563,40,606,40,"pow"],[563,43,606,43],[563,44,606,44,"enemyX"],[563,50,606,50],[563,53,606,53,"ninjaX"],[563,59,606,59],[563,61,606,61],[563,62,606,62],[563,63,606,63],[563,66,606,66,"Math"],[563,70,606,70],[563,71,606,71,"pow"],[563,74,606,74],[563,75,606,75,"enemyY"],[563,81,606,81],[563,84,606,84,"ninjaY"],[563,90,606,90],[563,92,606,92],[563,93,606,93],[563,94,606,94],[563,95,606,95],[564,10,607,8],[564,17,607,15,"distance"],[564,25,607,23],[564,29,607,27,"aoeRadius"],[564,38,607,36],[565,8,608,6],[565,9,608,7],[565,10,608,8],[566,8,610,6,"console"],[566,15,610,13],[566,16,610,14,"log"],[566,19,610,17],[566,20,610,18],[566,45,610,43,"enemiesInRange"],[566,59,610,57],[566,60,610,58,"length"],[566,66,610,64],[566,88,610,86,"aoeRadius"],[566,97,610,95],[566,107,610,105],[566,108,610,106],[568,8,612,6],[569,8,613,6,"enemiesInRange"],[569,22,613,20],[569,23,613,21,"forEach"],[569,30,613,28],[569,31,613,29,"enemy"],[569,36,613,34],[569,40,613,38],[570,10,614,8],[570,14,614,14,"damageResult"],[570,26,614,26],[570,29,614,29,"DamageCalculator"],[570,48,614,45],[570,49,614,45,"DamageCalculator"],[570,65,614,45],[570,66,614,46,"calculateDamage"],[570,81,614,61],[570,82,614,62,"damage"],[570,88,614,68],[570,90,614,70,"state"],[570,95,614,75],[570,96,614,76,"playerStats"],[570,107,614,87],[570,109,614,89,"enemy"],[570,114,614,94],[570,115,614,95,"stats"],[570,120,614,100],[570,121,614,101],[571,10,615,8,"createProjectile"],[571,26,615,24],[571,27,615,25,"enemy"],[571,32,615,30],[571,34,615,32,"damageResult"],[571,46,615,44],[571,47,615,45,"damage"],[571,53,615,51],[571,55,615,53,"currentNinjaPosition"],[571,75,615,73],[571,77,615,75],[572,12,616,10,"id"],[572,14,616,12],[572,16,616,14,"ability"],[572,23,616,21],[572,24,616,22,"id"],[572,26,616,24],[573,12,617,10,"name"],[573,16,617,14],[573,18,617,16,"ability"],[573,25,617,23],[573,26,617,24,"name"],[573,30,617,28],[574,12,618,10,"icon"],[574,16,618,14],[574,18,618,16,"ability"],[574,25,618,23],[574,26,618,24,"icon"],[575,10,619,8],[575,11,619,9],[575,12,619,10],[576,10,621,8,"console"],[576,17,621,15],[576,18,621,16,"log"],[576,21,621,19],[576,22,621,20],[576,37,621,35,"enemy"],[576,42,621,40],[576,43,621,41,"name"],[576,47,621,45],[576,55,621,53,"damageResult"],[576,67,621,65],[576,68,621,66,"damage"],[576,74,621,72],[576,83,621,81],[576,84,621,82],[577,8,622,6],[577,9,622,7],[577,10,622,8],[578,8,624,6,"console"],[578,15,624,13],[578,16,624,14,"log"],[578,19,624,17],[578,20,624,18],[578,26,624,24,"ability"],[578,33,624,31],[578,34,624,32,"name"],[578,38,624,36],[578,56,624,54,"enemiesInRange"],[578,70,624,68],[578,71,624,69,"length"],[578,77,624,75],[578,93,624,91,"damage"],[578,99,624,97],[578,118,624,116],[578,119,624,117],[579,6,626,4],[579,7,626,5],[579,13,626,11],[580,8,627,6],[581,8,628,6],[581,12,628,12,"target"],[581,18,628,18],[581,21,628,21,"findClosestEnemyInternal"],[581,45,628,45],[581,46,628,46,"state"],[581,51,628,51],[581,52,628,52,"enemies"],[581,59,628,59],[581,60,628,60],[582,8,629,6],[582,12,629,10],[582,13,629,11,"target"],[582,19,629,17],[582,21,629,19],[583,8,631,6],[583,12,631,12,"damageResult"],[583,24,631,24],[583,27,631,27,"DamageCalculator"],[583,46,631,43],[583,47,631,43,"DamageCalculator"],[583,63,631,43],[583,64,631,44,"calculateDamage"],[583,79,631,59],[583,80,631,60,"damage"],[583,86,631,66],[583,88,631,68,"state"],[583,93,631,73],[583,94,631,74,"playerStats"],[583,105,631,85],[583,107,631,87,"target"],[583,113,631,93],[583,114,631,94,"stats"],[583,119,631,99],[583,120,631,100],[585,8,633,6],[586,8,634,6,"createProjectile"],[586,24,634,22],[586,25,634,23,"target"],[586,31,634,29],[586,33,634,31,"damageResult"],[586,45,634,43],[586,46,634,44,"damage"],[586,52,634,50],[586,54,634,52,"currentNinjaPosition"],[586,74,634,72],[586,76,634,74],[587,10,635,8,"id"],[587,12,635,10],[587,14,635,12,"ability"],[587,21,635,19],[587,22,635,20,"id"],[587,24,635,22],[588,10,636,8,"name"],[588,14,636,12],[588,16,636,14,"ability"],[588,23,636,21],[588,24,636,22,"name"],[588,28,636,26],[589,10,637,8,"icon"],[589,14,637,12],[589,16,637,14,"ability"],[589,23,637,21],[589,24,637,22,"icon"],[590,8,638,6],[590,9,638,7],[590,10,638,8],[591,8,640,6,"console"],[591,15,640,13],[591,16,640,14,"log"],[591,19,640,17],[591,20,640,18],[591,26,640,24,"ability"],[591,33,640,31],[591,34,640,32,"name"],[591,38,640,36],[591,66,640,64,"damageResult"],[591,78,640,76],[591,79,640,77,"damage"],[591,85,640,83],[591,95,640,93,"damageResult"],[591,107,640,105],[591,108,640,106,"isCritical"],[591,118,640,116],[591,121,640,119],[591,131,640,129],[591,134,640,132],[591,136,640,134],[591,138,640,136],[591,139,640,137],[592,6,641,4],[594,6,643,4],[595,6,644,4],[595,10,644,8,"ability"],[595,17,644,15],[595,18,644,16,"effects"],[595,25,644,23],[595,26,644,24,"includes"],[595,34,644,32],[595,35,644,33],[595,40,644,38],[595,41,644,39],[595,45,644,43,"ability"],[595,52,644,50],[595,53,644,51,"stats"],[595,58,644,56],[595,59,644,57,"duration"],[595,67,644,65],[595,69,644,67],[596,8,645,6],[596,12,645,12,"targets"],[596,19,645,19],[596,22,645,22,"isAOE"],[596,27,645,27],[596,30,646,8,"state"],[596,35,646,13],[596,36,646,14,"enemies"],[596,43,646,21],[596,44,646,22,"filter"],[596,50,646,28],[596,51,646,29,"enemy"],[596,56,646,34],[596,60,646,38],[597,10,647,10],[597,14,647,16,"ninjaX"],[597,20,647,22],[597,23,647,25,"currentNinjaPosition"],[597,43,647,45],[597,44,647,46,"x"],[597,45,647,47],[597,48,647,50],[597,50,647,52],[598,10,648,10],[598,14,648,16,"ninjaY"],[598,20,648,22],[598,23,648,25,"currentNinjaPosition"],[598,43,648,45],[598,44,648,46,"y"],[598,45,648,47],[598,48,648,50],[598,50,648,52],[599,10,649,10],[599,14,649,16,"enemyX"],[599,20,649,22],[599,23,649,25,"enemy"],[599,28,649,30],[599,29,649,31,"position"],[599,37,649,39],[599,38,649,40,"x"],[599,39,649,41],[599,42,649,44],[599,46,649,48],[600,10,650,10],[600,14,650,16,"enemyY"],[600,20,650,22],[600,23,650,25,"enemy"],[600,28,650,30],[600,29,650,31,"position"],[600,37,650,39],[600,38,650,40,"y"],[600,39,650,41],[600,42,650,44],[600,46,650,48],[601,10,651,10],[601,14,651,16,"distance"],[601,22,651,24],[601,25,651,27,"Math"],[601,29,651,31],[601,30,651,32,"sqrt"],[601,34,651,36],[601,35,651,37,"Math"],[601,39,651,41],[601,40,651,42,"pow"],[601,43,651,45],[601,44,651,46,"enemyX"],[601,50,651,52],[601,53,651,55,"ninjaX"],[601,59,651,61],[601,61,651,63],[601,62,651,64],[601,63,651,65],[601,66,651,68,"Math"],[601,70,651,72],[601,71,651,73,"pow"],[601,74,651,76],[601,75,651,77,"enemyY"],[601,81,651,83],[601,84,651,86,"ninjaY"],[601,90,651,92],[601,92,651,94],[601,93,651,95],[601,94,651,96],[601,95,651,97],[602,10,652,10],[602,17,652,17,"distance"],[602,25,652,25],[602,29,652,29,"ability"],[602,36,652,36],[602,37,652,37,"stats"],[602,42,652,42],[602,43,652,43,"aoeRadius"],[602,52,652,52],[603,8,653,8],[603,9,653,9],[603,10,653,10],[603,13,654,8],[603,14,654,9,"findClosestEnemyInternal"],[603,38,654,33],[603,39,654,34,"state"],[603,44,654,39],[603,45,654,40,"enemies"],[603,52,654,47],[603,53,654,48],[603,54,654,49],[603,55,654,50,"filter"],[603,61,654,56],[603,62,654,57,"Boolean"],[603,69,654,64],[603,70,654,65],[604,8,656,6,"targets"],[604,15,656,13],[604,16,656,14,"forEach"],[604,23,656,21],[604,24,656,22,"target"],[604,30,656,28],[604,34,656,32],[605,10,657,8,"state"],[605,15,657,13],[605,16,657,14,"statusEffects"],[605,29,657,27],[605,30,657,28,"addEffect"],[605,39,657,37],[605,40,657,38,"target"],[605,46,657,44],[605,47,657,45,"id"],[605,49,657,47],[605,51,657,49],[606,12,658,10,"id"],[606,14,658,12],[606,16,658,14],[606,19,658,17,"ability"],[606,26,658,24],[606,27,658,25,"id"],[606,29,658,27],[606,35,658,33],[607,12,659,10,"type"],[607,16,659,14],[607,18,659,16],[607,23,659,21],[608,12,660,10,"remainingTicks"],[608,26,660,24],[608,28,660,26,"Math"],[608,32,660,30],[608,33,660,31,"floor"],[608,38,660,36],[608,39,660,37,"ability"],[608,46,660,44],[608,47,660,45,"stats"],[608,52,660,50],[608,53,660,51,"duration"],[608,61,660,59],[608,64,660,62],[608,66,660,64],[608,67,660,65],[609,12,661,10,"tickInterval"],[609,24,661,22],[609,26,661,24],[609,28,661,26],[610,12,662,10,"lastTick"],[610,20,662,18],[610,22,662,20,"state"],[610,27,662,25],[610,28,662,26,"currentTick"],[610,39,662,37],[611,12,663,10,"value"],[611,17,663,15],[611,19,663,17,"Math"],[611,23,663,21],[611,24,663,22,"floor"],[611,29,663,27],[611,30,663,28,"damage"],[611,36,663,34],[611,39,663,37],[611,42,663,40],[611,43,663,41],[612,12,664,10,"stackable"],[612,21,664,19],[612,23,664,21],[613,10,665,8],[613,11,665,9],[613,12,665,10],[614,8,666,6],[614,9,666,7],[614,10,666,8],[615,6,667,4],[617,6,669,4],[618,6,670,4],[618,10,670,8,"ability"],[618,17,670,15],[618,18,670,16,"effects"],[618,25,670,23],[618,26,670,24,"includes"],[618,34,670,32],[618,35,670,33],[618,41,670,39],[618,42,670,40],[618,46,670,44,"ability"],[618,53,670,51],[618,54,670,52,"id"],[618,56,670,54],[618,61,670,59],[618,75,670,73],[618,77,670,75],[619,8,671,6,"console"],[619,15,671,13],[619,16,671,14,"log"],[619,19,671,17],[619,20,671,18],[619,66,671,64,"ability"],[619,73,671,71],[619,74,671,72,"stats"],[619,79,671,77],[619,80,671,78,"duration"],[619,88,671,86],[619,98,671,96],[619,99,671,97],[621,8,673,6],[622,8,674,6],[622,12,674,12,"cloneX"],[622,18,674,18],[622,21,674,21,"currentNinjaPosition"],[622,41,674,41],[622,42,674,42,"x"],[622,43,674,43],[622,46,674,46],[622,48,674,48],[622,49,674,49],[622,50,674,50],[623,8,675,6],[623,12,675,12,"cloneY"],[623,18,675,18],[623,21,675,21,"currentNinjaPosition"],[623,41,675,41],[623,42,675,42,"y"],[623,43,675,43],[623,46,675,46],[623,48,675,48],[623,49,675,49],[623,50,675,50],[625,8,677,6,"state"],[625,13,677,11],[625,14,677,12,"shadowClone"],[625,25,677,23],[625,28,677,26],[626,10,678,8,"id"],[626,12,678,10],[626,14,678,12],[626,30,678,28,"Date"],[626,34,678,32],[626,35,678,33,"now"],[626,38,678,36],[626,39,678,37],[626,40,678,38],[626,42,678,40],[627,10,679,8,"remainingTicks"],[627,24,679,22],[627,26,679,24,"Math"],[627,30,679,28],[627,31,679,29,"floor"],[627,36,679,34],[627,37,679,35,"ability"],[627,44,679,42],[627,45,679,43,"stats"],[627,50,679,48],[627,51,679,49,"duration"],[627,59,679,57],[627,62,679,60],[627,64,679,62],[627,65,679,63],[628,10,679,65],[629,10,680,8,"position"],[629,18,680,16],[629,20,680,18],[630,12,680,20,"x"],[630,13,680,21],[630,15,680,23,"cloneX"],[630,21,680,29],[631,12,680,31,"y"],[631,13,680,32],[631,15,680,34,"cloneY"],[632,10,680,41],[632,11,680,42],[633,10,681,8,"damageMultiplier"],[633,26,681,24],[633,28,681,26],[633,31,681,29],[633,32,681,31],[634,8,682,6],[634,9,682,7],[635,8,684,6,"console"],[635,15,684,13],[635,16,684,14,"log"],[635,19,684,17],[635,20,684,18],[635,63,684,61,"ability"],[635,70,684,68],[635,71,684,69,"stats"],[635,76,684,74],[635,77,684,75,"duration"],[635,85,684,83],[635,108,684,106],[635,109,684,107],[636,6,685,4],[637,4,686,2],[637,5,686,3],[639,4,688,2],[640,4,689,2],[640,8,689,8,"createProjectile"],[640,24,689,24],[640,27,689,27,"createProjectile"],[640,28,689,28,"targetEnemy"],[640,39,689,52],[640,41,689,54,"damage"],[640,47,689,68],[640,49,689,70,"ninjaPos"],[640,57,689,103],[640,59,689,105,"abilityInfo"],[640,70,689,159],[640,75,689,164],[641,6,690,4],[641,10,690,8],[641,11,690,9,"targetEnemy"],[641,22,690,20],[641,24,690,22],[642,8,691,6,"console"],[642,15,691,13],[642,16,691,14,"log"],[642,19,691,17],[642,20,691,18],[642,65,691,63],[642,66,691,64],[643,8,692,6],[643,15,692,13],[643,19,692,17],[644,6,693,4],[645,6,695,4],[645,10,695,10,"SCREEN_WIDTH"],[645,22,695,22],[645,25,695,25],[645,28,695,28],[646,6,696,4],[646,10,696,10,"GAME_AREA_HEIGHT"],[646,26,696,26],[646,29,696,29],[646,32,696,32],[646,35,696,35],[646,38,696,38],[646,39,696,39],[646,40,696,40],[647,6,697,4],[647,10,697,10,"NINJA_SIZE"],[647,20,697,20],[647,23,697,23],[647,25,697,25],[649,6,699,4],[650,6,700,4],[650,10,700,10,"ninjaX"],[650,16,700,16],[650,19,700,19,"ninjaPos"],[650,27,700,27],[650,30,700,30,"ninjaPos"],[650,38,700,38],[650,39,700,39,"x"],[650,40,700,40],[650,43,700,43,"NINJA_SIZE"],[650,53,700,53],[650,56,700,56],[650,57,700,57],[650,60,700,60,"SCREEN_WIDTH"],[650,72,700,72],[650,75,700,75],[650,76,700,76],[651,6,701,4],[651,10,701,10,"ninjaY"],[651,16,701,16],[651,19,701,19,"ninjaPos"],[651,27,701,27],[651,30,701,30,"ninjaPos"],[651,38,701,38],[651,39,701,39,"y"],[651,40,701,40],[651,43,701,43,"NINJA_SIZE"],[651,53,701,53],[651,56,701,56],[651,57,701,57],[651,60,701,60,"GAME_AREA_HEIGHT"],[651,76,701,76],[651,79,701,79],[651,80,701,80],[652,6,702,4],[652,10,702,10,"ENEMY_SIZE"],[652,20,702,20],[652,23,702,23],[652,25,702,25],[653,6,704,4],[653,10,704,10,"projectileId"],[653,22,704,22],[653,25,704,25],[653,33,704,33,"Date"],[653,37,704,37],[653,38,704,38,"now"],[653,41,704,41],[653,42,704,42],[653,43,704,43],[653,47,704,47,"Math"],[653,51,704,51],[653,52,704,52,"random"],[653,58,704,58],[653,59,704,59],[653,60,704,60],[653,62,704,62],[654,6,706,4],[654,10,706,10,"projectile"],[654,20,706,38],[654,23,706,41],[655,8,707,6,"id"],[655,10,707,8],[655,12,707,10,"projectileId"],[655,24,707,22],[656,8,708,6,"x"],[656,9,708,7],[656,11,708,9,"ninjaX"],[656,17,708,15],[657,8,709,6,"y"],[657,9,709,7],[657,11,709,9,"ninjaY"],[657,17,709,15],[658,8,710,6,"targetX"],[658,15,710,13],[658,17,710,15,"targetEnemy"],[658,28,710,26],[658,29,710,27,"position"],[658,37,710,35],[658,38,710,36,"x"],[658,39,710,37],[658,42,710,40,"ENEMY_SIZE"],[658,52,710,50],[658,55,710,53],[658,56,710,54],[659,8,711,6,"targetY"],[659,15,711,13],[659,17,711,15,"targetEnemy"],[659,28,711,26],[659,29,711,27,"position"],[659,37,711,35],[659,38,711,36,"y"],[659,39,711,37],[659,42,711,40,"ENEMY_SIZE"],[659,52,711,50],[659,55,711,53],[659,56,711,54],[660,8,712,6,"targetEnemyId"],[660,21,712,19],[660,23,712,21,"targetEnemy"],[660,34,712,32],[660,35,712,33,"id"],[660,37,712,35],[661,8,713,6,"damage"],[661,14,713,12],[661,16,713,14,"damage"],[661,22,713,20],[662,8,714,6,"startTime"],[662,17,714,15],[662,19,714,17,"Date"],[662,23,714,21],[662,24,714,22,"now"],[662,27,714,25],[662,28,714,26],[662,29,714,27],[663,8,715,6,"duration"],[663,16,715,14],[663,18,715,16],[663,21,715,19],[664,8,715,21],[665,8,716,6],[666,8,717,6,"abilityId"],[666,17,717,15],[666,19,717,17,"abilityInfo"],[666,30,717,28],[666,32,717,30,"id"],[666,34,717,32],[666,38,717,36],[666,54,717,52],[667,8,718,6,"abilityName"],[667,19,718,17],[667,21,718,19,"abilityInfo"],[667,32,718,30],[667,34,718,32,"name"],[667,38,718,36],[667,42,718,40],[667,58,718,56],[668,8,719,6,"abilityIcon"],[668,19,719,17],[668,21,719,19,"abilityInfo"],[668,32,719,30],[668,34,719,32,"icon"],[668,38,719,36],[668,42,719,40],[668,46,719,44],[668,47,719,46],[669,6,720,4],[669,7,720,5],[670,6,722,4,"console"],[670,13,722,11],[670,14,722,12,"log"],[670,17,722,15],[670,18,722,16],[670,44,722,42,"abilityInfo"],[670,55,722,53],[670,57,722,55,"name"],[670,61,722,59],[670,65,722,63],[670,81,722,79],[670,101,722,99,"projectileId"],[670,113,722,111],[670,128,722,126,"targetEnemy"],[670,139,722,137],[670,140,722,138,"name"],[670,144,722,142],[670,152,722,150,"damage"],[670,158,722,156],[670,167,722,165],[670,168,722,166],[671,6,724,4,"console"],[671,13,724,11],[671,14,724,12,"log"],[671,17,724,15],[671,18,724,16],[671,53,724,51,"targetEnemy"],[671,64,724,62],[671,65,724,63,"id"],[671,67,724,65],[671,75,724,73,"damage"],[671,81,724,79],[671,90,724,88],[671,91,724,89],[672,6,725,4,"console"],[672,13,725,11],[672,14,725,12,"log"],[672,17,725,15],[672,18,725,16],[672,53,725,51,"ninjaX"],[672,59,725,57],[672,64,725,62,"ninjaY"],[672,70,725,68],[672,87,725,85,"projectile"],[672,97,725,95],[672,98,725,96,"targetX"],[672,105,725,103],[672,110,725,108,"projectile"],[672,120,725,118],[672,121,725,119,"targetY"],[672,128,725,126],[672,131,725,129],[672,132,725,130],[673,6,727,4,"setProjectiles"],[673,20,727,18],[673,21,727,19,"prev"],[673,25,727,23],[673,29,727,27],[673,30,727,28],[673,33,727,31,"prev"],[673,37,727,35],[673,39,727,37,"projectile"],[673,49,727,47],[673,50,727,48],[673,51,727,49],[675,6,729,4],[676,6,730,4,"setTimeout"],[676,16,730,14],[676,17,730,15],[676,23,730,21],[677,8,731,6,"handleProjectileHit"],[677,27,731,25],[677,28,731,26,"projectile"],[677,38,731,36],[677,39,731,37],[678,6,732,4],[678,7,732,5],[678,9,732,7],[678,12,732,10],[678,13,732,11],[679,6,734,4],[679,13,734,11,"projectile"],[679,23,734,21],[680,4,735,2],[680,5,735,3],[682,4,737,2],[683,4,738,2],[683,8,738,8,"spawnTestEnemy"],[683,22,738,22],[683,25,738,26,"state"],[683,30,738,44],[683,34,738,49],[684,6,739,4,"console"],[684,13,739,11],[684,14,739,12,"log"],[684,17,739,15],[684,18,739,16],[684,83,739,81],[684,84,739,82],[686,6,741,4],[687,6,742,4],[687,10,742,10,"zoneEnemy"],[687,19,742,19],[687,22,742,22,"spawnZoneEnemy"],[687,36,742,36],[687,37,742,37],[687,38,742,38],[688,6,743,4],[688,10,743,8],[688,11,743,9,"zoneEnemy"],[688,20,743,18],[688,22,743,20],[689,8,744,6,"console"],[689,15,744,13],[689,16,744,14,"log"],[689,19,744,17],[689,20,744,18],[689,76,744,74],[689,77,744,75],[690,8,745,6],[691,8,746,6,"spawnBasicTestEnemy"],[691,27,746,25],[691,28,746,26,"state"],[691,33,746,31],[691,34,746,32],[692,8,747,6],[693,6,748,4],[694,6,750,4,"console"],[694,13,750,11],[694,14,750,12,"log"],[694,17,750,15],[694,18,750,16],[694,44,750,42,"zoneEnemy"],[694,53,750,51],[694,54,750,52,"name"],[694,58,750,56],[694,63,750,61,"zoneEnemy"],[694,72,750,70],[694,73,750,71,"typeId"],[694,79,750,77],[694,94,750,92,"currentZone"],[694,105,750,103],[694,107,750,105,"id"],[694,109,750,107],[694,119,750,117,"currentZoneLevel"],[694,135,750,133],[694,137,750,135,"level"],[694,142,750,140],[694,144,750,142],[694,145,750,143],[696,6,752,4],[697,6,753,4],[697,10,753,10,"combatEnemy"],[697,21,753,34],[697,24,753,37],[698,8,754,6,"id"],[698,10,754,8],[698,12,754,10,"zoneEnemy"],[698,21,754,19],[698,22,754,20,"id"],[698,24,754,22],[699,8,755,6,"name"],[699,12,755,10],[699,14,755,12,"zoneEnemy"],[699,23,755,21],[699,24,755,22,"name"],[699,28,755,26],[700,8,756,6,"health"],[700,14,756,12],[700,16,756,14,"zoneEnemy"],[700,25,756,23],[700,26,756,24,"hp"],[700,28,756,26],[701,8,757,6,"maxHealth"],[701,17,757,15],[701,19,757,17,"zoneEnemy"],[701,28,757,26],[701,29,757,27,"maxHP"],[701,34,757,32],[702,8,758,6,"stats"],[702,13,758,11],[702,15,758,13],[703,10,759,8,"attack"],[703,16,759,14],[703,18,759,16,"zoneEnemy"],[703,27,759,25],[703,28,759,26,"attack"],[703,34,759,32],[704,10,760,8,"defense"],[704,17,760,15],[704,19,760,17],[704,21,760,19],[705,10,760,21],[706,10,761,8,"health"],[706,16,761,14],[706,18,761,16,"zoneEnemy"],[706,27,761,25],[706,28,761,26,"hp"],[706,30,761,28],[707,10,762,8,"maxHealth"],[707,19,762,17],[707,21,762,19,"zoneEnemy"],[707,30,762,28],[707,31,762,29,"maxHP"],[707,36,762,34],[708,10,763,8,"critChance"],[708,20,763,18],[708,22,763,20],[708,23,763,21],[709,10,764,8,"critDamage"],[709,20,764,18],[709,22,764,20],[709,25,764,23],[710,10,765,8,"cooldownReduction"],[710,27,765,25],[710,29,765,27],[711,8,766,6],[711,9,766,7],[712,8,767,6,"position"],[712,16,767,14],[712,18,767,16,"zoneEnemy"],[712,27,767,25],[712,28,767,26,"position"],[712,36,767,34],[713,8,768,6,"lastDamaged"],[713,19,768,17],[713,21,768,19],[713,22,768,20],[714,8,769,6],[715,8,770,6,"zoneTypeId"],[715,18,770,16],[715,20,770,18,"zoneEnemy"],[715,29,770,27],[715,30,770,28,"typeId"],[715,36,770,34],[716,8,771,6,"zoneXP"],[716,14,771,12],[716,16,771,14,"zoneEnemy"],[716,25,771,23],[716,26,771,24,"xp"],[717,6,772,4],[717,7,772,5],[718,6,774,4,"console"],[718,13,774,11],[718,14,774,12,"log"],[718,17,774,15],[718,18,774,16],[718,42,774,40,"combatEnemy"],[718,53,774,51],[718,54,774,52,"name"],[718,58,774,56],[718,67,774,65,"combatEnemy"],[718,78,774,76],[718,79,774,77,"health"],[718,85,774,83],[718,100,774,98,"currentZone"],[718,111,774,109],[718,113,774,111,"id"],[718,115,774,113],[718,125,774,123,"currentZoneLevel"],[718,141,774,139],[718,143,774,141,"level"],[718,148,774,146],[718,150,774,148],[718,151,774,149],[719,6,775,4,"state"],[719,11,775,9],[719,12,775,10,"enemies"],[719,19,775,17],[719,20,775,18,"push"],[719,24,775,22],[719,25,775,23,"combatEnemy"],[719,36,775,34],[719,37,775,35],[720,4,776,2],[720,5,776,3],[722,4,778,2],[723,4,779,2],[723,8,779,8,"spawnBasicTestEnemy"],[723,27,779,27],[723,30,779,31,"state"],[723,35,779,49],[723,39,779,54],[724,6,780,4],[724,10,780,10,"SCREEN_WIDTH"],[724,22,780,22],[724,25,780,25],[724,28,780,28],[725,6,781,4],[725,10,781,10,"GAME_AREA_HEIGHT"],[725,26,781,26],[725,29,781,29],[725,32,781,32],[725,35,781,35],[725,38,781,38],[726,6,782,4],[726,10,782,10,"ENEMY_SIZE"],[726,20,782,20],[726,23,782,23],[726,25,782,25],[727,6,784,4],[727,10,784,10,"x"],[727,11,784,11],[727,14,784,14,"Math"],[727,18,784,18],[727,19,784,19,"random"],[727,25,784,25],[727,26,784,26],[727,27,784,27],[727,31,784,31,"SCREEN_WIDTH"],[727,43,784,43],[727,46,784,46,"ENEMY_SIZE"],[727,56,784,56],[727,59,784,59],[727,60,784,60],[727,61,784,61],[727,64,784,64,"ENEMY_SIZE"],[727,74,784,74],[728,6,785,4],[728,10,785,10,"y"],[728,11,785,11],[728,14,785,14,"Math"],[728,18,785,18],[728,19,785,19,"random"],[728,25,785,25],[728,26,785,26],[728,27,785,27],[728,31,785,31,"GAME_AREA_HEIGHT"],[728,47,785,47],[728,50,785,50,"ENEMY_SIZE"],[728,60,785,60],[728,63,785,63],[728,64,785,64],[728,65,785,65],[728,68,785,68,"ENEMY_SIZE"],[728,78,785,78],[729,6,787,4],[729,10,787,10,"enemy"],[729,15,787,28],[729,18,787,31],[730,8,788,6,"id"],[730,10,788,8],[730,12,788,10],[730,30,788,28,"Date"],[730,34,788,32],[730,35,788,33,"now"],[730,38,788,36],[730,39,788,37],[730,40,788,38],[730,44,788,42,"Math"],[730,48,788,46],[730,49,788,47,"random"],[730,55,788,53],[730,56,788,54],[730,57,788,55],[730,59,788,57],[731,8,789,6,"name"],[731,12,789,10],[731,14,789,12],[731,26,789,24,"Math"],[731,30,789,28],[731,31,789,29,"floor"],[731,36,789,34],[731,37,789,35,"Math"],[731,41,789,39],[731,42,789,40,"random"],[731,48,789,46],[731,49,789,47],[731,50,789,48],[731,53,789,51],[731,56,789,54],[731,57,789,55],[731,59,789,57],[732,8,790,6,"health"],[732,14,790,12],[732,16,790,14],[732,18,790,16],[733,8,791,6,"maxHealth"],[733,17,791,15],[733,19,791,17],[733,21,791,19],[734,8,792,6,"stats"],[734,13,792,11],[734,15,792,13],[735,10,793,8,"attack"],[735,16,793,14],[735,18,793,16],[735,20,793,18],[736,10,794,8,"defense"],[736,17,794,15],[736,19,794,17],[736,21,794,19],[737,10,795,8,"health"],[737,16,795,14],[737,18,795,16],[737,20,795,18],[738,10,796,8,"maxHealth"],[738,19,796,17],[738,21,796,19],[738,23,796,21],[739,10,797,8,"critChance"],[739,20,797,18],[739,22,797,20],[739,23,797,21],[740,10,798,8,"critDamage"],[740,20,798,18],[740,22,798,20],[740,25,798,23],[741,10,799,8,"cooldownReduction"],[741,27,799,25],[741,29,799,27],[742,8,800,6],[742,9,800,7],[743,8,801,6,"position"],[743,16,801,14],[743,18,801,16],[744,10,801,18,"x"],[744,11,801,19],[745,10,801,21,"y"],[746,8,801,23],[746,9,801,24],[747,8,802,6,"lastDamaged"],[747,19,802,17],[747,21,802,19],[748,6,803,4],[748,7,803,5],[749,6,805,4,"console"],[749,13,805,11],[749,14,805,12,"log"],[749,17,805,15],[749,18,805,16],[749,42,805,40,"enemy"],[749,47,805,45],[749,48,805,46,"name"],[749,52,805,50],[749,60,805,58,"Math"],[749,64,805,62],[749,65,805,63,"round"],[749,70,805,68],[749,71,805,69,"x"],[749,72,805,70],[749,73,805,71],[749,78,805,76,"Math"],[749,82,805,80],[749,83,805,81,"round"],[749,88,805,86],[749,89,805,87,"y"],[749,90,805,88],[749,91,805,89],[749,94,805,92],[749,95,805,93],[750,6,806,4,"state"],[750,11,806,9],[750,12,806,10,"enemies"],[750,19,806,17],[750,20,806,18,"push"],[750,24,806,22],[750,25,806,23,"enemy"],[750,30,806,28],[750,31,806,29],[751,4,807,2],[751,5,807,3],[753,4,809,2],[754,4,810,2],[754,8,810,8,"startCombat"],[754,19,810,19],[754,22,810,22,"React"],[754,27,810,27],[754,28,810,27,"default"],[754,35,810,27],[754,36,810,28,"useCallback"],[754,47,810,39],[754,48,810,40],[754,54,810,46],[755,6,811,4,"console"],[755,13,811,11],[755,14,811,12,"log"],[755,17,811,15],[755,18,811,16],[755,63,811,61],[755,64,811,62],[756,6,812,4,"setCombatState"],[756,20,812,18],[756,21,812,19,"prev"],[756,25,812,23],[756,30,812,28],[757,8,812,30],[757,11,812,33,"prev"],[757,15,812,37],[758,8,812,39,"isInCombat"],[758,18,812,49],[758,20,812,51],[759,6,812,56],[759,7,812,57],[759,8,812,58],[759,9,812,59],[761,6,814,4],[762,6,815,4,"combatEngine"],[762,25,815,16],[762,26,815,16,"combatEngine"],[762,38,815,16],[762,39,815,17,"addTickCallback"],[762,54,815,32],[762,55,815,33,"handleCombatTick"],[762,71,815,49],[762,72,815,50],[763,6,816,4,"console"],[763,13,816,11],[763,14,816,12,"log"],[763,17,816,15],[763,18,816,16],[763,62,816,60],[763,63,816,61],[765,6,818,4],[766,6,819,4,"combatEngine"],[766,25,819,16],[766,26,819,16,"combatEngine"],[766,38,819,16],[766,39,819,17,"start"],[766,44,819,22],[766,45,819,23],[766,46,819,24],[767,4,820,2],[767,5,820,3],[767,7,820,5],[767,8,820,6,"combatEngine"],[767,27,820,18],[767,28,820,18,"combatEngine"],[767,40,820,18],[767,42,820,20,"handleCombatTick"],[767,58,820,36],[767,59,820,37],[767,60,820,38],[769,4,822,2],[770,4,823,2],[770,8,823,8,"stopCombat"],[770,18,823,18],[770,21,823,21,"React"],[770,26,823,26],[770,27,823,26,"default"],[770,34,823,26],[770,35,823,27,"useCallback"],[770,46,823,38],[770,47,823,39],[770,53,823,45],[771,6,824,4,"setCombatState"],[771,20,824,18],[771,21,824,19,"prev"],[771,25,824,23],[771,30,824,28],[772,8,824,30],[772,11,824,33,"prev"],[772,15,824,37],[773,8,824,39,"isInCombat"],[773,18,824,49],[773,20,824,51],[774,6,824,57],[774,7,824,58],[774,8,824,59],[774,9,824,60],[775,6,825,4,"combatEngine"],[775,25,825,16],[775,26,825,16,"combatEngine"],[775,38,825,16],[775,39,825,17,"removeTickCallback"],[775,57,825,35],[775,58,825,36,"handleCombatTick"],[775,74,825,52],[775,75,825,53],[776,4,826,2],[776,5,826,3],[776,7,826,5],[776,8,826,6,"combatEngine"],[776,27,826,18],[776,28,826,18,"combatEngine"],[776,40,826,18],[776,42,826,20,"handleCombatTick"],[776,58,826,36],[776,59,826,37],[776,60,826,38],[778,4,828,2],[779,4,829,2],[779,8,829,8,"equipAbility"],[779,20,829,20],[779,23,829,23,"equipAbility"],[779,24,829,24,"abilityId"],[779,33,829,41],[779,35,829,43,"slotIndex"],[779,44,829,60],[779,49,829,74],[780,6,830,4],[780,13,830,11,"combatState"],[780,24,830,22],[780,25,830,23,"abilityManager"],[780,39,830,37],[780,40,830,38,"equipAbility"],[780,52,830,50],[780,53,830,51,"abilityId"],[780,62,830,60],[780,64,830,62,"slotIndex"],[780,73,830,71],[780,74,830,72],[781,4,831,2],[781,5,831,3],[782,4,833,2],[782,8,833,8,"getDeck"],[782,15,833,15],[782,18,833,18,"getDeck"],[782,19,833,18],[782,24,833,24],[783,6,834,4],[783,13,834,11,"combatState"],[783,24,834,22],[783,25,834,23,"abilityManager"],[783,39,834,37],[783,40,834,38,"getDeck"],[783,47,834,45],[783,48,834,46],[783,49,834,47],[784,4,835,2],[784,5,835,3],[785,4,837,2],[785,8,837,8,"getAvailableAbilities"],[785,29,837,29],[785,32,837,32,"getAvailableAbilities"],[785,33,837,32],[785,38,837,38],[786,6,838,4],[786,13,838,11,"combatState"],[786,24,838,22],[786,25,838,23,"abilityManager"],[786,39,838,37],[786,40,838,38,"getAvailableAbilities"],[786,61,838,59],[786,62,838,60],[786,63,838,61],[787,4,839,2],[787,5,839,3],[788,4,841,2],[788,8,841,8,"upgradeAbility"],[788,22,841,22],[788,25,841,26,"abilityId"],[788,34,841,43],[788,38,841,57],[789,6,842,4],[789,13,842,11,"combatState"],[789,24,842,22],[789,25,842,23,"abilityManager"],[789,39,842,37],[789,40,842,38,"upgradeAbility"],[789,54,842,52],[789,55,842,53,"abilityId"],[789,64,842,62],[789,65,842,63],[790,4,843,2],[790,5,843,3],[792,4,845,2],[793,4,846,2],[793,8,846,8,"clearAllEnemies"],[793,23,846,23],[793,26,846,26,"clearAllEnemies"],[793,27,846,26],[793,32,846,32],[794,6,847,4,"console"],[794,13,847,11],[794,14,847,12,"log"],[794,17,847,15],[794,18,847,16],[794,67,847,65],[794,68,847,66],[795,6,848,4,"setCombatState"],[795,20,848,18],[795,21,848,19,"prev"],[795,25,848,23],[795,30,848,28],[796,8,849,6],[796,11,849,9,"prev"],[796,15,849,13],[797,8,850,6,"enemies"],[797,15,850,13],[797,17,850,15],[798,6,851,4],[798,7,851,5],[798,8,851,6],[798,9,851,7],[799,4,852,2],[799,5,852,3],[801,4,854,2],[802,4,855,2],[802,8,855,8,"triggerLevelUpExplosion"],[802,31,855,31],[802,34,855,34,"triggerLevelUpExplosion"],[802,35,855,34],[802,40,855,40],[803,6,856,4,"console"],[803,13,856,11],[803,14,856,12,"log"],[803,17,856,15],[803,18,856,16],[803,70,856,68],[803,71,856,69],[804,6,858,4],[804,10,858,10,"explosionTime"],[804,23,858,23],[804,26,858,26,"Date"],[804,30,858,30],[804,31,858,31,"now"],[804,34,858,34],[804,35,858,35],[804,36,858,36],[805,6,859,4,"setLastExplosionTime"],[805,26,859,24],[805,27,859,25,"explosionTime"],[805,40,859,38],[805,41,859,39],[806,6,861,4,"setCombatState"],[806,20,861,18],[806,21,861,19,"prev"],[806,25,861,23],[806,29,861,27],[807,8,862,6],[808,8,863,6],[808,12,863,12,"enemyCount"],[808,22,863,22],[808,25,863,25,"prev"],[808,29,863,29],[808,30,863,30,"enemies"],[808,37,863,37],[808,38,863,38,"length"],[808,44,863,44],[809,8,864,6],[809,12,864,12,"explosionXP"],[809,23,864,23],[809,26,864,26,"enemyCount"],[809,36,864,36],[809,39,864,39],[809,42,864,42],[809,43,864,43],[809,44,864,44],[810,8,865,6],[810,12,865,12,"explosionGold"],[810,25,865,25],[810,28,865,28,"enemyCount"],[810,38,865,38],[810,41,865,41],[810,44,865,44],[810,45,865,45],[810,46,865,46],[812,8,867,6,"console"],[812,15,867,13],[812,16,867,14,"log"],[812,19,867,17],[812,20,867,18],[812,44,867,42,"enemyCount"],[812,54,867,52],[812,76,867,74,"explosionXP"],[812,87,867,85],[812,98,867,96,"explosionGold"],[812,111,867,109],[812,118,867,116],[812,119,867,117],[814,8,869,6],[815,8,870,6],[815,12,870,10,"explosionXP"],[815,23,870,21],[815,26,870,24],[815,27,870,25],[815,29,870,27],[816,10,871,8,"setTimeout"],[816,20,871,18],[816,21,871,19],[816,27,871,25],[817,12,872,10,"game"],[817,16,872,14],[817,17,872,15,"updateNinja"],[817,28,872,26],[817,29,872,28,"ninja"],[817,34,872,33],[817,39,872,39],[818,14,873,12,"experience"],[818,24,873,22],[818,26,873,24,"ninja"],[818,31,873,29],[818,32,873,30,"experience"],[818,42,873,40],[818,45,873,43,"explosionXP"],[818,56,873,54],[819,14,874,12,"gold"],[819,18,874,16],[819,20,874,18,"ninja"],[819,25,874,23],[819,26,874,24,"gold"],[819,30,874,28],[819,33,874,31,"explosionGold"],[820,12,875,10],[820,13,875,11],[820,14,875,12],[820,15,875,13],[821,10,876,8],[821,11,876,9],[821,13,876,11],[821,14,876,12],[821,15,876,13],[821,16,876,14],[821,17,876,15],[822,8,877,6],[824,8,879,6],[825,8,880,6],[826,8,881,6],[826,12,881,12,"damagedEnemies"],[826,26,881,26],[826,29,881,29,"prev"],[826,33,881,33],[826,34,881,34,"enemies"],[826,41,881,41],[826,42,881,42,"map"],[826,45,881,45],[826,46,881,46,"enemy"],[826,51,881,51],[826,56,881,56],[827,10,882,8],[827,13,882,11,"enemy"],[827,18,882,16],[828,10,883,8,"health"],[828,16,883,14],[828,18,883,16],[828,19,883,17],[829,10,883,19],[830,10,884,8,"lastDamaged"],[830,21,884,19],[830,23,884,21,"combatEngine"],[830,42,884,33],[830,43,884,33,"combatEngine"],[830,55,884,33],[830,56,884,34,"getCurrentTick"],[830,70,884,48],[830,71,884,49],[831,8,885,6],[831,9,885,7],[831,10,885,8],[831,11,885,9],[832,8,887,6],[832,15,887,13],[833,10,888,8],[833,13,888,11,"prev"],[833,17,888,15],[834,10,889,8,"enemies"],[834,17,889,15],[834,19,889,17,"damagedEnemies"],[835,8,890,6],[835,9,890,7],[836,6,891,4],[836,7,891,5],[836,8,891,6],[837,4,892,2],[837,5,892,3],[839,4,894,2],[840,4,895,2],[840,8,895,8,"spawnEnemy"],[840,18,895,18],[840,21,895,22,"position"],[840,29,895,57],[840,33,895,75],[841,6,896,4],[841,10,896,10,"SCREEN_WIDTH"],[841,22,896,22],[841,25,896,25],[841,28,896,28],[842,6,897,4],[842,10,897,10,"GAME_AREA_HEIGHT"],[842,26,897,26],[842,29,897,29],[842,32,897,32],[842,35,897,35],[842,38,897,38],[842,39,897,39],[842,40,897,40],[843,6,898,4],[843,10,898,10,"ENEMY_SIZE"],[843,20,898,20],[843,23,898,23],[843,25,898,25],[845,6,900,4],[846,6,901,4],[846,10,901,10,"x"],[846,11,901,11],[846,14,901,14,"position"],[846,22,901,22],[846,24,901,24,"x"],[846,25,901,25],[846,29,901,29,"Math"],[846,33,901,33],[846,34,901,34,"random"],[846,40,901,40],[846,41,901,41],[846,42,901,42],[846,46,901,46,"SCREEN_WIDTH"],[846,58,901,58],[846,61,901,61,"ENEMY_SIZE"],[846,71,901,71],[846,74,901,74],[846,75,901,75],[846,76,901,76],[846,79,901,79,"ENEMY_SIZE"],[846,89,901,89],[847,6,902,4],[847,10,902,10,"y"],[847,11,902,11],[847,14,902,14,"position"],[847,22,902,22],[847,24,902,24,"y"],[847,25,902,25],[847,29,902,29,"Math"],[847,33,902,33],[847,34,902,34,"random"],[847,40,902,40],[847,41,902,41],[847,42,902,42],[847,46,902,46,"GAME_AREA_HEIGHT"],[847,62,902,62],[847,65,902,65,"ENEMY_SIZE"],[847,75,902,75],[847,78,902,78],[847,79,902,79],[847,80,902,80],[847,83,902,83,"ENEMY_SIZE"],[847,93,902,93],[848,6,904,4],[848,10,904,10,"enemy"],[848,15,904,28],[848,18,904,31],[849,8,905,6,"id"],[849,10,905,8],[849,12,905,10],[849,21,905,19],[849,23,905,21,"enemyCounter"],[849,35,905,33],[849,37,905,35],[850,8,906,6,"name"],[850,12,906,10],[850,14,906,12],[850,24,906,22],[851,8,907,6,"health"],[851,14,907,12],[851,16,907,14],[851,19,907,17],[852,8,908,6,"maxHealth"],[852,17,908,15],[852,19,908,17],[852,22,908,20],[853,8,909,6,"stats"],[853,13,909,11],[853,15,909,13],[854,10,910,8,"attack"],[854,16,910,14],[854,18,910,16],[854,20,910,18],[855,10,911,8,"defense"],[855,17,911,15],[855,19,911,17],[855,21,911,19],[856,10,912,8,"health"],[856,16,912,14],[856,18,912,16],[856,21,912,19],[857,10,913,8,"maxHealth"],[857,19,913,17],[857,21,913,19],[857,24,913,22],[858,10,914,8,"critChance"],[858,20,914,18],[858,22,914,20],[858,23,914,21],[859,10,915,8,"critDamage"],[859,20,915,18],[859,22,915,20],[859,25,915,23],[860,10,916,8,"cooldownReduction"],[860,27,916,25],[860,29,916,27],[861,8,917,6],[861,9,917,7],[862,8,918,6,"position"],[862,16,918,14],[862,18,918,16],[863,10,918,18,"x"],[863,11,918,19],[864,10,918,21,"y"],[865,8,918,23],[865,9,918,24],[866,8,919,6,"lastDamaged"],[866,19,919,17],[866,21,919,19],[867,6,920,4],[867,7,920,5],[868,6,922,4,"setCombatState"],[868,20,922,18],[868,21,922,19,"prev"],[868,25,922,23],[868,30,922,28],[869,8,923,6],[869,11,923,9,"prev"],[869,15,923,13],[870,8,924,6,"enemies"],[870,15,924,13],[870,17,924,15],[870,18,924,16],[870,21,924,19,"prev"],[870,25,924,23],[870,26,924,24,"enemies"],[870,33,924,31],[870,35,924,33,"enemy"],[870,40,924,38],[871,6,925,4],[871,7,925,5],[871,8,925,6],[871,9,925,7],[872,6,927,4],[872,13,927,11,"enemy"],[872,18,927,16],[873,4,928,2],[873,5,928,3],[875,4,930,2],[876,4,931,2],[876,8,931,8,"spawnBoss"],[876,17,931,17],[876,20,931,21,"bossEnemy"],[876,29,931,43],[876,33,931,48],[877,6,932,4,"console"],[877,13,932,11],[877,14,932,12,"log"],[877,17,932,15],[877,18,932,16],[877,39,932,37,"bossEnemy"],[877,48,932,46],[877,49,932,47,"name"],[877,53,932,51],[877,90,932,88],[877,91,932,89],[878,6,933,4,"setCombatState"],[878,20,933,18],[878,21,933,19,"prev"],[878,25,933,23],[878,30,933,28],[879,8,934,6],[879,11,934,9,"prev"],[879,15,934,13],[880,8,935,6,"enemies"],[880,15,935,13],[880,17,935,15],[880,18,935,16,"bossEnemy"],[880,27,935,25],[880,28,935,26],[880,29,935,27],[881,6,936,4],[881,7,936,5],[881,8,936,6],[881,9,936,7],[882,4,937,2],[882,5,937,3],[884,4,939,2],[885,4,940,2],[885,8,940,8,"clearSpecificEnemy"],[885,26,940,26],[885,29,940,30,"enemyId"],[885,36,940,45],[885,40,940,50],[886,6,941,4,"setCombatState"],[886,20,941,18],[886,21,941,19,"prev"],[886,25,941,23],[886,30,941,28],[887,8,942,6],[887,11,942,9,"prev"],[887,15,942,13],[888,8,943,6,"enemies"],[888,15,943,13],[888,17,943,15,"prev"],[888,21,943,19],[888,22,943,20,"enemies"],[888,29,943,27],[888,30,943,28,"filter"],[888,36,943,34],[888,37,943,35,"enemy"],[888,42,943,40],[888,46,943,44,"enemy"],[888,51,943,49],[888,52,943,50,"id"],[888,54,943,52],[888,59,943,57,"enemyId"],[888,66,943,64],[889,6,944,4],[889,7,944,5],[889,8,944,6],[889,9,944,7],[890,4,945,2],[890,5,945,3],[892,4,947,2],[893,4,948,2],[893,8,948,8,"useAbilityManually"],[893,26,948,26],[893,29,948,26,"_s3"],[893,32,948,26],[893,33,948,29],[893,37,948,29,"useCallback"],[893,43,948,40],[893,44,948,40,"useCallback"],[893,55,948,40],[893,57,948,40,"_s3"],[893,60,948,40],[893,61,948,42,"slotIndex"],[893,70,948,59],[893,74,948,73],[894,6,948,73,"_s3"],[894,9,948,73],[895,6,949,4,"console"],[895,13,949,11],[895,14,949,12,"log"],[895,17,949,15],[895,18,949,16],[895,53,949,51,"slotIndex"],[895,62,949,60],[895,64,949,62],[895,65,949,63],[897,6,951,4],[898,6,952,4],[898,10,952,10,"isReady"],[898,17,952,17],[898,20,952,20,"combatState"],[898,31,952,31],[898,32,952,32,"abilityManager"],[898,46,952,46],[898,47,952,47,"isAbilityReady"],[898,61,952,61],[898,62,952,62,"slotIndex"],[898,71,952,71],[898,72,952,72],[899,6,953,4],[899,10,953,8],[899,11,953,9,"isReady"],[899,18,953,16],[899,20,953,18],[900,8,954,6,"console"],[900,15,954,13],[900,16,954,14,"log"],[900,19,954,17],[900,20,954,18],[900,41,954,39,"slotIndex"],[900,50,954,48],[900,85,954,83],[900,86,954,84],[901,8,955,6],[901,15,955,13],[901,20,955,18],[902,6,956,4],[904,6,958,4],[905,6,959,4],[905,10,959,8,"combatState"],[905,21,959,19],[905,22,959,20,"enemies"],[905,29,959,27],[905,30,959,28,"length"],[905,36,959,34],[905,41,959,39],[905,42,959,40],[905,44,959,42],[906,8,960,6,"console"],[906,15,960,13],[906,16,960,14,"log"],[906,19,960,17],[906,20,960,18],[906,69,960,67],[906,70,960,68],[907,8,961,6],[907,15,961,13],[907,20,961,18],[908,6,962,4],[910,6,964,4],[911,6,965,4],[911,10,965,10,"currentTick"],[911,21,965,21],[911,24,965,24,"combatEngine"],[911,43,965,36],[911,44,965,36,"combatEngine"],[911,56,965,36],[911,57,965,37,"getCurrentTick"],[911,71,965,51],[911,72,965,52],[911,73,965,53],[912,6,966,4],[912,10,966,10,"success"],[912,17,966,17],[912,20,966,20,"combatState"],[912,31,966,31],[912,32,966,32,"abilityManager"],[912,46,966,46],[912,47,966,47,"useAbility"],[912,57,966,57],[912,58,966,58,"slotIndex"],[912,67,966,67],[912,69,966,69,"currentTick"],[912,80,966,80],[912,81,966,81],[913,6,968,4],[913,10,968,8,"success"],[913,17,968,15],[913,19,968,17],[914,8,969,6],[915,8,970,6,"setCombatState"],[915,22,970,20],[915,23,970,21,"prev"],[915,27,970,25],[915,31,970,29],[916,10,971,8],[916,14,971,14,"newState"],[916,22,971,22],[916,25,971,25],[917,12,971,27],[917,15,971,30,"prev"],[918,10,971,35],[918,11,971,36],[919,10,972,8,"castAbility"],[919,21,972,19],[919,22,972,20,"newState"],[919,30,972,28],[919,32,972,30,"slotIndex"],[919,41,972,39],[919,42,972,40],[920,10,973,8],[920,17,973,15,"newState"],[920,25,973,23],[921,8,974,6],[921,9,974,7],[921,10,974,8],[922,8,976,6,"console"],[922,15,976,13],[922,16,976,14,"log"],[922,19,976,17],[922,20,976,18],[922,65,976,63,"slotIndex"],[922,74,976,72],[922,76,976,74],[922,77,976,75],[923,8,977,6],[923,15,977,13],[923,19,977,17],[924,6,978,4],[924,7,978,5],[924,13,978,11],[925,8,979,6,"console"],[925,15,979,13],[925,16,979,14,"log"],[925,19,979,17],[925,20,979,18],[925,61,979,59,"slotIndex"],[925,70,979,68],[925,72,979,70],[925,73,979,71],[926,8,980,6],[926,15,980,13],[926,20,980,18],[927,6,981,4],[928,4,982,2],[928,5,982,3],[928,46,982,5],[928,47,982,6,"combatState"],[928,58,982,17],[928,59,982,18,"abilityManager"],[928,73,982,32],[928,75,982,34,"combatState"],[928,86,982,45],[928,87,982,46,"enemies"],[928,94,982,53],[928,95,982,54],[928,96,982,55],[929,4,983,2],[929,8,983,2,"useEffect"],[929,14,983,11],[929,15,983,11,"useEffect"],[929,24,983,11],[929,26,983,12],[929,32,983,18],[930,6,984,4,"combatEngine"],[930,25,984,16],[930,26,984,16,"combatEngine"],[930,38,984,16],[930,39,984,17,"start"],[930,44,984,22],[930,45,984,23],[930,46,984,24],[932,6,986,4],[933,6,987,4],[934,6,988,4,"console"],[934,13,988,11],[934,14,988,12,"log"],[934,17,988,15],[934,18,988,16],[934,97,988,95],[934,98,988,96],[935,6,990,4],[935,13,990,11],[935,19,990,17],[936,8,991,6,"combatEngine"],[936,27,991,18],[936,28,991,18,"combatEngine"],[936,40,991,18],[936,41,991,19,"stop"],[936,45,991,23],[936,46,991,24],[936,47,991,25],[937,6,992,4],[937,7,992,5],[938,4,993,2],[938,5,993,3],[938,7,993,5],[938,9,993,7],[938,10,993,8],[940,4,995,2],[941,4,996,2],[941,8,996,2,"useEffect"],[941,14,996,11],[941,15,996,11,"useEffect"],[941,24,996,11],[941,26,996,12],[941,32,996,18],[942,6,997,4],[942,10,997,10,"processProjectileImpacts"],[942,34,997,34],[942,37,997,37,"processProjectileImpacts"],[942,38,997,37],[942,43,997,43],[943,8,998,6,"setProjectiles"],[943,22,998,20],[943,23,998,21,"currentProjectiles"],[943,41,998,39],[943,45,998,43],[944,10,999,8],[944,17,999,15,"currentProjectiles"],[944,35,999,33],[944,36,999,34,"map"],[944,39,999,37],[944,40,999,38,"projectile"],[944,50,999,48],[944,54,999,52],[945,12,1000,10],[945,16,1000,14],[945,17,1000,15,"projectile"],[945,27,1000,25],[945,29,1000,27],[945,36,1000,34],[945,40,1000,38],[947,12,1002,10],[948,12,1003,10],[948,16,1003,16,"currentTime"],[948,27,1003,27],[948,30,1003,30,"Date"],[948,34,1003,34],[948,35,1003,35,"now"],[948,38,1003,38],[948,39,1003,39],[948,40,1003,40],[949,12,1004,10],[949,16,1004,16,"startTime"],[949,25,1004,25],[949,28,1004,28,"projectile"],[949,38,1004,38],[949,39,1004,39,"startTime"],[949,48,1004,48],[949,52,1004,52,"currentTime"],[949,63,1004,63],[950,12,1005,10],[950,16,1005,16,"elapsedTime"],[950,27,1005,27],[950,30,1005,30,"currentTime"],[950,41,1005,41],[950,44,1005,44,"startTime"],[950,53,1005,53],[951,12,1006,10],[951,16,1006,16,"progress"],[951,24,1006,24],[951,27,1006,27,"Math"],[951,31,1006,31],[951,32,1006,32,"min"],[951,35,1006,35],[951,36,1006,36,"elapsedTime"],[951,47,1006,47],[951,51,1006,51,"projectile"],[951,61,1006,61],[951,62,1006,62,"duration"],[951,70,1006,70],[951,74,1006,74],[951,77,1006,77],[951,78,1006,78],[951,80,1006,80],[951,81,1006,81],[951,82,1006,82],[953,12,1008,10],[954,12,1009,10],[954,16,1009,14,"progress"],[954,24,1009,22],[954,28,1009,26],[954,29,1009,27],[954,33,1009,31],[954,34,1009,32,"projectile"],[954,44,1009,42],[954,45,1009,43,"hasHit"],[954,51,1009,49],[954,53,1009,51],[955,14,1010,12,"projectile"],[955,24,1010,22],[955,25,1010,23,"hasHit"],[955,31,1010,29],[955,34,1010,32],[955,38,1010,36],[956,14,1012,12,"console"],[956,21,1012,19],[956,22,1012,20,"log"],[956,25,1012,23],[956,26,1012,24],[956,51,1012,49,"projectile"],[956,61,1012,59],[956,62,1012,60,"abilityName"],[956,73,1012,71],[956,87,1012,85,"projectile"],[956,97,1012,95],[956,98,1012,96,"targetEnemyId"],[956,111,1012,109],[956,119,1012,117,"projectile"],[956,129,1012,127],[956,130,1012,128,"damage"],[956,136,1012,134],[956,145,1012,143],[956,146,1012,144],[958,14,1014,12],[959,14,1015,12,"setCombatState"],[959,28,1015,26],[959,29,1015,27,"prev"],[959,33,1015,31],[959,37,1015,35],[960,16,1016,14],[960,20,1016,20,"newState"],[960,28,1016,28],[960,31,1016,31],[961,18,1016,33],[961,21,1016,36,"prev"],[962,16,1016,41],[962,17,1016,42],[963,16,1017,14],[963,20,1017,20,"enemyIndex"],[963,30,1017,30],[963,33,1017,33,"newState"],[963,41,1017,41],[963,42,1017,42,"enemies"],[963,49,1017,49],[963,50,1017,50,"findIndex"],[963,59,1017,59],[963,60,1017,60,"e"],[963,61,1017,61],[963,65,1017,65,"e"],[963,66,1017,66],[963,67,1017,67,"id"],[963,69,1017,69],[963,74,1017,74,"projectile"],[963,84,1017,84],[963,85,1017,85,"targetEnemyId"],[963,98,1017,98],[963,99,1017,99],[964,16,1019,14],[964,20,1019,18,"enemyIndex"],[964,30,1019,28],[964,34,1019,32],[964,35,1019,33],[964,39,1019,37,"newState"],[964,47,1019,45],[964,48,1019,46,"enemies"],[964,55,1019,53],[964,56,1019,54,"enemyIndex"],[964,66,1019,64],[964,67,1019,65],[964,68,1019,66,"health"],[964,74,1019,72],[964,77,1019,75],[964,78,1019,76],[964,80,1019,78],[965,18,1020,16,"newState"],[965,26,1020,24],[965,27,1020,25,"enemies"],[965,34,1020,32],[965,37,1020,35],[965,38,1020,36],[965,41,1020,39,"newState"],[965,49,1020,47],[965,50,1020,48,"enemies"],[965,57,1020,55],[965,58,1020,56],[966,18,1021,16],[966,22,1021,22,"enemy"],[966,27,1021,27],[966,30,1021,30,"newState"],[966,38,1021,38],[966,39,1021,39,"enemies"],[966,46,1021,46],[966,47,1021,47,"enemyIndex"],[966,57,1021,57],[966,58,1021,58],[967,18,1022,16],[967,22,1022,22,"newHealth"],[967,31,1022,31],[967,34,1022,34,"Math"],[967,38,1022,38],[967,39,1022,39,"max"],[967,42,1022,42],[967,43,1022,43],[967,44,1022,44],[967,46,1022,46,"enemy"],[967,51,1022,51],[967,52,1022,52,"health"],[967,58,1022,58],[967,61,1022,61,"projectile"],[967,71,1022,71],[967,72,1022,72,"damage"],[967,78,1022,78],[967,79,1022,79],[968,18,1024,16,"newState"],[968,26,1024,24],[968,27,1024,25,"enemies"],[968,34,1024,32],[968,35,1024,33,"enemyIndex"],[968,45,1024,43],[968,46,1024,44],[968,49,1024,47],[969,20,1025,18],[969,23,1025,21,"enemy"],[969,28,1025,26],[970,20,1026,18,"health"],[970,26,1026,24],[970,28,1026,26,"newHealth"],[970,37,1026,35],[971,20,1027,18,"lastDamaged"],[971,31,1027,29],[971,33,1027,31,"combatEngine"],[971,52,1027,43],[971,53,1027,43,"combatEngine"],[971,65,1027,43],[971,66,1027,44,"getCurrentTick"],[971,80,1027,58],[971,81,1027,59],[972,18,1028,16],[972,19,1028,17],[973,18,1030,16,"console"],[973,25,1030,23],[973,26,1030,24,"log"],[973,29,1030,27],[973,30,1030,28],[973,52,1030,50,"enemy"],[973,57,1030,55],[973,58,1030,56,"name"],[973,62,1030,60],[973,74,1030,72,"newHealth"],[973,83,1030,81],[973,87,1030,85,"enemy"],[973,92,1030,90],[973,93,1030,91,"maxHealth"],[973,102,1030,100],[973,104,1030,102],[973,105,1030,103],[975,18,1032,16],[976,18,1033,16],[976,22,1033,20,"newHealth"],[976,31,1033,29],[976,35,1033,33],[976,36,1033,34],[976,40,1033,38,"enemy"],[976,45,1033,43],[976,46,1033,44,"health"],[976,52,1033,50],[976,55,1033,53],[976,56,1033,54],[976,58,1033,56],[977,20,1034,18,"console"],[977,27,1034,25],[977,28,1034,26,"log"],[977,31,1034,29],[977,32,1034,30],[977,55,1034,53,"enemy"],[977,60,1034,58],[977,61,1034,59,"name"],[977,65,1034,63],[977,79,1034,77,"projectile"],[977,89,1034,87],[977,90,1034,88,"abilityName"],[977,101,1034,99],[977,104,1034,102],[977,105,1034,103],[978,20,1035,18,"setTimeout"],[978,30,1035,28],[978,31,1035,29],[978,37,1035,35,"handleEnemyKill"],[978,52,1035,50],[978,53,1035,51,"enemy"],[978,58,1035,56],[978,59,1035,57],[978,61,1035,59],[978,62,1035,60],[978,63,1035,61],[979,18,1036,16],[980,16,1037,14],[981,16,1039,14],[981,23,1039,21,"newState"],[981,31,1039,29],[982,14,1040,12],[982,15,1040,13],[982,16,1040,14],[983,12,1041,10],[985,12,1043,10],[986,12,1044,10],[986,16,1044,14,"progress"],[986,24,1044,22],[986,28,1044,26],[986,31,1044,29],[986,33,1044,31],[987,14,1045,12],[987,21,1045,19],[987,25,1045,23],[988,12,1046,10],[989,12,1048,10],[989,19,1048,17,"projectile"],[989,29,1048,27],[990,10,1049,8],[990,11,1049,9],[990,12,1049,10],[990,13,1049,11,"filter"],[990,19,1049,17],[990,20,1049,18,"Boolean"],[990,27,1049,25],[990,28,1049,26],[991,8,1050,6],[991,9,1050,7],[991,10,1050,8],[992,6,1051,4],[992,7,1051,5],[994,6,1053,4],[995,6,1054,4],[995,10,1054,10,"impactInterval"],[995,24,1054,24],[995,27,1054,27,"setInterval"],[995,38,1054,38],[995,39,1054,39,"processProjectileImpacts"],[995,63,1054,63],[995,65,1054,65],[995,67,1054,67],[995,68,1054,68],[996,6,1055,4],[996,13,1055,11],[996,19,1055,17,"clearInterval"],[996,32,1055,30],[996,33,1055,31,"impactInterval"],[996,47,1055,45],[996,48,1055,46],[997,4,1056,2],[997,5,1056,3],[997,7,1056,5],[997,8,1056,6,"handleEnemyKill"],[997,23,1056,21],[997,24,1056,22],[997,25,1056,23],[999,4,1058,2],[1000,4,1059,2],[1000,8,1059,8,"saveAbilityData"],[1000,23,1059,23],[1000,26,1059,26],[1000,30,1059,26,"useCallback"],[1000,36,1059,37],[1000,37,1059,37,"useCallback"],[1000,48,1059,37],[1000,50,1059,38],[1000,56,1059,44],[1001,6,1060,4],[1001,10,1060,8,"combatState"],[1001,21,1060,19],[1001,22,1060,20,"abilityManager"],[1001,36,1060,34],[1001,38,1060,36],[1002,8,1061,6],[1002,12,1061,12,"abilityData"],[1002,23,1061,23],[1002,26,1061,26,"combatState"],[1002,37,1061,37],[1002,38,1061,38,"abilityManager"],[1002,52,1061,52],[1002,53,1061,53,"getSaveData"],[1002,64,1061,64],[1002,65,1061,65],[1002,66,1061,66],[1003,8,1062,6,"console"],[1003,15,1062,13],[1003,16,1062,14,"log"],[1003,19,1062,17],[1003,20,1062,18],[1003,70,1062,68],[1003,72,1062,70,"abilityData"],[1003,83,1062,81],[1003,84,1062,82],[1004,8,1063,6,"game"],[1004,12,1063,10],[1004,13,1063,11,"updateAbilityData"],[1004,30,1063,28],[1004,31,1063,29,"abilityData"],[1004,42,1063,40],[1004,43,1063,41],[1005,6,1064,4],[1006,4,1065,2],[1006,5,1065,3],[1006,7,1065,5],[1006,8,1065,6,"combatState"],[1006,19,1065,17],[1006,20,1065,18,"abilityManager"],[1006,34,1065,32],[1006,36,1065,34,"game"],[1006,40,1065,38],[1006,41,1065,39,"updateAbilityData"],[1006,58,1065,56],[1006,59,1065,57],[1006,60,1065,58],[1007,4,1067,2],[1007,8,1067,8,"contextValue"],[1007,20,1067,39],[1007,23,1067,42,"React"],[1007,28,1067,47],[1007,29,1067,47,"default"],[1007,36,1067,47],[1007,37,1067,48,"useMemo"],[1007,44,1067,55],[1007,45,1067,56],[1007,52,1067,63],[1008,6,1068,4,"combatState"],[1008,17,1068,15],[1009,6,1069,4,"projectiles"],[1009,17,1069,15],[1010,6,1070,4,"startCombat"],[1010,17,1070,15],[1011,6,1071,4,"stopCombat"],[1011,16,1071,14],[1012,6,1072,4,"equipAbility"],[1012,18,1072,16],[1013,6,1073,4,"handleEnemyKill"],[1013,21,1073,19],[1014,6,1074,4,"getDeck"],[1014,13,1074,11],[1015,6,1075,4,"getAvailableAbilities"],[1015,27,1075,25],[1016,6,1076,4,"upgradeAbility"],[1016,20,1076,18],[1017,6,1077,4,"spawnEnemy"],[1017,16,1077,14],[1018,6,1078,4,"spawnBoss"],[1018,15,1078,13],[1019,6,1079,4,"clearAllEnemies"],[1019,21,1079,19],[1020,6,1080,4,"clearSpecificEnemy"],[1020,24,1080,22],[1021,6,1081,4,"triggerLevelUpExplosion"],[1021,29,1081,27],[1022,6,1082,4,"findClosestEnemy"],[1022,22,1082,20],[1023,6,1083,4,"updateNinjaPosition"],[1023,25,1083,23],[1024,6,1084,4,"setManualControlActive"],[1024,28,1084,26],[1025,6,1085,4,"lastExplosionTime"],[1025,23,1085,21],[1026,6,1086,4,"useAbilityManually"],[1026,24,1086,22],[1027,6,1086,24],[1028,6,1087,4,"saveAbilityData"],[1028,21,1087,19],[1029,6,1087,21],[1030,6,1088,4,"shadowClone"],[1030,17,1088,15],[1030,19,1088,17,"combatState"],[1030,30,1088,28],[1030,31,1088,29,"shadowClone"],[1030,42,1088,40],[1030,43,1088,42],[1031,4,1089,2],[1031,5,1089,3],[1031,6,1089,4],[1031,8,1089,6],[1032,4,1090,4],[1033,4,1091,4],[1034,4,1092,4,"combatState"],[1034,15,1092,15],[1034,17,1093,4,"projectiles"],[1034,28,1093,15],[1034,30,1094,4,"lastExplosionTime"],[1034,47,1094,21],[1035,4,1095,4],[1036,4,1096,4,"combatState"],[1036,15,1096,15],[1036,16,1096,16,"abilityManager"],[1036,30,1096,30],[1036,32,1097,4,"combatState"],[1036,43,1097,15],[1036,44,1097,16,"enemies"],[1036,51,1097,23],[1036,53,1098,4,"combatState"],[1036,64,1098,15],[1036,65,1098,16,"shadowClone"],[1036,76,1098,27],[1037,4,1098,29],[1038,4,1099,4,"useAbilityManually"],[1038,22,1099,22],[1039,4,1099,24],[1040,4,1100,4,"saveAbilityData"],[1040,19,1100,19],[1040,20,1100,21],[1041,4,1100,21],[1041,5,1101,3],[1041,6,1101,4],[1042,4,1103,2],[1042,24,1104,4],[1042,28,1104,4,"_reactJsxDevRuntime"],[1042,47,1104,4],[1042,48,1104,4,"jsxDEV"],[1042,54,1104,4],[1042,56,1104,5,"CombatContext"],[1042,69,1104,18],[1042,70,1104,19,"Provider"],[1042,78,1104,27],[1043,6,1104,28,"value"],[1043,11,1104,33],[1043,13,1104,35,"contextValue"],[1043,25,1104,48],[1044,6,1104,48,"children"],[1044,14,1104,48],[1044,16,1105,7,"children"],[1045,4,1105,15],[1046,6,1105,15,"fileName"],[1046,14,1105,15],[1046,16,1105,15,"_jsxFileName"],[1046,28,1105,15],[1047,6,1105,15,"lineNumber"],[1047,16,1105,15],[1048,6,1105,15,"columnNumber"],[1048,18,1105,15],[1049,4,1105,15],[1049,11,1106,28],[1049,12,1106,29],[1050,2,1108,0],[1050,3,1108,1],[1051,2,1108,2,"_s4"],[1051,5,1108,2],[1051,6,100,13,"CombatProvider"],[1051,20,100,27],[1052,4,100,27],[1052,12,101,15,"useGame"],[1052,24,101,22],[1052,25,101,22,"useGame"],[1052,32,101,22],[1052,34,102,77,"useZone"],[1052,46,102,84],[1052,47,102,84,"useZone"],[1052,54,102,84],[1053,2,102,84],[1054,2,102,84,"_c"],[1054,4,102,84],[1054,7,100,13,"CombatProvider"],[1054,21,100,27],[1055,2,100,27],[1055,6,100,27,"_c"],[1055,8,100,27],[1056,2,100,27,"$RefreshReg$"],[1056,14,100,27],[1056,15,100,27,"_c"],[1056,17,100,27],[1057,0,100,27],[1057,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BNyD;mBMG;ORgC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}