{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"9siiigj3E6jh4LilJaO2SzlyIr4=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":931,"map":[[15,2,89,0,"Object"],[15,8,89,0],[15,9,89,0,"defineProperty"],[15,23,89,0],[15,24,89,0,"exports"],[15,31,89,0],[16,4,89,0,"enumerable"],[16,14,89,0],[17,4,89,0,"get"],[17,7,89,0],[17,18,89,0,"get"],[17,19,89,0],[18,6,89,0],[18,13,89,0,"useCombat"],[18,22,89,0],[19,4,89,0],[20,2,89,0],[21,2,99,0,"Object"],[21,8,99,0],[21,9,99,0,"defineProperty"],[21,23,99,0],[21,24,99,0,"exports"],[21,31,99,0],[22,4,99,0,"enumerable"],[22,14,99,0],[23,4,99,0,"get"],[23,7,99,0],[23,18,99,0,"get"],[23,19,99,0],[24,6,99,0],[24,13,99,0,"CombatProvider"],[24,27,99,0],[25,4,99,0],[26,2,99,0],[27,2,968,2],[27,6,968,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,968,2],[27,42,968,2,"require"],[27,49,968,2],[27,50,968,2,"_dependencyMap"],[27,64,968,2],[28,2,968,2],[28,6,968,2,"_slicedToArray"],[28,20,968,2],[28,23,968,2,"_interopDefault"],[28,38,968,2],[28,39,968,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,968,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,87,0],[37,6,87,6,"CombatContext"],[37,19,87,19],[37,35,87,22],[37,39,87,22,"createContext"],[37,45,87,35],[37,46,87,35,"createContext"],[37,59,87,35],[37,61,87,67,"undefined"],[37,70,87,76],[37,71,87,77],[38,2,89,7],[38,6,89,13,"useCombat"],[38,15,89,22],[38,18,89,25,"useCombat"],[38,19,89,25],[38,24,89,50],[39,4,89,50,"_s"],[39,6,89,50],[40,4,90,2],[40,8,90,8,"context"],[40,15,90,15],[40,18,90,18],[40,22,90,18,"useContext"],[40,28,90,28],[40,29,90,28,"useContext"],[40,39,90,28],[40,41,90,29,"CombatContext"],[40,54,90,42],[40,55,90,43],[41,4,91,2],[41,8,91,6],[41,9,91,7,"context"],[41,16,91,14],[41,18,91,16],[42,6,92,4],[42,12,92,10],[42,16,92,14,"Error"],[42,21,92,19],[42,22,92,20],[42,70,92,68],[42,71,92,69],[43,4,93,2],[44,4,94,2],[44,11,94,9,"context"],[44,18,94,16],[45,2,95,0],[45,3,95,1],[46,2,95,2,"_s"],[46,4,95,2],[46,5,89,13,"useCombat"],[46,14,89,22],[47,2,97,0],[47,6,97,4,"enemyCounter"],[47,18,97,16],[47,21,97,19],[47,22,97,20],[47,23,97,21],[47,24,97,22],[49,2,99,7],[49,6,99,13,"CombatProvider"],[49,20,99,27],[49,23,99,30,"_ref"],[49,27,99,30],[49,31,99,73],[50,4,99,73,"_s4"],[50,7,99,73],[51,4,99,73],[51,8,99,73,"_s3"],[51,11,99,73],[51,14,99,73,"$RefreshSig$"],[51,26,99,73],[52,4,99,73],[52,8,99,33,"children"],[52,16,99,41],[52,19,99,41,"_ref"],[52,23,99,41],[52,24,99,33,"children"],[52,32,99,41],[53,4,100,2],[53,8,100,8,"game"],[53,12,100,12],[53,15,100,15],[53,19,100,15,"useGame"],[53,31,100,22],[53,32,100,22,"useGame"],[53,39,100,22],[53,41,100,23],[53,42,100,24],[54,4,101,2],[54,8,101,2,"_useZone"],[54,16,101,2],[54,19,101,77],[54,23,101,77,"useZone"],[54,35,101,84],[54,36,101,84,"useZone"],[54,43,101,84],[54,45,101,85],[54,46,101,86],[55,6,101,10,"currentZone"],[55,17,101,21],[55,20,101,21,"_useZone"],[55,28,101,21],[55,29,101,10,"currentZone"],[55,40,101,21],[56,6,101,23,"currentZoneLevel"],[56,22,101,39],[56,25,101,39,"_useZone"],[56,33,101,39],[56,34,101,23,"currentZoneLevel"],[56,50,101,39],[57,6,101,41,"recordEnemyKill"],[57,21,101,56],[57,24,101,56,"_useZone"],[57,32,101,56],[57,33,101,41,"recordEnemyKill"],[57,48,101,56],[58,6,101,58,"spawnZoneEnemy"],[58,20,101,72],[58,23,101,72,"_useZone"],[58,31,101,72],[58,32,101,58,"spawnZoneEnemy"],[58,46,101,72],[60,4,103,2],[61,4,104,2],[61,8,104,8,"initialCombatState"],[61,26,104,39],[61,29,104,42],[62,6,105,4,"isInCombat"],[62,16,105,14],[62,18,105,16],[62,23,105,21],[63,6,106,4,"currentTick"],[63,17,106,15],[63,19,106,17],[63,20,106,18],[64,6,107,4,"enemies"],[64,13,107,11],[64,15,107,13],[64,17,107,15],[65,6,108,4,"abilityManager"],[65,20,108,18],[65,22,108,20],[65,26,108,24,"AbilityManager"],[65,44,108,38],[65,45,108,38,"AbilityManager"],[65,59,108,38],[65,60,108,39],[65,61,108,40],[66,6,109,4,"statusEffects"],[66,19,109,17],[66,21,109,19],[66,25,109,23,"StatusEffectManager"],[66,44,109,42],[66,45,109,42,"StatusEffectManager"],[66,64,109,42],[66,65,109,43],[66,66,109,44],[67,6,110,4,"playerStats"],[67,17,110,15],[67,19,110,17],[68,8,111,6,"attack"],[68,14,111,12],[68,16,111,14],[68,18,111,16],[69,8,111,18],[70,8,112,6,"defense"],[70,15,112,13],[70,17,112,15],[70,18,112,16],[71,8,113,6,"health"],[71,14,113,12],[71,16,113,14],[71,19,113,17],[72,8,114,6,"maxHealth"],[72,17,114,15],[72,19,114,17],[72,22,114,20],[73,8,115,6,"critChance"],[73,18,115,16],[73,20,115,18],[73,21,115,19],[74,8,116,6,"critDamage"],[74,18,116,16],[74,20,116,18],[74,23,116,21],[75,8,117,6,"cooldownReduction"],[75,25,117,23],[75,27,117,25],[76,6,118,4],[77,4,119,2],[77,5,119,3],[78,4,121,2],[78,8,121,2,"_useState"],[78,17,121,2],[78,20,121,40],[78,24,121,40,"useState"],[78,30,121,48],[78,31,121,48,"useState"],[78,39,121,48],[78,41,121,62,"initialCombatState"],[78,59,121,80],[78,60,121,81],[79,6,121,81,"_useState2"],[79,16,121,81],[79,23,121,81,"_slicedToArray"],[79,37,121,81],[79,38,121,81,"default"],[79,45,121,81],[79,47,121,81,"_useState"],[79,56,121,81],[80,6,121,9,"combatState"],[80,17,121,20],[80,20,121,20,"_useState2"],[80,30,121,20],[81,6,121,22,"setCombatState"],[81,20,121,36],[81,23,121,36,"_useState2"],[81,33,121,36],[83,4,123,2],[84,4,124,2],[84,8,124,2,"useEffect"],[84,14,124,11],[84,15,124,11,"useEffect"],[84,24,124,11],[84,26,124,12],[84,32,124,18],[85,6,125,4],[85,10,125,8,"game"],[85,14,125,12],[85,15,125,13,"gameState"],[85,24,125,22],[85,25,125,23,"abilityData"],[85,36,125,34],[85,40,125,38,"combatState"],[85,51,125,49],[85,52,125,50,"abilityManager"],[85,66,125,64],[85,68,125,66],[86,8,126,6,"console"],[86,15,126,13],[86,16,126,14,"log"],[86,19,126,17],[86,20,126,18],[86,68,126,66],[86,70,126,68,"game"],[86,74,126,72],[86,75,126,73,"gameState"],[86,84,126,82],[86,85,126,83,"abilityData"],[86,96,126,94],[86,97,126,95],[87,8,127,6,"combatState"],[87,19,127,17],[87,20,127,18,"abilityManager"],[87,34,127,32],[87,35,127,33,"restoreFromSaveData"],[87,54,127,52],[87,55,127,53,"game"],[87,59,127,57],[87,60,127,58,"gameState"],[87,69,127,67],[87,70,127,68,"abilityData"],[87,81,127,79],[87,82,127,80],[89,8,129,6],[90,8,130,6,"setCombatState"],[90,22,130,20],[90,23,130,21,"prev"],[90,27,130,25],[90,32,130,30],[91,10,130,32],[91,13,130,35,"prev"],[92,8,130,40],[92,9,130,41],[92,10,130,42],[92,11,130,43],[93,6,131,4],[94,4,132,2],[94,5,132,3],[94,7,132,5],[94,8,132,6,"game"],[94,12,132,10],[94,13,132,11,"gameState"],[94,22,132,20],[94,23,132,21,"abilityData"],[94,34,132,32],[94,36,132,34,"combatState"],[94,47,132,45],[94,48,132,46,"abilityManager"],[94,62,132,60],[94,63,132,61],[94,64,132,62],[95,4,134,2],[95,8,134,2,"_useState3"],[95,18,134,2],[95,21,134,40],[95,25,134,40,"useState"],[95,31,134,48],[95,32,134,48,"useState"],[95,40,134,48],[95,42,134,69],[95,44,134,71],[95,45,134,72],[96,6,134,72,"_useState4"],[96,16,134,72],[96,23,134,72,"_slicedToArray"],[96,37,134,72],[96,38,134,72,"default"],[96,45,134,72],[96,47,134,72,"_useState3"],[96,57,134,72],[97,6,134,9,"projectiles"],[97,17,134,20],[97,20,134,20,"_useState4"],[97,30,134,20],[98,6,134,22,"setProjectiles"],[98,20,134,36],[98,23,134,36,"_useState4"],[98,33,134,36],[99,4,135,2],[99,8,135,2,"_useState5"],[99,18,135,2],[99,21,135,52],[99,25,135,52,"useState"],[99,31,135,60],[99,32,135,60,"useState"],[99,40,135,60],[99,42,135,69],[99,43,135,70],[99,44,135,71],[100,6,135,71,"_useState6"],[100,16,135,71],[100,23,135,71,"_slicedToArray"],[100,37,135,71],[100,38,135,71,"default"],[100,45,135,71],[100,47,135,71,"_useState5"],[100,57,135,71],[101,6,135,9,"lastExplosionTime"],[101,23,135,26],[101,26,135,26,"_useState6"],[101,36,135,26],[102,6,135,28,"setLastExplosionTime"],[102,26,135,48],[102,29,135,48,"_useState6"],[102,39,135,48],[103,4,136,2],[104,4,137,2],[106,4,139,2],[107,4,140,2],[107,8,140,8,"handleEnemyKill"],[107,23,140,23],[107,26,140,26],[107,30,140,26,"useCallback"],[107,36,140,37],[107,37,140,37,"useCallback"],[107,48,140,37],[107,50,140,39,"enemy"],[107,55,140,57],[107,59,140,62],[108,6,141,4,"console"],[108,13,141,11],[108,14,141,12,"log"],[108,17,141,15],[108,18,141,16],[108,73,141,71],[108,75,141,73,"enemy"],[108,80,141,78],[108,81,141,79,"id"],[108,83,141,81],[108,84,141,82],[110,6,143,4],[111,6,144,4],[111,10,144,10,"baseXpReward"],[111,22,144,22],[111,25,144,25],[111,28,144,28],[111,29,144,29],[111,30,144,30],[112,6,145,4],[112,10,145,10,"xpMultiplier"],[112,22,145,22],[112,25,145,25,"game"],[112,29,145,29],[112,30,145,30,"gameState"],[112,39,145,39],[112,40,145,40,"subscriptionBenefits"],[112,60,145,60],[112,62,145,62,"xp_multiplier"],[112,75,145,75],[112,79,145,79],[112,82,145,82],[113,6,146,4],[113,10,146,10,"dropMultiplier"],[113,24,146,24],[113,27,146,27,"game"],[113,31,146,31],[113,32,146,32,"gameState"],[113,41,146,41],[113,42,146,42,"subscriptionBenefits"],[113,62,146,62],[113,64,146,64,"drop_multiplier"],[113,79,146,79],[113,83,146,83],[113,86,146,86],[114,6,148,4],[114,10,148,10,"xpReward"],[114,18,148,18],[114,21,148,21,"Math"],[114,25,148,25],[114,26,148,26,"floor"],[114,31,148,31],[114,32,148,32,"baseXpReward"],[114,44,148,44],[114,47,148,47,"xpMultiplier"],[114,59,148,59],[114,60,148,60],[115,6,149,4],[115,10,149,10,"goldReward"],[115,20,149,20],[115,23,149,23,"Math"],[115,27,149,27],[115,28,149,28,"floor"],[115,33,149,33],[115,34,149,34],[115,38,149,38],[115,41,149,41,"dropMultiplier"],[115,55,149,55],[115,56,149,56],[115,57,149,57],[115,58,149,58],[117,6,151,4,"console"],[117,13,151,11],[117,14,151,12,"log"],[117,17,151,15],[117,18,151,16],[117,48,151,46,"xpReward"],[117,56,151,54],[117,67,151,65,"goldReward"],[117,77,151,75],[117,93,151,91],[117,94,151,92],[118,6,152,4,"console"],[118,13,152,11],[118,14,152,12,"log"],[118,17,152,15],[118,18,152,16],[118,60,152,58,"xpMultiplier"],[118,72,152,70],[118,94,152,92,"dropMultiplier"],[118,108,152,106],[118,110,152,108],[118,111,152,109],[119,6,153,4,"console"],[119,13,153,11],[119,14,153,12,"log"],[119,17,153,15],[119,18,153,16],[119,54,153,52,"baseXpReward"],[119,66,153,64],[119,81,153,79,"xpReward"],[119,89,153,87],[119,91,153,89],[119,92,153,90],[120,6,154,4,"console"],[120,13,154,11],[120,14,154,12,"log"],[120,17,154,15],[120,18,154,16],[120,58,154,56],[120,60,154,58,"JSON"],[120,64,154,62],[120,65,154,63,"stringify"],[120,74,154,72],[120,75,154,73,"game"],[120,79,154,77],[120,80,154,78,"gameState"],[120,89,154,87],[120,90,154,88,"subscriptionBenefits"],[120,110,154,108],[120,111,154,109],[120,112,154,110],[121,6,155,4,"console"],[121,13,155,11],[121,14,155,12,"log"],[121,17,155,15],[121,18,155,16],[121,49,155,47,"Platform"],[121,61,155,55],[121,62,155,55,"Platform"],[121,70,155,55],[121,71,155,56,"OS"],[121,73,155,58],[121,84,155,69,"Date"],[121,88,155,73],[121,89,155,74,"now"],[121,92,155,77],[121,93,155,78],[121,94,155,79],[121,96,155,81],[121,97,155,82],[123,6,157,4],[124,6,158,4],[125,6,159,4,"setTimeout"],[125,16,159,14],[125,17,159,15],[125,23,159,21],[126,8,160,6,"console"],[126,15,160,13],[126,16,160,14,"log"],[126,19,160,17],[126,20,160,18],[126,78,160,76],[126,79,160,77],[128,8,162,6],[129,8,163,6,"game"],[129,12,163,10],[129,13,163,11,"updateNinja"],[129,24,163,22],[129,25,163,24,"prev"],[129,29,163,28],[129,33,163,33],[130,10,164,8,"console"],[130,17,164,15],[130,18,164,16,"log"],[130,21,164,19],[130,22,164,20],[130,54,164,52,"prev"],[130,58,164,56],[130,59,164,57,"experience"],[130,69,164,67],[130,81,164,79,"prev"],[130,85,164,83],[130,86,164,84,"experience"],[130,96,164,94],[130,99,164,97,"xpReward"],[130,107,164,105],[130,109,164,107],[130,110,164,108],[131,10,165,8,"console"],[131,17,165,15],[131,18,165,16,"log"],[131,21,165,19],[131,22,165,20],[131,56,165,54,"prev"],[131,60,165,58],[131,61,165,59,"gold"],[131,65,165,63],[131,77,165,75,"prev"],[131,81,165,79],[131,82,165,80,"gold"],[131,86,165,84],[131,89,165,87,"goldReward"],[131,99,165,97],[131,101,165,99],[131,102,165,100],[132,10,166,8],[132,17,166,15],[133,12,167,10,"experience"],[133,22,167,20],[133,24,167,22,"prev"],[133,28,167,26],[133,29,167,27,"experience"],[133,39,167,37],[133,42,167,40,"xpReward"],[133,50,167,48],[134,12,168,10,"gold"],[134,16,168,14],[134,18,168,16,"prev"],[134,22,168,20],[134,23,168,21,"gold"],[134,27,168,25],[134,30,168,28,"goldReward"],[135,10,169,8],[135,11,169,9],[136,8,170,6],[136,9,170,7],[136,10,170,8],[138,8,172,6],[139,8,173,6],[139,12,173,12,"zoneEnemy"],[139,21,173,21],[139,24,173,24],[140,10,174,8,"id"],[140,12,174,10],[140,14,174,12,"enemy"],[140,19,174,17],[140,20,174,18,"id"],[140,22,174,20],[141,10,175,8,"typeId"],[141,16,175,14],[141,18,175,16,"enemy"],[141,23,175,21],[141,24,175,22,"zoneTypeId"],[141,34,175,32],[141,38,175,36],[141,48,175,46],[142,10,175,48],[143,10,176,8,"name"],[143,14,176,12],[143,16,176,14,"enemy"],[143,21,176,19],[143,22,176,20,"name"],[143,26,176,24],[144,10,177,8,"icon"],[144,14,177,12],[144,16,177,14],[144,20,177,18],[145,10,177,20],[146,10,178,8,"hp"],[146,12,178,10],[146,14,178,12],[146,15,178,13],[147,10,178,15],[148,10,179,8,"maxHP"],[148,15,179,13],[148,17,179,15,"enemy"],[148,22,179,20],[148,23,179,21,"maxHealth"],[148,32,179,30],[149,10,180,8,"attack"],[149,16,180,14],[149,18,180,16,"enemy"],[149,23,180,21],[149,24,180,22,"stats"],[149,29,180,27],[149,30,180,28,"attack"],[149,36,180,34],[150,10,181,8,"xp"],[150,12,181,10],[150,14,181,12,"enemy"],[150,19,181,17],[150,20,181,18,"zoneXP"],[150,26,181,24],[150,30,181,28],[150,32,181,30],[151,10,181,32],[152,10,182,8,"position"],[152,18,182,16],[152,20,182,18,"enemy"],[152,25,182,23],[152,26,182,24,"position"],[153,8,183,6],[153,9,183,7],[154,8,185,6,"console"],[154,15,185,13],[154,16,185,14,"log"],[154,19,185,17],[154,20,185,18],[154,40,185,38,"zoneEnemy"],[154,49,185,47],[154,50,185,48,"name"],[154,54,185,52],[154,59,185,57,"zoneEnemy"],[154,68,185,66],[154,69,185,67,"typeId"],[154,75,185,73],[154,113,185,111],[154,114,185,112],[155,8,186,6,"recordEnemyKill"],[155,23,186,21],[155,24,186,22,"zoneEnemy"],[155,33,186,31],[155,34,186,32],[156,6,187,4],[156,7,187,5],[156,9,187,7],[156,10,187,8],[156,11,187,9],[156,12,187,10],[156,13,187,11],[157,4,188,2],[157,5,188,3],[157,7,188,5],[157,8,188,6,"game"],[157,12,188,10],[157,13,188,11,"updateNinja"],[157,24,188,22],[157,26,188,24,"recordEnemyKill"],[157,41,188,39],[157,42,188,40],[157,43,188,41],[159,4,190,2],[160,4,191,2],[160,8,191,8,"handleCombatTick"],[160,24,191,24],[160,27,191,27,"React"],[160,32,191,32],[160,33,191,32,"default"],[160,40,191,32],[160,41,191,33,"useCallback"],[160,52,191,44],[160,53,191,45],[160,59,191,51],[161,6,191,51],[161,10,191,51,"_s2"],[161,13,191,51],[161,16,191,51,"$RefreshSig$"],[161,28,191,51],[162,6,192,4,"console"],[162,13,192,11],[162,14,192,12,"log"],[162,17,192,15],[162,18,192,16],[162,87,192,85],[162,88,192,86],[163,6,194,4],[163,10,194,8,"enemiesToKill"],[163,23,194,36],[163,26,194,39],[163,28,194,41],[163,29,194,42],[163,30,194,43],[165,6,196,4,"_s2"],[165,9,196,4],[165,10,196,4,"setCombatState"],[165,24,196,18],[165,25,196,18,"_s2"],[165,28,196,18],[165,29,196,19,"prev"],[165,33,196,23],[165,37,196,27],[166,8,196,27,"_s2"],[166,11,196,27],[167,8,197,6],[167,12,197,12,"newTick"],[167,19,197,19],[167,22,197,22,"combatEngine"],[167,41,197,34],[167,42,197,34,"combatEngine"],[167,54,197,34],[167,55,197,35,"getCurrentTick"],[167,69,197,49],[167,70,197,50],[167,71,197,51],[168,8,198,6],[168,12,198,12,"newState"],[168,20,198,20],[168,23,198,23],[169,10,198,25],[169,13,198,28,"prev"],[169,17,198,32],[170,10,198,34,"currentTick"],[170,21,198,45],[170,23,198,47,"newTick"],[171,8,198,55],[171,9,198,56],[172,8,200,6],[172,12,200,10],[172,13,200,11,"newState"],[172,21,200,19],[172,22,200,20,"isInCombat"],[172,32,200,30],[172,34,200,32],[172,41,200,39,"newState"],[172,49,200,47],[174,8,202,6],[175,8,203,6,"newState"],[175,16,203,14],[175,17,203,15,"abilityManager"],[175,31,203,29],[175,32,203,30,"updateCooldowns"],[175,47,203,45],[175,48,203,46,"newTick"],[175,55,203,53],[175,56,203,54],[177,8,205,6],[178,8,206,6],[178,12,206,12,"effectResults"],[178,25,206,25],[178,28,206,28,"newState"],[178,36,206,36],[178,37,206,37,"statusEffects"],[178,50,206,50],[178,51,206,51,"processTick"],[178,62,206,62],[178,63,206,63,"newTick"],[178,70,206,70],[178,71,206,71],[180,8,208,6],[181,8,209,6,"effectResults"],[181,21,209,19],[181,22,209,20,"forEach"],[181,29,209,27],[181,30,209,28],[181,31,209,29,"results"],[181,38,209,36],[181,40,209,38,"entityId"],[181,48,209,46],[181,53,209,51],[182,10,210,8],[182,14,210,14,"enemyIndex"],[182,24,210,24],[182,27,210,27,"newState"],[182,35,210,35],[182,36,210,36,"enemies"],[182,43,210,43],[182,44,210,44,"findIndex"],[182,53,210,53],[182,54,210,54,"e"],[182,55,210,55],[182,59,210,59,"e"],[182,60,210,60],[182,61,210,61,"id"],[182,63,210,63],[182,68,210,68,"entityId"],[182,76,210,76],[182,77,210,77],[183,10,211,8],[183,14,211,12,"enemyIndex"],[183,24,211,22],[183,28,211,26],[183,29,211,27],[183,31,211,29],[184,12,212,10,"results"],[184,19,212,17],[184,20,212,18,"forEach"],[184,27,212,25],[184,28,212,26,"result"],[184,34,212,32],[184,38,212,36],[185,14,213,12,"newState"],[185,22,213,20],[185,23,213,21,"enemies"],[185,30,213,28],[185,31,213,29,"enemyIndex"],[185,41,213,39],[185,42,213,40],[185,43,213,41,"health"],[185,49,213,47],[185,53,213,51,"result"],[185,59,213,57],[185,60,213,58,"damage"],[185,66,213,64],[186,14,214,12,"newState"],[186,22,214,20],[186,23,214,21,"enemies"],[186,30,214,28],[186,31,214,29,"enemyIndex"],[186,41,214,39],[186,42,214,40],[186,43,214,41,"lastDamaged"],[186,54,214,52],[186,57,214,55,"newTick"],[186,64,214,62],[187,12,215,10],[187,13,215,11],[187,14,215,12],[188,10,216,8],[189,8,217,6],[189,9,217,7],[189,10,217,8],[191,8,219,6],[192,8,220,6,"newState"],[192,16,220,14],[192,17,220,15,"enemies"],[192,24,220,22],[192,25,220,23,"forEach"],[192,32,220,30],[192,33,220,31,"enemy"],[192,38,220,36],[192,42,220,40],[193,10,221,8],[193,14,221,12],[193,15,221,13,"enemy"],[193,20,221,18],[193,21,221,19,"isBoss"],[193,27,221,25],[193,29,221,27],[194,12,221,29],[195,12,222,10],[196,12,223,10],[196,16,223,16,"MOVEMENT_SPEED"],[196,30,223,30],[196,33,223,33],[196,37,223,37],[196,38,223,38],[196,39,223,39],[197,12,224,10],[197,16,224,16,"SCREEN_WIDTH"],[197,28,224,28],[197,31,224,31],[197,34,224,34],[198,12,225,10],[198,16,225,16,"GAME_AREA_HEIGHT"],[198,32,225,32],[198,35,225,35],[198,38,225,38],[198,39,225,39],[198,40,225,40],[199,12,226,10],[199,16,226,16,"ENEMY_SIZE"],[199,26,226,26],[199,29,226,29],[199,31,226,31],[201,12,228,10],[202,12,229,10],[202,16,229,16,"playerX"],[202,23,229,23],[202,26,229,26,"currentNinjaPosition"],[202,46,229,46],[202,47,229,47,"x"],[202,48,229,48],[203,12,230,10],[203,16,230,16,"playerY"],[203,23,230,23],[203,26,230,26,"currentNinjaPosition"],[203,46,230,46],[203,47,230,47,"y"],[203,48,230,48],[205,12,232,10],[206,12,233,10],[206,16,233,16,"deltaX"],[206,22,233,22],[206,25,233,25,"playerX"],[206,32,233,32],[206,35,233,35,"enemy"],[206,40,233,40],[206,41,233,41,"position"],[206,49,233,49],[206,50,233,50,"x"],[206,51,233,51],[207,12,234,10],[207,16,234,16,"deltaY"],[207,22,234,22],[207,25,234,25,"playerY"],[207,32,234,32],[207,35,234,35,"enemy"],[207,40,234,40],[207,41,234,41,"position"],[207,49,234,49],[207,50,234,50,"y"],[207,51,234,51],[208,12,235,10],[208,16,235,16,"distance"],[208,24,235,24],[208,27,235,27,"Math"],[208,31,235,31],[208,32,235,32,"sqrt"],[208,36,235,36],[208,37,235,37,"deltaX"],[208,43,235,43],[208,46,235,46,"deltaX"],[208,52,235,52],[208,55,235,55,"deltaY"],[208,61,235,61],[208,64,235,64,"deltaY"],[208,70,235,70],[208,71,235,71],[210,12,237,10],[211,12,238,10],[211,16,238,14,"distance"],[211,24,238,22],[211,27,238,25],[211,29,238,27],[211,31,238,29],[212,14,239,12],[213,14,240,12],[213,18,240,18,"normalizedX"],[213,29,240,29],[213,32,240,32,"deltaX"],[213,38,240,38],[213,41,240,41,"distance"],[213,49,240,49],[214,14,241,12],[214,18,241,18,"normalizedY"],[214,29,241,29],[214,32,241,32,"deltaY"],[214,38,241,38],[214,41,241,41,"distance"],[214,49,241,49],[216,14,243,12],[217,14,244,12],[217,18,244,18,"randomFactor"],[217,30,244,30],[217,33,244,33],[217,36,244,36],[217,37,244,37],[217,38,244,38],[218,14,245,12],[218,18,245,18,"finalX"],[218,24,245,24],[218,27,245,27,"normalizedX"],[218,38,245,38],[218,41,245,41],[218,42,245,42,"Math"],[218,46,245,46],[218,47,245,47,"random"],[218,53,245,53],[218,54,245,54],[218,55,245,55],[218,58,245,58],[218,61,245,61],[218,65,245,65,"randomFactor"],[218,77,245,77],[219,14,246,12],[219,18,246,18,"finalY"],[219,24,246,24],[219,27,246,27,"normalizedY"],[219,38,246,38],[219,41,246,41],[219,42,246,42,"Math"],[219,46,246,46],[219,47,246,47,"random"],[219,53,246,53],[219,54,246,54],[219,55,246,55],[219,58,246,58],[219,61,246,61],[219,65,246,65,"randomFactor"],[219,77,246,77],[221,14,248,12],[222,14,249,12],[222,18,249,16,"newX"],[222,22,249,20],[222,25,249,23,"enemy"],[222,30,249,28],[222,31,249,29,"position"],[222,39,249,37],[222,40,249,38,"x"],[222,41,249,39],[222,44,249,43,"finalX"],[222,50,249,49],[222,53,249,52,"MOVEMENT_SPEED"],[222,67,249,67],[223,14,250,12],[223,18,250,16,"newY"],[223,22,250,20],[223,25,250,23,"enemy"],[223,30,250,28],[223,31,250,29,"position"],[223,39,250,37],[223,40,250,38,"y"],[223,41,250,39],[223,44,250,43,"finalY"],[223,50,250,49],[223,53,250,52,"MOVEMENT_SPEED"],[223,67,250,67],[225,14,252,12],[226,14,253,12,"newX"],[226,18,253,16],[226,21,253,19,"Math"],[226,25,253,23],[226,26,253,24,"max"],[226,29,253,27],[226,30,253,28],[226,31,253,29],[226,33,253,31,"Math"],[226,37,253,35],[226,38,253,36,"min"],[226,41,253,39],[226,42,253,40,"SCREEN_WIDTH"],[226,54,253,52],[226,57,253,55,"ENEMY_SIZE"],[226,67,253,65],[226,69,253,67,"newX"],[226,73,253,71],[226,74,253,72],[226,75,253,73],[227,14,254,12,"newY"],[227,18,254,16],[227,21,254,19,"Math"],[227,25,254,23],[227,26,254,24,"max"],[227,29,254,27],[227,30,254,28],[227,31,254,29],[227,33,254,31,"Math"],[227,37,254,35],[227,38,254,36,"min"],[227,41,254,39],[227,42,254,40,"GAME_AREA_HEIGHT"],[227,58,254,56],[227,61,254,59,"ENEMY_SIZE"],[227,71,254,69],[227,73,254,71,"newY"],[227,77,254,75],[227,78,254,76],[227,79,254,77],[229,14,256,12],[230,14,257,12,"enemy"],[230,19,257,17],[230,20,257,18,"position"],[230,28,257,26],[230,29,257,27,"x"],[230,30,257,28],[230,33,257,31,"newX"],[230,37,257,35],[231,14,258,12,"enemy"],[231,19,258,17],[231,20,258,18,"position"],[231,28,258,26],[231,29,258,27,"y"],[231,30,258,28],[231,33,258,31,"newY"],[231,37,258,35],[232,12,259,10],[233,12,260,10],[234,10,261,8],[235,8,262,6],[235,9,262,7],[235,10,262,8],[237,8,264,6],[238,8,265,6],[238,12,265,10,"newState"],[238,20,265,18],[238,21,265,19,"shadowClone"],[238,32,265,30],[238,34,265,32],[239,10,266,8],[240,10,267,8,"newState"],[240,18,267,16],[240,19,267,17,"shadowClone"],[240,30,267,28],[240,31,267,29,"remainingTicks"],[240,45,267,43],[240,47,267,45],[242,10,269,8],[243,10,270,8],[243,14,270,14,"cloneOffset"],[243,25,270,25],[243,28,270,28],[243,30,270,30],[243,31,270,31],[243,32,270,32],[244,10,271,8,"newState"],[244,18,271,16],[244,19,271,17,"shadowClone"],[244,30,271,28],[244,31,271,29,"position"],[244,39,271,37],[244,40,271,38,"x"],[244,41,271,39],[244,44,271,42,"currentNinjaPosition"],[244,64,271,62],[244,65,271,63,"x"],[244,66,271,64],[244,69,271,67,"cloneOffset"],[244,80,271,78],[245,10,272,8,"newState"],[245,18,272,16],[245,19,272,17,"shadowClone"],[245,30,272,28],[245,31,272,29,"position"],[245,39,272,37],[245,40,272,38,"y"],[245,41,272,39],[245,44,272,42,"currentNinjaPosition"],[245,64,272,62],[245,65,272,63,"y"],[245,66,272,64],[245,69,272,67],[245,71,272,69],[247,10,274,8],[248,10,275,8],[248,14,275,12,"newState"],[248,22,275,20],[248,23,275,21,"shadowClone"],[248,34,275,32],[248,35,275,33,"remainingTicks"],[248,49,275,47],[248,53,275,51],[248,54,275,52],[248,56,275,54],[249,12,276,10,"console"],[249,19,276,17],[249,20,276,18,"log"],[249,23,276,21],[249,24,276,22],[249,75,276,73],[249,76,276,74],[250,12,277,10,"newState"],[250,20,277,18],[250,21,277,19,"shadowClone"],[250,32,277,30],[250,35,277,33,"undefined"],[250,44,277,42],[251,10,278,8],[251,11,278,9],[251,17,278,15],[252,12,279,10],[253,12,280,10],[254,12,281,10],[254,16,281,16,"CLONE_ATTACK_INTERVAL"],[254,37,281,37],[254,40,281,40],[254,42,281,42],[255,12,282,10],[255,16,282,14,"newState"],[255,24,282,22],[255,25,282,23,"currentTick"],[255,36,282,34],[255,39,282,37,"CLONE_ATTACK_INTERVAL"],[255,60,282,58],[255,65,282,63],[255,66,282,64],[255,70,282,68,"newState"],[255,78,282,76],[255,79,282,77,"enemies"],[255,86,282,84],[255,87,282,85,"length"],[255,93,282,91],[255,96,282,94],[255,97,282,95],[255,99,282,97],[256,14,283,12,"console"],[256,21,283,19],[256,22,283,20,"log"],[256,25,283,23],[256,26,283,24],[256,83,283,81],[256,84,283,82],[258,14,285,12],[259,14,286,12],[259,18,286,18,"target"],[259,24,286,24],[259,27,286,27,"findClosestEnemyInternal"],[259,51,286,51],[259,52,286,52,"newState"],[259,60,286,60],[259,61,286,61,"enemies"],[259,68,286,68],[259,69,286,69],[260,14,287,12],[260,18,287,16,"target"],[260,24,287,22],[260,26,287,24],[261,16,288,14],[262,16,289,14],[262,20,289,20,"cloneDamage"],[262,31,289,31],[262,34,289,34,"Math"],[262,38,289,38],[262,39,289,39,"floor"],[262,44,289,44],[262,45,289,45,"newState"],[262,53,289,53],[262,54,289,54,"playerStats"],[262,65,289,65],[262,66,289,66,"attack"],[262,72,289,72],[262,75,289,75],[262,78,289,78],[262,79,289,79],[264,16,291,14],[265,16,292,14,"createProjectile"],[265,32,292,30],[265,33,292,31,"target"],[265,39,292,37],[265,41,292,39,"cloneDamage"],[265,52,292,50],[265,54,292,52,"newState"],[265,62,292,60],[265,63,292,61,"shadowClone"],[265,74,292,72],[265,75,292,73,"position"],[265,83,292,81],[265,85,292,83],[266,18,293,16,"id"],[266,20,293,18],[266,22,293,20],[266,43,293,41],[267,18,294,16,"name"],[267,22,294,20],[267,24,294,22],[267,45,294,43],[268,18,295,16,"icon"],[268,22,295,20],[268,24,295,22],[269,16,296,14],[269,17,296,15],[269,18,296,16],[270,14,297,12],[271,12,298,10],[272,10,299,8],[273,8,300,6],[275,8,302,6],[276,8,303,6],[276,12,303,10],[276,13,303,11,"isManualControlActive"],[276,34,303,32],[276,36,303,34],[277,10,304,8],[277,15,304,13],[277,19,304,17,"i"],[277,20,304,18],[277,23,304,21],[277,24,304,22],[277,26,304,24,"i"],[277,27,304,25],[277,30,304,28],[277,31,304,29],[277,33,304,31,"i"],[277,34,304,32],[277,36,304,34],[277,38,304,36],[278,12,305,10],[278,16,305,14,"newState"],[278,24,305,22],[278,25,305,23,"abilityManager"],[278,39,305,37],[278,40,305,38,"isAbilityReady"],[278,54,305,52],[278,55,305,53,"i"],[278,56,305,54],[278,57,305,55],[278,61,305,59,"newState"],[278,69,305,67],[278,70,305,68,"enemies"],[278,77,305,75],[278,78,305,76,"length"],[278,84,305,82],[278,87,305,85],[278,88,305,86],[278,90,305,88],[279,14,306,12],[279,18,306,16,"newState"],[279,26,306,24],[279,27,306,25,"abilityManager"],[279,41,306,39],[279,42,306,40,"useAbility"],[279,52,306,50],[279,53,306,51,"i"],[279,54,306,52],[279,56,306,54,"newTick"],[279,63,306,61],[279,64,306,62],[279,66,306,64],[280,16,307,14,"castAbility"],[280,27,307,25],[280,28,307,26,"newState"],[280,36,307,34],[280,38,307,36,"i"],[280,39,307,37],[280,40,307,38],[281,14,308,12],[282,12,309,10],[283,10,310,8],[284,8,311,6],[286,8,313,6],[287,8,314,6],[287,12,314,12,"deadEnemies"],[287,23,314,23],[287,26,314,26,"newState"],[287,34,314,34],[287,35,314,35,"enemies"],[287,42,314,42],[287,43,314,43,"filter"],[287,49,314,49],[287,50,314,50,"enemy"],[287,55,314,55],[287,59,314,59,"enemy"],[287,64,314,64],[287,65,314,65,"health"],[287,71,314,71],[287,75,314,75],[287,76,314,76],[287,77,314,77],[288,8,315,6,"enemiesToKill"],[288,21,315,19],[288,24,315,22],[288,25,315,23],[288,28,315,26,"deadEnemies"],[288,39,315,37],[288,40,315,38],[288,41,315,39],[288,42,315,40],[290,8,317,6],[291,8,318,6],[291,12,318,10,"deadEnemies"],[291,23,318,21],[291,24,318,22,"length"],[291,30,318,28],[291,33,318,31],[291,34,318,32],[291,36,318,34],[292,10,319,8,"console"],[292,17,319,15],[292,18,319,16,"log"],[292,21,319,19],[292,22,319,20],[292,49,319,47,"deadEnemies"],[292,60,319,58],[292,61,319,59,"length"],[292,67,319,65],[292,83,319,81],[292,85,319,83,"deadEnemies"],[292,96,319,94],[292,97,319,95,"map"],[292,100,319,98],[292,101,319,99,"e"],[292,102,319,100],[292,106,319,104],[292,109,319,107,"e"],[292,110,319,108],[292,111,319,109,"id"],[292,113,319,111],[292,117,319,115,"e"],[292,118,319,116],[292,119,319,117,"health"],[292,125,319,123],[292,130,319,128],[292,131,319,129],[292,132,319,130],[293,8,320,6],[295,8,322,6],[296,8,323,6],[296,12,323,12,"lowHealthEnemies"],[296,28,323,28],[296,31,323,31,"newState"],[296,39,323,39],[296,40,323,40,"enemies"],[296,47,323,47],[296,48,323,48,"filter"],[296,54,323,54],[296,55,323,55,"enemy"],[296,60,323,60],[296,64,323,64,"enemy"],[296,69,323,69],[296,70,323,70,"health"],[296,76,323,76],[296,80,323,80],[296,82,323,82],[296,86,323,86,"enemy"],[296,91,323,91],[296,92,323,92,"health"],[296,98,323,98],[296,101,323,101],[296,102,323,102],[296,103,323,103],[297,8,324,6],[297,12,324,10,"lowHealthEnemies"],[297,28,324,26],[297,29,324,27,"length"],[297,35,324,33],[297,38,324,36],[297,39,324,37],[297,41,324,39],[298,10,325,8,"console"],[298,17,325,15],[298,18,325,16,"log"],[298,21,325,19],[298,22,325,20],[298,61,325,59],[298,63,325,61,"lowHealthEnemies"],[298,79,325,77],[298,80,325,78,"map"],[298,83,325,81],[298,84,325,82,"e"],[298,85,325,83],[298,89,325,87],[298,92,325,90,"e"],[298,93,325,91],[298,94,325,92,"id"],[298,96,325,94],[298,100,325,98,"e"],[298,101,325,99],[298,102,325,100,"health"],[298,108,325,106],[298,112,325,110,"e"],[298,113,325,111],[298,114,325,112,"maxHealth"],[298,123,325,121],[298,128,325,126],[298,129,325,127],[298,130,325,128],[299,8,326,6],[301,8,328,6],[302,8,329,6],[302,12,329,12,"beforeCount"],[302,23,329,23],[302,26,329,26,"newState"],[302,34,329,34],[302,35,329,35,"enemies"],[302,42,329,42],[302,43,329,43,"length"],[302,49,329,49],[303,8,330,6,"newState"],[303,16,330,14],[303,17,330,15,"enemies"],[303,24,330,22],[303,27,330,25,"newState"],[303,35,330,33],[303,36,330,34,"enemies"],[303,43,330,41],[303,44,330,42,"filter"],[303,50,330,48],[303,51,330,49,"enemy"],[303,56,330,54],[303,60,330,58,"enemy"],[303,65,330,63],[303,66,330,64,"health"],[303,72,330,70],[303,75,330,73],[303,76,330,74],[303,77,330,75],[304,8,331,6],[304,12,331,12,"afterCount"],[304,22,331,22],[304,25,331,25,"newState"],[304,33,331,33],[304,34,331,34,"enemies"],[304,41,331,41],[304,42,331,42,"length"],[304,48,331,48],[305,8,333,6],[305,12,333,10,"beforeCount"],[305,23,333,21],[305,28,333,26,"afterCount"],[305,38,333,36],[305,40,333,38],[306,10,334,8,"console"],[306,17,334,15],[306,18,334,16,"log"],[306,21,334,19],[306,22,334,20],[306,52,334,50,"beforeCount"],[306,63,334,61],[306,66,334,64,"afterCount"],[306,76,334,74],[306,102,334,100],[306,103,334,101],[307,8,335,6],[309,8,337,6],[310,8,338,6],[311,8,339,6],[311,12,339,12,"MAX_ENEMIES"],[311,23,339,23],[311,26,339,26],[311,28,339,28],[311,29,339,29],[311,30,339,30],[312,8,340,6],[312,12,340,12,"MIN_SPAWN_DELAY"],[312,27,340,27],[312,30,340,30],[312,33,340,33],[312,34,340,34],[312,35,340,35],[313,8,341,6],[313,12,341,12,"now"],[313,15,341,15],[313,18,341,18,"Date"],[313,22,341,22],[313,23,341,23,"now"],[313,26,341,26],[313,27,341,27],[313,28,341,28],[314,8,342,6],[314,12,342,12,"hasBoss"],[314,19,342,19],[314,22,342,22,"newState"],[314,30,342,30],[314,31,342,31,"enemies"],[314,38,342,38],[314,39,342,39,"some"],[314,43,342,43],[314,44,342,44,"enemy"],[314,49,342,49],[314,53,342,53,"enemy"],[314,58,342,58],[314,59,342,59,"isBoss"],[314,65,342,65],[314,66,342,66],[316,8,344,6],[317,8,345,6],[317,12,345,10],[317,13,345,11,"newState"],[317,21,345,19],[317,22,345,20,"lastSpawnTime"],[317,35,345,33],[317,37,345,35],[318,10,346,8,"newState"],[318,18,346,16],[318,19,346,17,"lastSpawnTime"],[318,32,346,30],[318,35,346,33,"now"],[318,38,346,36],[319,8,347,6],[320,8,349,6,"console"],[320,15,349,13],[320,16,349,14,"log"],[320,19,349,17],[320,20,349,18],[320,53,349,51,"newState"],[320,61,349,59],[320,62,349,60,"enemies"],[320,69,349,67],[320,70,349,68,"length"],[320,76,349,74],[320,85,349,83,"MAX_ENEMIES"],[320,96,349,94],[320,109,349,107,"hasBoss"],[320,116,349,114],[320,118,349,116],[320,119,349,117],[322,8,351,6],[323,8,352,6],[323,12,352,10],[323,13,352,11,"hasBoss"],[323,20,352,18],[323,24,352,22,"newState"],[323,32,352,30],[323,33,352,31,"enemies"],[323,40,352,38],[323,41,352,39,"length"],[323,47,352,45],[323,50,352,48,"MAX_ENEMIES"],[323,61,352,59],[323,65,352,64,"now"],[323,68,352,67],[323,71,352,70,"newState"],[323,79,352,78],[323,80,352,79,"lastSpawnTime"],[323,93,352,92],[323,97,352,97,"MIN_SPAWN_DELAY"],[323,112,352,112],[323,114,352,114],[324,10,353,8,"console"],[324,17,353,15],[324,18,353,16,"log"],[324,21,353,19],[324,22,353,20],[324,43,353,41,"newState"],[324,51,353,49],[324,52,353,50,"enemies"],[324,59,353,57],[324,60,353,58,"length"],[324,66,353,64],[324,69,353,67],[324,70,353,68],[324,74,353,72,"MAX_ENEMIES"],[324,85,353,83],[324,87,353,85],[324,88,353,86],[325,10,354,8,"spawnTestEnemy"],[325,24,354,22],[325,25,354,23,"newState"],[325,33,354,31],[325,34,354,32],[326,10,355,8,"newState"],[326,18,355,16],[326,19,355,17,"lastSpawnTime"],[326,32,355,30],[326,35,355,33,"now"],[326,38,355,36],[327,8,356,6],[328,8,358,6],[328,15,358,13,"newState"],[328,23,358,21],[329,6,359,4],[329,7,359,5],[329,47,359,6],[331,6,361,4],[332,6,362,4,"console"],[332,13,362,11],[332,14,362,12,"log"],[332,17,362,15],[332,18,362,16],[332,50,362,48,"enemiesToKill"],[332,63,362,61],[332,64,362,62,"length"],[332,70,362,68],[332,101,362,99],[332,102,362,100],[333,6,364,4,"enemiesToKill"],[333,19,364,17],[333,20,364,18,"forEach"],[333,27,364,25],[333,28,364,26],[333,29,364,27,"enemy"],[333,34,364,32],[333,36,364,34,"index"],[333,41,364,39],[333,46,364,44],[334,8,365,6,"console"],[334,15,365,13],[334,16,365,14,"log"],[334,19,365,17],[334,20,365,18],[334,57,365,55,"index"],[334,62,365,60],[334,65,365,63],[334,66,365,64],[334,70,365,68,"enemiesToKill"],[334,83,365,81],[334,84,365,82,"length"],[334,90,365,88],[334,104,365,102,"enemy"],[334,109,365,107],[334,110,365,108,"id"],[334,112,365,110],[334,114,365,112],[334,115,365,113],[335,8,366,6,"handleEnemyKill"],[335,23,366,21],[335,24,366,22,"enemy"],[335,29,366,27],[335,30,366,28],[336,6,367,4],[336,7,367,5],[336,8,367,6],[337,4,368,2],[337,5,368,3],[337,7,368,5],[337,8,368,6,"handleEnemyKill"],[337,23,368,21],[337,24,368,22],[337,25,368,23],[337,26,368,24],[337,27,368,25],[339,4,370,2],[340,4,371,2],[340,8,371,8,"findClosestEnemyInternal"],[340,32,371,32],[340,35,371,36,"enemies"],[340,42,371,58],[340,46,371,83],[341,6,372,4],[341,10,372,8,"enemies"],[341,17,372,15],[341,18,372,16,"length"],[341,24,372,22],[341,29,372,27],[341,30,372,28],[341,32,372,30],[341,39,372,37],[341,43,372,41],[343,6,374,4],[344,6,375,4],[344,10,375,10,"SCREEN_WIDTH"],[344,22,375,22],[344,25,375,25],[344,28,375,28],[345,6,376,4],[345,10,376,10,"GAME_AREA_HEIGHT"],[345,26,376,26],[345,29,376,29],[345,32,376,32],[345,35,376,35],[345,38,376,38],[345,39,376,39],[345,40,376,40],[346,6,377,4],[346,10,377,10,"ninjaX"],[346,16,377,16],[346,19,377,19,"SCREEN_WIDTH"],[346,31,377,31],[346,34,377,34],[346,35,377,35],[347,6,378,4],[347,10,378,10,"ninjaY"],[347,16,378,16],[347,19,378,19,"GAME_AREA_HEIGHT"],[347,35,378,35],[347,38,378,38],[347,39,378,39],[348,6,380,4],[348,10,380,8,"closestEnemy"],[348,22,380,20],[348,25,380,23,"enemies"],[348,32,380,30],[348,33,380,31],[348,34,380,32],[348,35,380,33],[349,6,381,4],[349,10,381,8,"closestDistance"],[349,25,381,23],[349,28,381,26,"Infinity"],[349,36,381,34],[350,6,383,4,"enemies"],[350,13,383,11],[350,14,383,12,"forEach"],[350,21,383,19],[350,22,383,20,"enemy"],[350,27,383,25],[350,31,383,29],[351,8,384,6],[351,12,384,12,"distance"],[351,20,384,20],[351,23,384,23,"Math"],[351,27,384,27],[351,28,384,28,"sqrt"],[351,32,384,32],[351,33,385,8,"Math"],[351,37,385,12],[351,38,385,13,"pow"],[351,41,385,16],[351,42,385,17,"enemy"],[351,47,385,22],[351,48,385,23,"position"],[351,56,385,31],[351,57,385,32,"x"],[351,58,385,33],[351,61,385,36,"ninjaX"],[351,67,385,42],[351,69,385,44],[351,70,385,45],[351,71,385,46],[351,74,386,8,"Math"],[351,78,386,12],[351,79,386,13,"pow"],[351,82,386,16],[351,83,386,17,"enemy"],[351,88,386,22],[351,89,386,23,"position"],[351,97,386,31],[351,98,386,32,"y"],[351,99,386,33],[351,102,386,36,"ninjaY"],[351,108,386,42],[351,110,386,44],[351,111,386,45],[351,112,387,6],[351,113,387,7],[352,8,389,6],[352,12,389,10,"distance"],[352,20,389,18],[352,23,389,21,"closestDistance"],[352,38,389,36],[352,40,389,38],[353,10,390,8,"closestDistance"],[353,25,390,23],[353,28,390,26,"distance"],[353,36,390,34],[354,10,391,8,"closestEnemy"],[354,22,391,20],[354,25,391,23,"enemy"],[354,30,391,28],[355,8,392,6],[356,6,393,4],[356,7,393,5],[356,8,393,6],[357,6,395,4,"console"],[357,13,395,11],[357,14,395,12,"log"],[357,17,395,15],[357,18,395,16],[357,60,395,58,"closestDistance"],[357,75,395,73],[357,76,395,74,"toFixed"],[357,83,395,81],[357,84,395,82],[357,85,395,83],[357,86,395,84],[357,88,395,86],[357,89,395,87],[358,6,396,4],[358,13,396,11,"closestEnemy"],[358,25,396,23],[359,4,397,2],[359,5,397,3],[361,4,399,2],[362,4,400,2],[362,8,400,8,"findClosestEnemy"],[362,24,400,24],[362,27,400,27,"findClosestEnemy"],[362,28,400,27],[362,33,400,53],[363,6,401,4],[363,13,401,11,"findClosestEnemyInternal"],[363,37,401,35],[363,38,401,36,"combatState"],[363,49,401,47],[363,50,401,48,"enemies"],[363,57,401,55],[363,58,401,56],[364,4,402,2],[364,5,402,3],[366,4,404,2],[367,4,405,2],[367,8,405,2,"_useState7"],[367,18,405,2],[367,21,405,58],[367,25,405,58,"useState"],[367,31,405,66],[367,32,405,66,"useState"],[367,40,405,66],[367,42,405,91],[368,8,405,93,"x"],[368,9,405,94],[368,11,405,96],[368,12,405,97],[369,8,405,99,"y"],[369,9,405,100],[369,11,405,102],[370,6,405,104],[370,7,405,105],[370,8,405,106],[371,6,405,106,"_useState8"],[371,16,405,106],[371,23,405,106,"_slicedToArray"],[371,37,405,106],[371,38,405,106,"default"],[371,45,405,106],[371,47,405,106,"_useState7"],[371,57,405,106],[372,6,405,9,"currentNinjaPosition"],[372,26,405,29],[372,29,405,29,"_useState8"],[372,39,405,29],[373,6,405,31,"setCurrentNinjaPosition"],[373,29,405,54],[373,32,405,54,"_useState8"],[373,42,405,54],[374,4,406,2],[374,8,406,2,"_useState9"],[374,18,406,2],[374,21,406,60],[374,25,406,60,"useState"],[374,31,406,68],[374,32,406,68,"useState"],[374,40,406,68],[374,42,406,69],[374,47,406,74],[374,48,406,75],[375,6,406,75,"_useState0"],[375,16,406,75],[375,23,406,75,"_slicedToArray"],[375,37,406,75],[375,38,406,75,"default"],[375,45,406,75],[375,47,406,75,"_useState9"],[375,57,406,75],[376,6,406,9,"isManualControlActive"],[376,27,406,30],[376,30,406,30,"_useState0"],[376,40,406,30],[377,6,406,32,"setIsManualControlActive"],[377,30,406,56],[377,33,406,56,"_useState0"],[377,43,406,56],[379,4,408,2],[380,4,409,2],[380,8,409,8,"updateNinjaPosition"],[380,27,409,27],[380,30,409,30],[380,34,409,30,"useCallback"],[380,40,409,41],[380,41,409,41,"useCallback"],[380,52,409,41],[380,54,409,43,"newPosition"],[380,65,409,78],[380,69,409,83],[381,6,410,4,"setCurrentNinjaPosition"],[381,29,410,27],[381,30,410,28,"newPosition"],[381,41,410,39],[381,42,410,40],[382,4,411,2],[382,5,411,3],[382,7,411,5],[382,9,411,7],[382,10,411,8],[384,4,413,2],[385,4,414,2],[385,8,414,8,"setManualControlActive"],[385,30,414,30],[385,33,414,33],[385,37,414,33,"useCallback"],[385,43,414,44],[385,44,414,44,"useCallback"],[385,55,414,44],[385,57,414,46,"active"],[385,63,414,61],[385,67,414,66],[386,6,415,4,"setIsManualControlActive"],[386,30,415,28],[386,31,415,29,"active"],[386,37,415,35],[386,38,415,36],[387,6,416,4,"console"],[387,13,416,11],[387,14,416,12,"log"],[387,17,416,15],[387,18,416,16],[387,39,416,37,"active"],[387,45,416,43],[387,48,416,46],[387,59,416,57],[387,62,416,60],[387,75,416,73],[387,88,416,86,"active"],[387,94,416,92],[387,97,416,95],[387,105,416,103],[387,108,416,106],[387,117,416,115],[387,119,416,117],[387,120,416,118],[388,4,417,2],[388,5,417,3],[388,7,417,5],[388,9,417,7],[388,10,417,8],[390,4,419,2],[391,4,420,2],[391,8,420,8,"handleProjectileHit"],[391,27,420,27],[391,30,420,31,"projectile"],[391,40,420,59],[391,44,420,64],[392,6,421,4,"console"],[392,13,421,11],[392,14,421,12,"log"],[392,17,421,15],[392,18,421,16],[392,35,421,33,"projectile"],[392,45,421,43],[392,46,421,44,"id"],[392,48,421,46],[392,62,421,60,"projectile"],[392,72,421,70],[392,73,421,71,"targetEnemyId"],[392,86,421,84],[392,94,421,92,"projectile"],[392,104,421,102],[392,105,421,103,"damage"],[392,111,421,109],[392,120,421,118],[392,121,421,119],[393,6,423,4,"setCombatState"],[393,20,423,18],[393,21,423,19,"prev"],[393,25,423,23],[393,29,423,27],[394,8,424,6],[394,12,424,12,"newState"],[394,20,424,20],[394,23,424,23],[395,10,424,25],[395,13,424,28,"prev"],[396,8,424,33],[396,9,424,34],[398,8,426,6],[399,8,427,6],[399,12,427,12,"enemyIndex"],[399,22,427,22],[399,25,427,25,"newState"],[399,33,427,33],[399,34,427,34,"enemies"],[399,41,427,41],[399,42,427,42,"findIndex"],[399,51,427,51],[399,52,427,52,"e"],[399,53,427,53],[399,57,427,57,"e"],[399,58,427,58],[399,59,427,59,"id"],[399,61,427,61],[399,66,427,66,"projectile"],[399,76,427,76],[399,77,427,77,"targetEnemyId"],[399,90,427,90],[399,91,427,91],[400,8,428,6],[400,12,428,10,"enemyIndex"],[400,22,428,20],[400,26,428,24],[400,27,428,25],[400,29,428,27],[401,10,429,8,"newState"],[401,18,429,16],[401,19,429,17,"enemies"],[401,26,429,24],[401,29,429,27],[401,30,429,28],[401,33,429,31,"newState"],[401,41,429,39],[401,42,429,40,"enemies"],[401,49,429,47],[401,50,429,48],[402,10,430,8,"newState"],[402,18,430,16],[402,19,430,17,"enemies"],[402,26,430,24],[402,27,430,25,"enemyIndex"],[402,37,430,35],[402,38,430,36],[402,41,430,39],[403,12,431,10],[403,15,431,13,"newState"],[403,23,431,21],[403,24,431,22,"enemies"],[403,31,431,29],[403,32,431,30,"enemyIndex"],[403,42,431,40],[403,43,431,41],[404,12,432,10,"health"],[404,18,432,16],[404,20,432,18,"newState"],[404,28,432,26],[404,29,432,27,"enemies"],[404,36,432,34],[404,37,432,35,"enemyIndex"],[404,47,432,45],[404,48,432,46],[404,49,432,47,"health"],[404,55,432,53],[404,58,432,56,"projectile"],[404,68,432,66],[404,69,432,67,"damage"],[404,75,432,73],[405,12,433,10,"lastDamaged"],[405,23,433,21],[405,25,433,23,"combatEngine"],[405,44,433,35],[405,45,433,35,"combatEngine"],[405,57,433,35],[405,58,433,36,"getCurrentTick"],[405,72,433,50],[405,73,433,51],[406,10,434,8],[406,11,434,9],[407,10,436,8,"console"],[407,17,436,15],[407,18,436,16,"log"],[407,21,436,19],[407,22,436,20],[407,34,436,32,"projectile"],[407,44,436,42],[407,45,436,43,"targetEnemyId"],[407,58,436,56],[407,70,436,68,"newState"],[407,78,436,76],[407,79,436,77,"enemies"],[407,86,436,84],[407,87,436,85,"enemyIndex"],[407,97,436,95],[407,98,436,96],[407,99,436,97,"health"],[407,105,436,103],[407,109,436,107,"newState"],[407,117,436,115],[407,118,436,116,"enemies"],[407,125,436,123],[407,126,436,124,"enemyIndex"],[407,136,436,134],[407,137,436,135],[407,138,436,136,"maxHealth"],[407,147,436,145],[407,149,436,147],[407,150,436,148],[408,8,437,6],[409,8,439,6],[409,15,439,13,"newState"],[409,23,439,21],[410,6,440,4],[410,7,440,5],[410,8,440,6],[412,6,442,4],[413,6,443,4,"setProjectiles"],[413,20,443,18],[413,21,443,19,"prev"],[413,25,443,23],[413,29,443,27,"prev"],[413,33,443,31],[413,34,443,32,"filter"],[413,40,443,38],[413,41,443,39,"p"],[413,42,443,40],[413,46,443,44,"p"],[413,47,443,45],[413,48,443,46,"id"],[413,50,443,48],[413,55,443,53,"projectile"],[413,65,443,63],[413,66,443,64,"id"],[413,68,443,66],[413,69,443,67],[413,70,443,68],[414,4,444,2],[414,5,444,3],[416,4,446,2],[417,4,447,2],[417,8,447,8,"castAbility"],[417,19,447,19],[417,22,447,22,"castAbility"],[417,23,447,23,"state"],[417,28,447,41],[417,30,447,43,"slotIndex"],[417,39,447,60],[417,44,447,65],[418,6,448,4],[418,10,448,10,"deck"],[418,14,448,14],[418,17,448,17,"state"],[418,22,448,22],[418,23,448,23,"abilityManager"],[418,37,448,37],[418,38,448,38,"getDeck"],[418,45,448,45],[418,46,448,46],[418,47,448,47],[419,6,449,4],[419,10,449,10,"ability"],[419,17,449,17],[419,20,449,20,"deck"],[419,24,449,24],[419,25,449,25,"slots"],[419,30,449,30],[419,31,449,31,"slotIndex"],[419,40,449,40],[419,41,449,41],[420,6,450,4],[420,10,450,8],[420,11,450,9,"ability"],[420,18,450,16],[420,20,450,18],[422,6,452,4],[423,6,453,4],[423,10,453,8,"damage"],[423,16,453,14],[423,19,453,17,"ability"],[423,26,453,24],[423,27,453,25,"stats"],[423,32,453,30],[423,33,453,31,"baseDamage"],[423,43,453,41],[425,6,455,4],[426,6,456,4,"deck"],[426,10,456,8],[426,11,456,9,"activeSynergies"],[426,26,456,24],[426,27,456,25,"forEach"],[426,34,456,32],[426,35,456,33,"synergy"],[426,42,456,40],[426,46,456,44],[427,8,457,6],[427,12,457,10,"synergy"],[427,19,457,17],[427,20,457,18,"bonus"],[427,25,457,23],[427,26,457,24,"damageBonus"],[427,37,457,35],[427,41,458,10,"synergy"],[427,48,458,17],[427,49,458,18,"requiredTags"],[427,61,458,30],[427,62,458,31,"some"],[427,66,458,35],[427,67,458,36,"tag"],[427,70,458,39],[427,74,458,43,"ability"],[427,81,458,50],[427,82,458,51,"tags"],[427,86,458,55],[427,87,458,56,"includes"],[427,95,458,64],[427,96,458,65,"tag"],[427,99,458,68],[427,100,458,69],[427,101,458,70],[427,103,458,72],[428,10,459,8,"damage"],[428,16,459,14],[428,20,459,19],[428,21,459,20],[428,24,459,23,"synergy"],[428,31,459,30],[428,32,459,31,"bonus"],[428,37,459,36],[428,38,459,37,"damageBonus"],[428,49,459,48],[428,52,459,51],[428,55,459,55],[429,8,460,6],[430,6,461,4],[430,7,461,5],[430,8,461,6],[432,6,463,4],[433,6,464,4],[433,10,464,10,"isAOE"],[433,15,464,15],[433,18,464,18,"ability"],[433,25,464,25],[433,26,464,26,"effects"],[433,33,464,33],[433,34,464,34,"includes"],[433,42,464,42],[433,43,464,43],[433,48,464,48],[433,49,464,49],[433,53,464,53,"ability"],[433,60,464,60],[433,61,464,61,"stats"],[433,66,464,66],[433,67,464,67,"aoeRadius"],[433,76,464,76],[434,6,466,4],[434,10,466,8,"isAOE"],[434,15,466,13],[434,17,466,15],[435,8,467,6,"console"],[435,15,467,13],[435,16,467,14,"log"],[435,19,467,17],[435,20,467,18],[435,39,467,37,"ability"],[435,46,467,44],[435,47,467,45,"name"],[435,51,467,49],[435,67,467,65,"ability"],[435,74,467,72],[435,75,467,73,"stats"],[435,80,467,78],[435,81,467,79,"aoeRadius"],[435,90,467,88],[435,92,467,90],[435,93,467,91],[437,8,469,6],[438,8,470,6],[438,12,470,12,"ninjaX"],[438,18,470,18],[438,21,470,21,"currentNinjaPosition"],[438,41,470,41],[438,42,470,42,"x"],[438,43,470,43],[438,46,470,46],[438,48,470,48],[438,49,470,49],[438,50,470,50],[439,8,471,6],[439,12,471,12,"ninjaY"],[439,18,471,18],[439,21,471,21,"currentNinjaPosition"],[439,41,471,41],[439,42,471,42,"y"],[439,43,471,43],[439,46,471,46],[439,48,471,48],[440,8,472,6],[440,12,472,12,"aoeRadius"],[440,21,472,21],[440,24,472,24,"ability"],[440,31,472,31],[440,32,472,32,"stats"],[440,37,472,37],[440,38,472,38,"aoeRadius"],[440,47,472,47],[441,8,474,6],[441,12,474,12,"enemiesInRange"],[441,26,474,26],[441,29,474,29,"state"],[441,34,474,34],[441,35,474,35,"enemies"],[441,42,474,42],[441,43,474,43,"filter"],[441,49,474,49],[441,50,474,50,"enemy"],[441,55,474,55],[441,59,474,59],[442,10,475,8],[442,14,475,14,"enemyX"],[442,20,475,20],[442,23,475,23,"enemy"],[442,28,475,28],[442,29,475,29,"position"],[442,37,475,37],[442,38,475,38,"x"],[442,39,475,39],[442,42,475,42],[442,46,475,46],[442,47,475,47],[442,48,475,48],[443,10,476,8],[443,14,476,14,"enemyY"],[443,20,476,20],[443,23,476,23,"enemy"],[443,28,476,28],[443,29,476,29,"position"],[443,37,476,37],[443,38,476,38,"y"],[443,39,476,39],[443,42,476,42],[443,46,476,46],[444,10,477,8],[444,14,477,14,"distance"],[444,22,477,22],[444,25,477,25,"Math"],[444,29,477,29],[444,30,477,30,"sqrt"],[444,34,477,34],[444,35,477,35,"Math"],[444,39,477,39],[444,40,477,40,"pow"],[444,43,477,43],[444,44,477,44,"enemyX"],[444,50,477,50],[444,53,477,53,"ninjaX"],[444,59,477,59],[444,61,477,61],[444,62,477,62],[444,63,477,63],[444,66,477,66,"Math"],[444,70,477,70],[444,71,477,71,"pow"],[444,74,477,74],[444,75,477,75,"enemyY"],[444,81,477,81],[444,84,477,84,"ninjaY"],[444,90,477,90],[444,92,477,92],[444,93,477,93],[444,94,477,94],[444,95,477,95],[445,10,478,8],[445,17,478,15,"distance"],[445,25,478,23],[445,29,478,27,"aoeRadius"],[445,38,478,36],[446,8,479,6],[446,9,479,7],[446,10,479,8],[447,8,481,6,"console"],[447,15,481,13],[447,16,481,14,"log"],[447,19,481,17],[447,20,481,18],[447,45,481,43,"enemiesInRange"],[447,59,481,57],[447,60,481,58,"length"],[447,66,481,64],[447,88,481,86,"aoeRadius"],[447,97,481,95],[447,107,481,105],[447,108,481,106],[449,8,483,6],[450,8,484,6,"enemiesInRange"],[450,22,484,20],[450,23,484,21,"forEach"],[450,30,484,28],[450,31,484,29,"enemy"],[450,36,484,34],[450,40,484,38],[451,10,485,8],[451,14,485,14,"damageResult"],[451,26,485,26],[451,29,485,29,"DamageCalculator"],[451,48,485,45],[451,49,485,45,"DamageCalculator"],[451,65,485,45],[451,66,485,46,"calculateDamage"],[451,81,485,61],[451,82,485,62,"damage"],[451,88,485,68],[451,90,485,70,"state"],[451,95,485,75],[451,96,485,76,"playerStats"],[451,107,485,87],[451,109,485,89,"enemy"],[451,114,485,94],[451,115,485,95,"stats"],[451,120,485,100],[451,121,485,101],[452,10,486,8,"createProjectile"],[452,26,486,24],[452,27,486,25,"enemy"],[452,32,486,30],[452,34,486,32,"damageResult"],[452,46,486,44],[452,47,486,45,"damage"],[452,53,486,51],[452,55,486,53,"currentNinjaPosition"],[452,75,486,73],[452,77,486,75],[453,12,487,10,"id"],[453,14,487,12],[453,16,487,14,"ability"],[453,23,487,21],[453,24,487,22,"id"],[453,26,487,24],[454,12,488,10,"name"],[454,16,488,14],[454,18,488,16,"ability"],[454,25,488,23],[454,26,488,24,"name"],[454,30,488,28],[455,12,489,10,"icon"],[455,16,489,14],[455,18,489,16,"ability"],[455,25,489,23],[455,26,489,24,"icon"],[456,10,490,8],[456,11,490,9],[456,12,490,10],[457,10,492,8,"console"],[457,17,492,15],[457,18,492,16,"log"],[457,21,492,19],[457,22,492,20],[457,37,492,35,"enemy"],[457,42,492,40],[457,43,492,41,"name"],[457,47,492,45],[457,55,492,53,"damageResult"],[457,67,492,65],[457,68,492,66,"damage"],[457,74,492,72],[457,83,492,81],[457,84,492,82],[458,8,493,6],[458,9,493,7],[458,10,493,8],[459,8,495,6,"console"],[459,15,495,13],[459,16,495,14,"log"],[459,19,495,17],[459,20,495,18],[459,26,495,24,"ability"],[459,33,495,31],[459,34,495,32,"name"],[459,38,495,36],[459,56,495,54,"enemiesInRange"],[459,70,495,68],[459,71,495,69,"length"],[459,77,495,75],[459,93,495,91,"damage"],[459,99,495,97],[459,118,495,116],[459,119,495,117],[460,6,497,4],[460,7,497,5],[460,13,497,11],[461,8,498,6],[462,8,499,6],[462,12,499,12,"target"],[462,18,499,18],[462,21,499,21,"findClosestEnemyInternal"],[462,45,499,45],[462,46,499,46,"state"],[462,51,499,51],[462,52,499,52,"enemies"],[462,59,499,59],[462,60,499,60],[463,8,500,6],[463,12,500,10],[463,13,500,11,"target"],[463,19,500,17],[463,21,500,19],[464,8,502,6],[464,12,502,12,"damageResult"],[464,24,502,24],[464,27,502,27,"DamageCalculator"],[464,46,502,43],[464,47,502,43,"DamageCalculator"],[464,63,502,43],[464,64,502,44,"calculateDamage"],[464,79,502,59],[464,80,502,60,"damage"],[464,86,502,66],[464,88,502,68,"state"],[464,93,502,73],[464,94,502,74,"playerStats"],[464,105,502,85],[464,107,502,87,"target"],[464,113,502,93],[464,114,502,94,"stats"],[464,119,502,99],[464,120,502,100],[466,8,504,6],[467,8,505,6,"createProjectile"],[467,24,505,22],[467,25,505,23,"target"],[467,31,505,29],[467,33,505,31,"damageResult"],[467,45,505,43],[467,46,505,44,"damage"],[467,52,505,50],[467,54,505,52,"currentNinjaPosition"],[467,74,505,72],[467,76,505,74],[468,10,506,8,"id"],[468,12,506,10],[468,14,506,12,"ability"],[468,21,506,19],[468,22,506,20,"id"],[468,24,506,22],[469,10,507,8,"name"],[469,14,507,12],[469,16,507,14,"ability"],[469,23,507,21],[469,24,507,22,"name"],[469,28,507,26],[470,10,508,8,"icon"],[470,14,508,12],[470,16,508,14,"ability"],[470,23,508,21],[470,24,508,22,"icon"],[471,8,509,6],[471,9,509,7],[471,10,509,8],[472,8,511,6,"console"],[472,15,511,13],[472,16,511,14,"log"],[472,19,511,17],[472,20,511,18],[472,26,511,24,"ability"],[472,33,511,31],[472,34,511,32,"name"],[472,38,511,36],[472,66,511,64,"damageResult"],[472,78,511,76],[472,79,511,77,"damage"],[472,85,511,83],[472,95,511,93,"damageResult"],[472,107,511,105],[472,108,511,106,"isCritical"],[472,118,511,116],[472,121,511,119],[472,131,511,129],[472,134,511,132],[472,136,511,134],[472,138,511,136],[472,139,511,137],[473,6,512,4],[475,6,514,4],[476,6,515,4],[476,10,515,8,"ability"],[476,17,515,15],[476,18,515,16,"effects"],[476,25,515,23],[476,26,515,24,"includes"],[476,34,515,32],[476,35,515,33],[476,40,515,38],[476,41,515,39],[476,45,515,43,"ability"],[476,52,515,50],[476,53,515,51,"stats"],[476,58,515,56],[476,59,515,57,"duration"],[476,67,515,65],[476,69,515,67],[477,8,516,6],[477,12,516,12,"targets"],[477,19,516,19],[477,22,516,22,"isAOE"],[477,27,516,27],[477,30,517,8,"state"],[477,35,517,13],[477,36,517,14,"enemies"],[477,43,517,21],[477,44,517,22,"filter"],[477,50,517,28],[477,51,517,29,"enemy"],[477,56,517,34],[477,60,517,38],[478,10,518,10],[478,14,518,16,"ninjaX"],[478,20,518,22],[478,23,518,25,"currentNinjaPosition"],[478,43,518,45],[478,44,518,46,"x"],[478,45,518,47],[478,48,518,50],[478,50,518,52],[479,10,519,10],[479,14,519,16,"ninjaY"],[479,20,519,22],[479,23,519,25,"currentNinjaPosition"],[479,43,519,45],[479,44,519,46,"y"],[479,45,519,47],[479,48,519,50],[479,50,519,52],[480,10,520,10],[480,14,520,16,"enemyX"],[480,20,520,22],[480,23,520,25,"enemy"],[480,28,520,30],[480,29,520,31,"position"],[480,37,520,39],[480,38,520,40,"x"],[480,39,520,41],[480,42,520,44],[480,46,520,48],[481,10,521,10],[481,14,521,16,"enemyY"],[481,20,521,22],[481,23,521,25,"enemy"],[481,28,521,30],[481,29,521,31,"position"],[481,37,521,39],[481,38,521,40,"y"],[481,39,521,41],[481,42,521,44],[481,46,521,48],[482,10,522,10],[482,14,522,16,"distance"],[482,22,522,24],[482,25,522,27,"Math"],[482,29,522,31],[482,30,522,32,"sqrt"],[482,34,522,36],[482,35,522,37,"Math"],[482,39,522,41],[482,40,522,42,"pow"],[482,43,522,45],[482,44,522,46,"enemyX"],[482,50,522,52],[482,53,522,55,"ninjaX"],[482,59,522,61],[482,61,522,63],[482,62,522,64],[482,63,522,65],[482,66,522,68,"Math"],[482,70,522,72],[482,71,522,73,"pow"],[482,74,522,76],[482,75,522,77,"enemyY"],[482,81,522,83],[482,84,522,86,"ninjaY"],[482,90,522,92],[482,92,522,94],[482,93,522,95],[482,94,522,96],[482,95,522,97],[483,10,523,10],[483,17,523,17,"distance"],[483,25,523,25],[483,29,523,29,"ability"],[483,36,523,36],[483,37,523,37,"stats"],[483,42,523,42],[483,43,523,43,"aoeRadius"],[483,52,523,52],[484,8,524,8],[484,9,524,9],[484,10,524,10],[484,13,525,8],[484,14,525,9,"findClosestEnemyInternal"],[484,38,525,33],[484,39,525,34,"state"],[484,44,525,39],[484,45,525,40,"enemies"],[484,52,525,47],[484,53,525,48],[484,54,525,49],[484,55,525,50,"filter"],[484,61,525,56],[484,62,525,57,"Boolean"],[484,69,525,64],[484,70,525,65],[485,8,527,6,"targets"],[485,15,527,13],[485,16,527,14,"forEach"],[485,23,527,21],[485,24,527,22,"target"],[485,30,527,28],[485,34,527,32],[486,10,528,8,"state"],[486,15,528,13],[486,16,528,14,"statusEffects"],[486,29,528,27],[486,30,528,28,"addEffect"],[486,39,528,37],[486,40,528,38,"target"],[486,46,528,44],[486,47,528,45,"id"],[486,49,528,47],[486,51,528,49],[487,12,529,10,"id"],[487,14,529,12],[487,16,529,14],[487,19,529,17,"ability"],[487,26,529,24],[487,27,529,25,"id"],[487,29,529,27],[487,35,529,33],[488,12,530,10,"type"],[488,16,530,14],[488,18,530,16],[488,23,530,21],[489,12,531,10,"remainingTicks"],[489,26,531,24],[489,28,531,26,"Math"],[489,32,531,30],[489,33,531,31,"floor"],[489,38,531,36],[489,39,531,37,"ability"],[489,46,531,44],[489,47,531,45,"stats"],[489,52,531,50],[489,53,531,51,"duration"],[489,61,531,59],[489,64,531,62],[489,66,531,64],[489,67,531,65],[490,12,532,10,"tickInterval"],[490,24,532,22],[490,26,532,24],[490,28,532,26],[491,12,533,10,"lastTick"],[491,20,533,18],[491,22,533,20,"state"],[491,27,533,25],[491,28,533,26,"currentTick"],[491,39,533,37],[492,12,534,10,"value"],[492,17,534,15],[492,19,534,17,"Math"],[492,23,534,21],[492,24,534,22,"floor"],[492,29,534,27],[492,30,534,28,"damage"],[492,36,534,34],[492,39,534,37],[492,42,534,40],[492,43,534,41],[493,12,535,10,"stackable"],[493,21,535,19],[493,23,535,21],[494,10,536,8],[494,11,536,9],[494,12,536,10],[495,8,537,6],[495,9,537,7],[495,10,537,8],[496,6,538,4],[498,6,540,4],[499,6,541,4],[499,10,541,8,"ability"],[499,17,541,15],[499,18,541,16,"effects"],[499,25,541,23],[499,26,541,24,"includes"],[499,34,541,32],[499,35,541,33],[499,41,541,39],[499,42,541,40],[499,46,541,44,"ability"],[499,53,541,51],[499,54,541,52,"id"],[499,56,541,54],[499,61,541,59],[499,75,541,73],[499,77,541,75],[500,8,542,6,"console"],[500,15,542,13],[500,16,542,14,"log"],[500,19,542,17],[500,20,542,18],[500,66,542,64,"ability"],[500,73,542,71],[500,74,542,72,"stats"],[500,79,542,77],[500,80,542,78,"duration"],[500,88,542,86],[500,98,542,96],[500,99,542,97],[502,8,544,6],[503,8,545,6],[503,12,545,12,"cloneX"],[503,18,545,18],[503,21,545,21,"currentNinjaPosition"],[503,41,545,41],[503,42,545,42,"x"],[503,43,545,43],[503,46,545,46],[503,48,545,48],[503,49,545,49],[503,50,545,50],[504,8,546,6],[504,12,546,12,"cloneY"],[504,18,546,18],[504,21,546,21,"currentNinjaPosition"],[504,41,546,41],[504,42,546,42,"y"],[504,43,546,43],[504,46,546,46],[504,48,546,48],[504,49,546,49],[504,50,546,50],[506,8,548,6,"state"],[506,13,548,11],[506,14,548,12,"shadowClone"],[506,25,548,23],[506,28,548,26],[507,10,549,8,"id"],[507,12,549,10],[507,14,549,12],[507,30,549,28,"Date"],[507,34,549,32],[507,35,549,33,"now"],[507,38,549,36],[507,39,549,37],[507,40,549,38],[507,42,549,40],[508,10,550,8,"remainingTicks"],[508,24,550,22],[508,26,550,24,"Math"],[508,30,550,28],[508,31,550,29,"floor"],[508,36,550,34],[508,37,550,35,"ability"],[508,44,550,42],[508,45,550,43,"stats"],[508,50,550,48],[508,51,550,49,"duration"],[508,59,550,57],[508,62,550,60],[508,64,550,62],[508,65,550,63],[509,10,550,65],[510,10,551,8,"position"],[510,18,551,16],[510,20,551,18],[511,12,551,20,"x"],[511,13,551,21],[511,15,551,23,"cloneX"],[511,21,551,29],[512,12,551,31,"y"],[512,13,551,32],[512,15,551,34,"cloneY"],[513,10,551,41],[513,11,551,42],[514,10,552,8,"damageMultiplier"],[514,26,552,24],[514,28,552,26],[514,31,552,29],[514,32,552,31],[515,8,553,6],[515,9,553,7],[516,8,555,6,"console"],[516,15,555,13],[516,16,555,14,"log"],[516,19,555,17],[516,20,555,18],[516,63,555,61,"ability"],[516,70,555,68],[516,71,555,69,"stats"],[516,76,555,74],[516,77,555,75,"duration"],[516,85,555,83],[516,108,555,106],[516,109,555,107],[517,6,556,4],[518,4,557,2],[518,5,557,3],[520,4,559,2],[521,4,560,2],[521,8,560,8,"createProjectile"],[521,24,560,24],[521,27,560,27,"createProjectile"],[521,28,560,28,"targetEnemy"],[521,39,560,52],[521,41,560,54,"damage"],[521,47,560,68],[521,49,560,70,"ninjaPos"],[521,57,560,103],[521,59,560,105,"abilityInfo"],[521,70,560,159],[521,75,560,164],[522,6,561,4],[522,10,561,10,"SCREEN_WIDTH"],[522,22,561,22],[522,25,561,25],[522,28,561,28],[523,6,562,4],[523,10,562,10,"GAME_AREA_HEIGHT"],[523,26,562,26],[523,29,562,29],[523,32,562,32],[523,35,562,35],[523,38,562,38],[523,39,562,39],[523,40,562,40],[524,6,563,4],[524,10,563,10,"NINJA_SIZE"],[524,20,563,20],[524,23,563,23],[524,25,563,25],[526,6,565,4],[527,6,566,4],[527,10,566,10,"ninjaX"],[527,16,566,16],[527,19,566,19,"ninjaPos"],[527,27,566,27],[527,30,566,30,"ninjaPos"],[527,38,566,38],[527,39,566,39,"x"],[527,40,566,40],[527,43,566,43,"NINJA_SIZE"],[527,53,566,53],[527,56,566,56],[527,57,566,57],[527,60,566,60,"SCREEN_WIDTH"],[527,72,566,72],[527,75,566,75],[527,76,566,76],[528,6,567,4],[528,10,567,10,"ninjaY"],[528,16,567,16],[528,19,567,19,"ninjaPos"],[528,27,567,27],[528,30,567,30,"ninjaPos"],[528,38,567,38],[528,39,567,39,"y"],[528,40,567,40],[528,43,567,43,"NINJA_SIZE"],[528,53,567,53],[528,56,567,56],[528,57,567,57],[528,60,567,60,"GAME_AREA_HEIGHT"],[528,76,567,76],[528,79,567,79],[528,80,567,80],[529,6,568,4],[529,10,568,10,"ENEMY_SIZE"],[529,20,568,20],[529,23,568,23],[529,25,568,25],[530,6,570,4],[530,10,570,10,"projectile"],[530,20,570,38],[530,23,570,41],[531,8,571,6,"id"],[531,10,571,8],[531,12,571,10],[531,20,571,18,"Date"],[531,24,571,22],[531,25,571,23,"now"],[531,28,571,26],[531,29,571,27],[531,30,571,28],[531,34,571,32,"Math"],[531,38,571,36],[531,39,571,37,"random"],[531,45,571,43],[531,46,571,44],[531,47,571,45],[531,49,571,47],[532,8,572,6,"x"],[532,9,572,7],[532,11,572,9,"ninjaX"],[532,17,572,15],[533,8,573,6,"y"],[533,9,573,7],[533,11,573,9,"ninjaY"],[533,17,573,15],[534,8,574,6,"targetX"],[534,15,574,13],[534,17,574,15,"targetEnemy"],[534,28,574,26],[534,29,574,27,"position"],[534,37,574,35],[534,38,574,36,"x"],[534,39,574,37],[534,42,574,40,"ENEMY_SIZE"],[534,52,574,50],[534,55,574,53],[534,56,574,54],[535,8,575,6,"targetY"],[535,15,575,13],[535,17,575,15,"targetEnemy"],[535,28,575,26],[535,29,575,27,"position"],[535,37,575,35],[535,38,575,36,"y"],[535,39,575,37],[535,42,575,40,"ENEMY_SIZE"],[535,52,575,50],[535,55,575,53],[535,56,575,54],[536,8,576,6,"targetEnemyId"],[536,21,576,19],[536,23,576,21,"targetEnemy"],[536,34,576,32],[536,35,576,33,"id"],[536,37,576,35],[537,8,577,6,"damage"],[537,14,577,12],[537,16,577,14,"damage"],[537,22,577,20],[538,8,578,6,"startTime"],[538,17,578,15],[538,19,578,17,"Date"],[538,23,578,21],[538,24,578,22,"now"],[538,27,578,25],[538,28,578,26],[538,29,578,27],[539,8,579,6,"duration"],[539,16,579,14],[539,18,579,16],[539,21,579,19],[540,8,579,21],[541,8,580,6],[542,8,581,6,"abilityId"],[542,17,581,15],[542,19,581,17,"abilityInfo"],[542,30,581,28],[542,32,581,30,"id"],[542,34,581,32],[542,38,581,36],[542,54,581,52],[543,8,582,6,"abilityName"],[543,19,582,17],[543,21,582,19,"abilityInfo"],[543,32,582,30],[543,34,582,32,"name"],[543,38,582,36],[543,42,582,40],[543,58,582,56],[544,8,583,6,"abilityIcon"],[544,19,583,17],[544,21,583,19,"abilityInfo"],[544,32,583,30],[544,34,583,32,"icon"],[544,38,583,36],[544,42,583,40],[544,46,583,44],[544,47,583,46],[545,6,584,4],[545,7,584,5],[546,6,586,4,"console"],[546,13,586,11],[546,14,586,12,"log"],[546,17,586,15],[546,18,586,16],[546,53,586,51,"targetEnemy"],[546,64,586,62],[546,65,586,63,"id"],[546,67,586,65],[546,75,586,73,"damage"],[546,81,586,79],[546,90,586,88],[546,91,586,89],[547,6,587,4,"console"],[547,13,587,11],[547,14,587,12,"log"],[547,17,587,15],[547,18,587,16],[547,53,587,51,"ninjaX"],[547,59,587,57],[547,64,587,62,"ninjaY"],[547,70,587,68],[547,87,587,85,"projectile"],[547,97,587,95],[547,98,587,96,"targetX"],[547,105,587,103],[547,110,587,108,"projectile"],[547,120,587,118],[547,121,587,119,"targetY"],[547,128,587,126],[547,131,587,129],[547,132,587,130],[548,6,589,4,"setProjectiles"],[548,20,589,18],[548,21,589,19,"prev"],[548,25,589,23],[548,29,589,27],[548,30,589,28],[548,33,589,31,"prev"],[548,37,589,35],[548,39,589,37,"projectile"],[548,49,589,47],[548,50,589,48],[548,51,589,49],[550,6,591,4],[551,6,592,4,"setTimeout"],[551,16,592,14],[551,17,592,15],[551,23,592,21],[552,8,593,6,"handleProjectileHit"],[552,27,593,25],[552,28,593,26,"projectile"],[552,38,593,36],[552,39,593,37],[553,6,594,4],[553,7,594,5],[553,9,594,7],[553,12,594,10],[553,13,594,11],[554,4,595,2],[554,5,595,3],[556,4,597,2],[557,4,598,2],[557,8,598,8,"spawnTestEnemy"],[557,22,598,22],[557,25,598,26,"state"],[557,30,598,44],[557,34,598,49],[558,6,599,4,"console"],[558,13,599,11],[558,14,599,12,"log"],[558,17,599,15],[558,18,599,16],[558,83,599,81],[558,84,599,82],[560,6,601,4],[561,6,602,4],[561,10,602,10,"zoneEnemy"],[561,19,602,19],[561,22,602,22,"spawnZoneEnemy"],[561,36,602,36],[561,37,602,37],[561,38,602,38],[562,6,603,4],[562,10,603,8],[562,11,603,9,"zoneEnemy"],[562,20,603,18],[562,22,603,20],[563,8,604,6,"console"],[563,15,604,13],[563,16,604,14,"log"],[563,19,604,17],[563,20,604,18],[563,76,604,74],[563,77,604,75],[564,8,605,6],[565,8,606,6,"spawnBasicTestEnemy"],[565,27,606,25],[565,28,606,26,"state"],[565,33,606,31],[565,34,606,32],[566,8,607,6],[567,6,608,4],[568,6,610,4,"console"],[568,13,610,11],[568,14,610,12,"log"],[568,17,610,15],[568,18,610,16],[568,44,610,42,"zoneEnemy"],[568,53,610,51],[568,54,610,52,"name"],[568,58,610,56],[568,63,610,61,"zoneEnemy"],[568,72,610,70],[568,73,610,71,"typeId"],[568,79,610,77],[568,94,610,92,"currentZone"],[568,105,610,103],[568,107,610,105,"id"],[568,109,610,107],[568,119,610,117,"currentZoneLevel"],[568,135,610,133],[568,137,610,135,"level"],[568,142,610,140],[568,144,610,142],[568,145,610,143],[570,6,612,4],[571,6,613,4],[571,10,613,10,"combatEnemy"],[571,21,613,34],[571,24,613,37],[572,8,614,6,"id"],[572,10,614,8],[572,12,614,10,"zoneEnemy"],[572,21,614,19],[572,22,614,20,"id"],[572,24,614,22],[573,8,615,6,"name"],[573,12,615,10],[573,14,615,12,"zoneEnemy"],[573,23,615,21],[573,24,615,22,"name"],[573,28,615,26],[574,8,616,6,"health"],[574,14,616,12],[574,16,616,14,"zoneEnemy"],[574,25,616,23],[574,26,616,24,"hp"],[574,28,616,26],[575,8,617,6,"maxHealth"],[575,17,617,15],[575,19,617,17,"zoneEnemy"],[575,28,617,26],[575,29,617,27,"maxHP"],[575,34,617,32],[576,8,618,6,"stats"],[576,13,618,11],[576,15,618,13],[577,10,619,8,"attack"],[577,16,619,14],[577,18,619,16,"zoneEnemy"],[577,27,619,25],[577,28,619,26,"attack"],[577,34,619,32],[578,10,620,8,"defense"],[578,17,620,15],[578,19,620,17],[578,21,620,19],[579,10,620,21],[580,10,621,8,"health"],[580,16,621,14],[580,18,621,16,"zoneEnemy"],[580,27,621,25],[580,28,621,26,"hp"],[580,30,621,28],[581,10,622,8,"maxHealth"],[581,19,622,17],[581,21,622,19,"zoneEnemy"],[581,30,622,28],[581,31,622,29,"maxHP"],[581,36,622,34],[582,10,623,8,"critChance"],[582,20,623,18],[582,22,623,20],[582,23,623,21],[583,10,624,8,"critDamage"],[583,20,624,18],[583,22,624,20],[583,25,624,23],[584,10,625,8,"cooldownReduction"],[584,27,625,25],[584,29,625,27],[585,8,626,6],[585,9,626,7],[586,8,627,6,"position"],[586,16,627,14],[586,18,627,16,"zoneEnemy"],[586,27,627,25],[586,28,627,26,"position"],[586,36,627,34],[587,8,628,6,"lastDamaged"],[587,19,628,17],[587,21,628,19],[587,22,628,20],[588,8,629,6],[589,8,630,6,"zoneTypeId"],[589,18,630,16],[589,20,630,18,"zoneEnemy"],[589,29,630,27],[589,30,630,28,"typeId"],[589,36,630,34],[590,8,631,6,"zoneXP"],[590,14,631,12],[590,16,631,14,"zoneEnemy"],[590,25,631,23],[590,26,631,24,"xp"],[591,6,632,4],[591,7,632,5],[592,6,634,4,"console"],[592,13,634,11],[592,14,634,12,"log"],[592,17,634,15],[592,18,634,16],[592,42,634,40,"combatEnemy"],[592,53,634,51],[592,54,634,52,"name"],[592,58,634,56],[592,67,634,65,"combatEnemy"],[592,78,634,76],[592,79,634,77,"health"],[592,85,634,83],[592,100,634,98,"currentZone"],[592,111,634,109],[592,113,634,111,"id"],[592,115,634,113],[592,125,634,123,"currentZoneLevel"],[592,141,634,139],[592,143,634,141,"level"],[592,148,634,146],[592,150,634,148],[592,151,634,149],[593,6,635,4,"state"],[593,11,635,9],[593,12,635,10,"enemies"],[593,19,635,17],[593,20,635,18,"push"],[593,24,635,22],[593,25,635,23,"combatEnemy"],[593,36,635,34],[593,37,635,35],[594,4,636,2],[594,5,636,3],[596,4,638,2],[597,4,639,2],[597,8,639,8,"spawnBasicTestEnemy"],[597,27,639,27],[597,30,639,31,"state"],[597,35,639,49],[597,39,639,54],[598,6,640,4],[598,10,640,10,"SCREEN_WIDTH"],[598,22,640,22],[598,25,640,25],[598,28,640,28],[599,6,641,4],[599,10,641,10,"GAME_AREA_HEIGHT"],[599,26,641,26],[599,29,641,29],[599,32,641,32],[599,35,641,35],[599,38,641,38],[600,6,642,4],[600,10,642,10,"ENEMY_SIZE"],[600,20,642,20],[600,23,642,23],[600,25,642,25],[601,6,644,4],[601,10,644,10,"x"],[601,11,644,11],[601,14,644,14,"Math"],[601,18,644,18],[601,19,644,19,"random"],[601,25,644,25],[601,26,644,26],[601,27,644,27],[601,31,644,31,"SCREEN_WIDTH"],[601,43,644,43],[601,46,644,46,"ENEMY_SIZE"],[601,56,644,56],[601,59,644,59],[601,60,644,60],[601,61,644,61],[601,64,644,64,"ENEMY_SIZE"],[601,74,644,74],[602,6,645,4],[602,10,645,10,"y"],[602,11,645,11],[602,14,645,14,"Math"],[602,18,645,18],[602,19,645,19,"random"],[602,25,645,25],[602,26,645,26],[602,27,645,27],[602,31,645,31,"GAME_AREA_HEIGHT"],[602,47,645,47],[602,50,645,50,"ENEMY_SIZE"],[602,60,645,60],[602,63,645,63],[602,64,645,64],[602,65,645,65],[602,68,645,68,"ENEMY_SIZE"],[602,78,645,78],[603,6,647,4],[603,10,647,10,"enemy"],[603,15,647,28],[603,18,647,31],[604,8,648,6,"id"],[604,10,648,8],[604,12,648,10],[604,30,648,28,"Date"],[604,34,648,32],[604,35,648,33,"now"],[604,38,648,36],[604,39,648,37],[604,40,648,38],[604,44,648,42,"Math"],[604,48,648,46],[604,49,648,47,"random"],[604,55,648,53],[604,56,648,54],[604,57,648,55],[604,59,648,57],[605,8,649,6,"name"],[605,12,649,10],[605,14,649,12],[605,26,649,24,"Math"],[605,30,649,28],[605,31,649,29,"floor"],[605,36,649,34],[605,37,649,35,"Math"],[605,41,649,39],[605,42,649,40,"random"],[605,48,649,46],[605,49,649,47],[605,50,649,48],[605,53,649,51],[605,56,649,54],[605,57,649,55],[605,59,649,57],[606,8,650,6,"health"],[606,14,650,12],[606,16,650,14],[606,18,650,16],[607,8,651,6,"maxHealth"],[607,17,651,15],[607,19,651,17],[607,21,651,19],[608,8,652,6,"stats"],[608,13,652,11],[608,15,652,13],[609,10,653,8,"attack"],[609,16,653,14],[609,18,653,16],[609,20,653,18],[610,10,654,8,"defense"],[610,17,654,15],[610,19,654,17],[610,21,654,19],[611,10,655,8,"health"],[611,16,655,14],[611,18,655,16],[611,20,655,18],[612,10,656,8,"maxHealth"],[612,19,656,17],[612,21,656,19],[612,23,656,21],[613,10,657,8,"critChance"],[613,20,657,18],[613,22,657,20],[613,23,657,21],[614,10,658,8,"critDamage"],[614,20,658,18],[614,22,658,20],[614,25,658,23],[615,10,659,8,"cooldownReduction"],[615,27,659,25],[615,29,659,27],[616,8,660,6],[616,9,660,7],[617,8,661,6,"position"],[617,16,661,14],[617,18,661,16],[618,10,661,18,"x"],[618,11,661,19],[619,10,661,21,"y"],[620,8,661,23],[620,9,661,24],[621,8,662,6,"lastDamaged"],[621,19,662,17],[621,21,662,19],[622,6,663,4],[622,7,663,5],[623,6,665,4,"console"],[623,13,665,11],[623,14,665,12,"log"],[623,17,665,15],[623,18,665,16],[623,42,665,40,"enemy"],[623,47,665,45],[623,48,665,46,"name"],[623,52,665,50],[623,60,665,58,"Math"],[623,64,665,62],[623,65,665,63,"round"],[623,70,665,68],[623,71,665,69,"x"],[623,72,665,70],[623,73,665,71],[623,78,665,76,"Math"],[623,82,665,80],[623,83,665,81,"round"],[623,88,665,86],[623,89,665,87,"y"],[623,90,665,88],[623,91,665,89],[623,94,665,92],[623,95,665,93],[624,6,666,4,"state"],[624,11,666,9],[624,12,666,10,"enemies"],[624,19,666,17],[624,20,666,18,"push"],[624,24,666,22],[624,25,666,23,"enemy"],[624,30,666,28],[624,31,666,29],[625,4,667,2],[625,5,667,3],[627,4,669,2],[628,4,670,2],[628,8,670,8,"startCombat"],[628,19,670,19],[628,22,670,22,"React"],[628,27,670,27],[628,28,670,27,"default"],[628,35,670,27],[628,36,670,28,"useCallback"],[628,47,670,39],[628,48,670,40],[628,54,670,46],[629,6,671,4,"console"],[629,13,671,11],[629,14,671,12,"log"],[629,17,671,15],[629,18,671,16],[629,63,671,61],[629,64,671,62],[630,6,672,4,"setCombatState"],[630,20,672,18],[630,21,672,19,"prev"],[630,25,672,23],[630,30,672,28],[631,8,672,30],[631,11,672,33,"prev"],[631,15,672,37],[632,8,672,39,"isInCombat"],[632,18,672,49],[632,20,672,51],[633,6,672,56],[633,7,672,57],[633,8,672,58],[633,9,672,59],[635,6,674,4],[636,6,675,4,"combatEngine"],[636,25,675,16],[636,26,675,16,"combatEngine"],[636,38,675,16],[636,39,675,17,"addTickCallback"],[636,54,675,32],[636,55,675,33,"handleCombatTick"],[636,71,675,49],[636,72,675,50],[637,6,676,4,"console"],[637,13,676,11],[637,14,676,12,"log"],[637,17,676,15],[637,18,676,16],[637,62,676,60],[637,63,676,61],[639,6,678,4],[640,6,679,4,"combatEngine"],[640,25,679,16],[640,26,679,16,"combatEngine"],[640,38,679,16],[640,39,679,17,"start"],[640,44,679,22],[640,45,679,23],[640,46,679,24],[641,4,680,2],[641,5,680,3],[641,7,680,5],[641,8,680,6,"combatEngine"],[641,27,680,18],[641,28,680,18,"combatEngine"],[641,40,680,18],[641,42,680,20,"handleCombatTick"],[641,58,680,36],[641,59,680,37],[641,60,680,38],[643,4,682,2],[644,4,683,2],[644,8,683,8,"stopCombat"],[644,18,683,18],[644,21,683,21,"React"],[644,26,683,26],[644,27,683,26,"default"],[644,34,683,26],[644,35,683,27,"useCallback"],[644,46,683,38],[644,47,683,39],[644,53,683,45],[645,6,684,4,"setCombatState"],[645,20,684,18],[645,21,684,19,"prev"],[645,25,684,23],[645,30,684,28],[646,8,684,30],[646,11,684,33,"prev"],[646,15,684,37],[647,8,684,39,"isInCombat"],[647,18,684,49],[647,20,684,51],[648,6,684,57],[648,7,684,58],[648,8,684,59],[648,9,684,60],[649,6,685,4,"combatEngine"],[649,25,685,16],[649,26,685,16,"combatEngine"],[649,38,685,16],[649,39,685,17,"removeTickCallback"],[649,57,685,35],[649,58,685,36,"handleCombatTick"],[649,74,685,52],[649,75,685,53],[650,4,686,2],[650,5,686,3],[650,7,686,5],[650,8,686,6,"combatEngine"],[650,27,686,18],[650,28,686,18,"combatEngine"],[650,40,686,18],[650,42,686,20,"handleCombatTick"],[650,58,686,36],[650,59,686,37],[650,60,686,38],[652,4,688,2],[653,4,689,2],[653,8,689,8,"equipAbility"],[653,20,689,20],[653,23,689,23,"equipAbility"],[653,24,689,24,"abilityId"],[653,33,689,41],[653,35,689,43,"slotIndex"],[653,44,689,60],[653,49,689,74],[654,6,690,4],[654,13,690,11,"combatState"],[654,24,690,22],[654,25,690,23,"abilityManager"],[654,39,690,37],[654,40,690,38,"equipAbility"],[654,52,690,50],[654,53,690,51,"abilityId"],[654,62,690,60],[654,64,690,62,"slotIndex"],[654,73,690,71],[654,74,690,72],[655,4,691,2],[655,5,691,3],[656,4,693,2],[656,8,693,8,"getDeck"],[656,15,693,15],[656,18,693,18,"getDeck"],[656,19,693,18],[656,24,693,24],[657,6,694,4],[657,13,694,11,"combatState"],[657,24,694,22],[657,25,694,23,"abilityManager"],[657,39,694,37],[657,40,694,38,"getDeck"],[657,47,694,45],[657,48,694,46],[657,49,694,47],[658,4,695,2],[658,5,695,3],[659,4,697,2],[659,8,697,8,"getAvailableAbilities"],[659,29,697,29],[659,32,697,32,"getAvailableAbilities"],[659,33,697,32],[659,38,697,38],[660,6,698,4],[660,13,698,11,"combatState"],[660,24,698,22],[660,25,698,23,"abilityManager"],[660,39,698,37],[660,40,698,38,"getAvailableAbilities"],[660,61,698,59],[660,62,698,60],[660,63,698,61],[661,4,699,2],[661,5,699,3],[662,4,701,2],[662,8,701,8,"upgradeAbility"],[662,22,701,22],[662,25,701,26,"abilityId"],[662,34,701,43],[662,38,701,57],[663,6,702,4],[663,13,702,11,"combatState"],[663,24,702,22],[663,25,702,23,"abilityManager"],[663,39,702,37],[663,40,702,38,"upgradeAbility"],[663,54,702,52],[663,55,702,53,"abilityId"],[663,64,702,62],[663,65,702,63],[664,4,703,2],[664,5,703,3],[666,4,705,2],[667,4,706,2],[667,8,706,8,"clearAllEnemies"],[667,23,706,23],[667,26,706,26,"clearAllEnemies"],[667,27,706,26],[667,32,706,32],[668,6,707,4,"console"],[668,13,707,11],[668,14,707,12,"log"],[668,17,707,15],[668,18,707,16],[668,67,707,65],[668,68,707,66],[669,6,708,4,"setCombatState"],[669,20,708,18],[669,21,708,19,"prev"],[669,25,708,23],[669,30,708,28],[670,8,709,6],[670,11,709,9,"prev"],[670,15,709,13],[671,8,710,6,"enemies"],[671,15,710,13],[671,17,710,15],[672,6,711,4],[672,7,711,5],[672,8,711,6],[672,9,711,7],[673,4,712,2],[673,5,712,3],[675,4,714,2],[676,4,715,2],[676,8,715,8,"triggerLevelUpExplosion"],[676,31,715,31],[676,34,715,34,"triggerLevelUpExplosion"],[676,35,715,34],[676,40,715,40],[677,6,716,4,"console"],[677,13,716,11],[677,14,716,12,"log"],[677,17,716,15],[677,18,716,16],[677,70,716,68],[677,71,716,69],[678,6,718,4],[678,10,718,10,"explosionTime"],[678,23,718,23],[678,26,718,26,"Date"],[678,30,718,30],[678,31,718,31,"now"],[678,34,718,34],[678,35,718,35],[678,36,718,36],[679,6,719,4,"setLastExplosionTime"],[679,26,719,24],[679,27,719,25,"explosionTime"],[679,40,719,38],[679,41,719,39],[680,6,721,4,"setCombatState"],[680,20,721,18],[680,21,721,19,"prev"],[680,25,721,23],[680,29,721,27],[681,8,722,6],[682,8,723,6],[682,12,723,12,"enemyCount"],[682,22,723,22],[682,25,723,25,"prev"],[682,29,723,29],[682,30,723,30,"enemies"],[682,37,723,37],[682,38,723,38,"length"],[682,44,723,44],[683,8,724,6],[683,12,724,12,"explosionXP"],[683,23,724,23],[683,26,724,26,"enemyCount"],[683,36,724,36],[683,39,724,39],[683,42,724,42],[683,43,724,43],[683,44,724,44],[684,8,725,6],[684,12,725,12,"explosionGold"],[684,25,725,25],[684,28,725,28,"enemyCount"],[684,38,725,38],[684,41,725,41],[684,44,725,44],[684,45,725,45],[684,46,725,46],[686,8,727,6,"console"],[686,15,727,13],[686,16,727,14,"log"],[686,19,727,17],[686,20,727,18],[686,44,727,42,"enemyCount"],[686,54,727,52],[686,76,727,74,"explosionXP"],[686,87,727,85],[686,98,727,96,"explosionGold"],[686,111,727,109],[686,118,727,116],[686,119,727,117],[688,8,729,6],[689,8,730,6],[689,12,730,10,"explosionXP"],[689,23,730,21],[689,26,730,24],[689,27,730,25],[689,29,730,27],[690,10,731,8,"setTimeout"],[690,20,731,18],[690,21,731,19],[690,27,731,25],[691,12,732,10,"game"],[691,16,732,14],[691,17,732,15,"updateNinja"],[691,28,732,26],[691,29,732,28,"ninja"],[691,34,732,33],[691,39,732,39],[692,14,733,12,"experience"],[692,24,733,22],[692,26,733,24,"ninja"],[692,31,733,29],[692,32,733,30,"experience"],[692,42,733,40],[692,45,733,43,"explosionXP"],[692,56,733,54],[693,14,734,12,"gold"],[693,18,734,16],[693,20,734,18,"ninja"],[693,25,734,23],[693,26,734,24,"gold"],[693,30,734,28],[693,33,734,31,"explosionGold"],[694,12,735,10],[694,13,735,11],[694,14,735,12],[694,15,735,13],[695,10,736,8],[695,11,736,9],[695,13,736,11],[695,14,736,12],[695,15,736,13],[695,16,736,14],[695,17,736,15],[696,8,737,6],[698,8,739,6],[699,8,740,6],[700,8,741,6],[700,12,741,12,"damagedEnemies"],[700,26,741,26],[700,29,741,29,"prev"],[700,33,741,33],[700,34,741,34,"enemies"],[700,41,741,41],[700,42,741,42,"map"],[700,45,741,45],[700,46,741,46,"enemy"],[700,51,741,51],[700,56,741,56],[701,10,742,8],[701,13,742,11,"enemy"],[701,18,742,16],[702,10,743,8,"health"],[702,16,743,14],[702,18,743,16],[702,19,743,17],[703,10,743,19],[704,10,744,8,"lastDamaged"],[704,21,744,19],[704,23,744,21,"combatEngine"],[704,42,744,33],[704,43,744,33,"combatEngine"],[704,55,744,33],[704,56,744,34,"getCurrentTick"],[704,70,744,48],[704,71,744,49],[705,8,745,6],[705,9,745,7],[705,10,745,8],[705,11,745,9],[706,8,747,6],[706,15,747,13],[707,10,748,8],[707,13,748,11,"prev"],[707,17,748,15],[708,10,749,8,"enemies"],[708,17,749,15],[708,19,749,17,"damagedEnemies"],[709,8,750,6],[709,9,750,7],[710,6,751,4],[710,7,751,5],[710,8,751,6],[711,4,752,2],[711,5,752,3],[713,4,754,2],[714,4,755,2],[714,8,755,8,"spawnEnemy"],[714,18,755,18],[714,21,755,22,"position"],[714,29,755,57],[714,33,755,75],[715,6,756,4],[715,10,756,10,"SCREEN_WIDTH"],[715,22,756,22],[715,25,756,25],[715,28,756,28],[716,6,757,4],[716,10,757,10,"GAME_AREA_HEIGHT"],[716,26,757,26],[716,29,757,29],[716,32,757,32],[716,35,757,35],[716,38,757,38],[716,39,757,39],[716,40,757,40],[717,6,758,4],[717,10,758,10,"ENEMY_SIZE"],[717,20,758,20],[717,23,758,23],[717,25,758,25],[719,6,760,4],[720,6,761,4],[720,10,761,10,"x"],[720,11,761,11],[720,14,761,14,"position"],[720,22,761,22],[720,24,761,24,"x"],[720,25,761,25],[720,29,761,29,"Math"],[720,33,761,33],[720,34,761,34,"random"],[720,40,761,40],[720,41,761,41],[720,42,761,42],[720,46,761,46,"SCREEN_WIDTH"],[720,58,761,58],[720,61,761,61,"ENEMY_SIZE"],[720,71,761,71],[720,74,761,74],[720,75,761,75],[720,76,761,76],[720,79,761,79,"ENEMY_SIZE"],[720,89,761,89],[721,6,762,4],[721,10,762,10,"y"],[721,11,762,11],[721,14,762,14,"position"],[721,22,762,22],[721,24,762,24,"y"],[721,25,762,25],[721,29,762,29,"Math"],[721,33,762,33],[721,34,762,34,"random"],[721,40,762,40],[721,41,762,41],[721,42,762,42],[721,46,762,46,"GAME_AREA_HEIGHT"],[721,62,762,62],[721,65,762,65,"ENEMY_SIZE"],[721,75,762,75],[721,78,762,78],[721,79,762,79],[721,80,762,80],[721,83,762,83,"ENEMY_SIZE"],[721,93,762,93],[722,6,764,4],[722,10,764,10,"enemy"],[722,15,764,28],[722,18,764,31],[723,8,765,6,"id"],[723,10,765,8],[723,12,765,10],[723,21,765,19],[723,23,765,21,"enemyCounter"],[723,35,765,33],[723,37,765,35],[724,8,766,6,"name"],[724,12,766,10],[724,14,766,12],[724,24,766,22],[725,8,767,6,"health"],[725,14,767,12],[725,16,767,14],[725,19,767,17],[726,8,768,6,"maxHealth"],[726,17,768,15],[726,19,768,17],[726,22,768,20],[727,8,769,6,"stats"],[727,13,769,11],[727,15,769,13],[728,10,770,8,"attack"],[728,16,770,14],[728,18,770,16],[728,20,770,18],[729,10,771,8,"defense"],[729,17,771,15],[729,19,771,17],[729,21,771,19],[730,10,772,8,"health"],[730,16,772,14],[730,18,772,16],[730,21,772,19],[731,10,773,8,"maxHealth"],[731,19,773,17],[731,21,773,19],[731,24,773,22],[732,10,774,8,"critChance"],[732,20,774,18],[732,22,774,20],[732,23,774,21],[733,10,775,8,"critDamage"],[733,20,775,18],[733,22,775,20],[733,25,775,23],[734,10,776,8,"cooldownReduction"],[734,27,776,25],[734,29,776,27],[735,8,777,6],[735,9,777,7],[736,8,778,6,"position"],[736,16,778,14],[736,18,778,16],[737,10,778,18,"x"],[737,11,778,19],[738,10,778,21,"y"],[739,8,778,23],[739,9,778,24],[740,8,779,6,"lastDamaged"],[740,19,779,17],[740,21,779,19],[741,6,780,4],[741,7,780,5],[742,6,782,4,"setCombatState"],[742,20,782,18],[742,21,782,19,"prev"],[742,25,782,23],[742,30,782,28],[743,8,783,6],[743,11,783,9,"prev"],[743,15,783,13],[744,8,784,6,"enemies"],[744,15,784,13],[744,17,784,15],[744,18,784,16],[744,21,784,19,"prev"],[744,25,784,23],[744,26,784,24,"enemies"],[744,33,784,31],[744,35,784,33,"enemy"],[744,40,784,38],[745,6,785,4],[745,7,785,5],[745,8,785,6],[745,9,785,7],[746,6,787,4],[746,13,787,11,"enemy"],[746,18,787,16],[747,4,788,2],[747,5,788,3],[749,4,790,2],[750,4,791,2],[750,8,791,8,"spawnBoss"],[750,17,791,17],[750,20,791,21,"bossEnemy"],[750,29,791,43],[750,33,791,48],[751,6,792,4,"console"],[751,13,792,11],[751,14,792,12,"log"],[751,17,792,15],[751,18,792,16],[751,39,792,37,"bossEnemy"],[751,48,792,46],[751,49,792,47,"name"],[751,53,792,51],[751,90,792,88],[751,91,792,89],[752,6,793,4,"setCombatState"],[752,20,793,18],[752,21,793,19,"prev"],[752,25,793,23],[752,30,793,28],[753,8,794,6],[753,11,794,9,"prev"],[753,15,794,13],[754,8,795,6,"enemies"],[754,15,795,13],[754,17,795,15],[754,18,795,16,"bossEnemy"],[754,27,795,25],[754,28,795,26],[754,29,795,27],[755,6,796,4],[755,7,796,5],[755,8,796,6],[755,9,796,7],[756,4,797,2],[756,5,797,3],[758,4,799,2],[759,4,800,2],[759,8,800,8,"clearSpecificEnemy"],[759,26,800,26],[759,29,800,30,"enemyId"],[759,36,800,45],[759,40,800,50],[760,6,801,4,"setCombatState"],[760,20,801,18],[760,21,801,19,"prev"],[760,25,801,23],[760,30,801,28],[761,8,802,6],[761,11,802,9,"prev"],[761,15,802,13],[762,8,803,6,"enemies"],[762,15,803,13],[762,17,803,15,"prev"],[762,21,803,19],[762,22,803,20,"enemies"],[762,29,803,27],[762,30,803,28,"filter"],[762,36,803,34],[762,37,803,35,"enemy"],[762,42,803,40],[762,46,803,44,"enemy"],[762,51,803,49],[762,52,803,50,"id"],[762,54,803,52],[762,59,803,57,"enemyId"],[762,66,803,64],[763,6,804,4],[763,7,804,5],[763,8,804,6],[763,9,804,7],[764,4,805,2],[764,5,805,3],[766,4,807,2],[767,4,808,2],[767,8,808,8,"useAbilityManually"],[767,26,808,26],[767,29,808,26,"_s3"],[767,32,808,26],[767,33,808,29],[767,37,808,29,"useCallback"],[767,43,808,40],[767,44,808,40,"useCallback"],[767,55,808,40],[767,57,808,40,"_s3"],[767,60,808,40],[767,61,808,42,"slotIndex"],[767,70,808,59],[767,74,808,73],[768,6,808,73,"_s3"],[768,9,808,73],[769,6,809,4,"console"],[769,13,809,11],[769,14,809,12,"log"],[769,17,809,15],[769,18,809,16],[769,53,809,51,"slotIndex"],[769,62,809,60],[769,64,809,62],[769,65,809,63],[771,6,811,4],[772,6,812,4],[772,10,812,10,"isReady"],[772,17,812,17],[772,20,812,20,"combatState"],[772,31,812,31],[772,32,812,32,"abilityManager"],[772,46,812,46],[772,47,812,47,"isAbilityReady"],[772,61,812,61],[772,62,812,62,"slotIndex"],[772,71,812,71],[772,72,812,72],[773,6,813,4],[773,10,813,8],[773,11,813,9,"isReady"],[773,18,813,16],[773,20,813,18],[774,8,814,6,"console"],[774,15,814,13],[774,16,814,14,"log"],[774,19,814,17],[774,20,814,18],[774,41,814,39,"slotIndex"],[774,50,814,48],[774,85,814,83],[774,86,814,84],[775,8,815,6],[775,15,815,13],[775,20,815,18],[776,6,816,4],[778,6,818,4],[779,6,819,4],[779,10,819,8,"combatState"],[779,21,819,19],[779,22,819,20,"enemies"],[779,29,819,27],[779,30,819,28,"length"],[779,36,819,34],[779,41,819,39],[779,42,819,40],[779,44,819,42],[780,8,820,6,"console"],[780,15,820,13],[780,16,820,14,"log"],[780,19,820,17],[780,20,820,18],[780,69,820,67],[780,70,820,68],[781,8,821,6],[781,15,821,13],[781,20,821,18],[782,6,822,4],[784,6,824,4],[785,6,825,4],[785,10,825,10,"currentTick"],[785,21,825,21],[785,24,825,24,"combatEngine"],[785,43,825,36],[785,44,825,36,"combatEngine"],[785,56,825,36],[785,57,825,37,"getCurrentTick"],[785,71,825,51],[785,72,825,52],[785,73,825,53],[786,6,826,4],[786,10,826,10,"success"],[786,17,826,17],[786,20,826,20,"combatState"],[786,31,826,31],[786,32,826,32,"abilityManager"],[786,46,826,46],[786,47,826,47,"useAbility"],[786,57,826,57],[786,58,826,58,"slotIndex"],[786,67,826,67],[786,69,826,69,"currentTick"],[786,80,826,80],[786,81,826,81],[787,6,828,4],[787,10,828,8,"success"],[787,17,828,15],[787,19,828,17],[788,8,829,6],[789,8,830,6,"setCombatState"],[789,22,830,20],[789,23,830,21,"prev"],[789,27,830,25],[789,31,830,29],[790,10,831,8],[790,14,831,14,"newState"],[790,22,831,22],[790,25,831,25],[791,12,831,27],[791,15,831,30,"prev"],[792,10,831,35],[792,11,831,36],[793,10,832,8,"castAbility"],[793,21,832,19],[793,22,832,20,"newState"],[793,30,832,28],[793,32,832,30,"slotIndex"],[793,41,832,39],[793,42,832,40],[794,10,833,8],[794,17,833,15,"newState"],[794,25,833,23],[795,8,834,6],[795,9,834,7],[795,10,834,8],[796,8,836,6,"console"],[796,15,836,13],[796,16,836,14,"log"],[796,19,836,17],[796,20,836,18],[796,65,836,63,"slotIndex"],[796,74,836,72],[796,76,836,74],[796,77,836,75],[797,8,837,6],[797,15,837,13],[797,19,837,17],[798,6,838,4],[798,7,838,5],[798,13,838,11],[799,8,839,6,"console"],[799,15,839,13],[799,16,839,14,"log"],[799,19,839,17],[799,20,839,18],[799,61,839,59,"slotIndex"],[799,70,839,68],[799,72,839,70],[799,73,839,71],[800,8,840,6],[800,15,840,13],[800,20,840,18],[801,6,841,4],[802,4,842,2],[802,5,842,3],[802,46,842,5],[802,47,842,6,"combatState"],[802,58,842,17],[802,59,842,18,"abilityManager"],[802,73,842,32],[802,75,842,34,"combatState"],[802,86,842,45],[802,87,842,46,"enemies"],[802,94,842,53],[802,95,842,54],[802,96,842,55],[803,4,843,2],[803,8,843,2,"useEffect"],[803,14,843,11],[803,15,843,11,"useEffect"],[803,24,843,11],[803,26,843,12],[803,32,843,18],[804,6,844,4,"combatEngine"],[804,25,844,16],[804,26,844,16,"combatEngine"],[804,38,844,16],[804,39,844,17,"start"],[804,44,844,22],[804,45,844,23],[804,46,844,24],[806,6,846,4],[807,6,847,4],[808,6,848,4,"console"],[808,13,848,11],[808,14,848,12,"log"],[808,17,848,15],[808,18,848,16],[808,97,848,95],[808,98,848,96],[809,6,850,4],[809,13,850,11],[809,19,850,17],[810,8,851,6,"combatEngine"],[810,27,851,18],[810,28,851,18,"combatEngine"],[810,40,851,18],[810,41,851,19,"stop"],[810,45,851,23],[810,46,851,24],[810,47,851,25],[811,6,852,4],[811,7,852,5],[812,4,853,2],[812,5,853,3],[812,7,853,5],[812,9,853,7],[812,10,853,8],[814,4,855,2],[815,4,856,2],[815,8,856,2,"useEffect"],[815,14,856,11],[815,15,856,11,"useEffect"],[815,24,856,11],[815,26,856,12],[815,32,856,18],[816,6,857,4],[816,10,857,10,"processProjectileImpacts"],[816,34,857,34],[816,37,857,37,"processProjectileImpacts"],[816,38,857,37],[816,43,857,43],[817,8,858,6,"setProjectiles"],[817,22,858,20],[817,23,858,21,"currentProjectiles"],[817,41,858,39],[817,45,858,43],[818,10,859,8],[818,17,859,15,"currentProjectiles"],[818,35,859,33],[818,36,859,34,"map"],[818,39,859,37],[818,40,859,38,"projectile"],[818,50,859,48],[818,54,859,52],[819,12,860,10],[819,16,860,14],[819,17,860,15,"projectile"],[819,27,860,25],[819,29,860,27],[819,36,860,34],[819,40,860,38],[821,12,862,10],[822,12,863,10],[822,16,863,16,"currentTime"],[822,27,863,27],[822,30,863,30,"Date"],[822,34,863,34],[822,35,863,35,"now"],[822,38,863,38],[822,39,863,39],[822,40,863,40],[823,12,864,10],[823,16,864,16,"startTime"],[823,25,864,25],[823,28,864,28,"projectile"],[823,38,864,38],[823,39,864,39,"startTime"],[823,48,864,48],[823,52,864,52,"currentTime"],[823,63,864,63],[824,12,865,10],[824,16,865,16,"elapsedTime"],[824,27,865,27],[824,30,865,30,"currentTime"],[824,41,865,41],[824,44,865,44,"startTime"],[824,53,865,53],[825,12,866,10],[825,16,866,16,"progress"],[825,24,866,24],[825,27,866,27,"Math"],[825,31,866,31],[825,32,866,32,"min"],[825,35,866,35],[825,36,866,36,"elapsedTime"],[825,47,866,47],[825,51,866,51,"projectile"],[825,61,866,61],[825,62,866,62,"duration"],[825,70,866,70],[825,74,866,74],[825,77,866,77],[825,78,866,78],[825,80,866,80],[825,81,866,81],[825,82,866,82],[827,12,868,10],[828,12,869,10],[828,16,869,14,"progress"],[828,24,869,22],[828,28,869,26],[828,29,869,27],[828,33,869,31],[828,34,869,32,"projectile"],[828,44,869,42],[828,45,869,43,"hasHit"],[828,51,869,49],[828,53,869,51],[829,14,870,12,"projectile"],[829,24,870,22],[829,25,870,23,"hasHit"],[829,31,870,29],[829,34,870,32],[829,38,870,36],[830,14,872,12,"console"],[830,21,872,19],[830,22,872,20,"log"],[830,25,872,23],[830,26,872,24],[830,51,872,49,"projectile"],[830,61,872,59],[830,62,872,60,"abilityName"],[830,73,872,71],[830,87,872,85,"projectile"],[830,97,872,95],[830,98,872,96,"targetEnemyId"],[830,111,872,109],[830,119,872,117,"projectile"],[830,129,872,127],[830,130,872,128,"damage"],[830,136,872,134],[830,145,872,143],[830,146,872,144],[832,14,874,12],[833,14,875,12,"setCombatState"],[833,28,875,26],[833,29,875,27,"prev"],[833,33,875,31],[833,37,875,35],[834,16,876,14],[834,20,876,20,"newState"],[834,28,876,28],[834,31,876,31],[835,18,876,33],[835,21,876,36,"prev"],[836,16,876,41],[836,17,876,42],[837,16,877,14],[837,20,877,20,"enemyIndex"],[837,30,877,30],[837,33,877,33,"newState"],[837,41,877,41],[837,42,877,42,"enemies"],[837,49,877,49],[837,50,877,50,"findIndex"],[837,59,877,59],[837,60,877,60,"e"],[837,61,877,61],[837,65,877,65,"e"],[837,66,877,66],[837,67,877,67,"id"],[837,69,877,69],[837,74,877,74,"projectile"],[837,84,877,84],[837,85,877,85,"targetEnemyId"],[837,98,877,98],[837,99,877,99],[838,16,879,14],[838,20,879,18,"enemyIndex"],[838,30,879,28],[838,34,879,32],[838,35,879,33],[838,39,879,37,"newState"],[838,47,879,45],[838,48,879,46,"enemies"],[838,55,879,53],[838,56,879,54,"enemyIndex"],[838,66,879,64],[838,67,879,65],[838,68,879,66,"health"],[838,74,879,72],[838,77,879,75],[838,78,879,76],[838,80,879,78],[839,18,880,16,"newState"],[839,26,880,24],[839,27,880,25,"enemies"],[839,34,880,32],[839,37,880,35],[839,38,880,36],[839,41,880,39,"newState"],[839,49,880,47],[839,50,880,48,"enemies"],[839,57,880,55],[839,58,880,56],[840,18,881,16],[840,22,881,22,"enemy"],[840,27,881,27],[840,30,881,30,"newState"],[840,38,881,38],[840,39,881,39,"enemies"],[840,46,881,46],[840,47,881,47,"enemyIndex"],[840,57,881,57],[840,58,881,58],[841,18,882,16],[841,22,882,22,"newHealth"],[841,31,882,31],[841,34,882,34,"Math"],[841,38,882,38],[841,39,882,39,"max"],[841,42,882,42],[841,43,882,43],[841,44,882,44],[841,46,882,46,"enemy"],[841,51,882,51],[841,52,882,52,"health"],[841,58,882,58],[841,61,882,61,"projectile"],[841,71,882,71],[841,72,882,72,"damage"],[841,78,882,78],[841,79,882,79],[842,18,884,16,"newState"],[842,26,884,24],[842,27,884,25,"enemies"],[842,34,884,32],[842,35,884,33,"enemyIndex"],[842,45,884,43],[842,46,884,44],[842,49,884,47],[843,20,885,18],[843,23,885,21,"enemy"],[843,28,885,26],[844,20,886,18,"health"],[844,26,886,24],[844,28,886,26,"newHealth"],[844,37,886,35],[845,20,887,18,"lastDamaged"],[845,31,887,29],[845,33,887,31,"combatEngine"],[845,52,887,43],[845,53,887,43,"combatEngine"],[845,65,887,43],[845,66,887,44,"getCurrentTick"],[845,80,887,58],[845,81,887,59],[846,18,888,16],[846,19,888,17],[847,18,890,16,"console"],[847,25,890,23],[847,26,890,24,"log"],[847,29,890,27],[847,30,890,28],[847,52,890,50,"enemy"],[847,57,890,55],[847,58,890,56,"name"],[847,62,890,60],[847,74,890,72,"newHealth"],[847,83,890,81],[847,87,890,85,"enemy"],[847,92,890,90],[847,93,890,91,"maxHealth"],[847,102,890,100],[847,104,890,102],[847,105,890,103],[849,18,892,16],[850,18,893,16],[850,22,893,20,"newHealth"],[850,31,893,29],[850,35,893,33],[850,36,893,34],[850,40,893,38,"enemy"],[850,45,893,43],[850,46,893,44,"health"],[850,52,893,50],[850,55,893,53],[850,56,893,54],[850,58,893,56],[851,20,894,18,"console"],[851,27,894,25],[851,28,894,26,"log"],[851,31,894,29],[851,32,894,30],[851,55,894,53,"enemy"],[851,60,894,58],[851,61,894,59,"name"],[851,65,894,63],[851,79,894,77,"projectile"],[851,89,894,87],[851,90,894,88,"abilityName"],[851,101,894,99],[851,104,894,102],[851,105,894,103],[852,20,895,18,"setTimeout"],[852,30,895,28],[852,31,895,29],[852,37,895,35,"handleEnemyKill"],[852,52,895,50],[852,53,895,51,"enemy"],[852,58,895,56],[852,59,895,57],[852,61,895,59],[852,62,895,60],[852,63,895,61],[853,18,896,16],[854,16,897,14],[855,16,899,14],[855,23,899,21,"newState"],[855,31,899,29],[856,14,900,12],[856,15,900,13],[856,16,900,14],[857,12,901,10],[859,12,903,10],[860,12,904,10],[860,16,904,14,"progress"],[860,24,904,22],[860,28,904,26],[860,31,904,29],[860,33,904,31],[861,14,905,12],[861,21,905,19],[861,25,905,23],[862,12,906,10],[863,12,908,10],[863,19,908,17,"projectile"],[863,29,908,27],[864,10,909,8],[864,11,909,9],[864,12,909,10],[864,13,909,11,"filter"],[864,19,909,17],[864,20,909,18,"Boolean"],[864,27,909,25],[864,28,909,26],[865,8,910,6],[865,9,910,7],[865,10,910,8],[866,6,911,4],[866,7,911,5],[868,6,913,4],[869,6,914,4],[869,10,914,10,"impactInterval"],[869,24,914,24],[869,27,914,27,"setInterval"],[869,38,914,38],[869,39,914,39,"processProjectileImpacts"],[869,63,914,63],[869,65,914,65],[869,67,914,67],[869,68,914,68],[870,6,915,4],[870,13,915,11],[870,19,915,17,"clearInterval"],[870,32,915,30],[870,33,915,31,"impactInterval"],[870,47,915,45],[870,48,915,46],[871,4,916,2],[871,5,916,3],[871,7,916,5],[871,8,916,6,"handleEnemyKill"],[871,23,916,21],[871,24,916,22],[871,25,916,23],[873,4,918,2],[874,4,919,2],[874,8,919,8,"saveAbilityData"],[874,23,919,23],[874,26,919,26],[874,30,919,26,"useCallback"],[874,36,919,37],[874,37,919,37,"useCallback"],[874,48,919,37],[874,50,919,38],[874,56,919,44],[875,6,920,4],[875,10,920,8,"combatState"],[875,21,920,19],[875,22,920,20,"abilityManager"],[875,36,920,34],[875,38,920,36],[876,8,921,6],[876,12,921,12,"abilityData"],[876,23,921,23],[876,26,921,26,"combatState"],[876,37,921,37],[876,38,921,38,"abilityManager"],[876,52,921,52],[876,53,921,53,"getSaveData"],[876,64,921,64],[876,65,921,65],[876,66,921,66],[877,8,922,6,"console"],[877,15,922,13],[877,16,922,14,"log"],[877,19,922,17],[877,20,922,18],[877,70,922,68],[877,72,922,70,"abilityData"],[877,83,922,81],[877,84,922,82],[878,8,923,6,"game"],[878,12,923,10],[878,13,923,11,"updateAbilityData"],[878,30,923,28],[878,31,923,29,"abilityData"],[878,42,923,40],[878,43,923,41],[879,6,924,4],[880,4,925,2],[880,5,925,3],[880,7,925,5],[880,8,925,6,"combatState"],[880,19,925,17],[880,20,925,18,"abilityManager"],[880,34,925,32],[880,36,925,34,"game"],[880,40,925,38],[880,41,925,39,"updateAbilityData"],[880,58,925,56],[880,59,925,57],[880,60,925,58],[881,4,927,2],[881,8,927,8,"contextValue"],[881,20,927,39],[881,23,927,42,"React"],[881,28,927,47],[881,29,927,47,"default"],[881,36,927,47],[881,37,927,48,"useMemo"],[881,44,927,55],[881,45,927,56],[881,52,927,63],[882,6,928,4,"combatState"],[882,17,928,15],[883,6,929,4,"projectiles"],[883,17,929,15],[884,6,930,4,"startCombat"],[884,17,930,15],[885,6,931,4,"stopCombat"],[885,16,931,14],[886,6,932,4,"equipAbility"],[886,18,932,16],[887,6,933,4,"handleEnemyKill"],[887,21,933,19],[888,6,934,4,"getDeck"],[888,13,934,11],[889,6,935,4,"getAvailableAbilities"],[889,27,935,25],[890,6,936,4,"upgradeAbility"],[890,20,936,18],[891,6,937,4,"spawnEnemy"],[891,16,937,14],[892,6,938,4,"spawnBoss"],[892,15,938,13],[893,6,939,4,"clearAllEnemies"],[893,21,939,19],[894,6,940,4,"clearSpecificEnemy"],[894,24,940,22],[895,6,941,4,"triggerLevelUpExplosion"],[895,29,941,27],[896,6,942,4,"findClosestEnemy"],[896,22,942,20],[897,6,943,4,"updateNinjaPosition"],[897,25,943,23],[898,6,944,4,"setManualControlActive"],[898,28,944,26],[899,6,945,4,"lastExplosionTime"],[899,23,945,21],[900,6,946,4,"useAbilityManually"],[900,24,946,22],[901,6,946,24],[902,6,947,4,"saveAbilityData"],[902,21,947,19],[903,6,947,21],[904,6,948,4,"shadowClone"],[904,17,948,15],[904,19,948,17,"combatState"],[904,30,948,28],[904,31,948,29,"shadowClone"],[904,42,948,40],[904,43,948,42],[905,4,949,2],[905,5,949,3],[905,6,949,4],[905,8,949,6],[906,4,950,4],[907,4,951,4],[908,4,952,4,"combatState"],[908,15,952,15],[908,17,953,4,"projectiles"],[908,28,953,15],[908,30,954,4,"lastExplosionTime"],[908,47,954,21],[909,4,955,4],[910,4,956,4,"combatState"],[910,15,956,15],[910,16,956,16,"abilityManager"],[910,30,956,30],[910,32,957,4,"combatState"],[910,43,957,15],[910,44,957,16,"enemies"],[910,51,957,23],[910,53,958,4,"combatState"],[910,64,958,15],[910,65,958,16,"shadowClone"],[910,76,958,27],[911,4,958,29],[912,4,959,4,"useAbilityManually"],[912,22,959,22],[913,4,959,24],[914,4,960,4,"saveAbilityData"],[914,19,960,19],[914,20,960,21],[915,4,960,21],[915,5,961,3],[915,6,961,4],[916,4,963,2],[916,24,964,4],[916,28,964,4,"_reactJsxDevRuntime"],[916,47,964,4],[916,48,964,4,"jsxDEV"],[916,54,964,4],[916,56,964,5,"CombatContext"],[916,69,964,18],[916,70,964,19,"Provider"],[916,78,964,27],[917,6,964,28,"value"],[917,11,964,33],[917,13,964,35,"contextValue"],[917,25,964,48],[918,6,964,48,"children"],[918,14,964,48],[918,16,965,7,"children"],[919,4,965,15],[920,6,965,15,"fileName"],[920,14,965,15],[920,16,965,15,"_jsxFileName"],[920,28,965,15],[921,6,965,15,"lineNumber"],[921,16,965,15],[922,6,965,15,"columnNumber"],[922,18,965,15],[923,4,965,15],[923,11,966,28],[923,12,966,29],[924,2,968,0],[924,3,968,1],[925,2,968,2,"_s4"],[925,5,968,2],[925,6,99,13,"CombatProvider"],[925,20,99,27],[926,4,99,27],[926,12,100,15,"useGame"],[926,24,100,22],[926,25,100,22,"useGame"],[926,32,100,22],[926,34,101,77,"useZone"],[926,46,101,84],[926,47,101,84,"useZone"],[926,54,101,84],[927,2,101,84],[928,2,101,84,"_c"],[928,4,101,84],[928,7,99,13,"CombatProvider"],[928,21,99,27],[929,2,99,27],[929,6,99,27,"_c"],[929,8,99,27],[930,2,99,27,"$RefreshReg$"],[930,14,99,27],[930,15,99,27,"_c"],[930,17,99,27],[931,0,99,27],[931,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCwF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}