{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - MEMOIZED to prevent infinite re-renders\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      var xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      var goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n      console.log(`💰 ENEMY KILL - Awarding ${xpReward} XP and ${goldReward} gold for ${enemy.name}`);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, game.gameState.subscriptionBenefits, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Memoized with minimal dependencies to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        var unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          var totalXP = 0;\n          var totalGold = 0;\n          var zoneKills = [];\n          var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          var goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              var wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }, []); // Empty dependency array - handleEnemyKill is stable\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    // Initialize to center screen position instead of corner (0,0)\n    var _useState7 = (0, _react.useState)({\n        x: 195,\n        y: 400\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Memoized with stable dependencies\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat - Memoized with stable dependencies\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"lv0RwSXXMNmrzfA074n/0ziwNOM=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1166,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1231,2],[27,6,1231,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1231,2],[27,42,1231,2,"require"],[27,49,1231,2],[27,50,1231,2,"_dependencyMap"],[27,64,1231,2],[28,2,1231,2],[28,6,1231,2,"_slicedToArray"],[28,20,1231,2],[28,23,1231,2,"_interopDefault"],[28,38,1231,2],[28,39,1231,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1231,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,94,0],[36,6,94,6,"CombatContext"],[36,19,94,19],[36,35,94,22],[36,39,94,22,"createContext"],[36,45,94,35],[36,46,94,35,"createContext"],[36,59,94,35],[36,61,94,67,"undefined"],[36,70,94,76],[36,71,94,77],[37,2,96,7],[37,6,96,13,"useCombat"],[37,15,96,22],[37,18,96,25,"useCombat"],[37,19,96,25],[37,24,96,50],[38,4,96,50,"_s"],[38,6,96,50],[39,4,97,2],[39,8,97,8,"context"],[39,15,97,15],[39,18,97,18],[39,22,97,18,"useContext"],[39,28,97,28],[39,29,97,28,"useContext"],[39,39,97,28],[39,41,97,29,"CombatContext"],[39,54,97,42],[39,55,97,43],[40,4,98,2],[40,8,98,6],[40,9,98,7,"context"],[40,16,98,14],[40,18,98,16],[41,6,99,4],[41,12,99,10],[41,16,99,14,"Error"],[41,21,99,19],[41,22,99,20],[41,70,99,68],[41,71,99,69],[42,4,100,2],[43,4,101,2],[43,11,101,9,"context"],[43,18,101,16],[44,2,102,0],[44,3,102,1],[45,2,102,2,"_s"],[45,4,102,2],[45,5,96,13,"useCombat"],[45,14,96,22],[46,2,104,0],[46,6,104,4,"enemyCounter"],[46,18,104,16],[46,21,104,19],[46,22,104,20],[46,23,104,21],[46,24,104,22],[48,2,106,7],[48,6,106,13,"CombatProvider"],[48,20,106,27],[48,23,106,30,"_ref"],[48,27,106,30],[48,31,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,106,73],[51,8,106,33,"children"],[51,16,106,41],[51,19,106,41,"_ref"],[51,23,106,41],[51,24,106,33,"children"],[51,32,106,41],[52,4,107,2],[52,8,107,8,"game"],[52,12,107,12],[52,15,107,15],[52,19,107,15,"useGame"],[52,31,107,22],[52,32,107,22,"useGame"],[52,39,107,22],[52,41,107,23],[52,42,107,24],[53,4,108,2],[53,8,108,2,"_useZone"],[53,16,108,2],[53,19,108,77],[53,23,108,77,"useZone"],[53,35,108,84],[53,36,108,84,"useZone"],[53,43,108,84],[53,45,108,85],[53,46,108,86],[54,6,108,10,"currentZone"],[54,17,108,21],[54,20,108,21,"_useZone"],[54,28,108,21],[54,29,108,10,"currentZone"],[54,40,108,21],[55,6,108,23,"currentZoneLevel"],[55,22,108,39],[55,25,108,39,"_useZone"],[55,33,108,39],[55,34,108,23,"currentZoneLevel"],[55,50,108,39],[56,6,108,41,"recordEnemyKill"],[56,21,108,56],[56,24,108,56,"_useZone"],[56,32,108,56],[56,33,108,41,"recordEnemyKill"],[56,48,108,56],[57,6,108,58,"spawnZoneEnemy"],[57,20,108,72],[57,23,108,72,"_useZone"],[57,31,108,72],[57,32,108,58,"spawnZoneEnemy"],[57,46,108,72],[59,4,110,2],[60,4,111,2],[60,8,111,8,"initialCombatState"],[60,26,111,39],[60,29,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,8,128,2,"_useState"],[77,17,128,2],[77,20,128,40],[77,24,128,40,"useState"],[77,30,128,48],[77,31,128,48,"useState"],[77,39,128,48],[77,41,128,62,"initialCombatState"],[77,59,128,80],[77,60,128,81],[78,6,128,81,"_useState2"],[78,16,128,81],[78,23,128,81,"_slicedToArray"],[78,37,128,81],[78,38,128,81,"default"],[78,45,128,81],[78,47,128,81,"_useState"],[78,56,128,81],[79,6,128,9,"combatState"],[79,17,128,20],[79,20,128,20,"_useState2"],[79,30,128,20],[80,6,128,22,"setCombatState"],[80,20,128,36],[80,23,128,36,"_useState2"],[80,33,128,36],[82,4,130,2],[83,4,131,2],[83,8,131,2,"useEffect"],[83,14,131,11],[83,15,131,11,"useEffect"],[83,24,131,11],[83,26,131,12],[83,32,131,18],[84,6,132,4],[84,10,132,8,"game"],[84,14,132,12],[84,15,132,13,"gameState"],[84,24,132,22],[84,25,132,23,"abilityData"],[84,36,132,34],[84,40,132,38,"combatState"],[84,51,132,49],[84,52,132,50,"abilityManager"],[84,66,132,64],[84,68,132,66],[85,8,133,6,"console"],[85,15,133,13],[85,16,133,14,"log"],[85,19,133,17],[85,20,133,18],[85,68,133,66],[85,70,133,68,"game"],[85,74,133,72],[85,75,133,73,"gameState"],[85,84,133,82],[85,85,133,83,"abilityData"],[85,96,133,94],[85,97,133,95],[86,8,134,6,"combatState"],[86,19,134,17],[86,20,134,18,"abilityManager"],[86,34,134,32],[86,35,134,33,"restoreFromSaveData"],[86,54,134,52],[86,55,134,53,"game"],[86,59,134,57],[86,60,134,58,"gameState"],[86,69,134,67],[86,70,134,68,"abilityData"],[86,81,134,79],[86,82,134,80],[88,8,136,6],[89,8,137,6,"setCombatState"],[89,22,137,20],[89,23,137,21,"prev"],[89,27,137,25],[89,32,137,30],[90,10,137,32],[90,13,137,35,"prev"],[91,8,137,40],[91,9,137,41],[91,10,137,42],[91,11,137,43],[92,6,138,4],[93,4,139,2],[93,5,139,3],[93,7,139,5],[93,8,139,6,"game"],[93,12,139,10],[93,13,139,11,"gameState"],[93,22,139,20],[93,23,139,21,"abilityData"],[93,34,139,32],[93,36,139,34,"combatState"],[93,47,139,45],[93,48,139,46,"abilityManager"],[93,62,139,60],[93,63,139,61],[93,64,139,62],[95,4,141,2],[96,4,142,2],[96,8,142,2,"useEffect"],[96,14,142,11],[96,15,142,11,"useEffect"],[96,24,142,11],[96,26,142,12],[96,32,142,18],[97,6,143,4],[97,10,143,8,"game"],[97,14,143,12],[97,15,143,13,"gameState"],[97,24,143,22],[97,25,143,23,"ninja"],[97,30,143,28],[97,32,143,30],[98,8,144,6],[98,12,144,12,"effectiveStats"],[98,26,144,26],[98,29,144,29,"game"],[98,33,144,33],[98,34,144,34,"getEffectiveStats"],[98,51,144,51],[98,52,144,52],[98,53,144,53],[99,8,146,6,"setCombatState"],[99,22,146,20],[99,23,146,21,"prev"],[99,27,146,25],[99,31,146,29],[100,10,147,8],[101,10,148,8],[101,14,148,12,"prev"],[101,18,148,16],[101,19,148,17,"playerStats"],[101,30,148,28],[101,31,148,29,"maxHealth"],[101,40,148,38],[101,45,148,43],[101,48,148,46],[101,52,148,50,"prev"],[101,56,148,54],[101,57,148,55,"playerStats"],[101,68,148,66],[101,69,148,67,"attack"],[101,75,148,73],[101,80,148,78],[101,82,148,80],[101,84,148,82],[102,12,149,10,"console"],[102,19,149,17],[102,20,149,18,"log"],[102,23,149,21],[102,24,149,22],[102,60,149,58,"effectiveStats"],[102,74,149,72],[102,75,149,73,"health"],[102,81,149,79],[102,93,149,91,"effectiveStats"],[102,107,149,105],[102,108,149,106,"attack"],[102,114,149,112],[102,127,149,125,"effectiveStats"],[102,141,149,139],[102,142,149,140,"defense"],[102,149,149,147],[102,151,149,149],[102,152,149,150],[103,12,151,10],[103,19,151,17],[104,14,152,12],[104,17,152,15,"prev"],[104,21,152,19],[105,14,153,12,"playerStats"],[105,25,153,23],[105,27,153,25],[106,16,154,14,"attack"],[106,22,154,20],[106,24,154,22,"effectiveStats"],[106,38,154,36],[106,39,154,37,"attack"],[106,45,154,43],[107,16,155,14,"defense"],[107,23,155,21],[107,25,155,23,"effectiveStats"],[107,39,155,37],[107,40,155,38,"defense"],[107,47,155,45],[108,16,156,14,"health"],[108,22,156,20],[108,24,156,22,"effectiveStats"],[108,38,156,36],[108,39,156,37,"health"],[108,45,156,43],[109,16,156,45],[110,16,157,14,"maxHealth"],[110,25,157,23],[110,27,157,25,"effectiveStats"],[110,41,157,39],[110,42,157,40,"health"],[110,48,157,46],[111,16,158,14,"critChance"],[111,26,158,24],[111,28,158,26,"effectiveStats"],[111,42,158,40],[111,43,158,41,"critChance"],[111,53,158,51],[111,57,158,55],[111,58,158,56],[112,16,159,14,"critDamage"],[112,26,159,24],[112,28,159,26,"effectiveStats"],[112,42,159,40],[112,43,159,41,"critDamage"],[112,53,159,51],[112,57,159,55],[112,60,159,58],[113,16,160,14,"cooldownReduction"],[113,33,160,31],[113,35,160,33,"effectiveStats"],[113,49,160,47],[113,50,160,48,"cooldownReduction"],[113,67,160,65],[113,71,160,69],[114,14,161,12],[115,12,162,10],[115,13,162,11],[116,10,163,8],[117,10,164,8],[117,17,164,15,"prev"],[117,21,164,19],[118,8,165,6],[118,9,165,7],[118,10,165,8],[119,6,166,4],[120,4,167,2],[120,5,167,3],[120,7,167,5],[120,8,167,6,"game"],[120,12,167,10],[120,13,167,11,"gameState"],[120,22,167,20],[120,23,167,21,"ninja"],[120,28,167,26],[120,29,167,27],[120,30,167,28],[121,4,169,2],[121,8,169,2,"_useState3"],[121,18,169,2],[121,21,169,40],[121,25,169,40,"useState"],[121,31,169,48],[121,32,169,48,"useState"],[121,40,169,48],[121,42,169,69],[121,44,169,71],[121,45,169,72],[122,6,169,72,"_useState4"],[122,16,169,72],[122,23,169,72,"_slicedToArray"],[122,37,169,72],[122,38,169,72,"default"],[122,45,169,72],[122,47,169,72,"_useState3"],[122,57,169,72],[123,6,169,9,"projectiles"],[123,17,169,20],[123,20,169,20,"_useState4"],[123,30,169,20],[124,6,169,22,"setProjectiles"],[124,20,169,36],[124,23,169,36,"_useState4"],[124,33,169,36],[125,4,170,2],[125,8,170,2,"_useState5"],[125,18,170,2],[125,21,170,52],[125,25,170,52,"useState"],[125,31,170,60],[125,32,170,60,"useState"],[125,40,170,60],[125,42,170,69],[125,43,170,70],[125,44,170,71],[126,6,170,71,"_useState6"],[126,16,170,71],[126,23,170,71,"_slicedToArray"],[126,37,170,71],[126,38,170,71,"default"],[126,45,170,71],[126,47,170,71,"_useState5"],[126,57,170,71],[127,6,170,9,"lastExplosionTime"],[127,23,170,26],[127,26,170,26,"_useState6"],[127,36,170,26],[128,6,170,28,"setLastExplosionTime"],[128,26,170,48],[128,29,170,48,"_useState6"],[128,39,170,48],[129,4,171,2],[130,4,172,2],[132,4,174,2],[133,4,175,2],[133,8,175,8,"handleEnemyKill"],[133,23,175,23],[133,26,175,26],[133,30,175,26,"useCallback"],[133,36,175,37],[133,37,175,37,"useCallback"],[133,48,175,37],[133,50,175,39,"enemy"],[133,55,175,57],[133,59,175,62],[134,6,176,4],[135,6,177,4],[135,10,177,10,"xpReward"],[135,18,177,18],[135,21,177,21],[135,22,177,22,"enemy"],[135,27,177,27],[135,28,177,28,"zoneXP"],[135,34,177,34],[135,38,177,38],[135,39,177,39],[135,44,177,44,"game"],[135,48,177,48],[135,49,177,49,"gameState"],[135,58,177,58],[135,59,177,59,"subscriptionBenefits"],[135,79,177,79],[135,81,177,81,"xp_multiplier"],[135,94,177,94],[135,98,177,98],[135,101,177,101],[135,102,177,102],[136,6,178,4],[136,10,178,10,"goldReward"],[136,20,178,20],[136,23,178,23],[136,25,178,25],[136,29,178,29,"game"],[136,33,178,33],[136,34,178,34,"gameState"],[136,43,178,43],[136,44,178,44,"subscriptionBenefits"],[136,64,178,64],[136,66,178,66,"drop_multiplier"],[136,81,178,81],[136,85,178,85],[136,88,178,88],[136,89,178,89],[137,6,180,4,"console"],[137,13,180,11],[137,14,180,12,"log"],[137,17,180,15],[137,18,180,16],[137,46,180,44,"xpReward"],[137,54,180,52],[137,65,180,63,"goldReward"],[137,75,180,73],[137,88,180,86,"enemy"],[137,93,180,91],[137,94,180,92,"name"],[137,98,180,96],[137,100,180,98],[137,101,180,99],[139,6,182,4],[140,6,183,4,"game"],[140,10,183,8],[140,11,183,9,"updateNinja"],[140,22,183,20],[140,23,183,21,"prev"],[140,27,183,25],[140,32,183,30],[141,8,184,6,"experience"],[141,18,184,16],[141,20,184,18,"prev"],[141,24,184,22],[141,25,184,23,"experience"],[141,35,184,33],[141,38,184,36,"xpReward"],[141,46,184,44],[142,8,185,6,"gold"],[142,12,185,10],[142,14,185,12,"prev"],[142,18,185,16],[142,19,185,17,"gold"],[142,23,185,21],[142,26,185,24,"goldReward"],[143,6,186,4],[143,7,186,5],[143,8,186,6],[143,9,186,7],[145,6,188,4],[146,6,189,4,"setCombatState"],[146,20,189,18],[146,21,189,19,"prevState"],[146,30,189,28],[146,35,189,33],[147,8,190,6],[147,11,190,9,"prevState"],[147,20,190,18],[148,8,191,6,"enemies"],[148,15,191,13],[148,17,191,15,"prevState"],[148,26,191,24],[148,27,191,25,"enemies"],[148,34,191,32],[148,35,191,33,"map"],[148,38,191,36],[148,39,191,37,"e"],[148,40,191,38],[148,44,192,8,"e"],[148,45,192,9],[148,46,192,10,"id"],[148,48,192,12],[148,53,192,17,"enemy"],[148,58,192,22],[148,59,192,23,"id"],[148,61,192,25],[148,64,192,28],[149,10,192,30],[149,13,192,33,"e"],[149,14,192,34],[150,10,192,36,"xpAwarded"],[150,19,192,45],[150,21,192,47],[151,8,192,52],[151,9,192,53],[151,12,192,56,"e"],[151,13,193,6],[152,6,194,4],[152,7,194,5],[152,8,194,6],[152,9,194,7],[154,6,196,4],[155,6,197,4],[155,10,197,8,"enemy"],[155,15,197,13],[155,16,197,14,"zoneTypeId"],[155,26,197,24],[155,28,197,26],[156,8,198,6,"recordEnemyKill"],[156,23,198,21],[156,24,198,22],[157,10,199,8,"id"],[157,12,199,10],[157,14,199,12,"enemy"],[157,19,199,17],[157,20,199,18,"id"],[157,22,199,20],[158,10,200,8,"typeId"],[158,16,200,14],[158,18,200,16,"enemy"],[158,23,200,21],[158,24,200,22,"zoneTypeId"],[158,34,200,32],[159,10,201,8,"name"],[159,14,201,12],[159,16,201,14,"enemy"],[159,21,201,19],[159,22,201,20,"name"],[159,26,201,24],[160,10,202,8,"icon"],[160,14,202,12],[160,16,202,14],[160,20,202,18],[161,10,203,8,"hp"],[161,12,203,10],[161,14,203,12],[161,15,203,13],[162,10,204,8,"maxHP"],[162,15,204,13],[162,17,204,15,"enemy"],[162,22,204,20],[162,23,204,21,"maxHealth"],[162,32,204,30],[163,10,205,8,"attack"],[163,16,205,14],[163,18,205,16,"enemy"],[163,23,205,21],[163,24,205,22,"stats"],[163,29,205,27],[163,30,205,28,"attack"],[163,36,205,34],[164,10,206,8,"xp"],[164,12,206,10],[164,14,206,12,"enemy"],[164,19,206,17],[164,20,206,18,"zoneXP"],[164,26,206,24],[164,30,206,28],[164,31,206,29],[165,10,207,8,"position"],[165,18,207,16],[165,20,207,18,"enemy"],[165,25,207,23],[165,26,207,24,"position"],[166,8,208,6],[166,9,208,7],[166,10,208,8],[167,6,209,4],[168,4,210,2],[168,5,210,3],[168,7,210,5],[168,8,210,6,"game"],[168,12,210,10],[168,13,210,11,"updateNinja"],[168,24,210,22],[168,26,210,24,"game"],[168,30,210,28],[168,31,210,29,"gameState"],[168,40,210,38],[168,41,210,39,"subscriptionBenefits"],[168,61,210,59],[168,63,210,61,"recordEnemyKill"],[168,78,210,76],[168,79,210,77],[168,80,210,78],[170,4,212,2],[171,4,213,2],[172,4,214,2],[172,8,214,8,"handleCombatTick"],[172,24,214,24],[172,27,214,27,"React"],[172,32,214,32],[172,33,214,32,"default"],[172,40,214,32],[172,41,214,33,"useCallback"],[172,52,214,44],[172,53,214,45],[172,59,214,51],[173,6,214,51],[173,10,214,51,"_s2"],[173,13,214,51],[173,16,214,51,"$RefreshSig$"],[173,28,214,51],[174,6,215,4,"console"],[174,13,215,11],[174,14,215,12,"log"],[174,17,215,15],[174,18,215,16],[174,87,215,85],[174,88,215,86],[175,6,216,4,"console"],[175,13,216,11],[175,14,216,12,"log"],[175,17,216,15],[175,18,216,16],[175,65,216,63,"isManualControlActive"],[175,86,216,84],[175,99,216,97,"game"],[175,103,216,101],[175,104,216,102,"gameState"],[175,113,216,111],[175,114,216,112,"isAlive"],[175,121,216,119],[175,123,216,121],[175,124,216,122],[176,6,218,4],[176,10,218,8,"enemiesToKill"],[176,23,218,36],[176,26,218,39],[176,28,218,41],[176,29,218,42],[176,30,218,43],[178,6,220,4,"_s2"],[178,9,220,4],[178,10,220,4,"setCombatState"],[178,24,220,18],[178,25,220,18,"_s2"],[178,28,220,18],[178,29,220,19,"prev"],[178,33,220,23],[178,37,220,27],[179,8,220,27,"_s2"],[179,11,220,27],[180,8,221,6],[180,12,221,12,"newTick"],[180,19,221,19],[180,22,221,22,"combatEngine"],[180,41,221,34],[180,42,221,34,"combatEngine"],[180,54,221,34],[180,55,221,35,"getCurrentTick"],[180,69,221,49],[180,70,221,50],[180,71,221,51],[181,8,222,6],[181,12,222,12,"newState"],[181,20,222,20],[181,23,222,23],[182,10,222,25],[182,13,222,28,"prev"],[182,17,222,32],[183,10,222,34,"currentTick"],[183,21,222,45],[183,23,222,47,"newTick"],[184,8,222,55],[184,9,222,56],[185,8,224,6],[185,12,224,10],[185,13,224,11,"newState"],[185,21,224,19],[185,22,224,20,"isInCombat"],[185,32,224,30],[185,34,224,32],[185,41,224,39,"newState"],[185,49,224,47],[187,8,226,6],[188,8,227,6,"newState"],[188,16,227,14],[188,17,227,15,"abilityManager"],[188,31,227,29],[188,32,227,30,"updateCooldowns"],[188,47,227,45],[188,48,227,46,"newTick"],[188,55,227,53],[188,56,227,54],[190,8,229,6],[191,8,230,6],[191,12,230,12,"effectResults"],[191,25,230,25],[191,28,230,28,"newState"],[191,36,230,36],[191,37,230,37,"statusEffects"],[191,50,230,50],[191,51,230,51,"processTick"],[191,62,230,62],[191,63,230,63,"newTick"],[191,70,230,70],[191,71,230,71],[193,8,232,6],[194,8,233,6,"effectResults"],[194,21,233,19],[194,22,233,20,"forEach"],[194,29,233,27],[194,30,233,28],[194,31,233,29,"results"],[194,38,233,36],[194,40,233,38,"entityId"],[194,48,233,46],[194,53,233,51],[195,10,234,8],[195,14,234,14,"enemyIndex"],[195,24,234,24],[195,27,234,27,"newState"],[195,35,234,35],[195,36,234,36,"enemies"],[195,43,234,43],[195,44,234,44,"findIndex"],[195,53,234,53],[195,54,234,54,"e"],[195,55,234,55],[195,59,234,59,"e"],[195,60,234,60],[195,61,234,61,"id"],[195,63,234,63],[195,68,234,68,"entityId"],[195,76,234,76],[195,77,234,77],[196,10,235,8],[196,14,235,12,"enemyIndex"],[196,24,235,22],[196,28,235,26],[196,29,235,27],[196,31,235,29],[197,12,236,10,"results"],[197,19,236,17],[197,20,236,18,"forEach"],[197,27,236,25],[197,28,236,26,"result"],[197,34,236,32],[197,38,236,36],[198,14,237,12,"newState"],[198,22,237,20],[198,23,237,21,"enemies"],[198,30,237,28],[198,31,237,29,"enemyIndex"],[198,41,237,39],[198,42,237,40],[198,43,237,41,"health"],[198,49,237,47],[198,53,237,51,"result"],[198,59,237,57],[198,60,237,58,"damage"],[198,66,237,64],[199,14,238,12,"newState"],[199,22,238,20],[199,23,238,21,"enemies"],[199,30,238,28],[199,31,238,29,"enemyIndex"],[199,41,238,39],[199,42,238,40],[199,43,238,41,"lastDamaged"],[199,54,238,52],[199,57,238,55,"newTick"],[199,64,238,62],[200,12,239,10],[200,13,239,11],[200,14,239,12],[201,10,240,8],[202,8,241,6],[202,9,241,7],[202,10,241,8],[204,8,243,6],[205,8,244,6],[206,8,245,6],[206,12,245,10,"newState"],[206,20,245,18],[206,21,245,19,"playerStats"],[206,32,245,30],[206,36,245,34,"game"],[206,40,245,38],[206,41,245,39,"gameState"],[206,50,245,48],[206,51,245,49,"ninja"],[206,56,245,54],[206,58,245,56],[207,10,246,8],[207,14,246,14,"effectiveStats"],[207,28,246,28],[207,31,246,31,"game"],[207,35,246,35],[207,36,246,36,"getEffectiveStats"],[207,53,246,53],[207,54,246,54],[207,55,246,55],[209,10,248,8],[210,10,249,8],[210,14,249,12,"newState"],[210,22,249,20],[210,23,249,21,"playerStats"],[210,34,249,32],[210,35,249,33,"attack"],[210,41,249,39],[210,46,249,44,"effectiveStats"],[210,60,249,58],[210,61,249,59,"attack"],[210,67,249,65],[210,71,250,12,"newState"],[210,79,250,20],[210,80,250,21,"playerStats"],[210,91,250,32],[210,92,250,33,"defense"],[210,99,250,40],[210,104,250,45,"effectiveStats"],[210,118,250,59],[210,119,250,60,"defense"],[210,126,250,67],[210,130,251,12,"newState"],[210,138,251,20],[210,139,251,21,"playerStats"],[210,150,251,32],[210,151,251,33,"maxHealth"],[210,160,251,42],[210,165,251,47,"effectiveStats"],[210,179,251,61],[210,180,251,62,"maxHealth"],[210,189,251,71],[210,191,251,73],[211,12,253,10,"console"],[211,19,253,17],[211,20,253,18,"log"],[211,23,253,21],[211,24,253,22],[211,58,253,56,"newState"],[211,66,253,64],[211,67,253,65,"playerStats"],[211,78,253,76],[211,79,253,77,"attack"],[211,85,253,83],[211,91,253,89,"effectiveStats"],[211,105,253,103],[211,106,253,104,"attack"],[211,112,253,110],[211,125,253,123,"newState"],[211,133,253,131],[211,134,253,132,"playerStats"],[211,145,253,143],[211,146,253,144,"defense"],[211,153,253,151],[211,159,253,157,"effectiveStats"],[211,173,253,171],[211,174,253,172,"defense"],[211,181,253,179],[211,192,253,190,"newState"],[211,200,253,198],[211,201,253,199,"playerStats"],[211,212,253,210],[211,213,253,211,"maxHealth"],[211,222,253,220],[211,228,253,226,"effectiveStats"],[211,242,253,240],[211,243,253,241,"maxHealth"],[211,252,253,250],[211,254,253,252],[211,255,253,253],[213,12,255,10],[214,12,256,10],[214,16,256,14,"newHealth"],[214,25,256,23],[214,28,256,26,"newState"],[214,36,256,34],[214,37,256,35,"playerStats"],[214,48,256,46],[214,49,256,47,"health"],[214,55,256,53],[215,12,257,10],[215,16,257,14,"newState"],[215,24,257,22],[215,25,257,23,"playerStats"],[215,36,257,34],[215,37,257,35,"maxHealth"],[215,46,257,44],[215,51,257,49,"effectiveStats"],[215,65,257,63],[215,66,257,64,"maxHealth"],[215,75,257,73],[215,77,257,75],[216,14,258,12],[217,14,259,12],[217,18,259,16,"effectiveStats"],[217,32,259,30],[217,33,259,31,"maxHealth"],[217,42,259,40],[217,45,259,43,"newState"],[217,53,259,51],[217,54,259,52,"playerStats"],[217,65,259,63],[217,66,259,64,"maxHealth"],[217,75,259,73],[217,78,259,76],[217,81,259,79],[217,83,259,81],[218,16,260,14],[219,16,261,14],[219,20,261,20,"healthRatio"],[219,31,261,31],[219,34,261,34,"newState"],[219,42,261,42],[219,43,261,43,"playerStats"],[219,54,261,54],[219,55,261,55,"maxHealth"],[219,64,261,64],[219,67,261,67],[219,68,261,68],[219,71,262,16,"newState"],[219,79,262,24],[219,80,262,25,"playerStats"],[219,91,262,36],[219,92,262,37,"health"],[219,98,262,43],[219,101,262,46,"newState"],[219,109,262,54],[219,110,262,55,"playerStats"],[219,121,262,66],[219,122,262,67,"maxHealth"],[219,131,262,76],[219,134,262,79],[219,135,262,80],[220,16,263,14,"newHealth"],[220,25,263,23],[220,28,263,26,"Math"],[220,32,263,30],[220,33,263,31,"floor"],[220,38,263,36],[220,39,263,37,"effectiveStats"],[220,53,263,51],[220,54,263,52,"maxHealth"],[220,63,263,61],[220,66,263,64,"healthRatio"],[220,77,263,75],[220,78,263,76],[221,14,264,12],[221,15,264,13],[221,21,264,19],[221,25,264,23,"newState"],[221,33,264,31],[221,34,264,32,"playerStats"],[221,45,264,43],[221,46,264,44,"health"],[221,52,264,50],[221,55,264,53,"effectiveStats"],[221,69,264,67],[221,70,264,68,"maxHealth"],[221,79,264,77],[221,81,264,79],[222,16,265,14],[223,16,266,14,"newHealth"],[223,25,266,23],[223,28,266,26,"effectiveStats"],[223,42,266,40],[223,43,266,41,"maxHealth"],[223,52,266,50],[224,14,267,12],[225,14,268,12],[226,12,269,10],[227,12,271,10,"newState"],[227,20,271,18],[227,21,271,19,"playerStats"],[227,32,271,30],[227,35,271,33],[228,14,272,12],[228,17,272,15,"newState"],[228,25,272,23],[228,26,272,24,"playerStats"],[228,37,272,35],[229,14,273,12,"attack"],[229,20,273,18],[229,22,273,20,"effectiveStats"],[229,36,273,34],[229,37,273,35,"attack"],[229,43,273,41],[230,14,274,12,"defense"],[230,21,274,19],[230,23,274,21,"effectiveStats"],[230,37,274,35],[230,38,274,36,"defense"],[230,45,274,43],[231,14,275,12,"maxHealth"],[231,23,275,21],[231,25,275,23,"effectiveStats"],[231,39,275,37],[231,40,275,38,"maxHealth"],[231,49,275,47],[232,14,275,49],[233,14,276,12,"health"],[233,20,276,18],[233,22,276,20,"newHealth"],[233,31,276,29],[234,14,276,31],[235,14,277,12,"critChance"],[235,24,277,22],[235,26,277,24,"effectiveStats"],[235,40,277,38],[235,41,277,39,"critChance"],[235,51,277,49],[235,55,277,53,"newState"],[235,63,277,61],[235,64,277,62,"playerStats"],[235,75,277,73],[235,76,277,74,"critChance"],[235,86,277,84],[236,14,278,12,"critDamage"],[236,24,278,22],[236,26,278,24,"effectiveStats"],[236,40,278,38],[236,41,278,39,"critDamage"],[236,51,278,49],[236,55,278,53,"newState"],[236,63,278,61],[236,64,278,62,"playerStats"],[236,75,278,73],[236,76,278,74,"critDamage"],[236,86,278,84],[237,14,279,12,"cooldownReduction"],[237,31,279,29],[237,33,279,31,"effectiveStats"],[237,47,279,45],[237,48,279,46,"cooldownReduction"],[237,65,279,63],[237,69,279,67,"newState"],[237,77,279,75],[237,78,279,76,"playerStats"],[237,89,279,87],[237,90,279,88,"cooldownReduction"],[238,12,280,10],[238,13,280,11],[239,10,281,8],[241,10,283,8],[242,10,284,8],[242,14,284,12,"game"],[242,18,284,16],[242,19,284,17,"gameState"],[242,28,284,26],[242,29,284,27,"isAlive"],[242,36,284,34],[242,40,285,12,"game"],[242,44,285,16],[242,45,285,17,"gameState"],[242,54,285,26],[242,55,285,27,"ninja"],[242,60,285,32],[242,61,285,33,"health"],[242,67,285,39],[242,72,285,44,"effectiveStats"],[242,86,285,58],[242,87,285,59,"maxHealth"],[242,96,285,68],[242,100,286,12,"newState"],[242,108,286,20],[242,109,286,21,"playerStats"],[242,120,286,32],[242,121,286,33,"health"],[242,127,286,39],[242,130,286,42,"effectiveStats"],[242,144,286,56],[242,145,286,57,"maxHealth"],[242,154,286,66],[242,157,286,69],[242,160,286,72],[242,162,286,74],[243,12,287,10,"console"],[243,19,287,17],[243,20,287,18,"log"],[243,23,287,21],[243,24,287,22],[243,58,287,56,"newState"],[243,66,287,64],[243,67,287,65,"playerStats"],[243,78,287,76],[243,79,287,77,"health"],[243,85,287,83],[243,91,287,89,"game"],[243,95,287,93],[243,96,287,94,"gameState"],[243,105,287,103],[243,106,287,104,"ninja"],[243,111,287,109],[243,112,287,110,"health"],[243,118,287,116],[243,139,287,137],[243,140,287,138],[244,12,288,10,"newState"],[244,20,288,18],[244,21,288,19,"playerStats"],[244,32,288,30],[244,33,288,31,"health"],[244,39,288,37],[244,42,288,40,"game"],[244,46,288,44],[244,47,288,45,"gameState"],[244,56,288,54],[244,57,288,55,"ninja"],[244,62,288,60],[244,63,288,61,"health"],[244,69,288,67],[245,10,289,8],[246,8,290,6],[248,8,292,6],[249,8,293,6,"newState"],[249,16,293,14],[249,17,293,15,"enemies"],[249,24,293,22],[249,25,293,23,"forEach"],[249,32,293,30],[249,33,293,31,"enemy"],[249,38,293,36],[249,42,293,40],[250,10,294,8],[250,14,294,12],[250,15,294,13,"enemy"],[250,20,294,18],[250,21,294,19,"isBoss"],[250,27,294,25],[250,29,294,27],[251,12,294,29],[252,12,295,10],[253,12,296,10],[253,16,296,16,"MOVEMENT_SPEED"],[253,30,296,30],[253,33,296,33],[253,37,296,37],[253,38,296,38],[253,39,296,39],[254,12,297,10],[254,16,297,16,"SCREEN_WIDTH"],[254,28,297,28],[254,31,297,31],[254,34,297,34],[255,12,298,10],[255,16,298,16,"GAME_AREA_HEIGHT"],[255,32,298,32],[255,35,298,35],[255,38,298,38],[255,39,298,39],[255,40,298,40],[256,12,299,10],[256,16,299,16,"ENEMY_SIZE"],[256,26,299,26],[256,29,299,29],[256,31,299,31],[258,12,301,10],[259,12,302,10],[259,16,302,16,"playerX"],[259,23,302,23],[259,26,302,26,"currentNinjaPosition"],[259,46,302,46],[259,47,302,47,"x"],[259,48,302,48],[260,12,303,10],[260,16,303,16,"playerY"],[260,23,303,23],[260,26,303,26,"currentNinjaPosition"],[260,46,303,46],[260,47,303,47,"y"],[260,48,303,48],[262,12,305,10],[263,12,306,10],[263,16,306,16,"deltaX"],[263,22,306,22],[263,25,306,25,"playerX"],[263,32,306,32],[263,35,306,35,"enemy"],[263,40,306,40],[263,41,306,41,"position"],[263,49,306,49],[263,50,306,50,"x"],[263,51,306,51],[264,12,307,10],[264,16,307,16,"deltaY"],[264,22,307,22],[264,25,307,25,"playerY"],[264,32,307,32],[264,35,307,35,"enemy"],[264,40,307,40],[264,41,307,41,"position"],[264,49,307,49],[264,50,307,50,"y"],[264,51,307,51],[265,12,308,10],[265,16,308,16,"distance"],[265,24,308,24],[265,27,308,27,"Math"],[265,31,308,31],[265,32,308,32,"sqrt"],[265,36,308,36],[265,37,308,37,"deltaX"],[265,43,308,43],[265,46,308,46,"deltaX"],[265,52,308,52],[265,55,308,55,"deltaY"],[265,61,308,61],[265,64,308,64,"deltaY"],[265,70,308,70],[265,71,308,71],[267,12,310,10],[268,12,311,10],[268,16,311,16,"ATTACK_RANGE"],[268,28,311,28],[268,31,311,31],[268,33,311,33],[268,34,311,34],[268,35,311,35],[269,12,312,10],[269,16,312,16,"ATTACK_COOLDOWN"],[269,31,312,31],[269,34,312,34],[269,36,312,36],[269,37,312,37],[269,38,312,38],[271,12,314,10],[271,16,314,14,"distance"],[271,24,314,22],[271,28,314,26,"ATTACK_RANGE"],[271,40,314,38],[271,42,314,40],[272,14,315,12],[273,14,316,12],[273,18,316,16],[273,19,316,17,"enemy"],[273,24,316,22],[273,25,316,23,"lastAttackTick"],[273,39,316,37],[273,41,316,39,"enemy"],[273,46,316,44],[273,47,316,45,"lastAttackTick"],[273,61,316,59],[273,64,316,62],[273,65,316,63],[274,14,318,12],[274,18,318,16,"newState"],[274,26,318,24],[274,27,318,25,"currentTick"],[274,38,318,36],[274,41,318,39,"enemy"],[274,46,318,44],[274,47,318,45,"lastAttackTick"],[274,61,318,59],[274,65,318,63,"ATTACK_COOLDOWN"],[274,80,318,78],[274,82,318,80],[275,16,319,14],[276,16,320,14],[276,20,320,18],[276,21,320,19,"game"],[276,25,320,23],[276,26,320,24,"gameState"],[276,35,320,33],[276,36,320,34,"isAlive"],[276,43,320,41],[276,45,320,43],[277,18,321,16,"console"],[277,25,321,23],[277,26,321,24,"log"],[277,29,321,27],[277,30,321,28],[277,49,321,47,"enemy"],[277,54,321,52],[277,55,321,53,"name"],[277,59,321,57],[277,93,321,91],[277,94,321,92],[278,18,322,16],[279,18,323,16,"enemy"],[279,23,323,21],[279,24,323,22,"lastAttackTick"],[279,38,323,36],[279,41,323,39,"newState"],[279,49,323,47],[279,50,323,48,"currentTick"],[279,61,323,59],[280,16,324,14],[280,17,324,15],[280,23,324,21],[281,18,325,16],[282,18,326,16],[282,22,326,22,"isPlayerInvincible"],[282,40,326,40],[282,43,326,43,"game"],[282,47,326,47],[282,48,326,48,"gameState"],[282,57,326,57],[282,58,326,58,"isInvincible"],[282,70,326,70],[282,74,327,41,"game"],[282,78,327,45],[282,79,327,46,"gameState"],[282,88,327,55],[282,89,327,56,"invincibilityEndTime"],[282,109,327,76],[282,113,328,41,"Date"],[282,117,328,45],[282,118,328,46,"now"],[282,121,328,49],[282,122,328,50],[282,123,328,51],[282,126,328,54,"game"],[282,130,328,58],[282,131,328,59,"gameState"],[282,140,328,68],[282,141,328,69,"invincibilityEndTime"],[282,161,328,89],[283,18,330,16],[283,22,330,20,"isPlayerInvincible"],[283,40,330,38],[283,42,330,40],[284,20,331,18,"console"],[284,27,331,25],[284,28,331,26,"log"],[284,31,331,29],[284,32,331,30],[284,51,331,49,"enemy"],[284,56,331,54],[284,57,331,55,"name"],[284,61,331,59],[284,101,331,99],[284,102,331,100],[285,20,332,18],[286,20,333,18,"enemy"],[286,25,333,23],[286,26,333,24,"lastAttackTick"],[286,40,333,38],[286,43,333,41,"newState"],[286,51,333,49],[286,52,333,50,"currentTick"],[286,63,333,61],[287,18,334,16],[287,19,334,17],[287,25,334,23],[288,20,335,16],[289,20,336,16],[289,24,336,22,"baseAttack"],[289,34,336,32],[289,37,336,35,"enemy"],[289,42,336,40],[289,43,336,41,"stats"],[289,48,336,46],[289,49,336,47,"attack"],[289,55,336,53],[289,58,336,56],[289,61,336,59],[289,62,336,60],[289,63,336,61],[290,20,337,16],[290,24,337,22,"attackDamage"],[290,36,337,34],[290,39,337,37,"Math"],[290,43,337,41],[290,44,337,42,"floor"],[290,49,337,47],[290,50,337,48,"baseAttack"],[290,60,337,58],[290,64,337,62],[290,67,337,65],[290,70,337,68,"Math"],[290,74,337,72],[290,75,337,73,"random"],[290,81,337,79],[290,82,337,80],[290,83,337,81],[290,86,337,84],[290,89,337,87],[290,90,337,88],[290,91,337,89],[290,92,337,90],[290,93,337,91],[291,20,338,16],[291,24,338,22,"playerDefense"],[291,37,338,35],[291,40,338,38,"newState"],[291,48,338,46],[291,49,338,47,"playerStats"],[291,60,338,58],[291,61,338,59,"defense"],[291,68,338,66],[292,20,339,16],[292,24,339,22,"finalDamage"],[292,35,339,33],[292,38,339,36,"Math"],[292,42,339,40],[292,43,339,41,"max"],[292,46,339,44],[292,47,339,45],[292,48,339,46],[292,50,339,48,"attackDamage"],[292,62,339,60],[292,65,339,63,"Math"],[292,69,339,67],[292,70,339,68,"floor"],[292,75,339,73],[292,76,339,74,"playerDefense"],[292,89,339,87],[292,92,339,90],[292,95,339,93],[292,96,339,94],[292,97,339,95],[292,98,339,96],[292,99,339,97],[294,20,341,16,"console"],[294,27,341,23],[294,28,341,24,"log"],[294,31,341,27],[294,32,341,28],[294,53,341,49,"enemy"],[294,58,341,54],[294,59,341,55,"name"],[294,63,341,59],[294,86,341,82,"finalDamage"],[294,97,341,93],[294,109,341,105,"attackDamage"],[294,121,341,117],[294,132,341,128,"Math"],[294,136,341,132],[294,137,341,133,"floor"],[294,142,341,138],[294,143,341,139,"playerDefense"],[294,156,341,152],[294,159,341,155],[294,162,341,158],[294,163,341,159],[294,184,341,180],[294,185,341,181],[296,20,343,16],[297,20,344,16],[297,24,344,22,"newPlayerHealth"],[297,39,344,37],[297,42,344,40,"Math"],[297,46,344,44],[297,47,344,45,"max"],[297,50,344,48],[297,51,344,49],[297,52,344,50],[297,54,344,52,"newState"],[297,62,344,60],[297,63,344,61,"playerStats"],[297,74,344,72],[297,75,344,73,"health"],[297,81,344,79],[297,84,344,82,"finalDamage"],[297,95,344,93],[297,96,344,94],[298,20,345,16,"newState"],[298,28,345,24],[298,29,345,25,"playerStats"],[298,40,345,36],[298,41,345,37,"health"],[298,47,345,43],[298,50,345,46,"newPlayerHealth"],[298,65,345,61],[299,20,347,16,"console"],[299,27,347,23],[299,28,347,24,"log"],[299,31,347,27],[299,32,347,28],[299,53,347,49,"newState"],[299,61,347,57],[299,62,347,58,"playerStats"],[299,73,347,69],[299,74,347,70,"health"],[299,80,347,76],[299,84,347,80,"newState"],[299,92,347,88],[299,93,347,89,"playerStats"],[299,104,347,100],[299,105,347,101,"maxHealth"],[299,114,347,110],[299,124,347,120,"finalDamage"],[299,135,347,131],[299,145,347,141],[299,146,347,142],[301,20,349,16],[302,20,350,16,"enemy"],[302,25,350,21],[302,26,350,22,"lastAttackTick"],[302,40,350,36],[302,43,350,39,"newState"],[302,51,350,47],[302,52,350,48,"currentTick"],[302,63,350,59],[304,20,352,16],[305,20,353,16],[305,24,353,20,"newPlayerHealth"],[305,39,353,35],[305,43,353,39],[305,44,353,40],[305,46,353,42],[306,22,354,18,"console"],[306,29,354,25],[306,30,354,26,"log"],[306,33,354,29],[306,34,354,30],[306,84,354,80],[306,85,354,81],[307,22,355,18],[308,22,356,18,"setTimeout"],[308,32,356,28],[308,33,356,29],[308,39,356,35],[309,24,357,20],[310,24,358,20,"game"],[310,28,358,24],[310,29,358,25,"updateGameState"],[310,44,358,40],[310,45,358,41],[311,26,358,43,"isAlive"],[311,33,358,50],[311,35,358,52],[312,24,358,58],[312,25,358,59],[312,26,358,60],[313,22,359,18],[313,23,359,19],[313,25,359,21],[313,28,359,24],[313,29,359,25],[314,20,360,16],[315,18,361,16],[316,16,362,14],[317,14,363,12],[318,12,364,10],[318,13,364,11],[318,19,364,17],[319,14,365,12],[320,14,366,12],[321,14,367,12],[321,18,367,16,"distance"],[321,26,367,24],[321,29,367,27],[321,31,367,29],[321,33,367,31],[322,16,368,14],[323,16,369,14],[323,20,369,20,"normalizedX"],[323,31,369,31],[323,34,369,34,"deltaX"],[323,40,369,40],[323,43,369,43,"distance"],[323,51,369,51],[324,16,370,14],[324,20,370,20,"normalizedY"],[324,31,370,31],[324,34,370,34,"deltaY"],[324,40,370,40],[324,43,370,43,"distance"],[324,51,370,51],[326,16,372,14],[327,16,373,14],[327,20,373,20,"randomFactor"],[327,32,373,32],[327,35,373,35],[327,38,373,38],[327,39,373,39],[327,40,373,40],[328,16,374,14],[328,20,374,20,"finalX"],[328,26,374,26],[328,29,374,29,"normalizedX"],[328,40,374,40],[328,43,374,43],[328,44,374,44,"Math"],[328,48,374,48],[328,49,374,49,"random"],[328,55,374,55],[328,56,374,56],[328,57,374,57],[328,60,374,60],[328,63,374,63],[328,67,374,67,"randomFactor"],[328,79,374,79],[329,16,375,14],[329,20,375,20,"finalY"],[329,26,375,26],[329,29,375,29,"normalizedY"],[329,40,375,40],[329,43,375,43],[329,44,375,44,"Math"],[329,48,375,48],[329,49,375,49,"random"],[329,55,375,55],[329,56,375,56],[329,57,375,57],[329,60,375,60],[329,63,375,63],[329,67,375,67,"randomFactor"],[329,79,375,79],[331,16,377,14],[332,16,378,14],[332,20,378,18,"newX"],[332,24,378,22],[332,27,378,25,"enemy"],[332,32,378,30],[332,33,378,31,"position"],[332,41,378,39],[332,42,378,40,"x"],[332,43,378,41],[332,46,378,45,"finalX"],[332,52,378,51],[332,55,378,54,"MOVEMENT_SPEED"],[332,69,378,69],[333,16,379,14],[333,20,379,18,"newY"],[333,24,379,22],[333,27,379,25,"enemy"],[333,32,379,30],[333,33,379,31,"position"],[333,41,379,39],[333,42,379,40,"y"],[333,43,379,41],[333,46,379,45,"finalY"],[333,52,379,51],[333,55,379,54,"MOVEMENT_SPEED"],[333,69,379,69],[335,16,381,14],[336,16,382,14,"newX"],[336,20,382,18],[336,23,382,21,"Math"],[336,27,382,25],[336,28,382,26,"max"],[336,31,382,29],[336,32,382,30],[336,33,382,31],[336,35,382,33,"Math"],[336,39,382,37],[336,40,382,38,"min"],[336,43,382,41],[336,44,382,42,"SCREEN_WIDTH"],[336,56,382,54],[336,59,382,57,"ENEMY_SIZE"],[336,69,382,67],[336,71,382,69,"newX"],[336,75,382,73],[336,76,382,74],[336,77,382,75],[337,16,383,14,"newY"],[337,20,383,18],[337,23,383,21,"Math"],[337,27,383,25],[337,28,383,26,"max"],[337,31,383,29],[337,32,383,30],[337,33,383,31],[337,35,383,33,"Math"],[337,39,383,37],[337,40,383,38,"min"],[337,43,383,41],[337,44,383,42,"GAME_AREA_HEIGHT"],[337,60,383,58],[337,63,383,61,"ENEMY_SIZE"],[337,73,383,71],[337,75,383,73,"newY"],[337,79,383,77],[337,80,383,78],[337,81,383,79],[339,16,385,14],[340,16,386,14,"enemy"],[340,21,386,19],[340,22,386,20,"position"],[340,30,386,28],[340,31,386,29,"x"],[340,32,386,30],[340,35,386,33,"newX"],[340,39,386,37],[341,16,387,14,"enemy"],[341,21,387,19],[341,22,387,20,"position"],[341,30,387,28],[341,31,387,29,"y"],[341,32,387,30],[341,35,387,33,"newY"],[341,39,387,37],[342,14,388,12],[343,14,389,12],[344,12,390,10],[345,10,391,8],[346,8,392,6],[346,9,392,7],[346,10,392,8],[348,8,394,6],[349,8,395,6],[349,12,395,10,"newState"],[349,20,395,18],[349,21,395,19,"shadowClone"],[349,32,395,30],[349,34,395,32],[350,10,396,8],[351,10,397,8,"newState"],[351,18,397,16],[351,19,397,17,"shadowClone"],[351,30,397,28],[351,31,397,29,"remainingTicks"],[351,45,397,43],[351,47,397,45],[353,10,399,8],[354,10,400,8],[354,14,400,14,"cloneOffset"],[354,25,400,25],[354,28,400,28],[354,30,400,30],[354,31,400,31],[354,32,400,32],[355,10,401,8,"newState"],[355,18,401,16],[355,19,401,17,"shadowClone"],[355,30,401,28],[355,31,401,29,"position"],[355,39,401,37],[355,40,401,38,"x"],[355,41,401,39],[355,44,401,42,"currentNinjaPosition"],[355,64,401,62],[355,65,401,63,"x"],[355,66,401,64],[355,69,401,67,"cloneOffset"],[355,80,401,78],[356,10,402,8,"newState"],[356,18,402,16],[356,19,402,17,"shadowClone"],[356,30,402,28],[356,31,402,29,"position"],[356,39,402,37],[356,40,402,38,"y"],[356,41,402,39],[356,44,402,42,"currentNinjaPosition"],[356,64,402,62],[356,65,402,63,"y"],[356,66,402,64],[356,69,402,67],[356,71,402,69],[358,10,404,8],[359,10,405,8],[359,14,405,12,"newState"],[359,22,405,20],[359,23,405,21,"shadowClone"],[359,34,405,32],[359,35,405,33,"remainingTicks"],[359,49,405,47],[359,53,405,51],[359,54,405,52],[359,56,405,54],[360,12,406,10,"console"],[360,19,406,17],[360,20,406,18,"log"],[360,23,406,21],[360,24,406,22],[360,75,406,73],[360,76,406,74],[361,12,407,10,"newState"],[361,20,407,18],[361,21,407,19,"shadowClone"],[361,32,407,30],[361,35,407,33,"undefined"],[361,44,407,42],[362,10,408,8],[362,11,408,9],[362,17,408,15],[363,12,409,10],[364,12,410,10],[365,12,411,10],[365,16,411,16,"CLONE_ATTACK_INTERVAL"],[365,37,411,37],[365,40,411,40],[365,42,411,42],[366,12,412,10],[366,16,412,14,"newState"],[366,24,412,22],[366,25,412,23,"currentTick"],[366,36,412,34],[366,39,412,37,"CLONE_ATTACK_INTERVAL"],[366,60,412,58],[366,65,412,63],[366,66,412,64],[366,70,412,68,"newState"],[366,78,412,76],[366,79,412,77,"enemies"],[366,86,412,84],[366,87,412,85,"length"],[366,93,412,91],[366,96,412,94],[366,97,412,95],[366,99,412,97],[367,14,413,12,"console"],[367,21,413,19],[367,22,413,20,"log"],[367,25,413,23],[367,26,413,24],[367,83,413,81],[367,84,413,82],[369,14,415,12],[370,14,416,12],[370,18,416,18,"target"],[370,24,416,24],[370,27,416,27,"findClosestEnemyInternal"],[370,51,416,51],[370,52,416,52,"newState"],[370,60,416,60],[370,61,416,61,"enemies"],[370,68,416,68],[370,69,416,69],[371,14,417,12],[371,18,417,16,"target"],[371,24,417,22],[371,26,417,24],[372,16,418,14],[373,16,419,14],[373,20,419,20,"cloneDamage"],[373,31,419,31],[373,34,419,34,"Math"],[373,38,419,38],[373,39,419,39,"floor"],[373,44,419,44],[373,45,419,45,"newState"],[373,53,419,53],[373,54,419,54,"playerStats"],[373,65,419,65],[373,66,419,66,"attack"],[373,72,419,72],[373,75,419,75],[373,78,419,78],[373,79,419,79],[375,16,421,14],[376,16,422,14,"createProjectile"],[376,32,422,30],[376,33,422,31,"target"],[376,39,422,37],[376,41,422,39,"cloneDamage"],[376,52,422,50],[376,54,422,52,"newState"],[376,62,422,60],[376,63,422,61,"shadowClone"],[376,74,422,72],[376,75,422,73,"position"],[376,83,422,81],[376,85,422,83],[377,18,423,16,"id"],[377,20,423,18],[377,22,423,20],[377,43,423,41],[378,18,424,16,"name"],[378,22,424,20],[378,24,424,22],[378,45,424,43],[379,18,425,16,"icon"],[379,22,425,20],[379,24,425,22],[380,16,426,14],[380,17,426,15],[380,18,426,16],[381,14,427,12],[382,12,428,10],[383,10,429,8],[384,8,430,6],[386,8,432,6],[387,8,433,6],[388,8,434,6,"console"],[388,15,434,13],[388,16,434,14,"log"],[388,19,434,17],[388,20,434,18],[388,63,434,61,"isManualControlActive"],[388,84,434,82],[388,97,434,95,"game"],[388,101,434,99],[388,102,434,100,"gameState"],[388,111,434,109],[388,112,434,110,"isAlive"],[388,119,434,117],[388,121,434,119],[388,122,434,120],[389,8,435,6],[389,12,435,10],[389,13,435,11,"isManualControlActive"],[389,34,435,32],[389,38,435,36,"game"],[389,42,435,40],[389,43,435,41,"gameState"],[389,52,435,50],[389,53,435,51,"isAlive"],[389,60,435,58],[389,62,435,60],[390,10,436,8],[390,15,436,13],[390,19,436,17,"i"],[390,20,436,18],[390,23,436,21],[390,24,436,22],[390,26,436,24,"i"],[390,27,436,25],[390,30,436,28],[390,31,436,29],[390,33,436,31,"i"],[390,34,436,32],[390,36,436,34],[390,38,436,36],[391,12,437,10],[391,16,437,14,"newState"],[391,24,437,22],[391,25,437,23,"abilityManager"],[391,39,437,37],[391,40,437,38,"isAbilityReady"],[391,54,437,52],[391,55,437,53,"i"],[391,56,437,54],[391,57,437,55],[391,61,437,59,"newState"],[391,69,437,67],[391,70,437,68,"enemies"],[391,77,437,75],[391,78,437,76,"length"],[391,84,437,82],[391,87,437,85],[391,88,437,86],[391,90,437,88],[392,14,438,12],[392,18,438,16,"newState"],[392,26,438,24],[392,27,438,25,"abilityManager"],[392,41,438,39],[392,42,438,40,"useAbility"],[392,52,438,50],[392,53,438,51,"i"],[392,54,438,52],[392,56,438,54,"newTick"],[392,63,438,61],[392,64,438,62],[392,66,438,64],[393,16,439,14,"console"],[393,23,439,21],[393,24,439,22,"log"],[393,27,439,25],[393,28,439,26],[393,73,439,71,"i"],[393,74,439,72],[393,76,439,74],[393,77,439,75],[394,16,440,14,"castAbility"],[394,27,440,25],[394,28,440,26,"newState"],[394,36,440,34],[394,38,440,36,"i"],[394,39,440,37],[394,40,440,38],[395,14,441,12],[396,12,442,10],[397,10,443,8],[398,8,444,6],[400,8,446,6],[401,8,447,6],[401,12,447,12,"dyingEnemies"],[401,24,447,24],[401,27,447,27,"newState"],[401,35,447,35],[401,36,447,36,"enemies"],[401,43,447,43],[401,44,447,44,"filter"],[401,50,447,50],[401,51,447,51,"enemy"],[401,56,447,56],[401,60,447,60,"enemy"],[401,65,447,65],[401,66,447,66,"isDying"],[401,73,447,73],[401,77,447,77,"enemy"],[401,82,447,82],[401,83,447,83,"health"],[401,89,447,89],[401,93,447,93],[401,94,447,94],[401,95,447,95],[402,8,448,6],[402,12,448,12,"deadEnemies"],[402,23,448,23],[402,26,448,26,"newState"],[402,34,448,34],[402,35,448,35,"enemies"],[402,42,448,42],[402,43,448,43,"filter"],[402,49,448,49],[402,50,448,50,"enemy"],[402,55,448,55],[402,59,448,59,"enemy"],[402,64,448,64],[402,65,448,65,"health"],[402,71,448,71],[402,75,448,75],[402,76,448,76],[402,80,448,80],[402,81,448,81,"enemy"],[402,86,448,86],[402,87,448,87,"isDying"],[402,94,448,94],[402,95,448,95],[404,8,450,6],[405,8,451,6,"enemiesToKill"],[405,21,451,19],[405,24,451,22],[405,25,451,23],[405,28,451,26,"deadEnemies"],[405,39,451,37],[405,41,451,39],[405,44,451,42,"dyingEnemies"],[405,56,451,54],[405,57,451,55],[405,58,451,56],[405,59,451,57],[407,8,453,6],[408,8,454,6],[408,12,454,12,"currentTime"],[408,23,454,23],[408,26,454,26,"Date"],[408,30,454,30],[408,31,454,31,"now"],[408,34,454,34],[408,35,454,35],[408,36,454,36],[409,8,455,6,"newState"],[409,16,455,14],[409,17,455,15,"enemies"],[409,24,455,22],[409,27,455,25,"newState"],[409,35,455,33],[409,36,455,34,"enemies"],[409,43,455,41],[409,44,455,42,"filter"],[409,50,455,48],[409,51,455,49,"enemy"],[409,56,455,54],[409,60,455,58],[410,10,456,8],[410,14,456,12,"enemy"],[410,19,456,17],[410,20,456,18,"isDying"],[410,27,456,25],[410,31,456,29,"enemy"],[410,36,456,34],[410,37,456,35,"deathStartTime"],[410,51,456,49],[410,53,456,51],[411,12,457,10],[411,16,457,16,"animationDuration"],[411,33,457,33],[411,36,457,36],[411,39,457,39],[411,40,457,40],[411,41,457,41],[412,12,458,10],[412,16,458,16,"isAnimationComplete"],[412,35,458,35],[412,38,458,38,"currentTime"],[412,49,458,49],[412,52,458,52,"enemy"],[412,57,458,57],[412,58,458,58,"deathStartTime"],[412,72,458,72],[412,76,458,76,"animationDuration"],[412,93,458,93],[413,12,459,10],[413,16,459,14,"isAnimationComplete"],[413,35,459,33],[413,37,459,35],[414,14,460,12,"console"],[414,21,460,19],[414,22,460,20,"log"],[414,25,460,23],[414,26,460,24],[414,58,460,56,"enemy"],[414,63,460,61],[414,64,460,62,"name"],[414,68,460,66],[414,86,460,84,"currentTime"],[414,97,460,95],[414,100,460,98,"enemy"],[414,105,460,103],[414,106,460,104,"deathStartTime"],[414,120,460,118],[414,129,460,127],[414,130,460,128],[415,14,461,12],[415,21,461,19],[415,26,461,24],[415,27,461,25],[415,28,461,26],[416,12,462,10],[417,10,463,8],[418,10,464,8],[418,17,464,15],[418,21,464,19],[418,22,464,20],[418,23,464,21],[419,8,465,6],[419,9,465,7],[419,10,465,8],[421,8,467,6],[422,8,468,6],[422,12,468,10,"deadEnemies"],[422,23,468,21],[422,24,468,22,"length"],[422,30,468,28],[422,33,468,31],[422,34,468,32],[422,36,468,34],[423,10,469,8,"console"],[423,17,469,15],[423,18,469,16,"log"],[423,21,469,19],[423,22,469,20],[423,49,469,47,"deadEnemies"],[423,60,469,58],[423,61,469,59,"length"],[423,67,469,65],[423,83,469,81],[423,85,469,83,"deadEnemies"],[423,96,469,94],[423,97,469,95,"map"],[423,100,469,98],[423,101,469,99,"e"],[423,102,469,100],[423,106,469,104],[423,109,469,107,"e"],[423,110,469,108],[423,111,469,109,"id"],[423,113,469,111],[423,117,469,115,"e"],[423,118,469,116],[423,119,469,117,"health"],[423,125,469,123],[423,130,469,128],[423,131,469,129],[423,132,469,130],[424,8,470,6],[426,8,472,6],[427,8,473,6],[427,12,473,12,"lowHealthEnemies"],[427,28,473,28],[427,31,473,31,"newState"],[427,39,473,39],[427,40,473,40,"enemies"],[427,47,473,47],[427,48,473,48,"filter"],[427,54,473,54],[427,55,473,55,"enemy"],[427,60,473,60],[427,64,473,64,"enemy"],[427,69,473,69],[427,70,473,70,"health"],[427,76,473,76],[427,80,473,80],[427,82,473,82],[427,86,473,86,"enemy"],[427,91,473,91],[427,92,473,92,"health"],[427,98,473,98],[427,101,473,101],[427,102,473,102],[427,103,473,103],[428,8,474,6],[428,12,474,10,"lowHealthEnemies"],[428,28,474,26],[428,29,474,27,"length"],[428,35,474,33],[428,38,474,36],[428,39,474,37],[428,41,474,39],[429,10,475,8,"console"],[429,17,475,15],[429,18,475,16,"log"],[429,21,475,19],[429,22,475,20],[429,61,475,59],[429,63,475,61,"lowHealthEnemies"],[429,79,475,77],[429,80,475,78,"map"],[429,83,475,81],[429,84,475,82,"e"],[429,85,475,83],[429,89,475,87],[429,92,475,90,"e"],[429,93,475,91],[429,94,475,92,"id"],[429,96,475,94],[429,100,475,98,"e"],[429,101,475,99],[429,102,475,100,"health"],[429,108,475,106],[429,112,475,110,"e"],[429,113,475,111],[429,114,475,112,"maxHealth"],[429,123,475,121],[429,128,475,126],[429,129,475,127],[429,130,475,128],[430,8,476,6],[432,8,478,6],[433,8,479,6],[433,12,479,12,"beforeCount"],[433,23,479,23],[433,26,479,26,"newState"],[433,34,479,34],[433,35,479,35,"enemies"],[433,42,479,42],[433,43,479,43,"length"],[433,49,479,49],[434,8,480,6,"newState"],[434,16,480,14],[434,17,480,15,"enemies"],[434,24,480,22],[434,27,480,25,"newState"],[434,35,480,33],[434,36,480,34,"enemies"],[434,43,480,41],[434,44,480,42,"filter"],[434,50,480,48],[434,51,480,49,"enemy"],[434,56,480,54],[434,60,480,58,"enemy"],[434,65,480,63],[434,66,480,64,"health"],[434,72,480,70],[434,75,480,73],[434,76,480,74],[434,77,480,75],[435,8,481,6],[435,12,481,12,"afterCount"],[435,22,481,22],[435,25,481,25,"newState"],[435,33,481,33],[435,34,481,34,"enemies"],[435,41,481,41],[435,42,481,42,"length"],[435,48,481,48],[436,8,483,6],[436,12,483,10,"beforeCount"],[436,23,483,21],[436,28,483,26,"afterCount"],[436,38,483,36],[436,40,483,38],[437,10,484,8,"console"],[437,17,484,15],[437,18,484,16,"log"],[437,21,484,19],[437,22,484,20],[437,52,484,50,"beforeCount"],[437,63,484,61],[437,66,484,64,"afterCount"],[437,76,484,74],[437,102,484,100],[437,103,484,101],[438,8,485,6],[440,8,487,6],[441,8,488,6],[442,8,489,6],[442,12,489,12,"MAX_ENEMIES"],[442,23,489,23],[442,26,489,26],[442,28,489,28],[442,29,489,29],[442,30,489,30],[443,8,490,6],[443,12,490,12,"MIN_SPAWN_DELAY"],[443,27,490,27],[443,30,490,30],[443,33,490,33],[443,34,490,34],[443,35,490,35],[444,8,491,6],[444,12,491,12,"now"],[444,15,491,15],[444,18,491,18,"Date"],[444,22,491,22],[444,23,491,23,"now"],[444,26,491,26],[444,27,491,27],[444,28,491,28],[445,8,492,6],[445,12,492,12,"hasBoss"],[445,19,492,19],[445,22,492,22,"newState"],[445,30,492,30],[445,31,492,31,"enemies"],[445,38,492,38],[445,39,492,39,"some"],[445,43,492,43],[445,44,492,44,"enemy"],[445,49,492,49],[445,53,492,53,"enemy"],[445,58,492,58],[445,59,492,59,"isBoss"],[445,65,492,65],[445,66,492,66],[447,8,494,6],[448,8,495,6],[448,12,495,10],[448,13,495,11,"newState"],[448,21,495,19],[448,22,495,20,"lastSpawnTime"],[448,35,495,33],[448,37,495,35],[449,10,496,8,"newState"],[449,18,496,16],[449,19,496,17,"lastSpawnTime"],[449,32,496,30],[449,35,496,33,"now"],[449,38,496,36],[450,8,497,6],[451,8,499,6,"console"],[451,15,499,13],[451,16,499,14,"log"],[451,19,499,17],[451,20,499,18],[451,53,499,51,"newState"],[451,61,499,59],[451,62,499,60,"enemies"],[451,69,499,67],[451,70,499,68,"length"],[451,76,499,74],[451,85,499,83,"MAX_ENEMIES"],[451,96,499,94],[451,109,499,107,"hasBoss"],[451,116,499,114],[451,118,499,116],[451,119,499,117],[453,8,501,6],[454,8,502,6],[454,12,502,10],[454,13,502,11,"hasBoss"],[454,20,502,18],[454,24,502,22,"newState"],[454,32,502,30],[454,33,502,31,"enemies"],[454,40,502,38],[454,41,502,39,"length"],[454,47,502,45],[454,50,502,48,"MAX_ENEMIES"],[454,61,502,59],[454,65,502,64,"now"],[454,68,502,67],[454,71,502,70,"newState"],[454,79,502,78],[454,80,502,79,"lastSpawnTime"],[454,93,502,92],[454,97,502,97,"MIN_SPAWN_DELAY"],[454,112,502,112],[454,114,502,114],[455,10,503,8,"console"],[455,17,503,15],[455,18,503,16,"log"],[455,21,503,19],[455,22,503,20],[455,43,503,41,"newState"],[455,51,503,49],[455,52,503,50,"enemies"],[455,59,503,57],[455,60,503,58,"length"],[455,66,503,64],[455,69,503,67],[455,70,503,68],[455,74,503,72,"MAX_ENEMIES"],[455,85,503,83],[455,87,503,85],[455,88,503,86],[456,10,504,8,"spawnTestEnemy"],[456,24,504,22],[456,25,504,23,"newState"],[456,33,504,31],[456,34,504,32],[457,10,505,8,"newState"],[457,18,505,16],[457,19,505,17,"lastSpawnTime"],[457,32,505,30],[457,35,505,33,"now"],[457,38,505,36],[458,8,506,6],[459,8,508,6],[459,15,508,13,"newState"],[459,23,508,21],[460,6,509,4],[460,7,509,5],[460,47,509,6],[462,6,511,4],[463,6,512,4],[463,10,512,8,"enemiesToKill"],[463,23,512,21],[463,24,512,22,"length"],[463,30,512,28],[463,33,512,31],[463,34,512,32],[463,36,512,34],[464,8,513,6],[465,8,514,6],[465,12,514,12,"unprocessedEnemies"],[465,30,514,30],[465,33,514,33,"enemiesToKill"],[465,46,514,46],[465,47,514,47,"filter"],[465,53,514,53],[465,54,514,54,"enemy"],[465,59,514,59],[465,63,514,63],[465,64,514,64,"enemy"],[465,69,514,69],[465,70,514,70,"xpAwarded"],[465,79,514,79],[465,80,514,80],[466,8,516,6],[466,12,516,10,"unprocessedEnemies"],[466,30,516,28],[466,31,516,29,"length"],[466,37,516,35],[466,40,516,38],[466,41,516,39],[466,43,516,41],[467,10,517,8],[468,10,518,8],[468,14,518,12,"totalXP"],[468,21,518,19],[468,24,518,22],[468,25,518,23],[469,10,519,8],[469,14,519,12,"totalGold"],[469,23,519,21],[469,26,519,24],[469,27,519,25],[470,10,520,8],[470,14,520,14,"zoneKills"],[470,23,520,30],[470,26,520,33],[470,28,520,35],[471,10,522,8],[471,14,522,14,"xpMultiplier"],[471,26,522,26],[471,29,522,29,"game"],[471,33,522,33],[471,34,522,34,"gameState"],[471,43,522,43],[471,44,522,44,"subscriptionBenefits"],[471,64,522,64],[471,66,522,66,"xp_multiplier"],[471,79,522,79],[471,83,522,83],[471,86,522,86],[472,10,523,8],[472,14,523,14,"goldMultiplier"],[472,28,523,28],[472,31,523,31,"game"],[472,35,523,35],[472,36,523,36,"gameState"],[472,45,523,45],[472,46,523,46,"subscriptionBenefits"],[472,66,523,66],[472,68,523,68,"drop_multiplier"],[472,83,523,83],[472,87,523,87],[472,90,523,90],[473,10,525,8,"unprocessedEnemies"],[473,28,525,26],[473,29,525,27,"forEach"],[473,36,525,34],[473,37,525,35,"enemy"],[473,42,525,40],[473,46,525,44],[474,12,526,10,"totalXP"],[474,19,526,17],[474,23,526,21],[474,24,526,22,"enemy"],[474,29,526,27],[474,30,526,28,"zoneXP"],[474,36,526,34],[474,40,526,38],[474,41,526,39],[474,45,526,43,"xpMultiplier"],[474,57,526,55],[475,12,527,10,"totalGold"],[475,21,527,19],[475,25,527,23],[475,27,527,25],[475,30,527,28,"goldMultiplier"],[475,44,527,42],[476,12,529,10],[476,16,529,14,"enemy"],[476,21,529,19],[476,22,529,20,"zoneTypeId"],[476,32,529,30],[476,34,529,32],[477,14,530,12,"zoneKills"],[477,23,530,21],[477,24,530,22,"push"],[477,28,530,26],[477,29,530,27],[478,16,531,14,"id"],[478,18,531,16],[478,20,531,18,"enemy"],[478,25,531,23],[478,26,531,24,"id"],[478,28,531,26],[479,16,532,14,"typeId"],[479,22,532,20],[479,24,532,22,"enemy"],[479,29,532,27],[479,30,532,28,"zoneTypeId"],[479,40,532,38],[480,16,533,14,"name"],[480,20,533,18],[480,22,533,20,"enemy"],[480,27,533,25],[480,28,533,26,"name"],[480,32,533,30],[481,16,534,14,"icon"],[481,20,534,18],[481,22,534,20],[481,26,534,24],[482,16,535,14,"hp"],[482,18,535,16],[482,20,535,18],[482,21,535,19],[483,16,536,14,"maxHP"],[483,21,536,19],[483,23,536,21,"enemy"],[483,28,536,26],[483,29,536,27,"maxHealth"],[483,38,536,36],[484,16,537,14,"attack"],[484,22,537,20],[484,24,537,22,"enemy"],[484,29,537,27],[484,30,537,28,"stats"],[484,35,537,33],[484,36,537,34,"attack"],[484,42,537,40],[485,16,538,14,"xp"],[485,18,538,16],[485,20,538,18,"enemy"],[485,25,538,23],[485,26,538,24,"zoneXP"],[485,32,538,30],[485,36,538,34],[485,37,538,35],[486,16,539,14,"position"],[486,24,539,22],[486,26,539,24,"enemy"],[486,31,539,29],[486,32,539,30,"position"],[487,14,540,12],[487,15,540,13],[487,16,540,14],[488,12,541,10],[489,10,542,8],[489,11,542,9],[489,12,542,10],[491,10,544,8],[492,10,545,8,"game"],[492,14,545,12],[492,15,545,13,"updateNinja"],[492,26,545,24],[492,27,545,25,"prev"],[492,31,545,29],[492,36,545,34],[493,12,546,10,"experience"],[493,22,546,20],[493,24,546,22,"prev"],[493,28,546,26],[493,29,546,27,"experience"],[493,39,546,37],[493,42,546,40,"totalXP"],[493,49,546,47],[494,12,547,10,"gold"],[494,16,547,14],[494,18,547,16,"prev"],[494,22,547,20],[494,23,547,21,"gold"],[494,27,547,25],[494,30,547,28,"totalGold"],[495,10,548,8],[495,11,548,9],[495,12,548,10],[495,13,548,11],[497,10,550,8],[498,10,551,8,"zoneKills"],[498,19,551,17],[498,20,551,18,"forEach"],[498,27,551,25],[498,28,551,26,"zoneEnemy"],[498,37,551,35],[498,41,551,39,"recordEnemyKill"],[498,56,551,54],[498,57,551,55,"zoneEnemy"],[498,66,551,64],[498,67,551,65],[498,68,551,66],[500,10,553,8],[501,10,554,8,"setCombatState"],[501,24,554,22],[501,25,554,23,"prev"],[501,29,554,27],[501,34,554,32],[502,12,555,10],[502,15,555,13,"prev"],[502,19,555,17],[503,12,556,10,"enemies"],[503,19,556,17],[503,21,556,19,"prev"],[503,25,556,23],[503,26,556,24,"enemies"],[503,33,556,31],[503,34,556,32,"map"],[503,37,556,35],[503,38,556,36,"enemy"],[503,43,556,41],[503,47,556,45],[504,14,557,12],[504,18,557,18,"wasProcessed"],[504,30,557,30],[504,33,557,33,"unprocessedEnemies"],[504,51,557,51],[504,52,557,52,"find"],[504,56,557,56],[504,57,557,57,"processed"],[504,66,557,66],[504,70,557,70,"processed"],[504,79,557,79],[504,80,557,80,"id"],[504,82,557,82],[504,87,557,87,"enemy"],[504,92,557,92],[504,93,557,93,"id"],[504,95,557,95],[504,96,557,96],[505,14,558,12],[505,21,558,19,"wasProcessed"],[505,33,558,31],[505,36,558,34],[506,16,558,36],[506,19,558,39,"enemy"],[506,24,558,44],[507,16,558,46,"xpAwarded"],[507,25,558,55],[507,27,558,57],[508,14,558,62],[508,15,558,63],[508,18,558,66,"enemy"],[508,23,558,71],[509,12,559,10],[509,13,559,11],[510,10,560,8],[510,11,560,9],[510,12,560,10],[510,13,560,11],[511,8,561,6],[512,6,562,4],[513,4,563,2],[513,5,563,3],[513,7,563,5],[513,9,563,7],[513,10,563,8],[513,11,563,9],[513,12,563,10],[515,4,565,2],[516,4,566,2],[516,8,566,8,"findClosestEnemyInternal"],[516,32,566,32],[516,35,566,36,"enemies"],[516,42,566,58],[516,46,566,83],[517,6,567,4],[517,10,567,8,"enemies"],[517,17,567,15],[517,18,567,16,"length"],[517,24,567,22],[517,29,567,27],[517,30,567,28],[517,32,567,30],[517,39,567,37],[517,43,567,41],[519,6,569,4],[520,6,570,4],[520,10,570,10,"SCREEN_WIDTH"],[520,22,570,22],[520,25,570,25],[520,28,570,28],[521,6,571,4],[521,10,571,10,"GAME_AREA_HEIGHT"],[521,26,571,26],[521,29,571,29],[521,32,571,32],[521,35,571,35],[521,38,571,38],[521,39,571,39],[521,40,571,40],[522,6,572,4],[522,10,572,10,"ninjaX"],[522,16,572,16],[522,19,572,19,"SCREEN_WIDTH"],[522,31,572,31],[522,34,572,34],[522,35,572,35],[523,6,573,4],[523,10,573,10,"ninjaY"],[523,16,573,16],[523,19,573,19,"GAME_AREA_HEIGHT"],[523,35,573,35],[523,38,573,38],[523,39,573,39],[524,6,575,4],[524,10,575,8,"closestEnemy"],[524,22,575,20],[524,25,575,23,"enemies"],[524,32,575,30],[524,33,575,31],[524,34,575,32],[524,35,575,33],[525,6,576,4],[525,10,576,8,"closestDistance"],[525,25,576,23],[525,28,576,26,"Infinity"],[525,36,576,34],[526,6,578,4,"enemies"],[526,13,578,11],[526,14,578,12,"forEach"],[526,21,578,19],[526,22,578,20,"enemy"],[526,27,578,25],[526,31,578,29],[527,8,579,6],[527,12,579,12,"distance"],[527,20,579,20],[527,23,579,23,"Math"],[527,27,579,27],[527,28,579,28,"sqrt"],[527,32,579,32],[527,33,580,8,"Math"],[527,37,580,12],[527,38,580,13,"pow"],[527,41,580,16],[527,42,580,17,"enemy"],[527,47,580,22],[527,48,580,23,"position"],[527,56,580,31],[527,57,580,32,"x"],[527,58,580,33],[527,61,580,36,"ninjaX"],[527,67,580,42],[527,69,580,44],[527,70,580,45],[527,71,580,46],[527,74,581,8,"Math"],[527,78,581,12],[527,79,581,13,"pow"],[527,82,581,16],[527,83,581,17,"enemy"],[527,88,581,22],[527,89,581,23,"position"],[527,97,581,31],[527,98,581,32,"y"],[527,99,581,33],[527,102,581,36,"ninjaY"],[527,108,581,42],[527,110,581,44],[527,111,581,45],[527,112,582,6],[527,113,582,7],[528,8,584,6],[528,12,584,10,"distance"],[528,20,584,18],[528,23,584,21,"closestDistance"],[528,38,584,36],[528,40,584,38],[529,10,585,8,"closestDistance"],[529,25,585,23],[529,28,585,26,"distance"],[529,36,585,34],[530,10,586,8,"closestEnemy"],[530,22,586,20],[530,25,586,23,"enemy"],[530,30,586,28],[531,8,587,6],[532,6,588,4],[532,7,588,5],[532,8,588,6],[533,6,590,4,"console"],[533,13,590,11],[533,14,590,12,"log"],[533,17,590,15],[533,18,590,16],[533,60,590,58,"closestDistance"],[533,75,590,73],[533,76,590,74,"toFixed"],[533,83,590,81],[533,84,590,82],[533,85,590,83],[533,86,590,84],[533,88,590,86],[533,89,590,87],[534,6,591,4],[534,13,591,11,"closestEnemy"],[534,25,591,23],[535,4,592,2],[535,5,592,3],[537,4,594,2],[538,4,595,2],[538,8,595,8,"findClosestEnemy"],[538,24,595,24],[538,27,595,27,"findClosestEnemy"],[538,28,595,27],[538,33,595,53],[539,6,596,4],[539,13,596,11,"findClosestEnemyInternal"],[539,37,596,35],[539,38,596,36,"combatState"],[539,49,596,47],[539,50,596,48,"enemies"],[539,57,596,55],[539,58,596,56],[540,4,597,2],[540,5,597,3],[542,4,599,2],[543,4,600,2],[544,4,601,2],[544,8,601,2,"_useState7"],[544,18,601,2],[544,21,601,58],[544,25,601,58,"useState"],[544,31,601,66],[544,32,601,66,"useState"],[544,40,601,66],[544,42,601,91],[545,8,601,93,"x"],[545,9,601,94],[545,11,601,96],[545,14,601,99],[546,8,601,101,"y"],[546,9,601,102],[546,11,601,104],[547,6,601,108],[547,7,601,109],[547,8,601,110],[548,6,601,110,"_useState8"],[548,16,601,110],[548,23,601,110,"_slicedToArray"],[548,37,601,110],[548,38,601,110,"default"],[548,45,601,110],[548,47,601,110,"_useState7"],[548,57,601,110],[549,6,601,9,"currentNinjaPosition"],[549,26,601,29],[549,29,601,29,"_useState8"],[549,39,601,29],[550,6,601,31,"setCurrentNinjaPosition"],[550,29,601,54],[550,32,601,54,"_useState8"],[550,42,601,54],[551,4,602,2],[551,8,602,2,"_useState9"],[551,18,602,2],[551,21,602,60],[551,25,602,60,"useState"],[551,31,602,68],[551,32,602,68,"useState"],[551,40,602,68],[551,42,602,69],[551,47,602,74],[551,48,602,75],[552,6,602,75,"_useState0"],[552,16,602,75],[552,23,602,75,"_slicedToArray"],[552,37,602,75],[552,38,602,75,"default"],[552,45,602,75],[552,47,602,75,"_useState9"],[552,57,602,75],[553,6,602,9,"isManualControlActive"],[553,27,602,30],[553,30,602,30,"_useState0"],[553,40,602,30],[554,6,602,32,"setIsManualControlActive"],[554,30,602,56],[554,33,602,56,"_useState0"],[554,43,602,56],[556,4,604,2],[557,4,605,2],[557,8,605,8,"updateNinjaPosition"],[557,27,605,27],[557,30,605,30],[557,34,605,30,"useCallback"],[557,40,605,41],[557,41,605,41,"useCallback"],[557,52,605,41],[557,54,605,43,"newPosition"],[557,65,605,78],[557,69,605,83],[558,6,606,4,"setCurrentNinjaPosition"],[558,29,606,27],[558,30,606,28,"newPosition"],[558,41,606,39],[558,42,606,40],[559,4,607,2],[559,5,607,3],[559,7,607,5],[559,9,607,7],[559,10,607,8],[561,4,609,2],[562,4,610,2],[562,8,610,8,"setManualControlActive"],[562,30,610,30],[562,33,610,33],[562,37,610,33,"useCallback"],[562,43,610,44],[562,44,610,44,"useCallback"],[562,55,610,44],[562,57,610,46,"active"],[562,63,610,61],[562,67,610,66],[563,6,611,4,"setIsManualControlActive"],[563,30,611,28],[563,31,611,29,"active"],[563,37,611,35],[563,38,611,36],[564,6,612,4,"console"],[564,13,612,11],[564,14,612,12,"log"],[564,17,612,15],[564,18,612,16],[564,39,612,37,"active"],[564,45,612,43],[564,48,612,46],[564,59,612,57],[564,62,612,60],[564,75,612,73],[564,88,612,86,"active"],[564,94,612,92],[564,97,612,95],[564,105,612,103],[564,108,612,106],[564,117,612,115],[564,119,612,117],[564,120,612,118],[565,4,613,2],[565,5,613,3],[565,7,613,5],[565,9,613,7],[565,10,613,8],[567,4,615,2],[568,4,616,2],[568,8,616,8,"handleProjectileHit"],[568,27,616,27],[568,30,616,31,"projectile"],[568,40,616,59],[568,44,616,64],[569,6,617,4,"console"],[569,13,617,11],[569,14,617,12,"log"],[569,17,617,15],[569,18,617,16],[569,35,617,33,"projectile"],[569,45,617,43],[569,46,617,44,"id"],[569,48,617,46],[569,62,617,60,"projectile"],[569,72,617,70],[569,73,617,71,"targetEnemyId"],[569,86,617,84],[569,94,617,92,"projectile"],[569,104,617,102],[569,105,617,103,"damage"],[569,111,617,109],[569,120,617,118],[569,121,617,119],[570,6,619,4,"setCombatState"],[570,20,619,18],[570,21,619,19,"prev"],[570,25,619,23],[570,29,619,27],[571,8,620,6],[571,12,620,12,"newState"],[571,20,620,20],[571,23,620,23],[572,10,620,25],[572,13,620,28,"prev"],[573,8,620,33],[573,9,620,34],[575,8,622,6],[576,8,623,6],[576,12,623,12,"enemyIndex"],[576,22,623,22],[576,25,623,25,"newState"],[576,33,623,33],[576,34,623,34,"enemies"],[576,41,623,41],[576,42,623,42,"findIndex"],[576,51,623,51],[576,52,623,52,"e"],[576,53,623,53],[576,57,623,57,"e"],[576,58,623,58],[576,59,623,59,"id"],[576,61,623,61],[576,66,623,66,"projectile"],[576,76,623,76],[576,77,623,77,"targetEnemyId"],[576,90,623,90],[576,91,623,91],[577,8,624,6],[577,12,624,10,"enemyIndex"],[577,22,624,20],[577,26,624,24],[577,27,624,25],[577,29,624,27],[578,10,625,8,"newState"],[578,18,625,16],[578,19,625,17,"enemies"],[578,26,625,24],[578,29,625,27],[578,30,625,28],[578,33,625,31,"newState"],[578,41,625,39],[578,42,625,40,"enemies"],[578,49,625,47],[578,50,625,48],[579,10,626,8,"newState"],[579,18,626,16],[579,19,626,17,"enemies"],[579,26,626,24],[579,27,626,25,"enemyIndex"],[579,37,626,35],[579,38,626,36],[579,41,626,39],[580,12,627,10],[580,15,627,13,"newState"],[580,23,627,21],[580,24,627,22,"enemies"],[580,31,627,29],[580,32,627,30,"enemyIndex"],[580,42,627,40],[580,43,627,41],[581,12,628,10,"health"],[581,18,628,16],[581,20,628,18,"newState"],[581,28,628,26],[581,29,628,27,"enemies"],[581,36,628,34],[581,37,628,35,"enemyIndex"],[581,47,628,45],[581,48,628,46],[581,49,628,47,"health"],[581,55,628,53],[581,58,628,56,"projectile"],[581,68,628,66],[581,69,628,67,"damage"],[581,75,628,73],[582,12,629,10,"lastDamaged"],[582,23,629,21],[582,25,629,23,"combatEngine"],[582,44,629,35],[582,45,629,35,"combatEngine"],[582,57,629,35],[582,58,629,36,"getCurrentTick"],[582,72,629,50],[582,73,629,51],[583,10,630,8],[583,11,630,9],[584,10,632,8,"console"],[584,17,632,15],[584,18,632,16,"log"],[584,21,632,19],[584,22,632,20],[584,34,632,32,"projectile"],[584,44,632,42],[584,45,632,43,"targetEnemyId"],[584,58,632,56],[584,70,632,68,"newState"],[584,78,632,76],[584,79,632,77,"enemies"],[584,86,632,84],[584,87,632,85,"enemyIndex"],[584,97,632,95],[584,98,632,96],[584,99,632,97,"health"],[584,105,632,103],[584,109,632,107,"newState"],[584,117,632,115],[584,118,632,116,"enemies"],[584,125,632,123],[584,126,632,124,"enemyIndex"],[584,136,632,134],[584,137,632,135],[584,138,632,136,"maxHealth"],[584,147,632,145],[584,149,632,147],[584,150,632,148],[585,8,633,6],[586,8,635,6],[586,15,635,13,"newState"],[586,23,635,21],[587,6,636,4],[587,7,636,5],[587,8,636,6],[589,6,638,4],[590,6,639,4,"setProjectiles"],[590,20,639,18],[590,21,639,19,"prev"],[590,25,639,23],[590,29,639,27,"prev"],[590,33,639,31],[590,34,639,32,"filter"],[590,40,639,38],[590,41,639,39,"p"],[590,42,639,40],[590,46,639,44,"p"],[590,47,639,45],[590,48,639,46,"id"],[590,50,639,48],[590,55,639,53,"projectile"],[590,65,639,63],[590,66,639,64,"id"],[590,68,639,66],[590,69,639,67],[590,70,639,68],[591,4,640,2],[591,5,640,3],[593,4,642,2],[594,4,643,2],[594,8,643,8,"castAbility"],[594,19,643,19],[594,22,643,22,"castAbility"],[594,23,643,23,"state"],[594,28,643,41],[594,30,643,43,"slotIndex"],[594,39,643,60],[594,44,643,65],[595,6,644,4],[595,10,644,10,"deck"],[595,14,644,14],[595,17,644,17,"state"],[595,22,644,22],[595,23,644,23,"abilityManager"],[595,37,644,37],[595,38,644,38,"getDeck"],[595,45,644,45],[595,46,644,46],[595,47,644,47],[596,6,645,4],[596,10,645,10,"ability"],[596,17,645,17],[596,20,645,20,"deck"],[596,24,645,24],[596,25,645,25,"slots"],[596,30,645,30],[596,31,645,31,"slotIndex"],[596,40,645,40],[596,41,645,41],[597,6,646,4],[597,10,646,8],[597,11,646,9,"ability"],[597,18,646,16],[597,20,646,18],[598,6,648,4,"console"],[598,13,648,11],[598,14,648,12,"log"],[598,17,648,15],[598,18,648,16],[598,43,648,41,"ability"],[598,50,648,48],[598,51,648,49,"id"],[598,53,648,51],[598,67,648,65,"slotIndex"],[598,76,648,74],[598,78,648,76],[598,79,648,77],[600,6,650,4],[601,6,651,4],[601,10,651,8,"damage"],[601,16,651,14],[601,19,651,17,"ability"],[601,26,651,24],[601,27,651,25,"stats"],[601,32,651,30],[601,33,651,31,"baseDamage"],[601,43,651,41],[603,6,653,4],[604,6,654,4,"deck"],[604,10,654,8],[604,11,654,9,"activeSynergies"],[604,26,654,24],[604,27,654,25,"forEach"],[604,34,654,32],[604,35,654,33,"synergy"],[604,42,654,40],[604,46,654,44],[605,8,655,6],[605,12,655,10,"synergy"],[605,19,655,17],[605,20,655,18,"bonus"],[605,25,655,23],[605,26,655,24,"damageBonus"],[605,37,655,35],[605,41,656,10,"synergy"],[605,48,656,17],[605,49,656,18,"requiredTags"],[605,61,656,30],[605,62,656,31,"some"],[605,66,656,35],[605,67,656,36,"tag"],[605,70,656,39],[605,74,656,43,"ability"],[605,81,656,50],[605,82,656,51,"tags"],[605,86,656,55],[605,87,656,56,"includes"],[605,95,656,64],[605,96,656,65,"tag"],[605,99,656,68],[605,100,656,69],[605,101,656,70],[605,103,656,72],[606,10,657,8,"damage"],[606,16,657,14],[606,20,657,19],[606,21,657,20],[606,24,657,23,"synergy"],[606,31,657,30],[606,32,657,31,"bonus"],[606,37,657,36],[606,38,657,37,"damageBonus"],[606,49,657,48],[606,52,657,51],[606,55,657,55],[607,8,658,6],[608,6,659,4],[608,7,659,5],[608,8,659,6],[610,6,661,4],[611,6,662,4],[611,10,662,10,"isAOE"],[611,15,662,15],[611,18,662,18,"ability"],[611,25,662,25],[611,26,662,26,"effects"],[611,33,662,33],[611,34,662,34,"includes"],[611,42,662,42],[611,43,662,43],[611,48,662,48],[611,49,662,49],[611,53,662,53,"ability"],[611,60,662,60],[611,61,662,61,"stats"],[611,66,662,66],[611,67,662,67,"aoeRadius"],[611,76,662,76],[612,6,663,4,"console"],[612,13,663,11],[612,14,663,12,"log"],[612,17,663,15],[612,18,663,16],[612,39,663,37,"ability"],[612,46,663,44],[612,47,663,45,"name"],[612,51,663,49],[612,66,663,64,"JSON"],[612,70,663,68],[612,71,663,69,"stringify"],[612,80,663,78],[612,81,663,79,"ability"],[612,88,663,86],[612,89,663,87,"effects"],[612,96,663,94],[612,97,663,95],[612,113,663,111,"ability"],[612,120,663,118],[612,121,663,119,"stats"],[612,126,663,124],[612,127,663,125,"aoeRadius"],[612,136,663,134],[612,148,663,146,"isAOE"],[612,153,663,151],[612,155,663,153],[612,156,663,154],[613,6,665,4],[613,10,665,8,"isAOE"],[613,15,665,13],[613,17,665,15],[614,8,666,6,"console"],[614,15,666,13],[614,16,666,14,"log"],[614,19,666,17],[614,20,666,18],[614,39,666,37,"ability"],[614,46,666,44],[614,47,666,45,"name"],[614,51,666,49],[614,67,666,65,"ability"],[614,74,666,72],[614,75,666,73,"stats"],[614,80,666,78],[614,81,666,79,"aoeRadius"],[614,90,666,88],[614,92,666,90],[614,93,666,91],[616,8,668,6],[617,8,669,6],[618,8,670,6],[618,12,670,12,"ninjaX"],[618,18,670,18],[618,21,670,21,"currentNinjaPosition"],[618,41,670,41],[618,42,670,42,"x"],[618,43,670,43],[618,46,670,46],[618,48,670,48],[618,49,670,49],[618,50,670,50],[619,8,671,6],[619,12,671,12,"ninjaY"],[619,18,671,18],[619,21,671,21,"currentNinjaPosition"],[619,41,671,41],[619,42,671,42,"y"],[619,43,671,43],[619,46,671,46],[619,48,671,48],[620,8,672,6],[620,12,672,12,"aoeRadius"],[620,21,672,21],[620,24,672,24,"ability"],[620,31,672,31],[620,32,672,32,"stats"],[620,37,672,37],[620,38,672,38,"aoeRadius"],[620,47,672,47],[621,8,674,6],[621,12,674,12,"enemiesInRange"],[621,26,674,26],[621,29,674,29,"state"],[621,34,674,34],[621,35,674,35,"enemies"],[621,42,674,42],[621,43,674,43,"filter"],[621,49,674,49],[621,50,674,50,"enemy"],[621,55,674,55],[621,59,674,59],[622,10,675,8],[622,14,675,14,"enemyX"],[622,20,675,20],[622,23,675,23,"enemy"],[622,28,675,28],[622,29,675,29,"position"],[622,37,675,37],[622,38,675,38,"x"],[622,39,675,39],[622,42,675,42],[622,46,675,46],[622,47,675,47],[622,48,675,48],[623,10,676,8],[623,14,676,14,"enemyY"],[623,20,676,20],[623,23,676,23,"enemy"],[623,28,676,28],[623,29,676,29,"position"],[623,37,676,37],[623,38,676,38,"y"],[623,39,676,39],[623,42,676,42],[623,46,676,46],[624,10,677,8],[624,14,677,14,"distance"],[624,22,677,22],[624,25,677,25,"Math"],[624,29,677,29],[624,30,677,30,"sqrt"],[624,34,677,34],[624,35,677,35,"Math"],[624,39,677,39],[624,40,677,40,"pow"],[624,43,677,43],[624,44,677,44,"enemyX"],[624,50,677,50],[624,53,677,53,"ninjaX"],[624,59,677,59],[624,61,677,61],[624,62,677,62],[624,63,677,63],[624,66,677,66,"Math"],[624,70,677,70],[624,71,677,71,"pow"],[624,74,677,74],[624,75,677,75,"enemyY"],[624,81,677,81],[624,84,677,84,"ninjaY"],[624,90,677,90],[624,92,677,92],[624,93,677,93],[624,94,677,94],[624,95,677,95],[625,10,678,8],[625,17,678,15,"distance"],[625,25,678,23],[625,29,678,27,"aoeRadius"],[625,38,678,36],[626,8,679,6],[626,9,679,7],[626,10,679,8],[627,8,681,6,"console"],[627,15,681,13],[627,16,681,14,"log"],[627,19,681,17],[627,20,681,18],[627,45,681,43,"enemiesInRange"],[627,59,681,57],[627,60,681,58,"length"],[627,66,681,64],[627,88,681,86,"aoeRadius"],[627,97,681,95],[627,107,681,105],[627,108,681,106],[629,8,683,6],[630,8,684,6,"enemiesInRange"],[630,22,684,20],[630,23,684,21,"forEach"],[630,30,684,28],[630,31,684,29,"enemy"],[630,36,684,34],[630,40,684,38],[631,10,685,8],[631,14,685,14,"damageResult"],[631,26,685,26],[631,29,685,29,"DamageCalculator"],[631,48,685,45],[631,49,685,45,"DamageCalculator"],[631,65,685,45],[631,66,685,46,"calculateDamage"],[631,81,685,61],[631,82,685,62,"damage"],[631,88,685,68],[631,90,685,70,"state"],[631,95,685,75],[631,96,685,76,"playerStats"],[631,107,685,87],[631,109,685,89,"enemy"],[631,114,685,94],[631,115,685,95,"stats"],[631,120,685,100],[631,121,685,101],[632,10,686,8,"createProjectile"],[632,26,686,24],[632,27,686,25,"enemy"],[632,32,686,30],[632,34,686,32,"damageResult"],[632,46,686,44],[632,47,686,45,"damage"],[632,53,686,51],[632,55,686,53,"currentNinjaPosition"],[632,75,686,73],[632,77,686,75],[633,12,687,10,"id"],[633,14,687,12],[633,16,687,14,"ability"],[633,23,687,21],[633,24,687,22,"id"],[633,26,687,24],[634,12,688,10,"name"],[634,16,688,14],[634,18,688,16,"ability"],[634,25,688,23],[634,26,688,24,"name"],[634,30,688,28],[635,12,689,10,"icon"],[635,16,689,14],[635,18,689,16,"ability"],[635,25,689,23],[635,26,689,24,"icon"],[636,10,690,8],[636,11,690,9],[636,12,690,10],[637,10,691,8,"console"],[637,17,691,15],[637,18,691,16,"log"],[637,21,691,19],[637,22,691,20],[637,37,691,35,"enemy"],[637,42,691,40],[637,43,691,41,"name"],[637,47,691,45],[637,55,691,53,"damageResult"],[637,67,691,65],[637,68,691,66,"damage"],[637,74,691,72],[637,83,691,81],[637,84,691,82],[639,10,693,8],[640,10,694,8],[640,14,694,12,"damageResult"],[640,26,694,24],[640,27,694,25,"damage"],[640,33,694,31],[640,37,694,35,"enemy"],[640,42,694,40],[640,43,694,41,"health"],[640,49,694,47],[640,51,694,49],[641,12,695,10,"console"],[641,19,695,17],[641,20,695,18,"log"],[641,23,695,21],[641,24,695,22],[641,67,695,65,"enemy"],[641,72,695,70],[641,73,695,71,"name"],[641,77,695,75],[641,90,695,88,"damageResult"],[641,102,695,100],[641,103,695,101,"damage"],[641,109,695,107],[641,124,695,122,"enemy"],[641,129,695,127],[641,130,695,128,"health"],[641,136,695,134],[641,139,695,137],[641,140,695,138],[642,10,696,8],[643,8,697,6],[643,9,697,7],[643,10,697,8],[644,8,699,6,"console"],[644,15,699,13],[644,16,699,14,"log"],[644,19,699,17],[644,20,699,18],[644,26,699,24,"ability"],[644,33,699,31],[644,34,699,32,"name"],[644,38,699,36],[644,56,699,54,"enemiesInRange"],[644,70,699,68],[644,71,699,69,"length"],[644,77,699,75],[644,93,699,91,"damage"],[644,99,699,97],[644,118,699,116],[644,119,699,117],[645,6,701,4],[645,7,701,5],[645,13,701,11],[646,8,702,6],[647,8,703,6],[647,12,703,12,"target"],[647,18,703,18],[647,21,703,21,"findClosestEnemyInternal"],[647,45,703,45],[647,46,703,46,"state"],[647,51,703,51],[647,52,703,52,"enemies"],[647,59,703,59],[647,60,703,60],[648,8,704,6],[648,12,704,10],[648,13,704,11,"target"],[648,19,704,17],[648,21,704,19],[649,8,706,6],[649,12,706,12,"damageResult"],[649,24,706,24],[649,27,706,27,"DamageCalculator"],[649,46,706,43],[649,47,706,43,"DamageCalculator"],[649,63,706,43],[649,64,706,44,"calculateDamage"],[649,79,706,59],[649,80,706,60,"damage"],[649,86,706,66],[649,88,706,68,"state"],[649,93,706,73],[649,94,706,74,"playerStats"],[649,105,706,85],[649,107,706,87,"target"],[649,113,706,93],[649,114,706,94,"stats"],[649,119,706,99],[649,120,706,100],[651,8,708,6],[652,8,709,6,"console"],[652,15,709,13],[652,16,709,14,"log"],[652,19,709,17],[652,20,709,18],[652,71,709,69,"target"],[652,77,709,75],[652,78,709,76,"name"],[652,82,709,80],[652,91,709,89,"damageResult"],[652,103,709,101],[652,104,709,102,"damage"],[652,110,709,108],[652,119,709,117],[652,120,709,118],[653,8,710,6,"createProjectile"],[653,24,710,22],[653,25,710,23,"target"],[653,31,710,29],[653,33,710,31,"damageResult"],[653,45,710,43],[653,46,710,44,"damage"],[653,52,710,50],[653,54,710,52,"currentNinjaPosition"],[653,74,710,72],[653,76,710,74],[654,10,711,8,"id"],[654,12,711,10],[654,14,711,12,"ability"],[654,21,711,19],[654,22,711,20,"id"],[654,24,711,22],[655,10,712,8,"name"],[655,14,712,12],[655,16,712,14,"ability"],[655,23,712,21],[655,24,712,22,"name"],[655,28,712,26],[656,10,713,8,"icon"],[656,14,713,12],[656,16,713,14,"ability"],[656,23,713,21],[656,24,713,22,"icon"],[657,8,714,6],[657,9,714,7],[657,10,714,8],[658,8,716,6,"console"],[658,15,716,13],[658,16,716,14,"log"],[658,19,716,17],[658,20,716,18],[658,26,716,24,"ability"],[658,33,716,31],[658,34,716,32,"name"],[658,38,716,36],[658,66,716,64,"damageResult"],[658,78,716,76],[658,79,716,77,"damage"],[658,85,716,83],[658,95,716,93,"damageResult"],[658,107,716,105],[658,108,716,106,"isCritical"],[658,118,716,116],[658,121,716,119],[658,131,716,129],[658,134,716,132],[658,136,716,134],[658,138,716,136],[658,139,716,137],[660,8,718,6],[661,8,719,6],[661,12,719,10,"damageResult"],[661,24,719,22],[661,25,719,23,"damage"],[661,31,719,29],[661,35,719,33,"target"],[661,41,719,39],[661,42,719,40,"health"],[661,48,719,46],[661,50,719,48],[662,10,720,8,"console"],[662,17,720,15],[662,18,720,16,"log"],[662,21,720,19],[662,22,720,20],[662,75,720,73,"target"],[662,81,720,79],[662,82,720,80,"name"],[662,86,720,84],[662,99,720,97,"damageResult"],[662,111,720,109],[662,112,720,110,"damage"],[662,118,720,116],[662,133,720,131,"target"],[662,139,720,137],[662,140,720,138,"health"],[662,146,720,144],[662,149,720,147],[662,150,720,148],[663,8,721,6],[664,6,722,4],[666,6,724,4],[667,6,725,4],[667,10,725,8,"ability"],[667,17,725,15],[667,18,725,16,"effects"],[667,25,725,23],[667,26,725,24,"includes"],[667,34,725,32],[667,35,725,33],[667,40,725,38],[667,41,725,39],[667,45,725,43,"ability"],[667,52,725,50],[667,53,725,51,"stats"],[667,58,725,56],[667,59,725,57,"duration"],[667,67,725,65],[667,69,725,67],[668,8,726,6],[668,12,726,12,"targets"],[668,19,726,19],[668,22,726,22,"isAOE"],[668,27,726,27],[668,30,727,8,"state"],[668,35,727,13],[668,36,727,14,"enemies"],[668,43,727,21],[668,44,727,22,"filter"],[668,50,727,28],[668,51,727,29,"enemy"],[668,56,727,34],[668,60,727,38],[669,10,728,10],[669,14,728,16,"ninjaX"],[669,20,728,22],[669,23,728,25,"currentNinjaPosition"],[669,43,728,45],[669,44,728,46,"x"],[669,45,728,47],[669,48,728,50],[669,50,728,52],[670,10,729,10],[670,14,729,16,"ninjaY"],[670,20,729,22],[670,23,729,25,"currentNinjaPosition"],[670,43,729,45],[670,44,729,46,"y"],[670,45,729,47],[670,48,729,50],[670,50,729,52],[671,10,730,10],[671,14,730,16,"enemyX"],[671,20,730,22],[671,23,730,25,"enemy"],[671,28,730,30],[671,29,730,31,"position"],[671,37,730,39],[671,38,730,40,"x"],[671,39,730,41],[671,42,730,44],[671,46,730,48],[672,10,731,10],[672,14,731,16,"enemyY"],[672,20,731,22],[672,23,731,25,"enemy"],[672,28,731,30],[672,29,731,31,"position"],[672,37,731,39],[672,38,731,40,"y"],[672,39,731,41],[672,42,731,44],[672,46,731,48],[673,10,732,10],[673,14,732,16,"distance"],[673,22,732,24],[673,25,732,27,"Math"],[673,29,732,31],[673,30,732,32,"sqrt"],[673,34,732,36],[673,35,732,37,"Math"],[673,39,732,41],[673,40,732,42,"pow"],[673,43,732,45],[673,44,732,46,"enemyX"],[673,50,732,52],[673,53,732,55,"ninjaX"],[673,59,732,61],[673,61,732,63],[673,62,732,64],[673,63,732,65],[673,66,732,68,"Math"],[673,70,732,72],[673,71,732,73,"pow"],[673,74,732,76],[673,75,732,77,"enemyY"],[673,81,732,83],[673,84,732,86,"ninjaY"],[673,90,732,92],[673,92,732,94],[673,93,732,95],[673,94,732,96],[673,95,732,97],[674,10,733,10],[674,17,733,17,"distance"],[674,25,733,25],[674,29,733,29,"ability"],[674,36,733,36],[674,37,733,37,"stats"],[674,42,733,42],[674,43,733,43,"aoeRadius"],[674,52,733,52],[675,8,734,8],[675,9,734,9],[675,10,734,10],[675,13,735,8],[675,14,735,9,"findClosestEnemyInternal"],[675,38,735,33],[675,39,735,34,"state"],[675,44,735,39],[675,45,735,40,"enemies"],[675,52,735,47],[675,53,735,48],[675,54,735,49],[675,55,735,50,"filter"],[675,61,735,56],[675,62,735,57,"Boolean"],[675,69,735,64],[675,70,735,65],[676,8,737,6,"targets"],[676,15,737,13],[676,16,737,14,"forEach"],[676,23,737,21],[676,24,737,22,"target"],[676,30,737,28],[676,34,737,32],[677,10,738,8,"state"],[677,15,738,13],[677,16,738,14,"statusEffects"],[677,29,738,27],[677,30,738,28,"addEffect"],[677,39,738,37],[677,40,738,38,"target"],[677,46,738,44],[677,47,738,45,"id"],[677,49,738,47],[677,51,738,49],[678,12,739,10,"id"],[678,14,739,12],[678,16,739,14],[678,19,739,17,"ability"],[678,26,739,24],[678,27,739,25,"id"],[678,29,739,27],[678,35,739,33],[679,12,740,10,"type"],[679,16,740,14],[679,18,740,16],[679,23,740,21],[680,12,741,10,"remainingTicks"],[680,26,741,24],[680,28,741,26,"Math"],[680,32,741,30],[680,33,741,31,"floor"],[680,38,741,36],[680,39,741,37,"ability"],[680,46,741,44],[680,47,741,45,"stats"],[680,52,741,50],[680,53,741,51,"duration"],[680,61,741,59],[680,64,741,62],[680,66,741,64],[680,67,741,65],[681,12,742,10,"tickInterval"],[681,24,742,22],[681,26,742,24],[681,28,742,26],[682,12,743,10,"lastTick"],[682,20,743,18],[682,22,743,20,"state"],[682,27,743,25],[682,28,743,26,"currentTick"],[682,39,743,37],[683,12,744,10,"value"],[683,17,744,15],[683,19,744,17,"Math"],[683,23,744,21],[683,24,744,22,"floor"],[683,29,744,27],[683,30,744,28,"damage"],[683,36,744,34],[683,39,744,37],[683,42,744,40],[683,43,744,41],[684,12,745,10,"stackable"],[684,21,745,19],[684,23,745,21],[685,10,746,8],[685,11,746,9],[685,12,746,10],[686,8,747,6],[686,9,747,7],[686,10,747,8],[687,6,748,4],[689,6,750,4],[690,6,751,4],[690,10,751,8,"ability"],[690,17,751,15],[690,18,751,16,"effects"],[690,25,751,23],[690,26,751,24,"includes"],[690,34,751,32],[690,35,751,33],[690,41,751,39],[690,42,751,40],[690,46,751,44,"ability"],[690,53,751,51],[690,54,751,52,"id"],[690,56,751,54],[690,61,751,59],[690,75,751,73],[690,77,751,75],[691,8,752,6,"console"],[691,15,752,13],[691,16,752,14,"log"],[691,19,752,17],[691,20,752,18],[691,66,752,64,"ability"],[691,73,752,71],[691,74,752,72,"stats"],[691,79,752,77],[691,80,752,78,"duration"],[691,88,752,86],[691,98,752,96],[691,99,752,97],[693,8,754,6],[694,8,755,6],[694,12,755,12,"cloneX"],[694,18,755,18],[694,21,755,21,"currentNinjaPosition"],[694,41,755,41],[694,42,755,42,"x"],[694,43,755,43],[694,46,755,46],[694,48,755,48],[694,49,755,49],[694,50,755,50],[695,8,756,6],[695,12,756,12,"cloneY"],[695,18,756,18],[695,21,756,21,"currentNinjaPosition"],[695,41,756,41],[695,42,756,42,"y"],[695,43,756,43],[695,46,756,46],[695,48,756,48],[695,49,756,49],[695,50,756,50],[697,8,758,6,"state"],[697,13,758,11],[697,14,758,12,"shadowClone"],[697,25,758,23],[697,28,758,26],[698,10,759,8,"id"],[698,12,759,10],[698,14,759,12],[698,30,759,28,"Date"],[698,34,759,32],[698,35,759,33,"now"],[698,38,759,36],[698,39,759,37],[698,40,759,38],[698,42,759,40],[699,10,760,8,"remainingTicks"],[699,24,760,22],[699,26,760,24,"Math"],[699,30,760,28],[699,31,760,29,"floor"],[699,36,760,34],[699,37,760,35,"ability"],[699,44,760,42],[699,45,760,43,"stats"],[699,50,760,48],[699,51,760,49,"duration"],[699,59,760,57],[699,62,760,60],[699,64,760,62],[699,65,760,63],[700,10,760,65],[701,10,761,8,"position"],[701,18,761,16],[701,20,761,18],[702,12,761,20,"x"],[702,13,761,21],[702,15,761,23,"cloneX"],[702,21,761,29],[703,12,761,31,"y"],[703,13,761,32],[703,15,761,34,"cloneY"],[704,10,761,41],[704,11,761,42],[705,10,762,8,"damageMultiplier"],[705,26,762,24],[705,28,762,26],[705,31,762,29],[705,32,762,31],[706,8,763,6],[706,9,763,7],[707,8,765,6,"console"],[707,15,765,13],[707,16,765,14,"log"],[707,19,765,17],[707,20,765,18],[707,63,765,61,"ability"],[707,70,765,68],[707,71,765,69,"stats"],[707,76,765,74],[707,77,765,75,"duration"],[707,85,765,83],[707,108,765,106],[707,109,765,107],[708,6,766,4],[709,4,767,2],[709,5,767,3],[711,4,769,2],[712,4,770,2],[712,8,770,8,"createProjectile"],[712,24,770,24],[712,27,770,27,"createProjectile"],[712,28,770,28,"targetEnemy"],[712,39,770,52],[712,41,770,54,"damage"],[712,47,770,68],[712,49,770,70,"ninjaPos"],[712,57,770,103],[712,59,770,105,"abilityInfo"],[712,70,770,159],[712,72,770,161,"isAOE"],[712,77,770,176],[712,79,770,178,"aoeRadius"],[712,88,770,196],[712,93,770,201],[713,6,771,4],[713,10,771,8],[713,11,771,9,"targetEnemy"],[713,22,771,20],[713,24,771,22],[714,8,772,6,"console"],[714,15,772,13],[714,16,772,14,"log"],[714,19,772,17],[714,20,772,18],[714,65,772,63],[714,66,772,64],[715,8,773,6],[715,15,773,13],[715,19,773,17],[716,6,774,4],[717,6,776,4],[717,10,776,10,"SCREEN_WIDTH"],[717,22,776,22],[717,25,776,25],[717,28,776,28],[718,6,777,4],[718,10,777,10,"GAME_AREA_HEIGHT"],[718,26,777,26],[718,29,777,29],[718,32,777,32],[718,35,777,35],[718,38,777,38],[718,39,777,39],[718,40,777,40],[719,6,778,4],[719,10,778,10,"NINJA_SIZE"],[719,20,778,20],[719,23,778,23],[719,25,778,25],[721,6,780,4],[722,6,781,4],[722,10,781,10,"ninjaX"],[722,16,781,16],[722,19,781,19,"ninjaPos"],[722,27,781,27],[722,30,781,30,"ninjaPos"],[722,38,781,38],[722,39,781,39,"x"],[722,40,781,40],[722,43,781,43,"NINJA_SIZE"],[722,53,781,53],[722,56,781,56],[722,57,781,57],[722,60,781,60,"SCREEN_WIDTH"],[722,72,781,72],[722,75,781,75],[722,76,781,76],[723,6,782,4],[723,10,782,10,"ninjaY"],[723,16,782,16],[723,19,782,19,"ninjaPos"],[723,27,782,27],[723,30,782,30,"ninjaPos"],[723,38,782,38],[723,39,782,39,"y"],[723,40,782,40],[723,43,782,43,"NINJA_SIZE"],[723,53,782,53],[723,56,782,56],[723,57,782,57],[723,60,782,60,"GAME_AREA_HEIGHT"],[723,76,782,76],[723,79,782,79],[723,80,782,80],[724,6,783,4],[724,10,783,10,"ENEMY_SIZE"],[724,20,783,20],[724,23,783,23],[724,25,783,25],[725,6,785,4],[725,10,785,10,"projectileId"],[725,22,785,22],[725,25,785,25],[725,33,785,33,"Date"],[725,37,785,37],[725,38,785,38,"now"],[725,41,785,41],[725,42,785,42],[725,43,785,43],[725,47,785,47,"Math"],[725,51,785,51],[725,52,785,52,"random"],[725,58,785,58],[725,59,785,59],[725,60,785,60],[725,62,785,62],[726,6,787,4],[726,10,787,10,"projectile"],[726,20,787,38],[726,23,787,41],[727,8,788,6,"id"],[727,10,788,8],[727,12,788,10,"projectileId"],[727,24,788,22],[728,8,789,6,"x"],[728,9,789,7],[728,11,789,9,"ninjaX"],[728,17,789,15],[729,8,790,6,"y"],[729,9,790,7],[729,11,790,9,"ninjaY"],[729,17,790,15],[730,8,791,6,"targetX"],[730,15,791,13],[730,17,791,15,"targetEnemy"],[730,28,791,26],[730,29,791,27,"position"],[730,37,791,35],[730,38,791,36,"x"],[730,39,791,37],[730,42,791,40,"ENEMY_SIZE"],[730,52,791,50],[730,55,791,53],[730,56,791,54],[731,8,792,6,"targetY"],[731,15,792,13],[731,17,792,15,"targetEnemy"],[731,28,792,26],[731,29,792,27,"position"],[731,37,792,35],[731,38,792,36,"y"],[731,39,792,37],[731,42,792,40,"ENEMY_SIZE"],[731,52,792,50],[731,55,792,53],[731,56,792,54],[732,8,793,6,"targetEnemyId"],[732,21,793,19],[732,23,793,21,"targetEnemy"],[732,34,793,32],[732,35,793,33,"id"],[732,37,793,35],[733,8,794,6,"damage"],[733,14,794,12],[733,16,794,14,"damage"],[733,22,794,20],[734,8,795,6,"startTime"],[734,17,795,15],[734,19,795,17,"Date"],[734,23,795,21],[734,24,795,22,"now"],[734,27,795,25],[734,28,795,26],[734,29,795,27],[735,8,796,6,"duration"],[735,16,796,14],[735,18,796,16],[735,21,796,19],[736,8,796,21],[737,8,797,6],[738,8,798,6,"abilityId"],[738,17,798,15],[738,19,798,17,"abilityInfo"],[738,30,798,28],[738,32,798,30,"id"],[738,34,798,32],[738,38,798,36],[738,54,798,52],[739,8,799,6,"abilityName"],[739,19,799,17],[739,21,799,19,"abilityInfo"],[739,32,799,30],[739,34,799,32,"name"],[739,38,799,36],[739,42,799,40],[739,58,799,56],[740,8,800,6,"abilityIcon"],[740,19,800,17],[740,21,800,19,"abilityInfo"],[740,32,800,30],[740,34,800,32,"icon"],[740,38,800,36],[740,42,800,40],[740,46,800,44],[741,8,800,46],[742,8,801,6],[743,8,802,6,"isAOE"],[743,13,802,11],[743,15,802,13,"isAOE"],[743,20,802,18],[743,24,802,22],[743,29,802,27],[744,8,803,6,"aoeRadius"],[744,17,803,15],[744,19,803,17,"aoeRadius"],[744,28,803,26],[744,32,803,30],[745,6,804,4],[745,7,804,5],[746,6,806,4,"console"],[746,13,806,11],[746,14,806,12,"log"],[746,17,806,15],[746,18,806,16],[746,44,806,42,"abilityInfo"],[746,55,806,53],[746,57,806,55,"name"],[746,61,806,59],[746,65,806,63],[746,81,806,79],[746,101,806,99,"projectileId"],[746,113,806,111],[746,128,806,126,"targetEnemy"],[746,139,806,137],[746,140,806,138,"name"],[746,144,806,142],[746,152,806,150,"damage"],[746,158,806,156],[746,167,806,165],[746,168,806,166],[747,6,807,4,"console"],[747,13,807,11],[747,14,807,12,"log"],[747,17,807,15],[747,18,807,16],[747,48,807,46,"isAOE"],[747,53,807,51],[747,68,807,66,"aoeRadius"],[747,77,807,75],[747,89,807,87,"damage"],[747,95,807,93],[747,97,807,95],[747,98,807,96],[748,6,809,4,"console"],[748,13,809,11],[748,14,809,12,"log"],[748,17,809,15],[748,18,809,16],[748,53,809,51,"targetEnemy"],[748,64,809,62],[748,65,809,63,"id"],[748,67,809,65],[748,75,809,73,"damage"],[748,81,809,79],[748,90,809,88],[748,91,809,89],[749,6,810,4,"console"],[749,13,810,11],[749,14,810,12,"log"],[749,17,810,15],[749,18,810,16],[749,53,810,51,"ninjaX"],[749,59,810,57],[749,64,810,62,"ninjaY"],[749,70,810,68],[749,87,810,85,"projectile"],[749,97,810,95],[749,98,810,96,"targetX"],[749,105,810,103],[749,110,810,108,"projectile"],[749,120,810,118],[749,121,810,119,"targetY"],[749,128,810,126],[749,131,810,129],[749,132,810,130],[750,6,812,4,"setProjectiles"],[750,20,812,18],[750,21,812,19,"prev"],[750,25,812,23],[750,29,812,27],[750,30,812,28],[750,33,812,31,"prev"],[750,37,812,35],[750,39,812,37,"projectile"],[750,49,812,47],[750,50,812,48],[750,51,812,49],[752,6,814,4],[753,6,815,4,"setTimeout"],[753,16,815,14],[753,17,815,15],[753,23,815,21],[754,8,816,6,"handleProjectileHit"],[754,27,816,25],[754,28,816,26,"projectile"],[754,38,816,36],[754,39,816,37],[755,6,817,4],[755,7,817,5],[755,9,817,7],[755,12,817,10],[755,13,817,11],[756,6,819,4],[756,13,819,11,"projectile"],[756,23,819,21],[757,4,820,2],[757,5,820,3],[759,4,822,2],[760,4,823,2],[760,8,823,8,"spawnTestEnemy"],[760,22,823,22],[760,25,823,26,"state"],[760,30,823,44],[760,34,823,49],[761,6,824,4,"console"],[761,13,824,11],[761,14,824,12,"log"],[761,17,824,15],[761,18,824,16],[761,83,824,81],[761,84,824,82],[763,6,826,4],[764,6,827,4],[764,10,827,10,"zoneEnemy"],[764,19,827,19],[764,22,827,22,"spawnZoneEnemy"],[764,36,827,36],[764,37,827,37],[764,38,827,38],[765,6,828,4],[765,10,828,8],[765,11,828,9,"zoneEnemy"],[765,20,828,18],[765,22,828,20],[766,8,829,6,"console"],[766,15,829,13],[766,16,829,14,"log"],[766,19,829,17],[766,20,829,18],[766,76,829,74],[766,77,829,75],[767,8,830,6],[768,8,831,6,"spawnBasicTestEnemy"],[768,27,831,25],[768,28,831,26,"state"],[768,33,831,31],[768,34,831,32],[769,8,832,6],[770,6,833,4],[771,6,835,4,"console"],[771,13,835,11],[771,14,835,12,"log"],[771,17,835,15],[771,18,835,16],[771,44,835,42,"zoneEnemy"],[771,53,835,51],[771,54,835,52,"name"],[771,58,835,56],[771,63,835,61,"zoneEnemy"],[771,72,835,70],[771,73,835,71,"typeId"],[771,79,835,77],[771,94,835,92,"currentZone"],[771,105,835,103],[771,107,835,105,"id"],[771,109,835,107],[771,119,835,117,"currentZoneLevel"],[771,135,835,133],[771,137,835,135,"level"],[771,142,835,140],[771,144,835,142],[771,145,835,143],[773,6,837,4],[774,6,838,4],[774,10,838,10,"combatEnemy"],[774,21,838,34],[774,24,838,37],[775,8,839,6,"id"],[775,10,839,8],[775,12,839,10,"zoneEnemy"],[775,21,839,19],[775,22,839,20,"id"],[775,24,839,22],[776,8,840,6,"name"],[776,12,840,10],[776,14,840,12,"zoneEnemy"],[776,23,840,21],[776,24,840,22,"name"],[776,28,840,26],[777,8,841,6,"health"],[777,14,841,12],[777,16,841,14,"zoneEnemy"],[777,25,841,23],[777,26,841,24,"hp"],[777,28,841,26],[778,8,842,6,"maxHealth"],[778,17,842,15],[778,19,842,17,"zoneEnemy"],[778,28,842,26],[778,29,842,27,"maxHP"],[778,34,842,32],[779,8,843,6,"stats"],[779,13,843,11],[779,15,843,13],[780,10,844,8,"attack"],[780,16,844,14],[780,18,844,16,"zoneEnemy"],[780,27,844,25],[780,28,844,26,"attack"],[780,34,844,32],[781,10,845,8,"defense"],[781,17,845,15],[781,19,845,17],[781,21,845,19],[782,10,845,21],[783,10,846,8,"health"],[783,16,846,14],[783,18,846,16,"zoneEnemy"],[783,27,846,25],[783,28,846,26,"hp"],[783,30,846,28],[784,10,847,8,"maxHealth"],[784,19,847,17],[784,21,847,19,"zoneEnemy"],[784,30,847,28],[784,31,847,29,"maxHP"],[784,36,847,34],[785,10,848,8,"critChance"],[785,20,848,18],[785,22,848,20],[785,23,848,21],[786,10,849,8,"critDamage"],[786,20,849,18],[786,22,849,20],[786,25,849,23],[787,10,850,8,"cooldownReduction"],[787,27,850,25],[787,29,850,27],[788,8,851,6],[788,9,851,7],[789,8,852,6,"position"],[789,16,852,14],[789,18,852,16,"zoneEnemy"],[789,27,852,25],[789,28,852,26,"position"],[789,36,852,34],[790,8,853,6,"lastDamaged"],[790,19,853,17],[790,21,853,19],[790,22,853,20],[791,8,854,6],[792,8,855,6,"zoneTypeId"],[792,18,855,16],[792,20,855,18,"zoneEnemy"],[792,29,855,27],[792,30,855,28,"typeId"],[792,36,855,34],[793,8,856,6,"zoneXP"],[793,14,856,12],[793,16,856,14,"zoneEnemy"],[793,25,856,23],[793,26,856,24,"xp"],[794,6,857,4],[794,7,857,5],[795,6,859,4,"console"],[795,13,859,11],[795,14,859,12,"log"],[795,17,859,15],[795,18,859,16],[795,42,859,40,"combatEnemy"],[795,53,859,51],[795,54,859,52,"name"],[795,58,859,56],[795,67,859,65,"combatEnemy"],[795,78,859,76],[795,79,859,77,"health"],[795,85,859,83],[795,100,859,98,"currentZone"],[795,111,859,109],[795,113,859,111,"id"],[795,115,859,113],[795,125,859,123,"currentZoneLevel"],[795,141,859,139],[795,143,859,141,"level"],[795,148,859,146],[795,150,859,148],[795,151,859,149],[796,6,860,4,"state"],[796,11,860,9],[796,12,860,10,"enemies"],[796,19,860,17],[796,20,860,18,"push"],[796,24,860,22],[796,25,860,23,"combatEnemy"],[796,36,860,34],[796,37,860,35],[797,4,861,2],[797,5,861,3],[799,4,863,2],[800,4,864,2],[800,8,864,8,"spawnBasicTestEnemy"],[800,27,864,27],[800,30,864,31,"state"],[800,35,864,49],[800,39,864,54],[801,6,865,4],[801,10,865,10,"SCREEN_WIDTH"],[801,22,865,22],[801,25,865,25],[801,28,865,28],[802,6,866,4],[802,10,866,10,"GAME_AREA_HEIGHT"],[802,26,866,26],[802,29,866,29],[802,32,866,32],[802,35,866,35],[802,38,866,38],[803,6,867,4],[803,10,867,10,"ENEMY_SIZE"],[803,20,867,20],[803,23,867,23],[803,25,867,25],[804,6,869,4],[804,10,869,10,"x"],[804,11,869,11],[804,14,869,14,"Math"],[804,18,869,18],[804,19,869,19,"random"],[804,25,869,25],[804,26,869,26],[804,27,869,27],[804,31,869,31,"SCREEN_WIDTH"],[804,43,869,43],[804,46,869,46,"ENEMY_SIZE"],[804,56,869,56],[804,59,869,59],[804,60,869,60],[804,61,869,61],[804,64,869,64,"ENEMY_SIZE"],[804,74,869,74],[805,6,870,4],[805,10,870,10,"y"],[805,11,870,11],[805,14,870,14,"Math"],[805,18,870,18],[805,19,870,19,"random"],[805,25,870,25],[805,26,870,26],[805,27,870,27],[805,31,870,31,"GAME_AREA_HEIGHT"],[805,47,870,47],[805,50,870,50,"ENEMY_SIZE"],[805,60,870,60],[805,63,870,63],[805,64,870,64],[805,65,870,65],[805,68,870,68,"ENEMY_SIZE"],[805,78,870,78],[806,6,872,4],[806,10,872,10,"enemy"],[806,15,872,28],[806,18,872,31],[807,8,873,6,"id"],[807,10,873,8],[807,12,873,10],[807,30,873,28,"Date"],[807,34,873,32],[807,35,873,33,"now"],[807,38,873,36],[807,39,873,37],[807,40,873,38],[807,44,873,42,"Math"],[807,48,873,46],[807,49,873,47,"random"],[807,55,873,53],[807,56,873,54],[807,57,873,55],[807,59,873,57],[808,8,874,6,"name"],[808,12,874,10],[808,14,874,12],[808,26,874,24,"Math"],[808,30,874,28],[808,31,874,29,"floor"],[808,36,874,34],[808,37,874,35,"Math"],[808,41,874,39],[808,42,874,40,"random"],[808,48,874,46],[808,49,874,47],[808,50,874,48],[808,53,874,51],[808,56,874,54],[808,57,874,55],[808,59,874,57],[809,8,875,6,"health"],[809,14,875,12],[809,16,875,14],[809,18,875,16],[810,8,876,6,"maxHealth"],[810,17,876,15],[810,19,876,17],[810,21,876,19],[811,8,877,6,"stats"],[811,13,877,11],[811,15,877,13],[812,10,878,8,"attack"],[812,16,878,14],[812,18,878,16],[812,20,878,18],[813,10,879,8,"defense"],[813,17,879,15],[813,19,879,17],[813,21,879,19],[814,10,880,8,"health"],[814,16,880,14],[814,18,880,16],[814,20,880,18],[815,10,881,8,"maxHealth"],[815,19,881,17],[815,21,881,19],[815,23,881,21],[816,10,882,8,"critChance"],[816,20,882,18],[816,22,882,20],[816,23,882,21],[817,10,883,8,"critDamage"],[817,20,883,18],[817,22,883,20],[817,25,883,23],[818,10,884,8,"cooldownReduction"],[818,27,884,25],[818,29,884,27],[819,8,885,6],[819,9,885,7],[820,8,886,6,"position"],[820,16,886,14],[820,18,886,16],[821,10,886,18,"x"],[821,11,886,19],[822,10,886,21,"y"],[823,8,886,23],[823,9,886,24],[824,8,887,6,"lastDamaged"],[824,19,887,17],[824,21,887,19],[825,6,888,4],[825,7,888,5],[826,6,890,4,"console"],[826,13,890,11],[826,14,890,12,"log"],[826,17,890,15],[826,18,890,16],[826,42,890,40,"enemy"],[826,47,890,45],[826,48,890,46,"name"],[826,52,890,50],[826,60,890,58,"Math"],[826,64,890,62],[826,65,890,63,"round"],[826,70,890,68],[826,71,890,69,"x"],[826,72,890,70],[826,73,890,71],[826,78,890,76,"Math"],[826,82,890,80],[826,83,890,81,"round"],[826,88,890,86],[826,89,890,87,"y"],[826,90,890,88],[826,91,890,89],[826,94,890,92],[826,95,890,93],[827,6,891,4,"state"],[827,11,891,9],[827,12,891,10,"enemies"],[827,19,891,17],[827,20,891,18,"push"],[827,24,891,22],[827,25,891,23,"enemy"],[827,30,891,28],[827,31,891,29],[828,4,892,2],[828,5,892,3],[830,4,894,2],[831,4,895,2],[832,4,896,2],[832,8,896,8,"startCombat"],[832,19,896,19],[832,22,896,22,"React"],[832,27,896,27],[832,28,896,27,"default"],[832,35,896,27],[832,36,896,28,"useCallback"],[832,47,896,39],[832,48,896,40],[832,54,896,46],[833,6,897,4,"console"],[833,13,897,11],[833,14,897,12,"log"],[833,17,897,15],[833,18,897,16],[833,63,897,61],[833,64,897,62],[834,6,898,4,"setCombatState"],[834,20,898,18],[834,21,898,19,"prev"],[834,25,898,23],[834,30,898,28],[835,8,898,30],[835,11,898,33,"prev"],[835,15,898,37],[836,8,898,39,"isInCombat"],[836,18,898,49],[836,20,898,51],[837,6,898,56],[837,7,898,57],[837,8,898,58],[837,9,898,59],[839,6,900,4],[840,6,901,4,"combatEngine"],[840,25,901,16],[840,26,901,16,"combatEngine"],[840,38,901,16],[840,39,901,17,"addTickCallback"],[840,54,901,32],[840,55,901,33,"handleCombatTick"],[840,71,901,49],[840,72,901,50],[841,6,902,4,"console"],[841,13,902,11],[841,14,902,12,"log"],[841,17,902,15],[841,18,902,16],[841,62,902,60],[841,63,902,61],[843,6,904,4],[844,6,905,4,"combatEngine"],[844,25,905,16],[844,26,905,16,"combatEngine"],[844,38,905,16],[844,39,905,17,"start"],[844,44,905,22],[844,45,905,23],[844,46,905,24],[845,4,906,2],[845,5,906,3],[845,7,906,5],[845,8,906,6,"combatEngine"],[845,27,906,18],[845,28,906,18,"combatEngine"],[845,40,906,18],[845,42,906,20,"handleCombatTick"],[845,58,906,36],[845,59,906,37],[845,60,906,38],[847,4,908,2],[848,4,909,2],[848,8,909,8,"stopCombat"],[848,18,909,18],[848,21,909,21,"React"],[848,26,909,26],[848,27,909,26,"default"],[848,34,909,26],[848,35,909,27,"useCallback"],[848,46,909,38],[848,47,909,39],[848,53,909,45],[849,6,910,4,"setCombatState"],[849,20,910,18],[849,21,910,19,"prev"],[849,25,910,23],[849,30,910,28],[850,8,910,30],[850,11,910,33,"prev"],[850,15,910,37],[851,8,910,39,"isInCombat"],[851,18,910,49],[851,20,910,51],[852,6,910,57],[852,7,910,58],[852,8,910,59],[852,9,910,60],[853,6,911,4,"combatEngine"],[853,25,911,16],[853,26,911,16,"combatEngine"],[853,38,911,16],[853,39,911,17,"removeTickCallback"],[853,57,911,35],[853,58,911,36,"handleCombatTick"],[853,74,911,52],[853,75,911,53],[854,4,912,2],[854,5,912,3],[854,7,912,5],[854,8,912,6,"combatEngine"],[854,27,912,18],[854,28,912,18,"combatEngine"],[854,40,912,18],[854,42,912,20,"handleCombatTick"],[854,58,912,36],[854,59,912,37],[854,60,912,38],[856,4,914,2],[857,4,915,2],[857,8,915,8,"equipAbility"],[857,20,915,20],[857,23,915,23,"equipAbility"],[857,24,915,24,"abilityId"],[857,33,915,41],[857,35,915,43,"slotIndex"],[857,44,915,60],[857,49,915,74],[858,6,916,4],[858,13,916,11,"combatState"],[858,24,916,22],[858,25,916,23,"abilityManager"],[858,39,916,37],[858,40,916,38,"equipAbility"],[858,52,916,50],[858,53,916,51,"abilityId"],[858,62,916,60],[858,64,916,62,"slotIndex"],[858,73,916,71],[858,74,916,72],[859,4,917,2],[859,5,917,3],[860,4,919,2],[860,8,919,8,"getDeck"],[860,15,919,15],[860,18,919,18,"getDeck"],[860,19,919,18],[860,24,919,24],[861,6,920,4],[861,13,920,11,"combatState"],[861,24,920,22],[861,25,920,23,"abilityManager"],[861,39,920,37],[861,40,920,38,"getDeck"],[861,47,920,45],[861,48,920,46],[861,49,920,47],[862,4,921,2],[862,5,921,3],[863,4,923,2],[863,8,923,8,"getAvailableAbilities"],[863,29,923,29],[863,32,923,32,"getAvailableAbilities"],[863,33,923,32],[863,38,923,38],[864,6,924,4],[864,13,924,11,"combatState"],[864,24,924,22],[864,25,924,23,"abilityManager"],[864,39,924,37],[864,40,924,38,"getAvailableAbilities"],[864,61,924,59],[864,62,924,60],[864,63,924,61],[865,4,925,2],[865,5,925,3],[866,4,927,2],[866,8,927,8,"upgradeAbility"],[866,22,927,22],[866,25,927,26,"abilityId"],[866,34,927,43],[866,38,927,57],[867,6,928,4],[867,13,928,11,"combatState"],[867,24,928,22],[867,25,928,23,"abilityManager"],[867,39,928,37],[867,40,928,38,"upgradeAbility"],[867,54,928,52],[867,55,928,53,"abilityId"],[867,64,928,62],[867,65,928,63],[868,4,929,2],[868,5,929,3],[870,4,931,2],[871,4,932,2],[871,8,932,8,"clearAllEnemies"],[871,23,932,23],[871,26,932,26,"clearAllEnemies"],[871,27,932,26],[871,32,932,32],[872,6,933,4,"console"],[872,13,933,11],[872,14,933,12,"log"],[872,17,933,15],[872,18,933,16],[872,67,933,65],[872,68,933,66],[873,6,934,4,"setCombatState"],[873,20,934,18],[873,21,934,19,"prev"],[873,25,934,23],[873,30,934,28],[874,8,935,6],[874,11,935,9,"prev"],[874,15,935,13],[875,8,936,6,"enemies"],[875,15,936,13],[875,17,936,15],[876,6,937,4],[876,7,937,5],[876,8,937,6],[876,9,937,7],[877,4,938,2],[877,5,938,3],[879,4,940,2],[880,4,941,2],[882,4,943,2],[883,4,944,2],[883,8,944,8,"spawnEnemy"],[883,18,944,18],[883,21,944,22,"position"],[883,29,944,57],[883,33,944,75],[884,6,945,4],[884,10,945,10,"SCREEN_WIDTH"],[884,22,945,22],[884,25,945,25],[884,28,945,28],[885,6,946,4],[885,10,946,10,"GAME_AREA_HEIGHT"],[885,26,946,26],[885,29,946,29],[885,32,946,32],[885,35,946,35],[885,38,946,38],[885,39,946,39],[885,40,946,40],[886,6,947,4],[886,10,947,10,"ENEMY_SIZE"],[886,20,947,20],[886,23,947,23],[886,25,947,25],[888,6,949,4],[889,6,950,4],[889,10,950,10,"x"],[889,11,950,11],[889,14,950,14,"position"],[889,22,950,22],[889,24,950,24,"x"],[889,25,950,25],[889,29,950,29,"Math"],[889,33,950,33],[889,34,950,34,"random"],[889,40,950,40],[889,41,950,41],[889,42,950,42],[889,46,950,46,"SCREEN_WIDTH"],[889,58,950,58],[889,61,950,61,"ENEMY_SIZE"],[889,71,950,71],[889,74,950,74],[889,75,950,75],[889,76,950,76],[889,79,950,79,"ENEMY_SIZE"],[889,89,950,89],[890,6,951,4],[890,10,951,10,"y"],[890,11,951,11],[890,14,951,14,"position"],[890,22,951,22],[890,24,951,24,"y"],[890,25,951,25],[890,29,951,29,"Math"],[890,33,951,33],[890,34,951,34,"random"],[890,40,951,40],[890,41,951,41],[890,42,951,42],[890,46,951,46,"GAME_AREA_HEIGHT"],[890,62,951,62],[890,65,951,65,"ENEMY_SIZE"],[890,75,951,75],[890,78,951,78],[890,79,951,79],[890,80,951,80],[890,83,951,83,"ENEMY_SIZE"],[890,93,951,93],[891,6,953,4],[891,10,953,10,"enemy"],[891,15,953,28],[891,18,953,31],[892,8,954,6,"id"],[892,10,954,8],[892,12,954,10],[892,21,954,19],[892,23,954,21,"enemyCounter"],[892,35,954,33],[892,37,954,35],[893,8,955,6,"name"],[893,12,955,10],[893,14,955,12],[893,24,955,22],[894,8,956,6,"health"],[894,14,956,12],[894,16,956,14],[894,19,956,17],[895,8,957,6,"maxHealth"],[895,17,957,15],[895,19,957,17],[895,22,957,20],[896,8,958,6,"stats"],[896,13,958,11],[896,15,958,13],[897,10,959,8,"attack"],[897,16,959,14],[897,18,959,16],[897,20,959,18],[898,10,960,8,"defense"],[898,17,960,15],[898,19,960,17],[898,21,960,19],[899,10,961,8,"health"],[899,16,961,14],[899,18,961,16],[899,21,961,19],[900,10,962,8,"maxHealth"],[900,19,962,17],[900,21,962,19],[900,24,962,22],[901,10,963,8,"critChance"],[901,20,963,18],[901,22,963,20],[901,23,963,21],[902,10,964,8,"critDamage"],[902,20,964,18],[902,22,964,20],[902,25,964,23],[903,10,965,8,"cooldownReduction"],[903,27,965,25],[903,29,965,27],[904,8,966,6],[904,9,966,7],[905,8,967,6,"position"],[905,16,967,14],[905,18,967,16],[906,10,967,18,"x"],[906,11,967,19],[907,10,967,21,"y"],[908,8,967,23],[908,9,967,24],[909,8,968,6,"lastDamaged"],[909,19,968,17],[909,21,968,19],[910,6,969,4],[910,7,969,5],[911,6,971,4,"setCombatState"],[911,20,971,18],[911,21,971,19,"prev"],[911,25,971,23],[911,30,971,28],[912,8,972,6],[912,11,972,9,"prev"],[912,15,972,13],[913,8,973,6,"enemies"],[913,15,973,13],[913,17,973,15],[913,18,973,16],[913,21,973,19,"prev"],[913,25,973,23],[913,26,973,24,"enemies"],[913,33,973,31],[913,35,973,33,"enemy"],[913,40,973,38],[914,6,974,4],[914,7,974,5],[914,8,974,6],[914,9,974,7],[915,6,976,4],[915,13,976,11,"enemy"],[915,18,976,16],[916,4,977,2],[916,5,977,3],[918,4,979,2],[919,4,980,2],[919,8,980,8,"spawnBoss"],[919,17,980,17],[919,20,980,21,"bossEnemy"],[919,29,980,43],[919,33,980,48],[920,6,981,4,"console"],[920,13,981,11],[920,14,981,12,"log"],[920,17,981,15],[920,18,981,16],[920,39,981,37,"bossEnemy"],[920,48,981,46],[920,49,981,47,"name"],[920,53,981,51],[920,90,981,88],[920,91,981,89],[921,6,982,4,"setCombatState"],[921,20,982,18],[921,21,982,19,"prev"],[921,25,982,23],[921,30,982,28],[922,8,983,6],[922,11,983,9,"prev"],[922,15,983,13],[923,8,984,6,"enemies"],[923,15,984,13],[923,17,984,15],[923,18,984,16,"bossEnemy"],[923,27,984,25],[923,28,984,26],[923,29,984,27],[924,6,985,4],[924,7,985,5],[924,8,985,6],[924,9,985,7],[925,4,986,2],[925,5,986,3],[927,4,988,2],[928,4,989,2],[928,8,989,8,"clearSpecificEnemy"],[928,26,989,26],[928,29,989,30,"enemyId"],[928,36,989,45],[928,40,989,50],[929,6,990,4,"setCombatState"],[929,20,990,18],[929,21,990,19,"prev"],[929,25,990,23],[929,30,990,28],[930,8,991,6],[930,11,991,9,"prev"],[930,15,991,13],[931,8,992,6,"enemies"],[931,15,992,13],[931,17,992,15,"prev"],[931,21,992,19],[931,22,992,20,"enemies"],[931,29,992,27],[931,30,992,28,"filter"],[931,36,992,34],[931,37,992,35,"enemy"],[931,42,992,40],[931,46,992,44,"enemy"],[931,51,992,49],[931,52,992,50,"id"],[931,54,992,52],[931,59,992,57,"enemyId"],[931,66,992,64],[932,6,993,4],[932,7,993,5],[932,8,993,6],[932,9,993,7],[933,4,994,2],[933,5,994,3],[935,4,996,2],[936,4,997,2],[936,8,997,8,"useAbilityManually"],[936,26,997,26],[936,29,997,26,"_s3"],[936,32,997,26],[936,33,997,29],[936,37,997,29,"useCallback"],[936,43,997,40],[936,44,997,40,"useCallback"],[936,55,997,40],[936,57,997,40,"_s3"],[936,60,997,40],[936,61,997,42,"slotIndex"],[936,70,997,59],[936,74,997,73],[937,6,997,73,"_s3"],[937,9,997,73],[938,6,998,4,"console"],[938,13,998,11],[938,14,998,12,"log"],[938,17,998,15],[938,18,998,16],[938,64,998,62,"slotIndex"],[938,73,998,71],[938,82,998,80],[938,83,998,81],[939,6,999,4,"console"],[939,13,999,11],[939,14,999,12,"log"],[939,17,999,15],[939,18,999,16],[939,65,999,63,"slotIndex"],[939,74,999,72],[939,76,999,74],[939,77,999,75],[940,6,1000,4,"console"],[940,13,1000,11],[940,14,1000,12,"log"],[940,17,1000,15],[940,18,1000,16],[940,53,1000,51,"slotIndex"],[940,62,1000,60],[940,64,1000,62],[940,65,1000,63],[942,6,1002,4],[943,6,1003,4],[943,10,1003,8],[943,11,1003,9,"game"],[943,15,1003,13],[943,16,1003,14,"gameState"],[943,25,1003,23],[943,26,1003,24,"isAlive"],[943,33,1003,31],[943,35,1003,33],[944,8,1004,6,"console"],[944,15,1004,13],[944,16,1004,14,"log"],[944,19,1004,17],[944,20,1004,18],[944,70,1004,68],[944,71,1004,69],[945,8,1005,6],[945,15,1005,13],[945,20,1005,18],[946,6,1006,4],[948,6,1008,4],[949,6,1009,4],[949,10,1009,10,"isReady"],[949,17,1009,17],[949,20,1009,20,"combatState"],[949,31,1009,31],[949,32,1009,32,"abilityManager"],[949,46,1009,46],[949,47,1009,47,"isAbilityReady"],[949,61,1009,61],[949,62,1009,62,"slotIndex"],[949,71,1009,71],[949,72,1009,72],[950,6,1010,4],[950,10,1010,8],[950,11,1010,9,"isReady"],[950,18,1010,16],[950,20,1010,18],[951,8,1011,6,"console"],[951,15,1011,13],[951,16,1011,14,"log"],[951,19,1011,17],[951,20,1011,18],[951,41,1011,39,"slotIndex"],[951,50,1011,48],[951,85,1011,83],[951,86,1011,84],[952,8,1012,6],[952,15,1012,13],[952,20,1012,18],[953,6,1013,4],[955,6,1015,4],[956,6,1016,4],[956,10,1016,8,"combatState"],[956,21,1016,19],[956,22,1016,20,"enemies"],[956,29,1016,27],[956,30,1016,28,"length"],[956,36,1016,34],[956,41,1016,39],[956,42,1016,40],[956,44,1016,42],[957,8,1017,6,"console"],[957,15,1017,13],[957,16,1017,14,"log"],[957,19,1017,17],[957,20,1017,18],[957,69,1017,67],[957,70,1017,68],[958,8,1018,6],[958,15,1018,13],[958,20,1018,18],[959,6,1019,4],[961,6,1021,4],[962,6,1022,4],[962,10,1022,10,"currentTick"],[962,21,1022,21],[962,24,1022,24,"combatEngine"],[962,43,1022,36],[962,44,1022,36,"combatEngine"],[962,56,1022,36],[962,57,1022,37,"getCurrentTick"],[962,71,1022,51],[962,72,1022,52],[962,73,1022,53],[963,6,1023,4],[963,10,1023,10,"success"],[963,17,1023,17],[963,20,1023,20,"combatState"],[963,31,1023,31],[963,32,1023,32,"abilityManager"],[963,46,1023,46],[963,47,1023,47,"useAbility"],[963,57,1023,57],[963,58,1023,58,"slotIndex"],[963,67,1023,67],[963,69,1023,69,"currentTick"],[963,80,1023,80],[963,81,1023,81],[964,6,1025,4],[964,10,1025,8,"success"],[964,17,1025,15],[964,19,1025,17],[965,8,1026,6],[966,8,1027,6,"setCombatState"],[966,22,1027,20],[966,23,1027,21,"prev"],[966,27,1027,25],[966,31,1027,29],[967,10,1028,8],[967,14,1028,14,"newState"],[967,22,1028,22],[967,25,1028,25],[968,12,1028,27],[968,15,1028,30,"prev"],[969,10,1028,35],[969,11,1028,36],[970,10,1029,8,"castAbility"],[970,21,1029,19],[970,22,1029,20,"newState"],[970,30,1029,28],[970,32,1029,30,"slotIndex"],[970,41,1029,39],[970,42,1029,40],[971,10,1030,8],[971,17,1030,15,"newState"],[971,25,1030,23],[972,8,1031,6],[972,9,1031,7],[972,10,1031,8],[973,8,1033,6,"console"],[973,15,1033,13],[973,16,1033,14,"log"],[973,19,1033,17],[973,20,1033,18],[973,65,1033,63,"slotIndex"],[973,74,1033,72],[973,76,1033,74],[973,77,1033,75],[974,8,1034,6],[974,15,1034,13],[974,19,1034,17],[975,6,1035,4],[975,7,1035,5],[975,13,1035,11],[976,8,1036,6,"console"],[976,15,1036,13],[976,16,1036,14,"log"],[976,19,1036,17],[976,20,1036,18],[976,61,1036,59,"slotIndex"],[976,70,1036,68],[976,72,1036,70],[976,73,1036,71],[977,8,1037,6],[977,15,1037,13],[977,20,1037,18],[978,6,1038,4],[979,4,1039,2],[979,5,1039,3],[979,46,1039,5],[979,47,1039,6,"combatState"],[979,58,1039,17],[979,59,1039,18,"abilityManager"],[979,73,1039,32],[979,75,1039,34,"combatState"],[979,86,1039,45],[979,87,1039,46,"enemies"],[979,94,1039,53],[979,95,1039,54],[979,96,1039,55],[980,4,1040,2],[980,8,1040,2,"useEffect"],[980,14,1040,11],[980,15,1040,11,"useEffect"],[980,24,1040,11],[980,26,1040,12],[980,32,1040,18],[981,6,1041,4,"combatEngine"],[981,25,1041,16],[981,26,1041,16,"combatEngine"],[981,38,1041,16],[981,39,1041,17,"start"],[981,44,1041,22],[981,45,1041,23],[981,46,1041,24],[983,6,1043,4],[984,6,1044,4],[985,6,1045,4,"console"],[985,13,1045,11],[985,14,1045,12,"log"],[985,17,1045,15],[985,18,1045,16],[985,97,1045,95],[985,98,1045,96],[986,6,1047,4],[986,13,1047,11],[986,19,1047,17],[987,8,1048,6,"combatEngine"],[987,27,1048,18],[987,28,1048,18,"combatEngine"],[987,40,1048,18],[987,41,1048,19,"stop"],[987,45,1048,23],[987,46,1048,24],[987,47,1048,25],[988,6,1049,4],[988,7,1049,5],[989,4,1050,2],[989,5,1050,3],[989,7,1050,5],[989,9,1050,7],[989,10,1050,8],[991,4,1052,2],[992,4,1053,2],[992,8,1053,2,"useEffect"],[992,14,1053,11],[992,15,1053,11,"useEffect"],[992,24,1053,11],[992,26,1053,12],[992,32,1053,18],[993,6,1054,4],[993,10,1054,10,"processProjectileImpacts"],[993,34,1054,34],[993,37,1054,37,"processProjectileImpacts"],[993,38,1054,37],[993,43,1054,43],[994,8,1055,6,"setProjectiles"],[994,22,1055,20],[994,23,1055,21,"currentProjectiles"],[994,41,1055,39],[994,45,1055,43],[995,10,1056,8],[995,17,1056,15,"currentProjectiles"],[995,35,1056,33],[995,36,1056,34,"map"],[995,39,1056,37],[995,40,1056,38,"projectile"],[995,50,1056,48],[995,54,1056,52],[996,12,1057,10],[996,16,1057,14],[996,17,1057,15,"projectile"],[996,27,1057,25],[996,29,1057,27],[996,36,1057,34],[996,40,1057,38],[998,12,1059,10],[999,12,1060,10],[999,16,1060,16,"currentTime"],[999,27,1060,27],[999,30,1060,30,"Date"],[999,34,1060,34],[999,35,1060,35,"now"],[999,38,1060,38],[999,39,1060,39],[999,40,1060,40],[1000,12,1061,10],[1000,16,1061,16,"startTime"],[1000,25,1061,25],[1000,28,1061,28,"projectile"],[1000,38,1061,38],[1000,39,1061,39,"startTime"],[1000,48,1061,48],[1000,52,1061,52,"currentTime"],[1000,63,1061,63],[1001,12,1062,10],[1001,16,1062,16,"elapsedTime"],[1001,27,1062,27],[1001,30,1062,30,"currentTime"],[1001,41,1062,41],[1001,44,1062,44,"startTime"],[1001,53,1062,53],[1002,12,1063,10],[1002,16,1063,16,"progress"],[1002,24,1063,24],[1002,27,1063,27,"Math"],[1002,31,1063,31],[1002,32,1063,32,"min"],[1002,35,1063,35],[1002,36,1063,36,"elapsedTime"],[1002,47,1063,47],[1002,51,1063,51,"projectile"],[1002,61,1063,61],[1002,62,1063,62,"duration"],[1002,70,1063,70],[1002,74,1063,74],[1002,77,1063,77],[1002,78,1063,78],[1002,80,1063,80],[1002,81,1063,81],[1002,82,1063,82],[1004,12,1065,10],[1005,12,1066,10],[1005,16,1066,14,"progress"],[1005,24,1066,22],[1005,28,1066,26],[1005,29,1066,27],[1005,33,1066,31],[1005,34,1066,32,"projectile"],[1005,44,1066,42],[1005,45,1066,43,"hasHit"],[1005,51,1066,49],[1005,53,1066,51],[1006,14,1067,12,"projectile"],[1006,24,1067,22],[1006,25,1067,23,"hasHit"],[1006,31,1067,29],[1006,34,1067,32],[1006,38,1067,36],[1007,14,1069,12,"console"],[1007,21,1069,19],[1007,22,1069,20,"log"],[1007,25,1069,23],[1007,26,1069,24],[1007,51,1069,49,"projectile"],[1007,61,1069,59],[1007,62,1069,60,"abilityName"],[1007,73,1069,71],[1007,97,1069,95],[1007,98,1069,96],[1008,14,1070,12,"setCombatState"],[1008,28,1070,26],[1008,29,1070,27,"prev"],[1008,33,1070,31],[1008,37,1070,35],[1009,16,1071,14],[1009,20,1071,20,"newState"],[1009,28,1071,28],[1009,31,1071,31],[1010,18,1071,33],[1010,21,1071,36,"prev"],[1011,16,1071,41],[1011,17,1071,42],[1012,16,1073,14],[1012,20,1073,18,"projectile"],[1012,30,1073,28],[1012,31,1073,29,"isAOE"],[1012,36,1073,34],[1012,40,1073,38,"projectile"],[1012,50,1073,48],[1012,51,1073,49,"aoeRadius"],[1012,60,1073,58],[1012,64,1073,62,"projectile"],[1012,74,1073,72],[1012,75,1073,73,"aoeRadius"],[1012,84,1073,82],[1012,87,1073,85],[1012,88,1073,86],[1012,90,1073,88],[1013,18,1074,16],[1014,18,1075,16,"console"],[1014,25,1075,23],[1014,26,1075,24,"log"],[1014,29,1075,27],[1014,30,1075,28],[1014,59,1075,57,"projectile"],[1014,69,1075,67],[1014,70,1075,68,"abilityName"],[1014,81,1075,79],[1014,97,1075,95,"projectile"],[1014,107,1075,105],[1014,108,1075,106,"aoeRadius"],[1014,117,1075,115],[1014,119,1075,117],[1014,120,1075,118],[1015,18,1077,16],[1015,22,1077,22,"impactX"],[1015,29,1077,29],[1015,32,1077,32,"projectile"],[1015,42,1077,42],[1015,43,1077,43,"targetX"],[1015,50,1077,50],[1016,18,1078,16],[1016,22,1078,22,"impactY"],[1016,29,1078,29],[1016,32,1078,32,"projectile"],[1016,42,1078,42],[1016,43,1078,43,"targetY"],[1016,50,1078,50],[1017,18,1079,16],[1017,22,1079,22,"enemiesKilled"],[1017,35,1079,50],[1017,38,1079,53],[1017,40,1079,55],[1019,18,1081,16],[1020,18,1082,16,"newState"],[1020,26,1082,24],[1020,27,1082,25,"enemies"],[1020,34,1082,32],[1020,37,1082,35,"newState"],[1020,45,1082,43],[1020,46,1082,44,"enemies"],[1020,53,1082,51],[1020,54,1082,52,"map"],[1020,57,1082,55],[1020,58,1082,56,"enemy"],[1020,63,1082,61],[1020,67,1082,65],[1021,20,1083,18],[1021,24,1083,22,"enemy"],[1021,29,1083,27],[1021,30,1083,28,"health"],[1021,36,1083,34],[1021,40,1083,38],[1021,41,1083,39],[1021,45,1083,43,"enemy"],[1021,50,1083,48],[1021,51,1083,49,"markedForDeath"],[1021,65,1083,63],[1021,67,1083,65],[1021,74,1083,72,"enemy"],[1021,79,1083,77],[1022,20,1085,18],[1022,24,1085,24,"enemyX"],[1022,30,1085,30],[1022,33,1085,33,"enemy"],[1022,38,1085,38],[1022,39,1085,39,"position"],[1022,47,1085,47],[1022,48,1085,48,"x"],[1022,49,1085,49],[1022,52,1085,52],[1022,56,1085,56],[1022,57,1085,57],[1022,58,1085,58],[1023,20,1086,18],[1023,24,1086,24,"enemyY"],[1023,30,1086,30],[1023,33,1086,33,"enemy"],[1023,38,1086,38],[1023,39,1086,39,"position"],[1023,47,1086,47],[1023,48,1086,48,"y"],[1023,49,1086,49],[1023,52,1086,52],[1023,56,1086,56],[1024,20,1087,18],[1024,24,1087,24,"distance"],[1024,32,1087,32],[1024,35,1087,35,"Math"],[1024,39,1087,39],[1024,40,1087,40,"sqrt"],[1024,44,1087,44],[1024,45,1087,45,"Math"],[1024,49,1087,49],[1024,50,1087,50,"pow"],[1024,53,1087,53],[1024,54,1087,54,"enemyX"],[1024,60,1087,60],[1024,63,1087,63,"impactX"],[1024,70,1087,70],[1024,72,1087,72],[1024,73,1087,73],[1024,74,1087,74],[1024,77,1087,77,"Math"],[1024,81,1087,81],[1024,82,1087,82,"pow"],[1024,85,1087,85],[1024,86,1087,86,"enemyY"],[1024,92,1087,92],[1024,95,1087,95,"impactY"],[1024,102,1087,102],[1024,104,1087,104],[1024,105,1087,105],[1024,106,1087,106],[1024,107,1087,107],[1025,20,1089,18,"console"],[1025,27,1089,25],[1025,28,1089,26,"log"],[1025,31,1089,29],[1025,32,1089,30],[1025,58,1089,56,"enemy"],[1025,63,1089,61],[1025,64,1089,62,"name"],[1025,68,1089,66],[1025,76,1089,74,"enemyX"],[1025,82,1089,80],[1025,87,1089,85,"enemyY"],[1025,93,1089,91],[1025,109,1089,107,"impactX"],[1025,116,1089,114],[1025,121,1089,119,"impactY"],[1025,128,1089,126],[1025,135,1089,133,"distance"],[1025,143,1089,141],[1025,144,1089,142,"toFixed"],[1025,151,1089,149],[1025,152,1089,150],[1025,153,1089,151],[1025,154,1089,152],[1025,169,1089,167,"projectile"],[1025,179,1089,177],[1025,180,1089,178,"aoeRadius"],[1025,189,1089,187],[1025,194,1089,192],[1025,195,1089,193],[1026,20,1091,18],[1026,24,1091,22,"distance"],[1026,32,1091,30],[1026,36,1091,34,"projectile"],[1026,46,1091,44],[1026,47,1091,45,"aoeRadius"],[1026,56,1091,54],[1026,58,1091,56],[1027,22,1092,20],[1028,22,1093,20],[1028,26,1093,26,"newHealth"],[1028,35,1093,35],[1028,38,1093,38,"Math"],[1028,42,1093,42],[1028,43,1093,43,"max"],[1028,46,1093,46],[1028,47,1093,47],[1028,48,1093,48],[1028,50,1093,50,"enemy"],[1028,55,1093,55],[1028,56,1093,56,"health"],[1028,62,1093,62],[1028,65,1093,65,"projectile"],[1028,75,1093,75],[1028,76,1093,76,"damage"],[1028,82,1093,82],[1028,83,1093,83],[1029,22,1095,20,"console"],[1029,29,1095,27],[1029,30,1095,28,"log"],[1029,33,1095,31],[1029,34,1095,32],[1029,52,1095,50,"enemy"],[1029,57,1095,55],[1029,58,1095,56,"name"],[1029,62,1095,60],[1029,74,1095,72,"projectile"],[1029,84,1095,82],[1029,85,1095,83,"damage"],[1029,91,1095,89],[1029,103,1095,101,"enemy"],[1029,108,1095,106],[1029,109,1095,107,"health"],[1029,115,1095,113],[1029,122,1095,120,"newHealth"],[1029,131,1095,129],[1029,134,1095,132],[1029,135,1095,133],[1031,22,1097,20],[1032,22,1098,20],[1032,26,1098,24,"newHealth"],[1032,35,1098,33],[1032,39,1098,37],[1032,40,1098,38],[1032,44,1098,42,"enemy"],[1032,49,1098,47],[1032,50,1098,48,"health"],[1032,56,1098,54],[1032,59,1098,57],[1032,60,1098,58],[1032,62,1098,60],[1033,24,1099,22,"console"],[1033,31,1099,29],[1033,32,1099,30,"log"],[1033,35,1099,33],[1033,36,1099,34],[1033,52,1099,50,"enemy"],[1033,57,1099,55],[1033,58,1099,56,"name"],[1033,62,1099,60],[1033,76,1099,74,"projectile"],[1033,86,1099,84],[1033,87,1099,85,"abilityName"],[1033,98,1099,96],[1033,101,1099,99],[1033,102,1099,100],[1034,24,1100,22,"enemiesKilled"],[1034,37,1100,35],[1034,38,1100,36,"push"],[1034,42,1100,40],[1034,43,1100,41,"enemy"],[1034,48,1100,46],[1034,49,1100,47],[1034,50,1100,48],[1034,51,1100,49],[1036,24,1102,22],[1036,31,1102,29],[1037,26,1103,24],[1037,29,1103,27,"enemy"],[1037,34,1103,32],[1038,26,1104,24,"health"],[1038,32,1104,30],[1038,34,1104,32],[1038,35,1104,33],[1039,26,1105,24,"markedForDeath"],[1039,40,1105,38],[1039,42,1105,40],[1039,46,1105,44],[1040,26,1106,24,"lastDamaged"],[1040,37,1106,35],[1040,39,1106,37,"combatEngine"],[1040,58,1106,49],[1040,59,1106,49,"combatEngine"],[1040,71,1106,49],[1040,72,1106,50,"getCurrentTick"],[1040,86,1106,64],[1040,87,1106,65],[1041,24,1107,22],[1041,25,1107,23],[1042,22,1108,20],[1042,23,1108,21],[1042,29,1108,27],[1043,24,1109,22],[1043,31,1109,29],[1044,26,1110,24],[1044,29,1110,27,"enemy"],[1044,34,1110,32],[1045,26,1111,24,"health"],[1045,32,1111,30],[1045,34,1111,32,"newHealth"],[1045,43,1111,41],[1046,26,1112,24,"lastDamaged"],[1046,37,1112,35],[1046,39,1112,37,"combatEngine"],[1046,58,1112,49],[1046,59,1112,49,"combatEngine"],[1046,71,1112,49],[1046,72,1112,50,"getCurrentTick"],[1046,86,1112,64],[1046,87,1112,65],[1047,24,1113,22],[1047,25,1113,23],[1048,22,1114,20],[1049,20,1115,18],[1050,20,1117,18],[1050,27,1117,25,"enemy"],[1050,32,1117,30],[1050,33,1117,31],[1050,34,1117,32],[1051,18,1118,16],[1051,19,1118,17],[1051,20,1118,18],[1053,18,1120,16],[1054,18,1121,16],[1054,22,1121,20,"enemiesKilled"],[1054,35,1121,33],[1054,36,1121,34,"length"],[1054,42,1121,40],[1054,45,1121,43],[1054,46,1121,44],[1054,48,1121,46],[1055,20,1122,18,"console"],[1055,27,1122,25],[1055,28,1122,26,"log"],[1055,31,1122,29],[1055,32,1122,30],[1055,52,1122,50,"enemiesKilled"],[1055,65,1122,63],[1055,66,1122,64,"length"],[1055,72,1122,70],[1055,94,1122,92,"projectile"],[1055,104,1122,102],[1055,105,1122,103,"abilityName"],[1055,116,1122,114],[1055,118,1122,116],[1055,119,1122,117],[1056,20,1123,18,"setTimeout"],[1056,30,1123,28],[1056,31,1123,29],[1056,37,1123,35],[1057,22,1124,20,"enemiesKilled"],[1057,35,1124,33],[1057,36,1124,34,"forEach"],[1057,43,1124,41],[1057,44,1124,42,"enemy"],[1057,49,1124,47],[1057,53,1124,51,"handleEnemyKill"],[1057,68,1124,66],[1057,69,1124,67,"enemy"],[1057,74,1124,72],[1057,75,1124,73],[1057,76,1124,74],[1058,20,1125,18],[1058,21,1125,19],[1058,23,1125,21],[1058,24,1125,22],[1058,25,1125,23],[1059,18,1126,16],[1060,16,1128,14],[1060,17,1128,15],[1060,23,1128,21],[1061,18,1129,16],[1062,18,1130,16],[1062,22,1130,22,"enemyIndex"],[1062,32,1130,32],[1062,35,1130,35,"newState"],[1062,43,1130,43],[1062,44,1130,44,"enemies"],[1062,51,1130,51],[1062,52,1130,52,"findIndex"],[1062,61,1130,61],[1062,62,1130,62,"e"],[1062,63,1130,63],[1062,67,1130,67,"e"],[1062,68,1130,68],[1062,69,1130,69,"id"],[1062,71,1130,71],[1062,76,1130,76,"projectile"],[1062,86,1130,86],[1062,87,1130,87,"targetEnemyId"],[1062,100,1130,100],[1062,101,1130,101],[1063,18,1132,16],[1063,22,1132,20,"enemyIndex"],[1063,32,1132,30],[1063,36,1132,34],[1063,37,1132,35],[1063,41,1132,39,"newState"],[1063,49,1132,47],[1063,50,1132,48,"enemies"],[1063,57,1132,55],[1063,58,1132,56,"enemyIndex"],[1063,68,1132,66],[1063,69,1132,67],[1063,70,1132,68,"health"],[1063,76,1132,74],[1063,79,1132,77],[1063,80,1132,78],[1063,84,1132,82],[1063,85,1132,83,"newState"],[1063,93,1132,91],[1063,94,1132,92,"enemies"],[1063,101,1132,99],[1063,102,1132,100,"enemyIndex"],[1063,112,1132,110],[1063,113,1132,111],[1063,114,1132,112,"markedForDeath"],[1063,128,1132,126],[1063,130,1132,128],[1064,20,1133,18,"newState"],[1064,28,1133,26],[1064,29,1133,27,"enemies"],[1064,36,1133,34],[1064,39,1133,37],[1064,40,1133,38],[1064,43,1133,41,"newState"],[1064,51,1133,49],[1064,52,1133,50,"enemies"],[1064,59,1133,57],[1064,60,1133,58],[1065,20,1134,18],[1065,24,1134,24,"enemy"],[1065,29,1134,29],[1065,32,1134,32,"newState"],[1065,40,1134,40],[1065,41,1134,41,"enemies"],[1065,48,1134,48],[1065,49,1134,49,"enemyIndex"],[1065,59,1134,59],[1065,60,1134,60],[1066,20,1135,18],[1066,24,1135,24,"newHealth"],[1066,33,1135,33],[1066,36,1135,36,"Math"],[1066,40,1135,40],[1066,41,1135,41,"max"],[1066,44,1135,44],[1066,45,1135,45],[1066,46,1135,46],[1066,48,1135,48,"enemy"],[1066,53,1135,53],[1066,54,1135,54,"health"],[1066,60,1135,60],[1066,63,1135,63,"projectile"],[1066,73,1135,73],[1066,74,1135,74,"damage"],[1066,80,1135,80],[1066,81,1135,81],[1067,20,1137,18,"newState"],[1067,28,1137,26],[1067,29,1137,27,"enemies"],[1067,36,1137,34],[1067,37,1137,35,"enemyIndex"],[1067,47,1137,45],[1067,48,1137,46],[1067,51,1137,49],[1068,22,1138,20],[1068,25,1138,23,"enemy"],[1068,30,1138,28],[1069,22,1139,20,"health"],[1069,28,1139,26],[1069,30,1139,28,"newHealth"],[1069,39,1139,37],[1070,22,1140,20,"lastDamaged"],[1070,33,1140,31],[1070,35,1140,33,"combatEngine"],[1070,54,1140,45],[1070,55,1140,45,"combatEngine"],[1070,67,1140,45],[1070,68,1140,46,"getCurrentTick"],[1070,82,1140,60],[1070,83,1140,61],[1071,20,1141,18],[1071,21,1141,19],[1072,20,1143,18,"console"],[1072,27,1143,25],[1072,28,1143,26,"log"],[1072,31,1143,29],[1072,32,1143,30],[1072,60,1143,58,"enemy"],[1072,65,1143,63],[1072,66,1143,64,"name"],[1072,70,1143,68],[1072,82,1143,80,"newHealth"],[1072,91,1143,89],[1072,95,1143,93,"enemy"],[1072,100,1143,98],[1072,101,1143,99,"maxHealth"],[1072,110,1143,108],[1072,112,1143,110],[1072,113,1143,111],[1074,20,1145,18],[1075,20,1146,18],[1075,24,1146,22,"newHealth"],[1075,33,1146,31],[1075,37,1146,35],[1075,38,1146,36],[1075,42,1146,40,"enemy"],[1075,47,1146,45],[1075,48,1146,46,"health"],[1075,54,1146,52],[1075,57,1146,55],[1075,58,1146,56],[1075,60,1146,58],[1076,22,1147,20,"console"],[1076,29,1147,27],[1076,30,1147,28,"log"],[1076,33,1147,31],[1076,34,1147,32],[1076,54,1147,52,"enemy"],[1076,59,1147,57],[1076,60,1147,58,"name"],[1076,64,1147,62],[1076,78,1147,76,"projectile"],[1076,88,1147,86],[1076,89,1147,87,"abilityName"],[1076,100,1147,98],[1076,136,1147,134],[1076,137,1147,135],[1078,22,1149,20],[1079,22,1150,20,"newState"],[1079,30,1150,28],[1079,31,1150,29,"enemies"],[1079,38,1150,36],[1079,39,1150,37,"enemyIndex"],[1079,49,1150,47],[1079,50,1150,48],[1079,53,1150,51],[1080,24,1151,22],[1080,27,1151,25,"newState"],[1080,35,1151,33],[1080,36,1151,34,"enemies"],[1080,43,1151,41],[1080,44,1151,42,"enemyIndex"],[1080,54,1151,52],[1080,55,1151,53],[1081,24,1152,22,"health"],[1081,30,1152,28],[1081,32,1152,30],[1081,33,1152,31],[1082,24,1153,22,"isDying"],[1082,31,1153,29],[1082,33,1153,31],[1082,37,1153,35],[1083,24,1154,22,"deathStartTime"],[1083,38,1154,36],[1083,40,1154,38,"Date"],[1083,44,1154,42],[1083,45,1154,43,"now"],[1083,48,1154,46],[1083,49,1154,47],[1084,22,1155,20],[1084,23,1155,21],[1085,20,1156,18],[1085,21,1156,19],[1085,27,1156,25],[1085,31,1156,29,"enemy"],[1085,36,1156,34],[1085,37,1156,35,"health"],[1085,43,1156,41],[1085,46,1156,44],[1085,47,1156,45],[1085,49,1156,47],[1086,22,1157,20,"console"],[1086,29,1157,27],[1086,30,1157,28,"log"],[1086,33,1157,31],[1086,34,1157,32],[1086,48,1157,46,"enemy"],[1086,53,1157,51],[1086,54,1157,52,"name"],[1086,58,1157,56],[1086,70,1157,68,"projectile"],[1086,80,1157,78],[1086,81,1157,79,"damage"],[1086,87,1157,85],[1086,99,1157,97,"enemy"],[1086,104,1157,102],[1086,105,1157,103,"health"],[1086,111,1157,109],[1086,117,1157,115,"newHealth"],[1086,126,1157,124],[1086,129,1157,127],[1086,130,1157,128],[1087,20,1158,18],[1088,18,1159,16],[1089,16,1160,14],[1090,16,1162,14],[1090,23,1162,21,"newState"],[1090,31,1162,29],[1091,14,1163,12],[1091,15,1163,13],[1091,16,1163,14],[1092,12,1164,10],[1094,12,1166,10],[1095,12,1167,10],[1095,16,1167,14,"progress"],[1095,24,1167,22],[1095,28,1167,26],[1095,31,1167,29],[1095,33,1167,31],[1096,14,1168,12],[1096,21,1168,19],[1096,25,1168,23],[1097,12,1169,10],[1098,12,1171,10],[1098,19,1171,17,"projectile"],[1098,29,1171,27],[1099,10,1172,8],[1099,11,1172,9],[1099,12,1172,10],[1099,13,1172,11,"filter"],[1099,19,1172,17],[1099,20,1172,18,"Boolean"],[1099,27,1172,25],[1099,28,1172,26],[1100,8,1173,6],[1100,9,1173,7],[1100,10,1173,8],[1101,6,1174,4],[1101,7,1174,5],[1103,6,1176,4],[1104,6,1177,4],[1104,10,1177,10,"impactInterval"],[1104,24,1177,24],[1104,27,1177,27,"setInterval"],[1104,38,1177,38],[1104,39,1177,39,"processProjectileImpacts"],[1104,63,1177,63],[1104,65,1177,65],[1104,67,1177,67],[1104,68,1177,68],[1105,6,1178,4],[1105,13,1178,11],[1105,19,1178,17,"clearInterval"],[1105,32,1178,30],[1105,33,1178,31,"impactInterval"],[1105,47,1178,45],[1105,48,1178,46],[1106,4,1179,2],[1106,5,1179,3],[1106,7,1179,5],[1106,8,1179,6,"handleEnemyKill"],[1106,23,1179,21],[1106,24,1179,22],[1106,25,1179,23],[1108,4,1181,2],[1109,4,1182,2],[1109,8,1182,8,"saveAbilityData"],[1109,23,1182,23],[1109,26,1182,26],[1109,30,1182,26,"useCallback"],[1109,36,1182,37],[1109,37,1182,37,"useCallback"],[1109,48,1182,37],[1109,50,1182,38],[1109,56,1182,44],[1110,6,1183,4],[1110,10,1183,8,"combatState"],[1110,21,1183,19],[1110,22,1183,20,"abilityManager"],[1110,36,1183,34],[1110,38,1183,36],[1111,8,1184,6],[1111,12,1184,12,"abilityData"],[1111,23,1184,23],[1111,26,1184,26,"combatState"],[1111,37,1184,37],[1111,38,1184,38,"abilityManager"],[1111,52,1184,52],[1111,53,1184,53,"getSaveData"],[1111,64,1184,64],[1111,65,1184,65],[1111,66,1184,66],[1112,8,1185,6,"console"],[1112,15,1185,13],[1112,16,1185,14,"log"],[1112,19,1185,17],[1112,20,1185,18],[1112,70,1185,68],[1112,72,1185,70,"abilityData"],[1112,83,1185,81],[1112,84,1185,82],[1113,8,1186,6,"game"],[1113,12,1186,10],[1113,13,1186,11,"updateAbilityData"],[1113,30,1186,28],[1113,31,1186,29,"abilityData"],[1113,42,1186,40],[1113,43,1186,41],[1114,6,1187,4],[1115,4,1188,2],[1115,5,1188,3],[1115,7,1188,5],[1115,8,1188,6,"combatState"],[1115,19,1188,17],[1115,20,1188,18,"abilityManager"],[1115,34,1188,32],[1115,36,1188,34,"game"],[1115,40,1188,38],[1115,41,1188,39,"updateAbilityData"],[1115,58,1188,56],[1115,59,1188,57],[1115,60,1188,58],[1116,4,1190,2],[1116,8,1190,8,"contextValue"],[1116,20,1190,39],[1116,23,1190,42,"React"],[1116,28,1190,47],[1116,29,1190,47,"default"],[1116,36,1190,47],[1116,37,1190,48,"useMemo"],[1116,44,1190,55],[1116,45,1190,56],[1116,52,1190,63],[1117,6,1191,4,"combatState"],[1117,17,1191,15],[1118,6,1192,4,"projectiles"],[1118,17,1192,15],[1119,6,1193,4,"startCombat"],[1119,17,1193,15],[1120,6,1194,4,"stopCombat"],[1120,16,1194,14],[1121,6,1195,4,"equipAbility"],[1121,18,1195,16],[1122,6,1196,4,"handleEnemyKill"],[1122,21,1196,19],[1123,6,1197,4,"getDeck"],[1123,13,1197,11],[1124,6,1198,4,"getAvailableAbilities"],[1124,27,1198,25],[1125,6,1199,4,"upgradeAbility"],[1125,20,1199,18],[1126,6,1200,4,"spawnEnemy"],[1126,16,1200,14],[1127,6,1201,4,"spawnBoss"],[1127,15,1201,13],[1128,6,1202,4,"clearAllEnemies"],[1128,21,1202,19],[1129,6,1203,4,"clearSpecificEnemy"],[1129,24,1203,22],[1130,6,1204,4],[1131,6,1205,4,"findClosestEnemy"],[1131,22,1205,20],[1132,6,1206,4,"updateNinjaPosition"],[1132,25,1206,23],[1133,6,1207,4,"setManualControlActive"],[1133,28,1207,26],[1134,6,1208,4,"lastExplosionTime"],[1134,23,1208,21],[1135,6,1209,4,"useAbilityManually"],[1135,24,1209,22],[1136,6,1209,24],[1137,6,1210,4,"saveAbilityData"],[1137,21,1210,19],[1138,6,1210,21],[1139,6,1211,4,"shadowClone"],[1139,17,1211,15],[1139,19,1211,17,"combatState"],[1139,30,1211,28],[1139,31,1211,29,"shadowClone"],[1139,42,1211,40],[1139,43,1211,42],[1140,4,1212,2],[1140,5,1212,3],[1140,6,1212,4],[1140,8,1212,6],[1141,4,1213,4],[1142,4,1214,4],[1143,4,1215,4,"combatState"],[1143,15,1215,15],[1143,17,1216,4,"projectiles"],[1143,28,1216,15],[1143,30,1217,4,"lastExplosionTime"],[1143,47,1217,21],[1144,4,1218,4],[1145,4,1219,4,"combatState"],[1145,15,1219,15],[1145,16,1219,16,"abilityManager"],[1145,30,1219,30],[1145,32,1220,4,"combatState"],[1145,43,1220,15],[1145,44,1220,16,"enemies"],[1145,51,1220,23],[1145,53,1221,4,"combatState"],[1145,64,1221,15],[1145,65,1221,16,"shadowClone"],[1145,76,1221,27],[1146,4,1221,29],[1147,4,1222,4,"useAbilityManually"],[1147,22,1222,22],[1148,4,1222,24],[1149,4,1223,4,"saveAbilityData"],[1149,19,1223,19],[1149,20,1223,21],[1150,4,1223,21],[1150,5,1224,3],[1150,6,1224,4],[1151,4,1226,2],[1151,24,1227,4],[1151,28,1227,4,"_reactJsxDevRuntime"],[1151,47,1227,4],[1151,48,1227,4,"jsxDEV"],[1151,54,1227,4],[1151,56,1227,5,"CombatContext"],[1151,69,1227,18],[1151,70,1227,19,"Provider"],[1151,78,1227,27],[1152,6,1227,28,"value"],[1152,11,1227,33],[1152,13,1227,35,"contextValue"],[1152,25,1227,48],[1153,6,1227,48,"children"],[1153,14,1227,48],[1153,16,1228,7,"children"],[1154,4,1228,15],[1155,6,1228,15,"fileName"],[1155,14,1228,15],[1155,16,1228,15,"_jsxFileName"],[1155,28,1228,15],[1156,6,1228,15,"lineNumber"],[1156,16,1228,15],[1157,6,1228,15,"columnNumber"],[1157,18,1228,15],[1158,4,1228,15],[1158,11,1229,28],[1158,12,1229,29],[1159,2,1231,0],[1159,3,1231,1],[1160,2,1231,2,"_s4"],[1160,5,1231,2],[1160,6,106,13,"CombatProvider"],[1160,20,106,27],[1161,4,106,27],[1161,12,107,15,"useGame"],[1161,24,107,22],[1161,25,107,22,"useGame"],[1161,32,107,22],[1161,34,108,77,"useZone"],[1161,46,108,84],[1161,47,108,84,"useZone"],[1161,54,108,84],[1162,2,108,84],[1163,2,108,84,"_c"],[1163,4,108,84],[1163,7,106,13,"CombatProvider"],[1163,21,106,27],[1164,2,106,27],[1164,6,106,27,"_c"],[1164,8,106,27],[1165,2,106,27,"$RefreshReg$"],[1165,14,106,27],[1165,15,106,27,"_c"],[1165,17,106,27],[1166,0,106,27],[1166,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCQ;MDG;mBDG;qCGE;yDHC;MCE;GHgB;6CMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BC+D;mBDG;ORiC;mDUuD,2CV;kDUC,4CV;iDUO;OVU;mGWI,6BX;uDUI,+CV;kFYE,4CZ;iDUK,yBV;4CaY,qBb;KIiB;sDUK,yBV;mCWW;SXiB;yBFG;UEG;0BYG,uCZ;uBJG;oCiBE;yDCC,sCD;WjBE;UIC;GNG;mCqBG;oBCY;KDU;GrBI;2BuBG;GvBE;0CwBQ;GxBE;6CyBG;GzBG;8B0BG;mBxBG;oDMI,sCN;KwBa;mBCG,oBC,2BD,CD;G1BC;sB6BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G7BoB;2BmCG;mBR0C,6BQ;exBG;KwBE;GnCG;yBoCG;GpCsC;8BqCG;GrC4B;wCsCI;mBpCE,uCoC;GtCQ;uCuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBxBC;sCyBC;2BlDc;wDmDY;iBnDoC;6BSK;0C2CC,+B3C;mBTC;8DMK,sCN;akDiC;SzBS;OwBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}