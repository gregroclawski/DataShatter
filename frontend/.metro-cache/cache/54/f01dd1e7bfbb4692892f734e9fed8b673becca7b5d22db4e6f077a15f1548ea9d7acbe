{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 60; // TRIPLED Base XP reward per kill (was 20, now 60 for data recovery)\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Update Shadow Clone - handle duration, movement, and attacks\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":865,"map":[[15,2,88,0,"Object"],[15,8,88,0],[15,9,88,0,"defineProperty"],[15,23,88,0],[15,24,88,0,"exports"],[15,31,88,0],[16,4,88,0,"enumerable"],[16,14,88,0],[17,4,88,0,"get"],[17,7,88,0],[17,18,88,0,"get"],[17,19,88,0],[18,6,88,0],[18,13,88,0,"useCombat"],[18,22,88,0],[19,4,88,0],[20,2,88,0],[21,2,98,0,"Object"],[21,8,98,0],[21,9,98,0,"defineProperty"],[21,23,98,0],[21,24,98,0,"exports"],[21,31,98,0],[22,4,98,0,"enumerable"],[22,14,98,0],[23,4,98,0,"get"],[23,7,98,0],[23,18,98,0,"get"],[23,19,98,0],[24,6,98,0],[24,13,98,0,"CombatProvider"],[24,27,98,0],[25,4,98,0],[26,2,98,0],[27,2,897,2],[27,6,897,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,897,2],[27,42,897,2,"require"],[27,49,897,2],[27,50,897,2,"_dependencyMap"],[27,64,897,2],[28,2,897,2],[28,6,897,2,"_slicedToArray"],[28,20,897,2],[28,23,897,2,"_interopDefault"],[28,38,897,2],[28,39,897,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,897,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,86,0],[37,6,86,6,"CombatContext"],[37,19,86,19],[37,35,86,22],[37,39,86,22,"createContext"],[37,45,86,35],[37,46,86,35,"createContext"],[37,59,86,35],[37,61,86,67,"undefined"],[37,70,86,76],[37,71,86,77],[38,2,88,7],[38,6,88,13,"useCombat"],[38,15,88,22],[38,18,88,25,"useCombat"],[38,19,88,25],[38,24,88,50],[39,4,88,50,"_s"],[39,6,88,50],[40,4,89,2],[40,8,89,8,"context"],[40,15,89,15],[40,18,89,18],[40,22,89,18,"useContext"],[40,28,89,28],[40,29,89,28,"useContext"],[40,39,89,28],[40,41,89,29,"CombatContext"],[40,54,89,42],[40,55,89,43],[41,4,90,2],[41,8,90,6],[41,9,90,7,"context"],[41,16,90,14],[41,18,90,16],[42,6,91,4],[42,12,91,10],[42,16,91,14,"Error"],[42,21,91,19],[42,22,91,20],[42,70,91,68],[42,71,91,69],[43,4,92,2],[44,4,93,2],[44,11,93,9,"context"],[44,18,93,16],[45,2,94,0],[45,3,94,1],[46,2,94,2,"_s"],[46,4,94,2],[46,5,88,13,"useCombat"],[46,14,88,22],[47,2,96,0],[47,6,96,4,"enemyCounter"],[47,18,96,16],[47,21,96,19],[47,22,96,20],[47,23,96,21],[47,24,96,22],[49,2,98,7],[49,6,98,13,"CombatProvider"],[49,20,98,27],[49,23,98,30,"_ref"],[49,27,98,30],[49,31,98,73],[50,4,98,73,"_s4"],[50,7,98,73],[51,4,98,73],[51,8,98,73,"_s3"],[51,11,98,73],[51,14,98,73,"$RefreshSig$"],[51,26,98,73],[52,4,98,73],[52,8,98,33,"children"],[52,16,98,41],[52,19,98,41,"_ref"],[52,23,98,41],[52,24,98,33,"children"],[52,32,98,41],[53,4,99,2],[53,8,99,8,"game"],[53,12,99,12],[53,15,99,15],[53,19,99,15,"useGame"],[53,31,99,22],[53,32,99,22,"useGame"],[53,39,99,22],[53,41,99,23],[53,42,99,24],[54,4,100,2],[54,8,100,2,"_useZone"],[54,16,100,2],[54,19,100,77],[54,23,100,77,"useZone"],[54,35,100,84],[54,36,100,84,"useZone"],[54,43,100,84],[54,45,100,85],[54,46,100,86],[55,6,100,10,"currentZone"],[55,17,100,21],[55,20,100,21,"_useZone"],[55,28,100,21],[55,29,100,10,"currentZone"],[55,40,100,21],[56,6,100,23,"currentZoneLevel"],[56,22,100,39],[56,25,100,39,"_useZone"],[56,33,100,39],[56,34,100,23,"currentZoneLevel"],[56,50,100,39],[57,6,100,41,"recordEnemyKill"],[57,21,100,56],[57,24,100,56,"_useZone"],[57,32,100,56],[57,33,100,41,"recordEnemyKill"],[57,48,100,56],[58,6,100,58,"spawnZoneEnemy"],[58,20,100,72],[58,23,100,72,"_useZone"],[58,31,100,72],[58,32,100,58,"spawnZoneEnemy"],[58,46,100,72],[60,4,102,2],[61,4,103,2],[61,8,103,8,"initialCombatState"],[61,26,103,39],[61,29,103,42],[62,6,104,4,"isInCombat"],[62,16,104,14],[62,18,104,16],[62,23,104,21],[63,6,105,4,"currentTick"],[63,17,105,15],[63,19,105,17],[63,20,105,18],[64,6,106,4,"enemies"],[64,13,106,11],[64,15,106,13],[64,17,106,15],[65,6,107,4,"abilityManager"],[65,20,107,18],[65,22,107,20],[65,26,107,24,"AbilityManager"],[65,44,107,38],[65,45,107,38,"AbilityManager"],[65,59,107,38],[65,60,107,39],[65,61,107,40],[66,6,108,4,"statusEffects"],[66,19,108,17],[66,21,108,19],[66,25,108,23,"StatusEffectManager"],[66,44,108,42],[66,45,108,42,"StatusEffectManager"],[66,64,108,42],[66,65,108,43],[66,66,108,44],[67,6,109,4,"playerStats"],[67,17,109,15],[67,19,109,17],[68,8,110,6,"attack"],[68,14,110,12],[68,16,110,14],[68,18,110,16],[69,8,110,18],[70,8,111,6,"defense"],[70,15,111,13],[70,17,111,15],[70,18,111,16],[71,8,112,6,"health"],[71,14,112,12],[71,16,112,14],[71,19,112,17],[72,8,113,6,"maxHealth"],[72,17,113,15],[72,19,113,17],[72,22,113,20],[73,8,114,6,"critChance"],[73,18,114,16],[73,20,114,18],[73,21,114,19],[74,8,115,6,"critDamage"],[74,18,115,16],[74,20,115,18],[74,23,115,21],[75,8,116,6,"cooldownReduction"],[75,25,116,23],[75,27,116,25],[76,6,117,4],[77,4,118,2],[77,5,118,3],[78,4,120,2],[78,8,120,2,"_useState"],[78,17,120,2],[78,20,120,40],[78,24,120,40,"useState"],[78,30,120,48],[78,31,120,48,"useState"],[78,39,120,48],[78,41,120,62,"initialCombatState"],[78,59,120,80],[78,60,120,81],[79,6,120,81,"_useState2"],[79,16,120,81],[79,23,120,81,"_slicedToArray"],[79,37,120,81],[79,38,120,81,"default"],[79,45,120,81],[79,47,120,81,"_useState"],[79,56,120,81],[80,6,120,9,"combatState"],[80,17,120,20],[80,20,120,20,"_useState2"],[80,30,120,20],[81,6,120,22,"setCombatState"],[81,20,120,36],[81,23,120,36,"_useState2"],[81,33,120,36],[83,4,122,2],[84,4,123,2],[84,8,123,2,"useEffect"],[84,14,123,11],[84,15,123,11,"useEffect"],[84,24,123,11],[84,26,123,12],[84,32,123,18],[85,6,124,4],[85,10,124,8,"game"],[85,14,124,12],[85,15,124,13,"gameState"],[85,24,124,22],[85,25,124,23,"abilityData"],[85,36,124,34],[85,40,124,38,"combatState"],[85,51,124,49],[85,52,124,50,"abilityManager"],[85,66,124,64],[85,68,124,66],[86,8,125,6,"console"],[86,15,125,13],[86,16,125,14,"log"],[86,19,125,17],[86,20,125,18],[86,68,125,66],[86,70,125,68,"game"],[86,74,125,72],[86,75,125,73,"gameState"],[86,84,125,82],[86,85,125,83,"abilityData"],[86,96,125,94],[86,97,125,95],[87,8,126,6,"combatState"],[87,19,126,17],[87,20,126,18,"abilityManager"],[87,34,126,32],[87,35,126,33,"restoreFromSaveData"],[87,54,126,52],[87,55,126,53,"game"],[87,59,126,57],[87,60,126,58,"gameState"],[87,69,126,67],[87,70,126,68,"abilityData"],[87,81,126,79],[87,82,126,80],[89,8,128,6],[90,8,129,6,"setCombatState"],[90,22,129,20],[90,23,129,21,"prev"],[90,27,129,25],[90,32,129,30],[91,10,129,32],[91,13,129,35,"prev"],[92,8,129,40],[92,9,129,41],[92,10,129,42],[92,11,129,43],[93,6,130,4],[94,4,131,2],[94,5,131,3],[94,7,131,5],[94,8,131,6,"game"],[94,12,131,10],[94,13,131,11,"gameState"],[94,22,131,20],[94,23,131,21,"abilityData"],[94,34,131,32],[94,36,131,34,"combatState"],[94,47,131,45],[94,48,131,46,"abilityManager"],[94,62,131,60],[94,63,131,61],[94,64,131,62],[95,4,133,2],[95,8,133,2,"_useState3"],[95,18,133,2],[95,21,133,40],[95,25,133,40,"useState"],[95,31,133,48],[95,32,133,48,"useState"],[95,40,133,48],[95,42,133,69],[95,44,133,71],[95,45,133,72],[96,6,133,72,"_useState4"],[96,16,133,72],[96,23,133,72,"_slicedToArray"],[96,37,133,72],[96,38,133,72,"default"],[96,45,133,72],[96,47,133,72,"_useState3"],[96,57,133,72],[97,6,133,9,"projectiles"],[97,17,133,20],[97,20,133,20,"_useState4"],[97,30,133,20],[98,6,133,22,"setProjectiles"],[98,20,133,36],[98,23,133,36,"_useState4"],[98,33,133,36],[99,4,134,2],[99,8,134,2,"_useState5"],[99,18,134,2],[99,21,134,52],[99,25,134,52,"useState"],[99,31,134,60],[99,32,134,60,"useState"],[99,40,134,60],[99,42,134,69],[99,43,134,70],[99,44,134,71],[100,6,134,71,"_useState6"],[100,16,134,71],[100,23,134,71,"_slicedToArray"],[100,37,134,71],[100,38,134,71,"default"],[100,45,134,71],[100,47,134,71,"_useState5"],[100,57,134,71],[101,6,134,9,"lastExplosionTime"],[101,23,134,26],[101,26,134,26,"_useState6"],[101,36,134,26],[102,6,134,28,"setLastExplosionTime"],[102,26,134,48],[102,29,134,48,"_useState6"],[102,39,134,48],[103,4,135,2],[104,4,136,2],[106,4,138,2],[107,4,139,2],[107,8,139,8,"handleEnemyKill"],[107,23,139,23],[107,26,139,26],[107,30,139,26,"useCallback"],[107,36,139,37],[107,37,139,37,"useCallback"],[107,48,139,37],[107,50,139,39,"enemy"],[107,55,139,57],[107,59,139,62],[108,6,140,4,"console"],[108,13,140,11],[108,14,140,12,"log"],[108,17,140,15],[108,18,140,16],[108,73,140,71],[108,75,140,73,"enemy"],[108,80,140,78],[108,81,140,79,"id"],[108,83,140,81],[108,84,140,82],[110,6,142,4],[111,6,143,4],[111,10,143,10,"xpReward"],[111,18,143,18],[111,21,143,21],[111,23,143,23],[111,24,143,24],[111,25,143,25],[112,6,144,4],[112,10,144,10,"goldReward"],[112,20,144,20],[112,23,144,23],[112,25,144,25],[113,6,146,4,"console"],[113,13,146,11],[113,14,146,12,"log"],[113,17,146,15],[113,18,146,16],[113,48,146,46,"xpReward"],[113,56,146,54],[113,67,146,65,"goldReward"],[113,77,146,75],[113,93,146,91],[113,94,146,92],[114,6,147,4,"console"],[114,13,147,11],[114,14,147,12,"log"],[114,17,147,15],[114,18,147,16],[114,49,147,47,"Platform"],[114,61,147,55],[114,62,147,55,"Platform"],[114,70,147,55],[114,71,147,56,"OS"],[114,73,147,58],[114,84,147,69,"Date"],[114,88,147,73],[114,89,147,74,"now"],[114,92,147,77],[114,93,147,78],[114,94,147,79],[114,96,147,81],[114,97,147,82],[116,6,149,4],[117,6,150,4],[118,6,151,4,"setTimeout"],[118,16,151,14],[118,17,151,15],[118,23,151,21],[119,8,152,6,"console"],[119,15,152,13],[119,16,152,14,"log"],[119,19,152,17],[119,20,152,18],[119,78,152,76],[119,79,152,77],[121,8,154,6],[122,8,155,6,"game"],[122,12,155,10],[122,13,155,11,"updateNinja"],[122,24,155,22],[122,25,155,24,"prev"],[122,29,155,28],[122,33,155,33],[123,10,156,8,"console"],[123,17,156,15],[123,18,156,16,"log"],[123,21,156,19],[123,22,156,20],[123,54,156,52,"prev"],[123,58,156,56],[123,59,156,57,"experience"],[123,69,156,67],[123,81,156,79,"prev"],[123,85,156,83],[123,86,156,84,"experience"],[123,96,156,94],[123,99,156,97,"xpReward"],[123,107,156,105],[123,109,156,107],[123,110,156,108],[124,10,157,8,"console"],[124,17,157,15],[124,18,157,16,"log"],[124,21,157,19],[124,22,157,20],[124,56,157,54,"prev"],[124,60,157,58],[124,61,157,59,"gold"],[124,65,157,63],[124,77,157,75,"prev"],[124,81,157,79],[124,82,157,80,"gold"],[124,86,157,84],[124,89,157,87,"goldReward"],[124,99,157,97],[124,101,157,99],[124,102,157,100],[125,10,158,8],[125,17,158,15],[126,12,159,10,"experience"],[126,22,159,20],[126,24,159,22,"prev"],[126,28,159,26],[126,29,159,27,"experience"],[126,39,159,37],[126,42,159,40,"xpReward"],[126,50,159,48],[127,12,160,10,"gold"],[127,16,160,14],[127,18,160,16,"prev"],[127,22,160,20],[127,23,160,21,"gold"],[127,27,160,25],[127,30,160,28,"goldReward"],[128,10,161,8],[128,11,161,9],[129,8,162,6],[129,9,162,7],[129,10,162,8],[131,8,164,6],[132,8,165,6],[132,12,165,12,"zoneEnemy"],[132,21,165,21],[132,24,165,24],[133,10,166,8,"id"],[133,12,166,10],[133,14,166,12,"enemy"],[133,19,166,17],[133,20,166,18,"id"],[133,22,166,20],[134,10,167,8,"typeId"],[134,16,167,14],[134,18,167,16,"enemy"],[134,23,167,21],[134,24,167,22,"zoneTypeId"],[134,34,167,32],[134,38,167,36],[134,48,167,46],[135,10,167,48],[136,10,168,8,"name"],[136,14,168,12],[136,16,168,14,"enemy"],[136,21,168,19],[136,22,168,20,"name"],[136,26,168,24],[137,10,169,8,"icon"],[137,14,169,12],[137,16,169,14],[137,20,169,18],[138,10,169,20],[139,10,170,8,"hp"],[139,12,170,10],[139,14,170,12],[139,15,170,13],[140,10,170,15],[141,10,171,8,"maxHP"],[141,15,171,13],[141,17,171,15,"enemy"],[141,22,171,20],[141,23,171,21,"maxHealth"],[141,32,171,30],[142,10,172,8,"attack"],[142,16,172,14],[142,18,172,16,"enemy"],[142,23,172,21],[142,24,172,22,"stats"],[142,29,172,27],[142,30,172,28,"attack"],[142,36,172,34],[143,10,173,8,"xp"],[143,12,173,10],[143,14,173,12,"enemy"],[143,19,173,17],[143,20,173,18,"zoneXP"],[143,26,173,24],[143,30,173,28],[143,32,173,30],[144,10,173,32],[145,10,174,8,"position"],[145,18,174,16],[145,20,174,18,"enemy"],[145,25,174,23],[145,26,174,24,"position"],[146,8,175,6],[146,9,175,7],[147,8,177,6,"console"],[147,15,177,13],[147,16,177,14,"log"],[147,19,177,17],[147,20,177,18],[147,40,177,38,"zoneEnemy"],[147,49,177,47],[147,50,177,48,"name"],[147,54,177,52],[147,59,177,57,"zoneEnemy"],[147,68,177,66],[147,69,177,67,"typeId"],[147,75,177,73],[147,113,177,111],[147,114,177,112],[148,8,178,6,"recordEnemyKill"],[148,23,178,21],[148,24,178,22,"zoneEnemy"],[148,33,178,31],[148,34,178,32],[149,6,179,4],[149,7,179,5],[149,9,179,7],[149,10,179,8],[149,11,179,9],[149,12,179,10],[149,13,179,11],[150,4,180,2],[150,5,180,3],[150,7,180,5],[150,8,180,6,"game"],[150,12,180,10],[150,13,180,11,"updateNinja"],[150,24,180,22],[150,26,180,24,"recordEnemyKill"],[150,41,180,39],[150,42,180,40],[150,43,180,41],[152,4,182,2],[153,4,183,2],[153,8,183,8,"handleCombatTick"],[153,24,183,24],[153,27,183,27,"React"],[153,32,183,32],[153,33,183,32,"default"],[153,40,183,32],[153,41,183,33,"useCallback"],[153,52,183,44],[153,53,183,45],[153,59,183,51],[154,6,183,51],[154,10,183,51,"_s2"],[154,13,183,51],[154,16,183,51,"$RefreshSig$"],[154,28,183,51],[155,6,184,4,"console"],[155,13,184,11],[155,14,184,12,"log"],[155,17,184,15],[155,18,184,16],[155,87,184,85],[155,88,184,86],[156,6,186,4],[156,10,186,8,"enemiesToKill"],[156,23,186,36],[156,26,186,39],[156,28,186,41],[156,29,186,42],[156,30,186,43],[158,6,188,4,"_s2"],[158,9,188,4],[158,10,188,4,"setCombatState"],[158,24,188,18],[158,25,188,18,"_s2"],[158,28,188,18],[158,29,188,19,"prev"],[158,33,188,23],[158,37,188,27],[159,8,188,27,"_s2"],[159,11,188,27],[160,8,189,6],[160,12,189,12,"newTick"],[160,19,189,19],[160,22,189,22,"combatEngine"],[160,41,189,34],[160,42,189,34,"combatEngine"],[160,54,189,34],[160,55,189,35,"getCurrentTick"],[160,69,189,49],[160,70,189,50],[160,71,189,51],[161,8,190,6],[161,12,190,12,"newState"],[161,20,190,20],[161,23,190,23],[162,10,190,25],[162,13,190,28,"prev"],[162,17,190,32],[163,10,190,34,"currentTick"],[163,21,190,45],[163,23,190,47,"newTick"],[164,8,190,55],[164,9,190,56],[165,8,192,6],[165,12,192,10],[165,13,192,11,"newState"],[165,21,192,19],[165,22,192,20,"isInCombat"],[165,32,192,30],[165,34,192,32],[165,41,192,39,"newState"],[165,49,192,47],[167,8,194,6],[168,8,195,6,"newState"],[168,16,195,14],[168,17,195,15,"abilityManager"],[168,31,195,29],[168,32,195,30,"updateCooldowns"],[168,47,195,45],[168,48,195,46,"newTick"],[168,55,195,53],[168,56,195,54],[170,8,197,6],[171,8,198,6],[171,12,198,12,"effectResults"],[171,25,198,25],[171,28,198,28,"newState"],[171,36,198,36],[171,37,198,37,"statusEffects"],[171,50,198,50],[171,51,198,51,"processTick"],[171,62,198,62],[171,63,198,63,"newTick"],[171,70,198,70],[171,71,198,71],[173,8,200,6],[174,8,201,6,"effectResults"],[174,21,201,19],[174,22,201,20,"forEach"],[174,29,201,27],[174,30,201,28],[174,31,201,29,"results"],[174,38,201,36],[174,40,201,38,"entityId"],[174,48,201,46],[174,53,201,51],[175,10,202,8],[175,14,202,14,"enemyIndex"],[175,24,202,24],[175,27,202,27,"newState"],[175,35,202,35],[175,36,202,36,"enemies"],[175,43,202,43],[175,44,202,44,"findIndex"],[175,53,202,53],[175,54,202,54,"e"],[175,55,202,55],[175,59,202,59,"e"],[175,60,202,60],[175,61,202,61,"id"],[175,63,202,63],[175,68,202,68,"entityId"],[175,76,202,76],[175,77,202,77],[176,10,203,8],[176,14,203,12,"enemyIndex"],[176,24,203,22],[176,28,203,26],[176,29,203,27],[176,31,203,29],[177,12,204,10,"results"],[177,19,204,17],[177,20,204,18,"forEach"],[177,27,204,25],[177,28,204,26,"result"],[177,34,204,32],[177,38,204,36],[178,14,205,12,"newState"],[178,22,205,20],[178,23,205,21,"enemies"],[178,30,205,28],[178,31,205,29,"enemyIndex"],[178,41,205,39],[178,42,205,40],[178,43,205,41,"health"],[178,49,205,47],[178,53,205,51,"result"],[178,59,205,57],[178,60,205,58,"damage"],[178,66,205,64],[179,14,206,12,"newState"],[179,22,206,20],[179,23,206,21,"enemies"],[179,30,206,28],[179,31,206,29,"enemyIndex"],[179,41,206,39],[179,42,206,40],[179,43,206,41,"lastDamaged"],[179,54,206,52],[179,57,206,55,"newTick"],[179,64,206,62],[180,12,207,10],[180,13,207,11],[180,14,207,12],[181,10,208,8],[182,8,209,6],[182,9,209,7],[182,10,209,8],[184,8,211,6],[185,8,212,6,"newState"],[185,16,212,14],[185,17,212,15,"enemies"],[185,24,212,22],[185,25,212,23,"forEach"],[185,32,212,30],[185,33,212,31,"enemy"],[185,38,212,36],[185,42,212,40],[186,10,213,8],[186,14,213,12],[186,15,213,13,"enemy"],[186,20,213,18],[186,21,213,19,"isBoss"],[186,27,213,25],[186,29,213,27],[187,12,213,29],[188,12,214,10],[189,12,215,10],[189,16,215,16,"MOVEMENT_SPEED"],[189,30,215,30],[189,33,215,33],[189,37,215,37],[189,38,215,38],[189,39,215,39],[190,12,216,10],[190,16,216,16,"SCREEN_WIDTH"],[190,28,216,28],[190,31,216,31],[190,34,216,34],[191,12,217,10],[191,16,217,16,"GAME_AREA_HEIGHT"],[191,32,217,32],[191,35,217,35],[191,38,217,38],[191,39,217,39],[191,40,217,40],[192,12,218,10],[192,16,218,16,"ENEMY_SIZE"],[192,26,218,26],[192,29,218,29],[192,31,218,31],[194,12,220,10],[195,12,221,10],[195,16,221,16,"playerX"],[195,23,221,23],[195,26,221,26,"currentNinjaPosition"],[195,46,221,46],[195,47,221,47,"x"],[195,48,221,48],[196,12,222,10],[196,16,222,16,"playerY"],[196,23,222,23],[196,26,222,26,"currentNinjaPosition"],[196,46,222,46],[196,47,222,47,"y"],[196,48,222,48],[198,12,224,10],[199,12,225,10],[199,16,225,16,"deltaX"],[199,22,225,22],[199,25,225,25,"playerX"],[199,32,225,32],[199,35,225,35,"enemy"],[199,40,225,40],[199,41,225,41,"position"],[199,49,225,49],[199,50,225,50,"x"],[199,51,225,51],[200,12,226,10],[200,16,226,16,"deltaY"],[200,22,226,22],[200,25,226,25,"playerY"],[200,32,226,32],[200,35,226,35,"enemy"],[200,40,226,40],[200,41,226,41,"position"],[200,49,226,49],[200,50,226,50,"y"],[200,51,226,51],[201,12,227,10],[201,16,227,16,"distance"],[201,24,227,24],[201,27,227,27,"Math"],[201,31,227,31],[201,32,227,32,"sqrt"],[201,36,227,36],[201,37,227,37,"deltaX"],[201,43,227,43],[201,46,227,46,"deltaX"],[201,52,227,52],[201,55,227,55,"deltaY"],[201,61,227,61],[201,64,227,64,"deltaY"],[201,70,227,70],[201,71,227,71],[203,12,229,10],[204,12,230,10],[204,16,230,14,"distance"],[204,24,230,22],[204,27,230,25],[204,29,230,27],[204,31,230,29],[205,14,231,12],[206,14,232,12],[206,18,232,18,"normalizedX"],[206,29,232,29],[206,32,232,32,"deltaX"],[206,38,232,38],[206,41,232,41,"distance"],[206,49,232,49],[207,14,233,12],[207,18,233,18,"normalizedY"],[207,29,233,29],[207,32,233,32,"deltaY"],[207,38,233,38],[207,41,233,41,"distance"],[207,49,233,49],[209,14,235,12],[210,14,236,12],[210,18,236,18,"randomFactor"],[210,30,236,30],[210,33,236,33],[210,36,236,36],[210,37,236,37],[210,38,236,38],[211,14,237,12],[211,18,237,18,"finalX"],[211,24,237,24],[211,27,237,27,"normalizedX"],[211,38,237,38],[211,41,237,41],[211,42,237,42,"Math"],[211,46,237,46],[211,47,237,47,"random"],[211,53,237,53],[211,54,237,54],[211,55,237,55],[211,58,237,58],[211,61,237,61],[211,65,237,65,"randomFactor"],[211,77,237,77],[212,14,238,12],[212,18,238,18,"finalY"],[212,24,238,24],[212,27,238,27,"normalizedY"],[212,38,238,38],[212,41,238,41],[212,42,238,42,"Math"],[212,46,238,46],[212,47,238,47,"random"],[212,53,238,53],[212,54,238,54],[212,55,238,55],[212,58,238,58],[212,61,238,61],[212,65,238,65,"randomFactor"],[212,77,238,77],[214,14,240,12],[215,14,241,12],[215,18,241,16,"newX"],[215,22,241,20],[215,25,241,23,"enemy"],[215,30,241,28],[215,31,241,29,"position"],[215,39,241,37],[215,40,241,38,"x"],[215,41,241,39],[215,44,241,43,"finalX"],[215,50,241,49],[215,53,241,52,"MOVEMENT_SPEED"],[215,67,241,67],[216,14,242,12],[216,18,242,16,"newY"],[216,22,242,20],[216,25,242,23,"enemy"],[216,30,242,28],[216,31,242,29,"position"],[216,39,242,37],[216,40,242,38,"y"],[216,41,242,39],[216,44,242,43,"finalY"],[216,50,242,49],[216,53,242,52,"MOVEMENT_SPEED"],[216,67,242,67],[218,14,244,12],[219,14,245,12,"newX"],[219,18,245,16],[219,21,245,19,"Math"],[219,25,245,23],[219,26,245,24,"max"],[219,29,245,27],[219,30,245,28],[219,31,245,29],[219,33,245,31,"Math"],[219,37,245,35],[219,38,245,36,"min"],[219,41,245,39],[219,42,245,40,"SCREEN_WIDTH"],[219,54,245,52],[219,57,245,55,"ENEMY_SIZE"],[219,67,245,65],[219,69,245,67,"newX"],[219,73,245,71],[219,74,245,72],[219,75,245,73],[220,14,246,12,"newY"],[220,18,246,16],[220,21,246,19,"Math"],[220,25,246,23],[220,26,246,24,"max"],[220,29,246,27],[220,30,246,28],[220,31,246,29],[220,33,246,31,"Math"],[220,37,246,35],[220,38,246,36,"min"],[220,41,246,39],[220,42,246,40,"GAME_AREA_HEIGHT"],[220,58,246,56],[220,61,246,59,"ENEMY_SIZE"],[220,71,246,69],[220,73,246,71,"newY"],[220,77,246,75],[220,78,246,76],[220,79,246,77],[222,14,248,12],[223,14,249,12,"enemy"],[223,19,249,17],[223,20,249,18,"position"],[223,28,249,26],[223,29,249,27,"x"],[223,30,249,28],[223,33,249,31,"newX"],[223,37,249,35],[224,14,250,12,"enemy"],[224,19,250,17],[224,20,250,18,"position"],[224,28,250,26],[224,29,250,27,"y"],[224,30,250,28],[224,33,250,31,"newY"],[224,37,250,35],[225,12,251,10],[226,12,252,10],[227,10,253,8],[228,8,254,6],[228,9,254,7],[228,10,254,8],[230,8,256,6],[231,8,257,6],[231,12,257,10,"newState"],[231,20,257,18],[231,21,257,19,"shadowClone"],[231,32,257,30],[231,34,257,32],[232,10,258,8],[233,10,259,8,"newState"],[233,18,259,16],[233,19,259,17,"shadowClone"],[233,30,259,28],[233,31,259,29,"remainingTicks"],[233,45,259,43],[233,47,259,45],[235,10,261,8],[236,10,262,8],[236,14,262,14,"cloneOffset"],[236,25,262,25],[236,28,262,28],[236,30,262,30],[236,31,262,31],[236,32,262,32],[237,10,263,8,"newState"],[237,18,263,16],[237,19,263,17,"shadowClone"],[237,30,263,28],[237,31,263,29,"position"],[237,39,263,37],[237,40,263,38,"x"],[237,41,263,39],[237,44,263,42,"currentNinjaPosition"],[237,64,263,62],[237,65,263,63,"x"],[237,66,263,64],[237,69,263,67,"cloneOffset"],[237,80,263,78],[238,10,264,8,"newState"],[238,18,264,16],[238,19,264,17,"shadowClone"],[238,30,264,28],[238,31,264,29,"position"],[238,39,264,37],[238,40,264,38,"y"],[238,41,264,39],[238,44,264,42,"currentNinjaPosition"],[238,64,264,62],[238,65,264,63,"y"],[238,66,264,64],[238,69,264,67],[238,71,264,69],[240,10,266,8],[241,10,267,8],[241,14,267,12,"newState"],[241,22,267,20],[241,23,267,21,"shadowClone"],[241,34,267,32],[241,35,267,33,"remainingTicks"],[241,49,267,47],[241,53,267,51],[241,54,267,52],[241,56,267,54],[242,12,268,10,"console"],[242,19,268,17],[242,20,268,18,"log"],[242,23,268,21],[242,24,268,22],[242,75,268,73],[242,76,268,74],[243,12,269,10,"newState"],[243,20,269,18],[243,21,269,19,"shadowClone"],[243,32,269,30],[243,35,269,33,"undefined"],[243,44,269,42],[244,10,270,8],[244,11,270,9],[244,17,270,15],[245,12,271,10],[246,12,272,10],[247,12,273,10],[247,16,273,16,"CLONE_ATTACK_INTERVAL"],[247,37,273,37],[247,40,273,40],[247,42,273,42],[248,12,274,10],[248,16,274,14,"newState"],[248,24,274,22],[248,25,274,23,"currentTick"],[248,36,274,34],[248,39,274,37,"CLONE_ATTACK_INTERVAL"],[248,60,274,58],[248,65,274,63],[248,66,274,64],[248,70,274,68,"newState"],[248,78,274,76],[248,79,274,77,"enemies"],[248,86,274,84],[248,87,274,85,"length"],[248,93,274,91],[248,96,274,94],[248,97,274,95],[248,99,274,97],[249,14,275,12,"console"],[249,21,275,19],[249,22,275,20,"log"],[249,25,275,23],[249,26,275,24],[249,83,275,81],[249,84,275,82],[251,14,277,12],[252,14,278,12],[252,18,278,18,"target"],[252,24,278,24],[252,27,278,27,"findClosestEnemyInternal"],[252,51,278,51],[252,52,278,52,"newState"],[252,60,278,60],[252,61,278,61,"enemies"],[252,68,278,68],[252,69,278,69],[253,14,279,12],[253,18,279,16,"target"],[253,24,279,22],[253,26,279,24],[254,16,280,14],[255,16,281,14],[255,20,281,20,"cloneDamage"],[255,31,281,31],[255,34,281,34,"Math"],[255,38,281,38],[255,39,281,39,"floor"],[255,44,281,44],[255,45,281,45,"newState"],[255,53,281,53],[255,54,281,54,"playerStats"],[255,65,281,65],[255,66,281,66,"attack"],[255,72,281,72],[255,75,281,75],[255,78,281,78],[255,79,281,79],[257,16,283,14],[258,16,284,14,"createProjectile"],[258,32,284,30],[258,33,284,31,"target"],[258,39,284,37],[258,41,284,39,"cloneDamage"],[258,52,284,50],[258,54,284,52,"newState"],[258,62,284,60],[258,63,284,61,"shadowClone"],[258,74,284,72],[258,75,284,73,"position"],[258,83,284,81],[258,85,284,83],[259,18,285,16,"id"],[259,20,285,18],[259,22,285,20],[259,43,285,41],[260,18,286,16,"name"],[260,22,286,20],[260,24,286,22],[260,45,286,43],[261,18,287,16,"icon"],[261,22,287,20],[261,24,287,22],[262,16,288,14],[262,17,288,15],[262,18,288,16],[263,14,289,12],[264,12,290,10],[265,10,291,8],[266,8,292,6],[268,8,294,6],[269,8,295,6],[269,12,295,10],[269,13,295,11,"isManualControlActive"],[269,34,295,32],[269,36,295,34],[270,10,296,8],[270,15,296,13],[270,19,296,17,"i"],[270,20,296,18],[270,23,296,21],[270,24,296,22],[270,26,296,24,"i"],[270,27,296,25],[270,30,296,28],[270,31,296,29],[270,33,296,31,"i"],[270,34,296,32],[270,36,296,34],[270,38,296,36],[271,12,297,10],[271,16,297,14,"newState"],[271,24,297,22],[271,25,297,23,"abilityManager"],[271,39,297,37],[271,40,297,38,"isAbilityReady"],[271,54,297,52],[271,55,297,53,"i"],[271,56,297,54],[271,57,297,55],[271,61,297,59,"newState"],[271,69,297,67],[271,70,297,68,"enemies"],[271,77,297,75],[271,78,297,76,"length"],[271,84,297,82],[271,87,297,85],[271,88,297,86],[271,90,297,88],[272,14,298,12],[272,18,298,16,"newState"],[272,26,298,24],[272,27,298,25,"abilityManager"],[272,41,298,39],[272,42,298,40,"useAbility"],[272,52,298,50],[272,53,298,51,"i"],[272,54,298,52],[272,56,298,54,"newTick"],[272,63,298,61],[272,64,298,62],[272,66,298,64],[273,16,299,14,"castAbility"],[273,27,299,25],[273,28,299,26,"newState"],[273,36,299,34],[273,38,299,36,"i"],[273,39,299,37],[273,40,299,38],[274,14,300,12],[275,12,301,10],[276,10,302,8],[277,8,303,6],[279,8,305,6],[280,8,306,6],[280,12,306,12,"deadEnemies"],[280,23,306,23],[280,26,306,26,"newState"],[280,34,306,34],[280,35,306,35,"enemies"],[280,42,306,42],[280,43,306,43,"filter"],[280,49,306,49],[280,50,306,50,"enemy"],[280,55,306,55],[280,59,306,59,"enemy"],[280,64,306,64],[280,65,306,65,"health"],[280,71,306,71],[280,75,306,75],[280,76,306,76],[280,77,306,77],[281,8,307,6,"enemiesToKill"],[281,21,307,19],[281,24,307,22],[281,25,307,23],[281,28,307,26,"deadEnemies"],[281,39,307,37],[281,40,307,38],[281,41,307,39],[281,42,307,40],[283,8,309,6],[284,8,310,6],[284,12,310,10,"deadEnemies"],[284,23,310,21],[284,24,310,22,"length"],[284,30,310,28],[284,33,310,31],[284,34,310,32],[284,36,310,34],[285,10,311,8,"console"],[285,17,311,15],[285,18,311,16,"log"],[285,21,311,19],[285,22,311,20],[285,49,311,47,"deadEnemies"],[285,60,311,58],[285,61,311,59,"length"],[285,67,311,65],[285,83,311,81],[285,85,311,83,"deadEnemies"],[285,96,311,94],[285,97,311,95,"map"],[285,100,311,98],[285,101,311,99,"e"],[285,102,311,100],[285,106,311,104],[285,109,311,107,"e"],[285,110,311,108],[285,111,311,109,"id"],[285,113,311,111],[285,117,311,115,"e"],[285,118,311,116],[285,119,311,117,"health"],[285,125,311,123],[285,130,311,128],[285,131,311,129],[285,132,311,130],[286,8,312,6],[288,8,314,6],[289,8,315,6],[289,12,315,12,"lowHealthEnemies"],[289,28,315,28],[289,31,315,31,"newState"],[289,39,315,39],[289,40,315,40,"enemies"],[289,47,315,47],[289,48,315,48,"filter"],[289,54,315,54],[289,55,315,55,"enemy"],[289,60,315,60],[289,64,315,64,"enemy"],[289,69,315,69],[289,70,315,70,"health"],[289,76,315,76],[289,80,315,80],[289,82,315,82],[289,86,315,86,"enemy"],[289,91,315,91],[289,92,315,92,"health"],[289,98,315,98],[289,101,315,101],[289,102,315,102],[289,103,315,103],[290,8,316,6],[290,12,316,10,"lowHealthEnemies"],[290,28,316,26],[290,29,316,27,"length"],[290,35,316,33],[290,38,316,36],[290,39,316,37],[290,41,316,39],[291,10,317,8,"console"],[291,17,317,15],[291,18,317,16,"log"],[291,21,317,19],[291,22,317,20],[291,61,317,59],[291,63,317,61,"lowHealthEnemies"],[291,79,317,77],[291,80,317,78,"map"],[291,83,317,81],[291,84,317,82,"e"],[291,85,317,83],[291,89,317,87],[291,92,317,90,"e"],[291,93,317,91],[291,94,317,92,"id"],[291,96,317,94],[291,100,317,98,"e"],[291,101,317,99],[291,102,317,100,"health"],[291,108,317,106],[291,112,317,110,"e"],[291,113,317,111],[291,114,317,112,"maxHealth"],[291,123,317,121],[291,128,317,126],[291,129,317,127],[291,130,317,128],[292,8,318,6],[294,8,320,6],[295,8,321,6],[295,12,321,12,"beforeCount"],[295,23,321,23],[295,26,321,26,"newState"],[295,34,321,34],[295,35,321,35,"enemies"],[295,42,321,42],[295,43,321,43,"length"],[295,49,321,49],[296,8,322,6,"newState"],[296,16,322,14],[296,17,322,15,"enemies"],[296,24,322,22],[296,27,322,25,"newState"],[296,35,322,33],[296,36,322,34,"enemies"],[296,43,322,41],[296,44,322,42,"filter"],[296,50,322,48],[296,51,322,49,"enemy"],[296,56,322,54],[296,60,322,58,"enemy"],[296,65,322,63],[296,66,322,64,"health"],[296,72,322,70],[296,75,322,73],[296,76,322,74],[296,77,322,75],[297,8,323,6],[297,12,323,12,"afterCount"],[297,22,323,22],[297,25,323,25,"newState"],[297,33,323,33],[297,34,323,34,"enemies"],[297,41,323,41],[297,42,323,42,"length"],[297,48,323,48],[298,8,325,6],[298,12,325,10,"beforeCount"],[298,23,325,21],[298,28,325,26,"afterCount"],[298,38,325,36],[298,40,325,38],[299,10,326,8,"console"],[299,17,326,15],[299,18,326,16,"log"],[299,21,326,19],[299,22,326,20],[299,52,326,50,"beforeCount"],[299,63,326,61],[299,66,326,64,"afterCount"],[299,76,326,74],[299,102,326,100],[299,103,326,101],[300,8,327,6],[302,8,329,6],[303,8,330,6],[304,8,331,6],[304,12,331,12,"MAX_ENEMIES"],[304,23,331,23],[304,26,331,26],[304,28,331,28],[305,8,332,6],[305,12,332,12,"MIN_SPAWN_DELAY"],[305,27,332,27],[305,30,332,30],[305,33,332,33],[305,34,332,34],[305,35,332,35],[306,8,333,6],[306,12,333,12,"now"],[306,15,333,15],[306,18,333,18,"Date"],[306,22,333,22],[306,23,333,23,"now"],[306,26,333,26],[306,27,333,27],[306,28,333,28],[307,8,334,6],[307,12,334,12,"hasBoss"],[307,19,334,19],[307,22,334,22,"newState"],[307,30,334,30],[307,31,334,31,"enemies"],[307,38,334,38],[307,39,334,39,"some"],[307,43,334,43],[307,44,334,44,"enemy"],[307,49,334,49],[307,53,334,53,"enemy"],[307,58,334,58],[307,59,334,59,"isBoss"],[307,65,334,65],[307,66,334,66],[309,8,336,6],[310,8,337,6],[310,12,337,10],[310,13,337,11,"newState"],[310,21,337,19],[310,22,337,20,"lastSpawnTime"],[310,35,337,33],[310,37,337,35],[311,10,338,8,"newState"],[311,18,338,16],[311,19,338,17,"lastSpawnTime"],[311,32,338,30],[311,35,338,33,"now"],[311,38,338,36],[312,8,339,6],[313,8,341,6,"console"],[313,15,341,13],[313,16,341,14,"log"],[313,19,341,17],[313,20,341,18],[313,53,341,51,"newState"],[313,61,341,59],[313,62,341,60,"enemies"],[313,69,341,67],[313,70,341,68,"length"],[313,76,341,74],[313,85,341,83,"MAX_ENEMIES"],[313,96,341,94],[313,109,341,107,"hasBoss"],[313,116,341,114],[313,118,341,116],[313,119,341,117],[315,8,343,6],[316,8,344,6],[316,12,344,10],[316,13,344,11,"hasBoss"],[316,20,344,18],[316,24,344,22,"newState"],[316,32,344,30],[316,33,344,31,"enemies"],[316,40,344,38],[316,41,344,39,"length"],[316,47,344,45],[316,50,344,48,"MAX_ENEMIES"],[316,61,344,59],[316,65,344,64,"now"],[316,68,344,67],[316,71,344,70,"newState"],[316,79,344,78],[316,80,344,79,"lastSpawnTime"],[316,93,344,92],[316,97,344,97,"MIN_SPAWN_DELAY"],[316,112,344,112],[316,114,344,114],[317,10,345,8,"console"],[317,17,345,15],[317,18,345,16,"log"],[317,21,345,19],[317,22,345,20],[317,43,345,41,"newState"],[317,51,345,49],[317,52,345,50,"enemies"],[317,59,345,57],[317,60,345,58,"length"],[317,66,345,64],[317,69,345,67],[317,70,345,68],[317,74,345,72,"MAX_ENEMIES"],[317,85,345,83],[317,87,345,85],[317,88,345,86],[318,10,346,8,"spawnTestEnemy"],[318,24,346,22],[318,25,346,23,"newState"],[318,33,346,31],[318,34,346,32],[319,10,347,8,"newState"],[319,18,347,16],[319,19,347,17,"lastSpawnTime"],[319,32,347,30],[319,35,347,33,"now"],[319,38,347,36],[320,8,348,6],[321,8,350,6],[321,15,350,13,"newState"],[321,23,350,21],[322,6,351,4],[322,7,351,5],[322,47,351,6],[324,6,353,4],[325,6,354,4,"console"],[325,13,354,11],[325,14,354,12,"log"],[325,17,354,15],[325,18,354,16],[325,50,354,48,"enemiesToKill"],[325,63,354,61],[325,64,354,62,"length"],[325,70,354,68],[325,101,354,99],[325,102,354,100],[326,6,356,4,"enemiesToKill"],[326,19,356,17],[326,20,356,18,"forEach"],[326,27,356,25],[326,28,356,26],[326,29,356,27,"enemy"],[326,34,356,32],[326,36,356,34,"index"],[326,41,356,39],[326,46,356,44],[327,8,357,6,"console"],[327,15,357,13],[327,16,357,14,"log"],[327,19,357,17],[327,20,357,18],[327,57,357,55,"index"],[327,62,357,60],[327,65,357,63],[327,66,357,64],[327,70,357,68,"enemiesToKill"],[327,83,357,81],[327,84,357,82,"length"],[327,90,357,88],[327,104,357,102,"enemy"],[327,109,357,107],[327,110,357,108,"id"],[327,112,357,110],[327,114,357,112],[327,115,357,113],[328,8,358,6,"handleEnemyKill"],[328,23,358,21],[328,24,358,22,"enemy"],[328,29,358,27],[328,30,358,28],[329,6,359,4],[329,7,359,5],[329,8,359,6],[330,4,360,2],[330,5,360,3],[330,7,360,5],[330,8,360,6,"handleEnemyKill"],[330,23,360,21],[330,24,360,22],[330,25,360,23],[330,26,360,24],[330,27,360,25],[332,4,362,2],[333,4,363,2],[333,8,363,8,"findClosestEnemyInternal"],[333,32,363,32],[333,35,363,36,"enemies"],[333,42,363,58],[333,46,363,83],[334,6,364,4],[334,10,364,8,"enemies"],[334,17,364,15],[334,18,364,16,"length"],[334,24,364,22],[334,29,364,27],[334,30,364,28],[334,32,364,30],[334,39,364,37],[334,43,364,41],[336,6,366,4],[337,6,367,4],[337,10,367,10,"SCREEN_WIDTH"],[337,22,367,22],[337,25,367,25],[337,28,367,28],[338,6,368,4],[338,10,368,10,"GAME_AREA_HEIGHT"],[338,26,368,26],[338,29,368,29],[338,32,368,32],[338,35,368,35],[338,38,368,38],[338,39,368,39],[338,40,368,40],[339,6,369,4],[339,10,369,10,"ninjaX"],[339,16,369,16],[339,19,369,19,"SCREEN_WIDTH"],[339,31,369,31],[339,34,369,34],[339,35,369,35],[340,6,370,4],[340,10,370,10,"ninjaY"],[340,16,370,16],[340,19,370,19,"GAME_AREA_HEIGHT"],[340,35,370,35],[340,38,370,38],[340,39,370,39],[341,6,372,4],[341,10,372,8,"closestEnemy"],[341,22,372,20],[341,25,372,23,"enemies"],[341,32,372,30],[341,33,372,31],[341,34,372,32],[341,35,372,33],[342,6,373,4],[342,10,373,8,"closestDistance"],[342,25,373,23],[342,28,373,26,"Infinity"],[342,36,373,34],[343,6,375,4,"enemies"],[343,13,375,11],[343,14,375,12,"forEach"],[343,21,375,19],[343,22,375,20,"enemy"],[343,27,375,25],[343,31,375,29],[344,8,376,6],[344,12,376,12,"distance"],[344,20,376,20],[344,23,376,23,"Math"],[344,27,376,27],[344,28,376,28,"sqrt"],[344,32,376,32],[344,33,377,8,"Math"],[344,37,377,12],[344,38,377,13,"pow"],[344,41,377,16],[344,42,377,17,"enemy"],[344,47,377,22],[344,48,377,23,"position"],[344,56,377,31],[344,57,377,32,"x"],[344,58,377,33],[344,61,377,36,"ninjaX"],[344,67,377,42],[344,69,377,44],[344,70,377,45],[344,71,377,46],[344,74,378,8,"Math"],[344,78,378,12],[344,79,378,13,"pow"],[344,82,378,16],[344,83,378,17,"enemy"],[344,88,378,22],[344,89,378,23,"position"],[344,97,378,31],[344,98,378,32,"y"],[344,99,378,33],[344,102,378,36,"ninjaY"],[344,108,378,42],[344,110,378,44],[344,111,378,45],[344,112,379,6],[344,113,379,7],[345,8,381,6],[345,12,381,10,"distance"],[345,20,381,18],[345,23,381,21,"closestDistance"],[345,38,381,36],[345,40,381,38],[346,10,382,8,"closestDistance"],[346,25,382,23],[346,28,382,26,"distance"],[346,36,382,34],[347,10,383,8,"closestEnemy"],[347,22,383,20],[347,25,383,23,"enemy"],[347,30,383,28],[348,8,384,6],[349,6,385,4],[349,7,385,5],[349,8,385,6],[350,6,387,4,"console"],[350,13,387,11],[350,14,387,12,"log"],[350,17,387,15],[350,18,387,16],[350,60,387,58,"closestDistance"],[350,75,387,73],[350,76,387,74,"toFixed"],[350,83,387,81],[350,84,387,82],[350,85,387,83],[350,86,387,84],[350,88,387,86],[350,89,387,87],[351,6,388,4],[351,13,388,11,"closestEnemy"],[351,25,388,23],[352,4,389,2],[352,5,389,3],[354,4,391,2],[355,4,392,2],[355,8,392,8,"findClosestEnemy"],[355,24,392,24],[355,27,392,27,"findClosestEnemy"],[355,28,392,27],[355,33,392,53],[356,6,393,4],[356,13,393,11,"findClosestEnemyInternal"],[356,37,393,35],[356,38,393,36,"combatState"],[356,49,393,47],[356,50,393,48,"enemies"],[356,57,393,55],[356,58,393,56],[357,4,394,2],[357,5,394,3],[359,4,396,2],[360,4,397,2],[360,8,397,2,"_useState7"],[360,18,397,2],[360,21,397,58],[360,25,397,58,"useState"],[360,31,397,66],[360,32,397,66,"useState"],[360,40,397,66],[360,42,397,91],[361,8,397,93,"x"],[361,9,397,94],[361,11,397,96],[361,12,397,97],[362,8,397,99,"y"],[362,9,397,100],[362,11,397,102],[363,6,397,104],[363,7,397,105],[363,8,397,106],[364,6,397,106,"_useState8"],[364,16,397,106],[364,23,397,106,"_slicedToArray"],[364,37,397,106],[364,38,397,106,"default"],[364,45,397,106],[364,47,397,106,"_useState7"],[364,57,397,106],[365,6,397,9,"currentNinjaPosition"],[365,26,397,29],[365,29,397,29,"_useState8"],[365,39,397,29],[366,6,397,31,"setCurrentNinjaPosition"],[366,29,397,54],[366,32,397,54,"_useState8"],[366,42,397,54],[367,4,398,2],[367,8,398,2,"_useState9"],[367,18,398,2],[367,21,398,60],[367,25,398,60,"useState"],[367,31,398,68],[367,32,398,68,"useState"],[367,40,398,68],[367,42,398,69],[367,47,398,74],[367,48,398,75],[368,6,398,75,"_useState0"],[368,16,398,75],[368,23,398,75,"_slicedToArray"],[368,37,398,75],[368,38,398,75,"default"],[368,45,398,75],[368,47,398,75,"_useState9"],[368,57,398,75],[369,6,398,9,"isManualControlActive"],[369,27,398,30],[369,30,398,30,"_useState0"],[369,40,398,30],[370,6,398,32,"setIsManualControlActive"],[370,30,398,56],[370,33,398,56,"_useState0"],[370,43,398,56],[372,4,400,2],[373,4,401,2],[373,8,401,8,"updateNinjaPosition"],[373,27,401,27],[373,30,401,30],[373,34,401,30,"useCallback"],[373,40,401,41],[373,41,401,41,"useCallback"],[373,52,401,41],[373,54,401,43,"newPosition"],[373,65,401,78],[373,69,401,83],[374,6,402,4,"setCurrentNinjaPosition"],[374,29,402,27],[374,30,402,28,"newPosition"],[374,41,402,39],[374,42,402,40],[375,4,403,2],[375,5,403,3],[375,7,403,5],[375,9,403,7],[375,10,403,8],[377,4,405,2],[378,4,406,2],[378,8,406,8,"setManualControlActive"],[378,30,406,30],[378,33,406,33],[378,37,406,33,"useCallback"],[378,43,406,44],[378,44,406,44,"useCallback"],[378,55,406,44],[378,57,406,46,"active"],[378,63,406,61],[378,67,406,66],[379,6,407,4,"setIsManualControlActive"],[379,30,407,28],[379,31,407,29,"active"],[379,37,407,35],[379,38,407,36],[380,6,408,4,"console"],[380,13,408,11],[380,14,408,12,"log"],[380,17,408,15],[380,18,408,16],[380,39,408,37,"active"],[380,45,408,43],[380,48,408,46],[380,59,408,57],[380,62,408,60],[380,75,408,73],[380,88,408,86,"active"],[380,94,408,92],[380,97,408,95],[380,105,408,103],[380,108,408,106],[380,117,408,115],[380,119,408,117],[380,120,408,118],[381,4,409,2],[381,5,409,3],[381,7,409,5],[381,9,409,7],[381,10,409,8],[383,4,411,2],[384,4,412,2],[384,8,412,8,"handleProjectileHit"],[384,27,412,27],[384,30,412,31,"projectile"],[384,40,412,59],[384,44,412,64],[385,6,413,4,"console"],[385,13,413,11],[385,14,413,12,"log"],[385,17,413,15],[385,18,413,16],[385,35,413,33,"projectile"],[385,45,413,43],[385,46,413,44,"id"],[385,48,413,46],[385,62,413,60,"projectile"],[385,72,413,70],[385,73,413,71,"targetEnemyId"],[385,86,413,84],[385,94,413,92,"projectile"],[385,104,413,102],[385,105,413,103,"damage"],[385,111,413,109],[385,120,413,118],[385,121,413,119],[386,6,415,4,"setCombatState"],[386,20,415,18],[386,21,415,19,"prev"],[386,25,415,23],[386,29,415,27],[387,8,416,6],[387,12,416,12,"newState"],[387,20,416,20],[387,23,416,23],[388,10,416,25],[388,13,416,28,"prev"],[389,8,416,33],[389,9,416,34],[391,8,418,6],[392,8,419,6],[392,12,419,12,"enemyIndex"],[392,22,419,22],[392,25,419,25,"newState"],[392,33,419,33],[392,34,419,34,"enemies"],[392,41,419,41],[392,42,419,42,"findIndex"],[392,51,419,51],[392,52,419,52,"e"],[392,53,419,53],[392,57,419,57,"e"],[392,58,419,58],[392,59,419,59,"id"],[392,61,419,61],[392,66,419,66,"projectile"],[392,76,419,76],[392,77,419,77,"targetEnemyId"],[392,90,419,90],[392,91,419,91],[393,8,420,6],[393,12,420,10,"enemyIndex"],[393,22,420,20],[393,26,420,24],[393,27,420,25],[393,29,420,27],[394,10,421,8,"newState"],[394,18,421,16],[394,19,421,17,"enemies"],[394,26,421,24],[394,29,421,27],[394,30,421,28],[394,33,421,31,"newState"],[394,41,421,39],[394,42,421,40,"enemies"],[394,49,421,47],[394,50,421,48],[395,10,422,8,"newState"],[395,18,422,16],[395,19,422,17,"enemies"],[395,26,422,24],[395,27,422,25,"enemyIndex"],[395,37,422,35],[395,38,422,36],[395,41,422,39],[396,12,423,10],[396,15,423,13,"newState"],[396,23,423,21],[396,24,423,22,"enemies"],[396,31,423,29],[396,32,423,30,"enemyIndex"],[396,42,423,40],[396,43,423,41],[397,12,424,10,"health"],[397,18,424,16],[397,20,424,18,"newState"],[397,28,424,26],[397,29,424,27,"enemies"],[397,36,424,34],[397,37,424,35,"enemyIndex"],[397,47,424,45],[397,48,424,46],[397,49,424,47,"health"],[397,55,424,53],[397,58,424,56,"projectile"],[397,68,424,66],[397,69,424,67,"damage"],[397,75,424,73],[398,12,425,10,"lastDamaged"],[398,23,425,21],[398,25,425,23,"combatEngine"],[398,44,425,35],[398,45,425,35,"combatEngine"],[398,57,425,35],[398,58,425,36,"getCurrentTick"],[398,72,425,50],[398,73,425,51],[399,10,426,8],[399,11,426,9],[400,10,428,8,"console"],[400,17,428,15],[400,18,428,16,"log"],[400,21,428,19],[400,22,428,20],[400,34,428,32,"projectile"],[400,44,428,42],[400,45,428,43,"targetEnemyId"],[400,58,428,56],[400,70,428,68,"newState"],[400,78,428,76],[400,79,428,77,"enemies"],[400,86,428,84],[400,87,428,85,"enemyIndex"],[400,97,428,95],[400,98,428,96],[400,99,428,97,"health"],[400,105,428,103],[400,109,428,107,"newState"],[400,117,428,115],[400,118,428,116,"enemies"],[400,125,428,123],[400,126,428,124,"enemyIndex"],[400,136,428,134],[400,137,428,135],[400,138,428,136,"maxHealth"],[400,147,428,145],[400,149,428,147],[400,150,428,148],[401,8,429,6],[402,8,431,6],[402,15,431,13,"newState"],[402,23,431,21],[403,6,432,4],[403,7,432,5],[403,8,432,6],[405,6,434,4],[406,6,435,4,"setProjectiles"],[406,20,435,18],[406,21,435,19,"prev"],[406,25,435,23],[406,29,435,27,"prev"],[406,33,435,31],[406,34,435,32,"filter"],[406,40,435,38],[406,41,435,39,"p"],[406,42,435,40],[406,46,435,44,"p"],[406,47,435,45],[406,48,435,46,"id"],[406,50,435,48],[406,55,435,53,"projectile"],[406,65,435,63],[406,66,435,64,"id"],[406,68,435,66],[406,69,435,67],[406,70,435,68],[407,4,436,2],[407,5,436,3],[409,4,438,2],[410,4,439,2],[410,8,439,8,"castAbility"],[410,19,439,19],[410,22,439,22,"castAbility"],[410,23,439,23,"state"],[410,28,439,41],[410,30,439,43,"slotIndex"],[410,39,439,60],[410,44,439,65],[411,6,440,4],[411,10,440,10,"deck"],[411,14,440,14],[411,17,440,17,"state"],[411,22,440,22],[411,23,440,23,"abilityManager"],[411,37,440,37],[411,38,440,38,"getDeck"],[411,45,440,45],[411,46,440,46],[411,47,440,47],[412,6,441,4],[412,10,441,10,"ability"],[412,17,441,17],[412,20,441,20,"deck"],[412,24,441,24],[412,25,441,25,"slots"],[412,30,441,30],[412,31,441,31,"slotIndex"],[412,40,441,40],[412,41,441,41],[413,6,442,4],[413,10,442,8],[413,11,442,9,"ability"],[413,18,442,16],[413,20,442,18],[415,6,444,4],[416,6,445,4],[416,10,445,8,"damage"],[416,16,445,14],[416,19,445,17,"ability"],[416,26,445,24],[416,27,445,25,"stats"],[416,32,445,30],[416,33,445,31,"baseDamage"],[416,43,445,41],[418,6,447,4],[419,6,448,4,"deck"],[419,10,448,8],[419,11,448,9,"activeSynergies"],[419,26,448,24],[419,27,448,25,"forEach"],[419,34,448,32],[419,35,448,33,"synergy"],[419,42,448,40],[419,46,448,44],[420,8,449,6],[420,12,449,10,"synergy"],[420,19,449,17],[420,20,449,18,"bonus"],[420,25,449,23],[420,26,449,24,"damageBonus"],[420,37,449,35],[420,41,450,10,"synergy"],[420,48,450,17],[420,49,450,18,"requiredTags"],[420,61,450,30],[420,62,450,31,"some"],[420,66,450,35],[420,67,450,36,"tag"],[420,70,450,39],[420,74,450,43,"ability"],[420,81,450,50],[420,82,450,51,"tags"],[420,86,450,55],[420,87,450,56,"includes"],[420,95,450,64],[420,96,450,65,"tag"],[420,99,450,68],[420,100,450,69],[420,101,450,70],[420,103,450,72],[421,10,451,8,"damage"],[421,16,451,14],[421,20,451,19],[421,21,451,20],[421,24,451,23,"synergy"],[421,31,451,30],[421,32,451,31,"bonus"],[421,37,451,36],[421,38,451,37,"damageBonus"],[421,49,451,48],[421,52,451,51],[421,55,451,55],[422,8,452,6],[423,6,453,4],[423,7,453,5],[423,8,453,6],[425,6,455,4],[426,6,456,4],[426,10,456,10,"isAOE"],[426,15,456,15],[426,18,456,18,"ability"],[426,25,456,25],[426,26,456,26,"effects"],[426,33,456,33],[426,34,456,34,"includes"],[426,42,456,42],[426,43,456,43],[426,48,456,48],[426,49,456,49],[426,53,456,53,"ability"],[426,60,456,60],[426,61,456,61,"stats"],[426,66,456,66],[426,67,456,67,"aoeRadius"],[426,76,456,76],[427,6,458,4],[427,10,458,8,"isAOE"],[427,15,458,13],[427,17,458,15],[428,8,459,6,"console"],[428,15,459,13],[428,16,459,14,"log"],[428,19,459,17],[428,20,459,18],[428,39,459,37,"ability"],[428,46,459,44],[428,47,459,45,"name"],[428,51,459,49],[428,67,459,65,"ability"],[428,74,459,72],[428,75,459,73,"stats"],[428,80,459,78],[428,81,459,79,"aoeRadius"],[428,90,459,88],[428,92,459,90],[428,93,459,91],[430,8,461,6],[431,8,462,6],[431,12,462,12,"ninjaX"],[431,18,462,18],[431,21,462,21,"currentNinjaPosition"],[431,41,462,41],[431,42,462,42,"x"],[431,43,462,43],[431,46,462,46],[431,48,462,48],[431,49,462,49],[431,50,462,50],[432,8,463,6],[432,12,463,12,"ninjaY"],[432,18,463,18],[432,21,463,21,"currentNinjaPosition"],[432,41,463,41],[432,42,463,42,"y"],[432,43,463,43],[432,46,463,46],[432,48,463,48],[433,8,464,6],[433,12,464,12,"aoeRadius"],[433,21,464,21],[433,24,464,24,"ability"],[433,31,464,31],[433,32,464,32,"stats"],[433,37,464,37],[433,38,464,38,"aoeRadius"],[433,47,464,47],[434,8,466,6],[434,12,466,12,"enemiesInRange"],[434,26,466,26],[434,29,466,29,"state"],[434,34,466,34],[434,35,466,35,"enemies"],[434,42,466,42],[434,43,466,43,"filter"],[434,49,466,49],[434,50,466,50,"enemy"],[434,55,466,55],[434,59,466,59],[435,10,467,8],[435,14,467,14,"enemyX"],[435,20,467,20],[435,23,467,23,"enemy"],[435,28,467,28],[435,29,467,29,"position"],[435,37,467,37],[435,38,467,38,"x"],[435,39,467,39],[435,42,467,42],[435,46,467,46],[435,47,467,47],[435,48,467,48],[436,10,468,8],[436,14,468,14,"enemyY"],[436,20,468,20],[436,23,468,23,"enemy"],[436,28,468,28],[436,29,468,29,"position"],[436,37,468,37],[436,38,468,38,"y"],[436,39,468,39],[436,42,468,42],[436,46,468,46],[437,10,469,8],[437,14,469,14,"distance"],[437,22,469,22],[437,25,469,25,"Math"],[437,29,469,29],[437,30,469,30,"sqrt"],[437,34,469,34],[437,35,469,35,"Math"],[437,39,469,39],[437,40,469,40,"pow"],[437,43,469,43],[437,44,469,44,"enemyX"],[437,50,469,50],[437,53,469,53,"ninjaX"],[437,59,469,59],[437,61,469,61],[437,62,469,62],[437,63,469,63],[437,66,469,66,"Math"],[437,70,469,70],[437,71,469,71,"pow"],[437,74,469,74],[437,75,469,75,"enemyY"],[437,81,469,81],[437,84,469,84,"ninjaY"],[437,90,469,90],[437,92,469,92],[437,93,469,93],[437,94,469,94],[437,95,469,95],[438,10,470,8],[438,17,470,15,"distance"],[438,25,470,23],[438,29,470,27,"aoeRadius"],[438,38,470,36],[439,8,471,6],[439,9,471,7],[439,10,471,8],[440,8,473,6,"console"],[440,15,473,13],[440,16,473,14,"log"],[440,19,473,17],[440,20,473,18],[440,45,473,43,"enemiesInRange"],[440,59,473,57],[440,60,473,58,"length"],[440,66,473,64],[440,88,473,86,"aoeRadius"],[440,97,473,95],[440,107,473,105],[440,108,473,106],[442,8,475,6],[443,8,476,6,"enemiesInRange"],[443,22,476,20],[443,23,476,21,"forEach"],[443,30,476,28],[443,31,476,29,"enemy"],[443,36,476,34],[443,40,476,38],[444,10,477,8],[444,14,477,14,"damageResult"],[444,26,477,26],[444,29,477,29,"DamageCalculator"],[444,48,477,45],[444,49,477,45,"DamageCalculator"],[444,65,477,45],[444,66,477,46,"calculateDamage"],[444,81,477,61],[444,82,477,62,"damage"],[444,88,477,68],[444,90,477,70,"state"],[444,95,477,75],[444,96,477,76,"playerStats"],[444,107,477,87],[444,109,477,89,"enemy"],[444,114,477,94],[444,115,477,95,"stats"],[444,120,477,100],[444,121,477,101],[445,10,478,8,"createProjectile"],[445,26,478,24],[445,27,478,25,"enemy"],[445,32,478,30],[445,34,478,32,"damageResult"],[445,46,478,44],[445,47,478,45,"damage"],[445,53,478,51],[445,55,478,53,"currentNinjaPosition"],[445,75,478,73],[445,77,478,75],[446,12,479,10,"id"],[446,14,479,12],[446,16,479,14,"ability"],[446,23,479,21],[446,24,479,22,"id"],[446,26,479,24],[447,12,480,10,"name"],[447,16,480,14],[447,18,480,16,"ability"],[447,25,480,23],[447,26,480,24,"name"],[447,30,480,28],[448,12,481,10,"icon"],[448,16,481,14],[448,18,481,16,"ability"],[448,25,481,23],[448,26,481,24,"icon"],[449,10,482,8],[449,11,482,9],[449,12,482,10],[450,10,484,8,"console"],[450,17,484,15],[450,18,484,16,"log"],[450,21,484,19],[450,22,484,20],[450,37,484,35,"enemy"],[450,42,484,40],[450,43,484,41,"name"],[450,47,484,45],[450,55,484,53,"damageResult"],[450,67,484,65],[450,68,484,66,"damage"],[450,74,484,72],[450,83,484,81],[450,84,484,82],[451,8,485,6],[451,9,485,7],[451,10,485,8],[452,8,487,6,"console"],[452,15,487,13],[452,16,487,14,"log"],[452,19,487,17],[452,20,487,18],[452,26,487,24,"ability"],[452,33,487,31],[452,34,487,32,"name"],[452,38,487,36],[452,56,487,54,"enemiesInRange"],[452,70,487,68],[452,71,487,69,"length"],[452,77,487,75],[452,93,487,91,"damage"],[452,99,487,97],[452,118,487,116],[452,119,487,117],[453,6,489,4],[453,7,489,5],[453,13,489,11],[454,8,490,6],[455,8,491,6],[455,12,491,12,"target"],[455,18,491,18],[455,21,491,21,"findClosestEnemyInternal"],[455,45,491,45],[455,46,491,46,"state"],[455,51,491,51],[455,52,491,52,"enemies"],[455,59,491,59],[455,60,491,60],[456,8,492,6],[456,12,492,10],[456,13,492,11,"target"],[456,19,492,17],[456,21,492,19],[457,8,494,6],[457,12,494,12,"damageResult"],[457,24,494,24],[457,27,494,27,"DamageCalculator"],[457,46,494,43],[457,47,494,43,"DamageCalculator"],[457,63,494,43],[457,64,494,44,"calculateDamage"],[457,79,494,59],[457,80,494,60,"damage"],[457,86,494,66],[457,88,494,68,"state"],[457,93,494,73],[457,94,494,74,"playerStats"],[457,105,494,85],[457,107,494,87,"target"],[457,113,494,93],[457,114,494,94,"stats"],[457,119,494,99],[457,120,494,100],[459,8,496,6],[460,8,497,6,"createProjectile"],[460,24,497,22],[460,25,497,23,"target"],[460,31,497,29],[460,33,497,31,"damageResult"],[460,45,497,43],[460,46,497,44,"damage"],[460,52,497,50],[460,54,497,52,"currentNinjaPosition"],[460,74,497,72],[460,76,497,74],[461,10,498,8,"id"],[461,12,498,10],[461,14,498,12,"ability"],[461,21,498,19],[461,22,498,20,"id"],[461,24,498,22],[462,10,499,8,"name"],[462,14,499,12],[462,16,499,14,"ability"],[462,23,499,21],[462,24,499,22,"name"],[462,28,499,26],[463,10,500,8,"icon"],[463,14,500,12],[463,16,500,14,"ability"],[463,23,500,21],[463,24,500,22,"icon"],[464,8,501,6],[464,9,501,7],[464,10,501,8],[465,8,503,6,"console"],[465,15,503,13],[465,16,503,14,"log"],[465,19,503,17],[465,20,503,18],[465,26,503,24,"ability"],[465,33,503,31],[465,34,503,32,"name"],[465,38,503,36],[465,66,503,64,"damageResult"],[465,78,503,76],[465,79,503,77,"damage"],[465,85,503,83],[465,95,503,93,"damageResult"],[465,107,503,105],[465,108,503,106,"isCritical"],[465,118,503,116],[465,121,503,119],[465,131,503,129],[465,134,503,132],[465,136,503,134],[465,138,503,136],[465,139,503,137],[466,6,504,4],[468,6,506,4],[469,6,507,4],[469,10,507,8,"ability"],[469,17,507,15],[469,18,507,16,"effects"],[469,25,507,23],[469,26,507,24,"includes"],[469,34,507,32],[469,35,507,33],[469,40,507,38],[469,41,507,39],[469,45,507,43,"ability"],[469,52,507,50],[469,53,507,51,"stats"],[469,58,507,56],[469,59,507,57,"duration"],[469,67,507,65],[469,69,507,67],[470,8,508,6],[470,12,508,12,"targets"],[470,19,508,19],[470,22,508,22,"isAOE"],[470,27,508,27],[470,30,509,8,"state"],[470,35,509,13],[470,36,509,14,"enemies"],[470,43,509,21],[470,44,509,22,"filter"],[470,50,509,28],[470,51,509,29,"enemy"],[470,56,509,34],[470,60,509,38],[471,10,510,10],[471,14,510,16,"ninjaX"],[471,20,510,22],[471,23,510,25,"currentNinjaPosition"],[471,43,510,45],[471,44,510,46,"x"],[471,45,510,47],[471,48,510,50],[471,50,510,52],[472,10,511,10],[472,14,511,16,"ninjaY"],[472,20,511,22],[472,23,511,25,"currentNinjaPosition"],[472,43,511,45],[472,44,511,46,"y"],[472,45,511,47],[472,48,511,50],[472,50,511,52],[473,10,512,10],[473,14,512,16,"enemyX"],[473,20,512,22],[473,23,512,25,"enemy"],[473,28,512,30],[473,29,512,31,"position"],[473,37,512,39],[473,38,512,40,"x"],[473,39,512,41],[473,42,512,44],[473,46,512,48],[474,10,513,10],[474,14,513,16,"enemyY"],[474,20,513,22],[474,23,513,25,"enemy"],[474,28,513,30],[474,29,513,31,"position"],[474,37,513,39],[474,38,513,40,"y"],[474,39,513,41],[474,42,513,44],[474,46,513,48],[475,10,514,10],[475,14,514,16,"distance"],[475,22,514,24],[475,25,514,27,"Math"],[475,29,514,31],[475,30,514,32,"sqrt"],[475,34,514,36],[475,35,514,37,"Math"],[475,39,514,41],[475,40,514,42,"pow"],[475,43,514,45],[475,44,514,46,"enemyX"],[475,50,514,52],[475,53,514,55,"ninjaX"],[475,59,514,61],[475,61,514,63],[475,62,514,64],[475,63,514,65],[475,66,514,68,"Math"],[475,70,514,72],[475,71,514,73,"pow"],[475,74,514,76],[475,75,514,77,"enemyY"],[475,81,514,83],[475,84,514,86,"ninjaY"],[475,90,514,92],[475,92,514,94],[475,93,514,95],[475,94,514,96],[475,95,514,97],[476,10,515,10],[476,17,515,17,"distance"],[476,25,515,25],[476,29,515,29,"ability"],[476,36,515,36],[476,37,515,37,"stats"],[476,42,515,42],[476,43,515,43,"aoeRadius"],[476,52,515,52],[477,8,516,8],[477,9,516,9],[477,10,516,10],[477,13,517,8],[477,14,517,9,"findClosestEnemyInternal"],[477,38,517,33],[477,39,517,34,"state"],[477,44,517,39],[477,45,517,40,"enemies"],[477,52,517,47],[477,53,517,48],[477,54,517,49],[477,55,517,50,"filter"],[477,61,517,56],[477,62,517,57,"Boolean"],[477,69,517,64],[477,70,517,65],[478,8,519,6,"targets"],[478,15,519,13],[478,16,519,14,"forEach"],[478,23,519,21],[478,24,519,22,"target"],[478,30,519,28],[478,34,519,32],[479,10,520,8,"state"],[479,15,520,13],[479,16,520,14,"statusEffects"],[479,29,520,27],[479,30,520,28,"addEffect"],[479,39,520,37],[479,40,520,38,"target"],[479,46,520,44],[479,47,520,45,"id"],[479,49,520,47],[479,51,520,49],[480,12,521,10,"id"],[480,14,521,12],[480,16,521,14],[480,19,521,17,"ability"],[480,26,521,24],[480,27,521,25,"id"],[480,29,521,27],[480,35,521,33],[481,12,522,10,"type"],[481,16,522,14],[481,18,522,16],[481,23,522,21],[482,12,523,10,"remainingTicks"],[482,26,523,24],[482,28,523,26,"Math"],[482,32,523,30],[482,33,523,31,"floor"],[482,38,523,36],[482,39,523,37,"ability"],[482,46,523,44],[482,47,523,45,"stats"],[482,52,523,50],[482,53,523,51,"duration"],[482,61,523,59],[482,64,523,62],[482,66,523,64],[482,67,523,65],[483,12,524,10,"tickInterval"],[483,24,524,22],[483,26,524,24],[483,28,524,26],[484,12,525,10,"lastTick"],[484,20,525,18],[484,22,525,20,"state"],[484,27,525,25],[484,28,525,26,"currentTick"],[484,39,525,37],[485,12,526,10,"value"],[485,17,526,15],[485,19,526,17,"Math"],[485,23,526,21],[485,24,526,22,"floor"],[485,29,526,27],[485,30,526,28,"damage"],[485,36,526,34],[485,39,526,37],[485,42,526,40],[485,43,526,41],[486,12,527,10,"stackable"],[486,21,527,19],[486,23,527,21],[487,10,528,8],[487,11,528,9],[487,12,528,10],[488,8,529,6],[488,9,529,7],[488,10,529,8],[489,6,530,4],[491,6,532,4],[492,6,533,4],[492,10,533,8,"ability"],[492,17,533,15],[492,18,533,16,"effects"],[492,25,533,23],[492,26,533,24,"includes"],[492,34,533,32],[492,35,533,33],[492,41,533,39],[492,42,533,40],[492,46,533,44,"ability"],[492,53,533,51],[492,54,533,52,"id"],[492,56,533,54],[492,61,533,59],[492,75,533,73],[492,77,533,75],[493,8,534,6,"console"],[493,15,534,13],[493,16,534,14,"log"],[493,19,534,17],[493,20,534,18],[493,66,534,64,"ability"],[493,73,534,71],[493,74,534,72,"stats"],[493,79,534,77],[493,80,534,78,"duration"],[493,88,534,86],[493,98,534,96],[493,99,534,97],[495,8,536,6],[496,8,537,6],[496,12,537,12,"cloneX"],[496,18,537,18],[496,21,537,21,"currentNinjaPosition"],[496,41,537,41],[496,42,537,42,"x"],[496,43,537,43],[496,46,537,46],[496,48,537,48],[496,49,537,49],[496,50,537,50],[497,8,538,6],[497,12,538,12,"cloneY"],[497,18,538,18],[497,21,538,21,"currentNinjaPosition"],[497,41,538,41],[497,42,538,42,"y"],[497,43,538,43],[497,46,538,46],[497,48,538,48],[497,49,538,49],[497,50,538,50],[499,8,540,6,"state"],[499,13,540,11],[499,14,540,12,"shadowClone"],[499,25,540,23],[499,28,540,26],[500,10,541,8,"id"],[500,12,541,10],[500,14,541,12],[500,30,541,28,"Date"],[500,34,541,32],[500,35,541,33,"now"],[500,38,541,36],[500,39,541,37],[500,40,541,38],[500,42,541,40],[501,10,542,8,"remainingTicks"],[501,24,542,22],[501,26,542,24,"Math"],[501,30,542,28],[501,31,542,29,"floor"],[501,36,542,34],[501,37,542,35,"ability"],[501,44,542,42],[501,45,542,43,"stats"],[501,50,542,48],[501,51,542,49,"duration"],[501,59,542,57],[501,62,542,60],[501,64,542,62],[501,65,542,63],[502,10,542,65],[503,10,543,8,"position"],[503,18,543,16],[503,20,543,18],[504,12,543,20,"x"],[504,13,543,21],[504,15,543,23,"cloneX"],[504,21,543,29],[505,12,543,31,"y"],[505,13,543,32],[505,15,543,34,"cloneY"],[506,10,543,41],[506,11,543,42],[507,10,544,8,"damageMultiplier"],[507,26,544,24],[507,28,544,26],[507,31,544,29],[507,32,544,31],[508,8,545,6],[508,9,545,7],[509,8,547,6,"console"],[509,15,547,13],[509,16,547,14,"log"],[509,19,547,17],[509,20,547,18],[509,63,547,61,"ability"],[509,70,547,68],[509,71,547,69,"stats"],[509,76,547,74],[509,77,547,75,"duration"],[509,85,547,83],[509,108,547,106],[509,109,547,107],[510,6,548,4],[511,4,549,2],[511,5,549,3],[513,4,551,2],[514,4,552,2],[514,8,552,8,"createProjectile"],[514,24,552,24],[514,27,552,27,"createProjectile"],[514,28,552,28,"targetEnemy"],[514,39,552,52],[514,41,552,54,"damage"],[514,47,552,68],[514,49,552,70,"ninjaPos"],[514,57,552,103],[514,59,552,105,"abilityInfo"],[514,70,552,159],[514,75,552,164],[515,6,553,4],[515,10,553,10,"SCREEN_WIDTH"],[515,22,553,22],[515,25,553,25],[515,28,553,28],[516,6,554,4],[516,10,554,10,"GAME_AREA_HEIGHT"],[516,26,554,26],[516,29,554,29],[516,32,554,32],[516,35,554,35],[516,38,554,38],[516,39,554,39],[516,40,554,40],[517,6,555,4],[517,10,555,10,"NINJA_SIZE"],[517,20,555,20],[517,23,555,23],[517,25,555,25],[519,6,557,4],[520,6,558,4],[520,10,558,10,"ninjaX"],[520,16,558,16],[520,19,558,19,"ninjaPos"],[520,27,558,27],[520,30,558,30,"ninjaPos"],[520,38,558,38],[520,39,558,39,"x"],[520,40,558,40],[520,43,558,43,"NINJA_SIZE"],[520,53,558,53],[520,56,558,56],[520,57,558,57],[520,60,558,60,"SCREEN_WIDTH"],[520,72,558,72],[520,75,558,75],[520,76,558,76],[521,6,559,4],[521,10,559,10,"ninjaY"],[521,16,559,16],[521,19,559,19,"ninjaPos"],[521,27,559,27],[521,30,559,30,"ninjaPos"],[521,38,559,38],[521,39,559,39,"y"],[521,40,559,40],[521,43,559,43,"NINJA_SIZE"],[521,53,559,53],[521,56,559,56],[521,57,559,57],[521,60,559,60,"GAME_AREA_HEIGHT"],[521,76,559,76],[521,79,559,79],[521,80,559,80],[522,6,560,4],[522,10,560,10,"ENEMY_SIZE"],[522,20,560,20],[522,23,560,23],[522,25,560,25],[523,6,562,4],[523,10,562,10,"projectile"],[523,20,562,38],[523,23,562,41],[524,8,563,6,"id"],[524,10,563,8],[524,12,563,10],[524,20,563,18,"Date"],[524,24,563,22],[524,25,563,23,"now"],[524,28,563,26],[524,29,563,27],[524,30,563,28],[524,34,563,32,"Math"],[524,38,563,36],[524,39,563,37,"random"],[524,45,563,43],[524,46,563,44],[524,47,563,45],[524,49,563,47],[525,8,564,6,"x"],[525,9,564,7],[525,11,564,9,"ninjaX"],[525,17,564,15],[526,8,565,6,"y"],[526,9,565,7],[526,11,565,9,"ninjaY"],[526,17,565,15],[527,8,566,6,"targetX"],[527,15,566,13],[527,17,566,15,"targetEnemy"],[527,28,566,26],[527,29,566,27,"position"],[527,37,566,35],[527,38,566,36,"x"],[527,39,566,37],[527,42,566,40,"ENEMY_SIZE"],[527,52,566,50],[527,55,566,53],[527,56,566,54],[528,8,567,6,"targetY"],[528,15,567,13],[528,17,567,15,"targetEnemy"],[528,28,567,26],[528,29,567,27,"position"],[528,37,567,35],[528,38,567,36,"y"],[528,39,567,37],[528,42,567,40,"ENEMY_SIZE"],[528,52,567,50],[528,55,567,53],[528,56,567,54],[529,8,568,6,"targetEnemyId"],[529,21,568,19],[529,23,568,21,"targetEnemy"],[529,34,568,32],[529,35,568,33,"id"],[529,37,568,35],[530,8,569,6,"damage"],[530,14,569,12],[530,16,569,14,"damage"],[530,22,569,20],[531,8,570,6,"startTime"],[531,17,570,15],[531,19,570,17,"Date"],[531,23,570,21],[531,24,570,22,"now"],[531,27,570,25],[531,28,570,26],[531,29,570,27],[532,8,571,6,"duration"],[532,16,571,14],[532,18,571,16],[532,21,571,19],[533,8,571,21],[534,8,572,6],[535,8,573,6,"abilityId"],[535,17,573,15],[535,19,573,17,"abilityInfo"],[535,30,573,28],[535,32,573,30,"id"],[535,34,573,32],[535,38,573,36],[535,54,573,52],[536,8,574,6,"abilityName"],[536,19,574,17],[536,21,574,19,"abilityInfo"],[536,32,574,30],[536,34,574,32,"name"],[536,38,574,36],[536,42,574,40],[536,58,574,56],[537,8,575,6,"abilityIcon"],[537,19,575,17],[537,21,575,19,"abilityInfo"],[537,32,575,30],[537,34,575,32,"icon"],[537,38,575,36],[537,42,575,40],[537,46,575,44],[537,47,575,46],[538,6,576,4],[538,7,576,5],[539,6,578,4,"console"],[539,13,578,11],[539,14,578,12,"log"],[539,17,578,15],[539,18,578,16],[539,53,578,51,"targetEnemy"],[539,64,578,62],[539,65,578,63,"id"],[539,67,578,65],[539,75,578,73,"damage"],[539,81,578,79],[539,90,578,88],[539,91,578,89],[540,6,579,4,"console"],[540,13,579,11],[540,14,579,12,"log"],[540,17,579,15],[540,18,579,16],[540,53,579,51,"ninjaX"],[540,59,579,57],[540,64,579,62,"ninjaY"],[540,70,579,68],[540,87,579,85,"projectile"],[540,97,579,95],[540,98,579,96,"targetX"],[540,105,579,103],[540,110,579,108,"projectile"],[540,120,579,118],[540,121,579,119,"targetY"],[540,128,579,126],[540,131,579,129],[540,132,579,130],[541,6,581,4,"setProjectiles"],[541,20,581,18],[541,21,581,19,"prev"],[541,25,581,23],[541,29,581,27],[541,30,581,28],[541,33,581,31,"prev"],[541,37,581,35],[541,39,581,37,"projectile"],[541,49,581,47],[541,50,581,48],[541,51,581,49],[543,6,583,4],[544,6,584,4,"setTimeout"],[544,16,584,14],[544,17,584,15],[544,23,584,21],[545,8,585,6,"handleProjectileHit"],[545,27,585,25],[545,28,585,26,"projectile"],[545,38,585,36],[545,39,585,37],[546,6,586,4],[546,7,586,5],[546,9,586,7],[546,12,586,10],[546,13,586,11],[547,4,587,2],[547,5,587,3],[549,4,589,2],[550,4,590,2],[550,8,590,8,"spawnTestEnemy"],[550,22,590,22],[550,25,590,26,"state"],[550,30,590,44],[550,34,590,49],[551,6,591,4,"console"],[551,13,591,11],[551,14,591,12,"log"],[551,17,591,15],[551,18,591,16],[551,83,591,81],[551,84,591,82],[553,6,593,4],[554,6,594,4],[554,10,594,10,"zoneEnemy"],[554,19,594,19],[554,22,594,22,"spawnZoneEnemy"],[554,36,594,36],[554,37,594,37],[554,38,594,38],[555,6,595,4],[555,10,595,8],[555,11,595,9,"zoneEnemy"],[555,20,595,18],[555,22,595,20],[556,8,596,6,"console"],[556,15,596,13],[556,16,596,14,"log"],[556,19,596,17],[556,20,596,18],[556,76,596,74],[556,77,596,75],[557,8,597,6],[558,8,598,6,"spawnBasicTestEnemy"],[558,27,598,25],[558,28,598,26,"state"],[558,33,598,31],[558,34,598,32],[559,8,599,6],[560,6,600,4],[561,6,602,4,"console"],[561,13,602,11],[561,14,602,12,"log"],[561,17,602,15],[561,18,602,16],[561,44,602,42,"zoneEnemy"],[561,53,602,51],[561,54,602,52,"name"],[561,58,602,56],[561,63,602,61,"zoneEnemy"],[561,72,602,70],[561,73,602,71,"typeId"],[561,79,602,77],[561,94,602,92,"currentZone"],[561,105,602,103],[561,107,602,105,"id"],[561,109,602,107],[561,119,602,117,"currentZoneLevel"],[561,135,602,133],[561,137,602,135,"level"],[561,142,602,140],[561,144,602,142],[561,145,602,143],[563,6,604,4],[564,6,605,4],[564,10,605,10,"combatEnemy"],[564,21,605,34],[564,24,605,37],[565,8,606,6,"id"],[565,10,606,8],[565,12,606,10,"zoneEnemy"],[565,21,606,19],[565,22,606,20,"id"],[565,24,606,22],[566,8,607,6,"name"],[566,12,607,10],[566,14,607,12,"zoneEnemy"],[566,23,607,21],[566,24,607,22,"name"],[566,28,607,26],[567,8,608,6,"health"],[567,14,608,12],[567,16,608,14,"zoneEnemy"],[567,25,608,23],[567,26,608,24,"hp"],[567,28,608,26],[568,8,609,6,"maxHealth"],[568,17,609,15],[568,19,609,17,"zoneEnemy"],[568,28,609,26],[568,29,609,27,"maxHP"],[568,34,609,32],[569,8,610,6,"stats"],[569,13,610,11],[569,15,610,13],[570,10,611,8,"attack"],[570,16,611,14],[570,18,611,16,"zoneEnemy"],[570,27,611,25],[570,28,611,26,"attack"],[570,34,611,32],[571,10,612,8,"defense"],[571,17,612,15],[571,19,612,17],[571,21,612,19],[572,10,612,21],[573,10,613,8,"health"],[573,16,613,14],[573,18,613,16,"zoneEnemy"],[573,27,613,25],[573,28,613,26,"hp"],[573,30,613,28],[574,10,614,8,"maxHealth"],[574,19,614,17],[574,21,614,19,"zoneEnemy"],[574,30,614,28],[574,31,614,29,"maxHP"],[574,36,614,34],[575,10,615,8,"critChance"],[575,20,615,18],[575,22,615,20],[575,23,615,21],[576,10,616,8,"critDamage"],[576,20,616,18],[576,22,616,20],[576,25,616,23],[577,10,617,8,"cooldownReduction"],[577,27,617,25],[577,29,617,27],[578,8,618,6],[578,9,618,7],[579,8,619,6,"position"],[579,16,619,14],[579,18,619,16,"zoneEnemy"],[579,27,619,25],[579,28,619,26,"position"],[579,36,619,34],[580,8,620,6,"lastDamaged"],[580,19,620,17],[580,21,620,19],[580,22,620,20],[581,8,621,6],[582,8,622,6,"zoneTypeId"],[582,18,622,16],[582,20,622,18,"zoneEnemy"],[582,29,622,27],[582,30,622,28,"typeId"],[582,36,622,34],[583,8,623,6,"zoneXP"],[583,14,623,12],[583,16,623,14,"zoneEnemy"],[583,25,623,23],[583,26,623,24,"xp"],[584,6,624,4],[584,7,624,5],[585,6,626,4,"console"],[585,13,626,11],[585,14,626,12,"log"],[585,17,626,15],[585,18,626,16],[585,42,626,40,"combatEnemy"],[585,53,626,51],[585,54,626,52,"name"],[585,58,626,56],[585,67,626,65,"combatEnemy"],[585,78,626,76],[585,79,626,77,"health"],[585,85,626,83],[585,100,626,98,"currentZone"],[585,111,626,109],[585,113,626,111,"id"],[585,115,626,113],[585,125,626,123,"currentZoneLevel"],[585,141,626,139],[585,143,626,141,"level"],[585,148,626,146],[585,150,626,148],[585,151,626,149],[586,6,627,4,"state"],[586,11,627,9],[586,12,627,10,"enemies"],[586,19,627,17],[586,20,627,18,"push"],[586,24,627,22],[586,25,627,23,"combatEnemy"],[586,36,627,34],[586,37,627,35],[587,4,628,2],[587,5,628,3],[589,4,630,2],[590,4,631,2],[590,8,631,8,"spawnBasicTestEnemy"],[590,27,631,27],[590,30,631,31,"state"],[590,35,631,49],[590,39,631,54],[591,6,632,4],[591,10,632,10,"SCREEN_WIDTH"],[591,22,632,22],[591,25,632,25],[591,28,632,28],[592,6,633,4],[592,10,633,10,"GAME_AREA_HEIGHT"],[592,26,633,26],[592,29,633,29],[592,32,633,32],[592,35,633,35],[592,38,633,38],[593,6,634,4],[593,10,634,10,"ENEMY_SIZE"],[593,20,634,20],[593,23,634,23],[593,25,634,25],[594,6,636,4],[594,10,636,10,"x"],[594,11,636,11],[594,14,636,14,"Math"],[594,18,636,18],[594,19,636,19,"random"],[594,25,636,25],[594,26,636,26],[594,27,636,27],[594,31,636,31,"SCREEN_WIDTH"],[594,43,636,43],[594,46,636,46,"ENEMY_SIZE"],[594,56,636,56],[594,59,636,59],[594,60,636,60],[594,61,636,61],[594,64,636,64,"ENEMY_SIZE"],[594,74,636,74],[595,6,637,4],[595,10,637,10,"y"],[595,11,637,11],[595,14,637,14,"Math"],[595,18,637,18],[595,19,637,19,"random"],[595,25,637,25],[595,26,637,26],[595,27,637,27],[595,31,637,31,"GAME_AREA_HEIGHT"],[595,47,637,47],[595,50,637,50,"ENEMY_SIZE"],[595,60,637,60],[595,63,637,63],[595,64,637,64],[595,65,637,65],[595,68,637,68,"ENEMY_SIZE"],[595,78,637,78],[596,6,639,4],[596,10,639,10,"enemy"],[596,15,639,28],[596,18,639,31],[597,8,640,6,"id"],[597,10,640,8],[597,12,640,10],[597,30,640,28,"Date"],[597,34,640,32],[597,35,640,33,"now"],[597,38,640,36],[597,39,640,37],[597,40,640,38],[597,44,640,42,"Math"],[597,48,640,46],[597,49,640,47,"random"],[597,55,640,53],[597,56,640,54],[597,57,640,55],[597,59,640,57],[598,8,641,6,"name"],[598,12,641,10],[598,14,641,12],[598,26,641,24,"Math"],[598,30,641,28],[598,31,641,29,"floor"],[598,36,641,34],[598,37,641,35,"Math"],[598,41,641,39],[598,42,641,40,"random"],[598,48,641,46],[598,49,641,47],[598,50,641,48],[598,53,641,51],[598,56,641,54],[598,57,641,55],[598,59,641,57],[599,8,642,6,"health"],[599,14,642,12],[599,16,642,14],[599,18,642,16],[600,8,643,6,"maxHealth"],[600,17,643,15],[600,19,643,17],[600,21,643,19],[601,8,644,6,"stats"],[601,13,644,11],[601,15,644,13],[602,10,645,8,"attack"],[602,16,645,14],[602,18,645,16],[602,20,645,18],[603,10,646,8,"defense"],[603,17,646,15],[603,19,646,17],[603,21,646,19],[604,10,647,8,"health"],[604,16,647,14],[604,18,647,16],[604,20,647,18],[605,10,648,8,"maxHealth"],[605,19,648,17],[605,21,648,19],[605,23,648,21],[606,10,649,8,"critChance"],[606,20,649,18],[606,22,649,20],[606,23,649,21],[607,10,650,8,"critDamage"],[607,20,650,18],[607,22,650,20],[607,25,650,23],[608,10,651,8,"cooldownReduction"],[608,27,651,25],[608,29,651,27],[609,8,652,6],[609,9,652,7],[610,8,653,6,"position"],[610,16,653,14],[610,18,653,16],[611,10,653,18,"x"],[611,11,653,19],[612,10,653,21,"y"],[613,8,653,23],[613,9,653,24],[614,8,654,6,"lastDamaged"],[614,19,654,17],[614,21,654,19],[615,6,655,4],[615,7,655,5],[616,6,657,4,"console"],[616,13,657,11],[616,14,657,12,"log"],[616,17,657,15],[616,18,657,16],[616,42,657,40,"enemy"],[616,47,657,45],[616,48,657,46,"name"],[616,52,657,50],[616,60,657,58,"Math"],[616,64,657,62],[616,65,657,63,"round"],[616,70,657,68],[616,71,657,69,"x"],[616,72,657,70],[616,73,657,71],[616,78,657,76,"Math"],[616,82,657,80],[616,83,657,81,"round"],[616,88,657,86],[616,89,657,87,"y"],[616,90,657,88],[616,91,657,89],[616,94,657,92],[616,95,657,93],[617,6,658,4,"state"],[617,11,658,9],[617,12,658,10,"enemies"],[617,19,658,17],[617,20,658,18,"push"],[617,24,658,22],[617,25,658,23,"enemy"],[617,30,658,28],[617,31,658,29],[618,4,659,2],[618,5,659,3],[620,4,661,2],[621,4,662,2],[621,8,662,8,"startCombat"],[621,19,662,19],[621,22,662,22,"React"],[621,27,662,27],[621,28,662,27,"default"],[621,35,662,27],[621,36,662,28,"useCallback"],[621,47,662,39],[621,48,662,40],[621,54,662,46],[622,6,663,4,"console"],[622,13,663,11],[622,14,663,12,"log"],[622,17,663,15],[622,18,663,16],[622,63,663,61],[622,64,663,62],[623,6,664,4,"setCombatState"],[623,20,664,18],[623,21,664,19,"prev"],[623,25,664,23],[623,30,664,28],[624,8,664,30],[624,11,664,33,"prev"],[624,15,664,37],[625,8,664,39,"isInCombat"],[625,18,664,49],[625,20,664,51],[626,6,664,56],[626,7,664,57],[626,8,664,58],[626,9,664,59],[628,6,666,4],[629,6,667,4,"combatEngine"],[629,25,667,16],[629,26,667,16,"combatEngine"],[629,38,667,16],[629,39,667,17,"addTickCallback"],[629,54,667,32],[629,55,667,33,"handleCombatTick"],[629,71,667,49],[629,72,667,50],[630,6,668,4,"console"],[630,13,668,11],[630,14,668,12,"log"],[630,17,668,15],[630,18,668,16],[630,62,668,60],[630,63,668,61],[632,6,670,4],[633,6,671,4,"combatEngine"],[633,25,671,16],[633,26,671,16,"combatEngine"],[633,38,671,16],[633,39,671,17,"start"],[633,44,671,22],[633,45,671,23],[633,46,671,24],[634,4,672,2],[634,5,672,3],[634,7,672,5],[634,8,672,6,"combatEngine"],[634,27,672,18],[634,28,672,18,"combatEngine"],[634,40,672,18],[634,42,672,20,"handleCombatTick"],[634,58,672,36],[634,59,672,37],[634,60,672,38],[636,4,674,2],[637,4,675,2],[637,8,675,8,"stopCombat"],[637,18,675,18],[637,21,675,21,"React"],[637,26,675,26],[637,27,675,26,"default"],[637,34,675,26],[637,35,675,27,"useCallback"],[637,46,675,38],[637,47,675,39],[637,53,675,45],[638,6,676,4,"setCombatState"],[638,20,676,18],[638,21,676,19,"prev"],[638,25,676,23],[638,30,676,28],[639,8,676,30],[639,11,676,33,"prev"],[639,15,676,37],[640,8,676,39,"isInCombat"],[640,18,676,49],[640,20,676,51],[641,6,676,57],[641,7,676,58],[641,8,676,59],[641,9,676,60],[642,6,677,4,"combatEngine"],[642,25,677,16],[642,26,677,16,"combatEngine"],[642,38,677,16],[642,39,677,17,"removeTickCallback"],[642,57,677,35],[642,58,677,36,"handleCombatTick"],[642,74,677,52],[642,75,677,53],[643,4,678,2],[643,5,678,3],[643,7,678,5],[643,8,678,6,"combatEngine"],[643,27,678,18],[643,28,678,18,"combatEngine"],[643,40,678,18],[643,42,678,20,"handleCombatTick"],[643,58,678,36],[643,59,678,37],[643,60,678,38],[645,4,680,2],[646,4,681,2],[646,8,681,8,"equipAbility"],[646,20,681,20],[646,23,681,23,"equipAbility"],[646,24,681,24,"abilityId"],[646,33,681,41],[646,35,681,43,"slotIndex"],[646,44,681,60],[646,49,681,74],[647,6,682,4],[647,13,682,11,"combatState"],[647,24,682,22],[647,25,682,23,"abilityManager"],[647,39,682,37],[647,40,682,38,"equipAbility"],[647,52,682,50],[647,53,682,51,"abilityId"],[647,62,682,60],[647,64,682,62,"slotIndex"],[647,73,682,71],[647,74,682,72],[648,4,683,2],[648,5,683,3],[649,4,685,2],[649,8,685,8,"getDeck"],[649,15,685,15],[649,18,685,18,"getDeck"],[649,19,685,18],[649,24,685,24],[650,6,686,4],[650,13,686,11,"combatState"],[650,24,686,22],[650,25,686,23,"abilityManager"],[650,39,686,37],[650,40,686,38,"getDeck"],[650,47,686,45],[650,48,686,46],[650,49,686,47],[651,4,687,2],[651,5,687,3],[652,4,689,2],[652,8,689,8,"getAvailableAbilities"],[652,29,689,29],[652,32,689,32,"getAvailableAbilities"],[652,33,689,32],[652,38,689,38],[653,6,690,4],[653,13,690,11,"combatState"],[653,24,690,22],[653,25,690,23,"abilityManager"],[653,39,690,37],[653,40,690,38,"getAvailableAbilities"],[653,61,690,59],[653,62,690,60],[653,63,690,61],[654,4,691,2],[654,5,691,3],[655,4,693,2],[655,8,693,8,"upgradeAbility"],[655,22,693,22],[655,25,693,26,"abilityId"],[655,34,693,43],[655,38,693,57],[656,6,694,4],[656,13,694,11,"combatState"],[656,24,694,22],[656,25,694,23,"abilityManager"],[656,39,694,37],[656,40,694,38,"upgradeAbility"],[656,54,694,52],[656,55,694,53,"abilityId"],[656,64,694,62],[656,65,694,63],[657,4,695,2],[657,5,695,3],[659,4,697,2],[660,4,698,2],[660,8,698,8,"clearAllEnemies"],[660,23,698,23],[660,26,698,26,"clearAllEnemies"],[660,27,698,26],[660,32,698,32],[661,6,699,4,"console"],[661,13,699,11],[661,14,699,12,"log"],[661,17,699,15],[661,18,699,16],[661,67,699,65],[661,68,699,66],[662,6,700,4,"setCombatState"],[662,20,700,18],[662,21,700,19,"prev"],[662,25,700,23],[662,30,700,28],[663,8,701,6],[663,11,701,9,"prev"],[663,15,701,13],[664,8,702,6,"enemies"],[664,15,702,13],[664,17,702,15],[665,6,703,4],[665,7,703,5],[665,8,703,6],[665,9,703,7],[666,4,704,2],[666,5,704,3],[668,4,706,2],[669,4,707,2],[669,8,707,8,"triggerLevelUpExplosion"],[669,31,707,31],[669,34,707,34,"triggerLevelUpExplosion"],[669,35,707,34],[669,40,707,40],[670,6,708,4,"console"],[670,13,708,11],[670,14,708,12,"log"],[670,17,708,15],[670,18,708,16],[670,70,708,68],[670,71,708,69],[671,6,710,4],[671,10,710,10,"explosionTime"],[671,23,710,23],[671,26,710,26,"Date"],[671,30,710,30],[671,31,710,31,"now"],[671,34,710,34],[671,35,710,35],[671,36,710,36],[672,6,711,4,"setLastExplosionTime"],[672,26,711,24],[672,27,711,25,"explosionTime"],[672,40,711,38],[672,41,711,39],[673,6,713,4,"setCombatState"],[673,20,713,18],[673,21,713,19,"prev"],[673,25,713,23],[673,29,713,27],[674,8,714,6],[675,8,715,6],[675,12,715,12,"enemyCount"],[675,22,715,22],[675,25,715,25,"prev"],[675,29,715,29],[675,30,715,30,"enemies"],[675,37,715,37],[675,38,715,38,"length"],[675,44,715,44],[676,8,716,6],[676,12,716,12,"explosionXP"],[676,23,716,23],[676,26,716,26,"enemyCount"],[676,36,716,36],[676,39,716,39],[676,41,716,41],[676,42,716,42],[676,43,716,43],[677,8,717,6],[677,12,717,12,"explosionGold"],[677,25,717,25],[677,28,717,28,"enemyCount"],[677,38,717,38],[677,41,717,41],[677,42,717,42],[677,43,717,43],[677,44,717,44],[679,8,719,6,"console"],[679,15,719,13],[679,16,719,14,"log"],[679,19,719,17],[679,20,719,18],[679,44,719,42,"enemyCount"],[679,54,719,52],[679,76,719,74,"explosionXP"],[679,87,719,85],[679,98,719,96,"explosionGold"],[679,111,719,109],[679,118,719,116],[679,119,719,117],[681,8,721,6],[682,8,722,6],[682,12,722,10,"explosionXP"],[682,23,722,21],[682,26,722,24],[682,27,722,25],[682,29,722,27],[683,10,723,8,"setTimeout"],[683,20,723,18],[683,21,723,19],[683,27,723,25],[684,12,724,10,"game"],[684,16,724,14],[684,17,724,15,"updateNinja"],[684,28,724,26],[684,29,724,28,"ninja"],[684,34,724,33],[684,39,724,39],[685,14,725,12,"experience"],[685,24,725,22],[685,26,725,24,"ninja"],[685,31,725,29],[685,32,725,30,"experience"],[685,42,725,40],[685,45,725,43,"explosionXP"],[685,56,725,54],[686,14,726,12,"gold"],[686,18,726,16],[686,20,726,18,"ninja"],[686,25,726,23],[686,26,726,24,"gold"],[686,30,726,28],[686,33,726,31,"explosionGold"],[687,12,727,10],[687,13,727,11],[687,14,727,12],[687,15,727,13],[688,10,728,8],[688,11,728,9],[688,13,728,11],[688,14,728,12],[688,15,728,13],[688,16,728,14],[688,17,728,15],[689,8,729,6],[691,8,731,6],[692,8,732,6],[693,8,733,6],[693,12,733,12,"damagedEnemies"],[693,26,733,26],[693,29,733,29,"prev"],[693,33,733,33],[693,34,733,34,"enemies"],[693,41,733,41],[693,42,733,42,"map"],[693,45,733,45],[693,46,733,46,"enemy"],[693,51,733,51],[693,56,733,56],[694,10,734,8],[694,13,734,11,"enemy"],[694,18,734,16],[695,10,735,8,"health"],[695,16,735,14],[695,18,735,16],[695,19,735,17],[696,10,735,19],[697,10,736,8,"lastDamaged"],[697,21,736,19],[697,23,736,21,"combatEngine"],[697,42,736,33],[697,43,736,33,"combatEngine"],[697,55,736,33],[697,56,736,34,"getCurrentTick"],[697,70,736,48],[697,71,736,49],[698,8,737,6],[698,9,737,7],[698,10,737,8],[698,11,737,9],[699,8,739,6],[699,15,739,13],[700,10,740,8],[700,13,740,11,"prev"],[700,17,740,15],[701,10,741,8,"enemies"],[701,17,741,15],[701,19,741,17,"damagedEnemies"],[702,8,742,6],[702,9,742,7],[703,6,743,4],[703,7,743,5],[703,8,743,6],[704,4,744,2],[704,5,744,3],[706,4,746,2],[707,4,747,2],[707,8,747,8,"spawnEnemy"],[707,18,747,18],[707,21,747,22,"position"],[707,29,747,57],[707,33,747,75],[708,6,748,4],[708,10,748,10,"SCREEN_WIDTH"],[708,22,748,22],[708,25,748,25],[708,28,748,28],[709,6,749,4],[709,10,749,10,"GAME_AREA_HEIGHT"],[709,26,749,26],[709,29,749,29],[709,32,749,32],[709,35,749,35],[709,38,749,38],[709,39,749,39],[709,40,749,40],[710,6,750,4],[710,10,750,10,"ENEMY_SIZE"],[710,20,750,20],[710,23,750,23],[710,25,750,25],[712,6,752,4],[713,6,753,4],[713,10,753,10,"x"],[713,11,753,11],[713,14,753,14,"position"],[713,22,753,22],[713,24,753,24,"x"],[713,25,753,25],[713,29,753,29,"Math"],[713,33,753,33],[713,34,753,34,"random"],[713,40,753,40],[713,41,753,41],[713,42,753,42],[713,46,753,46,"SCREEN_WIDTH"],[713,58,753,58],[713,61,753,61,"ENEMY_SIZE"],[713,71,753,71],[713,74,753,74],[713,75,753,75],[713,76,753,76],[713,79,753,79,"ENEMY_SIZE"],[713,89,753,89],[714,6,754,4],[714,10,754,10,"y"],[714,11,754,11],[714,14,754,14,"position"],[714,22,754,22],[714,24,754,24,"y"],[714,25,754,25],[714,29,754,29,"Math"],[714,33,754,33],[714,34,754,34,"random"],[714,40,754,40],[714,41,754,41],[714,42,754,42],[714,46,754,46,"GAME_AREA_HEIGHT"],[714,62,754,62],[714,65,754,65,"ENEMY_SIZE"],[714,75,754,75],[714,78,754,78],[714,79,754,79],[714,80,754,80],[714,83,754,83,"ENEMY_SIZE"],[714,93,754,93],[715,6,756,4],[715,10,756,10,"enemy"],[715,15,756,28],[715,18,756,31],[716,8,757,6,"id"],[716,10,757,8],[716,12,757,10],[716,21,757,19],[716,23,757,21,"enemyCounter"],[716,35,757,33],[716,37,757,35],[717,8,758,6,"name"],[717,12,758,10],[717,14,758,12],[717,24,758,22],[718,8,759,6,"health"],[718,14,759,12],[718,16,759,14],[718,19,759,17],[719,8,760,6,"maxHealth"],[719,17,760,15],[719,19,760,17],[719,22,760,20],[720,8,761,6,"stats"],[720,13,761,11],[720,15,761,13],[721,10,762,8,"attack"],[721,16,762,14],[721,18,762,16],[721,20,762,18],[722,10,763,8,"defense"],[722,17,763,15],[722,19,763,17],[722,21,763,19],[723,10,764,8,"health"],[723,16,764,14],[723,18,764,16],[723,21,764,19],[724,10,765,8,"maxHealth"],[724,19,765,17],[724,21,765,19],[724,24,765,22],[725,10,766,8,"critChance"],[725,20,766,18],[725,22,766,20],[725,23,766,21],[726,10,767,8,"critDamage"],[726,20,767,18],[726,22,767,20],[726,25,767,23],[727,10,768,8,"cooldownReduction"],[727,27,768,25],[727,29,768,27],[728,8,769,6],[728,9,769,7],[729,8,770,6,"position"],[729,16,770,14],[729,18,770,16],[730,10,770,18,"x"],[730,11,770,19],[731,10,770,21,"y"],[732,8,770,23],[732,9,770,24],[733,8,771,6,"lastDamaged"],[733,19,771,17],[733,21,771,19],[734,6,772,4],[734,7,772,5],[735,6,774,4,"setCombatState"],[735,20,774,18],[735,21,774,19,"prev"],[735,25,774,23],[735,30,774,28],[736,8,775,6],[736,11,775,9,"prev"],[736,15,775,13],[737,8,776,6,"enemies"],[737,15,776,13],[737,17,776,15],[737,18,776,16],[737,21,776,19,"prev"],[737,25,776,23],[737,26,776,24,"enemies"],[737,33,776,31],[737,35,776,33,"enemy"],[737,40,776,38],[738,6,777,4],[738,7,777,5],[738,8,777,6],[738,9,777,7],[739,6,779,4],[739,13,779,11,"enemy"],[739,18,779,16],[740,4,780,2],[740,5,780,3],[742,4,782,2],[743,4,783,2],[743,8,783,8,"spawnBoss"],[743,17,783,17],[743,20,783,21,"bossEnemy"],[743,29,783,43],[743,33,783,48],[744,6,784,4,"console"],[744,13,784,11],[744,14,784,12,"log"],[744,17,784,15],[744,18,784,16],[744,39,784,37,"bossEnemy"],[744,48,784,46],[744,49,784,47,"name"],[744,53,784,51],[744,90,784,88],[744,91,784,89],[745,6,785,4,"setCombatState"],[745,20,785,18],[745,21,785,19,"prev"],[745,25,785,23],[745,30,785,28],[746,8,786,6],[746,11,786,9,"prev"],[746,15,786,13],[747,8,787,6,"enemies"],[747,15,787,13],[747,17,787,15],[747,18,787,16,"bossEnemy"],[747,27,787,25],[747,28,787,26],[747,29,787,27],[748,6,788,4],[748,7,788,5],[748,8,788,6],[748,9,788,7],[749,4,789,2],[749,5,789,3],[751,4,791,2],[752,4,792,2],[752,8,792,8,"clearSpecificEnemy"],[752,26,792,26],[752,29,792,30,"enemyId"],[752,36,792,45],[752,40,792,50],[753,6,793,4,"setCombatState"],[753,20,793,18],[753,21,793,19,"prev"],[753,25,793,23],[753,30,793,28],[754,8,794,6],[754,11,794,9,"prev"],[754,15,794,13],[755,8,795,6,"enemies"],[755,15,795,13],[755,17,795,15,"prev"],[755,21,795,19],[755,22,795,20,"enemies"],[755,29,795,27],[755,30,795,28,"filter"],[755,36,795,34],[755,37,795,35,"enemy"],[755,42,795,40],[755,46,795,44,"enemy"],[755,51,795,49],[755,52,795,50,"id"],[755,54,795,52],[755,59,795,57,"enemyId"],[755,66,795,64],[756,6,796,4],[756,7,796,5],[756,8,796,6],[756,9,796,7],[757,4,797,2],[757,5,797,3],[759,4,799,2],[760,4,800,2],[760,8,800,8,"useAbilityManually"],[760,26,800,26],[760,29,800,26,"_s3"],[760,32,800,26],[760,33,800,29],[760,37,800,29,"useCallback"],[760,43,800,40],[760,44,800,40,"useCallback"],[760,55,800,40],[760,57,800,40,"_s3"],[760,60,800,40],[760,61,800,42,"slotIndex"],[760,70,800,59],[760,74,800,73],[761,6,800,73,"_s3"],[761,9,800,73],[762,6,801,4,"console"],[762,13,801,11],[762,14,801,12,"log"],[762,17,801,15],[762,18,801,16],[762,53,801,51,"slotIndex"],[762,62,801,60],[762,64,801,62],[762,65,801,63],[764,6,803,4],[765,6,804,4],[765,10,804,10,"isReady"],[765,17,804,17],[765,20,804,20,"combatState"],[765,31,804,31],[765,32,804,32,"abilityManager"],[765,46,804,46],[765,47,804,47,"isAbilityReady"],[765,61,804,61],[765,62,804,62,"slotIndex"],[765,71,804,71],[765,72,804,72],[766,6,805,4],[766,10,805,8],[766,11,805,9,"isReady"],[766,18,805,16],[766,20,805,18],[767,8,806,6,"console"],[767,15,806,13],[767,16,806,14,"log"],[767,19,806,17],[767,20,806,18],[767,41,806,39,"slotIndex"],[767,50,806,48],[767,85,806,83],[767,86,806,84],[768,8,807,6],[768,15,807,13],[768,20,807,18],[769,6,808,4],[771,6,810,4],[772,6,811,4],[772,10,811,8,"combatState"],[772,21,811,19],[772,22,811,20,"enemies"],[772,29,811,27],[772,30,811,28,"length"],[772,36,811,34],[772,41,811,39],[772,42,811,40],[772,44,811,42],[773,8,812,6,"console"],[773,15,812,13],[773,16,812,14,"log"],[773,19,812,17],[773,20,812,18],[773,69,812,67],[773,70,812,68],[774,8,813,6],[774,15,813,13],[774,20,813,18],[775,6,814,4],[777,6,816,4],[778,6,817,4],[778,10,817,10,"currentTick"],[778,21,817,21],[778,24,817,24,"combatEngine"],[778,43,817,36],[778,44,817,36,"combatEngine"],[778,56,817,36],[778,57,817,37,"getCurrentTick"],[778,71,817,51],[778,72,817,52],[778,73,817,53],[779,6,818,4],[779,10,818,10,"success"],[779,17,818,17],[779,20,818,20,"combatState"],[779,31,818,31],[779,32,818,32,"abilityManager"],[779,46,818,46],[779,47,818,47,"useAbility"],[779,57,818,57],[779,58,818,58,"slotIndex"],[779,67,818,67],[779,69,818,69,"currentTick"],[779,80,818,80],[779,81,818,81],[780,6,820,4],[780,10,820,8,"success"],[780,17,820,15],[780,19,820,17],[781,8,821,6],[782,8,822,6,"setCombatState"],[782,22,822,20],[782,23,822,21,"prev"],[782,27,822,25],[782,31,822,29],[783,10,823,8],[783,14,823,14,"newState"],[783,22,823,22],[783,25,823,25],[784,12,823,27],[784,15,823,30,"prev"],[785,10,823,35],[785,11,823,36],[786,10,824,8,"castAbility"],[786,21,824,19],[786,22,824,20,"newState"],[786,30,824,28],[786,32,824,30,"slotIndex"],[786,41,824,39],[786,42,824,40],[787,10,825,8],[787,17,825,15,"newState"],[787,25,825,23],[788,8,826,6],[788,9,826,7],[788,10,826,8],[789,8,828,6,"console"],[789,15,828,13],[789,16,828,14,"log"],[789,19,828,17],[789,20,828,18],[789,65,828,63,"slotIndex"],[789,74,828,72],[789,76,828,74],[789,77,828,75],[790,8,829,6],[790,15,829,13],[790,19,829,17],[791,6,830,4],[791,7,830,5],[791,13,830,11],[792,8,831,6,"console"],[792,15,831,13],[792,16,831,14,"log"],[792,19,831,17],[792,20,831,18],[792,61,831,59,"slotIndex"],[792,70,831,68],[792,72,831,70],[792,73,831,71],[793,8,832,6],[793,15,832,13],[793,20,832,18],[794,6,833,4],[795,4,834,2],[795,5,834,3],[795,46,834,5],[795,47,834,6,"combatState"],[795,58,834,17],[795,59,834,18,"abilityManager"],[795,73,834,32],[795,75,834,34,"combatState"],[795,86,834,45],[795,87,834,46,"enemies"],[795,94,834,53],[795,95,834,54],[795,96,834,55],[796,4,835,2],[796,8,835,2,"useEffect"],[796,14,835,11],[796,15,835,11,"useEffect"],[796,24,835,11],[796,26,835,12],[796,32,835,18],[797,6,836,4,"combatEngine"],[797,25,836,16],[797,26,836,16,"combatEngine"],[797,38,836,16],[797,39,836,17,"start"],[797,44,836,22],[797,45,836,23],[797,46,836,24],[799,6,838,4],[800,6,839,4],[801,6,840,4,"console"],[801,13,840,11],[801,14,840,12,"log"],[801,17,840,15],[801,18,840,16],[801,97,840,95],[801,98,840,96],[802,6,842,4],[802,13,842,11],[802,19,842,17],[803,8,843,6,"combatEngine"],[803,27,843,18],[803,28,843,18,"combatEngine"],[803,40,843,18],[803,41,843,19,"stop"],[803,45,843,23],[803,46,843,24],[803,47,843,25],[804,6,844,4],[804,7,844,5],[805,4,845,2],[805,5,845,3],[805,7,845,5],[805,9,845,7],[805,10,845,8],[807,4,847,2],[808,4,848,2],[808,8,848,8,"saveAbilityData"],[808,23,848,23],[808,26,848,26],[808,30,848,26,"useCallback"],[808,36,848,37],[808,37,848,37,"useCallback"],[808,48,848,37],[808,50,848,38],[808,56,848,44],[809,6,849,4],[809,10,849,8,"combatState"],[809,21,849,19],[809,22,849,20,"abilityManager"],[809,36,849,34],[809,38,849,36],[810,8,850,6],[810,12,850,12,"abilityData"],[810,23,850,23],[810,26,850,26,"combatState"],[810,37,850,37],[810,38,850,38,"abilityManager"],[810,52,850,52],[810,53,850,53,"getSaveData"],[810,64,850,64],[810,65,850,65],[810,66,850,66],[811,8,851,6,"console"],[811,15,851,13],[811,16,851,14,"log"],[811,19,851,17],[811,20,851,18],[811,70,851,68],[811,72,851,70,"abilityData"],[811,83,851,81],[811,84,851,82],[812,8,852,6,"game"],[812,12,852,10],[812,13,852,11,"updateAbilityData"],[812,30,852,28],[812,31,852,29,"abilityData"],[812,42,852,40],[812,43,852,41],[813,6,853,4],[814,4,854,2],[814,5,854,3],[814,7,854,5],[814,8,854,6,"combatState"],[814,19,854,17],[814,20,854,18,"abilityManager"],[814,34,854,32],[814,36,854,34,"game"],[814,40,854,38],[814,41,854,39,"updateAbilityData"],[814,58,854,56],[814,59,854,57],[814,60,854,58],[815,4,856,2],[815,8,856,8,"contextValue"],[815,20,856,39],[815,23,856,42,"React"],[815,28,856,47],[815,29,856,47,"default"],[815,36,856,47],[815,37,856,48,"useMemo"],[815,44,856,55],[815,45,856,56],[815,52,856,63],[816,6,857,4,"combatState"],[816,17,857,15],[817,6,858,4,"projectiles"],[817,17,858,15],[818,6,859,4,"startCombat"],[818,17,859,15],[819,6,860,4,"stopCombat"],[819,16,860,14],[820,6,861,4,"equipAbility"],[820,18,861,16],[821,6,862,4,"handleEnemyKill"],[821,21,862,19],[822,6,863,4,"getDeck"],[822,13,863,11],[823,6,864,4,"getAvailableAbilities"],[823,27,864,25],[824,6,865,4,"upgradeAbility"],[824,20,865,18],[825,6,866,4,"spawnEnemy"],[825,16,866,14],[826,6,867,4,"spawnBoss"],[826,15,867,13],[827,6,868,4,"clearAllEnemies"],[827,21,868,19],[828,6,869,4,"clearSpecificEnemy"],[828,24,869,22],[829,6,870,4,"triggerLevelUpExplosion"],[829,29,870,27],[830,6,871,4,"findClosestEnemy"],[830,22,871,20],[831,6,872,4,"updateNinjaPosition"],[831,25,872,23],[832,6,873,4,"setManualControlActive"],[832,28,873,26],[833,6,874,4,"lastExplosionTime"],[833,23,874,21],[834,6,875,4,"useAbilityManually"],[834,24,875,22],[835,6,875,24],[836,6,876,4,"saveAbilityData"],[836,21,876,19],[837,6,876,21],[838,6,877,4,"shadowClone"],[838,17,877,15],[838,19,877,17,"combatState"],[838,30,877,28],[838,31,877,29,"shadowClone"],[838,42,877,40],[838,43,877,42],[839,4,878,2],[839,5,878,3],[839,6,878,4],[839,8,878,6],[840,4,879,4],[841,4,880,4],[842,4,881,4,"combatState"],[842,15,881,15],[842,17,882,4,"projectiles"],[842,28,882,15],[842,30,883,4,"lastExplosionTime"],[842,47,883,21],[843,4,884,4],[844,4,885,4,"combatState"],[844,15,885,15],[844,16,885,16,"abilityManager"],[844,30,885,30],[844,32,886,4,"combatState"],[844,43,886,15],[844,44,886,16,"enemies"],[844,51,886,23],[844,53,887,4,"combatState"],[844,64,887,15],[844,65,887,16,"shadowClone"],[844,76,887,27],[845,4,887,29],[846,4,888,4,"useAbilityManually"],[846,22,888,22],[847,4,888,24],[848,4,889,4,"saveAbilityData"],[848,19,889,19],[848,20,889,21],[849,4,889,21],[849,5,890,3],[849,6,890,4],[850,4,892,2],[850,24,893,4],[850,28,893,4,"_reactJsxDevRuntime"],[850,47,893,4],[850,48,893,4,"jsxDEV"],[850,54,893,4],[850,56,893,5,"CombatContext"],[850,69,893,18],[850,70,893,19,"Provider"],[850,78,893,27],[851,6,893,28,"value"],[851,11,893,33],[851,13,893,35,"contextValue"],[851,25,893,48],[852,6,893,48,"children"],[852,14,893,48],[852,16,894,7,"children"],[853,4,894,15],[854,6,894,15,"fileName"],[854,14,894,15],[854,16,894,15,"_jsxFileName"],[854,28,894,15],[855,6,894,15,"lineNumber"],[855,16,894,15],[856,6,894,15,"columnNumber"],[856,18,894,15],[857,4,894,15],[857,11,895,28],[857,12,895,29],[858,2,897,0],[858,3,897,1],[859,2,897,2,"_s4"],[859,5,897,2],[859,6,98,13,"CombatProvider"],[859,20,98,27],[860,4,98,27],[860,12,99,15,"useGame"],[860,24,99,22],[860,25,99,22,"useGame"],[860,32,99,22],[860,34,100,77,"useZone"],[860,46,100,84],[860,47,100,84,"useZone"],[860,54,100,84],[861,2,100,84],[862,2,100,84,"_c"],[862,4,100,84],[862,7,98,13,"CombatProvider"],[862,21,98,27],[863,2,98,27],[863,6,98,27,"_c"],[863,8,98,27],[864,2,98,27,"$RefreshReg$"],[864,14,98,27],[864,15,98,27,"_c"],[864,17,98,27],[865,0,98,27],[865,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCuF;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSoD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}