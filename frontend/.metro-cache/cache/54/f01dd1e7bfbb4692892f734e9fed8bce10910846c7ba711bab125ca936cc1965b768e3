{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - INSTANT XP for fluid gameplay + zone progression\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      // INSTANT XP AWARD - Immediate visual feedback for fluid gameplay\n      var xpReward = (enemy.zoneXP || 5) * (game.gameState.subscriptionBenefits?.xp_multiplier || 1.0);\n      var goldReward = 10 * (game.gameState.subscriptionBenefits?.drop_multiplier || 1.0);\n\n      // Award XP/Gold immediately for instant UI feedback\n      game.updateNinja(prev => ({\n        experience: prev.experience + xpReward,\n        gold: prev.gold + goldReward\n      }));\n\n      // Mark enemy as processed to prevent double-processing in bulk system\n      setCombatState(prevState => ({\n        ...prevState,\n        enemies: prevState.enemies.map(e => e.id === enemy.id ? {\n          ...e,\n          xpAwarded: true\n        } : e)\n      }));\n\n      // ZONE PROGRESSION\n      if (enemy.zoneTypeId) {\n        recordEnemyKill({\n          id: enemy.id,\n          typeId: enemy.zoneTypeId,\n          name: enemy.name,\n          icon: '🧌',\n          hp: 0,\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 0,\n          position: enemy.position\n        });\n      }\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    // COMBAT TICK HANDLER - Removed useCallback to prevent stale closure issues after level ups\n    var handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Process dying enemies for XP awarding + death animation cleanup\n        var dyingEnemies = newState.enemies.filter(enemy => enemy.isDying && enemy.health <= 0);\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0 && !enemy.isDying);\n\n        // Process ALL dead and dying enemies for XP (with 20 TPS = 50ms response time)\n        enemiesToKill = [...deadEnemies, ...dyingEnemies]; // Process all killed enemies for XP\n\n        // Remove enemies that have finished their death animation (750ms)\n        var currentTime = Date.now();\n        newState.enemies = newState.enemies.filter(enemy => {\n          if (enemy.isDying && enemy.deathStartTime) {\n            var animationDuration = 750; // 750ms death fade\n            var isAnimationComplete = currentTime - enemy.deathStartTime >= animationDuration;\n            if (isAnimationComplete) {\n              console.log(`💀 DEATH ANIMATION COMPLETE: ${enemy.name} removed after ${currentTime - enemy.deathStartTime}ms fade`);\n              return false; // Remove from array\n            }\n          }\n          return true; // Keep in array\n        });\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // BULK XP PROCESSING - Single update for all kills (with duplicate prevention)\n      if (enemiesToKill.length > 0) {\n        // Filter out enemies that already had XP awarded to prevent double-processing\n        var unprocessedEnemies = enemiesToKill.filter(enemy => !enemy.xpAwarded);\n        if (unprocessedEnemies.length > 0) {\n          // Calculate total rewards in one pass\n          var totalXP = 0;\n          var totalGold = 0;\n          var zoneKills = [];\n          var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n          var goldMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n          unprocessedEnemies.forEach(enemy => {\n            totalXP += (enemy.zoneXP || 5) * xpMultiplier;\n            totalGold += 10 * goldMultiplier;\n            if (enemy.zoneTypeId) {\n              zoneKills.push({\n                id: enemy.id,\n                typeId: enemy.zoneTypeId,\n                name: enemy.name,\n                icon: '🧌',\n                hp: 0,\n                maxHP: enemy.maxHealth,\n                attack: enemy.stats.attack,\n                xp: enemy.zoneXP || 0,\n                position: enemy.position\n              });\n            }\n          });\n\n          // Single batch update for all kills\n          game.updateNinja(prev => ({\n            experience: prev.experience + totalXP,\n            gold: prev.gold + totalGold\n          }));\n\n          // Batch zone progression\n          zoneKills.forEach(zoneEnemy => recordEnemyKill(zoneEnemy));\n\n          // Mark enemies as processed to prevent duplicate XP\n          setCombatState(prev => ({\n            ...prev,\n            enemies: prev.enemies.map(enemy => {\n              var wasProcessed = unprocessedEnemies.find(processed => processed.id === enemy.id);\n              return wasProcessed ? {\n                ...enemy,\n                xpAwarded: true\n              } : enemy;\n            })\n          }));\n        }\n      }\n    }; // Removed dependency array - function always uses fresh references\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    // Start combat - Removed useCallback to work with fresh handleCombatTick reference\n    var startCombat = () => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat - Removed useCallback to work with fresh handleCombatTick reference\n    var stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // REMOVED: Level up explosion disabled for performance with ultra-fast XP system\n    // const triggerLevelUpExplosion = () => { ... }\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`🎯 PROJECTILE IMPACT: ${projectile.abilityName} projectile hit target`);\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // FAST XP SYSTEM: Mark enemies for ultra-fast batch processing\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 FAST XP KILL: ${enemy.name} killed by ${projectile.abilityName}! Marked for immediate batch XP...`);\n\n                      // Mark enemy as killed - batch system will process XP within 16ms\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        isDying: true,\n                        deathStartTime: Date.now()\n                      };\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      // triggerLevelUpExplosion, // REMOVED: Level up explosion disabled for performance\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Bu3bN0FNgv5P2mB3fbGKInKEjIs=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1164,"map":[[15,2,96,0,"Object"],[15,8,96,0],[15,9,96,0,"defineProperty"],[15,23,96,0],[15,24,96,0,"exports"],[15,31,96,0],[16,4,96,0,"enumerable"],[16,14,96,0],[17,4,96,0,"get"],[17,7,96,0],[17,18,96,0,"get"],[17,19,96,0],[18,6,96,0],[18,13,96,0,"useCombat"],[18,22,96,0],[19,4,96,0],[20,2,96,0],[21,2,106,0,"Object"],[21,8,106,0],[21,9,106,0,"defineProperty"],[21,23,106,0],[21,24,106,0,"exports"],[21,31,106,0],[22,4,106,0,"enumerable"],[22,14,106,0],[23,4,106,0,"get"],[23,7,106,0],[23,18,106,0,"get"],[23,19,106,0],[24,6,106,0],[24,13,106,0,"CombatProvider"],[24,27,106,0],[25,4,106,0],[26,2,106,0],[27,2,1228,2],[27,6,1228,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1228,2],[27,42,1228,2,"require"],[27,49,1228,2],[27,50,1228,2,"_dependencyMap"],[27,64,1228,2],[28,2,1228,2],[28,6,1228,2,"_slicedToArray"],[28,20,1228,2],[28,23,1228,2,"_interopDefault"],[28,38,1228,2],[28,39,1228,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1228,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,94,0],[36,6,94,6,"CombatContext"],[36,19,94,19],[36,35,94,22],[36,39,94,22,"createContext"],[36,45,94,35],[36,46,94,35,"createContext"],[36,59,94,35],[36,61,94,67,"undefined"],[36,70,94,76],[36,71,94,77],[37,2,96,7],[37,6,96,13,"useCombat"],[37,15,96,22],[37,18,96,25,"useCombat"],[37,19,96,25],[37,24,96,50],[38,4,96,50,"_s"],[38,6,96,50],[39,4,97,2],[39,8,97,8,"context"],[39,15,97,15],[39,18,97,18],[39,22,97,18,"useContext"],[39,28,97,28],[39,29,97,28,"useContext"],[39,39,97,28],[39,41,97,29,"CombatContext"],[39,54,97,42],[39,55,97,43],[40,4,98,2],[40,8,98,6],[40,9,98,7,"context"],[40,16,98,14],[40,18,98,16],[41,6,99,4],[41,12,99,10],[41,16,99,14,"Error"],[41,21,99,19],[41,22,99,20],[41,70,99,68],[41,71,99,69],[42,4,100,2],[43,4,101,2],[43,11,101,9,"context"],[43,18,101,16],[44,2,102,0],[44,3,102,1],[45,2,102,2,"_s"],[45,4,102,2],[45,5,96,13,"useCombat"],[45,14,96,22],[46,2,104,0],[46,6,104,4,"enemyCounter"],[46,18,104,16],[46,21,104,19],[46,22,104,20],[46,23,104,21],[46,24,104,22],[48,2,106,7],[48,6,106,13,"CombatProvider"],[48,20,106,27],[48,23,106,30,"_ref"],[48,27,106,30],[48,31,106,73],[49,4,106,73,"_s4"],[49,7,106,73],[50,4,106,73],[50,8,106,73,"_s3"],[50,11,106,73],[50,14,106,73,"$RefreshSig$"],[50,26,106,73],[51,4,106,73],[51,8,106,33,"children"],[51,16,106,41],[51,19,106,41,"_ref"],[51,23,106,41],[51,24,106,33,"children"],[51,32,106,41],[52,4,107,2],[52,8,107,8,"game"],[52,12,107,12],[52,15,107,15],[52,19,107,15,"useGame"],[52,31,107,22],[52,32,107,22,"useGame"],[52,39,107,22],[52,41,107,23],[52,42,107,24],[53,4,108,2],[53,8,108,2,"_useZone"],[53,16,108,2],[53,19,108,77],[53,23,108,77,"useZone"],[53,35,108,84],[53,36,108,84,"useZone"],[53,43,108,84],[53,45,108,85],[53,46,108,86],[54,6,108,10,"currentZone"],[54,17,108,21],[54,20,108,21,"_useZone"],[54,28,108,21],[54,29,108,10,"currentZone"],[54,40,108,21],[55,6,108,23,"currentZoneLevel"],[55,22,108,39],[55,25,108,39,"_useZone"],[55,33,108,39],[55,34,108,23,"currentZoneLevel"],[55,50,108,39],[56,6,108,41,"recordEnemyKill"],[56,21,108,56],[56,24,108,56,"_useZone"],[56,32,108,56],[56,33,108,41,"recordEnemyKill"],[56,48,108,56],[57,6,108,58,"spawnZoneEnemy"],[57,20,108,72],[57,23,108,72,"_useZone"],[57,31,108,72],[57,32,108,58,"spawnZoneEnemy"],[57,46,108,72],[59,4,110,2],[60,4,111,2],[60,8,111,8,"initialCombatState"],[60,26,111,39],[60,29,111,42],[61,6,112,4,"isInCombat"],[61,16,112,14],[61,18,112,16],[61,23,112,21],[62,6,113,4,"currentTick"],[62,17,113,15],[62,19,113,17],[62,20,113,18],[63,6,114,4,"enemies"],[63,13,114,11],[63,15,114,13],[63,17,114,15],[64,6,115,4,"abilityManager"],[64,20,115,18],[64,22,115,20],[64,26,115,24,"AbilityManager"],[64,44,115,38],[64,45,115,38,"AbilityManager"],[64,59,115,38],[64,60,115,39],[64,61,115,40],[65,6,116,4,"statusEffects"],[65,19,116,17],[65,21,116,19],[65,25,116,23,"StatusEffectManager"],[65,44,116,42],[65,45,116,42,"StatusEffectManager"],[65,64,116,42],[65,65,116,43],[65,66,116,44],[66,6,117,4,"playerStats"],[66,17,117,15],[66,19,117,17],[67,8,118,6,"attack"],[67,14,118,12],[67,16,118,14],[67,18,118,16],[68,8,118,18],[69,8,119,6,"defense"],[69,15,119,13],[69,17,119,15],[69,18,119,16],[70,8,120,6,"health"],[70,14,120,12],[70,16,120,14],[70,19,120,17],[71,8,121,6,"maxHealth"],[71,17,121,15],[71,19,121,17],[71,22,121,20],[72,8,122,6,"critChance"],[72,18,122,16],[72,20,122,18],[72,21,122,19],[73,8,123,6,"critDamage"],[73,18,123,16],[73,20,123,18],[73,23,123,21],[74,8,124,6,"cooldownReduction"],[74,25,124,23],[74,27,124,25],[75,6,125,4],[76,4,126,2],[76,5,126,3],[77,4,128,2],[77,8,128,2,"_useState"],[77,17,128,2],[77,20,128,40],[77,24,128,40,"useState"],[77,30,128,48],[77,31,128,48,"useState"],[77,39,128,48],[77,41,128,62,"initialCombatState"],[77,59,128,80],[77,60,128,81],[78,6,128,81,"_useState2"],[78,16,128,81],[78,23,128,81,"_slicedToArray"],[78,37,128,81],[78,38,128,81,"default"],[78,45,128,81],[78,47,128,81,"_useState"],[78,56,128,81],[79,6,128,9,"combatState"],[79,17,128,20],[79,20,128,20,"_useState2"],[79,30,128,20],[80,6,128,22,"setCombatState"],[80,20,128,36],[80,23,128,36,"_useState2"],[80,33,128,36],[82,4,130,2],[83,4,131,2],[83,8,131,2,"useEffect"],[83,14,131,11],[83,15,131,11,"useEffect"],[83,24,131,11],[83,26,131,12],[83,32,131,18],[84,6,132,4],[84,10,132,8,"game"],[84,14,132,12],[84,15,132,13,"gameState"],[84,24,132,22],[84,25,132,23,"abilityData"],[84,36,132,34],[84,40,132,38,"combatState"],[84,51,132,49],[84,52,132,50,"abilityManager"],[84,66,132,64],[84,68,132,66],[85,8,133,6,"console"],[85,15,133,13],[85,16,133,14,"log"],[85,19,133,17],[85,20,133,18],[85,68,133,66],[85,70,133,68,"game"],[85,74,133,72],[85,75,133,73,"gameState"],[85,84,133,82],[85,85,133,83,"abilityData"],[85,96,133,94],[85,97,133,95],[86,8,134,6,"combatState"],[86,19,134,17],[86,20,134,18,"abilityManager"],[86,34,134,32],[86,35,134,33,"restoreFromSaveData"],[86,54,134,52],[86,55,134,53,"game"],[86,59,134,57],[86,60,134,58,"gameState"],[86,69,134,67],[86,70,134,68,"abilityData"],[86,81,134,79],[86,82,134,80],[88,8,136,6],[89,8,137,6,"setCombatState"],[89,22,137,20],[89,23,137,21,"prev"],[89,27,137,25],[89,32,137,30],[90,10,137,32],[90,13,137,35,"prev"],[91,8,137,40],[91,9,137,41],[91,10,137,42],[91,11,137,43],[92,6,138,4],[93,4,139,2],[93,5,139,3],[93,7,139,5],[93,8,139,6,"game"],[93,12,139,10],[93,13,139,11,"gameState"],[93,22,139,20],[93,23,139,21,"abilityData"],[93,34,139,32],[93,36,139,34,"combatState"],[93,47,139,45],[93,48,139,46,"abilityManager"],[93,62,139,60],[93,63,139,61],[93,64,139,62],[95,4,141,2],[96,4,142,2],[96,8,142,2,"useEffect"],[96,14,142,11],[96,15,142,11,"useEffect"],[96,24,142,11],[96,26,142,12],[96,32,142,18],[97,6,143,4],[97,10,143,8,"game"],[97,14,143,12],[97,15,143,13,"gameState"],[97,24,143,22],[97,25,143,23,"ninja"],[97,30,143,28],[97,32,143,30],[98,8,144,6],[98,12,144,12,"effectiveStats"],[98,26,144,26],[98,29,144,29,"game"],[98,33,144,33],[98,34,144,34,"getEffectiveStats"],[98,51,144,51],[98,52,144,52],[98,53,144,53],[99,8,146,6,"setCombatState"],[99,22,146,20],[99,23,146,21,"prev"],[99,27,146,25],[99,31,146,29],[100,10,147,8],[101,10,148,8],[101,14,148,12,"prev"],[101,18,148,16],[101,19,148,17,"playerStats"],[101,30,148,28],[101,31,148,29,"maxHealth"],[101,40,148,38],[101,45,148,43],[101,48,148,46],[101,52,148,50,"prev"],[101,56,148,54],[101,57,148,55,"playerStats"],[101,68,148,66],[101,69,148,67,"attack"],[101,75,148,73],[101,80,148,78],[101,82,148,80],[101,84,148,82],[102,12,149,10,"console"],[102,19,149,17],[102,20,149,18,"log"],[102,23,149,21],[102,24,149,22],[102,60,149,58,"effectiveStats"],[102,74,149,72],[102,75,149,73,"health"],[102,81,149,79],[102,93,149,91,"effectiveStats"],[102,107,149,105],[102,108,149,106,"attack"],[102,114,149,112],[102,127,149,125,"effectiveStats"],[102,141,149,139],[102,142,149,140,"defense"],[102,149,149,147],[102,151,149,149],[102,152,149,150],[103,12,151,10],[103,19,151,17],[104,14,152,12],[104,17,152,15,"prev"],[104,21,152,19],[105,14,153,12,"playerStats"],[105,25,153,23],[105,27,153,25],[106,16,154,14,"attack"],[106,22,154,20],[106,24,154,22,"effectiveStats"],[106,38,154,36],[106,39,154,37,"attack"],[106,45,154,43],[107,16,155,14,"defense"],[107,23,155,21],[107,25,155,23,"effectiveStats"],[107,39,155,37],[107,40,155,38,"defense"],[107,47,155,45],[108,16,156,14,"health"],[108,22,156,20],[108,24,156,22,"effectiveStats"],[108,38,156,36],[108,39,156,37,"health"],[108,45,156,43],[109,16,156,45],[110,16,157,14,"maxHealth"],[110,25,157,23],[110,27,157,25,"effectiveStats"],[110,41,157,39],[110,42,157,40,"health"],[110,48,157,46],[111,16,158,14,"critChance"],[111,26,158,24],[111,28,158,26,"effectiveStats"],[111,42,158,40],[111,43,158,41,"critChance"],[111,53,158,51],[111,57,158,55],[111,58,158,56],[112,16,159,14,"critDamage"],[112,26,159,24],[112,28,159,26,"effectiveStats"],[112,42,159,40],[112,43,159,41,"critDamage"],[112,53,159,51],[112,57,159,55],[112,60,159,58],[113,16,160,14,"cooldownReduction"],[113,33,160,31],[113,35,160,33,"effectiveStats"],[113,49,160,47],[113,50,160,48,"cooldownReduction"],[113,67,160,65],[113,71,160,69],[114,14,161,12],[115,12,162,10],[115,13,162,11],[116,10,163,8],[117,10,164,8],[117,17,164,15,"prev"],[117,21,164,19],[118,8,165,6],[118,9,165,7],[118,10,165,8],[119,6,166,4],[120,4,167,2],[120,5,167,3],[120,7,167,5],[120,8,167,6,"game"],[120,12,167,10],[120,13,167,11,"gameState"],[120,22,167,20],[120,23,167,21,"ninja"],[120,28,167,26],[120,29,167,27],[120,30,167,28],[121,4,169,2],[121,8,169,2,"_useState3"],[121,18,169,2],[121,21,169,40],[121,25,169,40,"useState"],[121,31,169,48],[121,32,169,48,"useState"],[121,40,169,48],[121,42,169,69],[121,44,169,71],[121,45,169,72],[122,6,169,72,"_useState4"],[122,16,169,72],[122,23,169,72,"_slicedToArray"],[122,37,169,72],[122,38,169,72,"default"],[122,45,169,72],[122,47,169,72,"_useState3"],[122,57,169,72],[123,6,169,9,"projectiles"],[123,17,169,20],[123,20,169,20,"_useState4"],[123,30,169,20],[124,6,169,22,"setProjectiles"],[124,20,169,36],[124,23,169,36,"_useState4"],[124,33,169,36],[125,4,170,2],[125,8,170,2,"_useState5"],[125,18,170,2],[125,21,170,52],[125,25,170,52,"useState"],[125,31,170,60],[125,32,170,60,"useState"],[125,40,170,60],[125,42,170,69],[125,43,170,70],[125,44,170,71],[126,6,170,71,"_useState6"],[126,16,170,71],[126,23,170,71,"_slicedToArray"],[126,37,170,71],[126,38,170,71,"default"],[126,45,170,71],[126,47,170,71,"_useState5"],[126,57,170,71],[127,6,170,9,"lastExplosionTime"],[127,23,170,26],[127,26,170,26,"_useState6"],[127,36,170,26],[128,6,170,28,"setLastExplosionTime"],[128,26,170,48],[128,29,170,48,"_useState6"],[128,39,170,48],[129,4,171,2],[130,4,172,2],[132,4,174,2],[133,4,175,2],[133,8,175,8,"handleEnemyKill"],[133,23,175,23],[133,26,175,26],[133,30,175,26,"useCallback"],[133,36,175,37],[133,37,175,37,"useCallback"],[133,48,175,37],[133,50,175,39,"enemy"],[133,55,175,57],[133,59,175,62],[134,6,176,4],[135,6,177,4],[135,10,177,10,"xpReward"],[135,18,177,18],[135,21,177,21],[135,22,177,22,"enemy"],[135,27,177,27],[135,28,177,28,"zoneXP"],[135,34,177,34],[135,38,177,38],[135,39,177,39],[135,44,177,44,"game"],[135,48,177,48],[135,49,177,49,"gameState"],[135,58,177,58],[135,59,177,59,"subscriptionBenefits"],[135,79,177,79],[135,81,177,81,"xp_multiplier"],[135,94,177,94],[135,98,177,98],[135,101,177,101],[135,102,177,102],[136,6,178,4],[136,10,178,10,"goldReward"],[136,20,178,20],[136,23,178,23],[136,25,178,25],[136,29,178,29,"game"],[136,33,178,33],[136,34,178,34,"gameState"],[136,43,178,43],[136,44,178,44,"subscriptionBenefits"],[136,64,178,64],[136,66,178,66,"drop_multiplier"],[136,81,178,81],[136,85,178,85],[136,88,178,88],[136,89,178,89],[138,6,180,4],[139,6,181,4,"game"],[139,10,181,8],[139,11,181,9,"updateNinja"],[139,22,181,20],[139,23,181,21,"prev"],[139,27,181,25],[139,32,181,30],[140,8,182,6,"experience"],[140,18,182,16],[140,20,182,18,"prev"],[140,24,182,22],[140,25,182,23,"experience"],[140,35,182,33],[140,38,182,36,"xpReward"],[140,46,182,44],[141,8,183,6,"gold"],[141,12,183,10],[141,14,183,12,"prev"],[141,18,183,16],[141,19,183,17,"gold"],[141,23,183,21],[141,26,183,24,"goldReward"],[142,6,184,4],[142,7,184,5],[142,8,184,6],[142,9,184,7],[144,6,186,4],[145,6,187,4,"setCombatState"],[145,20,187,18],[145,21,187,19,"prevState"],[145,30,187,28],[145,35,187,33],[146,8,188,6],[146,11,188,9,"prevState"],[146,20,188,18],[147,8,189,6,"enemies"],[147,15,189,13],[147,17,189,15,"prevState"],[147,26,189,24],[147,27,189,25,"enemies"],[147,34,189,32],[147,35,189,33,"map"],[147,38,189,36],[147,39,189,37,"e"],[147,40,189,38],[147,44,190,8,"e"],[147,45,190,9],[147,46,190,10,"id"],[147,48,190,12],[147,53,190,17,"enemy"],[147,58,190,22],[147,59,190,23,"id"],[147,61,190,25],[147,64,190,28],[148,10,190,30],[148,13,190,33,"e"],[148,14,190,34],[149,10,190,36,"xpAwarded"],[149,19,190,45],[149,21,190,47],[150,8,190,52],[150,9,190,53],[150,12,190,56,"e"],[150,13,191,6],[151,6,192,4],[151,7,192,5],[151,8,192,6],[151,9,192,7],[153,6,194,4],[154,6,195,4],[154,10,195,8,"enemy"],[154,15,195,13],[154,16,195,14,"zoneTypeId"],[154,26,195,24],[154,28,195,26],[155,8,196,6,"recordEnemyKill"],[155,23,196,21],[155,24,196,22],[156,10,197,8,"id"],[156,12,197,10],[156,14,197,12,"enemy"],[156,19,197,17],[156,20,197,18,"id"],[156,22,197,20],[157,10,198,8,"typeId"],[157,16,198,14],[157,18,198,16,"enemy"],[157,23,198,21],[157,24,198,22,"zoneTypeId"],[157,34,198,32],[158,10,199,8,"name"],[158,14,199,12],[158,16,199,14,"enemy"],[158,21,199,19],[158,22,199,20,"name"],[158,26,199,24],[159,10,200,8,"icon"],[159,14,200,12],[159,16,200,14],[159,20,200,18],[160,10,201,8,"hp"],[160,12,201,10],[160,14,201,12],[160,15,201,13],[161,10,202,8,"maxHP"],[161,15,202,13],[161,17,202,15,"enemy"],[161,22,202,20],[161,23,202,21,"maxHealth"],[161,32,202,30],[162,10,203,8,"attack"],[162,16,203,14],[162,18,203,16,"enemy"],[162,23,203,21],[162,24,203,22,"stats"],[162,29,203,27],[162,30,203,28,"attack"],[162,36,203,34],[163,10,204,8,"xp"],[163,12,204,10],[163,14,204,12,"enemy"],[163,19,204,17],[163,20,204,18,"zoneXP"],[163,26,204,24],[163,30,204,28],[163,31,204,29],[164,10,205,8,"position"],[164,18,205,16],[164,20,205,18,"enemy"],[164,25,205,23],[164,26,205,24,"position"],[165,8,206,6],[165,9,206,7],[165,10,206,8],[166,6,207,4],[167,4,208,2],[167,5,208,3],[167,7,208,5],[167,8,208,6,"game"],[167,12,208,10],[167,13,208,11,"updateNinja"],[167,24,208,22],[167,26,208,24,"recordEnemyKill"],[167,41,208,39],[167,42,208,40],[167,43,208,41],[169,4,210,2],[170,4,211,2],[171,4,212,2],[171,8,212,8,"handleCombatTick"],[171,24,212,24],[171,27,212,27,"handleCombatTick"],[171,28,212,27],[171,33,212,33],[172,6,212,33],[172,10,212,33,"_s2"],[172,13,212,33],[172,16,212,33,"$RefreshSig$"],[172,28,212,33],[173,6,213,4,"console"],[173,13,213,11],[173,14,213,12,"log"],[173,17,213,15],[173,18,213,16],[173,87,213,85],[173,88,213,86],[174,6,214,4,"console"],[174,13,214,11],[174,14,214,12,"log"],[174,17,214,15],[174,18,214,16],[174,65,214,63,"isManualControlActive"],[174,86,214,84],[174,99,214,97,"game"],[174,103,214,101],[174,104,214,102,"gameState"],[174,113,214,111],[174,114,214,112,"isAlive"],[174,121,214,119],[174,123,214,121],[174,124,214,122],[175,6,216,4],[175,10,216,8,"enemiesToKill"],[175,23,216,36],[175,26,216,39],[175,28,216,41],[175,29,216,42],[175,30,216,43],[177,6,218,4,"_s2"],[177,9,218,4],[177,10,218,4,"setCombatState"],[177,24,218,18],[177,25,218,18,"_s2"],[177,28,218,18],[177,29,218,19,"prev"],[177,33,218,23],[177,37,218,27],[178,8,218,27,"_s2"],[178,11,218,27],[179,8,219,6],[179,12,219,12,"newTick"],[179,19,219,19],[179,22,219,22,"combatEngine"],[179,41,219,34],[179,42,219,34,"combatEngine"],[179,54,219,34],[179,55,219,35,"getCurrentTick"],[179,69,219,49],[179,70,219,50],[179,71,219,51],[180,8,220,6],[180,12,220,12,"newState"],[180,20,220,20],[180,23,220,23],[181,10,220,25],[181,13,220,28,"prev"],[181,17,220,32],[182,10,220,34,"currentTick"],[182,21,220,45],[182,23,220,47,"newTick"],[183,8,220,55],[183,9,220,56],[184,8,222,6],[184,12,222,10],[184,13,222,11,"newState"],[184,21,222,19],[184,22,222,20,"isInCombat"],[184,32,222,30],[184,34,222,32],[184,41,222,39,"newState"],[184,49,222,47],[186,8,224,6],[187,8,225,6,"newState"],[187,16,225,14],[187,17,225,15,"abilityManager"],[187,31,225,29],[187,32,225,30,"updateCooldowns"],[187,47,225,45],[187,48,225,46,"newTick"],[187,55,225,53],[187,56,225,54],[189,8,227,6],[190,8,228,6],[190,12,228,12,"effectResults"],[190,25,228,25],[190,28,228,28,"newState"],[190,36,228,36],[190,37,228,37,"statusEffects"],[190,50,228,50],[190,51,228,51,"processTick"],[190,62,228,62],[190,63,228,63,"newTick"],[190,70,228,70],[190,71,228,71],[192,8,230,6],[193,8,231,6,"effectResults"],[193,21,231,19],[193,22,231,20,"forEach"],[193,29,231,27],[193,30,231,28],[193,31,231,29,"results"],[193,38,231,36],[193,40,231,38,"entityId"],[193,48,231,46],[193,53,231,51],[194,10,232,8],[194,14,232,14,"enemyIndex"],[194,24,232,24],[194,27,232,27,"newState"],[194,35,232,35],[194,36,232,36,"enemies"],[194,43,232,43],[194,44,232,44,"findIndex"],[194,53,232,53],[194,54,232,54,"e"],[194,55,232,55],[194,59,232,59,"e"],[194,60,232,60],[194,61,232,61,"id"],[194,63,232,63],[194,68,232,68,"entityId"],[194,76,232,76],[194,77,232,77],[195,10,233,8],[195,14,233,12,"enemyIndex"],[195,24,233,22],[195,28,233,26],[195,29,233,27],[195,31,233,29],[196,12,234,10,"results"],[196,19,234,17],[196,20,234,18,"forEach"],[196,27,234,25],[196,28,234,26,"result"],[196,34,234,32],[196,38,234,36],[197,14,235,12,"newState"],[197,22,235,20],[197,23,235,21,"enemies"],[197,30,235,28],[197,31,235,29,"enemyIndex"],[197,41,235,39],[197,42,235,40],[197,43,235,41,"health"],[197,49,235,47],[197,53,235,51,"result"],[197,59,235,57],[197,60,235,58,"damage"],[197,66,235,64],[198,14,236,12,"newState"],[198,22,236,20],[198,23,236,21,"enemies"],[198,30,236,28],[198,31,236,29,"enemyIndex"],[198,41,236,39],[198,42,236,40],[198,43,236,41,"lastDamaged"],[198,54,236,52],[198,57,236,55,"newTick"],[198,64,236,62],[199,12,237,10],[199,13,237,11],[199,14,237,12],[200,10,238,8],[201,8,239,6],[201,9,239,7],[201,10,239,8],[203,8,241,6],[204,8,242,6],[205,8,243,6],[205,12,243,10,"newState"],[205,20,243,18],[205,21,243,19,"playerStats"],[205,32,243,30],[205,36,243,34,"game"],[205,40,243,38],[205,41,243,39,"gameState"],[205,50,243,48],[205,51,243,49,"ninja"],[205,56,243,54],[205,58,243,56],[206,10,244,8],[206,14,244,14,"effectiveStats"],[206,28,244,28],[206,31,244,31,"game"],[206,35,244,35],[206,36,244,36,"getEffectiveStats"],[206,53,244,53],[206,54,244,54],[206,55,244,55],[208,10,246,8],[209,10,247,8],[209,14,247,12,"newState"],[209,22,247,20],[209,23,247,21,"playerStats"],[209,34,247,32],[209,35,247,33,"attack"],[209,41,247,39],[209,46,247,44,"effectiveStats"],[209,60,247,58],[209,61,247,59,"attack"],[209,67,247,65],[209,71,248,12,"newState"],[209,79,248,20],[209,80,248,21,"playerStats"],[209,91,248,32],[209,92,248,33,"defense"],[209,99,248,40],[209,104,248,45,"effectiveStats"],[209,118,248,59],[209,119,248,60,"defense"],[209,126,248,67],[209,130,249,12,"newState"],[209,138,249,20],[209,139,249,21,"playerStats"],[209,150,249,32],[209,151,249,33,"maxHealth"],[209,160,249,42],[209,165,249,47,"effectiveStats"],[209,179,249,61],[209,180,249,62,"maxHealth"],[209,189,249,71],[209,191,249,73],[210,12,251,10,"console"],[210,19,251,17],[210,20,251,18,"log"],[210,23,251,21],[210,24,251,22],[210,58,251,56,"newState"],[210,66,251,64],[210,67,251,65,"playerStats"],[210,78,251,76],[210,79,251,77,"attack"],[210,85,251,83],[210,91,251,89,"effectiveStats"],[210,105,251,103],[210,106,251,104,"attack"],[210,112,251,110],[210,125,251,123,"newState"],[210,133,251,131],[210,134,251,132,"playerStats"],[210,145,251,143],[210,146,251,144,"defense"],[210,153,251,151],[210,159,251,157,"effectiveStats"],[210,173,251,171],[210,174,251,172,"defense"],[210,181,251,179],[210,192,251,190,"newState"],[210,200,251,198],[210,201,251,199,"playerStats"],[210,212,251,210],[210,213,251,211,"maxHealth"],[210,222,251,220],[210,228,251,226,"effectiveStats"],[210,242,251,240],[210,243,251,241,"maxHealth"],[210,252,251,250],[210,254,251,252],[210,255,251,253],[212,12,253,10],[213,12,254,10],[213,16,254,14,"newHealth"],[213,25,254,23],[213,28,254,26,"newState"],[213,36,254,34],[213,37,254,35,"playerStats"],[213,48,254,46],[213,49,254,47,"health"],[213,55,254,53],[214,12,255,10],[214,16,255,14,"newState"],[214,24,255,22],[214,25,255,23,"playerStats"],[214,36,255,34],[214,37,255,35,"maxHealth"],[214,46,255,44],[214,51,255,49,"effectiveStats"],[214,65,255,63],[214,66,255,64,"maxHealth"],[214,75,255,73],[214,77,255,75],[215,14,256,12],[216,14,257,12],[216,18,257,16,"effectiveStats"],[216,32,257,30],[216,33,257,31,"maxHealth"],[216,42,257,40],[216,45,257,43,"newState"],[216,53,257,51],[216,54,257,52,"playerStats"],[216,65,257,63],[216,66,257,64,"maxHealth"],[216,75,257,73],[216,78,257,76],[216,81,257,79],[216,83,257,81],[217,16,258,14],[218,16,259,14],[218,20,259,20,"healthRatio"],[218,31,259,31],[218,34,259,34,"newState"],[218,42,259,42],[218,43,259,43,"playerStats"],[218,54,259,54],[218,55,259,55,"maxHealth"],[218,64,259,64],[218,67,259,67],[218,68,259,68],[218,71,260,16,"newState"],[218,79,260,24],[218,80,260,25,"playerStats"],[218,91,260,36],[218,92,260,37,"health"],[218,98,260,43],[218,101,260,46,"newState"],[218,109,260,54],[218,110,260,55,"playerStats"],[218,121,260,66],[218,122,260,67,"maxHealth"],[218,131,260,76],[218,134,260,79],[218,135,260,80],[219,16,261,14,"newHealth"],[219,25,261,23],[219,28,261,26,"Math"],[219,32,261,30],[219,33,261,31,"floor"],[219,38,261,36],[219,39,261,37,"effectiveStats"],[219,53,261,51],[219,54,261,52,"maxHealth"],[219,63,261,61],[219,66,261,64,"healthRatio"],[219,77,261,75],[219,78,261,76],[220,14,262,12],[220,15,262,13],[220,21,262,19],[220,25,262,23,"newState"],[220,33,262,31],[220,34,262,32,"playerStats"],[220,45,262,43],[220,46,262,44,"health"],[220,52,262,50],[220,55,262,53,"effectiveStats"],[220,69,262,67],[220,70,262,68,"maxHealth"],[220,79,262,77],[220,81,262,79],[221,16,263,14],[222,16,264,14,"newHealth"],[222,25,264,23],[222,28,264,26,"effectiveStats"],[222,42,264,40],[222,43,264,41,"maxHealth"],[222,52,264,50],[223,14,265,12],[224,14,266,12],[225,12,267,10],[226,12,269,10,"newState"],[226,20,269,18],[226,21,269,19,"playerStats"],[226,32,269,30],[226,35,269,33],[227,14,270,12],[227,17,270,15,"newState"],[227,25,270,23],[227,26,270,24,"playerStats"],[227,37,270,35],[228,14,271,12,"attack"],[228,20,271,18],[228,22,271,20,"effectiveStats"],[228,36,271,34],[228,37,271,35,"attack"],[228,43,271,41],[229,14,272,12,"defense"],[229,21,272,19],[229,23,272,21,"effectiveStats"],[229,37,272,35],[229,38,272,36,"defense"],[229,45,272,43],[230,14,273,12,"maxHealth"],[230,23,273,21],[230,25,273,23,"effectiveStats"],[230,39,273,37],[230,40,273,38,"maxHealth"],[230,49,273,47],[231,14,273,49],[232,14,274,12,"health"],[232,20,274,18],[232,22,274,20,"newHealth"],[232,31,274,29],[233,14,274,31],[234,14,275,12,"critChance"],[234,24,275,22],[234,26,275,24,"effectiveStats"],[234,40,275,38],[234,41,275,39,"critChance"],[234,51,275,49],[234,55,275,53,"newState"],[234,63,275,61],[234,64,275,62,"playerStats"],[234,75,275,73],[234,76,275,74,"critChance"],[234,86,275,84],[235,14,276,12,"critDamage"],[235,24,276,22],[235,26,276,24,"effectiveStats"],[235,40,276,38],[235,41,276,39,"critDamage"],[235,51,276,49],[235,55,276,53,"newState"],[235,63,276,61],[235,64,276,62,"playerStats"],[235,75,276,73],[235,76,276,74,"critDamage"],[235,86,276,84],[236,14,277,12,"cooldownReduction"],[236,31,277,29],[236,33,277,31,"effectiveStats"],[236,47,277,45],[236,48,277,46,"cooldownReduction"],[236,65,277,63],[236,69,277,67,"newState"],[236,77,277,75],[236,78,277,76,"playerStats"],[236,89,277,87],[236,90,277,88,"cooldownReduction"],[237,12,278,10],[237,13,278,11],[238,10,279,8],[240,10,281,8],[241,10,282,8],[241,14,282,12,"game"],[241,18,282,16],[241,19,282,17,"gameState"],[241,28,282,26],[241,29,282,27,"isAlive"],[241,36,282,34],[241,40,283,12,"game"],[241,44,283,16],[241,45,283,17,"gameState"],[241,54,283,26],[241,55,283,27,"ninja"],[241,60,283,32],[241,61,283,33,"health"],[241,67,283,39],[241,72,283,44,"effectiveStats"],[241,86,283,58],[241,87,283,59,"maxHealth"],[241,96,283,68],[241,100,284,12,"newState"],[241,108,284,20],[241,109,284,21,"playerStats"],[241,120,284,32],[241,121,284,33,"health"],[241,127,284,39],[241,130,284,42,"effectiveStats"],[241,144,284,56],[241,145,284,57,"maxHealth"],[241,154,284,66],[241,157,284,69],[241,160,284,72],[241,162,284,74],[242,12,285,10,"console"],[242,19,285,17],[242,20,285,18,"log"],[242,23,285,21],[242,24,285,22],[242,58,285,56,"newState"],[242,66,285,64],[242,67,285,65,"playerStats"],[242,78,285,76],[242,79,285,77,"health"],[242,85,285,83],[242,91,285,89,"game"],[242,95,285,93],[242,96,285,94,"gameState"],[242,105,285,103],[242,106,285,104,"ninja"],[242,111,285,109],[242,112,285,110,"health"],[242,118,285,116],[242,139,285,137],[242,140,285,138],[243,12,286,10,"newState"],[243,20,286,18],[243,21,286,19,"playerStats"],[243,32,286,30],[243,33,286,31,"health"],[243,39,286,37],[243,42,286,40,"game"],[243,46,286,44],[243,47,286,45,"gameState"],[243,56,286,54],[243,57,286,55,"ninja"],[243,62,286,60],[243,63,286,61,"health"],[243,69,286,67],[244,10,287,8],[245,8,288,6],[247,8,290,6],[248,8,291,6,"newState"],[248,16,291,14],[248,17,291,15,"enemies"],[248,24,291,22],[248,25,291,23,"forEach"],[248,32,291,30],[248,33,291,31,"enemy"],[248,38,291,36],[248,42,291,40],[249,10,292,8],[249,14,292,12],[249,15,292,13,"enemy"],[249,20,292,18],[249,21,292,19,"isBoss"],[249,27,292,25],[249,29,292,27],[250,12,292,29],[251,12,293,10],[252,12,294,10],[252,16,294,16,"MOVEMENT_SPEED"],[252,30,294,30],[252,33,294,33],[252,37,294,37],[252,38,294,38],[252,39,294,39],[253,12,295,10],[253,16,295,16,"SCREEN_WIDTH"],[253,28,295,28],[253,31,295,31],[253,34,295,34],[254,12,296,10],[254,16,296,16,"GAME_AREA_HEIGHT"],[254,32,296,32],[254,35,296,35],[254,38,296,38],[254,39,296,39],[254,40,296,40],[255,12,297,10],[255,16,297,16,"ENEMY_SIZE"],[255,26,297,26],[255,29,297,29],[255,31,297,31],[257,12,299,10],[258,12,300,10],[258,16,300,16,"playerX"],[258,23,300,23],[258,26,300,26,"currentNinjaPosition"],[258,46,300,46],[258,47,300,47,"x"],[258,48,300,48],[259,12,301,10],[259,16,301,16,"playerY"],[259,23,301,23],[259,26,301,26,"currentNinjaPosition"],[259,46,301,46],[259,47,301,47,"y"],[259,48,301,48],[261,12,303,10],[262,12,304,10],[262,16,304,16,"deltaX"],[262,22,304,22],[262,25,304,25,"playerX"],[262,32,304,32],[262,35,304,35,"enemy"],[262,40,304,40],[262,41,304,41,"position"],[262,49,304,49],[262,50,304,50,"x"],[262,51,304,51],[263,12,305,10],[263,16,305,16,"deltaY"],[263,22,305,22],[263,25,305,25,"playerY"],[263,32,305,32],[263,35,305,35,"enemy"],[263,40,305,40],[263,41,305,41,"position"],[263,49,305,49],[263,50,305,50,"y"],[263,51,305,51],[264,12,306,10],[264,16,306,16,"distance"],[264,24,306,24],[264,27,306,27,"Math"],[264,31,306,31],[264,32,306,32,"sqrt"],[264,36,306,36],[264,37,306,37,"deltaX"],[264,43,306,43],[264,46,306,46,"deltaX"],[264,52,306,52],[264,55,306,55,"deltaY"],[264,61,306,61],[264,64,306,64,"deltaY"],[264,70,306,70],[264,71,306,71],[266,12,308,10],[267,12,309,10],[267,16,309,16,"ATTACK_RANGE"],[267,28,309,28],[267,31,309,31],[267,33,309,33],[267,34,309,34],[267,35,309,35],[268,12,310,10],[268,16,310,16,"ATTACK_COOLDOWN"],[268,31,310,31],[268,34,310,34],[268,36,310,36],[268,37,310,37],[268,38,310,38],[270,12,312,10],[270,16,312,14,"distance"],[270,24,312,22],[270,28,312,26,"ATTACK_RANGE"],[270,40,312,38],[270,42,312,40],[271,14,313,12],[272,14,314,12],[272,18,314,16],[272,19,314,17,"enemy"],[272,24,314,22],[272,25,314,23,"lastAttackTick"],[272,39,314,37],[272,41,314,39,"enemy"],[272,46,314,44],[272,47,314,45,"lastAttackTick"],[272,61,314,59],[272,64,314,62],[272,65,314,63],[273,14,316,12],[273,18,316,16,"newState"],[273,26,316,24],[273,27,316,25,"currentTick"],[273,38,316,36],[273,41,316,39,"enemy"],[273,46,316,44],[273,47,316,45,"lastAttackTick"],[273,61,316,59],[273,65,316,63,"ATTACK_COOLDOWN"],[273,80,316,78],[273,82,316,80],[274,16,317,14],[275,16,318,14],[275,20,318,18],[275,21,318,19,"game"],[275,25,318,23],[275,26,318,24,"gameState"],[275,35,318,33],[275,36,318,34,"isAlive"],[275,43,318,41],[275,45,318,43],[276,18,319,16,"console"],[276,25,319,23],[276,26,319,24,"log"],[276,29,319,27],[276,30,319,28],[276,49,319,47,"enemy"],[276,54,319,52],[276,55,319,53,"name"],[276,59,319,57],[276,93,319,91],[276,94,319,92],[277,18,320,16],[278,18,321,16,"enemy"],[278,23,321,21],[278,24,321,22,"lastAttackTick"],[278,38,321,36],[278,41,321,39,"newState"],[278,49,321,47],[278,50,321,48,"currentTick"],[278,61,321,59],[279,16,322,14],[279,17,322,15],[279,23,322,21],[280,18,323,16],[281,18,324,16],[281,22,324,22,"isPlayerInvincible"],[281,40,324,40],[281,43,324,43,"game"],[281,47,324,47],[281,48,324,48,"gameState"],[281,57,324,57],[281,58,324,58,"isInvincible"],[281,70,324,70],[281,74,325,41,"game"],[281,78,325,45],[281,79,325,46,"gameState"],[281,88,325,55],[281,89,325,56,"invincibilityEndTime"],[281,109,325,76],[281,113,326,41,"Date"],[281,117,326,45],[281,118,326,46,"now"],[281,121,326,49],[281,122,326,50],[281,123,326,51],[281,126,326,54,"game"],[281,130,326,58],[281,131,326,59,"gameState"],[281,140,326,68],[281,141,326,69,"invincibilityEndTime"],[281,161,326,89],[282,18,328,16],[282,22,328,20,"isPlayerInvincible"],[282,40,328,38],[282,42,328,40],[283,20,329,18,"console"],[283,27,329,25],[283,28,329,26,"log"],[283,31,329,29],[283,32,329,30],[283,51,329,49,"enemy"],[283,56,329,54],[283,57,329,55,"name"],[283,61,329,59],[283,101,329,99],[283,102,329,100],[284,20,330,18],[285,20,331,18,"enemy"],[285,25,331,23],[285,26,331,24,"lastAttackTick"],[285,40,331,38],[285,43,331,41,"newState"],[285,51,331,49],[285,52,331,50,"currentTick"],[285,63,331,61],[286,18,332,16],[286,19,332,17],[286,25,332,23],[287,20,333,16],[288,20,334,16],[288,24,334,22,"baseAttack"],[288,34,334,32],[288,37,334,35,"enemy"],[288,42,334,40],[288,43,334,41,"stats"],[288,48,334,46],[288,49,334,47,"attack"],[288,55,334,53],[288,58,334,56],[288,61,334,59],[288,62,334,60],[288,63,334,61],[289,20,335,16],[289,24,335,22,"attackDamage"],[289,36,335,34],[289,39,335,37,"Math"],[289,43,335,41],[289,44,335,42,"floor"],[289,49,335,47],[289,50,335,48,"baseAttack"],[289,60,335,58],[289,64,335,62],[289,67,335,65],[289,70,335,68,"Math"],[289,74,335,72],[289,75,335,73,"random"],[289,81,335,79],[289,82,335,80],[289,83,335,81],[289,86,335,84],[289,89,335,87],[289,90,335,88],[289,91,335,89],[289,92,335,90],[289,93,335,91],[290,20,336,16],[290,24,336,22,"playerDefense"],[290,37,336,35],[290,40,336,38,"newState"],[290,48,336,46],[290,49,336,47,"playerStats"],[290,60,336,58],[290,61,336,59,"defense"],[290,68,336,66],[291,20,337,16],[291,24,337,22,"finalDamage"],[291,35,337,33],[291,38,337,36,"Math"],[291,42,337,40],[291,43,337,41,"max"],[291,46,337,44],[291,47,337,45],[291,48,337,46],[291,50,337,48,"attackDamage"],[291,62,337,60],[291,65,337,63,"Math"],[291,69,337,67],[291,70,337,68,"floor"],[291,75,337,73],[291,76,337,74,"playerDefense"],[291,89,337,87],[291,92,337,90],[291,95,337,93],[291,96,337,94],[291,97,337,95],[291,98,337,96],[291,99,337,97],[293,20,339,16,"console"],[293,27,339,23],[293,28,339,24,"log"],[293,31,339,27],[293,32,339,28],[293,53,339,49,"enemy"],[293,58,339,54],[293,59,339,55,"name"],[293,63,339,59],[293,86,339,82,"finalDamage"],[293,97,339,93],[293,109,339,105,"attackDamage"],[293,121,339,117],[293,132,339,128,"Math"],[293,136,339,132],[293,137,339,133,"floor"],[293,142,339,138],[293,143,339,139,"playerDefense"],[293,156,339,152],[293,159,339,155],[293,162,339,158],[293,163,339,159],[293,184,339,180],[293,185,339,181],[295,20,341,16],[296,20,342,16],[296,24,342,22,"newPlayerHealth"],[296,39,342,37],[296,42,342,40,"Math"],[296,46,342,44],[296,47,342,45,"max"],[296,50,342,48],[296,51,342,49],[296,52,342,50],[296,54,342,52,"newState"],[296,62,342,60],[296,63,342,61,"playerStats"],[296,74,342,72],[296,75,342,73,"health"],[296,81,342,79],[296,84,342,82,"finalDamage"],[296,95,342,93],[296,96,342,94],[297,20,343,16,"newState"],[297,28,343,24],[297,29,343,25,"playerStats"],[297,40,343,36],[297,41,343,37,"health"],[297,47,343,43],[297,50,343,46,"newPlayerHealth"],[297,65,343,61],[298,20,345,16,"console"],[298,27,345,23],[298,28,345,24,"log"],[298,31,345,27],[298,32,345,28],[298,53,345,49,"newState"],[298,61,345,57],[298,62,345,58,"playerStats"],[298,73,345,69],[298,74,345,70,"health"],[298,80,345,76],[298,84,345,80,"newState"],[298,92,345,88],[298,93,345,89,"playerStats"],[298,104,345,100],[298,105,345,101,"maxHealth"],[298,114,345,110],[298,124,345,120,"finalDamage"],[298,135,345,131],[298,145,345,141],[298,146,345,142],[300,20,347,16],[301,20,348,16,"enemy"],[301,25,348,21],[301,26,348,22,"lastAttackTick"],[301,40,348,36],[301,43,348,39,"newState"],[301,51,348,47],[301,52,348,48,"currentTick"],[301,63,348,59],[303,20,350,16],[304,20,351,16],[304,24,351,20,"newPlayerHealth"],[304,39,351,35],[304,43,351,39],[304,44,351,40],[304,46,351,42],[305,22,352,18,"console"],[305,29,352,25],[305,30,352,26,"log"],[305,33,352,29],[305,34,352,30],[305,84,352,80],[305,85,352,81],[306,22,353,18],[307,22,354,18,"setTimeout"],[307,32,354,28],[307,33,354,29],[307,39,354,35],[308,24,355,20],[309,24,356,20,"game"],[309,28,356,24],[309,29,356,25,"updateGameState"],[309,44,356,40],[309,45,356,41],[310,26,356,43,"isAlive"],[310,33,356,50],[310,35,356,52],[311,24,356,58],[311,25,356,59],[311,26,356,60],[312,22,357,18],[312,23,357,19],[312,25,357,21],[312,28,357,24],[312,29,357,25],[313,20,358,16],[314,18,359,16],[315,16,360,14],[316,14,361,12],[317,12,362,10],[317,13,362,11],[317,19,362,17],[318,14,363,12],[319,14,364,12],[320,14,365,12],[320,18,365,16,"distance"],[320,26,365,24],[320,29,365,27],[320,31,365,29],[320,33,365,31],[321,16,366,14],[322,16,367,14],[322,20,367,20,"normalizedX"],[322,31,367,31],[322,34,367,34,"deltaX"],[322,40,367,40],[322,43,367,43,"distance"],[322,51,367,51],[323,16,368,14],[323,20,368,20,"normalizedY"],[323,31,368,31],[323,34,368,34,"deltaY"],[323,40,368,40],[323,43,368,43,"distance"],[323,51,368,51],[325,16,370,14],[326,16,371,14],[326,20,371,20,"randomFactor"],[326,32,371,32],[326,35,371,35],[326,38,371,38],[326,39,371,39],[326,40,371,40],[327,16,372,14],[327,20,372,20,"finalX"],[327,26,372,26],[327,29,372,29,"normalizedX"],[327,40,372,40],[327,43,372,43],[327,44,372,44,"Math"],[327,48,372,48],[327,49,372,49,"random"],[327,55,372,55],[327,56,372,56],[327,57,372,57],[327,60,372,60],[327,63,372,63],[327,67,372,67,"randomFactor"],[327,79,372,79],[328,16,373,14],[328,20,373,20,"finalY"],[328,26,373,26],[328,29,373,29,"normalizedY"],[328,40,373,40],[328,43,373,43],[328,44,373,44,"Math"],[328,48,373,48],[328,49,373,49,"random"],[328,55,373,55],[328,56,373,56],[328,57,373,57],[328,60,373,60],[328,63,373,63],[328,67,373,67,"randomFactor"],[328,79,373,79],[330,16,375,14],[331,16,376,14],[331,20,376,18,"newX"],[331,24,376,22],[331,27,376,25,"enemy"],[331,32,376,30],[331,33,376,31,"position"],[331,41,376,39],[331,42,376,40,"x"],[331,43,376,41],[331,46,376,45,"finalX"],[331,52,376,51],[331,55,376,54,"MOVEMENT_SPEED"],[331,69,376,69],[332,16,377,14],[332,20,377,18,"newY"],[332,24,377,22],[332,27,377,25,"enemy"],[332,32,377,30],[332,33,377,31,"position"],[332,41,377,39],[332,42,377,40,"y"],[332,43,377,41],[332,46,377,45,"finalY"],[332,52,377,51],[332,55,377,54,"MOVEMENT_SPEED"],[332,69,377,69],[334,16,379,14],[335,16,380,14,"newX"],[335,20,380,18],[335,23,380,21,"Math"],[335,27,380,25],[335,28,380,26,"max"],[335,31,380,29],[335,32,380,30],[335,33,380,31],[335,35,380,33,"Math"],[335,39,380,37],[335,40,380,38,"min"],[335,43,380,41],[335,44,380,42,"SCREEN_WIDTH"],[335,56,380,54],[335,59,380,57,"ENEMY_SIZE"],[335,69,380,67],[335,71,380,69,"newX"],[335,75,380,73],[335,76,380,74],[335,77,380,75],[336,16,381,14,"newY"],[336,20,381,18],[336,23,381,21,"Math"],[336,27,381,25],[336,28,381,26,"max"],[336,31,381,29],[336,32,381,30],[336,33,381,31],[336,35,381,33,"Math"],[336,39,381,37],[336,40,381,38,"min"],[336,43,381,41],[336,44,381,42,"GAME_AREA_HEIGHT"],[336,60,381,58],[336,63,381,61,"ENEMY_SIZE"],[336,73,381,71],[336,75,381,73,"newY"],[336,79,381,77],[336,80,381,78],[336,81,381,79],[338,16,383,14],[339,16,384,14,"enemy"],[339,21,384,19],[339,22,384,20,"position"],[339,30,384,28],[339,31,384,29,"x"],[339,32,384,30],[339,35,384,33,"newX"],[339,39,384,37],[340,16,385,14,"enemy"],[340,21,385,19],[340,22,385,20,"position"],[340,30,385,28],[340,31,385,29,"y"],[340,32,385,30],[340,35,385,33,"newY"],[340,39,385,37],[341,14,386,12],[342,14,387,12],[343,12,388,10],[344,10,389,8],[345,8,390,6],[345,9,390,7],[345,10,390,8],[347,8,392,6],[348,8,393,6],[348,12,393,10,"newState"],[348,20,393,18],[348,21,393,19,"shadowClone"],[348,32,393,30],[348,34,393,32],[349,10,394,8],[350,10,395,8,"newState"],[350,18,395,16],[350,19,395,17,"shadowClone"],[350,30,395,28],[350,31,395,29,"remainingTicks"],[350,45,395,43],[350,47,395,45],[352,10,397,8],[353,10,398,8],[353,14,398,14,"cloneOffset"],[353,25,398,25],[353,28,398,28],[353,30,398,30],[353,31,398,31],[353,32,398,32],[354,10,399,8,"newState"],[354,18,399,16],[354,19,399,17,"shadowClone"],[354,30,399,28],[354,31,399,29,"position"],[354,39,399,37],[354,40,399,38,"x"],[354,41,399,39],[354,44,399,42,"currentNinjaPosition"],[354,64,399,62],[354,65,399,63,"x"],[354,66,399,64],[354,69,399,67,"cloneOffset"],[354,80,399,78],[355,10,400,8,"newState"],[355,18,400,16],[355,19,400,17,"shadowClone"],[355,30,400,28],[355,31,400,29,"position"],[355,39,400,37],[355,40,400,38,"y"],[355,41,400,39],[355,44,400,42,"currentNinjaPosition"],[355,64,400,62],[355,65,400,63,"y"],[355,66,400,64],[355,69,400,67],[355,71,400,69],[357,10,402,8],[358,10,403,8],[358,14,403,12,"newState"],[358,22,403,20],[358,23,403,21,"shadowClone"],[358,34,403,32],[358,35,403,33,"remainingTicks"],[358,49,403,47],[358,53,403,51],[358,54,403,52],[358,56,403,54],[359,12,404,10,"console"],[359,19,404,17],[359,20,404,18,"log"],[359,23,404,21],[359,24,404,22],[359,75,404,73],[359,76,404,74],[360,12,405,10,"newState"],[360,20,405,18],[360,21,405,19,"shadowClone"],[360,32,405,30],[360,35,405,33,"undefined"],[360,44,405,42],[361,10,406,8],[361,11,406,9],[361,17,406,15],[362,12,407,10],[363,12,408,10],[364,12,409,10],[364,16,409,16,"CLONE_ATTACK_INTERVAL"],[364,37,409,37],[364,40,409,40],[364,42,409,42],[365,12,410,10],[365,16,410,14,"newState"],[365,24,410,22],[365,25,410,23,"currentTick"],[365,36,410,34],[365,39,410,37,"CLONE_ATTACK_INTERVAL"],[365,60,410,58],[365,65,410,63],[365,66,410,64],[365,70,410,68,"newState"],[365,78,410,76],[365,79,410,77,"enemies"],[365,86,410,84],[365,87,410,85,"length"],[365,93,410,91],[365,96,410,94],[365,97,410,95],[365,99,410,97],[366,14,411,12,"console"],[366,21,411,19],[366,22,411,20,"log"],[366,25,411,23],[366,26,411,24],[366,83,411,81],[366,84,411,82],[368,14,413,12],[369,14,414,12],[369,18,414,18,"target"],[369,24,414,24],[369,27,414,27,"findClosestEnemyInternal"],[369,51,414,51],[369,52,414,52,"newState"],[369,60,414,60],[369,61,414,61,"enemies"],[369,68,414,68],[369,69,414,69],[370,14,415,12],[370,18,415,16,"target"],[370,24,415,22],[370,26,415,24],[371,16,416,14],[372,16,417,14],[372,20,417,20,"cloneDamage"],[372,31,417,31],[372,34,417,34,"Math"],[372,38,417,38],[372,39,417,39,"floor"],[372,44,417,44],[372,45,417,45,"newState"],[372,53,417,53],[372,54,417,54,"playerStats"],[372,65,417,65],[372,66,417,66,"attack"],[372,72,417,72],[372,75,417,75],[372,78,417,78],[372,79,417,79],[374,16,419,14],[375,16,420,14,"createProjectile"],[375,32,420,30],[375,33,420,31,"target"],[375,39,420,37],[375,41,420,39,"cloneDamage"],[375,52,420,50],[375,54,420,52,"newState"],[375,62,420,60],[375,63,420,61,"shadowClone"],[375,74,420,72],[375,75,420,73,"position"],[375,83,420,81],[375,85,420,83],[376,18,421,16,"id"],[376,20,421,18],[376,22,421,20],[376,43,421,41],[377,18,422,16,"name"],[377,22,422,20],[377,24,422,22],[377,45,422,43],[378,18,423,16,"icon"],[378,22,423,20],[378,24,423,22],[379,16,424,14],[379,17,424,15],[379,18,424,16],[380,14,425,12],[381,12,426,10],[382,10,427,8],[383,8,428,6],[385,8,430,6],[386,8,431,6],[387,8,432,6,"console"],[387,15,432,13],[387,16,432,14,"log"],[387,19,432,17],[387,20,432,18],[387,63,432,61,"isManualControlActive"],[387,84,432,82],[387,97,432,95,"game"],[387,101,432,99],[387,102,432,100,"gameState"],[387,111,432,109],[387,112,432,110,"isAlive"],[387,119,432,117],[387,121,432,119],[387,122,432,120],[388,8,433,6],[388,12,433,10],[388,13,433,11,"isManualControlActive"],[388,34,433,32],[388,38,433,36,"game"],[388,42,433,40],[388,43,433,41,"gameState"],[388,52,433,50],[388,53,433,51,"isAlive"],[388,60,433,58],[388,62,433,60],[389,10,434,8],[389,15,434,13],[389,19,434,17,"i"],[389,20,434,18],[389,23,434,21],[389,24,434,22],[389,26,434,24,"i"],[389,27,434,25],[389,30,434,28],[389,31,434,29],[389,33,434,31,"i"],[389,34,434,32],[389,36,434,34],[389,38,434,36],[390,12,435,10],[390,16,435,14,"newState"],[390,24,435,22],[390,25,435,23,"abilityManager"],[390,39,435,37],[390,40,435,38,"isAbilityReady"],[390,54,435,52],[390,55,435,53,"i"],[390,56,435,54],[390,57,435,55],[390,61,435,59,"newState"],[390,69,435,67],[390,70,435,68,"enemies"],[390,77,435,75],[390,78,435,76,"length"],[390,84,435,82],[390,87,435,85],[390,88,435,86],[390,90,435,88],[391,14,436,12],[391,18,436,16,"newState"],[391,26,436,24],[391,27,436,25,"abilityManager"],[391,41,436,39],[391,42,436,40,"useAbility"],[391,52,436,50],[391,53,436,51,"i"],[391,54,436,52],[391,56,436,54,"newTick"],[391,63,436,61],[391,64,436,62],[391,66,436,64],[392,16,437,14,"console"],[392,23,437,21],[392,24,437,22,"log"],[392,27,437,25],[392,28,437,26],[392,73,437,71,"i"],[392,74,437,72],[392,76,437,74],[392,77,437,75],[393,16,438,14,"castAbility"],[393,27,438,25],[393,28,438,26,"newState"],[393,36,438,34],[393,38,438,36,"i"],[393,39,438,37],[393,40,438,38],[394,14,439,12],[395,12,440,10],[396,10,441,8],[397,8,442,6],[399,8,444,6],[400,8,445,6],[400,12,445,12,"dyingEnemies"],[400,24,445,24],[400,27,445,27,"newState"],[400,35,445,35],[400,36,445,36,"enemies"],[400,43,445,43],[400,44,445,44,"filter"],[400,50,445,50],[400,51,445,51,"enemy"],[400,56,445,56],[400,60,445,60,"enemy"],[400,65,445,65],[400,66,445,66,"isDying"],[400,73,445,73],[400,77,445,77,"enemy"],[400,82,445,82],[400,83,445,83,"health"],[400,89,445,89],[400,93,445,93],[400,94,445,94],[400,95,445,95],[401,8,446,6],[401,12,446,12,"deadEnemies"],[401,23,446,23],[401,26,446,26,"newState"],[401,34,446,34],[401,35,446,35,"enemies"],[401,42,446,42],[401,43,446,43,"filter"],[401,49,446,49],[401,50,446,50,"enemy"],[401,55,446,55],[401,59,446,59,"enemy"],[401,64,446,64],[401,65,446,65,"health"],[401,71,446,71],[401,75,446,75],[401,76,446,76],[401,80,446,80],[401,81,446,81,"enemy"],[401,86,446,86],[401,87,446,87,"isDying"],[401,94,446,94],[401,95,446,95],[403,8,448,6],[404,8,449,6,"enemiesToKill"],[404,21,449,19],[404,24,449,22],[404,25,449,23],[404,28,449,26,"deadEnemies"],[404,39,449,37],[404,41,449,39],[404,44,449,42,"dyingEnemies"],[404,56,449,54],[404,57,449,55],[404,58,449,56],[404,59,449,57],[406,8,451,6],[407,8,452,6],[407,12,452,12,"currentTime"],[407,23,452,23],[407,26,452,26,"Date"],[407,30,452,30],[407,31,452,31,"now"],[407,34,452,34],[407,35,452,35],[407,36,452,36],[408,8,453,6,"newState"],[408,16,453,14],[408,17,453,15,"enemies"],[408,24,453,22],[408,27,453,25,"newState"],[408,35,453,33],[408,36,453,34,"enemies"],[408,43,453,41],[408,44,453,42,"filter"],[408,50,453,48],[408,51,453,49,"enemy"],[408,56,453,54],[408,60,453,58],[409,10,454,8],[409,14,454,12,"enemy"],[409,19,454,17],[409,20,454,18,"isDying"],[409,27,454,25],[409,31,454,29,"enemy"],[409,36,454,34],[409,37,454,35,"deathStartTime"],[409,51,454,49],[409,53,454,51],[410,12,455,10],[410,16,455,16,"animationDuration"],[410,33,455,33],[410,36,455,36],[410,39,455,39],[410,40,455,40],[410,41,455,41],[411,12,456,10],[411,16,456,16,"isAnimationComplete"],[411,35,456,35],[411,38,456,38,"currentTime"],[411,49,456,49],[411,52,456,52,"enemy"],[411,57,456,57],[411,58,456,58,"deathStartTime"],[411,72,456,72],[411,76,456,76,"animationDuration"],[411,93,456,93],[412,12,457,10],[412,16,457,14,"isAnimationComplete"],[412,35,457,33],[412,37,457,35],[413,14,458,12,"console"],[413,21,458,19],[413,22,458,20,"log"],[413,25,458,23],[413,26,458,24],[413,58,458,56,"enemy"],[413,63,458,61],[413,64,458,62,"name"],[413,68,458,66],[413,86,458,84,"currentTime"],[413,97,458,95],[413,100,458,98,"enemy"],[413,105,458,103],[413,106,458,104,"deathStartTime"],[413,120,458,118],[413,129,458,127],[413,130,458,128],[414,14,459,12],[414,21,459,19],[414,26,459,24],[414,27,459,25],[414,28,459,26],[415,12,460,10],[416,10,461,8],[417,10,462,8],[417,17,462,15],[417,21,462,19],[417,22,462,20],[417,23,462,21],[418,8,463,6],[418,9,463,7],[418,10,463,8],[420,8,465,6],[421,8,466,6],[421,12,466,10,"deadEnemies"],[421,23,466,21],[421,24,466,22,"length"],[421,30,466,28],[421,33,466,31],[421,34,466,32],[421,36,466,34],[422,10,467,8,"console"],[422,17,467,15],[422,18,467,16,"log"],[422,21,467,19],[422,22,467,20],[422,49,467,47,"deadEnemies"],[422,60,467,58],[422,61,467,59,"length"],[422,67,467,65],[422,83,467,81],[422,85,467,83,"deadEnemies"],[422,96,467,94],[422,97,467,95,"map"],[422,100,467,98],[422,101,467,99,"e"],[422,102,467,100],[422,106,467,104],[422,109,467,107,"e"],[422,110,467,108],[422,111,467,109,"id"],[422,113,467,111],[422,117,467,115,"e"],[422,118,467,116],[422,119,467,117,"health"],[422,125,467,123],[422,130,467,128],[422,131,467,129],[422,132,467,130],[423,8,468,6],[425,8,470,6],[426,8,471,6],[426,12,471,12,"lowHealthEnemies"],[426,28,471,28],[426,31,471,31,"newState"],[426,39,471,39],[426,40,471,40,"enemies"],[426,47,471,47],[426,48,471,48,"filter"],[426,54,471,54],[426,55,471,55,"enemy"],[426,60,471,60],[426,64,471,64,"enemy"],[426,69,471,69],[426,70,471,70,"health"],[426,76,471,76],[426,80,471,80],[426,82,471,82],[426,86,471,86,"enemy"],[426,91,471,91],[426,92,471,92,"health"],[426,98,471,98],[426,101,471,101],[426,102,471,102],[426,103,471,103],[427,8,472,6],[427,12,472,10,"lowHealthEnemies"],[427,28,472,26],[427,29,472,27,"length"],[427,35,472,33],[427,38,472,36],[427,39,472,37],[427,41,472,39],[428,10,473,8,"console"],[428,17,473,15],[428,18,473,16,"log"],[428,21,473,19],[428,22,473,20],[428,61,473,59],[428,63,473,61,"lowHealthEnemies"],[428,79,473,77],[428,80,473,78,"map"],[428,83,473,81],[428,84,473,82,"e"],[428,85,473,83],[428,89,473,87],[428,92,473,90,"e"],[428,93,473,91],[428,94,473,92,"id"],[428,96,473,94],[428,100,473,98,"e"],[428,101,473,99],[428,102,473,100,"health"],[428,108,473,106],[428,112,473,110,"e"],[428,113,473,111],[428,114,473,112,"maxHealth"],[428,123,473,121],[428,128,473,126],[428,129,473,127],[428,130,473,128],[429,8,474,6],[431,8,476,6],[432,8,477,6],[432,12,477,12,"beforeCount"],[432,23,477,23],[432,26,477,26,"newState"],[432,34,477,34],[432,35,477,35,"enemies"],[432,42,477,42],[432,43,477,43,"length"],[432,49,477,49],[433,8,478,6,"newState"],[433,16,478,14],[433,17,478,15,"enemies"],[433,24,478,22],[433,27,478,25,"newState"],[433,35,478,33],[433,36,478,34,"enemies"],[433,43,478,41],[433,44,478,42,"filter"],[433,50,478,48],[433,51,478,49,"enemy"],[433,56,478,54],[433,60,478,58,"enemy"],[433,65,478,63],[433,66,478,64,"health"],[433,72,478,70],[433,75,478,73],[433,76,478,74],[433,77,478,75],[434,8,479,6],[434,12,479,12,"afterCount"],[434,22,479,22],[434,25,479,25,"newState"],[434,33,479,33],[434,34,479,34,"enemies"],[434,41,479,41],[434,42,479,42,"length"],[434,48,479,48],[435,8,481,6],[435,12,481,10,"beforeCount"],[435,23,481,21],[435,28,481,26,"afterCount"],[435,38,481,36],[435,40,481,38],[436,10,482,8,"console"],[436,17,482,15],[436,18,482,16,"log"],[436,21,482,19],[436,22,482,20],[436,52,482,50,"beforeCount"],[436,63,482,61],[436,66,482,64,"afterCount"],[436,76,482,74],[436,102,482,100],[436,103,482,101],[437,8,483,6],[439,8,485,6],[440,8,486,6],[441,8,487,6],[441,12,487,12,"MAX_ENEMIES"],[441,23,487,23],[441,26,487,26],[441,28,487,28],[441,29,487,29],[441,30,487,30],[442,8,488,6],[442,12,488,12,"MIN_SPAWN_DELAY"],[442,27,488,27],[442,30,488,30],[442,33,488,33],[442,34,488,34],[442,35,488,35],[443,8,489,6],[443,12,489,12,"now"],[443,15,489,15],[443,18,489,18,"Date"],[443,22,489,22],[443,23,489,23,"now"],[443,26,489,26],[443,27,489,27],[443,28,489,28],[444,8,490,6],[444,12,490,12,"hasBoss"],[444,19,490,19],[444,22,490,22,"newState"],[444,30,490,30],[444,31,490,31,"enemies"],[444,38,490,38],[444,39,490,39,"some"],[444,43,490,43],[444,44,490,44,"enemy"],[444,49,490,49],[444,53,490,53,"enemy"],[444,58,490,58],[444,59,490,59,"isBoss"],[444,65,490,65],[444,66,490,66],[446,8,492,6],[447,8,493,6],[447,12,493,10],[447,13,493,11,"newState"],[447,21,493,19],[447,22,493,20,"lastSpawnTime"],[447,35,493,33],[447,37,493,35],[448,10,494,8,"newState"],[448,18,494,16],[448,19,494,17,"lastSpawnTime"],[448,32,494,30],[448,35,494,33,"now"],[448,38,494,36],[449,8,495,6],[450,8,497,6,"console"],[450,15,497,13],[450,16,497,14,"log"],[450,19,497,17],[450,20,497,18],[450,53,497,51,"newState"],[450,61,497,59],[450,62,497,60,"enemies"],[450,69,497,67],[450,70,497,68,"length"],[450,76,497,74],[450,85,497,83,"MAX_ENEMIES"],[450,96,497,94],[450,109,497,107,"hasBoss"],[450,116,497,114],[450,118,497,116],[450,119,497,117],[452,8,499,6],[453,8,500,6],[453,12,500,10],[453,13,500,11,"hasBoss"],[453,20,500,18],[453,24,500,22,"newState"],[453,32,500,30],[453,33,500,31,"enemies"],[453,40,500,38],[453,41,500,39,"length"],[453,47,500,45],[453,50,500,48,"MAX_ENEMIES"],[453,61,500,59],[453,65,500,64,"now"],[453,68,500,67],[453,71,500,70,"newState"],[453,79,500,78],[453,80,500,79,"lastSpawnTime"],[453,93,500,92],[453,97,500,97,"MIN_SPAWN_DELAY"],[453,112,500,112],[453,114,500,114],[454,10,501,8,"console"],[454,17,501,15],[454,18,501,16,"log"],[454,21,501,19],[454,22,501,20],[454,43,501,41,"newState"],[454,51,501,49],[454,52,501,50,"enemies"],[454,59,501,57],[454,60,501,58,"length"],[454,66,501,64],[454,69,501,67],[454,70,501,68],[454,74,501,72,"MAX_ENEMIES"],[454,85,501,83],[454,87,501,85],[454,88,501,86],[455,10,502,8,"spawnTestEnemy"],[455,24,502,22],[455,25,502,23,"newState"],[455,33,502,31],[455,34,502,32],[456,10,503,8,"newState"],[456,18,503,16],[456,19,503,17,"lastSpawnTime"],[456,32,503,30],[456,35,503,33,"now"],[456,38,503,36],[457,8,504,6],[458,8,506,6],[458,15,506,13,"newState"],[458,23,506,21],[459,6,507,4],[459,7,507,5],[459,47,507,6],[461,6,509,4],[462,6,510,4],[462,10,510,8,"enemiesToKill"],[462,23,510,21],[462,24,510,22,"length"],[462,30,510,28],[462,33,510,31],[462,34,510,32],[462,36,510,34],[463,8,511,6],[464,8,512,6],[464,12,512,12,"unprocessedEnemies"],[464,30,512,30],[464,33,512,33,"enemiesToKill"],[464,46,512,46],[464,47,512,47,"filter"],[464,53,512,53],[464,54,512,54,"enemy"],[464,59,512,59],[464,63,512,63],[464,64,512,64,"enemy"],[464,69,512,69],[464,70,512,70,"xpAwarded"],[464,79,512,79],[464,80,512,80],[465,8,514,6],[465,12,514,10,"unprocessedEnemies"],[465,30,514,28],[465,31,514,29,"length"],[465,37,514,35],[465,40,514,38],[465,41,514,39],[465,43,514,41],[466,10,515,8],[467,10,516,8],[467,14,516,12,"totalXP"],[467,21,516,19],[467,24,516,22],[467,25,516,23],[468,10,517,8],[468,14,517,12,"totalGold"],[468,23,517,21],[468,26,517,24],[468,27,517,25],[469,10,518,8],[469,14,518,14,"zoneKills"],[469,23,518,30],[469,26,518,33],[469,28,518,35],[470,10,520,8],[470,14,520,14,"xpMultiplier"],[470,26,520,26],[470,29,520,29,"game"],[470,33,520,33],[470,34,520,34,"gameState"],[470,43,520,43],[470,44,520,44,"subscriptionBenefits"],[470,64,520,64],[470,66,520,66,"xp_multiplier"],[470,79,520,79],[470,83,520,83],[470,86,520,86],[471,10,521,8],[471,14,521,14,"goldMultiplier"],[471,28,521,28],[471,31,521,31,"game"],[471,35,521,35],[471,36,521,36,"gameState"],[471,45,521,45],[471,46,521,46,"subscriptionBenefits"],[471,66,521,66],[471,68,521,68,"drop_multiplier"],[471,83,521,83],[471,87,521,87],[471,90,521,90],[472,10,523,8,"unprocessedEnemies"],[472,28,523,26],[472,29,523,27,"forEach"],[472,36,523,34],[472,37,523,35,"enemy"],[472,42,523,40],[472,46,523,44],[473,12,524,10,"totalXP"],[473,19,524,17],[473,23,524,21],[473,24,524,22,"enemy"],[473,29,524,27],[473,30,524,28,"zoneXP"],[473,36,524,34],[473,40,524,38],[473,41,524,39],[473,45,524,43,"xpMultiplier"],[473,57,524,55],[474,12,525,10,"totalGold"],[474,21,525,19],[474,25,525,23],[474,27,525,25],[474,30,525,28,"goldMultiplier"],[474,44,525,42],[475,12,527,10],[475,16,527,14,"enemy"],[475,21,527,19],[475,22,527,20,"zoneTypeId"],[475,32,527,30],[475,34,527,32],[476,14,528,12,"zoneKills"],[476,23,528,21],[476,24,528,22,"push"],[476,28,528,26],[476,29,528,27],[477,16,529,14,"id"],[477,18,529,16],[477,20,529,18,"enemy"],[477,25,529,23],[477,26,529,24,"id"],[477,28,529,26],[478,16,530,14,"typeId"],[478,22,530,20],[478,24,530,22,"enemy"],[478,29,530,27],[478,30,530,28,"zoneTypeId"],[478,40,530,38],[479,16,531,14,"name"],[479,20,531,18],[479,22,531,20,"enemy"],[479,27,531,25],[479,28,531,26,"name"],[479,32,531,30],[480,16,532,14,"icon"],[480,20,532,18],[480,22,532,20],[480,26,532,24],[481,16,533,14,"hp"],[481,18,533,16],[481,20,533,18],[481,21,533,19],[482,16,534,14,"maxHP"],[482,21,534,19],[482,23,534,21,"enemy"],[482,28,534,26],[482,29,534,27,"maxHealth"],[482,38,534,36],[483,16,535,14,"attack"],[483,22,535,20],[483,24,535,22,"enemy"],[483,29,535,27],[483,30,535,28,"stats"],[483,35,535,33],[483,36,535,34,"attack"],[483,42,535,40],[484,16,536,14,"xp"],[484,18,536,16],[484,20,536,18,"enemy"],[484,25,536,23],[484,26,536,24,"zoneXP"],[484,32,536,30],[484,36,536,34],[484,37,536,35],[485,16,537,14,"position"],[485,24,537,22],[485,26,537,24,"enemy"],[485,31,537,29],[485,32,537,30,"position"],[486,14,538,12],[486,15,538,13],[486,16,538,14],[487,12,539,10],[488,10,540,8],[488,11,540,9],[488,12,540,10],[490,10,542,8],[491,10,543,8,"game"],[491,14,543,12],[491,15,543,13,"updateNinja"],[491,26,543,24],[491,27,543,25,"prev"],[491,31,543,29],[491,36,543,34],[492,12,544,10,"experience"],[492,22,544,20],[492,24,544,22,"prev"],[492,28,544,26],[492,29,544,27,"experience"],[492,39,544,37],[492,42,544,40,"totalXP"],[492,49,544,47],[493,12,545,10,"gold"],[493,16,545,14],[493,18,545,16,"prev"],[493,22,545,20],[493,23,545,21,"gold"],[493,27,545,25],[493,30,545,28,"totalGold"],[494,10,546,8],[494,11,546,9],[494,12,546,10],[494,13,546,11],[496,10,548,8],[497,10,549,8,"zoneKills"],[497,19,549,17],[497,20,549,18,"forEach"],[497,27,549,25],[497,28,549,26,"zoneEnemy"],[497,37,549,35],[497,41,549,39,"recordEnemyKill"],[497,56,549,54],[497,57,549,55,"zoneEnemy"],[497,66,549,64],[497,67,549,65],[497,68,549,66],[499,10,551,8],[500,10,552,8,"setCombatState"],[500,24,552,22],[500,25,552,23,"prev"],[500,29,552,27],[500,34,552,32],[501,12,553,10],[501,15,553,13,"prev"],[501,19,553,17],[502,12,554,10,"enemies"],[502,19,554,17],[502,21,554,19,"prev"],[502,25,554,23],[502,26,554,24,"enemies"],[502,33,554,31],[502,34,554,32,"map"],[502,37,554,35],[502,38,554,36,"enemy"],[502,43,554,41],[502,47,554,45],[503,14,555,12],[503,18,555,18,"wasProcessed"],[503,30,555,30],[503,33,555,33,"unprocessedEnemies"],[503,51,555,51],[503,52,555,52,"find"],[503,56,555,56],[503,57,555,57,"processed"],[503,66,555,66],[503,70,555,70,"processed"],[503,79,555,79],[503,80,555,80,"id"],[503,82,555,82],[503,87,555,87,"enemy"],[503,92,555,92],[503,93,555,93,"id"],[503,95,555,95],[503,96,555,96],[504,14,556,12],[504,21,556,19,"wasProcessed"],[504,33,556,31],[504,36,556,34],[505,16,556,36],[505,19,556,39,"enemy"],[505,24,556,44],[506,16,556,46,"xpAwarded"],[506,25,556,55],[506,27,556,57],[507,14,556,62],[507,15,556,63],[507,18,556,66,"enemy"],[507,23,556,71],[508,12,557,10],[508,13,557,11],[509,10,558,8],[509,11,558,9],[509,12,558,10],[509,13,558,11],[510,8,559,6],[511,6,560,4],[512,4,561,2],[512,5,561,3],[512,6,561,4],[512,7,561,5],[514,4,563,2],[515,4,564,2],[515,8,564,8,"findClosestEnemyInternal"],[515,32,564,32],[515,35,564,36,"enemies"],[515,42,564,58],[515,46,564,83],[516,6,565,4],[516,10,565,8,"enemies"],[516,17,565,15],[516,18,565,16,"length"],[516,24,565,22],[516,29,565,27],[516,30,565,28],[516,32,565,30],[516,39,565,37],[516,43,565,41],[518,6,567,4],[519,6,568,4],[519,10,568,10,"SCREEN_WIDTH"],[519,22,568,22],[519,25,568,25],[519,28,568,28],[520,6,569,4],[520,10,569,10,"GAME_AREA_HEIGHT"],[520,26,569,26],[520,29,569,29],[520,32,569,32],[520,35,569,35],[520,38,569,38],[520,39,569,39],[520,40,569,40],[521,6,570,4],[521,10,570,10,"ninjaX"],[521,16,570,16],[521,19,570,19,"SCREEN_WIDTH"],[521,31,570,31],[521,34,570,34],[521,35,570,35],[522,6,571,4],[522,10,571,10,"ninjaY"],[522,16,571,16],[522,19,571,19,"GAME_AREA_HEIGHT"],[522,35,571,35],[522,38,571,38],[522,39,571,39],[523,6,573,4],[523,10,573,8,"closestEnemy"],[523,22,573,20],[523,25,573,23,"enemies"],[523,32,573,30],[523,33,573,31],[523,34,573,32],[523,35,573,33],[524,6,574,4],[524,10,574,8,"closestDistance"],[524,25,574,23],[524,28,574,26,"Infinity"],[524,36,574,34],[525,6,576,4,"enemies"],[525,13,576,11],[525,14,576,12,"forEach"],[525,21,576,19],[525,22,576,20,"enemy"],[525,27,576,25],[525,31,576,29],[526,8,577,6],[526,12,577,12,"distance"],[526,20,577,20],[526,23,577,23,"Math"],[526,27,577,27],[526,28,577,28,"sqrt"],[526,32,577,32],[526,33,578,8,"Math"],[526,37,578,12],[526,38,578,13,"pow"],[526,41,578,16],[526,42,578,17,"enemy"],[526,47,578,22],[526,48,578,23,"position"],[526,56,578,31],[526,57,578,32,"x"],[526,58,578,33],[526,61,578,36,"ninjaX"],[526,67,578,42],[526,69,578,44],[526,70,578,45],[526,71,578,46],[526,74,579,8,"Math"],[526,78,579,12],[526,79,579,13,"pow"],[526,82,579,16],[526,83,579,17,"enemy"],[526,88,579,22],[526,89,579,23,"position"],[526,97,579,31],[526,98,579,32,"y"],[526,99,579,33],[526,102,579,36,"ninjaY"],[526,108,579,42],[526,110,579,44],[526,111,579,45],[526,112,580,6],[526,113,580,7],[527,8,582,6],[527,12,582,10,"distance"],[527,20,582,18],[527,23,582,21,"closestDistance"],[527,38,582,36],[527,40,582,38],[528,10,583,8,"closestDistance"],[528,25,583,23],[528,28,583,26,"distance"],[528,36,583,34],[529,10,584,8,"closestEnemy"],[529,22,584,20],[529,25,584,23,"enemy"],[529,30,584,28],[530,8,585,6],[531,6,586,4],[531,7,586,5],[531,8,586,6],[532,6,588,4,"console"],[532,13,588,11],[532,14,588,12,"log"],[532,17,588,15],[532,18,588,16],[532,60,588,58,"closestDistance"],[532,75,588,73],[532,76,588,74,"toFixed"],[532,83,588,81],[532,84,588,82],[532,85,588,83],[532,86,588,84],[532,88,588,86],[532,89,588,87],[533,6,589,4],[533,13,589,11,"closestEnemy"],[533,25,589,23],[534,4,590,2],[534,5,590,3],[536,4,592,2],[537,4,593,2],[537,8,593,8,"findClosestEnemy"],[537,24,593,24],[537,27,593,27,"findClosestEnemy"],[537,28,593,27],[537,33,593,53],[538,6,594,4],[538,13,594,11,"findClosestEnemyInternal"],[538,37,594,35],[538,38,594,36,"combatState"],[538,49,594,47],[538,50,594,48,"enemies"],[538,57,594,55],[538,58,594,56],[539,4,595,2],[539,5,595,3],[541,4,597,2],[542,4,598,2],[542,8,598,2,"_useState7"],[542,18,598,2],[542,21,598,58],[542,25,598,58,"useState"],[542,31,598,66],[542,32,598,66,"useState"],[542,40,598,66],[542,42,598,91],[543,8,598,93,"x"],[543,9,598,94],[543,11,598,96],[543,12,598,97],[544,8,598,99,"y"],[544,9,598,100],[544,11,598,102],[545,6,598,104],[545,7,598,105],[545,8,598,106],[546,6,598,106,"_useState8"],[546,16,598,106],[546,23,598,106,"_slicedToArray"],[546,37,598,106],[546,38,598,106,"default"],[546,45,598,106],[546,47,598,106,"_useState7"],[546,57,598,106],[547,6,598,9,"currentNinjaPosition"],[547,26,598,29],[547,29,598,29,"_useState8"],[547,39,598,29],[548,6,598,31,"setCurrentNinjaPosition"],[548,29,598,54],[548,32,598,54,"_useState8"],[548,42,598,54],[549,4,599,2],[549,8,599,2,"_useState9"],[549,18,599,2],[549,21,599,60],[549,25,599,60,"useState"],[549,31,599,68],[549,32,599,68,"useState"],[549,40,599,68],[549,42,599,69],[549,47,599,74],[549,48,599,75],[550,6,599,75,"_useState0"],[550,16,599,75],[550,23,599,75,"_slicedToArray"],[550,37,599,75],[550,38,599,75,"default"],[550,45,599,75],[550,47,599,75,"_useState9"],[550,57,599,75],[551,6,599,9,"isManualControlActive"],[551,27,599,30],[551,30,599,30,"_useState0"],[551,40,599,30],[552,6,599,32,"setIsManualControlActive"],[552,30,599,56],[552,33,599,56,"_useState0"],[552,43,599,56],[554,4,601,2],[555,4,602,2],[555,8,602,8,"updateNinjaPosition"],[555,27,602,27],[555,30,602,30],[555,34,602,30,"useCallback"],[555,40,602,41],[555,41,602,41,"useCallback"],[555,52,602,41],[555,54,602,43,"newPosition"],[555,65,602,78],[555,69,602,83],[556,6,603,4,"setCurrentNinjaPosition"],[556,29,603,27],[556,30,603,28,"newPosition"],[556,41,603,39],[556,42,603,40],[557,4,604,2],[557,5,604,3],[557,7,604,5],[557,9,604,7],[557,10,604,8],[559,4,606,2],[560,4,607,2],[560,8,607,8,"setManualControlActive"],[560,30,607,30],[560,33,607,33],[560,37,607,33,"useCallback"],[560,43,607,44],[560,44,607,44,"useCallback"],[560,55,607,44],[560,57,607,46,"active"],[560,63,607,61],[560,67,607,66],[561,6,608,4,"setIsManualControlActive"],[561,30,608,28],[561,31,608,29,"active"],[561,37,608,35],[561,38,608,36],[562,6,609,4,"console"],[562,13,609,11],[562,14,609,12,"log"],[562,17,609,15],[562,18,609,16],[562,39,609,37,"active"],[562,45,609,43],[562,48,609,46],[562,59,609,57],[562,62,609,60],[562,75,609,73],[562,88,609,86,"active"],[562,94,609,92],[562,97,609,95],[562,105,609,103],[562,108,609,106],[562,117,609,115],[562,119,609,117],[562,120,609,118],[563,4,610,2],[563,5,610,3],[563,7,610,5],[563,9,610,7],[563,10,610,8],[565,4,612,2],[566,4,613,2],[566,8,613,8,"handleProjectileHit"],[566,27,613,27],[566,30,613,31,"projectile"],[566,40,613,59],[566,44,613,64],[567,6,614,4,"console"],[567,13,614,11],[567,14,614,12,"log"],[567,17,614,15],[567,18,614,16],[567,35,614,33,"projectile"],[567,45,614,43],[567,46,614,44,"id"],[567,48,614,46],[567,62,614,60,"projectile"],[567,72,614,70],[567,73,614,71,"targetEnemyId"],[567,86,614,84],[567,94,614,92,"projectile"],[567,104,614,102],[567,105,614,103,"damage"],[567,111,614,109],[567,120,614,118],[567,121,614,119],[568,6,616,4,"setCombatState"],[568,20,616,18],[568,21,616,19,"prev"],[568,25,616,23],[568,29,616,27],[569,8,617,6],[569,12,617,12,"newState"],[569,20,617,20],[569,23,617,23],[570,10,617,25],[570,13,617,28,"prev"],[571,8,617,33],[571,9,617,34],[573,8,619,6],[574,8,620,6],[574,12,620,12,"enemyIndex"],[574,22,620,22],[574,25,620,25,"newState"],[574,33,620,33],[574,34,620,34,"enemies"],[574,41,620,41],[574,42,620,42,"findIndex"],[574,51,620,51],[574,52,620,52,"e"],[574,53,620,53],[574,57,620,57,"e"],[574,58,620,58],[574,59,620,59,"id"],[574,61,620,61],[574,66,620,66,"projectile"],[574,76,620,76],[574,77,620,77,"targetEnemyId"],[574,90,620,90],[574,91,620,91],[575,8,621,6],[575,12,621,10,"enemyIndex"],[575,22,621,20],[575,26,621,24],[575,27,621,25],[575,29,621,27],[576,10,622,8,"newState"],[576,18,622,16],[576,19,622,17,"enemies"],[576,26,622,24],[576,29,622,27],[576,30,622,28],[576,33,622,31,"newState"],[576,41,622,39],[576,42,622,40,"enemies"],[576,49,622,47],[576,50,622,48],[577,10,623,8,"newState"],[577,18,623,16],[577,19,623,17,"enemies"],[577,26,623,24],[577,27,623,25,"enemyIndex"],[577,37,623,35],[577,38,623,36],[577,41,623,39],[578,12,624,10],[578,15,624,13,"newState"],[578,23,624,21],[578,24,624,22,"enemies"],[578,31,624,29],[578,32,624,30,"enemyIndex"],[578,42,624,40],[578,43,624,41],[579,12,625,10,"health"],[579,18,625,16],[579,20,625,18,"newState"],[579,28,625,26],[579,29,625,27,"enemies"],[579,36,625,34],[579,37,625,35,"enemyIndex"],[579,47,625,45],[579,48,625,46],[579,49,625,47,"health"],[579,55,625,53],[579,58,625,56,"projectile"],[579,68,625,66],[579,69,625,67,"damage"],[579,75,625,73],[580,12,626,10,"lastDamaged"],[580,23,626,21],[580,25,626,23,"combatEngine"],[580,44,626,35],[580,45,626,35,"combatEngine"],[580,57,626,35],[580,58,626,36,"getCurrentTick"],[580,72,626,50],[580,73,626,51],[581,10,627,8],[581,11,627,9],[582,10,629,8,"console"],[582,17,629,15],[582,18,629,16,"log"],[582,21,629,19],[582,22,629,20],[582,34,629,32,"projectile"],[582,44,629,42],[582,45,629,43,"targetEnemyId"],[582,58,629,56],[582,70,629,68,"newState"],[582,78,629,76],[582,79,629,77,"enemies"],[582,86,629,84],[582,87,629,85,"enemyIndex"],[582,97,629,95],[582,98,629,96],[582,99,629,97,"health"],[582,105,629,103],[582,109,629,107,"newState"],[582,117,629,115],[582,118,629,116,"enemies"],[582,125,629,123],[582,126,629,124,"enemyIndex"],[582,136,629,134],[582,137,629,135],[582,138,629,136,"maxHealth"],[582,147,629,145],[582,149,629,147],[582,150,629,148],[583,8,630,6],[584,8,632,6],[584,15,632,13,"newState"],[584,23,632,21],[585,6,633,4],[585,7,633,5],[585,8,633,6],[587,6,635,4],[588,6,636,4,"setProjectiles"],[588,20,636,18],[588,21,636,19,"prev"],[588,25,636,23],[588,29,636,27,"prev"],[588,33,636,31],[588,34,636,32,"filter"],[588,40,636,38],[588,41,636,39,"p"],[588,42,636,40],[588,46,636,44,"p"],[588,47,636,45],[588,48,636,46,"id"],[588,50,636,48],[588,55,636,53,"projectile"],[588,65,636,63],[588,66,636,64,"id"],[588,68,636,66],[588,69,636,67],[588,70,636,68],[589,4,637,2],[589,5,637,3],[591,4,639,2],[592,4,640,2],[592,8,640,8,"castAbility"],[592,19,640,19],[592,22,640,22,"castAbility"],[592,23,640,23,"state"],[592,28,640,41],[592,30,640,43,"slotIndex"],[592,39,640,60],[592,44,640,65],[593,6,641,4],[593,10,641,10,"deck"],[593,14,641,14],[593,17,641,17,"state"],[593,22,641,22],[593,23,641,23,"abilityManager"],[593,37,641,37],[593,38,641,38,"getDeck"],[593,45,641,45],[593,46,641,46],[593,47,641,47],[594,6,642,4],[594,10,642,10,"ability"],[594,17,642,17],[594,20,642,20,"deck"],[594,24,642,24],[594,25,642,25,"slots"],[594,30,642,30],[594,31,642,31,"slotIndex"],[594,40,642,40],[594,41,642,41],[595,6,643,4],[595,10,643,8],[595,11,643,9,"ability"],[595,18,643,16],[595,20,643,18],[596,6,645,4,"console"],[596,13,645,11],[596,14,645,12,"log"],[596,17,645,15],[596,18,645,16],[596,43,645,41,"ability"],[596,50,645,48],[596,51,645,49,"id"],[596,53,645,51],[596,67,645,65,"slotIndex"],[596,76,645,74],[596,78,645,76],[596,79,645,77],[598,6,647,4],[599,6,648,4],[599,10,648,8,"damage"],[599,16,648,14],[599,19,648,17,"ability"],[599,26,648,24],[599,27,648,25,"stats"],[599,32,648,30],[599,33,648,31,"baseDamage"],[599,43,648,41],[601,6,650,4],[602,6,651,4,"deck"],[602,10,651,8],[602,11,651,9,"activeSynergies"],[602,26,651,24],[602,27,651,25,"forEach"],[602,34,651,32],[602,35,651,33,"synergy"],[602,42,651,40],[602,46,651,44],[603,8,652,6],[603,12,652,10,"synergy"],[603,19,652,17],[603,20,652,18,"bonus"],[603,25,652,23],[603,26,652,24,"damageBonus"],[603,37,652,35],[603,41,653,10,"synergy"],[603,48,653,17],[603,49,653,18,"requiredTags"],[603,61,653,30],[603,62,653,31,"some"],[603,66,653,35],[603,67,653,36,"tag"],[603,70,653,39],[603,74,653,43,"ability"],[603,81,653,50],[603,82,653,51,"tags"],[603,86,653,55],[603,87,653,56,"includes"],[603,95,653,64],[603,96,653,65,"tag"],[603,99,653,68],[603,100,653,69],[603,101,653,70],[603,103,653,72],[604,10,654,8,"damage"],[604,16,654,14],[604,20,654,19],[604,21,654,20],[604,24,654,23,"synergy"],[604,31,654,30],[604,32,654,31,"bonus"],[604,37,654,36],[604,38,654,37,"damageBonus"],[604,49,654,48],[604,52,654,51],[604,55,654,55],[605,8,655,6],[606,6,656,4],[606,7,656,5],[606,8,656,6],[608,6,658,4],[609,6,659,4],[609,10,659,10,"isAOE"],[609,15,659,15],[609,18,659,18,"ability"],[609,25,659,25],[609,26,659,26,"effects"],[609,33,659,33],[609,34,659,34,"includes"],[609,42,659,42],[609,43,659,43],[609,48,659,48],[609,49,659,49],[609,53,659,53,"ability"],[609,60,659,60],[609,61,659,61,"stats"],[609,66,659,66],[609,67,659,67,"aoeRadius"],[609,76,659,76],[610,6,660,4,"console"],[610,13,660,11],[610,14,660,12,"log"],[610,17,660,15],[610,18,660,16],[610,39,660,37,"ability"],[610,46,660,44],[610,47,660,45,"name"],[610,51,660,49],[610,66,660,64,"JSON"],[610,70,660,68],[610,71,660,69,"stringify"],[610,80,660,78],[610,81,660,79,"ability"],[610,88,660,86],[610,89,660,87,"effects"],[610,96,660,94],[610,97,660,95],[610,113,660,111,"ability"],[610,120,660,118],[610,121,660,119,"stats"],[610,126,660,124],[610,127,660,125,"aoeRadius"],[610,136,660,134],[610,148,660,146,"isAOE"],[610,153,660,151],[610,155,660,153],[610,156,660,154],[611,6,662,4],[611,10,662,8,"isAOE"],[611,15,662,13],[611,17,662,15],[612,8,663,6,"console"],[612,15,663,13],[612,16,663,14,"log"],[612,19,663,17],[612,20,663,18],[612,39,663,37,"ability"],[612,46,663,44],[612,47,663,45,"name"],[612,51,663,49],[612,67,663,65,"ability"],[612,74,663,72],[612,75,663,73,"stats"],[612,80,663,78],[612,81,663,79,"aoeRadius"],[612,90,663,88],[612,92,663,90],[612,93,663,91],[614,8,665,6],[615,8,666,6],[616,8,667,6],[616,12,667,12,"ninjaX"],[616,18,667,18],[616,21,667,21,"currentNinjaPosition"],[616,41,667,41],[616,42,667,42,"x"],[616,43,667,43],[616,46,667,46],[616,48,667,48],[616,49,667,49],[616,50,667,50],[617,8,668,6],[617,12,668,12,"ninjaY"],[617,18,668,18],[617,21,668,21,"currentNinjaPosition"],[617,41,668,41],[617,42,668,42,"y"],[617,43,668,43],[617,46,668,46],[617,48,668,48],[618,8,669,6],[618,12,669,12,"aoeRadius"],[618,21,669,21],[618,24,669,24,"ability"],[618,31,669,31],[618,32,669,32,"stats"],[618,37,669,37],[618,38,669,38,"aoeRadius"],[618,47,669,47],[619,8,671,6],[619,12,671,12,"enemiesInRange"],[619,26,671,26],[619,29,671,29,"state"],[619,34,671,34],[619,35,671,35,"enemies"],[619,42,671,42],[619,43,671,43,"filter"],[619,49,671,49],[619,50,671,50,"enemy"],[619,55,671,55],[619,59,671,59],[620,10,672,8],[620,14,672,14,"enemyX"],[620,20,672,20],[620,23,672,23,"enemy"],[620,28,672,28],[620,29,672,29,"position"],[620,37,672,37],[620,38,672,38,"x"],[620,39,672,39],[620,42,672,42],[620,46,672,46],[620,47,672,47],[620,48,672,48],[621,10,673,8],[621,14,673,14,"enemyY"],[621,20,673,20],[621,23,673,23,"enemy"],[621,28,673,28],[621,29,673,29,"position"],[621,37,673,37],[621,38,673,38,"y"],[621,39,673,39],[621,42,673,42],[621,46,673,46],[622,10,674,8],[622,14,674,14,"distance"],[622,22,674,22],[622,25,674,25,"Math"],[622,29,674,29],[622,30,674,30,"sqrt"],[622,34,674,34],[622,35,674,35,"Math"],[622,39,674,39],[622,40,674,40,"pow"],[622,43,674,43],[622,44,674,44,"enemyX"],[622,50,674,50],[622,53,674,53,"ninjaX"],[622,59,674,59],[622,61,674,61],[622,62,674,62],[622,63,674,63],[622,66,674,66,"Math"],[622,70,674,70],[622,71,674,71,"pow"],[622,74,674,74],[622,75,674,75,"enemyY"],[622,81,674,81],[622,84,674,84,"ninjaY"],[622,90,674,90],[622,92,674,92],[622,93,674,93],[622,94,674,94],[622,95,674,95],[623,10,675,8],[623,17,675,15,"distance"],[623,25,675,23],[623,29,675,27,"aoeRadius"],[623,38,675,36],[624,8,676,6],[624,9,676,7],[624,10,676,8],[625,8,678,6,"console"],[625,15,678,13],[625,16,678,14,"log"],[625,19,678,17],[625,20,678,18],[625,45,678,43,"enemiesInRange"],[625,59,678,57],[625,60,678,58,"length"],[625,66,678,64],[625,88,678,86,"aoeRadius"],[625,97,678,95],[625,107,678,105],[625,108,678,106],[627,8,680,6],[628,8,681,6,"enemiesInRange"],[628,22,681,20],[628,23,681,21,"forEach"],[628,30,681,28],[628,31,681,29,"enemy"],[628,36,681,34],[628,40,681,38],[629,10,682,8],[629,14,682,14,"damageResult"],[629,26,682,26],[629,29,682,29,"DamageCalculator"],[629,48,682,45],[629,49,682,45,"DamageCalculator"],[629,65,682,45],[629,66,682,46,"calculateDamage"],[629,81,682,61],[629,82,682,62,"damage"],[629,88,682,68],[629,90,682,70,"state"],[629,95,682,75],[629,96,682,76,"playerStats"],[629,107,682,87],[629,109,682,89,"enemy"],[629,114,682,94],[629,115,682,95,"stats"],[629,120,682,100],[629,121,682,101],[630,10,683,8,"createProjectile"],[630,26,683,24],[630,27,683,25,"enemy"],[630,32,683,30],[630,34,683,32,"damageResult"],[630,46,683,44],[630,47,683,45,"damage"],[630,53,683,51],[630,55,683,53,"currentNinjaPosition"],[630,75,683,73],[630,77,683,75],[631,12,684,10,"id"],[631,14,684,12],[631,16,684,14,"ability"],[631,23,684,21],[631,24,684,22,"id"],[631,26,684,24],[632,12,685,10,"name"],[632,16,685,14],[632,18,685,16,"ability"],[632,25,685,23],[632,26,685,24,"name"],[632,30,685,28],[633,12,686,10,"icon"],[633,16,686,14],[633,18,686,16,"ability"],[633,25,686,23],[633,26,686,24,"icon"],[634,10,687,8],[634,11,687,9],[634,12,687,10],[635,10,688,8,"console"],[635,17,688,15],[635,18,688,16,"log"],[635,21,688,19],[635,22,688,20],[635,37,688,35,"enemy"],[635,42,688,40],[635,43,688,41,"name"],[635,47,688,45],[635,55,688,53,"damageResult"],[635,67,688,65],[635,68,688,66,"damage"],[635,74,688,72],[635,83,688,81],[635,84,688,82],[637,10,690,8],[638,10,691,8],[638,14,691,12,"damageResult"],[638,26,691,24],[638,27,691,25,"damage"],[638,33,691,31],[638,37,691,35,"enemy"],[638,42,691,40],[638,43,691,41,"health"],[638,49,691,47],[638,51,691,49],[639,12,692,10,"console"],[639,19,692,17],[639,20,692,18,"log"],[639,23,692,21],[639,24,692,22],[639,67,692,65,"enemy"],[639,72,692,70],[639,73,692,71,"name"],[639,77,692,75],[639,90,692,88,"damageResult"],[639,102,692,100],[639,103,692,101,"damage"],[639,109,692,107],[639,124,692,122,"enemy"],[639,129,692,127],[639,130,692,128,"health"],[639,136,692,134],[639,139,692,137],[639,140,692,138],[640,10,693,8],[641,8,694,6],[641,9,694,7],[641,10,694,8],[642,8,696,6,"console"],[642,15,696,13],[642,16,696,14,"log"],[642,19,696,17],[642,20,696,18],[642,26,696,24,"ability"],[642,33,696,31],[642,34,696,32,"name"],[642,38,696,36],[642,56,696,54,"enemiesInRange"],[642,70,696,68],[642,71,696,69,"length"],[642,77,696,75],[642,93,696,91,"damage"],[642,99,696,97],[642,118,696,116],[642,119,696,117],[643,6,698,4],[643,7,698,5],[643,13,698,11],[644,8,699,6],[645,8,700,6],[645,12,700,12,"target"],[645,18,700,18],[645,21,700,21,"findClosestEnemyInternal"],[645,45,700,45],[645,46,700,46,"state"],[645,51,700,51],[645,52,700,52,"enemies"],[645,59,700,59],[645,60,700,60],[646,8,701,6],[646,12,701,10],[646,13,701,11,"target"],[646,19,701,17],[646,21,701,19],[647,8,703,6],[647,12,703,12,"damageResult"],[647,24,703,24],[647,27,703,27,"DamageCalculator"],[647,46,703,43],[647,47,703,43,"DamageCalculator"],[647,63,703,43],[647,64,703,44,"calculateDamage"],[647,79,703,59],[647,80,703,60,"damage"],[647,86,703,66],[647,88,703,68,"state"],[647,93,703,73],[647,94,703,74,"playerStats"],[647,105,703,85],[647,107,703,87,"target"],[647,113,703,93],[647,114,703,94,"stats"],[647,119,703,99],[647,120,703,100],[649,8,705,6],[650,8,706,6,"console"],[650,15,706,13],[650,16,706,14,"log"],[650,19,706,17],[650,20,706,18],[650,71,706,69,"target"],[650,77,706,75],[650,78,706,76,"name"],[650,82,706,80],[650,91,706,89,"damageResult"],[650,103,706,101],[650,104,706,102,"damage"],[650,110,706,108],[650,119,706,117],[650,120,706,118],[651,8,707,6,"createProjectile"],[651,24,707,22],[651,25,707,23,"target"],[651,31,707,29],[651,33,707,31,"damageResult"],[651,45,707,43],[651,46,707,44,"damage"],[651,52,707,50],[651,54,707,52,"currentNinjaPosition"],[651,74,707,72],[651,76,707,74],[652,10,708,8,"id"],[652,12,708,10],[652,14,708,12,"ability"],[652,21,708,19],[652,22,708,20,"id"],[652,24,708,22],[653,10,709,8,"name"],[653,14,709,12],[653,16,709,14,"ability"],[653,23,709,21],[653,24,709,22,"name"],[653,28,709,26],[654,10,710,8,"icon"],[654,14,710,12],[654,16,710,14,"ability"],[654,23,710,21],[654,24,710,22,"icon"],[655,8,711,6],[655,9,711,7],[655,10,711,8],[656,8,713,6,"console"],[656,15,713,13],[656,16,713,14,"log"],[656,19,713,17],[656,20,713,18],[656,26,713,24,"ability"],[656,33,713,31],[656,34,713,32,"name"],[656,38,713,36],[656,66,713,64,"damageResult"],[656,78,713,76],[656,79,713,77,"damage"],[656,85,713,83],[656,95,713,93,"damageResult"],[656,107,713,105],[656,108,713,106,"isCritical"],[656,118,713,116],[656,121,713,119],[656,131,713,129],[656,134,713,132],[656,136,713,134],[656,138,713,136],[656,139,713,137],[658,8,715,6],[659,8,716,6],[659,12,716,10,"damageResult"],[659,24,716,22],[659,25,716,23,"damage"],[659,31,716,29],[659,35,716,33,"target"],[659,41,716,39],[659,42,716,40,"health"],[659,48,716,46],[659,50,716,48],[660,10,717,8,"console"],[660,17,717,15],[660,18,717,16,"log"],[660,21,717,19],[660,22,717,20],[660,75,717,73,"target"],[660,81,717,79],[660,82,717,80,"name"],[660,86,717,84],[660,99,717,97,"damageResult"],[660,111,717,109],[660,112,717,110,"damage"],[660,118,717,116],[660,133,717,131,"target"],[660,139,717,137],[660,140,717,138,"health"],[660,146,717,144],[660,149,717,147],[660,150,717,148],[661,8,718,6],[662,6,719,4],[664,6,721,4],[665,6,722,4],[665,10,722,8,"ability"],[665,17,722,15],[665,18,722,16,"effects"],[665,25,722,23],[665,26,722,24,"includes"],[665,34,722,32],[665,35,722,33],[665,40,722,38],[665,41,722,39],[665,45,722,43,"ability"],[665,52,722,50],[665,53,722,51,"stats"],[665,58,722,56],[665,59,722,57,"duration"],[665,67,722,65],[665,69,722,67],[666,8,723,6],[666,12,723,12,"targets"],[666,19,723,19],[666,22,723,22,"isAOE"],[666,27,723,27],[666,30,724,8,"state"],[666,35,724,13],[666,36,724,14,"enemies"],[666,43,724,21],[666,44,724,22,"filter"],[666,50,724,28],[666,51,724,29,"enemy"],[666,56,724,34],[666,60,724,38],[667,10,725,10],[667,14,725,16,"ninjaX"],[667,20,725,22],[667,23,725,25,"currentNinjaPosition"],[667,43,725,45],[667,44,725,46,"x"],[667,45,725,47],[667,48,725,50],[667,50,725,52],[668,10,726,10],[668,14,726,16,"ninjaY"],[668,20,726,22],[668,23,726,25,"currentNinjaPosition"],[668,43,726,45],[668,44,726,46,"y"],[668,45,726,47],[668,48,726,50],[668,50,726,52],[669,10,727,10],[669,14,727,16,"enemyX"],[669,20,727,22],[669,23,727,25,"enemy"],[669,28,727,30],[669,29,727,31,"position"],[669,37,727,39],[669,38,727,40,"x"],[669,39,727,41],[669,42,727,44],[669,46,727,48],[670,10,728,10],[670,14,728,16,"enemyY"],[670,20,728,22],[670,23,728,25,"enemy"],[670,28,728,30],[670,29,728,31,"position"],[670,37,728,39],[670,38,728,40,"y"],[670,39,728,41],[670,42,728,44],[670,46,728,48],[671,10,729,10],[671,14,729,16,"distance"],[671,22,729,24],[671,25,729,27,"Math"],[671,29,729,31],[671,30,729,32,"sqrt"],[671,34,729,36],[671,35,729,37,"Math"],[671,39,729,41],[671,40,729,42,"pow"],[671,43,729,45],[671,44,729,46,"enemyX"],[671,50,729,52],[671,53,729,55,"ninjaX"],[671,59,729,61],[671,61,729,63],[671,62,729,64],[671,63,729,65],[671,66,729,68,"Math"],[671,70,729,72],[671,71,729,73,"pow"],[671,74,729,76],[671,75,729,77,"enemyY"],[671,81,729,83],[671,84,729,86,"ninjaY"],[671,90,729,92],[671,92,729,94],[671,93,729,95],[671,94,729,96],[671,95,729,97],[672,10,730,10],[672,17,730,17,"distance"],[672,25,730,25],[672,29,730,29,"ability"],[672,36,730,36],[672,37,730,37,"stats"],[672,42,730,42],[672,43,730,43,"aoeRadius"],[672,52,730,52],[673,8,731,8],[673,9,731,9],[673,10,731,10],[673,13,732,8],[673,14,732,9,"findClosestEnemyInternal"],[673,38,732,33],[673,39,732,34,"state"],[673,44,732,39],[673,45,732,40,"enemies"],[673,52,732,47],[673,53,732,48],[673,54,732,49],[673,55,732,50,"filter"],[673,61,732,56],[673,62,732,57,"Boolean"],[673,69,732,64],[673,70,732,65],[674,8,734,6,"targets"],[674,15,734,13],[674,16,734,14,"forEach"],[674,23,734,21],[674,24,734,22,"target"],[674,30,734,28],[674,34,734,32],[675,10,735,8,"state"],[675,15,735,13],[675,16,735,14,"statusEffects"],[675,29,735,27],[675,30,735,28,"addEffect"],[675,39,735,37],[675,40,735,38,"target"],[675,46,735,44],[675,47,735,45,"id"],[675,49,735,47],[675,51,735,49],[676,12,736,10,"id"],[676,14,736,12],[676,16,736,14],[676,19,736,17,"ability"],[676,26,736,24],[676,27,736,25,"id"],[676,29,736,27],[676,35,736,33],[677,12,737,10,"type"],[677,16,737,14],[677,18,737,16],[677,23,737,21],[678,12,738,10,"remainingTicks"],[678,26,738,24],[678,28,738,26,"Math"],[678,32,738,30],[678,33,738,31,"floor"],[678,38,738,36],[678,39,738,37,"ability"],[678,46,738,44],[678,47,738,45,"stats"],[678,52,738,50],[678,53,738,51,"duration"],[678,61,738,59],[678,64,738,62],[678,66,738,64],[678,67,738,65],[679,12,739,10,"tickInterval"],[679,24,739,22],[679,26,739,24],[679,28,739,26],[680,12,740,10,"lastTick"],[680,20,740,18],[680,22,740,20,"state"],[680,27,740,25],[680,28,740,26,"currentTick"],[680,39,740,37],[681,12,741,10,"value"],[681,17,741,15],[681,19,741,17,"Math"],[681,23,741,21],[681,24,741,22,"floor"],[681,29,741,27],[681,30,741,28,"damage"],[681,36,741,34],[681,39,741,37],[681,42,741,40],[681,43,741,41],[682,12,742,10,"stackable"],[682,21,742,19],[682,23,742,21],[683,10,743,8],[683,11,743,9],[683,12,743,10],[684,8,744,6],[684,9,744,7],[684,10,744,8],[685,6,745,4],[687,6,747,4],[688,6,748,4],[688,10,748,8,"ability"],[688,17,748,15],[688,18,748,16,"effects"],[688,25,748,23],[688,26,748,24,"includes"],[688,34,748,32],[688,35,748,33],[688,41,748,39],[688,42,748,40],[688,46,748,44,"ability"],[688,53,748,51],[688,54,748,52,"id"],[688,56,748,54],[688,61,748,59],[688,75,748,73],[688,77,748,75],[689,8,749,6,"console"],[689,15,749,13],[689,16,749,14,"log"],[689,19,749,17],[689,20,749,18],[689,66,749,64,"ability"],[689,73,749,71],[689,74,749,72,"stats"],[689,79,749,77],[689,80,749,78,"duration"],[689,88,749,86],[689,98,749,96],[689,99,749,97],[691,8,751,6],[692,8,752,6],[692,12,752,12,"cloneX"],[692,18,752,18],[692,21,752,21,"currentNinjaPosition"],[692,41,752,41],[692,42,752,42,"x"],[692,43,752,43],[692,46,752,46],[692,48,752,48],[692,49,752,49],[692,50,752,50],[693,8,753,6],[693,12,753,12,"cloneY"],[693,18,753,18],[693,21,753,21,"currentNinjaPosition"],[693,41,753,41],[693,42,753,42,"y"],[693,43,753,43],[693,46,753,46],[693,48,753,48],[693,49,753,49],[693,50,753,50],[695,8,755,6,"state"],[695,13,755,11],[695,14,755,12,"shadowClone"],[695,25,755,23],[695,28,755,26],[696,10,756,8,"id"],[696,12,756,10],[696,14,756,12],[696,30,756,28,"Date"],[696,34,756,32],[696,35,756,33,"now"],[696,38,756,36],[696,39,756,37],[696,40,756,38],[696,42,756,40],[697,10,757,8,"remainingTicks"],[697,24,757,22],[697,26,757,24,"Math"],[697,30,757,28],[697,31,757,29,"floor"],[697,36,757,34],[697,37,757,35,"ability"],[697,44,757,42],[697,45,757,43,"stats"],[697,50,757,48],[697,51,757,49,"duration"],[697,59,757,57],[697,62,757,60],[697,64,757,62],[697,65,757,63],[698,10,757,65],[699,10,758,8,"position"],[699,18,758,16],[699,20,758,18],[700,12,758,20,"x"],[700,13,758,21],[700,15,758,23,"cloneX"],[700,21,758,29],[701,12,758,31,"y"],[701,13,758,32],[701,15,758,34,"cloneY"],[702,10,758,41],[702,11,758,42],[703,10,759,8,"damageMultiplier"],[703,26,759,24],[703,28,759,26],[703,31,759,29],[703,32,759,31],[704,8,760,6],[704,9,760,7],[705,8,762,6,"console"],[705,15,762,13],[705,16,762,14,"log"],[705,19,762,17],[705,20,762,18],[705,63,762,61,"ability"],[705,70,762,68],[705,71,762,69,"stats"],[705,76,762,74],[705,77,762,75,"duration"],[705,85,762,83],[705,108,762,106],[705,109,762,107],[706,6,763,4],[707,4,764,2],[707,5,764,3],[709,4,766,2],[710,4,767,2],[710,8,767,8,"createProjectile"],[710,24,767,24],[710,27,767,27,"createProjectile"],[710,28,767,28,"targetEnemy"],[710,39,767,52],[710,41,767,54,"damage"],[710,47,767,68],[710,49,767,70,"ninjaPos"],[710,57,767,103],[710,59,767,105,"abilityInfo"],[710,70,767,159],[710,72,767,161,"isAOE"],[710,77,767,176],[710,79,767,178,"aoeRadius"],[710,88,767,196],[710,93,767,201],[711,6,768,4],[711,10,768,8],[711,11,768,9,"targetEnemy"],[711,22,768,20],[711,24,768,22],[712,8,769,6,"console"],[712,15,769,13],[712,16,769,14,"log"],[712,19,769,17],[712,20,769,18],[712,65,769,63],[712,66,769,64],[713,8,770,6],[713,15,770,13],[713,19,770,17],[714,6,771,4],[715,6,773,4],[715,10,773,10,"SCREEN_WIDTH"],[715,22,773,22],[715,25,773,25],[715,28,773,28],[716,6,774,4],[716,10,774,10,"GAME_AREA_HEIGHT"],[716,26,774,26],[716,29,774,29],[716,32,774,32],[716,35,774,35],[716,38,774,38],[716,39,774,39],[716,40,774,40],[717,6,775,4],[717,10,775,10,"NINJA_SIZE"],[717,20,775,20],[717,23,775,23],[717,25,775,25],[719,6,777,4],[720,6,778,4],[720,10,778,10,"ninjaX"],[720,16,778,16],[720,19,778,19,"ninjaPos"],[720,27,778,27],[720,30,778,30,"ninjaPos"],[720,38,778,38],[720,39,778,39,"x"],[720,40,778,40],[720,43,778,43,"NINJA_SIZE"],[720,53,778,53],[720,56,778,56],[720,57,778,57],[720,60,778,60,"SCREEN_WIDTH"],[720,72,778,72],[720,75,778,75],[720,76,778,76],[721,6,779,4],[721,10,779,10,"ninjaY"],[721,16,779,16],[721,19,779,19,"ninjaPos"],[721,27,779,27],[721,30,779,30,"ninjaPos"],[721,38,779,38],[721,39,779,39,"y"],[721,40,779,40],[721,43,779,43,"NINJA_SIZE"],[721,53,779,53],[721,56,779,56],[721,57,779,57],[721,60,779,60,"GAME_AREA_HEIGHT"],[721,76,779,76],[721,79,779,79],[721,80,779,80],[722,6,780,4],[722,10,780,10,"ENEMY_SIZE"],[722,20,780,20],[722,23,780,23],[722,25,780,25],[723,6,782,4],[723,10,782,10,"projectileId"],[723,22,782,22],[723,25,782,25],[723,33,782,33,"Date"],[723,37,782,37],[723,38,782,38,"now"],[723,41,782,41],[723,42,782,42],[723,43,782,43],[723,47,782,47,"Math"],[723,51,782,51],[723,52,782,52,"random"],[723,58,782,58],[723,59,782,59],[723,60,782,60],[723,62,782,62],[724,6,784,4],[724,10,784,10,"projectile"],[724,20,784,38],[724,23,784,41],[725,8,785,6,"id"],[725,10,785,8],[725,12,785,10,"projectileId"],[725,24,785,22],[726,8,786,6,"x"],[726,9,786,7],[726,11,786,9,"ninjaX"],[726,17,786,15],[727,8,787,6,"y"],[727,9,787,7],[727,11,787,9,"ninjaY"],[727,17,787,15],[728,8,788,6,"targetX"],[728,15,788,13],[728,17,788,15,"targetEnemy"],[728,28,788,26],[728,29,788,27,"position"],[728,37,788,35],[728,38,788,36,"x"],[728,39,788,37],[728,42,788,40,"ENEMY_SIZE"],[728,52,788,50],[728,55,788,53],[728,56,788,54],[729,8,789,6,"targetY"],[729,15,789,13],[729,17,789,15,"targetEnemy"],[729,28,789,26],[729,29,789,27,"position"],[729,37,789,35],[729,38,789,36,"y"],[729,39,789,37],[729,42,789,40,"ENEMY_SIZE"],[729,52,789,50],[729,55,789,53],[729,56,789,54],[730,8,790,6,"targetEnemyId"],[730,21,790,19],[730,23,790,21,"targetEnemy"],[730,34,790,32],[730,35,790,33,"id"],[730,37,790,35],[731,8,791,6,"damage"],[731,14,791,12],[731,16,791,14,"damage"],[731,22,791,20],[732,8,792,6,"startTime"],[732,17,792,15],[732,19,792,17,"Date"],[732,23,792,21],[732,24,792,22,"now"],[732,27,792,25],[732,28,792,26],[732,29,792,27],[733,8,793,6,"duration"],[733,16,793,14],[733,18,793,16],[733,21,793,19],[734,8,793,21],[735,8,794,6],[736,8,795,6,"abilityId"],[736,17,795,15],[736,19,795,17,"abilityInfo"],[736,30,795,28],[736,32,795,30,"id"],[736,34,795,32],[736,38,795,36],[736,54,795,52],[737,8,796,6,"abilityName"],[737,19,796,17],[737,21,796,19,"abilityInfo"],[737,32,796,30],[737,34,796,32,"name"],[737,38,796,36],[737,42,796,40],[737,58,796,56],[738,8,797,6,"abilityIcon"],[738,19,797,17],[738,21,797,19,"abilityInfo"],[738,32,797,30],[738,34,797,32,"icon"],[738,38,797,36],[738,42,797,40],[738,46,797,44],[739,8,797,46],[740,8,798,6],[741,8,799,6,"isAOE"],[741,13,799,11],[741,15,799,13,"isAOE"],[741,20,799,18],[741,24,799,22],[741,29,799,27],[742,8,800,6,"aoeRadius"],[742,17,800,15],[742,19,800,17,"aoeRadius"],[742,28,800,26],[742,32,800,30],[743,6,801,4],[743,7,801,5],[744,6,803,4,"console"],[744,13,803,11],[744,14,803,12,"log"],[744,17,803,15],[744,18,803,16],[744,44,803,42,"abilityInfo"],[744,55,803,53],[744,57,803,55,"name"],[744,61,803,59],[744,65,803,63],[744,81,803,79],[744,101,803,99,"projectileId"],[744,113,803,111],[744,128,803,126,"targetEnemy"],[744,139,803,137],[744,140,803,138,"name"],[744,144,803,142],[744,152,803,150,"damage"],[744,158,803,156],[744,167,803,165],[744,168,803,166],[745,6,804,4,"console"],[745,13,804,11],[745,14,804,12,"log"],[745,17,804,15],[745,18,804,16],[745,48,804,46,"isAOE"],[745,53,804,51],[745,68,804,66,"aoeRadius"],[745,77,804,75],[745,89,804,87,"damage"],[745,95,804,93],[745,97,804,95],[745,98,804,96],[746,6,806,4,"console"],[746,13,806,11],[746,14,806,12,"log"],[746,17,806,15],[746,18,806,16],[746,53,806,51,"targetEnemy"],[746,64,806,62],[746,65,806,63,"id"],[746,67,806,65],[746,75,806,73,"damage"],[746,81,806,79],[746,90,806,88],[746,91,806,89],[747,6,807,4,"console"],[747,13,807,11],[747,14,807,12,"log"],[747,17,807,15],[747,18,807,16],[747,53,807,51,"ninjaX"],[747,59,807,57],[747,64,807,62,"ninjaY"],[747,70,807,68],[747,87,807,85,"projectile"],[747,97,807,95],[747,98,807,96,"targetX"],[747,105,807,103],[747,110,807,108,"projectile"],[747,120,807,118],[747,121,807,119,"targetY"],[747,128,807,126],[747,131,807,129],[747,132,807,130],[748,6,809,4,"setProjectiles"],[748,20,809,18],[748,21,809,19,"prev"],[748,25,809,23],[748,29,809,27],[748,30,809,28],[748,33,809,31,"prev"],[748,37,809,35],[748,39,809,37,"projectile"],[748,49,809,47],[748,50,809,48],[748,51,809,49],[750,6,811,4],[751,6,812,4,"setTimeout"],[751,16,812,14],[751,17,812,15],[751,23,812,21],[752,8,813,6,"handleProjectileHit"],[752,27,813,25],[752,28,813,26,"projectile"],[752,38,813,36],[752,39,813,37],[753,6,814,4],[753,7,814,5],[753,9,814,7],[753,12,814,10],[753,13,814,11],[754,6,816,4],[754,13,816,11,"projectile"],[754,23,816,21],[755,4,817,2],[755,5,817,3],[757,4,819,2],[758,4,820,2],[758,8,820,8,"spawnTestEnemy"],[758,22,820,22],[758,25,820,26,"state"],[758,30,820,44],[758,34,820,49],[759,6,821,4,"console"],[759,13,821,11],[759,14,821,12,"log"],[759,17,821,15],[759,18,821,16],[759,83,821,81],[759,84,821,82],[761,6,823,4],[762,6,824,4],[762,10,824,10,"zoneEnemy"],[762,19,824,19],[762,22,824,22,"spawnZoneEnemy"],[762,36,824,36],[762,37,824,37],[762,38,824,38],[763,6,825,4],[763,10,825,8],[763,11,825,9,"zoneEnemy"],[763,20,825,18],[763,22,825,20],[764,8,826,6,"console"],[764,15,826,13],[764,16,826,14,"log"],[764,19,826,17],[764,20,826,18],[764,76,826,74],[764,77,826,75],[765,8,827,6],[766,8,828,6,"spawnBasicTestEnemy"],[766,27,828,25],[766,28,828,26,"state"],[766,33,828,31],[766,34,828,32],[767,8,829,6],[768,6,830,4],[769,6,832,4,"console"],[769,13,832,11],[769,14,832,12,"log"],[769,17,832,15],[769,18,832,16],[769,44,832,42,"zoneEnemy"],[769,53,832,51],[769,54,832,52,"name"],[769,58,832,56],[769,63,832,61,"zoneEnemy"],[769,72,832,70],[769,73,832,71,"typeId"],[769,79,832,77],[769,94,832,92,"currentZone"],[769,105,832,103],[769,107,832,105,"id"],[769,109,832,107],[769,119,832,117,"currentZoneLevel"],[769,135,832,133],[769,137,832,135,"level"],[769,142,832,140],[769,144,832,142],[769,145,832,143],[771,6,834,4],[772,6,835,4],[772,10,835,10,"combatEnemy"],[772,21,835,34],[772,24,835,37],[773,8,836,6,"id"],[773,10,836,8],[773,12,836,10,"zoneEnemy"],[773,21,836,19],[773,22,836,20,"id"],[773,24,836,22],[774,8,837,6,"name"],[774,12,837,10],[774,14,837,12,"zoneEnemy"],[774,23,837,21],[774,24,837,22,"name"],[774,28,837,26],[775,8,838,6,"health"],[775,14,838,12],[775,16,838,14,"zoneEnemy"],[775,25,838,23],[775,26,838,24,"hp"],[775,28,838,26],[776,8,839,6,"maxHealth"],[776,17,839,15],[776,19,839,17,"zoneEnemy"],[776,28,839,26],[776,29,839,27,"maxHP"],[776,34,839,32],[777,8,840,6,"stats"],[777,13,840,11],[777,15,840,13],[778,10,841,8,"attack"],[778,16,841,14],[778,18,841,16,"zoneEnemy"],[778,27,841,25],[778,28,841,26,"attack"],[778,34,841,32],[779,10,842,8,"defense"],[779,17,842,15],[779,19,842,17],[779,21,842,19],[780,10,842,21],[781,10,843,8,"health"],[781,16,843,14],[781,18,843,16,"zoneEnemy"],[781,27,843,25],[781,28,843,26,"hp"],[781,30,843,28],[782,10,844,8,"maxHealth"],[782,19,844,17],[782,21,844,19,"zoneEnemy"],[782,30,844,28],[782,31,844,29,"maxHP"],[782,36,844,34],[783,10,845,8,"critChance"],[783,20,845,18],[783,22,845,20],[783,23,845,21],[784,10,846,8,"critDamage"],[784,20,846,18],[784,22,846,20],[784,25,846,23],[785,10,847,8,"cooldownReduction"],[785,27,847,25],[785,29,847,27],[786,8,848,6],[786,9,848,7],[787,8,849,6,"position"],[787,16,849,14],[787,18,849,16,"zoneEnemy"],[787,27,849,25],[787,28,849,26,"position"],[787,36,849,34],[788,8,850,6,"lastDamaged"],[788,19,850,17],[788,21,850,19],[788,22,850,20],[789,8,851,6],[790,8,852,6,"zoneTypeId"],[790,18,852,16],[790,20,852,18,"zoneEnemy"],[790,29,852,27],[790,30,852,28,"typeId"],[790,36,852,34],[791,8,853,6,"zoneXP"],[791,14,853,12],[791,16,853,14,"zoneEnemy"],[791,25,853,23],[791,26,853,24,"xp"],[792,6,854,4],[792,7,854,5],[793,6,856,4,"console"],[793,13,856,11],[793,14,856,12,"log"],[793,17,856,15],[793,18,856,16],[793,42,856,40,"combatEnemy"],[793,53,856,51],[793,54,856,52,"name"],[793,58,856,56],[793,67,856,65,"combatEnemy"],[793,78,856,76],[793,79,856,77,"health"],[793,85,856,83],[793,100,856,98,"currentZone"],[793,111,856,109],[793,113,856,111,"id"],[793,115,856,113],[793,125,856,123,"currentZoneLevel"],[793,141,856,139],[793,143,856,141,"level"],[793,148,856,146],[793,150,856,148],[793,151,856,149],[794,6,857,4,"state"],[794,11,857,9],[794,12,857,10,"enemies"],[794,19,857,17],[794,20,857,18,"push"],[794,24,857,22],[794,25,857,23,"combatEnemy"],[794,36,857,34],[794,37,857,35],[795,4,858,2],[795,5,858,3],[797,4,860,2],[798,4,861,2],[798,8,861,8,"spawnBasicTestEnemy"],[798,27,861,27],[798,30,861,31,"state"],[798,35,861,49],[798,39,861,54],[799,6,862,4],[799,10,862,10,"SCREEN_WIDTH"],[799,22,862,22],[799,25,862,25],[799,28,862,28],[800,6,863,4],[800,10,863,10,"GAME_AREA_HEIGHT"],[800,26,863,26],[800,29,863,29],[800,32,863,32],[800,35,863,35],[800,38,863,38],[801,6,864,4],[801,10,864,10,"ENEMY_SIZE"],[801,20,864,20],[801,23,864,23],[801,25,864,25],[802,6,866,4],[802,10,866,10,"x"],[802,11,866,11],[802,14,866,14,"Math"],[802,18,866,18],[802,19,866,19,"random"],[802,25,866,25],[802,26,866,26],[802,27,866,27],[802,31,866,31,"SCREEN_WIDTH"],[802,43,866,43],[802,46,866,46,"ENEMY_SIZE"],[802,56,866,56],[802,59,866,59],[802,60,866,60],[802,61,866,61],[802,64,866,64,"ENEMY_SIZE"],[802,74,866,74],[803,6,867,4],[803,10,867,10,"y"],[803,11,867,11],[803,14,867,14,"Math"],[803,18,867,18],[803,19,867,19,"random"],[803,25,867,25],[803,26,867,26],[803,27,867,27],[803,31,867,31,"GAME_AREA_HEIGHT"],[803,47,867,47],[803,50,867,50,"ENEMY_SIZE"],[803,60,867,60],[803,63,867,63],[803,64,867,64],[803,65,867,65],[803,68,867,68,"ENEMY_SIZE"],[803,78,867,78],[804,6,869,4],[804,10,869,10,"enemy"],[804,15,869,28],[804,18,869,31],[805,8,870,6,"id"],[805,10,870,8],[805,12,870,10],[805,30,870,28,"Date"],[805,34,870,32],[805,35,870,33,"now"],[805,38,870,36],[805,39,870,37],[805,40,870,38],[805,44,870,42,"Math"],[805,48,870,46],[805,49,870,47,"random"],[805,55,870,53],[805,56,870,54],[805,57,870,55],[805,59,870,57],[806,8,871,6,"name"],[806,12,871,10],[806,14,871,12],[806,26,871,24,"Math"],[806,30,871,28],[806,31,871,29,"floor"],[806,36,871,34],[806,37,871,35,"Math"],[806,41,871,39],[806,42,871,40,"random"],[806,48,871,46],[806,49,871,47],[806,50,871,48],[806,53,871,51],[806,56,871,54],[806,57,871,55],[806,59,871,57],[807,8,872,6,"health"],[807,14,872,12],[807,16,872,14],[807,18,872,16],[808,8,873,6,"maxHealth"],[808,17,873,15],[808,19,873,17],[808,21,873,19],[809,8,874,6,"stats"],[809,13,874,11],[809,15,874,13],[810,10,875,8,"attack"],[810,16,875,14],[810,18,875,16],[810,20,875,18],[811,10,876,8,"defense"],[811,17,876,15],[811,19,876,17],[811,21,876,19],[812,10,877,8,"health"],[812,16,877,14],[812,18,877,16],[812,20,877,18],[813,10,878,8,"maxHealth"],[813,19,878,17],[813,21,878,19],[813,23,878,21],[814,10,879,8,"critChance"],[814,20,879,18],[814,22,879,20],[814,23,879,21],[815,10,880,8,"critDamage"],[815,20,880,18],[815,22,880,20],[815,25,880,23],[816,10,881,8,"cooldownReduction"],[816,27,881,25],[816,29,881,27],[817,8,882,6],[817,9,882,7],[818,8,883,6,"position"],[818,16,883,14],[818,18,883,16],[819,10,883,18,"x"],[819,11,883,19],[820,10,883,21,"y"],[821,8,883,23],[821,9,883,24],[822,8,884,6,"lastDamaged"],[822,19,884,17],[822,21,884,19],[823,6,885,4],[823,7,885,5],[824,6,887,4,"console"],[824,13,887,11],[824,14,887,12,"log"],[824,17,887,15],[824,18,887,16],[824,42,887,40,"enemy"],[824,47,887,45],[824,48,887,46,"name"],[824,52,887,50],[824,60,887,58,"Math"],[824,64,887,62],[824,65,887,63,"round"],[824,70,887,68],[824,71,887,69,"x"],[824,72,887,70],[824,73,887,71],[824,78,887,76,"Math"],[824,82,887,80],[824,83,887,81,"round"],[824,88,887,86],[824,89,887,87,"y"],[824,90,887,88],[824,91,887,89],[824,94,887,92],[824,95,887,93],[825,6,888,4,"state"],[825,11,888,9],[825,12,888,10,"enemies"],[825,19,888,17],[825,20,888,18,"push"],[825,24,888,22],[825,25,888,23,"enemy"],[825,30,888,28],[825,31,888,29],[826,4,889,2],[826,5,889,3],[828,4,891,2],[829,4,892,2],[830,4,893,2],[830,8,893,8,"startCombat"],[830,19,893,19],[830,22,893,22,"startCombat"],[830,23,893,22],[830,28,893,28],[831,6,894,4,"console"],[831,13,894,11],[831,14,894,12,"log"],[831,17,894,15],[831,18,894,16],[831,63,894,61],[831,64,894,62],[832,6,895,4,"setCombatState"],[832,20,895,18],[832,21,895,19,"prev"],[832,25,895,23],[832,30,895,28],[833,8,895,30],[833,11,895,33,"prev"],[833,15,895,37],[834,8,895,39,"isInCombat"],[834,18,895,49],[834,20,895,51],[835,6,895,56],[835,7,895,57],[835,8,895,58],[835,9,895,59],[837,6,897,4],[838,6,898,4,"combatEngine"],[838,25,898,16],[838,26,898,16,"combatEngine"],[838,38,898,16],[838,39,898,17,"addTickCallback"],[838,54,898,32],[838,55,898,33,"handleCombatTick"],[838,71,898,49],[838,72,898,50],[839,6,899,4,"console"],[839,13,899,11],[839,14,899,12,"log"],[839,17,899,15],[839,18,899,16],[839,62,899,60],[839,63,899,61],[841,6,901,4],[842,6,902,4,"combatEngine"],[842,25,902,16],[842,26,902,16,"combatEngine"],[842,38,902,16],[842,39,902,17,"start"],[842,44,902,22],[842,45,902,23],[842,46,902,24],[843,4,903,2],[843,5,903,3],[845,4,905,2],[846,4,906,2],[846,8,906,8,"stopCombat"],[846,18,906,18],[846,21,906,21,"stopCombat"],[846,22,906,21],[846,27,906,27],[847,6,907,4,"setCombatState"],[847,20,907,18],[847,21,907,19,"prev"],[847,25,907,23],[847,30,907,28],[848,8,907,30],[848,11,907,33,"prev"],[848,15,907,37],[849,8,907,39,"isInCombat"],[849,18,907,49],[849,20,907,51],[850,6,907,57],[850,7,907,58],[850,8,907,59],[850,9,907,60],[851,6,908,4,"combatEngine"],[851,25,908,16],[851,26,908,16,"combatEngine"],[851,38,908,16],[851,39,908,17,"removeTickCallback"],[851,57,908,35],[851,58,908,36,"handleCombatTick"],[851,74,908,52],[851,75,908,53],[852,4,909,2],[852,5,909,3],[854,4,911,2],[855,4,912,2],[855,8,912,8,"equipAbility"],[855,20,912,20],[855,23,912,23,"equipAbility"],[855,24,912,24,"abilityId"],[855,33,912,41],[855,35,912,43,"slotIndex"],[855,44,912,60],[855,49,912,74],[856,6,913,4],[856,13,913,11,"combatState"],[856,24,913,22],[856,25,913,23,"abilityManager"],[856,39,913,37],[856,40,913,38,"equipAbility"],[856,52,913,50],[856,53,913,51,"abilityId"],[856,62,913,60],[856,64,913,62,"slotIndex"],[856,73,913,71],[856,74,913,72],[857,4,914,2],[857,5,914,3],[858,4,916,2],[858,8,916,8,"getDeck"],[858,15,916,15],[858,18,916,18,"getDeck"],[858,19,916,18],[858,24,916,24],[859,6,917,4],[859,13,917,11,"combatState"],[859,24,917,22],[859,25,917,23,"abilityManager"],[859,39,917,37],[859,40,917,38,"getDeck"],[859,47,917,45],[859,48,917,46],[859,49,917,47],[860,4,918,2],[860,5,918,3],[861,4,920,2],[861,8,920,8,"getAvailableAbilities"],[861,29,920,29],[861,32,920,32,"getAvailableAbilities"],[861,33,920,32],[861,38,920,38],[862,6,921,4],[862,13,921,11,"combatState"],[862,24,921,22],[862,25,921,23,"abilityManager"],[862,39,921,37],[862,40,921,38,"getAvailableAbilities"],[862,61,921,59],[862,62,921,60],[862,63,921,61],[863,4,922,2],[863,5,922,3],[864,4,924,2],[864,8,924,8,"upgradeAbility"],[864,22,924,22],[864,25,924,26,"abilityId"],[864,34,924,43],[864,38,924,57],[865,6,925,4],[865,13,925,11,"combatState"],[865,24,925,22],[865,25,925,23,"abilityManager"],[865,39,925,37],[865,40,925,38,"upgradeAbility"],[865,54,925,52],[865,55,925,53,"abilityId"],[865,64,925,62],[865,65,925,63],[866,4,926,2],[866,5,926,3],[868,4,928,2],[869,4,929,2],[869,8,929,8,"clearAllEnemies"],[869,23,929,23],[869,26,929,26,"clearAllEnemies"],[869,27,929,26],[869,32,929,32],[870,6,930,4,"console"],[870,13,930,11],[870,14,930,12,"log"],[870,17,930,15],[870,18,930,16],[870,67,930,65],[870,68,930,66],[871,6,931,4,"setCombatState"],[871,20,931,18],[871,21,931,19,"prev"],[871,25,931,23],[871,30,931,28],[872,8,932,6],[872,11,932,9,"prev"],[872,15,932,13],[873,8,933,6,"enemies"],[873,15,933,13],[873,17,933,15],[874,6,934,4],[874,7,934,5],[874,8,934,6],[874,9,934,7],[875,4,935,2],[875,5,935,3],[877,4,937,2],[878,4,938,2],[880,4,940,2],[881,4,941,2],[881,8,941,8,"spawnEnemy"],[881,18,941,18],[881,21,941,22,"position"],[881,29,941,57],[881,33,941,75],[882,6,942,4],[882,10,942,10,"SCREEN_WIDTH"],[882,22,942,22],[882,25,942,25],[882,28,942,28],[883,6,943,4],[883,10,943,10,"GAME_AREA_HEIGHT"],[883,26,943,26],[883,29,943,29],[883,32,943,32],[883,35,943,35],[883,38,943,38],[883,39,943,39],[883,40,943,40],[884,6,944,4],[884,10,944,10,"ENEMY_SIZE"],[884,20,944,20],[884,23,944,23],[884,25,944,25],[886,6,946,4],[887,6,947,4],[887,10,947,10,"x"],[887,11,947,11],[887,14,947,14,"position"],[887,22,947,22],[887,24,947,24,"x"],[887,25,947,25],[887,29,947,29,"Math"],[887,33,947,33],[887,34,947,34,"random"],[887,40,947,40],[887,41,947,41],[887,42,947,42],[887,46,947,46,"SCREEN_WIDTH"],[887,58,947,58],[887,61,947,61,"ENEMY_SIZE"],[887,71,947,71],[887,74,947,74],[887,75,947,75],[887,76,947,76],[887,79,947,79,"ENEMY_SIZE"],[887,89,947,89],[888,6,948,4],[888,10,948,10,"y"],[888,11,948,11],[888,14,948,14,"position"],[888,22,948,22],[888,24,948,24,"y"],[888,25,948,25],[888,29,948,29,"Math"],[888,33,948,33],[888,34,948,34,"random"],[888,40,948,40],[888,41,948,41],[888,42,948,42],[888,46,948,46,"GAME_AREA_HEIGHT"],[888,62,948,62],[888,65,948,65,"ENEMY_SIZE"],[888,75,948,75],[888,78,948,78],[888,79,948,79],[888,80,948,80],[888,83,948,83,"ENEMY_SIZE"],[888,93,948,93],[889,6,950,4],[889,10,950,10,"enemy"],[889,15,950,28],[889,18,950,31],[890,8,951,6,"id"],[890,10,951,8],[890,12,951,10],[890,21,951,19],[890,23,951,21,"enemyCounter"],[890,35,951,33],[890,37,951,35],[891,8,952,6,"name"],[891,12,952,10],[891,14,952,12],[891,24,952,22],[892,8,953,6,"health"],[892,14,953,12],[892,16,953,14],[892,19,953,17],[893,8,954,6,"maxHealth"],[893,17,954,15],[893,19,954,17],[893,22,954,20],[894,8,955,6,"stats"],[894,13,955,11],[894,15,955,13],[895,10,956,8,"attack"],[895,16,956,14],[895,18,956,16],[895,20,956,18],[896,10,957,8,"defense"],[896,17,957,15],[896,19,957,17],[896,21,957,19],[897,10,958,8,"health"],[897,16,958,14],[897,18,958,16],[897,21,958,19],[898,10,959,8,"maxHealth"],[898,19,959,17],[898,21,959,19],[898,24,959,22],[899,10,960,8,"critChance"],[899,20,960,18],[899,22,960,20],[899,23,960,21],[900,10,961,8,"critDamage"],[900,20,961,18],[900,22,961,20],[900,25,961,23],[901,10,962,8,"cooldownReduction"],[901,27,962,25],[901,29,962,27],[902,8,963,6],[902,9,963,7],[903,8,964,6,"position"],[903,16,964,14],[903,18,964,16],[904,10,964,18,"x"],[904,11,964,19],[905,10,964,21,"y"],[906,8,964,23],[906,9,964,24],[907,8,965,6,"lastDamaged"],[907,19,965,17],[907,21,965,19],[908,6,966,4],[908,7,966,5],[909,6,968,4,"setCombatState"],[909,20,968,18],[909,21,968,19,"prev"],[909,25,968,23],[909,30,968,28],[910,8,969,6],[910,11,969,9,"prev"],[910,15,969,13],[911,8,970,6,"enemies"],[911,15,970,13],[911,17,970,15],[911,18,970,16],[911,21,970,19,"prev"],[911,25,970,23],[911,26,970,24,"enemies"],[911,33,970,31],[911,35,970,33,"enemy"],[911,40,970,38],[912,6,971,4],[912,7,971,5],[912,8,971,6],[912,9,971,7],[913,6,973,4],[913,13,973,11,"enemy"],[913,18,973,16],[914,4,974,2],[914,5,974,3],[916,4,976,2],[917,4,977,2],[917,8,977,8,"spawnBoss"],[917,17,977,17],[917,20,977,21,"bossEnemy"],[917,29,977,43],[917,33,977,48],[918,6,978,4,"console"],[918,13,978,11],[918,14,978,12,"log"],[918,17,978,15],[918,18,978,16],[918,39,978,37,"bossEnemy"],[918,48,978,46],[918,49,978,47,"name"],[918,53,978,51],[918,90,978,88],[918,91,978,89],[919,6,979,4,"setCombatState"],[919,20,979,18],[919,21,979,19,"prev"],[919,25,979,23],[919,30,979,28],[920,8,980,6],[920,11,980,9,"prev"],[920,15,980,13],[921,8,981,6,"enemies"],[921,15,981,13],[921,17,981,15],[921,18,981,16,"bossEnemy"],[921,27,981,25],[921,28,981,26],[921,29,981,27],[922,6,982,4],[922,7,982,5],[922,8,982,6],[922,9,982,7],[923,4,983,2],[923,5,983,3],[925,4,985,2],[926,4,986,2],[926,8,986,8,"clearSpecificEnemy"],[926,26,986,26],[926,29,986,30,"enemyId"],[926,36,986,45],[926,40,986,50],[927,6,987,4,"setCombatState"],[927,20,987,18],[927,21,987,19,"prev"],[927,25,987,23],[927,30,987,28],[928,8,988,6],[928,11,988,9,"prev"],[928,15,988,13],[929,8,989,6,"enemies"],[929,15,989,13],[929,17,989,15,"prev"],[929,21,989,19],[929,22,989,20,"enemies"],[929,29,989,27],[929,30,989,28,"filter"],[929,36,989,34],[929,37,989,35,"enemy"],[929,42,989,40],[929,46,989,44,"enemy"],[929,51,989,49],[929,52,989,50,"id"],[929,54,989,52],[929,59,989,57,"enemyId"],[929,66,989,64],[930,6,990,4],[930,7,990,5],[930,8,990,6],[930,9,990,7],[931,4,991,2],[931,5,991,3],[933,4,993,2],[934,4,994,2],[934,8,994,8,"useAbilityManually"],[934,26,994,26],[934,29,994,26,"_s3"],[934,32,994,26],[934,33,994,29],[934,37,994,29,"useCallback"],[934,43,994,40],[934,44,994,40,"useCallback"],[934,55,994,40],[934,57,994,40,"_s3"],[934,60,994,40],[934,61,994,42,"slotIndex"],[934,70,994,59],[934,74,994,73],[935,6,994,73,"_s3"],[935,9,994,73],[936,6,995,4,"console"],[936,13,995,11],[936,14,995,12,"log"],[936,17,995,15],[936,18,995,16],[936,64,995,62,"slotIndex"],[936,73,995,71],[936,82,995,80],[936,83,995,81],[937,6,996,4,"console"],[937,13,996,11],[937,14,996,12,"log"],[937,17,996,15],[937,18,996,16],[937,65,996,63,"slotIndex"],[937,74,996,72],[937,76,996,74],[937,77,996,75],[938,6,997,4,"console"],[938,13,997,11],[938,14,997,12,"log"],[938,17,997,15],[938,18,997,16],[938,53,997,51,"slotIndex"],[938,62,997,60],[938,64,997,62],[938,65,997,63],[940,6,999,4],[941,6,1000,4],[941,10,1000,8],[941,11,1000,9,"game"],[941,15,1000,13],[941,16,1000,14,"gameState"],[941,25,1000,23],[941,26,1000,24,"isAlive"],[941,33,1000,31],[941,35,1000,33],[942,8,1001,6,"console"],[942,15,1001,13],[942,16,1001,14,"log"],[942,19,1001,17],[942,20,1001,18],[942,70,1001,68],[942,71,1001,69],[943,8,1002,6],[943,15,1002,13],[943,20,1002,18],[944,6,1003,4],[946,6,1005,4],[947,6,1006,4],[947,10,1006,10,"isReady"],[947,17,1006,17],[947,20,1006,20,"combatState"],[947,31,1006,31],[947,32,1006,32,"abilityManager"],[947,46,1006,46],[947,47,1006,47,"isAbilityReady"],[947,61,1006,61],[947,62,1006,62,"slotIndex"],[947,71,1006,71],[947,72,1006,72],[948,6,1007,4],[948,10,1007,8],[948,11,1007,9,"isReady"],[948,18,1007,16],[948,20,1007,18],[949,8,1008,6,"console"],[949,15,1008,13],[949,16,1008,14,"log"],[949,19,1008,17],[949,20,1008,18],[949,41,1008,39,"slotIndex"],[949,50,1008,48],[949,85,1008,83],[949,86,1008,84],[950,8,1009,6],[950,15,1009,13],[950,20,1009,18],[951,6,1010,4],[953,6,1012,4],[954,6,1013,4],[954,10,1013,8,"combatState"],[954,21,1013,19],[954,22,1013,20,"enemies"],[954,29,1013,27],[954,30,1013,28,"length"],[954,36,1013,34],[954,41,1013,39],[954,42,1013,40],[954,44,1013,42],[955,8,1014,6,"console"],[955,15,1014,13],[955,16,1014,14,"log"],[955,19,1014,17],[955,20,1014,18],[955,69,1014,67],[955,70,1014,68],[956,8,1015,6],[956,15,1015,13],[956,20,1015,18],[957,6,1016,4],[959,6,1018,4],[960,6,1019,4],[960,10,1019,10,"currentTick"],[960,21,1019,21],[960,24,1019,24,"combatEngine"],[960,43,1019,36],[960,44,1019,36,"combatEngine"],[960,56,1019,36],[960,57,1019,37,"getCurrentTick"],[960,71,1019,51],[960,72,1019,52],[960,73,1019,53],[961,6,1020,4],[961,10,1020,10,"success"],[961,17,1020,17],[961,20,1020,20,"combatState"],[961,31,1020,31],[961,32,1020,32,"abilityManager"],[961,46,1020,46],[961,47,1020,47,"useAbility"],[961,57,1020,57],[961,58,1020,58,"slotIndex"],[961,67,1020,67],[961,69,1020,69,"currentTick"],[961,80,1020,80],[961,81,1020,81],[962,6,1022,4],[962,10,1022,8,"success"],[962,17,1022,15],[962,19,1022,17],[963,8,1023,6],[964,8,1024,6,"setCombatState"],[964,22,1024,20],[964,23,1024,21,"prev"],[964,27,1024,25],[964,31,1024,29],[965,10,1025,8],[965,14,1025,14,"newState"],[965,22,1025,22],[965,25,1025,25],[966,12,1025,27],[966,15,1025,30,"prev"],[967,10,1025,35],[967,11,1025,36],[968,10,1026,8,"castAbility"],[968,21,1026,19],[968,22,1026,20,"newState"],[968,30,1026,28],[968,32,1026,30,"slotIndex"],[968,41,1026,39],[968,42,1026,40],[969,10,1027,8],[969,17,1027,15,"newState"],[969,25,1027,23],[970,8,1028,6],[970,9,1028,7],[970,10,1028,8],[971,8,1030,6,"console"],[971,15,1030,13],[971,16,1030,14,"log"],[971,19,1030,17],[971,20,1030,18],[971,65,1030,63,"slotIndex"],[971,74,1030,72],[971,76,1030,74],[971,77,1030,75],[972,8,1031,6],[972,15,1031,13],[972,19,1031,17],[973,6,1032,4],[973,7,1032,5],[973,13,1032,11],[974,8,1033,6,"console"],[974,15,1033,13],[974,16,1033,14,"log"],[974,19,1033,17],[974,20,1033,18],[974,61,1033,59,"slotIndex"],[974,70,1033,68],[974,72,1033,70],[974,73,1033,71],[975,8,1034,6],[975,15,1034,13],[975,20,1034,18],[976,6,1035,4],[977,4,1036,2],[977,5,1036,3],[977,46,1036,5],[977,47,1036,6,"combatState"],[977,58,1036,17],[977,59,1036,18,"abilityManager"],[977,73,1036,32],[977,75,1036,34,"combatState"],[977,86,1036,45],[977,87,1036,46,"enemies"],[977,94,1036,53],[977,95,1036,54],[977,96,1036,55],[978,4,1037,2],[978,8,1037,2,"useEffect"],[978,14,1037,11],[978,15,1037,11,"useEffect"],[978,24,1037,11],[978,26,1037,12],[978,32,1037,18],[979,6,1038,4,"combatEngine"],[979,25,1038,16],[979,26,1038,16,"combatEngine"],[979,38,1038,16],[979,39,1038,17,"start"],[979,44,1038,22],[979,45,1038,23],[979,46,1038,24],[981,6,1040,4],[982,6,1041,4],[983,6,1042,4,"console"],[983,13,1042,11],[983,14,1042,12,"log"],[983,17,1042,15],[983,18,1042,16],[983,97,1042,95],[983,98,1042,96],[984,6,1044,4],[984,13,1044,11],[984,19,1044,17],[985,8,1045,6,"combatEngine"],[985,27,1045,18],[985,28,1045,18,"combatEngine"],[985,40,1045,18],[985,41,1045,19,"stop"],[985,45,1045,23],[985,46,1045,24],[985,47,1045,25],[986,6,1046,4],[986,7,1046,5],[987,4,1047,2],[987,5,1047,3],[987,7,1047,5],[987,9,1047,7],[987,10,1047,8],[989,4,1049,2],[990,4,1050,2],[990,8,1050,2,"useEffect"],[990,14,1050,11],[990,15,1050,11,"useEffect"],[990,24,1050,11],[990,26,1050,12],[990,32,1050,18],[991,6,1051,4],[991,10,1051,10,"processProjectileImpacts"],[991,34,1051,34],[991,37,1051,37,"processProjectileImpacts"],[991,38,1051,37],[991,43,1051,43],[992,8,1052,6,"setProjectiles"],[992,22,1052,20],[992,23,1052,21,"currentProjectiles"],[992,41,1052,39],[992,45,1052,43],[993,10,1053,8],[993,17,1053,15,"currentProjectiles"],[993,35,1053,33],[993,36,1053,34,"map"],[993,39,1053,37],[993,40,1053,38,"projectile"],[993,50,1053,48],[993,54,1053,52],[994,12,1054,10],[994,16,1054,14],[994,17,1054,15,"projectile"],[994,27,1054,25],[994,29,1054,27],[994,36,1054,34],[994,40,1054,38],[996,12,1056,10],[997,12,1057,10],[997,16,1057,16,"currentTime"],[997,27,1057,27],[997,30,1057,30,"Date"],[997,34,1057,34],[997,35,1057,35,"now"],[997,38,1057,38],[997,39,1057,39],[997,40,1057,40],[998,12,1058,10],[998,16,1058,16,"startTime"],[998,25,1058,25],[998,28,1058,28,"projectile"],[998,38,1058,38],[998,39,1058,39,"startTime"],[998,48,1058,48],[998,52,1058,52,"currentTime"],[998,63,1058,63],[999,12,1059,10],[999,16,1059,16,"elapsedTime"],[999,27,1059,27],[999,30,1059,30,"currentTime"],[999,41,1059,41],[999,44,1059,44,"startTime"],[999,53,1059,53],[1000,12,1060,10],[1000,16,1060,16,"progress"],[1000,24,1060,24],[1000,27,1060,27,"Math"],[1000,31,1060,31],[1000,32,1060,32,"min"],[1000,35,1060,35],[1000,36,1060,36,"elapsedTime"],[1000,47,1060,47],[1000,51,1060,51,"projectile"],[1000,61,1060,61],[1000,62,1060,62,"duration"],[1000,70,1060,70],[1000,74,1060,74],[1000,77,1060,77],[1000,78,1060,78],[1000,80,1060,80],[1000,81,1060,81],[1000,82,1060,82],[1002,12,1062,10],[1003,12,1063,10],[1003,16,1063,14,"progress"],[1003,24,1063,22],[1003,28,1063,26],[1003,29,1063,27],[1003,33,1063,31],[1003,34,1063,32,"projectile"],[1003,44,1063,42],[1003,45,1063,43,"hasHit"],[1003,51,1063,49],[1003,53,1063,51],[1004,14,1064,12,"projectile"],[1004,24,1064,22],[1004,25,1064,23,"hasHit"],[1004,31,1064,29],[1004,34,1064,32],[1004,38,1064,36],[1005,14,1066,12,"console"],[1005,21,1066,19],[1005,22,1066,20,"log"],[1005,25,1066,23],[1005,26,1066,24],[1005,51,1066,49,"projectile"],[1005,61,1066,59],[1005,62,1066,60,"abilityName"],[1005,73,1066,71],[1005,97,1066,95],[1005,98,1066,96],[1006,14,1067,12,"setCombatState"],[1006,28,1067,26],[1006,29,1067,27,"prev"],[1006,33,1067,31],[1006,37,1067,35],[1007,16,1068,14],[1007,20,1068,20,"newState"],[1007,28,1068,28],[1007,31,1068,31],[1008,18,1068,33],[1008,21,1068,36,"prev"],[1009,16,1068,41],[1009,17,1068,42],[1010,16,1070,14],[1010,20,1070,18,"projectile"],[1010,30,1070,28],[1010,31,1070,29,"isAOE"],[1010,36,1070,34],[1010,40,1070,38,"projectile"],[1010,50,1070,48],[1010,51,1070,49,"aoeRadius"],[1010,60,1070,58],[1010,64,1070,62,"projectile"],[1010,74,1070,72],[1010,75,1070,73,"aoeRadius"],[1010,84,1070,82],[1010,87,1070,85],[1010,88,1070,86],[1010,90,1070,88],[1011,18,1071,16],[1012,18,1072,16,"console"],[1012,25,1072,23],[1012,26,1072,24,"log"],[1012,29,1072,27],[1012,30,1072,28],[1012,59,1072,57,"projectile"],[1012,69,1072,67],[1012,70,1072,68,"abilityName"],[1012,81,1072,79],[1012,97,1072,95,"projectile"],[1012,107,1072,105],[1012,108,1072,106,"aoeRadius"],[1012,117,1072,115],[1012,119,1072,117],[1012,120,1072,118],[1013,18,1074,16],[1013,22,1074,22,"impactX"],[1013,29,1074,29],[1013,32,1074,32,"projectile"],[1013,42,1074,42],[1013,43,1074,43,"targetX"],[1013,50,1074,50],[1014,18,1075,16],[1014,22,1075,22,"impactY"],[1014,29,1075,29],[1014,32,1075,32,"projectile"],[1014,42,1075,42],[1014,43,1075,43,"targetY"],[1014,50,1075,50],[1015,18,1076,16],[1015,22,1076,22,"enemiesKilled"],[1015,35,1076,50],[1015,38,1076,53],[1015,40,1076,55],[1017,18,1078,16],[1018,18,1079,16,"newState"],[1018,26,1079,24],[1018,27,1079,25,"enemies"],[1018,34,1079,32],[1018,37,1079,35,"newState"],[1018,45,1079,43],[1018,46,1079,44,"enemies"],[1018,53,1079,51],[1018,54,1079,52,"map"],[1018,57,1079,55],[1018,58,1079,56,"enemy"],[1018,63,1079,61],[1018,67,1079,65],[1019,20,1080,18],[1019,24,1080,22,"enemy"],[1019,29,1080,27],[1019,30,1080,28,"health"],[1019,36,1080,34],[1019,40,1080,38],[1019,41,1080,39],[1019,45,1080,43,"enemy"],[1019,50,1080,48],[1019,51,1080,49,"markedForDeath"],[1019,65,1080,63],[1019,67,1080,65],[1019,74,1080,72,"enemy"],[1019,79,1080,77],[1020,20,1082,18],[1020,24,1082,24,"enemyX"],[1020,30,1082,30],[1020,33,1082,33,"enemy"],[1020,38,1082,38],[1020,39,1082,39,"position"],[1020,47,1082,47],[1020,48,1082,48,"x"],[1020,49,1082,49],[1020,52,1082,52],[1020,56,1082,56],[1020,57,1082,57],[1020,58,1082,58],[1021,20,1083,18],[1021,24,1083,24,"enemyY"],[1021,30,1083,30],[1021,33,1083,33,"enemy"],[1021,38,1083,38],[1021,39,1083,39,"position"],[1021,47,1083,47],[1021,48,1083,48,"y"],[1021,49,1083,49],[1021,52,1083,52],[1021,56,1083,56],[1022,20,1084,18],[1022,24,1084,24,"distance"],[1022,32,1084,32],[1022,35,1084,35,"Math"],[1022,39,1084,39],[1022,40,1084,40,"sqrt"],[1022,44,1084,44],[1022,45,1084,45,"Math"],[1022,49,1084,49],[1022,50,1084,50,"pow"],[1022,53,1084,53],[1022,54,1084,54,"enemyX"],[1022,60,1084,60],[1022,63,1084,63,"impactX"],[1022,70,1084,70],[1022,72,1084,72],[1022,73,1084,73],[1022,74,1084,74],[1022,77,1084,77,"Math"],[1022,81,1084,81],[1022,82,1084,82,"pow"],[1022,85,1084,85],[1022,86,1084,86,"enemyY"],[1022,92,1084,92],[1022,95,1084,95,"impactY"],[1022,102,1084,102],[1022,104,1084,104],[1022,105,1084,105],[1022,106,1084,106],[1022,107,1084,107],[1023,20,1086,18,"console"],[1023,27,1086,25],[1023,28,1086,26,"log"],[1023,31,1086,29],[1023,32,1086,30],[1023,58,1086,56,"enemy"],[1023,63,1086,61],[1023,64,1086,62,"name"],[1023,68,1086,66],[1023,76,1086,74,"enemyX"],[1023,82,1086,80],[1023,87,1086,85,"enemyY"],[1023,93,1086,91],[1023,109,1086,107,"impactX"],[1023,116,1086,114],[1023,121,1086,119,"impactY"],[1023,128,1086,126],[1023,135,1086,133,"distance"],[1023,143,1086,141],[1023,144,1086,142,"toFixed"],[1023,151,1086,149],[1023,152,1086,150],[1023,153,1086,151],[1023,154,1086,152],[1023,169,1086,167,"projectile"],[1023,179,1086,177],[1023,180,1086,178,"aoeRadius"],[1023,189,1086,187],[1023,194,1086,192],[1023,195,1086,193],[1024,20,1088,18],[1024,24,1088,22,"distance"],[1024,32,1088,30],[1024,36,1088,34,"projectile"],[1024,46,1088,44],[1024,47,1088,45,"aoeRadius"],[1024,56,1088,54],[1024,58,1088,56],[1025,22,1089,20],[1026,22,1090,20],[1026,26,1090,26,"newHealth"],[1026,35,1090,35],[1026,38,1090,38,"Math"],[1026,42,1090,42],[1026,43,1090,43,"max"],[1026,46,1090,46],[1026,47,1090,47],[1026,48,1090,48],[1026,50,1090,50,"enemy"],[1026,55,1090,55],[1026,56,1090,56,"health"],[1026,62,1090,62],[1026,65,1090,65,"projectile"],[1026,75,1090,75],[1026,76,1090,76,"damage"],[1026,82,1090,82],[1026,83,1090,83],[1027,22,1092,20,"console"],[1027,29,1092,27],[1027,30,1092,28,"log"],[1027,33,1092,31],[1027,34,1092,32],[1027,52,1092,50,"enemy"],[1027,57,1092,55],[1027,58,1092,56,"name"],[1027,62,1092,60],[1027,74,1092,72,"projectile"],[1027,84,1092,82],[1027,85,1092,83,"damage"],[1027,91,1092,89],[1027,103,1092,101,"enemy"],[1027,108,1092,106],[1027,109,1092,107,"health"],[1027,115,1092,113],[1027,122,1092,120,"newHealth"],[1027,131,1092,129],[1027,134,1092,132],[1027,135,1092,133],[1029,22,1094,20],[1030,22,1095,20],[1030,26,1095,24,"newHealth"],[1030,35,1095,33],[1030,39,1095,37],[1030,40,1095,38],[1030,44,1095,42,"enemy"],[1030,49,1095,47],[1030,50,1095,48,"health"],[1030,56,1095,54],[1030,59,1095,57],[1030,60,1095,58],[1030,62,1095,60],[1031,24,1096,22,"console"],[1031,31,1096,29],[1031,32,1096,30,"log"],[1031,35,1096,33],[1031,36,1096,34],[1031,52,1096,50,"enemy"],[1031,57,1096,55],[1031,58,1096,56,"name"],[1031,62,1096,60],[1031,76,1096,74,"projectile"],[1031,86,1096,84],[1031,87,1096,85,"abilityName"],[1031,98,1096,96],[1031,101,1096,99],[1031,102,1096,100],[1032,24,1097,22,"enemiesKilled"],[1032,37,1097,35],[1032,38,1097,36,"push"],[1032,42,1097,40],[1032,43,1097,41,"enemy"],[1032,48,1097,46],[1032,49,1097,47],[1032,50,1097,48],[1032,51,1097,49],[1034,24,1099,22],[1034,31,1099,29],[1035,26,1100,24],[1035,29,1100,27,"enemy"],[1035,34,1100,32],[1036,26,1101,24,"health"],[1036,32,1101,30],[1036,34,1101,32],[1036,35,1101,33],[1037,26,1102,24,"markedForDeath"],[1037,40,1102,38],[1037,42,1102,40],[1037,46,1102,44],[1038,26,1103,24,"lastDamaged"],[1038,37,1103,35],[1038,39,1103,37,"combatEngine"],[1038,58,1103,49],[1038,59,1103,49,"combatEngine"],[1038,71,1103,49],[1038,72,1103,50,"getCurrentTick"],[1038,86,1103,64],[1038,87,1103,65],[1039,24,1104,22],[1039,25,1104,23],[1040,22,1105,20],[1040,23,1105,21],[1040,29,1105,27],[1041,24,1106,22],[1041,31,1106,29],[1042,26,1107,24],[1042,29,1107,27,"enemy"],[1042,34,1107,32],[1043,26,1108,24,"health"],[1043,32,1108,30],[1043,34,1108,32,"newHealth"],[1043,43,1108,41],[1044,26,1109,24,"lastDamaged"],[1044,37,1109,35],[1044,39,1109,37,"combatEngine"],[1044,58,1109,49],[1044,59,1109,49,"combatEngine"],[1044,71,1109,49],[1044,72,1109,50,"getCurrentTick"],[1044,86,1109,64],[1044,87,1109,65],[1045,24,1110,22],[1045,25,1110,23],[1046,22,1111,20],[1047,20,1112,18],[1048,20,1114,18],[1048,27,1114,25,"enemy"],[1048,32,1114,30],[1048,33,1114,31],[1048,34,1114,32],[1049,18,1115,16],[1049,19,1115,17],[1049,20,1115,18],[1051,18,1117,16],[1052,18,1118,16],[1052,22,1118,20,"enemiesKilled"],[1052,35,1118,33],[1052,36,1118,34,"length"],[1052,42,1118,40],[1052,45,1118,43],[1052,46,1118,44],[1052,48,1118,46],[1053,20,1119,18,"console"],[1053,27,1119,25],[1053,28,1119,26,"log"],[1053,31,1119,29],[1053,32,1119,30],[1053,52,1119,50,"enemiesKilled"],[1053,65,1119,63],[1053,66,1119,64,"length"],[1053,72,1119,70],[1053,94,1119,92,"projectile"],[1053,104,1119,102],[1053,105,1119,103,"abilityName"],[1053,116,1119,114],[1053,118,1119,116],[1053,119,1119,117],[1054,20,1120,18,"setTimeout"],[1054,30,1120,28],[1054,31,1120,29],[1054,37,1120,35],[1055,22,1121,20,"enemiesKilled"],[1055,35,1121,33],[1055,36,1121,34,"forEach"],[1055,43,1121,41],[1055,44,1121,42,"enemy"],[1055,49,1121,47],[1055,53,1121,51,"handleEnemyKill"],[1055,68,1121,66],[1055,69,1121,67,"enemy"],[1055,74,1121,72],[1055,75,1121,73],[1055,76,1121,74],[1056,20,1122,18],[1056,21,1122,19],[1056,23,1122,21],[1056,24,1122,22],[1056,25,1122,23],[1057,18,1123,16],[1058,16,1125,14],[1058,17,1125,15],[1058,23,1125,21],[1059,18,1126,16],[1060,18,1127,16],[1060,22,1127,22,"enemyIndex"],[1060,32,1127,32],[1060,35,1127,35,"newState"],[1060,43,1127,43],[1060,44,1127,44,"enemies"],[1060,51,1127,51],[1060,52,1127,52,"findIndex"],[1060,61,1127,61],[1060,62,1127,62,"e"],[1060,63,1127,63],[1060,67,1127,67,"e"],[1060,68,1127,68],[1060,69,1127,69,"id"],[1060,71,1127,71],[1060,76,1127,76,"projectile"],[1060,86,1127,86],[1060,87,1127,87,"targetEnemyId"],[1060,100,1127,100],[1060,101,1127,101],[1061,18,1129,16],[1061,22,1129,20,"enemyIndex"],[1061,32,1129,30],[1061,36,1129,34],[1061,37,1129,35],[1061,41,1129,39,"newState"],[1061,49,1129,47],[1061,50,1129,48,"enemies"],[1061,57,1129,55],[1061,58,1129,56,"enemyIndex"],[1061,68,1129,66],[1061,69,1129,67],[1061,70,1129,68,"health"],[1061,76,1129,74],[1061,79,1129,77],[1061,80,1129,78],[1061,84,1129,82],[1061,85,1129,83,"newState"],[1061,93,1129,91],[1061,94,1129,92,"enemies"],[1061,101,1129,99],[1061,102,1129,100,"enemyIndex"],[1061,112,1129,110],[1061,113,1129,111],[1061,114,1129,112,"markedForDeath"],[1061,128,1129,126],[1061,130,1129,128],[1062,20,1130,18,"newState"],[1062,28,1130,26],[1062,29,1130,27,"enemies"],[1062,36,1130,34],[1062,39,1130,37],[1062,40,1130,38],[1062,43,1130,41,"newState"],[1062,51,1130,49],[1062,52,1130,50,"enemies"],[1062,59,1130,57],[1062,60,1130,58],[1063,20,1131,18],[1063,24,1131,24,"enemy"],[1063,29,1131,29],[1063,32,1131,32,"newState"],[1063,40,1131,40],[1063,41,1131,41,"enemies"],[1063,48,1131,48],[1063,49,1131,49,"enemyIndex"],[1063,59,1131,59],[1063,60,1131,60],[1064,20,1132,18],[1064,24,1132,24,"newHealth"],[1064,33,1132,33],[1064,36,1132,36,"Math"],[1064,40,1132,40],[1064,41,1132,41,"max"],[1064,44,1132,44],[1064,45,1132,45],[1064,46,1132,46],[1064,48,1132,48,"enemy"],[1064,53,1132,53],[1064,54,1132,54,"health"],[1064,60,1132,60],[1064,63,1132,63,"projectile"],[1064,73,1132,73],[1064,74,1132,74,"damage"],[1064,80,1132,80],[1064,81,1132,81],[1065,20,1134,18,"newState"],[1065,28,1134,26],[1065,29,1134,27,"enemies"],[1065,36,1134,34],[1065,37,1134,35,"enemyIndex"],[1065,47,1134,45],[1065,48,1134,46],[1065,51,1134,49],[1066,22,1135,20],[1066,25,1135,23,"enemy"],[1066,30,1135,28],[1067,22,1136,20,"health"],[1067,28,1136,26],[1067,30,1136,28,"newHealth"],[1067,39,1136,37],[1068,22,1137,20,"lastDamaged"],[1068,33,1137,31],[1068,35,1137,33,"combatEngine"],[1068,54,1137,45],[1068,55,1137,45,"combatEngine"],[1068,67,1137,45],[1068,68,1137,46,"getCurrentTick"],[1068,82,1137,60],[1068,83,1137,61],[1069,20,1138,18],[1069,21,1138,19],[1070,20,1140,18,"console"],[1070,27,1140,25],[1070,28,1140,26,"log"],[1070,31,1140,29],[1070,32,1140,30],[1070,60,1140,58,"enemy"],[1070,65,1140,63],[1070,66,1140,64,"name"],[1070,70,1140,68],[1070,82,1140,80,"newHealth"],[1070,91,1140,89],[1070,95,1140,93,"enemy"],[1070,100,1140,98],[1070,101,1140,99,"maxHealth"],[1070,110,1140,108],[1070,112,1140,110],[1070,113,1140,111],[1072,20,1142,18],[1073,20,1143,18],[1073,24,1143,22,"newHealth"],[1073,33,1143,31],[1073,37,1143,35],[1073,38,1143,36],[1073,42,1143,40,"enemy"],[1073,47,1143,45],[1073,48,1143,46,"health"],[1073,54,1143,52],[1073,57,1143,55],[1073,58,1143,56],[1073,60,1143,58],[1074,22,1144,20,"console"],[1074,29,1144,27],[1074,30,1144,28,"log"],[1074,33,1144,31],[1074,34,1144,32],[1074,54,1144,52,"enemy"],[1074,59,1144,57],[1074,60,1144,58,"name"],[1074,64,1144,62],[1074,78,1144,76,"projectile"],[1074,88,1144,86],[1074,89,1144,87,"abilityName"],[1074,100,1144,98],[1074,136,1144,134],[1074,137,1144,135],[1076,22,1146,20],[1077,22,1147,20,"newState"],[1077,30,1147,28],[1077,31,1147,29,"enemies"],[1077,38,1147,36],[1077,39,1147,37,"enemyIndex"],[1077,49,1147,47],[1077,50,1147,48],[1077,53,1147,51],[1078,24,1148,22],[1078,27,1148,25,"newState"],[1078,35,1148,33],[1078,36,1148,34,"enemies"],[1078,43,1148,41],[1078,44,1148,42,"enemyIndex"],[1078,54,1148,52],[1078,55,1148,53],[1079,24,1149,22,"health"],[1079,30,1149,28],[1079,32,1149,30],[1079,33,1149,31],[1080,24,1150,22,"isDying"],[1080,31,1150,29],[1080,33,1150,31],[1080,37,1150,35],[1081,24,1151,22,"deathStartTime"],[1081,38,1151,36],[1081,40,1151,38,"Date"],[1081,44,1151,42],[1081,45,1151,43,"now"],[1081,48,1151,46],[1081,49,1151,47],[1082,22,1152,20],[1082,23,1152,21],[1083,20,1153,18],[1083,21,1153,19],[1083,27,1153,25],[1083,31,1153,29,"enemy"],[1083,36,1153,34],[1083,37,1153,35,"health"],[1083,43,1153,41],[1083,46,1153,44],[1083,47,1153,45],[1083,49,1153,47],[1084,22,1154,20,"console"],[1084,29,1154,27],[1084,30,1154,28,"log"],[1084,33,1154,31],[1084,34,1154,32],[1084,48,1154,46,"enemy"],[1084,53,1154,51],[1084,54,1154,52,"name"],[1084,58,1154,56],[1084,70,1154,68,"projectile"],[1084,80,1154,78],[1084,81,1154,79,"damage"],[1084,87,1154,85],[1084,99,1154,97,"enemy"],[1084,104,1154,102],[1084,105,1154,103,"health"],[1084,111,1154,109],[1084,117,1154,115,"newHealth"],[1084,126,1154,124],[1084,129,1154,127],[1084,130,1154,128],[1085,20,1155,18],[1086,18,1156,16],[1087,16,1157,14],[1088,16,1159,14],[1088,23,1159,21,"newState"],[1088,31,1159,29],[1089,14,1160,12],[1089,15,1160,13],[1089,16,1160,14],[1090,12,1161,10],[1092,12,1163,10],[1093,12,1164,10],[1093,16,1164,14,"progress"],[1093,24,1164,22],[1093,28,1164,26],[1093,31,1164,29],[1093,33,1164,31],[1094,14,1165,12],[1094,21,1165,19],[1094,25,1165,23],[1095,12,1166,10],[1096,12,1168,10],[1096,19,1168,17,"projectile"],[1096,29,1168,27],[1097,10,1169,8],[1097,11,1169,9],[1097,12,1169,10],[1097,13,1169,11,"filter"],[1097,19,1169,17],[1097,20,1169,18,"Boolean"],[1097,27,1169,25],[1097,28,1169,26],[1098,8,1170,6],[1098,9,1170,7],[1098,10,1170,8],[1099,6,1171,4],[1099,7,1171,5],[1101,6,1173,4],[1102,6,1174,4],[1102,10,1174,10,"impactInterval"],[1102,24,1174,24],[1102,27,1174,27,"setInterval"],[1102,38,1174,38],[1102,39,1174,39,"processProjectileImpacts"],[1102,63,1174,63],[1102,65,1174,65],[1102,67,1174,67],[1102,68,1174,68],[1103,6,1175,4],[1103,13,1175,11],[1103,19,1175,17,"clearInterval"],[1103,32,1175,30],[1103,33,1175,31,"impactInterval"],[1103,47,1175,45],[1103,48,1175,46],[1104,4,1176,2],[1104,5,1176,3],[1104,7,1176,5],[1104,8,1176,6,"handleEnemyKill"],[1104,23,1176,21],[1104,24,1176,22],[1104,25,1176,23],[1106,4,1178,2],[1107,4,1179,2],[1107,8,1179,8,"saveAbilityData"],[1107,23,1179,23],[1107,26,1179,26],[1107,30,1179,26,"useCallback"],[1107,36,1179,37],[1107,37,1179,37,"useCallback"],[1107,48,1179,37],[1107,50,1179,38],[1107,56,1179,44],[1108,6,1180,4],[1108,10,1180,8,"combatState"],[1108,21,1180,19],[1108,22,1180,20,"abilityManager"],[1108,36,1180,34],[1108,38,1180,36],[1109,8,1181,6],[1109,12,1181,12,"abilityData"],[1109,23,1181,23],[1109,26,1181,26,"combatState"],[1109,37,1181,37],[1109,38,1181,38,"abilityManager"],[1109,52,1181,52],[1109,53,1181,53,"getSaveData"],[1109,64,1181,64],[1109,65,1181,65],[1109,66,1181,66],[1110,8,1182,6,"console"],[1110,15,1182,13],[1110,16,1182,14,"log"],[1110,19,1182,17],[1110,20,1182,18],[1110,70,1182,68],[1110,72,1182,70,"abilityData"],[1110,83,1182,81],[1110,84,1182,82],[1111,8,1183,6,"game"],[1111,12,1183,10],[1111,13,1183,11,"updateAbilityData"],[1111,30,1183,28],[1111,31,1183,29,"abilityData"],[1111,42,1183,40],[1111,43,1183,41],[1112,6,1184,4],[1113,4,1185,2],[1113,5,1185,3],[1113,7,1185,5],[1113,8,1185,6,"combatState"],[1113,19,1185,17],[1113,20,1185,18,"abilityManager"],[1113,34,1185,32],[1113,36,1185,34,"game"],[1113,40,1185,38],[1113,41,1185,39,"updateAbilityData"],[1113,58,1185,56],[1113,59,1185,57],[1113,60,1185,58],[1114,4,1187,2],[1114,8,1187,8,"contextValue"],[1114,20,1187,39],[1114,23,1187,42,"React"],[1114,28,1187,47],[1114,29,1187,47,"default"],[1114,36,1187,47],[1114,37,1187,48,"useMemo"],[1114,44,1187,55],[1114,45,1187,56],[1114,52,1187,63],[1115,6,1188,4,"combatState"],[1115,17,1188,15],[1116,6,1189,4,"projectiles"],[1116,17,1189,15],[1117,6,1190,4,"startCombat"],[1117,17,1190,15],[1118,6,1191,4,"stopCombat"],[1118,16,1191,14],[1119,6,1192,4,"equipAbility"],[1119,18,1192,16],[1120,6,1193,4,"handleEnemyKill"],[1120,21,1193,19],[1121,6,1194,4,"getDeck"],[1121,13,1194,11],[1122,6,1195,4,"getAvailableAbilities"],[1122,27,1195,25],[1123,6,1196,4,"upgradeAbility"],[1123,20,1196,18],[1124,6,1197,4,"spawnEnemy"],[1124,16,1197,14],[1125,6,1198,4,"spawnBoss"],[1125,15,1198,13],[1126,6,1199,4,"clearAllEnemies"],[1126,21,1199,19],[1127,6,1200,4,"clearSpecificEnemy"],[1127,24,1200,22],[1128,6,1201,4],[1129,6,1202,4,"findClosestEnemy"],[1129,22,1202,20],[1130,6,1203,4,"updateNinjaPosition"],[1130,25,1203,23],[1131,6,1204,4,"setManualControlActive"],[1131,28,1204,26],[1132,6,1205,4,"lastExplosionTime"],[1132,23,1205,21],[1133,6,1206,4,"useAbilityManually"],[1133,24,1206,22],[1134,6,1206,24],[1135,6,1207,4,"saveAbilityData"],[1135,21,1207,19],[1136,6,1207,21],[1137,6,1208,4,"shadowClone"],[1137,17,1208,15],[1137,19,1208,17,"combatState"],[1137,30,1208,28],[1137,31,1208,29,"shadowClone"],[1137,42,1208,40],[1137,43,1208,42],[1138,4,1209,2],[1138,5,1209,3],[1138,6,1209,4],[1138,8,1209,6],[1139,4,1210,4],[1140,4,1211,4],[1141,4,1212,4,"combatState"],[1141,15,1212,15],[1141,17,1213,4,"projectiles"],[1141,28,1213,15],[1141,30,1214,4,"lastExplosionTime"],[1141,47,1214,21],[1142,4,1215,4],[1143,4,1216,4,"combatState"],[1143,15,1216,15],[1143,16,1216,16,"abilityManager"],[1143,30,1216,30],[1143,32,1217,4,"combatState"],[1143,43,1217,15],[1143,44,1217,16,"enemies"],[1143,51,1217,23],[1143,53,1218,4,"combatState"],[1143,64,1218,15],[1143,65,1218,16,"shadowClone"],[1143,76,1218,27],[1144,4,1218,29],[1145,4,1219,4,"useAbilityManually"],[1145,22,1219,22],[1146,4,1219,24],[1147,4,1220,4,"saveAbilityData"],[1147,19,1220,19],[1147,20,1220,21],[1148,4,1220,21],[1148,5,1221,3],[1148,6,1221,4],[1149,4,1223,2],[1149,24,1224,4],[1149,28,1224,4,"_reactJsxDevRuntime"],[1149,47,1224,4],[1149,48,1224,4,"jsxDEV"],[1149,54,1224,4],[1149,56,1224,5,"CombatContext"],[1149,69,1224,18],[1149,70,1224,19,"Provider"],[1149,78,1224,27],[1150,6,1224,28,"value"],[1150,11,1224,33],[1150,13,1224,35,"contextValue"],[1150,25,1224,48],[1151,6,1224,48,"children"],[1151,14,1224,48],[1151,16,1225,7,"children"],[1152,4,1225,15],[1153,6,1225,15,"fileName"],[1153,14,1225,15],[1153,16,1225,15,"_jsxFileName"],[1153,28,1225,15],[1154,6,1225,15,"lineNumber"],[1154,16,1225,15],[1155,6,1225,15,"columnNumber"],[1155,18,1225,15],[1156,4,1225,15],[1156,11,1226,28],[1156,12,1226,29],[1157,2,1228,0],[1157,3,1228,1],[1158,2,1228,2,"_s4"],[1158,5,1228,2],[1158,6,106,13,"CombatProvider"],[1158,20,106,27],[1159,4,106,27],[1159,12,107,15,"useGame"],[1159,24,107,22],[1159,25,107,22,"useGame"],[1159,32,107,22],[1159,34,108,77,"useZone"],[1159,46,108,84],[1159,47,108,84,"useZone"],[1159,54,108,84],[1160,2,108,84],[1161,2,108,84,"_c"],[1161,4,108,84],[1161,7,106,13,"CombatProvider"],[1161,21,106,27],[1162,2,106,27],[1162,6,106,27,"_c"],[1162,8,106,27],[1163,2,106,27,"$RefreshReg$"],[1163,14,106,27],[1163,15,106,27,"_c"],[1163,17,106,27],[1164,0,106,27],[1164,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","game.updateNinja$argument_0","prevState.enemies.map$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","setTimeout$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.filter$argument_0","unprocessedEnemies.forEach$argument_0","zoneKills.forEach$argument_0","prev.enemies.map$argument_0","unprocessedEnemies.find$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;qBCM;MDG;mBDG;qCGE;yDHC;MCE;GHgB;2BMI;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BC+D;mBDG;ORiC;mDUuD,2CV;kDUC,4CV;iDUO;OVU;mGWI,6BX;uDUI,+CV;kFYE,4CZ;iDUK,yBV;4CaY,qBb;KIiB;sDUK,yBV;mCWW;SXiB;yBFG;UEG;0BYG,uCZ;uBJG;oCiBE;yDCC,sCD;WjBE;UIC;GNG;mCqBG;oBCY;KDU;GrBI;2BuBG;GvBE;0CwBO;GxBE;6CyBG;GzBG;8B0BG;mBxBG;oDMI,sCN;KwBa;mBCG,oBC,2BD,CD;G1BC;sB6BG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;G7BoB;2BmCG;mBR0C,6BQ;exBG;KwBE;GnCG;yBoCG;GpCsC;8BqCG;GrC4B;sBsCI;mBpCE,uCoC;GtCQ;qBuCG;mBrCC,wCqC;GvCE;uBwCG;GxCE;kByCE;GzCE;gC0CE;G1CE;yB2CE;G3CE;0B4CG;mB1CE;M0CG;G5CC;qB6CM;mB3C2B;M2CG;G7CG;oB8CG;mB5CE;M4CG;G9CC;6B+CG;mB7CC;mC8CE,6B9C;M6CC;G/CC;yCiDG;qB/C8B;O+CI;GjDQ;YCC;WiDO;KjDE;GDC;YCG;qCkDC;qBxBC;sCyBC;2BlDc;wDmDY;iBnDoC;6BSK;0C2CC,+B3C;mBTC;8DMK,sCN;akDiC;SzBS;OwBC;KlDC;WiDI,mCjD;GDC;sCuDG;GvDM;wDwDE;IxDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}