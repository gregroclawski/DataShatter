{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition, {\n        id: ability.id,\n        name: ability.name,\n        icon: ability.icon\n      });\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"MZHJHXYvkdej5pMVQQ6Uv4GaYus=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":728,"map":[[15,2,77,0,"Object"],[15,8,77,0],[15,9,77,0,"defineProperty"],[15,23,77,0],[15,24,77,0,"exports"],[15,31,77,0],[16,4,77,0,"enumerable"],[16,14,77,0],[17,4,77,0,"get"],[17,7,77,0],[17,18,77,0,"get"],[17,19,77,0],[18,6,77,0],[18,13,77,0,"useCombat"],[18,22,77,0],[19,4,77,0],[20,2,77,0],[21,2,87,0,"Object"],[21,8,87,0],[21,9,87,0,"defineProperty"],[21,23,87,0],[21,24,87,0,"exports"],[21,31,87,0],[22,4,87,0,"enumerable"],[22,14,87,0],[23,4,87,0,"get"],[23,7,87,0],[23,18,87,0,"get"],[23,19,87,0],[24,6,87,0],[24,13,87,0,"CombatProvider"],[24,27,87,0],[25,4,87,0],[26,2,87,0],[27,2,738,2],[27,6,738,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,738,2],[27,42,738,2,"require"],[27,49,738,2],[27,50,738,2,"_dependencyMap"],[27,64,738,2],[28,2,738,2],[28,6,738,2,"_slicedToArray"],[28,20,738,2],[28,23,738,2,"_interopDefault"],[28,38,738,2],[28,39,738,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,738,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,75,0],[37,6,75,6,"CombatContext"],[37,19,75,19],[37,35,75,22],[37,39,75,22,"createContext"],[37,45,75,35],[37,46,75,35,"createContext"],[37,59,75,35],[37,61,75,67,"undefined"],[37,70,75,76],[37,71,75,77],[38,2,77,7],[38,6,77,13,"useCombat"],[38,15,77,22],[38,18,77,25,"useCombat"],[38,19,77,25],[38,24,77,50],[39,4,77,50,"_s"],[39,6,77,50],[40,4,78,2],[40,8,78,8,"context"],[40,15,78,15],[40,18,78,18],[40,22,78,18,"useContext"],[40,28,78,28],[40,29,78,28,"useContext"],[40,39,78,28],[40,41,78,29,"CombatContext"],[40,54,78,42],[40,55,78,43],[41,4,79,2],[41,8,79,6],[41,9,79,7,"context"],[41,16,79,14],[41,18,79,16],[42,6,80,4],[42,12,80,10],[42,16,80,14,"Error"],[42,21,80,19],[42,22,80,20],[42,70,80,68],[42,71,80,69],[43,4,81,2],[44,4,82,2],[44,11,82,9,"context"],[44,18,82,16],[45,2,83,0],[45,3,83,1],[46,2,83,2,"_s"],[46,4,83,2],[46,5,77,13,"useCombat"],[46,14,77,22],[47,2,85,0],[47,6,85,4,"enemyCounter"],[47,18,85,16],[47,21,85,19],[47,22,85,20],[47,23,85,21],[47,24,85,22],[49,2,87,7],[49,6,87,13,"CombatProvider"],[49,20,87,27],[49,23,87,30,"_ref"],[49,27,87,30],[49,31,87,73],[50,4,87,73,"_s4"],[50,7,87,73],[51,4,87,73],[51,8,87,73,"_s3"],[51,11,87,73],[51,14,87,73,"$RefreshSig$"],[51,26,87,73],[52,4,87,73],[52,8,87,33,"children"],[52,16,87,41],[52,19,87,41,"_ref"],[52,23,87,41],[52,24,87,33,"children"],[52,32,87,41],[53,4,88,2],[53,8,88,8,"game"],[53,12,88,12],[53,15,88,15],[53,19,88,15,"useGame"],[53,31,88,22],[53,32,88,22,"useGame"],[53,39,88,22],[53,41,88,23],[53,42,88,24],[54,4,89,2],[54,8,89,2,"_useZone"],[54,16,89,2],[54,19,89,61],[54,23,89,61,"useZone"],[54,35,89,68],[54,36,89,68,"useZone"],[54,43,89,68],[54,45,89,69],[54,46,89,70],[55,6,89,10,"currentZone"],[55,17,89,21],[55,20,89,21,"_useZone"],[55,28,89,21],[55,29,89,10,"currentZone"],[55,40,89,21],[56,6,89,23,"currentZoneLevel"],[56,22,89,39],[56,25,89,39,"_useZone"],[56,33,89,39],[56,34,89,23,"currentZoneLevel"],[56,50,89,39],[57,6,89,41,"recordEnemyKill"],[57,21,89,56],[57,24,89,56,"_useZone"],[57,32,89,56],[57,33,89,41,"recordEnemyKill"],[57,48,89,56],[59,4,91,2],[60,4,92,2],[60,8,92,8,"initialCombatState"],[60,26,92,39],[60,29,92,42],[61,6,93,4,"isInCombat"],[61,16,93,14],[61,18,93,16],[61,23,93,21],[62,6,94,4,"currentTick"],[62,17,94,15],[62,19,94,17],[62,20,94,18],[63,6,95,4,"enemies"],[63,13,95,11],[63,15,95,13],[63,17,95,15],[64,6,96,4,"abilityManager"],[64,20,96,18],[64,22,96,20],[64,26,96,24,"AbilityManager"],[64,44,96,38],[64,45,96,38,"AbilityManager"],[64,59,96,38],[64,60,96,39],[64,61,96,40],[65,6,97,4,"statusEffects"],[65,19,97,17],[65,21,97,19],[65,25,97,23,"StatusEffectManager"],[65,44,97,42],[65,45,97,42,"StatusEffectManager"],[65,64,97,42],[65,65,97,43],[65,66,97,44],[66,6,98,4,"playerStats"],[66,17,98,15],[66,19,98,17],[67,8,99,6,"attack"],[67,14,99,12],[67,16,99,14],[67,18,99,16],[68,8,99,18],[69,8,100,6,"defense"],[69,15,100,13],[69,17,100,15],[69,18,100,16],[70,8,101,6,"health"],[70,14,101,12],[70,16,101,14],[70,19,101,17],[71,8,102,6,"maxHealth"],[71,17,102,15],[71,19,102,17],[71,22,102,20],[72,8,103,6,"critChance"],[72,18,103,16],[72,20,103,18],[72,21,103,19],[73,8,104,6,"critDamage"],[73,18,104,16],[73,20,104,18],[73,23,104,21],[74,8,105,6,"cooldownReduction"],[74,25,105,23],[74,27,105,25],[75,6,106,4],[76,4,107,2],[76,5,107,3],[77,4,109,2],[77,8,109,2,"_useState"],[77,17,109,2],[77,20,109,40],[77,24,109,40,"useState"],[77,30,109,48],[77,31,109,48,"useState"],[77,39,109,48],[77,41,109,62,"initialCombatState"],[77,59,109,80],[77,60,109,81],[78,6,109,81,"_useState2"],[78,16,109,81],[78,23,109,81,"_slicedToArray"],[78,37,109,81],[78,38,109,81,"default"],[78,45,109,81],[78,47,109,81,"_useState"],[78,56,109,81],[79,6,109,9,"combatState"],[79,17,109,20],[79,20,109,20,"_useState2"],[79,30,109,20],[80,6,109,22,"setCombatState"],[80,20,109,36],[80,23,109,36,"_useState2"],[80,33,109,36],[82,4,111,2],[83,4,112,2],[83,8,112,2,"useEffect"],[83,14,112,11],[83,15,112,11,"useEffect"],[83,24,112,11],[83,26,112,12],[83,32,112,18],[84,6,113,4],[84,10,113,8,"game"],[84,14,113,12],[84,15,113,13,"gameState"],[84,24,113,22],[84,25,113,23,"abilityData"],[84,36,113,34],[84,40,113,38,"combatState"],[84,51,113,49],[84,52,113,50,"abilityManager"],[84,66,113,64],[84,68,113,66],[85,8,114,6,"console"],[85,15,114,13],[85,16,114,14,"log"],[85,19,114,17],[85,20,114,18],[85,68,114,66],[85,70,114,68,"game"],[85,74,114,72],[85,75,114,73,"gameState"],[85,84,114,82],[85,85,114,83,"abilityData"],[85,96,114,94],[85,97,114,95],[86,8,115,6,"combatState"],[86,19,115,17],[86,20,115,18,"abilityManager"],[86,34,115,32],[86,35,115,33,"restoreFromSaveData"],[86,54,115,52],[86,55,115,53,"game"],[86,59,115,57],[86,60,115,58,"gameState"],[86,69,115,67],[86,70,115,68,"abilityData"],[86,81,115,79],[86,82,115,80],[88,8,117,6],[89,8,118,6,"setCombatState"],[89,22,118,20],[89,23,118,21,"prev"],[89,27,118,25],[89,32,118,30],[90,10,118,32],[90,13,118,35,"prev"],[91,8,118,40],[91,9,118,41],[91,10,118,42],[91,11,118,43],[92,6,119,4],[93,4,120,2],[93,5,120,3],[93,7,120,5],[93,8,120,6,"game"],[93,12,120,10],[93,13,120,11,"gameState"],[93,22,120,20],[93,23,120,21,"abilityData"],[93,34,120,32],[93,36,120,34,"combatState"],[93,47,120,45],[93,48,120,46,"abilityManager"],[93,62,120,60],[93,63,120,61],[93,64,120,62],[94,4,122,2],[94,8,122,2,"_useState3"],[94,18,122,2],[94,21,122,40],[94,25,122,40,"useState"],[94,31,122,48],[94,32,122,48,"useState"],[94,40,122,48],[94,42,122,69],[94,44,122,71],[94,45,122,72],[95,6,122,72,"_useState4"],[95,16,122,72],[95,23,122,72,"_slicedToArray"],[95,37,122,72],[95,38,122,72,"default"],[95,45,122,72],[95,47,122,72,"_useState3"],[95,57,122,72],[96,6,122,9,"projectiles"],[96,17,122,20],[96,20,122,20,"_useState4"],[96,30,122,20],[97,6,122,22,"setProjectiles"],[97,20,122,36],[97,23,122,36,"_useState4"],[97,33,122,36],[98,4,123,2],[98,8,123,2,"_useState5"],[98,18,123,2],[98,21,123,52],[98,25,123,52,"useState"],[98,31,123,60],[98,32,123,60,"useState"],[98,40,123,60],[98,42,123,69],[98,43,123,70],[98,44,123,71],[99,6,123,71,"_useState6"],[99,16,123,71],[99,23,123,71,"_slicedToArray"],[99,37,123,71],[99,38,123,71,"default"],[99,45,123,71],[99,47,123,71,"_useState5"],[99,57,123,71],[100,6,123,9,"lastExplosionTime"],[100,23,123,26],[100,26,123,26,"_useState6"],[100,36,123,26],[101,6,123,28,"setLastExplosionTime"],[101,26,123,48],[101,29,123,48,"_useState6"],[101,39,123,48],[102,4,124,2],[103,4,125,2],[105,4,127,2],[106,4,128,2],[106,8,128,8,"handleEnemyKill"],[106,23,128,23],[106,26,128,26],[106,30,128,26,"useCallback"],[106,36,128,37],[106,37,128,37,"useCallback"],[106,48,128,37],[106,50,128,39,"enemy"],[106,55,128,57],[106,59,128,62],[107,6,129,4,"console"],[107,13,129,11],[107,14,129,12,"log"],[107,17,129,15],[107,18,129,16],[107,73,129,71],[107,75,129,73,"enemy"],[107,80,129,78],[107,81,129,79,"id"],[107,83,129,81],[107,84,129,82],[109,6,131,4],[110,6,132,4],[110,10,132,10,"xpReward"],[110,18,132,18],[110,21,132,21],[110,23,132,23],[110,24,132,24],[110,25,132,25],[111,6,133,4],[111,10,133,10,"goldReward"],[111,20,133,20],[111,23,133,23],[111,25,133,25],[112,6,135,4,"console"],[112,13,135,11],[112,14,135,12,"log"],[112,17,135,15],[112,18,135,16],[112,48,135,46,"xpReward"],[112,56,135,54],[112,67,135,65,"goldReward"],[112,77,135,75],[112,93,135,91],[112,94,135,92],[113,6,136,4,"console"],[113,13,136,11],[113,14,136,12,"log"],[113,17,136,15],[113,18,136,16],[113,49,136,47,"Platform"],[113,61,136,55],[113,62,136,55,"Platform"],[113,70,136,55],[113,71,136,56,"OS"],[113,73,136,58],[113,84,136,69,"Date"],[113,88,136,73],[113,89,136,74,"now"],[113,92,136,77],[113,93,136,78],[113,94,136,79],[113,96,136,81],[113,97,136,82],[115,6,138,4],[116,6,139,4],[117,6,140,4,"setTimeout"],[117,16,140,14],[117,17,140,15],[117,23,140,21],[118,8,141,6,"console"],[118,15,141,13],[118,16,141,14,"log"],[118,19,141,17],[118,20,141,18],[118,78,141,76],[118,79,141,77],[120,8,143,6],[121,8,144,6,"game"],[121,12,144,10],[121,13,144,11,"updateNinja"],[121,24,144,22],[121,25,144,24,"prev"],[121,29,144,28],[121,33,144,33],[122,10,145,8,"console"],[122,17,145,15],[122,18,145,16,"log"],[122,21,145,19],[122,22,145,20],[122,54,145,52,"prev"],[122,58,145,56],[122,59,145,57,"experience"],[122,69,145,67],[122,81,145,79,"prev"],[122,85,145,83],[122,86,145,84,"experience"],[122,96,145,94],[122,99,145,97,"xpReward"],[122,107,145,105],[122,109,145,107],[122,110,145,108],[123,10,146,8,"console"],[123,17,146,15],[123,18,146,16,"log"],[123,21,146,19],[123,22,146,20],[123,56,146,54,"prev"],[123,60,146,58],[123,61,146,59,"gold"],[123,65,146,63],[123,77,146,75,"prev"],[123,81,146,79],[123,82,146,80,"gold"],[123,86,146,84],[123,89,146,87,"goldReward"],[123,99,146,97],[123,101,146,99],[123,102,146,100],[124,10,147,8],[124,17,147,15],[125,12,148,10,"experience"],[125,22,148,20],[125,24,148,22,"prev"],[125,28,148,26],[125,29,148,27,"experience"],[125,39,148,37],[125,42,148,40,"xpReward"],[125,50,148,48],[126,12,149,10,"gold"],[126,16,149,14],[126,18,149,16,"prev"],[126,22,149,20],[126,23,149,21,"gold"],[126,27,149,25],[126,30,149,28,"goldReward"],[127,10,150,8],[127,11,150,9],[128,8,151,6],[128,9,151,7],[128,10,151,8],[130,8,153,6],[131,8,154,6],[131,12,154,12,"zoneEnemy"],[131,21,154,21],[131,24,154,24],[132,10,155,8,"id"],[132,12,155,10],[132,14,155,12,"enemy"],[132,19,155,17],[132,20,155,18,"id"],[132,22,155,20],[133,10,156,8,"typeId"],[133,16,156,14],[133,18,156,16],[133,28,156,26],[134,10,156,28],[135,10,157,8,"name"],[135,14,157,12],[135,16,157,14,"enemy"],[135,21,157,19],[135,22,157,20,"name"],[135,26,157,24],[136,10,158,8,"icon"],[136,14,158,12],[136,16,158,14],[136,20,158,18],[137,10,158,20],[138,10,159,8,"hp"],[138,12,159,10],[138,14,159,12],[138,15,159,13],[139,10,159,15],[140,10,160,8,"maxHP"],[140,15,160,13],[140,17,160,15,"enemy"],[140,22,160,20],[140,23,160,21,"maxHealth"],[140,32,160,30],[141,10,161,8,"attack"],[141,16,161,14],[141,18,161,16,"enemy"],[141,23,161,21],[141,24,161,22,"stats"],[141,29,161,27],[141,30,161,28,"attack"],[141,36,161,34],[142,10,162,8,"xp"],[142,12,162,10],[142,14,162,12],[142,16,162,14],[143,10,162,16],[144,10,163,8,"position"],[144,18,163,16],[144,20,163,18,"enemy"],[144,25,163,23],[144,26,163,24,"position"],[145,8,164,6],[145,9,164,7],[146,8,165,6,"recordEnemyKill"],[146,23,165,21],[146,24,165,22,"zoneEnemy"],[146,33,165,31],[146,34,165,32],[147,6,166,4],[147,7,166,5],[147,9,166,7],[147,10,166,8],[147,11,166,9],[147,12,166,10],[147,13,166,11],[148,4,167,2],[148,5,167,3],[148,7,167,5],[148,8,167,6,"game"],[148,12,167,10],[148,13,167,11,"updateNinja"],[148,24,167,22],[148,26,167,24,"recordEnemyKill"],[148,41,167,39],[148,42,167,40],[148,43,167,41],[150,4,169,2],[151,4,170,2],[151,8,170,8,"handleCombatTick"],[151,24,170,24],[151,27,170,27,"React"],[151,32,170,32],[151,33,170,32,"default"],[151,40,170,32],[151,41,170,33,"useCallback"],[151,52,170,44],[151,53,170,45],[151,59,170,51],[152,6,170,51],[152,10,170,51,"_s2"],[152,13,170,51],[152,16,170,51,"$RefreshSig$"],[152,28,170,51],[153,6,171,4,"console"],[153,13,171,11],[153,14,171,12,"log"],[153,17,171,15],[153,18,171,16],[153,87,171,85],[153,88,171,86],[154,6,173,4],[154,10,173,8,"enemiesToKill"],[154,23,173,36],[154,26,173,39],[154,28,173,41],[154,29,173,42],[154,30,173,43],[156,6,175,4,"_s2"],[156,9,175,4],[156,10,175,4,"setCombatState"],[156,24,175,18],[156,25,175,18,"_s2"],[156,28,175,18],[156,29,175,19,"prev"],[156,33,175,23],[156,37,175,27],[157,8,175,27,"_s2"],[157,11,175,27],[158,8,176,6],[158,12,176,12,"newTick"],[158,19,176,19],[158,22,176,22,"combatEngine"],[158,41,176,34],[158,42,176,34,"combatEngine"],[158,54,176,34],[158,55,176,35,"getCurrentTick"],[158,69,176,49],[158,70,176,50],[158,71,176,51],[159,8,177,6],[159,12,177,12,"newState"],[159,20,177,20],[159,23,177,23],[160,10,177,25],[160,13,177,28,"prev"],[160,17,177,32],[161,10,177,34,"currentTick"],[161,21,177,45],[161,23,177,47,"newTick"],[162,8,177,55],[162,9,177,56],[163,8,179,6],[163,12,179,10],[163,13,179,11,"newState"],[163,21,179,19],[163,22,179,20,"isInCombat"],[163,32,179,30],[163,34,179,32],[163,41,179,39,"newState"],[163,49,179,47],[165,8,181,6],[166,8,182,6,"newState"],[166,16,182,14],[166,17,182,15,"abilityManager"],[166,31,182,29],[166,32,182,30,"updateCooldowns"],[166,47,182,45],[166,48,182,46,"newTick"],[166,55,182,53],[166,56,182,54],[168,8,184,6],[169,8,185,6],[169,12,185,12,"effectResults"],[169,25,185,25],[169,28,185,28,"newState"],[169,36,185,36],[169,37,185,37,"statusEffects"],[169,50,185,50],[169,51,185,51,"processTick"],[169,62,185,62],[169,63,185,63,"newTick"],[169,70,185,70],[169,71,185,71],[171,8,187,6],[172,8,188,6,"effectResults"],[172,21,188,19],[172,22,188,20,"forEach"],[172,29,188,27],[172,30,188,28],[172,31,188,29,"results"],[172,38,188,36],[172,40,188,38,"entityId"],[172,48,188,46],[172,53,188,51],[173,10,189,8],[173,14,189,14,"enemyIndex"],[173,24,189,24],[173,27,189,27,"newState"],[173,35,189,35],[173,36,189,36,"enemies"],[173,43,189,43],[173,44,189,44,"findIndex"],[173,53,189,53],[173,54,189,54,"e"],[173,55,189,55],[173,59,189,59,"e"],[173,60,189,60],[173,61,189,61,"id"],[173,63,189,63],[173,68,189,68,"entityId"],[173,76,189,76],[173,77,189,77],[174,10,190,8],[174,14,190,12,"enemyIndex"],[174,24,190,22],[174,28,190,26],[174,29,190,27],[174,31,190,29],[175,12,191,10,"results"],[175,19,191,17],[175,20,191,18,"forEach"],[175,27,191,25],[175,28,191,26,"result"],[175,34,191,32],[175,38,191,36],[176,14,192,12,"newState"],[176,22,192,20],[176,23,192,21,"enemies"],[176,30,192,28],[176,31,192,29,"enemyIndex"],[176,41,192,39],[176,42,192,40],[176,43,192,41,"health"],[176,49,192,47],[176,53,192,51,"result"],[176,59,192,57],[176,60,192,58,"damage"],[176,66,192,64],[177,14,193,12,"newState"],[177,22,193,20],[177,23,193,21,"enemies"],[177,30,193,28],[177,31,193,29,"enemyIndex"],[177,41,193,39],[177,42,193,40],[177,43,193,41,"lastDamaged"],[177,54,193,52],[177,57,193,55,"newTick"],[177,64,193,62],[178,12,194,10],[178,13,194,11],[178,14,194,12],[179,10,195,8],[180,8,196,6],[180,9,196,7],[180,10,196,8],[182,8,198,6],[183,8,199,6,"newState"],[183,16,199,14],[183,17,199,15,"enemies"],[183,24,199,22],[183,25,199,23,"forEach"],[183,32,199,30],[183,33,199,31,"enemy"],[183,38,199,36],[183,42,199,40],[184,10,200,8],[184,14,200,12],[184,15,200,13,"enemy"],[184,20,200,18],[184,21,200,19,"isBoss"],[184,27,200,25],[184,29,200,27],[185,12,200,29],[186,12,201,10],[187,12,202,10],[187,16,202,16,"MOVEMENT_SPEED"],[187,30,202,30],[187,33,202,33],[187,37,202,37],[187,38,202,38],[187,39,202,39],[188,12,203,10],[188,16,203,16,"SCREEN_WIDTH"],[188,28,203,28],[188,31,203,31],[188,34,203,34],[189,12,204,10],[189,16,204,16,"GAME_AREA_HEIGHT"],[189,32,204,32],[189,35,204,35],[189,38,204,38],[189,39,204,39],[189,40,204,40],[190,12,205,10],[190,16,205,16,"ENEMY_SIZE"],[190,26,205,26],[190,29,205,29],[190,31,205,31],[192,12,207,10],[193,12,208,10],[193,16,208,16,"playerX"],[193,23,208,23],[193,26,208,26,"currentNinjaPosition"],[193,46,208,46],[193,47,208,47,"x"],[193,48,208,48],[194,12,209,10],[194,16,209,16,"playerY"],[194,23,209,23],[194,26,209,26,"currentNinjaPosition"],[194,46,209,46],[194,47,209,47,"y"],[194,48,209,48],[196,12,211,10],[197,12,212,10],[197,16,212,16,"deltaX"],[197,22,212,22],[197,25,212,25,"playerX"],[197,32,212,32],[197,35,212,35,"enemy"],[197,40,212,40],[197,41,212,41,"position"],[197,49,212,49],[197,50,212,50,"x"],[197,51,212,51],[198,12,213,10],[198,16,213,16,"deltaY"],[198,22,213,22],[198,25,213,25,"playerY"],[198,32,213,32],[198,35,213,35,"enemy"],[198,40,213,40],[198,41,213,41,"position"],[198,49,213,49],[198,50,213,50,"y"],[198,51,213,51],[199,12,214,10],[199,16,214,16,"distance"],[199,24,214,24],[199,27,214,27,"Math"],[199,31,214,31],[199,32,214,32,"sqrt"],[199,36,214,36],[199,37,214,37,"deltaX"],[199,43,214,43],[199,46,214,46,"deltaX"],[199,52,214,52],[199,55,214,55,"deltaY"],[199,61,214,61],[199,64,214,64,"deltaY"],[199,70,214,70],[199,71,214,71],[201,12,216,10],[202,12,217,10],[202,16,217,14,"distance"],[202,24,217,22],[202,27,217,25],[202,29,217,27],[202,31,217,29],[203,14,218,12],[204,14,219,12],[204,18,219,18,"normalizedX"],[204,29,219,29],[204,32,219,32,"deltaX"],[204,38,219,38],[204,41,219,41,"distance"],[204,49,219,49],[205,14,220,12],[205,18,220,18,"normalizedY"],[205,29,220,29],[205,32,220,32,"deltaY"],[205,38,220,38],[205,41,220,41,"distance"],[205,49,220,49],[207,14,222,12],[208,14,223,12],[208,18,223,18,"randomFactor"],[208,30,223,30],[208,33,223,33],[208,36,223,36],[208,37,223,37],[208,38,223,38],[209,14,224,12],[209,18,224,18,"finalX"],[209,24,224,24],[209,27,224,27,"normalizedX"],[209,38,224,38],[209,41,224,41],[209,42,224,42,"Math"],[209,46,224,46],[209,47,224,47,"random"],[209,53,224,53],[209,54,224,54],[209,55,224,55],[209,58,224,58],[209,61,224,61],[209,65,224,65,"randomFactor"],[209,77,224,77],[210,14,225,12],[210,18,225,18,"finalY"],[210,24,225,24],[210,27,225,27,"normalizedY"],[210,38,225,38],[210,41,225,41],[210,42,225,42,"Math"],[210,46,225,46],[210,47,225,47,"random"],[210,53,225,53],[210,54,225,54],[210,55,225,55],[210,58,225,58],[210,61,225,61],[210,65,225,65,"randomFactor"],[210,77,225,77],[212,14,227,12],[213,14,228,12],[213,18,228,16,"newX"],[213,22,228,20],[213,25,228,23,"enemy"],[213,30,228,28],[213,31,228,29,"position"],[213,39,228,37],[213,40,228,38,"x"],[213,41,228,39],[213,44,228,43,"finalX"],[213,50,228,49],[213,53,228,52,"MOVEMENT_SPEED"],[213,67,228,67],[214,14,229,12],[214,18,229,16,"newY"],[214,22,229,20],[214,25,229,23,"enemy"],[214,30,229,28],[214,31,229,29,"position"],[214,39,229,37],[214,40,229,38,"y"],[214,41,229,39],[214,44,229,43,"finalY"],[214,50,229,49],[214,53,229,52,"MOVEMENT_SPEED"],[214,67,229,67],[216,14,231,12],[217,14,232,12,"newX"],[217,18,232,16],[217,21,232,19,"Math"],[217,25,232,23],[217,26,232,24,"max"],[217,29,232,27],[217,30,232,28],[217,31,232,29],[217,33,232,31,"Math"],[217,37,232,35],[217,38,232,36,"min"],[217,41,232,39],[217,42,232,40,"SCREEN_WIDTH"],[217,54,232,52],[217,57,232,55,"ENEMY_SIZE"],[217,67,232,65],[217,69,232,67,"newX"],[217,73,232,71],[217,74,232,72],[217,75,232,73],[218,14,233,12,"newY"],[218,18,233,16],[218,21,233,19,"Math"],[218,25,233,23],[218,26,233,24,"max"],[218,29,233,27],[218,30,233,28],[218,31,233,29],[218,33,233,31,"Math"],[218,37,233,35],[218,38,233,36,"min"],[218,41,233,39],[218,42,233,40,"GAME_AREA_HEIGHT"],[218,58,233,56],[218,61,233,59,"ENEMY_SIZE"],[218,71,233,69],[218,73,233,71,"newY"],[218,77,233,75],[218,78,233,76],[218,79,233,77],[220,14,235,12],[221,14,236,12,"enemy"],[221,19,236,17],[221,20,236,18,"position"],[221,28,236,26],[221,29,236,27,"x"],[221,30,236,28],[221,33,236,31,"newX"],[221,37,236,35],[222,14,237,12,"enemy"],[222,19,237,17],[222,20,237,18,"position"],[222,28,237,26],[222,29,237,27,"y"],[222,30,237,28],[222,33,237,31,"newY"],[222,37,237,35],[223,12,238,10],[224,12,239,10],[225,10,240,8],[226,8,241,6],[226,9,241,7],[226,10,241,8],[228,8,243,6],[229,8,244,6],[229,12,244,10],[229,13,244,11,"isManualControlActive"],[229,34,244,32],[229,36,244,34],[230,10,245,8],[230,15,245,13],[230,19,245,17,"i"],[230,20,245,18],[230,23,245,21],[230,24,245,22],[230,26,245,24,"i"],[230,27,245,25],[230,30,245,28],[230,31,245,29],[230,33,245,31,"i"],[230,34,245,32],[230,36,245,34],[230,38,245,36],[231,12,246,10],[231,16,246,14,"newState"],[231,24,246,22],[231,25,246,23,"abilityManager"],[231,39,246,37],[231,40,246,38,"isAbilityReady"],[231,54,246,52],[231,55,246,53,"i"],[231,56,246,54],[231,57,246,55],[231,61,246,59,"newState"],[231,69,246,67],[231,70,246,68,"enemies"],[231,77,246,75],[231,78,246,76,"length"],[231,84,246,82],[231,87,246,85],[231,88,246,86],[231,90,246,88],[232,14,247,12],[232,18,247,16,"newState"],[232,26,247,24],[232,27,247,25,"abilityManager"],[232,41,247,39],[232,42,247,40,"useAbility"],[232,52,247,50],[232,53,247,51,"i"],[232,54,247,52],[232,56,247,54,"newTick"],[232,63,247,61],[232,64,247,62],[232,66,247,64],[233,16,248,14,"castAbility"],[233,27,248,25],[233,28,248,26,"newState"],[233,36,248,34],[233,38,248,36,"i"],[233,39,248,37],[233,40,248,38],[234,14,249,12],[235,12,250,10],[236,10,251,8],[237,8,252,6],[239,8,254,6],[240,8,255,6],[240,12,255,12,"deadEnemies"],[240,23,255,23],[240,26,255,26,"newState"],[240,34,255,34],[240,35,255,35,"enemies"],[240,42,255,42],[240,43,255,43,"filter"],[240,49,255,49],[240,50,255,50,"enemy"],[240,55,255,55],[240,59,255,59,"enemy"],[240,64,255,64],[240,65,255,65,"health"],[240,71,255,71],[240,75,255,75],[240,76,255,76],[240,77,255,77],[241,8,256,6,"enemiesToKill"],[241,21,256,19],[241,24,256,22],[241,25,256,23],[241,28,256,26,"deadEnemies"],[241,39,256,37],[241,40,256,38],[241,41,256,39],[241,42,256,40],[243,8,258,6],[244,8,259,6],[244,12,259,10,"deadEnemies"],[244,23,259,21],[244,24,259,22,"length"],[244,30,259,28],[244,33,259,31],[244,34,259,32],[244,36,259,34],[245,10,260,8,"console"],[245,17,260,15],[245,18,260,16,"log"],[245,21,260,19],[245,22,260,20],[245,49,260,47,"deadEnemies"],[245,60,260,58],[245,61,260,59,"length"],[245,67,260,65],[245,83,260,81],[245,85,260,83,"deadEnemies"],[245,96,260,94],[245,97,260,95,"map"],[245,100,260,98],[245,101,260,99,"e"],[245,102,260,100],[245,106,260,104],[245,109,260,107,"e"],[245,110,260,108],[245,111,260,109,"id"],[245,113,260,111],[245,117,260,115,"e"],[245,118,260,116],[245,119,260,117,"health"],[245,125,260,123],[245,130,260,128],[245,131,260,129],[245,132,260,130],[246,8,261,6],[248,8,263,6],[249,8,264,6],[249,12,264,12,"lowHealthEnemies"],[249,28,264,28],[249,31,264,31,"newState"],[249,39,264,39],[249,40,264,40,"enemies"],[249,47,264,47],[249,48,264,48,"filter"],[249,54,264,54],[249,55,264,55,"enemy"],[249,60,264,60],[249,64,264,64,"enemy"],[249,69,264,69],[249,70,264,70,"health"],[249,76,264,76],[249,80,264,80],[249,82,264,82],[249,86,264,86,"enemy"],[249,91,264,91],[249,92,264,92,"health"],[249,98,264,98],[249,101,264,101],[249,102,264,102],[249,103,264,103],[250,8,265,6],[250,12,265,10,"lowHealthEnemies"],[250,28,265,26],[250,29,265,27,"length"],[250,35,265,33],[250,38,265,36],[250,39,265,37],[250,41,265,39],[251,10,266,8,"console"],[251,17,266,15],[251,18,266,16,"log"],[251,21,266,19],[251,22,266,20],[251,61,266,59],[251,63,266,61,"lowHealthEnemies"],[251,79,266,77],[251,80,266,78,"map"],[251,83,266,81],[251,84,266,82,"e"],[251,85,266,83],[251,89,266,87],[251,92,266,90,"e"],[251,93,266,91],[251,94,266,92,"id"],[251,96,266,94],[251,100,266,98,"e"],[251,101,266,99],[251,102,266,100,"health"],[251,108,266,106],[251,112,266,110,"e"],[251,113,266,111],[251,114,266,112,"maxHealth"],[251,123,266,121],[251,128,266,126],[251,129,266,127],[251,130,266,128],[252,8,267,6],[254,8,269,6],[255,8,270,6],[255,12,270,12,"beforeCount"],[255,23,270,23],[255,26,270,26,"newState"],[255,34,270,34],[255,35,270,35,"enemies"],[255,42,270,42],[255,43,270,43,"length"],[255,49,270,49],[256,8,271,6,"newState"],[256,16,271,14],[256,17,271,15,"enemies"],[256,24,271,22],[256,27,271,25,"newState"],[256,35,271,33],[256,36,271,34,"enemies"],[256,43,271,41],[256,44,271,42,"filter"],[256,50,271,48],[256,51,271,49,"enemy"],[256,56,271,54],[256,60,271,58,"enemy"],[256,65,271,63],[256,66,271,64,"health"],[256,72,271,70],[256,75,271,73],[256,76,271,74],[256,77,271,75],[257,8,272,6],[257,12,272,12,"afterCount"],[257,22,272,22],[257,25,272,25,"newState"],[257,33,272,33],[257,34,272,34,"enemies"],[257,41,272,41],[257,42,272,42,"length"],[257,48,272,48],[258,8,274,6],[258,12,274,10,"beforeCount"],[258,23,274,21],[258,28,274,26,"afterCount"],[258,38,274,36],[258,40,274,38],[259,10,275,8,"console"],[259,17,275,15],[259,18,275,16,"log"],[259,21,275,19],[259,22,275,20],[259,52,275,50,"beforeCount"],[259,63,275,61],[259,66,275,64,"afterCount"],[259,76,275,74],[259,102,275,100],[259,103,275,101],[260,8,276,6],[262,8,278,6],[263,8,279,6],[264,8,280,6],[264,12,280,12,"MAX_ENEMIES"],[264,23,280,23],[264,26,280,26],[264,28,280,28],[265,8,281,6],[265,12,281,12,"MIN_SPAWN_DELAY"],[265,27,281,27],[265,30,281,30],[265,33,281,33],[265,34,281,34],[265,35,281,35],[266,8,282,6],[266,12,282,12,"now"],[266,15,282,15],[266,18,282,18,"Date"],[266,22,282,22],[266,23,282,23,"now"],[266,26,282,26],[266,27,282,27],[266,28,282,28],[267,8,283,6],[267,12,283,12,"hasBoss"],[267,19,283,19],[267,22,283,22,"newState"],[267,30,283,30],[267,31,283,31,"enemies"],[267,38,283,38],[267,39,283,39,"some"],[267,43,283,43],[267,44,283,44,"enemy"],[267,49,283,49],[267,53,283,53,"enemy"],[267,58,283,58],[267,59,283,59,"isBoss"],[267,65,283,65],[267,66,283,66],[269,8,285,6],[270,8,286,6],[270,12,286,10],[270,13,286,11,"newState"],[270,21,286,19],[270,22,286,20,"lastSpawnTime"],[270,35,286,33],[270,37,286,35],[271,10,287,8,"newState"],[271,18,287,16],[271,19,287,17,"lastSpawnTime"],[271,32,287,30],[271,35,287,33,"now"],[271,38,287,36],[272,8,288,6],[273,8,290,6,"console"],[273,15,290,13],[273,16,290,14,"log"],[273,19,290,17],[273,20,290,18],[273,53,290,51,"newState"],[273,61,290,59],[273,62,290,60,"enemies"],[273,69,290,67],[273,70,290,68,"length"],[273,76,290,74],[273,85,290,83,"MAX_ENEMIES"],[273,96,290,94],[273,109,290,107,"hasBoss"],[273,116,290,114],[273,118,290,116],[273,119,290,117],[275,8,292,6],[276,8,293,6],[276,12,293,10],[276,13,293,11,"hasBoss"],[276,20,293,18],[276,24,293,22,"newState"],[276,32,293,30],[276,33,293,31,"enemies"],[276,40,293,38],[276,41,293,39,"length"],[276,47,293,45],[276,50,293,48,"MAX_ENEMIES"],[276,61,293,59],[276,65,293,64,"now"],[276,68,293,67],[276,71,293,70,"newState"],[276,79,293,78],[276,80,293,79,"lastSpawnTime"],[276,93,293,92],[276,97,293,97,"MIN_SPAWN_DELAY"],[276,112,293,112],[276,114,293,114],[277,10,294,8,"console"],[277,17,294,15],[277,18,294,16,"log"],[277,21,294,19],[277,22,294,20],[277,43,294,41,"newState"],[277,51,294,49],[277,52,294,50,"enemies"],[277,59,294,57],[277,60,294,58,"length"],[277,66,294,64],[277,69,294,67],[277,70,294,68],[277,74,294,72,"MAX_ENEMIES"],[277,85,294,83],[277,87,294,85],[277,88,294,86],[278,10,295,8,"spawnTestEnemy"],[278,24,295,22],[278,25,295,23,"newState"],[278,33,295,31],[278,34,295,32],[279,10,296,8,"newState"],[279,18,296,16],[279,19,296,17,"lastSpawnTime"],[279,32,296,30],[279,35,296,33,"now"],[279,38,296,36],[280,8,297,6],[281,8,299,6],[281,15,299,13,"newState"],[281,23,299,21],[282,6,300,4],[282,7,300,5],[282,47,300,6],[284,6,302,4],[285,6,303,4,"console"],[285,13,303,11],[285,14,303,12,"log"],[285,17,303,15],[285,18,303,16],[285,50,303,48,"enemiesToKill"],[285,63,303,61],[285,64,303,62,"length"],[285,70,303,68],[285,101,303,99],[285,102,303,100],[286,6,305,4,"enemiesToKill"],[286,19,305,17],[286,20,305,18,"forEach"],[286,27,305,25],[286,28,305,26],[286,29,305,27,"enemy"],[286,34,305,32],[286,36,305,34,"index"],[286,41,305,39],[286,46,305,44],[287,8,306,6,"console"],[287,15,306,13],[287,16,306,14,"log"],[287,19,306,17],[287,20,306,18],[287,57,306,55,"index"],[287,62,306,60],[287,65,306,63],[287,66,306,64],[287,70,306,68,"enemiesToKill"],[287,83,306,81],[287,84,306,82,"length"],[287,90,306,88],[287,104,306,102,"enemy"],[287,109,306,107],[287,110,306,108,"id"],[287,112,306,110],[287,114,306,112],[287,115,306,113],[288,8,307,6,"handleEnemyKill"],[288,23,307,21],[288,24,307,22,"enemy"],[288,29,307,27],[288,30,307,28],[289,6,308,4],[289,7,308,5],[289,8,308,6],[290,4,309,2],[290,5,309,3],[290,7,309,5],[290,8,309,6,"handleEnemyKill"],[290,23,309,21],[290,24,309,22],[290,25,309,23],[290,26,309,24],[290,27,309,25],[292,4,311,2],[293,4,312,2],[293,8,312,8,"findClosestEnemyInternal"],[293,32,312,32],[293,35,312,36,"enemies"],[293,42,312,58],[293,46,312,83],[294,6,313,4],[294,10,313,8,"enemies"],[294,17,313,15],[294,18,313,16,"length"],[294,24,313,22],[294,29,313,27],[294,30,313,28],[294,32,313,30],[294,39,313,37],[294,43,313,41],[296,6,315,4],[297,6,316,4],[297,10,316,10,"SCREEN_WIDTH"],[297,22,316,22],[297,25,316,25],[297,28,316,28],[298,6,317,4],[298,10,317,10,"GAME_AREA_HEIGHT"],[298,26,317,26],[298,29,317,29],[298,32,317,32],[298,35,317,35],[298,38,317,38],[298,39,317,39],[298,40,317,40],[299,6,318,4],[299,10,318,10,"ninjaX"],[299,16,318,16],[299,19,318,19,"SCREEN_WIDTH"],[299,31,318,31],[299,34,318,34],[299,35,318,35],[300,6,319,4],[300,10,319,10,"ninjaY"],[300,16,319,16],[300,19,319,19,"GAME_AREA_HEIGHT"],[300,35,319,35],[300,38,319,38],[300,39,319,39],[301,6,321,4],[301,10,321,8,"closestEnemy"],[301,22,321,20],[301,25,321,23,"enemies"],[301,32,321,30],[301,33,321,31],[301,34,321,32],[301,35,321,33],[302,6,322,4],[302,10,322,8,"closestDistance"],[302,25,322,23],[302,28,322,26,"Infinity"],[302,36,322,34],[303,6,324,4,"enemies"],[303,13,324,11],[303,14,324,12,"forEach"],[303,21,324,19],[303,22,324,20,"enemy"],[303,27,324,25],[303,31,324,29],[304,8,325,6],[304,12,325,12,"distance"],[304,20,325,20],[304,23,325,23,"Math"],[304,27,325,27],[304,28,325,28,"sqrt"],[304,32,325,32],[304,33,326,8,"Math"],[304,37,326,12],[304,38,326,13,"pow"],[304,41,326,16],[304,42,326,17,"enemy"],[304,47,326,22],[304,48,326,23,"position"],[304,56,326,31],[304,57,326,32,"x"],[304,58,326,33],[304,61,326,36,"ninjaX"],[304,67,326,42],[304,69,326,44],[304,70,326,45],[304,71,326,46],[304,74,327,8,"Math"],[304,78,327,12],[304,79,327,13,"pow"],[304,82,327,16],[304,83,327,17,"enemy"],[304,88,327,22],[304,89,327,23,"position"],[304,97,327,31],[304,98,327,32,"y"],[304,99,327,33],[304,102,327,36,"ninjaY"],[304,108,327,42],[304,110,327,44],[304,111,327,45],[304,112,328,6],[304,113,328,7],[305,8,330,6],[305,12,330,10,"distance"],[305,20,330,18],[305,23,330,21,"closestDistance"],[305,38,330,36],[305,40,330,38],[306,10,331,8,"closestDistance"],[306,25,331,23],[306,28,331,26,"distance"],[306,36,331,34],[307,10,332,8,"closestEnemy"],[307,22,332,20],[307,25,332,23,"enemy"],[307,30,332,28],[308,8,333,6],[309,6,334,4],[309,7,334,5],[309,8,334,6],[310,6,336,4,"console"],[310,13,336,11],[310,14,336,12,"log"],[310,17,336,15],[310,18,336,16],[310,60,336,58,"closestDistance"],[310,75,336,73],[310,76,336,74,"toFixed"],[310,83,336,81],[310,84,336,82],[310,85,336,83],[310,86,336,84],[310,88,336,86],[310,89,336,87],[311,6,337,4],[311,13,337,11,"closestEnemy"],[311,25,337,23],[312,4,338,2],[312,5,338,3],[314,4,340,2],[315,4,341,2],[315,8,341,8,"findClosestEnemy"],[315,24,341,24],[315,27,341,27,"findClosestEnemy"],[315,28,341,27],[315,33,341,53],[316,6,342,4],[316,13,342,11,"findClosestEnemyInternal"],[316,37,342,35],[316,38,342,36,"combatState"],[316,49,342,47],[316,50,342,48,"enemies"],[316,57,342,55],[316,58,342,56],[317,4,343,2],[317,5,343,3],[319,4,345,2],[320,4,346,2],[320,8,346,2,"_useState7"],[320,18,346,2],[320,21,346,58],[320,25,346,58,"useState"],[320,31,346,66],[320,32,346,66,"useState"],[320,40,346,66],[320,42,346,91],[321,8,346,93,"x"],[321,9,346,94],[321,11,346,96],[321,12,346,97],[322,8,346,99,"y"],[322,9,346,100],[322,11,346,102],[323,6,346,104],[323,7,346,105],[323,8,346,106],[324,6,346,106,"_useState8"],[324,16,346,106],[324,23,346,106,"_slicedToArray"],[324,37,346,106],[324,38,346,106,"default"],[324,45,346,106],[324,47,346,106,"_useState7"],[324,57,346,106],[325,6,346,9,"currentNinjaPosition"],[325,26,346,29],[325,29,346,29,"_useState8"],[325,39,346,29],[326,6,346,31,"setCurrentNinjaPosition"],[326,29,346,54],[326,32,346,54,"_useState8"],[326,42,346,54],[327,4,347,2],[327,8,347,2,"_useState9"],[327,18,347,2],[327,21,347,60],[327,25,347,60,"useState"],[327,31,347,68],[327,32,347,68,"useState"],[327,40,347,68],[327,42,347,69],[327,47,347,74],[327,48,347,75],[328,6,347,75,"_useState0"],[328,16,347,75],[328,23,347,75,"_slicedToArray"],[328,37,347,75],[328,38,347,75,"default"],[328,45,347,75],[328,47,347,75,"_useState9"],[328,57,347,75],[329,6,347,9,"isManualControlActive"],[329,27,347,30],[329,30,347,30,"_useState0"],[329,40,347,30],[330,6,347,32,"setIsManualControlActive"],[330,30,347,56],[330,33,347,56,"_useState0"],[330,43,347,56],[332,4,349,2],[333,4,350,2],[333,8,350,8,"updateNinjaPosition"],[333,27,350,27],[333,30,350,30],[333,34,350,30,"useCallback"],[333,40,350,41],[333,41,350,41,"useCallback"],[333,52,350,41],[333,54,350,43,"newPosition"],[333,65,350,78],[333,69,350,83],[334,6,351,4,"setCurrentNinjaPosition"],[334,29,351,27],[334,30,351,28,"newPosition"],[334,41,351,39],[334,42,351,40],[335,4,352,2],[335,5,352,3],[335,7,352,5],[335,9,352,7],[335,10,352,8],[337,4,354,2],[338,4,355,2],[338,8,355,8,"setManualControlActive"],[338,30,355,30],[338,33,355,33],[338,37,355,33,"useCallback"],[338,43,355,44],[338,44,355,44,"useCallback"],[338,55,355,44],[338,57,355,46,"active"],[338,63,355,61],[338,67,355,66],[339,6,356,4,"setIsManualControlActive"],[339,30,356,28],[339,31,356,29,"active"],[339,37,356,35],[339,38,356,36],[340,6,357,4,"console"],[340,13,357,11],[340,14,357,12,"log"],[340,17,357,15],[340,18,357,16],[340,39,357,37,"active"],[340,45,357,43],[340,48,357,46],[340,59,357,57],[340,62,357,60],[340,75,357,73],[340,88,357,86,"active"],[340,94,357,92],[340,97,357,95],[340,105,357,103],[340,108,357,106],[340,117,357,115],[340,119,357,117],[340,120,357,118],[341,4,358,2],[341,5,358,3],[341,7,358,5],[341,9,358,7],[341,10,358,8],[343,4,360,2],[344,4,361,2],[344,8,361,8,"handleProjectileHit"],[344,27,361,27],[344,30,361,31,"projectile"],[344,40,361,59],[344,44,361,64],[345,6,362,4,"console"],[345,13,362,11],[345,14,362,12,"log"],[345,17,362,15],[345,18,362,16],[345,35,362,33,"projectile"],[345,45,362,43],[345,46,362,44,"id"],[345,48,362,46],[345,62,362,60,"projectile"],[345,72,362,70],[345,73,362,71,"targetEnemyId"],[345,86,362,84],[345,94,362,92,"projectile"],[345,104,362,102],[345,105,362,103,"damage"],[345,111,362,109],[345,120,362,118],[345,121,362,119],[346,6,364,4,"setCombatState"],[346,20,364,18],[346,21,364,19,"prev"],[346,25,364,23],[346,29,364,27],[347,8,365,6],[347,12,365,12,"newState"],[347,20,365,20],[347,23,365,23],[348,10,365,25],[348,13,365,28,"prev"],[349,8,365,33],[349,9,365,34],[351,8,367,6],[352,8,368,6],[352,12,368,12,"enemyIndex"],[352,22,368,22],[352,25,368,25,"newState"],[352,33,368,33],[352,34,368,34,"enemies"],[352,41,368,41],[352,42,368,42,"findIndex"],[352,51,368,51],[352,52,368,52,"e"],[352,53,368,53],[352,57,368,57,"e"],[352,58,368,58],[352,59,368,59,"id"],[352,61,368,61],[352,66,368,66,"projectile"],[352,76,368,76],[352,77,368,77,"targetEnemyId"],[352,90,368,90],[352,91,368,91],[353,8,369,6],[353,12,369,10,"enemyIndex"],[353,22,369,20],[353,26,369,24],[353,27,369,25],[353,29,369,27],[354,10,370,8,"newState"],[354,18,370,16],[354,19,370,17,"enemies"],[354,26,370,24],[354,29,370,27],[354,30,370,28],[354,33,370,31,"newState"],[354,41,370,39],[354,42,370,40,"enemies"],[354,49,370,47],[354,50,370,48],[355,10,371,8,"newState"],[355,18,371,16],[355,19,371,17,"enemies"],[355,26,371,24],[355,27,371,25,"enemyIndex"],[355,37,371,35],[355,38,371,36],[355,41,371,39],[356,12,372,10],[356,15,372,13,"newState"],[356,23,372,21],[356,24,372,22,"enemies"],[356,31,372,29],[356,32,372,30,"enemyIndex"],[356,42,372,40],[356,43,372,41],[357,12,373,10,"health"],[357,18,373,16],[357,20,373,18,"newState"],[357,28,373,26],[357,29,373,27,"enemies"],[357,36,373,34],[357,37,373,35,"enemyIndex"],[357,47,373,45],[357,48,373,46],[357,49,373,47,"health"],[357,55,373,53],[357,58,373,56,"projectile"],[357,68,373,66],[357,69,373,67,"damage"],[357,75,373,73],[358,12,374,10,"lastDamaged"],[358,23,374,21],[358,25,374,23,"combatEngine"],[358,44,374,35],[358,45,374,35,"combatEngine"],[358,57,374,35],[358,58,374,36,"getCurrentTick"],[358,72,374,50],[358,73,374,51],[359,10,375,8],[359,11,375,9],[360,10,377,8,"console"],[360,17,377,15],[360,18,377,16,"log"],[360,21,377,19],[360,22,377,20],[360,34,377,32,"projectile"],[360,44,377,42],[360,45,377,43,"targetEnemyId"],[360,58,377,56],[360,70,377,68,"newState"],[360,78,377,76],[360,79,377,77,"enemies"],[360,86,377,84],[360,87,377,85,"enemyIndex"],[360,97,377,95],[360,98,377,96],[360,99,377,97,"health"],[360,105,377,103],[360,109,377,107,"newState"],[360,117,377,115],[360,118,377,116,"enemies"],[360,125,377,123],[360,126,377,124,"enemyIndex"],[360,136,377,134],[360,137,377,135],[360,138,377,136,"maxHealth"],[360,147,377,145],[360,149,377,147],[360,150,377,148],[361,8,378,6],[362,8,380,6],[362,15,380,13,"newState"],[362,23,380,21],[363,6,381,4],[363,7,381,5],[363,8,381,6],[365,6,383,4],[366,6,384,4,"setProjectiles"],[366,20,384,18],[366,21,384,19,"prev"],[366,25,384,23],[366,29,384,27,"prev"],[366,33,384,31],[366,34,384,32,"filter"],[366,40,384,38],[366,41,384,39,"p"],[366,42,384,40],[366,46,384,44,"p"],[366,47,384,45],[366,48,384,46,"id"],[366,50,384,48],[366,55,384,53,"projectile"],[366,65,384,63],[366,66,384,64,"id"],[366,68,384,66],[366,69,384,67],[366,70,384,68],[367,4,385,2],[367,5,385,3],[369,4,387,2],[370,4,388,2],[370,8,388,8,"castAbility"],[370,19,388,19],[370,22,388,22,"castAbility"],[370,23,388,23,"state"],[370,28,388,41],[370,30,388,43,"slotIndex"],[370,39,388,60],[370,44,388,65],[371,6,389,4],[371,10,389,10,"deck"],[371,14,389,14],[371,17,389,17,"state"],[371,22,389,22],[371,23,389,23,"abilityManager"],[371,37,389,37],[371,38,389,38,"getDeck"],[371,45,389,45],[371,46,389,46],[371,47,389,47],[372,6,390,4],[372,10,390,10,"ability"],[372,17,390,17],[372,20,390,20,"deck"],[372,24,390,24],[372,25,390,25,"slots"],[372,30,390,30],[372,31,390,31,"slotIndex"],[372,40,390,40],[372,41,390,41],[373,6,391,4],[373,10,391,8],[373,11,391,9,"ability"],[373,18,391,16],[373,20,391,18],[375,6,393,4],[376,6,394,4],[376,10,394,10,"target"],[376,16,394,16],[376,19,394,19,"findClosestEnemyInternal"],[376,43,394,43],[376,44,394,44,"state"],[376,49,394,49],[376,50,394,50,"enemies"],[376,57,394,57],[376,58,394,58],[377,6,395,4],[377,10,395,8],[377,11,395,9,"target"],[377,17,395,15],[377,19,395,17],[379,6,397,4],[380,6,398,4],[380,10,398,8,"damage"],[380,16,398,14],[380,19,398,17,"ability"],[380,26,398,24],[380,27,398,25,"stats"],[380,32,398,30],[380,33,398,31,"baseDamage"],[380,43,398,41],[382,6,400,4],[383,6,401,4,"deck"],[383,10,401,8],[383,11,401,9,"activeSynergies"],[383,26,401,24],[383,27,401,25,"forEach"],[383,34,401,32],[383,35,401,33,"synergy"],[383,42,401,40],[383,46,401,44],[384,8,402,6],[384,12,402,10,"synergy"],[384,19,402,17],[384,20,402,18,"bonus"],[384,25,402,23],[384,26,402,24,"damageBonus"],[384,37,402,35],[384,41,403,10,"synergy"],[384,48,403,17],[384,49,403,18,"requiredTags"],[384,61,403,30],[384,62,403,31,"some"],[384,66,403,35],[384,67,403,36,"tag"],[384,70,403,39],[384,74,403,43,"ability"],[384,81,403,50],[384,82,403,51,"tags"],[384,86,403,55],[384,87,403,56,"includes"],[384,95,403,64],[384,96,403,65,"tag"],[384,99,403,68],[384,100,403,69],[384,101,403,70],[384,103,403,72],[385,10,404,8,"damage"],[385,16,404,14],[385,20,404,19],[385,21,404,20],[385,24,404,23,"synergy"],[385,31,404,30],[385,32,404,31,"bonus"],[385,37,404,36],[385,38,404,37,"damageBonus"],[385,49,404,48],[385,52,404,51],[385,55,404,55],[386,8,405,6],[387,6,406,4],[387,7,406,5],[387,8,406,6],[389,6,408,4],[390,6,409,4],[390,10,409,10,"damageResult"],[390,22,409,22],[390,25,409,25,"DamageCalculator"],[390,44,409,41],[390,45,409,41,"DamageCalculator"],[390,61,409,41],[390,62,409,42,"calculateDamage"],[390,77,409,57],[390,78,409,58,"damage"],[390,84,409,64],[390,86,409,66,"state"],[390,91,409,71],[390,92,409,72,"playerStats"],[390,103,409,83],[390,105,409,85,"target"],[390,111,409,91],[390,112,409,92,"stats"],[390,117,409,97],[390,118,409,98],[392,6,411,4],[393,6,412,4,"createProjectile"],[393,22,412,20],[393,23,412,21,"target"],[393,29,412,27],[393,31,412,29,"damageResult"],[393,43,412,41],[393,44,412,42,"damage"],[393,50,412,48],[393,52,412,50,"currentNinjaPosition"],[393,72,412,70],[393,74,412,72],[394,8,413,6,"id"],[394,10,413,8],[394,12,413,10,"ability"],[394,19,413,17],[394,20,413,18,"id"],[394,22,413,20],[395,8,414,6,"name"],[395,12,414,10],[395,14,414,12,"ability"],[395,21,414,19],[395,22,414,20,"name"],[395,26,414,24],[396,8,415,6,"icon"],[396,12,415,10],[396,14,415,12,"ability"],[396,21,415,19],[396,22,415,20,"icon"],[397,6,416,4],[397,7,416,5],[397,8,416,6],[399,6,418,4],[400,6,419,4],[400,10,419,8,"ability"],[400,17,419,15],[400,18,419,16,"effects"],[400,25,419,23],[400,26,419,24,"includes"],[400,34,419,32],[400,35,419,33],[400,40,419,38],[400,41,419,39],[400,45,419,43,"ability"],[400,52,419,50],[400,53,419,51,"stats"],[400,58,419,56],[400,59,419,57,"duration"],[400,67,419,65],[400,69,419,67],[401,8,420,6,"state"],[401,13,420,11],[401,14,420,12,"statusEffects"],[401,27,420,25],[401,28,420,26,"addEffect"],[401,37,420,35],[401,38,420,36,"target"],[401,44,420,42],[401,45,420,43,"id"],[401,47,420,45],[401,49,420,47],[402,10,421,8,"id"],[402,12,421,10],[402,14,421,12],[402,17,421,15,"ability"],[402,24,421,22],[402,25,421,23,"id"],[402,27,421,25],[402,33,421,31],[403,10,422,8,"type"],[403,14,422,12],[403,16,422,14],[403,21,422,19],[404,10,423,8,"remainingTicks"],[404,24,423,22],[404,26,423,24,"Math"],[404,30,423,28],[404,31,423,29,"floor"],[404,36,423,34],[404,37,423,35,"ability"],[404,44,423,42],[404,45,423,43,"stats"],[404,50,423,48],[404,51,423,49,"duration"],[404,59,423,57],[404,62,423,60],[404,64,423,62],[404,65,423,63],[405,10,423,65],[406,10,424,8,"tickInterval"],[406,22,424,20],[406,24,424,22],[406,26,424,24],[407,10,424,26],[408,10,425,8,"lastTick"],[408,18,425,16],[408,20,425,18,"state"],[408,25,425,23],[408,26,425,24,"currentTick"],[408,37,425,35],[409,10,426,8,"value"],[409,15,426,13],[409,17,426,15,"Math"],[409,21,426,19],[409,22,426,20,"floor"],[409,27,426,25],[409,28,426,26,"damage"],[409,34,426,32],[409,37,426,35],[409,40,426,38],[409,41,426,39],[410,10,426,41],[411,10,427,8,"stackable"],[411,19,427,17],[411,21,427,19],[412,8,428,6],[412,9,428,7],[412,10,428,8],[413,6,429,4],[414,6,431,4,"console"],[414,13,431,11],[414,14,431,12,"log"],[414,17,431,15],[414,18,431,16],[414,24,431,22,"ability"],[414,31,431,29],[414,32,431,30,"name"],[414,36,431,34],[414,69,431,67,"damageResult"],[414,81,431,79],[414,82,431,80,"damage"],[414,88,431,86],[414,98,431,96,"damageResult"],[414,110,431,108],[414,111,431,109,"isCritical"],[414,121,431,119],[414,124,431,122],[414,134,431,132],[414,137,431,135],[414,139,431,137],[414,141,431,139],[414,142,431,140],[415,4,432,2],[415,5,432,3],[417,4,434,2],[418,4,435,2],[418,8,435,8,"createProjectile"],[418,24,435,24],[418,27,435,27,"createProjectile"],[418,28,435,28,"targetEnemy"],[418,39,435,52],[418,41,435,54,"damage"],[418,47,435,68],[418,49,435,70,"ninjaPos"],[418,57,435,103],[418,59,435,105,"abilityInfo"],[418,70,435,159],[418,75,435,164],[419,6,436,4],[419,10,436,10,"SCREEN_WIDTH"],[419,22,436,22],[419,25,436,25],[419,28,436,28],[420,6,437,4],[420,10,437,10,"GAME_AREA_HEIGHT"],[420,26,437,26],[420,29,437,29],[420,32,437,32],[420,35,437,35],[420,38,437,38],[420,39,437,39],[420,40,437,40],[421,6,438,4],[421,10,438,10,"NINJA_SIZE"],[421,20,438,20],[421,23,438,23],[421,25,438,25],[423,6,440,4],[424,6,441,4],[424,10,441,10,"ninjaX"],[424,16,441,16],[424,19,441,19,"ninjaPos"],[424,27,441,27],[424,30,441,30,"ninjaPos"],[424,38,441,38],[424,39,441,39,"x"],[424,40,441,40],[424,43,441,43,"NINJA_SIZE"],[424,53,441,53],[424,56,441,56],[424,57,441,57],[424,60,441,60,"SCREEN_WIDTH"],[424,72,441,72],[424,75,441,75],[424,76,441,76],[425,6,442,4],[425,10,442,10,"ninjaY"],[425,16,442,16],[425,19,442,19,"ninjaPos"],[425,27,442,27],[425,30,442,30,"ninjaPos"],[425,38,442,38],[425,39,442,39,"y"],[425,40,442,40],[425,43,442,43,"NINJA_SIZE"],[425,53,442,53],[425,56,442,56],[425,57,442,57],[425,60,442,60,"GAME_AREA_HEIGHT"],[425,76,442,76],[425,79,442,79],[425,80,442,80],[426,6,443,4],[426,10,443,10,"ENEMY_SIZE"],[426,20,443,20],[426,23,443,23],[426,25,443,25],[427,6,445,4],[427,10,445,10,"projectile"],[427,20,445,38],[427,23,445,41],[428,8,446,6,"id"],[428,10,446,8],[428,12,446,10],[428,20,446,18,"Date"],[428,24,446,22],[428,25,446,23,"now"],[428,28,446,26],[428,29,446,27],[428,30,446,28],[428,34,446,32,"Math"],[428,38,446,36],[428,39,446,37,"random"],[428,45,446,43],[428,46,446,44],[428,47,446,45],[428,49,446,47],[429,8,447,6,"x"],[429,9,447,7],[429,11,447,9,"ninjaX"],[429,17,447,15],[430,8,448,6,"y"],[430,9,448,7],[430,11,448,9,"ninjaY"],[430,17,448,15],[431,8,449,6,"targetX"],[431,15,449,13],[431,17,449,15,"targetEnemy"],[431,28,449,26],[431,29,449,27,"position"],[431,37,449,35],[431,38,449,36,"x"],[431,39,449,37],[431,42,449,40,"ENEMY_SIZE"],[431,52,449,50],[431,55,449,53],[431,56,449,54],[432,8,450,6,"targetY"],[432,15,450,13],[432,17,450,15,"targetEnemy"],[432,28,450,26],[432,29,450,27,"position"],[432,37,450,35],[432,38,450,36,"y"],[432,39,450,37],[432,42,450,40,"ENEMY_SIZE"],[432,52,450,50],[432,55,450,53],[432,56,450,54],[433,8,451,6,"targetEnemyId"],[433,21,451,19],[433,23,451,21,"targetEnemy"],[433,34,451,32],[433,35,451,33,"id"],[433,37,451,35],[434,8,452,6,"damage"],[434,14,452,12],[434,16,452,14,"damage"],[434,22,452,20],[435,8,453,6,"startTime"],[435,17,453,15],[435,19,453,17,"Date"],[435,23,453,21],[435,24,453,22,"now"],[435,27,453,25],[435,28,453,26],[435,29,453,27],[436,8,454,6,"duration"],[436,16,454,14],[436,18,454,16],[436,21,454,19],[437,8,454,21],[438,8,455,6],[439,8,456,6,"abilityId"],[439,17,456,15],[439,19,456,17,"abilityInfo"],[439,30,456,28],[439,32,456,30,"id"],[439,34,456,32],[439,38,456,36],[439,54,456,52],[440,8,457,6,"abilityName"],[440,19,457,17],[440,21,457,19,"abilityInfo"],[440,32,457,30],[440,34,457,32,"name"],[440,38,457,36],[440,42,457,40],[440,58,457,56],[441,8,458,6,"abilityIcon"],[441,19,458,17],[441,21,458,19,"abilityInfo"],[441,32,458,30],[441,34,458,32,"icon"],[441,38,458,36],[441,42,458,40],[441,46,458,44],[441,47,458,46],[442,6,459,4],[442,7,459,5],[443,6,461,4,"console"],[443,13,461,11],[443,14,461,12,"log"],[443,17,461,15],[443,18,461,16],[443,53,461,51,"targetEnemy"],[443,64,461,62],[443,65,461,63,"id"],[443,67,461,65],[443,75,461,73,"damage"],[443,81,461,79],[443,90,461,88],[443,91,461,89],[444,6,462,4,"console"],[444,13,462,11],[444,14,462,12,"log"],[444,17,462,15],[444,18,462,16],[444,53,462,51,"ninjaX"],[444,59,462,57],[444,64,462,62,"ninjaY"],[444,70,462,68],[444,87,462,85,"projectile"],[444,97,462,95],[444,98,462,96,"targetX"],[444,105,462,103],[444,110,462,108,"projectile"],[444,120,462,118],[444,121,462,119,"targetY"],[444,128,462,126],[444,131,462,129],[444,132,462,130],[445,6,464,4,"setProjectiles"],[445,20,464,18],[445,21,464,19,"prev"],[445,25,464,23],[445,29,464,27],[445,30,464,28],[445,33,464,31,"prev"],[445,37,464,35],[445,39,464,37,"projectile"],[445,49,464,47],[445,50,464,48],[445,51,464,49],[447,6,466,4],[448,6,467,4,"setTimeout"],[448,16,467,14],[448,17,467,15],[448,23,467,21],[449,8,468,6,"handleProjectileHit"],[449,27,468,25],[449,28,468,26,"projectile"],[449,38,468,36],[449,39,468,37],[450,6,469,4],[450,7,469,5],[450,9,469,7],[450,12,469,10],[450,13,469,11],[451,4,470,2],[451,5,470,3],[453,4,472,2],[454,4,473,2],[454,8,473,8,"spawnTestEnemy"],[454,22,473,22],[454,25,473,26,"state"],[454,30,473,44],[454,34,473,49],[455,6,474,4],[456,6,475,4],[456,10,475,10,"SCREEN_WIDTH"],[456,22,475,22],[456,25,475,25],[456,28,475,28],[456,29,475,29],[456,30,475,30],[457,6,476,4],[457,10,476,10,"GAME_AREA_HEIGHT"],[457,26,476,26],[457,29,476,29],[457,32,476,32],[457,35,476,35],[457,38,476,38],[457,39,476,39],[457,40,476,40],[458,6,477,4],[458,10,477,10,"ENEMY_SIZE"],[458,20,477,20],[458,23,477,23],[458,25,477,25],[460,6,479,4],[461,6,480,4],[461,10,480,10,"x"],[461,11,480,11],[461,14,480,14,"Math"],[461,18,480,18],[461,19,480,19,"random"],[461,25,480,25],[461,26,480,26],[461,27,480,27],[461,31,480,31,"SCREEN_WIDTH"],[461,43,480,43],[461,46,480,46,"ENEMY_SIZE"],[461,56,480,56],[461,59,480,59],[461,60,480,60],[461,61,480,61],[461,64,480,64,"ENEMY_SIZE"],[461,74,480,74],[461,75,480,75],[461,76,480,76],[462,6,481,4],[462,10,481,10,"y"],[462,11,481,11],[462,14,481,14,"Math"],[462,18,481,18],[462,19,481,19,"random"],[462,25,481,25],[462,26,481,26],[462,27,481,27],[462,31,481,31,"GAME_AREA_HEIGHT"],[462,47,481,47],[462,50,481,50,"ENEMY_SIZE"],[462,60,481,60],[462,63,481,63],[462,64,481,64],[462,65,481,65],[462,68,481,68,"ENEMY_SIZE"],[462,78,481,78],[462,79,481,79],[462,80,481,80],[464,6,483,4],[464,10,483,10,"enemy"],[464,15,483,28],[464,18,483,31],[465,8,484,6,"id"],[465,10,484,8],[465,12,484,10],[465,21,484,19],[465,23,484,21,"enemyCounter"],[465,35,484,33],[465,37,484,35],[466,8,485,6,"name"],[466,12,485,10],[466,14,485,12],[466,24,485,22],[467,8,486,6,"health"],[467,14,486,12],[467,16,486,14],[467,19,486,17],[468,8,487,6,"maxHealth"],[468,17,487,15],[468,19,487,17],[468,22,487,20],[469,8,488,6,"stats"],[469,13,488,11],[469,15,488,13],[470,10,489,8,"attack"],[470,16,489,14],[470,18,489,16],[470,20,489,18],[471,10,490,8,"defense"],[471,17,490,15],[471,19,490,17],[471,21,490,19],[472,10,491,8,"health"],[472,16,491,14],[472,18,491,16],[472,21,491,19],[473,10,492,8,"maxHealth"],[473,19,492,17],[473,21,492,19],[473,24,492,22],[474,10,493,8,"critChance"],[474,20,493,18],[474,22,493,20],[474,23,493,21],[475,10,494,8,"critDamage"],[475,20,494,18],[475,22,494,20],[475,25,494,23],[476,10,495,8,"cooldownReduction"],[476,27,495,25],[476,29,495,27],[477,8,496,6],[477,9,496,7],[478,8,497,6,"position"],[478,16,497,14],[478,18,497,16],[479,10,497,18,"x"],[479,11,497,19],[480,10,497,21,"y"],[481,8,497,23],[481,9,497,24],[482,8,498,6,"lastDamaged"],[482,19,498,17],[482,21,498,19],[483,6,499,4],[483,7,499,5],[484,6,501,4,"state"],[484,11,501,9],[484,12,501,10,"enemies"],[484,19,501,17],[484,20,501,18,"push"],[484,24,501,22],[484,25,501,23,"enemy"],[484,30,501,28],[484,31,501,29],[485,4,502,2],[485,5,502,3],[487,4,504,2],[488,4,505,2],[488,8,505,8,"startCombat"],[488,19,505,19],[488,22,505,22,"React"],[488,27,505,27],[488,28,505,27,"default"],[488,35,505,27],[488,36,505,28,"useCallback"],[488,47,505,39],[488,48,505,40],[488,54,505,46],[489,6,506,4,"console"],[489,13,506,11],[489,14,506,12,"log"],[489,17,506,15],[489,18,506,16],[489,63,506,61],[489,64,506,62],[490,6,507,4,"setCombatState"],[490,20,507,18],[490,21,507,19,"prev"],[490,25,507,23],[490,30,507,28],[491,8,507,30],[491,11,507,33,"prev"],[491,15,507,37],[492,8,507,39,"isInCombat"],[492,18,507,49],[492,20,507,51],[493,6,507,56],[493,7,507,57],[493,8,507,58],[493,9,507,59],[495,6,509,4],[496,6,510,4,"combatEngine"],[496,25,510,16],[496,26,510,16,"combatEngine"],[496,38,510,16],[496,39,510,17,"addTickCallback"],[496,54,510,32],[496,55,510,33,"handleCombatTick"],[496,71,510,49],[496,72,510,50],[497,6,511,4,"console"],[497,13,511,11],[497,14,511,12,"log"],[497,17,511,15],[497,18,511,16],[497,62,511,60],[497,63,511,61],[499,6,513,4],[500,6,514,4,"combatEngine"],[500,25,514,16],[500,26,514,16,"combatEngine"],[500,38,514,16],[500,39,514,17,"start"],[500,44,514,22],[500,45,514,23],[500,46,514,24],[501,4,515,2],[501,5,515,3],[501,7,515,5],[501,8,515,6,"combatEngine"],[501,27,515,18],[501,28,515,18,"combatEngine"],[501,40,515,18],[501,42,515,20,"handleCombatTick"],[501,58,515,36],[501,59,515,37],[501,60,515,38],[503,4,517,2],[504,4,518,2],[504,8,518,8,"stopCombat"],[504,18,518,18],[504,21,518,21,"React"],[504,26,518,26],[504,27,518,26,"default"],[504,34,518,26],[504,35,518,27,"useCallback"],[504,46,518,38],[504,47,518,39],[504,53,518,45],[505,6,519,4,"setCombatState"],[505,20,519,18],[505,21,519,19,"prev"],[505,25,519,23],[505,30,519,28],[506,8,519,30],[506,11,519,33,"prev"],[506,15,519,37],[507,8,519,39,"isInCombat"],[507,18,519,49],[507,20,519,51],[508,6,519,57],[508,7,519,58],[508,8,519,59],[508,9,519,60],[509,6,520,4,"combatEngine"],[509,25,520,16],[509,26,520,16,"combatEngine"],[509,38,520,16],[509,39,520,17,"removeTickCallback"],[509,57,520,35],[509,58,520,36,"handleCombatTick"],[509,74,520,52],[509,75,520,53],[510,4,521,2],[510,5,521,3],[510,7,521,5],[510,8,521,6,"combatEngine"],[510,27,521,18],[510,28,521,18,"combatEngine"],[510,40,521,18],[510,42,521,20,"handleCombatTick"],[510,58,521,36],[510,59,521,37],[510,60,521,38],[512,4,523,2],[513,4,524,2],[513,8,524,8,"equipAbility"],[513,20,524,20],[513,23,524,23,"equipAbility"],[513,24,524,24,"abilityId"],[513,33,524,41],[513,35,524,43,"slotIndex"],[513,44,524,60],[513,49,524,74],[514,6,525,4],[514,13,525,11,"combatState"],[514,24,525,22],[514,25,525,23,"abilityManager"],[514,39,525,37],[514,40,525,38,"equipAbility"],[514,52,525,50],[514,53,525,51,"abilityId"],[514,62,525,60],[514,64,525,62,"slotIndex"],[514,73,525,71],[514,74,525,72],[515,4,526,2],[515,5,526,3],[516,4,528,2],[516,8,528,8,"getDeck"],[516,15,528,15],[516,18,528,18,"getDeck"],[516,19,528,18],[516,24,528,24],[517,6,529,4],[517,13,529,11,"combatState"],[517,24,529,22],[517,25,529,23,"abilityManager"],[517,39,529,37],[517,40,529,38,"getDeck"],[517,47,529,45],[517,48,529,46],[517,49,529,47],[518,4,530,2],[518,5,530,3],[519,4,532,2],[519,8,532,8,"getAvailableAbilities"],[519,29,532,29],[519,32,532,32,"getAvailableAbilities"],[519,33,532,32],[519,38,532,38],[520,6,533,4],[520,13,533,11,"combatState"],[520,24,533,22],[520,25,533,23,"abilityManager"],[520,39,533,37],[520,40,533,38,"getAvailableAbilities"],[520,61,533,59],[520,62,533,60],[520,63,533,61],[521,4,534,2],[521,5,534,3],[522,4,536,2],[522,8,536,8,"upgradeAbility"],[522,22,536,22],[522,25,536,26,"abilityId"],[522,34,536,43],[522,38,536,57],[523,6,537,4],[523,13,537,11,"combatState"],[523,24,537,22],[523,25,537,23,"abilityManager"],[523,39,537,37],[523,40,537,38,"upgradeAbility"],[523,54,537,52],[523,55,537,53,"abilityId"],[523,64,537,62],[523,65,537,63],[524,4,538,2],[524,5,538,3],[526,4,540,2],[527,4,541,2],[527,8,541,8,"clearAllEnemies"],[527,23,541,23],[527,26,541,26,"clearAllEnemies"],[527,27,541,26],[527,32,541,32],[528,6,542,4,"console"],[528,13,542,11],[528,14,542,12,"log"],[528,17,542,15],[528,18,542,16],[528,67,542,65],[528,68,542,66],[529,6,543,4,"setCombatState"],[529,20,543,18],[529,21,543,19,"prev"],[529,25,543,23],[529,30,543,28],[530,8,544,6],[530,11,544,9,"prev"],[530,15,544,13],[531,8,545,6,"enemies"],[531,15,545,13],[531,17,545,15],[532,6,546,4],[532,7,546,5],[532,8,546,6],[532,9,546,7],[533,4,547,2],[533,5,547,3],[535,4,549,2],[536,4,550,2],[536,8,550,8,"triggerLevelUpExplosion"],[536,31,550,31],[536,34,550,34,"triggerLevelUpExplosion"],[536,35,550,34],[536,40,550,40],[537,6,551,4,"console"],[537,13,551,11],[537,14,551,12,"log"],[537,17,551,15],[537,18,551,16],[537,70,551,68],[537,71,551,69],[538,6,553,4],[538,10,553,10,"explosionTime"],[538,23,553,23],[538,26,553,26,"Date"],[538,30,553,30],[538,31,553,31,"now"],[538,34,553,34],[538,35,553,35],[538,36,553,36],[539,6,554,4,"setLastExplosionTime"],[539,26,554,24],[539,27,554,25,"explosionTime"],[539,40,554,38],[539,41,554,39],[540,6,556,4,"setCombatState"],[540,20,556,18],[540,21,556,19,"prev"],[540,25,556,23],[540,29,556,27],[541,8,557,6],[542,8,558,6],[542,12,558,12,"enemyCount"],[542,22,558,22],[542,25,558,25,"prev"],[542,29,558,29],[542,30,558,30,"enemies"],[542,37,558,37],[542,38,558,38,"length"],[542,44,558,44],[543,8,559,6],[543,12,559,12,"explosionXP"],[543,23,559,23],[543,26,559,26,"enemyCount"],[543,36,559,36],[543,39,559,39],[543,41,559,41],[543,42,559,42],[543,43,559,43],[544,8,560,6],[544,12,560,12,"explosionGold"],[544,25,560,25],[544,28,560,28,"enemyCount"],[544,38,560,38],[544,41,560,41],[544,42,560,42],[544,43,560,43],[544,44,560,44],[546,8,562,6,"console"],[546,15,562,13],[546,16,562,14,"log"],[546,19,562,17],[546,20,562,18],[546,44,562,42,"enemyCount"],[546,54,562,52],[546,76,562,74,"explosionXP"],[546,87,562,85],[546,98,562,96,"explosionGold"],[546,111,562,109],[546,118,562,116],[546,119,562,117],[548,8,564,6],[549,8,565,6],[549,12,565,10,"explosionXP"],[549,23,565,21],[549,26,565,24],[549,27,565,25],[549,29,565,27],[550,10,566,8,"setTimeout"],[550,20,566,18],[550,21,566,19],[550,27,566,25],[551,12,567,10,"game"],[551,16,567,14],[551,17,567,15,"updateNinja"],[551,28,567,26],[551,29,567,28,"ninja"],[551,34,567,33],[551,39,567,39],[552,14,568,12,"experience"],[552,24,568,22],[552,26,568,24,"ninja"],[552,31,568,29],[552,32,568,30,"experience"],[552,42,568,40],[552,45,568,43,"explosionXP"],[552,56,568,54],[553,14,569,12,"gold"],[553,18,569,16],[553,20,569,18,"ninja"],[553,25,569,23],[553,26,569,24,"gold"],[553,30,569,28],[553,33,569,31,"explosionGold"],[554,12,570,10],[554,13,570,11],[554,14,570,12],[554,15,570,13],[555,10,571,8],[555,11,571,9],[555,13,571,11],[555,14,571,12],[555,15,571,13],[555,16,571,14],[555,17,571,15],[556,8,572,6],[558,8,574,6],[559,8,575,6],[560,8,576,6],[560,12,576,12,"damagedEnemies"],[560,26,576,26],[560,29,576,29,"prev"],[560,33,576,33],[560,34,576,34,"enemies"],[560,41,576,41],[560,42,576,42,"map"],[560,45,576,45],[560,46,576,46,"enemy"],[560,51,576,51],[560,56,576,56],[561,10,577,8],[561,13,577,11,"enemy"],[561,18,577,16],[562,10,578,8,"health"],[562,16,578,14],[562,18,578,16],[562,19,578,17],[563,10,578,19],[564,10,579,8,"lastDamaged"],[564,21,579,19],[564,23,579,21,"combatEngine"],[564,42,579,33],[564,43,579,33,"combatEngine"],[564,55,579,33],[564,56,579,34,"getCurrentTick"],[564,70,579,48],[564,71,579,49],[565,8,580,6],[565,9,580,7],[565,10,580,8],[565,11,580,9],[566,8,582,6],[566,15,582,13],[567,10,583,8],[567,13,583,11,"prev"],[567,17,583,15],[568,10,584,8,"enemies"],[568,17,584,15],[568,19,584,17,"damagedEnemies"],[569,8,585,6],[569,9,585,7],[570,6,586,4],[570,7,586,5],[570,8,586,6],[571,4,587,2],[571,5,587,3],[573,4,589,2],[574,4,590,2],[574,8,590,8,"spawnEnemy"],[574,18,590,18],[574,21,590,22,"position"],[574,29,590,57],[574,33,590,75],[575,6,591,4],[575,10,591,10,"SCREEN_WIDTH"],[575,22,591,22],[575,25,591,25],[575,28,591,28],[576,6,592,4],[576,10,592,10,"GAME_AREA_HEIGHT"],[576,26,592,26],[576,29,592,29],[576,32,592,32],[576,35,592,35],[576,38,592,38],[576,39,592,39],[576,40,592,40],[577,6,593,4],[577,10,593,10,"ENEMY_SIZE"],[577,20,593,20],[577,23,593,23],[577,25,593,25],[579,6,595,4],[580,6,596,4],[580,10,596,10,"x"],[580,11,596,11],[580,14,596,14,"position"],[580,22,596,22],[580,24,596,24,"x"],[580,25,596,25],[580,29,596,29,"Math"],[580,33,596,33],[580,34,596,34,"random"],[580,40,596,40],[580,41,596,41],[580,42,596,42],[580,46,596,46,"SCREEN_WIDTH"],[580,58,596,58],[580,61,596,61,"ENEMY_SIZE"],[580,71,596,71],[580,74,596,74],[580,75,596,75],[580,76,596,76],[580,79,596,79,"ENEMY_SIZE"],[580,89,596,89],[581,6,597,4],[581,10,597,10,"y"],[581,11,597,11],[581,14,597,14,"position"],[581,22,597,22],[581,24,597,24,"y"],[581,25,597,25],[581,29,597,29,"Math"],[581,33,597,33],[581,34,597,34,"random"],[581,40,597,40],[581,41,597,41],[581,42,597,42],[581,46,597,46,"GAME_AREA_HEIGHT"],[581,62,597,62],[581,65,597,65,"ENEMY_SIZE"],[581,75,597,75],[581,78,597,78],[581,79,597,79],[581,80,597,80],[581,83,597,83,"ENEMY_SIZE"],[581,93,597,93],[582,6,599,4],[582,10,599,10,"enemy"],[582,15,599,28],[582,18,599,31],[583,8,600,6,"id"],[583,10,600,8],[583,12,600,10],[583,21,600,19],[583,23,600,21,"enemyCounter"],[583,35,600,33],[583,37,600,35],[584,8,601,6,"name"],[584,12,601,10],[584,14,601,12],[584,24,601,22],[585,8,602,6,"health"],[585,14,602,12],[585,16,602,14],[585,19,602,17],[586,8,603,6,"maxHealth"],[586,17,603,15],[586,19,603,17],[586,22,603,20],[587,8,604,6,"stats"],[587,13,604,11],[587,15,604,13],[588,10,605,8,"attack"],[588,16,605,14],[588,18,605,16],[588,20,605,18],[589,10,606,8,"defense"],[589,17,606,15],[589,19,606,17],[589,21,606,19],[590,10,607,8,"health"],[590,16,607,14],[590,18,607,16],[590,21,607,19],[591,10,608,8,"maxHealth"],[591,19,608,17],[591,21,608,19],[591,24,608,22],[592,10,609,8,"critChance"],[592,20,609,18],[592,22,609,20],[592,23,609,21],[593,10,610,8,"critDamage"],[593,20,610,18],[593,22,610,20],[593,25,610,23],[594,10,611,8,"cooldownReduction"],[594,27,611,25],[594,29,611,27],[595,8,612,6],[595,9,612,7],[596,8,613,6,"position"],[596,16,613,14],[596,18,613,16],[597,10,613,18,"x"],[597,11,613,19],[598,10,613,21,"y"],[599,8,613,23],[599,9,613,24],[600,8,614,6,"lastDamaged"],[600,19,614,17],[600,21,614,19],[601,6,615,4],[601,7,615,5],[602,6,617,4,"setCombatState"],[602,20,617,18],[602,21,617,19,"prev"],[602,25,617,23],[602,30,617,28],[603,8,618,6],[603,11,618,9,"prev"],[603,15,618,13],[604,8,619,6,"enemies"],[604,15,619,13],[604,17,619,15],[604,18,619,16],[604,21,619,19,"prev"],[604,25,619,23],[604,26,619,24,"enemies"],[604,33,619,31],[604,35,619,33,"enemy"],[604,40,619,38],[605,6,620,4],[605,7,620,5],[605,8,620,6],[605,9,620,7],[606,6,622,4],[606,13,622,11,"enemy"],[606,18,622,16],[607,4,623,2],[607,5,623,3],[609,4,625,2],[610,4,626,2],[610,8,626,8,"spawnBoss"],[610,17,626,17],[610,20,626,21,"bossEnemy"],[610,29,626,43],[610,33,626,48],[611,6,627,4,"console"],[611,13,627,11],[611,14,627,12,"log"],[611,17,627,15],[611,18,627,16],[611,39,627,37,"bossEnemy"],[611,48,627,46],[611,49,627,47,"name"],[611,53,627,51],[611,90,627,88],[611,91,627,89],[612,6,628,4,"setCombatState"],[612,20,628,18],[612,21,628,19,"prev"],[612,25,628,23],[612,30,628,28],[613,8,629,6],[613,11,629,9,"prev"],[613,15,629,13],[614,8,630,6,"enemies"],[614,15,630,13],[614,17,630,15],[614,18,630,16,"bossEnemy"],[614,27,630,25],[614,28,630,26],[614,29,630,27],[615,6,631,4],[615,7,631,5],[615,8,631,6],[615,9,631,7],[616,4,632,2],[616,5,632,3],[618,4,634,2],[619,4,635,2],[619,8,635,8,"clearSpecificEnemy"],[619,26,635,26],[619,29,635,30,"enemyId"],[619,36,635,45],[619,40,635,50],[620,6,636,4,"setCombatState"],[620,20,636,18],[620,21,636,19,"prev"],[620,25,636,23],[620,30,636,28],[621,8,637,6],[621,11,637,9,"prev"],[621,15,637,13],[622,8,638,6,"enemies"],[622,15,638,13],[622,17,638,15,"prev"],[622,21,638,19],[622,22,638,20,"enemies"],[622,29,638,27],[622,30,638,28,"filter"],[622,36,638,34],[622,37,638,35,"enemy"],[622,42,638,40],[622,46,638,44,"enemy"],[622,51,638,49],[622,52,638,50,"id"],[622,54,638,52],[622,59,638,57,"enemyId"],[622,66,638,64],[623,6,639,4],[623,7,639,5],[623,8,639,6],[623,9,639,7],[624,4,640,2],[624,5,640,3],[626,4,642,2],[627,4,643,2],[627,8,643,8,"useAbilityManually"],[627,26,643,26],[627,29,643,26,"_s3"],[627,32,643,26],[627,33,643,29],[627,37,643,29,"useCallback"],[627,43,643,40],[627,44,643,40,"useCallback"],[627,55,643,40],[627,57,643,40,"_s3"],[627,60,643,40],[627,61,643,42,"slotIndex"],[627,70,643,59],[627,74,643,73],[628,6,643,73,"_s3"],[628,9,643,73],[629,6,644,4,"console"],[629,13,644,11],[629,14,644,12,"log"],[629,17,644,15],[629,18,644,16],[629,53,644,51,"slotIndex"],[629,62,644,60],[629,64,644,62],[629,65,644,63],[631,6,646,4],[632,6,647,4],[632,10,647,10,"isReady"],[632,17,647,17],[632,20,647,20,"combatState"],[632,31,647,31],[632,32,647,32,"abilityManager"],[632,46,647,46],[632,47,647,47,"isAbilityReady"],[632,61,647,61],[632,62,647,62,"slotIndex"],[632,71,647,71],[632,72,647,72],[633,6,648,4],[633,10,648,8],[633,11,648,9,"isReady"],[633,18,648,16],[633,20,648,18],[634,8,649,6,"console"],[634,15,649,13],[634,16,649,14,"log"],[634,19,649,17],[634,20,649,18],[634,41,649,39,"slotIndex"],[634,50,649,48],[634,85,649,83],[634,86,649,84],[635,8,650,6],[635,15,650,13],[635,20,650,18],[636,6,651,4],[638,6,653,4],[639,6,654,4],[639,10,654,8,"combatState"],[639,21,654,19],[639,22,654,20,"enemies"],[639,29,654,27],[639,30,654,28,"length"],[639,36,654,34],[639,41,654,39],[639,42,654,40],[639,44,654,42],[640,8,655,6,"console"],[640,15,655,13],[640,16,655,14,"log"],[640,19,655,17],[640,20,655,18],[640,69,655,67],[640,70,655,68],[641,8,656,6],[641,15,656,13],[641,20,656,18],[642,6,657,4],[644,6,659,4],[645,6,660,4],[645,10,660,10,"currentTick"],[645,21,660,21],[645,24,660,24,"combatEngine"],[645,43,660,36],[645,44,660,36,"combatEngine"],[645,56,660,36],[645,57,660,37,"getCurrentTick"],[645,71,660,51],[645,72,660,52],[645,73,660,53],[646,6,661,4],[646,10,661,10,"success"],[646,17,661,17],[646,20,661,20,"combatState"],[646,31,661,31],[646,32,661,32,"abilityManager"],[646,46,661,46],[646,47,661,47,"useAbility"],[646,57,661,57],[646,58,661,58,"slotIndex"],[646,67,661,67],[646,69,661,69,"currentTick"],[646,80,661,80],[646,81,661,81],[647,6,663,4],[647,10,663,8,"success"],[647,17,663,15],[647,19,663,17],[648,8,664,6],[649,8,665,6,"setCombatState"],[649,22,665,20],[649,23,665,21,"prev"],[649,27,665,25],[649,31,665,29],[650,10,666,8],[650,14,666,14,"newState"],[650,22,666,22],[650,25,666,25],[651,12,666,27],[651,15,666,30,"prev"],[652,10,666,35],[652,11,666,36],[653,10,667,8,"castAbility"],[653,21,667,19],[653,22,667,20,"newState"],[653,30,667,28],[653,32,667,30,"slotIndex"],[653,41,667,39],[653,42,667,40],[654,10,668,8],[654,17,668,15,"newState"],[654,25,668,23],[655,8,669,6],[655,9,669,7],[655,10,669,8],[656,8,671,6,"console"],[656,15,671,13],[656,16,671,14,"log"],[656,19,671,17],[656,20,671,18],[656,65,671,63,"slotIndex"],[656,74,671,72],[656,76,671,74],[656,77,671,75],[657,8,672,6],[657,15,672,13],[657,19,672,17],[658,6,673,4],[658,7,673,5],[658,13,673,11],[659,8,674,6,"console"],[659,15,674,13],[659,16,674,14,"log"],[659,19,674,17],[659,20,674,18],[659,61,674,59,"slotIndex"],[659,70,674,68],[659,72,674,70],[659,73,674,71],[660,8,675,6],[660,15,675,13],[660,20,675,18],[661,6,676,4],[662,4,677,2],[662,5,677,3],[662,46,677,5],[662,47,677,6,"combatState"],[662,58,677,17],[662,59,677,18,"abilityManager"],[662,73,677,32],[662,75,677,34,"combatState"],[662,86,677,45],[662,87,677,46,"enemies"],[662,94,677,53],[662,95,677,54],[662,96,677,55],[663,4,678,2],[663,8,678,2,"useEffect"],[663,14,678,11],[663,15,678,11,"useEffect"],[663,24,678,11],[663,26,678,12],[663,32,678,18],[664,6,679,4,"combatEngine"],[664,25,679,16],[664,26,679,16,"combatEngine"],[664,38,679,16],[664,39,679,17,"start"],[664,44,679,22],[664,45,679,23],[664,46,679,24],[666,6,681,4],[667,6,682,4],[668,6,683,4,"console"],[668,13,683,11],[668,14,683,12,"log"],[668,17,683,15],[668,18,683,16],[668,97,683,95],[668,98,683,96],[669,6,685,4],[669,13,685,11],[669,19,685,17],[670,8,686,6,"combatEngine"],[670,27,686,18],[670,28,686,18,"combatEngine"],[670,40,686,18],[670,41,686,19,"stop"],[670,45,686,23],[670,46,686,24],[670,47,686,25],[671,6,687,4],[671,7,687,5],[672,4,688,2],[672,5,688,3],[672,7,688,5],[672,9,688,7],[672,10,688,8],[674,4,690,2],[675,4,691,2],[675,8,691,8,"saveAbilityData"],[675,23,691,23],[675,26,691,26],[675,30,691,26,"useCallback"],[675,36,691,37],[675,37,691,37,"useCallback"],[675,48,691,37],[675,50,691,38],[675,56,691,44],[676,6,692,4],[676,10,692,8,"combatState"],[676,21,692,19],[676,22,692,20,"abilityManager"],[676,36,692,34],[676,38,692,36],[677,8,693,6],[677,12,693,12,"abilityData"],[677,23,693,23],[677,26,693,26,"combatState"],[677,37,693,37],[677,38,693,38,"abilityManager"],[677,52,693,52],[677,53,693,53,"getSaveData"],[677,64,693,64],[677,65,693,65],[677,66,693,66],[678,8,694,6,"console"],[678,15,694,13],[678,16,694,14,"log"],[678,19,694,17],[678,20,694,18],[678,70,694,68],[678,72,694,70,"abilityData"],[678,83,694,81],[678,84,694,82],[679,8,695,6,"game"],[679,12,695,10],[679,13,695,11,"updateAbilityData"],[679,30,695,28],[679,31,695,29,"abilityData"],[679,42,695,40],[679,43,695,41],[680,6,696,4],[681,4,697,2],[681,5,697,3],[681,7,697,5],[681,8,697,6,"combatState"],[681,19,697,17],[681,20,697,18,"abilityManager"],[681,34,697,32],[681,36,697,34,"game"],[681,40,697,38],[681,41,697,39,"updateAbilityData"],[681,58,697,56],[681,59,697,57],[681,60,697,58],[682,4,699,2],[682,8,699,8,"contextValue"],[682,20,699,39],[682,23,699,42,"React"],[682,28,699,47],[682,29,699,47,"default"],[682,36,699,47],[682,37,699,48,"useMemo"],[682,44,699,55],[682,45,699,56],[682,52,699,63],[683,6,700,4,"combatState"],[683,17,700,15],[684,6,701,4,"projectiles"],[684,17,701,15],[685,6,702,4,"startCombat"],[685,17,702,15],[686,6,703,4,"stopCombat"],[686,16,703,14],[687,6,704,4,"equipAbility"],[687,18,704,16],[688,6,705,4,"handleEnemyKill"],[688,21,705,19],[689,6,706,4,"getDeck"],[689,13,706,11],[690,6,707,4,"getAvailableAbilities"],[690,27,707,25],[691,6,708,4,"upgradeAbility"],[691,20,708,18],[692,6,709,4,"spawnEnemy"],[692,16,709,14],[693,6,710,4,"spawnBoss"],[693,15,710,13],[694,6,711,4,"clearAllEnemies"],[694,21,711,19],[695,6,712,4,"clearSpecificEnemy"],[695,24,712,22],[696,6,713,4,"triggerLevelUpExplosion"],[696,29,713,27],[697,6,714,4,"findClosestEnemy"],[697,22,714,20],[698,6,715,4,"updateNinjaPosition"],[698,25,715,23],[699,6,716,4,"setManualControlActive"],[699,28,716,26],[700,6,717,4,"lastExplosionTime"],[700,23,717,21],[701,6,718,4,"useAbilityManually"],[701,24,718,22],[702,6,718,24],[703,6,719,4,"saveAbilityData"],[703,21,719,19],[703,22,719,21],[704,4,720,2],[704,5,720,3],[704,6,720,4],[704,8,720,6],[705,4,721,4],[706,4,722,4],[707,4,723,4,"combatState"],[707,15,723,15],[707,17,724,4,"projectiles"],[707,28,724,15],[707,30,725,4,"lastExplosionTime"],[707,47,725,21],[708,4,726,4],[709,4,727,4,"combatState"],[709,15,727,15],[709,16,727,16,"abilityManager"],[709,30,727,30],[709,32,728,4,"combatState"],[709,43,728,15],[709,44,728,16,"enemies"],[709,51,728,23],[709,53,729,4,"useAbilityManually"],[709,71,729,22],[710,4,729,24],[711,4,730,4,"saveAbilityData"],[711,19,730,19],[711,20,730,21],[712,4,730,21],[712,5,731,3],[712,6,731,4],[713,4,733,2],[713,24,734,4],[713,28,734,4,"_reactJsxDevRuntime"],[713,47,734,4],[713,48,734,4,"jsxDEV"],[713,54,734,4],[713,56,734,5,"CombatContext"],[713,69,734,18],[713,70,734,19,"Provider"],[713,78,734,27],[714,6,734,28,"value"],[714,11,734,33],[714,13,734,35,"contextValue"],[714,25,734,48],[715,6,734,48,"children"],[715,14,734,48],[715,16,735,7,"children"],[716,4,735,15],[717,6,735,15,"fileName"],[717,14,735,15],[717,16,735,15,"_jsxFileName"],[717,28,735,15],[718,6,735,15,"lineNumber"],[718,16,735,15],[719,6,735,15,"columnNumber"],[719,18,735,15],[720,4,735,15],[720,11,736,28],[720,12,736,29],[721,2,738,0],[721,3,738,1],[722,2,738,2,"_s4"],[722,5,738,2],[722,6,87,13,"CombatProvider"],[722,20,87,27],[723,4,87,27],[723,12,88,15,"useGame"],[723,24,88,22],[723,25,88,22,"useGame"],[723,32,88,22],[723,34,89,61,"useZone"],[723,46,89,68],[723,47,89,68,"useZone"],[723,54,89,68],[724,2,89,68],[725,2,89,68,"_c"],[725,4,89,68],[725,7,87,13,"CombatProvider"],[725,21,87,27],[726,2,87,27],[726,6,87,27,"_c"],[726,8,87,27],[727,2,87,27,"$RefreshReg$"],[727,14,87,27],[727,15,87,27,"_c"],[727,17,87,27],[728,0,87,27],[728,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDe;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCa;oCCE,iCD;KDG;GxB0B;2B2BG;mBL6B,6BK;evBG;KuBE;G3BC;yB4BG;G5B6B;wC6BG;mB3BE,uC2B;G7BQ;uC8BG;mB5BC,wC4B;G9BE;uB+BG;G/BE;kBgCE;GhCE;gCiCE;GjCE;yBkCE;GlCE;0BmCG;mBjCE;MiCG;GnCC;kCoCG;mBlCM;mBEU;2BCC;YDG;SFC;8CmCK;QnCI;KkCM;GpCC;qBsCG;mBpC2B;MoCG;GtCG;oBuCG;mBrCE;MqCG;GvCC;6BwCG;mBtCC;mCuCE,6BvC;MsCC;GxCC;yC0CG;qBxCsB;OwCI;G1CQ;YCC;W0CO;K1CE;GDC;sC4CG;G5CM;wD6CE;I7CqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}