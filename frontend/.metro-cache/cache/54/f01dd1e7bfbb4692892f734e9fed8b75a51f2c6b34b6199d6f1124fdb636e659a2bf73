{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually // MOBILE FIX: Add manual ability casting\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually // Add the callback to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"ol2ErJ+EZm29CS8z3LZ4ettvGng=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":689,"map":[[15,2,71,0,"Object"],[15,8,71,0],[15,9,71,0,"defineProperty"],[15,23,71,0],[15,24,71,0,"exports"],[15,31,71,0],[16,4,71,0,"enumerable"],[16,14,71,0],[17,4,71,0,"get"],[17,7,71,0],[17,18,71,0,"get"],[17,19,71,0],[18,6,71,0],[18,13,71,0,"useCombat"],[18,22,71,0],[19,4,71,0],[20,2,71,0],[21,2,81,0,"Object"],[21,8,81,0],[21,9,81,0,"defineProperty"],[21,23,81,0],[21,24,81,0,"exports"],[21,31,81,0],[22,4,81,0,"enumerable"],[22,14,81,0],[23,4,81,0,"get"],[23,7,81,0],[23,18,81,0,"get"],[23,19,81,0],[24,6,81,0],[24,13,81,0,"CombatProvider"],[24,27,81,0],[25,4,81,0],[26,2,81,0],[27,2,699,2],[27,6,699,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,699,2],[27,42,699,2,"require"],[27,49,699,2],[27,50,699,2,"_dependencyMap"],[27,64,699,2],[28,2,699,2],[28,6,699,2,"_slicedToArray"],[28,20,699,2],[28,23,699,2,"_interopDefault"],[28,38,699,2],[28,39,699,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,699,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,69,0],[37,6,69,6,"CombatContext"],[37,19,69,19],[37,35,69,22],[37,39,69,22,"createContext"],[37,45,69,35],[37,46,69,35,"createContext"],[37,59,69,35],[37,61,69,67,"undefined"],[37,70,69,76],[37,71,69,77],[38,2,71,7],[38,6,71,13,"useCombat"],[38,15,71,22],[38,18,71,25,"useCombat"],[38,19,71,25],[38,24,71,50],[39,4,71,50,"_s"],[39,6,71,50],[40,4,72,2],[40,8,72,8,"context"],[40,15,72,15],[40,18,72,18],[40,22,72,18,"useContext"],[40,28,72,28],[40,29,72,28,"useContext"],[40,39,72,28],[40,41,72,29,"CombatContext"],[40,54,72,42],[40,55,72,43],[41,4,73,2],[41,8,73,6],[41,9,73,7,"context"],[41,16,73,14],[41,18,73,16],[42,6,74,4],[42,12,74,10],[42,16,74,14,"Error"],[42,21,74,19],[42,22,74,20],[42,70,74,68],[42,71,74,69],[43,4,75,2],[44,4,76,2],[44,11,76,9,"context"],[44,18,76,16],[45,2,77,0],[45,3,77,1],[46,2,77,2,"_s"],[46,4,77,2],[46,5,71,13,"useCombat"],[46,14,71,22],[47,2,79,0],[47,6,79,4,"enemyCounter"],[47,18,79,16],[47,21,79,19],[47,22,79,20],[47,23,79,21],[47,24,79,22],[49,2,81,7],[49,6,81,13,"CombatProvider"],[49,20,81,27],[49,23,81,30,"_ref"],[49,27,81,30],[49,31,81,73],[50,4,81,73,"_s4"],[50,7,81,73],[51,4,81,73],[51,8,81,73,"_s3"],[51,11,81,73],[51,14,81,73,"$RefreshSig$"],[51,26,81,73],[52,4,81,73],[52,8,81,33,"children"],[52,16,81,41],[52,19,81,41,"_ref"],[52,23,81,41],[52,24,81,33,"children"],[52,32,81,41],[53,4,82,2],[53,8,82,2,"_useGame"],[53,16,82,2],[53,19,82,26],[53,23,82,26,"useGame"],[53,35,82,33],[53,36,82,33,"useGame"],[53,43,82,33],[53,45,82,34],[53,46,82,35],[54,6,82,10,"updateNinja"],[54,17,82,21],[54,20,82,21,"_useGame"],[54,28,82,21],[54,29,82,10,"updateNinja"],[54,40,82,21],[55,4,83,2],[55,8,83,2,"_useZone"],[55,16,83,2],[55,19,83,30],[55,23,83,30,"useZone"],[55,35,83,37],[55,36,83,37,"useZone"],[55,43,83,37],[55,45,83,38],[55,46,83,39],[56,6,83,10,"recordEnemyKill"],[56,21,83,25],[56,24,83,25,"_useZone"],[56,32,83,25],[56,33,83,10,"recordEnemyKill"],[56,48,83,25],[57,4,85,2],[57,8,85,2,"_useState"],[57,17,85,2],[57,20,85,40],[57,24,85,40,"useState"],[57,30,85,48],[57,31,85,48,"useState"],[57,39,85,48],[57,41,85,62],[58,8,86,4,"isInCombat"],[58,18,86,14],[58,20,86,16],[58,25,86,21],[59,8,87,4,"currentTick"],[59,19,87,15],[59,21,87,17],[59,22,87,18],[60,8,88,4,"enemies"],[60,15,88,11],[60,17,88,13],[60,19,88,15],[61,8,89,4,"abilityManager"],[61,22,89,18],[61,24,89,20],[61,28,89,24,"AbilityManager"],[61,46,89,38],[61,47,89,38,"AbilityManager"],[61,61,89,38],[61,62,89,39],[61,63,89,40],[62,8,90,4,"statusEffects"],[62,21,90,17],[62,23,90,19],[62,27,90,23,"StatusEffectManager"],[62,46,90,42],[62,47,90,42,"StatusEffectManager"],[62,66,90,42],[62,67,90,43],[62,68,90,44],[63,8,91,4,"playerStats"],[63,19,91,15],[63,21,91,17],[64,10,92,6,"attack"],[64,16,92,12],[64,18,92,14],[64,20,92,16],[65,10,92,18],[66,10,93,6,"defense"],[66,17,93,13],[66,19,93,15],[66,20,93,16],[67,10,94,6,"health"],[67,16,94,12],[67,18,94,14],[67,21,94,17],[68,10,95,6,"maxHealth"],[68,19,95,15],[68,21,95,17],[68,24,95,20],[69,10,96,6,"critChance"],[69,20,96,16],[69,22,96,18],[69,23,96,19],[70,10,97,6,"critDamage"],[70,20,97,16],[70,22,97,18],[70,25,97,21],[71,10,98,6,"cooldownReduction"],[71,27,98,23],[71,29,98,25],[72,8,99,4],[73,6,100,2],[73,7,100,3],[73,8,100,4],[74,6,100,4,"_useState2"],[74,16,100,4],[74,23,100,4,"_slicedToArray"],[74,37,100,4],[74,38,100,4,"default"],[74,45,100,4],[74,47,100,4,"_useState"],[74,56,100,4],[75,6,85,9,"combatState"],[75,17,85,20],[75,20,85,20,"_useState2"],[75,30,85,20],[76,6,85,22,"setCombatState"],[76,20,85,36],[76,23,85,36,"_useState2"],[76,33,85,36],[77,4,102,2],[77,8,102,2,"_useState3"],[77,18,102,2],[77,21,102,40],[77,25,102,40,"useState"],[77,31,102,48],[77,32,102,48,"useState"],[77,40,102,48],[77,42,102,69],[77,44,102,71],[77,45,102,72],[78,6,102,72,"_useState4"],[78,16,102,72],[78,23,102,72,"_slicedToArray"],[78,37,102,72],[78,38,102,72,"default"],[78,45,102,72],[78,47,102,72,"_useState3"],[78,57,102,72],[79,6,102,9,"projectiles"],[79,17,102,20],[79,20,102,20,"_useState4"],[79,30,102,20],[80,6,102,22,"setProjectiles"],[80,20,102,36],[80,23,102,36,"_useState4"],[80,33,102,36],[81,4,103,2],[81,8,103,2,"_useState5"],[81,18,103,2],[81,21,103,52],[81,25,103,52,"useState"],[81,31,103,60],[81,32,103,60,"useState"],[81,40,103,60],[81,42,103,69],[81,43,103,70],[81,44,103,71],[82,6,103,71,"_useState6"],[82,16,103,71],[82,23,103,71,"_slicedToArray"],[82,37,103,71],[82,38,103,71,"default"],[82,45,103,71],[82,47,103,71,"_useState5"],[82,57,103,71],[83,6,103,9,"lastExplosionTime"],[83,23,103,26],[83,26,103,26,"_useState6"],[83,36,103,26],[84,6,103,28,"setLastExplosionTime"],[84,26,103,48],[84,29,103,48,"_useState6"],[84,39,103,48],[85,4,104,2],[86,4,105,2],[88,4,107,2],[89,4,108,2],[89,8,108,8,"handleEnemyKill"],[89,23,108,23],[89,26,108,26],[89,30,108,26,"useCallback"],[89,36,108,37],[89,37,108,37,"useCallback"],[89,48,108,37],[89,50,108,39,"enemy"],[89,55,108,57],[89,59,108,62],[90,6,109,4,"console"],[90,13,109,11],[90,14,109,12,"log"],[90,17,109,15],[90,18,109,16],[90,73,109,71],[90,75,109,73,"enemy"],[90,80,109,78],[90,81,109,79,"id"],[90,83,109,81],[90,84,109,82],[92,6,111,4],[93,6,112,4],[93,10,112,10,"xpReward"],[93,18,112,18],[93,21,112,21],[93,23,112,23],[93,24,112,24],[93,25,112,25],[94,6,113,4],[94,10,113,10,"goldReward"],[94,20,113,20],[94,23,113,23],[94,25,113,25],[95,6,115,4,"console"],[95,13,115,11],[95,14,115,12,"log"],[95,17,115,15],[95,18,115,16],[95,48,115,46,"xpReward"],[95,56,115,54],[95,67,115,65,"goldReward"],[95,77,115,75],[95,93,115,91],[95,94,115,92],[96,6,116,4,"console"],[96,13,116,11],[96,14,116,12,"log"],[96,17,116,15],[96,18,116,16],[96,49,116,47,"Platform"],[96,61,116,55],[96,62,116,55,"Platform"],[96,70,116,55],[96,71,116,56,"OS"],[96,73,116,58],[96,84,116,69,"Date"],[96,88,116,73],[96,89,116,74,"now"],[96,92,116,77],[96,93,116,78],[96,94,116,79],[96,96,116,81],[96,97,116,82],[98,6,118,4],[99,6,119,4],[100,6,120,4,"setTimeout"],[100,16,120,14],[100,17,120,15],[100,23,120,21],[101,8,121,6,"console"],[101,15,121,13],[101,16,121,14,"log"],[101,19,121,17],[101,20,121,18],[101,78,121,76],[101,79,121,77],[103,8,123,6],[104,8,124,6,"updateNinja"],[104,19,124,17],[104,20,124,19,"prev"],[104,24,124,23],[104,28,124,28],[105,10,125,8,"console"],[105,17,125,15],[105,18,125,16,"log"],[105,21,125,19],[105,22,125,20],[105,54,125,52,"prev"],[105,58,125,56],[105,59,125,57,"experience"],[105,69,125,67],[105,81,125,79,"prev"],[105,85,125,83],[105,86,125,84,"experience"],[105,96,125,94],[105,99,125,97,"xpReward"],[105,107,125,105],[105,109,125,107],[105,110,125,108],[106,10,126,8,"console"],[106,17,126,15],[106,18,126,16,"log"],[106,21,126,19],[106,22,126,20],[106,56,126,54,"prev"],[106,60,126,58],[106,61,126,59,"gold"],[106,65,126,63],[106,77,126,75,"prev"],[106,81,126,79],[106,82,126,80,"gold"],[106,86,126,84],[106,89,126,87,"goldReward"],[106,99,126,97],[106,101,126,99],[106,102,126,100],[107,10,127,8],[107,17,127,15],[108,12,128,10,"experience"],[108,22,128,20],[108,24,128,22,"prev"],[108,28,128,26],[108,29,128,27,"experience"],[108,39,128,37],[108,42,128,40,"xpReward"],[108,50,128,48],[109,12,129,10,"gold"],[109,16,129,14],[109,18,129,16,"prev"],[109,22,129,20],[109,23,129,21,"gold"],[109,27,129,25],[109,30,129,28,"goldReward"],[110,10,130,8],[110,11,130,9],[111,8,131,6],[111,9,131,7],[111,10,131,8],[113,8,133,6],[114,8,134,6],[114,12,134,12,"zoneEnemy"],[114,21,134,21],[114,24,134,24],[115,10,135,8,"id"],[115,12,135,10],[115,14,135,12,"enemy"],[115,19,135,17],[115,20,135,18,"id"],[115,22,135,20],[116,10,136,8,"typeId"],[116,16,136,14],[116,18,136,16],[116,28,136,26],[117,10,136,28],[118,10,137,8,"name"],[118,14,137,12],[118,16,137,14,"enemy"],[118,21,137,19],[118,22,137,20,"name"],[118,26,137,24],[119,10,138,8,"icon"],[119,14,138,12],[119,16,138,14],[119,20,138,18],[120,10,138,20],[121,10,139,8,"hp"],[121,12,139,10],[121,14,139,12],[121,15,139,13],[122,10,139,15],[123,10,140,8,"maxHP"],[123,15,140,13],[123,17,140,15,"enemy"],[123,22,140,20],[123,23,140,21,"maxHealth"],[123,32,140,30],[124,10,141,8,"attack"],[124,16,141,14],[124,18,141,16,"enemy"],[124,23,141,21],[124,24,141,22,"stats"],[124,29,141,27],[124,30,141,28,"attack"],[124,36,141,34],[125,10,142,8,"xp"],[125,12,142,10],[125,14,142,12],[125,16,142,14],[126,10,142,16],[127,10,143,8,"position"],[127,18,143,16],[127,20,143,18,"enemy"],[127,25,143,23],[127,26,143,24,"position"],[128,8,144,6],[128,9,144,7],[129,8,145,6,"recordEnemyKill"],[129,23,145,21],[129,24,145,22,"zoneEnemy"],[129,33,145,31],[129,34,145,32],[130,6,146,4],[130,7,146,5],[130,9,146,7],[130,10,146,8],[130,11,146,9],[130,12,146,10],[130,13,146,11],[131,4,147,2],[131,5,147,3],[131,7,147,5],[131,8,147,6,"updateNinja"],[131,19,147,17],[131,21,147,19,"recordEnemyKill"],[131,36,147,34],[131,37,147,35],[131,38,147,36],[133,4,149,2],[134,4,150,2],[134,8,150,8,"handleCombatTick"],[134,24,150,24],[134,27,150,27,"React"],[134,32,150,32],[134,33,150,32,"default"],[134,40,150,32],[134,41,150,33,"useCallback"],[134,52,150,44],[134,53,150,45],[134,59,150,51],[135,6,150,51],[135,10,150,51,"_s2"],[135,13,150,51],[135,16,150,51,"$RefreshSig$"],[135,28,150,51],[136,6,151,4,"console"],[136,13,151,11],[136,14,151,12,"log"],[136,17,151,15],[136,18,151,16],[136,87,151,85],[136,88,151,86],[137,6,153,4],[137,10,153,8,"enemiesToKill"],[137,23,153,36],[137,26,153,39],[137,28,153,41],[137,29,153,42],[137,30,153,43],[139,6,155,4,"_s2"],[139,9,155,4],[139,10,155,4,"setCombatState"],[139,24,155,18],[139,25,155,18,"_s2"],[139,28,155,18],[139,29,155,19,"prev"],[139,33,155,23],[139,37,155,27],[140,8,155,27,"_s2"],[140,11,155,27],[141,8,156,6],[141,12,156,12,"newTick"],[141,19,156,19],[141,22,156,22,"combatEngine"],[141,41,156,34],[141,42,156,34,"combatEngine"],[141,54,156,34],[141,55,156,35,"getCurrentTick"],[141,69,156,49],[141,70,156,50],[141,71,156,51],[142,8,157,6],[142,12,157,12,"newState"],[142,20,157,20],[142,23,157,23],[143,10,157,25],[143,13,157,28,"prev"],[143,17,157,32],[144,10,157,34,"currentTick"],[144,21,157,45],[144,23,157,47,"newTick"],[145,8,157,55],[145,9,157,56],[146,8,159,6],[146,12,159,10],[146,13,159,11,"newState"],[146,21,159,19],[146,22,159,20,"isInCombat"],[146,32,159,30],[146,34,159,32],[146,41,159,39,"newState"],[146,49,159,47],[148,8,161,6],[149,8,162,6,"newState"],[149,16,162,14],[149,17,162,15,"abilityManager"],[149,31,162,29],[149,32,162,30,"updateCooldowns"],[149,47,162,45],[149,48,162,46,"newTick"],[149,55,162,53],[149,56,162,54],[151,8,164,6],[152,8,165,6],[152,12,165,12,"effectResults"],[152,25,165,25],[152,28,165,28,"newState"],[152,36,165,36],[152,37,165,37,"statusEffects"],[152,50,165,50],[152,51,165,51,"processTick"],[152,62,165,62],[152,63,165,63,"newTick"],[152,70,165,70],[152,71,165,71],[154,8,167,6],[155,8,168,6,"effectResults"],[155,21,168,19],[155,22,168,20,"forEach"],[155,29,168,27],[155,30,168,28],[155,31,168,29,"results"],[155,38,168,36],[155,40,168,38,"entityId"],[155,48,168,46],[155,53,168,51],[156,10,169,8],[156,14,169,14,"enemyIndex"],[156,24,169,24],[156,27,169,27,"newState"],[156,35,169,35],[156,36,169,36,"enemies"],[156,43,169,43],[156,44,169,44,"findIndex"],[156,53,169,53],[156,54,169,54,"e"],[156,55,169,55],[156,59,169,59,"e"],[156,60,169,60],[156,61,169,61,"id"],[156,63,169,63],[156,68,169,68,"entityId"],[156,76,169,76],[156,77,169,77],[157,10,170,8],[157,14,170,12,"enemyIndex"],[157,24,170,22],[157,28,170,26],[157,29,170,27],[157,31,170,29],[158,12,171,10,"results"],[158,19,171,17],[158,20,171,18,"forEach"],[158,27,171,25],[158,28,171,26,"result"],[158,34,171,32],[158,38,171,36],[159,14,172,12,"newState"],[159,22,172,20],[159,23,172,21,"enemies"],[159,30,172,28],[159,31,172,29,"enemyIndex"],[159,41,172,39],[159,42,172,40],[159,43,172,41,"health"],[159,49,172,47],[159,53,172,51,"result"],[159,59,172,57],[159,60,172,58,"damage"],[159,66,172,64],[160,14,173,12,"newState"],[160,22,173,20],[160,23,173,21,"enemies"],[160,30,173,28],[160,31,173,29,"enemyIndex"],[160,41,173,39],[160,42,173,40],[160,43,173,41,"lastDamaged"],[160,54,173,52],[160,57,173,55,"newTick"],[160,64,173,62],[161,12,174,10],[161,13,174,11],[161,14,174,12],[162,10,175,8],[163,8,176,6],[163,9,176,7],[163,10,176,8],[165,8,178,6],[166,8,179,6,"newState"],[166,16,179,14],[166,17,179,15,"enemies"],[166,24,179,22],[166,25,179,23,"forEach"],[166,32,179,30],[166,33,179,31,"enemy"],[166,38,179,36],[166,42,179,40],[167,10,180,8],[167,14,180,12],[167,15,180,13,"enemy"],[167,20,180,18],[167,21,180,19,"isBoss"],[167,27,180,25],[167,29,180,27],[168,12,180,29],[169,12,181,10],[170,12,182,10],[170,16,182,16,"MOVEMENT_SPEED"],[170,30,182,30],[170,33,182,33],[170,37,182,37],[170,38,182,38],[170,39,182,39],[171,12,183,10],[171,16,183,16,"SCREEN_WIDTH"],[171,28,183,28],[171,31,183,31],[171,34,183,34],[172,12,184,10],[172,16,184,16,"GAME_AREA_HEIGHT"],[172,32,184,32],[172,35,184,35],[172,38,184,38],[172,39,184,39],[172,40,184,40],[173,12,185,10],[173,16,185,16,"ENEMY_SIZE"],[173,26,185,26],[173,29,185,29],[173,31,185,31],[175,12,187,10],[176,12,188,10],[176,16,188,16,"playerX"],[176,23,188,23],[176,26,188,26,"currentNinjaPosition"],[176,46,188,46],[176,47,188,47,"x"],[176,48,188,48],[177,12,189,10],[177,16,189,16,"playerY"],[177,23,189,23],[177,26,189,26,"currentNinjaPosition"],[177,46,189,46],[177,47,189,47,"y"],[177,48,189,48],[179,12,191,10],[180,12,192,10],[180,16,192,16,"deltaX"],[180,22,192,22],[180,25,192,25,"playerX"],[180,32,192,32],[180,35,192,35,"enemy"],[180,40,192,40],[180,41,192,41,"position"],[180,49,192,49],[180,50,192,50,"x"],[180,51,192,51],[181,12,193,10],[181,16,193,16,"deltaY"],[181,22,193,22],[181,25,193,25,"playerY"],[181,32,193,32],[181,35,193,35,"enemy"],[181,40,193,40],[181,41,193,41,"position"],[181,49,193,49],[181,50,193,50,"y"],[181,51,193,51],[182,12,194,10],[182,16,194,16,"distance"],[182,24,194,24],[182,27,194,27,"Math"],[182,31,194,31],[182,32,194,32,"sqrt"],[182,36,194,36],[182,37,194,37,"deltaX"],[182,43,194,43],[182,46,194,46,"deltaX"],[182,52,194,52],[182,55,194,55,"deltaY"],[182,61,194,61],[182,64,194,64,"deltaY"],[182,70,194,70],[182,71,194,71],[184,12,196,10],[185,12,197,10],[185,16,197,14,"distance"],[185,24,197,22],[185,27,197,25],[185,29,197,27],[185,31,197,29],[186,14,198,12],[187,14,199,12],[187,18,199,18,"normalizedX"],[187,29,199,29],[187,32,199,32,"deltaX"],[187,38,199,38],[187,41,199,41,"distance"],[187,49,199,49],[188,14,200,12],[188,18,200,18,"normalizedY"],[188,29,200,29],[188,32,200,32,"deltaY"],[188,38,200,38],[188,41,200,41,"distance"],[188,49,200,49],[190,14,202,12],[191,14,203,12],[191,18,203,18,"randomFactor"],[191,30,203,30],[191,33,203,33],[191,36,203,36],[191,37,203,37],[191,38,203,38],[192,14,204,12],[192,18,204,18,"finalX"],[192,24,204,24],[192,27,204,27,"normalizedX"],[192,38,204,38],[192,41,204,41],[192,42,204,42,"Math"],[192,46,204,46],[192,47,204,47,"random"],[192,53,204,53],[192,54,204,54],[192,55,204,55],[192,58,204,58],[192,61,204,61],[192,65,204,65,"randomFactor"],[192,77,204,77],[193,14,205,12],[193,18,205,18,"finalY"],[193,24,205,24],[193,27,205,27,"normalizedY"],[193,38,205,38],[193,41,205,41],[193,42,205,42,"Math"],[193,46,205,46],[193,47,205,47,"random"],[193,53,205,53],[193,54,205,54],[193,55,205,55],[193,58,205,58],[193,61,205,61],[193,65,205,65,"randomFactor"],[193,77,205,77],[195,14,207,12],[196,14,208,12],[196,18,208,16,"newX"],[196,22,208,20],[196,25,208,23,"enemy"],[196,30,208,28],[196,31,208,29,"position"],[196,39,208,37],[196,40,208,38,"x"],[196,41,208,39],[196,44,208,43,"finalX"],[196,50,208,49],[196,53,208,52,"MOVEMENT_SPEED"],[196,67,208,67],[197,14,209,12],[197,18,209,16,"newY"],[197,22,209,20],[197,25,209,23,"enemy"],[197,30,209,28],[197,31,209,29,"position"],[197,39,209,37],[197,40,209,38,"y"],[197,41,209,39],[197,44,209,43,"finalY"],[197,50,209,49],[197,53,209,52,"MOVEMENT_SPEED"],[197,67,209,67],[199,14,211,12],[200,14,212,12,"newX"],[200,18,212,16],[200,21,212,19,"Math"],[200,25,212,23],[200,26,212,24,"max"],[200,29,212,27],[200,30,212,28],[200,31,212,29],[200,33,212,31,"Math"],[200,37,212,35],[200,38,212,36,"min"],[200,41,212,39],[200,42,212,40,"SCREEN_WIDTH"],[200,54,212,52],[200,57,212,55,"ENEMY_SIZE"],[200,67,212,65],[200,69,212,67,"newX"],[200,73,212,71],[200,74,212,72],[200,75,212,73],[201,14,213,12,"newY"],[201,18,213,16],[201,21,213,19,"Math"],[201,25,213,23],[201,26,213,24,"max"],[201,29,213,27],[201,30,213,28],[201,31,213,29],[201,33,213,31,"Math"],[201,37,213,35],[201,38,213,36,"min"],[201,41,213,39],[201,42,213,40,"GAME_AREA_HEIGHT"],[201,58,213,56],[201,61,213,59,"ENEMY_SIZE"],[201,71,213,69],[201,73,213,71,"newY"],[201,77,213,75],[201,78,213,76],[201,79,213,77],[203,14,215,12],[204,14,216,12,"enemy"],[204,19,216,17],[204,20,216,18,"position"],[204,28,216,26],[204,29,216,27,"x"],[204,30,216,28],[204,33,216,31,"newX"],[204,37,216,35],[205,14,217,12,"enemy"],[205,19,217,17],[205,20,217,18,"position"],[205,28,217,26],[205,29,217,27,"y"],[205,30,217,28],[205,33,217,31,"newY"],[205,37,217,35],[206,12,218,10],[207,12,219,10],[208,10,220,8],[209,8,221,6],[209,9,221,7],[209,10,221,8],[211,8,223,6],[212,8,224,6],[212,12,224,10],[212,13,224,11,"isManualControlActive"],[212,34,224,32],[212,36,224,34],[213,10,225,8],[213,15,225,13],[213,19,225,17,"i"],[213,20,225,18],[213,23,225,21],[213,24,225,22],[213,26,225,24,"i"],[213,27,225,25],[213,30,225,28],[213,31,225,29],[213,33,225,31,"i"],[213,34,225,32],[213,36,225,34],[213,38,225,36],[214,12,226,10],[214,16,226,14,"newState"],[214,24,226,22],[214,25,226,23,"abilityManager"],[214,39,226,37],[214,40,226,38,"isAbilityReady"],[214,54,226,52],[214,55,226,53,"i"],[214,56,226,54],[214,57,226,55],[214,61,226,59,"newState"],[214,69,226,67],[214,70,226,68,"enemies"],[214,77,226,75],[214,78,226,76,"length"],[214,84,226,82],[214,87,226,85],[214,88,226,86],[214,90,226,88],[215,14,227,12],[215,18,227,16,"newState"],[215,26,227,24],[215,27,227,25,"abilityManager"],[215,41,227,39],[215,42,227,40,"useAbility"],[215,52,227,50],[215,53,227,51,"i"],[215,54,227,52],[215,56,227,54,"newTick"],[215,63,227,61],[215,64,227,62],[215,66,227,64],[216,16,228,14,"castAbility"],[216,27,228,25],[216,28,228,26,"newState"],[216,36,228,34],[216,38,228,36,"i"],[216,39,228,37],[216,40,228,38],[217,14,229,12],[218,12,230,10],[219,10,231,8],[220,8,232,6],[222,8,234,6],[223,8,235,6],[223,12,235,12,"deadEnemies"],[223,23,235,23],[223,26,235,26,"newState"],[223,34,235,34],[223,35,235,35,"enemies"],[223,42,235,42],[223,43,235,43,"filter"],[223,49,235,49],[223,50,235,50,"enemy"],[223,55,235,55],[223,59,235,59,"enemy"],[223,64,235,64],[223,65,235,65,"health"],[223,71,235,71],[223,75,235,75],[223,76,235,76],[223,77,235,77],[224,8,236,6,"enemiesToKill"],[224,21,236,19],[224,24,236,22],[224,25,236,23],[224,28,236,26,"deadEnemies"],[224,39,236,37],[224,40,236,38],[224,41,236,39],[224,42,236,40],[226,8,238,6],[227,8,239,6],[227,12,239,10,"deadEnemies"],[227,23,239,21],[227,24,239,22,"length"],[227,30,239,28],[227,33,239,31],[227,34,239,32],[227,36,239,34],[228,10,240,8,"console"],[228,17,240,15],[228,18,240,16,"log"],[228,21,240,19],[228,22,240,20],[228,49,240,47,"deadEnemies"],[228,60,240,58],[228,61,240,59,"length"],[228,67,240,65],[228,83,240,81],[228,85,240,83,"deadEnemies"],[228,96,240,94],[228,97,240,95,"map"],[228,100,240,98],[228,101,240,99,"e"],[228,102,240,100],[228,106,240,104],[228,109,240,107,"e"],[228,110,240,108],[228,111,240,109,"id"],[228,113,240,111],[228,117,240,115,"e"],[228,118,240,116],[228,119,240,117,"health"],[228,125,240,123],[228,130,240,128],[228,131,240,129],[228,132,240,130],[229,8,241,6],[231,8,243,6],[232,8,244,6],[232,12,244,12,"lowHealthEnemies"],[232,28,244,28],[232,31,244,31,"newState"],[232,39,244,39],[232,40,244,40,"enemies"],[232,47,244,47],[232,48,244,48,"filter"],[232,54,244,54],[232,55,244,55,"enemy"],[232,60,244,60],[232,64,244,64,"enemy"],[232,69,244,69],[232,70,244,70,"health"],[232,76,244,76],[232,80,244,80],[232,82,244,82],[232,86,244,86,"enemy"],[232,91,244,91],[232,92,244,92,"health"],[232,98,244,98],[232,101,244,101],[232,102,244,102],[232,103,244,103],[233,8,245,6],[233,12,245,10,"lowHealthEnemies"],[233,28,245,26],[233,29,245,27,"length"],[233,35,245,33],[233,38,245,36],[233,39,245,37],[233,41,245,39],[234,10,246,8,"console"],[234,17,246,15],[234,18,246,16,"log"],[234,21,246,19],[234,22,246,20],[234,61,246,59],[234,63,246,61,"lowHealthEnemies"],[234,79,246,77],[234,80,246,78,"map"],[234,83,246,81],[234,84,246,82,"e"],[234,85,246,83],[234,89,246,87],[234,92,246,90,"e"],[234,93,246,91],[234,94,246,92,"id"],[234,96,246,94],[234,100,246,98,"e"],[234,101,246,99],[234,102,246,100,"health"],[234,108,246,106],[234,112,246,110,"e"],[234,113,246,111],[234,114,246,112,"maxHealth"],[234,123,246,121],[234,128,246,126],[234,129,246,127],[234,130,246,128],[235,8,247,6],[237,8,249,6],[238,8,250,6],[238,12,250,12,"beforeCount"],[238,23,250,23],[238,26,250,26,"newState"],[238,34,250,34],[238,35,250,35,"enemies"],[238,42,250,42],[238,43,250,43,"length"],[238,49,250,49],[239,8,251,6,"newState"],[239,16,251,14],[239,17,251,15,"enemies"],[239,24,251,22],[239,27,251,25,"newState"],[239,35,251,33],[239,36,251,34,"enemies"],[239,43,251,41],[239,44,251,42,"filter"],[239,50,251,48],[239,51,251,49,"enemy"],[239,56,251,54],[239,60,251,58,"enemy"],[239,65,251,63],[239,66,251,64,"health"],[239,72,251,70],[239,75,251,73],[239,76,251,74],[239,77,251,75],[240,8,252,6],[240,12,252,12,"afterCount"],[240,22,252,22],[240,25,252,25,"newState"],[240,33,252,33],[240,34,252,34,"enemies"],[240,41,252,41],[240,42,252,42,"length"],[240,48,252,48],[241,8,254,6],[241,12,254,10,"beforeCount"],[241,23,254,21],[241,28,254,26,"afterCount"],[241,38,254,36],[241,40,254,38],[242,10,255,8,"console"],[242,17,255,15],[242,18,255,16,"log"],[242,21,255,19],[242,22,255,20],[242,52,255,50,"beforeCount"],[242,63,255,61],[242,66,255,64,"afterCount"],[242,76,255,74],[242,102,255,100],[242,103,255,101],[243,8,256,6],[245,8,258,6],[246,8,259,6],[247,8,260,6],[247,12,260,12,"MAX_ENEMIES"],[247,23,260,23],[247,26,260,26],[247,28,260,28],[248,8,261,6],[248,12,261,12,"MIN_SPAWN_DELAY"],[248,27,261,27],[248,30,261,30],[248,33,261,33],[248,34,261,34],[248,35,261,35],[249,8,262,6],[249,12,262,12,"now"],[249,15,262,15],[249,18,262,18,"Date"],[249,22,262,22],[249,23,262,23,"now"],[249,26,262,26],[249,27,262,27],[249,28,262,28],[250,8,263,6],[250,12,263,12,"hasBoss"],[250,19,263,19],[250,22,263,22,"newState"],[250,30,263,30],[250,31,263,31,"enemies"],[250,38,263,38],[250,39,263,39,"some"],[250,43,263,43],[250,44,263,44,"enemy"],[250,49,263,49],[250,53,263,53,"enemy"],[250,58,263,58],[250,59,263,59,"isBoss"],[250,65,263,65],[250,66,263,66],[252,8,265,6],[253,8,266,6],[253,12,266,10],[253,13,266,11,"newState"],[253,21,266,19],[253,22,266,20,"lastSpawnTime"],[253,35,266,33],[253,37,266,35],[254,10,267,8,"newState"],[254,18,267,16],[254,19,267,17,"lastSpawnTime"],[254,32,267,30],[254,35,267,33,"now"],[254,38,267,36],[255,8,268,6],[256,8,270,6,"console"],[256,15,270,13],[256,16,270,14,"log"],[256,19,270,17],[256,20,270,18],[256,53,270,51,"newState"],[256,61,270,59],[256,62,270,60,"enemies"],[256,69,270,67],[256,70,270,68,"length"],[256,76,270,74],[256,85,270,83,"MAX_ENEMIES"],[256,96,270,94],[256,109,270,107,"hasBoss"],[256,116,270,114],[256,118,270,116],[256,119,270,117],[258,8,272,6],[259,8,273,6],[259,12,273,10],[259,13,273,11,"hasBoss"],[259,20,273,18],[259,24,273,22,"newState"],[259,32,273,30],[259,33,273,31,"enemies"],[259,40,273,38],[259,41,273,39,"length"],[259,47,273,45],[259,50,273,48,"MAX_ENEMIES"],[259,61,273,59],[259,65,273,64,"now"],[259,68,273,67],[259,71,273,70,"newState"],[259,79,273,78],[259,80,273,79,"lastSpawnTime"],[259,93,273,92],[259,97,273,97,"MIN_SPAWN_DELAY"],[259,112,273,112],[259,114,273,114],[260,10,274,8,"console"],[260,17,274,15],[260,18,274,16,"log"],[260,21,274,19],[260,22,274,20],[260,43,274,41,"newState"],[260,51,274,49],[260,52,274,50,"enemies"],[260,59,274,57],[260,60,274,58,"length"],[260,66,274,64],[260,69,274,67],[260,70,274,68],[260,74,274,72,"MAX_ENEMIES"],[260,85,274,83],[260,87,274,85],[260,88,274,86],[261,10,275,8,"spawnTestEnemy"],[261,24,275,22],[261,25,275,23,"newState"],[261,33,275,31],[261,34,275,32],[262,10,276,8,"newState"],[262,18,276,16],[262,19,276,17,"lastSpawnTime"],[262,32,276,30],[262,35,276,33,"now"],[262,38,276,36],[263,8,277,6],[264,8,279,6],[264,15,279,13,"newState"],[264,23,279,21],[265,6,280,4],[265,7,280,5],[265,47,280,6],[267,6,282,4],[268,6,283,4,"console"],[268,13,283,11],[268,14,283,12,"log"],[268,17,283,15],[268,18,283,16],[268,50,283,48,"enemiesToKill"],[268,63,283,61],[268,64,283,62,"length"],[268,70,283,68],[268,101,283,99],[268,102,283,100],[269,6,285,4,"enemiesToKill"],[269,19,285,17],[269,20,285,18,"forEach"],[269,27,285,25],[269,28,285,26],[269,29,285,27,"enemy"],[269,34,285,32],[269,36,285,34,"index"],[269,41,285,39],[269,46,285,44],[270,8,286,6,"console"],[270,15,286,13],[270,16,286,14,"log"],[270,19,286,17],[270,20,286,18],[270,57,286,55,"index"],[270,62,286,60],[270,65,286,63],[270,66,286,64],[270,70,286,68,"enemiesToKill"],[270,83,286,81],[270,84,286,82,"length"],[270,90,286,88],[270,104,286,102,"enemy"],[270,109,286,107],[270,110,286,108,"id"],[270,112,286,110],[270,114,286,112],[270,115,286,113],[271,8,287,6,"handleEnemyKill"],[271,23,287,21],[271,24,287,22,"enemy"],[271,29,287,27],[271,30,287,28],[272,6,288,4],[272,7,288,5],[272,8,288,6],[273,4,289,2],[273,5,289,3],[273,7,289,5],[273,8,289,6,"handleEnemyKill"],[273,23,289,21],[273,24,289,22],[273,25,289,23],[273,26,289,24],[273,27,289,25],[275,4,291,2],[276,4,292,2],[276,8,292,8,"findClosestEnemyInternal"],[276,32,292,32],[276,35,292,36,"enemies"],[276,42,292,58],[276,46,292,83],[277,6,293,4],[277,10,293,8,"enemies"],[277,17,293,15],[277,18,293,16,"length"],[277,24,293,22],[277,29,293,27],[277,30,293,28],[277,32,293,30],[277,39,293,37],[277,43,293,41],[279,6,295,4],[280,6,296,4],[280,10,296,10,"SCREEN_WIDTH"],[280,22,296,22],[280,25,296,25],[280,28,296,28],[281,6,297,4],[281,10,297,10,"GAME_AREA_HEIGHT"],[281,26,297,26],[281,29,297,29],[281,32,297,32],[281,35,297,35],[281,38,297,38],[281,39,297,39],[281,40,297,40],[282,6,298,4],[282,10,298,10,"ninjaX"],[282,16,298,16],[282,19,298,19,"SCREEN_WIDTH"],[282,31,298,31],[282,34,298,34],[282,35,298,35],[283,6,299,4],[283,10,299,10,"ninjaY"],[283,16,299,16],[283,19,299,19,"GAME_AREA_HEIGHT"],[283,35,299,35],[283,38,299,38],[283,39,299,39],[284,6,301,4],[284,10,301,8,"closestEnemy"],[284,22,301,20],[284,25,301,23,"enemies"],[284,32,301,30],[284,33,301,31],[284,34,301,32],[284,35,301,33],[285,6,302,4],[285,10,302,8,"closestDistance"],[285,25,302,23],[285,28,302,26,"Infinity"],[285,36,302,34],[286,6,304,4,"enemies"],[286,13,304,11],[286,14,304,12,"forEach"],[286,21,304,19],[286,22,304,20,"enemy"],[286,27,304,25],[286,31,304,29],[287,8,305,6],[287,12,305,12,"distance"],[287,20,305,20],[287,23,305,23,"Math"],[287,27,305,27],[287,28,305,28,"sqrt"],[287,32,305,32],[287,33,306,8,"Math"],[287,37,306,12],[287,38,306,13,"pow"],[287,41,306,16],[287,42,306,17,"enemy"],[287,47,306,22],[287,48,306,23,"position"],[287,56,306,31],[287,57,306,32,"x"],[287,58,306,33],[287,61,306,36,"ninjaX"],[287,67,306,42],[287,69,306,44],[287,70,306,45],[287,71,306,46],[287,74,307,8,"Math"],[287,78,307,12],[287,79,307,13,"pow"],[287,82,307,16],[287,83,307,17,"enemy"],[287,88,307,22],[287,89,307,23,"position"],[287,97,307,31],[287,98,307,32,"y"],[287,99,307,33],[287,102,307,36,"ninjaY"],[287,108,307,42],[287,110,307,44],[287,111,307,45],[287,112,308,6],[287,113,308,7],[288,8,310,6],[288,12,310,10,"distance"],[288,20,310,18],[288,23,310,21,"closestDistance"],[288,38,310,36],[288,40,310,38],[289,10,311,8,"closestDistance"],[289,25,311,23],[289,28,311,26,"distance"],[289,36,311,34],[290,10,312,8,"closestEnemy"],[290,22,312,20],[290,25,312,23,"enemy"],[290,30,312,28],[291,8,313,6],[292,6,314,4],[292,7,314,5],[292,8,314,6],[293,6,316,4,"console"],[293,13,316,11],[293,14,316,12,"log"],[293,17,316,15],[293,18,316,16],[293,60,316,58,"closestDistance"],[293,75,316,73],[293,76,316,74,"toFixed"],[293,83,316,81],[293,84,316,82],[293,85,316,83],[293,86,316,84],[293,88,316,86],[293,89,316,87],[294,6,317,4],[294,13,317,11,"closestEnemy"],[294,25,317,23],[295,4,318,2],[295,5,318,3],[297,4,320,2],[298,4,321,2],[298,8,321,8,"findClosestEnemy"],[298,24,321,24],[298,27,321,27,"findClosestEnemy"],[298,28,321,27],[298,33,321,53],[299,6,322,4],[299,13,322,11,"findClosestEnemyInternal"],[299,37,322,35],[299,38,322,36,"combatState"],[299,49,322,47],[299,50,322,48,"enemies"],[299,57,322,55],[299,58,322,56],[300,4,323,2],[300,5,323,3],[302,4,325,2],[303,4,326,2],[303,8,326,2,"_useState7"],[303,18,326,2],[303,21,326,58],[303,25,326,58,"useState"],[303,31,326,66],[303,32,326,66,"useState"],[303,40,326,66],[303,42,326,91],[304,8,326,93,"x"],[304,9,326,94],[304,11,326,96],[304,12,326,97],[305,8,326,99,"y"],[305,9,326,100],[305,11,326,102],[306,6,326,104],[306,7,326,105],[306,8,326,106],[307,6,326,106,"_useState8"],[307,16,326,106],[307,23,326,106,"_slicedToArray"],[307,37,326,106],[307,38,326,106,"default"],[307,45,326,106],[307,47,326,106,"_useState7"],[307,57,326,106],[308,6,326,9,"currentNinjaPosition"],[308,26,326,29],[308,29,326,29,"_useState8"],[308,39,326,29],[309,6,326,31,"setCurrentNinjaPosition"],[309,29,326,54],[309,32,326,54,"_useState8"],[309,42,326,54],[310,4,327,2],[310,8,327,2,"_useState9"],[310,18,327,2],[310,21,327,60],[310,25,327,60,"useState"],[310,31,327,68],[310,32,327,68,"useState"],[310,40,327,68],[310,42,327,69],[310,47,327,74],[310,48,327,75],[311,6,327,75,"_useState0"],[311,16,327,75],[311,23,327,75,"_slicedToArray"],[311,37,327,75],[311,38,327,75,"default"],[311,45,327,75],[311,47,327,75,"_useState9"],[311,57,327,75],[312,6,327,9,"isManualControlActive"],[312,27,327,30],[312,30,327,30,"_useState0"],[312,40,327,30],[313,6,327,32,"setIsManualControlActive"],[313,30,327,56],[313,33,327,56,"_useState0"],[313,43,327,56],[315,4,329,2],[316,4,330,2],[316,8,330,8,"updateNinjaPosition"],[316,27,330,27],[316,30,330,30],[316,34,330,30,"useCallback"],[316,40,330,41],[316,41,330,41,"useCallback"],[316,52,330,41],[316,54,330,43,"newPosition"],[316,65,330,78],[316,69,330,83],[317,6,331,4,"setCurrentNinjaPosition"],[317,29,331,27],[317,30,331,28,"newPosition"],[317,41,331,39],[317,42,331,40],[318,4,332,2],[318,5,332,3],[318,7,332,5],[318,9,332,7],[318,10,332,8],[320,4,334,2],[321,4,335,2],[321,8,335,8,"setManualControlActive"],[321,30,335,30],[321,33,335,33],[321,37,335,33,"useCallback"],[321,43,335,44],[321,44,335,44,"useCallback"],[321,55,335,44],[321,57,335,46,"active"],[321,63,335,61],[321,67,335,66],[322,6,336,4,"setIsManualControlActive"],[322,30,336,28],[322,31,336,29,"active"],[322,37,336,35],[322,38,336,36],[323,6,337,4,"console"],[323,13,337,11],[323,14,337,12,"log"],[323,17,337,15],[323,18,337,16],[323,39,337,37,"active"],[323,45,337,43],[323,48,337,46],[323,59,337,57],[323,62,337,60],[323,75,337,73],[323,88,337,86,"active"],[323,94,337,92],[323,97,337,95],[323,105,337,103],[323,108,337,106],[323,117,337,115],[323,119,337,117],[323,120,337,118],[324,4,338,2],[324,5,338,3],[324,7,338,5],[324,9,338,7],[324,10,338,8],[326,4,340,2],[327,4,341,2],[327,8,341,8,"handleProjectileHit"],[327,27,341,27],[327,30,341,31,"projectile"],[327,40,341,59],[327,44,341,64],[328,6,342,4,"console"],[328,13,342,11],[328,14,342,12,"log"],[328,17,342,15],[328,18,342,16],[328,35,342,33,"projectile"],[328,45,342,43],[328,46,342,44,"id"],[328,48,342,46],[328,62,342,60,"projectile"],[328,72,342,70],[328,73,342,71,"targetEnemyId"],[328,86,342,84],[328,94,342,92,"projectile"],[328,104,342,102],[328,105,342,103,"damage"],[328,111,342,109],[328,120,342,118],[328,121,342,119],[329,6,344,4,"setCombatState"],[329,20,344,18],[329,21,344,19,"prev"],[329,25,344,23],[329,29,344,27],[330,8,345,6],[330,12,345,12,"newState"],[330,20,345,20],[330,23,345,23],[331,10,345,25],[331,13,345,28,"prev"],[332,8,345,33],[332,9,345,34],[334,8,347,6],[335,8,348,6],[335,12,348,12,"enemyIndex"],[335,22,348,22],[335,25,348,25,"newState"],[335,33,348,33],[335,34,348,34,"enemies"],[335,41,348,41],[335,42,348,42,"findIndex"],[335,51,348,51],[335,52,348,52,"e"],[335,53,348,53],[335,57,348,57,"e"],[335,58,348,58],[335,59,348,59,"id"],[335,61,348,61],[335,66,348,66,"projectile"],[335,76,348,76],[335,77,348,77,"targetEnemyId"],[335,90,348,90],[335,91,348,91],[336,8,349,6],[336,12,349,10,"enemyIndex"],[336,22,349,20],[336,26,349,24],[336,27,349,25],[336,29,349,27],[337,10,350,8,"newState"],[337,18,350,16],[337,19,350,17,"enemies"],[337,26,350,24],[337,29,350,27],[337,30,350,28],[337,33,350,31,"newState"],[337,41,350,39],[337,42,350,40,"enemies"],[337,49,350,47],[337,50,350,48],[338,10,351,8,"newState"],[338,18,351,16],[338,19,351,17,"enemies"],[338,26,351,24],[338,27,351,25,"enemyIndex"],[338,37,351,35],[338,38,351,36],[338,41,351,39],[339,12,352,10],[339,15,352,13,"newState"],[339,23,352,21],[339,24,352,22,"enemies"],[339,31,352,29],[339,32,352,30,"enemyIndex"],[339,42,352,40],[339,43,352,41],[340,12,353,10,"health"],[340,18,353,16],[340,20,353,18,"newState"],[340,28,353,26],[340,29,353,27,"enemies"],[340,36,353,34],[340,37,353,35,"enemyIndex"],[340,47,353,45],[340,48,353,46],[340,49,353,47,"health"],[340,55,353,53],[340,58,353,56,"projectile"],[340,68,353,66],[340,69,353,67,"damage"],[340,75,353,73],[341,12,354,10,"lastDamaged"],[341,23,354,21],[341,25,354,23,"combatEngine"],[341,44,354,35],[341,45,354,35,"combatEngine"],[341,57,354,35],[341,58,354,36,"getCurrentTick"],[341,72,354,50],[341,73,354,51],[342,10,355,8],[342,11,355,9],[343,10,357,8,"console"],[343,17,357,15],[343,18,357,16,"log"],[343,21,357,19],[343,22,357,20],[343,34,357,32,"projectile"],[343,44,357,42],[343,45,357,43,"targetEnemyId"],[343,58,357,56],[343,70,357,68,"newState"],[343,78,357,76],[343,79,357,77,"enemies"],[343,86,357,84],[343,87,357,85,"enemyIndex"],[343,97,357,95],[343,98,357,96],[343,99,357,97,"health"],[343,105,357,103],[343,109,357,107,"newState"],[343,117,357,115],[343,118,357,116,"enemies"],[343,125,357,123],[343,126,357,124,"enemyIndex"],[343,136,357,134],[343,137,357,135],[343,138,357,136,"maxHealth"],[343,147,357,145],[343,149,357,147],[343,150,357,148],[344,8,358,6],[345,8,360,6],[345,15,360,13,"newState"],[345,23,360,21],[346,6,361,4],[346,7,361,5],[346,8,361,6],[348,6,363,4],[349,6,364,4,"setProjectiles"],[349,20,364,18],[349,21,364,19,"prev"],[349,25,364,23],[349,29,364,27,"prev"],[349,33,364,31],[349,34,364,32,"filter"],[349,40,364,38],[349,41,364,39,"p"],[349,42,364,40],[349,46,364,44,"p"],[349,47,364,45],[349,48,364,46,"id"],[349,50,364,48],[349,55,364,53,"projectile"],[349,65,364,63],[349,66,364,64,"id"],[349,68,364,66],[349,69,364,67],[349,70,364,68],[350,4,365,2],[350,5,365,3],[352,4,367,2],[353,4,368,2],[353,8,368,8,"castAbility"],[353,19,368,19],[353,22,368,22,"castAbility"],[353,23,368,23,"state"],[353,28,368,41],[353,30,368,43,"slotIndex"],[353,39,368,60],[353,44,368,65],[354,6,369,4],[354,10,369,10,"deck"],[354,14,369,14],[354,17,369,17,"state"],[354,22,369,22],[354,23,369,23,"abilityManager"],[354,37,369,37],[354,38,369,38,"getDeck"],[354,45,369,45],[354,46,369,46],[354,47,369,47],[355,6,370,4],[355,10,370,10,"ability"],[355,17,370,17],[355,20,370,20,"deck"],[355,24,370,24],[355,25,370,25,"slots"],[355,30,370,30],[355,31,370,31,"slotIndex"],[355,40,370,40],[355,41,370,41],[356,6,371,4],[356,10,371,8],[356,11,371,9,"ability"],[356,18,371,16],[356,20,371,18],[358,6,373,4],[359,6,374,4],[359,10,374,10,"target"],[359,16,374,16],[359,19,374,19,"findClosestEnemyInternal"],[359,43,374,43],[359,44,374,44,"state"],[359,49,374,49],[359,50,374,50,"enemies"],[359,57,374,57],[359,58,374,58],[360,6,375,4],[360,10,375,8],[360,11,375,9,"target"],[360,17,375,15],[360,19,375,17],[362,6,377,4],[363,6,378,4],[363,10,378,8,"damage"],[363,16,378,14],[363,19,378,17,"ability"],[363,26,378,24],[363,27,378,25,"stats"],[363,32,378,30],[363,33,378,31,"baseDamage"],[363,43,378,41],[365,6,380,4],[366,6,381,4,"deck"],[366,10,381,8],[366,11,381,9,"activeSynergies"],[366,26,381,24],[366,27,381,25,"forEach"],[366,34,381,32],[366,35,381,33,"synergy"],[366,42,381,40],[366,46,381,44],[367,8,382,6],[367,12,382,10,"synergy"],[367,19,382,17],[367,20,382,18,"bonus"],[367,25,382,23],[367,26,382,24,"damageBonus"],[367,37,382,35],[367,41,383,10,"synergy"],[367,48,383,17],[367,49,383,18,"requiredTags"],[367,61,383,30],[367,62,383,31,"some"],[367,66,383,35],[367,67,383,36,"tag"],[367,70,383,39],[367,74,383,43,"ability"],[367,81,383,50],[367,82,383,51,"tags"],[367,86,383,55],[367,87,383,56,"includes"],[367,95,383,64],[367,96,383,65,"tag"],[367,99,383,68],[367,100,383,69],[367,101,383,70],[367,103,383,72],[368,10,384,8,"damage"],[368,16,384,14],[368,20,384,19],[368,21,384,20],[368,24,384,23,"synergy"],[368,31,384,30],[368,32,384,31,"bonus"],[368,37,384,36],[368,38,384,37,"damageBonus"],[368,49,384,48],[368,52,384,51],[368,55,384,55],[369,8,385,6],[370,6,386,4],[370,7,386,5],[370,8,386,6],[372,6,388,4],[373,6,389,4],[373,10,389,10,"damageResult"],[373,22,389,22],[373,25,389,25,"DamageCalculator"],[373,44,389,41],[373,45,389,41,"DamageCalculator"],[373,61,389,41],[373,62,389,42,"calculateDamage"],[373,77,389,57],[373,78,389,58,"damage"],[373,84,389,64],[373,86,389,66,"state"],[373,91,389,71],[373,92,389,72,"playerStats"],[373,103,389,83],[373,105,389,85,"target"],[373,111,389,91],[373,112,389,92,"stats"],[373,117,389,97],[373,118,389,98],[375,6,391,4],[376,6,392,4,"createProjectile"],[376,22,392,20],[376,23,392,21,"target"],[376,29,392,27],[376,31,392,29,"damageResult"],[376,43,392,41],[376,44,392,42,"damage"],[376,50,392,48],[376,52,392,50,"currentNinjaPosition"],[376,72,392,70],[376,73,392,71],[378,6,394,4],[379,6,395,4],[379,10,395,8,"ability"],[379,17,395,15],[379,18,395,16,"effects"],[379,25,395,23],[379,26,395,24,"includes"],[379,34,395,32],[379,35,395,33],[379,40,395,38],[379,41,395,39],[379,45,395,43,"ability"],[379,52,395,50],[379,53,395,51,"stats"],[379,58,395,56],[379,59,395,57,"duration"],[379,67,395,65],[379,69,395,67],[380,8,396,6,"state"],[380,13,396,11],[380,14,396,12,"statusEffects"],[380,27,396,25],[380,28,396,26,"addEffect"],[380,37,396,35],[380,38,396,36,"target"],[380,44,396,42],[380,45,396,43,"id"],[380,47,396,45],[380,49,396,47],[381,10,397,8,"id"],[381,12,397,10],[381,14,397,12],[381,17,397,15,"ability"],[381,24,397,22],[381,25,397,23,"id"],[381,27,397,25],[381,33,397,31],[382,10,398,8,"type"],[382,14,398,12],[382,16,398,14],[382,21,398,19],[383,10,399,8,"remainingTicks"],[383,24,399,22],[383,26,399,24,"Math"],[383,30,399,28],[383,31,399,29,"floor"],[383,36,399,34],[383,37,399,35,"ability"],[383,44,399,42],[383,45,399,43,"stats"],[383,50,399,48],[383,51,399,49,"duration"],[383,59,399,57],[383,62,399,60],[383,64,399,62],[383,65,399,63],[384,10,399,65],[385,10,400,8,"tickInterval"],[385,22,400,20],[385,24,400,22],[385,26,400,24],[386,10,400,26],[387,10,401,8,"lastTick"],[387,18,401,16],[387,20,401,18,"state"],[387,25,401,23],[387,26,401,24,"currentTick"],[387,37,401,35],[388,10,402,8,"value"],[388,15,402,13],[388,17,402,15,"Math"],[388,21,402,19],[388,22,402,20,"floor"],[388,27,402,25],[388,28,402,26,"damage"],[388,34,402,32],[388,37,402,35],[388,40,402,38],[388,41,402,39],[389,10,402,41],[390,10,403,8,"stackable"],[390,19,403,17],[390,21,403,19],[391,8,404,6],[391,9,404,7],[391,10,404,8],[392,6,405,4],[393,6,407,4,"console"],[393,13,407,11],[393,14,407,12,"log"],[393,17,407,15],[393,18,407,16],[393,24,407,22,"ability"],[393,31,407,29],[393,32,407,30,"name"],[393,36,407,34],[393,69,407,67,"damageResult"],[393,81,407,79],[393,82,407,80,"damage"],[393,88,407,86],[393,98,407,96,"damageResult"],[393,110,407,108],[393,111,407,109,"isCritical"],[393,121,407,119],[393,124,407,122],[393,134,407,132],[393,137,407,135],[393,139,407,137],[393,141,407,139],[393,142,407,140],[394,4,408,2],[394,5,408,3],[396,4,410,2],[397,4,411,2],[397,8,411,8,"createProjectile"],[397,24,411,24],[397,27,411,27,"createProjectile"],[397,28,411,28,"targetEnemy"],[397,39,411,52],[397,41,411,54,"damage"],[397,47,411,68],[397,49,411,70,"ninjaPos"],[397,57,411,103],[397,62,411,108],[398,6,412,4],[398,10,412,10,"SCREEN_WIDTH"],[398,22,412,22],[398,25,412,25],[398,28,412,28],[399,6,413,4],[399,10,413,10,"GAME_AREA_HEIGHT"],[399,26,413,26],[399,29,413,29],[399,32,413,32],[399,35,413,35],[399,38,413,38],[399,39,413,39],[399,40,413,40],[400,6,414,4],[400,10,414,10,"NINJA_SIZE"],[400,20,414,20],[400,23,414,23],[400,25,414,25],[402,6,416,4],[403,6,417,4],[403,10,417,10,"ninjaX"],[403,16,417,16],[403,19,417,19,"ninjaPos"],[403,27,417,27],[403,30,417,30,"ninjaPos"],[403,38,417,38],[403,39,417,39,"x"],[403,40,417,40],[403,43,417,43,"NINJA_SIZE"],[403,53,417,53],[403,56,417,56],[403,57,417,57],[403,60,417,60,"SCREEN_WIDTH"],[403,72,417,72],[403,75,417,75],[403,76,417,76],[404,6,418,4],[404,10,418,10,"ninjaY"],[404,16,418,16],[404,19,418,19,"ninjaPos"],[404,27,418,27],[404,30,418,30,"ninjaPos"],[404,38,418,38],[404,39,418,39,"y"],[404,40,418,40],[404,43,418,43,"NINJA_SIZE"],[404,53,418,53],[404,56,418,56],[404,57,418,57],[404,60,418,60,"GAME_AREA_HEIGHT"],[404,76,418,76],[404,79,418,79],[404,80,418,80],[405,6,419,4],[405,10,419,10,"ENEMY_SIZE"],[405,20,419,20],[405,23,419,23],[405,25,419,25],[406,6,421,4],[406,10,421,10,"projectile"],[406,20,421,38],[406,23,421,41],[407,8,422,6,"id"],[407,10,422,8],[407,12,422,10],[407,20,422,18,"Date"],[407,24,422,22],[407,25,422,23,"now"],[407,28,422,26],[407,29,422,27],[407,30,422,28],[407,34,422,32,"Math"],[407,38,422,36],[407,39,422,37,"random"],[407,45,422,43],[407,46,422,44],[407,47,422,45],[407,49,422,47],[408,8,423,6,"x"],[408,9,423,7],[408,11,423,9,"ninjaX"],[408,17,423,15],[409,8,424,6,"y"],[409,9,424,7],[409,11,424,9,"ninjaY"],[409,17,424,15],[410,8,425,6,"targetX"],[410,15,425,13],[410,17,425,15,"targetEnemy"],[410,28,425,26],[410,29,425,27,"position"],[410,37,425,35],[410,38,425,36,"x"],[410,39,425,37],[410,42,425,40,"ENEMY_SIZE"],[410,52,425,50],[410,55,425,53],[410,56,425,54],[411,8,426,6,"targetY"],[411,15,426,13],[411,17,426,15,"targetEnemy"],[411,28,426,26],[411,29,426,27,"position"],[411,37,426,35],[411,38,426,36,"y"],[411,39,426,37],[411,42,426,40,"ENEMY_SIZE"],[411,52,426,50],[411,55,426,53],[411,56,426,54],[412,8,427,6,"targetEnemyId"],[412,21,427,19],[412,23,427,21,"targetEnemy"],[412,34,427,32],[412,35,427,33,"id"],[412,37,427,35],[413,8,428,6,"damage"],[413,14,428,12],[413,16,428,14,"damage"],[413,22,428,20],[414,8,429,6,"startTime"],[414,17,429,15],[414,19,429,17,"Date"],[414,23,429,21],[414,24,429,22,"now"],[414,27,429,25],[414,28,429,26],[414,29,429,27],[415,8,430,6,"duration"],[415,16,430,14],[415,18,430,16],[415,21,430,19],[415,22,430,21],[416,6,431,4],[416,7,431,5],[417,6,433,4,"console"],[417,13,433,11],[417,14,433,12,"log"],[417,17,433,15],[417,18,433,16],[417,53,433,51,"targetEnemy"],[417,64,433,62],[417,65,433,63,"id"],[417,67,433,65],[417,75,433,73,"damage"],[417,81,433,79],[417,90,433,88],[417,91,433,89],[418,6,434,4,"console"],[418,13,434,11],[418,14,434,12,"log"],[418,17,434,15],[418,18,434,16],[418,53,434,51,"ninjaX"],[418,59,434,57],[418,64,434,62,"ninjaY"],[418,70,434,68],[418,87,434,85,"projectile"],[418,97,434,95],[418,98,434,96,"targetX"],[418,105,434,103],[418,110,434,108,"projectile"],[418,120,434,118],[418,121,434,119,"targetY"],[418,128,434,126],[418,131,434,129],[418,132,434,130],[419,6,436,4,"setProjectiles"],[419,20,436,18],[419,21,436,19,"prev"],[419,25,436,23],[419,29,436,27],[419,30,436,28],[419,33,436,31,"prev"],[419,37,436,35],[419,39,436,37,"projectile"],[419,49,436,47],[419,50,436,48],[419,51,436,49],[421,6,438,4],[422,6,439,4,"setTimeout"],[422,16,439,14],[422,17,439,15],[422,23,439,21],[423,8,440,6,"handleProjectileHit"],[423,27,440,25],[423,28,440,26,"projectile"],[423,38,440,36],[423,39,440,37],[424,6,441,4],[424,7,441,5],[424,9,441,7],[424,12,441,10],[424,13,441,11],[425,4,442,2],[425,5,442,3],[427,4,444,2],[428,4,445,2],[428,8,445,8,"spawnTestEnemy"],[428,22,445,22],[428,25,445,26,"state"],[428,30,445,44],[428,34,445,49],[429,6,446,4],[430,6,447,4],[430,10,447,10,"SCREEN_WIDTH"],[430,22,447,22],[430,25,447,25],[430,28,447,28],[430,29,447,29],[430,30,447,30],[431,6,448,4],[431,10,448,10,"GAME_AREA_HEIGHT"],[431,26,448,26],[431,29,448,29],[431,32,448,32],[431,35,448,35],[431,38,448,38],[431,39,448,39],[431,40,448,40],[432,6,449,4],[432,10,449,10,"ENEMY_SIZE"],[432,20,449,20],[432,23,449,23],[432,25,449,25],[434,6,451,4],[435,6,452,4],[435,10,452,10,"x"],[435,11,452,11],[435,14,452,14,"Math"],[435,18,452,18],[435,19,452,19,"random"],[435,25,452,25],[435,26,452,26],[435,27,452,27],[435,31,452,31,"SCREEN_WIDTH"],[435,43,452,43],[435,46,452,46,"ENEMY_SIZE"],[435,56,452,56],[435,59,452,59],[435,60,452,60],[435,61,452,61],[435,64,452,64,"ENEMY_SIZE"],[435,74,452,74],[435,75,452,75],[435,76,452,76],[436,6,453,4],[436,10,453,10,"y"],[436,11,453,11],[436,14,453,14,"Math"],[436,18,453,18],[436,19,453,19,"random"],[436,25,453,25],[436,26,453,26],[436,27,453,27],[436,31,453,31,"GAME_AREA_HEIGHT"],[436,47,453,47],[436,50,453,50,"ENEMY_SIZE"],[436,60,453,60],[436,63,453,63],[436,64,453,64],[436,65,453,65],[436,68,453,68,"ENEMY_SIZE"],[436,78,453,78],[436,79,453,79],[436,80,453,80],[438,6,455,4],[438,10,455,10,"enemy"],[438,15,455,28],[438,18,455,31],[439,8,456,6,"id"],[439,10,456,8],[439,12,456,10],[439,21,456,19],[439,23,456,21,"enemyCounter"],[439,35,456,33],[439,37,456,35],[440,8,457,6,"name"],[440,12,457,10],[440,14,457,12],[440,24,457,22],[441,8,458,6,"health"],[441,14,458,12],[441,16,458,14],[441,19,458,17],[442,8,459,6,"maxHealth"],[442,17,459,15],[442,19,459,17],[442,22,459,20],[443,8,460,6,"stats"],[443,13,460,11],[443,15,460,13],[444,10,461,8,"attack"],[444,16,461,14],[444,18,461,16],[444,20,461,18],[445,10,462,8,"defense"],[445,17,462,15],[445,19,462,17],[445,21,462,19],[446,10,463,8,"health"],[446,16,463,14],[446,18,463,16],[446,21,463,19],[447,10,464,8,"maxHealth"],[447,19,464,17],[447,21,464,19],[447,24,464,22],[448,10,465,8,"critChance"],[448,20,465,18],[448,22,465,20],[448,23,465,21],[449,10,466,8,"critDamage"],[449,20,466,18],[449,22,466,20],[449,25,466,23],[450,10,467,8,"cooldownReduction"],[450,27,467,25],[450,29,467,27],[451,8,468,6],[451,9,468,7],[452,8,469,6,"position"],[452,16,469,14],[452,18,469,16],[453,10,469,18,"x"],[453,11,469,19],[454,10,469,21,"y"],[455,8,469,23],[455,9,469,24],[456,8,470,6,"lastDamaged"],[456,19,470,17],[456,21,470,19],[457,6,471,4],[457,7,471,5],[458,6,473,4,"state"],[458,11,473,9],[458,12,473,10,"enemies"],[458,19,473,17],[458,20,473,18,"push"],[458,24,473,22],[458,25,473,23,"enemy"],[458,30,473,28],[458,31,473,29],[459,4,474,2],[459,5,474,3],[461,4,476,2],[462,4,477,2],[462,8,477,8,"startCombat"],[462,19,477,19],[462,22,477,22,"React"],[462,27,477,27],[462,28,477,27,"default"],[462,35,477,27],[462,36,477,28,"useCallback"],[462,47,477,39],[462,48,477,40],[462,54,477,46],[463,6,478,4,"console"],[463,13,478,11],[463,14,478,12,"log"],[463,17,478,15],[463,18,478,16],[463,63,478,61],[463,64,478,62],[464,6,479,4,"setCombatState"],[464,20,479,18],[464,21,479,19,"prev"],[464,25,479,23],[464,30,479,28],[465,8,479,30],[465,11,479,33,"prev"],[465,15,479,37],[466,8,479,39,"isInCombat"],[466,18,479,49],[466,20,479,51],[467,6,479,56],[467,7,479,57],[467,8,479,58],[467,9,479,59],[469,6,481,4],[470,6,482,4,"combatEngine"],[470,25,482,16],[470,26,482,16,"combatEngine"],[470,38,482,16],[470,39,482,17,"addTickCallback"],[470,54,482,32],[470,55,482,33,"handleCombatTick"],[470,71,482,49],[470,72,482,50],[471,6,483,4,"console"],[471,13,483,11],[471,14,483,12,"log"],[471,17,483,15],[471,18,483,16],[471,62,483,60],[471,63,483,61],[473,6,485,4],[474,6,486,4,"combatEngine"],[474,25,486,16],[474,26,486,16,"combatEngine"],[474,38,486,16],[474,39,486,17,"start"],[474,44,486,22],[474,45,486,23],[474,46,486,24],[475,4,487,2],[475,5,487,3],[475,7,487,5],[475,8,487,6,"combatEngine"],[475,27,487,18],[475,28,487,18,"combatEngine"],[475,40,487,18],[475,42,487,20,"handleCombatTick"],[475,58,487,36],[475,59,487,37],[475,60,487,38],[477,4,489,2],[478,4,490,2],[478,8,490,8,"stopCombat"],[478,18,490,18],[478,21,490,21,"React"],[478,26,490,26],[478,27,490,26,"default"],[478,34,490,26],[478,35,490,27,"useCallback"],[478,46,490,38],[478,47,490,39],[478,53,490,45],[479,6,491,4,"setCombatState"],[479,20,491,18],[479,21,491,19,"prev"],[479,25,491,23],[479,30,491,28],[480,8,491,30],[480,11,491,33,"prev"],[480,15,491,37],[481,8,491,39,"isInCombat"],[481,18,491,49],[481,20,491,51],[482,6,491,57],[482,7,491,58],[482,8,491,59],[482,9,491,60],[483,6,492,4,"combatEngine"],[483,25,492,16],[483,26,492,16,"combatEngine"],[483,38,492,16],[483,39,492,17,"removeTickCallback"],[483,57,492,35],[483,58,492,36,"handleCombatTick"],[483,74,492,52],[483,75,492,53],[484,4,493,2],[484,5,493,3],[484,7,493,5],[484,8,493,6,"combatEngine"],[484,27,493,18],[484,28,493,18,"combatEngine"],[484,40,493,18],[484,42,493,20,"handleCombatTick"],[484,58,493,36],[484,59,493,37],[484,60,493,38],[486,4,495,2],[487,4,496,2],[487,8,496,8,"equipAbility"],[487,20,496,20],[487,23,496,23,"equipAbility"],[487,24,496,24,"abilityId"],[487,33,496,41],[487,35,496,43,"slotIndex"],[487,44,496,60],[487,49,496,74],[488,6,497,4],[488,13,497,11,"combatState"],[488,24,497,22],[488,25,497,23,"abilityManager"],[488,39,497,37],[488,40,497,38,"equipAbility"],[488,52,497,50],[488,53,497,51,"abilityId"],[488,62,497,60],[488,64,497,62,"slotIndex"],[488,73,497,71],[488,74,497,72],[489,4,498,2],[489,5,498,3],[490,4,500,2],[490,8,500,8,"getDeck"],[490,15,500,15],[490,18,500,18,"getDeck"],[490,19,500,18],[490,24,500,24],[491,6,501,4],[491,13,501,11,"combatState"],[491,24,501,22],[491,25,501,23,"abilityManager"],[491,39,501,37],[491,40,501,38,"getDeck"],[491,47,501,45],[491,48,501,46],[491,49,501,47],[492,4,502,2],[492,5,502,3],[493,4,504,2],[493,8,504,8,"getAvailableAbilities"],[493,29,504,29],[493,32,504,32,"getAvailableAbilities"],[493,33,504,32],[493,38,504,38],[494,6,505,4],[494,13,505,11,"combatState"],[494,24,505,22],[494,25,505,23,"abilityManager"],[494,39,505,37],[494,40,505,38,"getAvailableAbilities"],[494,61,505,59],[494,62,505,60],[494,63,505,61],[495,4,506,2],[495,5,506,3],[496,4,508,2],[496,8,508,8,"upgradeAbility"],[496,22,508,22],[496,25,508,26,"abilityId"],[496,34,508,43],[496,38,508,57],[497,6,509,4],[497,13,509,11,"combatState"],[497,24,509,22],[497,25,509,23,"abilityManager"],[497,39,509,37],[497,40,509,38,"upgradeAbility"],[497,54,509,52],[497,55,509,53,"abilityId"],[497,64,509,62],[497,65,509,63],[498,4,510,2],[498,5,510,3],[500,4,512,2],[501,4,513,2],[501,8,513,8,"clearAllEnemies"],[501,23,513,23],[501,26,513,26,"clearAllEnemies"],[501,27,513,26],[501,32,513,32],[502,6,514,4,"console"],[502,13,514,11],[502,14,514,12,"log"],[502,17,514,15],[502,18,514,16],[502,67,514,65],[502,68,514,66],[503,6,515,4,"setCombatState"],[503,20,515,18],[503,21,515,19,"prev"],[503,25,515,23],[503,30,515,28],[504,8,516,6],[504,11,516,9,"prev"],[504,15,516,13],[505,8,517,6,"enemies"],[505,15,517,13],[505,17,517,15],[506,6,518,4],[506,7,518,5],[506,8,518,6],[506,9,518,7],[507,4,519,2],[507,5,519,3],[509,4,521,2],[510,4,522,2],[510,8,522,8,"triggerLevelUpExplosion"],[510,31,522,31],[510,34,522,34,"triggerLevelUpExplosion"],[510,35,522,34],[510,40,522,40],[511,6,523,4,"console"],[511,13,523,11],[511,14,523,12,"log"],[511,17,523,15],[511,18,523,16],[511,70,523,68],[511,71,523,69],[512,6,525,4],[512,10,525,10,"explosionTime"],[512,23,525,23],[512,26,525,26,"Date"],[512,30,525,30],[512,31,525,31,"now"],[512,34,525,34],[512,35,525,35],[512,36,525,36],[513,6,526,4,"setLastExplosionTime"],[513,26,526,24],[513,27,526,25,"explosionTime"],[513,40,526,38],[513,41,526,39],[514,6,528,4,"setCombatState"],[514,20,528,18],[514,21,528,19,"prev"],[514,25,528,23],[514,29,528,27],[515,8,529,6],[516,8,530,6],[516,12,530,12,"enemyCount"],[516,22,530,22],[516,25,530,25,"prev"],[516,29,530,29],[516,30,530,30,"enemies"],[516,37,530,37],[516,38,530,38,"length"],[516,44,530,44],[517,8,531,6],[517,12,531,12,"explosionXP"],[517,23,531,23],[517,26,531,26,"enemyCount"],[517,36,531,36],[517,39,531,39],[517,41,531,41],[517,42,531,42],[517,43,531,43],[518,8,532,6],[518,12,532,12,"explosionGold"],[518,25,532,25],[518,28,532,28,"enemyCount"],[518,38,532,38],[518,41,532,41],[518,42,532,42],[518,43,532,43],[518,44,532,44],[520,8,534,6,"console"],[520,15,534,13],[520,16,534,14,"log"],[520,19,534,17],[520,20,534,18],[520,44,534,42,"enemyCount"],[520,54,534,52],[520,76,534,74,"explosionXP"],[520,87,534,85],[520,98,534,96,"explosionGold"],[520,111,534,109],[520,118,534,116],[520,119,534,117],[522,8,536,6],[523,8,537,6],[523,12,537,10,"explosionXP"],[523,23,537,21],[523,26,537,24],[523,27,537,25],[523,29,537,27],[524,10,538,8,"setTimeout"],[524,20,538,18],[524,21,538,19],[524,27,538,25],[525,12,539,10,"updateNinja"],[525,23,539,21],[525,24,539,23,"ninja"],[525,29,539,28],[525,34,539,34],[526,14,540,12,"experience"],[526,24,540,22],[526,26,540,24,"ninja"],[526,31,540,29],[526,32,540,30,"experience"],[526,42,540,40],[526,45,540,43,"explosionXP"],[526,56,540,54],[527,14,541,12,"gold"],[527,18,541,16],[527,20,541,18,"ninja"],[527,25,541,23],[527,26,541,24,"gold"],[527,30,541,28],[527,33,541,31,"explosionGold"],[528,12,542,10],[528,13,542,11],[528,14,542,12],[528,15,542,13],[529,10,543,8],[529,11,543,9],[529,13,543,11],[529,14,543,12],[529,15,543,13],[529,16,543,14],[529,17,543,15],[530,8,544,6],[532,8,546,6],[533,8,547,6],[534,8,548,6],[534,12,548,12,"damagedEnemies"],[534,26,548,26],[534,29,548,29,"prev"],[534,33,548,33],[534,34,548,34,"enemies"],[534,41,548,41],[534,42,548,42,"map"],[534,45,548,45],[534,46,548,46,"enemy"],[534,51,548,51],[534,56,548,56],[535,10,549,8],[535,13,549,11,"enemy"],[535,18,549,16],[536,10,550,8,"health"],[536,16,550,14],[536,18,550,16],[536,19,550,17],[537,10,550,19],[538,10,551,8,"lastDamaged"],[538,21,551,19],[538,23,551,21,"combatEngine"],[538,42,551,33],[538,43,551,33,"combatEngine"],[538,55,551,33],[538,56,551,34,"getCurrentTick"],[538,70,551,48],[538,71,551,49],[539,8,552,6],[539,9,552,7],[539,10,552,8],[539,11,552,9],[540,8,554,6],[540,15,554,13],[541,10,555,8],[541,13,555,11,"prev"],[541,17,555,15],[542,10,556,8,"enemies"],[542,17,556,15],[542,19,556,17,"damagedEnemies"],[543,8,557,6],[543,9,557,7],[544,6,558,4],[544,7,558,5],[544,8,558,6],[545,4,559,2],[545,5,559,3],[547,4,561,2],[548,4,562,2],[548,8,562,8,"spawnEnemy"],[548,18,562,18],[548,21,562,22,"position"],[548,29,562,57],[548,33,562,75],[549,6,563,4],[549,10,563,10,"SCREEN_WIDTH"],[549,22,563,22],[549,25,563,25],[549,28,563,28],[550,6,564,4],[550,10,564,10,"GAME_AREA_HEIGHT"],[550,26,564,26],[550,29,564,29],[550,32,564,32],[550,35,564,35],[550,38,564,38],[550,39,564,39],[550,40,564,40],[551,6,565,4],[551,10,565,10,"ENEMY_SIZE"],[551,20,565,20],[551,23,565,23],[551,25,565,25],[553,6,567,4],[554,6,568,4],[554,10,568,10,"x"],[554,11,568,11],[554,14,568,14,"position"],[554,22,568,22],[554,24,568,24,"x"],[554,25,568,25],[554,29,568,29,"Math"],[554,33,568,33],[554,34,568,34,"random"],[554,40,568,40],[554,41,568,41],[554,42,568,42],[554,46,568,46,"SCREEN_WIDTH"],[554,58,568,58],[554,61,568,61,"ENEMY_SIZE"],[554,71,568,71],[554,74,568,74],[554,75,568,75],[554,76,568,76],[554,79,568,79,"ENEMY_SIZE"],[554,89,568,89],[555,6,569,4],[555,10,569,10,"y"],[555,11,569,11],[555,14,569,14,"position"],[555,22,569,22],[555,24,569,24,"y"],[555,25,569,25],[555,29,569,29,"Math"],[555,33,569,33],[555,34,569,34,"random"],[555,40,569,40],[555,41,569,41],[555,42,569,42],[555,46,569,46,"GAME_AREA_HEIGHT"],[555,62,569,62],[555,65,569,65,"ENEMY_SIZE"],[555,75,569,75],[555,78,569,78],[555,79,569,79],[555,80,569,80],[555,83,569,83,"ENEMY_SIZE"],[555,93,569,93],[556,6,571,4],[556,10,571,10,"enemy"],[556,15,571,28],[556,18,571,31],[557,8,572,6,"id"],[557,10,572,8],[557,12,572,10],[557,21,572,19],[557,23,572,21,"enemyCounter"],[557,35,572,33],[557,37,572,35],[558,8,573,6,"name"],[558,12,573,10],[558,14,573,12],[558,24,573,22],[559,8,574,6,"health"],[559,14,574,12],[559,16,574,14],[559,19,574,17],[560,8,575,6,"maxHealth"],[560,17,575,15],[560,19,575,17],[560,22,575,20],[561,8,576,6,"stats"],[561,13,576,11],[561,15,576,13],[562,10,577,8,"attack"],[562,16,577,14],[562,18,577,16],[562,20,577,18],[563,10,578,8,"defense"],[563,17,578,15],[563,19,578,17],[563,21,578,19],[564,10,579,8,"health"],[564,16,579,14],[564,18,579,16],[564,21,579,19],[565,10,580,8,"maxHealth"],[565,19,580,17],[565,21,580,19],[565,24,580,22],[566,10,581,8,"critChance"],[566,20,581,18],[566,22,581,20],[566,23,581,21],[567,10,582,8,"critDamage"],[567,20,582,18],[567,22,582,20],[567,25,582,23],[568,10,583,8,"cooldownReduction"],[568,27,583,25],[568,29,583,27],[569,8,584,6],[569,9,584,7],[570,8,585,6,"position"],[570,16,585,14],[570,18,585,16],[571,10,585,18,"x"],[571,11,585,19],[572,10,585,21,"y"],[573,8,585,23],[573,9,585,24],[574,8,586,6,"lastDamaged"],[574,19,586,17],[574,21,586,19],[575,6,587,4],[575,7,587,5],[576,6,589,4,"setCombatState"],[576,20,589,18],[576,21,589,19,"prev"],[576,25,589,23],[576,30,589,28],[577,8,590,6],[577,11,590,9,"prev"],[577,15,590,13],[578,8,591,6,"enemies"],[578,15,591,13],[578,17,591,15],[578,18,591,16],[578,21,591,19,"prev"],[578,25,591,23],[578,26,591,24,"enemies"],[578,33,591,31],[578,35,591,33,"enemy"],[578,40,591,38],[579,6,592,4],[579,7,592,5],[579,8,592,6],[579,9,592,7],[580,6,594,4],[580,13,594,11,"enemy"],[580,18,594,16],[581,4,595,2],[581,5,595,3],[583,4,597,2],[584,4,598,2],[584,8,598,8,"spawnBoss"],[584,17,598,17],[584,20,598,21,"bossEnemy"],[584,29,598,43],[584,33,598,48],[585,6,599,4,"console"],[585,13,599,11],[585,14,599,12,"log"],[585,17,599,15],[585,18,599,16],[585,39,599,37,"bossEnemy"],[585,48,599,46],[585,49,599,47,"name"],[585,53,599,51],[585,90,599,88],[585,91,599,89],[586,6,600,4,"setCombatState"],[586,20,600,18],[586,21,600,19,"prev"],[586,25,600,23],[586,30,600,28],[587,8,601,6],[587,11,601,9,"prev"],[587,15,601,13],[588,8,602,6,"enemies"],[588,15,602,13],[588,17,602,15],[588,18,602,16,"bossEnemy"],[588,27,602,25],[588,28,602,26],[588,29,602,27],[589,6,603,4],[589,7,603,5],[589,8,603,6],[589,9,603,7],[590,4,604,2],[590,5,604,3],[592,4,606,2],[593,4,607,2],[593,8,607,8,"clearSpecificEnemy"],[593,26,607,26],[593,29,607,30,"enemyId"],[593,36,607,45],[593,40,607,50],[594,6,608,4,"setCombatState"],[594,20,608,18],[594,21,608,19,"prev"],[594,25,608,23],[594,30,608,28],[595,8,609,6],[595,11,609,9,"prev"],[595,15,609,13],[596,8,610,6,"enemies"],[596,15,610,13],[596,17,610,15,"prev"],[596,21,610,19],[596,22,610,20,"enemies"],[596,29,610,27],[596,30,610,28,"filter"],[596,36,610,34],[596,37,610,35,"enemy"],[596,42,610,40],[596,46,610,44,"enemy"],[596,51,610,49],[596,52,610,50,"id"],[596,54,610,52],[596,59,610,57,"enemyId"],[596,66,610,64],[597,6,611,4],[597,7,611,5],[597,8,611,6],[597,9,611,7],[598,4,612,2],[598,5,612,3],[600,4,614,2],[601,4,615,2],[601,8,615,8,"useAbilityManually"],[601,26,615,26],[601,29,615,26,"_s3"],[601,32,615,26],[601,33,615,29],[601,37,615,29,"useCallback"],[601,43,615,40],[601,44,615,40,"useCallback"],[601,55,615,40],[601,57,615,40,"_s3"],[601,60,615,40],[601,61,615,42,"slotIndex"],[601,70,615,59],[601,74,615,73],[602,6,615,73,"_s3"],[602,9,615,73],[603,6,616,4,"console"],[603,13,616,11],[603,14,616,12,"log"],[603,17,616,15],[603,18,616,16],[603,53,616,51,"slotIndex"],[603,62,616,60],[603,64,616,62],[603,65,616,63],[605,6,618,4],[606,6,619,4],[606,10,619,10,"isReady"],[606,17,619,17],[606,20,619,20,"combatState"],[606,31,619,31],[606,32,619,32,"abilityManager"],[606,46,619,46],[606,47,619,47,"isAbilityReady"],[606,61,619,61],[606,62,619,62,"slotIndex"],[606,71,619,71],[606,72,619,72],[607,6,620,4],[607,10,620,8],[607,11,620,9,"isReady"],[607,18,620,16],[607,20,620,18],[608,8,621,6,"console"],[608,15,621,13],[608,16,621,14,"log"],[608,19,621,17],[608,20,621,18],[608,41,621,39,"slotIndex"],[608,50,621,48],[608,85,621,83],[608,86,621,84],[609,8,622,6],[609,15,622,13],[609,20,622,18],[610,6,623,4],[612,6,625,4],[613,6,626,4],[613,10,626,8,"combatState"],[613,21,626,19],[613,22,626,20,"enemies"],[613,29,626,27],[613,30,626,28,"length"],[613,36,626,34],[613,41,626,39],[613,42,626,40],[613,44,626,42],[614,8,627,6,"console"],[614,15,627,13],[614,16,627,14,"log"],[614,19,627,17],[614,20,627,18],[614,69,627,67],[614,70,627,68],[615,8,628,6],[615,15,628,13],[615,20,628,18],[616,6,629,4],[618,6,631,4],[619,6,632,4],[619,10,632,10,"currentTick"],[619,21,632,21],[619,24,632,24,"combatEngine"],[619,43,632,36],[619,44,632,36,"combatEngine"],[619,56,632,36],[619,57,632,37,"getCurrentTick"],[619,71,632,51],[619,72,632,52],[619,73,632,53],[620,6,633,4],[620,10,633,10,"success"],[620,17,633,17],[620,20,633,20,"combatState"],[620,31,633,31],[620,32,633,32,"abilityManager"],[620,46,633,46],[620,47,633,47,"useAbility"],[620,57,633,57],[620,58,633,58,"slotIndex"],[620,67,633,67],[620,69,633,69,"currentTick"],[620,80,633,80],[620,81,633,81],[621,6,635,4],[621,10,635,8,"success"],[621,17,635,15],[621,19,635,17],[622,8,636,6],[623,8,637,6,"setCombatState"],[623,22,637,20],[623,23,637,21,"prev"],[623,27,637,25],[623,31,637,29],[624,10,638,8],[624,14,638,14,"newState"],[624,22,638,22],[624,25,638,25],[625,12,638,27],[625,15,638,30,"prev"],[626,10,638,35],[626,11,638,36],[627,10,639,8,"castAbility"],[627,21,639,19],[627,22,639,20,"newState"],[627,30,639,28],[627,32,639,30,"slotIndex"],[627,41,639,39],[627,42,639,40],[628,10,640,8],[628,17,640,15,"newState"],[628,25,640,23],[629,8,641,6],[629,9,641,7],[629,10,641,8],[630,8,643,6,"console"],[630,15,643,13],[630,16,643,14,"log"],[630,19,643,17],[630,20,643,18],[630,65,643,63,"slotIndex"],[630,74,643,72],[630,76,643,74],[630,77,643,75],[631,8,644,6],[631,15,644,13],[631,19,644,17],[632,6,645,4],[632,7,645,5],[632,13,645,11],[633,8,646,6,"console"],[633,15,646,13],[633,16,646,14,"log"],[633,19,646,17],[633,20,646,18],[633,61,646,59,"slotIndex"],[633,70,646,68],[633,72,646,70],[633,73,646,71],[634,8,647,6],[634,15,647,13],[634,20,647,18],[635,6,648,4],[636,4,649,2],[636,5,649,3],[636,46,649,5],[636,47,649,6,"combatState"],[636,58,649,17],[636,59,649,18,"abilityManager"],[636,73,649,32],[636,75,649,34,"combatState"],[636,86,649,45],[636,87,649,46,"enemies"],[636,94,649,53],[636,95,649,54],[636,96,649,55],[637,4,650,2],[637,8,650,2,"useEffect"],[637,14,650,11],[637,15,650,11,"useEffect"],[637,24,650,11],[637,26,650,12],[637,32,650,18],[638,6,651,4,"combatEngine"],[638,25,651,16],[638,26,651,16,"combatEngine"],[638,38,651,16],[638,39,651,17,"start"],[638,44,651,22],[638,45,651,23],[638,46,651,24],[640,6,653,4],[641,6,654,4],[642,6,655,4,"console"],[642,13,655,11],[642,14,655,12,"log"],[642,17,655,15],[642,18,655,16],[642,97,655,95],[642,98,655,96],[643,6,657,4],[643,13,657,11],[643,19,657,17],[644,8,658,6,"combatEngine"],[644,27,658,18],[644,28,658,18,"combatEngine"],[644,40,658,18],[644,41,658,19,"stop"],[644,45,658,23],[644,46,658,24],[644,47,658,25],[645,6,659,4],[645,7,659,5],[646,4,660,2],[646,5,660,3],[646,7,660,5],[646,9,660,7],[646,10,660,8],[647,4,662,2],[647,8,662,8,"contextValue"],[647,20,662,39],[647,23,662,42,"React"],[647,28,662,47],[647,29,662,47,"default"],[647,36,662,47],[647,37,662,48,"useMemo"],[647,44,662,55],[647,45,662,56],[647,52,662,63],[648,6,663,4,"combatState"],[648,17,663,15],[649,6,664,4,"projectiles"],[649,17,664,15],[650,6,665,4,"startCombat"],[650,17,665,15],[651,6,666,4,"stopCombat"],[651,16,666,14],[652,6,667,4,"equipAbility"],[652,18,667,16],[653,6,668,4,"handleEnemyKill"],[653,21,668,19],[654,6,669,4,"getDeck"],[654,13,669,11],[655,6,670,4,"getAvailableAbilities"],[655,27,670,25],[656,6,671,4,"upgradeAbility"],[656,20,671,18],[657,6,672,4,"spawnEnemy"],[657,16,672,14],[658,6,673,4,"spawnBoss"],[658,15,673,13],[659,6,674,4,"clearAllEnemies"],[659,21,674,19],[660,6,675,4,"clearSpecificEnemy"],[660,24,675,22],[661,6,676,4,"triggerLevelUpExplosion"],[661,29,676,27],[662,6,677,4,"findClosestEnemy"],[662,22,677,20],[663,6,678,4,"updateNinjaPosition"],[663,25,678,23],[664,6,679,4,"setManualControlActive"],[664,28,679,26],[665,6,680,4,"lastExplosionTime"],[665,23,680,21],[666,6,681,4,"useAbilityManually"],[666,24,681,22],[666,25,681,24],[667,4,682,2],[667,5,682,3],[667,6,682,4],[667,8,682,6],[668,4,683,4],[669,4,684,4],[670,4,685,4,"combatState"],[670,15,685,15],[670,17,686,4,"projectiles"],[670,28,686,15],[670,30,687,4,"lastExplosionTime"],[670,47,687,21],[671,4,688,4],[672,4,689,4,"combatState"],[672,15,689,15],[672,16,689,16,"abilityManager"],[672,30,689,30],[672,32,690,4,"combatState"],[672,43,690,15],[672,44,690,16,"enemies"],[672,51,690,23],[672,53,691,4,"useAbilityManually"],[672,71,691,22],[672,72,691,24],[673,4,691,24],[673,5,692,3],[673,6,692,4],[674,4,694,2],[674,24,695,4],[674,28,695,4,"_reactJsxDevRuntime"],[674,47,695,4],[674,48,695,4,"jsxDEV"],[674,54,695,4],[674,56,695,5,"CombatContext"],[674,69,695,18],[674,70,695,19,"Provider"],[674,78,695,27],[675,6,695,28,"value"],[675,11,695,33],[675,13,695,35,"contextValue"],[675,25,695,48],[676,6,695,48,"children"],[676,14,695,48],[676,16,696,7,"children"],[677,4,696,15],[678,6,696,15,"fileName"],[678,14,696,15],[678,16,696,15,"_jsxFileName"],[678,28,696,15],[679,6,696,15,"lineNumber"],[679,16,696,15],[680,6,696,15,"columnNumber"],[680,18,696,15],[681,4,696,15],[681,11,697,28],[681,12,697,29],[682,2,699,0],[682,3,699,1],[683,2,699,2,"_s4"],[683,5,699,2],[683,6,81,13,"CombatProvider"],[683,20,81,27],[684,4,81,27],[684,12,82,26,"useGame"],[684,24,82,33],[684,25,82,33,"useGame"],[684,32,82,33],[684,34,83,30,"useZone"],[684,46,83,37],[684,47,83,37,"useZone"],[684,54,83,37],[685,2,83,37],[686,2,83,37,"_c"],[686,4,83,37],[686,7,81,13,"CombatProvider"],[686,21,81,27],[687,2,81,27],[687,6,81,27,"_c"],[687,8,81,27],[688,2,81,27,"$RefreshReg$"],[688,14,81,27],[688,15,81,27,"_c"],[688,17,81,27],[689,0,81,27],[689,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCsE;CDM;8BEI;sCC2B;eCY;kBCI;ODO;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;mGMK,6BN;uDKI,+CL;kFOE,4CP;iDKK,yBL;4CQY,qBR;KDiB;0BUK;KVG;GJC;mCeG;oBCY;KDU;GfI;2BiBG;GjBE;0CkBO;GlBE;6CmBG;GnBG;8BoBG;mBfG;oDEI,sCF;Kea;mBCG,oBC,2BD,CD;GpBC;sBuBG;iCCa;oCCE,iCD;KDG;GvBsB;2B0BG;mBLyB,6BK;exBG;KwBE;G1BC;yB2BG;G3B6B;wC4BG;mBvBE,uCuB;G5BQ;uC6BG;mBxBC,wCwB;G7BE;uB8BG;G9BE;kB+BE;G/BE;gCgCE;GhCE;yBiCE;GjCE;0BkCG;mB7BE;M6BG;GlCC;kCmCG;mB9BM;mBHU;sBCC;YDG;SGC;8C+BK;Q/BI;K8BM;GnCC;qBqCG;mBhC2B;MgCG;GrCG;oBsCG;mBjCE;MiCG;GtCC;6BuCG;mBlCC;mCmCE,6BnC;MkCC;GvCC;yCyCG;qBpCsB;OoCI;GzCQ;Y0CC;WCO;KDE;G1CC;wD4CE;I5CoB;CFiB"},"hasCjsExports":false},"type":"js/module"}]}