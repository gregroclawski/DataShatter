{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 120; // 6X Base XP reward per kill (was 20, tripled to 60, now doubled to 120)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.health) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.health}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.health) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.health > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.health * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.health) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.health;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.health,\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                var playerDefense = newState.playerStats.defense;\n                var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                // Apply damage to player\n                var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                newState.playerStats.health = newPlayerHealth;\n                console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                // Update enemy attack cooldown\n                enemy.lastAttackTick = newState.currentTick;\n\n                // Handle player death if health reaches 0\n                if (newPlayerHealth <= 0) {\n                  console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                  // Set player as dead and trigger revival modal\n                  setTimeout(() => {\n                    // Set isAlive to false to trigger revival system\n                    game.updateGameState({\n                      isAlive: false\n                    });\n                  }, 100);\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        if (newState.playerStats && game.gameState.ninja) {\n          var _effectiveStats = game.getEffectiveStats();\n\n          // Only update if different to prevent unnecessary state changes\n          if (newState.playerStats.attack !== _effectiveStats.attack || newState.playerStats.defense !== _effectiveStats.defense || newState.playerStats.maxHealth !== _effectiveStats.health) {\n            // Maintain current health ratio when max health changes\n            var _healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${_effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${_effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${_effectiveStats.health}`);\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: _effectiveStats.attack,\n              defense: _effectiveStats.defense,\n              maxHealth: _effectiveStats.health,\n              health: Math.floor(_effectiveStats.health * _healthRatio),\n              // Maintain health ratio\n              critChance: _effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: _effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: _effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n        }\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 120; // SAME AS REGULAR KILL XP (120 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              console.log(`💥 PROJECTILE IMPACT: ${projectile.abilityName} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n\n              // Apply damage directly without setTimeout (not during render)\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0) {\n                  newState.enemies = [...newState.enemies];\n                  var enemy = newState.enemies[enemyIndex];\n                  var newHealth = Math.max(0, enemy.health - projectile.damage);\n                  newState.enemies[enemyIndex] = {\n                    ...enemy,\n                    health: newHealth,\n                    lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                  };\n                  console.log(`🎯 DAMAGE APPLIED: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                  // Award XP when enemy dies\n                  if (newHealth <= 0 && enemy.health > 0) {\n                    console.log(`💀 PROJECTILE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                    setTimeout(() => handleEnemyKill(enemy), 0);\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1062,"map":[[15,2,90,0,"Object"],[15,8,90,0],[15,9,90,0,"defineProperty"],[15,23,90,0],[15,24,90,0,"exports"],[15,31,90,0],[16,4,90,0,"enumerable"],[16,14,90,0],[17,4,90,0,"get"],[17,7,90,0],[17,18,90,0,"get"],[17,19,90,0],[18,6,90,0],[18,13,90,0,"useCombat"],[18,22,90,0],[19,4,90,0],[20,2,90,0],[21,2,100,0,"Object"],[21,8,100,0],[21,9,100,0,"defineProperty"],[21,23,100,0],[21,24,100,0,"exports"],[21,31,100,0],[22,4,100,0,"enumerable"],[22,14,100,0],[23,4,100,0,"get"],[23,7,100,0],[23,18,100,0,"get"],[23,19,100,0],[24,6,100,0],[24,13,100,0,"CombatProvider"],[24,27,100,0],[25,4,100,0],[26,2,100,0],[27,2,1114,2],[27,6,1114,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1114,2],[27,42,1114,2,"require"],[27,49,1114,2],[27,50,1114,2,"_dependencyMap"],[27,64,1114,2],[28,2,1114,2],[28,6,1114,2,"_slicedToArray"],[28,20,1114,2],[28,23,1114,2,"_interopDefault"],[28,38,1114,2],[28,39,1114,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1114,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,88,0],[37,6,88,6,"CombatContext"],[37,19,88,19],[37,35,88,22],[37,39,88,22,"createContext"],[37,45,88,35],[37,46,88,35,"createContext"],[37,59,88,35],[37,61,88,67,"undefined"],[37,70,88,76],[37,71,88,77],[38,2,90,7],[38,6,90,13,"useCombat"],[38,15,90,22],[38,18,90,25,"useCombat"],[38,19,90,25],[38,24,90,50],[39,4,90,50,"_s"],[39,6,90,50],[40,4,91,2],[40,8,91,8,"context"],[40,15,91,15],[40,18,91,18],[40,22,91,18,"useContext"],[40,28,91,28],[40,29,91,28,"useContext"],[40,39,91,28],[40,41,91,29,"CombatContext"],[40,54,91,42],[40,55,91,43],[41,4,92,2],[41,8,92,6],[41,9,92,7,"context"],[41,16,92,14],[41,18,92,16],[42,6,93,4],[42,12,93,10],[42,16,93,14,"Error"],[42,21,93,19],[42,22,93,20],[42,70,93,68],[42,71,93,69],[43,4,94,2],[44,4,95,2],[44,11,95,9,"context"],[44,18,95,16],[45,2,96,0],[45,3,96,1],[46,2,96,2,"_s"],[46,4,96,2],[46,5,90,13,"useCombat"],[46,14,90,22],[47,2,98,0],[47,6,98,4,"enemyCounter"],[47,18,98,16],[47,21,98,19],[47,22,98,20],[47,23,98,21],[47,24,98,22],[49,2,100,7],[49,6,100,13,"CombatProvider"],[49,20,100,27],[49,23,100,30,"_ref"],[49,27,100,30],[49,31,100,73],[50,4,100,73,"_s4"],[50,7,100,73],[51,4,100,73],[51,8,100,73,"_s3"],[51,11,100,73],[51,14,100,73,"$RefreshSig$"],[51,26,100,73],[52,4,100,73],[52,8,100,33,"children"],[52,16,100,41],[52,19,100,41,"_ref"],[52,23,100,41],[52,24,100,33,"children"],[52,32,100,41],[53,4,101,2],[53,8,101,8,"game"],[53,12,101,12],[53,15,101,15],[53,19,101,15,"useGame"],[53,31,101,22],[53,32,101,22,"useGame"],[53,39,101,22],[53,41,101,23],[53,42,101,24],[54,4,102,2],[54,8,102,2,"_useZone"],[54,16,102,2],[54,19,102,77],[54,23,102,77,"useZone"],[54,35,102,84],[54,36,102,84,"useZone"],[54,43,102,84],[54,45,102,85],[54,46,102,86],[55,6,102,10,"currentZone"],[55,17,102,21],[55,20,102,21,"_useZone"],[55,28,102,21],[55,29,102,10,"currentZone"],[55,40,102,21],[56,6,102,23,"currentZoneLevel"],[56,22,102,39],[56,25,102,39,"_useZone"],[56,33,102,39],[56,34,102,23,"currentZoneLevel"],[56,50,102,39],[57,6,102,41,"recordEnemyKill"],[57,21,102,56],[57,24,102,56,"_useZone"],[57,32,102,56],[57,33,102,41,"recordEnemyKill"],[57,48,102,56],[58,6,102,58,"spawnZoneEnemy"],[58,20,102,72],[58,23,102,72,"_useZone"],[58,31,102,72],[58,32,102,58,"spawnZoneEnemy"],[58,46,102,72],[60,4,104,2],[61,4,105,2],[61,8,105,8,"initialCombatState"],[61,26,105,39],[61,29,105,42],[62,6,106,4,"isInCombat"],[62,16,106,14],[62,18,106,16],[62,23,106,21],[63,6,107,4,"currentTick"],[63,17,107,15],[63,19,107,17],[63,20,107,18],[64,6,108,4,"enemies"],[64,13,108,11],[64,15,108,13],[64,17,108,15],[65,6,109,4,"abilityManager"],[65,20,109,18],[65,22,109,20],[65,26,109,24,"AbilityManager"],[65,44,109,38],[65,45,109,38,"AbilityManager"],[65,59,109,38],[65,60,109,39],[65,61,109,40],[66,6,110,4,"statusEffects"],[66,19,110,17],[66,21,110,19],[66,25,110,23,"StatusEffectManager"],[66,44,110,42],[66,45,110,42,"StatusEffectManager"],[66,64,110,42],[66,65,110,43],[66,66,110,44],[67,6,111,4,"playerStats"],[67,17,111,15],[67,19,111,17],[68,8,112,6,"attack"],[68,14,112,12],[68,16,112,14],[68,18,112,16],[69,8,112,18],[70,8,113,6,"defense"],[70,15,113,13],[70,17,113,15],[70,18,113,16],[71,8,114,6,"health"],[71,14,114,12],[71,16,114,14],[71,19,114,17],[72,8,115,6,"maxHealth"],[72,17,115,15],[72,19,115,17],[72,22,115,20],[73,8,116,6,"critChance"],[73,18,116,16],[73,20,116,18],[73,21,116,19],[74,8,117,6,"critDamage"],[74,18,117,16],[74,20,117,18],[74,23,117,21],[75,8,118,6,"cooldownReduction"],[75,25,118,23],[75,27,118,25],[76,6,119,4],[77,4,120,2],[77,5,120,3],[78,4,122,2],[78,8,122,2,"_useState"],[78,17,122,2],[78,20,122,40],[78,24,122,40,"useState"],[78,30,122,48],[78,31,122,48,"useState"],[78,39,122,48],[78,41,122,62,"initialCombatState"],[78,59,122,80],[78,60,122,81],[79,6,122,81,"_useState2"],[79,16,122,81],[79,23,122,81,"_slicedToArray"],[79,37,122,81],[79,38,122,81,"default"],[79,45,122,81],[79,47,122,81,"_useState"],[79,56,122,81],[80,6,122,9,"combatState"],[80,17,122,20],[80,20,122,20,"_useState2"],[80,30,122,20],[81,6,122,22,"setCombatState"],[81,20,122,36],[81,23,122,36,"_useState2"],[81,33,122,36],[83,4,124,2],[84,4,125,2],[84,8,125,2,"useEffect"],[84,14,125,11],[84,15,125,11,"useEffect"],[84,24,125,11],[84,26,125,12],[84,32,125,18],[85,6,126,4],[85,10,126,8,"game"],[85,14,126,12],[85,15,126,13,"gameState"],[85,24,126,22],[85,25,126,23,"abilityData"],[85,36,126,34],[85,40,126,38,"combatState"],[85,51,126,49],[85,52,126,50,"abilityManager"],[85,66,126,64],[85,68,126,66],[86,8,127,6,"console"],[86,15,127,13],[86,16,127,14,"log"],[86,19,127,17],[86,20,127,18],[86,68,127,66],[86,70,127,68,"game"],[86,74,127,72],[86,75,127,73,"gameState"],[86,84,127,82],[86,85,127,83,"abilityData"],[86,96,127,94],[86,97,127,95],[87,8,128,6,"combatState"],[87,19,128,17],[87,20,128,18,"abilityManager"],[87,34,128,32],[87,35,128,33,"restoreFromSaveData"],[87,54,128,52],[87,55,128,53,"game"],[87,59,128,57],[87,60,128,58,"gameState"],[87,69,128,67],[87,70,128,68,"abilityData"],[87,81,128,79],[87,82,128,80],[89,8,130,6],[90,8,131,6,"setCombatState"],[90,22,131,20],[90,23,131,21,"prev"],[90,27,131,25],[90,32,131,30],[91,10,131,32],[91,13,131,35,"prev"],[92,8,131,40],[92,9,131,41],[92,10,131,42],[92,11,131,43],[93,6,132,4],[94,4,133,2],[94,5,133,3],[94,7,133,5],[94,8,133,6,"game"],[94,12,133,10],[94,13,133,11,"gameState"],[94,22,133,20],[94,23,133,21,"abilityData"],[94,34,133,32],[94,36,133,34,"combatState"],[94,47,133,45],[94,48,133,46,"abilityManager"],[94,62,133,60],[94,63,133,61],[94,64,133,62],[96,4,135,2],[97,4,136,2],[97,8,136,2,"useEffect"],[97,14,136,11],[97,15,136,11,"useEffect"],[97,24,136,11],[97,26,136,12],[97,32,136,18],[98,6,137,4],[98,10,137,8,"game"],[98,14,137,12],[98,15,137,13,"gameState"],[98,24,137,22],[98,25,137,23,"ninja"],[98,30,137,28],[98,32,137,30],[99,8,138,6],[99,12,138,12,"effectiveStats"],[99,26,138,26],[99,29,138,29,"game"],[99,33,138,33],[99,34,138,34,"getEffectiveStats"],[99,51,138,51],[99,52,138,52],[99,53,138,53],[100,8,140,6,"setCombatState"],[100,22,140,20],[100,23,140,21,"prev"],[100,27,140,25],[100,31,140,29],[101,10,141,8],[102,10,142,8],[102,14,142,12,"prev"],[102,18,142,16],[102,19,142,17,"playerStats"],[102,30,142,28],[102,31,142,29,"maxHealth"],[102,40,142,38],[102,45,142,43],[102,48,142,46],[102,52,142,50,"prev"],[102,56,142,54],[102,57,142,55,"playerStats"],[102,68,142,66],[102,69,142,67,"attack"],[102,75,142,73],[102,80,142,78],[102,82,142,80],[102,84,142,82],[103,12,143,10,"console"],[103,19,143,17],[103,20,143,18,"log"],[103,23,143,21],[103,24,143,22],[103,60,143,58,"effectiveStats"],[103,74,143,72],[103,75,143,73,"health"],[103,81,143,79],[103,93,143,91,"effectiveStats"],[103,107,143,105],[103,108,143,106,"attack"],[103,114,143,112],[103,127,143,125,"effectiveStats"],[103,141,143,139],[103,142,143,140,"defense"],[103,149,143,147],[103,151,143,149],[103,152,143,150],[104,12,145,10],[104,19,145,17],[105,14,146,12],[105,17,146,15,"prev"],[105,21,146,19],[106,14,147,12,"playerStats"],[106,25,147,23],[106,27,147,25],[107,16,148,14,"attack"],[107,22,148,20],[107,24,148,22,"effectiveStats"],[107,38,148,36],[107,39,148,37,"attack"],[107,45,148,43],[108,16,149,14,"defense"],[108,23,149,21],[108,25,149,23,"effectiveStats"],[108,39,149,37],[108,40,149,38,"defense"],[108,47,149,45],[109,16,150,14,"health"],[109,22,150,20],[109,24,150,22,"effectiveStats"],[109,38,150,36],[109,39,150,37,"health"],[109,45,150,43],[110,16,150,45],[111,16,151,14,"maxHealth"],[111,25,151,23],[111,27,151,25,"effectiveStats"],[111,41,151,39],[111,42,151,40,"health"],[111,48,151,46],[112,16,152,14,"critChance"],[112,26,152,24],[112,28,152,26,"effectiveStats"],[112,42,152,40],[112,43,152,41,"critChance"],[112,53,152,51],[112,57,152,55],[112,58,152,56],[113,16,153,14,"critDamage"],[113,26,153,24],[113,28,153,26,"effectiveStats"],[113,42,153,40],[113,43,153,41,"critDamage"],[113,53,153,51],[113,57,153,55],[113,60,153,58],[114,16,154,14,"cooldownReduction"],[114,33,154,31],[114,35,154,33,"effectiveStats"],[114,49,154,47],[114,50,154,48,"cooldownReduction"],[114,67,154,65],[114,71,154,69],[115,14,155,12],[116,12,156,10],[116,13,156,11],[117,10,157,8],[118,10,158,8],[118,17,158,15,"prev"],[118,21,158,19],[119,8,159,6],[119,9,159,7],[119,10,159,8],[120,6,160,4],[121,4,161,2],[121,5,161,3],[121,7,161,5],[121,8,161,6,"game"],[121,12,161,10],[121,13,161,11,"gameState"],[121,22,161,20],[121,23,161,21,"ninja"],[121,28,161,26],[121,29,161,27],[121,30,161,28],[122,4,163,2],[122,8,163,2,"_useState3"],[122,18,163,2],[122,21,163,40],[122,25,163,40,"useState"],[122,31,163,48],[122,32,163,48,"useState"],[122,40,163,48],[122,42,163,69],[122,44,163,71],[122,45,163,72],[123,6,163,72,"_useState4"],[123,16,163,72],[123,23,163,72,"_slicedToArray"],[123,37,163,72],[123,38,163,72,"default"],[123,45,163,72],[123,47,163,72,"_useState3"],[123,57,163,72],[124,6,163,9,"projectiles"],[124,17,163,20],[124,20,163,20,"_useState4"],[124,30,163,20],[125,6,163,22,"setProjectiles"],[125,20,163,36],[125,23,163,36,"_useState4"],[125,33,163,36],[126,4,164,2],[126,8,164,2,"_useState5"],[126,18,164,2],[126,21,164,52],[126,25,164,52,"useState"],[126,31,164,60],[126,32,164,60,"useState"],[126,40,164,60],[126,42,164,69],[126,43,164,70],[126,44,164,71],[127,6,164,71,"_useState6"],[127,16,164,71],[127,23,164,71,"_slicedToArray"],[127,37,164,71],[127,38,164,71,"default"],[127,45,164,71],[127,47,164,71,"_useState5"],[127,57,164,71],[128,6,164,9,"lastExplosionTime"],[128,23,164,26],[128,26,164,26,"_useState6"],[128,36,164,26],[129,6,164,28,"setLastExplosionTime"],[129,26,164,48],[129,29,164,48,"_useState6"],[129,39,164,48],[130,4,165,2],[131,4,166,2],[133,4,168,2],[134,4,169,2],[134,8,169,8,"handleEnemyKill"],[134,23,169,23],[134,26,169,26],[134,30,169,26,"useCallback"],[134,36,169,37],[134,37,169,37,"useCallback"],[134,48,169,37],[134,50,169,39,"enemy"],[134,55,169,57],[134,59,169,62],[135,6,170,4,"console"],[135,13,170,11],[135,14,170,12,"log"],[135,17,170,15],[135,18,170,16],[135,73,170,71],[135,75,170,73,"enemy"],[135,80,170,78],[135,81,170,79,"id"],[135,83,170,81],[135,84,170,82],[137,6,172,4],[138,6,173,4],[138,10,173,10,"baseXpReward"],[138,22,173,22],[138,25,173,25],[138,28,173,28],[138,29,173,29],[138,30,173,30],[139,6,174,4],[139,10,174,10,"xpMultiplier"],[139,22,174,22],[139,25,174,25,"game"],[139,29,174,29],[139,30,174,30,"gameState"],[139,39,174,39],[139,40,174,40,"subscriptionBenefits"],[139,60,174,60],[139,62,174,62,"xp_multiplier"],[139,75,174,75],[139,79,174,79],[139,82,174,82],[140,6,175,4],[140,10,175,10,"dropMultiplier"],[140,24,175,24],[140,27,175,27,"game"],[140,31,175,31],[140,32,175,32,"gameState"],[140,41,175,41],[140,42,175,42,"subscriptionBenefits"],[140,62,175,62],[140,64,175,64,"drop_multiplier"],[140,79,175,79],[140,83,175,83],[140,86,175,86],[141,6,177,4],[141,10,177,10,"xpReward"],[141,18,177,18],[141,21,177,21,"Math"],[141,25,177,25],[141,26,177,26,"floor"],[141,31,177,31],[141,32,177,32,"baseXpReward"],[141,44,177,44],[141,47,177,47,"xpMultiplier"],[141,59,177,59],[141,60,177,60],[142,6,178,4],[142,10,178,10,"goldReward"],[142,20,178,20],[142,23,178,23,"Math"],[142,27,178,27],[142,28,178,28,"floor"],[142,33,178,33],[142,34,178,34],[142,38,178,38],[142,41,178,41,"dropMultiplier"],[142,55,178,55],[142,56,178,56],[142,57,178,57],[142,58,178,58],[144,6,180,4,"console"],[144,13,180,11],[144,14,180,12,"log"],[144,17,180,15],[144,18,180,16],[144,48,180,46,"xpReward"],[144,56,180,54],[144,67,180,65,"goldReward"],[144,77,180,75],[144,93,180,91],[144,94,180,92],[145,6,181,4,"console"],[145,13,181,11],[145,14,181,12,"log"],[145,17,181,15],[145,18,181,16],[145,60,181,58,"xpMultiplier"],[145,72,181,70],[145,94,181,92,"dropMultiplier"],[145,108,181,106],[145,110,181,108],[145,111,181,109],[146,6,182,4,"console"],[146,13,182,11],[146,14,182,12,"log"],[146,17,182,15],[146,18,182,16],[146,54,182,52,"baseXpReward"],[146,66,182,64],[146,81,182,79,"xpReward"],[146,89,182,87],[146,91,182,89],[146,92,182,90],[147,6,183,4,"console"],[147,13,183,11],[147,14,183,12,"log"],[147,17,183,15],[147,18,183,16],[147,58,183,56],[147,60,183,58,"JSON"],[147,64,183,62],[147,65,183,63,"stringify"],[147,74,183,72],[147,75,183,73,"game"],[147,79,183,77],[147,80,183,78,"gameState"],[147,89,183,87],[147,90,183,88,"subscriptionBenefits"],[147,110,183,108],[147,111,183,109],[147,112,183,110],[148,6,184,4,"console"],[148,13,184,11],[148,14,184,12,"log"],[148,17,184,15],[148,18,184,16],[148,49,184,47,"Platform"],[148,61,184,55],[148,62,184,55,"Platform"],[148,70,184,55],[148,71,184,56,"OS"],[148,73,184,58],[148,84,184,69,"Date"],[148,88,184,73],[148,89,184,74,"now"],[148,92,184,77],[148,93,184,78],[148,94,184,79],[148,96,184,81],[148,97,184,82],[150,6,186,4],[151,6,187,4],[152,6,188,4,"setTimeout"],[152,16,188,14],[152,17,188,15],[152,23,188,21],[153,8,189,6,"console"],[153,15,189,13],[153,16,189,14,"log"],[153,19,189,17],[153,20,189,18],[153,78,189,76],[153,79,189,77],[155,8,191,6],[156,8,192,6,"game"],[156,12,192,10],[156,13,192,11,"updateNinja"],[156,24,192,22],[156,25,192,24,"prev"],[156,29,192,28],[156,33,192,33],[157,10,193,8,"console"],[157,17,193,15],[157,18,193,16,"log"],[157,21,193,19],[157,22,193,20],[157,54,193,52,"prev"],[157,58,193,56],[157,59,193,57,"experience"],[157,69,193,67],[157,81,193,79,"prev"],[157,85,193,83],[157,86,193,84,"experience"],[157,96,193,94],[157,99,193,97,"xpReward"],[157,107,193,105],[157,109,193,107],[157,110,193,108],[158,10,194,8,"console"],[158,17,194,15],[158,18,194,16,"log"],[158,21,194,19],[158,22,194,20],[158,56,194,54,"prev"],[158,60,194,58],[158,61,194,59,"gold"],[158,65,194,63],[158,77,194,75,"prev"],[158,81,194,79],[158,82,194,80,"gold"],[158,86,194,84],[158,89,194,87,"goldReward"],[158,99,194,97],[158,101,194,99],[158,102,194,100],[159,10,195,8],[159,17,195,15],[160,12,196,10,"experience"],[160,22,196,20],[160,24,196,22,"prev"],[160,28,196,26],[160,29,196,27,"experience"],[160,39,196,37],[160,42,196,40,"xpReward"],[160,50,196,48],[161,12,197,10,"gold"],[161,16,197,14],[161,18,197,16,"prev"],[161,22,197,20],[161,23,197,21,"gold"],[161,27,197,25],[161,30,197,28,"goldReward"],[162,10,198,8],[162,11,198,9],[163,8,199,6],[163,9,199,7],[163,10,199,8],[165,8,201,6],[166,8,202,6],[166,12,202,12,"zoneEnemy"],[166,21,202,21],[166,24,202,24],[167,10,203,8,"id"],[167,12,203,10],[167,14,203,12,"enemy"],[167,19,203,17],[167,20,203,18,"id"],[167,22,203,20],[168,10,204,8,"typeId"],[168,16,204,14],[168,18,204,16,"enemy"],[168,23,204,21],[168,24,204,22,"zoneTypeId"],[168,34,204,32],[168,38,204,36],[168,48,204,46],[169,10,204,48],[170,10,205,8,"name"],[170,14,205,12],[170,16,205,14,"enemy"],[170,21,205,19],[170,22,205,20,"name"],[170,26,205,24],[171,10,206,8,"icon"],[171,14,206,12],[171,16,206,14],[171,20,206,18],[172,10,206,20],[173,10,207,8,"hp"],[173,12,207,10],[173,14,207,12],[173,15,207,13],[174,10,207,15],[175,10,208,8,"maxHP"],[175,15,208,13],[175,17,208,15,"enemy"],[175,22,208,20],[175,23,208,21,"maxHealth"],[175,32,208,30],[176,10,209,8,"attack"],[176,16,209,14],[176,18,209,16,"enemy"],[176,23,209,21],[176,24,209,22,"stats"],[176,29,209,27],[176,30,209,28,"attack"],[176,36,209,34],[177,10,210,8,"xp"],[177,12,210,10],[177,14,210,12,"enemy"],[177,19,210,17],[177,20,210,18,"zoneXP"],[177,26,210,24],[177,30,210,28],[177,32,210,30],[178,10,210,32],[179,10,211,8,"position"],[179,18,211,16],[179,20,211,18,"enemy"],[179,25,211,23],[179,26,211,24,"position"],[180,8,212,6],[180,9,212,7],[181,8,214,6,"console"],[181,15,214,13],[181,16,214,14,"log"],[181,19,214,17],[181,20,214,18],[181,40,214,38,"zoneEnemy"],[181,49,214,47],[181,50,214,48,"name"],[181,54,214,52],[181,59,214,57,"zoneEnemy"],[181,68,214,66],[181,69,214,67,"typeId"],[181,75,214,73],[181,113,214,111],[181,114,214,112],[182,8,215,6,"recordEnemyKill"],[182,23,215,21],[182,24,215,22,"zoneEnemy"],[182,33,215,31],[182,34,215,32],[183,6,216,4],[183,7,216,5],[183,9,216,7],[183,10,216,8],[183,11,216,9],[183,12,216,10],[183,13,216,11],[184,4,217,2],[184,5,217,3],[184,7,217,5],[184,8,217,6,"game"],[184,12,217,10],[184,13,217,11,"updateNinja"],[184,24,217,22],[184,26,217,24,"recordEnemyKill"],[184,41,217,39],[184,42,217,40],[184,43,217,41],[186,4,219,2],[187,4,220,2],[187,8,220,8,"handleCombatTick"],[187,24,220,24],[187,27,220,27,"React"],[187,32,220,32],[187,33,220,32,"default"],[187,40,220,32],[187,41,220,33,"useCallback"],[187,52,220,44],[187,53,220,45],[187,59,220,51],[188,6,220,51],[188,10,220,51,"_s2"],[188,13,220,51],[188,16,220,51,"$RefreshSig$"],[188,28,220,51],[189,6,221,4,"console"],[189,13,221,11],[189,14,221,12,"log"],[189,17,221,15],[189,18,221,16],[189,87,221,85],[189,88,221,86],[190,6,223,4],[190,10,223,8,"enemiesToKill"],[190,23,223,36],[190,26,223,39],[190,28,223,41],[190,29,223,42],[190,30,223,43],[192,6,225,4,"_s2"],[192,9,225,4],[192,10,225,4,"setCombatState"],[192,24,225,18],[192,25,225,18,"_s2"],[192,28,225,18],[192,29,225,19,"prev"],[192,33,225,23],[192,37,225,27],[193,8,225,27,"_s2"],[193,11,225,27],[194,8,226,6],[194,12,226,12,"newTick"],[194,19,226,19],[194,22,226,22,"combatEngine"],[194,41,226,34],[194,42,226,34,"combatEngine"],[194,54,226,34],[194,55,226,35,"getCurrentTick"],[194,69,226,49],[194,70,226,50],[194,71,226,51],[195,8,227,6],[195,12,227,12,"newState"],[195,20,227,20],[195,23,227,23],[196,10,227,25],[196,13,227,28,"prev"],[196,17,227,32],[197,10,227,34,"currentTick"],[197,21,227,45],[197,23,227,47,"newTick"],[198,8,227,55],[198,9,227,56],[199,8,229,6],[199,12,229,10],[199,13,229,11,"newState"],[199,21,229,19],[199,22,229,20,"isInCombat"],[199,32,229,30],[199,34,229,32],[199,41,229,39,"newState"],[199,49,229,47],[201,8,231,6],[202,8,232,6,"newState"],[202,16,232,14],[202,17,232,15,"abilityManager"],[202,31,232,29],[202,32,232,30,"updateCooldowns"],[202,47,232,45],[202,48,232,46,"newTick"],[202,55,232,53],[202,56,232,54],[204,8,234,6],[205,8,235,6],[205,12,235,12,"effectResults"],[205,25,235,25],[205,28,235,28,"newState"],[205,36,235,36],[205,37,235,37,"statusEffects"],[205,50,235,50],[205,51,235,51,"processTick"],[205,62,235,62],[205,63,235,63,"newTick"],[205,70,235,70],[205,71,235,71],[207,8,237,6],[208,8,238,6,"effectResults"],[208,21,238,19],[208,22,238,20,"forEach"],[208,29,238,27],[208,30,238,28],[208,31,238,29,"results"],[208,38,238,36],[208,40,238,38,"entityId"],[208,48,238,46],[208,53,238,51],[209,10,239,8],[209,14,239,14,"enemyIndex"],[209,24,239,24],[209,27,239,27,"newState"],[209,35,239,35],[209,36,239,36,"enemies"],[209,43,239,43],[209,44,239,44,"findIndex"],[209,53,239,53],[209,54,239,54,"e"],[209,55,239,55],[209,59,239,59,"e"],[209,60,239,60],[209,61,239,61,"id"],[209,63,239,63],[209,68,239,68,"entityId"],[209,76,239,76],[209,77,239,77],[210,10,240,8],[210,14,240,12,"enemyIndex"],[210,24,240,22],[210,28,240,26],[210,29,240,27],[210,31,240,29],[211,12,241,10,"results"],[211,19,241,17],[211,20,241,18,"forEach"],[211,27,241,25],[211,28,241,26,"result"],[211,34,241,32],[211,38,241,36],[212,14,242,12,"newState"],[212,22,242,20],[212,23,242,21,"enemies"],[212,30,242,28],[212,31,242,29,"enemyIndex"],[212,41,242,39],[212,42,242,40],[212,43,242,41,"health"],[212,49,242,47],[212,53,242,51,"result"],[212,59,242,57],[212,60,242,58,"damage"],[212,66,242,64],[213,14,243,12,"newState"],[213,22,243,20],[213,23,243,21,"enemies"],[213,30,243,28],[213,31,243,29,"enemyIndex"],[213,41,243,39],[213,42,243,40],[213,43,243,41,"lastDamaged"],[213,54,243,52],[213,57,243,55,"newTick"],[213,64,243,62],[214,12,244,10],[214,13,244,11],[214,14,244,12],[215,10,245,8],[216,8,246,6],[216,9,246,7],[216,10,246,8],[218,8,248,6],[219,8,249,6],[220,8,250,6],[220,12,250,10,"newState"],[220,20,250,18],[220,21,250,19,"playerStats"],[220,32,250,30],[220,36,250,34,"game"],[220,40,250,38],[220,41,250,39,"gameState"],[220,50,250,48],[220,51,250,49,"ninja"],[220,56,250,54],[220,58,250,56],[221,10,251,8],[221,14,251,14,"effectiveStats"],[221,28,251,28],[221,31,251,31,"game"],[221,35,251,35],[221,36,251,36,"getEffectiveStats"],[221,53,251,53],[221,54,251,54],[221,55,251,55],[223,10,253,8],[224,10,254,8],[224,14,254,12,"newState"],[224,22,254,20],[224,23,254,21,"playerStats"],[224,34,254,32],[224,35,254,33,"attack"],[224,41,254,39],[224,46,254,44,"effectiveStats"],[224,60,254,58],[224,61,254,59,"attack"],[224,67,254,65],[224,71,255,12,"newState"],[224,79,255,20],[224,80,255,21,"playerStats"],[224,91,255,32],[224,92,255,33,"defense"],[224,99,255,40],[224,104,255,45,"effectiveStats"],[224,118,255,59],[224,119,255,60,"defense"],[224,126,255,67],[224,130,256,12,"newState"],[224,138,256,20],[224,139,256,21,"playerStats"],[224,150,256,32],[224,151,256,33,"maxHealth"],[224,160,256,42],[224,165,256,47,"effectiveStats"],[224,179,256,61],[224,180,256,62,"health"],[224,186,256,68],[224,188,256,70],[225,12,258,10,"console"],[225,19,258,17],[225,20,258,18,"log"],[225,23,258,21],[225,24,258,22],[225,58,258,56,"newState"],[225,66,258,64],[225,67,258,65,"playerStats"],[225,78,258,76],[225,79,258,77,"attack"],[225,85,258,83],[225,91,258,89,"effectiveStats"],[225,105,258,103],[225,106,258,104,"attack"],[225,112,258,110],[225,125,258,123,"newState"],[225,133,258,131],[225,134,258,132,"playerStats"],[225,145,258,143],[225,146,258,144,"defense"],[225,153,258,151],[225,159,258,157,"effectiveStats"],[225,173,258,171],[225,174,258,172,"defense"],[225,181,258,179],[225,192,258,190,"newState"],[225,200,258,198],[225,201,258,199,"playerStats"],[225,212,258,210],[225,213,258,211,"maxHealth"],[225,222,258,220],[225,228,258,226,"effectiveStats"],[225,242,258,240],[225,243,258,241,"health"],[225,249,258,247],[225,251,258,249],[225,252,258,250],[227,12,260,10],[228,12,261,10],[228,16,261,14,"newHealth"],[228,25,261,23],[228,28,261,26,"newState"],[228,36,261,34],[228,37,261,35,"playerStats"],[228,48,261,46],[228,49,261,47,"health"],[228,55,261,53],[229,12,262,10],[229,16,262,14,"newState"],[229,24,262,22],[229,25,262,23,"playerStats"],[229,36,262,34],[229,37,262,35,"maxHealth"],[229,46,262,44],[229,51,262,49,"effectiveStats"],[229,65,262,63],[229,66,262,64,"health"],[229,72,262,70],[229,74,262,72],[230,14,263,12],[231,14,264,12],[231,18,264,16,"effectiveStats"],[231,32,264,30],[231,33,264,31,"health"],[231,39,264,37],[231,42,264,40,"newState"],[231,50,264,48],[231,51,264,49,"playerStats"],[231,62,264,60],[231,63,264,61,"maxHealth"],[231,72,264,70],[231,75,264,73],[231,78,264,76],[231,80,264,78],[232,16,265,14],[233,16,266,14],[233,20,266,20,"healthRatio"],[233,31,266,31],[233,34,266,34,"newState"],[233,42,266,42],[233,43,266,43,"playerStats"],[233,54,266,54],[233,55,266,55,"maxHealth"],[233,64,266,64],[233,67,266,67],[233,68,266,68],[233,71,267,16,"newState"],[233,79,267,24],[233,80,267,25,"playerStats"],[233,91,267,36],[233,92,267,37,"health"],[233,98,267,43],[233,101,267,46,"newState"],[233,109,267,54],[233,110,267,55,"playerStats"],[233,121,267,66],[233,122,267,67,"maxHealth"],[233,131,267,76],[233,134,267,79],[233,135,267,80],[234,16,268,14,"newHealth"],[234,25,268,23],[234,28,268,26,"Math"],[234,32,268,30],[234,33,268,31,"floor"],[234,38,268,36],[234,39,268,37,"effectiveStats"],[234,53,268,51],[234,54,268,52,"health"],[234,60,268,58],[234,63,268,61,"healthRatio"],[234,74,268,72],[234,75,268,73],[235,14,269,12],[235,15,269,13],[235,21,269,19],[235,25,269,23,"newState"],[235,33,269,31],[235,34,269,32,"playerStats"],[235,45,269,43],[235,46,269,44,"health"],[235,52,269,50],[235,55,269,53,"effectiveStats"],[235,69,269,67],[235,70,269,68,"health"],[235,76,269,74],[235,78,269,76],[236,16,270,14],[237,16,271,14,"newHealth"],[237,25,271,23],[237,28,271,26,"effectiveStats"],[237,42,271,40],[237,43,271,41,"health"],[237,49,271,47],[238,14,272,12],[239,14,273,12],[240,12,274,10],[241,12,276,10,"newState"],[241,20,276,18],[241,21,276,19,"playerStats"],[241,32,276,30],[241,35,276,33],[242,14,277,12],[242,17,277,15,"newState"],[242,25,277,23],[242,26,277,24,"playerStats"],[242,37,277,35],[243,14,278,12,"attack"],[243,20,278,18],[243,22,278,20,"effectiveStats"],[243,36,278,34],[243,37,278,35,"attack"],[243,43,278,41],[244,14,279,12,"defense"],[244,21,279,19],[244,23,279,21,"effectiveStats"],[244,37,279,35],[244,38,279,36,"defense"],[244,45,279,43],[245,14,280,12,"maxHealth"],[245,23,280,21],[245,25,280,23,"effectiveStats"],[245,39,280,37],[245,40,280,38,"health"],[245,46,280,44],[246,14,281,12,"health"],[246,20,281,18],[246,22,281,20,"newHealth"],[246,31,281,29],[247,14,281,31],[248,14,282,12,"critChance"],[248,24,282,22],[248,26,282,24,"effectiveStats"],[248,40,282,38],[248,41,282,39,"critChance"],[248,51,282,49],[248,55,282,53,"newState"],[248,63,282,61],[248,64,282,62,"playerStats"],[248,75,282,73],[248,76,282,74,"critChance"],[248,86,282,84],[249,14,283,12,"critDamage"],[249,24,283,22],[249,26,283,24,"effectiveStats"],[249,40,283,38],[249,41,283,39,"critDamage"],[249,51,283,49],[249,55,283,53,"newState"],[249,63,283,61],[249,64,283,62,"playerStats"],[249,75,283,73],[249,76,283,74,"critDamage"],[249,86,283,84],[250,14,284,12,"cooldownReduction"],[250,31,284,29],[250,33,284,31,"effectiveStats"],[250,47,284,45],[250,48,284,46,"cooldownReduction"],[250,65,284,63],[250,69,284,67,"newState"],[250,77,284,75],[250,78,284,76,"playerStats"],[250,89,284,87],[250,90,284,88,"cooldownReduction"],[251,12,285,10],[251,13,285,11],[252,10,286,8],[253,8,287,6],[255,8,289,6],[256,8,290,6,"newState"],[256,16,290,14],[256,17,290,15,"enemies"],[256,24,290,22],[256,25,290,23,"forEach"],[256,32,290,30],[256,33,290,31,"enemy"],[256,38,290,36],[256,42,290,40],[257,10,291,8],[257,14,291,12],[257,15,291,13,"enemy"],[257,20,291,18],[257,21,291,19,"isBoss"],[257,27,291,25],[257,29,291,27],[258,12,291,29],[259,12,292,10],[260,12,293,10],[260,16,293,16,"MOVEMENT_SPEED"],[260,30,293,30],[260,33,293,33],[260,37,293,37],[260,38,293,38],[260,39,293,39],[261,12,294,10],[261,16,294,16,"SCREEN_WIDTH"],[261,28,294,28],[261,31,294,31],[261,34,294,34],[262,12,295,10],[262,16,295,16,"GAME_AREA_HEIGHT"],[262,32,295,32],[262,35,295,35],[262,38,295,38],[262,39,295,39],[262,40,295,40],[263,12,296,10],[263,16,296,16,"ENEMY_SIZE"],[263,26,296,26],[263,29,296,29],[263,31,296,31],[265,12,298,10],[266,12,299,10],[266,16,299,16,"playerX"],[266,23,299,23],[266,26,299,26,"currentNinjaPosition"],[266,46,299,46],[266,47,299,47,"x"],[266,48,299,48],[267,12,300,10],[267,16,300,16,"playerY"],[267,23,300,23],[267,26,300,26,"currentNinjaPosition"],[267,46,300,46],[267,47,300,47,"y"],[267,48,300,48],[269,12,302,10],[270,12,303,10],[270,16,303,16,"deltaX"],[270,22,303,22],[270,25,303,25,"playerX"],[270,32,303,32],[270,35,303,35,"enemy"],[270,40,303,40],[270,41,303,41,"position"],[270,49,303,49],[270,50,303,50,"x"],[270,51,303,51],[271,12,304,10],[271,16,304,16,"deltaY"],[271,22,304,22],[271,25,304,25,"playerY"],[271,32,304,32],[271,35,304,35,"enemy"],[271,40,304,40],[271,41,304,41,"position"],[271,49,304,49],[271,50,304,50,"y"],[271,51,304,51],[272,12,305,10],[272,16,305,16,"distance"],[272,24,305,24],[272,27,305,27,"Math"],[272,31,305,31],[272,32,305,32,"sqrt"],[272,36,305,36],[272,37,305,37,"deltaX"],[272,43,305,43],[272,46,305,46,"deltaX"],[272,52,305,52],[272,55,305,55,"deltaY"],[272,61,305,61],[272,64,305,64,"deltaY"],[272,70,305,70],[272,71,305,71],[274,12,307,10],[275,12,308,10],[275,16,308,16,"ATTACK_RANGE"],[275,28,308,28],[275,31,308,31],[275,33,308,33],[275,34,308,34],[275,35,308,35],[276,12,309,10],[276,16,309,16,"ATTACK_COOLDOWN"],[276,31,309,31],[276,34,309,34],[276,36,309,36],[276,37,309,37],[276,38,309,38],[278,12,311,10],[278,16,311,14,"distance"],[278,24,311,22],[278,28,311,26,"ATTACK_RANGE"],[278,40,311,38],[278,42,311,40],[279,14,312,12],[280,14,313,12],[280,18,313,16],[280,19,313,17,"enemy"],[280,24,313,22],[280,25,313,23,"lastAttackTick"],[280,39,313,37],[280,41,313,39,"enemy"],[280,46,313,44],[280,47,313,45,"lastAttackTick"],[280,61,313,59],[280,64,313,62],[280,65,313,63],[281,14,315,12],[281,18,315,16,"newState"],[281,26,315,24],[281,27,315,25,"currentTick"],[281,38,315,36],[281,41,315,39,"enemy"],[281,46,315,44],[281,47,315,45,"lastAttackTick"],[281,61,315,59],[281,65,315,63,"ATTACK_COOLDOWN"],[281,80,315,78],[281,82,315,80],[282,16,316,14],[283,16,317,14],[283,20,317,20,"baseAttack"],[283,30,317,30],[283,33,317,33,"enemy"],[283,38,317,38],[283,39,317,39,"stats"],[283,44,317,44],[283,45,317,45,"attack"],[283,51,317,51],[283,54,317,54],[283,57,317,57],[283,58,317,58],[283,59,317,59],[284,16,318,14],[284,20,318,20,"attackDamage"],[284,32,318,32],[284,35,318,35,"Math"],[284,39,318,39],[284,40,318,40,"floor"],[284,45,318,45],[284,46,318,46,"baseAttack"],[284,56,318,56],[284,60,318,60],[284,63,318,63],[284,66,318,66,"Math"],[284,70,318,70],[284,71,318,71,"random"],[284,77,318,77],[284,78,318,78],[284,79,318,79],[284,82,318,82],[284,85,318,85],[284,86,318,86],[284,87,318,87],[284,88,318,88],[284,89,318,89],[285,16,319,14],[285,20,319,20,"playerDefense"],[285,33,319,33],[285,36,319,36,"newState"],[285,44,319,44],[285,45,319,45,"playerStats"],[285,56,319,56],[285,57,319,57,"defense"],[285,64,319,64],[286,16,320,14],[286,20,320,20,"finalDamage"],[286,31,320,31],[286,34,320,34,"Math"],[286,38,320,38],[286,39,320,39,"max"],[286,42,320,42],[286,43,320,43],[286,44,320,44],[286,46,320,46,"attackDamage"],[286,58,320,58],[286,61,320,61,"Math"],[286,65,320,65],[286,66,320,66,"floor"],[286,71,320,71],[286,72,320,72,"playerDefense"],[286,85,320,85],[286,88,320,88],[286,91,320,91],[286,92,320,92],[286,93,320,93],[286,94,320,94],[286,95,320,95],[288,16,322,14,"console"],[288,23,322,21],[288,24,322,22,"log"],[288,27,322,25],[288,28,322,26],[288,49,322,47,"enemy"],[288,54,322,52],[288,55,322,53,"name"],[288,59,322,57],[288,82,322,80,"finalDamage"],[288,93,322,91],[288,105,322,103,"attackDamage"],[288,117,322,115],[288,128,322,126,"Math"],[288,132,322,130],[288,133,322,131,"floor"],[288,138,322,136],[288,139,322,137,"playerDefense"],[288,152,322,150],[288,155,322,153],[288,158,322,156],[288,159,322,157],[288,180,322,178],[288,181,322,179],[290,16,324,14],[291,16,325,14],[291,20,325,20,"newPlayerHealth"],[291,35,325,35],[291,38,325,38,"Math"],[291,42,325,42],[291,43,325,43,"max"],[291,46,325,46],[291,47,325,47],[291,48,325,48],[291,50,325,50,"newState"],[291,58,325,58],[291,59,325,59,"playerStats"],[291,70,325,70],[291,71,325,71,"health"],[291,77,325,77],[291,80,325,80,"finalDamage"],[291,91,325,91],[291,92,325,92],[292,16,326,14,"newState"],[292,24,326,22],[292,25,326,23,"playerStats"],[292,36,326,34],[292,37,326,35,"health"],[292,43,326,41],[292,46,326,44,"newPlayerHealth"],[292,61,326,59],[293,16,328,14,"console"],[293,23,328,21],[293,24,328,22,"log"],[293,27,328,25],[293,28,328,26],[293,49,328,47,"newState"],[293,57,328,55],[293,58,328,56,"playerStats"],[293,69,328,67],[293,70,328,68,"health"],[293,76,328,74],[293,80,328,78,"newState"],[293,88,328,86],[293,89,328,87,"playerStats"],[293,100,328,98],[293,101,328,99,"maxHealth"],[293,110,328,108],[293,120,328,118,"finalDamage"],[293,131,328,129],[293,141,328,139],[293,142,328,140],[295,16,330,14],[296,16,331,14,"enemy"],[296,21,331,19],[296,22,331,20,"lastAttackTick"],[296,36,331,34],[296,39,331,37,"newState"],[296,47,331,45],[296,48,331,46,"currentTick"],[296,59,331,57],[298,16,333,14],[299,16,334,14],[299,20,334,18,"newPlayerHealth"],[299,35,334,33],[299,39,334,37],[299,40,334,38],[299,42,334,40],[300,18,335,16,"console"],[300,25,335,23],[300,26,335,24,"log"],[300,29,335,27],[300,30,335,28],[300,80,335,78],[300,81,335,79],[301,18,336,16],[302,18,337,16,"setTimeout"],[302,28,337,26],[302,29,337,27],[302,35,337,33],[303,20,338,18],[304,20,339,18,"game"],[304,24,339,22],[304,25,339,23,"updateGameState"],[304,40,339,38],[304,41,339,39],[305,22,339,41,"isAlive"],[305,29,339,48],[305,31,339,50],[306,20,339,56],[306,21,339,57],[306,22,339,58],[307,18,340,16],[307,19,340,17],[307,21,340,19],[307,24,340,22],[307,25,340,23],[308,16,341,14],[309,14,342,12],[310,12,343,10],[310,13,343,11],[310,19,343,17],[311,14,344,12],[312,14,345,12],[313,14,346,12],[313,18,346,16,"distance"],[313,26,346,24],[313,29,346,27],[313,31,346,29],[313,33,346,31],[314,16,347,14],[315,16,348,14],[315,20,348,20,"normalizedX"],[315,31,348,31],[315,34,348,34,"deltaX"],[315,40,348,40],[315,43,348,43,"distance"],[315,51,348,51],[316,16,349,14],[316,20,349,20,"normalizedY"],[316,31,349,31],[316,34,349,34,"deltaY"],[316,40,349,40],[316,43,349,43,"distance"],[316,51,349,51],[318,16,351,14],[319,16,352,14],[319,20,352,20,"randomFactor"],[319,32,352,32],[319,35,352,35],[319,38,352,38],[319,39,352,39],[319,40,352,40],[320,16,353,14],[320,20,353,20,"finalX"],[320,26,353,26],[320,29,353,29,"normalizedX"],[320,40,353,40],[320,43,353,43],[320,44,353,44,"Math"],[320,48,353,48],[320,49,353,49,"random"],[320,55,353,55],[320,56,353,56],[320,57,353,57],[320,60,353,60],[320,63,353,63],[320,67,353,67,"randomFactor"],[320,79,353,79],[321,16,354,14],[321,20,354,20,"finalY"],[321,26,354,26],[321,29,354,29,"normalizedY"],[321,40,354,40],[321,43,354,43],[321,44,354,44,"Math"],[321,48,354,48],[321,49,354,49,"random"],[321,55,354,55],[321,56,354,56],[321,57,354,57],[321,60,354,60],[321,63,354,63],[321,67,354,67,"randomFactor"],[321,79,354,79],[323,16,356,14],[324,16,357,14],[324,20,357,18,"newX"],[324,24,357,22],[324,27,357,25,"enemy"],[324,32,357,30],[324,33,357,31,"position"],[324,41,357,39],[324,42,357,40,"x"],[324,43,357,41],[324,46,357,45,"finalX"],[324,52,357,51],[324,55,357,54,"MOVEMENT_SPEED"],[324,69,357,69],[325,16,358,14],[325,20,358,18,"newY"],[325,24,358,22],[325,27,358,25,"enemy"],[325,32,358,30],[325,33,358,31,"position"],[325,41,358,39],[325,42,358,40,"y"],[325,43,358,41],[325,46,358,45,"finalY"],[325,52,358,51],[325,55,358,54,"MOVEMENT_SPEED"],[325,69,358,69],[327,16,360,14],[328,16,361,14,"newX"],[328,20,361,18],[328,23,361,21,"Math"],[328,27,361,25],[328,28,361,26,"max"],[328,31,361,29],[328,32,361,30],[328,33,361,31],[328,35,361,33,"Math"],[328,39,361,37],[328,40,361,38,"min"],[328,43,361,41],[328,44,361,42,"SCREEN_WIDTH"],[328,56,361,54],[328,59,361,57,"ENEMY_SIZE"],[328,69,361,67],[328,71,361,69,"newX"],[328,75,361,73],[328,76,361,74],[328,77,361,75],[329,16,362,14,"newY"],[329,20,362,18],[329,23,362,21,"Math"],[329,27,362,25],[329,28,362,26,"max"],[329,31,362,29],[329,32,362,30],[329,33,362,31],[329,35,362,33,"Math"],[329,39,362,37],[329,40,362,38,"min"],[329,43,362,41],[329,44,362,42,"GAME_AREA_HEIGHT"],[329,60,362,58],[329,63,362,61,"ENEMY_SIZE"],[329,73,362,71],[329,75,362,73,"newY"],[329,79,362,77],[329,80,362,78],[329,81,362,79],[331,16,364,14],[332,16,365,14,"enemy"],[332,21,365,19],[332,22,365,20,"position"],[332,30,365,28],[332,31,365,29,"x"],[332,32,365,30],[332,35,365,33,"newX"],[332,39,365,37],[333,16,366,14,"enemy"],[333,21,366,19],[333,22,366,20,"position"],[333,30,366,28],[333,31,366,29,"y"],[333,32,366,30],[333,35,366,33,"newY"],[333,39,366,37],[334,14,367,12],[335,14,368,12],[336,12,369,10],[337,10,370,8],[338,8,371,6],[338,9,371,7],[338,10,371,8],[340,8,373,6],[341,8,374,6],[341,12,374,10,"newState"],[341,20,374,18],[341,21,374,19,"playerStats"],[341,32,374,30],[341,36,374,34,"game"],[341,40,374,38],[341,41,374,39,"gameState"],[341,50,374,48],[341,51,374,49,"ninja"],[341,56,374,54],[341,58,374,56],[342,10,375,8],[342,14,375,14,"effectiveStats"],[342,29,375,28],[342,32,375,31,"game"],[342,36,375,35],[342,37,375,36,"getEffectiveStats"],[342,54,375,53],[342,55,375,54],[342,56,375,55],[344,10,377,8],[345,10,378,8],[345,14,378,12,"newState"],[345,22,378,20],[345,23,378,21,"playerStats"],[345,34,378,32],[345,35,378,33,"attack"],[345,41,378,39],[345,46,378,44,"effectiveStats"],[345,61,378,58],[345,62,378,59,"attack"],[345,68,378,65],[345,72,379,12,"newState"],[345,80,379,20],[345,81,379,21,"playerStats"],[345,92,379,32],[345,93,379,33,"defense"],[345,100,379,40],[345,105,379,45,"effectiveStats"],[345,120,379,59],[345,121,379,60,"defense"],[345,128,379,67],[345,132,380,12,"newState"],[345,140,380,20],[345,141,380,21,"playerStats"],[345,152,380,32],[345,153,380,33,"maxHealth"],[345,162,380,42],[345,167,380,47,"effectiveStats"],[345,182,380,61],[345,183,380,62,"health"],[345,189,380,68],[345,191,380,70],[346,12,382,10],[347,12,383,10],[347,16,383,16,"healthRatio"],[347,28,383,27],[347,31,383,30,"newState"],[347,39,383,38],[347,40,383,39,"playerStats"],[347,51,383,50],[347,52,383,51,"maxHealth"],[347,61,383,60],[347,64,383,63],[347,65,383,64],[347,68,384,12,"newState"],[347,76,384,20],[347,77,384,21,"playerStats"],[347,88,384,32],[347,89,384,33,"health"],[347,95,384,39],[347,98,384,42,"newState"],[347,106,384,50],[347,107,384,51,"playerStats"],[347,118,384,62],[347,119,384,63,"maxHealth"],[347,128,384,72],[347,131,384,75],[347,132,384,76],[348,12,386,10,"console"],[348,19,386,17],[348,20,386,18,"log"],[348,23,386,21],[348,24,386,22],[348,58,386,56,"newState"],[348,66,386,64],[348,67,386,65,"playerStats"],[348,78,386,76],[348,79,386,77,"attack"],[348,85,386,83],[348,91,386,89,"effectiveStats"],[348,106,386,103],[348,107,386,104,"attack"],[348,113,386,110],[348,126,386,123,"newState"],[348,134,386,131],[348,135,386,132,"playerStats"],[348,146,386,143],[348,147,386,144,"defense"],[348,154,386,151],[348,160,386,157,"effectiveStats"],[348,175,386,171],[348,176,386,172,"defense"],[348,183,386,179],[348,194,386,190,"newState"],[348,202,386,198],[348,203,386,199,"playerStats"],[348,214,386,210],[348,215,386,211,"maxHealth"],[348,224,386,220],[348,230,386,226,"effectiveStats"],[348,245,386,240],[348,246,386,241,"health"],[348,252,386,247],[348,254,386,249],[348,255,386,250],[349,12,388,10,"newState"],[349,20,388,18],[349,21,388,19,"playerStats"],[349,32,388,30],[349,35,388,33],[350,14,389,12],[350,17,389,15,"newState"],[350,25,389,23],[350,26,389,24,"playerStats"],[350,37,389,35],[351,14,390,12,"attack"],[351,20,390,18],[351,22,390,20,"effectiveStats"],[351,37,390,34],[351,38,390,35,"attack"],[351,44,390,41],[352,14,391,12,"defense"],[352,21,391,19],[352,23,391,21,"effectiveStats"],[352,38,391,35],[352,39,391,36,"defense"],[352,46,391,43],[353,14,392,12,"maxHealth"],[353,23,392,21],[353,25,392,23,"effectiveStats"],[353,40,392,37],[353,41,392,38,"health"],[353,47,392,44],[354,14,393,12,"health"],[354,20,393,18],[354,22,393,20,"Math"],[354,26,393,24],[354,27,393,25,"floor"],[354,32,393,30],[354,33,393,31,"effectiveStats"],[354,48,393,45],[354,49,393,46,"health"],[354,55,393,52],[354,58,393,55,"healthRatio"],[354,70,393,66],[354,71,393,67],[355,14,393,69],[356,14,394,12,"critChance"],[356,24,394,22],[356,26,394,24,"effectiveStats"],[356,41,394,38],[356,42,394,39,"critChance"],[356,52,394,49],[356,56,394,53,"newState"],[356,64,394,61],[356,65,394,62,"playerStats"],[356,76,394,73],[356,77,394,74,"critChance"],[356,87,394,84],[357,14,395,12,"critDamage"],[357,24,395,22],[357,26,395,24,"effectiveStats"],[357,41,395,38],[357,42,395,39,"critDamage"],[357,52,395,49],[357,56,395,53,"newState"],[357,64,395,61],[357,65,395,62,"playerStats"],[357,76,395,73],[357,77,395,74,"critDamage"],[357,87,395,84],[358,14,396,12,"cooldownReduction"],[358,31,396,29],[358,33,396,31,"effectiveStats"],[358,48,396,45],[358,49,396,46,"cooldownReduction"],[358,66,396,63],[358,70,396,67,"newState"],[358,78,396,75],[358,79,396,76,"playerStats"],[358,90,396,87],[358,91,396,88,"cooldownReduction"],[359,12,397,10],[359,13,397,11],[360,10,398,8],[361,8,399,6],[362,8,400,6],[362,12,400,10,"newState"],[362,20,400,18],[362,21,400,19,"shadowClone"],[362,32,400,30],[362,34,400,32],[363,10,401,8],[364,10,402,8,"newState"],[364,18,402,16],[364,19,402,17,"shadowClone"],[364,30,402,28],[364,31,402,29,"remainingTicks"],[364,45,402,43],[364,47,402,45],[366,10,404,8],[367,10,405,8],[367,14,405,14,"cloneOffset"],[367,25,405,25],[367,28,405,28],[367,30,405,30],[367,31,405,31],[367,32,405,32],[368,10,406,8,"newState"],[368,18,406,16],[368,19,406,17,"shadowClone"],[368,30,406,28],[368,31,406,29,"position"],[368,39,406,37],[368,40,406,38,"x"],[368,41,406,39],[368,44,406,42,"currentNinjaPosition"],[368,64,406,62],[368,65,406,63,"x"],[368,66,406,64],[368,69,406,67,"cloneOffset"],[368,80,406,78],[369,10,407,8,"newState"],[369,18,407,16],[369,19,407,17,"shadowClone"],[369,30,407,28],[369,31,407,29,"position"],[369,39,407,37],[369,40,407,38,"y"],[369,41,407,39],[369,44,407,42,"currentNinjaPosition"],[369,64,407,62],[369,65,407,63,"y"],[369,66,407,64],[369,69,407,67],[369,71,407,69],[371,10,409,8],[372,10,410,8],[372,14,410,12,"newState"],[372,22,410,20],[372,23,410,21,"shadowClone"],[372,34,410,32],[372,35,410,33,"remainingTicks"],[372,49,410,47],[372,53,410,51],[372,54,410,52],[372,56,410,54],[373,12,411,10,"console"],[373,19,411,17],[373,20,411,18,"log"],[373,23,411,21],[373,24,411,22],[373,75,411,73],[373,76,411,74],[374,12,412,10,"newState"],[374,20,412,18],[374,21,412,19,"shadowClone"],[374,32,412,30],[374,35,412,33,"undefined"],[374,44,412,42],[375,10,413,8],[375,11,413,9],[375,17,413,15],[376,12,414,10],[377,12,415,10],[378,12,416,10],[378,16,416,16,"CLONE_ATTACK_INTERVAL"],[378,37,416,37],[378,40,416,40],[378,42,416,42],[379,12,417,10],[379,16,417,14,"newState"],[379,24,417,22],[379,25,417,23,"currentTick"],[379,36,417,34],[379,39,417,37,"CLONE_ATTACK_INTERVAL"],[379,60,417,58],[379,65,417,63],[379,66,417,64],[379,70,417,68,"newState"],[379,78,417,76],[379,79,417,77,"enemies"],[379,86,417,84],[379,87,417,85,"length"],[379,93,417,91],[379,96,417,94],[379,97,417,95],[379,99,417,97],[380,14,418,12,"console"],[380,21,418,19],[380,22,418,20,"log"],[380,25,418,23],[380,26,418,24],[380,83,418,81],[380,84,418,82],[382,14,420,12],[383,14,421,12],[383,18,421,18,"target"],[383,24,421,24],[383,27,421,27,"findClosestEnemyInternal"],[383,51,421,51],[383,52,421,52,"newState"],[383,60,421,60],[383,61,421,61,"enemies"],[383,68,421,68],[383,69,421,69],[384,14,422,12],[384,18,422,16,"target"],[384,24,422,22],[384,26,422,24],[385,16,423,14],[386,16,424,14],[386,20,424,20,"cloneDamage"],[386,31,424,31],[386,34,424,34,"Math"],[386,38,424,38],[386,39,424,39,"floor"],[386,44,424,44],[386,45,424,45,"newState"],[386,53,424,53],[386,54,424,54,"playerStats"],[386,65,424,65],[386,66,424,66,"attack"],[386,72,424,72],[386,75,424,75],[386,78,424,78],[386,79,424,79],[388,16,426,14],[389,16,427,14,"createProjectile"],[389,32,427,30],[389,33,427,31,"target"],[389,39,427,37],[389,41,427,39,"cloneDamage"],[389,52,427,50],[389,54,427,52,"newState"],[389,62,427,60],[389,63,427,61,"shadowClone"],[389,74,427,72],[389,75,427,73,"position"],[389,83,427,81],[389,85,427,83],[390,18,428,16,"id"],[390,20,428,18],[390,22,428,20],[390,43,428,41],[391,18,429,16,"name"],[391,22,429,20],[391,24,429,22],[391,45,429,43],[392,18,430,16,"icon"],[392,22,430,20],[392,24,430,22],[393,16,431,14],[393,17,431,15],[393,18,431,16],[394,14,432,12],[395,12,433,10],[396,10,434,8],[397,8,435,6],[399,8,437,6],[400,8,438,6],[400,12,438,10],[400,13,438,11,"isManualControlActive"],[400,34,438,32],[400,36,438,34],[401,10,439,8],[401,15,439,13],[401,19,439,17,"i"],[401,20,439,18],[401,23,439,21],[401,24,439,22],[401,26,439,24,"i"],[401,27,439,25],[401,30,439,28],[401,31,439,29],[401,33,439,31,"i"],[401,34,439,32],[401,36,439,34],[401,38,439,36],[402,12,440,10],[402,16,440,14,"newState"],[402,24,440,22],[402,25,440,23,"abilityManager"],[402,39,440,37],[402,40,440,38,"isAbilityReady"],[402,54,440,52],[402,55,440,53,"i"],[402,56,440,54],[402,57,440,55],[402,61,440,59,"newState"],[402,69,440,67],[402,70,440,68,"enemies"],[402,77,440,75],[402,78,440,76,"length"],[402,84,440,82],[402,87,440,85],[402,88,440,86],[402,90,440,88],[403,14,441,12],[403,18,441,16,"newState"],[403,26,441,24],[403,27,441,25,"abilityManager"],[403,41,441,39],[403,42,441,40,"useAbility"],[403,52,441,50],[403,53,441,51,"i"],[403,54,441,52],[403,56,441,54,"newTick"],[403,63,441,61],[403,64,441,62],[403,66,441,64],[404,16,442,14,"castAbility"],[404,27,442,25],[404,28,442,26,"newState"],[404,36,442,34],[404,38,442,36,"i"],[404,39,442,37],[404,40,442,38],[405,14,443,12],[406,12,444,10],[407,10,445,8],[408,8,446,6],[410,8,448,6],[411,8,449,6],[411,12,449,12,"deadEnemies"],[411,23,449,23],[411,26,449,26,"newState"],[411,34,449,34],[411,35,449,35,"enemies"],[411,42,449,42],[411,43,449,43,"filter"],[411,49,449,49],[411,50,449,50,"enemy"],[411,55,449,55],[411,59,449,59,"enemy"],[411,64,449,64],[411,65,449,65,"health"],[411,71,449,71],[411,75,449,75],[411,76,449,76],[411,77,449,77],[412,8,450,6,"enemiesToKill"],[412,21,450,19],[412,24,450,22],[412,25,450,23],[412,28,450,26,"deadEnemies"],[412,39,450,37],[412,40,450,38],[412,41,450,39],[412,42,450,40],[414,8,452,6],[415,8,453,6],[415,12,453,10,"deadEnemies"],[415,23,453,21],[415,24,453,22,"length"],[415,30,453,28],[415,33,453,31],[415,34,453,32],[415,36,453,34],[416,10,454,8,"console"],[416,17,454,15],[416,18,454,16,"log"],[416,21,454,19],[416,22,454,20],[416,49,454,47,"deadEnemies"],[416,60,454,58],[416,61,454,59,"length"],[416,67,454,65],[416,83,454,81],[416,85,454,83,"deadEnemies"],[416,96,454,94],[416,97,454,95,"map"],[416,100,454,98],[416,101,454,99,"e"],[416,102,454,100],[416,106,454,104],[416,109,454,107,"e"],[416,110,454,108],[416,111,454,109,"id"],[416,113,454,111],[416,117,454,115,"e"],[416,118,454,116],[416,119,454,117,"health"],[416,125,454,123],[416,130,454,128],[416,131,454,129],[416,132,454,130],[417,8,455,6],[419,8,457,6],[420,8,458,6],[420,12,458,12,"lowHealthEnemies"],[420,28,458,28],[420,31,458,31,"newState"],[420,39,458,39],[420,40,458,40,"enemies"],[420,47,458,47],[420,48,458,48,"filter"],[420,54,458,54],[420,55,458,55,"enemy"],[420,60,458,60],[420,64,458,64,"enemy"],[420,69,458,69],[420,70,458,70,"health"],[420,76,458,76],[420,80,458,80],[420,82,458,82],[420,86,458,86,"enemy"],[420,91,458,91],[420,92,458,92,"health"],[420,98,458,98],[420,101,458,101],[420,102,458,102],[420,103,458,103],[421,8,459,6],[421,12,459,10,"lowHealthEnemies"],[421,28,459,26],[421,29,459,27,"length"],[421,35,459,33],[421,38,459,36],[421,39,459,37],[421,41,459,39],[422,10,460,8,"console"],[422,17,460,15],[422,18,460,16,"log"],[422,21,460,19],[422,22,460,20],[422,61,460,59],[422,63,460,61,"lowHealthEnemies"],[422,79,460,77],[422,80,460,78,"map"],[422,83,460,81],[422,84,460,82,"e"],[422,85,460,83],[422,89,460,87],[422,92,460,90,"e"],[422,93,460,91],[422,94,460,92,"id"],[422,96,460,94],[422,100,460,98,"e"],[422,101,460,99],[422,102,460,100,"health"],[422,108,460,106],[422,112,460,110,"e"],[422,113,460,111],[422,114,460,112,"maxHealth"],[422,123,460,121],[422,128,460,126],[422,129,460,127],[422,130,460,128],[423,8,461,6],[425,8,463,6],[426,8,464,6],[426,12,464,12,"beforeCount"],[426,23,464,23],[426,26,464,26,"newState"],[426,34,464,34],[426,35,464,35,"enemies"],[426,42,464,42],[426,43,464,43,"length"],[426,49,464,49],[427,8,465,6,"newState"],[427,16,465,14],[427,17,465,15,"enemies"],[427,24,465,22],[427,27,465,25,"newState"],[427,35,465,33],[427,36,465,34,"enemies"],[427,43,465,41],[427,44,465,42,"filter"],[427,50,465,48],[427,51,465,49,"enemy"],[427,56,465,54],[427,60,465,58,"enemy"],[427,65,465,63],[427,66,465,64,"health"],[427,72,465,70],[427,75,465,73],[427,76,465,74],[427,77,465,75],[428,8,466,6],[428,12,466,12,"afterCount"],[428,22,466,22],[428,25,466,25,"newState"],[428,33,466,33],[428,34,466,34,"enemies"],[428,41,466,41],[428,42,466,42,"length"],[428,48,466,48],[429,8,468,6],[429,12,468,10,"beforeCount"],[429,23,468,21],[429,28,468,26,"afterCount"],[429,38,468,36],[429,40,468,38],[430,10,469,8,"console"],[430,17,469,15],[430,18,469,16,"log"],[430,21,469,19],[430,22,469,20],[430,52,469,50,"beforeCount"],[430,63,469,61],[430,66,469,64,"afterCount"],[430,76,469,74],[430,102,469,100],[430,103,469,101],[431,8,470,6],[433,8,472,6],[434,8,473,6],[435,8,474,6],[435,12,474,12,"MAX_ENEMIES"],[435,23,474,23],[435,26,474,26],[435,28,474,28],[435,29,474,29],[435,30,474,30],[436,8,475,6],[436,12,475,12,"MIN_SPAWN_DELAY"],[436,27,475,27],[436,30,475,30],[436,33,475,33],[436,34,475,34],[436,35,475,35],[437,8,476,6],[437,12,476,12,"now"],[437,15,476,15],[437,18,476,18,"Date"],[437,22,476,22],[437,23,476,23,"now"],[437,26,476,26],[437,27,476,27],[437,28,476,28],[438,8,477,6],[438,12,477,12,"hasBoss"],[438,19,477,19],[438,22,477,22,"newState"],[438,30,477,30],[438,31,477,31,"enemies"],[438,38,477,38],[438,39,477,39,"some"],[438,43,477,43],[438,44,477,44,"enemy"],[438,49,477,49],[438,53,477,53,"enemy"],[438,58,477,58],[438,59,477,59,"isBoss"],[438,65,477,65],[438,66,477,66],[440,8,479,6],[441,8,480,6],[441,12,480,10],[441,13,480,11,"newState"],[441,21,480,19],[441,22,480,20,"lastSpawnTime"],[441,35,480,33],[441,37,480,35],[442,10,481,8,"newState"],[442,18,481,16],[442,19,481,17,"lastSpawnTime"],[442,32,481,30],[442,35,481,33,"now"],[442,38,481,36],[443,8,482,6],[444,8,484,6,"console"],[444,15,484,13],[444,16,484,14,"log"],[444,19,484,17],[444,20,484,18],[444,53,484,51,"newState"],[444,61,484,59],[444,62,484,60,"enemies"],[444,69,484,67],[444,70,484,68,"length"],[444,76,484,74],[444,85,484,83,"MAX_ENEMIES"],[444,96,484,94],[444,109,484,107,"hasBoss"],[444,116,484,114],[444,118,484,116],[444,119,484,117],[446,8,486,6],[447,8,487,6],[447,12,487,10],[447,13,487,11,"hasBoss"],[447,20,487,18],[447,24,487,22,"newState"],[447,32,487,30],[447,33,487,31,"enemies"],[447,40,487,38],[447,41,487,39,"length"],[447,47,487,45],[447,50,487,48,"MAX_ENEMIES"],[447,61,487,59],[447,65,487,64,"now"],[447,68,487,67],[447,71,487,70,"newState"],[447,79,487,78],[447,80,487,79,"lastSpawnTime"],[447,93,487,92],[447,97,487,97,"MIN_SPAWN_DELAY"],[447,112,487,112],[447,114,487,114],[448,10,488,8,"console"],[448,17,488,15],[448,18,488,16,"log"],[448,21,488,19],[448,22,488,20],[448,43,488,41,"newState"],[448,51,488,49],[448,52,488,50,"enemies"],[448,59,488,57],[448,60,488,58,"length"],[448,66,488,64],[448,69,488,67],[448,70,488,68],[448,74,488,72,"MAX_ENEMIES"],[448,85,488,83],[448,87,488,85],[448,88,488,86],[449,10,489,8,"spawnTestEnemy"],[449,24,489,22],[449,25,489,23,"newState"],[449,33,489,31],[449,34,489,32],[450,10,490,8,"newState"],[450,18,490,16],[450,19,490,17,"lastSpawnTime"],[450,32,490,30],[450,35,490,33,"now"],[450,38,490,36],[451,8,491,6],[452,8,493,6],[452,15,493,13,"newState"],[452,23,493,21],[453,6,494,4],[453,7,494,5],[453,47,494,6],[455,6,496,4],[456,6,497,4,"console"],[456,13,497,11],[456,14,497,12,"log"],[456,17,497,15],[456,18,497,16],[456,50,497,48,"enemiesToKill"],[456,63,497,61],[456,64,497,62,"length"],[456,70,497,68],[456,101,497,99],[456,102,497,100],[457,6,499,4,"enemiesToKill"],[457,19,499,17],[457,20,499,18,"forEach"],[457,27,499,25],[457,28,499,26],[457,29,499,27,"enemy"],[457,34,499,32],[457,36,499,34,"index"],[457,41,499,39],[457,46,499,44],[458,8,500,6,"console"],[458,15,500,13],[458,16,500,14,"log"],[458,19,500,17],[458,20,500,18],[458,57,500,55,"index"],[458,62,500,60],[458,65,500,63],[458,66,500,64],[458,70,500,68,"enemiesToKill"],[458,83,500,81],[458,84,500,82,"length"],[458,90,500,88],[458,104,500,102,"enemy"],[458,109,500,107],[458,110,500,108,"id"],[458,112,500,110],[458,114,500,112],[458,115,500,113],[459,8,501,6,"handleEnemyKill"],[459,23,501,21],[459,24,501,22,"enemy"],[459,29,501,27],[459,30,501,28],[460,6,502,4],[460,7,502,5],[460,8,502,6],[461,4,503,2],[461,5,503,3],[461,7,503,5],[461,8,503,6,"handleEnemyKill"],[461,23,503,21],[461,24,503,22],[461,25,503,23],[461,26,503,24],[461,27,503,25],[463,4,505,2],[464,4,506,2],[464,8,506,8,"findClosestEnemyInternal"],[464,32,506,32],[464,35,506,36,"enemies"],[464,42,506,58],[464,46,506,83],[465,6,507,4],[465,10,507,8,"enemies"],[465,17,507,15],[465,18,507,16,"length"],[465,24,507,22],[465,29,507,27],[465,30,507,28],[465,32,507,30],[465,39,507,37],[465,43,507,41],[467,6,509,4],[468,6,510,4],[468,10,510,10,"SCREEN_WIDTH"],[468,22,510,22],[468,25,510,25],[468,28,510,28],[469,6,511,4],[469,10,511,10,"GAME_AREA_HEIGHT"],[469,26,511,26],[469,29,511,29],[469,32,511,32],[469,35,511,35],[469,38,511,38],[469,39,511,39],[469,40,511,40],[470,6,512,4],[470,10,512,10,"ninjaX"],[470,16,512,16],[470,19,512,19,"SCREEN_WIDTH"],[470,31,512,31],[470,34,512,34],[470,35,512,35],[471,6,513,4],[471,10,513,10,"ninjaY"],[471,16,513,16],[471,19,513,19,"GAME_AREA_HEIGHT"],[471,35,513,35],[471,38,513,38],[471,39,513,39],[472,6,515,4],[472,10,515,8,"closestEnemy"],[472,22,515,20],[472,25,515,23,"enemies"],[472,32,515,30],[472,33,515,31],[472,34,515,32],[472,35,515,33],[473,6,516,4],[473,10,516,8,"closestDistance"],[473,25,516,23],[473,28,516,26,"Infinity"],[473,36,516,34],[474,6,518,4,"enemies"],[474,13,518,11],[474,14,518,12,"forEach"],[474,21,518,19],[474,22,518,20,"enemy"],[474,27,518,25],[474,31,518,29],[475,8,519,6],[475,12,519,12,"distance"],[475,20,519,20],[475,23,519,23,"Math"],[475,27,519,27],[475,28,519,28,"sqrt"],[475,32,519,32],[475,33,520,8,"Math"],[475,37,520,12],[475,38,520,13,"pow"],[475,41,520,16],[475,42,520,17,"enemy"],[475,47,520,22],[475,48,520,23,"position"],[475,56,520,31],[475,57,520,32,"x"],[475,58,520,33],[475,61,520,36,"ninjaX"],[475,67,520,42],[475,69,520,44],[475,70,520,45],[475,71,520,46],[475,74,521,8,"Math"],[475,78,521,12],[475,79,521,13,"pow"],[475,82,521,16],[475,83,521,17,"enemy"],[475,88,521,22],[475,89,521,23,"position"],[475,97,521,31],[475,98,521,32,"y"],[475,99,521,33],[475,102,521,36,"ninjaY"],[475,108,521,42],[475,110,521,44],[475,111,521,45],[475,112,522,6],[475,113,522,7],[476,8,524,6],[476,12,524,10,"distance"],[476,20,524,18],[476,23,524,21,"closestDistance"],[476,38,524,36],[476,40,524,38],[477,10,525,8,"closestDistance"],[477,25,525,23],[477,28,525,26,"distance"],[477,36,525,34],[478,10,526,8,"closestEnemy"],[478,22,526,20],[478,25,526,23,"enemy"],[478,30,526,28],[479,8,527,6],[480,6,528,4],[480,7,528,5],[480,8,528,6],[481,6,530,4,"console"],[481,13,530,11],[481,14,530,12,"log"],[481,17,530,15],[481,18,530,16],[481,60,530,58,"closestDistance"],[481,75,530,73],[481,76,530,74,"toFixed"],[481,83,530,81],[481,84,530,82],[481,85,530,83],[481,86,530,84],[481,88,530,86],[481,89,530,87],[482,6,531,4],[482,13,531,11,"closestEnemy"],[482,25,531,23],[483,4,532,2],[483,5,532,3],[485,4,534,2],[486,4,535,2],[486,8,535,8,"findClosestEnemy"],[486,24,535,24],[486,27,535,27,"findClosestEnemy"],[486,28,535,27],[486,33,535,53],[487,6,536,4],[487,13,536,11,"findClosestEnemyInternal"],[487,37,536,35],[487,38,536,36,"combatState"],[487,49,536,47],[487,50,536,48,"enemies"],[487,57,536,55],[487,58,536,56],[488,4,537,2],[488,5,537,3],[490,4,539,2],[491,4,540,2],[491,8,540,2,"_useState7"],[491,18,540,2],[491,21,540,58],[491,25,540,58,"useState"],[491,31,540,66],[491,32,540,66,"useState"],[491,40,540,66],[491,42,540,91],[492,8,540,93,"x"],[492,9,540,94],[492,11,540,96],[492,12,540,97],[493,8,540,99,"y"],[493,9,540,100],[493,11,540,102],[494,6,540,104],[494,7,540,105],[494,8,540,106],[495,6,540,106,"_useState8"],[495,16,540,106],[495,23,540,106,"_slicedToArray"],[495,37,540,106],[495,38,540,106,"default"],[495,45,540,106],[495,47,540,106,"_useState7"],[495,57,540,106],[496,6,540,9,"currentNinjaPosition"],[496,26,540,29],[496,29,540,29,"_useState8"],[496,39,540,29],[497,6,540,31,"setCurrentNinjaPosition"],[497,29,540,54],[497,32,540,54,"_useState8"],[497,42,540,54],[498,4,541,2],[498,8,541,2,"_useState9"],[498,18,541,2],[498,21,541,60],[498,25,541,60,"useState"],[498,31,541,68],[498,32,541,68,"useState"],[498,40,541,68],[498,42,541,69],[498,47,541,74],[498,48,541,75],[499,6,541,75,"_useState0"],[499,16,541,75],[499,23,541,75,"_slicedToArray"],[499,37,541,75],[499,38,541,75,"default"],[499,45,541,75],[499,47,541,75,"_useState9"],[499,57,541,75],[500,6,541,9,"isManualControlActive"],[500,27,541,30],[500,30,541,30,"_useState0"],[500,40,541,30],[501,6,541,32,"setIsManualControlActive"],[501,30,541,56],[501,33,541,56,"_useState0"],[501,43,541,56],[503,4,543,2],[504,4,544,2],[504,8,544,8,"updateNinjaPosition"],[504,27,544,27],[504,30,544,30],[504,34,544,30,"useCallback"],[504,40,544,41],[504,41,544,41,"useCallback"],[504,52,544,41],[504,54,544,43,"newPosition"],[504,65,544,78],[504,69,544,83],[505,6,545,4,"setCurrentNinjaPosition"],[505,29,545,27],[505,30,545,28,"newPosition"],[505,41,545,39],[505,42,545,40],[506,4,546,2],[506,5,546,3],[506,7,546,5],[506,9,546,7],[506,10,546,8],[508,4,548,2],[509,4,549,2],[509,8,549,8,"setManualControlActive"],[509,30,549,30],[509,33,549,33],[509,37,549,33,"useCallback"],[509,43,549,44],[509,44,549,44,"useCallback"],[509,55,549,44],[509,57,549,46,"active"],[509,63,549,61],[509,67,549,66],[510,6,550,4,"setIsManualControlActive"],[510,30,550,28],[510,31,550,29,"active"],[510,37,550,35],[510,38,550,36],[511,6,551,4,"console"],[511,13,551,11],[511,14,551,12,"log"],[511,17,551,15],[511,18,551,16],[511,39,551,37,"active"],[511,45,551,43],[511,48,551,46],[511,59,551,57],[511,62,551,60],[511,75,551,73],[511,88,551,86,"active"],[511,94,551,92],[511,97,551,95],[511,105,551,103],[511,108,551,106],[511,117,551,115],[511,119,551,117],[511,120,551,118],[512,4,552,2],[512,5,552,3],[512,7,552,5],[512,9,552,7],[512,10,552,8],[514,4,554,2],[515,4,555,2],[515,8,555,8,"handleProjectileHit"],[515,27,555,27],[515,30,555,31,"projectile"],[515,40,555,59],[515,44,555,64],[516,6,556,4,"console"],[516,13,556,11],[516,14,556,12,"log"],[516,17,556,15],[516,18,556,16],[516,35,556,33,"projectile"],[516,45,556,43],[516,46,556,44,"id"],[516,48,556,46],[516,62,556,60,"projectile"],[516,72,556,70],[516,73,556,71,"targetEnemyId"],[516,86,556,84],[516,94,556,92,"projectile"],[516,104,556,102],[516,105,556,103,"damage"],[516,111,556,109],[516,120,556,118],[516,121,556,119],[517,6,558,4,"setCombatState"],[517,20,558,18],[517,21,558,19,"prev"],[517,25,558,23],[517,29,558,27],[518,8,559,6],[518,12,559,12,"newState"],[518,20,559,20],[518,23,559,23],[519,10,559,25],[519,13,559,28,"prev"],[520,8,559,33],[520,9,559,34],[522,8,561,6],[523,8,562,6],[523,12,562,12,"enemyIndex"],[523,22,562,22],[523,25,562,25,"newState"],[523,33,562,33],[523,34,562,34,"enemies"],[523,41,562,41],[523,42,562,42,"findIndex"],[523,51,562,51],[523,52,562,52,"e"],[523,53,562,53],[523,57,562,57,"e"],[523,58,562,58],[523,59,562,59,"id"],[523,61,562,61],[523,66,562,66,"projectile"],[523,76,562,76],[523,77,562,77,"targetEnemyId"],[523,90,562,90],[523,91,562,91],[524,8,563,6],[524,12,563,10,"enemyIndex"],[524,22,563,20],[524,26,563,24],[524,27,563,25],[524,29,563,27],[525,10,564,8,"newState"],[525,18,564,16],[525,19,564,17,"enemies"],[525,26,564,24],[525,29,564,27],[525,30,564,28],[525,33,564,31,"newState"],[525,41,564,39],[525,42,564,40,"enemies"],[525,49,564,47],[525,50,564,48],[526,10,565,8,"newState"],[526,18,565,16],[526,19,565,17,"enemies"],[526,26,565,24],[526,27,565,25,"enemyIndex"],[526,37,565,35],[526,38,565,36],[526,41,565,39],[527,12,566,10],[527,15,566,13,"newState"],[527,23,566,21],[527,24,566,22,"enemies"],[527,31,566,29],[527,32,566,30,"enemyIndex"],[527,42,566,40],[527,43,566,41],[528,12,567,10,"health"],[528,18,567,16],[528,20,567,18,"newState"],[528,28,567,26],[528,29,567,27,"enemies"],[528,36,567,34],[528,37,567,35,"enemyIndex"],[528,47,567,45],[528,48,567,46],[528,49,567,47,"health"],[528,55,567,53],[528,58,567,56,"projectile"],[528,68,567,66],[528,69,567,67,"damage"],[528,75,567,73],[529,12,568,10,"lastDamaged"],[529,23,568,21],[529,25,568,23,"combatEngine"],[529,44,568,35],[529,45,568,35,"combatEngine"],[529,57,568,35],[529,58,568,36,"getCurrentTick"],[529,72,568,50],[529,73,568,51],[530,10,569,8],[530,11,569,9],[531,10,571,8,"console"],[531,17,571,15],[531,18,571,16,"log"],[531,21,571,19],[531,22,571,20],[531,34,571,32,"projectile"],[531,44,571,42],[531,45,571,43,"targetEnemyId"],[531,58,571,56],[531,70,571,68,"newState"],[531,78,571,76],[531,79,571,77,"enemies"],[531,86,571,84],[531,87,571,85,"enemyIndex"],[531,97,571,95],[531,98,571,96],[531,99,571,97,"health"],[531,105,571,103],[531,109,571,107,"newState"],[531,117,571,115],[531,118,571,116,"enemies"],[531,125,571,123],[531,126,571,124,"enemyIndex"],[531,136,571,134],[531,137,571,135],[531,138,571,136,"maxHealth"],[531,147,571,145],[531,149,571,147],[531,150,571,148],[532,8,572,6],[533,8,574,6],[533,15,574,13,"newState"],[533,23,574,21],[534,6,575,4],[534,7,575,5],[534,8,575,6],[536,6,577,4],[537,6,578,4,"setProjectiles"],[537,20,578,18],[537,21,578,19,"prev"],[537,25,578,23],[537,29,578,27,"prev"],[537,33,578,31],[537,34,578,32,"filter"],[537,40,578,38],[537,41,578,39,"p"],[537,42,578,40],[537,46,578,44,"p"],[537,47,578,45],[537,48,578,46,"id"],[537,50,578,48],[537,55,578,53,"projectile"],[537,65,578,63],[537,66,578,64,"id"],[537,68,578,66],[537,69,578,67],[537,70,578,68],[538,4,579,2],[538,5,579,3],[540,4,581,2],[541,4,582,2],[541,8,582,8,"castAbility"],[541,19,582,19],[541,22,582,22,"castAbility"],[541,23,582,23,"state"],[541,28,582,41],[541,30,582,43,"slotIndex"],[541,39,582,60],[541,44,582,65],[542,6,583,4],[542,10,583,10,"deck"],[542,14,583,14],[542,17,583,17,"state"],[542,22,583,22],[542,23,583,23,"abilityManager"],[542,37,583,37],[542,38,583,38,"getDeck"],[542,45,583,45],[542,46,583,46],[542,47,583,47],[543,6,584,4],[543,10,584,10,"ability"],[543,17,584,17],[543,20,584,20,"deck"],[543,24,584,24],[543,25,584,25,"slots"],[543,30,584,30],[543,31,584,31,"slotIndex"],[543,40,584,40],[543,41,584,41],[544,6,585,4],[544,10,585,8],[544,11,585,9,"ability"],[544,18,585,16],[544,20,585,18],[546,6,587,4],[547,6,588,4],[547,10,588,8,"damage"],[547,16,588,14],[547,19,588,17,"ability"],[547,26,588,24],[547,27,588,25,"stats"],[547,32,588,30],[547,33,588,31,"baseDamage"],[547,43,588,41],[549,6,590,4],[550,6,591,4,"deck"],[550,10,591,8],[550,11,591,9,"activeSynergies"],[550,26,591,24],[550,27,591,25,"forEach"],[550,34,591,32],[550,35,591,33,"synergy"],[550,42,591,40],[550,46,591,44],[551,8,592,6],[551,12,592,10,"synergy"],[551,19,592,17],[551,20,592,18,"bonus"],[551,25,592,23],[551,26,592,24,"damageBonus"],[551,37,592,35],[551,41,593,10,"synergy"],[551,48,593,17],[551,49,593,18,"requiredTags"],[551,61,593,30],[551,62,593,31,"some"],[551,66,593,35],[551,67,593,36,"tag"],[551,70,593,39],[551,74,593,43,"ability"],[551,81,593,50],[551,82,593,51,"tags"],[551,86,593,55],[551,87,593,56,"includes"],[551,95,593,64],[551,96,593,65,"tag"],[551,99,593,68],[551,100,593,69],[551,101,593,70],[551,103,593,72],[552,10,594,8,"damage"],[552,16,594,14],[552,20,594,19],[552,21,594,20],[552,24,594,23,"synergy"],[552,31,594,30],[552,32,594,31,"bonus"],[552,37,594,36],[552,38,594,37,"damageBonus"],[552,49,594,48],[552,52,594,51],[552,55,594,55],[553,8,595,6],[554,6,596,4],[554,7,596,5],[554,8,596,6],[556,6,598,4],[557,6,599,4],[557,10,599,10,"isAOE"],[557,15,599,15],[557,18,599,18,"ability"],[557,25,599,25],[557,26,599,26,"effects"],[557,33,599,33],[557,34,599,34,"includes"],[557,42,599,42],[557,43,599,43],[557,48,599,48],[557,49,599,49],[557,53,599,53,"ability"],[557,60,599,60],[557,61,599,61,"stats"],[557,66,599,66],[557,67,599,67,"aoeRadius"],[557,76,599,76],[558,6,601,4],[558,10,601,8,"isAOE"],[558,15,601,13],[558,17,601,15],[559,8,602,6,"console"],[559,15,602,13],[559,16,602,14,"log"],[559,19,602,17],[559,20,602,18],[559,39,602,37,"ability"],[559,46,602,44],[559,47,602,45,"name"],[559,51,602,49],[559,67,602,65,"ability"],[559,74,602,72],[559,75,602,73,"stats"],[559,80,602,78],[559,81,602,79,"aoeRadius"],[559,90,602,88],[559,92,602,90],[559,93,602,91],[561,8,604,6],[562,8,605,6],[562,12,605,12,"ninjaX"],[562,18,605,18],[562,21,605,21,"currentNinjaPosition"],[562,41,605,41],[562,42,605,42,"x"],[562,43,605,43],[562,46,605,46],[562,48,605,48],[562,49,605,49],[562,50,605,50],[563,8,606,6],[563,12,606,12,"ninjaY"],[563,18,606,18],[563,21,606,21,"currentNinjaPosition"],[563,41,606,41],[563,42,606,42,"y"],[563,43,606,43],[563,46,606,46],[563,48,606,48],[564,8,607,6],[564,12,607,12,"aoeRadius"],[564,21,607,21],[564,24,607,24,"ability"],[564,31,607,31],[564,32,607,32,"stats"],[564,37,607,37],[564,38,607,38,"aoeRadius"],[564,47,607,47],[565,8,609,6],[565,12,609,12,"enemiesInRange"],[565,26,609,26],[565,29,609,29,"state"],[565,34,609,34],[565,35,609,35,"enemies"],[565,42,609,42],[565,43,609,43,"filter"],[565,49,609,49],[565,50,609,50,"enemy"],[565,55,609,55],[565,59,609,59],[566,10,610,8],[566,14,610,14,"enemyX"],[566,20,610,20],[566,23,610,23,"enemy"],[566,28,610,28],[566,29,610,29,"position"],[566,37,610,37],[566,38,610,38,"x"],[566,39,610,39],[566,42,610,42],[566,46,610,46],[566,47,610,47],[566,48,610,48],[567,10,611,8],[567,14,611,14,"enemyY"],[567,20,611,20],[567,23,611,23,"enemy"],[567,28,611,28],[567,29,611,29,"position"],[567,37,611,37],[567,38,611,38,"y"],[567,39,611,39],[567,42,611,42],[567,46,611,46],[568,10,612,8],[568,14,612,14,"distance"],[568,22,612,22],[568,25,612,25,"Math"],[568,29,612,29],[568,30,612,30,"sqrt"],[568,34,612,34],[568,35,612,35,"Math"],[568,39,612,39],[568,40,612,40,"pow"],[568,43,612,43],[568,44,612,44,"enemyX"],[568,50,612,50],[568,53,612,53,"ninjaX"],[568,59,612,59],[568,61,612,61],[568,62,612,62],[568,63,612,63],[568,66,612,66,"Math"],[568,70,612,70],[568,71,612,71,"pow"],[568,74,612,74],[568,75,612,75,"enemyY"],[568,81,612,81],[568,84,612,84,"ninjaY"],[568,90,612,90],[568,92,612,92],[568,93,612,93],[568,94,612,94],[568,95,612,95],[569,10,613,8],[569,17,613,15,"distance"],[569,25,613,23],[569,29,613,27,"aoeRadius"],[569,38,613,36],[570,8,614,6],[570,9,614,7],[570,10,614,8],[571,8,616,6,"console"],[571,15,616,13],[571,16,616,14,"log"],[571,19,616,17],[571,20,616,18],[571,45,616,43,"enemiesInRange"],[571,59,616,57],[571,60,616,58,"length"],[571,66,616,64],[571,88,616,86,"aoeRadius"],[571,97,616,95],[571,107,616,105],[571,108,616,106],[573,8,618,6],[574,8,619,6,"enemiesInRange"],[574,22,619,20],[574,23,619,21,"forEach"],[574,30,619,28],[574,31,619,29,"enemy"],[574,36,619,34],[574,40,619,38],[575,10,620,8],[575,14,620,14,"damageResult"],[575,26,620,26],[575,29,620,29,"DamageCalculator"],[575,48,620,45],[575,49,620,45,"DamageCalculator"],[575,65,620,45],[575,66,620,46,"calculateDamage"],[575,81,620,61],[575,82,620,62,"damage"],[575,88,620,68],[575,90,620,70,"state"],[575,95,620,75],[575,96,620,76,"playerStats"],[575,107,620,87],[575,109,620,89,"enemy"],[575,114,620,94],[575,115,620,95,"stats"],[575,120,620,100],[575,121,620,101],[576,10,621,8,"createProjectile"],[576,26,621,24],[576,27,621,25,"enemy"],[576,32,621,30],[576,34,621,32,"damageResult"],[576,46,621,44],[576,47,621,45,"damage"],[576,53,621,51],[576,55,621,53,"currentNinjaPosition"],[576,75,621,73],[576,77,621,75],[577,12,622,10,"id"],[577,14,622,12],[577,16,622,14,"ability"],[577,23,622,21],[577,24,622,22,"id"],[577,26,622,24],[578,12,623,10,"name"],[578,16,623,14],[578,18,623,16,"ability"],[578,25,623,23],[578,26,623,24,"name"],[578,30,623,28],[579,12,624,10,"icon"],[579,16,624,14],[579,18,624,16,"ability"],[579,25,624,23],[579,26,624,24,"icon"],[580,10,625,8],[580,11,625,9],[580,12,625,10],[581,10,627,8,"console"],[581,17,627,15],[581,18,627,16,"log"],[581,21,627,19],[581,22,627,20],[581,37,627,35,"enemy"],[581,42,627,40],[581,43,627,41,"name"],[581,47,627,45],[581,55,627,53,"damageResult"],[581,67,627,65],[581,68,627,66,"damage"],[581,74,627,72],[581,83,627,81],[581,84,627,82],[582,8,628,6],[582,9,628,7],[582,10,628,8],[583,8,630,6,"console"],[583,15,630,13],[583,16,630,14,"log"],[583,19,630,17],[583,20,630,18],[583,26,630,24,"ability"],[583,33,630,31],[583,34,630,32,"name"],[583,38,630,36],[583,56,630,54,"enemiesInRange"],[583,70,630,68],[583,71,630,69,"length"],[583,77,630,75],[583,93,630,91,"damage"],[583,99,630,97],[583,118,630,116],[583,119,630,117],[584,6,632,4],[584,7,632,5],[584,13,632,11],[585,8,633,6],[586,8,634,6],[586,12,634,12,"target"],[586,18,634,18],[586,21,634,21,"findClosestEnemyInternal"],[586,45,634,45],[586,46,634,46,"state"],[586,51,634,51],[586,52,634,52,"enemies"],[586,59,634,59],[586,60,634,60],[587,8,635,6],[587,12,635,10],[587,13,635,11,"target"],[587,19,635,17],[587,21,635,19],[588,8,637,6],[588,12,637,12,"damageResult"],[588,24,637,24],[588,27,637,27,"DamageCalculator"],[588,46,637,43],[588,47,637,43,"DamageCalculator"],[588,63,637,43],[588,64,637,44,"calculateDamage"],[588,79,637,59],[588,80,637,60,"damage"],[588,86,637,66],[588,88,637,68,"state"],[588,93,637,73],[588,94,637,74,"playerStats"],[588,105,637,85],[588,107,637,87,"target"],[588,113,637,93],[588,114,637,94,"stats"],[588,119,637,99],[588,120,637,100],[590,8,639,6],[591,8,640,6,"createProjectile"],[591,24,640,22],[591,25,640,23,"target"],[591,31,640,29],[591,33,640,31,"damageResult"],[591,45,640,43],[591,46,640,44,"damage"],[591,52,640,50],[591,54,640,52,"currentNinjaPosition"],[591,74,640,72],[591,76,640,74],[592,10,641,8,"id"],[592,12,641,10],[592,14,641,12,"ability"],[592,21,641,19],[592,22,641,20,"id"],[592,24,641,22],[593,10,642,8,"name"],[593,14,642,12],[593,16,642,14,"ability"],[593,23,642,21],[593,24,642,22,"name"],[593,28,642,26],[594,10,643,8,"icon"],[594,14,643,12],[594,16,643,14,"ability"],[594,23,643,21],[594,24,643,22,"icon"],[595,8,644,6],[595,9,644,7],[595,10,644,8],[596,8,646,6,"console"],[596,15,646,13],[596,16,646,14,"log"],[596,19,646,17],[596,20,646,18],[596,26,646,24,"ability"],[596,33,646,31],[596,34,646,32,"name"],[596,38,646,36],[596,66,646,64,"damageResult"],[596,78,646,76],[596,79,646,77,"damage"],[596,85,646,83],[596,95,646,93,"damageResult"],[596,107,646,105],[596,108,646,106,"isCritical"],[596,118,646,116],[596,121,646,119],[596,131,646,129],[596,134,646,132],[596,136,646,134],[596,138,646,136],[596,139,646,137],[597,6,647,4],[599,6,649,4],[600,6,650,4],[600,10,650,8,"ability"],[600,17,650,15],[600,18,650,16,"effects"],[600,25,650,23],[600,26,650,24,"includes"],[600,34,650,32],[600,35,650,33],[600,40,650,38],[600,41,650,39],[600,45,650,43,"ability"],[600,52,650,50],[600,53,650,51,"stats"],[600,58,650,56],[600,59,650,57,"duration"],[600,67,650,65],[600,69,650,67],[601,8,651,6],[601,12,651,12,"targets"],[601,19,651,19],[601,22,651,22,"isAOE"],[601,27,651,27],[601,30,652,8,"state"],[601,35,652,13],[601,36,652,14,"enemies"],[601,43,652,21],[601,44,652,22,"filter"],[601,50,652,28],[601,51,652,29,"enemy"],[601,56,652,34],[601,60,652,38],[602,10,653,10],[602,14,653,16,"ninjaX"],[602,20,653,22],[602,23,653,25,"currentNinjaPosition"],[602,43,653,45],[602,44,653,46,"x"],[602,45,653,47],[602,48,653,50],[602,50,653,52],[603,10,654,10],[603,14,654,16,"ninjaY"],[603,20,654,22],[603,23,654,25,"currentNinjaPosition"],[603,43,654,45],[603,44,654,46,"y"],[603,45,654,47],[603,48,654,50],[603,50,654,52],[604,10,655,10],[604,14,655,16,"enemyX"],[604,20,655,22],[604,23,655,25,"enemy"],[604,28,655,30],[604,29,655,31,"position"],[604,37,655,39],[604,38,655,40,"x"],[604,39,655,41],[604,42,655,44],[604,46,655,48],[605,10,656,10],[605,14,656,16,"enemyY"],[605,20,656,22],[605,23,656,25,"enemy"],[605,28,656,30],[605,29,656,31,"position"],[605,37,656,39],[605,38,656,40,"y"],[605,39,656,41],[605,42,656,44],[605,46,656,48],[606,10,657,10],[606,14,657,16,"distance"],[606,22,657,24],[606,25,657,27,"Math"],[606,29,657,31],[606,30,657,32,"sqrt"],[606,34,657,36],[606,35,657,37,"Math"],[606,39,657,41],[606,40,657,42,"pow"],[606,43,657,45],[606,44,657,46,"enemyX"],[606,50,657,52],[606,53,657,55,"ninjaX"],[606,59,657,61],[606,61,657,63],[606,62,657,64],[606,63,657,65],[606,66,657,68,"Math"],[606,70,657,72],[606,71,657,73,"pow"],[606,74,657,76],[606,75,657,77,"enemyY"],[606,81,657,83],[606,84,657,86,"ninjaY"],[606,90,657,92],[606,92,657,94],[606,93,657,95],[606,94,657,96],[606,95,657,97],[607,10,658,10],[607,17,658,17,"distance"],[607,25,658,25],[607,29,658,29,"ability"],[607,36,658,36],[607,37,658,37,"stats"],[607,42,658,42],[607,43,658,43,"aoeRadius"],[607,52,658,52],[608,8,659,8],[608,9,659,9],[608,10,659,10],[608,13,660,8],[608,14,660,9,"findClosestEnemyInternal"],[608,38,660,33],[608,39,660,34,"state"],[608,44,660,39],[608,45,660,40,"enemies"],[608,52,660,47],[608,53,660,48],[608,54,660,49],[608,55,660,50,"filter"],[608,61,660,56],[608,62,660,57,"Boolean"],[608,69,660,64],[608,70,660,65],[609,8,662,6,"targets"],[609,15,662,13],[609,16,662,14,"forEach"],[609,23,662,21],[609,24,662,22,"target"],[609,30,662,28],[609,34,662,32],[610,10,663,8,"state"],[610,15,663,13],[610,16,663,14,"statusEffects"],[610,29,663,27],[610,30,663,28,"addEffect"],[610,39,663,37],[610,40,663,38,"target"],[610,46,663,44],[610,47,663,45,"id"],[610,49,663,47],[610,51,663,49],[611,12,664,10,"id"],[611,14,664,12],[611,16,664,14],[611,19,664,17,"ability"],[611,26,664,24],[611,27,664,25,"id"],[611,29,664,27],[611,35,664,33],[612,12,665,10,"type"],[612,16,665,14],[612,18,665,16],[612,23,665,21],[613,12,666,10,"remainingTicks"],[613,26,666,24],[613,28,666,26,"Math"],[613,32,666,30],[613,33,666,31,"floor"],[613,38,666,36],[613,39,666,37,"ability"],[613,46,666,44],[613,47,666,45,"stats"],[613,52,666,50],[613,53,666,51,"duration"],[613,61,666,59],[613,64,666,62],[613,66,666,64],[613,67,666,65],[614,12,667,10,"tickInterval"],[614,24,667,22],[614,26,667,24],[614,28,667,26],[615,12,668,10,"lastTick"],[615,20,668,18],[615,22,668,20,"state"],[615,27,668,25],[615,28,668,26,"currentTick"],[615,39,668,37],[616,12,669,10,"value"],[616,17,669,15],[616,19,669,17,"Math"],[616,23,669,21],[616,24,669,22,"floor"],[616,29,669,27],[616,30,669,28,"damage"],[616,36,669,34],[616,39,669,37],[616,42,669,40],[616,43,669,41],[617,12,670,10,"stackable"],[617,21,670,19],[617,23,670,21],[618,10,671,8],[618,11,671,9],[618,12,671,10],[619,8,672,6],[619,9,672,7],[619,10,672,8],[620,6,673,4],[622,6,675,4],[623,6,676,4],[623,10,676,8,"ability"],[623,17,676,15],[623,18,676,16,"effects"],[623,25,676,23],[623,26,676,24,"includes"],[623,34,676,32],[623,35,676,33],[623,41,676,39],[623,42,676,40],[623,46,676,44,"ability"],[623,53,676,51],[623,54,676,52,"id"],[623,56,676,54],[623,61,676,59],[623,75,676,73],[623,77,676,75],[624,8,677,6,"console"],[624,15,677,13],[624,16,677,14,"log"],[624,19,677,17],[624,20,677,18],[624,66,677,64,"ability"],[624,73,677,71],[624,74,677,72,"stats"],[624,79,677,77],[624,80,677,78,"duration"],[624,88,677,86],[624,98,677,96],[624,99,677,97],[626,8,679,6],[627,8,680,6],[627,12,680,12,"cloneX"],[627,18,680,18],[627,21,680,21,"currentNinjaPosition"],[627,41,680,41],[627,42,680,42,"x"],[627,43,680,43],[627,46,680,46],[627,48,680,48],[627,49,680,49],[627,50,680,50],[628,8,681,6],[628,12,681,12,"cloneY"],[628,18,681,18],[628,21,681,21,"currentNinjaPosition"],[628,41,681,41],[628,42,681,42,"y"],[628,43,681,43],[628,46,681,46],[628,48,681,48],[628,49,681,49],[628,50,681,50],[630,8,683,6,"state"],[630,13,683,11],[630,14,683,12,"shadowClone"],[630,25,683,23],[630,28,683,26],[631,10,684,8,"id"],[631,12,684,10],[631,14,684,12],[631,30,684,28,"Date"],[631,34,684,32],[631,35,684,33,"now"],[631,38,684,36],[631,39,684,37],[631,40,684,38],[631,42,684,40],[632,10,685,8,"remainingTicks"],[632,24,685,22],[632,26,685,24,"Math"],[632,30,685,28],[632,31,685,29,"floor"],[632,36,685,34],[632,37,685,35,"ability"],[632,44,685,42],[632,45,685,43,"stats"],[632,50,685,48],[632,51,685,49,"duration"],[632,59,685,57],[632,62,685,60],[632,64,685,62],[632,65,685,63],[633,10,685,65],[634,10,686,8,"position"],[634,18,686,16],[634,20,686,18],[635,12,686,20,"x"],[635,13,686,21],[635,15,686,23,"cloneX"],[635,21,686,29],[636,12,686,31,"y"],[636,13,686,32],[636,15,686,34,"cloneY"],[637,10,686,41],[637,11,686,42],[638,10,687,8,"damageMultiplier"],[638,26,687,24],[638,28,687,26],[638,31,687,29],[638,32,687,31],[639,8,688,6],[639,9,688,7],[640,8,690,6,"console"],[640,15,690,13],[640,16,690,14,"log"],[640,19,690,17],[640,20,690,18],[640,63,690,61,"ability"],[640,70,690,68],[640,71,690,69,"stats"],[640,76,690,74],[640,77,690,75,"duration"],[640,85,690,83],[640,108,690,106],[640,109,690,107],[641,6,691,4],[642,4,692,2],[642,5,692,3],[644,4,694,2],[645,4,695,2],[645,8,695,8,"createProjectile"],[645,24,695,24],[645,27,695,27,"createProjectile"],[645,28,695,28,"targetEnemy"],[645,39,695,52],[645,41,695,54,"damage"],[645,47,695,68],[645,49,695,70,"ninjaPos"],[645,57,695,103],[645,59,695,105,"abilityInfo"],[645,70,695,159],[645,75,695,164],[646,6,696,4],[646,10,696,8],[646,11,696,9,"targetEnemy"],[646,22,696,20],[646,24,696,22],[647,8,697,6,"console"],[647,15,697,13],[647,16,697,14,"log"],[647,19,697,17],[647,20,697,18],[647,65,697,63],[647,66,697,64],[648,8,698,6],[648,15,698,13],[648,19,698,17],[649,6,699,4],[650,6,701,4],[650,10,701,10,"SCREEN_WIDTH"],[650,22,701,22],[650,25,701,25],[650,28,701,28],[651,6,702,4],[651,10,702,10,"GAME_AREA_HEIGHT"],[651,26,702,26],[651,29,702,29],[651,32,702,32],[651,35,702,35],[651,38,702,38],[651,39,702,39],[651,40,702,40],[652,6,703,4],[652,10,703,10,"NINJA_SIZE"],[652,20,703,20],[652,23,703,23],[652,25,703,25],[654,6,705,4],[655,6,706,4],[655,10,706,10,"ninjaX"],[655,16,706,16],[655,19,706,19,"ninjaPos"],[655,27,706,27],[655,30,706,30,"ninjaPos"],[655,38,706,38],[655,39,706,39,"x"],[655,40,706,40],[655,43,706,43,"NINJA_SIZE"],[655,53,706,53],[655,56,706,56],[655,57,706,57],[655,60,706,60,"SCREEN_WIDTH"],[655,72,706,72],[655,75,706,75],[655,76,706,76],[656,6,707,4],[656,10,707,10,"ninjaY"],[656,16,707,16],[656,19,707,19,"ninjaPos"],[656,27,707,27],[656,30,707,30,"ninjaPos"],[656,38,707,38],[656,39,707,39,"y"],[656,40,707,40],[656,43,707,43,"NINJA_SIZE"],[656,53,707,53],[656,56,707,56],[656,57,707,57],[656,60,707,60,"GAME_AREA_HEIGHT"],[656,76,707,76],[656,79,707,79],[656,80,707,80],[657,6,708,4],[657,10,708,10,"ENEMY_SIZE"],[657,20,708,20],[657,23,708,23],[657,25,708,25],[658,6,710,4],[658,10,710,10,"projectileId"],[658,22,710,22],[658,25,710,25],[658,33,710,33,"Date"],[658,37,710,37],[658,38,710,38,"now"],[658,41,710,41],[658,42,710,42],[658,43,710,43],[658,47,710,47,"Math"],[658,51,710,51],[658,52,710,52,"random"],[658,58,710,58],[658,59,710,59],[658,60,710,60],[658,62,710,62],[659,6,712,4],[659,10,712,10,"projectile"],[659,20,712,38],[659,23,712,41],[660,8,713,6,"id"],[660,10,713,8],[660,12,713,10,"projectileId"],[660,24,713,22],[661,8,714,6,"x"],[661,9,714,7],[661,11,714,9,"ninjaX"],[661,17,714,15],[662,8,715,6,"y"],[662,9,715,7],[662,11,715,9,"ninjaY"],[662,17,715,15],[663,8,716,6,"targetX"],[663,15,716,13],[663,17,716,15,"targetEnemy"],[663,28,716,26],[663,29,716,27,"position"],[663,37,716,35],[663,38,716,36,"x"],[663,39,716,37],[663,42,716,40,"ENEMY_SIZE"],[663,52,716,50],[663,55,716,53],[663,56,716,54],[664,8,717,6,"targetY"],[664,15,717,13],[664,17,717,15,"targetEnemy"],[664,28,717,26],[664,29,717,27,"position"],[664,37,717,35],[664,38,717,36,"y"],[664,39,717,37],[664,42,717,40,"ENEMY_SIZE"],[664,52,717,50],[664,55,717,53],[664,56,717,54],[665,8,718,6,"targetEnemyId"],[665,21,718,19],[665,23,718,21,"targetEnemy"],[665,34,718,32],[665,35,718,33,"id"],[665,37,718,35],[666,8,719,6,"damage"],[666,14,719,12],[666,16,719,14,"damage"],[666,22,719,20],[667,8,720,6,"startTime"],[667,17,720,15],[667,19,720,17,"Date"],[667,23,720,21],[667,24,720,22,"now"],[667,27,720,25],[667,28,720,26],[667,29,720,27],[668,8,721,6,"duration"],[668,16,721,14],[668,18,721,16],[668,21,721,19],[669,8,721,21],[670,8,722,6],[671,8,723,6,"abilityId"],[671,17,723,15],[671,19,723,17,"abilityInfo"],[671,30,723,28],[671,32,723,30,"id"],[671,34,723,32],[671,38,723,36],[671,54,723,52],[672,8,724,6,"abilityName"],[672,19,724,17],[672,21,724,19,"abilityInfo"],[672,32,724,30],[672,34,724,32,"name"],[672,38,724,36],[672,42,724,40],[672,58,724,56],[673,8,725,6,"abilityIcon"],[673,19,725,17],[673,21,725,19,"abilityInfo"],[673,32,725,30],[673,34,725,32,"icon"],[673,38,725,36],[673,42,725,40],[673,46,725,44],[673,47,725,46],[674,6,726,4],[674,7,726,5],[675,6,728,4,"console"],[675,13,728,11],[675,14,728,12,"log"],[675,17,728,15],[675,18,728,16],[675,44,728,42,"abilityInfo"],[675,55,728,53],[675,57,728,55,"name"],[675,61,728,59],[675,65,728,63],[675,81,728,79],[675,101,728,99,"projectileId"],[675,113,728,111],[675,128,728,126,"targetEnemy"],[675,139,728,137],[675,140,728,138,"name"],[675,144,728,142],[675,152,728,150,"damage"],[675,158,728,156],[675,167,728,165],[675,168,728,166],[676,6,730,4,"console"],[676,13,730,11],[676,14,730,12,"log"],[676,17,730,15],[676,18,730,16],[676,53,730,51,"targetEnemy"],[676,64,730,62],[676,65,730,63,"id"],[676,67,730,65],[676,75,730,73,"damage"],[676,81,730,79],[676,90,730,88],[676,91,730,89],[677,6,731,4,"console"],[677,13,731,11],[677,14,731,12,"log"],[677,17,731,15],[677,18,731,16],[677,53,731,51,"ninjaX"],[677,59,731,57],[677,64,731,62,"ninjaY"],[677,70,731,68],[677,87,731,85,"projectile"],[677,97,731,95],[677,98,731,96,"targetX"],[677,105,731,103],[677,110,731,108,"projectile"],[677,120,731,118],[677,121,731,119,"targetY"],[677,128,731,126],[677,131,731,129],[677,132,731,130],[678,6,733,4,"setProjectiles"],[678,20,733,18],[678,21,733,19,"prev"],[678,25,733,23],[678,29,733,27],[678,30,733,28],[678,33,733,31,"prev"],[678,37,733,35],[678,39,733,37,"projectile"],[678,49,733,47],[678,50,733,48],[678,51,733,49],[680,6,735,4],[681,6,736,4,"setTimeout"],[681,16,736,14],[681,17,736,15],[681,23,736,21],[682,8,737,6,"handleProjectileHit"],[682,27,737,25],[682,28,737,26,"projectile"],[682,38,737,36],[682,39,737,37],[683,6,738,4],[683,7,738,5],[683,9,738,7],[683,12,738,10],[683,13,738,11],[684,6,740,4],[684,13,740,11,"projectile"],[684,23,740,21],[685,4,741,2],[685,5,741,3],[687,4,743,2],[688,4,744,2],[688,8,744,8,"spawnTestEnemy"],[688,22,744,22],[688,25,744,26,"state"],[688,30,744,44],[688,34,744,49],[689,6,745,4,"console"],[689,13,745,11],[689,14,745,12,"log"],[689,17,745,15],[689,18,745,16],[689,83,745,81],[689,84,745,82],[691,6,747,4],[692,6,748,4],[692,10,748,10,"zoneEnemy"],[692,19,748,19],[692,22,748,22,"spawnZoneEnemy"],[692,36,748,36],[692,37,748,37],[692,38,748,38],[693,6,749,4],[693,10,749,8],[693,11,749,9,"zoneEnemy"],[693,20,749,18],[693,22,749,20],[694,8,750,6,"console"],[694,15,750,13],[694,16,750,14,"log"],[694,19,750,17],[694,20,750,18],[694,76,750,74],[694,77,750,75],[695,8,751,6],[696,8,752,6,"spawnBasicTestEnemy"],[696,27,752,25],[696,28,752,26,"state"],[696,33,752,31],[696,34,752,32],[697,8,753,6],[698,6,754,4],[699,6,756,4,"console"],[699,13,756,11],[699,14,756,12,"log"],[699,17,756,15],[699,18,756,16],[699,44,756,42,"zoneEnemy"],[699,53,756,51],[699,54,756,52,"name"],[699,58,756,56],[699,63,756,61,"zoneEnemy"],[699,72,756,70],[699,73,756,71,"typeId"],[699,79,756,77],[699,94,756,92,"currentZone"],[699,105,756,103],[699,107,756,105,"id"],[699,109,756,107],[699,119,756,117,"currentZoneLevel"],[699,135,756,133],[699,137,756,135,"level"],[699,142,756,140],[699,144,756,142],[699,145,756,143],[701,6,758,4],[702,6,759,4],[702,10,759,10,"combatEnemy"],[702,21,759,34],[702,24,759,37],[703,8,760,6,"id"],[703,10,760,8],[703,12,760,10,"zoneEnemy"],[703,21,760,19],[703,22,760,20,"id"],[703,24,760,22],[704,8,761,6,"name"],[704,12,761,10],[704,14,761,12,"zoneEnemy"],[704,23,761,21],[704,24,761,22,"name"],[704,28,761,26],[705,8,762,6,"health"],[705,14,762,12],[705,16,762,14,"zoneEnemy"],[705,25,762,23],[705,26,762,24,"hp"],[705,28,762,26],[706,8,763,6,"maxHealth"],[706,17,763,15],[706,19,763,17,"zoneEnemy"],[706,28,763,26],[706,29,763,27,"maxHP"],[706,34,763,32],[707,8,764,6,"stats"],[707,13,764,11],[707,15,764,13],[708,10,765,8,"attack"],[708,16,765,14],[708,18,765,16,"zoneEnemy"],[708,27,765,25],[708,28,765,26,"attack"],[708,34,765,32],[709,10,766,8,"defense"],[709,17,766,15],[709,19,766,17],[709,21,766,19],[710,10,766,21],[711,10,767,8,"health"],[711,16,767,14],[711,18,767,16,"zoneEnemy"],[711,27,767,25],[711,28,767,26,"hp"],[711,30,767,28],[712,10,768,8,"maxHealth"],[712,19,768,17],[712,21,768,19,"zoneEnemy"],[712,30,768,28],[712,31,768,29,"maxHP"],[712,36,768,34],[713,10,769,8,"critChance"],[713,20,769,18],[713,22,769,20],[713,23,769,21],[714,10,770,8,"critDamage"],[714,20,770,18],[714,22,770,20],[714,25,770,23],[715,10,771,8,"cooldownReduction"],[715,27,771,25],[715,29,771,27],[716,8,772,6],[716,9,772,7],[717,8,773,6,"position"],[717,16,773,14],[717,18,773,16,"zoneEnemy"],[717,27,773,25],[717,28,773,26,"position"],[717,36,773,34],[718,8,774,6,"lastDamaged"],[718,19,774,17],[718,21,774,19],[718,22,774,20],[719,8,775,6],[720,8,776,6,"zoneTypeId"],[720,18,776,16],[720,20,776,18,"zoneEnemy"],[720,29,776,27],[720,30,776,28,"typeId"],[720,36,776,34],[721,8,777,6,"zoneXP"],[721,14,777,12],[721,16,777,14,"zoneEnemy"],[721,25,777,23],[721,26,777,24,"xp"],[722,6,778,4],[722,7,778,5],[723,6,780,4,"console"],[723,13,780,11],[723,14,780,12,"log"],[723,17,780,15],[723,18,780,16],[723,42,780,40,"combatEnemy"],[723,53,780,51],[723,54,780,52,"name"],[723,58,780,56],[723,67,780,65,"combatEnemy"],[723,78,780,76],[723,79,780,77,"health"],[723,85,780,83],[723,100,780,98,"currentZone"],[723,111,780,109],[723,113,780,111,"id"],[723,115,780,113],[723,125,780,123,"currentZoneLevel"],[723,141,780,139],[723,143,780,141,"level"],[723,148,780,146],[723,150,780,148],[723,151,780,149],[724,6,781,4,"state"],[724,11,781,9],[724,12,781,10,"enemies"],[724,19,781,17],[724,20,781,18,"push"],[724,24,781,22],[724,25,781,23,"combatEnemy"],[724,36,781,34],[724,37,781,35],[725,4,782,2],[725,5,782,3],[727,4,784,2],[728,4,785,2],[728,8,785,8,"spawnBasicTestEnemy"],[728,27,785,27],[728,30,785,31,"state"],[728,35,785,49],[728,39,785,54],[729,6,786,4],[729,10,786,10,"SCREEN_WIDTH"],[729,22,786,22],[729,25,786,25],[729,28,786,28],[730,6,787,4],[730,10,787,10,"GAME_AREA_HEIGHT"],[730,26,787,26],[730,29,787,29],[730,32,787,32],[730,35,787,35],[730,38,787,38],[731,6,788,4],[731,10,788,10,"ENEMY_SIZE"],[731,20,788,20],[731,23,788,23],[731,25,788,25],[732,6,790,4],[732,10,790,10,"x"],[732,11,790,11],[732,14,790,14,"Math"],[732,18,790,18],[732,19,790,19,"random"],[732,25,790,25],[732,26,790,26],[732,27,790,27],[732,31,790,31,"SCREEN_WIDTH"],[732,43,790,43],[732,46,790,46,"ENEMY_SIZE"],[732,56,790,56],[732,59,790,59],[732,60,790,60],[732,61,790,61],[732,64,790,64,"ENEMY_SIZE"],[732,74,790,74],[733,6,791,4],[733,10,791,10,"y"],[733,11,791,11],[733,14,791,14,"Math"],[733,18,791,18],[733,19,791,19,"random"],[733,25,791,25],[733,26,791,26],[733,27,791,27],[733,31,791,31,"GAME_AREA_HEIGHT"],[733,47,791,47],[733,50,791,50,"ENEMY_SIZE"],[733,60,791,60],[733,63,791,63],[733,64,791,64],[733,65,791,65],[733,68,791,68,"ENEMY_SIZE"],[733,78,791,78],[734,6,793,4],[734,10,793,10,"enemy"],[734,15,793,28],[734,18,793,31],[735,8,794,6,"id"],[735,10,794,8],[735,12,794,10],[735,30,794,28,"Date"],[735,34,794,32],[735,35,794,33,"now"],[735,38,794,36],[735,39,794,37],[735,40,794,38],[735,44,794,42,"Math"],[735,48,794,46],[735,49,794,47,"random"],[735,55,794,53],[735,56,794,54],[735,57,794,55],[735,59,794,57],[736,8,795,6,"name"],[736,12,795,10],[736,14,795,12],[736,26,795,24,"Math"],[736,30,795,28],[736,31,795,29,"floor"],[736,36,795,34],[736,37,795,35,"Math"],[736,41,795,39],[736,42,795,40,"random"],[736,48,795,46],[736,49,795,47],[736,50,795,48],[736,53,795,51],[736,56,795,54],[736,57,795,55],[736,59,795,57],[737,8,796,6,"health"],[737,14,796,12],[737,16,796,14],[737,18,796,16],[738,8,797,6,"maxHealth"],[738,17,797,15],[738,19,797,17],[738,21,797,19],[739,8,798,6,"stats"],[739,13,798,11],[739,15,798,13],[740,10,799,8,"attack"],[740,16,799,14],[740,18,799,16],[740,20,799,18],[741,10,800,8,"defense"],[741,17,800,15],[741,19,800,17],[741,21,800,19],[742,10,801,8,"health"],[742,16,801,14],[742,18,801,16],[742,20,801,18],[743,10,802,8,"maxHealth"],[743,19,802,17],[743,21,802,19],[743,23,802,21],[744,10,803,8,"critChance"],[744,20,803,18],[744,22,803,20],[744,23,803,21],[745,10,804,8,"critDamage"],[745,20,804,18],[745,22,804,20],[745,25,804,23],[746,10,805,8,"cooldownReduction"],[746,27,805,25],[746,29,805,27],[747,8,806,6],[747,9,806,7],[748,8,807,6,"position"],[748,16,807,14],[748,18,807,16],[749,10,807,18,"x"],[749,11,807,19],[750,10,807,21,"y"],[751,8,807,23],[751,9,807,24],[752,8,808,6,"lastDamaged"],[752,19,808,17],[752,21,808,19],[753,6,809,4],[753,7,809,5],[754,6,811,4,"console"],[754,13,811,11],[754,14,811,12,"log"],[754,17,811,15],[754,18,811,16],[754,42,811,40,"enemy"],[754,47,811,45],[754,48,811,46,"name"],[754,52,811,50],[754,60,811,58,"Math"],[754,64,811,62],[754,65,811,63,"round"],[754,70,811,68],[754,71,811,69,"x"],[754,72,811,70],[754,73,811,71],[754,78,811,76,"Math"],[754,82,811,80],[754,83,811,81,"round"],[754,88,811,86],[754,89,811,87,"y"],[754,90,811,88],[754,91,811,89],[754,94,811,92],[754,95,811,93],[755,6,812,4,"state"],[755,11,812,9],[755,12,812,10,"enemies"],[755,19,812,17],[755,20,812,18,"push"],[755,24,812,22],[755,25,812,23,"enemy"],[755,30,812,28],[755,31,812,29],[756,4,813,2],[756,5,813,3],[758,4,815,2],[759,4,816,2],[759,8,816,8,"startCombat"],[759,19,816,19],[759,22,816,22,"React"],[759,27,816,27],[759,28,816,27,"default"],[759,35,816,27],[759,36,816,28,"useCallback"],[759,47,816,39],[759,48,816,40],[759,54,816,46],[760,6,817,4,"console"],[760,13,817,11],[760,14,817,12,"log"],[760,17,817,15],[760,18,817,16],[760,63,817,61],[760,64,817,62],[761,6,818,4,"setCombatState"],[761,20,818,18],[761,21,818,19,"prev"],[761,25,818,23],[761,30,818,28],[762,8,818,30],[762,11,818,33,"prev"],[762,15,818,37],[763,8,818,39,"isInCombat"],[763,18,818,49],[763,20,818,51],[764,6,818,56],[764,7,818,57],[764,8,818,58],[764,9,818,59],[766,6,820,4],[767,6,821,4,"combatEngine"],[767,25,821,16],[767,26,821,16,"combatEngine"],[767,38,821,16],[767,39,821,17,"addTickCallback"],[767,54,821,32],[767,55,821,33,"handleCombatTick"],[767,71,821,49],[767,72,821,50],[768,6,822,4,"console"],[768,13,822,11],[768,14,822,12,"log"],[768,17,822,15],[768,18,822,16],[768,62,822,60],[768,63,822,61],[770,6,824,4],[771,6,825,4,"combatEngine"],[771,25,825,16],[771,26,825,16,"combatEngine"],[771,38,825,16],[771,39,825,17,"start"],[771,44,825,22],[771,45,825,23],[771,46,825,24],[772,4,826,2],[772,5,826,3],[772,7,826,5],[772,8,826,6,"combatEngine"],[772,27,826,18],[772,28,826,18,"combatEngine"],[772,40,826,18],[772,42,826,20,"handleCombatTick"],[772,58,826,36],[772,59,826,37],[772,60,826,38],[774,4,828,2],[775,4,829,2],[775,8,829,8,"stopCombat"],[775,18,829,18],[775,21,829,21,"React"],[775,26,829,26],[775,27,829,26,"default"],[775,34,829,26],[775,35,829,27,"useCallback"],[775,46,829,38],[775,47,829,39],[775,53,829,45],[776,6,830,4,"setCombatState"],[776,20,830,18],[776,21,830,19,"prev"],[776,25,830,23],[776,30,830,28],[777,8,830,30],[777,11,830,33,"prev"],[777,15,830,37],[778,8,830,39,"isInCombat"],[778,18,830,49],[778,20,830,51],[779,6,830,57],[779,7,830,58],[779,8,830,59],[779,9,830,60],[780,6,831,4,"combatEngine"],[780,25,831,16],[780,26,831,16,"combatEngine"],[780,38,831,16],[780,39,831,17,"removeTickCallback"],[780,57,831,35],[780,58,831,36,"handleCombatTick"],[780,74,831,52],[780,75,831,53],[781,4,832,2],[781,5,832,3],[781,7,832,5],[781,8,832,6,"combatEngine"],[781,27,832,18],[781,28,832,18,"combatEngine"],[781,40,832,18],[781,42,832,20,"handleCombatTick"],[781,58,832,36],[781,59,832,37],[781,60,832,38],[783,4,834,2],[784,4,835,2],[784,8,835,8,"equipAbility"],[784,20,835,20],[784,23,835,23,"equipAbility"],[784,24,835,24,"abilityId"],[784,33,835,41],[784,35,835,43,"slotIndex"],[784,44,835,60],[784,49,835,74],[785,6,836,4],[785,13,836,11,"combatState"],[785,24,836,22],[785,25,836,23,"abilityManager"],[785,39,836,37],[785,40,836,38,"equipAbility"],[785,52,836,50],[785,53,836,51,"abilityId"],[785,62,836,60],[785,64,836,62,"slotIndex"],[785,73,836,71],[785,74,836,72],[786,4,837,2],[786,5,837,3],[787,4,839,2],[787,8,839,8,"getDeck"],[787,15,839,15],[787,18,839,18,"getDeck"],[787,19,839,18],[787,24,839,24],[788,6,840,4],[788,13,840,11,"combatState"],[788,24,840,22],[788,25,840,23,"abilityManager"],[788,39,840,37],[788,40,840,38,"getDeck"],[788,47,840,45],[788,48,840,46],[788,49,840,47],[789,4,841,2],[789,5,841,3],[790,4,843,2],[790,8,843,8,"getAvailableAbilities"],[790,29,843,29],[790,32,843,32,"getAvailableAbilities"],[790,33,843,32],[790,38,843,38],[791,6,844,4],[791,13,844,11,"combatState"],[791,24,844,22],[791,25,844,23,"abilityManager"],[791,39,844,37],[791,40,844,38,"getAvailableAbilities"],[791,61,844,59],[791,62,844,60],[791,63,844,61],[792,4,845,2],[792,5,845,3],[793,4,847,2],[793,8,847,8,"upgradeAbility"],[793,22,847,22],[793,25,847,26,"abilityId"],[793,34,847,43],[793,38,847,57],[794,6,848,4],[794,13,848,11,"combatState"],[794,24,848,22],[794,25,848,23,"abilityManager"],[794,39,848,37],[794,40,848,38,"upgradeAbility"],[794,54,848,52],[794,55,848,53,"abilityId"],[794,64,848,62],[794,65,848,63],[795,4,849,2],[795,5,849,3],[797,4,851,2],[798,4,852,2],[798,8,852,8,"clearAllEnemies"],[798,23,852,23],[798,26,852,26,"clearAllEnemies"],[798,27,852,26],[798,32,852,32],[799,6,853,4,"console"],[799,13,853,11],[799,14,853,12,"log"],[799,17,853,15],[799,18,853,16],[799,67,853,65],[799,68,853,66],[800,6,854,4,"setCombatState"],[800,20,854,18],[800,21,854,19,"prev"],[800,25,854,23],[800,30,854,28],[801,8,855,6],[801,11,855,9,"prev"],[801,15,855,13],[802,8,856,6,"enemies"],[802,15,856,13],[802,17,856,15],[803,6,857,4],[803,7,857,5],[803,8,857,6],[803,9,857,7],[804,4,858,2],[804,5,858,3],[806,4,860,2],[807,4,861,2],[807,8,861,8,"triggerLevelUpExplosion"],[807,31,861,31],[807,34,861,34,"triggerLevelUpExplosion"],[807,35,861,34],[807,40,861,40],[808,6,862,4,"console"],[808,13,862,11],[808,14,862,12,"log"],[808,17,862,15],[808,18,862,16],[808,70,862,68],[808,71,862,69],[809,6,864,4],[809,10,864,10,"explosionTime"],[809,23,864,23],[809,26,864,26,"Date"],[809,30,864,30],[809,31,864,31,"now"],[809,34,864,34],[809,35,864,35],[809,36,864,36],[810,6,865,4,"setLastExplosionTime"],[810,26,865,24],[810,27,865,25,"explosionTime"],[810,40,865,38],[810,41,865,39],[811,6,867,4,"setCombatState"],[811,20,867,18],[811,21,867,19,"prev"],[811,25,867,23],[811,29,867,27],[812,8,868,6],[813,8,869,6],[813,12,869,12,"enemyCount"],[813,22,869,22],[813,25,869,25,"prev"],[813,29,869,29],[813,30,869,30,"enemies"],[813,37,869,37],[813,38,869,38,"length"],[813,44,869,44],[814,8,870,6],[814,12,870,12,"explosionXP"],[814,23,870,23],[814,26,870,26,"enemyCount"],[814,36,870,36],[814,39,870,39],[814,42,870,42],[814,43,870,43],[814,44,870,44],[815,8,871,6],[815,12,871,12,"explosionGold"],[815,25,871,25],[815,28,871,28,"enemyCount"],[815,38,871,38],[815,41,871,41],[815,44,871,44],[815,45,871,45],[815,46,871,46],[817,8,873,6,"console"],[817,15,873,13],[817,16,873,14,"log"],[817,19,873,17],[817,20,873,18],[817,44,873,42,"enemyCount"],[817,54,873,52],[817,76,873,74,"explosionXP"],[817,87,873,85],[817,98,873,96,"explosionGold"],[817,111,873,109],[817,118,873,116],[817,119,873,117],[819,8,875,6],[820,8,876,6],[820,12,876,10,"explosionXP"],[820,23,876,21],[820,26,876,24],[820,27,876,25],[820,29,876,27],[821,10,877,8,"setTimeout"],[821,20,877,18],[821,21,877,19],[821,27,877,25],[822,12,878,10,"game"],[822,16,878,14],[822,17,878,15,"updateNinja"],[822,28,878,26],[822,29,878,28,"ninja"],[822,34,878,33],[822,39,878,39],[823,14,879,12,"experience"],[823,24,879,22],[823,26,879,24,"ninja"],[823,31,879,29],[823,32,879,30,"experience"],[823,42,879,40],[823,45,879,43,"explosionXP"],[823,56,879,54],[824,14,880,12,"gold"],[824,18,880,16],[824,20,880,18,"ninja"],[824,25,880,23],[824,26,880,24,"gold"],[824,30,880,28],[824,33,880,31,"explosionGold"],[825,12,881,10],[825,13,881,11],[825,14,881,12],[825,15,881,13],[826,10,882,8],[826,11,882,9],[826,13,882,11],[826,14,882,12],[826,15,882,13],[826,16,882,14],[826,17,882,15],[827,8,883,6],[829,8,885,6],[830,8,886,6],[831,8,887,6],[831,12,887,12,"damagedEnemies"],[831,26,887,26],[831,29,887,29,"prev"],[831,33,887,33],[831,34,887,34,"enemies"],[831,41,887,41],[831,42,887,42,"map"],[831,45,887,45],[831,46,887,46,"enemy"],[831,51,887,51],[831,56,887,56],[832,10,888,8],[832,13,888,11,"enemy"],[832,18,888,16],[833,10,889,8,"health"],[833,16,889,14],[833,18,889,16],[833,19,889,17],[834,10,889,19],[835,10,890,8,"lastDamaged"],[835,21,890,19],[835,23,890,21,"combatEngine"],[835,42,890,33],[835,43,890,33,"combatEngine"],[835,55,890,33],[835,56,890,34,"getCurrentTick"],[835,70,890,48],[835,71,890,49],[836,8,891,6],[836,9,891,7],[836,10,891,8],[836,11,891,9],[837,8,893,6],[837,15,893,13],[838,10,894,8],[838,13,894,11,"prev"],[838,17,894,15],[839,10,895,8,"enemies"],[839,17,895,15],[839,19,895,17,"damagedEnemies"],[840,8,896,6],[840,9,896,7],[841,6,897,4],[841,7,897,5],[841,8,897,6],[842,4,898,2],[842,5,898,3],[844,4,900,2],[845,4,901,2],[845,8,901,8,"spawnEnemy"],[845,18,901,18],[845,21,901,22,"position"],[845,29,901,57],[845,33,901,75],[846,6,902,4],[846,10,902,10,"SCREEN_WIDTH"],[846,22,902,22],[846,25,902,25],[846,28,902,28],[847,6,903,4],[847,10,903,10,"GAME_AREA_HEIGHT"],[847,26,903,26],[847,29,903,29],[847,32,903,32],[847,35,903,35],[847,38,903,38],[847,39,903,39],[847,40,903,40],[848,6,904,4],[848,10,904,10,"ENEMY_SIZE"],[848,20,904,20],[848,23,904,23],[848,25,904,25],[850,6,906,4],[851,6,907,4],[851,10,907,10,"x"],[851,11,907,11],[851,14,907,14,"position"],[851,22,907,22],[851,24,907,24,"x"],[851,25,907,25],[851,29,907,29,"Math"],[851,33,907,33],[851,34,907,34,"random"],[851,40,907,40],[851,41,907,41],[851,42,907,42],[851,46,907,46,"SCREEN_WIDTH"],[851,58,907,58],[851,61,907,61,"ENEMY_SIZE"],[851,71,907,71],[851,74,907,74],[851,75,907,75],[851,76,907,76],[851,79,907,79,"ENEMY_SIZE"],[851,89,907,89],[852,6,908,4],[852,10,908,10,"y"],[852,11,908,11],[852,14,908,14,"position"],[852,22,908,22],[852,24,908,24,"y"],[852,25,908,25],[852,29,908,29,"Math"],[852,33,908,33],[852,34,908,34,"random"],[852,40,908,40],[852,41,908,41],[852,42,908,42],[852,46,908,46,"GAME_AREA_HEIGHT"],[852,62,908,62],[852,65,908,65,"ENEMY_SIZE"],[852,75,908,75],[852,78,908,78],[852,79,908,79],[852,80,908,80],[852,83,908,83,"ENEMY_SIZE"],[852,93,908,93],[853,6,910,4],[853,10,910,10,"enemy"],[853,15,910,28],[853,18,910,31],[854,8,911,6,"id"],[854,10,911,8],[854,12,911,10],[854,21,911,19],[854,23,911,21,"enemyCounter"],[854,35,911,33],[854,37,911,35],[855,8,912,6,"name"],[855,12,912,10],[855,14,912,12],[855,24,912,22],[856,8,913,6,"health"],[856,14,913,12],[856,16,913,14],[856,19,913,17],[857,8,914,6,"maxHealth"],[857,17,914,15],[857,19,914,17],[857,22,914,20],[858,8,915,6,"stats"],[858,13,915,11],[858,15,915,13],[859,10,916,8,"attack"],[859,16,916,14],[859,18,916,16],[859,20,916,18],[860,10,917,8,"defense"],[860,17,917,15],[860,19,917,17],[860,21,917,19],[861,10,918,8,"health"],[861,16,918,14],[861,18,918,16],[861,21,918,19],[862,10,919,8,"maxHealth"],[862,19,919,17],[862,21,919,19],[862,24,919,22],[863,10,920,8,"critChance"],[863,20,920,18],[863,22,920,20],[863,23,920,21],[864,10,921,8,"critDamage"],[864,20,921,18],[864,22,921,20],[864,25,921,23],[865,10,922,8,"cooldownReduction"],[865,27,922,25],[865,29,922,27],[866,8,923,6],[866,9,923,7],[867,8,924,6,"position"],[867,16,924,14],[867,18,924,16],[868,10,924,18,"x"],[868,11,924,19],[869,10,924,21,"y"],[870,8,924,23],[870,9,924,24],[871,8,925,6,"lastDamaged"],[871,19,925,17],[871,21,925,19],[872,6,926,4],[872,7,926,5],[873,6,928,4,"setCombatState"],[873,20,928,18],[873,21,928,19,"prev"],[873,25,928,23],[873,30,928,28],[874,8,929,6],[874,11,929,9,"prev"],[874,15,929,13],[875,8,930,6,"enemies"],[875,15,930,13],[875,17,930,15],[875,18,930,16],[875,21,930,19,"prev"],[875,25,930,23],[875,26,930,24,"enemies"],[875,33,930,31],[875,35,930,33,"enemy"],[875,40,930,38],[876,6,931,4],[876,7,931,5],[876,8,931,6],[876,9,931,7],[877,6,933,4],[877,13,933,11,"enemy"],[877,18,933,16],[878,4,934,2],[878,5,934,3],[880,4,936,2],[881,4,937,2],[881,8,937,8,"spawnBoss"],[881,17,937,17],[881,20,937,21,"bossEnemy"],[881,29,937,43],[881,33,937,48],[882,6,938,4,"console"],[882,13,938,11],[882,14,938,12,"log"],[882,17,938,15],[882,18,938,16],[882,39,938,37,"bossEnemy"],[882,48,938,46],[882,49,938,47,"name"],[882,53,938,51],[882,90,938,88],[882,91,938,89],[883,6,939,4,"setCombatState"],[883,20,939,18],[883,21,939,19,"prev"],[883,25,939,23],[883,30,939,28],[884,8,940,6],[884,11,940,9,"prev"],[884,15,940,13],[885,8,941,6,"enemies"],[885,15,941,13],[885,17,941,15],[885,18,941,16,"bossEnemy"],[885,27,941,25],[885,28,941,26],[885,29,941,27],[886,6,942,4],[886,7,942,5],[886,8,942,6],[886,9,942,7],[887,4,943,2],[887,5,943,3],[889,4,945,2],[890,4,946,2],[890,8,946,8,"clearSpecificEnemy"],[890,26,946,26],[890,29,946,30,"enemyId"],[890,36,946,45],[890,40,946,50],[891,6,947,4,"setCombatState"],[891,20,947,18],[891,21,947,19,"prev"],[891,25,947,23],[891,30,947,28],[892,8,948,6],[892,11,948,9,"prev"],[892,15,948,13],[893,8,949,6,"enemies"],[893,15,949,13],[893,17,949,15,"prev"],[893,21,949,19],[893,22,949,20,"enemies"],[893,29,949,27],[893,30,949,28,"filter"],[893,36,949,34],[893,37,949,35,"enemy"],[893,42,949,40],[893,46,949,44,"enemy"],[893,51,949,49],[893,52,949,50,"id"],[893,54,949,52],[893,59,949,57,"enemyId"],[893,66,949,64],[894,6,950,4],[894,7,950,5],[894,8,950,6],[894,9,950,7],[895,4,951,2],[895,5,951,3],[897,4,953,2],[898,4,954,2],[898,8,954,8,"useAbilityManually"],[898,26,954,26],[898,29,954,26,"_s3"],[898,32,954,26],[898,33,954,29],[898,37,954,29,"useCallback"],[898,43,954,40],[898,44,954,40,"useCallback"],[898,55,954,40],[898,57,954,40,"_s3"],[898,60,954,40],[898,61,954,42,"slotIndex"],[898,70,954,59],[898,74,954,73],[899,6,954,73,"_s3"],[899,9,954,73],[900,6,955,4,"console"],[900,13,955,11],[900,14,955,12,"log"],[900,17,955,15],[900,18,955,16],[900,53,955,51,"slotIndex"],[900,62,955,60],[900,64,955,62],[900,65,955,63],[902,6,957,4],[903,6,958,4],[903,10,958,10,"isReady"],[903,17,958,17],[903,20,958,20,"combatState"],[903,31,958,31],[903,32,958,32,"abilityManager"],[903,46,958,46],[903,47,958,47,"isAbilityReady"],[903,61,958,61],[903,62,958,62,"slotIndex"],[903,71,958,71],[903,72,958,72],[904,6,959,4],[904,10,959,8],[904,11,959,9,"isReady"],[904,18,959,16],[904,20,959,18],[905,8,960,6,"console"],[905,15,960,13],[905,16,960,14,"log"],[905,19,960,17],[905,20,960,18],[905,41,960,39,"slotIndex"],[905,50,960,48],[905,85,960,83],[905,86,960,84],[906,8,961,6],[906,15,961,13],[906,20,961,18],[907,6,962,4],[909,6,964,4],[910,6,965,4],[910,10,965,8,"combatState"],[910,21,965,19],[910,22,965,20,"enemies"],[910,29,965,27],[910,30,965,28,"length"],[910,36,965,34],[910,41,965,39],[910,42,965,40],[910,44,965,42],[911,8,966,6,"console"],[911,15,966,13],[911,16,966,14,"log"],[911,19,966,17],[911,20,966,18],[911,69,966,67],[911,70,966,68],[912,8,967,6],[912,15,967,13],[912,20,967,18],[913,6,968,4],[915,6,970,4],[916,6,971,4],[916,10,971,10,"currentTick"],[916,21,971,21],[916,24,971,24,"combatEngine"],[916,43,971,36],[916,44,971,36,"combatEngine"],[916,56,971,36],[916,57,971,37,"getCurrentTick"],[916,71,971,51],[916,72,971,52],[916,73,971,53],[917,6,972,4],[917,10,972,10,"success"],[917,17,972,17],[917,20,972,20,"combatState"],[917,31,972,31],[917,32,972,32,"abilityManager"],[917,46,972,46],[917,47,972,47,"useAbility"],[917,57,972,57],[917,58,972,58,"slotIndex"],[917,67,972,67],[917,69,972,69,"currentTick"],[917,80,972,80],[917,81,972,81],[918,6,974,4],[918,10,974,8,"success"],[918,17,974,15],[918,19,974,17],[919,8,975,6],[920,8,976,6,"setCombatState"],[920,22,976,20],[920,23,976,21,"prev"],[920,27,976,25],[920,31,976,29],[921,10,977,8],[921,14,977,14,"newState"],[921,22,977,22],[921,25,977,25],[922,12,977,27],[922,15,977,30,"prev"],[923,10,977,35],[923,11,977,36],[924,10,978,8,"castAbility"],[924,21,978,19],[924,22,978,20,"newState"],[924,30,978,28],[924,32,978,30,"slotIndex"],[924,41,978,39],[924,42,978,40],[925,10,979,8],[925,17,979,15,"newState"],[925,25,979,23],[926,8,980,6],[926,9,980,7],[926,10,980,8],[927,8,982,6,"console"],[927,15,982,13],[927,16,982,14,"log"],[927,19,982,17],[927,20,982,18],[927,65,982,63,"slotIndex"],[927,74,982,72],[927,76,982,74],[927,77,982,75],[928,8,983,6],[928,15,983,13],[928,19,983,17],[929,6,984,4],[929,7,984,5],[929,13,984,11],[930,8,985,6,"console"],[930,15,985,13],[930,16,985,14,"log"],[930,19,985,17],[930,20,985,18],[930,61,985,59,"slotIndex"],[930,70,985,68],[930,72,985,70],[930,73,985,71],[931,8,986,6],[931,15,986,13],[931,20,986,18],[932,6,987,4],[933,4,988,2],[933,5,988,3],[933,46,988,5],[933,47,988,6,"combatState"],[933,58,988,17],[933,59,988,18,"abilityManager"],[933,73,988,32],[933,75,988,34,"combatState"],[933,86,988,45],[933,87,988,46,"enemies"],[933,94,988,53],[933,95,988,54],[933,96,988,55],[934,4,989,2],[934,8,989,2,"useEffect"],[934,14,989,11],[934,15,989,11,"useEffect"],[934,24,989,11],[934,26,989,12],[934,32,989,18],[935,6,990,4,"combatEngine"],[935,25,990,16],[935,26,990,16,"combatEngine"],[935,38,990,16],[935,39,990,17,"start"],[935,44,990,22],[935,45,990,23],[935,46,990,24],[937,6,992,4],[938,6,993,4],[939,6,994,4,"console"],[939,13,994,11],[939,14,994,12,"log"],[939,17,994,15],[939,18,994,16],[939,97,994,95],[939,98,994,96],[940,6,996,4],[940,13,996,11],[940,19,996,17],[941,8,997,6,"combatEngine"],[941,27,997,18],[941,28,997,18,"combatEngine"],[941,40,997,18],[941,41,997,19,"stop"],[941,45,997,23],[941,46,997,24],[941,47,997,25],[942,6,998,4],[942,7,998,5],[943,4,999,2],[943,5,999,3],[943,7,999,5],[943,9,999,7],[943,10,999,8],[945,4,1001,2],[946,4,1002,2],[946,8,1002,2,"useEffect"],[946,14,1002,11],[946,15,1002,11,"useEffect"],[946,24,1002,11],[946,26,1002,12],[946,32,1002,18],[947,6,1003,4],[947,10,1003,10,"processProjectileImpacts"],[947,34,1003,34],[947,37,1003,37,"processProjectileImpacts"],[947,38,1003,37],[947,43,1003,43],[948,8,1004,6,"setProjectiles"],[948,22,1004,20],[948,23,1004,21,"currentProjectiles"],[948,41,1004,39],[948,45,1004,43],[949,10,1005,8],[949,17,1005,15,"currentProjectiles"],[949,35,1005,33],[949,36,1005,34,"map"],[949,39,1005,37],[949,40,1005,38,"projectile"],[949,50,1005,48],[949,54,1005,52],[950,12,1006,10],[950,16,1006,14],[950,17,1006,15,"projectile"],[950,27,1006,25],[950,29,1006,27],[950,36,1006,34],[950,40,1006,38],[952,12,1008,10],[953,12,1009,10],[953,16,1009,16,"currentTime"],[953,27,1009,27],[953,30,1009,30,"Date"],[953,34,1009,34],[953,35,1009,35,"now"],[953,38,1009,38],[953,39,1009,39],[953,40,1009,40],[954,12,1010,10],[954,16,1010,16,"startTime"],[954,25,1010,25],[954,28,1010,28,"projectile"],[954,38,1010,38],[954,39,1010,39,"startTime"],[954,48,1010,48],[954,52,1010,52,"currentTime"],[954,63,1010,63],[955,12,1011,10],[955,16,1011,16,"elapsedTime"],[955,27,1011,27],[955,30,1011,30,"currentTime"],[955,41,1011,41],[955,44,1011,44,"startTime"],[955,53,1011,53],[956,12,1012,10],[956,16,1012,16,"progress"],[956,24,1012,24],[956,27,1012,27,"Math"],[956,31,1012,31],[956,32,1012,32,"min"],[956,35,1012,35],[956,36,1012,36,"elapsedTime"],[956,47,1012,47],[956,51,1012,51,"projectile"],[956,61,1012,61],[956,62,1012,62,"duration"],[956,70,1012,70],[956,74,1012,74],[956,77,1012,77],[956,78,1012,78],[956,80,1012,80],[956,81,1012,81],[956,82,1012,82],[958,12,1014,10],[959,12,1015,10],[959,16,1015,14,"progress"],[959,24,1015,22],[959,28,1015,26],[959,29,1015,27],[959,33,1015,31],[959,34,1015,32,"projectile"],[959,44,1015,42],[959,45,1015,43,"hasHit"],[959,51,1015,49],[959,53,1015,51],[960,14,1016,12,"projectile"],[960,24,1016,22],[960,25,1016,23,"hasHit"],[960,31,1016,29],[960,34,1016,32],[960,38,1016,36],[961,14,1018,12,"console"],[961,21,1018,19],[961,22,1018,20,"log"],[961,25,1018,23],[961,26,1018,24],[961,51,1018,49,"projectile"],[961,61,1018,59],[961,62,1018,60,"abilityName"],[961,73,1018,71],[961,87,1018,85,"projectile"],[961,97,1018,95],[961,98,1018,96,"targetEnemyId"],[961,111,1018,109],[961,119,1018,117,"projectile"],[961,129,1018,127],[961,130,1018,128,"damage"],[961,136,1018,134],[961,145,1018,143],[961,146,1018,144],[963,14,1020,12],[964,14,1021,12,"setCombatState"],[964,28,1021,26],[964,29,1021,27,"prev"],[964,33,1021,31],[964,37,1021,35],[965,16,1022,14],[965,20,1022,20,"newState"],[965,28,1022,28],[965,31,1022,31],[966,18,1022,33],[966,21,1022,36,"prev"],[967,16,1022,41],[967,17,1022,42],[968,16,1023,14],[968,20,1023,20,"enemyIndex"],[968,30,1023,30],[968,33,1023,33,"newState"],[968,41,1023,41],[968,42,1023,42,"enemies"],[968,49,1023,49],[968,50,1023,50,"findIndex"],[968,59,1023,59],[968,60,1023,60,"e"],[968,61,1023,61],[968,65,1023,65,"e"],[968,66,1023,66],[968,67,1023,67,"id"],[968,69,1023,69],[968,74,1023,74,"projectile"],[968,84,1023,84],[968,85,1023,85,"targetEnemyId"],[968,98,1023,98],[968,99,1023,99],[969,16,1025,14],[969,20,1025,18,"enemyIndex"],[969,30,1025,28],[969,34,1025,32],[969,35,1025,33],[969,39,1025,37,"newState"],[969,47,1025,45],[969,48,1025,46,"enemies"],[969,55,1025,53],[969,56,1025,54,"enemyIndex"],[969,66,1025,64],[969,67,1025,65],[969,68,1025,66,"health"],[969,74,1025,72],[969,77,1025,75],[969,78,1025,76],[969,80,1025,78],[970,18,1026,16,"newState"],[970,26,1026,24],[970,27,1026,25,"enemies"],[970,34,1026,32],[970,37,1026,35],[970,38,1026,36],[970,41,1026,39,"newState"],[970,49,1026,47],[970,50,1026,48,"enemies"],[970,57,1026,55],[970,58,1026,56],[971,18,1027,16],[971,22,1027,22,"enemy"],[971,27,1027,27],[971,30,1027,30,"newState"],[971,38,1027,38],[971,39,1027,39,"enemies"],[971,46,1027,46],[971,47,1027,47,"enemyIndex"],[971,57,1027,57],[971,58,1027,58],[972,18,1028,16],[972,22,1028,22,"newHealth"],[972,31,1028,31],[972,34,1028,34,"Math"],[972,38,1028,38],[972,39,1028,39,"max"],[972,42,1028,42],[972,43,1028,43],[972,44,1028,44],[972,46,1028,46,"enemy"],[972,51,1028,51],[972,52,1028,52,"health"],[972,58,1028,58],[972,61,1028,61,"projectile"],[972,71,1028,71],[972,72,1028,72,"damage"],[972,78,1028,78],[972,79,1028,79],[973,18,1030,16,"newState"],[973,26,1030,24],[973,27,1030,25,"enemies"],[973,34,1030,32],[973,35,1030,33,"enemyIndex"],[973,45,1030,43],[973,46,1030,44],[973,49,1030,47],[974,20,1031,18],[974,23,1031,21,"enemy"],[974,28,1031,26],[975,20,1032,18,"health"],[975,26,1032,24],[975,28,1032,26,"newHealth"],[975,37,1032,35],[976,20,1033,18,"lastDamaged"],[976,31,1033,29],[976,33,1033,31,"combatEngine"],[976,52,1033,43],[976,53,1033,43,"combatEngine"],[976,65,1033,43],[976,66,1033,44,"getCurrentTick"],[976,80,1033,58],[976,81,1033,59],[977,18,1034,16],[977,19,1034,17],[978,18,1036,16,"console"],[978,25,1036,23],[978,26,1036,24,"log"],[978,29,1036,27],[978,30,1036,28],[978,52,1036,50,"enemy"],[978,57,1036,55],[978,58,1036,56,"name"],[978,62,1036,60],[978,74,1036,72,"newHealth"],[978,83,1036,81],[978,87,1036,85,"enemy"],[978,92,1036,90],[978,93,1036,91,"maxHealth"],[978,102,1036,100],[978,104,1036,102],[978,105,1036,103],[980,18,1038,16],[981,18,1039,16],[981,22,1039,20,"newHealth"],[981,31,1039,29],[981,35,1039,33],[981,36,1039,34],[981,40,1039,38,"enemy"],[981,45,1039,43],[981,46,1039,44,"health"],[981,52,1039,50],[981,55,1039,53],[981,56,1039,54],[981,58,1039,56],[982,20,1040,18,"console"],[982,27,1040,25],[982,28,1040,26,"log"],[982,31,1040,29],[982,32,1040,30],[982,55,1040,53,"enemy"],[982,60,1040,58],[982,61,1040,59,"name"],[982,65,1040,63],[982,79,1040,77,"projectile"],[982,89,1040,87],[982,90,1040,88,"abilityName"],[982,101,1040,99],[982,104,1040,102],[982,105,1040,103],[983,20,1041,18,"setTimeout"],[983,30,1041,28],[983,31,1041,29],[983,37,1041,35,"handleEnemyKill"],[983,52,1041,50],[983,53,1041,51,"enemy"],[983,58,1041,56],[983,59,1041,57],[983,61,1041,59],[983,62,1041,60],[983,63,1041,61],[984,18,1042,16],[985,16,1043,14],[986,16,1045,14],[986,23,1045,21,"newState"],[986,31,1045,29],[987,14,1046,12],[987,15,1046,13],[987,16,1046,14],[988,12,1047,10],[990,12,1049,10],[991,12,1050,10],[991,16,1050,14,"progress"],[991,24,1050,22],[991,28,1050,26],[991,31,1050,29],[991,33,1050,31],[992,14,1051,12],[992,21,1051,19],[992,25,1051,23],[993,12,1052,10],[994,12,1054,10],[994,19,1054,17,"projectile"],[994,29,1054,27],[995,10,1055,8],[995,11,1055,9],[995,12,1055,10],[995,13,1055,11,"filter"],[995,19,1055,17],[995,20,1055,18,"Boolean"],[995,27,1055,25],[995,28,1055,26],[996,8,1056,6],[996,9,1056,7],[996,10,1056,8],[997,6,1057,4],[997,7,1057,5],[999,6,1059,4],[1000,6,1060,4],[1000,10,1060,10,"impactInterval"],[1000,24,1060,24],[1000,27,1060,27,"setInterval"],[1000,38,1060,38],[1000,39,1060,39,"processProjectileImpacts"],[1000,63,1060,63],[1000,65,1060,65],[1000,67,1060,67],[1000,68,1060,68],[1001,6,1061,4],[1001,13,1061,11],[1001,19,1061,17,"clearInterval"],[1001,32,1061,30],[1001,33,1061,31,"impactInterval"],[1001,47,1061,45],[1001,48,1061,46],[1002,4,1062,2],[1002,5,1062,3],[1002,7,1062,5],[1002,8,1062,6,"handleEnemyKill"],[1002,23,1062,21],[1002,24,1062,22],[1002,25,1062,23],[1004,4,1064,2],[1005,4,1065,2],[1005,8,1065,8,"saveAbilityData"],[1005,23,1065,23],[1005,26,1065,26],[1005,30,1065,26,"useCallback"],[1005,36,1065,37],[1005,37,1065,37,"useCallback"],[1005,48,1065,37],[1005,50,1065,38],[1005,56,1065,44],[1006,6,1066,4],[1006,10,1066,8,"combatState"],[1006,21,1066,19],[1006,22,1066,20,"abilityManager"],[1006,36,1066,34],[1006,38,1066,36],[1007,8,1067,6],[1007,12,1067,12,"abilityData"],[1007,23,1067,23],[1007,26,1067,26,"combatState"],[1007,37,1067,37],[1007,38,1067,38,"abilityManager"],[1007,52,1067,52],[1007,53,1067,53,"getSaveData"],[1007,64,1067,64],[1007,65,1067,65],[1007,66,1067,66],[1008,8,1068,6,"console"],[1008,15,1068,13],[1008,16,1068,14,"log"],[1008,19,1068,17],[1008,20,1068,18],[1008,70,1068,68],[1008,72,1068,70,"abilityData"],[1008,83,1068,81],[1008,84,1068,82],[1009,8,1069,6,"game"],[1009,12,1069,10],[1009,13,1069,11,"updateAbilityData"],[1009,30,1069,28],[1009,31,1069,29,"abilityData"],[1009,42,1069,40],[1009,43,1069,41],[1010,6,1070,4],[1011,4,1071,2],[1011,5,1071,3],[1011,7,1071,5],[1011,8,1071,6,"combatState"],[1011,19,1071,17],[1011,20,1071,18,"abilityManager"],[1011,34,1071,32],[1011,36,1071,34,"game"],[1011,40,1071,38],[1011,41,1071,39,"updateAbilityData"],[1011,58,1071,56],[1011,59,1071,57],[1011,60,1071,58],[1012,4,1073,2],[1012,8,1073,8,"contextValue"],[1012,20,1073,39],[1012,23,1073,42,"React"],[1012,28,1073,47],[1012,29,1073,47,"default"],[1012,36,1073,47],[1012,37,1073,48,"useMemo"],[1012,44,1073,55],[1012,45,1073,56],[1012,52,1073,63],[1013,6,1074,4,"combatState"],[1013,17,1074,15],[1014,6,1075,4,"projectiles"],[1014,17,1075,15],[1015,6,1076,4,"startCombat"],[1015,17,1076,15],[1016,6,1077,4,"stopCombat"],[1016,16,1077,14],[1017,6,1078,4,"equipAbility"],[1017,18,1078,16],[1018,6,1079,4,"handleEnemyKill"],[1018,21,1079,19],[1019,6,1080,4,"getDeck"],[1019,13,1080,11],[1020,6,1081,4,"getAvailableAbilities"],[1020,27,1081,25],[1021,6,1082,4,"upgradeAbility"],[1021,20,1082,18],[1022,6,1083,4,"spawnEnemy"],[1022,16,1083,14],[1023,6,1084,4,"spawnBoss"],[1023,15,1084,13],[1024,6,1085,4,"clearAllEnemies"],[1024,21,1085,19],[1025,6,1086,4,"clearSpecificEnemy"],[1025,24,1086,22],[1026,6,1087,4,"triggerLevelUpExplosion"],[1026,29,1087,27],[1027,6,1088,4,"findClosestEnemy"],[1027,22,1088,20],[1028,6,1089,4,"updateNinjaPosition"],[1028,25,1089,23],[1029,6,1090,4,"setManualControlActive"],[1029,28,1090,26],[1030,6,1091,4,"lastExplosionTime"],[1030,23,1091,21],[1031,6,1092,4,"useAbilityManually"],[1031,24,1092,22],[1032,6,1092,24],[1033,6,1093,4,"saveAbilityData"],[1033,21,1093,19],[1034,6,1093,21],[1035,6,1094,4,"shadowClone"],[1035,17,1094,15],[1035,19,1094,17,"combatState"],[1035,30,1094,28],[1035,31,1094,29,"shadowClone"],[1035,42,1094,40],[1035,43,1094,42],[1036,4,1095,2],[1036,5,1095,3],[1036,6,1095,4],[1036,8,1095,6],[1037,4,1096,4],[1038,4,1097,4],[1039,4,1098,4,"combatState"],[1039,15,1098,15],[1039,17,1099,4,"projectiles"],[1039,28,1099,15],[1039,30,1100,4,"lastExplosionTime"],[1039,47,1100,21],[1040,4,1101,4],[1041,4,1102,4,"combatState"],[1041,15,1102,15],[1041,16,1102,16,"abilityManager"],[1041,30,1102,30],[1041,32,1103,4,"combatState"],[1041,43,1103,15],[1041,44,1103,16,"enemies"],[1041,51,1103,23],[1041,53,1104,4,"combatState"],[1041,64,1104,15],[1041,65,1104,16,"shadowClone"],[1041,76,1104,27],[1042,4,1104,29],[1043,4,1105,4,"useAbilityManually"],[1043,22,1105,22],[1044,4,1105,24],[1045,4,1106,4,"saveAbilityData"],[1045,19,1106,19],[1045,20,1106,21],[1046,4,1106,21],[1046,5,1107,3],[1046,6,1107,4],[1047,4,1109,2],[1047,24,1110,4],[1047,28,1110,4,"_reactJsxDevRuntime"],[1047,47,1110,4],[1047,48,1110,4,"jsxDEV"],[1047,54,1110,4],[1047,56,1110,5,"CombatContext"],[1047,69,1110,18],[1047,70,1110,19,"Provider"],[1047,78,1110,27],[1048,6,1110,28,"value"],[1048,11,1110,33],[1048,13,1110,35,"contextValue"],[1048,25,1110,48],[1049,6,1110,48,"children"],[1049,14,1110,48],[1049,16,1111,7,"children"],[1050,4,1111,15],[1051,6,1111,15,"fileName"],[1051,14,1111,15],[1051,16,1111,15,"_jsxFileName"],[1051,28,1111,15],[1052,6,1111,15,"lineNumber"],[1052,16,1111,15],[1053,6,1111,15,"columnNumber"],[1053,18,1111,15],[1054,4,1111,15],[1054,11,1112,28],[1054,12,1112,29],[1055,2,1114,0],[1055,3,1114,1],[1056,2,1114,2,"_s4"],[1056,5,1114,2],[1056,6,100,13,"CombatProvider"],[1056,20,100,27],[1057,4,100,27],[1057,12,101,15,"useGame"],[1057,24,101,22],[1057,25,101,22,"useGame"],[1057,32,101,22],[1057,34,102,77,"useZone"],[1057,46,102,84],[1057,47,102,84,"useZone"],[1057,54,102,84],[1058,2,102,84],[1059,2,102,84,"_c"],[1059,4,102,84],[1059,7,100,13,"CombatProvider"],[1059,21,100,27],[1060,2,100,27],[1060,6,100,27,"_c"],[1060,8,100,27],[1061,2,100,27,"$RefreshReg$"],[1061,14,100,27],[1061,15,100,27,"_c"],[1061,17,100,27],[1062,0,100,27],[1062,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBCyF;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQ4C;2BN+C;iBMG;OR+B;kDS8E,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBoB;2B8BG;mBRsC,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/CgB;4DME,sCN;6BEkB,4BF;a+CK;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCkDG;GlDM;wDmDE;InDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}