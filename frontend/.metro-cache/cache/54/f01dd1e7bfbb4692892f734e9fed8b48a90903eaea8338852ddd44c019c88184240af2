{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🔍 XP DEBUG: handleEnemyKill called for ${enemy.name} (ID: ${enemy.id})`);\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 5000; // 250X Base XP reward per kill (ULTRA BOOSTED for extremely fast progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(10000 * dropMultiplier); // 1000X GOLD BOOST (was 10, now 10000) - matches XP scaling\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      console.log(`🚨 COMBAT TICK DEBUG: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        console.log(`🚨 ABILITY CHECK: isManualControlActive=${isManualControlActive}, isAlive=${game.gameState.isAlive}`);\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                console.log(`🚨 ABILITY TRIGGERED: Auto-cast from slot ${i}`);\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n      console.log(`🚨 ABILITY TRIGGERED: ${ability.id} from slot ${slotIndex}`);\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // TEMPORARY FIX: For now, let's use the old system but fix the XP issue\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile for each enemy in range - FIXED XP VERSION\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n\n          // Add AOE kill tracking\n          if (damageResult.damage >= enemy.health) {\n            console.log(`🔍 XP DEBUG: AOE projectile should kill ${enemy.name} (damage: ${damageResult.damage} >= health: ${enemy.health})`);\n          }\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        console.log(`🔍 SINGLE TARGET DEBUG: Creating projectile for ${target.name} with ${damageResult.damage} damage`);\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n\n        // Add kill prediction for single target\n        if (damageResult.damage >= target.health) {\n          console.log(`🔍 XP DEBUG: Single target projectile should kill ${target.name} (damage: ${damageResult.damage} >= health: ${target.health})`);\n        }\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 5000; // SAME AS REGULAR KILL XP (5000 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🔥🔥🔥 MANUAL ABILITY BUTTON TAPPED - SLOT ${slotIndex} 🔥🔥🔥`);\n      console.log(`🚨 ABILITY TRIGGERED: Manual cast from slot ${slotIndex}`);\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}! (${enemy.health} → ${newHealth})`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      console.log(`🔍 XP DEBUG: Scheduling handleEnemyKill for ${enemy.name} (ID: ${enemy.id})`);\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    } else if (enemy.health > 0) {\n                      console.log(`🎯 NON-FATAL DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} → ${newHealth})`);\n                    } else {\n                      console.log(`⚠️ XP DEBUG: Enemy ${enemy.name} already dead (health: ${enemy.health}), no XP awarded`);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1157,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1218,2],[27,6,1218,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1218,2],[27,42,1218,2,"require"],[27,49,1218,2],[27,50,1218,2,"_dependencyMap"],[27,64,1218,2],[28,2,1218,2],[28,6,1218,2,"_slicedToArray"],[28,20,1218,2],[28,23,1218,2,"_interopDefault"],[28,38,1218,2],[28,39,1218,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1218,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,61,173,59,"enemy"],[135,66,173,64],[135,67,173,65,"name"],[135,71,173,69],[135,80,173,78,"enemy"],[135,85,173,83],[135,86,173,84,"id"],[135,88,173,86],[135,91,173,89],[135,92,173,90],[136,6,174,4,"console"],[136,13,174,11],[136,14,174,12,"log"],[136,17,174,15],[136,18,174,16],[136,73,174,71],[136,75,174,73,"enemy"],[136,80,174,78],[136,81,174,79,"id"],[136,83,174,81],[136,84,174,82],[138,6,176,4],[139,6,177,4],[139,10,177,10,"baseXpReward"],[139,22,177,22],[139,25,177,25],[139,29,177,29],[139,30,177,30],[139,31,177,31],[140,6,178,4],[140,10,178,10,"xpMultiplier"],[140,22,178,22],[140,25,178,25,"game"],[140,29,178,29],[140,30,178,30,"gameState"],[140,39,178,39],[140,40,178,40,"subscriptionBenefits"],[140,60,178,60],[140,62,178,62,"xp_multiplier"],[140,75,178,75],[140,79,178,79],[140,82,178,82],[141,6,179,4],[141,10,179,10,"dropMultiplier"],[141,24,179,24],[141,27,179,27,"game"],[141,31,179,31],[141,32,179,32,"gameState"],[141,41,179,41],[141,42,179,42,"subscriptionBenefits"],[141,62,179,62],[141,64,179,64,"drop_multiplier"],[141,79,179,79],[141,83,179,83],[141,86,179,86],[142,6,181,4],[142,10,181,10,"xpReward"],[142,18,181,18],[142,21,181,21,"Math"],[142,25,181,25],[142,26,181,26,"floor"],[142,31,181,31],[142,32,181,32,"baseXpReward"],[142,44,181,44],[142,47,181,47,"xpMultiplier"],[142,59,181,59],[142,60,181,60],[143,6,182,4],[143,10,182,10,"goldReward"],[143,20,182,20],[143,23,182,23,"Math"],[143,27,182,27],[143,28,182,28,"floor"],[143,33,182,33],[143,34,182,34],[143,39,182,39],[143,42,182,42,"dropMultiplier"],[143,56,182,56],[143,57,182,57],[143,58,182,58],[143,59,182,59],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,48,184,46,"xpReward"],[145,56,184,54],[145,67,184,65,"goldReward"],[145,77,184,75],[145,93,184,91],[145,94,184,92],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,60,185,58,"xpMultiplier"],[146,72,185,70],[146,94,185,92,"dropMultiplier"],[146,108,185,106],[146,110,185,108],[146,111,185,109],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,54,186,52,"baseXpReward"],[147,66,186,64],[147,81,186,79,"xpReward"],[147,89,186,87],[147,91,186,89],[147,92,186,90],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,58,187,56],[148,60,187,58,"JSON"],[148,64,187,62],[148,65,187,63,"stringify"],[148,74,187,72],[148,75,187,73,"game"],[148,79,187,77],[148,80,187,78,"gameState"],[148,89,187,87],[148,90,187,88,"subscriptionBenefits"],[148,110,187,108],[148,111,187,109],[148,112,187,110],[149,6,188,4,"console"],[149,13,188,11],[149,14,188,12,"log"],[149,17,188,15],[149,18,188,16],[149,49,188,47,"Platform"],[149,61,188,55],[149,62,188,55,"Platform"],[149,70,188,55],[149,71,188,56,"OS"],[149,73,188,58],[149,84,188,69,"Date"],[149,88,188,73],[149,89,188,74,"now"],[149,92,188,77],[149,93,188,78],[149,94,188,79],[149,96,188,81],[149,97,188,82],[151,6,190,4],[152,6,191,4],[153,6,192,4,"setTimeout"],[153,16,192,14],[153,17,192,15],[153,23,192,21],[154,8,193,6,"console"],[154,15,193,13],[154,16,193,14,"log"],[154,19,193,17],[154,20,193,18],[154,78,193,76],[154,79,193,77],[156,8,195,6],[157,8,196,6,"game"],[157,12,196,10],[157,13,196,11,"updateNinja"],[157,24,196,22],[157,25,196,24,"prev"],[157,29,196,28],[157,33,196,33],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,54,197,52,"prev"],[158,58,197,56],[158,59,197,57,"experience"],[158,69,197,67],[158,81,197,79,"prev"],[158,85,197,83],[158,86,197,84,"experience"],[158,96,197,94],[158,99,197,97,"xpReward"],[158,107,197,105],[158,109,197,107],[158,110,197,108],[159,10,198,8,"console"],[159,17,198,15],[159,18,198,16,"log"],[159,21,198,19],[159,22,198,20],[159,56,198,54,"prev"],[159,60,198,58],[159,61,198,59,"gold"],[159,65,198,63],[159,77,198,75,"prev"],[159,81,198,79],[159,82,198,80,"gold"],[159,86,198,84],[159,89,198,87,"goldReward"],[159,99,198,97],[159,101,198,99],[159,102,198,100],[160,10,199,8],[160,17,199,15],[161,12,200,10,"experience"],[161,22,200,20],[161,24,200,22,"prev"],[161,28,200,26],[161,29,200,27,"experience"],[161,39,200,37],[161,42,200,40,"xpReward"],[161,50,200,48],[162,12,201,10,"gold"],[162,16,201,14],[162,18,201,16,"prev"],[162,22,201,20],[162,23,201,21,"gold"],[162,27,201,25],[162,30,201,28,"goldReward"],[163,10,202,8],[163,11,202,9],[164,8,203,6],[164,9,203,7],[164,10,203,8],[166,8,205,6],[167,8,206,6],[167,12,206,12,"zoneEnemy"],[167,21,206,21],[167,24,206,24],[168,10,207,8,"id"],[168,12,207,10],[168,14,207,12,"enemy"],[168,19,207,17],[168,20,207,18,"id"],[168,22,207,20],[169,10,208,8,"typeId"],[169,16,208,14],[169,18,208,16,"enemy"],[169,23,208,21],[169,24,208,22,"zoneTypeId"],[169,34,208,32],[169,38,208,36],[169,48,208,46],[170,10,208,48],[171,10,209,8,"name"],[171,14,209,12],[171,16,209,14,"enemy"],[171,21,209,19],[171,22,209,20,"name"],[171,26,209,24],[172,10,210,8,"icon"],[172,14,210,12],[172,16,210,14],[172,20,210,18],[173,10,210,20],[174,10,211,8,"hp"],[174,12,211,10],[174,14,211,12],[174,15,211,13],[175,10,211,15],[176,10,212,8,"maxHP"],[176,15,212,13],[176,17,212,15,"enemy"],[176,22,212,20],[176,23,212,21,"maxHealth"],[176,32,212,30],[177,10,213,8,"attack"],[177,16,213,14],[177,18,213,16,"enemy"],[177,23,213,21],[177,24,213,22,"stats"],[177,29,213,27],[177,30,213,28,"attack"],[177,36,213,34],[178,10,214,8,"xp"],[178,12,214,10],[178,14,214,12,"enemy"],[178,19,214,17],[178,20,214,18,"zoneXP"],[178,26,214,24],[178,30,214,28],[178,32,214,30],[179,10,214,32],[180,10,215,8,"position"],[180,18,215,16],[180,20,215,18,"enemy"],[180,25,215,23],[180,26,215,24,"position"],[181,8,216,6],[181,9,216,7],[182,8,218,6,"console"],[182,15,218,13],[182,16,218,14,"log"],[182,19,218,17],[182,20,218,18],[182,40,218,38,"zoneEnemy"],[182,49,218,47],[182,50,218,48,"name"],[182,54,218,52],[182,59,218,57,"zoneEnemy"],[182,68,218,66],[182,69,218,67,"typeId"],[182,75,218,73],[182,113,218,111],[182,114,218,112],[183,8,219,6,"recordEnemyKill"],[183,23,219,21],[183,24,219,22,"zoneEnemy"],[183,33,219,31],[183,34,219,32],[184,6,220,4],[184,7,220,5],[184,9,220,7],[184,10,220,8],[184,11,220,9],[184,12,220,10],[184,13,220,11],[185,4,221,2],[185,5,221,3],[185,7,221,5],[185,8,221,6,"game"],[185,12,221,10],[185,13,221,11,"updateNinja"],[185,24,221,22],[185,26,221,24,"recordEnemyKill"],[185,41,221,39],[185,42,221,40],[185,43,221,41],[187,4,223,2],[188,4,224,2],[188,8,224,8,"handleCombatTick"],[188,24,224,24],[188,27,224,27,"React"],[188,32,224,32],[188,33,224,32,"default"],[188,40,224,32],[188,41,224,33,"useCallback"],[188,52,224,44],[188,53,224,45],[188,59,224,51],[189,6,224,51],[189,10,224,51,"_s2"],[189,13,224,51],[189,16,224,51,"$RefreshSig$"],[189,28,224,51],[190,6,225,4,"console"],[190,13,225,11],[190,14,225,12,"log"],[190,17,225,15],[190,18,225,16],[190,87,225,85],[190,88,225,86],[191,6,226,4,"console"],[191,13,226,11],[191,14,226,12,"log"],[191,17,226,15],[191,18,226,16],[191,65,226,63,"isManualControlActive"],[191,86,226,84],[191,99,226,97,"game"],[191,103,226,101],[191,104,226,102,"gameState"],[191,113,226,111],[191,114,226,112,"isAlive"],[191,121,226,119],[191,123,226,121],[191,124,226,122],[192,6,228,4],[192,10,228,8,"enemiesToKill"],[192,23,228,36],[192,26,228,39],[192,28,228,41],[192,29,228,42],[192,30,228,43],[194,6,230,4,"_s2"],[194,9,230,4],[194,10,230,4,"setCombatState"],[194,24,230,18],[194,25,230,18,"_s2"],[194,28,230,18],[194,29,230,19,"prev"],[194,33,230,23],[194,37,230,27],[195,8,230,27,"_s2"],[195,11,230,27],[196,8,231,6],[196,12,231,12,"newTick"],[196,19,231,19],[196,22,231,22,"combatEngine"],[196,41,231,34],[196,42,231,34,"combatEngine"],[196,54,231,34],[196,55,231,35,"getCurrentTick"],[196,69,231,49],[196,70,231,50],[196,71,231,51],[197,8,232,6],[197,12,232,12,"newState"],[197,20,232,20],[197,23,232,23],[198,10,232,25],[198,13,232,28,"prev"],[198,17,232,32],[199,10,232,34,"currentTick"],[199,21,232,45],[199,23,232,47,"newTick"],[200,8,232,55],[200,9,232,56],[201,8,234,6],[201,12,234,10],[201,13,234,11,"newState"],[201,21,234,19],[201,22,234,20,"isInCombat"],[201,32,234,30],[201,34,234,32],[201,41,234,39,"newState"],[201,49,234,47],[203,8,236,6],[204,8,237,6,"newState"],[204,16,237,14],[204,17,237,15,"abilityManager"],[204,31,237,29],[204,32,237,30,"updateCooldowns"],[204,47,237,45],[204,48,237,46,"newTick"],[204,55,237,53],[204,56,237,54],[206,8,239,6],[207,8,240,6],[207,12,240,12,"effectResults"],[207,25,240,25],[207,28,240,28,"newState"],[207,36,240,36],[207,37,240,37,"statusEffects"],[207,50,240,50],[207,51,240,51,"processTick"],[207,62,240,62],[207,63,240,63,"newTick"],[207,70,240,70],[207,71,240,71],[209,8,242,6],[210,8,243,6,"effectResults"],[210,21,243,19],[210,22,243,20,"forEach"],[210,29,243,27],[210,30,243,28],[210,31,243,29,"results"],[210,38,243,36],[210,40,243,38,"entityId"],[210,48,243,46],[210,53,243,51],[211,10,244,8],[211,14,244,14,"enemyIndex"],[211,24,244,24],[211,27,244,27,"newState"],[211,35,244,35],[211,36,244,36,"enemies"],[211,43,244,43],[211,44,244,44,"findIndex"],[211,53,244,53],[211,54,244,54,"e"],[211,55,244,55],[211,59,244,59,"e"],[211,60,244,60],[211,61,244,61,"id"],[211,63,244,63],[211,68,244,68,"entityId"],[211,76,244,76],[211,77,244,77],[212,10,245,8],[212,14,245,12,"enemyIndex"],[212,24,245,22],[212,28,245,26],[212,29,245,27],[212,31,245,29],[213,12,246,10,"results"],[213,19,246,17],[213,20,246,18,"forEach"],[213,27,246,25],[213,28,246,26,"result"],[213,34,246,32],[213,38,246,36],[214,14,247,12,"newState"],[214,22,247,20],[214,23,247,21,"enemies"],[214,30,247,28],[214,31,247,29,"enemyIndex"],[214,41,247,39],[214,42,247,40],[214,43,247,41,"health"],[214,49,247,47],[214,53,247,51,"result"],[214,59,247,57],[214,60,247,58,"damage"],[214,66,247,64],[215,14,248,12,"newState"],[215,22,248,20],[215,23,248,21,"enemies"],[215,30,248,28],[215,31,248,29,"enemyIndex"],[215,41,248,39],[215,42,248,40],[215,43,248,41,"lastDamaged"],[215,54,248,52],[215,57,248,55,"newTick"],[215,64,248,62],[216,12,249,10],[216,13,249,11],[216,14,249,12],[217,10,250,8],[218,8,251,6],[218,9,251,7],[218,10,251,8],[220,8,253,6],[221,8,254,6],[222,8,255,6],[222,12,255,10,"newState"],[222,20,255,18],[222,21,255,19,"playerStats"],[222,32,255,30],[222,36,255,34,"game"],[222,40,255,38],[222,41,255,39,"gameState"],[222,50,255,48],[222,51,255,49,"ninja"],[222,56,255,54],[222,58,255,56],[223,10,256,8],[223,14,256,14,"effectiveStats"],[223,28,256,28],[223,31,256,31,"game"],[223,35,256,35],[223,36,256,36,"getEffectiveStats"],[223,53,256,53],[223,54,256,54],[223,55,256,55],[225,10,258,8],[226,10,259,8],[226,14,259,12,"newState"],[226,22,259,20],[226,23,259,21,"playerStats"],[226,34,259,32],[226,35,259,33,"attack"],[226,41,259,39],[226,46,259,44,"effectiveStats"],[226,60,259,58],[226,61,259,59,"attack"],[226,67,259,65],[226,71,260,12,"newState"],[226,79,260,20],[226,80,260,21,"playerStats"],[226,91,260,32],[226,92,260,33,"defense"],[226,99,260,40],[226,104,260,45,"effectiveStats"],[226,118,260,59],[226,119,260,60,"defense"],[226,126,260,67],[226,130,261,12,"newState"],[226,138,261,20],[226,139,261,21,"playerStats"],[226,150,261,32],[226,151,261,33,"maxHealth"],[226,160,261,42],[226,165,261,47,"effectiveStats"],[226,179,261,61],[226,180,261,62,"maxHealth"],[226,189,261,71],[226,191,261,73],[227,12,263,10,"console"],[227,19,263,17],[227,20,263,18,"log"],[227,23,263,21],[227,24,263,22],[227,58,263,56,"newState"],[227,66,263,64],[227,67,263,65,"playerStats"],[227,78,263,76],[227,79,263,77,"attack"],[227,85,263,83],[227,91,263,89,"effectiveStats"],[227,105,263,103],[227,106,263,104,"attack"],[227,112,263,110],[227,125,263,123,"newState"],[227,133,263,131],[227,134,263,132,"playerStats"],[227,145,263,143],[227,146,263,144,"defense"],[227,153,263,151],[227,159,263,157,"effectiveStats"],[227,173,263,171],[227,174,263,172,"defense"],[227,181,263,179],[227,192,263,190,"newState"],[227,200,263,198],[227,201,263,199,"playerStats"],[227,212,263,210],[227,213,263,211,"maxHealth"],[227,222,263,220],[227,228,263,226,"effectiveStats"],[227,242,263,240],[227,243,263,241,"maxHealth"],[227,252,263,250],[227,254,263,252],[227,255,263,253],[229,12,265,10],[230,12,266,10],[230,16,266,14,"newHealth"],[230,25,266,23],[230,28,266,26,"newState"],[230,36,266,34],[230,37,266,35,"playerStats"],[230,48,266,46],[230,49,266,47,"health"],[230,55,266,53],[231,12,267,10],[231,16,267,14,"newState"],[231,24,267,22],[231,25,267,23,"playerStats"],[231,36,267,34],[231,37,267,35,"maxHealth"],[231,46,267,44],[231,51,267,49,"effectiveStats"],[231,65,267,63],[231,66,267,64,"maxHealth"],[231,75,267,73],[231,77,267,75],[232,14,268,12],[233,14,269,12],[233,18,269,16,"effectiveStats"],[233,32,269,30],[233,33,269,31,"maxHealth"],[233,42,269,40],[233,45,269,43,"newState"],[233,53,269,51],[233,54,269,52,"playerStats"],[233,65,269,63],[233,66,269,64,"maxHealth"],[233,75,269,73],[233,78,269,76],[233,81,269,79],[233,83,269,81],[234,16,270,14],[235,16,271,14],[235,20,271,20,"healthRatio"],[235,31,271,31],[235,34,271,34,"newState"],[235,42,271,42],[235,43,271,43,"playerStats"],[235,54,271,54],[235,55,271,55,"maxHealth"],[235,64,271,64],[235,67,271,67],[235,68,271,68],[235,71,272,16,"newState"],[235,79,272,24],[235,80,272,25,"playerStats"],[235,91,272,36],[235,92,272,37,"health"],[235,98,272,43],[235,101,272,46,"newState"],[235,109,272,54],[235,110,272,55,"playerStats"],[235,121,272,66],[235,122,272,67,"maxHealth"],[235,131,272,76],[235,134,272,79],[235,135,272,80],[236,16,273,14,"newHealth"],[236,25,273,23],[236,28,273,26,"Math"],[236,32,273,30],[236,33,273,31,"floor"],[236,38,273,36],[236,39,273,37,"effectiveStats"],[236,53,273,51],[236,54,273,52,"maxHealth"],[236,63,273,61],[236,66,273,64,"healthRatio"],[236,77,273,75],[236,78,273,76],[237,14,274,12],[237,15,274,13],[237,21,274,19],[237,25,274,23,"newState"],[237,33,274,31],[237,34,274,32,"playerStats"],[237,45,274,43],[237,46,274,44,"health"],[237,52,274,50],[237,55,274,53,"effectiveStats"],[237,69,274,67],[237,70,274,68,"maxHealth"],[237,79,274,77],[237,81,274,79],[238,16,275,14],[239,16,276,14,"newHealth"],[239,25,276,23],[239,28,276,26,"effectiveStats"],[239,42,276,40],[239,43,276,41,"maxHealth"],[239,52,276,50],[240,14,277,12],[241,14,278,12],[242,12,279,10],[243,12,281,10,"newState"],[243,20,281,18],[243,21,281,19,"playerStats"],[243,32,281,30],[243,35,281,33],[244,14,282,12],[244,17,282,15,"newState"],[244,25,282,23],[244,26,282,24,"playerStats"],[244,37,282,35],[245,14,283,12,"attack"],[245,20,283,18],[245,22,283,20,"effectiveStats"],[245,36,283,34],[245,37,283,35,"attack"],[245,43,283,41],[246,14,284,12,"defense"],[246,21,284,19],[246,23,284,21,"effectiveStats"],[246,37,284,35],[246,38,284,36,"defense"],[246,45,284,43],[247,14,285,12,"maxHealth"],[247,23,285,21],[247,25,285,23,"effectiveStats"],[247,39,285,37],[247,40,285,38,"maxHealth"],[247,49,285,47],[248,14,285,49],[249,14,286,12,"health"],[249,20,286,18],[249,22,286,20,"newHealth"],[249,31,286,29],[250,14,286,31],[251,14,287,12,"critChance"],[251,24,287,22],[251,26,287,24,"effectiveStats"],[251,40,287,38],[251,41,287,39,"critChance"],[251,51,287,49],[251,55,287,53,"newState"],[251,63,287,61],[251,64,287,62,"playerStats"],[251,75,287,73],[251,76,287,74,"critChance"],[251,86,287,84],[252,14,288,12,"critDamage"],[252,24,288,22],[252,26,288,24,"effectiveStats"],[252,40,288,38],[252,41,288,39,"critDamage"],[252,51,288,49],[252,55,288,53,"newState"],[252,63,288,61],[252,64,288,62,"playerStats"],[252,75,288,73],[252,76,288,74,"critDamage"],[252,86,288,84],[253,14,289,12,"cooldownReduction"],[253,31,289,29],[253,33,289,31,"effectiveStats"],[253,47,289,45],[253,48,289,46,"cooldownReduction"],[253,65,289,63],[253,69,289,67,"newState"],[253,77,289,75],[253,78,289,76,"playerStats"],[253,89,289,87],[253,90,289,88,"cooldownReduction"],[254,12,290,10],[254,13,290,11],[255,10,291,8],[257,10,293,8],[258,10,294,8],[258,14,294,12,"game"],[258,18,294,16],[258,19,294,17,"gameState"],[258,28,294,26],[258,29,294,27,"isAlive"],[258,36,294,34],[258,40,295,12,"game"],[258,44,295,16],[258,45,295,17,"gameState"],[258,54,295,26],[258,55,295,27,"ninja"],[258,60,295,32],[258,61,295,33,"health"],[258,67,295,39],[258,72,295,44,"effectiveStats"],[258,86,295,58],[258,87,295,59,"maxHealth"],[258,96,295,68],[258,100,296,12,"newState"],[258,108,296,20],[258,109,296,21,"playerStats"],[258,120,296,32],[258,121,296,33,"health"],[258,127,296,39],[258,130,296,42,"effectiveStats"],[258,144,296,56],[258,145,296,57,"maxHealth"],[258,154,296,66],[258,157,296,69],[258,160,296,72],[258,162,296,74],[259,12,297,10,"console"],[259,19,297,17],[259,20,297,18,"log"],[259,23,297,21],[259,24,297,22],[259,58,297,56,"newState"],[259,66,297,64],[259,67,297,65,"playerStats"],[259,78,297,76],[259,79,297,77,"health"],[259,85,297,83],[259,91,297,89,"game"],[259,95,297,93],[259,96,297,94,"gameState"],[259,105,297,103],[259,106,297,104,"ninja"],[259,111,297,109],[259,112,297,110,"health"],[259,118,297,116],[259,139,297,137],[259,140,297,138],[260,12,298,10,"newState"],[260,20,298,18],[260,21,298,19,"playerStats"],[260,32,298,30],[260,33,298,31,"health"],[260,39,298,37],[260,42,298,40,"game"],[260,46,298,44],[260,47,298,45,"gameState"],[260,56,298,54],[260,57,298,55,"ninja"],[260,62,298,60],[260,63,298,61,"health"],[260,69,298,67],[261,10,299,8],[262,8,300,6],[264,8,302,6],[265,8,303,6,"newState"],[265,16,303,14],[265,17,303,15,"enemies"],[265,24,303,22],[265,25,303,23,"forEach"],[265,32,303,30],[265,33,303,31,"enemy"],[265,38,303,36],[265,42,303,40],[266,10,304,8],[266,14,304,12],[266,15,304,13,"enemy"],[266,20,304,18],[266,21,304,19,"isBoss"],[266,27,304,25],[266,29,304,27],[267,12,304,29],[268,12,305,10],[269,12,306,10],[269,16,306,16,"MOVEMENT_SPEED"],[269,30,306,30],[269,33,306,33],[269,37,306,37],[269,38,306,38],[269,39,306,39],[270,12,307,10],[270,16,307,16,"SCREEN_WIDTH"],[270,28,307,28],[270,31,307,31],[270,34,307,34],[271,12,308,10],[271,16,308,16,"GAME_AREA_HEIGHT"],[271,32,308,32],[271,35,308,35],[271,38,308,38],[271,39,308,39],[271,40,308,40],[272,12,309,10],[272,16,309,16,"ENEMY_SIZE"],[272,26,309,26],[272,29,309,29],[272,31,309,31],[274,12,311,10],[275,12,312,10],[275,16,312,16,"playerX"],[275,23,312,23],[275,26,312,26,"currentNinjaPosition"],[275,46,312,46],[275,47,312,47,"x"],[275,48,312,48],[276,12,313,10],[276,16,313,16,"playerY"],[276,23,313,23],[276,26,313,26,"currentNinjaPosition"],[276,46,313,46],[276,47,313,47,"y"],[276,48,313,48],[278,12,315,10],[279,12,316,10],[279,16,316,16,"deltaX"],[279,22,316,22],[279,25,316,25,"playerX"],[279,32,316,32],[279,35,316,35,"enemy"],[279,40,316,40],[279,41,316,41,"position"],[279,49,316,49],[279,50,316,50,"x"],[279,51,316,51],[280,12,317,10],[280,16,317,16,"deltaY"],[280,22,317,22],[280,25,317,25,"playerY"],[280,32,317,32],[280,35,317,35,"enemy"],[280,40,317,40],[280,41,317,41,"position"],[280,49,317,49],[280,50,317,50,"y"],[280,51,317,51],[281,12,318,10],[281,16,318,16,"distance"],[281,24,318,24],[281,27,318,27,"Math"],[281,31,318,31],[281,32,318,32,"sqrt"],[281,36,318,36],[281,37,318,37,"deltaX"],[281,43,318,43],[281,46,318,46,"deltaX"],[281,52,318,52],[281,55,318,55,"deltaY"],[281,61,318,61],[281,64,318,64,"deltaY"],[281,70,318,70],[281,71,318,71],[283,12,320,10],[284,12,321,10],[284,16,321,16,"ATTACK_RANGE"],[284,28,321,28],[284,31,321,31],[284,33,321,33],[284,34,321,34],[284,35,321,35],[285,12,322,10],[285,16,322,16,"ATTACK_COOLDOWN"],[285,31,322,31],[285,34,322,34],[285,36,322,36],[285,37,322,37],[285,38,322,38],[287,12,324,10],[287,16,324,14,"distance"],[287,24,324,22],[287,28,324,26,"ATTACK_RANGE"],[287,40,324,38],[287,42,324,40],[288,14,325,12],[289,14,326,12],[289,18,326,16],[289,19,326,17,"enemy"],[289,24,326,22],[289,25,326,23,"lastAttackTick"],[289,39,326,37],[289,41,326,39,"enemy"],[289,46,326,44],[289,47,326,45,"lastAttackTick"],[289,61,326,59],[289,64,326,62],[289,65,326,63],[290,14,328,12],[290,18,328,16,"newState"],[290,26,328,24],[290,27,328,25,"currentTick"],[290,38,328,36],[290,41,328,39,"enemy"],[290,46,328,44],[290,47,328,45,"lastAttackTick"],[290,61,328,59],[290,65,328,63,"ATTACK_COOLDOWN"],[290,80,328,78],[290,82,328,80],[291,16,329,14],[292,16,330,14],[292,20,330,18],[292,21,330,19,"game"],[292,25,330,23],[292,26,330,24,"gameState"],[292,35,330,33],[292,36,330,34,"isAlive"],[292,43,330,41],[292,45,330,43],[293,18,331,16,"console"],[293,25,331,23],[293,26,331,24,"log"],[293,29,331,27],[293,30,331,28],[293,49,331,47,"enemy"],[293,54,331,52],[293,55,331,53,"name"],[293,59,331,57],[293,93,331,91],[293,94,331,92],[294,18,332,16],[295,18,333,16,"enemy"],[295,23,333,21],[295,24,333,22,"lastAttackTick"],[295,38,333,36],[295,41,333,39,"newState"],[295,49,333,47],[295,50,333,48,"currentTick"],[295,61,333,59],[296,16,334,14],[296,17,334,15],[296,23,334,21],[297,18,335,16],[298,18,336,16],[298,22,336,22,"isPlayerInvincible"],[298,40,336,40],[298,43,336,43,"game"],[298,47,336,47],[298,48,336,48,"gameState"],[298,57,336,57],[298,58,336,58,"isInvincible"],[298,70,336,70],[298,74,337,41,"game"],[298,78,337,45],[298,79,337,46,"gameState"],[298,88,337,55],[298,89,337,56,"invincibilityEndTime"],[298,109,337,76],[298,113,338,41,"Date"],[298,117,338,45],[298,118,338,46,"now"],[298,121,338,49],[298,122,338,50],[298,123,338,51],[298,126,338,54,"game"],[298,130,338,58],[298,131,338,59,"gameState"],[298,140,338,68],[298,141,338,69,"invincibilityEndTime"],[298,161,338,89],[299,18,340,16],[299,22,340,20,"isPlayerInvincible"],[299,40,340,38],[299,42,340,40],[300,20,341,18,"console"],[300,27,341,25],[300,28,341,26,"log"],[300,31,341,29],[300,32,341,30],[300,51,341,49,"enemy"],[300,56,341,54],[300,57,341,55,"name"],[300,61,341,59],[300,101,341,99],[300,102,341,100],[301,20,342,18],[302,20,343,18,"enemy"],[302,25,343,23],[302,26,343,24,"lastAttackTick"],[302,40,343,38],[302,43,343,41,"newState"],[302,51,343,49],[302,52,343,50,"currentTick"],[302,63,343,61],[303,18,344,16],[303,19,344,17],[303,25,344,23],[304,20,345,16],[305,20,346,16],[305,24,346,22,"baseAttack"],[305,34,346,32],[305,37,346,35,"enemy"],[305,42,346,40],[305,43,346,41,"stats"],[305,48,346,46],[305,49,346,47,"attack"],[305,55,346,53],[305,58,346,56],[305,61,346,59],[305,62,346,60],[305,63,346,61],[306,20,347,16],[306,24,347,22,"attackDamage"],[306,36,347,34],[306,39,347,37,"Math"],[306,43,347,41],[306,44,347,42,"floor"],[306,49,347,47],[306,50,347,48,"baseAttack"],[306,60,347,58],[306,64,347,62],[306,67,347,65],[306,70,347,68,"Math"],[306,74,347,72],[306,75,347,73,"random"],[306,81,347,79],[306,82,347,80],[306,83,347,81],[306,86,347,84],[306,89,347,87],[306,90,347,88],[306,91,347,89],[306,92,347,90],[306,93,347,91],[307,20,348,16],[307,24,348,22,"playerDefense"],[307,37,348,35],[307,40,348,38,"newState"],[307,48,348,46],[307,49,348,47,"playerStats"],[307,60,348,58],[307,61,348,59,"defense"],[307,68,348,66],[308,20,349,16],[308,24,349,22,"finalDamage"],[308,35,349,33],[308,38,349,36,"Math"],[308,42,349,40],[308,43,349,41,"max"],[308,46,349,44],[308,47,349,45],[308,48,349,46],[308,50,349,48,"attackDamage"],[308,62,349,60],[308,65,349,63,"Math"],[308,69,349,67],[308,70,349,68,"floor"],[308,75,349,73],[308,76,349,74,"playerDefense"],[308,89,349,87],[308,92,349,90],[308,95,349,93],[308,96,349,94],[308,97,349,95],[308,98,349,96],[308,99,349,97],[310,20,351,16,"console"],[310,27,351,23],[310,28,351,24,"log"],[310,31,351,27],[310,32,351,28],[310,53,351,49,"enemy"],[310,58,351,54],[310,59,351,55,"name"],[310,63,351,59],[310,86,351,82,"finalDamage"],[310,97,351,93],[310,109,351,105,"attackDamage"],[310,121,351,117],[310,132,351,128,"Math"],[310,136,351,132],[310,137,351,133,"floor"],[310,142,351,138],[310,143,351,139,"playerDefense"],[310,156,351,152],[310,159,351,155],[310,162,351,158],[310,163,351,159],[310,184,351,180],[310,185,351,181],[312,20,353,16],[313,20,354,16],[313,24,354,22,"newPlayerHealth"],[313,39,354,37],[313,42,354,40,"Math"],[313,46,354,44],[313,47,354,45,"max"],[313,50,354,48],[313,51,354,49],[313,52,354,50],[313,54,354,52,"newState"],[313,62,354,60],[313,63,354,61,"playerStats"],[313,74,354,72],[313,75,354,73,"health"],[313,81,354,79],[313,84,354,82,"finalDamage"],[313,95,354,93],[313,96,354,94],[314,20,355,16,"newState"],[314,28,355,24],[314,29,355,25,"playerStats"],[314,40,355,36],[314,41,355,37,"health"],[314,47,355,43],[314,50,355,46,"newPlayerHealth"],[314,65,355,61],[315,20,357,16,"console"],[315,27,357,23],[315,28,357,24,"log"],[315,31,357,27],[315,32,357,28],[315,53,357,49,"newState"],[315,61,357,57],[315,62,357,58,"playerStats"],[315,73,357,69],[315,74,357,70,"health"],[315,80,357,76],[315,84,357,80,"newState"],[315,92,357,88],[315,93,357,89,"playerStats"],[315,104,357,100],[315,105,357,101,"maxHealth"],[315,114,357,110],[315,124,357,120,"finalDamage"],[315,135,357,131],[315,145,357,141],[315,146,357,142],[317,20,359,16],[318,20,360,16,"enemy"],[318,25,360,21],[318,26,360,22,"lastAttackTick"],[318,40,360,36],[318,43,360,39,"newState"],[318,51,360,47],[318,52,360,48,"currentTick"],[318,63,360,59],[320,20,362,16],[321,20,363,16],[321,24,363,20,"newPlayerHealth"],[321,39,363,35],[321,43,363,39],[321,44,363,40],[321,46,363,42],[322,22,364,18,"console"],[322,29,364,25],[322,30,364,26,"log"],[322,33,364,29],[322,34,364,30],[322,84,364,80],[322,85,364,81],[323,22,365,18],[324,22,366,18,"setTimeout"],[324,32,366,28],[324,33,366,29],[324,39,366,35],[325,24,367,20],[326,24,368,20,"game"],[326,28,368,24],[326,29,368,25,"updateGameState"],[326,44,368,40],[326,45,368,41],[327,26,368,43,"isAlive"],[327,33,368,50],[327,35,368,52],[328,24,368,58],[328,25,368,59],[328,26,368,60],[329,22,369,18],[329,23,369,19],[329,25,369,21],[329,28,369,24],[329,29,369,25],[330,20,370,16],[331,18,371,16],[332,16,372,14],[333,14,373,12],[334,12,374,10],[334,13,374,11],[334,19,374,17],[335,14,375,12],[336,14,376,12],[337,14,377,12],[337,18,377,16,"distance"],[337,26,377,24],[337,29,377,27],[337,31,377,29],[337,33,377,31],[338,16,378,14],[339,16,379,14],[339,20,379,20,"normalizedX"],[339,31,379,31],[339,34,379,34,"deltaX"],[339,40,379,40],[339,43,379,43,"distance"],[339,51,379,51],[340,16,380,14],[340,20,380,20,"normalizedY"],[340,31,380,31],[340,34,380,34,"deltaY"],[340,40,380,40],[340,43,380,43,"distance"],[340,51,380,51],[342,16,382,14],[343,16,383,14],[343,20,383,20,"randomFactor"],[343,32,383,32],[343,35,383,35],[343,38,383,38],[343,39,383,39],[343,40,383,40],[344,16,384,14],[344,20,384,20,"finalX"],[344,26,384,26],[344,29,384,29,"normalizedX"],[344,40,384,40],[344,43,384,43],[344,44,384,44,"Math"],[344,48,384,48],[344,49,384,49,"random"],[344,55,384,55],[344,56,384,56],[344,57,384,57],[344,60,384,60],[344,63,384,63],[344,67,384,67,"randomFactor"],[344,79,384,79],[345,16,385,14],[345,20,385,20,"finalY"],[345,26,385,26],[345,29,385,29,"normalizedY"],[345,40,385,40],[345,43,385,43],[345,44,385,44,"Math"],[345,48,385,48],[345,49,385,49,"random"],[345,55,385,55],[345,56,385,56],[345,57,385,57],[345,60,385,60],[345,63,385,63],[345,67,385,67,"randomFactor"],[345,79,385,79],[347,16,387,14],[348,16,388,14],[348,20,388,18,"newX"],[348,24,388,22],[348,27,388,25,"enemy"],[348,32,388,30],[348,33,388,31,"position"],[348,41,388,39],[348,42,388,40,"x"],[348,43,388,41],[348,46,388,45,"finalX"],[348,52,388,51],[348,55,388,54,"MOVEMENT_SPEED"],[348,69,388,69],[349,16,389,14],[349,20,389,18,"newY"],[349,24,389,22],[349,27,389,25,"enemy"],[349,32,389,30],[349,33,389,31,"position"],[349,41,389,39],[349,42,389,40,"y"],[349,43,389,41],[349,46,389,45,"finalY"],[349,52,389,51],[349,55,389,54,"MOVEMENT_SPEED"],[349,69,389,69],[351,16,391,14],[352,16,392,14,"newX"],[352,20,392,18],[352,23,392,21,"Math"],[352,27,392,25],[352,28,392,26,"max"],[352,31,392,29],[352,32,392,30],[352,33,392,31],[352,35,392,33,"Math"],[352,39,392,37],[352,40,392,38,"min"],[352,43,392,41],[352,44,392,42,"SCREEN_WIDTH"],[352,56,392,54],[352,59,392,57,"ENEMY_SIZE"],[352,69,392,67],[352,71,392,69,"newX"],[352,75,392,73],[352,76,392,74],[352,77,392,75],[353,16,393,14,"newY"],[353,20,393,18],[353,23,393,21,"Math"],[353,27,393,25],[353,28,393,26,"max"],[353,31,393,29],[353,32,393,30],[353,33,393,31],[353,35,393,33,"Math"],[353,39,393,37],[353,40,393,38,"min"],[353,43,393,41],[353,44,393,42,"GAME_AREA_HEIGHT"],[353,60,393,58],[353,63,393,61,"ENEMY_SIZE"],[353,73,393,71],[353,75,393,73,"newY"],[353,79,393,77],[353,80,393,78],[353,81,393,79],[355,16,395,14],[356,16,396,14,"enemy"],[356,21,396,19],[356,22,396,20,"position"],[356,30,396,28],[356,31,396,29,"x"],[356,32,396,30],[356,35,396,33,"newX"],[356,39,396,37],[357,16,397,14,"enemy"],[357,21,397,19],[357,22,397,20,"position"],[357,30,397,28],[357,31,397,29,"y"],[357,32,397,30],[357,35,397,33,"newY"],[357,39,397,37],[358,14,398,12],[359,14,399,12],[360,12,400,10],[361,10,401,8],[362,8,402,6],[362,9,402,7],[362,10,402,8],[364,8,404,6],[365,8,405,6],[365,12,405,10,"newState"],[365,20,405,18],[365,21,405,19,"shadowClone"],[365,32,405,30],[365,34,405,32],[366,10,406,8],[367,10,407,8,"newState"],[367,18,407,16],[367,19,407,17,"shadowClone"],[367,30,407,28],[367,31,407,29,"remainingTicks"],[367,45,407,43],[367,47,407,45],[369,10,409,8],[370,10,410,8],[370,14,410,14,"cloneOffset"],[370,25,410,25],[370,28,410,28],[370,30,410,30],[370,31,410,31],[370,32,410,32],[371,10,411,8,"newState"],[371,18,411,16],[371,19,411,17,"shadowClone"],[371,30,411,28],[371,31,411,29,"position"],[371,39,411,37],[371,40,411,38,"x"],[371,41,411,39],[371,44,411,42,"currentNinjaPosition"],[371,64,411,62],[371,65,411,63,"x"],[371,66,411,64],[371,69,411,67,"cloneOffset"],[371,80,411,78],[372,10,412,8,"newState"],[372,18,412,16],[372,19,412,17,"shadowClone"],[372,30,412,28],[372,31,412,29,"position"],[372,39,412,37],[372,40,412,38,"y"],[372,41,412,39],[372,44,412,42,"currentNinjaPosition"],[372,64,412,62],[372,65,412,63,"y"],[372,66,412,64],[372,69,412,67],[372,71,412,69],[374,10,414,8],[375,10,415,8],[375,14,415,12,"newState"],[375,22,415,20],[375,23,415,21,"shadowClone"],[375,34,415,32],[375,35,415,33,"remainingTicks"],[375,49,415,47],[375,53,415,51],[375,54,415,52],[375,56,415,54],[376,12,416,10,"console"],[376,19,416,17],[376,20,416,18,"log"],[376,23,416,21],[376,24,416,22],[376,75,416,73],[376,76,416,74],[377,12,417,10,"newState"],[377,20,417,18],[377,21,417,19,"shadowClone"],[377,32,417,30],[377,35,417,33,"undefined"],[377,44,417,42],[378,10,418,8],[378,11,418,9],[378,17,418,15],[379,12,419,10],[380,12,420,10],[381,12,421,10],[381,16,421,16,"CLONE_ATTACK_INTERVAL"],[381,37,421,37],[381,40,421,40],[381,42,421,42],[382,12,422,10],[382,16,422,14,"newState"],[382,24,422,22],[382,25,422,23,"currentTick"],[382,36,422,34],[382,39,422,37,"CLONE_ATTACK_INTERVAL"],[382,60,422,58],[382,65,422,63],[382,66,422,64],[382,70,422,68,"newState"],[382,78,422,76],[382,79,422,77,"enemies"],[382,86,422,84],[382,87,422,85,"length"],[382,93,422,91],[382,96,422,94],[382,97,422,95],[382,99,422,97],[383,14,423,12,"console"],[383,21,423,19],[383,22,423,20,"log"],[383,25,423,23],[383,26,423,24],[383,83,423,81],[383,84,423,82],[385,14,425,12],[386,14,426,12],[386,18,426,18,"target"],[386,24,426,24],[386,27,426,27,"findClosestEnemyInternal"],[386,51,426,51],[386,52,426,52,"newState"],[386,60,426,60],[386,61,426,61,"enemies"],[386,68,426,68],[386,69,426,69],[387,14,427,12],[387,18,427,16,"target"],[387,24,427,22],[387,26,427,24],[388,16,428,14],[389,16,429,14],[389,20,429,20,"cloneDamage"],[389,31,429,31],[389,34,429,34,"Math"],[389,38,429,38],[389,39,429,39,"floor"],[389,44,429,44],[389,45,429,45,"newState"],[389,53,429,53],[389,54,429,54,"playerStats"],[389,65,429,65],[389,66,429,66,"attack"],[389,72,429,72],[389,75,429,75],[389,78,429,78],[389,79,429,79],[391,16,431,14],[392,16,432,14,"createProjectile"],[392,32,432,30],[392,33,432,31,"target"],[392,39,432,37],[392,41,432,39,"cloneDamage"],[392,52,432,50],[392,54,432,52,"newState"],[392,62,432,60],[392,63,432,61,"shadowClone"],[392,74,432,72],[392,75,432,73,"position"],[392,83,432,81],[392,85,432,83],[393,18,433,16,"id"],[393,20,433,18],[393,22,433,20],[393,43,433,41],[394,18,434,16,"name"],[394,22,434,20],[394,24,434,22],[394,45,434,43],[395,18,435,16,"icon"],[395,22,435,20],[395,24,435,22],[396,16,436,14],[396,17,436,15],[396,18,436,16],[397,14,437,12],[398,12,438,10],[399,10,439,8],[400,8,440,6],[402,8,442,6],[403,8,443,6],[404,8,444,6,"console"],[404,15,444,13],[404,16,444,14,"log"],[404,19,444,17],[404,20,444,18],[404,63,444,61,"isManualControlActive"],[404,84,444,82],[404,97,444,95,"game"],[404,101,444,99],[404,102,444,100,"gameState"],[404,111,444,109],[404,112,444,110,"isAlive"],[404,119,444,117],[404,121,444,119],[404,122,444,120],[405,8,445,6],[405,12,445,10],[405,13,445,11,"isManualControlActive"],[405,34,445,32],[405,38,445,36,"game"],[405,42,445,40],[405,43,445,41,"gameState"],[405,52,445,50],[405,53,445,51,"isAlive"],[405,60,445,58],[405,62,445,60],[406,10,446,8],[406,15,446,13],[406,19,446,17,"i"],[406,20,446,18],[406,23,446,21],[406,24,446,22],[406,26,446,24,"i"],[406,27,446,25],[406,30,446,28],[406,31,446,29],[406,33,446,31,"i"],[406,34,446,32],[406,36,446,34],[406,38,446,36],[407,12,447,10],[407,16,447,14,"newState"],[407,24,447,22],[407,25,447,23,"abilityManager"],[407,39,447,37],[407,40,447,38,"isAbilityReady"],[407,54,447,52],[407,55,447,53,"i"],[407,56,447,54],[407,57,447,55],[407,61,447,59,"newState"],[407,69,447,67],[407,70,447,68,"enemies"],[407,77,447,75],[407,78,447,76,"length"],[407,84,447,82],[407,87,447,85],[407,88,447,86],[407,90,447,88],[408,14,448,12],[408,18,448,16,"newState"],[408,26,448,24],[408,27,448,25,"abilityManager"],[408,41,448,39],[408,42,448,40,"useAbility"],[408,52,448,50],[408,53,448,51,"i"],[408,54,448,52],[408,56,448,54,"newTick"],[408,63,448,61],[408,64,448,62],[408,66,448,64],[409,16,449,14,"console"],[409,23,449,21],[409,24,449,22,"log"],[409,27,449,25],[409,28,449,26],[409,73,449,71,"i"],[409,74,449,72],[409,76,449,74],[409,77,449,75],[410,16,450,14,"castAbility"],[410,27,450,25],[410,28,450,26,"newState"],[410,36,450,34],[410,38,450,36,"i"],[410,39,450,37],[410,40,450,38],[411,14,451,12],[412,12,452,10],[413,10,453,8],[414,8,454,6],[416,8,456,6],[417,8,457,6],[417,12,457,12,"deadEnemies"],[417,23,457,23],[417,26,457,26,"newState"],[417,34,457,34],[417,35,457,35,"enemies"],[417,42,457,42],[417,43,457,43,"filter"],[417,49,457,49],[417,50,457,50,"enemy"],[417,55,457,55],[417,59,457,59,"enemy"],[417,64,457,64],[417,65,457,65,"health"],[417,71,457,71],[417,75,457,75],[417,76,457,76],[417,77,457,77],[418,8,458,6,"enemiesToKill"],[418,21,458,19],[418,24,458,22],[418,25,458,23],[418,28,458,26,"deadEnemies"],[418,39,458,37],[418,40,458,38],[418,41,458,39],[418,42,458,40],[420,8,460,6],[421,8,461,6],[421,12,461,10,"deadEnemies"],[421,23,461,21],[421,24,461,22,"length"],[421,30,461,28],[421,33,461,31],[421,34,461,32],[421,36,461,34],[422,10,462,8,"console"],[422,17,462,15],[422,18,462,16,"log"],[422,21,462,19],[422,22,462,20],[422,49,462,47,"deadEnemies"],[422,60,462,58],[422,61,462,59,"length"],[422,67,462,65],[422,83,462,81],[422,85,462,83,"deadEnemies"],[422,96,462,94],[422,97,462,95,"map"],[422,100,462,98],[422,101,462,99,"e"],[422,102,462,100],[422,106,462,104],[422,109,462,107,"e"],[422,110,462,108],[422,111,462,109,"id"],[422,113,462,111],[422,117,462,115,"e"],[422,118,462,116],[422,119,462,117,"health"],[422,125,462,123],[422,130,462,128],[422,131,462,129],[422,132,462,130],[423,8,463,6],[425,8,465,6],[426,8,466,6],[426,12,466,12,"lowHealthEnemies"],[426,28,466,28],[426,31,466,31,"newState"],[426,39,466,39],[426,40,466,40,"enemies"],[426,47,466,47],[426,48,466,48,"filter"],[426,54,466,54],[426,55,466,55,"enemy"],[426,60,466,60],[426,64,466,64,"enemy"],[426,69,466,69],[426,70,466,70,"health"],[426,76,466,76],[426,80,466,80],[426,82,466,82],[426,86,466,86,"enemy"],[426,91,466,91],[426,92,466,92,"health"],[426,98,466,98],[426,101,466,101],[426,102,466,102],[426,103,466,103],[427,8,467,6],[427,12,467,10,"lowHealthEnemies"],[427,28,467,26],[427,29,467,27,"length"],[427,35,467,33],[427,38,467,36],[427,39,467,37],[427,41,467,39],[428,10,468,8,"console"],[428,17,468,15],[428,18,468,16,"log"],[428,21,468,19],[428,22,468,20],[428,61,468,59],[428,63,468,61,"lowHealthEnemies"],[428,79,468,77],[428,80,468,78,"map"],[428,83,468,81],[428,84,468,82,"e"],[428,85,468,83],[428,89,468,87],[428,92,468,90,"e"],[428,93,468,91],[428,94,468,92,"id"],[428,96,468,94],[428,100,468,98,"e"],[428,101,468,99],[428,102,468,100,"health"],[428,108,468,106],[428,112,468,110,"e"],[428,113,468,111],[428,114,468,112,"maxHealth"],[428,123,468,121],[428,128,468,126],[428,129,468,127],[428,130,468,128],[429,8,469,6],[431,8,471,6],[432,8,472,6],[432,12,472,12,"beforeCount"],[432,23,472,23],[432,26,472,26,"newState"],[432,34,472,34],[432,35,472,35,"enemies"],[432,42,472,42],[432,43,472,43,"length"],[432,49,472,49],[433,8,473,6,"newState"],[433,16,473,14],[433,17,473,15,"enemies"],[433,24,473,22],[433,27,473,25,"newState"],[433,35,473,33],[433,36,473,34,"enemies"],[433,43,473,41],[433,44,473,42,"filter"],[433,50,473,48],[433,51,473,49,"enemy"],[433,56,473,54],[433,60,473,58,"enemy"],[433,65,473,63],[433,66,473,64,"health"],[433,72,473,70],[433,75,473,73],[433,76,473,74],[433,77,473,75],[434,8,474,6],[434,12,474,12,"afterCount"],[434,22,474,22],[434,25,474,25,"newState"],[434,33,474,33],[434,34,474,34,"enemies"],[434,41,474,41],[434,42,474,42,"length"],[434,48,474,48],[435,8,476,6],[435,12,476,10,"beforeCount"],[435,23,476,21],[435,28,476,26,"afterCount"],[435,38,476,36],[435,40,476,38],[436,10,477,8,"console"],[436,17,477,15],[436,18,477,16,"log"],[436,21,477,19],[436,22,477,20],[436,52,477,50,"beforeCount"],[436,63,477,61],[436,66,477,64,"afterCount"],[436,76,477,74],[436,102,477,100],[436,103,477,101],[437,8,478,6],[439,8,480,6],[440,8,481,6],[441,8,482,6],[441,12,482,12,"MAX_ENEMIES"],[441,23,482,23],[441,26,482,26],[441,28,482,28],[441,29,482,29],[441,30,482,30],[442,8,483,6],[442,12,483,12,"MIN_SPAWN_DELAY"],[442,27,483,27],[442,30,483,30],[442,33,483,33],[442,34,483,34],[442,35,483,35],[443,8,484,6],[443,12,484,12,"now"],[443,15,484,15],[443,18,484,18,"Date"],[443,22,484,22],[443,23,484,23,"now"],[443,26,484,26],[443,27,484,27],[443,28,484,28],[444,8,485,6],[444,12,485,12,"hasBoss"],[444,19,485,19],[444,22,485,22,"newState"],[444,30,485,30],[444,31,485,31,"enemies"],[444,38,485,38],[444,39,485,39,"some"],[444,43,485,43],[444,44,485,44,"enemy"],[444,49,485,49],[444,53,485,53,"enemy"],[444,58,485,58],[444,59,485,59,"isBoss"],[444,65,485,65],[444,66,485,66],[446,8,487,6],[447,8,488,6],[447,12,488,10],[447,13,488,11,"newState"],[447,21,488,19],[447,22,488,20,"lastSpawnTime"],[447,35,488,33],[447,37,488,35],[448,10,489,8,"newState"],[448,18,489,16],[448,19,489,17,"lastSpawnTime"],[448,32,489,30],[448,35,489,33,"now"],[448,38,489,36],[449,8,490,6],[450,8,492,6,"console"],[450,15,492,13],[450,16,492,14,"log"],[450,19,492,17],[450,20,492,18],[450,53,492,51,"newState"],[450,61,492,59],[450,62,492,60,"enemies"],[450,69,492,67],[450,70,492,68,"length"],[450,76,492,74],[450,85,492,83,"MAX_ENEMIES"],[450,96,492,94],[450,109,492,107,"hasBoss"],[450,116,492,114],[450,118,492,116],[450,119,492,117],[452,8,494,6],[453,8,495,6],[453,12,495,10],[453,13,495,11,"hasBoss"],[453,20,495,18],[453,24,495,22,"newState"],[453,32,495,30],[453,33,495,31,"enemies"],[453,40,495,38],[453,41,495,39,"length"],[453,47,495,45],[453,50,495,48,"MAX_ENEMIES"],[453,61,495,59],[453,65,495,64,"now"],[453,68,495,67],[453,71,495,70,"newState"],[453,79,495,78],[453,80,495,79,"lastSpawnTime"],[453,93,495,92],[453,97,495,97,"MIN_SPAWN_DELAY"],[453,112,495,112],[453,114,495,114],[454,10,496,8,"console"],[454,17,496,15],[454,18,496,16,"log"],[454,21,496,19],[454,22,496,20],[454,43,496,41,"newState"],[454,51,496,49],[454,52,496,50,"enemies"],[454,59,496,57],[454,60,496,58,"length"],[454,66,496,64],[454,69,496,67],[454,70,496,68],[454,74,496,72,"MAX_ENEMIES"],[454,85,496,83],[454,87,496,85],[454,88,496,86],[455,10,497,8,"spawnTestEnemy"],[455,24,497,22],[455,25,497,23,"newState"],[455,33,497,31],[455,34,497,32],[456,10,498,8,"newState"],[456,18,498,16],[456,19,498,17,"lastSpawnTime"],[456,32,498,30],[456,35,498,33,"now"],[456,38,498,36],[457,8,499,6],[458,8,501,6],[458,15,501,13,"newState"],[458,23,501,21],[459,6,502,4],[459,7,502,5],[459,47,502,6],[461,6,504,4],[462,6,505,4,"console"],[462,13,505,11],[462,14,505,12,"log"],[462,17,505,15],[462,18,505,16],[462,50,505,48,"enemiesToKill"],[462,63,505,61],[462,64,505,62,"length"],[462,70,505,68],[462,101,505,99],[462,102,505,100],[463,6,507,4,"enemiesToKill"],[463,19,507,17],[463,20,507,18,"forEach"],[463,27,507,25],[463,28,507,26],[463,29,507,27,"enemy"],[463,34,507,32],[463,36,507,34,"index"],[463,41,507,39],[463,46,507,44],[464,8,508,6,"console"],[464,15,508,13],[464,16,508,14,"log"],[464,19,508,17],[464,20,508,18],[464,57,508,55,"index"],[464,62,508,60],[464,65,508,63],[464,66,508,64],[464,70,508,68,"enemiesToKill"],[464,83,508,81],[464,84,508,82,"length"],[464,90,508,88],[464,104,508,102,"enemy"],[464,109,508,107],[464,110,508,108,"id"],[464,112,508,110],[464,114,508,112],[464,115,508,113],[465,8,509,6,"handleEnemyKill"],[465,23,509,21],[465,24,509,22,"enemy"],[465,29,509,27],[465,30,509,28],[466,6,510,4],[466,7,510,5],[466,8,510,6],[467,4,511,2],[467,5,511,3],[467,7,511,5],[467,8,511,6,"handleEnemyKill"],[467,23,511,21],[467,24,511,22],[467,25,511,23],[467,26,511,24],[467,27,511,25],[469,4,513,2],[470,4,514,2],[470,8,514,8,"findClosestEnemyInternal"],[470,32,514,32],[470,35,514,36,"enemies"],[470,42,514,58],[470,46,514,83],[471,6,515,4],[471,10,515,8,"enemies"],[471,17,515,15],[471,18,515,16,"length"],[471,24,515,22],[471,29,515,27],[471,30,515,28],[471,32,515,30],[471,39,515,37],[471,43,515,41],[473,6,517,4],[474,6,518,4],[474,10,518,10,"SCREEN_WIDTH"],[474,22,518,22],[474,25,518,25],[474,28,518,28],[475,6,519,4],[475,10,519,10,"GAME_AREA_HEIGHT"],[475,26,519,26],[475,29,519,29],[475,32,519,32],[475,35,519,35],[475,38,519,38],[475,39,519,39],[475,40,519,40],[476,6,520,4],[476,10,520,10,"ninjaX"],[476,16,520,16],[476,19,520,19,"SCREEN_WIDTH"],[476,31,520,31],[476,34,520,34],[476,35,520,35],[477,6,521,4],[477,10,521,10,"ninjaY"],[477,16,521,16],[477,19,521,19,"GAME_AREA_HEIGHT"],[477,35,521,35],[477,38,521,38],[477,39,521,39],[478,6,523,4],[478,10,523,8,"closestEnemy"],[478,22,523,20],[478,25,523,23,"enemies"],[478,32,523,30],[478,33,523,31],[478,34,523,32],[478,35,523,33],[479,6,524,4],[479,10,524,8,"closestDistance"],[479,25,524,23],[479,28,524,26,"Infinity"],[479,36,524,34],[480,6,526,4,"enemies"],[480,13,526,11],[480,14,526,12,"forEach"],[480,21,526,19],[480,22,526,20,"enemy"],[480,27,526,25],[480,31,526,29],[481,8,527,6],[481,12,527,12,"distance"],[481,20,527,20],[481,23,527,23,"Math"],[481,27,527,27],[481,28,527,28,"sqrt"],[481,32,527,32],[481,33,528,8,"Math"],[481,37,528,12],[481,38,528,13,"pow"],[481,41,528,16],[481,42,528,17,"enemy"],[481,47,528,22],[481,48,528,23,"position"],[481,56,528,31],[481,57,528,32,"x"],[481,58,528,33],[481,61,528,36,"ninjaX"],[481,67,528,42],[481,69,528,44],[481,70,528,45],[481,71,528,46],[481,74,529,8,"Math"],[481,78,529,12],[481,79,529,13,"pow"],[481,82,529,16],[481,83,529,17,"enemy"],[481,88,529,22],[481,89,529,23,"position"],[481,97,529,31],[481,98,529,32,"y"],[481,99,529,33],[481,102,529,36,"ninjaY"],[481,108,529,42],[481,110,529,44],[481,111,529,45],[481,112,530,6],[481,113,530,7],[482,8,532,6],[482,12,532,10,"distance"],[482,20,532,18],[482,23,532,21,"closestDistance"],[482,38,532,36],[482,40,532,38],[483,10,533,8,"closestDistance"],[483,25,533,23],[483,28,533,26,"distance"],[483,36,533,34],[484,10,534,8,"closestEnemy"],[484,22,534,20],[484,25,534,23,"enemy"],[484,30,534,28],[485,8,535,6],[486,6,536,4],[486,7,536,5],[486,8,536,6],[487,6,538,4,"console"],[487,13,538,11],[487,14,538,12,"log"],[487,17,538,15],[487,18,538,16],[487,60,538,58,"closestDistance"],[487,75,538,73],[487,76,538,74,"toFixed"],[487,83,538,81],[487,84,538,82],[487,85,538,83],[487,86,538,84],[487,88,538,86],[487,89,538,87],[488,6,539,4],[488,13,539,11,"closestEnemy"],[488,25,539,23],[489,4,540,2],[489,5,540,3],[491,4,542,2],[492,4,543,2],[492,8,543,8,"findClosestEnemy"],[492,24,543,24],[492,27,543,27,"findClosestEnemy"],[492,28,543,27],[492,33,543,53],[493,6,544,4],[493,13,544,11,"findClosestEnemyInternal"],[493,37,544,35],[493,38,544,36,"combatState"],[493,49,544,47],[493,50,544,48,"enemies"],[493,57,544,55],[493,58,544,56],[494,4,545,2],[494,5,545,3],[496,4,547,2],[497,4,548,2],[497,8,548,2,"_useState7"],[497,18,548,2],[497,21,548,58],[497,25,548,58,"useState"],[497,31,548,66],[497,32,548,66,"useState"],[497,40,548,66],[497,42,548,91],[498,8,548,93,"x"],[498,9,548,94],[498,11,548,96],[498,12,548,97],[499,8,548,99,"y"],[499,9,548,100],[499,11,548,102],[500,6,548,104],[500,7,548,105],[500,8,548,106],[501,6,548,106,"_useState8"],[501,16,548,106],[501,23,548,106,"_slicedToArray"],[501,37,548,106],[501,38,548,106,"default"],[501,45,548,106],[501,47,548,106,"_useState7"],[501,57,548,106],[502,6,548,9,"currentNinjaPosition"],[502,26,548,29],[502,29,548,29,"_useState8"],[502,39,548,29],[503,6,548,31,"setCurrentNinjaPosition"],[503,29,548,54],[503,32,548,54,"_useState8"],[503,42,548,54],[504,4,549,2],[504,8,549,2,"_useState9"],[504,18,549,2],[504,21,549,60],[504,25,549,60,"useState"],[504,31,549,68],[504,32,549,68,"useState"],[504,40,549,68],[504,42,549,69],[504,47,549,74],[504,48,549,75],[505,6,549,75,"_useState0"],[505,16,549,75],[505,23,549,75,"_slicedToArray"],[505,37,549,75],[505,38,549,75,"default"],[505,45,549,75],[505,47,549,75,"_useState9"],[505,57,549,75],[506,6,549,9,"isManualControlActive"],[506,27,549,30],[506,30,549,30,"_useState0"],[506,40,549,30],[507,6,549,32,"setIsManualControlActive"],[507,30,549,56],[507,33,549,56,"_useState0"],[507,43,549,56],[509,4,551,2],[510,4,552,2],[510,8,552,8,"updateNinjaPosition"],[510,27,552,27],[510,30,552,30],[510,34,552,30,"useCallback"],[510,40,552,41],[510,41,552,41,"useCallback"],[510,52,552,41],[510,54,552,43,"newPosition"],[510,65,552,78],[510,69,552,83],[511,6,553,4,"setCurrentNinjaPosition"],[511,29,553,27],[511,30,553,28,"newPosition"],[511,41,553,39],[511,42,553,40],[512,4,554,2],[512,5,554,3],[512,7,554,5],[512,9,554,7],[512,10,554,8],[514,4,556,2],[515,4,557,2],[515,8,557,8,"setManualControlActive"],[515,30,557,30],[515,33,557,33],[515,37,557,33,"useCallback"],[515,43,557,44],[515,44,557,44,"useCallback"],[515,55,557,44],[515,57,557,46,"active"],[515,63,557,61],[515,67,557,66],[516,6,558,4,"setIsManualControlActive"],[516,30,558,28],[516,31,558,29,"active"],[516,37,558,35],[516,38,558,36],[517,6,559,4,"console"],[517,13,559,11],[517,14,559,12,"log"],[517,17,559,15],[517,18,559,16],[517,39,559,37,"active"],[517,45,559,43],[517,48,559,46],[517,59,559,57],[517,62,559,60],[517,75,559,73],[517,88,559,86,"active"],[517,94,559,92],[517,97,559,95],[517,105,559,103],[517,108,559,106],[517,117,559,115],[517,119,559,117],[517,120,559,118],[518,4,560,2],[518,5,560,3],[518,7,560,5],[518,9,560,7],[518,10,560,8],[520,4,562,2],[521,4,563,2],[521,8,563,8,"handleProjectileHit"],[521,27,563,27],[521,30,563,31,"projectile"],[521,40,563,59],[521,44,563,64],[522,6,564,4,"console"],[522,13,564,11],[522,14,564,12,"log"],[522,17,564,15],[522,18,564,16],[522,35,564,33,"projectile"],[522,45,564,43],[522,46,564,44,"id"],[522,48,564,46],[522,62,564,60,"projectile"],[522,72,564,70],[522,73,564,71,"targetEnemyId"],[522,86,564,84],[522,94,564,92,"projectile"],[522,104,564,102],[522,105,564,103,"damage"],[522,111,564,109],[522,120,564,118],[522,121,564,119],[523,6,566,4,"setCombatState"],[523,20,566,18],[523,21,566,19,"prev"],[523,25,566,23],[523,29,566,27],[524,8,567,6],[524,12,567,12,"newState"],[524,20,567,20],[524,23,567,23],[525,10,567,25],[525,13,567,28,"prev"],[526,8,567,33],[526,9,567,34],[528,8,569,6],[529,8,570,6],[529,12,570,12,"enemyIndex"],[529,22,570,22],[529,25,570,25,"newState"],[529,33,570,33],[529,34,570,34,"enemies"],[529,41,570,41],[529,42,570,42,"findIndex"],[529,51,570,51],[529,52,570,52,"e"],[529,53,570,53],[529,57,570,57,"e"],[529,58,570,58],[529,59,570,59,"id"],[529,61,570,61],[529,66,570,66,"projectile"],[529,76,570,76],[529,77,570,77,"targetEnemyId"],[529,90,570,90],[529,91,570,91],[530,8,571,6],[530,12,571,10,"enemyIndex"],[530,22,571,20],[530,26,571,24],[530,27,571,25],[530,29,571,27],[531,10,572,8,"newState"],[531,18,572,16],[531,19,572,17,"enemies"],[531,26,572,24],[531,29,572,27],[531,30,572,28],[531,33,572,31,"newState"],[531,41,572,39],[531,42,572,40,"enemies"],[531,49,572,47],[531,50,572,48],[532,10,573,8,"newState"],[532,18,573,16],[532,19,573,17,"enemies"],[532,26,573,24],[532,27,573,25,"enemyIndex"],[532,37,573,35],[532,38,573,36],[532,41,573,39],[533,12,574,10],[533,15,574,13,"newState"],[533,23,574,21],[533,24,574,22,"enemies"],[533,31,574,29],[533,32,574,30,"enemyIndex"],[533,42,574,40],[533,43,574,41],[534,12,575,10,"health"],[534,18,575,16],[534,20,575,18,"newState"],[534,28,575,26],[534,29,575,27,"enemies"],[534,36,575,34],[534,37,575,35,"enemyIndex"],[534,47,575,45],[534,48,575,46],[534,49,575,47,"health"],[534,55,575,53],[534,58,575,56,"projectile"],[534,68,575,66],[534,69,575,67,"damage"],[534,75,575,73],[535,12,576,10,"lastDamaged"],[535,23,576,21],[535,25,576,23,"combatEngine"],[535,44,576,35],[535,45,576,35,"combatEngine"],[535,57,576,35],[535,58,576,36,"getCurrentTick"],[535,72,576,50],[535,73,576,51],[536,10,577,8],[536,11,577,9],[537,10,579,8,"console"],[537,17,579,15],[537,18,579,16,"log"],[537,21,579,19],[537,22,579,20],[537,34,579,32,"projectile"],[537,44,579,42],[537,45,579,43,"targetEnemyId"],[537,58,579,56],[537,70,579,68,"newState"],[537,78,579,76],[537,79,579,77,"enemies"],[537,86,579,84],[537,87,579,85,"enemyIndex"],[537,97,579,95],[537,98,579,96],[537,99,579,97,"health"],[537,105,579,103],[537,109,579,107,"newState"],[537,117,579,115],[537,118,579,116,"enemies"],[537,125,579,123],[537,126,579,124,"enemyIndex"],[537,136,579,134],[537,137,579,135],[537,138,579,136,"maxHealth"],[537,147,579,145],[537,149,579,147],[537,150,579,148],[538,8,580,6],[539,8,582,6],[539,15,582,13,"newState"],[539,23,582,21],[540,6,583,4],[540,7,583,5],[540,8,583,6],[542,6,585,4],[543,6,586,4,"setProjectiles"],[543,20,586,18],[543,21,586,19,"prev"],[543,25,586,23],[543,29,586,27,"prev"],[543,33,586,31],[543,34,586,32,"filter"],[543,40,586,38],[543,41,586,39,"p"],[543,42,586,40],[543,46,586,44,"p"],[543,47,586,45],[543,48,586,46,"id"],[543,50,586,48],[543,55,586,53,"projectile"],[543,65,586,63],[543,66,586,64,"id"],[543,68,586,66],[543,69,586,67],[543,70,586,68],[544,4,587,2],[544,5,587,3],[546,4,589,2],[547,4,590,2],[547,8,590,8,"castAbility"],[547,19,590,19],[547,22,590,22,"castAbility"],[547,23,590,23,"state"],[547,28,590,41],[547,30,590,43,"slotIndex"],[547,39,590,60],[547,44,590,65],[548,6,591,4],[548,10,591,10,"deck"],[548,14,591,14],[548,17,591,17,"state"],[548,22,591,22],[548,23,591,23,"abilityManager"],[548,37,591,37],[548,38,591,38,"getDeck"],[548,45,591,45],[548,46,591,46],[548,47,591,47],[549,6,592,4],[549,10,592,10,"ability"],[549,17,592,17],[549,20,592,20,"deck"],[549,24,592,24],[549,25,592,25,"slots"],[549,30,592,30],[549,31,592,31,"slotIndex"],[549,40,592,40],[549,41,592,41],[550,6,593,4],[550,10,593,8],[550,11,593,9,"ability"],[550,18,593,16],[550,20,593,18],[551,6,595,4,"console"],[551,13,595,11],[551,14,595,12,"log"],[551,17,595,15],[551,18,595,16],[551,43,595,41,"ability"],[551,50,595,48],[551,51,595,49,"id"],[551,53,595,51],[551,67,595,65,"slotIndex"],[551,76,595,74],[551,78,595,76],[551,79,595,77],[553,6,597,4],[554,6,598,4],[554,10,598,8,"damage"],[554,16,598,14],[554,19,598,17,"ability"],[554,26,598,24],[554,27,598,25,"stats"],[554,32,598,30],[554,33,598,31,"baseDamage"],[554,43,598,41],[556,6,600,4],[557,6,601,4,"deck"],[557,10,601,8],[557,11,601,9,"activeSynergies"],[557,26,601,24],[557,27,601,25,"forEach"],[557,34,601,32],[557,35,601,33,"synergy"],[557,42,601,40],[557,46,601,44],[558,8,602,6],[558,12,602,10,"synergy"],[558,19,602,17],[558,20,602,18,"bonus"],[558,25,602,23],[558,26,602,24,"damageBonus"],[558,37,602,35],[558,41,603,10,"synergy"],[558,48,603,17],[558,49,603,18,"requiredTags"],[558,61,603,30],[558,62,603,31,"some"],[558,66,603,35],[558,67,603,36,"tag"],[558,70,603,39],[558,74,603,43,"ability"],[558,81,603,50],[558,82,603,51,"tags"],[558,86,603,55],[558,87,603,56,"includes"],[558,95,603,64],[558,96,603,65,"tag"],[558,99,603,68],[558,100,603,69],[558,101,603,70],[558,103,603,72],[559,10,604,8,"damage"],[559,16,604,14],[559,20,604,19],[559,21,604,20],[559,24,604,23,"synergy"],[559,31,604,30],[559,32,604,31,"bonus"],[559,37,604,36],[559,38,604,37,"damageBonus"],[559,49,604,48],[559,52,604,51],[559,55,604,55],[560,8,605,6],[561,6,606,4],[561,7,606,5],[561,8,606,6],[563,6,608,4],[564,6,609,4],[564,10,609,10,"isAOE"],[564,15,609,15],[564,18,609,18,"ability"],[564,25,609,25],[564,26,609,26,"effects"],[564,33,609,33],[564,34,609,34,"includes"],[564,42,609,42],[564,43,609,43],[564,48,609,48],[564,49,609,49],[564,53,609,53,"ability"],[564,60,609,60],[564,61,609,61,"stats"],[564,66,609,66],[564,67,609,67,"aoeRadius"],[564,76,609,76],[565,6,610,4,"console"],[565,13,610,11],[565,14,610,12,"log"],[565,17,610,15],[565,18,610,16],[565,39,610,37,"ability"],[565,46,610,44],[565,47,610,45,"name"],[565,51,610,49],[565,66,610,64,"JSON"],[565,70,610,68],[565,71,610,69,"stringify"],[565,80,610,78],[565,81,610,79,"ability"],[565,88,610,86],[565,89,610,87,"effects"],[565,96,610,94],[565,97,610,95],[565,113,610,111,"ability"],[565,120,610,118],[565,121,610,119,"stats"],[565,126,610,124],[565,127,610,125,"aoeRadius"],[565,136,610,134],[565,148,610,146,"isAOE"],[565,153,610,151],[565,155,610,153],[565,156,610,154],[566,6,612,4],[566,10,612,8,"isAOE"],[566,15,612,13],[566,17,612,15],[567,8,613,6,"console"],[567,15,613,13],[567,16,613,14,"log"],[567,19,613,17],[567,20,613,18],[567,39,613,37,"ability"],[567,46,613,44],[567,47,613,45,"name"],[567,51,613,49],[567,67,613,65,"ability"],[567,74,613,72],[567,75,613,73,"stats"],[567,80,613,78],[567,81,613,79,"aoeRadius"],[567,90,613,88],[567,92,613,90],[567,93,613,91],[569,8,615,6],[570,8,616,6],[571,8,617,6],[571,12,617,12,"ninjaX"],[571,18,617,18],[571,21,617,21,"currentNinjaPosition"],[571,41,617,41],[571,42,617,42,"x"],[571,43,617,43],[571,46,617,46],[571,48,617,48],[571,49,617,49],[571,50,617,50],[572,8,618,6],[572,12,618,12,"ninjaY"],[572,18,618,18],[572,21,618,21,"currentNinjaPosition"],[572,41,618,41],[572,42,618,42,"y"],[572,43,618,43],[572,46,618,46],[572,48,618,48],[573,8,619,6],[573,12,619,12,"aoeRadius"],[573,21,619,21],[573,24,619,24,"ability"],[573,31,619,31],[573,32,619,32,"stats"],[573,37,619,37],[573,38,619,38,"aoeRadius"],[573,47,619,47],[574,8,621,6],[574,12,621,12,"enemiesInRange"],[574,26,621,26],[574,29,621,29,"state"],[574,34,621,34],[574,35,621,35,"enemies"],[574,42,621,42],[574,43,621,43,"filter"],[574,49,621,49],[574,50,621,50,"enemy"],[574,55,621,55],[574,59,621,59],[575,10,622,8],[575,14,622,14,"enemyX"],[575,20,622,20],[575,23,622,23,"enemy"],[575,28,622,28],[575,29,622,29,"position"],[575,37,622,37],[575,38,622,38,"x"],[575,39,622,39],[575,42,622,42],[575,46,622,46],[575,47,622,47],[575,48,622,48],[576,10,623,8],[576,14,623,14,"enemyY"],[576,20,623,20],[576,23,623,23,"enemy"],[576,28,623,28],[576,29,623,29,"position"],[576,37,623,37],[576,38,623,38,"y"],[576,39,623,39],[576,42,623,42],[576,46,623,46],[577,10,624,8],[577,14,624,14,"distance"],[577,22,624,22],[577,25,624,25,"Math"],[577,29,624,29],[577,30,624,30,"sqrt"],[577,34,624,34],[577,35,624,35,"Math"],[577,39,624,39],[577,40,624,40,"pow"],[577,43,624,43],[577,44,624,44,"enemyX"],[577,50,624,50],[577,53,624,53,"ninjaX"],[577,59,624,59],[577,61,624,61],[577,62,624,62],[577,63,624,63],[577,66,624,66,"Math"],[577,70,624,70],[577,71,624,71,"pow"],[577,74,624,74],[577,75,624,75,"enemyY"],[577,81,624,81],[577,84,624,84,"ninjaY"],[577,90,624,90],[577,92,624,92],[577,93,624,93],[577,94,624,94],[577,95,624,95],[578,10,625,8],[578,17,625,15,"distance"],[578,25,625,23],[578,29,625,27,"aoeRadius"],[578,38,625,36],[579,8,626,6],[579,9,626,7],[579,10,626,8],[580,8,628,6,"console"],[580,15,628,13],[580,16,628,14,"log"],[580,19,628,17],[580,20,628,18],[580,45,628,43,"enemiesInRange"],[580,59,628,57],[580,60,628,58,"length"],[580,66,628,64],[580,88,628,86,"aoeRadius"],[580,97,628,95],[580,107,628,105],[580,108,628,106],[582,8,630,6],[583,8,631,6,"enemiesInRange"],[583,22,631,20],[583,23,631,21,"forEach"],[583,30,631,28],[583,31,631,29,"enemy"],[583,36,631,34],[583,40,631,38],[584,10,632,8],[584,14,632,14,"damageResult"],[584,26,632,26],[584,29,632,29,"DamageCalculator"],[584,48,632,45],[584,49,632,45,"DamageCalculator"],[584,65,632,45],[584,66,632,46,"calculateDamage"],[584,81,632,61],[584,82,632,62,"damage"],[584,88,632,68],[584,90,632,70,"state"],[584,95,632,75],[584,96,632,76,"playerStats"],[584,107,632,87],[584,109,632,89,"enemy"],[584,114,632,94],[584,115,632,95,"stats"],[584,120,632,100],[584,121,632,101],[585,10,633,8,"createProjectile"],[585,26,633,24],[585,27,633,25,"enemy"],[585,32,633,30],[585,34,633,32,"damageResult"],[585,46,633,44],[585,47,633,45,"damage"],[585,53,633,51],[585,55,633,53,"currentNinjaPosition"],[585,75,633,73],[585,77,633,75],[586,12,634,10,"id"],[586,14,634,12],[586,16,634,14,"ability"],[586,23,634,21],[586,24,634,22,"id"],[586,26,634,24],[587,12,635,10,"name"],[587,16,635,14],[587,18,635,16,"ability"],[587,25,635,23],[587,26,635,24,"name"],[587,30,635,28],[588,12,636,10,"icon"],[588,16,636,14],[588,18,636,16,"ability"],[588,25,636,23],[588,26,636,24,"icon"],[589,10,637,8],[589,11,637,9],[589,12,637,10],[590,10,638,8,"console"],[590,17,638,15],[590,18,638,16,"log"],[590,21,638,19],[590,22,638,20],[590,37,638,35,"enemy"],[590,42,638,40],[590,43,638,41,"name"],[590,47,638,45],[590,55,638,53,"damageResult"],[590,67,638,65],[590,68,638,66,"damage"],[590,74,638,72],[590,83,638,81],[590,84,638,82],[592,10,640,8],[593,10,641,8],[593,14,641,12,"damageResult"],[593,26,641,24],[593,27,641,25,"damage"],[593,33,641,31],[593,37,641,35,"enemy"],[593,42,641,40],[593,43,641,41,"health"],[593,49,641,47],[593,51,641,49],[594,12,642,10,"console"],[594,19,642,17],[594,20,642,18,"log"],[594,23,642,21],[594,24,642,22],[594,67,642,65,"enemy"],[594,72,642,70],[594,73,642,71,"name"],[594,77,642,75],[594,90,642,88,"damageResult"],[594,102,642,100],[594,103,642,101,"damage"],[594,109,642,107],[594,124,642,122,"enemy"],[594,129,642,127],[594,130,642,128,"health"],[594,136,642,134],[594,139,642,137],[594,140,642,138],[595,10,643,8],[596,8,644,6],[596,9,644,7],[596,10,644,8],[597,8,646,6,"console"],[597,15,646,13],[597,16,646,14,"log"],[597,19,646,17],[597,20,646,18],[597,26,646,24,"ability"],[597,33,646,31],[597,34,646,32,"name"],[597,38,646,36],[597,56,646,54,"enemiesInRange"],[597,70,646,68],[597,71,646,69,"length"],[597,77,646,75],[597,93,646,91,"damage"],[597,99,646,97],[597,118,646,116],[597,119,646,117],[598,6,648,4],[598,7,648,5],[598,13,648,11],[599,8,649,6],[600,8,650,6],[600,12,650,12,"target"],[600,18,650,18],[600,21,650,21,"findClosestEnemyInternal"],[600,45,650,45],[600,46,650,46,"state"],[600,51,650,51],[600,52,650,52,"enemies"],[600,59,650,59],[600,60,650,60],[601,8,651,6],[601,12,651,10],[601,13,651,11,"target"],[601,19,651,17],[601,21,651,19],[602,8,653,6],[602,12,653,12,"damageResult"],[602,24,653,24],[602,27,653,27,"DamageCalculator"],[602,46,653,43],[602,47,653,43,"DamageCalculator"],[602,63,653,43],[602,64,653,44,"calculateDamage"],[602,79,653,59],[602,80,653,60,"damage"],[602,86,653,66],[602,88,653,68,"state"],[602,93,653,73],[602,94,653,74,"playerStats"],[602,105,653,85],[602,107,653,87,"target"],[602,113,653,93],[602,114,653,94,"stats"],[602,119,653,99],[602,120,653,100],[604,8,655,6],[605,8,656,6,"console"],[605,15,656,13],[605,16,656,14,"log"],[605,19,656,17],[605,20,656,18],[605,71,656,69,"target"],[605,77,656,75],[605,78,656,76,"name"],[605,82,656,80],[605,91,656,89,"damageResult"],[605,103,656,101],[605,104,656,102,"damage"],[605,110,656,108],[605,119,656,117],[605,120,656,118],[606,8,657,6,"createProjectile"],[606,24,657,22],[606,25,657,23,"target"],[606,31,657,29],[606,33,657,31,"damageResult"],[606,45,657,43],[606,46,657,44,"damage"],[606,52,657,50],[606,54,657,52,"currentNinjaPosition"],[606,74,657,72],[606,76,657,74],[607,10,658,8,"id"],[607,12,658,10],[607,14,658,12,"ability"],[607,21,658,19],[607,22,658,20,"id"],[607,24,658,22],[608,10,659,8,"name"],[608,14,659,12],[608,16,659,14,"ability"],[608,23,659,21],[608,24,659,22,"name"],[608,28,659,26],[609,10,660,8,"icon"],[609,14,660,12],[609,16,660,14,"ability"],[609,23,660,21],[609,24,660,22,"icon"],[610,8,661,6],[610,9,661,7],[610,10,661,8],[611,8,663,6,"console"],[611,15,663,13],[611,16,663,14,"log"],[611,19,663,17],[611,20,663,18],[611,26,663,24,"ability"],[611,33,663,31],[611,34,663,32,"name"],[611,38,663,36],[611,66,663,64,"damageResult"],[611,78,663,76],[611,79,663,77,"damage"],[611,85,663,83],[611,95,663,93,"damageResult"],[611,107,663,105],[611,108,663,106,"isCritical"],[611,118,663,116],[611,121,663,119],[611,131,663,129],[611,134,663,132],[611,136,663,134],[611,138,663,136],[611,139,663,137],[613,8,665,6],[614,8,666,6],[614,12,666,10,"damageResult"],[614,24,666,22],[614,25,666,23,"damage"],[614,31,666,29],[614,35,666,33,"target"],[614,41,666,39],[614,42,666,40,"health"],[614,48,666,46],[614,50,666,48],[615,10,667,8,"console"],[615,17,667,15],[615,18,667,16,"log"],[615,21,667,19],[615,22,667,20],[615,75,667,73,"target"],[615,81,667,79],[615,82,667,80,"name"],[615,86,667,84],[615,99,667,97,"damageResult"],[615,111,667,109],[615,112,667,110,"damage"],[615,118,667,116],[615,133,667,131,"target"],[615,139,667,137],[615,140,667,138,"health"],[615,146,667,144],[615,149,667,147],[615,150,667,148],[616,8,668,6],[617,6,669,4],[619,6,671,4],[620,6,672,4],[620,10,672,8,"ability"],[620,17,672,15],[620,18,672,16,"effects"],[620,25,672,23],[620,26,672,24,"includes"],[620,34,672,32],[620,35,672,33],[620,40,672,38],[620,41,672,39],[620,45,672,43,"ability"],[620,52,672,50],[620,53,672,51,"stats"],[620,58,672,56],[620,59,672,57,"duration"],[620,67,672,65],[620,69,672,67],[621,8,673,6],[621,12,673,12,"targets"],[621,19,673,19],[621,22,673,22,"isAOE"],[621,27,673,27],[621,30,674,8,"state"],[621,35,674,13],[621,36,674,14,"enemies"],[621,43,674,21],[621,44,674,22,"filter"],[621,50,674,28],[621,51,674,29,"enemy"],[621,56,674,34],[621,60,674,38],[622,10,675,10],[622,14,675,16,"ninjaX"],[622,20,675,22],[622,23,675,25,"currentNinjaPosition"],[622,43,675,45],[622,44,675,46,"x"],[622,45,675,47],[622,48,675,50],[622,50,675,52],[623,10,676,10],[623,14,676,16,"ninjaY"],[623,20,676,22],[623,23,676,25,"currentNinjaPosition"],[623,43,676,45],[623,44,676,46,"y"],[623,45,676,47],[623,48,676,50],[623,50,676,52],[624,10,677,10],[624,14,677,16,"enemyX"],[624,20,677,22],[624,23,677,25,"enemy"],[624,28,677,30],[624,29,677,31,"position"],[624,37,677,39],[624,38,677,40,"x"],[624,39,677,41],[624,42,677,44],[624,46,677,48],[625,10,678,10],[625,14,678,16,"enemyY"],[625,20,678,22],[625,23,678,25,"enemy"],[625,28,678,30],[625,29,678,31,"position"],[625,37,678,39],[625,38,678,40,"y"],[625,39,678,41],[625,42,678,44],[625,46,678,48],[626,10,679,10],[626,14,679,16,"distance"],[626,22,679,24],[626,25,679,27,"Math"],[626,29,679,31],[626,30,679,32,"sqrt"],[626,34,679,36],[626,35,679,37,"Math"],[626,39,679,41],[626,40,679,42,"pow"],[626,43,679,45],[626,44,679,46,"enemyX"],[626,50,679,52],[626,53,679,55,"ninjaX"],[626,59,679,61],[626,61,679,63],[626,62,679,64],[626,63,679,65],[626,66,679,68,"Math"],[626,70,679,72],[626,71,679,73,"pow"],[626,74,679,76],[626,75,679,77,"enemyY"],[626,81,679,83],[626,84,679,86,"ninjaY"],[626,90,679,92],[626,92,679,94],[626,93,679,95],[626,94,679,96],[626,95,679,97],[627,10,680,10],[627,17,680,17,"distance"],[627,25,680,25],[627,29,680,29,"ability"],[627,36,680,36],[627,37,680,37,"stats"],[627,42,680,42],[627,43,680,43,"aoeRadius"],[627,52,680,52],[628,8,681,8],[628,9,681,9],[628,10,681,10],[628,13,682,8],[628,14,682,9,"findClosestEnemyInternal"],[628,38,682,33],[628,39,682,34,"state"],[628,44,682,39],[628,45,682,40,"enemies"],[628,52,682,47],[628,53,682,48],[628,54,682,49],[628,55,682,50,"filter"],[628,61,682,56],[628,62,682,57,"Boolean"],[628,69,682,64],[628,70,682,65],[629,8,684,6,"targets"],[629,15,684,13],[629,16,684,14,"forEach"],[629,23,684,21],[629,24,684,22,"target"],[629,30,684,28],[629,34,684,32],[630,10,685,8,"state"],[630,15,685,13],[630,16,685,14,"statusEffects"],[630,29,685,27],[630,30,685,28,"addEffect"],[630,39,685,37],[630,40,685,38,"target"],[630,46,685,44],[630,47,685,45,"id"],[630,49,685,47],[630,51,685,49],[631,12,686,10,"id"],[631,14,686,12],[631,16,686,14],[631,19,686,17,"ability"],[631,26,686,24],[631,27,686,25,"id"],[631,29,686,27],[631,35,686,33],[632,12,687,10,"type"],[632,16,687,14],[632,18,687,16],[632,23,687,21],[633,12,688,10,"remainingTicks"],[633,26,688,24],[633,28,688,26,"Math"],[633,32,688,30],[633,33,688,31,"floor"],[633,38,688,36],[633,39,688,37,"ability"],[633,46,688,44],[633,47,688,45,"stats"],[633,52,688,50],[633,53,688,51,"duration"],[633,61,688,59],[633,64,688,62],[633,66,688,64],[633,67,688,65],[634,12,689,10,"tickInterval"],[634,24,689,22],[634,26,689,24],[634,28,689,26],[635,12,690,10,"lastTick"],[635,20,690,18],[635,22,690,20,"state"],[635,27,690,25],[635,28,690,26,"currentTick"],[635,39,690,37],[636,12,691,10,"value"],[636,17,691,15],[636,19,691,17,"Math"],[636,23,691,21],[636,24,691,22,"floor"],[636,29,691,27],[636,30,691,28,"damage"],[636,36,691,34],[636,39,691,37],[636,42,691,40],[636,43,691,41],[637,12,692,10,"stackable"],[637,21,692,19],[637,23,692,21],[638,10,693,8],[638,11,693,9],[638,12,693,10],[639,8,694,6],[639,9,694,7],[639,10,694,8],[640,6,695,4],[642,6,697,4],[643,6,698,4],[643,10,698,8,"ability"],[643,17,698,15],[643,18,698,16,"effects"],[643,25,698,23],[643,26,698,24,"includes"],[643,34,698,32],[643,35,698,33],[643,41,698,39],[643,42,698,40],[643,46,698,44,"ability"],[643,53,698,51],[643,54,698,52,"id"],[643,56,698,54],[643,61,698,59],[643,75,698,73],[643,77,698,75],[644,8,699,6,"console"],[644,15,699,13],[644,16,699,14,"log"],[644,19,699,17],[644,20,699,18],[644,66,699,64,"ability"],[644,73,699,71],[644,74,699,72,"stats"],[644,79,699,77],[644,80,699,78,"duration"],[644,88,699,86],[644,98,699,96],[644,99,699,97],[646,8,701,6],[647,8,702,6],[647,12,702,12,"cloneX"],[647,18,702,18],[647,21,702,21,"currentNinjaPosition"],[647,41,702,41],[647,42,702,42,"x"],[647,43,702,43],[647,46,702,46],[647,48,702,48],[647,49,702,49],[647,50,702,50],[648,8,703,6],[648,12,703,12,"cloneY"],[648,18,703,18],[648,21,703,21,"currentNinjaPosition"],[648,41,703,41],[648,42,703,42,"y"],[648,43,703,43],[648,46,703,46],[648,48,703,48],[648,49,703,49],[648,50,703,50],[650,8,705,6,"state"],[650,13,705,11],[650,14,705,12,"shadowClone"],[650,25,705,23],[650,28,705,26],[651,10,706,8,"id"],[651,12,706,10],[651,14,706,12],[651,30,706,28,"Date"],[651,34,706,32],[651,35,706,33,"now"],[651,38,706,36],[651,39,706,37],[651,40,706,38],[651,42,706,40],[652,10,707,8,"remainingTicks"],[652,24,707,22],[652,26,707,24,"Math"],[652,30,707,28],[652,31,707,29,"floor"],[652,36,707,34],[652,37,707,35,"ability"],[652,44,707,42],[652,45,707,43,"stats"],[652,50,707,48],[652,51,707,49,"duration"],[652,59,707,57],[652,62,707,60],[652,64,707,62],[652,65,707,63],[653,10,707,65],[654,10,708,8,"position"],[654,18,708,16],[654,20,708,18],[655,12,708,20,"x"],[655,13,708,21],[655,15,708,23,"cloneX"],[655,21,708,29],[656,12,708,31,"y"],[656,13,708,32],[656,15,708,34,"cloneY"],[657,10,708,41],[657,11,708,42],[658,10,709,8,"damageMultiplier"],[658,26,709,24],[658,28,709,26],[658,31,709,29],[658,32,709,31],[659,8,710,6],[659,9,710,7],[660,8,712,6,"console"],[660,15,712,13],[660,16,712,14,"log"],[660,19,712,17],[660,20,712,18],[660,63,712,61,"ability"],[660,70,712,68],[660,71,712,69,"stats"],[660,76,712,74],[660,77,712,75,"duration"],[660,85,712,83],[660,108,712,106],[660,109,712,107],[661,6,713,4],[662,4,714,2],[662,5,714,3],[664,4,716,2],[665,4,717,2],[665,8,717,8,"createProjectile"],[665,24,717,24],[665,27,717,27,"createProjectile"],[665,28,717,28,"targetEnemy"],[665,39,717,52],[665,41,717,54,"damage"],[665,47,717,68],[665,49,717,70,"ninjaPos"],[665,57,717,103],[665,59,717,105,"abilityInfo"],[665,70,717,159],[665,72,717,161,"isAOE"],[665,77,717,176],[665,79,717,178,"aoeRadius"],[665,88,717,196],[665,93,717,201],[666,6,718,4],[666,10,718,8],[666,11,718,9,"targetEnemy"],[666,22,718,20],[666,24,718,22],[667,8,719,6,"console"],[667,15,719,13],[667,16,719,14,"log"],[667,19,719,17],[667,20,719,18],[667,65,719,63],[667,66,719,64],[668,8,720,6],[668,15,720,13],[668,19,720,17],[669,6,721,4],[670,6,723,4],[670,10,723,10,"SCREEN_WIDTH"],[670,22,723,22],[670,25,723,25],[670,28,723,28],[671,6,724,4],[671,10,724,10,"GAME_AREA_HEIGHT"],[671,26,724,26],[671,29,724,29],[671,32,724,32],[671,35,724,35],[671,38,724,38],[671,39,724,39],[671,40,724,40],[672,6,725,4],[672,10,725,10,"NINJA_SIZE"],[672,20,725,20],[672,23,725,23],[672,25,725,25],[674,6,727,4],[675,6,728,4],[675,10,728,10,"ninjaX"],[675,16,728,16],[675,19,728,19,"ninjaPos"],[675,27,728,27],[675,30,728,30,"ninjaPos"],[675,38,728,38],[675,39,728,39,"x"],[675,40,728,40],[675,43,728,43,"NINJA_SIZE"],[675,53,728,53],[675,56,728,56],[675,57,728,57],[675,60,728,60,"SCREEN_WIDTH"],[675,72,728,72],[675,75,728,75],[675,76,728,76],[676,6,729,4],[676,10,729,10,"ninjaY"],[676,16,729,16],[676,19,729,19,"ninjaPos"],[676,27,729,27],[676,30,729,30,"ninjaPos"],[676,38,729,38],[676,39,729,39,"y"],[676,40,729,40],[676,43,729,43,"NINJA_SIZE"],[676,53,729,53],[676,56,729,56],[676,57,729,57],[676,60,729,60,"GAME_AREA_HEIGHT"],[676,76,729,76],[676,79,729,79],[676,80,729,80],[677,6,730,4],[677,10,730,10,"ENEMY_SIZE"],[677,20,730,20],[677,23,730,23],[677,25,730,25],[678,6,732,4],[678,10,732,10,"projectileId"],[678,22,732,22],[678,25,732,25],[678,33,732,33,"Date"],[678,37,732,37],[678,38,732,38,"now"],[678,41,732,41],[678,42,732,42],[678,43,732,43],[678,47,732,47,"Math"],[678,51,732,51],[678,52,732,52,"random"],[678,58,732,58],[678,59,732,59],[678,60,732,60],[678,62,732,62],[679,6,734,4],[679,10,734,10,"projectile"],[679,20,734,38],[679,23,734,41],[680,8,735,6,"id"],[680,10,735,8],[680,12,735,10,"projectileId"],[680,24,735,22],[681,8,736,6,"x"],[681,9,736,7],[681,11,736,9,"ninjaX"],[681,17,736,15],[682,8,737,6,"y"],[682,9,737,7],[682,11,737,9,"ninjaY"],[682,17,737,15],[683,8,738,6,"targetX"],[683,15,738,13],[683,17,738,15,"targetEnemy"],[683,28,738,26],[683,29,738,27,"position"],[683,37,738,35],[683,38,738,36,"x"],[683,39,738,37],[683,42,738,40,"ENEMY_SIZE"],[683,52,738,50],[683,55,738,53],[683,56,738,54],[684,8,739,6,"targetY"],[684,15,739,13],[684,17,739,15,"targetEnemy"],[684,28,739,26],[684,29,739,27,"position"],[684,37,739,35],[684,38,739,36,"y"],[684,39,739,37],[684,42,739,40,"ENEMY_SIZE"],[684,52,739,50],[684,55,739,53],[684,56,739,54],[685,8,740,6,"targetEnemyId"],[685,21,740,19],[685,23,740,21,"targetEnemy"],[685,34,740,32],[685,35,740,33,"id"],[685,37,740,35],[686,8,741,6,"damage"],[686,14,741,12],[686,16,741,14,"damage"],[686,22,741,20],[687,8,742,6,"startTime"],[687,17,742,15],[687,19,742,17,"Date"],[687,23,742,21],[687,24,742,22,"now"],[687,27,742,25],[687,28,742,26],[687,29,742,27],[688,8,743,6,"duration"],[688,16,743,14],[688,18,743,16],[688,21,743,19],[689,8,743,21],[690,8,744,6],[691,8,745,6,"abilityId"],[691,17,745,15],[691,19,745,17,"abilityInfo"],[691,30,745,28],[691,32,745,30,"id"],[691,34,745,32],[691,38,745,36],[691,54,745,52],[692,8,746,6,"abilityName"],[692,19,746,17],[692,21,746,19,"abilityInfo"],[692,32,746,30],[692,34,746,32,"name"],[692,38,746,36],[692,42,746,40],[692,58,746,56],[693,8,747,6,"abilityIcon"],[693,19,747,17],[693,21,747,19,"abilityInfo"],[693,32,747,30],[693,34,747,32,"icon"],[693,38,747,36],[693,42,747,40],[693,46,747,44],[694,8,747,46],[695,8,748,6],[696,8,749,6,"isAOE"],[696,13,749,11],[696,15,749,13,"isAOE"],[696,20,749,18],[696,24,749,22],[696,29,749,27],[697,8,750,6,"aoeRadius"],[697,17,750,15],[697,19,750,17,"aoeRadius"],[697,28,750,26],[697,32,750,30],[698,6,751,4],[698,7,751,5],[699,6,753,4,"console"],[699,13,753,11],[699,14,753,12,"log"],[699,17,753,15],[699,18,753,16],[699,44,753,42,"abilityInfo"],[699,55,753,53],[699,57,753,55,"name"],[699,61,753,59],[699,65,753,63],[699,81,753,79],[699,101,753,99,"projectileId"],[699,113,753,111],[699,128,753,126,"targetEnemy"],[699,139,753,137],[699,140,753,138,"name"],[699,144,753,142],[699,152,753,150,"damage"],[699,158,753,156],[699,167,753,165],[699,168,753,166],[700,6,754,4,"console"],[700,13,754,11],[700,14,754,12,"log"],[700,17,754,15],[700,18,754,16],[700,48,754,46,"isAOE"],[700,53,754,51],[700,68,754,66,"aoeRadius"],[700,77,754,75],[700,89,754,87,"damage"],[700,95,754,93],[700,97,754,95],[700,98,754,96],[701,6,756,4,"console"],[701,13,756,11],[701,14,756,12,"log"],[701,17,756,15],[701,18,756,16],[701,53,756,51,"targetEnemy"],[701,64,756,62],[701,65,756,63,"id"],[701,67,756,65],[701,75,756,73,"damage"],[701,81,756,79],[701,90,756,88],[701,91,756,89],[702,6,757,4,"console"],[702,13,757,11],[702,14,757,12,"log"],[702,17,757,15],[702,18,757,16],[702,53,757,51,"ninjaX"],[702,59,757,57],[702,64,757,62,"ninjaY"],[702,70,757,68],[702,87,757,85,"projectile"],[702,97,757,95],[702,98,757,96,"targetX"],[702,105,757,103],[702,110,757,108,"projectile"],[702,120,757,118],[702,121,757,119,"targetY"],[702,128,757,126],[702,131,757,129],[702,132,757,130],[703,6,759,4,"setProjectiles"],[703,20,759,18],[703,21,759,19,"prev"],[703,25,759,23],[703,29,759,27],[703,30,759,28],[703,33,759,31,"prev"],[703,37,759,35],[703,39,759,37,"projectile"],[703,49,759,47],[703,50,759,48],[703,51,759,49],[705,6,761,4],[706,6,762,4,"setTimeout"],[706,16,762,14],[706,17,762,15],[706,23,762,21],[707,8,763,6,"handleProjectileHit"],[707,27,763,25],[707,28,763,26,"projectile"],[707,38,763,36],[707,39,763,37],[708,6,764,4],[708,7,764,5],[708,9,764,7],[708,12,764,10],[708,13,764,11],[709,6,766,4],[709,13,766,11,"projectile"],[709,23,766,21],[710,4,767,2],[710,5,767,3],[712,4,769,2],[713,4,770,2],[713,8,770,8,"spawnTestEnemy"],[713,22,770,22],[713,25,770,26,"state"],[713,30,770,44],[713,34,770,49],[714,6,771,4,"console"],[714,13,771,11],[714,14,771,12,"log"],[714,17,771,15],[714,18,771,16],[714,83,771,81],[714,84,771,82],[716,6,773,4],[717,6,774,4],[717,10,774,10,"zoneEnemy"],[717,19,774,19],[717,22,774,22,"spawnZoneEnemy"],[717,36,774,36],[717,37,774,37],[717,38,774,38],[718,6,775,4],[718,10,775,8],[718,11,775,9,"zoneEnemy"],[718,20,775,18],[718,22,775,20],[719,8,776,6,"console"],[719,15,776,13],[719,16,776,14,"log"],[719,19,776,17],[719,20,776,18],[719,76,776,74],[719,77,776,75],[720,8,777,6],[721,8,778,6,"spawnBasicTestEnemy"],[721,27,778,25],[721,28,778,26,"state"],[721,33,778,31],[721,34,778,32],[722,8,779,6],[723,6,780,4],[724,6,782,4,"console"],[724,13,782,11],[724,14,782,12,"log"],[724,17,782,15],[724,18,782,16],[724,44,782,42,"zoneEnemy"],[724,53,782,51],[724,54,782,52,"name"],[724,58,782,56],[724,63,782,61,"zoneEnemy"],[724,72,782,70],[724,73,782,71,"typeId"],[724,79,782,77],[724,94,782,92,"currentZone"],[724,105,782,103],[724,107,782,105,"id"],[724,109,782,107],[724,119,782,117,"currentZoneLevel"],[724,135,782,133],[724,137,782,135,"level"],[724,142,782,140],[724,144,782,142],[724,145,782,143],[726,6,784,4],[727,6,785,4],[727,10,785,10,"combatEnemy"],[727,21,785,34],[727,24,785,37],[728,8,786,6,"id"],[728,10,786,8],[728,12,786,10,"zoneEnemy"],[728,21,786,19],[728,22,786,20,"id"],[728,24,786,22],[729,8,787,6,"name"],[729,12,787,10],[729,14,787,12,"zoneEnemy"],[729,23,787,21],[729,24,787,22,"name"],[729,28,787,26],[730,8,788,6,"health"],[730,14,788,12],[730,16,788,14,"zoneEnemy"],[730,25,788,23],[730,26,788,24,"hp"],[730,28,788,26],[731,8,789,6,"maxHealth"],[731,17,789,15],[731,19,789,17,"zoneEnemy"],[731,28,789,26],[731,29,789,27,"maxHP"],[731,34,789,32],[732,8,790,6,"stats"],[732,13,790,11],[732,15,790,13],[733,10,791,8,"attack"],[733,16,791,14],[733,18,791,16,"zoneEnemy"],[733,27,791,25],[733,28,791,26,"attack"],[733,34,791,32],[734,10,792,8,"defense"],[734,17,792,15],[734,19,792,17],[734,21,792,19],[735,10,792,21],[736,10,793,8,"health"],[736,16,793,14],[736,18,793,16,"zoneEnemy"],[736,27,793,25],[736,28,793,26,"hp"],[736,30,793,28],[737,10,794,8,"maxHealth"],[737,19,794,17],[737,21,794,19,"zoneEnemy"],[737,30,794,28],[737,31,794,29,"maxHP"],[737,36,794,34],[738,10,795,8,"critChance"],[738,20,795,18],[738,22,795,20],[738,23,795,21],[739,10,796,8,"critDamage"],[739,20,796,18],[739,22,796,20],[739,25,796,23],[740,10,797,8,"cooldownReduction"],[740,27,797,25],[740,29,797,27],[741,8,798,6],[741,9,798,7],[742,8,799,6,"position"],[742,16,799,14],[742,18,799,16,"zoneEnemy"],[742,27,799,25],[742,28,799,26,"position"],[742,36,799,34],[743,8,800,6,"lastDamaged"],[743,19,800,17],[743,21,800,19],[743,22,800,20],[744,8,801,6],[745,8,802,6,"zoneTypeId"],[745,18,802,16],[745,20,802,18,"zoneEnemy"],[745,29,802,27],[745,30,802,28,"typeId"],[745,36,802,34],[746,8,803,6,"zoneXP"],[746,14,803,12],[746,16,803,14,"zoneEnemy"],[746,25,803,23],[746,26,803,24,"xp"],[747,6,804,4],[747,7,804,5],[748,6,806,4,"console"],[748,13,806,11],[748,14,806,12,"log"],[748,17,806,15],[748,18,806,16],[748,42,806,40,"combatEnemy"],[748,53,806,51],[748,54,806,52,"name"],[748,58,806,56],[748,67,806,65,"combatEnemy"],[748,78,806,76],[748,79,806,77,"health"],[748,85,806,83],[748,100,806,98,"currentZone"],[748,111,806,109],[748,113,806,111,"id"],[748,115,806,113],[748,125,806,123,"currentZoneLevel"],[748,141,806,139],[748,143,806,141,"level"],[748,148,806,146],[748,150,806,148],[748,151,806,149],[749,6,807,4,"state"],[749,11,807,9],[749,12,807,10,"enemies"],[749,19,807,17],[749,20,807,18,"push"],[749,24,807,22],[749,25,807,23,"combatEnemy"],[749,36,807,34],[749,37,807,35],[750,4,808,2],[750,5,808,3],[752,4,810,2],[753,4,811,2],[753,8,811,8,"spawnBasicTestEnemy"],[753,27,811,27],[753,30,811,31,"state"],[753,35,811,49],[753,39,811,54],[754,6,812,4],[754,10,812,10,"SCREEN_WIDTH"],[754,22,812,22],[754,25,812,25],[754,28,812,28],[755,6,813,4],[755,10,813,10,"GAME_AREA_HEIGHT"],[755,26,813,26],[755,29,813,29],[755,32,813,32],[755,35,813,35],[755,38,813,38],[756,6,814,4],[756,10,814,10,"ENEMY_SIZE"],[756,20,814,20],[756,23,814,23],[756,25,814,25],[757,6,816,4],[757,10,816,10,"x"],[757,11,816,11],[757,14,816,14,"Math"],[757,18,816,18],[757,19,816,19,"random"],[757,25,816,25],[757,26,816,26],[757,27,816,27],[757,31,816,31,"SCREEN_WIDTH"],[757,43,816,43],[757,46,816,46,"ENEMY_SIZE"],[757,56,816,56],[757,59,816,59],[757,60,816,60],[757,61,816,61],[757,64,816,64,"ENEMY_SIZE"],[757,74,816,74],[758,6,817,4],[758,10,817,10,"y"],[758,11,817,11],[758,14,817,14,"Math"],[758,18,817,18],[758,19,817,19,"random"],[758,25,817,25],[758,26,817,26],[758,27,817,27],[758,31,817,31,"GAME_AREA_HEIGHT"],[758,47,817,47],[758,50,817,50,"ENEMY_SIZE"],[758,60,817,60],[758,63,817,63],[758,64,817,64],[758,65,817,65],[758,68,817,68,"ENEMY_SIZE"],[758,78,817,78],[759,6,819,4],[759,10,819,10,"enemy"],[759,15,819,28],[759,18,819,31],[760,8,820,6,"id"],[760,10,820,8],[760,12,820,10],[760,30,820,28,"Date"],[760,34,820,32],[760,35,820,33,"now"],[760,38,820,36],[760,39,820,37],[760,40,820,38],[760,44,820,42,"Math"],[760,48,820,46],[760,49,820,47,"random"],[760,55,820,53],[760,56,820,54],[760,57,820,55],[760,59,820,57],[761,8,821,6,"name"],[761,12,821,10],[761,14,821,12],[761,26,821,24,"Math"],[761,30,821,28],[761,31,821,29,"floor"],[761,36,821,34],[761,37,821,35,"Math"],[761,41,821,39],[761,42,821,40,"random"],[761,48,821,46],[761,49,821,47],[761,50,821,48],[761,53,821,51],[761,56,821,54],[761,57,821,55],[761,59,821,57],[762,8,822,6,"health"],[762,14,822,12],[762,16,822,14],[762,18,822,16],[763,8,823,6,"maxHealth"],[763,17,823,15],[763,19,823,17],[763,21,823,19],[764,8,824,6,"stats"],[764,13,824,11],[764,15,824,13],[765,10,825,8,"attack"],[765,16,825,14],[765,18,825,16],[765,20,825,18],[766,10,826,8,"defense"],[766,17,826,15],[766,19,826,17],[766,21,826,19],[767,10,827,8,"health"],[767,16,827,14],[767,18,827,16],[767,20,827,18],[768,10,828,8,"maxHealth"],[768,19,828,17],[768,21,828,19],[768,23,828,21],[769,10,829,8,"critChance"],[769,20,829,18],[769,22,829,20],[769,23,829,21],[770,10,830,8,"critDamage"],[770,20,830,18],[770,22,830,20],[770,25,830,23],[771,10,831,8,"cooldownReduction"],[771,27,831,25],[771,29,831,27],[772,8,832,6],[772,9,832,7],[773,8,833,6,"position"],[773,16,833,14],[773,18,833,16],[774,10,833,18,"x"],[774,11,833,19],[775,10,833,21,"y"],[776,8,833,23],[776,9,833,24],[777,8,834,6,"lastDamaged"],[777,19,834,17],[777,21,834,19],[778,6,835,4],[778,7,835,5],[779,6,837,4,"console"],[779,13,837,11],[779,14,837,12,"log"],[779,17,837,15],[779,18,837,16],[779,42,837,40,"enemy"],[779,47,837,45],[779,48,837,46,"name"],[779,52,837,50],[779,60,837,58,"Math"],[779,64,837,62],[779,65,837,63,"round"],[779,70,837,68],[779,71,837,69,"x"],[779,72,837,70],[779,73,837,71],[779,78,837,76,"Math"],[779,82,837,80],[779,83,837,81,"round"],[779,88,837,86],[779,89,837,87,"y"],[779,90,837,88],[779,91,837,89],[779,94,837,92],[779,95,837,93],[780,6,838,4,"state"],[780,11,838,9],[780,12,838,10,"enemies"],[780,19,838,17],[780,20,838,18,"push"],[780,24,838,22],[780,25,838,23,"enemy"],[780,30,838,28],[780,31,838,29],[781,4,839,2],[781,5,839,3],[783,4,841,2],[784,4,842,2],[784,8,842,8,"startCombat"],[784,19,842,19],[784,22,842,22,"React"],[784,27,842,27],[784,28,842,27,"default"],[784,35,842,27],[784,36,842,28,"useCallback"],[784,47,842,39],[784,48,842,40],[784,54,842,46],[785,6,843,4,"console"],[785,13,843,11],[785,14,843,12,"log"],[785,17,843,15],[785,18,843,16],[785,63,843,61],[785,64,843,62],[786,6,844,4,"setCombatState"],[786,20,844,18],[786,21,844,19,"prev"],[786,25,844,23],[786,30,844,28],[787,8,844,30],[787,11,844,33,"prev"],[787,15,844,37],[788,8,844,39,"isInCombat"],[788,18,844,49],[788,20,844,51],[789,6,844,56],[789,7,844,57],[789,8,844,58],[789,9,844,59],[791,6,846,4],[792,6,847,4,"combatEngine"],[792,25,847,16],[792,26,847,16,"combatEngine"],[792,38,847,16],[792,39,847,17,"addTickCallback"],[792,54,847,32],[792,55,847,33,"handleCombatTick"],[792,71,847,49],[792,72,847,50],[793,6,848,4,"console"],[793,13,848,11],[793,14,848,12,"log"],[793,17,848,15],[793,18,848,16],[793,62,848,60],[793,63,848,61],[795,6,850,4],[796,6,851,4,"combatEngine"],[796,25,851,16],[796,26,851,16,"combatEngine"],[796,38,851,16],[796,39,851,17,"start"],[796,44,851,22],[796,45,851,23],[796,46,851,24],[797,4,852,2],[797,5,852,3],[797,7,852,5],[797,8,852,6,"combatEngine"],[797,27,852,18],[797,28,852,18,"combatEngine"],[797,40,852,18],[797,42,852,20,"handleCombatTick"],[797,58,852,36],[797,59,852,37],[797,60,852,38],[799,4,854,2],[800,4,855,2],[800,8,855,8,"stopCombat"],[800,18,855,18],[800,21,855,21,"React"],[800,26,855,26],[800,27,855,26,"default"],[800,34,855,26],[800,35,855,27,"useCallback"],[800,46,855,38],[800,47,855,39],[800,53,855,45],[801,6,856,4,"setCombatState"],[801,20,856,18],[801,21,856,19,"prev"],[801,25,856,23],[801,30,856,28],[802,8,856,30],[802,11,856,33,"prev"],[802,15,856,37],[803,8,856,39,"isInCombat"],[803,18,856,49],[803,20,856,51],[804,6,856,57],[804,7,856,58],[804,8,856,59],[804,9,856,60],[805,6,857,4,"combatEngine"],[805,25,857,16],[805,26,857,16,"combatEngine"],[805,38,857,16],[805,39,857,17,"removeTickCallback"],[805,57,857,35],[805,58,857,36,"handleCombatTick"],[805,74,857,52],[805,75,857,53],[806,4,858,2],[806,5,858,3],[806,7,858,5],[806,8,858,6,"combatEngine"],[806,27,858,18],[806,28,858,18,"combatEngine"],[806,40,858,18],[806,42,858,20,"handleCombatTick"],[806,58,858,36],[806,59,858,37],[806,60,858,38],[808,4,860,2],[809,4,861,2],[809,8,861,8,"equipAbility"],[809,20,861,20],[809,23,861,23,"equipAbility"],[809,24,861,24,"abilityId"],[809,33,861,41],[809,35,861,43,"slotIndex"],[809,44,861,60],[809,49,861,74],[810,6,862,4],[810,13,862,11,"combatState"],[810,24,862,22],[810,25,862,23,"abilityManager"],[810,39,862,37],[810,40,862,38,"equipAbility"],[810,52,862,50],[810,53,862,51,"abilityId"],[810,62,862,60],[810,64,862,62,"slotIndex"],[810,73,862,71],[810,74,862,72],[811,4,863,2],[811,5,863,3],[812,4,865,2],[812,8,865,8,"getDeck"],[812,15,865,15],[812,18,865,18,"getDeck"],[812,19,865,18],[812,24,865,24],[813,6,866,4],[813,13,866,11,"combatState"],[813,24,866,22],[813,25,866,23,"abilityManager"],[813,39,866,37],[813,40,866,38,"getDeck"],[813,47,866,45],[813,48,866,46],[813,49,866,47],[814,4,867,2],[814,5,867,3],[815,4,869,2],[815,8,869,8,"getAvailableAbilities"],[815,29,869,29],[815,32,869,32,"getAvailableAbilities"],[815,33,869,32],[815,38,869,38],[816,6,870,4],[816,13,870,11,"combatState"],[816,24,870,22],[816,25,870,23,"abilityManager"],[816,39,870,37],[816,40,870,38,"getAvailableAbilities"],[816,61,870,59],[816,62,870,60],[816,63,870,61],[817,4,871,2],[817,5,871,3],[818,4,873,2],[818,8,873,8,"upgradeAbility"],[818,22,873,22],[818,25,873,26,"abilityId"],[818,34,873,43],[818,38,873,57],[819,6,874,4],[819,13,874,11,"combatState"],[819,24,874,22],[819,25,874,23,"abilityManager"],[819,39,874,37],[819,40,874,38,"upgradeAbility"],[819,54,874,52],[819,55,874,53,"abilityId"],[819,64,874,62],[819,65,874,63],[820,4,875,2],[820,5,875,3],[822,4,877,2],[823,4,878,2],[823,8,878,8,"clearAllEnemies"],[823,23,878,23],[823,26,878,26,"clearAllEnemies"],[823,27,878,26],[823,32,878,32],[824,6,879,4,"console"],[824,13,879,11],[824,14,879,12,"log"],[824,17,879,15],[824,18,879,16],[824,67,879,65],[824,68,879,66],[825,6,880,4,"setCombatState"],[825,20,880,18],[825,21,880,19,"prev"],[825,25,880,23],[825,30,880,28],[826,8,881,6],[826,11,881,9,"prev"],[826,15,881,13],[827,8,882,6,"enemies"],[827,15,882,13],[827,17,882,15],[828,6,883,4],[828,7,883,5],[828,8,883,6],[828,9,883,7],[829,4,884,2],[829,5,884,3],[831,4,886,2],[832,4,887,2],[832,8,887,8,"triggerLevelUpExplosion"],[832,31,887,31],[832,34,887,34,"triggerLevelUpExplosion"],[832,35,887,34],[832,40,887,40],[833,6,888,4,"console"],[833,13,888,11],[833,14,888,12,"log"],[833,17,888,15],[833,18,888,16],[833,70,888,68],[833,71,888,69],[834,6,890,4],[834,10,890,10,"explosionTime"],[834,23,890,23],[834,26,890,26,"Date"],[834,30,890,30],[834,31,890,31,"now"],[834,34,890,34],[834,35,890,35],[834,36,890,36],[835,6,891,4,"setLastExplosionTime"],[835,26,891,24],[835,27,891,25,"explosionTime"],[835,40,891,38],[835,41,891,39],[836,6,893,4,"setCombatState"],[836,20,893,18],[836,21,893,19,"prev"],[836,25,893,23],[836,29,893,27],[837,8,894,6],[838,8,895,6],[838,12,895,12,"enemyCount"],[838,22,895,22],[838,25,895,25,"prev"],[838,29,895,29],[838,30,895,30,"enemies"],[838,37,895,37],[838,38,895,38,"length"],[838,44,895,44],[839,8,896,6],[839,12,896,12,"explosionXP"],[839,23,896,23],[839,26,896,26,"enemyCount"],[839,36,896,36],[839,39,896,39],[839,43,896,43],[839,44,896,44],[839,45,896,45],[840,8,897,6],[840,12,897,12,"explosionGold"],[840,25,897,25],[840,28,897,28,"enemyCount"],[840,38,897,38],[840,41,897,41],[840,44,897,44],[840,45,897,45],[840,46,897,46],[842,8,899,6,"console"],[842,15,899,13],[842,16,899,14,"log"],[842,19,899,17],[842,20,899,18],[842,44,899,42,"enemyCount"],[842,54,899,52],[842,76,899,74,"explosionXP"],[842,87,899,85],[842,98,899,96,"explosionGold"],[842,111,899,109],[842,118,899,116],[842,119,899,117],[844,8,901,6],[845,8,902,6],[845,12,902,10,"explosionXP"],[845,23,902,21],[845,26,902,24],[845,27,902,25],[845,29,902,27],[846,10,903,8,"setTimeout"],[846,20,903,18],[846,21,903,19],[846,27,903,25],[847,12,904,10,"game"],[847,16,904,14],[847,17,904,15,"updateNinja"],[847,28,904,26],[847,29,904,28,"ninja"],[847,34,904,33],[847,39,904,39],[848,14,905,12,"experience"],[848,24,905,22],[848,26,905,24,"ninja"],[848,31,905,29],[848,32,905,30,"experience"],[848,42,905,40],[848,45,905,43,"explosionXP"],[848,56,905,54],[849,14,906,12,"gold"],[849,18,906,16],[849,20,906,18,"ninja"],[849,25,906,23],[849,26,906,24,"gold"],[849,30,906,28],[849,33,906,31,"explosionGold"],[850,12,907,10],[850,13,907,11],[850,14,907,12],[850,15,907,13],[851,10,908,8],[851,11,908,9],[851,13,908,11],[851,14,908,12],[851,15,908,13],[851,16,908,14],[851,17,908,15],[852,8,909,6],[854,8,911,6],[855,8,912,6],[856,8,913,6],[856,12,913,12,"damagedEnemies"],[856,26,913,26],[856,29,913,29,"prev"],[856,33,913,33],[856,34,913,34,"enemies"],[856,41,913,41],[856,42,913,42,"map"],[856,45,913,45],[856,46,913,46,"enemy"],[856,51,913,51],[856,56,913,56],[857,10,914,8],[857,13,914,11,"enemy"],[857,18,914,16],[858,10,915,8,"health"],[858,16,915,14],[858,18,915,16],[858,19,915,17],[859,10,915,19],[860,10,916,8,"lastDamaged"],[860,21,916,19],[860,23,916,21,"combatEngine"],[860,42,916,33],[860,43,916,33,"combatEngine"],[860,55,916,33],[860,56,916,34,"getCurrentTick"],[860,70,916,48],[860,71,916,49],[861,8,917,6],[861,9,917,7],[861,10,917,8],[861,11,917,9],[862,8,919,6],[862,15,919,13],[863,10,920,8],[863,13,920,11,"prev"],[863,17,920,15],[864,10,921,8,"enemies"],[864,17,921,15],[864,19,921,17,"damagedEnemies"],[865,8,922,6],[865,9,922,7],[866,6,923,4],[866,7,923,5],[866,8,923,6],[867,4,924,2],[867,5,924,3],[869,4,926,2],[870,4,927,2],[870,8,927,8,"spawnEnemy"],[870,18,927,18],[870,21,927,22,"position"],[870,29,927,57],[870,33,927,75],[871,6,928,4],[871,10,928,10,"SCREEN_WIDTH"],[871,22,928,22],[871,25,928,25],[871,28,928,28],[872,6,929,4],[872,10,929,10,"GAME_AREA_HEIGHT"],[872,26,929,26],[872,29,929,29],[872,32,929,32],[872,35,929,35],[872,38,929,38],[872,39,929,39],[872,40,929,40],[873,6,930,4],[873,10,930,10,"ENEMY_SIZE"],[873,20,930,20],[873,23,930,23],[873,25,930,25],[875,6,932,4],[876,6,933,4],[876,10,933,10,"x"],[876,11,933,11],[876,14,933,14,"position"],[876,22,933,22],[876,24,933,24,"x"],[876,25,933,25],[876,29,933,29,"Math"],[876,33,933,33],[876,34,933,34,"random"],[876,40,933,40],[876,41,933,41],[876,42,933,42],[876,46,933,46,"SCREEN_WIDTH"],[876,58,933,58],[876,61,933,61,"ENEMY_SIZE"],[876,71,933,71],[876,74,933,74],[876,75,933,75],[876,76,933,76],[876,79,933,79,"ENEMY_SIZE"],[876,89,933,89],[877,6,934,4],[877,10,934,10,"y"],[877,11,934,11],[877,14,934,14,"position"],[877,22,934,22],[877,24,934,24,"y"],[877,25,934,25],[877,29,934,29,"Math"],[877,33,934,33],[877,34,934,34,"random"],[877,40,934,40],[877,41,934,41],[877,42,934,42],[877,46,934,46,"GAME_AREA_HEIGHT"],[877,62,934,62],[877,65,934,65,"ENEMY_SIZE"],[877,75,934,75],[877,78,934,78],[877,79,934,79],[877,80,934,80],[877,83,934,83,"ENEMY_SIZE"],[877,93,934,93],[878,6,936,4],[878,10,936,10,"enemy"],[878,15,936,28],[878,18,936,31],[879,8,937,6,"id"],[879,10,937,8],[879,12,937,10],[879,21,937,19],[879,23,937,21,"enemyCounter"],[879,35,937,33],[879,37,937,35],[880,8,938,6,"name"],[880,12,938,10],[880,14,938,12],[880,24,938,22],[881,8,939,6,"health"],[881,14,939,12],[881,16,939,14],[881,19,939,17],[882,8,940,6,"maxHealth"],[882,17,940,15],[882,19,940,17],[882,22,940,20],[883,8,941,6,"stats"],[883,13,941,11],[883,15,941,13],[884,10,942,8,"attack"],[884,16,942,14],[884,18,942,16],[884,20,942,18],[885,10,943,8,"defense"],[885,17,943,15],[885,19,943,17],[885,21,943,19],[886,10,944,8,"health"],[886,16,944,14],[886,18,944,16],[886,21,944,19],[887,10,945,8,"maxHealth"],[887,19,945,17],[887,21,945,19],[887,24,945,22],[888,10,946,8,"critChance"],[888,20,946,18],[888,22,946,20],[888,23,946,21],[889,10,947,8,"critDamage"],[889,20,947,18],[889,22,947,20],[889,25,947,23],[890,10,948,8,"cooldownReduction"],[890,27,948,25],[890,29,948,27],[891,8,949,6],[891,9,949,7],[892,8,950,6,"position"],[892,16,950,14],[892,18,950,16],[893,10,950,18,"x"],[893,11,950,19],[894,10,950,21,"y"],[895,8,950,23],[895,9,950,24],[896,8,951,6,"lastDamaged"],[896,19,951,17],[896,21,951,19],[897,6,952,4],[897,7,952,5],[898,6,954,4,"setCombatState"],[898,20,954,18],[898,21,954,19,"prev"],[898,25,954,23],[898,30,954,28],[899,8,955,6],[899,11,955,9,"prev"],[899,15,955,13],[900,8,956,6,"enemies"],[900,15,956,13],[900,17,956,15],[900,18,956,16],[900,21,956,19,"prev"],[900,25,956,23],[900,26,956,24,"enemies"],[900,33,956,31],[900,35,956,33,"enemy"],[900,40,956,38],[901,6,957,4],[901,7,957,5],[901,8,957,6],[901,9,957,7],[902,6,959,4],[902,13,959,11,"enemy"],[902,18,959,16],[903,4,960,2],[903,5,960,3],[905,4,962,2],[906,4,963,2],[906,8,963,8,"spawnBoss"],[906,17,963,17],[906,20,963,21,"bossEnemy"],[906,29,963,43],[906,33,963,48],[907,6,964,4,"console"],[907,13,964,11],[907,14,964,12,"log"],[907,17,964,15],[907,18,964,16],[907,39,964,37,"bossEnemy"],[907,48,964,46],[907,49,964,47,"name"],[907,53,964,51],[907,90,964,88],[907,91,964,89],[908,6,965,4,"setCombatState"],[908,20,965,18],[908,21,965,19,"prev"],[908,25,965,23],[908,30,965,28],[909,8,966,6],[909,11,966,9,"prev"],[909,15,966,13],[910,8,967,6,"enemies"],[910,15,967,13],[910,17,967,15],[910,18,967,16,"bossEnemy"],[910,27,967,25],[910,28,967,26],[910,29,967,27],[911,6,968,4],[911,7,968,5],[911,8,968,6],[911,9,968,7],[912,4,969,2],[912,5,969,3],[914,4,971,2],[915,4,972,2],[915,8,972,8,"clearSpecificEnemy"],[915,26,972,26],[915,29,972,30,"enemyId"],[915,36,972,45],[915,40,972,50],[916,6,973,4,"setCombatState"],[916,20,973,18],[916,21,973,19,"prev"],[916,25,973,23],[916,30,973,28],[917,8,974,6],[917,11,974,9,"prev"],[917,15,974,13],[918,8,975,6,"enemies"],[918,15,975,13],[918,17,975,15,"prev"],[918,21,975,19],[918,22,975,20,"enemies"],[918,29,975,27],[918,30,975,28,"filter"],[918,36,975,34],[918,37,975,35,"enemy"],[918,42,975,40],[918,46,975,44,"enemy"],[918,51,975,49],[918,52,975,50,"id"],[918,54,975,52],[918,59,975,57,"enemyId"],[918,66,975,64],[919,6,976,4],[919,7,976,5],[919,8,976,6],[919,9,976,7],[920,4,977,2],[920,5,977,3],[922,4,979,2],[923,4,980,2],[923,8,980,8,"useAbilityManually"],[923,26,980,26],[923,29,980,26,"_s3"],[923,32,980,26],[923,33,980,29],[923,37,980,29,"useCallback"],[923,43,980,40],[923,44,980,40,"useCallback"],[923,55,980,40],[923,57,980,40,"_s3"],[923,60,980,40],[923,61,980,42,"slotIndex"],[923,70,980,59],[923,74,980,73],[924,6,980,73,"_s3"],[924,9,980,73],[925,6,981,4,"console"],[925,13,981,11],[925,14,981,12,"log"],[925,17,981,15],[925,18,981,16],[925,64,981,62,"slotIndex"],[925,73,981,71],[925,82,981,80],[925,83,981,81],[926,6,982,4,"console"],[926,13,982,11],[926,14,982,12,"log"],[926,17,982,15],[926,18,982,16],[926,65,982,63,"slotIndex"],[926,74,982,72],[926,76,982,74],[926,77,982,75],[927,6,983,4,"console"],[927,13,983,11],[927,14,983,12,"log"],[927,17,983,15],[927,18,983,16],[927,53,983,51,"slotIndex"],[927,62,983,60],[927,64,983,62],[927,65,983,63],[929,6,985,4],[930,6,986,4],[930,10,986,8],[930,11,986,9,"game"],[930,15,986,13],[930,16,986,14,"gameState"],[930,25,986,23],[930,26,986,24,"isAlive"],[930,33,986,31],[930,35,986,33],[931,8,987,6,"console"],[931,15,987,13],[931,16,987,14,"log"],[931,19,987,17],[931,20,987,18],[931,70,987,68],[931,71,987,69],[932,8,988,6],[932,15,988,13],[932,20,988,18],[933,6,989,4],[935,6,991,4],[936,6,992,4],[936,10,992,10,"isReady"],[936,17,992,17],[936,20,992,20,"combatState"],[936,31,992,31],[936,32,992,32,"abilityManager"],[936,46,992,46],[936,47,992,47,"isAbilityReady"],[936,61,992,61],[936,62,992,62,"slotIndex"],[936,71,992,71],[936,72,992,72],[937,6,993,4],[937,10,993,8],[937,11,993,9,"isReady"],[937,18,993,16],[937,20,993,18],[938,8,994,6,"console"],[938,15,994,13],[938,16,994,14,"log"],[938,19,994,17],[938,20,994,18],[938,41,994,39,"slotIndex"],[938,50,994,48],[938,85,994,83],[938,86,994,84],[939,8,995,6],[939,15,995,13],[939,20,995,18],[940,6,996,4],[942,6,998,4],[943,6,999,4],[943,10,999,8,"combatState"],[943,21,999,19],[943,22,999,20,"enemies"],[943,29,999,27],[943,30,999,28,"length"],[943,36,999,34],[943,41,999,39],[943,42,999,40],[943,44,999,42],[944,8,1000,6,"console"],[944,15,1000,13],[944,16,1000,14,"log"],[944,19,1000,17],[944,20,1000,18],[944,69,1000,67],[944,70,1000,68],[945,8,1001,6],[945,15,1001,13],[945,20,1001,18],[946,6,1002,4],[948,6,1004,4],[949,6,1005,4],[949,10,1005,10,"currentTick"],[949,21,1005,21],[949,24,1005,24,"combatEngine"],[949,43,1005,36],[949,44,1005,36,"combatEngine"],[949,56,1005,36],[949,57,1005,37,"getCurrentTick"],[949,71,1005,51],[949,72,1005,52],[949,73,1005,53],[950,6,1006,4],[950,10,1006,10,"success"],[950,17,1006,17],[950,20,1006,20,"combatState"],[950,31,1006,31],[950,32,1006,32,"abilityManager"],[950,46,1006,46],[950,47,1006,47,"useAbility"],[950,57,1006,57],[950,58,1006,58,"slotIndex"],[950,67,1006,67],[950,69,1006,69,"currentTick"],[950,80,1006,80],[950,81,1006,81],[951,6,1008,4],[951,10,1008,8,"success"],[951,17,1008,15],[951,19,1008,17],[952,8,1009,6],[953,8,1010,6,"setCombatState"],[953,22,1010,20],[953,23,1010,21,"prev"],[953,27,1010,25],[953,31,1010,29],[954,10,1011,8],[954,14,1011,14,"newState"],[954,22,1011,22],[954,25,1011,25],[955,12,1011,27],[955,15,1011,30,"prev"],[956,10,1011,35],[956,11,1011,36],[957,10,1012,8,"castAbility"],[957,21,1012,19],[957,22,1012,20,"newState"],[957,30,1012,28],[957,32,1012,30,"slotIndex"],[957,41,1012,39],[957,42,1012,40],[958,10,1013,8],[958,17,1013,15,"newState"],[958,25,1013,23],[959,8,1014,6],[959,9,1014,7],[959,10,1014,8],[960,8,1016,6,"console"],[960,15,1016,13],[960,16,1016,14,"log"],[960,19,1016,17],[960,20,1016,18],[960,65,1016,63,"slotIndex"],[960,74,1016,72],[960,76,1016,74],[960,77,1016,75],[961,8,1017,6],[961,15,1017,13],[961,19,1017,17],[962,6,1018,4],[962,7,1018,5],[962,13,1018,11],[963,8,1019,6,"console"],[963,15,1019,13],[963,16,1019,14,"log"],[963,19,1019,17],[963,20,1019,18],[963,61,1019,59,"slotIndex"],[963,70,1019,68],[963,72,1019,70],[963,73,1019,71],[964,8,1020,6],[964,15,1020,13],[964,20,1020,18],[965,6,1021,4],[966,4,1022,2],[966,5,1022,3],[966,46,1022,5],[966,47,1022,6,"combatState"],[966,58,1022,17],[966,59,1022,18,"abilityManager"],[966,73,1022,32],[966,75,1022,34,"combatState"],[966,86,1022,45],[966,87,1022,46,"enemies"],[966,94,1022,53],[966,95,1022,54],[966,96,1022,55],[967,4,1023,2],[967,8,1023,2,"useEffect"],[967,14,1023,11],[967,15,1023,11,"useEffect"],[967,24,1023,11],[967,26,1023,12],[967,32,1023,18],[968,6,1024,4,"combatEngine"],[968,25,1024,16],[968,26,1024,16,"combatEngine"],[968,38,1024,16],[968,39,1024,17,"start"],[968,44,1024,22],[968,45,1024,23],[968,46,1024,24],[970,6,1026,4],[971,6,1027,4],[972,6,1028,4,"console"],[972,13,1028,11],[972,14,1028,12,"log"],[972,17,1028,15],[972,18,1028,16],[972,97,1028,95],[972,98,1028,96],[973,6,1030,4],[973,13,1030,11],[973,19,1030,17],[974,8,1031,6,"combatEngine"],[974,27,1031,18],[974,28,1031,18,"combatEngine"],[974,40,1031,18],[974,41,1031,19,"stop"],[974,45,1031,23],[974,46,1031,24],[974,47,1031,25],[975,6,1032,4],[975,7,1032,5],[976,4,1033,2],[976,5,1033,3],[976,7,1033,5],[976,9,1033,7],[976,10,1033,8],[978,4,1035,2],[979,4,1036,2],[979,8,1036,2,"useEffect"],[979,14,1036,11],[979,15,1036,11,"useEffect"],[979,24,1036,11],[979,26,1036,12],[979,32,1036,18],[980,6,1037,4],[980,10,1037,10,"processProjectileImpacts"],[980,34,1037,34],[980,37,1037,37,"processProjectileImpacts"],[980,38,1037,37],[980,43,1037,43],[981,8,1038,6,"setProjectiles"],[981,22,1038,20],[981,23,1038,21,"currentProjectiles"],[981,41,1038,39],[981,45,1038,43],[982,10,1039,8],[982,17,1039,15,"currentProjectiles"],[982,35,1039,33],[982,36,1039,34,"map"],[982,39,1039,37],[982,40,1039,38,"projectile"],[982,50,1039,48],[982,54,1039,52],[983,12,1040,10],[983,16,1040,14],[983,17,1040,15,"projectile"],[983,27,1040,25],[983,29,1040,27],[983,36,1040,34],[983,40,1040,38],[985,12,1042,10],[986,12,1043,10],[986,16,1043,16,"currentTime"],[986,27,1043,27],[986,30,1043,30,"Date"],[986,34,1043,34],[986,35,1043,35,"now"],[986,38,1043,38],[986,39,1043,39],[986,40,1043,40],[987,12,1044,10],[987,16,1044,16,"startTime"],[987,25,1044,25],[987,28,1044,28,"projectile"],[987,38,1044,38],[987,39,1044,39,"startTime"],[987,48,1044,48],[987,52,1044,52,"currentTime"],[987,63,1044,63],[988,12,1045,10],[988,16,1045,16,"elapsedTime"],[988,27,1045,27],[988,30,1045,30,"currentTime"],[988,41,1045,41],[988,44,1045,44,"startTime"],[988,53,1045,53],[989,12,1046,10],[989,16,1046,16,"progress"],[989,24,1046,24],[989,27,1046,27,"Math"],[989,31,1046,31],[989,32,1046,32,"min"],[989,35,1046,35],[989,36,1046,36,"elapsedTime"],[989,47,1046,47],[989,51,1046,51,"projectile"],[989,61,1046,61],[989,62,1046,62,"duration"],[989,70,1046,70],[989,74,1046,74],[989,77,1046,77],[989,78,1046,78],[989,80,1046,80],[989,81,1046,81],[989,82,1046,82],[991,12,1048,10],[992,12,1049,10],[992,16,1049,14,"progress"],[992,24,1049,22],[992,28,1049,26],[992,29,1049,27],[992,33,1049,31],[992,34,1049,32,"projectile"],[992,44,1049,42],[992,45,1049,43,"hasHit"],[992,51,1049,49],[992,53,1049,51],[993,14,1050,12,"projectile"],[993,24,1050,22],[993,25,1050,23,"hasHit"],[993,31,1050,29],[993,34,1050,32],[993,38,1050,36],[994,14,1052,12,"setCombatState"],[994,28,1052,26],[994,29,1052,27,"prev"],[994,33,1052,31],[994,37,1052,35],[995,16,1053,14],[995,20,1053,20,"newState"],[995,28,1053,28],[995,31,1053,31],[996,18,1053,33],[996,21,1053,36,"prev"],[997,16,1053,41],[997,17,1053,42],[998,16,1055,14],[998,20,1055,18,"projectile"],[998,30,1055,28],[998,31,1055,29,"isAOE"],[998,36,1055,34],[998,40,1055,38,"projectile"],[998,50,1055,48],[998,51,1055,49,"aoeRadius"],[998,60,1055,58],[998,64,1055,62,"projectile"],[998,74,1055,72],[998,75,1055,73,"aoeRadius"],[998,84,1055,82],[998,87,1055,85],[998,88,1055,86],[998,90,1055,88],[999,18,1056,16],[1000,18,1057,16,"console"],[1000,25,1057,23],[1000,26,1057,24,"log"],[1000,29,1057,27],[1000,30,1057,28],[1000,59,1057,57,"projectile"],[1000,69,1057,67],[1000,70,1057,68,"abilityName"],[1000,81,1057,79],[1000,97,1057,95,"projectile"],[1000,107,1057,105],[1000,108,1057,106,"aoeRadius"],[1000,117,1057,115],[1000,119,1057,117],[1000,120,1057,118],[1001,18,1059,16],[1001,22,1059,22,"impactX"],[1001,29,1059,29],[1001,32,1059,32,"projectile"],[1001,42,1059,42],[1001,43,1059,43,"targetX"],[1001,50,1059,50],[1002,18,1060,16],[1002,22,1060,22,"impactY"],[1002,29,1060,29],[1002,32,1060,32,"projectile"],[1002,42,1060,42],[1002,43,1060,43,"targetY"],[1002,50,1060,50],[1003,18,1061,16],[1003,22,1061,22,"enemiesKilled"],[1003,35,1061,50],[1003,38,1061,53],[1003,40,1061,55],[1005,18,1063,16],[1006,18,1064,16,"newState"],[1006,26,1064,24],[1006,27,1064,25,"enemies"],[1006,34,1064,32],[1006,37,1064,35,"newState"],[1006,45,1064,43],[1006,46,1064,44,"enemies"],[1006,53,1064,51],[1006,54,1064,52,"map"],[1006,57,1064,55],[1006,58,1064,56,"enemy"],[1006,63,1064,61],[1006,67,1064,65],[1007,20,1065,18],[1007,24,1065,22,"enemy"],[1007,29,1065,27],[1007,30,1065,28,"health"],[1007,36,1065,34],[1007,40,1065,38],[1007,41,1065,39],[1007,45,1065,43,"enemy"],[1007,50,1065,48],[1007,51,1065,49,"markedForDeath"],[1007,65,1065,63],[1007,67,1065,65],[1007,74,1065,72,"enemy"],[1007,79,1065,77],[1008,20,1067,18],[1008,24,1067,24,"enemyX"],[1008,30,1067,30],[1008,33,1067,33,"enemy"],[1008,38,1067,38],[1008,39,1067,39,"position"],[1008,47,1067,47],[1008,48,1067,48,"x"],[1008,49,1067,49],[1008,52,1067,52],[1008,56,1067,56],[1008,57,1067,57],[1008,58,1067,58],[1009,20,1068,18],[1009,24,1068,24,"enemyY"],[1009,30,1068,30],[1009,33,1068,33,"enemy"],[1009,38,1068,38],[1009,39,1068,39,"position"],[1009,47,1068,47],[1009,48,1068,48,"y"],[1009,49,1068,49],[1009,52,1068,52],[1009,56,1068,56],[1010,20,1069,18],[1010,24,1069,24,"distance"],[1010,32,1069,32],[1010,35,1069,35,"Math"],[1010,39,1069,39],[1010,40,1069,40,"sqrt"],[1010,44,1069,44],[1010,45,1069,45,"Math"],[1010,49,1069,49],[1010,50,1069,50,"pow"],[1010,53,1069,53],[1010,54,1069,54,"enemyX"],[1010,60,1069,60],[1010,63,1069,63,"impactX"],[1010,70,1069,70],[1010,72,1069,72],[1010,73,1069,73],[1010,74,1069,74],[1010,77,1069,77,"Math"],[1010,81,1069,81],[1010,82,1069,82,"pow"],[1010,85,1069,85],[1010,86,1069,86,"enemyY"],[1010,92,1069,92],[1010,95,1069,95,"impactY"],[1010,102,1069,102],[1010,104,1069,104],[1010,105,1069,105],[1010,106,1069,106],[1010,107,1069,107],[1011,20,1071,18,"console"],[1011,27,1071,25],[1011,28,1071,26,"log"],[1011,31,1071,29],[1011,32,1071,30],[1011,58,1071,56,"enemy"],[1011,63,1071,61],[1011,64,1071,62,"name"],[1011,68,1071,66],[1011,76,1071,74,"enemyX"],[1011,82,1071,80],[1011,87,1071,85,"enemyY"],[1011,93,1071,91],[1011,109,1071,107,"impactX"],[1011,116,1071,114],[1011,121,1071,119,"impactY"],[1011,128,1071,126],[1011,135,1071,133,"distance"],[1011,143,1071,141],[1011,144,1071,142,"toFixed"],[1011,151,1071,149],[1011,152,1071,150],[1011,153,1071,151],[1011,154,1071,152],[1011,169,1071,167,"projectile"],[1011,179,1071,177],[1011,180,1071,178,"aoeRadius"],[1011,189,1071,187],[1011,194,1071,192],[1011,195,1071,193],[1012,20,1073,18],[1012,24,1073,22,"distance"],[1012,32,1073,30],[1012,36,1073,34,"projectile"],[1012,46,1073,44],[1012,47,1073,45,"aoeRadius"],[1012,56,1073,54],[1012,58,1073,56],[1013,22,1074,20],[1014,22,1075,20],[1014,26,1075,26,"newHealth"],[1014,35,1075,35],[1014,38,1075,38,"Math"],[1014,42,1075,42],[1014,43,1075,43,"max"],[1014,46,1075,46],[1014,47,1075,47],[1014,48,1075,48],[1014,50,1075,50,"enemy"],[1014,55,1075,55],[1014,56,1075,56,"health"],[1014,62,1075,62],[1014,65,1075,65,"projectile"],[1014,75,1075,75],[1014,76,1075,76,"damage"],[1014,82,1075,82],[1014,83,1075,83],[1015,22,1077,20,"console"],[1015,29,1077,27],[1015,30,1077,28,"log"],[1015,33,1077,31],[1015,34,1077,32],[1015,52,1077,50,"enemy"],[1015,57,1077,55],[1015,58,1077,56,"name"],[1015,62,1077,60],[1015,74,1077,72,"projectile"],[1015,84,1077,82],[1015,85,1077,83,"damage"],[1015,91,1077,89],[1015,103,1077,101,"enemy"],[1015,108,1077,106],[1015,109,1077,107,"health"],[1015,115,1077,113],[1015,122,1077,120,"newHealth"],[1015,131,1077,129],[1015,134,1077,132],[1015,135,1077,133],[1017,22,1079,20],[1018,22,1080,20],[1018,26,1080,24,"newHealth"],[1018,35,1080,33],[1018,39,1080,37],[1018,40,1080,38],[1018,44,1080,42,"enemy"],[1018,49,1080,47],[1018,50,1080,48,"health"],[1018,56,1080,54],[1018,59,1080,57],[1018,60,1080,58],[1018,62,1080,60],[1019,24,1081,22,"console"],[1019,31,1081,29],[1019,32,1081,30,"log"],[1019,35,1081,33],[1019,36,1081,34],[1019,52,1081,50,"enemy"],[1019,57,1081,55],[1019,58,1081,56,"name"],[1019,62,1081,60],[1019,76,1081,74,"projectile"],[1019,86,1081,84],[1019,87,1081,85,"abilityName"],[1019,98,1081,96],[1019,101,1081,99],[1019,102,1081,100],[1020,24,1082,22,"enemiesKilled"],[1020,37,1082,35],[1020,38,1082,36,"push"],[1020,42,1082,40],[1020,43,1082,41,"enemy"],[1020,48,1082,46],[1020,49,1082,47],[1020,50,1082,48],[1020,51,1082,49],[1022,24,1084,22],[1022,31,1084,29],[1023,26,1085,24],[1023,29,1085,27,"enemy"],[1023,34,1085,32],[1024,26,1086,24,"health"],[1024,32,1086,30],[1024,34,1086,32],[1024,35,1086,33],[1025,26,1087,24,"markedForDeath"],[1025,40,1087,38],[1025,42,1087,40],[1025,46,1087,44],[1026,26,1088,24,"lastDamaged"],[1026,37,1088,35],[1026,39,1088,37,"combatEngine"],[1026,58,1088,49],[1026,59,1088,49,"combatEngine"],[1026,71,1088,49],[1026,72,1088,50,"getCurrentTick"],[1026,86,1088,64],[1026,87,1088,65],[1027,24,1089,22],[1027,25,1089,23],[1028,22,1090,20],[1028,23,1090,21],[1028,29,1090,27],[1029,24,1091,22],[1029,31,1091,29],[1030,26,1092,24],[1030,29,1092,27,"enemy"],[1030,34,1092,32],[1031,26,1093,24,"health"],[1031,32,1093,30],[1031,34,1093,32,"newHealth"],[1031,43,1093,41],[1032,26,1094,24,"lastDamaged"],[1032,37,1094,35],[1032,39,1094,37,"combatEngine"],[1032,58,1094,49],[1032,59,1094,49,"combatEngine"],[1032,71,1094,49],[1032,72,1094,50,"getCurrentTick"],[1032,86,1094,64],[1032,87,1094,65],[1033,24,1095,22],[1033,25,1095,23],[1034,22,1096,20],[1035,20,1097,18],[1036,20,1099,18],[1036,27,1099,25,"enemy"],[1036,32,1099,30],[1036,33,1099,31],[1036,34,1099,32],[1037,18,1100,16],[1037,19,1100,17],[1037,20,1100,18],[1039,18,1102,16],[1040,18,1103,16],[1040,22,1103,20,"enemiesKilled"],[1040,35,1103,33],[1040,36,1103,34,"length"],[1040,42,1103,40],[1040,45,1103,43],[1040,46,1103,44],[1040,48,1103,46],[1041,20,1104,18,"console"],[1041,27,1104,25],[1041,28,1104,26,"log"],[1041,31,1104,29],[1041,32,1104,30],[1041,52,1104,50,"enemiesKilled"],[1041,65,1104,63],[1041,66,1104,64,"length"],[1041,72,1104,70],[1041,94,1104,92,"projectile"],[1041,104,1104,102],[1041,105,1104,103,"abilityName"],[1041,116,1104,114],[1041,118,1104,116],[1041,119,1104,117],[1042,20,1105,18,"setTimeout"],[1042,30,1105,28],[1042,31,1105,29],[1042,37,1105,35],[1043,22,1106,20,"enemiesKilled"],[1043,35,1106,33],[1043,36,1106,34,"forEach"],[1043,43,1106,41],[1043,44,1106,42,"enemy"],[1043,49,1106,47],[1043,53,1106,51,"handleEnemyKill"],[1043,68,1106,66],[1043,69,1106,67,"enemy"],[1043,74,1106,72],[1043,75,1106,73],[1043,76,1106,74],[1044,20,1107,18],[1044,21,1107,19],[1044,23,1107,21],[1044,24,1107,22],[1044,25,1107,23],[1045,18,1108,16],[1046,16,1110,14],[1046,17,1110,15],[1046,23,1110,21],[1047,18,1111,16],[1048,18,1112,16],[1048,22,1112,22,"enemyIndex"],[1048,32,1112,32],[1048,35,1112,35,"newState"],[1048,43,1112,43],[1048,44,1112,44,"enemies"],[1048,51,1112,51],[1048,52,1112,52,"findIndex"],[1048,61,1112,61],[1048,62,1112,62,"e"],[1048,63,1112,63],[1048,67,1112,67,"e"],[1048,68,1112,68],[1048,69,1112,69,"id"],[1048,71,1112,71],[1048,76,1112,76,"projectile"],[1048,86,1112,86],[1048,87,1112,87,"targetEnemyId"],[1048,100,1112,100],[1048,101,1112,101],[1049,18,1114,16],[1049,22,1114,20,"enemyIndex"],[1049,32,1114,30],[1049,36,1114,34],[1049,37,1114,35],[1049,41,1114,39,"newState"],[1049,49,1114,47],[1049,50,1114,48,"enemies"],[1049,57,1114,55],[1049,58,1114,56,"enemyIndex"],[1049,68,1114,66],[1049,69,1114,67],[1049,70,1114,68,"health"],[1049,76,1114,74],[1049,79,1114,77],[1049,80,1114,78],[1049,84,1114,82],[1049,85,1114,83,"newState"],[1049,93,1114,91],[1049,94,1114,92,"enemies"],[1049,101,1114,99],[1049,102,1114,100,"enemyIndex"],[1049,112,1114,110],[1049,113,1114,111],[1049,114,1114,112,"markedForDeath"],[1049,128,1114,126],[1049,130,1114,128],[1050,20,1115,18,"newState"],[1050,28,1115,26],[1050,29,1115,27,"enemies"],[1050,36,1115,34],[1050,39,1115,37],[1050,40,1115,38],[1050,43,1115,41,"newState"],[1050,51,1115,49],[1050,52,1115,50,"enemies"],[1050,59,1115,57],[1050,60,1115,58],[1051,20,1116,18],[1051,24,1116,24,"enemy"],[1051,29,1116,29],[1051,32,1116,32,"newState"],[1051,40,1116,40],[1051,41,1116,41,"enemies"],[1051,48,1116,48],[1051,49,1116,49,"enemyIndex"],[1051,59,1116,59],[1051,60,1116,60],[1052,20,1117,18],[1052,24,1117,24,"newHealth"],[1052,33,1117,33],[1052,36,1117,36,"Math"],[1052,40,1117,40],[1052,41,1117,41,"max"],[1052,44,1117,44],[1052,45,1117,45],[1052,46,1117,46],[1052,48,1117,48,"enemy"],[1052,53,1117,53],[1052,54,1117,54,"health"],[1052,60,1117,60],[1052,63,1117,63,"projectile"],[1052,73,1117,73],[1052,74,1117,74,"damage"],[1052,80,1117,80],[1052,81,1117,81],[1053,20,1119,18,"newState"],[1053,28,1119,26],[1053,29,1119,27,"enemies"],[1053,36,1119,34],[1053,37,1119,35,"enemyIndex"],[1053,47,1119,45],[1053,48,1119,46],[1053,51,1119,49],[1054,22,1120,20],[1054,25,1120,23,"enemy"],[1054,30,1120,28],[1055,22,1121,20,"health"],[1055,28,1121,26],[1055,30,1121,28,"newHealth"],[1055,39,1121,37],[1056,22,1122,20,"lastDamaged"],[1056,33,1122,31],[1056,35,1122,33,"combatEngine"],[1056,54,1122,45],[1056,55,1122,45,"combatEngine"],[1056,67,1122,45],[1056,68,1122,46,"getCurrentTick"],[1056,82,1122,60],[1056,83,1122,61],[1057,20,1123,18],[1057,21,1123,19],[1058,20,1125,18,"console"],[1058,27,1125,25],[1058,28,1125,26,"log"],[1058,31,1125,29],[1058,32,1125,30],[1058,60,1125,58,"enemy"],[1058,65,1125,63],[1058,66,1125,64,"name"],[1058,70,1125,68],[1058,82,1125,80,"newHealth"],[1058,91,1125,89],[1058,95,1125,93,"enemy"],[1058,100,1125,98],[1058,101,1125,99,"maxHealth"],[1058,110,1125,108],[1058,112,1125,110],[1058,113,1125,111],[1060,20,1127,18],[1061,20,1128,18],[1061,24,1128,22,"newHealth"],[1061,33,1128,31],[1061,37,1128,35],[1061,38,1128,36],[1061,42,1128,40,"enemy"],[1061,47,1128,45],[1061,48,1128,46,"health"],[1061,54,1128,52],[1061,57,1128,55],[1061,58,1128,56],[1061,60,1128,58],[1062,22,1129,20,"console"],[1062,29,1129,27],[1062,30,1129,28,"log"],[1062,33,1129,31],[1062,34,1129,32],[1062,60,1129,58,"enemy"],[1062,65,1129,63],[1062,66,1129,64,"name"],[1062,70,1129,68],[1062,84,1129,82,"projectile"],[1062,94,1129,92],[1062,95,1129,93,"abilityName"],[1062,106,1129,104],[1062,112,1129,110,"enemy"],[1062,117,1129,115],[1062,118,1129,116,"health"],[1062,124,1129,122],[1062,130,1129,128,"newHealth"],[1062,139,1129,137],[1062,142,1129,140],[1062,143,1129,141],[1064,22,1131,20],[1065,22,1132,20,"newState"],[1065,30,1132,28],[1065,31,1132,29,"enemies"],[1065,38,1132,36],[1065,39,1132,37,"enemyIndex"],[1065,49,1132,47],[1065,50,1132,48],[1065,53,1132,51],[1066,24,1133,22],[1066,27,1133,25,"newState"],[1066,35,1133,33],[1066,36,1133,34,"enemies"],[1066,43,1133,41],[1066,44,1133,42,"enemyIndex"],[1066,54,1133,52],[1066,55,1133,53],[1067,24,1134,22,"health"],[1067,30,1134,28],[1067,32,1134,30],[1067,33,1134,31],[1068,24,1135,22,"markedForDeath"],[1068,38,1135,36],[1068,40,1135,38],[1069,22,1136,20],[1069,23,1136,21],[1071,22,1138,20],[1072,22,1139,20,"console"],[1072,29,1139,27],[1072,30,1139,28,"log"],[1072,33,1139,31],[1072,34,1139,32],[1072,81,1139,79,"enemy"],[1072,86,1139,84],[1072,87,1139,85,"name"],[1072,91,1139,89],[1072,100,1139,98,"enemy"],[1072,105,1139,103],[1072,106,1139,104,"id"],[1072,108,1139,106],[1072,111,1139,109],[1072,112,1139,110],[1073,22,1140,20,"setTimeout"],[1073,32,1140,30],[1073,33,1140,31],[1073,39,1140,37,"handleEnemyKill"],[1073,54,1140,52],[1073,55,1140,53,"enemy"],[1073,60,1140,58],[1073,61,1140,59],[1073,63,1140,61],[1073,64,1140,62],[1073,65,1140,63],[1074,20,1141,18],[1074,21,1141,19],[1074,27,1141,25],[1074,31,1141,29,"enemy"],[1074,36,1141,34],[1074,37,1141,35,"health"],[1074,43,1141,41],[1074,46,1141,44],[1074,47,1141,45],[1074,49,1141,47],[1075,22,1142,20,"console"],[1075,29,1142,27],[1075,30,1142,28,"log"],[1075,33,1142,31],[1075,34,1142,32],[1075,58,1142,56,"enemy"],[1075,63,1142,61],[1075,64,1142,62,"name"],[1075,68,1142,66],[1075,80,1142,78,"projectile"],[1075,90,1142,88],[1075,91,1142,89,"damage"],[1075,97,1142,95],[1075,109,1142,107,"enemy"],[1075,114,1142,112],[1075,115,1142,113,"health"],[1075,121,1142,119],[1075,127,1142,125,"newHealth"],[1075,136,1142,134],[1075,139,1142,137],[1075,140,1142,138],[1076,20,1143,18],[1076,21,1143,19],[1076,27,1143,25],[1077,22,1144,20,"console"],[1077,29,1144,27],[1077,30,1144,28,"log"],[1077,33,1144,31],[1077,34,1144,32],[1077,56,1144,54,"enemy"],[1077,61,1144,59],[1077,62,1144,60,"name"],[1077,66,1144,64],[1077,92,1144,90,"enemy"],[1077,97,1144,95],[1077,98,1144,96,"health"],[1077,104,1144,102],[1077,122,1144,120],[1077,123,1144,121],[1078,20,1145,18],[1079,18,1146,16],[1080,16,1147,14],[1081,16,1149,14],[1081,23,1149,21,"newState"],[1081,31,1149,29],[1082,14,1150,12],[1082,15,1150,13],[1082,16,1150,14],[1083,12,1151,10],[1085,12,1153,10],[1086,12,1154,10],[1086,16,1154,14,"progress"],[1086,24,1154,22],[1086,28,1154,26],[1086,31,1154,29],[1086,33,1154,31],[1087,14,1155,12],[1087,21,1155,19],[1087,25,1155,23],[1088,12,1156,10],[1089,12,1158,10],[1089,19,1158,17,"projectile"],[1089,29,1158,27],[1090,10,1159,8],[1090,11,1159,9],[1090,12,1159,10],[1090,13,1159,11,"filter"],[1090,19,1159,17],[1090,20,1159,18,"Boolean"],[1090,27,1159,25],[1090,28,1159,26],[1091,8,1160,6],[1091,9,1160,7],[1091,10,1160,8],[1092,6,1161,4],[1092,7,1161,5],[1094,6,1163,4],[1095,6,1164,4],[1095,10,1164,10,"impactInterval"],[1095,24,1164,24],[1095,27,1164,27,"setInterval"],[1095,38,1164,38],[1095,39,1164,39,"processProjectileImpacts"],[1095,63,1164,63],[1095,65,1164,65],[1095,67,1164,67],[1095,68,1164,68],[1096,6,1165,4],[1096,13,1165,11],[1096,19,1165,17,"clearInterval"],[1096,32,1165,30],[1096,33,1165,31,"impactInterval"],[1096,47,1165,45],[1096,48,1165,46],[1097,4,1166,2],[1097,5,1166,3],[1097,7,1166,5],[1097,8,1166,6,"handleEnemyKill"],[1097,23,1166,21],[1097,24,1166,22],[1097,25,1166,23],[1099,4,1168,2],[1100,4,1169,2],[1100,8,1169,8,"saveAbilityData"],[1100,23,1169,23],[1100,26,1169,26],[1100,30,1169,26,"useCallback"],[1100,36,1169,37],[1100,37,1169,37,"useCallback"],[1100,48,1169,37],[1100,50,1169,38],[1100,56,1169,44],[1101,6,1170,4],[1101,10,1170,8,"combatState"],[1101,21,1170,19],[1101,22,1170,20,"abilityManager"],[1101,36,1170,34],[1101,38,1170,36],[1102,8,1171,6],[1102,12,1171,12,"abilityData"],[1102,23,1171,23],[1102,26,1171,26,"combatState"],[1102,37,1171,37],[1102,38,1171,38,"abilityManager"],[1102,52,1171,52],[1102,53,1171,53,"getSaveData"],[1102,64,1171,64],[1102,65,1171,65],[1102,66,1171,66],[1103,8,1172,6,"console"],[1103,15,1172,13],[1103,16,1172,14,"log"],[1103,19,1172,17],[1103,20,1172,18],[1103,70,1172,68],[1103,72,1172,70,"abilityData"],[1103,83,1172,81],[1103,84,1172,82],[1104,8,1173,6,"game"],[1104,12,1173,10],[1104,13,1173,11,"updateAbilityData"],[1104,30,1173,28],[1104,31,1173,29,"abilityData"],[1104,42,1173,40],[1104,43,1173,41],[1105,6,1174,4],[1106,4,1175,2],[1106,5,1175,3],[1106,7,1175,5],[1106,8,1175,6,"combatState"],[1106,19,1175,17],[1106,20,1175,18,"abilityManager"],[1106,34,1175,32],[1106,36,1175,34,"game"],[1106,40,1175,38],[1106,41,1175,39,"updateAbilityData"],[1106,58,1175,56],[1106,59,1175,57],[1106,60,1175,58],[1107,4,1177,2],[1107,8,1177,8,"contextValue"],[1107,20,1177,39],[1107,23,1177,42,"React"],[1107,28,1177,47],[1107,29,1177,47,"default"],[1107,36,1177,47],[1107,37,1177,48,"useMemo"],[1107,44,1177,55],[1107,45,1177,56],[1107,52,1177,63],[1108,6,1178,4,"combatState"],[1108,17,1178,15],[1109,6,1179,4,"projectiles"],[1109,17,1179,15],[1110,6,1180,4,"startCombat"],[1110,17,1180,15],[1111,6,1181,4,"stopCombat"],[1111,16,1181,14],[1112,6,1182,4,"equipAbility"],[1112,18,1182,16],[1113,6,1183,4,"handleEnemyKill"],[1113,21,1183,19],[1114,6,1184,4,"getDeck"],[1114,13,1184,11],[1115,6,1185,4,"getAvailableAbilities"],[1115,27,1185,25],[1116,6,1186,4,"upgradeAbility"],[1116,20,1186,18],[1117,6,1187,4,"spawnEnemy"],[1117,16,1187,14],[1118,6,1188,4,"spawnBoss"],[1118,15,1188,13],[1119,6,1189,4,"clearAllEnemies"],[1119,21,1189,19],[1120,6,1190,4,"clearSpecificEnemy"],[1120,24,1190,22],[1121,6,1191,4,"triggerLevelUpExplosion"],[1121,29,1191,27],[1122,6,1192,4,"findClosestEnemy"],[1122,22,1192,20],[1123,6,1193,4,"updateNinjaPosition"],[1123,25,1193,23],[1124,6,1194,4,"setManualControlActive"],[1124,28,1194,26],[1125,6,1195,4,"lastExplosionTime"],[1125,23,1195,21],[1126,6,1196,4,"useAbilityManually"],[1126,24,1196,22],[1127,6,1196,24],[1128,6,1197,4,"saveAbilityData"],[1128,21,1197,19],[1129,6,1197,21],[1130,6,1198,4,"shadowClone"],[1130,17,1198,15],[1130,19,1198,17,"combatState"],[1130,30,1198,28],[1130,31,1198,29,"shadowClone"],[1130,42,1198,40],[1130,43,1198,42],[1131,4,1199,2],[1131,5,1199,3],[1131,6,1199,4],[1131,8,1199,6],[1132,4,1200,4],[1133,4,1201,4],[1134,4,1202,4,"combatState"],[1134,15,1202,15],[1134,17,1203,4,"projectiles"],[1134,28,1203,15],[1134,30,1204,4,"lastExplosionTime"],[1134,47,1204,21],[1135,4,1205,4],[1136,4,1206,4,"combatState"],[1136,15,1206,15],[1136,16,1206,16,"abilityManager"],[1136,30,1206,30],[1136,32,1207,4,"combatState"],[1136,43,1207,15],[1136,44,1207,16,"enemies"],[1136,51,1207,23],[1136,53,1208,4,"combatState"],[1136,64,1208,15],[1136,65,1208,16,"shadowClone"],[1136,76,1208,27],[1137,4,1208,29],[1138,4,1209,4,"useAbilityManually"],[1138,22,1209,22],[1139,4,1209,24],[1140,4,1210,4,"saveAbilityData"],[1140,19,1210,19],[1140,20,1210,21],[1141,4,1210,21],[1141,5,1211,3],[1141,6,1211,4],[1142,4,1213,2],[1142,24,1214,4],[1142,28,1214,4,"_reactJsxDevRuntime"],[1142,47,1214,4],[1142,48,1214,4,"jsxDEV"],[1142,54,1214,4],[1142,56,1214,5,"CombatContext"],[1142,69,1214,18],[1142,70,1214,19,"Provider"],[1142,78,1214,27],[1143,6,1214,28,"value"],[1143,11,1214,33],[1143,13,1214,35,"contextValue"],[1143,25,1214,48],[1144,6,1214,48,"children"],[1144,14,1214,48],[1144,16,1215,7,"children"],[1145,4,1215,15],[1146,6,1215,15,"fileName"],[1146,14,1215,15],[1146,16,1215,15,"_jsxFileName"],[1146,28,1215,15],[1147,6,1215,15,"lineNumber"],[1147,16,1215,15],[1148,6,1215,15,"columnNumber"],[1148,18,1215,15],[1149,4,1215,15],[1149,11,1216,28],[1149,12,1216,29],[1150,2,1218,0],[1150,3,1218,1],[1151,2,1218,2,"_s4"],[1151,5,1218,2],[1151,6,103,13,"CombatProvider"],[1151,20,103,27],[1152,4,103,27],[1152,12,104,15,"useGame"],[1152,24,104,22],[1152,25,104,22,"useGame"],[1152,32,104,22],[1152,34,105,77,"useZone"],[1152,46,105,84],[1152,47,105,84,"useZone"],[1152,54,105,84],[1153,2,105,84],[1154,2,105,84,"_c"],[1154,4,105,84],[1154,7,103,13,"CombatProvider"],[1154,21,103,27],[1155,2,103,27],[1155,6,103,27,"_c"],[1155,8,103,27],[1156,2,103,27,"$RefreshReg$"],[1156,14,103,27],[1156,15,103,27,"_c"],[1156,17,103,27],[1157,0,103,27],[1157,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCoB;uBCI;ODO;KDiB;GHC;6CMG;mBJM;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSuD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCW;oCCE,iCD;KDG;kDGe;OHK;6BIK;OJa;6BG8B;SHO;sBKG;OLU;GxBoB;2B8BG;mBR0C,6BQ;e1BG;K0BE;G9BG;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5C8B;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;YCG;qC+CC;qB1BC;sC2BC;2B/Ca;wDgDY;iBhDoC;6BEK;0C+CC,+B/C;mBFC;8DMK,sCN;+BE4B,4BF;a+CU;S3BS;O0BC;K/CC;W8CI,mC9C;GDC;sCoDG;GpDM;wDqDE;IrDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}