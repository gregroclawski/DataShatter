{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n\n    // Initialize player stats when game context changes\n    (0, _react.useEffect)(() => {\n      if (game.gameState.ninja) {\n        var effectiveStats = game.getEffectiveStats();\n        setCombatState(prev => {\n          // Only initialize if combat player stats are at defaults\n          if (prev.playerStats.maxHealth === 100 && prev.playerStats.attack === 10) {\n            console.log(`🔧 INITIALIZING PLAYER STATS: HP=${effectiveStats.health}, Attack=${effectiveStats.attack}, Defense=${effectiveStats.defense}`);\n            return {\n              ...prev,\n              playerStats: {\n                attack: effectiveStats.attack,\n                defense: effectiveStats.defense,\n                health: effectiveStats.health,\n                // Start at full health\n                maxHealth: effectiveStats.health,\n                critChance: effectiveStats.critChance || 3,\n                critDamage: effectiveStats.critDamage || 150,\n                cooldownReduction: effectiveStats.cooldownReduction || 0\n              }\n            };\n          }\n          return prev;\n        });\n      }\n    }, [game.gameState.ninja]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook with subscription multipliers\n      var baseXpReward = 500; // 25X Base XP reward per kill (massively boosted for faster progression)\n      var xpMultiplier = game.gameState.subscriptionBenefits?.xp_multiplier || 1.0;\n      var dropMultiplier = game.gameState.subscriptionBenefits?.drop_multiplier || 1.0;\n      var xpReward = Math.floor(baseXpReward * xpMultiplier);\n      var goldReward = Math.floor(1000 * dropMultiplier); // 100X GOLD BOOST (was 10, now 1000)\n\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - XP Multiplier: ${xpMultiplier}, Drop Multiplier: ${dropMultiplier}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Base XP: ${baseXpReward}, Final XP: ${xpReward}`);\n      console.log(`🔍 SUBSCRIPTION DEBUG - Full benefits:`, JSON.stringify(game.gameState.subscriptionBenefits));\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Sync player stats from game state with EFFECTIVE stats (including upgrades)\n        // CRITICAL: Do this BEFORE enemy attacks to avoid overriding combat damage\n        if (newState.playerStats && game.gameState.ninja) {\n          var effectiveStats = game.getEffectiveStats();\n\n          // MOBILE FIX: Synchronize player stats with effective stats to reflect upgrades\n          if (newState.playerStats.attack !== effectiveStats.attack || newState.playerStats.defense !== effectiveStats.defense || newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n            console.log(`🔧 PLAYER STATS UPDATE: Attack ${newState.playerStats.attack} → ${effectiveStats.attack}, Defense ${newState.playerStats.defense} → ${effectiveStats.defense}, MaxHP ${newState.playerStats.maxHealth} → ${effectiveStats.maxHealth}`);\n\n            // Handle max health changes carefully\n            var newHealth = newState.playerStats.health;\n            if (newState.playerStats.maxHealth !== effectiveStats.maxHealth) {\n              // Only adjust health ratio if max health increased significantly (upgrades)\n              if (effectiveStats.maxHealth > newState.playerStats.maxHealth * 1.1) {\n                // Player got a health upgrade - maintain ratio but give the benefit\n                var healthRatio = newState.playerStats.maxHealth > 0 ? newState.playerStats.health / newState.playerStats.maxHealth : 1;\n                newHealth = Math.floor(effectiveStats.maxHealth * healthRatio);\n              } else if (newState.playerStats.health > effectiveStats.maxHealth) {\n                // Max health decreased or current health exceeds new max - cap it\n                newHealth = effectiveStats.maxHealth;\n              }\n              // Otherwise keep current health value (preserve combat damage)\n            }\n            newState.playerStats = {\n              ...newState.playerStats,\n              attack: effectiveStats.attack,\n              defense: effectiveStats.defense,\n              maxHealth: effectiveStats.maxHealth,\n              // FIXED: Use maxHealth from effectiveStats\n              health: newHealth,\n              // Preserve combat damage\n              critChance: effectiveStats.critChance || newState.playerStats.critChance,\n              critDamage: effectiveStats.critDamage || newState.playerStats.critDamage,\n              cooldownReduction: effectiveStats.cooldownReduction || newState.playerStats.cooldownReduction\n            };\n          }\n\n          // REVIVAL SYNC: Only sync when player is actually revived (game health equals max health and combat health is very low)\n          if (game.gameState.isAlive && game.gameState.ninja.health === effectiveStats.maxHealth && newState.playerStats.health < effectiveStats.maxHealth * 0.1) {\n            console.log(`💖 REVIVAL SYNC: Combat health ${newState.playerStats.health} → ${game.gameState.ninja.health} (Revival detected)`);\n            newState.playerStats.health = game.gameState.ninja.health;\n          }\n        }\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // CRITICAL FIX: Enemy attacks when close to player\n            var ATTACK_RANGE = 50; // Enemy attack range\n            var ATTACK_COOLDOWN = 30; // Attack every 3 seconds (30 ticks at 10 TPS)\n\n            if (distance <= ATTACK_RANGE) {\n              // Enemy is close enough to attack player\n              if (!enemy.lastAttackTick) enemy.lastAttackTick = 0;\n              if (newState.currentTick - enemy.lastAttackTick >= ATTACK_COOLDOWN) {\n                // Check if player is alive - CRITICAL: Don't attack dead players\n                if (!game.gameState.isAlive) {\n                  console.log(`💀 DEAD PLAYER: ${enemy.name} cannot attack - player is dead!`);\n                  // Update enemy attack cooldown to prevent spam\n                  enemy.lastAttackTick = newState.currentTick;\n                } else {\n                  // Check if player is invincible\n                  var isPlayerInvincible = game.gameState.isInvincible && game.gameState.invincibilityEndTime && Date.now() < game.gameState.invincibilityEndTime;\n                  if (isPlayerInvincible) {\n                    console.log(`🛡️ INVINCIBLE: ${enemy.name} attack blocked! Player is invincible.`);\n                    // Update enemy attack cooldown even if blocked\n                    enemy.lastAttackTick = newState.currentTick;\n                  } else {\n                    // Enemy attacks player - FIXED: Scale damage appropriately for balanced gameplay\n                    var baseAttack = enemy.stats.attack / 100; // Scale down massive attack values\n                    var attackDamage = Math.floor(baseAttack * (0.8 + Math.random() * 0.4)); // 80-120% of scaled damage\n                    var playerDefense = newState.playerStats.defense;\n                    var finalDamage = Math.max(1, attackDamage - Math.floor(playerDefense * 0.1)); // Defense reduces 10% of damage\n\n                    console.log(`🗡️ ENEMY ATTACK: ${enemy.name} attacks player for ${finalDamage} damage (${attackDamage} base - ${Math.floor(playerDefense * 0.1)} defense reduction)`);\n\n                    // Apply damage to player\n                    var newPlayerHealth = Math.max(0, newState.playerStats.health - finalDamage);\n                    newState.playerStats.health = newPlayerHealth;\n                    console.log(`❤️ PLAYER HEALTH: ${newState.playerStats.health}/${newState.playerStats.maxHealth} (took ${finalDamage} damage)`);\n\n                    // Update enemy attack cooldown\n                    enemy.lastAttackTick = newState.currentTick;\n\n                    // Handle player death if health reaches 0\n                    if (newPlayerHealth <= 0) {\n                      console.log('💀 PLAYER DEFEATED! Triggering revival system...');\n                      // Set player as dead and trigger revival modal\n                      setTimeout(() => {\n                        // Set isAlive to false to trigger revival system\n                        game.updateGameState({\n                          isAlive: false\n                        });\n                      }, 100);\n                    }\n                  }\n                }\n              }\n            } else {\n              // Move toward player if not in attack range\n              // Only move if not too close to player (maintain some distance for combat)\n              if (distance > 40) {\n                // Normalize direction toward player\n                var normalizedX = deltaX / distance;\n                var normalizedY = deltaY / distance;\n\n                // Add slight randomness to movement to prevent perfect tracking\n                var randomFactor = 0.2; // 20% randomness\n                var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n                var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n                // Calculate new position\n                var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n                var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n                // Keep within bounds\n                newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n                newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n                // Apply new position\n                enemy.position.x = newX;\n                enemy.position.y = newY;\n              }\n              // If too close to player, enemies stay put to allow combat\n            }\n          }\n        });\n\n        // Shadow clone management\n        if (newState.shadowClone) {\n          // Update clone duration\n          newState.shadowClone.remainingTicks--;\n\n          // Make clone follow player (positioned slightly behind and to the right)\n          var cloneOffset = 50; // Follow at 50 pixels offset\n          newState.shadowClone.position.x = currentNinjaPosition.x + cloneOffset;\n          newState.shadowClone.position.y = currentNinjaPosition.y + 10;\n\n          // Remove clone when duration expires\n          if (newState.shadowClone.remainingTicks <= 0) {\n            console.log('👥 SHADOW CLONE: Duration expired, removing clone');\n            newState.shadowClone = undefined;\n          } else {\n            // Clone attacks with player (70% damage)\n            // Clone attacks every 2 seconds (20 ticks at 10 TPS)\n            var CLONE_ATTACK_INTERVAL = 20;\n            if (newState.currentTick % CLONE_ATTACK_INTERVAL === 0 && newState.enemies.length > 0) {\n              console.log('👥 SHADOW CLONE: Casting duplicate attack at 70% damage');\n\n              // Find closest enemy for clone attack\n              var target = findClosestEnemyInternal(newState.enemies);\n              if (target) {\n                // Calculate clone damage (70% of player base attack)\n                var cloneDamage = Math.floor(newState.playerStats.attack * 0.7);\n\n                // Create clone projectile\n                createProjectile(target, cloneDamage, newState.shadowClone.position, {\n                  id: 'shadow_clone_attack',\n                  name: 'Shadow Clone Attack',\n                  icon: '👥'\n                });\n              }\n            }\n          }\n        }\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        // CRITICAL: Don't cast abilities when player is dead\n        if (!isManualControlActive && game.gameState.isAlive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 20 enemies on screen with faster respawn for more intense combat\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 20; // DOUBLED from 10 to 20 for more intense combat\n        var MIN_SPAWN_DELAY = 250; // HALVED from 500ms to 250ms for 2x faster spawning\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      console.log(`🔍 ABILITY CHECK: ${ability.name} - effects: ${JSON.stringify(ability.effects)}, aoeRadius: ${ability.stats.aoeRadius}, isAOE: ${isAOE}`);\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // For AOE abilities, create a SINGLE projectile targeting the closest enemy\n        // When it hits, it will damage ALL enemies in the AOE radius\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n\n        // Create single AOE projectile\n        createProjectile(target, damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        }, true, ability.stats.aoeRadius); // Pass AOE flags\n\n        console.log(`🎯 ${ability.name} AOE projectile created targeting ${target.name} with ${ability.stats.aoeRadius} radius`);\n        console.log(`🎯 AOE DEBUG: damage=${damage}, isAOE=true, aoeRadius=${ability.stats.aoeRadius}`);\n      } else {\n        // Single target ability (original logic)\n        var _target = findClosestEnemyInternal(state.enemies);\n        if (!_target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, _target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(_target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n\n      // Apply Buff effects (Shadow Clone)\n      if (ability.effects.includes('Buff') && ability.id === 'shadow_clone') {\n        console.log(`👥 SHADOW CLONE: Creating shadow clone for ${ability.stats.duration} seconds`);\n\n        // Position clone slightly offset from ninja\n        var cloneX = currentNinjaPosition.x + 60; // 60 pixels to the right\n        var cloneY = currentNinjaPosition.y + 10; // 10 pixels down\n\n        state.shadowClone = {\n          id: `shadow_clone_${Date.now()}`,\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks (30s = 300 ticks)\n          position: {\n            x: cloneX,\n            y: cloneY\n          },\n          damageMultiplier: 0.7 // 70% damage\n        };\n        console.log(`👥 SHADOW CLONE ACTIVE: Clone will last ${ability.stats.duration}s and deal 70% damage`);\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo, isAOE, aoeRadius) => {\n      if (!targetEnemy) {\n        console.log('❌ Cannot create projectile: No target enemy');\n        return null;\n      }\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectileId = `proj_${Date.now()}_${Math.random()}`;\n      var projectile = {\n        id: projectileId,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟',\n        // Default to star if no ability info\n        // AOE properties\n        isAOE: isAOE || false,\n        aoeRadius: aoeRadius || 0\n      };\n      console.log(`🚀 PROJECTILE CREATED: ${abilityInfo?.name || 'Basic Shuriken'} projectile (ID: ${projectileId}) targeting ${targetEnemy.name} for ${damage} damage`);\n      console.log(`🎯 PROJECTILE DEBUG: isAOE=${isAOE}, aoeRadius=${aoeRadius}, damage=${damage}`);\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n      return projectile;\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 500; // SAME AS REGULAR KILL XP (500 XP per enemy in explosion)\n        var explosionGold = enemyCount * 500; // 100X GOLD BOOST (was 5, now 500)\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // CRITICAL: Check if player is alive first\n      if (!game.gameState.isAlive) {\n        console.log(`💀 Manual ability cast blocked - player is dead!`);\n        return false;\n      }\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // CRITICAL FIX: Handle projectile impacts separately from animation loop\n    (0, _react.useEffect)(() => {\n      var processProjectileImpacts = () => {\n        setProjectiles(currentProjectiles => {\n          return currentProjectiles.map(projectile => {\n            if (!projectile) return null;\n\n            // Calculate progress\n            var currentTime = Date.now();\n            var startTime = projectile.startTime || currentTime;\n            var elapsedTime = currentTime - startTime;\n            var progress = Math.min(elapsedTime / (projectile.duration || 500), 1);\n\n            // Apply damage when projectile completes\n            if (progress >= 1 && !projectile.hasHit) {\n              projectile.hasHit = true;\n              setCombatState(prev => {\n                var newState = {\n                  ...prev\n                };\n                if (projectile.isAOE && projectile.aoeRadius && projectile.aoeRadius > 0) {\n                  // AOE PROJECTILE: Damage all enemies within radius of impact point\n                  console.log(`💥 AOE PROJECTILE IMPACT: ${projectile.abilityName} with radius ${projectile.aoeRadius}`);\n                  var impactX = projectile.targetX;\n                  var impactY = projectile.targetY;\n                  var enemiesKilled = [];\n\n                  // Find all enemies within AOE radius of impact\n                  newState.enemies = newState.enemies.map(enemy => {\n                    if (enemy.health <= 0 || enemy.markedForDeath) return enemy;\n                    var enemyX = enemy.position.x + 17.5; // Center of enemy\n                    var enemyY = enemy.position.y + 17.5;\n                    var distance = Math.sqrt(Math.pow(enemyX - impactX, 2) + Math.pow(enemyY - impactY, 2));\n                    console.log(`🎯 AOE DISTANCE CHECK: ${enemy.name} at (${enemyX}, ${enemyY}) vs impact (${impactX}, ${impactY}) = ${distance.toFixed(1)}px (radius: ${projectile.aoeRadius}px)`);\n                    if (distance <= projectile.aoeRadius) {\n                      // Use the projectile's pre-calculated damage (already includes all modifiers)\n                      var newHealth = Math.max(0, enemy.health - projectile.damage);\n                      console.log(`💥 AOE DAMAGE: ${enemy.name} hit for ${projectile.damage} damage (${enemy.health} -> ${newHealth})`);\n\n                      // Check if enemy dies from AOE damage\n                      if (newHealth <= 0 && enemy.health > 0) {\n                        console.log(`💀 AOE KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n                        enemiesKilled.push(enemy); // Store original enemy for XP awarding\n\n                        return {\n                          ...enemy,\n                          health: 0,\n                          markedForDeath: true,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      } else {\n                        return {\n                          ...enemy,\n                          health: newHealth,\n                          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                        };\n                      }\n                    }\n                    return enemy; // Enemy outside AOE radius - no damage\n                  });\n\n                  // Award XP for all killed enemies\n                  if (enemiesKilled.length > 0) {\n                    console.log(`🎯 AOE XP AWARD: ${enemiesKilled.length} enemies killed by ${projectile.abilityName}`);\n                    setTimeout(() => {\n                      enemiesKilled.forEach(enemy => handleEnemyKill(enemy));\n                    }, 0);\n                  }\n                } else {\n                  // SINGLE TARGET PROJECTILE: Original logic\n                  var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n                  if (enemyIndex >= 0 && newState.enemies[enemyIndex].health > 0 && !newState.enemies[enemyIndex].markedForDeath) {\n                    newState.enemies = [...newState.enemies];\n                    var enemy = newState.enemies[enemyIndex];\n                    var newHealth = Math.max(0, enemy.health - projectile.damage);\n                    newState.enemies[enemyIndex] = {\n                      ...enemy,\n                      health: newHealth,\n                      lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n                    };\n                    console.log(`🎯 SINGLE TARGET DAMAGE: ${enemy.name} health: ${newHealth}/${enemy.maxHealth}`);\n\n                    // Award XP when enemy dies\n                    if (newHealth <= 0 && enemy.health > 0) {\n                      console.log(`💀 SINGLE TARGET KILL: ${enemy.name} killed by ${projectile.abilityName}!`);\n\n                      // Mark enemy as killed immediately to prevent duplicate processing\n                      newState.enemies[enemyIndex] = {\n                        ...newState.enemies[enemyIndex],\n                        health: 0,\n                        markedForDeath: true\n                      };\n\n                      // Call handleEnemyKill with original enemy stats before damage\n                      setTimeout(() => handleEnemyKill(enemy), 0);\n                    }\n                  }\n                }\n                return newState;\n              });\n            }\n\n            // Clean up completed projectiles\n            if (progress >= 1.5) {\n              return null;\n            }\n            return projectile;\n          }).filter(Boolean);\n        });\n      };\n\n      // Process impacts independently from visual animation at 30fps\n      var impactInterval = setInterval(processProjectileImpacts, 33);\n      return () => clearInterval(impactInterval);\n    }, [handleEnemyKill]);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData,\n      // Expose save function to UI components\n      shadowClone: combatState.shadowClone // Expose shadow clone state for rendering\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, combatState.shadowClone,\n    // Add shadow clone state to dependencies\n    useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Ef87VgEx3VhPv5l6GrayJ3/PL7k=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":1124,"map":[[15,2,93,0,"Object"],[15,8,93,0],[15,9,93,0,"defineProperty"],[15,23,93,0],[15,24,93,0,"exports"],[15,31,93,0],[16,4,93,0,"enumerable"],[16,14,93,0],[17,4,93,0,"get"],[17,7,93,0],[17,18,93,0,"get"],[17,19,93,0],[18,6,93,0],[18,13,93,0,"useCombat"],[18,22,93,0],[19,4,93,0],[20,2,93,0],[21,2,103,0,"Object"],[21,8,103,0],[21,9,103,0,"defineProperty"],[21,23,103,0],[21,24,103,0,"exports"],[21,31,103,0],[22,4,103,0,"enumerable"],[22,14,103,0],[23,4,103,0,"get"],[23,7,103,0],[23,18,103,0,"get"],[23,19,103,0],[24,6,103,0],[24,13,103,0,"CombatProvider"],[24,27,103,0],[25,4,103,0],[26,2,103,0],[27,2,1181,2],[27,6,1181,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,1181,2],[27,42,1181,2,"require"],[27,49,1181,2],[27,50,1181,2,"_dependencyMap"],[27,64,1181,2],[28,2,1181,2],[28,6,1181,2,"_slicedToArray"],[28,20,1181,2],[28,23,1181,2,"_interopDefault"],[28,38,1181,2],[28,39,1181,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,1181,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,91,0],[37,6,91,6,"CombatContext"],[37,19,91,19],[37,35,91,22],[37,39,91,22,"createContext"],[37,45,91,35],[37,46,91,35,"createContext"],[37,59,91,35],[37,61,91,67,"undefined"],[37,70,91,76],[37,71,91,77],[38,2,93,7],[38,6,93,13,"useCombat"],[38,15,93,22],[38,18,93,25,"useCombat"],[38,19,93,25],[38,24,93,50],[39,4,93,50,"_s"],[39,6,93,50],[40,4,94,2],[40,8,94,8,"context"],[40,15,94,15],[40,18,94,18],[40,22,94,18,"useContext"],[40,28,94,28],[40,29,94,28,"useContext"],[40,39,94,28],[40,41,94,29,"CombatContext"],[40,54,94,42],[40,55,94,43],[41,4,95,2],[41,8,95,6],[41,9,95,7,"context"],[41,16,95,14],[41,18,95,16],[42,6,96,4],[42,12,96,10],[42,16,96,14,"Error"],[42,21,96,19],[42,22,96,20],[42,70,96,68],[42,71,96,69],[43,4,97,2],[44,4,98,2],[44,11,98,9,"context"],[44,18,98,16],[45,2,99,0],[45,3,99,1],[46,2,99,2,"_s"],[46,4,99,2],[46,5,93,13,"useCombat"],[46,14,93,22],[47,2,101,0],[47,6,101,4,"enemyCounter"],[47,18,101,16],[47,21,101,19],[47,22,101,20],[47,23,101,21],[47,24,101,22],[49,2,103,7],[49,6,103,13,"CombatProvider"],[49,20,103,27],[49,23,103,30,"_ref"],[49,27,103,30],[49,31,103,73],[50,4,103,73,"_s4"],[50,7,103,73],[51,4,103,73],[51,8,103,73,"_s3"],[51,11,103,73],[51,14,103,73,"$RefreshSig$"],[51,26,103,73],[52,4,103,73],[52,8,103,33,"children"],[52,16,103,41],[52,19,103,41,"_ref"],[52,23,103,41],[52,24,103,33,"children"],[52,32,103,41],[53,4,104,2],[53,8,104,8,"game"],[53,12,104,12],[53,15,104,15],[53,19,104,15,"useGame"],[53,31,104,22],[53,32,104,22,"useGame"],[53,39,104,22],[53,41,104,23],[53,42,104,24],[54,4,105,2],[54,8,105,2,"_useZone"],[54,16,105,2],[54,19,105,77],[54,23,105,77,"useZone"],[54,35,105,84],[54,36,105,84,"useZone"],[54,43,105,84],[54,45,105,85],[54,46,105,86],[55,6,105,10,"currentZone"],[55,17,105,21],[55,20,105,21,"_useZone"],[55,28,105,21],[55,29,105,10,"currentZone"],[55,40,105,21],[56,6,105,23,"currentZoneLevel"],[56,22,105,39],[56,25,105,39,"_useZone"],[56,33,105,39],[56,34,105,23,"currentZoneLevel"],[56,50,105,39],[57,6,105,41,"recordEnemyKill"],[57,21,105,56],[57,24,105,56,"_useZone"],[57,32,105,56],[57,33,105,41,"recordEnemyKill"],[57,48,105,56],[58,6,105,58,"spawnZoneEnemy"],[58,20,105,72],[58,23,105,72,"_useZone"],[58,31,105,72],[58,32,105,58,"spawnZoneEnemy"],[58,46,105,72],[60,4,107,2],[61,4,108,2],[61,8,108,8,"initialCombatState"],[61,26,108,39],[61,29,108,42],[62,6,109,4,"isInCombat"],[62,16,109,14],[62,18,109,16],[62,23,109,21],[63,6,110,4,"currentTick"],[63,17,110,15],[63,19,110,17],[63,20,110,18],[64,6,111,4,"enemies"],[64,13,111,11],[64,15,111,13],[64,17,111,15],[65,6,112,4,"abilityManager"],[65,20,112,18],[65,22,112,20],[65,26,112,24,"AbilityManager"],[65,44,112,38],[65,45,112,38,"AbilityManager"],[65,59,112,38],[65,60,112,39],[65,61,112,40],[66,6,113,4,"statusEffects"],[66,19,113,17],[66,21,113,19],[66,25,113,23,"StatusEffectManager"],[66,44,113,42],[66,45,113,42,"StatusEffectManager"],[66,64,113,42],[66,65,113,43],[66,66,113,44],[67,6,114,4,"playerStats"],[67,17,114,15],[67,19,114,17],[68,8,115,6,"attack"],[68,14,115,12],[68,16,115,14],[68,18,115,16],[69,8,115,18],[70,8,116,6,"defense"],[70,15,116,13],[70,17,116,15],[70,18,116,16],[71,8,117,6,"health"],[71,14,117,12],[71,16,117,14],[71,19,117,17],[72,8,118,6,"maxHealth"],[72,17,118,15],[72,19,118,17],[72,22,118,20],[73,8,119,6,"critChance"],[73,18,119,16],[73,20,119,18],[73,21,119,19],[74,8,120,6,"critDamage"],[74,18,120,16],[74,20,120,18],[74,23,120,21],[75,8,121,6,"cooldownReduction"],[75,25,121,23],[75,27,121,25],[76,6,122,4],[77,4,123,2],[77,5,123,3],[78,4,125,2],[78,8,125,2,"_useState"],[78,17,125,2],[78,20,125,40],[78,24,125,40,"useState"],[78,30,125,48],[78,31,125,48,"useState"],[78,39,125,48],[78,41,125,62,"initialCombatState"],[78,59,125,80],[78,60,125,81],[79,6,125,81,"_useState2"],[79,16,125,81],[79,23,125,81,"_slicedToArray"],[79,37,125,81],[79,38,125,81,"default"],[79,45,125,81],[79,47,125,81,"_useState"],[79,56,125,81],[80,6,125,9,"combatState"],[80,17,125,20],[80,20,125,20,"_useState2"],[80,30,125,20],[81,6,125,22,"setCombatState"],[81,20,125,36],[81,23,125,36,"_useState2"],[81,33,125,36],[83,4,127,2],[84,4,128,2],[84,8,128,2,"useEffect"],[84,14,128,11],[84,15,128,11,"useEffect"],[84,24,128,11],[84,26,128,12],[84,32,128,18],[85,6,129,4],[85,10,129,8,"game"],[85,14,129,12],[85,15,129,13,"gameState"],[85,24,129,22],[85,25,129,23,"abilityData"],[85,36,129,34],[85,40,129,38,"combatState"],[85,51,129,49],[85,52,129,50,"abilityManager"],[85,66,129,64],[85,68,129,66],[86,8,130,6,"console"],[86,15,130,13],[86,16,130,14,"log"],[86,19,130,17],[86,20,130,18],[86,68,130,66],[86,70,130,68,"game"],[86,74,130,72],[86,75,130,73,"gameState"],[86,84,130,82],[86,85,130,83,"abilityData"],[86,96,130,94],[86,97,130,95],[87,8,131,6,"combatState"],[87,19,131,17],[87,20,131,18,"abilityManager"],[87,34,131,32],[87,35,131,33,"restoreFromSaveData"],[87,54,131,52],[87,55,131,53,"game"],[87,59,131,57],[87,60,131,58,"gameState"],[87,69,131,67],[87,70,131,68,"abilityData"],[87,81,131,79],[87,82,131,80],[89,8,133,6],[90,8,134,6,"setCombatState"],[90,22,134,20],[90,23,134,21,"prev"],[90,27,134,25],[90,32,134,30],[91,10,134,32],[91,13,134,35,"prev"],[92,8,134,40],[92,9,134,41],[92,10,134,42],[92,11,134,43],[93,6,135,4],[94,4,136,2],[94,5,136,3],[94,7,136,5],[94,8,136,6,"game"],[94,12,136,10],[94,13,136,11,"gameState"],[94,22,136,20],[94,23,136,21,"abilityData"],[94,34,136,32],[94,36,136,34,"combatState"],[94,47,136,45],[94,48,136,46,"abilityManager"],[94,62,136,60],[94,63,136,61],[94,64,136,62],[96,4,138,2],[97,4,139,2],[97,8,139,2,"useEffect"],[97,14,139,11],[97,15,139,11,"useEffect"],[97,24,139,11],[97,26,139,12],[97,32,139,18],[98,6,140,4],[98,10,140,8,"game"],[98,14,140,12],[98,15,140,13,"gameState"],[98,24,140,22],[98,25,140,23,"ninja"],[98,30,140,28],[98,32,140,30],[99,8,141,6],[99,12,141,12,"effectiveStats"],[99,26,141,26],[99,29,141,29,"game"],[99,33,141,33],[99,34,141,34,"getEffectiveStats"],[99,51,141,51],[99,52,141,52],[99,53,141,53],[100,8,143,6,"setCombatState"],[100,22,143,20],[100,23,143,21,"prev"],[100,27,143,25],[100,31,143,29],[101,10,144,8],[102,10,145,8],[102,14,145,12,"prev"],[102,18,145,16],[102,19,145,17,"playerStats"],[102,30,145,28],[102,31,145,29,"maxHealth"],[102,40,145,38],[102,45,145,43],[102,48,145,46],[102,52,145,50,"prev"],[102,56,145,54],[102,57,145,55,"playerStats"],[102,68,145,66],[102,69,145,67,"attack"],[102,75,145,73],[102,80,145,78],[102,82,145,80],[102,84,145,82],[103,12,146,10,"console"],[103,19,146,17],[103,20,146,18,"log"],[103,23,146,21],[103,24,146,22],[103,60,146,58,"effectiveStats"],[103,74,146,72],[103,75,146,73,"health"],[103,81,146,79],[103,93,146,91,"effectiveStats"],[103,107,146,105],[103,108,146,106,"attack"],[103,114,146,112],[103,127,146,125,"effectiveStats"],[103,141,146,139],[103,142,146,140,"defense"],[103,149,146,147],[103,151,146,149],[103,152,146,150],[104,12,148,10],[104,19,148,17],[105,14,149,12],[105,17,149,15,"prev"],[105,21,149,19],[106,14,150,12,"playerStats"],[106,25,150,23],[106,27,150,25],[107,16,151,14,"attack"],[107,22,151,20],[107,24,151,22,"effectiveStats"],[107,38,151,36],[107,39,151,37,"attack"],[107,45,151,43],[108,16,152,14,"defense"],[108,23,152,21],[108,25,152,23,"effectiveStats"],[108,39,152,37],[108,40,152,38,"defense"],[108,47,152,45],[109,16,153,14,"health"],[109,22,153,20],[109,24,153,22,"effectiveStats"],[109,38,153,36],[109,39,153,37,"health"],[109,45,153,43],[110,16,153,45],[111,16,154,14,"maxHealth"],[111,25,154,23],[111,27,154,25,"effectiveStats"],[111,41,154,39],[111,42,154,40,"health"],[111,48,154,46],[112,16,155,14,"critChance"],[112,26,155,24],[112,28,155,26,"effectiveStats"],[112,42,155,40],[112,43,155,41,"critChance"],[112,53,155,51],[112,57,155,55],[112,58,155,56],[113,16,156,14,"critDamage"],[113,26,156,24],[113,28,156,26,"effectiveStats"],[113,42,156,40],[113,43,156,41,"critDamage"],[113,53,156,51],[113,57,156,55],[113,60,156,58],[114,16,157,14,"cooldownReduction"],[114,33,157,31],[114,35,157,33,"effectiveStats"],[114,49,157,47],[114,50,157,48,"cooldownReduction"],[114,67,157,65],[114,71,157,69],[115,14,158,12],[116,12,159,10],[116,13,159,11],[117,10,160,8],[118,10,161,8],[118,17,161,15,"prev"],[118,21,161,19],[119,8,162,6],[119,9,162,7],[119,10,162,8],[120,6,163,4],[121,4,164,2],[121,5,164,3],[121,7,164,5],[121,8,164,6,"game"],[121,12,164,10],[121,13,164,11,"gameState"],[121,22,164,20],[121,23,164,21,"ninja"],[121,28,164,26],[121,29,164,27],[121,30,164,28],[122,4,166,2],[122,8,166,2,"_useState3"],[122,18,166,2],[122,21,166,40],[122,25,166,40,"useState"],[122,31,166,48],[122,32,166,48,"useState"],[122,40,166,48],[122,42,166,69],[122,44,166,71],[122,45,166,72],[123,6,166,72,"_useState4"],[123,16,166,72],[123,23,166,72,"_slicedToArray"],[123,37,166,72],[123,38,166,72,"default"],[123,45,166,72],[123,47,166,72,"_useState3"],[123,57,166,72],[124,6,166,9,"projectiles"],[124,17,166,20],[124,20,166,20,"_useState4"],[124,30,166,20],[125,6,166,22,"setProjectiles"],[125,20,166,36],[125,23,166,36,"_useState4"],[125,33,166,36],[126,4,167,2],[126,8,167,2,"_useState5"],[126,18,167,2],[126,21,167,52],[126,25,167,52,"useState"],[126,31,167,60],[126,32,167,60,"useState"],[126,40,167,60],[126,42,167,69],[126,43,167,70],[126,44,167,71],[127,6,167,71,"_useState6"],[127,16,167,71],[127,23,167,71,"_slicedToArray"],[127,37,167,71],[127,38,167,71,"default"],[127,45,167,71],[127,47,167,71,"_useState5"],[127,57,167,71],[128,6,167,9,"lastExplosionTime"],[128,23,167,26],[128,26,167,26,"_useState6"],[128,36,167,26],[129,6,167,28,"setLastExplosionTime"],[129,26,167,48],[129,29,167,48,"_useState6"],[129,39,167,48],[130,4,168,2],[131,4,169,2],[133,4,171,2],[134,4,172,2],[134,8,172,8,"handleEnemyKill"],[134,23,172,23],[134,26,172,26],[134,30,172,26,"useCallback"],[134,36,172,37],[134,37,172,37,"useCallback"],[134,48,172,37],[134,50,172,39,"enemy"],[134,55,172,57],[134,59,172,62],[135,6,173,4,"console"],[135,13,173,11],[135,14,173,12,"log"],[135,17,173,15],[135,18,173,16],[135,73,173,71],[135,75,173,73,"enemy"],[135,80,173,78],[135,81,173,79,"id"],[135,83,173,81],[135,84,173,82],[137,6,175,4],[138,6,176,4],[138,10,176,10,"baseXpReward"],[138,22,176,22],[138,25,176,25],[138,28,176,28],[138,29,176,29],[138,30,176,30],[139,6,177,4],[139,10,177,10,"xpMultiplier"],[139,22,177,22],[139,25,177,25,"game"],[139,29,177,29],[139,30,177,30,"gameState"],[139,39,177,39],[139,40,177,40,"subscriptionBenefits"],[139,60,177,60],[139,62,177,62,"xp_multiplier"],[139,75,177,75],[139,79,177,79],[139,82,177,82],[140,6,178,4],[140,10,178,10,"dropMultiplier"],[140,24,178,24],[140,27,178,27,"game"],[140,31,178,31],[140,32,178,32,"gameState"],[140,41,178,41],[140,42,178,42,"subscriptionBenefits"],[140,62,178,62],[140,64,178,64,"drop_multiplier"],[140,79,178,79],[140,83,178,83],[140,86,178,86],[141,6,180,4],[141,10,180,10,"xpReward"],[141,18,180,18],[141,21,180,21,"Math"],[141,25,180,25],[141,26,180,26,"floor"],[141,31,180,31],[141,32,180,32,"baseXpReward"],[141,44,180,44],[141,47,180,47,"xpMultiplier"],[141,59,180,59],[141,60,180,60],[142,6,181,4],[142,10,181,10,"goldReward"],[142,20,181,20],[142,23,181,23,"Math"],[142,27,181,27],[142,28,181,28,"floor"],[142,33,181,33],[142,34,181,34],[142,38,181,38],[142,41,181,41,"dropMultiplier"],[142,55,181,55],[142,56,181,56],[142,57,181,57],[142,58,181,58],[144,6,183,4,"console"],[144,13,183,11],[144,14,183,12,"log"],[144,17,183,15],[144,18,183,16],[144,48,183,46,"xpReward"],[144,56,183,54],[144,67,183,65,"goldReward"],[144,77,183,75],[144,93,183,91],[144,94,183,92],[145,6,184,4,"console"],[145,13,184,11],[145,14,184,12,"log"],[145,17,184,15],[145,18,184,16],[145,60,184,58,"xpMultiplier"],[145,72,184,70],[145,94,184,92,"dropMultiplier"],[145,108,184,106],[145,110,184,108],[145,111,184,109],[146,6,185,4,"console"],[146,13,185,11],[146,14,185,12,"log"],[146,17,185,15],[146,18,185,16],[146,54,185,52,"baseXpReward"],[146,66,185,64],[146,81,185,79,"xpReward"],[146,89,185,87],[146,91,185,89],[146,92,185,90],[147,6,186,4,"console"],[147,13,186,11],[147,14,186,12,"log"],[147,17,186,15],[147,18,186,16],[147,58,186,56],[147,60,186,58,"JSON"],[147,64,186,62],[147,65,186,63,"stringify"],[147,74,186,72],[147,75,186,73,"game"],[147,79,186,77],[147,80,186,78,"gameState"],[147,89,186,87],[147,90,186,88,"subscriptionBenefits"],[147,110,186,108],[147,111,186,109],[147,112,186,110],[148,6,187,4,"console"],[148,13,187,11],[148,14,187,12,"log"],[148,17,187,15],[148,18,187,16],[148,49,187,47,"Platform"],[148,61,187,55],[148,62,187,55,"Platform"],[148,70,187,55],[148,71,187,56,"OS"],[148,73,187,58],[148,84,187,69,"Date"],[148,88,187,73],[148,89,187,74,"now"],[148,92,187,77],[148,93,187,78],[148,94,187,79],[148,96,187,81],[148,97,187,82],[150,6,189,4],[151,6,190,4],[152,6,191,4,"setTimeout"],[152,16,191,14],[152,17,191,15],[152,23,191,21],[153,8,192,6,"console"],[153,15,192,13],[153,16,192,14,"log"],[153,19,192,17],[153,20,192,18],[153,78,192,76],[153,79,192,77],[155,8,194,6],[156,8,195,6,"game"],[156,12,195,10],[156,13,195,11,"updateNinja"],[156,24,195,22],[156,25,195,24,"prev"],[156,29,195,28],[156,33,195,33],[157,10,196,8,"console"],[157,17,196,15],[157,18,196,16,"log"],[157,21,196,19],[157,22,196,20],[157,54,196,52,"prev"],[157,58,196,56],[157,59,196,57,"experience"],[157,69,196,67],[157,81,196,79,"prev"],[157,85,196,83],[157,86,196,84,"experience"],[157,96,196,94],[157,99,196,97,"xpReward"],[157,107,196,105],[157,109,196,107],[157,110,196,108],[158,10,197,8,"console"],[158,17,197,15],[158,18,197,16,"log"],[158,21,197,19],[158,22,197,20],[158,56,197,54,"prev"],[158,60,197,58],[158,61,197,59,"gold"],[158,65,197,63],[158,77,197,75,"prev"],[158,81,197,79],[158,82,197,80,"gold"],[158,86,197,84],[158,89,197,87,"goldReward"],[158,99,197,97],[158,101,197,99],[158,102,197,100],[159,10,198,8],[159,17,198,15],[160,12,199,10,"experience"],[160,22,199,20],[160,24,199,22,"prev"],[160,28,199,26],[160,29,199,27,"experience"],[160,39,199,37],[160,42,199,40,"xpReward"],[160,50,199,48],[161,12,200,10,"gold"],[161,16,200,14],[161,18,200,16,"prev"],[161,22,200,20],[161,23,200,21,"gold"],[161,27,200,25],[161,30,200,28,"goldReward"],[162,10,201,8],[162,11,201,9],[163,8,202,6],[163,9,202,7],[163,10,202,8],[165,8,204,6],[166,8,205,6],[166,12,205,12,"zoneEnemy"],[166,21,205,21],[166,24,205,24],[167,10,206,8,"id"],[167,12,206,10],[167,14,206,12,"enemy"],[167,19,206,17],[167,20,206,18,"id"],[167,22,206,20],[168,10,207,8,"typeId"],[168,16,207,14],[168,18,207,16,"enemy"],[168,23,207,21],[168,24,207,22,"zoneTypeId"],[168,34,207,32],[168,38,207,36],[168,48,207,46],[169,10,207,48],[170,10,208,8,"name"],[170,14,208,12],[170,16,208,14,"enemy"],[170,21,208,19],[170,22,208,20,"name"],[170,26,208,24],[171,10,209,8,"icon"],[171,14,209,12],[171,16,209,14],[171,20,209,18],[172,10,209,20],[173,10,210,8,"hp"],[173,12,210,10],[173,14,210,12],[173,15,210,13],[174,10,210,15],[175,10,211,8,"maxHP"],[175,15,211,13],[175,17,211,15,"enemy"],[175,22,211,20],[175,23,211,21,"maxHealth"],[175,32,211,30],[176,10,212,8,"attack"],[176,16,212,14],[176,18,212,16,"enemy"],[176,23,212,21],[176,24,212,22,"stats"],[176,29,212,27],[176,30,212,28,"attack"],[176,36,212,34],[177,10,213,8,"xp"],[177,12,213,10],[177,14,213,12,"enemy"],[177,19,213,17],[177,20,213,18,"zoneXP"],[177,26,213,24],[177,30,213,28],[177,32,213,30],[178,10,213,32],[179,10,214,8,"position"],[179,18,214,16],[179,20,214,18,"enemy"],[179,25,214,23],[179,26,214,24,"position"],[180,8,215,6],[180,9,215,7],[181,8,217,6,"console"],[181,15,217,13],[181,16,217,14,"log"],[181,19,217,17],[181,20,217,18],[181,40,217,38,"zoneEnemy"],[181,49,217,47],[181,50,217,48,"name"],[181,54,217,52],[181,59,217,57,"zoneEnemy"],[181,68,217,66],[181,69,217,67,"typeId"],[181,75,217,73],[181,113,217,111],[181,114,217,112],[182,8,218,6,"recordEnemyKill"],[182,23,218,21],[182,24,218,22,"zoneEnemy"],[182,33,218,31],[182,34,218,32],[183,6,219,4],[183,7,219,5],[183,9,219,7],[183,10,219,8],[183,11,219,9],[183,12,219,10],[183,13,219,11],[184,4,220,2],[184,5,220,3],[184,7,220,5],[184,8,220,6,"game"],[184,12,220,10],[184,13,220,11,"updateNinja"],[184,24,220,22],[184,26,220,24,"recordEnemyKill"],[184,41,220,39],[184,42,220,40],[184,43,220,41],[186,4,222,2],[187,4,223,2],[187,8,223,8,"handleCombatTick"],[187,24,223,24],[187,27,223,27,"React"],[187,32,223,32],[187,33,223,32,"default"],[187,40,223,32],[187,41,223,33,"useCallback"],[187,52,223,44],[187,53,223,45],[187,59,223,51],[188,6,223,51],[188,10,223,51,"_s2"],[188,13,223,51],[188,16,223,51,"$RefreshSig$"],[188,28,223,51],[189,6,224,4,"console"],[189,13,224,11],[189,14,224,12,"log"],[189,17,224,15],[189,18,224,16],[189,87,224,85],[189,88,224,86],[190,6,226,4],[190,10,226,8,"enemiesToKill"],[190,23,226,36],[190,26,226,39],[190,28,226,41],[190,29,226,42],[190,30,226,43],[192,6,228,4,"_s2"],[192,9,228,4],[192,10,228,4,"setCombatState"],[192,24,228,18],[192,25,228,18,"_s2"],[192,28,228,18],[192,29,228,19,"prev"],[192,33,228,23],[192,37,228,27],[193,8,228,27,"_s2"],[193,11,228,27],[194,8,229,6],[194,12,229,12,"newTick"],[194,19,229,19],[194,22,229,22,"combatEngine"],[194,41,229,34],[194,42,229,34,"combatEngine"],[194,54,229,34],[194,55,229,35,"getCurrentTick"],[194,69,229,49],[194,70,229,50],[194,71,229,51],[195,8,230,6],[195,12,230,12,"newState"],[195,20,230,20],[195,23,230,23],[196,10,230,25],[196,13,230,28,"prev"],[196,17,230,32],[197,10,230,34,"currentTick"],[197,21,230,45],[197,23,230,47,"newTick"],[198,8,230,55],[198,9,230,56],[199,8,232,6],[199,12,232,10],[199,13,232,11,"newState"],[199,21,232,19],[199,22,232,20,"isInCombat"],[199,32,232,30],[199,34,232,32],[199,41,232,39,"newState"],[199,49,232,47],[201,8,234,6],[202,8,235,6,"newState"],[202,16,235,14],[202,17,235,15,"abilityManager"],[202,31,235,29],[202,32,235,30,"updateCooldowns"],[202,47,235,45],[202,48,235,46,"newTick"],[202,55,235,53],[202,56,235,54],[204,8,237,6],[205,8,238,6],[205,12,238,12,"effectResults"],[205,25,238,25],[205,28,238,28,"newState"],[205,36,238,36],[205,37,238,37,"statusEffects"],[205,50,238,50],[205,51,238,51,"processTick"],[205,62,238,62],[205,63,238,63,"newTick"],[205,70,238,70],[205,71,238,71],[207,8,240,6],[208,8,241,6,"effectResults"],[208,21,241,19],[208,22,241,20,"forEach"],[208,29,241,27],[208,30,241,28],[208,31,241,29,"results"],[208,38,241,36],[208,40,241,38,"entityId"],[208,48,241,46],[208,53,241,51],[209,10,242,8],[209,14,242,14,"enemyIndex"],[209,24,242,24],[209,27,242,27,"newState"],[209,35,242,35],[209,36,242,36,"enemies"],[209,43,242,43],[209,44,242,44,"findIndex"],[209,53,242,53],[209,54,242,54,"e"],[209,55,242,55],[209,59,242,59,"e"],[209,60,242,60],[209,61,242,61,"id"],[209,63,242,63],[209,68,242,68,"entityId"],[209,76,242,76],[209,77,242,77],[210,10,243,8],[210,14,243,12,"enemyIndex"],[210,24,243,22],[210,28,243,26],[210,29,243,27],[210,31,243,29],[211,12,244,10,"results"],[211,19,244,17],[211,20,244,18,"forEach"],[211,27,244,25],[211,28,244,26,"result"],[211,34,244,32],[211,38,244,36],[212,14,245,12,"newState"],[212,22,245,20],[212,23,245,21,"enemies"],[212,30,245,28],[212,31,245,29,"enemyIndex"],[212,41,245,39],[212,42,245,40],[212,43,245,41,"health"],[212,49,245,47],[212,53,245,51,"result"],[212,59,245,57],[212,60,245,58,"damage"],[212,66,245,64],[213,14,246,12,"newState"],[213,22,246,20],[213,23,246,21,"enemies"],[213,30,246,28],[213,31,246,29,"enemyIndex"],[213,41,246,39],[213,42,246,40],[213,43,246,41,"lastDamaged"],[213,54,246,52],[213,57,246,55,"newTick"],[213,64,246,62],[214,12,247,10],[214,13,247,11],[214,14,247,12],[215,10,248,8],[216,8,249,6],[216,9,249,7],[216,10,249,8],[218,8,251,6],[219,8,252,6],[220,8,253,6],[220,12,253,10,"newState"],[220,20,253,18],[220,21,253,19,"playerStats"],[220,32,253,30],[220,36,253,34,"game"],[220,40,253,38],[220,41,253,39,"gameState"],[220,50,253,48],[220,51,253,49,"ninja"],[220,56,253,54],[220,58,253,56],[221,10,254,8],[221,14,254,14,"effectiveStats"],[221,28,254,28],[221,31,254,31,"game"],[221,35,254,35],[221,36,254,36,"getEffectiveStats"],[221,53,254,53],[221,54,254,54],[221,55,254,55],[223,10,256,8],[224,10,257,8],[224,14,257,12,"newState"],[224,22,257,20],[224,23,257,21,"playerStats"],[224,34,257,32],[224,35,257,33,"attack"],[224,41,257,39],[224,46,257,44,"effectiveStats"],[224,60,257,58],[224,61,257,59,"attack"],[224,67,257,65],[224,71,258,12,"newState"],[224,79,258,20],[224,80,258,21,"playerStats"],[224,91,258,32],[224,92,258,33,"defense"],[224,99,258,40],[224,104,258,45,"effectiveStats"],[224,118,258,59],[224,119,258,60,"defense"],[224,126,258,67],[224,130,259,12,"newState"],[224,138,259,20],[224,139,259,21,"playerStats"],[224,150,259,32],[224,151,259,33,"maxHealth"],[224,160,259,42],[224,165,259,47,"effectiveStats"],[224,179,259,61],[224,180,259,62,"maxHealth"],[224,189,259,71],[224,191,259,73],[225,12,261,10,"console"],[225,19,261,17],[225,20,261,18,"log"],[225,23,261,21],[225,24,261,22],[225,58,261,56,"newState"],[225,66,261,64],[225,67,261,65,"playerStats"],[225,78,261,76],[225,79,261,77,"attack"],[225,85,261,83],[225,91,261,89,"effectiveStats"],[225,105,261,103],[225,106,261,104,"attack"],[225,112,261,110],[225,125,261,123,"newState"],[225,133,261,131],[225,134,261,132,"playerStats"],[225,145,261,143],[225,146,261,144,"defense"],[225,153,261,151],[225,159,261,157,"effectiveStats"],[225,173,261,171],[225,174,261,172,"defense"],[225,181,261,179],[225,192,261,190,"newState"],[225,200,261,198],[225,201,261,199,"playerStats"],[225,212,261,210],[225,213,261,211,"maxHealth"],[225,222,261,220],[225,228,261,226,"effectiveStats"],[225,242,261,240],[225,243,261,241,"maxHealth"],[225,252,261,250],[225,254,261,252],[225,255,261,253],[227,12,263,10],[228,12,264,10],[228,16,264,14,"newHealth"],[228,25,264,23],[228,28,264,26,"newState"],[228,36,264,34],[228,37,264,35,"playerStats"],[228,48,264,46],[228,49,264,47,"health"],[228,55,264,53],[229,12,265,10],[229,16,265,14,"newState"],[229,24,265,22],[229,25,265,23,"playerStats"],[229,36,265,34],[229,37,265,35,"maxHealth"],[229,46,265,44],[229,51,265,49,"effectiveStats"],[229,65,265,63],[229,66,265,64,"maxHealth"],[229,75,265,73],[229,77,265,75],[230,14,266,12],[231,14,267,12],[231,18,267,16,"effectiveStats"],[231,32,267,30],[231,33,267,31,"maxHealth"],[231,42,267,40],[231,45,267,43,"newState"],[231,53,267,51],[231,54,267,52,"playerStats"],[231,65,267,63],[231,66,267,64,"maxHealth"],[231,75,267,73],[231,78,267,76],[231,81,267,79],[231,83,267,81],[232,16,268,14],[233,16,269,14],[233,20,269,20,"healthRatio"],[233,31,269,31],[233,34,269,34,"newState"],[233,42,269,42],[233,43,269,43,"playerStats"],[233,54,269,54],[233,55,269,55,"maxHealth"],[233,64,269,64],[233,67,269,67],[233,68,269,68],[233,71,270,16,"newState"],[233,79,270,24],[233,80,270,25,"playerStats"],[233,91,270,36],[233,92,270,37,"health"],[233,98,270,43],[233,101,270,46,"newState"],[233,109,270,54],[233,110,270,55,"playerStats"],[233,121,270,66],[233,122,270,67,"maxHealth"],[233,131,270,76],[233,134,270,79],[233,135,270,80],[234,16,271,14,"newHealth"],[234,25,271,23],[234,28,271,26,"Math"],[234,32,271,30],[234,33,271,31,"floor"],[234,38,271,36],[234,39,271,37,"effectiveStats"],[234,53,271,51],[234,54,271,52,"maxHealth"],[234,63,271,61],[234,66,271,64,"healthRatio"],[234,77,271,75],[234,78,271,76],[235,14,272,12],[235,15,272,13],[235,21,272,19],[235,25,272,23,"newState"],[235,33,272,31],[235,34,272,32,"playerStats"],[235,45,272,43],[235,46,272,44,"health"],[235,52,272,50],[235,55,272,53,"effectiveStats"],[235,69,272,67],[235,70,272,68,"maxHealth"],[235,79,272,77],[235,81,272,79],[236,16,273,14],[237,16,274,14,"newHealth"],[237,25,274,23],[237,28,274,26,"effectiveStats"],[237,42,274,40],[237,43,274,41,"maxHealth"],[237,52,274,50],[238,14,275,12],[239,14,276,12],[240,12,277,10],[241,12,279,10,"newState"],[241,20,279,18],[241,21,279,19,"playerStats"],[241,32,279,30],[241,35,279,33],[242,14,280,12],[242,17,280,15,"newState"],[242,25,280,23],[242,26,280,24,"playerStats"],[242,37,280,35],[243,14,281,12,"attack"],[243,20,281,18],[243,22,281,20,"effectiveStats"],[243,36,281,34],[243,37,281,35,"attack"],[243,43,281,41],[244,14,282,12,"defense"],[244,21,282,19],[244,23,282,21,"effectiveStats"],[244,37,282,35],[244,38,282,36,"defense"],[244,45,282,43],[245,14,283,12,"maxHealth"],[245,23,283,21],[245,25,283,23,"effectiveStats"],[245,39,283,37],[245,40,283,38,"maxHealth"],[245,49,283,47],[246,14,283,49],[247,14,284,12,"health"],[247,20,284,18],[247,22,284,20,"newHealth"],[247,31,284,29],[248,14,284,31],[249,14,285,12,"critChance"],[249,24,285,22],[249,26,285,24,"effectiveStats"],[249,40,285,38],[249,41,285,39,"critChance"],[249,51,285,49],[249,55,285,53,"newState"],[249,63,285,61],[249,64,285,62,"playerStats"],[249,75,285,73],[249,76,285,74,"critChance"],[249,86,285,84],[250,14,286,12,"critDamage"],[250,24,286,22],[250,26,286,24,"effectiveStats"],[250,40,286,38],[250,41,286,39,"critDamage"],[250,51,286,49],[250,55,286,53,"newState"],[250,63,286,61],[250,64,286,62,"playerStats"],[250,75,286,73],[250,76,286,74,"critDamage"],[250,86,286,84],[251,14,287,12,"cooldownReduction"],[251,31,287,29],[251,33,287,31,"effectiveStats"],[251,47,287,45],[251,48,287,46,"cooldownReduction"],[251,65,287,63],[251,69,287,67,"newState"],[251,77,287,75],[251,78,287,76,"playerStats"],[251,89,287,87],[251,90,287,88,"cooldownReduction"],[252,12,288,10],[252,13,288,11],[253,10,289,8],[255,10,291,8],[256,10,292,8],[256,14,292,12,"game"],[256,18,292,16],[256,19,292,17,"gameState"],[256,28,292,26],[256,29,292,27,"isAlive"],[256,36,292,34],[256,40,293,12,"game"],[256,44,293,16],[256,45,293,17,"gameState"],[256,54,293,26],[256,55,293,27,"ninja"],[256,60,293,32],[256,61,293,33,"health"],[256,67,293,39],[256,72,293,44,"effectiveStats"],[256,86,293,58],[256,87,293,59,"maxHealth"],[256,96,293,68],[256,100,294,12,"newState"],[256,108,294,20],[256,109,294,21,"playerStats"],[256,120,294,32],[256,121,294,33,"health"],[256,127,294,39],[256,130,294,42,"effectiveStats"],[256,144,294,56],[256,145,294,57,"maxHealth"],[256,154,294,66],[256,157,294,69],[256,160,294,72],[256,162,294,74],[257,12,295,10,"console"],[257,19,295,17],[257,20,295,18,"log"],[257,23,295,21],[257,24,295,22],[257,58,295,56,"newState"],[257,66,295,64],[257,67,295,65,"playerStats"],[257,78,295,76],[257,79,295,77,"health"],[257,85,295,83],[257,91,295,89,"game"],[257,95,295,93],[257,96,295,94,"gameState"],[257,105,295,103],[257,106,295,104,"ninja"],[257,111,295,109],[257,112,295,110,"health"],[257,118,295,116],[257,139,295,137],[257,140,295,138],[258,12,296,10,"newState"],[258,20,296,18],[258,21,296,19,"playerStats"],[258,32,296,30],[258,33,296,31,"health"],[258,39,296,37],[258,42,296,40,"game"],[258,46,296,44],[258,47,296,45,"gameState"],[258,56,296,54],[258,57,296,55,"ninja"],[258,62,296,60],[258,63,296,61,"health"],[258,69,296,67],[259,10,297,8],[260,8,298,6],[262,8,300,6],[263,8,301,6,"newState"],[263,16,301,14],[263,17,301,15,"enemies"],[263,24,301,22],[263,25,301,23,"forEach"],[263,32,301,30],[263,33,301,31,"enemy"],[263,38,301,36],[263,42,301,40],[264,10,302,8],[264,14,302,12],[264,15,302,13,"enemy"],[264,20,302,18],[264,21,302,19,"isBoss"],[264,27,302,25],[264,29,302,27],[265,12,302,29],[266,12,303,10],[267,12,304,10],[267,16,304,16,"MOVEMENT_SPEED"],[267,30,304,30],[267,33,304,33],[267,37,304,37],[267,38,304,38],[267,39,304,39],[268,12,305,10],[268,16,305,16,"SCREEN_WIDTH"],[268,28,305,28],[268,31,305,31],[268,34,305,34],[269,12,306,10],[269,16,306,16,"GAME_AREA_HEIGHT"],[269,32,306,32],[269,35,306,35],[269,38,306,38],[269,39,306,39],[269,40,306,40],[270,12,307,10],[270,16,307,16,"ENEMY_SIZE"],[270,26,307,26],[270,29,307,29],[270,31,307,31],[272,12,309,10],[273,12,310,10],[273,16,310,16,"playerX"],[273,23,310,23],[273,26,310,26,"currentNinjaPosition"],[273,46,310,46],[273,47,310,47,"x"],[273,48,310,48],[274,12,311,10],[274,16,311,16,"playerY"],[274,23,311,23],[274,26,311,26,"currentNinjaPosition"],[274,46,311,46],[274,47,311,47,"y"],[274,48,311,48],[276,12,313,10],[277,12,314,10],[277,16,314,16,"deltaX"],[277,22,314,22],[277,25,314,25,"playerX"],[277,32,314,32],[277,35,314,35,"enemy"],[277,40,314,40],[277,41,314,41,"position"],[277,49,314,49],[277,50,314,50,"x"],[277,51,314,51],[278,12,315,10],[278,16,315,16,"deltaY"],[278,22,315,22],[278,25,315,25,"playerY"],[278,32,315,32],[278,35,315,35,"enemy"],[278,40,315,40],[278,41,315,41,"position"],[278,49,315,49],[278,50,315,50,"y"],[278,51,315,51],[279,12,316,10],[279,16,316,16,"distance"],[279,24,316,24],[279,27,316,27,"Math"],[279,31,316,31],[279,32,316,32,"sqrt"],[279,36,316,36],[279,37,316,37,"deltaX"],[279,43,316,43],[279,46,316,46,"deltaX"],[279,52,316,52],[279,55,316,55,"deltaY"],[279,61,316,61],[279,64,316,64,"deltaY"],[279,70,316,70],[279,71,316,71],[281,12,318,10],[282,12,319,10],[282,16,319,16,"ATTACK_RANGE"],[282,28,319,28],[282,31,319,31],[282,33,319,33],[282,34,319,34],[282,35,319,35],[283,12,320,10],[283,16,320,16,"ATTACK_COOLDOWN"],[283,31,320,31],[283,34,320,34],[283,36,320,36],[283,37,320,37],[283,38,320,38],[285,12,322,10],[285,16,322,14,"distance"],[285,24,322,22],[285,28,322,26,"ATTACK_RANGE"],[285,40,322,38],[285,42,322,40],[286,14,323,12],[287,14,324,12],[287,18,324,16],[287,19,324,17,"enemy"],[287,24,324,22],[287,25,324,23,"lastAttackTick"],[287,39,324,37],[287,41,324,39,"enemy"],[287,46,324,44],[287,47,324,45,"lastAttackTick"],[287,61,324,59],[287,64,324,62],[287,65,324,63],[288,14,326,12],[288,18,326,16,"newState"],[288,26,326,24],[288,27,326,25,"currentTick"],[288,38,326,36],[288,41,326,39,"enemy"],[288,46,326,44],[288,47,326,45,"lastAttackTick"],[288,61,326,59],[288,65,326,63,"ATTACK_COOLDOWN"],[288,80,326,78],[288,82,326,80],[289,16,327,14],[290,16,328,14],[290,20,328,18],[290,21,328,19,"game"],[290,25,328,23],[290,26,328,24,"gameState"],[290,35,328,33],[290,36,328,34,"isAlive"],[290,43,328,41],[290,45,328,43],[291,18,329,16,"console"],[291,25,329,23],[291,26,329,24,"log"],[291,29,329,27],[291,30,329,28],[291,49,329,47,"enemy"],[291,54,329,52],[291,55,329,53,"name"],[291,59,329,57],[291,93,329,91],[291,94,329,92],[292,18,330,16],[293,18,331,16,"enemy"],[293,23,331,21],[293,24,331,22,"lastAttackTick"],[293,38,331,36],[293,41,331,39,"newState"],[293,49,331,47],[293,50,331,48,"currentTick"],[293,61,331,59],[294,16,332,14],[294,17,332,15],[294,23,332,21],[295,18,333,16],[296,18,334,16],[296,22,334,22,"isPlayerInvincible"],[296,40,334,40],[296,43,334,43,"game"],[296,47,334,47],[296,48,334,48,"gameState"],[296,57,334,57],[296,58,334,58,"isInvincible"],[296,70,334,70],[296,74,335,41,"game"],[296,78,335,45],[296,79,335,46,"gameState"],[296,88,335,55],[296,89,335,56,"invincibilityEndTime"],[296,109,335,76],[296,113,336,41,"Date"],[296,117,336,45],[296,118,336,46,"now"],[296,121,336,49],[296,122,336,50],[296,123,336,51],[296,126,336,54,"game"],[296,130,336,58],[296,131,336,59,"gameState"],[296,140,336,68],[296,141,336,69,"invincibilityEndTime"],[296,161,336,89],[297,18,338,16],[297,22,338,20,"isPlayerInvincible"],[297,40,338,38],[297,42,338,40],[298,20,339,18,"console"],[298,27,339,25],[298,28,339,26,"log"],[298,31,339,29],[298,32,339,30],[298,51,339,49,"enemy"],[298,56,339,54],[298,57,339,55,"name"],[298,61,339,59],[298,101,339,99],[298,102,339,100],[299,20,340,18],[300,20,341,18,"enemy"],[300,25,341,23],[300,26,341,24,"lastAttackTick"],[300,40,341,38],[300,43,341,41,"newState"],[300,51,341,49],[300,52,341,50,"currentTick"],[300,63,341,61],[301,18,342,16],[301,19,342,17],[301,25,342,23],[302,20,343,16],[303,20,344,16],[303,24,344,22,"baseAttack"],[303,34,344,32],[303,37,344,35,"enemy"],[303,42,344,40],[303,43,344,41,"stats"],[303,48,344,46],[303,49,344,47,"attack"],[303,55,344,53],[303,58,344,56],[303,61,344,59],[303,62,344,60],[303,63,344,61],[304,20,345,16],[304,24,345,22,"attackDamage"],[304,36,345,34],[304,39,345,37,"Math"],[304,43,345,41],[304,44,345,42,"floor"],[304,49,345,47],[304,50,345,48,"baseAttack"],[304,60,345,58],[304,64,345,62],[304,67,345,65],[304,70,345,68,"Math"],[304,74,345,72],[304,75,345,73,"random"],[304,81,345,79],[304,82,345,80],[304,83,345,81],[304,86,345,84],[304,89,345,87],[304,90,345,88],[304,91,345,89],[304,92,345,90],[304,93,345,91],[305,20,346,16],[305,24,346,22,"playerDefense"],[305,37,346,35],[305,40,346,38,"newState"],[305,48,346,46],[305,49,346,47,"playerStats"],[305,60,346,58],[305,61,346,59,"defense"],[305,68,346,66],[306,20,347,16],[306,24,347,22,"finalDamage"],[306,35,347,33],[306,38,347,36,"Math"],[306,42,347,40],[306,43,347,41,"max"],[306,46,347,44],[306,47,347,45],[306,48,347,46],[306,50,347,48,"attackDamage"],[306,62,347,60],[306,65,347,63,"Math"],[306,69,347,67],[306,70,347,68,"floor"],[306,75,347,73],[306,76,347,74,"playerDefense"],[306,89,347,87],[306,92,347,90],[306,95,347,93],[306,96,347,94],[306,97,347,95],[306,98,347,96],[306,99,347,97],[308,20,349,16,"console"],[308,27,349,23],[308,28,349,24,"log"],[308,31,349,27],[308,32,349,28],[308,53,349,49,"enemy"],[308,58,349,54],[308,59,349,55,"name"],[308,63,349,59],[308,86,349,82,"finalDamage"],[308,97,349,93],[308,109,349,105,"attackDamage"],[308,121,349,117],[308,132,349,128,"Math"],[308,136,349,132],[308,137,349,133,"floor"],[308,142,349,138],[308,143,349,139,"playerDefense"],[308,156,349,152],[308,159,349,155],[308,162,349,158],[308,163,349,159],[308,184,349,180],[308,185,349,181],[310,20,351,16],[311,20,352,16],[311,24,352,22,"newPlayerHealth"],[311,39,352,37],[311,42,352,40,"Math"],[311,46,352,44],[311,47,352,45,"max"],[311,50,352,48],[311,51,352,49],[311,52,352,50],[311,54,352,52,"newState"],[311,62,352,60],[311,63,352,61,"playerStats"],[311,74,352,72],[311,75,352,73,"health"],[311,81,352,79],[311,84,352,82,"finalDamage"],[311,95,352,93],[311,96,352,94],[312,20,353,16,"newState"],[312,28,353,24],[312,29,353,25,"playerStats"],[312,40,353,36],[312,41,353,37,"health"],[312,47,353,43],[312,50,353,46,"newPlayerHealth"],[312,65,353,61],[313,20,355,16,"console"],[313,27,355,23],[313,28,355,24,"log"],[313,31,355,27],[313,32,355,28],[313,53,355,49,"newState"],[313,61,355,57],[313,62,355,58,"playerStats"],[313,73,355,69],[313,74,355,70,"health"],[313,80,355,76],[313,84,355,80,"newState"],[313,92,355,88],[313,93,355,89,"playerStats"],[313,104,355,100],[313,105,355,101,"maxHealth"],[313,114,355,110],[313,124,355,120,"finalDamage"],[313,135,355,131],[313,145,355,141],[313,146,355,142],[315,20,357,16],[316,20,358,16,"enemy"],[316,25,358,21],[316,26,358,22,"lastAttackTick"],[316,40,358,36],[316,43,358,39,"newState"],[316,51,358,47],[316,52,358,48,"currentTick"],[316,63,358,59],[318,20,360,16],[319,20,361,16],[319,24,361,20,"newPlayerHealth"],[319,39,361,35],[319,43,361,39],[319,44,361,40],[319,46,361,42],[320,22,362,18,"console"],[320,29,362,25],[320,30,362,26,"log"],[320,33,362,29],[320,34,362,30],[320,84,362,80],[320,85,362,81],[321,22,363,18],[322,22,364,18,"setTimeout"],[322,32,364,28],[322,33,364,29],[322,39,364,35],[323,24,365,20],[324,24,366,20,"game"],[324,28,366,24],[324,29,366,25,"updateGameState"],[324,44,366,40],[324,45,366,41],[325,26,366,43,"isAlive"],[325,33,366,50],[325,35,366,52],[326,24,366,58],[326,25,366,59],[326,26,366,60],[327,22,367,18],[327,23,367,19],[327,25,367,21],[327,28,367,24],[327,29,367,25],[328,20,368,16],[329,18,369,16],[330,16,370,14],[331,14,371,12],[332,12,372,10],[332,13,372,11],[332,19,372,17],[333,14,373,12],[334,14,374,12],[335,14,375,12],[335,18,375,16,"distance"],[335,26,375,24],[335,29,375,27],[335,31,375,29],[335,33,375,31],[336,16,376,14],[337,16,377,14],[337,20,377,20,"normalizedX"],[337,31,377,31],[337,34,377,34,"deltaX"],[337,40,377,40],[337,43,377,43,"distance"],[337,51,377,51],[338,16,378,14],[338,20,378,20,"normalizedY"],[338,31,378,31],[338,34,378,34,"deltaY"],[338,40,378,40],[338,43,378,43,"distance"],[338,51,378,51],[340,16,380,14],[341,16,381,14],[341,20,381,20,"randomFactor"],[341,32,381,32],[341,35,381,35],[341,38,381,38],[341,39,381,39],[341,40,381,40],[342,16,382,14],[342,20,382,20,"finalX"],[342,26,382,26],[342,29,382,29,"normalizedX"],[342,40,382,40],[342,43,382,43],[342,44,382,44,"Math"],[342,48,382,48],[342,49,382,49,"random"],[342,55,382,55],[342,56,382,56],[342,57,382,57],[342,60,382,60],[342,63,382,63],[342,67,382,67,"randomFactor"],[342,79,382,79],[343,16,383,14],[343,20,383,20,"finalY"],[343,26,383,26],[343,29,383,29,"normalizedY"],[343,40,383,40],[343,43,383,43],[343,44,383,44,"Math"],[343,48,383,48],[343,49,383,49,"random"],[343,55,383,55],[343,56,383,56],[343,57,383,57],[343,60,383,60],[343,63,383,63],[343,67,383,67,"randomFactor"],[343,79,383,79],[345,16,385,14],[346,16,386,14],[346,20,386,18,"newX"],[346,24,386,22],[346,27,386,25,"enemy"],[346,32,386,30],[346,33,386,31,"position"],[346,41,386,39],[346,42,386,40,"x"],[346,43,386,41],[346,46,386,45,"finalX"],[346,52,386,51],[346,55,386,54,"MOVEMENT_SPEED"],[346,69,386,69],[347,16,387,14],[347,20,387,18,"newY"],[347,24,387,22],[347,27,387,25,"enemy"],[347,32,387,30],[347,33,387,31,"position"],[347,41,387,39],[347,42,387,40,"y"],[347,43,387,41],[347,46,387,45,"finalY"],[347,52,387,51],[347,55,387,54,"MOVEMENT_SPEED"],[347,69,387,69],[349,16,389,14],[350,16,390,14,"newX"],[350,20,390,18],[350,23,390,21,"Math"],[350,27,390,25],[350,28,390,26,"max"],[350,31,390,29],[350,32,390,30],[350,33,390,31],[350,35,390,33,"Math"],[350,39,390,37],[350,40,390,38,"min"],[350,43,390,41],[350,44,390,42,"SCREEN_WIDTH"],[350,56,390,54],[350,59,390,57,"ENEMY_SIZE"],[350,69,390,67],[350,71,390,69,"newX"],[350,75,390,73],[350,76,390,74],[350,77,390,75],[351,16,391,14,"newY"],[351,20,391,18],[351,23,391,21,"Math"],[351,27,391,25],[351,28,391,26,"max"],[351,31,391,29],[351,32,391,30],[351,33,391,31],[351,35,391,33,"Math"],[351,39,391,37],[351,40,391,38,"min"],[351,43,391,41],[351,44,391,42,"GAME_AREA_HEIGHT"],[351,60,391,58],[351,63,391,61,"ENEMY_SIZE"],[351,73,391,71],[351,75,391,73,"newY"],[351,79,391,77],[351,80,391,78],[351,81,391,79],[353,16,393,14],[354,16,394,14,"enemy"],[354,21,394,19],[354,22,394,20,"position"],[354,30,394,28],[354,31,394,29,"x"],[354,32,394,30],[354,35,394,33,"newX"],[354,39,394,37],[355,16,395,14,"enemy"],[355,21,395,19],[355,22,395,20,"position"],[355,30,395,28],[355,31,395,29,"y"],[355,32,395,30],[355,35,395,33,"newY"],[355,39,395,37],[356,14,396,12],[357,14,397,12],[358,12,398,10],[359,10,399,8],[360,8,400,6],[360,9,400,7],[360,10,400,8],[362,8,402,6],[363,8,403,6],[363,12,403,10,"newState"],[363,20,403,18],[363,21,403,19,"shadowClone"],[363,32,403,30],[363,34,403,32],[364,10,404,8],[365,10,405,8,"newState"],[365,18,405,16],[365,19,405,17,"shadowClone"],[365,30,405,28],[365,31,405,29,"remainingTicks"],[365,45,405,43],[365,47,405,45],[367,10,407,8],[368,10,408,8],[368,14,408,14,"cloneOffset"],[368,25,408,25],[368,28,408,28],[368,30,408,30],[368,31,408,31],[368,32,408,32],[369,10,409,8,"newState"],[369,18,409,16],[369,19,409,17,"shadowClone"],[369,30,409,28],[369,31,409,29,"position"],[369,39,409,37],[369,40,409,38,"x"],[369,41,409,39],[369,44,409,42,"currentNinjaPosition"],[369,64,409,62],[369,65,409,63,"x"],[369,66,409,64],[369,69,409,67,"cloneOffset"],[369,80,409,78],[370,10,410,8,"newState"],[370,18,410,16],[370,19,410,17,"shadowClone"],[370,30,410,28],[370,31,410,29,"position"],[370,39,410,37],[370,40,410,38,"y"],[370,41,410,39],[370,44,410,42,"currentNinjaPosition"],[370,64,410,62],[370,65,410,63,"y"],[370,66,410,64],[370,69,410,67],[370,71,410,69],[372,10,412,8],[373,10,413,8],[373,14,413,12,"newState"],[373,22,413,20],[373,23,413,21,"shadowClone"],[373,34,413,32],[373,35,413,33,"remainingTicks"],[373,49,413,47],[373,53,413,51],[373,54,413,52],[373,56,413,54],[374,12,414,10,"console"],[374,19,414,17],[374,20,414,18,"log"],[374,23,414,21],[374,24,414,22],[374,75,414,73],[374,76,414,74],[375,12,415,10,"newState"],[375,20,415,18],[375,21,415,19,"shadowClone"],[375,32,415,30],[375,35,415,33,"undefined"],[375,44,415,42],[376,10,416,8],[376,11,416,9],[376,17,416,15],[377,12,417,10],[378,12,418,10],[379,12,419,10],[379,16,419,16,"CLONE_ATTACK_INTERVAL"],[379,37,419,37],[379,40,419,40],[379,42,419,42],[380,12,420,10],[380,16,420,14,"newState"],[380,24,420,22],[380,25,420,23,"currentTick"],[380,36,420,34],[380,39,420,37,"CLONE_ATTACK_INTERVAL"],[380,60,420,58],[380,65,420,63],[380,66,420,64],[380,70,420,68,"newState"],[380,78,420,76],[380,79,420,77,"enemies"],[380,86,420,84],[380,87,420,85,"length"],[380,93,420,91],[380,96,420,94],[380,97,420,95],[380,99,420,97],[381,14,421,12,"console"],[381,21,421,19],[381,22,421,20,"log"],[381,25,421,23],[381,26,421,24],[381,83,421,81],[381,84,421,82],[383,14,423,12],[384,14,424,12],[384,18,424,18,"target"],[384,24,424,24],[384,27,424,27,"findClosestEnemyInternal"],[384,51,424,51],[384,52,424,52,"newState"],[384,60,424,60],[384,61,424,61,"enemies"],[384,68,424,68],[384,69,424,69],[385,14,425,12],[385,18,425,16,"target"],[385,24,425,22],[385,26,425,24],[386,16,426,14],[387,16,427,14],[387,20,427,20,"cloneDamage"],[387,31,427,31],[387,34,427,34,"Math"],[387,38,427,38],[387,39,427,39,"floor"],[387,44,427,44],[387,45,427,45,"newState"],[387,53,427,53],[387,54,427,54,"playerStats"],[387,65,427,65],[387,66,427,66,"attack"],[387,72,427,72],[387,75,427,75],[387,78,427,78],[387,79,427,79],[389,16,429,14],[390,16,430,14,"createProjectile"],[390,32,430,30],[390,33,430,31,"target"],[390,39,430,37],[390,41,430,39,"cloneDamage"],[390,52,430,50],[390,54,430,52,"newState"],[390,62,430,60],[390,63,430,61,"shadowClone"],[390,74,430,72],[390,75,430,73,"position"],[390,83,430,81],[390,85,430,83],[391,18,431,16,"id"],[391,20,431,18],[391,22,431,20],[391,43,431,41],[392,18,432,16,"name"],[392,22,432,20],[392,24,432,22],[392,45,432,43],[393,18,433,16,"icon"],[393,22,433,20],[393,24,433,22],[394,16,434,14],[394,17,434,15],[394,18,434,16],[395,14,435,12],[396,12,436,10],[397,10,437,8],[398,8,438,6],[400,8,440,6],[401,8,441,6],[402,8,442,6],[402,12,442,10],[402,13,442,11,"isManualControlActive"],[402,34,442,32],[402,38,442,36,"game"],[402,42,442,40],[402,43,442,41,"gameState"],[402,52,442,50],[402,53,442,51,"isAlive"],[402,60,442,58],[402,62,442,60],[403,10,443,8],[403,15,443,13],[403,19,443,17,"i"],[403,20,443,18],[403,23,443,21],[403,24,443,22],[403,26,443,24,"i"],[403,27,443,25],[403,30,443,28],[403,31,443,29],[403,33,443,31,"i"],[403,34,443,32],[403,36,443,34],[403,38,443,36],[404,12,444,10],[404,16,444,14,"newState"],[404,24,444,22],[404,25,444,23,"abilityManager"],[404,39,444,37],[404,40,444,38,"isAbilityReady"],[404,54,444,52],[404,55,444,53,"i"],[404,56,444,54],[404,57,444,55],[404,61,444,59,"newState"],[404,69,444,67],[404,70,444,68,"enemies"],[404,77,444,75],[404,78,444,76,"length"],[404,84,444,82],[404,87,444,85],[404,88,444,86],[404,90,444,88],[405,14,445,12],[405,18,445,16,"newState"],[405,26,445,24],[405,27,445,25,"abilityManager"],[405,41,445,39],[405,42,445,40,"useAbility"],[405,52,445,50],[405,53,445,51,"i"],[405,54,445,52],[405,56,445,54,"newTick"],[405,63,445,61],[405,64,445,62],[405,66,445,64],[406,16,446,14,"castAbility"],[406,27,446,25],[406,28,446,26,"newState"],[406,36,446,34],[406,38,446,36,"i"],[406,39,446,37],[406,40,446,38],[407,14,447,12],[408,12,448,10],[409,10,449,8],[410,8,450,6],[412,8,452,6],[413,8,453,6],[413,12,453,12,"deadEnemies"],[413,23,453,23],[413,26,453,26,"newState"],[413,34,453,34],[413,35,453,35,"enemies"],[413,42,453,42],[413,43,453,43,"filter"],[413,49,453,49],[413,50,453,50,"enemy"],[413,55,453,55],[413,59,453,59,"enemy"],[413,64,453,64],[413,65,453,65,"health"],[413,71,453,71],[413,75,453,75],[413,76,453,76],[413,77,453,77],[414,8,454,6,"enemiesToKill"],[414,21,454,19],[414,24,454,22],[414,25,454,23],[414,28,454,26,"deadEnemies"],[414,39,454,37],[414,40,454,38],[414,41,454,39],[414,42,454,40],[416,8,456,6],[417,8,457,6],[417,12,457,10,"deadEnemies"],[417,23,457,21],[417,24,457,22,"length"],[417,30,457,28],[417,33,457,31],[417,34,457,32],[417,36,457,34],[418,10,458,8,"console"],[418,17,458,15],[418,18,458,16,"log"],[418,21,458,19],[418,22,458,20],[418,49,458,47,"deadEnemies"],[418,60,458,58],[418,61,458,59,"length"],[418,67,458,65],[418,83,458,81],[418,85,458,83,"deadEnemies"],[418,96,458,94],[418,97,458,95,"map"],[418,100,458,98],[418,101,458,99,"e"],[418,102,458,100],[418,106,458,104],[418,109,458,107,"e"],[418,110,458,108],[418,111,458,109,"id"],[418,113,458,111],[418,117,458,115,"e"],[418,118,458,116],[418,119,458,117,"health"],[418,125,458,123],[418,130,458,128],[418,131,458,129],[418,132,458,130],[419,8,459,6],[421,8,461,6],[422,8,462,6],[422,12,462,12,"lowHealthEnemies"],[422,28,462,28],[422,31,462,31,"newState"],[422,39,462,39],[422,40,462,40,"enemies"],[422,47,462,47],[422,48,462,48,"filter"],[422,54,462,54],[422,55,462,55,"enemy"],[422,60,462,60],[422,64,462,64,"enemy"],[422,69,462,69],[422,70,462,70,"health"],[422,76,462,76],[422,80,462,80],[422,82,462,82],[422,86,462,86,"enemy"],[422,91,462,91],[422,92,462,92,"health"],[422,98,462,98],[422,101,462,101],[422,102,462,102],[422,103,462,103],[423,8,463,6],[423,12,463,10,"lowHealthEnemies"],[423,28,463,26],[423,29,463,27,"length"],[423,35,463,33],[423,38,463,36],[423,39,463,37],[423,41,463,39],[424,10,464,8,"console"],[424,17,464,15],[424,18,464,16,"log"],[424,21,464,19],[424,22,464,20],[424,61,464,59],[424,63,464,61,"lowHealthEnemies"],[424,79,464,77],[424,80,464,78,"map"],[424,83,464,81],[424,84,464,82,"e"],[424,85,464,83],[424,89,464,87],[424,92,464,90,"e"],[424,93,464,91],[424,94,464,92,"id"],[424,96,464,94],[424,100,464,98,"e"],[424,101,464,99],[424,102,464,100,"health"],[424,108,464,106],[424,112,464,110,"e"],[424,113,464,111],[424,114,464,112,"maxHealth"],[424,123,464,121],[424,128,464,126],[424,129,464,127],[424,130,464,128],[425,8,465,6],[427,8,467,6],[428,8,468,6],[428,12,468,12,"beforeCount"],[428,23,468,23],[428,26,468,26,"newState"],[428,34,468,34],[428,35,468,35,"enemies"],[428,42,468,42],[428,43,468,43,"length"],[428,49,468,49],[429,8,469,6,"newState"],[429,16,469,14],[429,17,469,15,"enemies"],[429,24,469,22],[429,27,469,25,"newState"],[429,35,469,33],[429,36,469,34,"enemies"],[429,43,469,41],[429,44,469,42,"filter"],[429,50,469,48],[429,51,469,49,"enemy"],[429,56,469,54],[429,60,469,58,"enemy"],[429,65,469,63],[429,66,469,64,"health"],[429,72,469,70],[429,75,469,73],[429,76,469,74],[429,77,469,75],[430,8,470,6],[430,12,470,12,"afterCount"],[430,22,470,22],[430,25,470,25,"newState"],[430,33,470,33],[430,34,470,34,"enemies"],[430,41,470,41],[430,42,470,42,"length"],[430,48,470,48],[431,8,472,6],[431,12,472,10,"beforeCount"],[431,23,472,21],[431,28,472,26,"afterCount"],[431,38,472,36],[431,40,472,38],[432,10,473,8,"console"],[432,17,473,15],[432,18,473,16,"log"],[432,21,473,19],[432,22,473,20],[432,52,473,50,"beforeCount"],[432,63,473,61],[432,66,473,64,"afterCount"],[432,76,473,74],[432,102,473,100],[432,103,473,101],[433,8,474,6],[435,8,476,6],[436,8,477,6],[437,8,478,6],[437,12,478,12,"MAX_ENEMIES"],[437,23,478,23],[437,26,478,26],[437,28,478,28],[437,29,478,29],[437,30,478,30],[438,8,479,6],[438,12,479,12,"MIN_SPAWN_DELAY"],[438,27,479,27],[438,30,479,30],[438,33,479,33],[438,34,479,34],[438,35,479,35],[439,8,480,6],[439,12,480,12,"now"],[439,15,480,15],[439,18,480,18,"Date"],[439,22,480,22],[439,23,480,23,"now"],[439,26,480,26],[439,27,480,27],[439,28,480,28],[440,8,481,6],[440,12,481,12,"hasBoss"],[440,19,481,19],[440,22,481,22,"newState"],[440,30,481,30],[440,31,481,31,"enemies"],[440,38,481,38],[440,39,481,39,"some"],[440,43,481,43],[440,44,481,44,"enemy"],[440,49,481,49],[440,53,481,53,"enemy"],[440,58,481,58],[440,59,481,59,"isBoss"],[440,65,481,65],[440,66,481,66],[442,8,483,6],[443,8,484,6],[443,12,484,10],[443,13,484,11,"newState"],[443,21,484,19],[443,22,484,20,"lastSpawnTime"],[443,35,484,33],[443,37,484,35],[444,10,485,8,"newState"],[444,18,485,16],[444,19,485,17,"lastSpawnTime"],[444,32,485,30],[444,35,485,33,"now"],[444,38,485,36],[445,8,486,6],[446,8,488,6,"console"],[446,15,488,13],[446,16,488,14,"log"],[446,19,488,17],[446,20,488,18],[446,53,488,51,"newState"],[446,61,488,59],[446,62,488,60,"enemies"],[446,69,488,67],[446,70,488,68,"length"],[446,76,488,74],[446,85,488,83,"MAX_ENEMIES"],[446,96,488,94],[446,109,488,107,"hasBoss"],[446,116,488,114],[446,118,488,116],[446,119,488,117],[448,8,490,6],[449,8,491,6],[449,12,491,10],[449,13,491,11,"hasBoss"],[449,20,491,18],[449,24,491,22,"newState"],[449,32,491,30],[449,33,491,31,"enemies"],[449,40,491,38],[449,41,491,39,"length"],[449,47,491,45],[449,50,491,48,"MAX_ENEMIES"],[449,61,491,59],[449,65,491,64,"now"],[449,68,491,67],[449,71,491,70,"newState"],[449,79,491,78],[449,80,491,79,"lastSpawnTime"],[449,93,491,92],[449,97,491,97,"MIN_SPAWN_DELAY"],[449,112,491,112],[449,114,491,114],[450,10,492,8,"console"],[450,17,492,15],[450,18,492,16,"log"],[450,21,492,19],[450,22,492,20],[450,43,492,41,"newState"],[450,51,492,49],[450,52,492,50,"enemies"],[450,59,492,57],[450,60,492,58,"length"],[450,66,492,64],[450,69,492,67],[450,70,492,68],[450,74,492,72,"MAX_ENEMIES"],[450,85,492,83],[450,87,492,85],[450,88,492,86],[451,10,493,8,"spawnTestEnemy"],[451,24,493,22],[451,25,493,23,"newState"],[451,33,493,31],[451,34,493,32],[452,10,494,8,"newState"],[452,18,494,16],[452,19,494,17,"lastSpawnTime"],[452,32,494,30],[452,35,494,33,"now"],[452,38,494,36],[453,8,495,6],[454,8,497,6],[454,15,497,13,"newState"],[454,23,497,21],[455,6,498,4],[455,7,498,5],[455,47,498,6],[457,6,500,4],[458,6,501,4,"console"],[458,13,501,11],[458,14,501,12,"log"],[458,17,501,15],[458,18,501,16],[458,50,501,48,"enemiesToKill"],[458,63,501,61],[458,64,501,62,"length"],[458,70,501,68],[458,101,501,99],[458,102,501,100],[459,6,503,4,"enemiesToKill"],[459,19,503,17],[459,20,503,18,"forEach"],[459,27,503,25],[459,28,503,26],[459,29,503,27,"enemy"],[459,34,503,32],[459,36,503,34,"index"],[459,41,503,39],[459,46,503,44],[460,8,504,6,"console"],[460,15,504,13],[460,16,504,14,"log"],[460,19,504,17],[460,20,504,18],[460,57,504,55,"index"],[460,62,504,60],[460,65,504,63],[460,66,504,64],[460,70,504,68,"enemiesToKill"],[460,83,504,81],[460,84,504,82,"length"],[460,90,504,88],[460,104,504,102,"enemy"],[460,109,504,107],[460,110,504,108,"id"],[460,112,504,110],[460,114,504,112],[460,115,504,113],[461,8,505,6,"handleEnemyKill"],[461,23,505,21],[461,24,505,22,"enemy"],[461,29,505,27],[461,30,505,28],[462,6,506,4],[462,7,506,5],[462,8,506,6],[463,4,507,2],[463,5,507,3],[463,7,507,5],[463,8,507,6,"handleEnemyKill"],[463,23,507,21],[463,24,507,22],[463,25,507,23],[463,26,507,24],[463,27,507,25],[465,4,509,2],[466,4,510,2],[466,8,510,8,"findClosestEnemyInternal"],[466,32,510,32],[466,35,510,36,"enemies"],[466,42,510,58],[466,46,510,83],[467,6,511,4],[467,10,511,8,"enemies"],[467,17,511,15],[467,18,511,16,"length"],[467,24,511,22],[467,29,511,27],[467,30,511,28],[467,32,511,30],[467,39,511,37],[467,43,511,41],[469,6,513,4],[470,6,514,4],[470,10,514,10,"SCREEN_WIDTH"],[470,22,514,22],[470,25,514,25],[470,28,514,28],[471,6,515,4],[471,10,515,10,"GAME_AREA_HEIGHT"],[471,26,515,26],[471,29,515,29],[471,32,515,32],[471,35,515,35],[471,38,515,38],[471,39,515,39],[471,40,515,40],[472,6,516,4],[472,10,516,10,"ninjaX"],[472,16,516,16],[472,19,516,19,"SCREEN_WIDTH"],[472,31,516,31],[472,34,516,34],[472,35,516,35],[473,6,517,4],[473,10,517,10,"ninjaY"],[473,16,517,16],[473,19,517,19,"GAME_AREA_HEIGHT"],[473,35,517,35],[473,38,517,38],[473,39,517,39],[474,6,519,4],[474,10,519,8,"closestEnemy"],[474,22,519,20],[474,25,519,23,"enemies"],[474,32,519,30],[474,33,519,31],[474,34,519,32],[474,35,519,33],[475,6,520,4],[475,10,520,8,"closestDistance"],[475,25,520,23],[475,28,520,26,"Infinity"],[475,36,520,34],[476,6,522,4,"enemies"],[476,13,522,11],[476,14,522,12,"forEach"],[476,21,522,19],[476,22,522,20,"enemy"],[476,27,522,25],[476,31,522,29],[477,8,523,6],[477,12,523,12,"distance"],[477,20,523,20],[477,23,523,23,"Math"],[477,27,523,27],[477,28,523,28,"sqrt"],[477,32,523,32],[477,33,524,8,"Math"],[477,37,524,12],[477,38,524,13,"pow"],[477,41,524,16],[477,42,524,17,"enemy"],[477,47,524,22],[477,48,524,23,"position"],[477,56,524,31],[477,57,524,32,"x"],[477,58,524,33],[477,61,524,36,"ninjaX"],[477,67,524,42],[477,69,524,44],[477,70,524,45],[477,71,524,46],[477,74,525,8,"Math"],[477,78,525,12],[477,79,525,13,"pow"],[477,82,525,16],[477,83,525,17,"enemy"],[477,88,525,22],[477,89,525,23,"position"],[477,97,525,31],[477,98,525,32,"y"],[477,99,525,33],[477,102,525,36,"ninjaY"],[477,108,525,42],[477,110,525,44],[477,111,525,45],[477,112,526,6],[477,113,526,7],[478,8,528,6],[478,12,528,10,"distance"],[478,20,528,18],[478,23,528,21,"closestDistance"],[478,38,528,36],[478,40,528,38],[479,10,529,8,"closestDistance"],[479,25,529,23],[479,28,529,26,"distance"],[479,36,529,34],[480,10,530,8,"closestEnemy"],[480,22,530,20],[480,25,530,23,"enemy"],[480,30,530,28],[481,8,531,6],[482,6,532,4],[482,7,532,5],[482,8,532,6],[483,6,534,4,"console"],[483,13,534,11],[483,14,534,12,"log"],[483,17,534,15],[483,18,534,16],[483,60,534,58,"closestDistance"],[483,75,534,73],[483,76,534,74,"toFixed"],[483,83,534,81],[483,84,534,82],[483,85,534,83],[483,86,534,84],[483,88,534,86],[483,89,534,87],[484,6,535,4],[484,13,535,11,"closestEnemy"],[484,25,535,23],[485,4,536,2],[485,5,536,3],[487,4,538,2],[488,4,539,2],[488,8,539,8,"findClosestEnemy"],[488,24,539,24],[488,27,539,27,"findClosestEnemy"],[488,28,539,27],[488,33,539,53],[489,6,540,4],[489,13,540,11,"findClosestEnemyInternal"],[489,37,540,35],[489,38,540,36,"combatState"],[489,49,540,47],[489,50,540,48,"enemies"],[489,57,540,55],[489,58,540,56],[490,4,541,2],[490,5,541,3],[492,4,543,2],[493,4,544,2],[493,8,544,2,"_useState7"],[493,18,544,2],[493,21,544,58],[493,25,544,58,"useState"],[493,31,544,66],[493,32,544,66,"useState"],[493,40,544,66],[493,42,544,91],[494,8,544,93,"x"],[494,9,544,94],[494,11,544,96],[494,12,544,97],[495,8,544,99,"y"],[495,9,544,100],[495,11,544,102],[496,6,544,104],[496,7,544,105],[496,8,544,106],[497,6,544,106,"_useState8"],[497,16,544,106],[497,23,544,106,"_slicedToArray"],[497,37,544,106],[497,38,544,106,"default"],[497,45,544,106],[497,47,544,106,"_useState7"],[497,57,544,106],[498,6,544,9,"currentNinjaPosition"],[498,26,544,29],[498,29,544,29,"_useState8"],[498,39,544,29],[499,6,544,31,"setCurrentNinjaPosition"],[499,29,544,54],[499,32,544,54,"_useState8"],[499,42,544,54],[500,4,545,2],[500,8,545,2,"_useState9"],[500,18,545,2],[500,21,545,60],[500,25,545,60,"useState"],[500,31,545,68],[500,32,545,68,"useState"],[500,40,545,68],[500,42,545,69],[500,47,545,74],[500,48,545,75],[501,6,545,75,"_useState0"],[501,16,545,75],[501,23,545,75,"_slicedToArray"],[501,37,545,75],[501,38,545,75,"default"],[501,45,545,75],[501,47,545,75,"_useState9"],[501,57,545,75],[502,6,545,9,"isManualControlActive"],[502,27,545,30],[502,30,545,30,"_useState0"],[502,40,545,30],[503,6,545,32,"setIsManualControlActive"],[503,30,545,56],[503,33,545,56,"_useState0"],[503,43,545,56],[505,4,547,2],[506,4,548,2],[506,8,548,8,"updateNinjaPosition"],[506,27,548,27],[506,30,548,30],[506,34,548,30,"useCallback"],[506,40,548,41],[506,41,548,41,"useCallback"],[506,52,548,41],[506,54,548,43,"newPosition"],[506,65,548,78],[506,69,548,83],[507,6,549,4,"setCurrentNinjaPosition"],[507,29,549,27],[507,30,549,28,"newPosition"],[507,41,549,39],[507,42,549,40],[508,4,550,2],[508,5,550,3],[508,7,550,5],[508,9,550,7],[508,10,550,8],[510,4,552,2],[511,4,553,2],[511,8,553,8,"setManualControlActive"],[511,30,553,30],[511,33,553,33],[511,37,553,33,"useCallback"],[511,43,553,44],[511,44,553,44,"useCallback"],[511,55,553,44],[511,57,553,46,"active"],[511,63,553,61],[511,67,553,66],[512,6,554,4,"setIsManualControlActive"],[512,30,554,28],[512,31,554,29,"active"],[512,37,554,35],[512,38,554,36],[513,6,555,4,"console"],[513,13,555,11],[513,14,555,12,"log"],[513,17,555,15],[513,18,555,16],[513,39,555,37,"active"],[513,45,555,43],[513,48,555,46],[513,59,555,57],[513,62,555,60],[513,75,555,73],[513,88,555,86,"active"],[513,94,555,92],[513,97,555,95],[513,105,555,103],[513,108,555,106],[513,117,555,115],[513,119,555,117],[513,120,555,118],[514,4,556,2],[514,5,556,3],[514,7,556,5],[514,9,556,7],[514,10,556,8],[516,4,558,2],[517,4,559,2],[517,8,559,8,"handleProjectileHit"],[517,27,559,27],[517,30,559,31,"projectile"],[517,40,559,59],[517,44,559,64],[518,6,560,4,"console"],[518,13,560,11],[518,14,560,12,"log"],[518,17,560,15],[518,18,560,16],[518,35,560,33,"projectile"],[518,45,560,43],[518,46,560,44,"id"],[518,48,560,46],[518,62,560,60,"projectile"],[518,72,560,70],[518,73,560,71,"targetEnemyId"],[518,86,560,84],[518,94,560,92,"projectile"],[518,104,560,102],[518,105,560,103,"damage"],[518,111,560,109],[518,120,560,118],[518,121,560,119],[519,6,562,4,"setCombatState"],[519,20,562,18],[519,21,562,19,"prev"],[519,25,562,23],[519,29,562,27],[520,8,563,6],[520,12,563,12,"newState"],[520,20,563,20],[520,23,563,23],[521,10,563,25],[521,13,563,28,"prev"],[522,8,563,33],[522,9,563,34],[524,8,565,6],[525,8,566,6],[525,12,566,12,"enemyIndex"],[525,22,566,22],[525,25,566,25,"newState"],[525,33,566,33],[525,34,566,34,"enemies"],[525,41,566,41],[525,42,566,42,"findIndex"],[525,51,566,51],[525,52,566,52,"e"],[525,53,566,53],[525,57,566,57,"e"],[525,58,566,58],[525,59,566,59,"id"],[525,61,566,61],[525,66,566,66,"projectile"],[525,76,566,76],[525,77,566,77,"targetEnemyId"],[525,90,566,90],[525,91,566,91],[526,8,567,6],[526,12,567,10,"enemyIndex"],[526,22,567,20],[526,26,567,24],[526,27,567,25],[526,29,567,27],[527,10,568,8,"newState"],[527,18,568,16],[527,19,568,17,"enemies"],[527,26,568,24],[527,29,568,27],[527,30,568,28],[527,33,568,31,"newState"],[527,41,568,39],[527,42,568,40,"enemies"],[527,49,568,47],[527,50,568,48],[528,10,569,8,"newState"],[528,18,569,16],[528,19,569,17,"enemies"],[528,26,569,24],[528,27,569,25,"enemyIndex"],[528,37,569,35],[528,38,569,36],[528,41,569,39],[529,12,570,10],[529,15,570,13,"newState"],[529,23,570,21],[529,24,570,22,"enemies"],[529,31,570,29],[529,32,570,30,"enemyIndex"],[529,42,570,40],[529,43,570,41],[530,12,571,10,"health"],[530,18,571,16],[530,20,571,18,"newState"],[530,28,571,26],[530,29,571,27,"enemies"],[530,36,571,34],[530,37,571,35,"enemyIndex"],[530,47,571,45],[530,48,571,46],[530,49,571,47,"health"],[530,55,571,53],[530,58,571,56,"projectile"],[530,68,571,66],[530,69,571,67,"damage"],[530,75,571,73],[531,12,572,10,"lastDamaged"],[531,23,572,21],[531,25,572,23,"combatEngine"],[531,44,572,35],[531,45,572,35,"combatEngine"],[531,57,572,35],[531,58,572,36,"getCurrentTick"],[531,72,572,50],[531,73,572,51],[532,10,573,8],[532,11,573,9],[533,10,575,8,"console"],[533,17,575,15],[533,18,575,16,"log"],[533,21,575,19],[533,22,575,20],[533,34,575,32,"projectile"],[533,44,575,42],[533,45,575,43,"targetEnemyId"],[533,58,575,56],[533,70,575,68,"newState"],[533,78,575,76],[533,79,575,77,"enemies"],[533,86,575,84],[533,87,575,85,"enemyIndex"],[533,97,575,95],[533,98,575,96],[533,99,575,97,"health"],[533,105,575,103],[533,109,575,107,"newState"],[533,117,575,115],[533,118,575,116,"enemies"],[533,125,575,123],[533,126,575,124,"enemyIndex"],[533,136,575,134],[533,137,575,135],[533,138,575,136,"maxHealth"],[533,147,575,145],[533,149,575,147],[533,150,575,148],[534,8,576,6],[535,8,578,6],[535,15,578,13,"newState"],[535,23,578,21],[536,6,579,4],[536,7,579,5],[536,8,579,6],[538,6,581,4],[539,6,582,4,"setProjectiles"],[539,20,582,18],[539,21,582,19,"prev"],[539,25,582,23],[539,29,582,27,"prev"],[539,33,582,31],[539,34,582,32,"filter"],[539,40,582,38],[539,41,582,39,"p"],[539,42,582,40],[539,46,582,44,"p"],[539,47,582,45],[539,48,582,46,"id"],[539,50,582,48],[539,55,582,53,"projectile"],[539,65,582,63],[539,66,582,64,"id"],[539,68,582,66],[539,69,582,67],[539,70,582,68],[540,4,583,2],[540,5,583,3],[542,4,585,2],[543,4,586,2],[543,8,586,8,"castAbility"],[543,19,586,19],[543,22,586,22,"castAbility"],[543,23,586,23,"state"],[543,28,586,41],[543,30,586,43,"slotIndex"],[543,39,586,60],[543,44,586,65],[544,6,587,4],[544,10,587,10,"deck"],[544,14,587,14],[544,17,587,17,"state"],[544,22,587,22],[544,23,587,23,"abilityManager"],[544,37,587,37],[544,38,587,38,"getDeck"],[544,45,587,45],[544,46,587,46],[544,47,587,47],[545,6,588,4],[545,10,588,10,"ability"],[545,17,588,17],[545,20,588,20,"deck"],[545,24,588,24],[545,25,588,25,"slots"],[545,30,588,30],[545,31,588,31,"slotIndex"],[545,40,588,40],[545,41,588,41],[546,6,589,4],[546,10,589,8],[546,11,589,9,"ability"],[546,18,589,16],[546,20,589,18],[548,6,591,4],[549,6,592,4],[549,10,592,8,"damage"],[549,16,592,14],[549,19,592,17,"ability"],[549,26,592,24],[549,27,592,25,"stats"],[549,32,592,30],[549,33,592,31,"baseDamage"],[549,43,592,41],[551,6,594,4],[552,6,595,4,"deck"],[552,10,595,8],[552,11,595,9,"activeSynergies"],[552,26,595,24],[552,27,595,25,"forEach"],[552,34,595,32],[552,35,595,33,"synergy"],[552,42,595,40],[552,46,595,44],[553,8,596,6],[553,12,596,10,"synergy"],[553,19,596,17],[553,20,596,18,"bonus"],[553,25,596,23],[553,26,596,24,"damageBonus"],[553,37,596,35],[553,41,597,10,"synergy"],[553,48,597,17],[553,49,597,18,"requiredTags"],[553,61,597,30],[553,62,597,31,"some"],[553,66,597,35],[553,67,597,36,"tag"],[553,70,597,39],[553,74,597,43,"ability"],[553,81,597,50],[553,82,597,51,"tags"],[553,86,597,55],[553,87,597,56,"includes"],[553,95,597,64],[553,96,597,65,"tag"],[553,99,597,68],[553,100,597,69],[553,101,597,70],[553,103,597,72],[554,10,598,8,"damage"],[554,16,598,14],[554,20,598,19],[554,21,598,20],[554,24,598,23,"synergy"],[554,31,598,30],[554,32,598,31,"bonus"],[554,37,598,36],[554,38,598,37,"damageBonus"],[554,49,598,48],[554,52,598,51],[554,55,598,55],[555,8,599,6],[556,6,600,4],[556,7,600,5],[556,8,600,6],[558,6,602,4],[559,6,603,4],[559,10,603,10,"isAOE"],[559,15,603,15],[559,18,603,18,"ability"],[559,25,603,25],[559,26,603,26,"effects"],[559,33,603,33],[559,34,603,34,"includes"],[559,42,603,42],[559,43,603,43],[559,48,603,48],[559,49,603,49],[559,53,603,53,"ability"],[559,60,603,60],[559,61,603,61,"stats"],[559,66,603,66],[559,67,603,67,"aoeRadius"],[559,76,603,76],[560,6,604,4,"console"],[560,13,604,11],[560,14,604,12,"log"],[560,17,604,15],[560,18,604,16],[560,39,604,37,"ability"],[560,46,604,44],[560,47,604,45,"name"],[560,51,604,49],[560,66,604,64,"JSON"],[560,70,604,68],[560,71,604,69,"stringify"],[560,80,604,78],[560,81,604,79,"ability"],[560,88,604,86],[560,89,604,87,"effects"],[560,96,604,94],[560,97,604,95],[560,113,604,111,"ability"],[560,120,604,118],[560,121,604,119,"stats"],[560,126,604,124],[560,127,604,125,"aoeRadius"],[560,136,604,134],[560,148,604,146,"isAOE"],[560,153,604,151],[560,155,604,153],[560,156,604,154],[561,6,606,4],[561,10,606,8,"isAOE"],[561,15,606,13],[561,17,606,15],[562,8,607,6,"console"],[562,15,607,13],[562,16,607,14,"log"],[562,19,607,17],[562,20,607,18],[562,39,607,37,"ability"],[562,46,607,44],[562,47,607,45,"name"],[562,51,607,49],[562,67,607,65,"ability"],[562,74,607,72],[562,75,607,73,"stats"],[562,80,607,78],[562,81,607,79,"aoeRadius"],[562,90,607,88],[562,92,607,90],[562,93,607,91],[564,8,609,6],[565,8,610,6],[566,8,611,6],[566,12,611,12,"target"],[566,18,611,18],[566,21,611,21,"findClosestEnemyInternal"],[566,45,611,45],[566,46,611,46,"state"],[566,51,611,51],[566,52,611,52,"enemies"],[566,59,611,59],[566,60,611,60],[567,8,612,6],[567,12,612,10],[567,13,612,11,"target"],[567,19,612,17],[567,21,612,19],[569,8,614,6],[570,8,615,6,"createProjectile"],[570,24,615,22],[570,25,615,23,"target"],[570,31,615,29],[570,33,615,31,"damage"],[570,39,615,37],[570,41,615,39,"currentNinjaPosition"],[570,61,615,59],[570,63,615,61],[571,10,616,8,"id"],[571,12,616,10],[571,14,616,12,"ability"],[571,21,616,19],[571,22,616,20,"id"],[571,24,616,22],[572,10,617,8,"name"],[572,14,617,12],[572,16,617,14,"ability"],[572,23,617,21],[572,24,617,22,"name"],[572,28,617,26],[573,10,618,8,"icon"],[573,14,618,12],[573,16,618,14,"ability"],[573,23,618,21],[573,24,618,22,"icon"],[574,8,619,6],[574,9,619,7],[574,11,619,9],[574,15,619,13],[574,17,619,15,"ability"],[574,24,619,22],[574,25,619,23,"stats"],[574,30,619,28],[574,31,619,29,"aoeRadius"],[574,40,619,38],[574,41,619,39],[574,42,619,40],[574,43,619,41],[576,8,621,6,"console"],[576,15,621,13],[576,16,621,14,"log"],[576,19,621,17],[576,20,621,18],[576,26,621,24,"ability"],[576,33,621,31],[576,34,621,32,"name"],[576,38,621,36],[576,75,621,73,"target"],[576,81,621,79],[576,82,621,80,"name"],[576,86,621,84],[576,95,621,93,"ability"],[576,102,621,100],[576,103,621,101,"stats"],[576,108,621,106],[576,109,621,107,"aoeRadius"],[576,118,621,116],[576,127,621,125],[576,128,621,126],[577,8,622,6,"console"],[577,15,622,13],[577,16,622,14,"log"],[577,19,622,17],[577,20,622,18],[577,44,622,42,"damage"],[577,50,622,48],[577,77,622,75,"ability"],[577,84,622,82],[577,85,622,83,"stats"],[577,90,622,88],[577,91,622,89,"aoeRadius"],[577,100,622,98],[577,102,622,100],[577,103,622,101],[578,6,624,4],[578,7,624,5],[578,13,624,11],[579,8,625,6],[580,8,626,6],[580,12,626,12,"target"],[580,19,626,18],[580,22,626,21,"findClosestEnemyInternal"],[580,46,626,45],[580,47,626,46,"state"],[580,52,626,51],[580,53,626,52,"enemies"],[580,60,626,59],[580,61,626,60],[581,8,627,6],[581,12,627,10],[581,13,627,11,"target"],[581,20,627,17],[581,22,627,19],[582,8,629,6],[582,12,629,12,"damageResult"],[582,24,629,24],[582,27,629,27,"DamageCalculator"],[582,46,629,43],[582,47,629,43,"DamageCalculator"],[582,63,629,43],[582,64,629,44,"calculateDamage"],[582,79,629,59],[582,80,629,60,"damage"],[582,86,629,66],[582,88,629,68,"state"],[582,93,629,73],[582,94,629,74,"playerStats"],[582,105,629,85],[582,107,629,87,"target"],[582,114,629,93],[582,115,629,94,"stats"],[582,120,629,99],[582,121,629,100],[584,8,631,6],[585,8,632,6,"createProjectile"],[585,24,632,22],[585,25,632,23,"target"],[585,32,632,29],[585,34,632,31,"damageResult"],[585,46,632,43],[585,47,632,44,"damage"],[585,53,632,50],[585,55,632,52,"currentNinjaPosition"],[585,75,632,72],[585,77,632,74],[586,10,633,8,"id"],[586,12,633,10],[586,14,633,12,"ability"],[586,21,633,19],[586,22,633,20,"id"],[586,24,633,22],[587,10,634,8,"name"],[587,14,634,12],[587,16,634,14,"ability"],[587,23,634,21],[587,24,634,22,"name"],[587,28,634,26],[588,10,635,8,"icon"],[588,14,635,12],[588,16,635,14,"ability"],[588,23,635,21],[588,24,635,22,"icon"],[589,8,636,6],[589,9,636,7],[589,10,636,8],[590,8,638,6,"console"],[590,15,638,13],[590,16,638,14,"log"],[590,19,638,17],[590,20,638,18],[590,26,638,24,"ability"],[590,33,638,31],[590,34,638,32,"name"],[590,38,638,36],[590,66,638,64,"damageResult"],[590,78,638,76],[590,79,638,77,"damage"],[590,85,638,83],[590,95,638,93,"damageResult"],[590,107,638,105],[590,108,638,106,"isCritical"],[590,118,638,116],[590,121,638,119],[590,131,638,129],[590,134,638,132],[590,136,638,134],[590,138,638,136],[590,139,638,137],[591,6,639,4],[593,6,641,4],[594,6,642,4],[594,10,642,8,"ability"],[594,17,642,15],[594,18,642,16,"effects"],[594,25,642,23],[594,26,642,24,"includes"],[594,34,642,32],[594,35,642,33],[594,40,642,38],[594,41,642,39],[594,45,642,43,"ability"],[594,52,642,50],[594,53,642,51,"stats"],[594,58,642,56],[594,59,642,57,"duration"],[594,67,642,65],[594,69,642,67],[595,8,643,6],[595,12,643,12,"targets"],[595,19,643,19],[595,22,643,22,"isAOE"],[595,27,643,27],[595,30,644,8,"state"],[595,35,644,13],[595,36,644,14,"enemies"],[595,43,644,21],[595,44,644,22,"filter"],[595,50,644,28],[595,51,644,29,"enemy"],[595,56,644,34],[595,60,644,38],[596,10,645,10],[596,14,645,16,"ninjaX"],[596,20,645,22],[596,23,645,25,"currentNinjaPosition"],[596,43,645,45],[596,44,645,46,"x"],[596,45,645,47],[596,48,645,50],[596,50,645,52],[597,10,646,10],[597,14,646,16,"ninjaY"],[597,20,646,22],[597,23,646,25,"currentNinjaPosition"],[597,43,646,45],[597,44,646,46,"y"],[597,45,646,47],[597,48,646,50],[597,50,646,52],[598,10,647,10],[598,14,647,16,"enemyX"],[598,20,647,22],[598,23,647,25,"enemy"],[598,28,647,30],[598,29,647,31,"position"],[598,37,647,39],[598,38,647,40,"x"],[598,39,647,41],[598,42,647,44],[598,46,647,48],[599,10,648,10],[599,14,648,16,"enemyY"],[599,20,648,22],[599,23,648,25,"enemy"],[599,28,648,30],[599,29,648,31,"position"],[599,37,648,39],[599,38,648,40,"y"],[599,39,648,41],[599,42,648,44],[599,46,648,48],[600,10,649,10],[600,14,649,16,"distance"],[600,22,649,24],[600,25,649,27,"Math"],[600,29,649,31],[600,30,649,32,"sqrt"],[600,34,649,36],[600,35,649,37,"Math"],[600,39,649,41],[600,40,649,42,"pow"],[600,43,649,45],[600,44,649,46,"enemyX"],[600,50,649,52],[600,53,649,55,"ninjaX"],[600,59,649,61],[600,61,649,63],[600,62,649,64],[600,63,649,65],[600,66,649,68,"Math"],[600,70,649,72],[600,71,649,73,"pow"],[600,74,649,76],[600,75,649,77,"enemyY"],[600,81,649,83],[600,84,649,86,"ninjaY"],[600,90,649,92],[600,92,649,94],[600,93,649,95],[600,94,649,96],[600,95,649,97],[601,10,650,10],[601,17,650,17,"distance"],[601,25,650,25],[601,29,650,29,"ability"],[601,36,650,36],[601,37,650,37,"stats"],[601,42,650,42],[601,43,650,43,"aoeRadius"],[601,52,650,52],[602,8,651,8],[602,9,651,9],[602,10,651,10],[602,13,652,8],[602,14,652,9,"findClosestEnemyInternal"],[602,38,652,33],[602,39,652,34,"state"],[602,44,652,39],[602,45,652,40,"enemies"],[602,52,652,47],[602,53,652,48],[602,54,652,49],[602,55,652,50,"filter"],[602,61,652,56],[602,62,652,57,"Boolean"],[602,69,652,64],[602,70,652,65],[603,8,654,6,"targets"],[603,15,654,13],[603,16,654,14,"forEach"],[603,23,654,21],[603,24,654,22,"target"],[603,30,654,28],[603,34,654,32],[604,10,655,8,"state"],[604,15,655,13],[604,16,655,14,"statusEffects"],[604,29,655,27],[604,30,655,28,"addEffect"],[604,39,655,37],[604,40,655,38,"target"],[604,46,655,44],[604,47,655,45,"id"],[604,49,655,47],[604,51,655,49],[605,12,656,10,"id"],[605,14,656,12],[605,16,656,14],[605,19,656,17,"ability"],[605,26,656,24],[605,27,656,25,"id"],[605,29,656,27],[605,35,656,33],[606,12,657,10,"type"],[606,16,657,14],[606,18,657,16],[606,23,657,21],[607,12,658,10,"remainingTicks"],[607,26,658,24],[607,28,658,26,"Math"],[607,32,658,30],[607,33,658,31,"floor"],[607,38,658,36],[607,39,658,37,"ability"],[607,46,658,44],[607,47,658,45,"stats"],[607,52,658,50],[607,53,658,51,"duration"],[607,61,658,59],[607,64,658,62],[607,66,658,64],[607,67,658,65],[608,12,659,10,"tickInterval"],[608,24,659,22],[608,26,659,24],[608,28,659,26],[609,12,660,10,"lastTick"],[609,20,660,18],[609,22,660,20,"state"],[609,27,660,25],[609,28,660,26,"currentTick"],[609,39,660,37],[610,12,661,10,"value"],[610,17,661,15],[610,19,661,17,"Math"],[610,23,661,21],[610,24,661,22,"floor"],[610,29,661,27],[610,30,661,28,"damage"],[610,36,661,34],[610,39,661,37],[610,42,661,40],[610,43,661,41],[611,12,662,10,"stackable"],[611,21,662,19],[611,23,662,21],[612,10,663,8],[612,11,663,9],[612,12,663,10],[613,8,664,6],[613,9,664,7],[613,10,664,8],[614,6,665,4],[616,6,667,4],[617,6,668,4],[617,10,668,8,"ability"],[617,17,668,15],[617,18,668,16,"effects"],[617,25,668,23],[617,26,668,24,"includes"],[617,34,668,32],[617,35,668,33],[617,41,668,39],[617,42,668,40],[617,46,668,44,"ability"],[617,53,668,51],[617,54,668,52,"id"],[617,56,668,54],[617,61,668,59],[617,75,668,73],[617,77,668,75],[618,8,669,6,"console"],[618,15,669,13],[618,16,669,14,"log"],[618,19,669,17],[618,20,669,18],[618,66,669,64,"ability"],[618,73,669,71],[618,74,669,72,"stats"],[618,79,669,77],[618,80,669,78,"duration"],[618,88,669,86],[618,98,669,96],[618,99,669,97],[620,8,671,6],[621,8,672,6],[621,12,672,12,"cloneX"],[621,18,672,18],[621,21,672,21,"currentNinjaPosition"],[621,41,672,41],[621,42,672,42,"x"],[621,43,672,43],[621,46,672,46],[621,48,672,48],[621,49,672,49],[621,50,672,50],[622,8,673,6],[622,12,673,12,"cloneY"],[622,18,673,18],[622,21,673,21,"currentNinjaPosition"],[622,41,673,41],[622,42,673,42,"y"],[622,43,673,43],[622,46,673,46],[622,48,673,48],[622,49,673,49],[622,50,673,50],[624,8,675,6,"state"],[624,13,675,11],[624,14,675,12,"shadowClone"],[624,25,675,23],[624,28,675,26],[625,10,676,8,"id"],[625,12,676,10],[625,14,676,12],[625,30,676,28,"Date"],[625,34,676,32],[625,35,676,33,"now"],[625,38,676,36],[625,39,676,37],[625,40,676,38],[625,42,676,40],[626,10,677,8,"remainingTicks"],[626,24,677,22],[626,26,677,24,"Math"],[626,30,677,28],[626,31,677,29,"floor"],[626,36,677,34],[626,37,677,35,"ability"],[626,44,677,42],[626,45,677,43,"stats"],[626,50,677,48],[626,51,677,49,"duration"],[626,59,677,57],[626,62,677,60],[626,64,677,62],[626,65,677,63],[627,10,677,65],[628,10,678,8,"position"],[628,18,678,16],[628,20,678,18],[629,12,678,20,"x"],[629,13,678,21],[629,15,678,23,"cloneX"],[629,21,678,29],[630,12,678,31,"y"],[630,13,678,32],[630,15,678,34,"cloneY"],[631,10,678,41],[631,11,678,42],[632,10,679,8,"damageMultiplier"],[632,26,679,24],[632,28,679,26],[632,31,679,29],[632,32,679,31],[633,8,680,6],[633,9,680,7],[634,8,682,6,"console"],[634,15,682,13],[634,16,682,14,"log"],[634,19,682,17],[634,20,682,18],[634,63,682,61,"ability"],[634,70,682,68],[634,71,682,69,"stats"],[634,76,682,74],[634,77,682,75,"duration"],[634,85,682,83],[634,108,682,106],[634,109,682,107],[635,6,683,4],[636,4,684,2],[636,5,684,3],[638,4,686,2],[639,4,687,2],[639,8,687,8,"createProjectile"],[639,24,687,24],[639,27,687,27,"createProjectile"],[639,28,687,28,"targetEnemy"],[639,39,687,52],[639,41,687,54,"damage"],[639,47,687,68],[639,49,687,70,"ninjaPos"],[639,57,687,103],[639,59,687,105,"abilityInfo"],[639,70,687,159],[639,72,687,161,"isAOE"],[639,77,687,176],[639,79,687,178,"aoeRadius"],[639,88,687,196],[639,93,687,201],[640,6,688,4],[640,10,688,8],[640,11,688,9,"targetEnemy"],[640,22,688,20],[640,24,688,22],[641,8,689,6,"console"],[641,15,689,13],[641,16,689,14,"log"],[641,19,689,17],[641,20,689,18],[641,65,689,63],[641,66,689,64],[642,8,690,6],[642,15,690,13],[642,19,690,17],[643,6,691,4],[644,6,693,4],[644,10,693,10,"SCREEN_WIDTH"],[644,22,693,22],[644,25,693,25],[644,28,693,28],[645,6,694,4],[645,10,694,10,"GAME_AREA_HEIGHT"],[645,26,694,26],[645,29,694,29],[645,32,694,32],[645,35,694,35],[645,38,694,38],[645,39,694,39],[645,40,694,40],[646,6,695,4],[646,10,695,10,"NINJA_SIZE"],[646,20,695,20],[646,23,695,23],[646,25,695,25],[648,6,697,4],[649,6,698,4],[649,10,698,10,"ninjaX"],[649,16,698,16],[649,19,698,19,"ninjaPos"],[649,27,698,27],[649,30,698,30,"ninjaPos"],[649,38,698,38],[649,39,698,39,"x"],[649,40,698,40],[649,43,698,43,"NINJA_SIZE"],[649,53,698,53],[649,56,698,56],[649,57,698,57],[649,60,698,60,"SCREEN_WIDTH"],[649,72,698,72],[649,75,698,75],[649,76,698,76],[650,6,699,4],[650,10,699,10,"ninjaY"],[650,16,699,16],[650,19,699,19,"ninjaPos"],[650,27,699,27],[650,30,699,30,"ninjaPos"],[650,38,699,38],[650,39,699,39,"y"],[650,40,699,40],[650,43,699,43,"NINJA_SIZE"],[650,53,699,53],[650,56,699,56],[650,57,699,57],[650,60,699,60,"GAME_AREA_HEIGHT"],[650,76,699,76],[650,79,699,79],[650,80,699,80],[651,6,700,4],[651,10,700,10,"ENEMY_SIZE"],[651,20,700,20],[651,23,700,23],[651,25,700,25],[652,6,702,4],[652,10,702,10,"projectileId"],[652,22,702,22],[652,25,702,25],[652,33,702,33,"Date"],[652,37,702,37],[652,38,702,38,"now"],[652,41,702,41],[652,42,702,42],[652,43,702,43],[652,47,702,47,"Math"],[652,51,702,51],[652,52,702,52,"random"],[652,58,702,58],[652,59,702,59],[652,60,702,60],[652,62,702,62],[653,6,704,4],[653,10,704,10,"projectile"],[653,20,704,38],[653,23,704,41],[654,8,705,6,"id"],[654,10,705,8],[654,12,705,10,"projectileId"],[654,24,705,22],[655,8,706,6,"x"],[655,9,706,7],[655,11,706,9,"ninjaX"],[655,17,706,15],[656,8,707,6,"y"],[656,9,707,7],[656,11,707,9,"ninjaY"],[656,17,707,15],[657,8,708,6,"targetX"],[657,15,708,13],[657,17,708,15,"targetEnemy"],[657,28,708,26],[657,29,708,27,"position"],[657,37,708,35],[657,38,708,36,"x"],[657,39,708,37],[657,42,708,40,"ENEMY_SIZE"],[657,52,708,50],[657,55,708,53],[657,56,708,54],[658,8,709,6,"targetY"],[658,15,709,13],[658,17,709,15,"targetEnemy"],[658,28,709,26],[658,29,709,27,"position"],[658,37,709,35],[658,38,709,36,"y"],[658,39,709,37],[658,42,709,40,"ENEMY_SIZE"],[658,52,709,50],[658,55,709,53],[658,56,709,54],[659,8,710,6,"targetEnemyId"],[659,21,710,19],[659,23,710,21,"targetEnemy"],[659,34,710,32],[659,35,710,33,"id"],[659,37,710,35],[660,8,711,6,"damage"],[660,14,711,12],[660,16,711,14,"damage"],[660,22,711,20],[661,8,712,6,"startTime"],[661,17,712,15],[661,19,712,17,"Date"],[661,23,712,21],[661,24,712,22,"now"],[661,27,712,25],[661,28,712,26],[661,29,712,27],[662,8,713,6,"duration"],[662,16,713,14],[662,18,713,16],[662,21,713,19],[663,8,713,21],[664,8,714,6],[665,8,715,6,"abilityId"],[665,17,715,15],[665,19,715,17,"abilityInfo"],[665,30,715,28],[665,32,715,30,"id"],[665,34,715,32],[665,38,715,36],[665,54,715,52],[666,8,716,6,"abilityName"],[666,19,716,17],[666,21,716,19,"abilityInfo"],[666,32,716,30],[666,34,716,32,"name"],[666,38,716,36],[666,42,716,40],[666,58,716,56],[667,8,717,6,"abilityIcon"],[667,19,717,17],[667,21,717,19,"abilityInfo"],[667,32,717,30],[667,34,717,32,"icon"],[667,38,717,36],[667,42,717,40],[667,46,717,44],[668,8,717,46],[669,8,718,6],[670,8,719,6,"isAOE"],[670,13,719,11],[670,15,719,13,"isAOE"],[670,20,719,18],[670,24,719,22],[670,29,719,27],[671,8,720,6,"aoeRadius"],[671,17,720,15],[671,19,720,17,"aoeRadius"],[671,28,720,26],[671,32,720,30],[672,6,721,4],[672,7,721,5],[673,6,723,4,"console"],[673,13,723,11],[673,14,723,12,"log"],[673,17,723,15],[673,18,723,16],[673,44,723,42,"abilityInfo"],[673,55,723,53],[673,57,723,55,"name"],[673,61,723,59],[673,65,723,63],[673,81,723,79],[673,101,723,99,"projectileId"],[673,113,723,111],[673,128,723,126,"targetEnemy"],[673,139,723,137],[673,140,723,138,"name"],[673,144,723,142],[673,152,723,150,"damage"],[673,158,723,156],[673,167,723,165],[673,168,723,166],[674,6,724,4,"console"],[674,13,724,11],[674,14,724,12,"log"],[674,17,724,15],[674,18,724,16],[674,48,724,46,"isAOE"],[674,53,724,51],[674,68,724,66,"aoeRadius"],[674,77,724,75],[674,89,724,87,"damage"],[674,95,724,93],[674,97,724,95],[674,98,724,96],[675,6,726,4,"console"],[675,13,726,11],[675,14,726,12,"log"],[675,17,726,15],[675,18,726,16],[675,53,726,51,"targetEnemy"],[675,64,726,62],[675,65,726,63,"id"],[675,67,726,65],[675,75,726,73,"damage"],[675,81,726,79],[675,90,726,88],[675,91,726,89],[676,6,727,4,"console"],[676,13,727,11],[676,14,727,12,"log"],[676,17,727,15],[676,18,727,16],[676,53,727,51,"ninjaX"],[676,59,727,57],[676,64,727,62,"ninjaY"],[676,70,727,68],[676,87,727,85,"projectile"],[676,97,727,95],[676,98,727,96,"targetX"],[676,105,727,103],[676,110,727,108,"projectile"],[676,120,727,118],[676,121,727,119,"targetY"],[676,128,727,126],[676,131,727,129],[676,132,727,130],[677,6,729,4,"setProjectiles"],[677,20,729,18],[677,21,729,19,"prev"],[677,25,729,23],[677,29,729,27],[677,30,729,28],[677,33,729,31,"prev"],[677,37,729,35],[677,39,729,37,"projectile"],[677,49,729,47],[677,50,729,48],[677,51,729,49],[679,6,731,4],[680,6,732,4,"setTimeout"],[680,16,732,14],[680,17,732,15],[680,23,732,21],[681,8,733,6,"handleProjectileHit"],[681,27,733,25],[681,28,733,26,"projectile"],[681,38,733,36],[681,39,733,37],[682,6,734,4],[682,7,734,5],[682,9,734,7],[682,12,734,10],[682,13,734,11],[683,6,736,4],[683,13,736,11,"projectile"],[683,23,736,21],[684,4,737,2],[684,5,737,3],[686,4,739,2],[687,4,740,2],[687,8,740,8,"spawnTestEnemy"],[687,22,740,22],[687,25,740,26,"state"],[687,30,740,44],[687,34,740,49],[688,6,741,4,"console"],[688,13,741,11],[688,14,741,12,"log"],[688,17,741,15],[688,18,741,16],[688,83,741,81],[688,84,741,82],[690,6,743,4],[691,6,744,4],[691,10,744,10,"zoneEnemy"],[691,19,744,19],[691,22,744,22,"spawnZoneEnemy"],[691,36,744,36],[691,37,744,37],[691,38,744,38],[692,6,745,4],[692,10,745,8],[692,11,745,9,"zoneEnemy"],[692,20,745,18],[692,22,745,20],[693,8,746,6,"console"],[693,15,746,13],[693,16,746,14,"log"],[693,19,746,17],[693,20,746,18],[693,76,746,74],[693,77,746,75],[694,8,747,6],[695,8,748,6,"spawnBasicTestEnemy"],[695,27,748,25],[695,28,748,26,"state"],[695,33,748,31],[695,34,748,32],[696,8,749,6],[697,6,750,4],[698,6,752,4,"console"],[698,13,752,11],[698,14,752,12,"log"],[698,17,752,15],[698,18,752,16],[698,44,752,42,"zoneEnemy"],[698,53,752,51],[698,54,752,52,"name"],[698,58,752,56],[698,63,752,61,"zoneEnemy"],[698,72,752,70],[698,73,752,71,"typeId"],[698,79,752,77],[698,94,752,92,"currentZone"],[698,105,752,103],[698,107,752,105,"id"],[698,109,752,107],[698,119,752,117,"currentZoneLevel"],[698,135,752,133],[698,137,752,135,"level"],[698,142,752,140],[698,144,752,142],[698,145,752,143],[700,6,754,4],[701,6,755,4],[701,10,755,10,"combatEnemy"],[701,21,755,34],[701,24,755,37],[702,8,756,6,"id"],[702,10,756,8],[702,12,756,10,"zoneEnemy"],[702,21,756,19],[702,22,756,20,"id"],[702,24,756,22],[703,8,757,6,"name"],[703,12,757,10],[703,14,757,12,"zoneEnemy"],[703,23,757,21],[703,24,757,22,"name"],[703,28,757,26],[704,8,758,6,"health"],[704,14,758,12],[704,16,758,14,"zoneEnemy"],[704,25,758,23],[704,26,758,24,"hp"],[704,28,758,26],[705,8,759,6,"maxHealth"],[705,17,759,15],[705,19,759,17,"zoneEnemy"],[705,28,759,26],[705,29,759,27,"maxHP"],[705,34,759,32],[706,8,760,6,"stats"],[706,13,760,11],[706,15,760,13],[707,10,761,8,"attack"],[707,16,761,14],[707,18,761,16,"zoneEnemy"],[707,27,761,25],[707,28,761,26,"attack"],[707,34,761,32],[708,10,762,8,"defense"],[708,17,762,15],[708,19,762,17],[708,21,762,19],[709,10,762,21],[710,10,763,8,"health"],[710,16,763,14],[710,18,763,16,"zoneEnemy"],[710,27,763,25],[710,28,763,26,"hp"],[710,30,763,28],[711,10,764,8,"maxHealth"],[711,19,764,17],[711,21,764,19,"zoneEnemy"],[711,30,764,28],[711,31,764,29,"maxHP"],[711,36,764,34],[712,10,765,8,"critChance"],[712,20,765,18],[712,22,765,20],[712,23,765,21],[713,10,766,8,"critDamage"],[713,20,766,18],[713,22,766,20],[713,25,766,23],[714,10,767,8,"cooldownReduction"],[714,27,767,25],[714,29,767,27],[715,8,768,6],[715,9,768,7],[716,8,769,6,"position"],[716,16,769,14],[716,18,769,16,"zoneEnemy"],[716,27,769,25],[716,28,769,26,"position"],[716,36,769,34],[717,8,770,6,"lastDamaged"],[717,19,770,17],[717,21,770,19],[717,22,770,20],[718,8,771,6],[719,8,772,6,"zoneTypeId"],[719,18,772,16],[719,20,772,18,"zoneEnemy"],[719,29,772,27],[719,30,772,28,"typeId"],[719,36,772,34],[720,8,773,6,"zoneXP"],[720,14,773,12],[720,16,773,14,"zoneEnemy"],[720,25,773,23],[720,26,773,24,"xp"],[721,6,774,4],[721,7,774,5],[722,6,776,4,"console"],[722,13,776,11],[722,14,776,12,"log"],[722,17,776,15],[722,18,776,16],[722,42,776,40,"combatEnemy"],[722,53,776,51],[722,54,776,52,"name"],[722,58,776,56],[722,67,776,65,"combatEnemy"],[722,78,776,76],[722,79,776,77,"health"],[722,85,776,83],[722,100,776,98,"currentZone"],[722,111,776,109],[722,113,776,111,"id"],[722,115,776,113],[722,125,776,123,"currentZoneLevel"],[722,141,776,139],[722,143,776,141,"level"],[722,148,776,146],[722,150,776,148],[722,151,776,149],[723,6,777,4,"state"],[723,11,777,9],[723,12,777,10,"enemies"],[723,19,777,17],[723,20,777,18,"push"],[723,24,777,22],[723,25,777,23,"combatEnemy"],[723,36,777,34],[723,37,777,35],[724,4,778,2],[724,5,778,3],[726,4,780,2],[727,4,781,2],[727,8,781,8,"spawnBasicTestEnemy"],[727,27,781,27],[727,30,781,31,"state"],[727,35,781,49],[727,39,781,54],[728,6,782,4],[728,10,782,10,"SCREEN_WIDTH"],[728,22,782,22],[728,25,782,25],[728,28,782,28],[729,6,783,4],[729,10,783,10,"GAME_AREA_HEIGHT"],[729,26,783,26],[729,29,783,29],[729,32,783,32],[729,35,783,35],[729,38,783,38],[730,6,784,4],[730,10,784,10,"ENEMY_SIZE"],[730,20,784,20],[730,23,784,23],[730,25,784,25],[731,6,786,4],[731,10,786,10,"x"],[731,11,786,11],[731,14,786,14,"Math"],[731,18,786,18],[731,19,786,19,"random"],[731,25,786,25],[731,26,786,26],[731,27,786,27],[731,31,786,31,"SCREEN_WIDTH"],[731,43,786,43],[731,46,786,46,"ENEMY_SIZE"],[731,56,786,56],[731,59,786,59],[731,60,786,60],[731,61,786,61],[731,64,786,64,"ENEMY_SIZE"],[731,74,786,74],[732,6,787,4],[732,10,787,10,"y"],[732,11,787,11],[732,14,787,14,"Math"],[732,18,787,18],[732,19,787,19,"random"],[732,25,787,25],[732,26,787,26],[732,27,787,27],[732,31,787,31,"GAME_AREA_HEIGHT"],[732,47,787,47],[732,50,787,50,"ENEMY_SIZE"],[732,60,787,60],[732,63,787,63],[732,64,787,64],[732,65,787,65],[732,68,787,68,"ENEMY_SIZE"],[732,78,787,78],[733,6,789,4],[733,10,789,10,"enemy"],[733,15,789,28],[733,18,789,31],[734,8,790,6,"id"],[734,10,790,8],[734,12,790,10],[734,30,790,28,"Date"],[734,34,790,32],[734,35,790,33,"now"],[734,38,790,36],[734,39,790,37],[734,40,790,38],[734,44,790,42,"Math"],[734,48,790,46],[734,49,790,47,"random"],[734,55,790,53],[734,56,790,54],[734,57,790,55],[734,59,790,57],[735,8,791,6,"name"],[735,12,791,10],[735,14,791,12],[735,26,791,24,"Math"],[735,30,791,28],[735,31,791,29,"floor"],[735,36,791,34],[735,37,791,35,"Math"],[735,41,791,39],[735,42,791,40,"random"],[735,48,791,46],[735,49,791,47],[735,50,791,48],[735,53,791,51],[735,56,791,54],[735,57,791,55],[735,59,791,57],[736,8,792,6,"health"],[736,14,792,12],[736,16,792,14],[736,18,792,16],[737,8,793,6,"maxHealth"],[737,17,793,15],[737,19,793,17],[737,21,793,19],[738,8,794,6,"stats"],[738,13,794,11],[738,15,794,13],[739,10,795,8,"attack"],[739,16,795,14],[739,18,795,16],[739,20,795,18],[740,10,796,8,"defense"],[740,17,796,15],[740,19,796,17],[740,21,796,19],[741,10,797,8,"health"],[741,16,797,14],[741,18,797,16],[741,20,797,18],[742,10,798,8,"maxHealth"],[742,19,798,17],[742,21,798,19],[742,23,798,21],[743,10,799,8,"critChance"],[743,20,799,18],[743,22,799,20],[743,23,799,21],[744,10,800,8,"critDamage"],[744,20,800,18],[744,22,800,20],[744,25,800,23],[745,10,801,8,"cooldownReduction"],[745,27,801,25],[745,29,801,27],[746,8,802,6],[746,9,802,7],[747,8,803,6,"position"],[747,16,803,14],[747,18,803,16],[748,10,803,18,"x"],[748,11,803,19],[749,10,803,21,"y"],[750,8,803,23],[750,9,803,24],[751,8,804,6,"lastDamaged"],[751,19,804,17],[751,21,804,19],[752,6,805,4],[752,7,805,5],[753,6,807,4,"console"],[753,13,807,11],[753,14,807,12,"log"],[753,17,807,15],[753,18,807,16],[753,42,807,40,"enemy"],[753,47,807,45],[753,48,807,46,"name"],[753,52,807,50],[753,60,807,58,"Math"],[753,64,807,62],[753,65,807,63,"round"],[753,70,807,68],[753,71,807,69,"x"],[753,72,807,70],[753,73,807,71],[753,78,807,76,"Math"],[753,82,807,80],[753,83,807,81,"round"],[753,88,807,86],[753,89,807,87,"y"],[753,90,807,88],[753,91,807,89],[753,94,807,92],[753,95,807,93],[754,6,808,4,"state"],[754,11,808,9],[754,12,808,10,"enemies"],[754,19,808,17],[754,20,808,18,"push"],[754,24,808,22],[754,25,808,23,"enemy"],[754,30,808,28],[754,31,808,29],[755,4,809,2],[755,5,809,3],[757,4,811,2],[758,4,812,2],[758,8,812,8,"startCombat"],[758,19,812,19],[758,22,812,22,"React"],[758,27,812,27],[758,28,812,27,"default"],[758,35,812,27],[758,36,812,28,"useCallback"],[758,47,812,39],[758,48,812,40],[758,54,812,46],[759,6,813,4,"console"],[759,13,813,11],[759,14,813,12,"log"],[759,17,813,15],[759,18,813,16],[759,63,813,61],[759,64,813,62],[760,6,814,4,"setCombatState"],[760,20,814,18],[760,21,814,19,"prev"],[760,25,814,23],[760,30,814,28],[761,8,814,30],[761,11,814,33,"prev"],[761,15,814,37],[762,8,814,39,"isInCombat"],[762,18,814,49],[762,20,814,51],[763,6,814,56],[763,7,814,57],[763,8,814,58],[763,9,814,59],[765,6,816,4],[766,6,817,4,"combatEngine"],[766,25,817,16],[766,26,817,16,"combatEngine"],[766,38,817,16],[766,39,817,17,"addTickCallback"],[766,54,817,32],[766,55,817,33,"handleCombatTick"],[766,71,817,49],[766,72,817,50],[767,6,818,4,"console"],[767,13,818,11],[767,14,818,12,"log"],[767,17,818,15],[767,18,818,16],[767,62,818,60],[767,63,818,61],[769,6,820,4],[770,6,821,4,"combatEngine"],[770,25,821,16],[770,26,821,16,"combatEngine"],[770,38,821,16],[770,39,821,17,"start"],[770,44,821,22],[770,45,821,23],[770,46,821,24],[771,4,822,2],[771,5,822,3],[771,7,822,5],[771,8,822,6,"combatEngine"],[771,27,822,18],[771,28,822,18,"combatEngine"],[771,40,822,18],[771,42,822,20,"handleCombatTick"],[771,58,822,36],[771,59,822,37],[771,60,822,38],[773,4,824,2],[774,4,825,2],[774,8,825,8,"stopCombat"],[774,18,825,18],[774,21,825,21,"React"],[774,26,825,26],[774,27,825,26,"default"],[774,34,825,26],[774,35,825,27,"useCallback"],[774,46,825,38],[774,47,825,39],[774,53,825,45],[775,6,826,4,"setCombatState"],[775,20,826,18],[775,21,826,19,"prev"],[775,25,826,23],[775,30,826,28],[776,8,826,30],[776,11,826,33,"prev"],[776,15,826,37],[777,8,826,39,"isInCombat"],[777,18,826,49],[777,20,826,51],[778,6,826,57],[778,7,826,58],[778,8,826,59],[778,9,826,60],[779,6,827,4,"combatEngine"],[779,25,827,16],[779,26,827,16,"combatEngine"],[779,38,827,16],[779,39,827,17,"removeTickCallback"],[779,57,827,35],[779,58,827,36,"handleCombatTick"],[779,74,827,52],[779,75,827,53],[780,4,828,2],[780,5,828,3],[780,7,828,5],[780,8,828,6,"combatEngine"],[780,27,828,18],[780,28,828,18,"combatEngine"],[780,40,828,18],[780,42,828,20,"handleCombatTick"],[780,58,828,36],[780,59,828,37],[780,60,828,38],[782,4,830,2],[783,4,831,2],[783,8,831,8,"equipAbility"],[783,20,831,20],[783,23,831,23,"equipAbility"],[783,24,831,24,"abilityId"],[783,33,831,41],[783,35,831,43,"slotIndex"],[783,44,831,60],[783,49,831,74],[784,6,832,4],[784,13,832,11,"combatState"],[784,24,832,22],[784,25,832,23,"abilityManager"],[784,39,832,37],[784,40,832,38,"equipAbility"],[784,52,832,50],[784,53,832,51,"abilityId"],[784,62,832,60],[784,64,832,62,"slotIndex"],[784,73,832,71],[784,74,832,72],[785,4,833,2],[785,5,833,3],[786,4,835,2],[786,8,835,8,"getDeck"],[786,15,835,15],[786,18,835,18,"getDeck"],[786,19,835,18],[786,24,835,24],[787,6,836,4],[787,13,836,11,"combatState"],[787,24,836,22],[787,25,836,23,"abilityManager"],[787,39,836,37],[787,40,836,38,"getDeck"],[787,47,836,45],[787,48,836,46],[787,49,836,47],[788,4,837,2],[788,5,837,3],[789,4,839,2],[789,8,839,8,"getAvailableAbilities"],[789,29,839,29],[789,32,839,32,"getAvailableAbilities"],[789,33,839,32],[789,38,839,38],[790,6,840,4],[790,13,840,11,"combatState"],[790,24,840,22],[790,25,840,23,"abilityManager"],[790,39,840,37],[790,40,840,38,"getAvailableAbilities"],[790,61,840,59],[790,62,840,60],[790,63,840,61],[791,4,841,2],[791,5,841,3],[792,4,843,2],[792,8,843,8,"upgradeAbility"],[792,22,843,22],[792,25,843,26,"abilityId"],[792,34,843,43],[792,38,843,57],[793,6,844,4],[793,13,844,11,"combatState"],[793,24,844,22],[793,25,844,23,"abilityManager"],[793,39,844,37],[793,40,844,38,"upgradeAbility"],[793,54,844,52],[793,55,844,53,"abilityId"],[793,64,844,62],[793,65,844,63],[794,4,845,2],[794,5,845,3],[796,4,847,2],[797,4,848,2],[797,8,848,8,"clearAllEnemies"],[797,23,848,23],[797,26,848,26,"clearAllEnemies"],[797,27,848,26],[797,32,848,32],[798,6,849,4,"console"],[798,13,849,11],[798,14,849,12,"log"],[798,17,849,15],[798,18,849,16],[798,67,849,65],[798,68,849,66],[799,6,850,4,"setCombatState"],[799,20,850,18],[799,21,850,19,"prev"],[799,25,850,23],[799,30,850,28],[800,8,851,6],[800,11,851,9,"prev"],[800,15,851,13],[801,8,852,6,"enemies"],[801,15,852,13],[801,17,852,15],[802,6,853,4],[802,7,853,5],[802,8,853,6],[802,9,853,7],[803,4,854,2],[803,5,854,3],[805,4,856,2],[806,4,857,2],[806,8,857,8,"triggerLevelUpExplosion"],[806,31,857,31],[806,34,857,34,"triggerLevelUpExplosion"],[806,35,857,34],[806,40,857,40],[807,6,858,4,"console"],[807,13,858,11],[807,14,858,12,"log"],[807,17,858,15],[807,18,858,16],[807,70,858,68],[807,71,858,69],[808,6,860,4],[808,10,860,10,"explosionTime"],[808,23,860,23],[808,26,860,26,"Date"],[808,30,860,30],[808,31,860,31,"now"],[808,34,860,34],[808,35,860,35],[808,36,860,36],[809,6,861,4,"setLastExplosionTime"],[809,26,861,24],[809,27,861,25,"explosionTime"],[809,40,861,38],[809,41,861,39],[810,6,863,4,"setCombatState"],[810,20,863,18],[810,21,863,19,"prev"],[810,25,863,23],[810,29,863,27],[811,8,864,6],[812,8,865,6],[812,12,865,12,"enemyCount"],[812,22,865,22],[812,25,865,25,"prev"],[812,29,865,29],[812,30,865,30,"enemies"],[812,37,865,37],[812,38,865,38,"length"],[812,44,865,44],[813,8,866,6],[813,12,866,12,"explosionXP"],[813,23,866,23],[813,26,866,26,"enemyCount"],[813,36,866,36],[813,39,866,39],[813,42,866,42],[813,43,866,43],[813,44,866,44],[814,8,867,6],[814,12,867,12,"explosionGold"],[814,25,867,25],[814,28,867,28,"enemyCount"],[814,38,867,38],[814,41,867,41],[814,44,867,44],[814,45,867,45],[814,46,867,46],[816,8,869,6,"console"],[816,15,869,13],[816,16,869,14,"log"],[816,19,869,17],[816,20,869,18],[816,44,869,42,"enemyCount"],[816,54,869,52],[816,76,869,74,"explosionXP"],[816,87,869,85],[816,98,869,96,"explosionGold"],[816,111,869,109],[816,118,869,116],[816,119,869,117],[818,8,871,6],[819,8,872,6],[819,12,872,10,"explosionXP"],[819,23,872,21],[819,26,872,24],[819,27,872,25],[819,29,872,27],[820,10,873,8,"setTimeout"],[820,20,873,18],[820,21,873,19],[820,27,873,25],[821,12,874,10,"game"],[821,16,874,14],[821,17,874,15,"updateNinja"],[821,28,874,26],[821,29,874,28,"ninja"],[821,34,874,33],[821,39,874,39],[822,14,875,12,"experience"],[822,24,875,22],[822,26,875,24,"ninja"],[822,31,875,29],[822,32,875,30,"experience"],[822,42,875,40],[822,45,875,43,"explosionXP"],[822,56,875,54],[823,14,876,12,"gold"],[823,18,876,16],[823,20,876,18,"ninja"],[823,25,876,23],[823,26,876,24,"gold"],[823,30,876,28],[823,33,876,31,"explosionGold"],[824,12,877,10],[824,13,877,11],[824,14,877,12],[824,15,877,13],[825,10,878,8],[825,11,878,9],[825,13,878,11],[825,14,878,12],[825,15,878,13],[825,16,878,14],[825,17,878,15],[826,8,879,6],[828,8,881,6],[829,8,882,6],[830,8,883,6],[830,12,883,12,"damagedEnemies"],[830,26,883,26],[830,29,883,29,"prev"],[830,33,883,33],[830,34,883,34,"enemies"],[830,41,883,41],[830,42,883,42,"map"],[830,45,883,45],[830,46,883,46,"enemy"],[830,51,883,51],[830,56,883,56],[831,10,884,8],[831,13,884,11,"enemy"],[831,18,884,16],[832,10,885,8,"health"],[832,16,885,14],[832,18,885,16],[832,19,885,17],[833,10,885,19],[834,10,886,8,"lastDamaged"],[834,21,886,19],[834,23,886,21,"combatEngine"],[834,42,886,33],[834,43,886,33,"combatEngine"],[834,55,886,33],[834,56,886,34,"getCurrentTick"],[834,70,886,48],[834,71,886,49],[835,8,887,6],[835,9,887,7],[835,10,887,8],[835,11,887,9],[836,8,889,6],[836,15,889,13],[837,10,890,8],[837,13,890,11,"prev"],[837,17,890,15],[838,10,891,8,"enemies"],[838,17,891,15],[838,19,891,17,"damagedEnemies"],[839,8,892,6],[839,9,892,7],[840,6,893,4],[840,7,893,5],[840,8,893,6],[841,4,894,2],[841,5,894,3],[843,4,896,2],[844,4,897,2],[844,8,897,8,"spawnEnemy"],[844,18,897,18],[844,21,897,22,"position"],[844,29,897,57],[844,33,897,75],[845,6,898,4],[845,10,898,10,"SCREEN_WIDTH"],[845,22,898,22],[845,25,898,25],[845,28,898,28],[846,6,899,4],[846,10,899,10,"GAME_AREA_HEIGHT"],[846,26,899,26],[846,29,899,29],[846,32,899,32],[846,35,899,35],[846,38,899,38],[846,39,899,39],[846,40,899,40],[847,6,900,4],[847,10,900,10,"ENEMY_SIZE"],[847,20,900,20],[847,23,900,23],[847,25,900,25],[849,6,902,4],[850,6,903,4],[850,10,903,10,"x"],[850,11,903,11],[850,14,903,14,"position"],[850,22,903,22],[850,24,903,24,"x"],[850,25,903,25],[850,29,903,29,"Math"],[850,33,903,33],[850,34,903,34,"random"],[850,40,903,40],[850,41,903,41],[850,42,903,42],[850,46,903,46,"SCREEN_WIDTH"],[850,58,903,58],[850,61,903,61,"ENEMY_SIZE"],[850,71,903,71],[850,74,903,74],[850,75,903,75],[850,76,903,76],[850,79,903,79,"ENEMY_SIZE"],[850,89,903,89],[851,6,904,4],[851,10,904,10,"y"],[851,11,904,11],[851,14,904,14,"position"],[851,22,904,22],[851,24,904,24,"y"],[851,25,904,25],[851,29,904,29,"Math"],[851,33,904,33],[851,34,904,34,"random"],[851,40,904,40],[851,41,904,41],[851,42,904,42],[851,46,904,46,"GAME_AREA_HEIGHT"],[851,62,904,62],[851,65,904,65,"ENEMY_SIZE"],[851,75,904,75],[851,78,904,78],[851,79,904,79],[851,80,904,80],[851,83,904,83,"ENEMY_SIZE"],[851,93,904,93],[852,6,906,4],[852,10,906,10,"enemy"],[852,15,906,28],[852,18,906,31],[853,8,907,6,"id"],[853,10,907,8],[853,12,907,10],[853,21,907,19],[853,23,907,21,"enemyCounter"],[853,35,907,33],[853,37,907,35],[854,8,908,6,"name"],[854,12,908,10],[854,14,908,12],[854,24,908,22],[855,8,909,6,"health"],[855,14,909,12],[855,16,909,14],[855,19,909,17],[856,8,910,6,"maxHealth"],[856,17,910,15],[856,19,910,17],[856,22,910,20],[857,8,911,6,"stats"],[857,13,911,11],[857,15,911,13],[858,10,912,8,"attack"],[858,16,912,14],[858,18,912,16],[858,20,912,18],[859,10,913,8,"defense"],[859,17,913,15],[859,19,913,17],[859,21,913,19],[860,10,914,8,"health"],[860,16,914,14],[860,18,914,16],[860,21,914,19],[861,10,915,8,"maxHealth"],[861,19,915,17],[861,21,915,19],[861,24,915,22],[862,10,916,8,"critChance"],[862,20,916,18],[862,22,916,20],[862,23,916,21],[863,10,917,8,"critDamage"],[863,20,917,18],[863,22,917,20],[863,25,917,23],[864,10,918,8,"cooldownReduction"],[864,27,918,25],[864,29,918,27],[865,8,919,6],[865,9,919,7],[866,8,920,6,"position"],[866,16,920,14],[866,18,920,16],[867,10,920,18,"x"],[867,11,920,19],[868,10,920,21,"y"],[869,8,920,23],[869,9,920,24],[870,8,921,6,"lastDamaged"],[870,19,921,17],[870,21,921,19],[871,6,922,4],[871,7,922,5],[872,6,924,4,"setCombatState"],[872,20,924,18],[872,21,924,19,"prev"],[872,25,924,23],[872,30,924,28],[873,8,925,6],[873,11,925,9,"prev"],[873,15,925,13],[874,8,926,6,"enemies"],[874,15,926,13],[874,17,926,15],[874,18,926,16],[874,21,926,19,"prev"],[874,25,926,23],[874,26,926,24,"enemies"],[874,33,926,31],[874,35,926,33,"enemy"],[874,40,926,38],[875,6,927,4],[875,7,927,5],[875,8,927,6],[875,9,927,7],[876,6,929,4],[876,13,929,11,"enemy"],[876,18,929,16],[877,4,930,2],[877,5,930,3],[879,4,932,2],[880,4,933,2],[880,8,933,8,"spawnBoss"],[880,17,933,17],[880,20,933,21,"bossEnemy"],[880,29,933,43],[880,33,933,48],[881,6,934,4,"console"],[881,13,934,11],[881,14,934,12,"log"],[881,17,934,15],[881,18,934,16],[881,39,934,37,"bossEnemy"],[881,48,934,46],[881,49,934,47,"name"],[881,53,934,51],[881,90,934,88],[881,91,934,89],[882,6,935,4,"setCombatState"],[882,20,935,18],[882,21,935,19,"prev"],[882,25,935,23],[882,30,935,28],[883,8,936,6],[883,11,936,9,"prev"],[883,15,936,13],[884,8,937,6,"enemies"],[884,15,937,13],[884,17,937,15],[884,18,937,16,"bossEnemy"],[884,27,937,25],[884,28,937,26],[884,29,937,27],[885,6,938,4],[885,7,938,5],[885,8,938,6],[885,9,938,7],[886,4,939,2],[886,5,939,3],[888,4,941,2],[889,4,942,2],[889,8,942,8,"clearSpecificEnemy"],[889,26,942,26],[889,29,942,30,"enemyId"],[889,36,942,45],[889,40,942,50],[890,6,943,4,"setCombatState"],[890,20,943,18],[890,21,943,19,"prev"],[890,25,943,23],[890,30,943,28],[891,8,944,6],[891,11,944,9,"prev"],[891,15,944,13],[892,8,945,6,"enemies"],[892,15,945,13],[892,17,945,15,"prev"],[892,21,945,19],[892,22,945,20,"enemies"],[892,29,945,27],[892,30,945,28,"filter"],[892,36,945,34],[892,37,945,35,"enemy"],[892,42,945,40],[892,46,945,44,"enemy"],[892,51,945,49],[892,52,945,50,"id"],[892,54,945,52],[892,59,945,57,"enemyId"],[892,66,945,64],[893,6,946,4],[893,7,946,5],[893,8,946,6],[893,9,946,7],[894,4,947,2],[894,5,947,3],[896,4,949,2],[897,4,950,2],[897,8,950,8,"useAbilityManually"],[897,26,950,26],[897,29,950,26,"_s3"],[897,32,950,26],[897,33,950,29],[897,37,950,29,"useCallback"],[897,43,950,40],[897,44,950,40,"useCallback"],[897,55,950,40],[897,57,950,40,"_s3"],[897,60,950,40],[897,61,950,42,"slotIndex"],[897,70,950,59],[897,74,950,73],[898,6,950,73,"_s3"],[898,9,950,73],[899,6,951,4,"console"],[899,13,951,11],[899,14,951,12,"log"],[899,17,951,15],[899,18,951,16],[899,53,951,51,"slotIndex"],[899,62,951,60],[899,64,951,62],[899,65,951,63],[901,6,953,4],[902,6,954,4],[902,10,954,8],[902,11,954,9,"game"],[902,15,954,13],[902,16,954,14,"gameState"],[902,25,954,23],[902,26,954,24,"isAlive"],[902,33,954,31],[902,35,954,33],[903,8,955,6,"console"],[903,15,955,13],[903,16,955,14,"log"],[903,19,955,17],[903,20,955,18],[903,70,955,68],[903,71,955,69],[904,8,956,6],[904,15,956,13],[904,20,956,18],[905,6,957,4],[907,6,959,4],[908,6,960,4],[908,10,960,10,"isReady"],[908,17,960,17],[908,20,960,20,"combatState"],[908,31,960,31],[908,32,960,32,"abilityManager"],[908,46,960,46],[908,47,960,47,"isAbilityReady"],[908,61,960,61],[908,62,960,62,"slotIndex"],[908,71,960,71],[908,72,960,72],[909,6,961,4],[909,10,961,8],[909,11,961,9,"isReady"],[909,18,961,16],[909,20,961,18],[910,8,962,6,"console"],[910,15,962,13],[910,16,962,14,"log"],[910,19,962,17],[910,20,962,18],[910,41,962,39,"slotIndex"],[910,50,962,48],[910,85,962,83],[910,86,962,84],[911,8,963,6],[911,15,963,13],[911,20,963,18],[912,6,964,4],[914,6,966,4],[915,6,967,4],[915,10,967,8,"combatState"],[915,21,967,19],[915,22,967,20,"enemies"],[915,29,967,27],[915,30,967,28,"length"],[915,36,967,34],[915,41,967,39],[915,42,967,40],[915,44,967,42],[916,8,968,6,"console"],[916,15,968,13],[916,16,968,14,"log"],[916,19,968,17],[916,20,968,18],[916,69,968,67],[916,70,968,68],[917,8,969,6],[917,15,969,13],[917,20,969,18],[918,6,970,4],[920,6,972,4],[921,6,973,4],[921,10,973,10,"currentTick"],[921,21,973,21],[921,24,973,24,"combatEngine"],[921,43,973,36],[921,44,973,36,"combatEngine"],[921,56,973,36],[921,57,973,37,"getCurrentTick"],[921,71,973,51],[921,72,973,52],[921,73,973,53],[922,6,974,4],[922,10,974,10,"success"],[922,17,974,17],[922,20,974,20,"combatState"],[922,31,974,31],[922,32,974,32,"abilityManager"],[922,46,974,46],[922,47,974,47,"useAbility"],[922,57,974,57],[922,58,974,58,"slotIndex"],[922,67,974,67],[922,69,974,69,"currentTick"],[922,80,974,80],[922,81,974,81],[923,6,976,4],[923,10,976,8,"success"],[923,17,976,15],[923,19,976,17],[924,8,977,6],[925,8,978,6,"setCombatState"],[925,22,978,20],[925,23,978,21,"prev"],[925,27,978,25],[925,31,978,29],[926,10,979,8],[926,14,979,14,"newState"],[926,22,979,22],[926,25,979,25],[927,12,979,27],[927,15,979,30,"prev"],[928,10,979,35],[928,11,979,36],[929,10,980,8,"castAbility"],[929,21,980,19],[929,22,980,20,"newState"],[929,30,980,28],[929,32,980,30,"slotIndex"],[929,41,980,39],[929,42,980,40],[930,10,981,8],[930,17,981,15,"newState"],[930,25,981,23],[931,8,982,6],[931,9,982,7],[931,10,982,8],[932,8,984,6,"console"],[932,15,984,13],[932,16,984,14,"log"],[932,19,984,17],[932,20,984,18],[932,65,984,63,"slotIndex"],[932,74,984,72],[932,76,984,74],[932,77,984,75],[933,8,985,6],[933,15,985,13],[933,19,985,17],[934,6,986,4],[934,7,986,5],[934,13,986,11],[935,8,987,6,"console"],[935,15,987,13],[935,16,987,14,"log"],[935,19,987,17],[935,20,987,18],[935,61,987,59,"slotIndex"],[935,70,987,68],[935,72,987,70],[935,73,987,71],[936,8,988,6],[936,15,988,13],[936,20,988,18],[937,6,989,4],[938,4,990,2],[938,5,990,3],[938,46,990,5],[938,47,990,6,"combatState"],[938,58,990,17],[938,59,990,18,"abilityManager"],[938,73,990,32],[938,75,990,34,"combatState"],[938,86,990,45],[938,87,990,46,"enemies"],[938,94,990,53],[938,95,990,54],[938,96,990,55],[939,4,991,2],[939,8,991,2,"useEffect"],[939,14,991,11],[939,15,991,11,"useEffect"],[939,24,991,11],[939,26,991,12],[939,32,991,18],[940,6,992,4,"combatEngine"],[940,25,992,16],[940,26,992,16,"combatEngine"],[940,38,992,16],[940,39,992,17,"start"],[940,44,992,22],[940,45,992,23],[940,46,992,24],[942,6,994,4],[943,6,995,4],[944,6,996,4,"console"],[944,13,996,11],[944,14,996,12,"log"],[944,17,996,15],[944,18,996,16],[944,97,996,95],[944,98,996,96],[945,6,998,4],[945,13,998,11],[945,19,998,17],[946,8,999,6,"combatEngine"],[946,27,999,18],[946,28,999,18,"combatEngine"],[946,40,999,18],[946,41,999,19,"stop"],[946,45,999,23],[946,46,999,24],[946,47,999,25],[947,6,1000,4],[947,7,1000,5],[948,4,1001,2],[948,5,1001,3],[948,7,1001,5],[948,9,1001,7],[948,10,1001,8],[950,4,1003,2],[951,4,1004,2],[951,8,1004,2,"useEffect"],[951,14,1004,11],[951,15,1004,11,"useEffect"],[951,24,1004,11],[951,26,1004,12],[951,32,1004,18],[952,6,1005,4],[952,10,1005,10,"processProjectileImpacts"],[952,34,1005,34],[952,37,1005,37,"processProjectileImpacts"],[952,38,1005,37],[952,43,1005,43],[953,8,1006,6,"setProjectiles"],[953,22,1006,20],[953,23,1006,21,"currentProjectiles"],[953,41,1006,39],[953,45,1006,43],[954,10,1007,8],[954,17,1007,15,"currentProjectiles"],[954,35,1007,33],[954,36,1007,34,"map"],[954,39,1007,37],[954,40,1007,38,"projectile"],[954,50,1007,48],[954,54,1007,52],[955,12,1008,10],[955,16,1008,14],[955,17,1008,15,"projectile"],[955,27,1008,25],[955,29,1008,27],[955,36,1008,34],[955,40,1008,38],[957,12,1010,10],[958,12,1011,10],[958,16,1011,16,"currentTime"],[958,27,1011,27],[958,30,1011,30,"Date"],[958,34,1011,34],[958,35,1011,35,"now"],[958,38,1011,38],[958,39,1011,39],[958,40,1011,40],[959,12,1012,10],[959,16,1012,16,"startTime"],[959,25,1012,25],[959,28,1012,28,"projectile"],[959,38,1012,38],[959,39,1012,39,"startTime"],[959,48,1012,48],[959,52,1012,52,"currentTime"],[959,63,1012,63],[960,12,1013,10],[960,16,1013,16,"elapsedTime"],[960,27,1013,27],[960,30,1013,30,"currentTime"],[960,41,1013,41],[960,44,1013,44,"startTime"],[960,53,1013,53],[961,12,1014,10],[961,16,1014,16,"progress"],[961,24,1014,24],[961,27,1014,27,"Math"],[961,31,1014,31],[961,32,1014,32,"min"],[961,35,1014,35],[961,36,1014,36,"elapsedTime"],[961,47,1014,47],[961,51,1014,51,"projectile"],[961,61,1014,61],[961,62,1014,62,"duration"],[961,70,1014,70],[961,74,1014,74],[961,77,1014,77],[961,78,1014,78],[961,80,1014,80],[961,81,1014,81],[961,82,1014,82],[963,12,1016,10],[964,12,1017,10],[964,16,1017,14,"progress"],[964,24,1017,22],[964,28,1017,26],[964,29,1017,27],[964,33,1017,31],[964,34,1017,32,"projectile"],[964,44,1017,42],[964,45,1017,43,"hasHit"],[964,51,1017,49],[964,53,1017,51],[965,14,1018,12,"projectile"],[965,24,1018,22],[965,25,1018,23,"hasHit"],[965,31,1018,29],[965,34,1018,32],[965,38,1018,36],[966,14,1020,12,"setCombatState"],[966,28,1020,26],[966,29,1020,27,"prev"],[966,33,1020,31],[966,37,1020,35],[967,16,1021,14],[967,20,1021,20,"newState"],[967,28,1021,28],[967,31,1021,31],[968,18,1021,33],[968,21,1021,36,"prev"],[969,16,1021,41],[969,17,1021,42],[970,16,1023,14],[970,20,1023,18,"projectile"],[970,30,1023,28],[970,31,1023,29,"isAOE"],[970,36,1023,34],[970,40,1023,38,"projectile"],[970,50,1023,48],[970,51,1023,49,"aoeRadius"],[970,60,1023,58],[970,64,1023,62,"projectile"],[970,74,1023,72],[970,75,1023,73,"aoeRadius"],[970,84,1023,82],[970,87,1023,85],[970,88,1023,86],[970,90,1023,88],[971,18,1024,16],[972,18,1025,16,"console"],[972,25,1025,23],[972,26,1025,24,"log"],[972,29,1025,27],[972,30,1025,28],[972,59,1025,57,"projectile"],[972,69,1025,67],[972,70,1025,68,"abilityName"],[972,81,1025,79],[972,97,1025,95,"projectile"],[972,107,1025,105],[972,108,1025,106,"aoeRadius"],[972,117,1025,115],[972,119,1025,117],[972,120,1025,118],[973,18,1027,16],[973,22,1027,22,"impactX"],[973,29,1027,29],[973,32,1027,32,"projectile"],[973,42,1027,42],[973,43,1027,43,"targetX"],[973,50,1027,50],[974,18,1028,16],[974,22,1028,22,"impactY"],[974,29,1028,29],[974,32,1028,32,"projectile"],[974,42,1028,42],[974,43,1028,43,"targetY"],[974,50,1028,50],[975,18,1029,16],[975,22,1029,22,"enemiesKilled"],[975,35,1029,50],[975,38,1029,53],[975,40,1029,55],[977,18,1031,16],[978,18,1032,16,"newState"],[978,26,1032,24],[978,27,1032,25,"enemies"],[978,34,1032,32],[978,37,1032,35,"newState"],[978,45,1032,43],[978,46,1032,44,"enemies"],[978,53,1032,51],[978,54,1032,52,"map"],[978,57,1032,55],[978,58,1032,56,"enemy"],[978,63,1032,61],[978,67,1032,65],[979,20,1033,18],[979,24,1033,22,"enemy"],[979,29,1033,27],[979,30,1033,28,"health"],[979,36,1033,34],[979,40,1033,38],[979,41,1033,39],[979,45,1033,43,"enemy"],[979,50,1033,48],[979,51,1033,49,"markedForDeath"],[979,65,1033,63],[979,67,1033,65],[979,74,1033,72,"enemy"],[979,79,1033,77],[980,20,1035,18],[980,24,1035,24,"enemyX"],[980,30,1035,30],[980,33,1035,33,"enemy"],[980,38,1035,38],[980,39,1035,39,"position"],[980,47,1035,47],[980,48,1035,48,"x"],[980,49,1035,49],[980,52,1035,52],[980,56,1035,56],[980,57,1035,57],[980,58,1035,58],[981,20,1036,18],[981,24,1036,24,"enemyY"],[981,30,1036,30],[981,33,1036,33,"enemy"],[981,38,1036,38],[981,39,1036,39,"position"],[981,47,1036,47],[981,48,1036,48,"y"],[981,49,1036,49],[981,52,1036,52],[981,56,1036,56],[982,20,1037,18],[982,24,1037,24,"distance"],[982,32,1037,32],[982,35,1037,35,"Math"],[982,39,1037,39],[982,40,1037,40,"sqrt"],[982,44,1037,44],[982,45,1037,45,"Math"],[982,49,1037,49],[982,50,1037,50,"pow"],[982,53,1037,53],[982,54,1037,54,"enemyX"],[982,60,1037,60],[982,63,1037,63,"impactX"],[982,70,1037,70],[982,72,1037,72],[982,73,1037,73],[982,74,1037,74],[982,77,1037,77,"Math"],[982,81,1037,81],[982,82,1037,82,"pow"],[982,85,1037,85],[982,86,1037,86,"enemyY"],[982,92,1037,92],[982,95,1037,95,"impactY"],[982,102,1037,102],[982,104,1037,104],[982,105,1037,105],[982,106,1037,106],[982,107,1037,107],[983,20,1039,18,"console"],[983,27,1039,25],[983,28,1039,26,"log"],[983,31,1039,29],[983,32,1039,30],[983,58,1039,56,"enemy"],[983,63,1039,61],[983,64,1039,62,"name"],[983,68,1039,66],[983,76,1039,74,"enemyX"],[983,82,1039,80],[983,87,1039,85,"enemyY"],[983,93,1039,91],[983,109,1039,107,"impactX"],[983,116,1039,114],[983,121,1039,119,"impactY"],[983,128,1039,126],[983,135,1039,133,"distance"],[983,143,1039,141],[983,144,1039,142,"toFixed"],[983,151,1039,149],[983,152,1039,150],[983,153,1039,151],[983,154,1039,152],[983,169,1039,167,"projectile"],[983,179,1039,177],[983,180,1039,178,"aoeRadius"],[983,189,1039,187],[983,194,1039,192],[983,195,1039,193],[984,20,1041,18],[984,24,1041,22,"distance"],[984,32,1041,30],[984,36,1041,34,"projectile"],[984,46,1041,44],[984,47,1041,45,"aoeRadius"],[984,56,1041,54],[984,58,1041,56],[985,22,1042,20],[986,22,1043,20],[986,26,1043,26,"newHealth"],[986,35,1043,35],[986,38,1043,38,"Math"],[986,42,1043,42],[986,43,1043,43,"max"],[986,46,1043,46],[986,47,1043,47],[986,48,1043,48],[986,50,1043,50,"enemy"],[986,55,1043,55],[986,56,1043,56,"health"],[986,62,1043,62],[986,65,1043,65,"projectile"],[986,75,1043,75],[986,76,1043,76,"damage"],[986,82,1043,82],[986,83,1043,83],[987,22,1045,20,"console"],[987,29,1045,27],[987,30,1045,28,"log"],[987,33,1045,31],[987,34,1045,32],[987,52,1045,50,"enemy"],[987,57,1045,55],[987,58,1045,56,"name"],[987,62,1045,60],[987,74,1045,72,"projectile"],[987,84,1045,82],[987,85,1045,83,"damage"],[987,91,1045,89],[987,103,1045,101,"enemy"],[987,108,1045,106],[987,109,1045,107,"health"],[987,115,1045,113],[987,122,1045,120,"newHealth"],[987,131,1045,129],[987,134,1045,132],[987,135,1045,133],[989,22,1047,20],[990,22,1048,20],[990,26,1048,24,"newHealth"],[990,35,1048,33],[990,39,1048,37],[990,40,1048,38],[990,44,1048,42,"enemy"],[990,49,1048,47],[990,50,1048,48,"health"],[990,56,1048,54],[990,59,1048,57],[990,60,1048,58],[990,62,1048,60],[991,24,1049,22,"console"],[991,31,1049,29],[991,32,1049,30,"log"],[991,35,1049,33],[991,36,1049,34],[991,52,1049,50,"enemy"],[991,57,1049,55],[991,58,1049,56,"name"],[991,62,1049,60],[991,76,1049,74,"projectile"],[991,86,1049,84],[991,87,1049,85,"abilityName"],[991,98,1049,96],[991,101,1049,99],[991,102,1049,100],[992,24,1050,22,"enemiesKilled"],[992,37,1050,35],[992,38,1050,36,"push"],[992,42,1050,40],[992,43,1050,41,"enemy"],[992,48,1050,46],[992,49,1050,47],[992,50,1050,48],[992,51,1050,49],[994,24,1052,22],[994,31,1052,29],[995,26,1053,24],[995,29,1053,27,"enemy"],[995,34,1053,32],[996,26,1054,24,"health"],[996,32,1054,30],[996,34,1054,32],[996,35,1054,33],[997,26,1055,24,"markedForDeath"],[997,40,1055,38],[997,42,1055,40],[997,46,1055,44],[998,26,1056,24,"lastDamaged"],[998,37,1056,35],[998,39,1056,37,"combatEngine"],[998,58,1056,49],[998,59,1056,49,"combatEngine"],[998,71,1056,49],[998,72,1056,50,"getCurrentTick"],[998,86,1056,64],[998,87,1056,65],[999,24,1057,22],[999,25,1057,23],[1000,22,1058,20],[1000,23,1058,21],[1000,29,1058,27],[1001,24,1059,22],[1001,31,1059,29],[1002,26,1060,24],[1002,29,1060,27,"enemy"],[1002,34,1060,32],[1003,26,1061,24,"health"],[1003,32,1061,30],[1003,34,1061,32,"newHealth"],[1003,43,1061,41],[1004,26,1062,24,"lastDamaged"],[1004,37,1062,35],[1004,39,1062,37,"combatEngine"],[1004,58,1062,49],[1004,59,1062,49,"combatEngine"],[1004,71,1062,49],[1004,72,1062,50,"getCurrentTick"],[1004,86,1062,64],[1004,87,1062,65],[1005,24,1063,22],[1005,25,1063,23],[1006,22,1064,20],[1007,20,1065,18],[1008,20,1067,18],[1008,27,1067,25,"enemy"],[1008,32,1067,30],[1008,33,1067,31],[1008,34,1067,32],[1009,18,1068,16],[1009,19,1068,17],[1009,20,1068,18],[1011,18,1070,16],[1012,18,1071,16],[1012,22,1071,20,"enemiesKilled"],[1012,35,1071,33],[1012,36,1071,34,"length"],[1012,42,1071,40],[1012,45,1071,43],[1012,46,1071,44],[1012,48,1071,46],[1013,20,1072,18,"console"],[1013,27,1072,25],[1013,28,1072,26,"log"],[1013,31,1072,29],[1013,32,1072,30],[1013,52,1072,50,"enemiesKilled"],[1013,65,1072,63],[1013,66,1072,64,"length"],[1013,72,1072,70],[1013,94,1072,92,"projectile"],[1013,104,1072,102],[1013,105,1072,103,"abilityName"],[1013,116,1072,114],[1013,118,1072,116],[1013,119,1072,117],[1014,20,1073,18,"setTimeout"],[1014,30,1073,28],[1014,31,1073,29],[1014,37,1073,35],[1015,22,1074,20,"enemiesKilled"],[1015,35,1074,33],[1015,36,1074,34,"forEach"],[1015,43,1074,41],[1015,44,1074,42,"enemy"],[1015,49,1074,47],[1015,53,1074,51,"handleEnemyKill"],[1015,68,1074,66],[1015,69,1074,67,"enemy"],[1015,74,1074,72],[1015,75,1074,73],[1015,76,1074,74],[1016,20,1075,18],[1016,21,1075,19],[1016,23,1075,21],[1016,24,1075,22],[1016,25,1075,23],[1017,18,1076,16],[1018,16,1078,14],[1018,17,1078,15],[1018,23,1078,21],[1019,18,1079,16],[1020,18,1080,16],[1020,22,1080,22,"enemyIndex"],[1020,32,1080,32],[1020,35,1080,35,"newState"],[1020,43,1080,43],[1020,44,1080,44,"enemies"],[1020,51,1080,51],[1020,52,1080,52,"findIndex"],[1020,61,1080,61],[1020,62,1080,62,"e"],[1020,63,1080,63],[1020,67,1080,67,"e"],[1020,68,1080,68],[1020,69,1080,69,"id"],[1020,71,1080,71],[1020,76,1080,76,"projectile"],[1020,86,1080,86],[1020,87,1080,87,"targetEnemyId"],[1020,100,1080,100],[1020,101,1080,101],[1021,18,1082,16],[1021,22,1082,20,"enemyIndex"],[1021,32,1082,30],[1021,36,1082,34],[1021,37,1082,35],[1021,41,1082,39,"newState"],[1021,49,1082,47],[1021,50,1082,48,"enemies"],[1021,57,1082,55],[1021,58,1082,56,"enemyIndex"],[1021,68,1082,66],[1021,69,1082,67],[1021,70,1082,68,"health"],[1021,76,1082,74],[1021,79,1082,77],[1021,80,1082,78],[1021,84,1082,82],[1021,85,1082,83,"newState"],[1021,93,1082,91],[1021,94,1082,92,"enemies"],[1021,101,1082,99],[1021,102,1082,100,"enemyIndex"],[1021,112,1082,110],[1021,113,1082,111],[1021,114,1082,112,"markedForDeath"],[1021,128,1082,126],[1021,130,1082,128],[1022,20,1083,18,"newState"],[1022,28,1083,26],[1022,29,1083,27,"enemies"],[1022,36,1083,34],[1022,39,1083,37],[1022,40,1083,38],[1022,43,1083,41,"newState"],[1022,51,1083,49],[1022,52,1083,50,"enemies"],[1022,59,1083,57],[1022,60,1083,58],[1023,20,1084,18],[1023,24,1084,24,"enemy"],[1023,29,1084,29],[1023,32,1084,32,"newState"],[1023,40,1084,40],[1023,41,1084,41,"enemies"],[1023,48,1084,48],[1023,49,1084,49,"enemyIndex"],[1023,59,1084,59],[1023,60,1084,60],[1024,20,1085,18],[1024,24,1085,24,"newHealth"],[1024,33,1085,33],[1024,36,1085,36,"Math"],[1024,40,1085,40],[1024,41,1085,41,"max"],[1024,44,1085,44],[1024,45,1085,45],[1024,46,1085,46],[1024,48,1085,48,"enemy"],[1024,53,1085,53],[1024,54,1085,54,"health"],[1024,60,1085,60],[1024,63,1085,63,"projectile"],[1024,73,1085,73],[1024,74,1085,74,"damage"],[1024,80,1085,80],[1024,81,1085,81],[1025,20,1087,18,"newState"],[1025,28,1087,26],[1025,29,1087,27,"enemies"],[1025,36,1087,34],[1025,37,1087,35,"enemyIndex"],[1025,47,1087,45],[1025,48,1087,46],[1025,51,1087,49],[1026,22,1088,20],[1026,25,1088,23,"enemy"],[1026,30,1088,28],[1027,22,1089,20,"health"],[1027,28,1089,26],[1027,30,1089,28,"newHealth"],[1027,39,1089,37],[1028,22,1090,20,"lastDamaged"],[1028,33,1090,31],[1028,35,1090,33,"combatEngine"],[1028,54,1090,45],[1028,55,1090,45,"combatEngine"],[1028,67,1090,45],[1028,68,1090,46,"getCurrentTick"],[1028,82,1090,60],[1028,83,1090,61],[1029,20,1091,18],[1029,21,1091,19],[1030,20,1093,18,"console"],[1030,27,1093,25],[1030,28,1093,26,"log"],[1030,31,1093,29],[1030,32,1093,30],[1030,60,1093,58,"enemy"],[1030,65,1093,63],[1030,66,1093,64,"name"],[1030,70,1093,68],[1030,82,1093,80,"newHealth"],[1030,91,1093,89],[1030,95,1093,93,"enemy"],[1030,100,1093,98],[1030,101,1093,99,"maxHealth"],[1030,110,1093,108],[1030,112,1093,110],[1030,113,1093,111],[1032,20,1095,18],[1033,20,1096,18],[1033,24,1096,22,"newHealth"],[1033,33,1096,31],[1033,37,1096,35],[1033,38,1096,36],[1033,42,1096,40,"enemy"],[1033,47,1096,45],[1033,48,1096,46,"health"],[1033,54,1096,52],[1033,57,1096,55],[1033,58,1096,56],[1033,60,1096,58],[1034,22,1097,20,"console"],[1034,29,1097,27],[1034,30,1097,28,"log"],[1034,33,1097,31],[1034,34,1097,32],[1034,60,1097,58,"enemy"],[1034,65,1097,63],[1034,66,1097,64,"name"],[1034,70,1097,68],[1034,84,1097,82,"projectile"],[1034,94,1097,92],[1034,95,1097,93,"abilityName"],[1034,106,1097,104],[1034,109,1097,107],[1034,110,1097,108],[1036,22,1099,20],[1037,22,1100,20,"newState"],[1037,30,1100,28],[1037,31,1100,29,"enemies"],[1037,38,1100,36],[1037,39,1100,37,"enemyIndex"],[1037,49,1100,47],[1037,50,1100,48],[1037,53,1100,51],[1038,24,1101,22],[1038,27,1101,25,"newState"],[1038,35,1101,33],[1038,36,1101,34,"enemies"],[1038,43,1101,41],[1038,44,1101,42,"enemyIndex"],[1038,54,1101,52],[1038,55,1101,53],[1039,24,1102,22,"health"],[1039,30,1102,28],[1039,32,1102,30],[1039,33,1102,31],[1040,24,1103,22,"markedForDeath"],[1040,38,1103,36],[1040,40,1103,38],[1041,22,1104,20],[1041,23,1104,21],[1043,22,1106,20],[1044,22,1107,20,"setTimeout"],[1044,32,1107,30],[1044,33,1107,31],[1044,39,1107,37,"handleEnemyKill"],[1044,54,1107,52],[1044,55,1107,53,"enemy"],[1044,60,1107,58],[1044,61,1107,59],[1044,63,1107,61],[1044,64,1107,62],[1044,65,1107,63],[1045,20,1108,18],[1046,18,1109,16],[1047,16,1110,14],[1048,16,1112,14],[1048,23,1112,21,"newState"],[1048,31,1112,29],[1049,14,1113,12],[1049,15,1113,13],[1049,16,1113,14],[1050,12,1114,10],[1052,12,1116,10],[1053,12,1117,10],[1053,16,1117,14,"progress"],[1053,24,1117,22],[1053,28,1117,26],[1053,31,1117,29],[1053,33,1117,31],[1054,14,1118,12],[1054,21,1118,19],[1054,25,1118,23],[1055,12,1119,10],[1056,12,1121,10],[1056,19,1121,17,"projectile"],[1056,29,1121,27],[1057,10,1122,8],[1057,11,1122,9],[1057,12,1122,10],[1057,13,1122,11,"filter"],[1057,19,1122,17],[1057,20,1122,18,"Boolean"],[1057,27,1122,25],[1057,28,1122,26],[1058,8,1123,6],[1058,9,1123,7],[1058,10,1123,8],[1059,6,1124,4],[1059,7,1124,5],[1061,6,1126,4],[1062,6,1127,4],[1062,10,1127,10,"impactInterval"],[1062,24,1127,24],[1062,27,1127,27,"setInterval"],[1062,38,1127,38],[1062,39,1127,39,"processProjectileImpacts"],[1062,63,1127,63],[1062,65,1127,65],[1062,67,1127,67],[1062,68,1127,68],[1063,6,1128,4],[1063,13,1128,11],[1063,19,1128,17,"clearInterval"],[1063,32,1128,30],[1063,33,1128,31,"impactInterval"],[1063,47,1128,45],[1063,48,1128,46],[1064,4,1129,2],[1064,5,1129,3],[1064,7,1129,5],[1064,8,1129,6,"handleEnemyKill"],[1064,23,1129,21],[1064,24,1129,22],[1064,25,1129,23],[1066,4,1131,2],[1067,4,1132,2],[1067,8,1132,8,"saveAbilityData"],[1067,23,1132,23],[1067,26,1132,26],[1067,30,1132,26,"useCallback"],[1067,36,1132,37],[1067,37,1132,37,"useCallback"],[1067,48,1132,37],[1067,50,1132,38],[1067,56,1132,44],[1068,6,1133,4],[1068,10,1133,8,"combatState"],[1068,21,1133,19],[1068,22,1133,20,"abilityManager"],[1068,36,1133,34],[1068,38,1133,36],[1069,8,1134,6],[1069,12,1134,12,"abilityData"],[1069,23,1134,23],[1069,26,1134,26,"combatState"],[1069,37,1134,37],[1069,38,1134,38,"abilityManager"],[1069,52,1134,52],[1069,53,1134,53,"getSaveData"],[1069,64,1134,64],[1069,65,1134,65],[1069,66,1134,66],[1070,8,1135,6,"console"],[1070,15,1135,13],[1070,16,1135,14,"log"],[1070,19,1135,17],[1070,20,1135,18],[1070,70,1135,68],[1070,72,1135,70,"abilityData"],[1070,83,1135,81],[1070,84,1135,82],[1071,8,1136,6,"game"],[1071,12,1136,10],[1071,13,1136,11,"updateAbilityData"],[1071,30,1136,28],[1071,31,1136,29,"abilityData"],[1071,42,1136,40],[1071,43,1136,41],[1072,6,1137,4],[1073,4,1138,2],[1073,5,1138,3],[1073,7,1138,5],[1073,8,1138,6,"combatState"],[1073,19,1138,17],[1073,20,1138,18,"abilityManager"],[1073,34,1138,32],[1073,36,1138,34,"game"],[1073,40,1138,38],[1073,41,1138,39,"updateAbilityData"],[1073,58,1138,56],[1073,59,1138,57],[1073,60,1138,58],[1074,4,1140,2],[1074,8,1140,8,"contextValue"],[1074,20,1140,39],[1074,23,1140,42,"React"],[1074,28,1140,47],[1074,29,1140,47,"default"],[1074,36,1140,47],[1074,37,1140,48,"useMemo"],[1074,44,1140,55],[1074,45,1140,56],[1074,52,1140,63],[1075,6,1141,4,"combatState"],[1075,17,1141,15],[1076,6,1142,4,"projectiles"],[1076,17,1142,15],[1077,6,1143,4,"startCombat"],[1077,17,1143,15],[1078,6,1144,4,"stopCombat"],[1078,16,1144,14],[1079,6,1145,4,"equipAbility"],[1079,18,1145,16],[1080,6,1146,4,"handleEnemyKill"],[1080,21,1146,19],[1081,6,1147,4,"getDeck"],[1081,13,1147,11],[1082,6,1148,4,"getAvailableAbilities"],[1082,27,1148,25],[1083,6,1149,4,"upgradeAbility"],[1083,20,1149,18],[1084,6,1150,4,"spawnEnemy"],[1084,16,1150,14],[1085,6,1151,4,"spawnBoss"],[1085,15,1151,13],[1086,6,1152,4,"clearAllEnemies"],[1086,21,1152,19],[1087,6,1153,4,"clearSpecificEnemy"],[1087,24,1153,22],[1088,6,1154,4,"triggerLevelUpExplosion"],[1088,29,1154,27],[1089,6,1155,4,"findClosestEnemy"],[1089,22,1155,20],[1090,6,1156,4,"updateNinjaPosition"],[1090,25,1156,23],[1091,6,1157,4,"setManualControlActive"],[1091,28,1157,26],[1092,6,1158,4,"lastExplosionTime"],[1092,23,1158,21],[1093,6,1159,4,"useAbilityManually"],[1093,24,1159,22],[1094,6,1159,24],[1095,6,1160,4,"saveAbilityData"],[1095,21,1160,19],[1096,6,1160,21],[1097,6,1161,4,"shadowClone"],[1097,17,1161,15],[1097,19,1161,17,"combatState"],[1097,30,1161,28],[1097,31,1161,29,"shadowClone"],[1097,42,1161,40],[1097,43,1161,42],[1098,4,1162,2],[1098,5,1162,3],[1098,6,1162,4],[1098,8,1162,6],[1099,4,1163,4],[1100,4,1164,4],[1101,4,1165,4,"combatState"],[1101,15,1165,15],[1101,17,1166,4,"projectiles"],[1101,28,1166,15],[1101,30,1167,4,"lastExplosionTime"],[1101,47,1167,21],[1102,4,1168,4],[1103,4,1169,4,"combatState"],[1103,15,1169,15],[1103,16,1169,16,"abilityManager"],[1103,30,1169,30],[1103,32,1170,4,"combatState"],[1103,43,1170,15],[1103,44,1170,16,"enemies"],[1103,51,1170,23],[1103,53,1171,4,"combatState"],[1103,64,1171,15],[1103,65,1171,16,"shadowClone"],[1103,76,1171,27],[1104,4,1171,29],[1105,4,1172,4,"useAbilityManually"],[1105,22,1172,22],[1106,4,1172,24],[1107,4,1173,4,"saveAbilityData"],[1107,19,1173,19],[1107,20,1173,21],[1108,4,1173,21],[1108,5,1174,3],[1108,6,1174,4],[1109,4,1176,2],[1109,24,1177,4],[1109,28,1177,4,"_reactJsxDevRuntime"],[1109,47,1177,4],[1109,48,1177,4,"jsxDEV"],[1109,54,1177,4],[1109,56,1177,5,"CombatContext"],[1109,69,1177,18],[1109,70,1177,19,"Provider"],[1109,78,1177,27],[1110,6,1177,28,"value"],[1110,11,1177,33],[1110,13,1177,35,"contextValue"],[1110,25,1177,48],[1111,6,1177,48,"children"],[1111,14,1177,48],[1111,16,1178,7,"children"],[1112,4,1178,15],[1113,6,1178,15,"fileName"],[1113,14,1178,15],[1113,16,1178,15,"_jsxFileName"],[1113,28,1178,15],[1114,6,1178,15,"lineNumber"],[1114,16,1178,15],[1115,6,1178,15,"columnNumber"],[1115,18,1178,15],[1116,4,1178,15],[1116,11,1179,28],[1116,12,1179,29],[1117,2,1181,0],[1117,3,1181,1],[1118,2,1181,2,"_s4"],[1118,5,1181,2],[1118,6,103,13,"CombatProvider"],[1118,20,103,27],[1119,4,103,27],[1119,12,104,15,"useGame"],[1119,24,104,22],[1119,25,104,22,"useGame"],[1119,32,104,22],[1119,34,105,77,"useZone"],[1119,46,105,84],[1119,47,105,84,"useZone"],[1119,54,105,84],[1120,2,105,84],[1121,2,105,84,"_c"],[1121,4,105,84],[1121,7,103,13,"CombatProvider"],[1121,21,103,27],[1122,2,103,27],[1122,6,103,27,"_c"],[1122,8,103,27],[1123,2,103,27,"$RefreshReg$"],[1123,14,103,27],[1123,15,103,27,"_c"],[1123,17,103,27],[1124,0,103,27],[1124,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","processProjectileImpacts","currentProjectiles.map$argument_0","newState.enemies.map$argument_0","enemiesKilled.forEach$argument_0","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC4F;CDM;8BEI;YCyB;qBCM,qBD;GDE;YCG;qBCI;ODmB;GDE;sCGQ;eCmB;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQoD;6BN+D;mBMG;ORiC;kDSqD,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;6BG4C;SHO;sBIG;OJU;GxBoB;2B6BG;mBP0C,6BO;ezBG;KyBE;G7BG;yB8BG;G9BsC;8B+BG;G/B4B;wCgCG;mB9BE,uC8B;GhCQ;uCiCG;mB/BC,wC+B;GjCE;uBkCG;GlCE;kBmCE;GnCE;gCoCE;GpCE;yBqCE;GrCE;0BsCG;mBpCE;MoCG;GtCC;kCuCG;mBrCM;mBEU;2BCC;YDG;SFC;8CsCK;QtCI;KqCM;GvCC;qByCG;mBvC2B;MuCG;GzCG;oB0CG;mBxCE;MwCG;G1CC;6B2CG;mBzCC;mC0CE,6B1C;MyCC;G3CC;yC6CG;qB3C4B;O2CI;G7CQ;YCC;W6CO;K7CE;GDC;YCG;qC8CC;qBzBC;sC0BC;2B9Ca;wD+CY;iB/CoC;6BEK;0C8CC,+B9C;mBFC;8DMK,sCN;+BE2B,4BF;a8CM;S1BS;OyBC;K9CC;W6CI,mC7C;GDC;sCmDG;GnDM;wDoDE;IpDsB;CFmB"},"hasCjsExports":false},"type":"js/module"}]}