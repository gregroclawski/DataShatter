{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, currentNinjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"nwOvpVrt9p9CSB/QS1Y6i0ZA5TI=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":623,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,629,2],[27,6,629,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,629,2],[27,42,629,2,"require"],[27,49,629,2],[27,50,629,2,"_dependencyMap"],[27,64,629,2],[28,2,629,2],[28,6,629,2,"_slicedToArray"],[28,20,629,2],[28,23,629,2,"_interopDefault"],[28,38,629,2],[28,39,629,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,629,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,65,0],[36,6,65,6,"CombatContext"],[36,19,65,19],[36,35,65,22],[36,39,65,22,"createContext"],[36,45,65,35],[36,46,65,35,"createContext"],[36,59,65,35],[36,61,65,67,"undefined"],[36,70,65,76],[36,71,65,77],[37,2,67,7],[37,6,67,13,"useCombat"],[37,15,67,22],[37,18,67,25,"useCombat"],[37,19,67,25],[37,24,67,50],[38,4,67,50,"_s"],[38,6,67,50],[39,4,68,2],[39,8,68,8,"context"],[39,15,68,15],[39,18,68,18],[39,22,68,18,"useContext"],[39,28,68,28],[39,29,68,28,"useContext"],[39,39,68,28],[39,41,68,29,"CombatContext"],[39,54,68,42],[39,55,68,43],[40,4,69,2],[40,8,69,6],[40,9,69,7,"context"],[40,16,69,14],[40,18,69,16],[41,6,70,4],[41,12,70,10],[41,16,70,14,"Error"],[41,21,70,19],[41,22,70,20],[41,70,70,68],[41,71,70,69],[42,4,71,2],[43,4,72,2],[43,11,72,9,"context"],[43,18,72,16],[44,2,73,0],[44,3,73,1],[45,2,73,2,"_s"],[45,4,73,2],[45,5,67,13,"useCombat"],[45,14,67,22],[46,2,75,0],[46,6,75,4,"enemyCounter"],[46,18,75,16],[46,21,75,19],[46,22,75,20],[46,23,75,21],[46,24,75,22],[48,2,77,7],[48,6,77,13,"CombatProvider"],[48,20,77,27],[48,23,77,30,"_ref"],[48,27,77,30],[48,31,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,77,73],[50,8,77,33,"children"],[50,16,77,41],[50,19,77,41,"_ref"],[50,23,77,41],[50,24,77,33,"children"],[50,32,77,41],[51,4,78,2],[51,8,78,2,"_useGame"],[51,16,78,2],[51,19,78,26],[51,23,78,26,"useGame"],[51,35,78,33],[51,36,78,33,"useGame"],[51,43,78,33],[51,45,78,34],[51,46,78,35],[52,6,78,10,"updateNinja"],[52,17,78,21],[52,20,78,21,"_useGame"],[52,28,78,21],[52,29,78,10,"updateNinja"],[52,40,78,21],[53,4,79,2],[53,8,79,2,"_useZone"],[53,16,79,2],[53,19,79,30],[53,23,79,30,"useZone"],[53,35,79,37],[53,36,79,37,"useZone"],[53,43,79,37],[53,45,79,38],[53,46,79,39],[54,6,79,10,"recordEnemyKill"],[54,21,79,25],[54,24,79,25,"_useZone"],[54,32,79,25],[54,33,79,10,"recordEnemyKill"],[54,48,79,25],[55,4,81,2],[55,8,81,2,"_useState"],[55,17,81,2],[55,20,81,40],[55,24,81,40,"useState"],[55,30,81,48],[55,31,81,48,"useState"],[55,39,81,48],[55,41,81,62],[56,8,82,4,"isInCombat"],[56,18,82,14],[56,20,82,16],[56,25,82,21],[57,8,83,4,"currentTick"],[57,19,83,15],[57,21,83,17],[57,22,83,18],[58,8,84,4,"enemies"],[58,15,84,11],[58,17,84,13],[58,19,84,15],[59,8,85,4,"abilityManager"],[59,22,85,18],[59,24,85,20],[59,28,85,24,"AbilityManager"],[59,46,85,38],[59,47,85,38,"AbilityManager"],[59,61,85,38],[59,62,85,39],[59,63,85,40],[60,8,86,4,"statusEffects"],[60,21,86,17],[60,23,86,19],[60,27,86,23,"StatusEffectManager"],[60,46,86,42],[60,47,86,42,"StatusEffectManager"],[60,66,86,42],[60,67,86,43],[60,68,86,44],[61,8,87,4,"playerStats"],[61,19,87,15],[61,21,87,17],[62,10,88,6,"attack"],[62,16,88,12],[62,18,88,14],[62,20,88,16],[63,10,88,18],[64,10,89,6,"defense"],[64,17,89,13],[64,19,89,15],[64,20,89,16],[65,10,90,6,"health"],[65,16,90,12],[65,18,90,14],[65,21,90,17],[66,10,91,6,"maxHealth"],[66,19,91,15],[66,21,91,17],[66,24,91,20],[67,10,92,6,"critChance"],[67,20,92,16],[67,22,92,18],[67,23,92,19],[68,10,93,6,"critDamage"],[68,20,93,16],[68,22,93,18],[68,25,93,21],[69,10,94,6,"cooldownReduction"],[69,27,94,23],[69,29,94,25],[70,8,95,4],[71,6,96,2],[71,7,96,3],[71,8,96,4],[72,6,96,4,"_useState2"],[72,16,96,4],[72,23,96,4,"_slicedToArray"],[72,37,96,4],[72,38,96,4,"default"],[72,45,96,4],[72,47,96,4,"_useState"],[72,56,96,4],[73,6,81,9,"combatState"],[73,17,81,20],[73,20,81,20,"_useState2"],[73,30,81,20],[74,6,81,22,"setCombatState"],[74,20,81,36],[74,23,81,36,"_useState2"],[74,33,81,36],[75,4,98,2],[75,8,98,2,"_useState3"],[75,18,98,2],[75,21,98,40],[75,25,98,40,"useState"],[75,31,98,48],[75,32,98,48,"useState"],[75,40,98,48],[75,42,98,69],[75,44,98,71],[75,45,98,72],[76,6,98,72,"_useState4"],[76,16,98,72],[76,23,98,72,"_slicedToArray"],[76,37,98,72],[76,38,98,72,"default"],[76,45,98,72],[76,47,98,72,"_useState3"],[76,57,98,72],[77,6,98,9,"projectiles"],[77,17,98,20],[77,20,98,20,"_useState4"],[77,30,98,20],[78,6,98,22,"setProjectiles"],[78,20,98,36],[78,23,98,36,"_useState4"],[78,33,98,36],[79,4,99,2],[79,8,99,2,"_useState5"],[79,18,99,2],[79,21,99,52],[79,25,99,52,"useState"],[79,31,99,60],[79,32,99,60,"useState"],[79,40,99,60],[79,42,99,69],[79,43,99,70],[79,44,99,71],[80,6,99,71,"_useState6"],[80,16,99,71],[80,23,99,71,"_slicedToArray"],[80,37,99,71],[80,38,99,71,"default"],[80,45,99,71],[80,47,99,71,"_useState5"],[80,57,99,71],[81,6,99,9,"lastExplosionTime"],[81,23,99,26],[81,26,99,26,"_useState6"],[81,36,99,26],[82,6,99,28,"setLastExplosionTime"],[82,26,99,48],[82,29,99,48,"_useState6"],[82,39,99,48],[83,4,100,2],[84,4,101,2],[86,4,103,2],[87,4,104,2],[87,8,104,8,"handleEnemyKill"],[87,23,104,23],[87,26,104,26],[87,30,104,26,"useCallback"],[87,36,104,37],[87,37,104,37,"useCallback"],[87,48,104,37],[87,50,104,39,"enemy"],[87,55,104,57],[87,59,104,62],[88,6,105,4,"console"],[88,13,105,11],[88,14,105,12,"log"],[88,17,105,15],[88,18,105,16],[88,46,105,44,"enemy"],[88,51,105,49],[88,52,105,50,"maxHealth"],[88,61,105,59],[88,63,105,61],[88,64,105,62],[90,6,107,4],[91,6,108,4],[91,10,108,10,"xpReward"],[91,18,108,18],[91,21,108,21],[91,23,108,23],[91,24,108,24],[91,25,108,25],[92,6,109,4],[92,10,109,10,"goldReward"],[92,20,109,20],[92,23,109,23],[92,25,109,25],[93,6,111,4,"console"],[93,13,111,11],[93,14,111,12,"log"],[93,17,111,15],[93,18,111,16],[93,33,111,31,"xpReward"],[93,41,111,39],[93,52,111,50,"goldReward"],[93,62,111,60],[93,78,111,76],[93,79,111,77],[95,6,113,4],[96,6,114,4],[97,6,115,4,"setTimeout"],[97,16,115,14],[97,17,115,15],[97,23,115,21],[98,8,116,6],[99,8,117,6,"updateNinja"],[99,19,117,17],[99,20,117,19,"prev"],[99,24,117,23],[99,28,117,28],[100,10,118,8,"console"],[100,17,118,15],[100,18,118,16,"log"],[100,21,118,19],[100,22,118,20],[100,39,118,37,"prev"],[100,43,118,41],[100,44,118,42,"experience"],[100,54,118,52],[100,66,118,64,"prev"],[100,70,118,68],[100,71,118,69,"experience"],[100,81,118,79],[100,84,118,82,"xpReward"],[100,92,118,90],[100,94,118,92],[100,95,118,93],[101,10,119,8],[101,17,119,15],[102,12,120,10,"experience"],[102,22,120,20],[102,24,120,22,"prev"],[102,28,120,26],[102,29,120,27,"experience"],[102,39,120,37],[102,42,120,40,"xpReward"],[102,50,120,48],[103,12,121,10,"gold"],[103,16,121,14],[103,18,121,16,"prev"],[103,22,121,20],[103,23,121,21,"gold"],[103,27,121,25],[103,30,121,28,"goldReward"],[104,10,122,8],[104,11,122,9],[105,8,123,6],[105,9,123,7],[105,10,123,8],[107,8,125,6],[108,8,126,6],[108,12,126,12,"zoneEnemy"],[108,21,126,21],[108,24,126,24],[109,10,127,8,"id"],[109,12,127,10],[109,14,127,12,"enemy"],[109,19,127,17],[109,20,127,18,"id"],[109,22,127,20],[110,10,128,8,"typeId"],[110,16,128,14],[110,18,128,16],[110,28,128,26],[111,10,128,28],[112,10,129,8,"name"],[112,14,129,12],[112,16,129,14,"enemy"],[112,21,129,19],[112,22,129,20,"name"],[112,26,129,24],[113,10,130,8,"icon"],[113,14,130,12],[113,16,130,14],[113,20,130,18],[114,10,130,20],[115,10,131,8,"hp"],[115,12,131,10],[115,14,131,12],[115,15,131,13],[116,10,131,15],[117,10,132,8,"maxHP"],[117,15,132,13],[117,17,132,15,"enemy"],[117,22,132,20],[117,23,132,21,"maxHealth"],[117,32,132,30],[118,10,133,8,"attack"],[118,16,133,14],[118,18,133,16,"enemy"],[118,23,133,21],[118,24,133,22,"stats"],[118,29,133,27],[118,30,133,28,"attack"],[118,36,133,34],[119,10,134,8,"xp"],[119,12,134,10],[119,14,134,12],[119,16,134,14],[120,10,134,16],[121,10,135,8,"position"],[121,18,135,16],[121,20,135,18,"enemy"],[121,25,135,23],[121,26,135,24,"position"],[122,8,136,6],[122,9,136,7],[123,8,137,6,"recordEnemyKill"],[123,23,137,21],[123,24,137,22,"zoneEnemy"],[123,33,137,31],[123,34,137,32],[124,6,138,4],[124,7,138,5],[124,9,138,7],[124,10,138,8],[124,11,138,9],[124,12,138,10],[124,13,138,11],[125,4,139,2],[125,5,139,3],[125,7,139,5],[125,8,139,6,"updateNinja"],[125,19,139,17],[125,21,139,19,"recordEnemyKill"],[125,36,139,34],[125,37,139,35],[125,38,139,36],[127,4,141,2],[128,4,142,2],[128,8,142,8,"handleCombatTick"],[128,24,142,24],[128,27,142,27,"React"],[128,32,142,32],[128,33,142,32,"default"],[128,40,142,32],[128,41,142,33,"useCallback"],[128,52,142,44],[128,53,142,45],[128,59,142,51],[129,6,142,51],[129,10,142,51,"_s2"],[129,13,142,51],[129,16,142,51,"$RefreshSig$"],[129,28,142,51],[130,6,143,4,"console"],[130,13,143,11],[130,14,143,12,"log"],[130,17,143,15],[130,18,143,16],[130,45,143,43],[130,46,143,44],[131,6,145,4],[131,10,145,8,"enemiesToKill"],[131,23,145,36],[131,26,145,39],[131,28,145,41],[131,29,145,42],[131,30,145,43],[133,6,147,4,"_s2"],[133,9,147,4],[133,10,147,4,"setCombatState"],[133,24,147,18],[133,25,147,18,"_s2"],[133,28,147,18],[133,29,147,19,"prev"],[133,33,147,23],[133,37,147,27],[134,8,147,27,"_s2"],[134,11,147,27],[135,8,148,6],[135,12,148,12,"newTick"],[135,19,148,19],[135,22,148,22,"combatEngine"],[135,41,148,34],[135,42,148,34,"combatEngine"],[135,54,148,34],[135,55,148,35,"getCurrentTick"],[135,69,148,49],[135,70,148,50],[135,71,148,51],[136,8,149,6],[136,12,149,12,"newState"],[136,20,149,20],[136,23,149,23],[137,10,149,25],[137,13,149,28,"prev"],[137,17,149,32],[138,10,149,34,"currentTick"],[138,21,149,45],[138,23,149,47,"newTick"],[139,8,149,55],[139,9,149,56],[140,8,151,6],[140,12,151,10],[140,13,151,11,"newState"],[140,21,151,19],[140,22,151,20,"isInCombat"],[140,32,151,30],[140,34,151,32],[140,41,151,39,"newState"],[140,49,151,47],[142,8,153,6],[143,8,154,6,"newState"],[143,16,154,14],[143,17,154,15,"abilityManager"],[143,31,154,29],[143,32,154,30,"updateCooldowns"],[143,47,154,45],[143,48,154,46,"newTick"],[143,55,154,53],[143,56,154,54],[145,8,156,6],[146,8,157,6],[146,12,157,12,"effectResults"],[146,25,157,25],[146,28,157,28,"newState"],[146,36,157,36],[146,37,157,37,"statusEffects"],[146,50,157,50],[146,51,157,51,"processTick"],[146,62,157,62],[146,63,157,63,"newTick"],[146,70,157,70],[146,71,157,71],[148,8,159,6],[149,8,160,6,"effectResults"],[149,21,160,19],[149,22,160,20,"forEach"],[149,29,160,27],[149,30,160,28],[149,31,160,29,"results"],[149,38,160,36],[149,40,160,38,"entityId"],[149,48,160,46],[149,53,160,51],[150,10,161,8],[150,14,161,14,"enemyIndex"],[150,24,161,24],[150,27,161,27,"newState"],[150,35,161,35],[150,36,161,36,"enemies"],[150,43,161,43],[150,44,161,44,"findIndex"],[150,53,161,53],[150,54,161,54,"e"],[150,55,161,55],[150,59,161,59,"e"],[150,60,161,60],[150,61,161,61,"id"],[150,63,161,63],[150,68,161,68,"entityId"],[150,76,161,76],[150,77,161,77],[151,10,162,8],[151,14,162,12,"enemyIndex"],[151,24,162,22],[151,28,162,26],[151,29,162,27],[151,31,162,29],[152,12,163,10,"results"],[152,19,163,17],[152,20,163,18,"forEach"],[152,27,163,25],[152,28,163,26,"result"],[152,34,163,32],[152,38,163,36],[153,14,164,12,"newState"],[153,22,164,20],[153,23,164,21,"enemies"],[153,30,164,28],[153,31,164,29,"enemyIndex"],[153,41,164,39],[153,42,164,40],[153,43,164,41,"health"],[153,49,164,47],[153,53,164,51,"result"],[153,59,164,57],[153,60,164,58,"damage"],[153,66,164,64],[154,14,165,12,"newState"],[154,22,165,20],[154,23,165,21,"enemies"],[154,30,165,28],[154,31,165,29,"enemyIndex"],[154,41,165,39],[154,42,165,40],[154,43,165,41,"lastDamaged"],[154,54,165,52],[154,57,165,55,"newTick"],[154,64,165,62],[155,12,166,10],[155,13,166,11],[155,14,166,12],[156,10,167,8],[157,8,168,6],[157,9,168,7],[157,10,168,8],[159,8,170,6],[160,8,171,6,"newState"],[160,16,171,14],[160,17,171,15,"enemies"],[160,24,171,22],[160,25,171,23,"forEach"],[160,32,171,30],[160,33,171,31,"enemy"],[160,38,171,36],[160,42,171,40],[161,10,172,8],[161,14,172,12],[161,15,172,13,"enemy"],[161,20,172,18],[161,21,172,19,"isBoss"],[161,27,172,25],[161,29,172,27],[162,12,172,29],[163,12,173,10],[164,12,174,10],[164,16,174,16,"MOVEMENT_SPEED"],[164,30,174,30],[164,33,174,33],[164,37,174,37],[164,38,174,38],[164,39,174,39],[165,12,175,10],[165,16,175,16,"SCREEN_WIDTH"],[165,28,175,28],[165,31,175,31],[165,34,175,34],[166,12,176,10],[166,16,176,16,"GAME_AREA_HEIGHT"],[166,32,176,32],[166,35,176,35],[166,38,176,38],[166,39,176,39],[166,40,176,40],[167,12,177,10],[167,16,177,16,"ENEMY_SIZE"],[167,26,177,26],[167,29,177,29],[167,31,177,31],[169,12,179,10],[170,12,180,10],[170,16,180,16,"playerX"],[170,23,180,23],[170,26,180,26,"currentNinjaPosition"],[170,46,180,46],[170,47,180,47,"x"],[170,48,180,48],[171,12,181,10],[171,16,181,16,"playerY"],[171,23,181,23],[171,26,181,26,"currentNinjaPosition"],[171,46,181,46],[171,47,181,47,"y"],[171,48,181,48],[173,12,183,10],[174,12,184,10],[174,16,184,16,"deltaX"],[174,22,184,22],[174,25,184,25,"playerX"],[174,32,184,32],[174,35,184,35,"enemy"],[174,40,184,40],[174,41,184,41,"position"],[174,49,184,49],[174,50,184,50,"x"],[174,51,184,51],[175,12,185,10],[175,16,185,16,"deltaY"],[175,22,185,22],[175,25,185,25,"playerY"],[175,32,185,32],[175,35,185,35,"enemy"],[175,40,185,40],[175,41,185,41,"position"],[175,49,185,49],[175,50,185,50,"y"],[175,51,185,51],[176,12,186,10],[176,16,186,16,"distance"],[176,24,186,24],[176,27,186,27,"Math"],[176,31,186,31],[176,32,186,32,"sqrt"],[176,36,186,36],[176,37,186,37,"deltaX"],[176,43,186,43],[176,46,186,46,"deltaX"],[176,52,186,52],[176,55,186,55,"deltaY"],[176,61,186,61],[176,64,186,64,"deltaY"],[176,70,186,70],[176,71,186,71],[178,12,188,10],[179,12,189,10],[179,16,189,14,"distance"],[179,24,189,22],[179,27,189,25],[179,29,189,27],[179,31,189,29],[180,14,190,12],[181,14,191,12],[181,18,191,18,"normalizedX"],[181,29,191,29],[181,32,191,32,"deltaX"],[181,38,191,38],[181,41,191,41,"distance"],[181,49,191,49],[182,14,192,12],[182,18,192,18,"normalizedY"],[182,29,192,29],[182,32,192,32,"deltaY"],[182,38,192,38],[182,41,192,41,"distance"],[182,49,192,49],[184,14,194,12],[185,14,195,12],[185,18,195,18,"randomFactor"],[185,30,195,30],[185,33,195,33],[185,36,195,36],[185,37,195,37],[185,38,195,38],[186,14,196,12],[186,18,196,18,"finalX"],[186,24,196,24],[186,27,196,27,"normalizedX"],[186,38,196,38],[186,41,196,41],[186,42,196,42,"Math"],[186,46,196,46],[186,47,196,47,"random"],[186,53,196,53],[186,54,196,54],[186,55,196,55],[186,58,196,58],[186,61,196,61],[186,65,196,65,"randomFactor"],[186,77,196,77],[187,14,197,12],[187,18,197,18,"finalY"],[187,24,197,24],[187,27,197,27,"normalizedY"],[187,38,197,38],[187,41,197,41],[187,42,197,42,"Math"],[187,46,197,46],[187,47,197,47,"random"],[187,53,197,53],[187,54,197,54],[187,55,197,55],[187,58,197,58],[187,61,197,61],[187,65,197,65,"randomFactor"],[187,77,197,77],[189,14,199,12],[190,14,200,12],[190,18,200,16,"newX"],[190,22,200,20],[190,25,200,23,"enemy"],[190,30,200,28],[190,31,200,29,"position"],[190,39,200,37],[190,40,200,38,"x"],[190,41,200,39],[190,44,200,43,"finalX"],[190,50,200,49],[190,53,200,52,"MOVEMENT_SPEED"],[190,67,200,67],[191,14,201,12],[191,18,201,16,"newY"],[191,22,201,20],[191,25,201,23,"enemy"],[191,30,201,28],[191,31,201,29,"position"],[191,39,201,37],[191,40,201,38,"y"],[191,41,201,39],[191,44,201,43,"finalY"],[191,50,201,49],[191,53,201,52,"MOVEMENT_SPEED"],[191,67,201,67],[193,14,203,12],[194,14,204,12,"newX"],[194,18,204,16],[194,21,204,19,"Math"],[194,25,204,23],[194,26,204,24,"max"],[194,29,204,27],[194,30,204,28],[194,31,204,29],[194,33,204,31,"Math"],[194,37,204,35],[194,38,204,36,"min"],[194,41,204,39],[194,42,204,40,"SCREEN_WIDTH"],[194,54,204,52],[194,57,204,55,"ENEMY_SIZE"],[194,67,204,65],[194,69,204,67,"newX"],[194,73,204,71],[194,74,204,72],[194,75,204,73],[195,14,205,12,"newY"],[195,18,205,16],[195,21,205,19,"Math"],[195,25,205,23],[195,26,205,24,"max"],[195,29,205,27],[195,30,205,28],[195,31,205,29],[195,33,205,31,"Math"],[195,37,205,35],[195,38,205,36,"min"],[195,41,205,39],[195,42,205,40,"GAME_AREA_HEIGHT"],[195,58,205,56],[195,61,205,59,"ENEMY_SIZE"],[195,71,205,69],[195,73,205,71,"newY"],[195,77,205,75],[195,78,205,76],[195,79,205,77],[197,14,207,12],[198,14,208,12,"enemy"],[198,19,208,17],[198,20,208,18,"position"],[198,28,208,26],[198,29,208,27,"x"],[198,30,208,28],[198,33,208,31,"newX"],[198,37,208,35],[199,14,209,12,"enemy"],[199,19,209,17],[199,20,209,18,"position"],[199,28,209,26],[199,29,209,27,"y"],[199,30,209,28],[199,33,209,31,"newY"],[199,37,209,35],[200,12,210,10],[201,12,211,10],[202,10,212,8],[203,8,213,6],[203,9,213,7],[203,10,213,8],[205,8,215,6],[206,8,216,6],[206,12,216,10],[206,13,216,11,"isManualControlActive"],[206,34,216,32],[206,36,216,34],[207,10,217,8],[207,15,217,13],[207,19,217,17,"i"],[207,20,217,18],[207,23,217,21],[207,24,217,22],[207,26,217,24,"i"],[207,27,217,25],[207,30,217,28],[207,31,217,29],[207,33,217,31,"i"],[207,34,217,32],[207,36,217,34],[207,38,217,36],[208,12,218,10],[208,16,218,14,"newState"],[208,24,218,22],[208,25,218,23,"abilityManager"],[208,39,218,37],[208,40,218,38,"isAbilityReady"],[208,54,218,52],[208,55,218,53,"i"],[208,56,218,54],[208,57,218,55],[208,61,218,59,"newState"],[208,69,218,67],[208,70,218,68,"enemies"],[208,77,218,75],[208,78,218,76,"length"],[208,84,218,82],[208,87,218,85],[208,88,218,86],[208,90,218,88],[209,14,219,12],[209,18,219,16,"newState"],[209,26,219,24],[209,27,219,25,"abilityManager"],[209,41,219,39],[209,42,219,40,"useAbility"],[209,52,219,50],[209,53,219,51,"i"],[209,54,219,52],[209,56,219,54,"newTick"],[209,63,219,61],[209,64,219,62],[209,66,219,64],[210,16,220,14,"castAbility"],[210,27,220,25],[210,28,220,26,"newState"],[210,36,220,34],[210,38,220,36,"i"],[210,39,220,37],[210,40,220,38],[211,14,221,12],[212,12,222,10],[213,10,223,8],[214,8,224,6],[216,8,226,6],[217,8,227,6],[217,12,227,12,"deadEnemies"],[217,23,227,23],[217,26,227,26,"newState"],[217,34,227,34],[217,35,227,35,"enemies"],[217,42,227,42],[217,43,227,43,"filter"],[217,49,227,49],[217,50,227,50,"enemy"],[217,55,227,55],[217,59,227,59,"enemy"],[217,64,227,64],[217,65,227,65,"health"],[217,71,227,71],[217,75,227,75],[217,76,227,76],[217,77,227,77],[218,8,228,6,"enemiesToKill"],[218,21,228,19],[218,24,228,22],[218,25,228,23],[218,28,228,26,"deadEnemies"],[218,39,228,37],[218,40,228,38],[218,41,228,39],[218,42,228,40],[220,8,230,6],[221,8,231,6,"newState"],[221,16,231,14],[221,17,231,15,"enemies"],[221,24,231,22],[221,27,231,25,"newState"],[221,35,231,33],[221,36,231,34,"enemies"],[221,43,231,41],[221,44,231,42,"filter"],[221,50,231,48],[221,51,231,49,"enemy"],[221,56,231,54],[221,60,231,58,"enemy"],[221,65,231,63],[221,66,231,64,"health"],[221,72,231,70],[221,75,231,73],[221,76,231,74],[221,77,231,75],[223,8,233,6],[224,8,234,6],[225,8,235,6],[225,12,235,12,"MAX_ENEMIES"],[225,23,235,23],[225,26,235,26],[225,28,235,28],[226,8,236,6],[226,12,236,12,"MIN_SPAWN_DELAY"],[226,27,236,27],[226,30,236,30],[226,33,236,33],[226,34,236,34],[226,35,236,35],[227,8,237,6],[227,12,237,12,"now"],[227,15,237,15],[227,18,237,18,"Date"],[227,22,237,22],[227,23,237,23,"now"],[227,26,237,26],[227,27,237,27],[227,28,237,28],[228,8,238,6],[228,12,238,12,"hasBoss"],[228,19,238,19],[228,22,238,22,"newState"],[228,30,238,30],[228,31,238,31,"enemies"],[228,38,238,38],[228,39,238,39,"some"],[228,43,238,43],[228,44,238,44,"enemy"],[228,49,238,49],[228,53,238,53,"enemy"],[228,58,238,58],[228,59,238,59,"isBoss"],[228,65,238,65],[228,66,238,66],[230,8,240,6],[231,8,241,6],[231,12,241,10],[231,13,241,11,"newState"],[231,21,241,19],[231,22,241,20,"lastSpawnTime"],[231,35,241,33],[231,37,241,35],[232,10,242,8,"newState"],[232,18,242,16],[232,19,242,17,"lastSpawnTime"],[232,32,242,30],[232,35,242,33,"now"],[232,38,242,36],[233,8,243,6],[234,8,245,6,"console"],[234,15,245,13],[234,16,245,14,"log"],[234,19,245,17],[234,20,245,18],[234,53,245,51,"newState"],[234,61,245,59],[234,62,245,60,"enemies"],[234,69,245,67],[234,70,245,68,"length"],[234,76,245,74],[234,85,245,83,"MAX_ENEMIES"],[234,96,245,94],[234,109,245,107,"hasBoss"],[234,116,245,114],[234,118,245,116],[234,119,245,117],[236,8,247,6],[237,8,248,6],[237,12,248,10],[237,13,248,11,"hasBoss"],[237,20,248,18],[237,24,248,22,"newState"],[237,32,248,30],[237,33,248,31,"enemies"],[237,40,248,38],[237,41,248,39,"length"],[237,47,248,45],[237,50,248,48,"MAX_ENEMIES"],[237,61,248,59],[237,65,248,64,"now"],[237,68,248,67],[237,71,248,70,"newState"],[237,79,248,78],[237,80,248,79,"lastSpawnTime"],[237,93,248,92],[237,97,248,97,"MIN_SPAWN_DELAY"],[237,112,248,112],[237,114,248,114],[238,10,249,8,"console"],[238,17,249,15],[238,18,249,16,"log"],[238,21,249,19],[238,22,249,20],[238,43,249,41,"newState"],[238,51,249,49],[238,52,249,50,"enemies"],[238,59,249,57],[238,60,249,58,"length"],[238,66,249,64],[238,69,249,67],[238,70,249,68],[238,74,249,72,"MAX_ENEMIES"],[238,85,249,83],[238,87,249,85],[238,88,249,86],[239,10,250,8,"spawnTestEnemy"],[239,24,250,22],[239,25,250,23,"newState"],[239,33,250,31],[239,34,250,32],[240,10,251,8,"newState"],[240,18,251,16],[240,19,251,17,"lastSpawnTime"],[240,32,251,30],[240,35,251,33,"now"],[240,38,251,36],[241,8,252,6],[242,8,254,6],[242,15,254,13,"newState"],[242,23,254,21],[243,6,255,4],[243,7,255,5],[243,47,255,6],[245,6,257,4],[246,6,258,4,"enemiesToKill"],[246,19,258,17],[246,20,258,18,"forEach"],[246,27,258,25],[246,28,258,26,"enemy"],[246,33,258,31],[246,37,258,35],[247,8,259,6,"handleEnemyKill"],[247,23,259,21],[247,24,259,22,"enemy"],[247,29,259,27],[247,30,259,28],[248,6,260,4],[248,7,260,5],[248,8,260,6],[249,4,261,2],[249,5,261,3],[249,7,261,5],[249,8,261,6,"handleEnemyKill"],[249,23,261,21],[249,24,261,22],[249,25,261,23],[249,26,261,24],[249,27,261,25],[251,4,263,2],[252,4,264,2],[252,8,264,8,"findClosestEnemyInternal"],[252,32,264,32],[252,35,264,36,"enemies"],[252,42,264,58],[252,46,264,83],[253,6,265,4],[253,10,265,8,"enemies"],[253,17,265,15],[253,18,265,16,"length"],[253,24,265,22],[253,29,265,27],[253,30,265,28],[253,32,265,30],[253,39,265,37],[253,43,265,41],[255,6,267,4],[256,6,268,4],[256,10,268,10,"SCREEN_WIDTH"],[256,22,268,22],[256,25,268,25],[256,28,268,28],[257,6,269,4],[257,10,269,10,"GAME_AREA_HEIGHT"],[257,26,269,26],[257,29,269,29],[257,32,269,32],[257,35,269,35],[257,38,269,38],[257,39,269,39],[257,40,269,40],[258,6,270,4],[258,10,270,10,"ninjaX"],[258,16,270,16],[258,19,270,19,"SCREEN_WIDTH"],[258,31,270,31],[258,34,270,34],[258,35,270,35],[259,6,271,4],[259,10,271,10,"ninjaY"],[259,16,271,16],[259,19,271,19,"GAME_AREA_HEIGHT"],[259,35,271,35],[259,38,271,38],[259,39,271,39],[260,6,273,4],[260,10,273,8,"closestEnemy"],[260,22,273,20],[260,25,273,23,"enemies"],[260,32,273,30],[260,33,273,31],[260,34,273,32],[260,35,273,33],[261,6,274,4],[261,10,274,8,"closestDistance"],[261,25,274,23],[261,28,274,26,"Infinity"],[261,36,274,34],[262,6,276,4,"enemies"],[262,13,276,11],[262,14,276,12,"forEach"],[262,21,276,19],[262,22,276,20,"enemy"],[262,27,276,25],[262,31,276,29],[263,8,277,6],[263,12,277,12,"distance"],[263,20,277,20],[263,23,277,23,"Math"],[263,27,277,27],[263,28,277,28,"sqrt"],[263,32,277,32],[263,33,278,8,"Math"],[263,37,278,12],[263,38,278,13,"pow"],[263,41,278,16],[263,42,278,17,"enemy"],[263,47,278,22],[263,48,278,23,"position"],[263,56,278,31],[263,57,278,32,"x"],[263,58,278,33],[263,61,278,36,"ninjaX"],[263,67,278,42],[263,69,278,44],[263,70,278,45],[263,71,278,46],[263,74,279,8,"Math"],[263,78,279,12],[263,79,279,13,"pow"],[263,82,279,16],[263,83,279,17,"enemy"],[263,88,279,22],[263,89,279,23,"position"],[263,97,279,31],[263,98,279,32,"y"],[263,99,279,33],[263,102,279,36,"ninjaY"],[263,108,279,42],[263,110,279,44],[263,111,279,45],[263,112,280,6],[263,113,280,7],[264,8,282,6],[264,12,282,10,"distance"],[264,20,282,18],[264,23,282,21,"closestDistance"],[264,38,282,36],[264,40,282,38],[265,10,283,8,"closestDistance"],[265,25,283,23],[265,28,283,26,"distance"],[265,36,283,34],[266,10,284,8,"closestEnemy"],[266,22,284,20],[266,25,284,23,"enemy"],[266,30,284,28],[267,8,285,6],[268,6,286,4],[268,7,286,5],[268,8,286,6],[269,6,288,4,"console"],[269,13,288,11],[269,14,288,12,"log"],[269,17,288,15],[269,18,288,16],[269,60,288,58,"closestDistance"],[269,75,288,73],[269,76,288,74,"toFixed"],[269,83,288,81],[269,84,288,82],[269,85,288,83],[269,86,288,84],[269,88,288,86],[269,89,288,87],[270,6,289,4],[270,13,289,11,"closestEnemy"],[270,25,289,23],[271,4,290,2],[271,5,290,3],[273,4,292,2],[274,4,293,2],[274,8,293,8,"findClosestEnemy"],[274,24,293,24],[274,27,293,27,"findClosestEnemy"],[274,28,293,27],[274,33,293,53],[275,6,294,4],[275,13,294,11,"findClosestEnemyInternal"],[275,37,294,35],[275,38,294,36,"combatState"],[275,49,294,47],[275,50,294,48,"enemies"],[275,57,294,55],[275,58,294,56],[276,4,295,2],[276,5,295,3],[278,4,297,2],[279,4,298,2],[279,8,298,2,"_useState7"],[279,18,298,2],[279,21,298,58],[279,25,298,58,"useState"],[279,31,298,66],[279,32,298,66,"useState"],[279,40,298,66],[279,42,298,91],[280,8,298,93,"x"],[280,9,298,94],[280,11,298,96],[280,12,298,97],[281,8,298,99,"y"],[281,9,298,100],[281,11,298,102],[282,6,298,104],[282,7,298,105],[282,8,298,106],[283,6,298,106,"_useState8"],[283,16,298,106],[283,23,298,106,"_slicedToArray"],[283,37,298,106],[283,38,298,106,"default"],[283,45,298,106],[283,47,298,106,"_useState7"],[283,57,298,106],[284,6,298,9,"currentNinjaPosition"],[284,26,298,29],[284,29,298,29,"_useState8"],[284,39,298,29],[285,6,298,31,"setCurrentNinjaPosition"],[285,29,298,54],[285,32,298,54,"_useState8"],[285,42,298,54],[286,4,299,2],[286,8,299,2,"_useState9"],[286,18,299,2],[286,21,299,60],[286,25,299,60,"useState"],[286,31,299,68],[286,32,299,68,"useState"],[286,40,299,68],[286,42,299,69],[286,47,299,74],[286,48,299,75],[287,6,299,75,"_useState0"],[287,16,299,75],[287,23,299,75,"_slicedToArray"],[287,37,299,75],[287,38,299,75,"default"],[287,45,299,75],[287,47,299,75,"_useState9"],[287,57,299,75],[288,6,299,9,"isManualControlActive"],[288,27,299,30],[288,30,299,30,"_useState0"],[288,40,299,30],[289,6,299,32,"setIsManualControlActive"],[289,30,299,56],[289,33,299,56,"_useState0"],[289,43,299,56],[291,4,301,2],[292,4,302,2],[292,8,302,8,"updateNinjaPosition"],[292,27,302,27],[292,30,302,30],[292,34,302,30,"useCallback"],[292,40,302,41],[292,41,302,41,"useCallback"],[292,52,302,41],[292,54,302,43,"newPosition"],[292,65,302,78],[292,69,302,83],[293,6,303,4,"setCurrentNinjaPosition"],[293,29,303,27],[293,30,303,28,"newPosition"],[293,41,303,39],[293,42,303,40],[294,4,304,2],[294,5,304,3],[294,7,304,5],[294,9,304,7],[294,10,304,8],[296,4,306,2],[297,4,307,2],[297,8,307,8,"setManualControlActive"],[297,30,307,30],[297,33,307,33],[297,37,307,33,"useCallback"],[297,43,307,44],[297,44,307,44,"useCallback"],[297,55,307,44],[297,57,307,46,"active"],[297,63,307,61],[297,67,307,66],[298,6,308,4,"setIsManualControlActive"],[298,30,308,28],[298,31,308,29,"active"],[298,37,308,35],[298,38,308,36],[299,6,309,4,"console"],[299,13,309,11],[299,14,309,12,"log"],[299,17,309,15],[299,18,309,16],[299,39,309,37,"active"],[299,45,309,43],[299,48,309,46],[299,59,309,57],[299,62,309,60],[299,75,309,73],[299,88,309,86,"active"],[299,94,309,92],[299,97,309,95],[299,105,309,103],[299,108,309,106],[299,117,309,115],[299,119,309,117],[299,120,309,118],[300,4,310,2],[300,5,310,3],[300,7,310,5],[300,9,310,7],[300,10,310,8],[302,4,312,2],[303,4,313,2],[303,8,313,8,"handleProjectileHit"],[303,27,313,27],[303,30,313,31,"projectile"],[303,40,313,59],[303,44,313,64],[304,6,314,4,"console"],[304,13,314,11],[304,14,314,12,"log"],[304,17,314,15],[304,18,314,16],[304,35,314,33,"projectile"],[304,45,314,43],[304,46,314,44,"id"],[304,48,314,46],[304,62,314,60,"projectile"],[304,72,314,70],[304,73,314,71,"targetEnemyId"],[304,86,314,84],[304,94,314,92,"projectile"],[304,104,314,102],[304,105,314,103,"damage"],[304,111,314,109],[304,120,314,118],[304,121,314,119],[305,6,316,4,"setCombatState"],[305,20,316,18],[305,21,316,19,"prev"],[305,25,316,23],[305,29,316,27],[306,8,317,6],[306,12,317,12,"newState"],[306,20,317,20],[306,23,317,23],[307,10,317,25],[307,13,317,28,"prev"],[308,8,317,33],[308,9,317,34],[310,8,319,6],[311,8,320,6],[311,12,320,12,"enemyIndex"],[311,22,320,22],[311,25,320,25,"newState"],[311,33,320,33],[311,34,320,34,"enemies"],[311,41,320,41],[311,42,320,42,"findIndex"],[311,51,320,51],[311,52,320,52,"e"],[311,53,320,53],[311,57,320,57,"e"],[311,58,320,58],[311,59,320,59,"id"],[311,61,320,61],[311,66,320,66,"projectile"],[311,76,320,76],[311,77,320,77,"targetEnemyId"],[311,90,320,90],[311,91,320,91],[312,8,321,6],[312,12,321,10,"enemyIndex"],[312,22,321,20],[312,26,321,24],[312,27,321,25],[312,29,321,27],[313,10,322,8,"newState"],[313,18,322,16],[313,19,322,17,"enemies"],[313,26,322,24],[313,29,322,27],[313,30,322,28],[313,33,322,31,"newState"],[313,41,322,39],[313,42,322,40,"enemies"],[313,49,322,47],[313,50,322,48],[314,10,323,8,"newState"],[314,18,323,16],[314,19,323,17,"enemies"],[314,26,323,24],[314,27,323,25,"enemyIndex"],[314,37,323,35],[314,38,323,36],[314,41,323,39],[315,12,324,10],[315,15,324,13,"newState"],[315,23,324,21],[315,24,324,22,"enemies"],[315,31,324,29],[315,32,324,30,"enemyIndex"],[315,42,324,40],[315,43,324,41],[316,12,325,10,"health"],[316,18,325,16],[316,20,325,18,"newState"],[316,28,325,26],[316,29,325,27,"enemies"],[316,36,325,34],[316,37,325,35,"enemyIndex"],[316,47,325,45],[316,48,325,46],[316,49,325,47,"health"],[316,55,325,53],[316,58,325,56,"projectile"],[316,68,325,66],[316,69,325,67,"damage"],[316,75,325,73],[317,12,326,10,"lastDamaged"],[317,23,326,21],[317,25,326,23,"combatEngine"],[317,44,326,35],[317,45,326,35,"combatEngine"],[317,57,326,35],[317,58,326,36,"getCurrentTick"],[317,72,326,50],[317,73,326,51],[318,10,327,8],[318,11,327,9],[319,10,329,8,"console"],[319,17,329,15],[319,18,329,16,"log"],[319,21,329,19],[319,22,329,20],[319,34,329,32,"projectile"],[319,44,329,42],[319,45,329,43,"targetEnemyId"],[319,58,329,56],[319,70,329,68,"newState"],[319,78,329,76],[319,79,329,77,"enemies"],[319,86,329,84],[319,87,329,85,"enemyIndex"],[319,97,329,95],[319,98,329,96],[319,99,329,97,"health"],[319,105,329,103],[319,109,329,107,"newState"],[319,117,329,115],[319,118,329,116,"enemies"],[319,125,329,123],[319,126,329,124,"enemyIndex"],[319,136,329,134],[319,137,329,135],[319,138,329,136,"maxHealth"],[319,147,329,145],[319,149,329,147],[319,150,329,148],[320,8,330,6],[321,8,332,6],[321,15,332,13,"newState"],[321,23,332,21],[322,6,333,4],[322,7,333,5],[322,8,333,6],[324,6,335,4],[325,6,336,4,"setProjectiles"],[325,20,336,18],[325,21,336,19,"prev"],[325,25,336,23],[325,29,336,27,"prev"],[325,33,336,31],[325,34,336,32,"filter"],[325,40,336,38],[325,41,336,39,"p"],[325,42,336,40],[325,46,336,44,"p"],[325,47,336,45],[325,48,336,46,"id"],[325,50,336,48],[325,55,336,53,"projectile"],[325,65,336,63],[325,66,336,64,"id"],[325,68,336,66],[325,69,336,67],[325,70,336,68],[326,4,337,2],[326,5,337,3],[328,4,339,2],[329,4,340,2],[329,8,340,8,"castAbility"],[329,19,340,19],[329,22,340,22,"castAbility"],[329,23,340,23,"state"],[329,28,340,41],[329,30,340,43,"slotIndex"],[329,39,340,60],[329,44,340,65],[330,6,341,4],[330,10,341,10,"deck"],[330,14,341,14],[330,17,341,17,"state"],[330,22,341,22],[330,23,341,23,"abilityManager"],[330,37,341,37],[330,38,341,38,"getDeck"],[330,45,341,45],[330,46,341,46],[330,47,341,47],[331,6,342,4],[331,10,342,10,"ability"],[331,17,342,17],[331,20,342,20,"deck"],[331,24,342,24],[331,25,342,25,"slots"],[331,30,342,30],[331,31,342,31,"slotIndex"],[331,40,342,40],[331,41,342,41],[332,6,343,4],[332,10,343,8],[332,11,343,9,"ability"],[332,18,343,16],[332,20,343,18],[334,6,345,4],[335,6,346,4],[335,10,346,10,"target"],[335,16,346,16],[335,19,346,19,"findClosestEnemyInternal"],[335,43,346,43],[335,44,346,44,"state"],[335,49,346,49],[335,50,346,50,"enemies"],[335,57,346,57],[335,58,346,58],[336,6,347,4],[336,10,347,8],[336,11,347,9,"target"],[336,17,347,15],[336,19,347,17],[338,6,349,4],[339,6,350,4],[339,10,350,8,"damage"],[339,16,350,14],[339,19,350,17,"ability"],[339,26,350,24],[339,27,350,25,"stats"],[339,32,350,30],[339,33,350,31,"baseDamage"],[339,43,350,41],[341,6,352,4],[342,6,353,4,"deck"],[342,10,353,8],[342,11,353,9,"activeSynergies"],[342,26,353,24],[342,27,353,25,"forEach"],[342,34,353,32],[342,35,353,33,"synergy"],[342,42,353,40],[342,46,353,44],[343,8,354,6],[343,12,354,10,"synergy"],[343,19,354,17],[343,20,354,18,"bonus"],[343,25,354,23],[343,26,354,24,"damageBonus"],[343,37,354,35],[343,41,355,10,"synergy"],[343,48,355,17],[343,49,355,18,"requiredTags"],[343,61,355,30],[343,62,355,31,"some"],[343,66,355,35],[343,67,355,36,"tag"],[343,70,355,39],[343,74,355,43,"ability"],[343,81,355,50],[343,82,355,51,"tags"],[343,86,355,55],[343,87,355,56,"includes"],[343,95,355,64],[343,96,355,65,"tag"],[343,99,355,68],[343,100,355,69],[343,101,355,70],[343,103,355,72],[344,10,356,8,"damage"],[344,16,356,14],[344,20,356,19],[344,21,356,20],[344,24,356,23,"synergy"],[344,31,356,30],[344,32,356,31,"bonus"],[344,37,356,36],[344,38,356,37,"damageBonus"],[344,49,356,48],[344,52,356,51],[344,55,356,55],[345,8,357,6],[346,6,358,4],[346,7,358,5],[346,8,358,6],[348,6,360,4],[349,6,361,4],[349,10,361,10,"damageResult"],[349,22,361,22],[349,25,361,25,"DamageCalculator"],[349,44,361,41],[349,45,361,41,"DamageCalculator"],[349,61,361,41],[349,62,361,42,"calculateDamage"],[349,77,361,57],[349,78,361,58,"damage"],[349,84,361,64],[349,86,361,66,"state"],[349,91,361,71],[349,92,361,72,"playerStats"],[349,103,361,83],[349,105,361,85,"target"],[349,111,361,91],[349,112,361,92,"stats"],[349,117,361,97],[349,118,361,98],[351,6,363,4],[352,6,364,4,"createProjectile"],[352,22,364,20],[352,23,364,21,"target"],[352,29,364,27],[352,31,364,29,"damageResult"],[352,43,364,41],[352,44,364,42,"damage"],[352,50,364,48],[352,52,364,50,"currentNinjaPosition"],[352,72,364,70],[352,73,364,71],[354,6,366,4],[355,6,367,4],[355,10,367,8,"ability"],[355,17,367,15],[355,18,367,16,"effects"],[355,25,367,23],[355,26,367,24,"includes"],[355,34,367,32],[355,35,367,33],[355,40,367,38],[355,41,367,39],[355,45,367,43,"ability"],[355,52,367,50],[355,53,367,51,"stats"],[355,58,367,56],[355,59,367,57,"duration"],[355,67,367,65],[355,69,367,67],[356,8,368,6,"state"],[356,13,368,11],[356,14,368,12,"statusEffects"],[356,27,368,25],[356,28,368,26,"addEffect"],[356,37,368,35],[356,38,368,36,"target"],[356,44,368,42],[356,45,368,43,"id"],[356,47,368,45],[356,49,368,47],[357,10,369,8,"id"],[357,12,369,10],[357,14,369,12],[357,17,369,15,"ability"],[357,24,369,22],[357,25,369,23,"id"],[357,27,369,25],[357,33,369,31],[358,10,370,8,"type"],[358,14,370,12],[358,16,370,14],[358,21,370,19],[359,10,371,8,"remainingTicks"],[359,24,371,22],[359,26,371,24,"Math"],[359,30,371,28],[359,31,371,29,"floor"],[359,36,371,34],[359,37,371,35,"ability"],[359,44,371,42],[359,45,371,43,"stats"],[359,50,371,48],[359,51,371,49,"duration"],[359,59,371,57],[359,62,371,60],[359,64,371,62],[359,65,371,63],[360,10,371,65],[361,10,372,8,"tickInterval"],[361,22,372,20],[361,24,372,22],[361,26,372,24],[362,10,372,26],[363,10,373,8,"lastTick"],[363,18,373,16],[363,20,373,18,"state"],[363,25,373,23],[363,26,373,24,"currentTick"],[363,37,373,35],[364,10,374,8,"value"],[364,15,374,13],[364,17,374,15,"Math"],[364,21,374,19],[364,22,374,20,"floor"],[364,27,374,25],[364,28,374,26,"damage"],[364,34,374,32],[364,37,374,35],[364,40,374,38],[364,41,374,39],[365,10,374,41],[366,10,375,8,"stackable"],[366,19,375,17],[366,21,375,19],[367,8,376,6],[367,9,376,7],[367,10,376,8],[368,6,377,4],[369,6,379,4,"console"],[369,13,379,11],[369,14,379,12,"log"],[369,17,379,15],[369,18,379,16],[369,24,379,22,"ability"],[369,31,379,29],[369,32,379,30,"name"],[369,36,379,34],[369,69,379,67,"damageResult"],[369,81,379,79],[369,82,379,80,"damage"],[369,88,379,86],[369,98,379,96,"damageResult"],[369,110,379,108],[369,111,379,109,"isCritical"],[369,121,379,119],[369,124,379,122],[369,134,379,132],[369,137,379,135],[369,139,379,137],[369,141,379,139],[369,142,379,140],[370,4,380,2],[370,5,380,3],[372,4,382,2],[373,4,383,2],[373,8,383,8,"createProjectile"],[373,24,383,24],[373,27,383,27,"createProjectile"],[373,28,383,28,"targetEnemy"],[373,39,383,52],[373,41,383,54,"damage"],[373,47,383,68],[373,49,383,70,"ninjaPos"],[373,57,383,103],[373,62,383,108],[374,6,384,4],[374,10,384,10,"SCREEN_WIDTH"],[374,22,384,22],[374,25,384,25],[374,28,384,28],[375,6,385,4],[375,10,385,10,"GAME_AREA_HEIGHT"],[375,26,385,26],[375,29,385,29],[375,32,385,32],[375,35,385,35],[375,38,385,38],[375,39,385,39],[375,40,385,40],[376,6,386,4],[376,10,386,10,"NINJA_SIZE"],[376,20,386,20],[376,23,386,23],[376,25,386,25],[378,6,388,4],[379,6,389,4],[379,10,389,10,"ninjaX"],[379,16,389,16],[379,19,389,19,"ninjaPos"],[379,27,389,27],[379,30,389,30,"ninjaPos"],[379,38,389,38],[379,39,389,39,"x"],[379,40,389,40],[379,43,389,43,"NINJA_SIZE"],[379,53,389,53],[379,56,389,56],[379,57,389,57],[379,60,389,60,"SCREEN_WIDTH"],[379,72,389,72],[379,75,389,75],[379,76,389,76],[380,6,390,4],[380,10,390,10,"ninjaY"],[380,16,390,16],[380,19,390,19,"ninjaPos"],[380,27,390,27],[380,30,390,30,"ninjaPos"],[380,38,390,38],[380,39,390,39,"y"],[380,40,390,40],[380,43,390,43,"NINJA_SIZE"],[380,53,390,53],[380,56,390,56],[380,57,390,57],[380,60,390,60,"GAME_AREA_HEIGHT"],[380,76,390,76],[380,79,390,79],[380,80,390,80],[381,6,391,4],[381,10,391,10,"ENEMY_SIZE"],[381,20,391,20],[381,23,391,23],[381,25,391,25],[382,6,393,4],[382,10,393,10,"projectile"],[382,20,393,38],[382,23,393,41],[383,8,394,6,"id"],[383,10,394,8],[383,12,394,10],[383,20,394,18,"Date"],[383,24,394,22],[383,25,394,23,"now"],[383,28,394,26],[383,29,394,27],[383,30,394,28],[383,34,394,32,"Math"],[383,38,394,36],[383,39,394,37,"random"],[383,45,394,43],[383,46,394,44],[383,47,394,45],[383,49,394,47],[384,8,395,6,"x"],[384,9,395,7],[384,11,395,9,"ninjaX"],[384,17,395,15],[385,8,396,6,"y"],[385,9,396,7],[385,11,396,9,"ninjaY"],[385,17,396,15],[386,8,397,6,"targetX"],[386,15,397,13],[386,17,397,15,"targetEnemy"],[386,28,397,26],[386,29,397,27,"position"],[386,37,397,35],[386,38,397,36,"x"],[386,39,397,37],[386,42,397,40,"ENEMY_SIZE"],[386,52,397,50],[386,55,397,53],[386,56,397,54],[387,8,398,6,"targetY"],[387,15,398,13],[387,17,398,15,"targetEnemy"],[387,28,398,26],[387,29,398,27,"position"],[387,37,398,35],[387,38,398,36,"y"],[387,39,398,37],[387,42,398,40,"ENEMY_SIZE"],[387,52,398,50],[387,55,398,53],[387,56,398,54],[388,8,399,6,"targetEnemyId"],[388,21,399,19],[388,23,399,21,"targetEnemy"],[388,34,399,32],[388,35,399,33,"id"],[388,37,399,35],[389,8,400,6,"damage"],[389,14,400,12],[389,16,400,14,"damage"],[389,22,400,20],[390,8,401,6,"startTime"],[390,17,401,15],[390,19,401,17,"Date"],[390,23,401,21],[390,24,401,22,"now"],[390,27,401,25],[390,28,401,26],[390,29,401,27],[391,8,402,6,"duration"],[391,16,402,14],[391,18,402,16],[391,21,402,19],[391,22,402,21],[392,6,403,4],[392,7,403,5],[393,6,405,4,"console"],[393,13,405,11],[393,14,405,12,"log"],[393,17,405,15],[393,18,405,16],[393,53,405,51,"targetEnemy"],[393,64,405,62],[393,65,405,63,"id"],[393,67,405,65],[393,75,405,73,"damage"],[393,81,405,79],[393,90,405,88],[393,91,405,89],[394,6,406,4,"console"],[394,13,406,11],[394,14,406,12,"log"],[394,17,406,15],[394,18,406,16],[394,53,406,51,"ninjaX"],[394,59,406,57],[394,64,406,62,"ninjaY"],[394,70,406,68],[394,87,406,85,"projectile"],[394,97,406,95],[394,98,406,96,"targetX"],[394,105,406,103],[394,110,406,108,"projectile"],[394,120,406,118],[394,121,406,119,"targetY"],[394,128,406,126],[394,131,406,129],[394,132,406,130],[395,6,408,4,"setProjectiles"],[395,20,408,18],[395,21,408,19,"prev"],[395,25,408,23],[395,29,408,27],[395,30,408,28],[395,33,408,31,"prev"],[395,37,408,35],[395,39,408,37,"projectile"],[395,49,408,47],[395,50,408,48],[395,51,408,49],[397,6,410,4],[398,6,411,4,"setTimeout"],[398,16,411,14],[398,17,411,15],[398,23,411,21],[399,8,412,6,"handleProjectileHit"],[399,27,412,25],[399,28,412,26,"projectile"],[399,38,412,36],[399,39,412,37],[400,6,413,4],[400,7,413,5],[400,9,413,7],[400,12,413,10],[400,13,413,11],[401,4,414,2],[401,5,414,3],[403,4,416,2],[404,4,417,2],[404,8,417,8,"spawnTestEnemy"],[404,22,417,22],[404,25,417,26,"state"],[404,30,417,44],[404,34,417,49],[405,6,418,4],[406,6,419,4],[406,10,419,10,"SCREEN_WIDTH"],[406,22,419,22],[406,25,419,25],[406,28,419,28],[406,29,419,29],[406,30,419,30],[407,6,420,4],[407,10,420,10,"GAME_AREA_HEIGHT"],[407,26,420,26],[407,29,420,29],[407,32,420,32],[407,35,420,35],[407,38,420,38],[407,39,420,39],[407,40,420,40],[408,6,421,4],[408,10,421,10,"ENEMY_SIZE"],[408,20,421,20],[408,23,421,23],[408,25,421,25],[410,6,423,4],[411,6,424,4],[411,10,424,10,"x"],[411,11,424,11],[411,14,424,14,"Math"],[411,18,424,18],[411,19,424,19,"random"],[411,25,424,25],[411,26,424,26],[411,27,424,27],[411,31,424,31,"SCREEN_WIDTH"],[411,43,424,43],[411,46,424,46,"ENEMY_SIZE"],[411,56,424,56],[411,59,424,59],[411,60,424,60],[411,61,424,61],[411,64,424,64,"ENEMY_SIZE"],[411,74,424,74],[411,75,424,75],[411,76,424,76],[412,6,425,4],[412,10,425,10,"y"],[412,11,425,11],[412,14,425,14,"Math"],[412,18,425,18],[412,19,425,19,"random"],[412,25,425,25],[412,26,425,26],[412,27,425,27],[412,31,425,31,"GAME_AREA_HEIGHT"],[412,47,425,47],[412,50,425,50,"ENEMY_SIZE"],[412,60,425,60],[412,63,425,63],[412,64,425,64],[412,65,425,65],[412,68,425,68,"ENEMY_SIZE"],[412,78,425,78],[412,79,425,79],[412,80,425,80],[414,6,427,4],[414,10,427,10,"enemy"],[414,15,427,28],[414,18,427,31],[415,8,428,6,"id"],[415,10,428,8],[415,12,428,10],[415,21,428,19],[415,23,428,21,"enemyCounter"],[415,35,428,33],[415,37,428,35],[416,8,429,6,"name"],[416,12,429,10],[416,14,429,12],[416,24,429,22],[417,8,430,6,"health"],[417,14,430,12],[417,16,430,14],[417,19,430,17],[418,8,431,6,"maxHealth"],[418,17,431,15],[418,19,431,17],[418,22,431,20],[419,8,432,6,"stats"],[419,13,432,11],[419,15,432,13],[420,10,433,8,"attack"],[420,16,433,14],[420,18,433,16],[420,20,433,18],[421,10,434,8,"defense"],[421,17,434,15],[421,19,434,17],[421,21,434,19],[422,10,435,8,"health"],[422,16,435,14],[422,18,435,16],[422,21,435,19],[423,10,436,8,"maxHealth"],[423,19,436,17],[423,21,436,19],[423,24,436,22],[424,10,437,8,"critChance"],[424,20,437,18],[424,22,437,20],[424,23,437,21],[425,10,438,8,"critDamage"],[425,20,438,18],[425,22,438,20],[425,25,438,23],[426,10,439,8,"cooldownReduction"],[426,27,439,25],[426,29,439,27],[427,8,440,6],[427,9,440,7],[428,8,441,6,"position"],[428,16,441,14],[428,18,441,16],[429,10,441,18,"x"],[429,11,441,19],[430,10,441,21,"y"],[431,8,441,23],[431,9,441,24],[432,8,442,6,"lastDamaged"],[432,19,442,17],[432,21,442,19],[433,6,443,4],[433,7,443,5],[434,6,445,4,"state"],[434,11,445,9],[434,12,445,10,"enemies"],[434,19,445,17],[434,20,445,18,"push"],[434,24,445,22],[434,25,445,23,"enemy"],[434,30,445,28],[434,31,445,29],[435,4,446,2],[435,5,446,3],[437,4,448,2],[438,4,449,2],[438,8,449,8,"startCombat"],[438,19,449,19],[438,22,449,22,"React"],[438,27,449,27],[438,28,449,27,"default"],[438,35,449,27],[438,36,449,28,"useCallback"],[438,47,449,39],[438,48,449,40],[438,54,449,46],[439,6,450,4,"console"],[439,13,450,11],[439,14,450,12,"log"],[439,17,450,15],[439,18,450,16],[439,63,450,61],[439,64,450,62],[440,6,451,4,"setCombatState"],[440,20,451,18],[440,21,451,19,"prev"],[440,25,451,23],[440,30,451,28],[441,8,451,30],[441,11,451,33,"prev"],[441,15,451,37],[442,8,451,39,"isInCombat"],[442,18,451,49],[442,20,451,51],[443,6,451,56],[443,7,451,57],[443,8,451,58],[443,9,451,59],[445,6,453,4],[446,6,454,4,"combatEngine"],[446,25,454,16],[446,26,454,16,"combatEngine"],[446,38,454,16],[446,39,454,17,"addTickCallback"],[446,54,454,32],[446,55,454,33,"handleCombatTick"],[446,71,454,49],[446,72,454,50],[447,6,455,4,"console"],[447,13,455,11],[447,14,455,12,"log"],[447,17,455,15],[447,18,455,16],[447,62,455,60],[447,63,455,61],[449,6,457,4],[450,6,458,4,"combatEngine"],[450,25,458,16],[450,26,458,16,"combatEngine"],[450,38,458,16],[450,39,458,17,"start"],[450,44,458,22],[450,45,458,23],[450,46,458,24],[451,4,459,2],[451,5,459,3],[451,7,459,5],[451,8,459,6,"combatEngine"],[451,27,459,18],[451,28,459,18,"combatEngine"],[451,40,459,18],[451,42,459,20,"handleCombatTick"],[451,58,459,36],[451,59,459,37],[451,60,459,38],[453,4,461,2],[454,4,462,2],[454,8,462,8,"stopCombat"],[454,18,462,18],[454,21,462,21,"React"],[454,26,462,26],[454,27,462,26,"default"],[454,34,462,26],[454,35,462,27,"useCallback"],[454,46,462,38],[454,47,462,39],[454,53,462,45],[455,6,463,4,"setCombatState"],[455,20,463,18],[455,21,463,19,"prev"],[455,25,463,23],[455,30,463,28],[456,8,463,30],[456,11,463,33,"prev"],[456,15,463,37],[457,8,463,39,"isInCombat"],[457,18,463,49],[457,20,463,51],[458,6,463,57],[458,7,463,58],[458,8,463,59],[458,9,463,60],[459,6,464,4,"combatEngine"],[459,25,464,16],[459,26,464,16,"combatEngine"],[459,38,464,16],[459,39,464,17,"removeTickCallback"],[459,57,464,35],[459,58,464,36,"handleCombatTick"],[459,74,464,52],[459,75,464,53],[460,4,465,2],[460,5,465,3],[460,7,465,5],[460,8,465,6,"combatEngine"],[460,27,465,18],[460,28,465,18,"combatEngine"],[460,40,465,18],[460,42,465,20,"handleCombatTick"],[460,58,465,36],[460,59,465,37],[460,60,465,38],[462,4,467,2],[463,4,468,2],[463,8,468,8,"equipAbility"],[463,20,468,20],[463,23,468,23,"equipAbility"],[463,24,468,24,"abilityId"],[463,33,468,41],[463,35,468,43,"slotIndex"],[463,44,468,60],[463,49,468,74],[464,6,469,4],[464,13,469,11,"combatState"],[464,24,469,22],[464,25,469,23,"abilityManager"],[464,39,469,37],[464,40,469,38,"equipAbility"],[464,52,469,50],[464,53,469,51,"abilityId"],[464,62,469,60],[464,64,469,62,"slotIndex"],[464,73,469,71],[464,74,469,72],[465,4,470,2],[465,5,470,3],[466,4,472,2],[466,8,472,8,"getDeck"],[466,15,472,15],[466,18,472,18,"getDeck"],[466,19,472,18],[466,24,472,24],[467,6,473,4],[467,13,473,11,"combatState"],[467,24,473,22],[467,25,473,23,"abilityManager"],[467,39,473,37],[467,40,473,38,"getDeck"],[467,47,473,45],[467,48,473,46],[467,49,473,47],[468,4,474,2],[468,5,474,3],[469,4,476,2],[469,8,476,8,"getAvailableAbilities"],[469,29,476,29],[469,32,476,32,"getAvailableAbilities"],[469,33,476,32],[469,38,476,38],[470,6,477,4],[470,13,477,11,"combatState"],[470,24,477,22],[470,25,477,23,"abilityManager"],[470,39,477,37],[470,40,477,38,"getAvailableAbilities"],[470,61,477,59],[470,62,477,60],[470,63,477,61],[471,4,478,2],[471,5,478,3],[472,4,480,2],[472,8,480,8,"upgradeAbility"],[472,22,480,22],[472,25,480,26,"abilityId"],[472,34,480,43],[472,38,480,57],[473,6,481,4],[473,13,481,11,"combatState"],[473,24,481,22],[473,25,481,23,"abilityManager"],[473,39,481,37],[473,40,481,38,"upgradeAbility"],[473,54,481,52],[473,55,481,53,"abilityId"],[473,64,481,62],[473,65,481,63],[474,4,482,2],[474,5,482,3],[476,4,484,2],[477,4,485,2],[477,8,485,8,"clearAllEnemies"],[477,23,485,23],[477,26,485,26,"clearAllEnemies"],[477,27,485,26],[477,32,485,32],[478,6,486,4,"console"],[478,13,486,11],[478,14,486,12,"log"],[478,17,486,15],[478,18,486,16],[478,67,486,65],[478,68,486,66],[479,6,487,4,"setCombatState"],[479,20,487,18],[479,21,487,19,"prev"],[479,25,487,23],[479,30,487,28],[480,8,488,6],[480,11,488,9,"prev"],[480,15,488,13],[481,8,489,6,"enemies"],[481,15,489,13],[481,17,489,15],[482,6,490,4],[482,7,490,5],[482,8,490,6],[482,9,490,7],[483,4,491,2],[483,5,491,3],[485,4,493,2],[486,4,494,2],[486,8,494,8,"triggerLevelUpExplosion"],[486,31,494,31],[486,34,494,34,"triggerLevelUpExplosion"],[486,35,494,34],[486,40,494,40],[487,6,495,4,"console"],[487,13,495,11],[487,14,495,12,"log"],[487,17,495,15],[487,18,495,16],[487,70,495,68],[487,71,495,69],[488,6,497,4],[488,10,497,10,"explosionTime"],[488,23,497,23],[488,26,497,26,"Date"],[488,30,497,30],[488,31,497,31,"now"],[488,34,497,34],[488,35,497,35],[488,36,497,36],[489,6,498,4,"setLastExplosionTime"],[489,26,498,24],[489,27,498,25,"explosionTime"],[489,40,498,38],[489,41,498,39],[490,6,500,4,"setCombatState"],[490,20,500,18],[490,21,500,19,"prev"],[490,25,500,23],[490,29,500,27],[491,8,501,6],[492,8,502,6],[492,12,502,12,"enemyCount"],[492,22,502,22],[492,25,502,25,"prev"],[492,29,502,29],[492,30,502,30,"enemies"],[492,37,502,37],[492,38,502,38,"length"],[492,44,502,44],[493,8,503,6],[493,12,503,12,"explosionXP"],[493,23,503,23],[493,26,503,26,"enemyCount"],[493,36,503,36],[493,39,503,39],[493,41,503,41],[493,42,503,42],[493,43,503,43],[494,8,504,6],[494,12,504,12,"explosionGold"],[494,25,504,25],[494,28,504,28,"enemyCount"],[494,38,504,38],[494,41,504,41],[494,42,504,42],[494,43,504,43],[494,44,504,44],[496,8,506,6,"console"],[496,15,506,13],[496,16,506,14,"log"],[496,19,506,17],[496,20,506,18],[496,44,506,42,"enemyCount"],[496,54,506,52],[496,76,506,74,"explosionXP"],[496,87,506,85],[496,98,506,96,"explosionGold"],[496,111,506,109],[496,118,506,116],[496,119,506,117],[498,8,508,6],[499,8,509,6],[499,12,509,10,"explosionXP"],[499,23,509,21],[499,26,509,24],[499,27,509,25],[499,29,509,27],[500,10,510,8,"setTimeout"],[500,20,510,18],[500,21,510,19],[500,27,510,25],[501,12,511,10,"updateNinja"],[501,23,511,21],[501,24,511,23,"ninja"],[501,29,511,28],[501,34,511,34],[502,14,512,12,"experience"],[502,24,512,22],[502,26,512,24,"ninja"],[502,31,512,29],[502,32,512,30,"experience"],[502,42,512,40],[502,45,512,43,"explosionXP"],[502,56,512,54],[503,14,513,12,"gold"],[503,18,513,16],[503,20,513,18,"ninja"],[503,25,513,23],[503,26,513,24,"gold"],[503,30,513,28],[503,33,513,31,"explosionGold"],[504,12,514,10],[504,13,514,11],[504,14,514,12],[504,15,514,13],[505,10,515,8],[505,11,515,9],[505,13,515,11],[505,14,515,12],[505,15,515,13],[505,16,515,14],[505,17,515,15],[506,8,516,6],[508,8,518,6],[509,8,519,6],[510,8,520,6],[510,12,520,12,"damagedEnemies"],[510,26,520,26],[510,29,520,29,"prev"],[510,33,520,33],[510,34,520,34,"enemies"],[510,41,520,41],[510,42,520,42,"map"],[510,45,520,45],[510,46,520,46,"enemy"],[510,51,520,51],[510,56,520,56],[511,10,521,8],[511,13,521,11,"enemy"],[511,18,521,16],[512,10,522,8,"health"],[512,16,522,14],[512,18,522,16],[512,19,522,17],[513,10,522,19],[514,10,523,8,"lastDamaged"],[514,21,523,19],[514,23,523,21,"combatEngine"],[514,42,523,33],[514,43,523,33,"combatEngine"],[514,55,523,33],[514,56,523,34,"getCurrentTick"],[514,70,523,48],[514,71,523,49],[515,8,524,6],[515,9,524,7],[515,10,524,8],[515,11,524,9],[516,8,526,6],[516,15,526,13],[517,10,527,8],[517,13,527,11,"prev"],[517,17,527,15],[518,10,528,8,"enemies"],[518,17,528,15],[518,19,528,17,"damagedEnemies"],[519,8,529,6],[519,9,529,7],[520,6,530,4],[520,7,530,5],[520,8,530,6],[521,4,531,2],[521,5,531,3],[523,4,533,2],[524,4,534,2],[524,8,534,8,"spawnEnemy"],[524,18,534,18],[524,21,534,22,"position"],[524,29,534,57],[524,33,534,75],[525,6,535,4],[525,10,535,10,"SCREEN_WIDTH"],[525,22,535,22],[525,25,535,25],[525,28,535,28],[526,6,536,4],[526,10,536,10,"GAME_AREA_HEIGHT"],[526,26,536,26],[526,29,536,29],[526,32,536,32],[526,35,536,35],[526,38,536,38],[526,39,536,39],[526,40,536,40],[527,6,537,4],[527,10,537,10,"ENEMY_SIZE"],[527,20,537,20],[527,23,537,23],[527,25,537,25],[529,6,539,4],[530,6,540,4],[530,10,540,10,"x"],[530,11,540,11],[530,14,540,14,"position"],[530,22,540,22],[530,24,540,24,"x"],[530,25,540,25],[530,29,540,29,"Math"],[530,33,540,33],[530,34,540,34,"random"],[530,40,540,40],[530,41,540,41],[530,42,540,42],[530,46,540,46,"SCREEN_WIDTH"],[530,58,540,58],[530,61,540,61,"ENEMY_SIZE"],[530,71,540,71],[530,74,540,74],[530,75,540,75],[530,76,540,76],[530,79,540,79,"ENEMY_SIZE"],[530,89,540,89],[531,6,541,4],[531,10,541,10,"y"],[531,11,541,11],[531,14,541,14,"position"],[531,22,541,22],[531,24,541,24,"y"],[531,25,541,25],[531,29,541,29,"Math"],[531,33,541,33],[531,34,541,34,"random"],[531,40,541,40],[531,41,541,41],[531,42,541,42],[531,46,541,46,"GAME_AREA_HEIGHT"],[531,62,541,62],[531,65,541,65,"ENEMY_SIZE"],[531,75,541,75],[531,78,541,78],[531,79,541,79],[531,80,541,80],[531,83,541,83,"ENEMY_SIZE"],[531,93,541,93],[532,6,543,4],[532,10,543,10,"enemy"],[532,15,543,28],[532,18,543,31],[533,8,544,6,"id"],[533,10,544,8],[533,12,544,10],[533,21,544,19],[533,23,544,21,"enemyCounter"],[533,35,544,33],[533,37,544,35],[534,8,545,6,"name"],[534,12,545,10],[534,14,545,12],[534,24,545,22],[535,8,546,6,"health"],[535,14,546,12],[535,16,546,14],[535,19,546,17],[536,8,547,6,"maxHealth"],[536,17,547,15],[536,19,547,17],[536,22,547,20],[537,8,548,6,"stats"],[537,13,548,11],[537,15,548,13],[538,10,549,8,"attack"],[538,16,549,14],[538,18,549,16],[538,20,549,18],[539,10,550,8,"defense"],[539,17,550,15],[539,19,550,17],[539,21,550,19],[540,10,551,8,"health"],[540,16,551,14],[540,18,551,16],[540,21,551,19],[541,10,552,8,"maxHealth"],[541,19,552,17],[541,21,552,19],[541,24,552,22],[542,10,553,8,"critChance"],[542,20,553,18],[542,22,553,20],[542,23,553,21],[543,10,554,8,"critDamage"],[543,20,554,18],[543,22,554,20],[543,25,554,23],[544,10,555,8,"cooldownReduction"],[544,27,555,25],[544,29,555,27],[545,8,556,6],[545,9,556,7],[546,8,557,6,"position"],[546,16,557,14],[546,18,557,16],[547,10,557,18,"x"],[547,11,557,19],[548,10,557,21,"y"],[549,8,557,23],[549,9,557,24],[550,8,558,6,"lastDamaged"],[550,19,558,17],[550,21,558,19],[551,6,559,4],[551,7,559,5],[552,6,561,4,"setCombatState"],[552,20,561,18],[552,21,561,19,"prev"],[552,25,561,23],[552,30,561,28],[553,8,562,6],[553,11,562,9,"prev"],[553,15,562,13],[554,8,563,6,"enemies"],[554,15,563,13],[554,17,563,15],[554,18,563,16],[554,21,563,19,"prev"],[554,25,563,23],[554,26,563,24,"enemies"],[554,33,563,31],[554,35,563,33,"enemy"],[554,40,563,38],[555,6,564,4],[555,7,564,5],[555,8,564,6],[555,9,564,7],[556,6,566,4],[556,13,566,11,"enemy"],[556,18,566,16],[557,4,567,2],[557,5,567,3],[559,4,569,2],[560,4,570,2],[560,8,570,8,"spawnBoss"],[560,17,570,17],[560,20,570,21,"bossEnemy"],[560,29,570,43],[560,33,570,48],[561,6,571,4,"console"],[561,13,571,11],[561,14,571,12,"log"],[561,17,571,15],[561,18,571,16],[561,39,571,37,"bossEnemy"],[561,48,571,46],[561,49,571,47,"name"],[561,53,571,51],[561,90,571,88],[561,91,571,89],[562,6,572,4,"setCombatState"],[562,20,572,18],[562,21,572,19,"prev"],[562,25,572,23],[562,30,572,28],[563,8,573,6],[563,11,573,9,"prev"],[563,15,573,13],[564,8,574,6,"enemies"],[564,15,574,13],[564,17,574,15],[564,18,574,16,"bossEnemy"],[564,27,574,25],[564,28,574,26],[564,29,574,27],[565,6,575,4],[565,7,575,5],[565,8,575,6],[565,9,575,7],[566,4,576,2],[566,5,576,3],[568,4,578,2],[569,4,579,2],[569,8,579,8,"clearSpecificEnemy"],[569,26,579,26],[569,29,579,30,"enemyId"],[569,36,579,45],[569,40,579,50],[570,6,580,4,"setCombatState"],[570,20,580,18],[570,21,580,19,"prev"],[570,25,580,23],[570,30,580,28],[571,8,581,6],[571,11,581,9,"prev"],[571,15,581,13],[572,8,582,6,"enemies"],[572,15,582,13],[572,17,582,15,"prev"],[572,21,582,19],[572,22,582,20,"enemies"],[572,29,582,27],[572,30,582,28,"filter"],[572,36,582,34],[572,37,582,35,"enemy"],[572,42,582,40],[572,46,582,44,"enemy"],[572,51,582,49],[572,52,582,50,"id"],[572,54,582,52],[572,59,582,57,"enemyId"],[572,66,582,64],[573,6,583,4],[573,7,583,5],[573,8,583,6],[573,9,583,7],[574,4,584,2],[574,5,584,3],[575,4,585,2],[575,8,585,2,"useEffect"],[575,14,585,11],[575,15,585,11,"useEffect"],[575,24,585,11],[575,26,585,12],[575,32,585,18],[576,6,586,4,"combatEngine"],[576,25,586,16],[576,26,586,16,"combatEngine"],[576,38,586,16],[576,39,586,17,"start"],[576,44,586,22],[576,45,586,23],[576,46,586,24],[578,6,588,4],[579,6,589,4,"combatState"],[579,17,589,15],[579,18,589,16,"abilityManager"],[579,32,589,30],[579,33,589,31,"equipAbility"],[579,45,589,43],[579,46,589,44],[579,62,589,60],[579,64,589,62],[579,65,589,63],[579,66,589,64],[580,6,590,4,"combatState"],[580,17,590,15],[580,18,590,16,"abilityManager"],[580,32,590,30],[580,33,590,31,"equipAbility"],[580,45,590,43],[580,46,590,44],[580,61,590,59],[580,63,590,61],[580,64,590,62],[580,65,590,63],[581,6,592,4],[581,13,592,11],[581,19,592,17],[582,8,593,6,"combatEngine"],[582,27,593,18],[582,28,593,18,"combatEngine"],[582,40,593,18],[582,41,593,19,"stop"],[582,45,593,23],[582,46,593,24],[582,47,593,25],[583,6,594,4],[583,7,594,5],[584,4,595,2],[584,5,595,3],[584,7,595,5],[584,9,595,7],[584,10,595,8],[585,4,597,2],[585,8,597,8,"contextValue"],[585,20,597,39],[585,23,597,42,"React"],[585,28,597,47],[585,29,597,47,"default"],[585,36,597,47],[585,37,597,48,"useMemo"],[585,44,597,55],[585,45,597,56],[585,52,597,63],[586,6,598,4,"combatState"],[586,17,598,15],[587,6,599,4,"projectiles"],[587,17,599,15],[588,6,600,4,"startCombat"],[588,17,600,15],[589,6,601,4,"stopCombat"],[589,16,601,14],[590,6,602,4,"equipAbility"],[590,18,602,16],[591,6,603,4,"handleEnemyKill"],[591,21,603,19],[592,6,604,4,"getDeck"],[592,13,604,11],[593,6,605,4,"getAvailableAbilities"],[593,27,605,25],[594,6,606,4,"upgradeAbility"],[594,20,606,18],[595,6,607,4,"spawnEnemy"],[595,16,607,14],[596,6,608,4,"spawnBoss"],[596,15,608,13],[597,6,609,4,"clearAllEnemies"],[597,21,609,19],[598,6,610,4,"clearSpecificEnemy"],[598,24,610,22],[599,6,611,4,"triggerLevelUpExplosion"],[599,29,611,27],[600,6,612,4,"findClosestEnemy"],[600,22,612,20],[601,6,613,4,"updateNinjaPosition"],[601,25,613,23],[602,6,614,4,"setManualControlActive"],[602,28,614,26],[603,6,615,4,"lastExplosionTime"],[604,4,616,2],[604,5,616,3],[604,6,616,4],[604,8,616,6],[605,4,617,4],[606,4,618,4],[607,4,619,4,"combatState"],[607,15,619,15],[607,17,620,4,"projectiles"],[607,28,620,15],[607,30,621,4,"lastExplosionTime"],[607,47,621,21],[607,48,622,3],[607,49,622,4],[608,4,624,2],[608,24,625,4],[608,28,625,4,"_reactJsxDevRuntime"],[608,47,625,4],[608,48,625,4,"jsxDEV"],[608,54,625,4],[608,56,625,5,"CombatContext"],[608,69,625,18],[608,70,625,19,"Provider"],[608,78,625,27],[609,6,625,28,"value"],[609,11,625,33],[609,13,625,35,"contextValue"],[609,25,625,48],[610,6,625,48,"children"],[610,14,625,48],[610,16,626,7,"children"],[611,4,626,15],[612,6,626,15,"fileName"],[612,14,626,15],[612,16,626,15,"_jsxFileName"],[612,28,626,15],[613,6,626,15,"lineNumber"],[613,16,626,15],[614,6,626,15,"columnNumber"],[614,18,626,15],[615,4,626,15],[615,11,627,28],[615,12,627,29],[616,2,629,0],[616,3,629,1],[617,2,629,2,"_s3"],[617,5,629,2],[617,6,77,13,"CombatProvider"],[617,20,77,27],[618,4,77,27],[618,12,78,26,"useGame"],[618,24,78,33],[618,25,78,33,"useGame"],[618,32,78,33],[618,34,79,30,"useZone"],[618,46,79,37],[618,47,79,37,"useZone"],[618,54,79,37],[619,2,79,37],[620,2,79,37,"_c"],[620,4,79,37],[620,7,77,13,"CombatProvider"],[620,21,77,27],[621,2,77,27],[621,6,77,27,"_c"],[621,8,77,27],[622,2,77,27,"$RefreshReg$"],[622,14,77,27],[622,15,77,27,"_c"],[622,17,77,27],[623,0,77,27],[623,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCC2B;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ0C;kDKc,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;0CgBO;GhBE;6CiBG;GjBG;8BkBG;mBbG;oDEI,sCF;Kaa;mBCG,oBC,2BD,CD;GlBC;sBqBG;iCCa;oCCE,iCD;KDG;GrBsB;2BwBG;mBLyB,6BK;etBG;KsBE;GxBC;yByBG;GzB6B;wC0BG;mBrBE,uCqB;G1BQ;uC2BG;mBtBC,wCsB;G3BE;uB4BG;G5BE;kB6BE;G7BE;gC8BE;G9BE;yB+BE;G/BE;0BgCG;mB3BE;M2BG;GhCC;kCiCG;mB5BM;mBHU;sBCC;YDG;SGC;8C6BK;Q7BI;K4BM;GjCC;qBmCG;mB9B2B;M8BG;GnCG;oBoCG;mB/BE;M+BG;GpCC;6BqCG;mBhCC;mCiCE,6BjC;MgCC;GrCC;YuCC;WCO;KDE;GvCC;wDyCE;IzCmB;CFa"},"hasCjsExports":false},"type":"js/module"}]}