{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":111},"end":{"line":2,"column":62,"index":173}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":174},"end":{"line":3,"column":106,"index":280}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":281},"end":{"line":4,"column":85,"index":366}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":367},"end":{"line":5,"column":40,"index":407}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":408},"end":{"line":6,"column":40,"index":448}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _engineCombatEngine = require(_dependencyMap[3], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[4], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[5], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[6], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[7], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s4();\n    var _s3 = $RefreshSig$();\n    var children = _ref.children;\n    var game = (0, _GameContext.useGame)();\n    var _useZone = (0, _ZoneContext.useZone)(),\n      currentZone = _useZone.currentZone,\n      currentZoneLevel = _useZone.currentZoneLevel,\n      recordEnemyKill = _useZone.recordEnemyKill,\n      spawnZoneEnemy = _useZone.spawnZoneEnemy;\n\n    // Define initialCombatState before using it\n    var initialCombatState = {\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    };\n    var _useState = (0, _react.useState)(initialCombatState),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n\n    // Watch for ability data to become available and restore abilities\n    (0, _react.useEffect)(() => {\n      if (game.gameState.abilityData && combatState.abilityManager) {\n        console.log('🔄 RESTORING ABILITY DATA FROM SAVE (DELAYED):', game.gameState.abilityData);\n        combatState.abilityManager.restoreFromSaveData(game.gameState.abilityData);\n\n        // Force re-render to update UI with restored abilities\n        setCombatState(prev => ({\n          ...prev\n        }));\n      }\n    }, [game.gameState.abilityData, combatState.abilityManager]);\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // MOBILE FIX: Removed duplicate ninja position state - using main game's position instead\n    // Ninja position is now managed entirely by the main game component\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🗡️  MOBILE DEBUG - handleEnemyKill CALLED for enemy:`, enemy.id);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 MOBILE DEBUG - Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      console.log(`📱 MOBILE DEBUG - Platform: ${_reactNative.Platform.OS}, Time: ${Date.now()}`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        console.log(`🥷 MOBILE DEBUG - About to call updateNinja with rewards`);\n\n        // Award XP and gold using GameContext\n        game.updateNinja(prev => {\n          console.log(`📊 MOBILE DEBUG - XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          console.log(`💰 MOBILE DEBUG - Gold before: ${prev.gold}, after: ${prev.gold + goldReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: enemy.zoneTypeId || 'test_orc',\n          // Use zone type ID if available, fallback to test\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: enemy.zoneXP || 20,\n          // Use zone XP if available, fallback to base reward\n          position: enemy.position\n        };\n        console.log(`🎯 ENEMY KILLED: ${zoneEnemy.name} (${zoneEnemy.typeId}) - Recording kill for selected zone`);\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [game.updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 MOBILE DEBUG - handleCombatTick called, checking enemy deaths...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Enemy AI - Track toward player for idle game combat engagement\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - 2.5x faster and player-tracking  \n            var MOVEMENT_SPEED = 0.75; // 2.5x faster (was 0.3)\n            var SCREEN_WIDTH = 390;\n            var GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // IDLE GAME AI: Move toward player for combat engagement\n            var playerX = currentNinjaPosition.x;\n            var playerY = currentNinjaPosition.y;\n\n            // Calculate direction to player\n            var deltaX = playerX - enemy.position.x;\n            var deltaY = playerY - enemy.position.y;\n            var distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n            // Only move if not too close to player (maintain some distance for combat)\n            if (distance > 40) {\n              // Normalize direction toward player\n              var normalizedX = deltaX / distance;\n              var normalizedY = deltaY / distance;\n\n              // Add slight randomness to movement to prevent perfect tracking\n              var randomFactor = 0.2; // 20% randomness\n              var finalX = normalizedX + (Math.random() - 0.5) * randomFactor;\n              var finalY = normalizedY + (Math.random() - 0.5) * randomFactor;\n\n              // Calculate new position\n              var newX = enemy.position.x + finalX * MOVEMENT_SPEED;\n              var newY = enemy.position.y + finalY * MOVEMENT_SPEED;\n\n              // Keep within bounds\n              newX = Math.max(0, Math.min(SCREEN_WIDTH - ENEMY_SIZE, newX));\n              newY = Math.max(0, Math.min(GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n\n              // Apply new position\n              enemy.position.x = newX;\n              enemy.position.y = newY;\n            }\n            // If too close to player, enemies stay put to allow combat\n          }\n        });\n\n        // Auto-cast abilities - MOBILE FIX: Pause during manual joystick control to prevent stuttering\n        if (!isManualControlActive) {\n          for (var i = 0; i < 5; i++) {\n            if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n              if (newState.abilityManager.useAbility(i, newTick)) {\n                castAbility(newState, i);\n              }\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // MOBILE DEBUG: Log enemy death processing\n        if (deadEnemies.length > 0) {\n          console.log(`💀 MOBILE DEBUG - Found ${deadEnemies.length} dead enemies:`, deadEnemies.map(e => `${e.id}(${e.health}hp)`));\n        }\n\n        // Check if any enemies are close to death for debugging\n        var lowHealthEnemies = newState.enemies.filter(enemy => enemy.health <= 20 && enemy.health > 0);\n        if (lowHealthEnemies.length > 0) {\n          console.log(`🩸 MOBILE DEBUG - Low health enemies:`, lowHealthEnemies.map(e => `${e.id}(${e.health}/${e.maxHealth}hp)`));\n        }\n\n        // Remove dead enemies\n        var beforeCount = newState.enemies.length;\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n        var afterCount = newState.enemies.length;\n        if (beforeCount !== afterCount) {\n          console.log(`🗑️ MOBILE DEBUG - Removed ${beforeCount - afterCount} dead enemies from state`);\n        }\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      console.log(`⚔️ MOBILE DEBUG - Processing ${enemiesToKill.length} enemy kills outside setState`);\n      enemiesToKill.forEach((enemy, index) => {\n        console.log(`💀 MOBILE DEBUG - Processing kill ${index + 1}/${enemiesToKill.length} for enemy ${enemy.id}`);\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // MOBILE FIX: Track ninja position from main game instead of managing separate state\n    var _useState7 = (0, _react.useState)({\n        x: 0,\n        y: 0\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      currentNinjaPosition = _useState8[0],\n      setCurrentNinjaPosition = _useState8[1];\n    var _useState9 = (0, _react.useState)(false),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      isManualControlActive = _useState0[0],\n      setIsManualControlActive = _useState0[1];\n\n    // Update ninja position for combat calculations - now just tracks main game position\n    var updateNinjaPosition = (0, _react.useCallback)(newPosition => {\n      setCurrentNinjaPosition(newPosition);\n    }, []);\n\n    // MOBILE FIX: Pause/resume combat during manual joystick control to prevent stuttering\n    var setManualControlActive = (0, _react.useCallback)(active => {\n      setIsManualControlActive(active);\n      console.log(`🎮 Manual control ${active ? 'ACTIVATED' : 'DEACTIVATED'} - Combat ${active ? 'PAUSED' : 'RESUMED'}`);\n    }, []);\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Check if this is an AOE ability\n      var isAOE = ability.effects.includes('AoE') && ability.stats.aoeRadius;\n      if (isAOE) {\n        console.log(`💥 AOE ABILITY: ${ability.name} with radius ${ability.stats.aoeRadius}`);\n\n        // Find all enemies within AOE range of ninja\n        var ninjaX = currentNinjaPosition.x + 20; // Center of ninja\n        var ninjaY = currentNinjaPosition.y + 20;\n        var aoeRadius = ability.stats.aoeRadius;\n        var enemiesInRange = state.enemies.filter(enemy => {\n          var enemyX = enemy.position.x + 17.5; // Center of enemy\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= aoeRadius;\n        });\n        console.log(`💥 AOE TARGETS: Found ${enemiesInRange.length} enemies in range (${aoeRadius} radius)`);\n\n        // Create projectile/effect for each enemy in range\n        enemiesInRange.forEach(enemy => {\n          var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, enemy.stats);\n          createProjectile(enemy, damageResult.damage, currentNinjaPosition, {\n            id: ability.id,\n            name: ability.name,\n            icon: ability.icon\n          });\n          console.log(`💥 AOE HIT: ${enemy.name} for ${damageResult.damage} damage`);\n        });\n        console.log(`🎯 ${ability.name} AOE cast! Hit ${enemiesInRange.length} enemies for ${damage} base damage each`);\n      } else {\n        // Single target ability (original logic)\n        var target = findClosestEnemyInternal(state.enemies);\n        if (!target) return;\n        var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n        // Create projectile for visual effect and delayed damage\n        createProjectile(target, damageResult.damage, currentNinjaPosition, {\n          id: ability.id,\n          name: ability.name,\n          icon: ability.icon\n        });\n        console.log(`🎯 ${ability.name} cast! Single target for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n      }\n\n      // Apply DoT effects (for primary target in single target, or all targets in AOE)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        var targets = isAOE ? state.enemies.filter(enemy => {\n          var ninjaX = currentNinjaPosition.x + 20;\n          var ninjaY = currentNinjaPosition.y + 20;\n          var enemyX = enemy.position.x + 17.5;\n          var enemyY = enemy.position.y + 17.5;\n          var distance = Math.sqrt(Math.pow(enemyX - ninjaX, 2) + Math.pow(enemyY - ninjaY, 2));\n          return distance <= ability.stats.aoeRadius;\n        }) : [findClosestEnemyInternal(state.enemies)].filter(Boolean);\n        targets.forEach(target => {\n          state.statusEffects.addEffect(target.id, {\n            id: `${ability.id}_dot`,\n            type: 'dot',\n            remainingTicks: Math.floor(ability.stats.duration * 10),\n            tickInterval: 10,\n            lastTick: state.currentTick,\n            value: Math.floor(damage * 0.3),\n            stackable: false\n          });\n        });\n      }\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos, abilityInfo) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500,\n        // 500ms travel time\n        // MOBILE ENHANCEMENT: Store ability information for visual representation\n        abilityId: abilityInfo?.id || 'basic_shuriken',\n        abilityName: abilityInfo?.name || 'Basic Shuriken',\n        abilityIcon: abilityInfo?.icon || '🌟' // Default to star if no ability info\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a zone-based enemy using the selected zone\n    var spawnTestEnemy = state => {\n      console.log(`🎯 SPAWNING ENEMY: Attempting to spawn enemy from selected zone`);\n\n      // Get zone enemy from ZoneContext\n      var zoneEnemy = spawnZoneEnemy();\n      if (!zoneEnemy) {\n        console.log(`❌ No zone enemy available - falling back to test enemy`);\n        // Fallback to basic test enemy if zone system fails\n        spawnBasicTestEnemy(state);\n        return;\n      }\n      console.log(`🎯 ZONE ENEMY SPAWNED: ${zoneEnemy.name} (${zoneEnemy.typeId}) from Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n\n      // Convert zone enemy to combat enemy format\n      var combatEnemy = {\n        id: zoneEnemy.id,\n        name: zoneEnemy.name,\n        health: zoneEnemy.hp,\n        maxHealth: zoneEnemy.maxHP,\n        stats: {\n          attack: zoneEnemy.attack,\n          defense: 10,\n          // Default defense\n          health: zoneEnemy.hp,\n          maxHealth: zoneEnemy.maxHP,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: zoneEnemy.position,\n        lastDamaged: 0,\n        // Store zone info for kill tracking\n        zoneTypeId: zoneEnemy.typeId,\n        zoneXP: zoneEnemy.xp\n      };\n      console.log(`🐛 Added zone enemy: ${combatEnemy.name} with ${combatEnemy.health} HP at Zone ${currentZone?.id} Level ${currentZoneLevel?.level}`);\n      state.enemies.push(combatEnemy);\n    };\n\n    // Fallback basic enemy spawner\n    var spawnBasicTestEnemy = state => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140;\n      var ENEMY_SIZE = 35;\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `fallback_enemy_${Date.now()}_${Math.random()}`,\n        name: `Test Orc ${Math.floor(Math.random() * 100)}`,\n        health: 50,\n        maxHealth: 50,\n        stats: {\n          attack: 15,\n          defense: 10,\n          health: 50,\n          maxHealth: 50,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐛 Fallback: Spawned ${enemy.name} at (${Math.round(x)}, ${Math.round(y)})`);\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            game.updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n\n    // MOBILE FIX: Manual ability casting for UI buttons - allows players to trigger abilities directly\n    var useAbilityManually = _s3((0, _react.useCallback)(_s3(slotIndex => {\n      _s3();\n      console.log(`🎮 Manual cast attempt for slot ${slotIndex}`);\n\n      // Check if ability is ready and cast it\n      var isReady = combatState.abilityManager.isAbilityReady(slotIndex);\n      if (!isReady) {\n        console.log(`⏳ Ability in slot ${slotIndex} is not ready (still on cooldown)`);\n        return false;\n      }\n\n      // Check if there are enemies to target\n      if (combatState.enemies.length === 0) {\n        console.log(`🎯 No enemies to target for manual ability cast`);\n        return false;\n      }\n\n      // Use the ability through the ability manager\n      var currentTick = _engineCombatEngine.combatEngine.getCurrentTick();\n      var success = combatState.abilityManager.useAbility(slotIndex, currentTick);\n      if (success) {\n        // Cast the ability immediately using the same casting logic as auto-cast\n        setCombatState(prev => {\n          var newState = {\n            ...prev\n          };\n          castAbility(newState, slotIndex);\n          return newState;\n        });\n        console.log(`✨ Manual ability cast successful for slot ${slotIndex}`);\n        return true;\n      } else {\n        console.log(`❌ Manual ability cast failed for slot ${slotIndex}`);\n        return false;\n      }\n    }, \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true), [combatState.abilityManager, combatState.enemies]), \"TeV43wHbXm0ccgu+R8urb3GYmh8=\", true);\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // MOBILE FIX: Don't override default ability equipment - let AbilityManager constructor handle it\n      // The AbilityManager already equips all 5 abilities by default in its constructor\n      console.log('🎯 Combat engine started, using default ability equipment from AbilityManager');\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n\n    // Manual save ability data function - called when abilities are modified\n    var saveAbilityData = (0, _react.useCallback)(() => {\n      if (combatState.abilityManager) {\n        var abilityData = combatState.abilityManager.getSaveData();\n        console.log('💾 MANUALLY SAVING ABILITY DATA TO GAME CONTEXT:', abilityData);\n        game.updateAbilityData(abilityData);\n      }\n    }, [combatState.abilityManager, game.updateAbilityData]);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      setManualControlActive,\n      lastExplosionTime,\n      useAbilityManually,\n      // MOBILE FIX: Add manual ability casting\n      saveAbilityData // Expose save function to UI components\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime,\n    // MOBILE PERFORMANCE FIX: Add missing dependencies for proper state synchronization\n    combatState.abilityManager, combatState.enemies, useAbilityManually,\n    // Add the callback to dependencies\n    saveAbilityData // Add saveAbilityData to dependencies\n    ]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 5\n    }, this);\n  };\n  _s4(CombatProvider, \"Lf2XrG/MmYarMhSIoP9V6eW7PA0=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":802,"map":[[15,2,80,0,"Object"],[15,8,80,0],[15,9,80,0,"defineProperty"],[15,23,80,0],[15,24,80,0,"exports"],[15,31,80,0],[16,4,80,0,"enumerable"],[16,14,80,0],[17,4,80,0,"get"],[17,7,80,0],[17,18,80,0,"get"],[17,19,80,0],[18,6,80,0],[18,13,80,0,"useCombat"],[18,22,80,0],[19,4,80,0],[20,2,80,0],[21,2,90,0,"Object"],[21,8,90,0],[21,9,90,0,"defineProperty"],[21,23,90,0],[21,24,90,0,"exports"],[21,31,90,0],[22,4,90,0,"enumerable"],[22,14,90,0],[23,4,90,0,"get"],[23,7,90,0],[23,18,90,0,"get"],[23,19,90,0],[24,6,90,0],[24,13,90,0,"CombatProvider"],[24,27,90,0],[25,4,90,0],[26,2,90,0],[27,2,831,2],[27,6,831,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,831,2],[27,42,831,2,"require"],[27,49,831,2],[27,50,831,2,"_dependencyMap"],[27,64,831,2],[28,2,831,2],[28,6,831,2,"_slicedToArray"],[28,20,831,2],[28,23,831,2,"_interopDefault"],[28,38,831,2],[28,39,831,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,831,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_reactNative"],[31,18,2,0],[31,21,2,0,"require"],[31,28,2,0],[31,29,2,0,"_dependencyMap"],[31,43,2,0],[32,2,3,0],[32,6,3,0,"_engineCombatEngine"],[32,25,3,0],[32,28,3,0,"require"],[32,35,3,0],[32,36,3,0,"_dependencyMap"],[32,50,3,0],[33,2,4,0],[33,6,4,0,"_typesAbilityTypes"],[33,24,4,0],[33,27,4,0,"require"],[33,34,4,0],[33,35,4,0,"_dependencyMap"],[33,49,4,0],[34,2,5,0],[34,6,5,0,"_GameContext"],[34,18,5,0],[34,21,5,0,"require"],[34,28,5,0],[34,29,5,0,"_dependencyMap"],[34,43,5,0],[35,2,6,0],[35,6,6,0,"_ZoneContext"],[35,18,6,0],[35,21,6,0,"require"],[35,28,6,0],[35,29,6,0,"_dependencyMap"],[35,43,6,0],[36,2,6,40],[36,6,6,40,"_reactJsxDevRuntime"],[36,25,6,40],[36,28,6,40,"require"],[36,35,6,40],[36,36,6,40,"_dependencyMap"],[36,50,6,40],[37,2,78,0],[37,6,78,6,"CombatContext"],[37,19,78,19],[37,35,78,22],[37,39,78,22,"createContext"],[37,45,78,35],[37,46,78,35,"createContext"],[37,59,78,35],[37,61,78,67,"undefined"],[37,70,78,76],[37,71,78,77],[38,2,80,7],[38,6,80,13,"useCombat"],[38,15,80,22],[38,18,80,25,"useCombat"],[38,19,80,25],[38,24,80,50],[39,4,80,50,"_s"],[39,6,80,50],[40,4,81,2],[40,8,81,8,"context"],[40,15,81,15],[40,18,81,18],[40,22,81,18,"useContext"],[40,28,81,28],[40,29,81,28,"useContext"],[40,39,81,28],[40,41,81,29,"CombatContext"],[40,54,81,42],[40,55,81,43],[41,4,82,2],[41,8,82,6],[41,9,82,7,"context"],[41,16,82,14],[41,18,82,16],[42,6,83,4],[42,12,83,10],[42,16,83,14,"Error"],[42,21,83,19],[42,22,83,20],[42,70,83,68],[42,71,83,69],[43,4,84,2],[44,4,85,2],[44,11,85,9,"context"],[44,18,85,16],[45,2,86,0],[45,3,86,1],[46,2,86,2,"_s"],[46,4,86,2],[46,5,80,13,"useCombat"],[46,14,80,22],[47,2,88,0],[47,6,88,4,"enemyCounter"],[47,18,88,16],[47,21,88,19],[47,22,88,20],[47,23,88,21],[47,24,88,22],[49,2,90,7],[49,6,90,13,"CombatProvider"],[49,20,90,27],[49,23,90,30,"_ref"],[49,27,90,30],[49,31,90,73],[50,4,90,73,"_s4"],[50,7,90,73],[51,4,90,73],[51,8,90,73,"_s3"],[51,11,90,73],[51,14,90,73,"$RefreshSig$"],[51,26,90,73],[52,4,90,73],[52,8,90,33,"children"],[52,16,90,41],[52,19,90,41,"_ref"],[52,23,90,41],[52,24,90,33,"children"],[52,32,90,41],[53,4,91,2],[53,8,91,8,"game"],[53,12,91,12],[53,15,91,15],[53,19,91,15,"useGame"],[53,31,91,22],[53,32,91,22,"useGame"],[53,39,91,22],[53,41,91,23],[53,42,91,24],[54,4,92,2],[54,8,92,2,"_useZone"],[54,16,92,2],[54,19,92,77],[54,23,92,77,"useZone"],[54,35,92,84],[54,36,92,84,"useZone"],[54,43,92,84],[54,45,92,85],[54,46,92,86],[55,6,92,10,"currentZone"],[55,17,92,21],[55,20,92,21,"_useZone"],[55,28,92,21],[55,29,92,10,"currentZone"],[55,40,92,21],[56,6,92,23,"currentZoneLevel"],[56,22,92,39],[56,25,92,39,"_useZone"],[56,33,92,39],[56,34,92,23,"currentZoneLevel"],[56,50,92,39],[57,6,92,41,"recordEnemyKill"],[57,21,92,56],[57,24,92,56,"_useZone"],[57,32,92,56],[57,33,92,41,"recordEnemyKill"],[57,48,92,56],[58,6,92,58,"spawnZoneEnemy"],[58,20,92,72],[58,23,92,72,"_useZone"],[58,31,92,72],[58,32,92,58,"spawnZoneEnemy"],[58,46,92,72],[60,4,94,2],[61,4,95,2],[61,8,95,8,"initialCombatState"],[61,26,95,39],[61,29,95,42],[62,6,96,4,"isInCombat"],[62,16,96,14],[62,18,96,16],[62,23,96,21],[63,6,97,4,"currentTick"],[63,17,97,15],[63,19,97,17],[63,20,97,18],[64,6,98,4,"enemies"],[64,13,98,11],[64,15,98,13],[64,17,98,15],[65,6,99,4,"abilityManager"],[65,20,99,18],[65,22,99,20],[65,26,99,24,"AbilityManager"],[65,44,99,38],[65,45,99,38,"AbilityManager"],[65,59,99,38],[65,60,99,39],[65,61,99,40],[66,6,100,4,"statusEffects"],[66,19,100,17],[66,21,100,19],[66,25,100,23,"StatusEffectManager"],[66,44,100,42],[66,45,100,42,"StatusEffectManager"],[66,64,100,42],[66,65,100,43],[66,66,100,44],[67,6,101,4,"playerStats"],[67,17,101,15],[67,19,101,17],[68,8,102,6,"attack"],[68,14,102,12],[68,16,102,14],[68,18,102,16],[69,8,102,18],[70,8,103,6,"defense"],[70,15,103,13],[70,17,103,15],[70,18,103,16],[71,8,104,6,"health"],[71,14,104,12],[71,16,104,14],[71,19,104,17],[72,8,105,6,"maxHealth"],[72,17,105,15],[72,19,105,17],[72,22,105,20],[73,8,106,6,"critChance"],[73,18,106,16],[73,20,106,18],[73,21,106,19],[74,8,107,6,"critDamage"],[74,18,107,16],[74,20,107,18],[74,23,107,21],[75,8,108,6,"cooldownReduction"],[75,25,108,23],[75,27,108,25],[76,6,109,4],[77,4,110,2],[77,5,110,3],[78,4,112,2],[78,8,112,2,"_useState"],[78,17,112,2],[78,20,112,40],[78,24,112,40,"useState"],[78,30,112,48],[78,31,112,48,"useState"],[78,39,112,48],[78,41,112,62,"initialCombatState"],[78,59,112,80],[78,60,112,81],[79,6,112,81,"_useState2"],[79,16,112,81],[79,23,112,81,"_slicedToArray"],[79,37,112,81],[79,38,112,81,"default"],[79,45,112,81],[79,47,112,81,"_useState"],[79,56,112,81],[80,6,112,9,"combatState"],[80,17,112,20],[80,20,112,20,"_useState2"],[80,30,112,20],[81,6,112,22,"setCombatState"],[81,20,112,36],[81,23,112,36,"_useState2"],[81,33,112,36],[83,4,114,2],[84,4,115,2],[84,8,115,2,"useEffect"],[84,14,115,11],[84,15,115,11,"useEffect"],[84,24,115,11],[84,26,115,12],[84,32,115,18],[85,6,116,4],[85,10,116,8,"game"],[85,14,116,12],[85,15,116,13,"gameState"],[85,24,116,22],[85,25,116,23,"abilityData"],[85,36,116,34],[85,40,116,38,"combatState"],[85,51,116,49],[85,52,116,50,"abilityManager"],[85,66,116,64],[85,68,116,66],[86,8,117,6,"console"],[86,15,117,13],[86,16,117,14,"log"],[86,19,117,17],[86,20,117,18],[86,68,117,66],[86,70,117,68,"game"],[86,74,117,72],[86,75,117,73,"gameState"],[86,84,117,82],[86,85,117,83,"abilityData"],[86,96,117,94],[86,97,117,95],[87,8,118,6,"combatState"],[87,19,118,17],[87,20,118,18,"abilityManager"],[87,34,118,32],[87,35,118,33,"restoreFromSaveData"],[87,54,118,52],[87,55,118,53,"game"],[87,59,118,57],[87,60,118,58,"gameState"],[87,69,118,67],[87,70,118,68,"abilityData"],[87,81,118,79],[87,82,118,80],[89,8,120,6],[90,8,121,6,"setCombatState"],[90,22,121,20],[90,23,121,21,"prev"],[90,27,121,25],[90,32,121,30],[91,10,121,32],[91,13,121,35,"prev"],[92,8,121,40],[92,9,121,41],[92,10,121,42],[92,11,121,43],[93,6,122,4],[94,4,123,2],[94,5,123,3],[94,7,123,5],[94,8,123,6,"game"],[94,12,123,10],[94,13,123,11,"gameState"],[94,22,123,20],[94,23,123,21,"abilityData"],[94,34,123,32],[94,36,123,34,"combatState"],[94,47,123,45],[94,48,123,46,"abilityManager"],[94,62,123,60],[94,63,123,61],[94,64,123,62],[95,4,125,2],[95,8,125,2,"_useState3"],[95,18,125,2],[95,21,125,40],[95,25,125,40,"useState"],[95,31,125,48],[95,32,125,48,"useState"],[95,40,125,48],[95,42,125,69],[95,44,125,71],[95,45,125,72],[96,6,125,72,"_useState4"],[96,16,125,72],[96,23,125,72,"_slicedToArray"],[96,37,125,72],[96,38,125,72,"default"],[96,45,125,72],[96,47,125,72,"_useState3"],[96,57,125,72],[97,6,125,9,"projectiles"],[97,17,125,20],[97,20,125,20,"_useState4"],[97,30,125,20],[98,6,125,22,"setProjectiles"],[98,20,125,36],[98,23,125,36,"_useState4"],[98,33,125,36],[99,4,126,2],[99,8,126,2,"_useState5"],[99,18,126,2],[99,21,126,52],[99,25,126,52,"useState"],[99,31,126,60],[99,32,126,60,"useState"],[99,40,126,60],[99,42,126,69],[99,43,126,70],[99,44,126,71],[100,6,126,71,"_useState6"],[100,16,126,71],[100,23,126,71,"_slicedToArray"],[100,37,126,71],[100,38,126,71,"default"],[100,45,126,71],[100,47,126,71,"_useState5"],[100,57,126,71],[101,6,126,9,"lastExplosionTime"],[101,23,126,26],[101,26,126,26,"_useState6"],[101,36,126,26],[102,6,126,28,"setLastExplosionTime"],[102,26,126,48],[102,29,126,48,"_useState6"],[102,39,126,48],[103,4,127,2],[104,4,128,2],[106,4,130,2],[107,4,131,2],[107,8,131,8,"handleEnemyKill"],[107,23,131,23],[107,26,131,26],[107,30,131,26,"useCallback"],[107,36,131,37],[107,37,131,37,"useCallback"],[107,48,131,37],[107,50,131,39,"enemy"],[107,55,131,57],[107,59,131,62],[108,6,132,4,"console"],[108,13,132,11],[108,14,132,12,"log"],[108,17,132,15],[108,18,132,16],[108,73,132,71],[108,75,132,73,"enemy"],[108,80,132,78],[108,81,132,79,"id"],[108,83,132,81],[108,84,132,82],[110,6,134,4],[111,6,135,4],[111,10,135,10,"xpReward"],[111,18,135,18],[111,21,135,21],[111,23,135,23],[111,24,135,24],[111,25,135,25],[112,6,136,4],[112,10,136,10,"goldReward"],[112,20,136,20],[112,23,136,23],[112,25,136,25],[113,6,138,4,"console"],[113,13,138,11],[113,14,138,12,"log"],[113,17,138,15],[113,18,138,16],[113,48,138,46,"xpReward"],[113,56,138,54],[113,67,138,65,"goldReward"],[113,77,138,75],[113,93,138,91],[113,94,138,92],[114,6,139,4,"console"],[114,13,139,11],[114,14,139,12,"log"],[114,17,139,15],[114,18,139,16],[114,49,139,47,"Platform"],[114,61,139,55],[114,62,139,55,"Platform"],[114,70,139,55],[114,71,139,56,"OS"],[114,73,139,58],[114,84,139,69,"Date"],[114,88,139,73],[114,89,139,74,"now"],[114,92,139,77],[114,93,139,78],[114,94,139,79],[114,96,139,81],[114,97,139,82],[116,6,141,4],[117,6,142,4],[118,6,143,4,"setTimeout"],[118,16,143,14],[118,17,143,15],[118,23,143,21],[119,8,144,6,"console"],[119,15,144,13],[119,16,144,14,"log"],[119,19,144,17],[119,20,144,18],[119,78,144,76],[119,79,144,77],[121,8,146,6],[122,8,147,6,"game"],[122,12,147,10],[122,13,147,11,"updateNinja"],[122,24,147,22],[122,25,147,24,"prev"],[122,29,147,28],[122,33,147,33],[123,10,148,8,"console"],[123,17,148,15],[123,18,148,16,"log"],[123,21,148,19],[123,22,148,20],[123,54,148,52,"prev"],[123,58,148,56],[123,59,148,57,"experience"],[123,69,148,67],[123,81,148,79,"prev"],[123,85,148,83],[123,86,148,84,"experience"],[123,96,148,94],[123,99,148,97,"xpReward"],[123,107,148,105],[123,109,148,107],[123,110,148,108],[124,10,149,8,"console"],[124,17,149,15],[124,18,149,16,"log"],[124,21,149,19],[124,22,149,20],[124,56,149,54,"prev"],[124,60,149,58],[124,61,149,59,"gold"],[124,65,149,63],[124,77,149,75,"prev"],[124,81,149,79],[124,82,149,80,"gold"],[124,86,149,84],[124,89,149,87,"goldReward"],[124,99,149,97],[124,101,149,99],[124,102,149,100],[125,10,150,8],[125,17,150,15],[126,12,151,10,"experience"],[126,22,151,20],[126,24,151,22,"prev"],[126,28,151,26],[126,29,151,27,"experience"],[126,39,151,37],[126,42,151,40,"xpReward"],[126,50,151,48],[127,12,152,10,"gold"],[127,16,152,14],[127,18,152,16,"prev"],[127,22,152,20],[127,23,152,21,"gold"],[127,27,152,25],[127,30,152,28,"goldReward"],[128,10,153,8],[128,11,153,9],[129,8,154,6],[129,9,154,7],[129,10,154,8],[131,8,156,6],[132,8,157,6],[132,12,157,12,"zoneEnemy"],[132,21,157,21],[132,24,157,24],[133,10,158,8,"id"],[133,12,158,10],[133,14,158,12,"enemy"],[133,19,158,17],[133,20,158,18,"id"],[133,22,158,20],[134,10,159,8,"typeId"],[134,16,159,14],[134,18,159,16,"enemy"],[134,23,159,21],[134,24,159,22,"zoneTypeId"],[134,34,159,32],[134,38,159,36],[134,48,159,46],[135,10,159,48],[136,10,160,8,"name"],[136,14,160,12],[136,16,160,14,"enemy"],[136,21,160,19],[136,22,160,20,"name"],[136,26,160,24],[137,10,161,8,"icon"],[137,14,161,12],[137,16,161,14],[137,20,161,18],[138,10,161,20],[139,10,162,8,"hp"],[139,12,162,10],[139,14,162,12],[139,15,162,13],[140,10,162,15],[141,10,163,8,"maxHP"],[141,15,163,13],[141,17,163,15,"enemy"],[141,22,163,20],[141,23,163,21,"maxHealth"],[141,32,163,30],[142,10,164,8,"attack"],[142,16,164,14],[142,18,164,16,"enemy"],[142,23,164,21],[142,24,164,22,"stats"],[142,29,164,27],[142,30,164,28,"attack"],[142,36,164,34],[143,10,165,8,"xp"],[143,12,165,10],[143,14,165,12,"enemy"],[143,19,165,17],[143,20,165,18,"zoneXP"],[143,26,165,24],[143,30,165,28],[143,32,165,30],[144,10,165,32],[145,10,166,8,"position"],[145,18,166,16],[145,20,166,18,"enemy"],[145,25,166,23],[145,26,166,24,"position"],[146,8,167,6],[146,9,167,7],[147,8,169,6,"console"],[147,15,169,13],[147,16,169,14,"log"],[147,19,169,17],[147,20,169,18],[147,40,169,38,"zoneEnemy"],[147,49,169,47],[147,50,169,48,"name"],[147,54,169,52],[147,59,169,57,"zoneEnemy"],[147,68,169,66],[147,69,169,67,"typeId"],[147,75,169,73],[147,113,169,111],[147,114,169,112],[148,8,170,6,"recordEnemyKill"],[148,23,170,21],[148,24,170,22,"zoneEnemy"],[148,33,170,31],[148,34,170,32],[149,6,171,4],[149,7,171,5],[149,9,171,7],[149,10,171,8],[149,11,171,9],[149,12,171,10],[149,13,171,11],[150,4,172,2],[150,5,172,3],[150,7,172,5],[150,8,172,6,"game"],[150,12,172,10],[150,13,172,11,"updateNinja"],[150,24,172,22],[150,26,172,24,"recordEnemyKill"],[150,41,172,39],[150,42,172,40],[150,43,172,41],[152,4,174,2],[153,4,175,2],[153,8,175,8,"handleCombatTick"],[153,24,175,24],[153,27,175,27,"React"],[153,32,175,32],[153,33,175,32,"default"],[153,40,175,32],[153,41,175,33,"useCallback"],[153,52,175,44],[153,53,175,45],[153,59,175,51],[154,6,175,51],[154,10,175,51,"_s2"],[154,13,175,51],[154,16,175,51,"$RefreshSig$"],[154,28,175,51],[155,6,176,4,"console"],[155,13,176,11],[155,14,176,12,"log"],[155,17,176,15],[155,18,176,16],[155,87,176,85],[155,88,176,86],[156,6,178,4],[156,10,178,8,"enemiesToKill"],[156,23,178,36],[156,26,178,39],[156,28,178,41],[156,29,178,42],[156,30,178,43],[158,6,180,4,"_s2"],[158,9,180,4],[158,10,180,4,"setCombatState"],[158,24,180,18],[158,25,180,18,"_s2"],[158,28,180,18],[158,29,180,19,"prev"],[158,33,180,23],[158,37,180,27],[159,8,180,27,"_s2"],[159,11,180,27],[160,8,181,6],[160,12,181,12,"newTick"],[160,19,181,19],[160,22,181,22,"combatEngine"],[160,41,181,34],[160,42,181,34,"combatEngine"],[160,54,181,34],[160,55,181,35,"getCurrentTick"],[160,69,181,49],[160,70,181,50],[160,71,181,51],[161,8,182,6],[161,12,182,12,"newState"],[161,20,182,20],[161,23,182,23],[162,10,182,25],[162,13,182,28,"prev"],[162,17,182,32],[163,10,182,34,"currentTick"],[163,21,182,45],[163,23,182,47,"newTick"],[164,8,182,55],[164,9,182,56],[165,8,184,6],[165,12,184,10],[165,13,184,11,"newState"],[165,21,184,19],[165,22,184,20,"isInCombat"],[165,32,184,30],[165,34,184,32],[165,41,184,39,"newState"],[165,49,184,47],[167,8,186,6],[168,8,187,6,"newState"],[168,16,187,14],[168,17,187,15,"abilityManager"],[168,31,187,29],[168,32,187,30,"updateCooldowns"],[168,47,187,45],[168,48,187,46,"newTick"],[168,55,187,53],[168,56,187,54],[170,8,189,6],[171,8,190,6],[171,12,190,12,"effectResults"],[171,25,190,25],[171,28,190,28,"newState"],[171,36,190,36],[171,37,190,37,"statusEffects"],[171,50,190,50],[171,51,190,51,"processTick"],[171,62,190,62],[171,63,190,63,"newTick"],[171,70,190,70],[171,71,190,71],[173,8,192,6],[174,8,193,6,"effectResults"],[174,21,193,19],[174,22,193,20,"forEach"],[174,29,193,27],[174,30,193,28],[174,31,193,29,"results"],[174,38,193,36],[174,40,193,38,"entityId"],[174,48,193,46],[174,53,193,51],[175,10,194,8],[175,14,194,14,"enemyIndex"],[175,24,194,24],[175,27,194,27,"newState"],[175,35,194,35],[175,36,194,36,"enemies"],[175,43,194,43],[175,44,194,44,"findIndex"],[175,53,194,53],[175,54,194,54,"e"],[175,55,194,55],[175,59,194,59,"e"],[175,60,194,60],[175,61,194,61,"id"],[175,63,194,63],[175,68,194,68,"entityId"],[175,76,194,76],[175,77,194,77],[176,10,195,8],[176,14,195,12,"enemyIndex"],[176,24,195,22],[176,28,195,26],[176,29,195,27],[176,31,195,29],[177,12,196,10,"results"],[177,19,196,17],[177,20,196,18,"forEach"],[177,27,196,25],[177,28,196,26,"result"],[177,34,196,32],[177,38,196,36],[178,14,197,12,"newState"],[178,22,197,20],[178,23,197,21,"enemies"],[178,30,197,28],[178,31,197,29,"enemyIndex"],[178,41,197,39],[178,42,197,40],[178,43,197,41,"health"],[178,49,197,47],[178,53,197,51,"result"],[178,59,197,57],[178,60,197,58,"damage"],[178,66,197,64],[179,14,198,12,"newState"],[179,22,198,20],[179,23,198,21,"enemies"],[179,30,198,28],[179,31,198,29,"enemyIndex"],[179,41,198,39],[179,42,198,40],[179,43,198,41,"lastDamaged"],[179,54,198,52],[179,57,198,55,"newTick"],[179,64,198,62],[180,12,199,10],[180,13,199,11],[180,14,199,12],[181,10,200,8],[182,8,201,6],[182,9,201,7],[182,10,201,8],[184,8,203,6],[185,8,204,6,"newState"],[185,16,204,14],[185,17,204,15,"enemies"],[185,24,204,22],[185,25,204,23,"forEach"],[185,32,204,30],[185,33,204,31,"enemy"],[185,38,204,36],[185,42,204,40],[186,10,205,8],[186,14,205,12],[186,15,205,13,"enemy"],[186,20,205,18],[186,21,205,19,"isBoss"],[186,27,205,25],[186,29,205,27],[187,12,205,29],[188,12,206,10],[189,12,207,10],[189,16,207,16,"MOVEMENT_SPEED"],[189,30,207,30],[189,33,207,33],[189,37,207,37],[189,38,207,38],[189,39,207,39],[190,12,208,10],[190,16,208,16,"SCREEN_WIDTH"],[190,28,208,28],[190,31,208,31],[190,34,208,34],[191,12,209,10],[191,16,209,16,"GAME_AREA_HEIGHT"],[191,32,209,32],[191,35,209,35],[191,38,209,38],[191,39,209,39],[191,40,209,40],[192,12,210,10],[192,16,210,16,"ENEMY_SIZE"],[192,26,210,26],[192,29,210,29],[192,31,210,31],[194,12,212,10],[195,12,213,10],[195,16,213,16,"playerX"],[195,23,213,23],[195,26,213,26,"currentNinjaPosition"],[195,46,213,46],[195,47,213,47,"x"],[195,48,213,48],[196,12,214,10],[196,16,214,16,"playerY"],[196,23,214,23],[196,26,214,26,"currentNinjaPosition"],[196,46,214,46],[196,47,214,47,"y"],[196,48,214,48],[198,12,216,10],[199,12,217,10],[199,16,217,16,"deltaX"],[199,22,217,22],[199,25,217,25,"playerX"],[199,32,217,32],[199,35,217,35,"enemy"],[199,40,217,40],[199,41,217,41,"position"],[199,49,217,49],[199,50,217,50,"x"],[199,51,217,51],[200,12,218,10],[200,16,218,16,"deltaY"],[200,22,218,22],[200,25,218,25,"playerY"],[200,32,218,32],[200,35,218,35,"enemy"],[200,40,218,40],[200,41,218,41,"position"],[200,49,218,49],[200,50,218,50,"y"],[200,51,218,51],[201,12,219,10],[201,16,219,16,"distance"],[201,24,219,24],[201,27,219,27,"Math"],[201,31,219,31],[201,32,219,32,"sqrt"],[201,36,219,36],[201,37,219,37,"deltaX"],[201,43,219,43],[201,46,219,46,"deltaX"],[201,52,219,52],[201,55,219,55,"deltaY"],[201,61,219,61],[201,64,219,64,"deltaY"],[201,70,219,70],[201,71,219,71],[203,12,221,10],[204,12,222,10],[204,16,222,14,"distance"],[204,24,222,22],[204,27,222,25],[204,29,222,27],[204,31,222,29],[205,14,223,12],[206,14,224,12],[206,18,224,18,"normalizedX"],[206,29,224,29],[206,32,224,32,"deltaX"],[206,38,224,38],[206,41,224,41,"distance"],[206,49,224,49],[207,14,225,12],[207,18,225,18,"normalizedY"],[207,29,225,29],[207,32,225,32,"deltaY"],[207,38,225,38],[207,41,225,41,"distance"],[207,49,225,49],[209,14,227,12],[210,14,228,12],[210,18,228,18,"randomFactor"],[210,30,228,30],[210,33,228,33],[210,36,228,36],[210,37,228,37],[210,38,228,38],[211,14,229,12],[211,18,229,18,"finalX"],[211,24,229,24],[211,27,229,27,"normalizedX"],[211,38,229,38],[211,41,229,41],[211,42,229,42,"Math"],[211,46,229,46],[211,47,229,47,"random"],[211,53,229,53],[211,54,229,54],[211,55,229,55],[211,58,229,58],[211,61,229,61],[211,65,229,65,"randomFactor"],[211,77,229,77],[212,14,230,12],[212,18,230,18,"finalY"],[212,24,230,24],[212,27,230,27,"normalizedY"],[212,38,230,38],[212,41,230,41],[212,42,230,42,"Math"],[212,46,230,46],[212,47,230,47,"random"],[212,53,230,53],[212,54,230,54],[212,55,230,55],[212,58,230,58],[212,61,230,61],[212,65,230,65,"randomFactor"],[212,77,230,77],[214,14,232,12],[215,14,233,12],[215,18,233,16,"newX"],[215,22,233,20],[215,25,233,23,"enemy"],[215,30,233,28],[215,31,233,29,"position"],[215,39,233,37],[215,40,233,38,"x"],[215,41,233,39],[215,44,233,43,"finalX"],[215,50,233,49],[215,53,233,52,"MOVEMENT_SPEED"],[215,67,233,67],[216,14,234,12],[216,18,234,16,"newY"],[216,22,234,20],[216,25,234,23,"enemy"],[216,30,234,28],[216,31,234,29,"position"],[216,39,234,37],[216,40,234,38,"y"],[216,41,234,39],[216,44,234,43,"finalY"],[216,50,234,49],[216,53,234,52,"MOVEMENT_SPEED"],[216,67,234,67],[218,14,236,12],[219,14,237,12,"newX"],[219,18,237,16],[219,21,237,19,"Math"],[219,25,237,23],[219,26,237,24,"max"],[219,29,237,27],[219,30,237,28],[219,31,237,29],[219,33,237,31,"Math"],[219,37,237,35],[219,38,237,36,"min"],[219,41,237,39],[219,42,237,40,"SCREEN_WIDTH"],[219,54,237,52],[219,57,237,55,"ENEMY_SIZE"],[219,67,237,65],[219,69,237,67,"newX"],[219,73,237,71],[219,74,237,72],[219,75,237,73],[220,14,238,12,"newY"],[220,18,238,16],[220,21,238,19,"Math"],[220,25,238,23],[220,26,238,24,"max"],[220,29,238,27],[220,30,238,28],[220,31,238,29],[220,33,238,31,"Math"],[220,37,238,35],[220,38,238,36,"min"],[220,41,238,39],[220,42,238,40,"GAME_AREA_HEIGHT"],[220,58,238,56],[220,61,238,59,"ENEMY_SIZE"],[220,71,238,69],[220,73,238,71,"newY"],[220,77,238,75],[220,78,238,76],[220,79,238,77],[222,14,240,12],[223,14,241,12,"enemy"],[223,19,241,17],[223,20,241,18,"position"],[223,28,241,26],[223,29,241,27,"x"],[223,30,241,28],[223,33,241,31,"newX"],[223,37,241,35],[224,14,242,12,"enemy"],[224,19,242,17],[224,20,242,18,"position"],[224,28,242,26],[224,29,242,27,"y"],[224,30,242,28],[224,33,242,31,"newY"],[224,37,242,35],[225,12,243,10],[226,12,244,10],[227,10,245,8],[228,8,246,6],[228,9,246,7],[228,10,246,8],[230,8,248,6],[231,8,249,6],[231,12,249,10],[231,13,249,11,"isManualControlActive"],[231,34,249,32],[231,36,249,34],[232,10,250,8],[232,15,250,13],[232,19,250,17,"i"],[232,20,250,18],[232,23,250,21],[232,24,250,22],[232,26,250,24,"i"],[232,27,250,25],[232,30,250,28],[232,31,250,29],[232,33,250,31,"i"],[232,34,250,32],[232,36,250,34],[232,38,250,36],[233,12,251,10],[233,16,251,14,"newState"],[233,24,251,22],[233,25,251,23,"abilityManager"],[233,39,251,37],[233,40,251,38,"isAbilityReady"],[233,54,251,52],[233,55,251,53,"i"],[233,56,251,54],[233,57,251,55],[233,61,251,59,"newState"],[233,69,251,67],[233,70,251,68,"enemies"],[233,77,251,75],[233,78,251,76,"length"],[233,84,251,82],[233,87,251,85],[233,88,251,86],[233,90,251,88],[234,14,252,12],[234,18,252,16,"newState"],[234,26,252,24],[234,27,252,25,"abilityManager"],[234,41,252,39],[234,42,252,40,"useAbility"],[234,52,252,50],[234,53,252,51,"i"],[234,54,252,52],[234,56,252,54,"newTick"],[234,63,252,61],[234,64,252,62],[234,66,252,64],[235,16,253,14,"castAbility"],[235,27,253,25],[235,28,253,26,"newState"],[235,36,253,34],[235,38,253,36,"i"],[235,39,253,37],[235,40,253,38],[236,14,254,12],[237,12,255,10],[238,10,256,8],[239,8,257,6],[241,8,259,6],[242,8,260,6],[242,12,260,12,"deadEnemies"],[242,23,260,23],[242,26,260,26,"newState"],[242,34,260,34],[242,35,260,35,"enemies"],[242,42,260,42],[242,43,260,43,"filter"],[242,49,260,49],[242,50,260,50,"enemy"],[242,55,260,55],[242,59,260,59,"enemy"],[242,64,260,64],[242,65,260,65,"health"],[242,71,260,71],[242,75,260,75],[242,76,260,76],[242,77,260,77],[243,8,261,6,"enemiesToKill"],[243,21,261,19],[243,24,261,22],[243,25,261,23],[243,28,261,26,"deadEnemies"],[243,39,261,37],[243,40,261,38],[243,41,261,39],[243,42,261,40],[245,8,263,6],[246,8,264,6],[246,12,264,10,"deadEnemies"],[246,23,264,21],[246,24,264,22,"length"],[246,30,264,28],[246,33,264,31],[246,34,264,32],[246,36,264,34],[247,10,265,8,"console"],[247,17,265,15],[247,18,265,16,"log"],[247,21,265,19],[247,22,265,20],[247,49,265,47,"deadEnemies"],[247,60,265,58],[247,61,265,59,"length"],[247,67,265,65],[247,83,265,81],[247,85,265,83,"deadEnemies"],[247,96,265,94],[247,97,265,95,"map"],[247,100,265,98],[247,101,265,99,"e"],[247,102,265,100],[247,106,265,104],[247,109,265,107,"e"],[247,110,265,108],[247,111,265,109,"id"],[247,113,265,111],[247,117,265,115,"e"],[247,118,265,116],[247,119,265,117,"health"],[247,125,265,123],[247,130,265,128],[247,131,265,129],[247,132,265,130],[248,8,266,6],[250,8,268,6],[251,8,269,6],[251,12,269,12,"lowHealthEnemies"],[251,28,269,28],[251,31,269,31,"newState"],[251,39,269,39],[251,40,269,40,"enemies"],[251,47,269,47],[251,48,269,48,"filter"],[251,54,269,54],[251,55,269,55,"enemy"],[251,60,269,60],[251,64,269,64,"enemy"],[251,69,269,69],[251,70,269,70,"health"],[251,76,269,76],[251,80,269,80],[251,82,269,82],[251,86,269,86,"enemy"],[251,91,269,91],[251,92,269,92,"health"],[251,98,269,98],[251,101,269,101],[251,102,269,102],[251,103,269,103],[252,8,270,6],[252,12,270,10,"lowHealthEnemies"],[252,28,270,26],[252,29,270,27,"length"],[252,35,270,33],[252,38,270,36],[252,39,270,37],[252,41,270,39],[253,10,271,8,"console"],[253,17,271,15],[253,18,271,16,"log"],[253,21,271,19],[253,22,271,20],[253,61,271,59],[253,63,271,61,"lowHealthEnemies"],[253,79,271,77],[253,80,271,78,"map"],[253,83,271,81],[253,84,271,82,"e"],[253,85,271,83],[253,89,271,87],[253,92,271,90,"e"],[253,93,271,91],[253,94,271,92,"id"],[253,96,271,94],[253,100,271,98,"e"],[253,101,271,99],[253,102,271,100,"health"],[253,108,271,106],[253,112,271,110,"e"],[253,113,271,111],[253,114,271,112,"maxHealth"],[253,123,271,121],[253,128,271,126],[253,129,271,127],[253,130,271,128],[254,8,272,6],[256,8,274,6],[257,8,275,6],[257,12,275,12,"beforeCount"],[257,23,275,23],[257,26,275,26,"newState"],[257,34,275,34],[257,35,275,35,"enemies"],[257,42,275,42],[257,43,275,43,"length"],[257,49,275,49],[258,8,276,6,"newState"],[258,16,276,14],[258,17,276,15,"enemies"],[258,24,276,22],[258,27,276,25,"newState"],[258,35,276,33],[258,36,276,34,"enemies"],[258,43,276,41],[258,44,276,42,"filter"],[258,50,276,48],[258,51,276,49,"enemy"],[258,56,276,54],[258,60,276,58,"enemy"],[258,65,276,63],[258,66,276,64,"health"],[258,72,276,70],[258,75,276,73],[258,76,276,74],[258,77,276,75],[259,8,277,6],[259,12,277,12,"afterCount"],[259,22,277,22],[259,25,277,25,"newState"],[259,33,277,33],[259,34,277,34,"enemies"],[259,41,277,41],[259,42,277,42,"length"],[259,48,277,48],[260,8,279,6],[260,12,279,10,"beforeCount"],[260,23,279,21],[260,28,279,26,"afterCount"],[260,38,279,36],[260,40,279,38],[261,10,280,8,"console"],[261,17,280,15],[261,18,280,16,"log"],[261,21,280,19],[261,22,280,20],[261,52,280,50,"beforeCount"],[261,63,280,61],[261,66,280,64,"afterCount"],[261,76,280,74],[261,102,280,100],[261,103,280,101],[262,8,281,6],[264,8,283,6],[265,8,284,6],[266,8,285,6],[266,12,285,12,"MAX_ENEMIES"],[266,23,285,23],[266,26,285,26],[266,28,285,28],[267,8,286,6],[267,12,286,12,"MIN_SPAWN_DELAY"],[267,27,286,27],[267,30,286,30],[267,33,286,33],[267,34,286,34],[267,35,286,35],[268,8,287,6],[268,12,287,12,"now"],[268,15,287,15],[268,18,287,18,"Date"],[268,22,287,22],[268,23,287,23,"now"],[268,26,287,26],[268,27,287,27],[268,28,287,28],[269,8,288,6],[269,12,288,12,"hasBoss"],[269,19,288,19],[269,22,288,22,"newState"],[269,30,288,30],[269,31,288,31,"enemies"],[269,38,288,38],[269,39,288,39,"some"],[269,43,288,43],[269,44,288,44,"enemy"],[269,49,288,49],[269,53,288,53,"enemy"],[269,58,288,58],[269,59,288,59,"isBoss"],[269,65,288,65],[269,66,288,66],[271,8,290,6],[272,8,291,6],[272,12,291,10],[272,13,291,11,"newState"],[272,21,291,19],[272,22,291,20,"lastSpawnTime"],[272,35,291,33],[272,37,291,35],[273,10,292,8,"newState"],[273,18,292,16],[273,19,292,17,"lastSpawnTime"],[273,32,292,30],[273,35,292,33,"now"],[273,38,292,36],[274,8,293,6],[275,8,295,6,"console"],[275,15,295,13],[275,16,295,14,"log"],[275,19,295,17],[275,20,295,18],[275,53,295,51,"newState"],[275,61,295,59],[275,62,295,60,"enemies"],[275,69,295,67],[275,70,295,68,"length"],[275,76,295,74],[275,85,295,83,"MAX_ENEMIES"],[275,96,295,94],[275,109,295,107,"hasBoss"],[275,116,295,114],[275,118,295,116],[275,119,295,117],[277,8,297,6],[278,8,298,6],[278,12,298,10],[278,13,298,11,"hasBoss"],[278,20,298,18],[278,24,298,22,"newState"],[278,32,298,30],[278,33,298,31,"enemies"],[278,40,298,38],[278,41,298,39,"length"],[278,47,298,45],[278,50,298,48,"MAX_ENEMIES"],[278,61,298,59],[278,65,298,64,"now"],[278,68,298,67],[278,71,298,70,"newState"],[278,79,298,78],[278,80,298,79,"lastSpawnTime"],[278,93,298,92],[278,97,298,97,"MIN_SPAWN_DELAY"],[278,112,298,112],[278,114,298,114],[279,10,299,8,"console"],[279,17,299,15],[279,18,299,16,"log"],[279,21,299,19],[279,22,299,20],[279,43,299,41,"newState"],[279,51,299,49],[279,52,299,50,"enemies"],[279,59,299,57],[279,60,299,58,"length"],[279,66,299,64],[279,69,299,67],[279,70,299,68],[279,74,299,72,"MAX_ENEMIES"],[279,85,299,83],[279,87,299,85],[279,88,299,86],[280,10,300,8,"spawnTestEnemy"],[280,24,300,22],[280,25,300,23,"newState"],[280,33,300,31],[280,34,300,32],[281,10,301,8,"newState"],[281,18,301,16],[281,19,301,17,"lastSpawnTime"],[281,32,301,30],[281,35,301,33,"now"],[281,38,301,36],[282,8,302,6],[283,8,304,6],[283,15,304,13,"newState"],[283,23,304,21],[284,6,305,4],[284,7,305,5],[284,47,305,6],[286,6,307,4],[287,6,308,4,"console"],[287,13,308,11],[287,14,308,12,"log"],[287,17,308,15],[287,18,308,16],[287,50,308,48,"enemiesToKill"],[287,63,308,61],[287,64,308,62,"length"],[287,70,308,68],[287,101,308,99],[287,102,308,100],[288,6,310,4,"enemiesToKill"],[288,19,310,17],[288,20,310,18,"forEach"],[288,27,310,25],[288,28,310,26],[288,29,310,27,"enemy"],[288,34,310,32],[288,36,310,34,"index"],[288,41,310,39],[288,46,310,44],[289,8,311,6,"console"],[289,15,311,13],[289,16,311,14,"log"],[289,19,311,17],[289,20,311,18],[289,57,311,55,"index"],[289,62,311,60],[289,65,311,63],[289,66,311,64],[289,70,311,68,"enemiesToKill"],[289,83,311,81],[289,84,311,82,"length"],[289,90,311,88],[289,104,311,102,"enemy"],[289,109,311,107],[289,110,311,108,"id"],[289,112,311,110],[289,114,311,112],[289,115,311,113],[290,8,312,6,"handleEnemyKill"],[290,23,312,21],[290,24,312,22,"enemy"],[290,29,312,27],[290,30,312,28],[291,6,313,4],[291,7,313,5],[291,8,313,6],[292,4,314,2],[292,5,314,3],[292,7,314,5],[292,8,314,6,"handleEnemyKill"],[292,23,314,21],[292,24,314,22],[292,25,314,23],[292,26,314,24],[292,27,314,25],[294,4,316,2],[295,4,317,2],[295,8,317,8,"findClosestEnemyInternal"],[295,32,317,32],[295,35,317,36,"enemies"],[295,42,317,58],[295,46,317,83],[296,6,318,4],[296,10,318,8,"enemies"],[296,17,318,15],[296,18,318,16,"length"],[296,24,318,22],[296,29,318,27],[296,30,318,28],[296,32,318,30],[296,39,318,37],[296,43,318,41],[298,6,320,4],[299,6,321,4],[299,10,321,10,"SCREEN_WIDTH"],[299,22,321,22],[299,25,321,25],[299,28,321,28],[300,6,322,4],[300,10,322,10,"GAME_AREA_HEIGHT"],[300,26,322,26],[300,29,322,29],[300,32,322,32],[300,35,322,35],[300,38,322,38],[300,39,322,39],[300,40,322,40],[301,6,323,4],[301,10,323,10,"ninjaX"],[301,16,323,16],[301,19,323,19,"SCREEN_WIDTH"],[301,31,323,31],[301,34,323,34],[301,35,323,35],[302,6,324,4],[302,10,324,10,"ninjaY"],[302,16,324,16],[302,19,324,19,"GAME_AREA_HEIGHT"],[302,35,324,35],[302,38,324,38],[302,39,324,39],[303,6,326,4],[303,10,326,8,"closestEnemy"],[303,22,326,20],[303,25,326,23,"enemies"],[303,32,326,30],[303,33,326,31],[303,34,326,32],[303,35,326,33],[304,6,327,4],[304,10,327,8,"closestDistance"],[304,25,327,23],[304,28,327,26,"Infinity"],[304,36,327,34],[305,6,329,4,"enemies"],[305,13,329,11],[305,14,329,12,"forEach"],[305,21,329,19],[305,22,329,20,"enemy"],[305,27,329,25],[305,31,329,29],[306,8,330,6],[306,12,330,12,"distance"],[306,20,330,20],[306,23,330,23,"Math"],[306,27,330,27],[306,28,330,28,"sqrt"],[306,32,330,32],[306,33,331,8,"Math"],[306,37,331,12],[306,38,331,13,"pow"],[306,41,331,16],[306,42,331,17,"enemy"],[306,47,331,22],[306,48,331,23,"position"],[306,56,331,31],[306,57,331,32,"x"],[306,58,331,33],[306,61,331,36,"ninjaX"],[306,67,331,42],[306,69,331,44],[306,70,331,45],[306,71,331,46],[306,74,332,8,"Math"],[306,78,332,12],[306,79,332,13,"pow"],[306,82,332,16],[306,83,332,17,"enemy"],[306,88,332,22],[306,89,332,23,"position"],[306,97,332,31],[306,98,332,32,"y"],[306,99,332,33],[306,102,332,36,"ninjaY"],[306,108,332,42],[306,110,332,44],[306,111,332,45],[306,112,333,6],[306,113,333,7],[307,8,335,6],[307,12,335,10,"distance"],[307,20,335,18],[307,23,335,21,"closestDistance"],[307,38,335,36],[307,40,335,38],[308,10,336,8,"closestDistance"],[308,25,336,23],[308,28,336,26,"distance"],[308,36,336,34],[309,10,337,8,"closestEnemy"],[309,22,337,20],[309,25,337,23,"enemy"],[309,30,337,28],[310,8,338,6],[311,6,339,4],[311,7,339,5],[311,8,339,6],[312,6,341,4,"console"],[312,13,341,11],[312,14,341,12,"log"],[312,17,341,15],[312,18,341,16],[312,60,341,58,"closestDistance"],[312,75,341,73],[312,76,341,74,"toFixed"],[312,83,341,81],[312,84,341,82],[312,85,341,83],[312,86,341,84],[312,88,341,86],[312,89,341,87],[313,6,342,4],[313,13,342,11,"closestEnemy"],[313,25,342,23],[314,4,343,2],[314,5,343,3],[316,4,345,2],[317,4,346,2],[317,8,346,8,"findClosestEnemy"],[317,24,346,24],[317,27,346,27,"findClosestEnemy"],[317,28,346,27],[317,33,346,53],[318,6,347,4],[318,13,347,11,"findClosestEnemyInternal"],[318,37,347,35],[318,38,347,36,"combatState"],[318,49,347,47],[318,50,347,48,"enemies"],[318,57,347,55],[318,58,347,56],[319,4,348,2],[319,5,348,3],[321,4,350,2],[322,4,351,2],[322,8,351,2,"_useState7"],[322,18,351,2],[322,21,351,58],[322,25,351,58,"useState"],[322,31,351,66],[322,32,351,66,"useState"],[322,40,351,66],[322,42,351,91],[323,8,351,93,"x"],[323,9,351,94],[323,11,351,96],[323,12,351,97],[324,8,351,99,"y"],[324,9,351,100],[324,11,351,102],[325,6,351,104],[325,7,351,105],[325,8,351,106],[326,6,351,106,"_useState8"],[326,16,351,106],[326,23,351,106,"_slicedToArray"],[326,37,351,106],[326,38,351,106,"default"],[326,45,351,106],[326,47,351,106,"_useState7"],[326,57,351,106],[327,6,351,9,"currentNinjaPosition"],[327,26,351,29],[327,29,351,29,"_useState8"],[327,39,351,29],[328,6,351,31,"setCurrentNinjaPosition"],[328,29,351,54],[328,32,351,54,"_useState8"],[328,42,351,54],[329,4,352,2],[329,8,352,2,"_useState9"],[329,18,352,2],[329,21,352,60],[329,25,352,60,"useState"],[329,31,352,68],[329,32,352,68,"useState"],[329,40,352,68],[329,42,352,69],[329,47,352,74],[329,48,352,75],[330,6,352,75,"_useState0"],[330,16,352,75],[330,23,352,75,"_slicedToArray"],[330,37,352,75],[330,38,352,75,"default"],[330,45,352,75],[330,47,352,75,"_useState9"],[330,57,352,75],[331,6,352,9,"isManualControlActive"],[331,27,352,30],[331,30,352,30,"_useState0"],[331,40,352,30],[332,6,352,32,"setIsManualControlActive"],[332,30,352,56],[332,33,352,56,"_useState0"],[332,43,352,56],[334,4,354,2],[335,4,355,2],[335,8,355,8,"updateNinjaPosition"],[335,27,355,27],[335,30,355,30],[335,34,355,30,"useCallback"],[335,40,355,41],[335,41,355,41,"useCallback"],[335,52,355,41],[335,54,355,43,"newPosition"],[335,65,355,78],[335,69,355,83],[336,6,356,4,"setCurrentNinjaPosition"],[336,29,356,27],[336,30,356,28,"newPosition"],[336,41,356,39],[336,42,356,40],[337,4,357,2],[337,5,357,3],[337,7,357,5],[337,9,357,7],[337,10,357,8],[339,4,359,2],[340,4,360,2],[340,8,360,8,"setManualControlActive"],[340,30,360,30],[340,33,360,33],[340,37,360,33,"useCallback"],[340,43,360,44],[340,44,360,44,"useCallback"],[340,55,360,44],[340,57,360,46,"active"],[340,63,360,61],[340,67,360,66],[341,6,361,4,"setIsManualControlActive"],[341,30,361,28],[341,31,361,29,"active"],[341,37,361,35],[341,38,361,36],[342,6,362,4,"console"],[342,13,362,11],[342,14,362,12,"log"],[342,17,362,15],[342,18,362,16],[342,39,362,37,"active"],[342,45,362,43],[342,48,362,46],[342,59,362,57],[342,62,362,60],[342,75,362,73],[342,88,362,86,"active"],[342,94,362,92],[342,97,362,95],[342,105,362,103],[342,108,362,106],[342,117,362,115],[342,119,362,117],[342,120,362,118],[343,4,363,2],[343,5,363,3],[343,7,363,5],[343,9,363,7],[343,10,363,8],[345,4,365,2],[346,4,366,2],[346,8,366,8,"handleProjectileHit"],[346,27,366,27],[346,30,366,31,"projectile"],[346,40,366,59],[346,44,366,64],[347,6,367,4,"console"],[347,13,367,11],[347,14,367,12,"log"],[347,17,367,15],[347,18,367,16],[347,35,367,33,"projectile"],[347,45,367,43],[347,46,367,44,"id"],[347,48,367,46],[347,62,367,60,"projectile"],[347,72,367,70],[347,73,367,71,"targetEnemyId"],[347,86,367,84],[347,94,367,92,"projectile"],[347,104,367,102],[347,105,367,103,"damage"],[347,111,367,109],[347,120,367,118],[347,121,367,119],[348,6,369,4,"setCombatState"],[348,20,369,18],[348,21,369,19,"prev"],[348,25,369,23],[348,29,369,27],[349,8,370,6],[349,12,370,12,"newState"],[349,20,370,20],[349,23,370,23],[350,10,370,25],[350,13,370,28,"prev"],[351,8,370,33],[351,9,370,34],[353,8,372,6],[354,8,373,6],[354,12,373,12,"enemyIndex"],[354,22,373,22],[354,25,373,25,"newState"],[354,33,373,33],[354,34,373,34,"enemies"],[354,41,373,41],[354,42,373,42,"findIndex"],[354,51,373,51],[354,52,373,52,"e"],[354,53,373,53],[354,57,373,57,"e"],[354,58,373,58],[354,59,373,59,"id"],[354,61,373,61],[354,66,373,66,"projectile"],[354,76,373,76],[354,77,373,77,"targetEnemyId"],[354,90,373,90],[354,91,373,91],[355,8,374,6],[355,12,374,10,"enemyIndex"],[355,22,374,20],[355,26,374,24],[355,27,374,25],[355,29,374,27],[356,10,375,8,"newState"],[356,18,375,16],[356,19,375,17,"enemies"],[356,26,375,24],[356,29,375,27],[356,30,375,28],[356,33,375,31,"newState"],[356,41,375,39],[356,42,375,40,"enemies"],[356,49,375,47],[356,50,375,48],[357,10,376,8,"newState"],[357,18,376,16],[357,19,376,17,"enemies"],[357,26,376,24],[357,27,376,25,"enemyIndex"],[357,37,376,35],[357,38,376,36],[357,41,376,39],[358,12,377,10],[358,15,377,13,"newState"],[358,23,377,21],[358,24,377,22,"enemies"],[358,31,377,29],[358,32,377,30,"enemyIndex"],[358,42,377,40],[358,43,377,41],[359,12,378,10,"health"],[359,18,378,16],[359,20,378,18,"newState"],[359,28,378,26],[359,29,378,27,"enemies"],[359,36,378,34],[359,37,378,35,"enemyIndex"],[359,47,378,45],[359,48,378,46],[359,49,378,47,"health"],[359,55,378,53],[359,58,378,56,"projectile"],[359,68,378,66],[359,69,378,67,"damage"],[359,75,378,73],[360,12,379,10,"lastDamaged"],[360,23,379,21],[360,25,379,23,"combatEngine"],[360,44,379,35],[360,45,379,35,"combatEngine"],[360,57,379,35],[360,58,379,36,"getCurrentTick"],[360,72,379,50],[360,73,379,51],[361,10,380,8],[361,11,380,9],[362,10,382,8,"console"],[362,17,382,15],[362,18,382,16,"log"],[362,21,382,19],[362,22,382,20],[362,34,382,32,"projectile"],[362,44,382,42],[362,45,382,43,"targetEnemyId"],[362,58,382,56],[362,70,382,68,"newState"],[362,78,382,76],[362,79,382,77,"enemies"],[362,86,382,84],[362,87,382,85,"enemyIndex"],[362,97,382,95],[362,98,382,96],[362,99,382,97,"health"],[362,105,382,103],[362,109,382,107,"newState"],[362,117,382,115],[362,118,382,116,"enemies"],[362,125,382,123],[362,126,382,124,"enemyIndex"],[362,136,382,134],[362,137,382,135],[362,138,382,136,"maxHealth"],[362,147,382,145],[362,149,382,147],[362,150,382,148],[363,8,383,6],[364,8,385,6],[364,15,385,13,"newState"],[364,23,385,21],[365,6,386,4],[365,7,386,5],[365,8,386,6],[367,6,388,4],[368,6,389,4,"setProjectiles"],[368,20,389,18],[368,21,389,19,"prev"],[368,25,389,23],[368,29,389,27,"prev"],[368,33,389,31],[368,34,389,32,"filter"],[368,40,389,38],[368,41,389,39,"p"],[368,42,389,40],[368,46,389,44,"p"],[368,47,389,45],[368,48,389,46,"id"],[368,50,389,48],[368,55,389,53,"projectile"],[368,65,389,63],[368,66,389,64,"id"],[368,68,389,66],[368,69,389,67],[368,70,389,68],[369,4,390,2],[369,5,390,3],[371,4,392,2],[372,4,393,2],[372,8,393,8,"castAbility"],[372,19,393,19],[372,22,393,22,"castAbility"],[372,23,393,23,"state"],[372,28,393,41],[372,30,393,43,"slotIndex"],[372,39,393,60],[372,44,393,65],[373,6,394,4],[373,10,394,10,"deck"],[373,14,394,14],[373,17,394,17,"state"],[373,22,394,22],[373,23,394,23,"abilityManager"],[373,37,394,37],[373,38,394,38,"getDeck"],[373,45,394,45],[373,46,394,46],[373,47,394,47],[374,6,395,4],[374,10,395,10,"ability"],[374,17,395,17],[374,20,395,20,"deck"],[374,24,395,24],[374,25,395,25,"slots"],[374,30,395,30],[374,31,395,31,"slotIndex"],[374,40,395,40],[374,41,395,41],[375,6,396,4],[375,10,396,8],[375,11,396,9,"ability"],[375,18,396,16],[375,20,396,18],[377,6,398,4],[378,6,399,4],[378,10,399,8,"damage"],[378,16,399,14],[378,19,399,17,"ability"],[378,26,399,24],[378,27,399,25,"stats"],[378,32,399,30],[378,33,399,31,"baseDamage"],[378,43,399,41],[380,6,401,4],[381,6,402,4,"deck"],[381,10,402,8],[381,11,402,9,"activeSynergies"],[381,26,402,24],[381,27,402,25,"forEach"],[381,34,402,32],[381,35,402,33,"synergy"],[381,42,402,40],[381,46,402,44],[382,8,403,6],[382,12,403,10,"synergy"],[382,19,403,17],[382,20,403,18,"bonus"],[382,25,403,23],[382,26,403,24,"damageBonus"],[382,37,403,35],[382,41,404,10,"synergy"],[382,48,404,17],[382,49,404,18,"requiredTags"],[382,61,404,30],[382,62,404,31,"some"],[382,66,404,35],[382,67,404,36,"tag"],[382,70,404,39],[382,74,404,43,"ability"],[382,81,404,50],[382,82,404,51,"tags"],[382,86,404,55],[382,87,404,56,"includes"],[382,95,404,64],[382,96,404,65,"tag"],[382,99,404,68],[382,100,404,69],[382,101,404,70],[382,103,404,72],[383,10,405,8,"damage"],[383,16,405,14],[383,20,405,19],[383,21,405,20],[383,24,405,23,"synergy"],[383,31,405,30],[383,32,405,31,"bonus"],[383,37,405,36],[383,38,405,37,"damageBonus"],[383,49,405,48],[383,52,405,51],[383,55,405,55],[384,8,406,6],[385,6,407,4],[385,7,407,5],[385,8,407,6],[387,6,409,4],[388,6,410,4],[388,10,410,10,"isAOE"],[388,15,410,15],[388,18,410,18,"ability"],[388,25,410,25],[388,26,410,26,"effects"],[388,33,410,33],[388,34,410,34,"includes"],[388,42,410,42],[388,43,410,43],[388,48,410,48],[388,49,410,49],[388,53,410,53,"ability"],[388,60,410,60],[388,61,410,61,"stats"],[388,66,410,66],[388,67,410,67,"aoeRadius"],[388,76,410,76],[389,6,412,4],[389,10,412,8,"isAOE"],[389,15,412,13],[389,17,412,15],[390,8,413,6,"console"],[390,15,413,13],[390,16,413,14,"log"],[390,19,413,17],[390,20,413,18],[390,39,413,37,"ability"],[390,46,413,44],[390,47,413,45,"name"],[390,51,413,49],[390,67,413,65,"ability"],[390,74,413,72],[390,75,413,73,"stats"],[390,80,413,78],[390,81,413,79,"aoeRadius"],[390,90,413,88],[390,92,413,90],[390,93,413,91],[392,8,415,6],[393,8,416,6],[393,12,416,12,"ninjaX"],[393,18,416,18],[393,21,416,21,"currentNinjaPosition"],[393,41,416,41],[393,42,416,42,"x"],[393,43,416,43],[393,46,416,46],[393,48,416,48],[393,49,416,49],[393,50,416,50],[394,8,417,6],[394,12,417,12,"ninjaY"],[394,18,417,18],[394,21,417,21,"currentNinjaPosition"],[394,41,417,41],[394,42,417,42,"y"],[394,43,417,43],[394,46,417,46],[394,48,417,48],[395,8,418,6],[395,12,418,12,"aoeRadius"],[395,21,418,21],[395,24,418,24,"ability"],[395,31,418,31],[395,32,418,32,"stats"],[395,37,418,37],[395,38,418,38,"aoeRadius"],[395,47,418,47],[396,8,420,6],[396,12,420,12,"enemiesInRange"],[396,26,420,26],[396,29,420,29,"state"],[396,34,420,34],[396,35,420,35,"enemies"],[396,42,420,42],[396,43,420,43,"filter"],[396,49,420,49],[396,50,420,50,"enemy"],[396,55,420,55],[396,59,420,59],[397,10,421,8],[397,14,421,14,"enemyX"],[397,20,421,20],[397,23,421,23,"enemy"],[397,28,421,28],[397,29,421,29,"position"],[397,37,421,37],[397,38,421,38,"x"],[397,39,421,39],[397,42,421,42],[397,46,421,46],[397,47,421,47],[397,48,421,48],[398,10,422,8],[398,14,422,14,"enemyY"],[398,20,422,20],[398,23,422,23,"enemy"],[398,28,422,28],[398,29,422,29,"position"],[398,37,422,37],[398,38,422,38,"y"],[398,39,422,39],[398,42,422,42],[398,46,422,46],[399,10,423,8],[399,14,423,14,"distance"],[399,22,423,22],[399,25,423,25,"Math"],[399,29,423,29],[399,30,423,30,"sqrt"],[399,34,423,34],[399,35,423,35,"Math"],[399,39,423,39],[399,40,423,40,"pow"],[399,43,423,43],[399,44,423,44,"enemyX"],[399,50,423,50],[399,53,423,53,"ninjaX"],[399,59,423,59],[399,61,423,61],[399,62,423,62],[399,63,423,63],[399,66,423,66,"Math"],[399,70,423,70],[399,71,423,71,"pow"],[399,74,423,74],[399,75,423,75,"enemyY"],[399,81,423,81],[399,84,423,84,"ninjaY"],[399,90,423,90],[399,92,423,92],[399,93,423,93],[399,94,423,94],[399,95,423,95],[400,10,424,8],[400,17,424,15,"distance"],[400,25,424,23],[400,29,424,27,"aoeRadius"],[400,38,424,36],[401,8,425,6],[401,9,425,7],[401,10,425,8],[402,8,427,6,"console"],[402,15,427,13],[402,16,427,14,"log"],[402,19,427,17],[402,20,427,18],[402,45,427,43,"enemiesInRange"],[402,59,427,57],[402,60,427,58,"length"],[402,66,427,64],[402,88,427,86,"aoeRadius"],[402,97,427,95],[402,107,427,105],[402,108,427,106],[404,8,429,6],[405,8,430,6,"enemiesInRange"],[405,22,430,20],[405,23,430,21,"forEach"],[405,30,430,28],[405,31,430,29,"enemy"],[405,36,430,34],[405,40,430,38],[406,10,431,8],[406,14,431,14,"damageResult"],[406,26,431,26],[406,29,431,29,"DamageCalculator"],[406,48,431,45],[406,49,431,45,"DamageCalculator"],[406,65,431,45],[406,66,431,46,"calculateDamage"],[406,81,431,61],[406,82,431,62,"damage"],[406,88,431,68],[406,90,431,70,"state"],[406,95,431,75],[406,96,431,76,"playerStats"],[406,107,431,87],[406,109,431,89,"enemy"],[406,114,431,94],[406,115,431,95,"stats"],[406,120,431,100],[406,121,431,101],[407,10,432,8,"createProjectile"],[407,26,432,24],[407,27,432,25,"enemy"],[407,32,432,30],[407,34,432,32,"damageResult"],[407,46,432,44],[407,47,432,45,"damage"],[407,53,432,51],[407,55,432,53,"currentNinjaPosition"],[407,75,432,73],[407,77,432,75],[408,12,433,10,"id"],[408,14,433,12],[408,16,433,14,"ability"],[408,23,433,21],[408,24,433,22,"id"],[408,26,433,24],[409,12,434,10,"name"],[409,16,434,14],[409,18,434,16,"ability"],[409,25,434,23],[409,26,434,24,"name"],[409,30,434,28],[410,12,435,10,"icon"],[410,16,435,14],[410,18,435,16,"ability"],[410,25,435,23],[410,26,435,24,"icon"],[411,10,436,8],[411,11,436,9],[411,12,436,10],[412,10,438,8,"console"],[412,17,438,15],[412,18,438,16,"log"],[412,21,438,19],[412,22,438,20],[412,37,438,35,"enemy"],[412,42,438,40],[412,43,438,41,"name"],[412,47,438,45],[412,55,438,53,"damageResult"],[412,67,438,65],[412,68,438,66,"damage"],[412,74,438,72],[412,83,438,81],[412,84,438,82],[413,8,439,6],[413,9,439,7],[413,10,439,8],[414,8,441,6,"console"],[414,15,441,13],[414,16,441,14,"log"],[414,19,441,17],[414,20,441,18],[414,26,441,24,"ability"],[414,33,441,31],[414,34,441,32,"name"],[414,38,441,36],[414,56,441,54,"enemiesInRange"],[414,70,441,68],[414,71,441,69,"length"],[414,77,441,75],[414,93,441,91,"damage"],[414,99,441,97],[414,118,441,116],[414,119,441,117],[415,6,443,4],[415,7,443,5],[415,13,443,11],[416,8,444,6],[417,8,445,6],[417,12,445,12,"target"],[417,18,445,18],[417,21,445,21,"findClosestEnemyInternal"],[417,45,445,45],[417,46,445,46,"state"],[417,51,445,51],[417,52,445,52,"enemies"],[417,59,445,59],[417,60,445,60],[418,8,446,6],[418,12,446,10],[418,13,446,11,"target"],[418,19,446,17],[418,21,446,19],[419,8,448,6],[419,12,448,12,"damageResult"],[419,24,448,24],[419,27,448,27,"DamageCalculator"],[419,46,448,43],[419,47,448,43,"DamageCalculator"],[419,63,448,43],[419,64,448,44,"calculateDamage"],[419,79,448,59],[419,80,448,60,"damage"],[419,86,448,66],[419,88,448,68,"state"],[419,93,448,73],[419,94,448,74,"playerStats"],[419,105,448,85],[419,107,448,87,"target"],[419,113,448,93],[419,114,448,94,"stats"],[419,119,448,99],[419,120,448,100],[421,8,450,6],[422,8,451,6,"createProjectile"],[422,24,451,22],[422,25,451,23,"target"],[422,31,451,29],[422,33,451,31,"damageResult"],[422,45,451,43],[422,46,451,44,"damage"],[422,52,451,50],[422,54,451,52,"currentNinjaPosition"],[422,74,451,72],[422,76,451,74],[423,10,452,8,"id"],[423,12,452,10],[423,14,452,12,"ability"],[423,21,452,19],[423,22,452,20,"id"],[423,24,452,22],[424,10,453,8,"name"],[424,14,453,12],[424,16,453,14,"ability"],[424,23,453,21],[424,24,453,22,"name"],[424,28,453,26],[425,10,454,8,"icon"],[425,14,454,12],[425,16,454,14,"ability"],[425,23,454,21],[425,24,454,22,"icon"],[426,8,455,6],[426,9,455,7],[426,10,455,8],[427,8,457,6,"console"],[427,15,457,13],[427,16,457,14,"log"],[427,19,457,17],[427,20,457,18],[427,26,457,24,"ability"],[427,33,457,31],[427,34,457,32,"name"],[427,38,457,36],[427,66,457,64,"damageResult"],[427,78,457,76],[427,79,457,77,"damage"],[427,85,457,83],[427,95,457,93,"damageResult"],[427,107,457,105],[427,108,457,106,"isCritical"],[427,118,457,116],[427,121,457,119],[427,131,457,129],[427,134,457,132],[427,136,457,134],[427,138,457,136],[427,139,457,137],[428,6,458,4],[430,6,460,4],[431,6,461,4],[431,10,461,8,"ability"],[431,17,461,15],[431,18,461,16,"effects"],[431,25,461,23],[431,26,461,24,"includes"],[431,34,461,32],[431,35,461,33],[431,40,461,38],[431,41,461,39],[431,45,461,43,"ability"],[431,52,461,50],[431,53,461,51,"stats"],[431,58,461,56],[431,59,461,57,"duration"],[431,67,461,65],[431,69,461,67],[432,8,462,6],[432,12,462,12,"targets"],[432,19,462,19],[432,22,462,22,"isAOE"],[432,27,462,27],[432,30,463,8,"state"],[432,35,463,13],[432,36,463,14,"enemies"],[432,43,463,21],[432,44,463,22,"filter"],[432,50,463,28],[432,51,463,29,"enemy"],[432,56,463,34],[432,60,463,38],[433,10,464,10],[433,14,464,16,"ninjaX"],[433,20,464,22],[433,23,464,25,"currentNinjaPosition"],[433,43,464,45],[433,44,464,46,"x"],[433,45,464,47],[433,48,464,50],[433,50,464,52],[434,10,465,10],[434,14,465,16,"ninjaY"],[434,20,465,22],[434,23,465,25,"currentNinjaPosition"],[434,43,465,45],[434,44,465,46,"y"],[434,45,465,47],[434,48,465,50],[434,50,465,52],[435,10,466,10],[435,14,466,16,"enemyX"],[435,20,466,22],[435,23,466,25,"enemy"],[435,28,466,30],[435,29,466,31,"position"],[435,37,466,39],[435,38,466,40,"x"],[435,39,466,41],[435,42,466,44],[435,46,466,48],[436,10,467,10],[436,14,467,16,"enemyY"],[436,20,467,22],[436,23,467,25,"enemy"],[436,28,467,30],[436,29,467,31,"position"],[436,37,467,39],[436,38,467,40,"y"],[436,39,467,41],[436,42,467,44],[436,46,467,48],[437,10,468,10],[437,14,468,16,"distance"],[437,22,468,24],[437,25,468,27,"Math"],[437,29,468,31],[437,30,468,32,"sqrt"],[437,34,468,36],[437,35,468,37,"Math"],[437,39,468,41],[437,40,468,42,"pow"],[437,43,468,45],[437,44,468,46,"enemyX"],[437,50,468,52],[437,53,468,55,"ninjaX"],[437,59,468,61],[437,61,468,63],[437,62,468,64],[437,63,468,65],[437,66,468,68,"Math"],[437,70,468,72],[437,71,468,73,"pow"],[437,74,468,76],[437,75,468,77,"enemyY"],[437,81,468,83],[437,84,468,86,"ninjaY"],[437,90,468,92],[437,92,468,94],[437,93,468,95],[437,94,468,96],[437,95,468,97],[438,10,469,10],[438,17,469,17,"distance"],[438,25,469,25],[438,29,469,29,"ability"],[438,36,469,36],[438,37,469,37,"stats"],[438,42,469,42],[438,43,469,43,"aoeRadius"],[438,52,469,52],[439,8,470,8],[439,9,470,9],[439,10,470,10],[439,13,471,8],[439,14,471,9,"findClosestEnemyInternal"],[439,38,471,33],[439,39,471,34,"state"],[439,44,471,39],[439,45,471,40,"enemies"],[439,52,471,47],[439,53,471,48],[439,54,471,49],[439,55,471,50,"filter"],[439,61,471,56],[439,62,471,57,"Boolean"],[439,69,471,64],[439,70,471,65],[440,8,473,6,"targets"],[440,15,473,13],[440,16,473,14,"forEach"],[440,23,473,21],[440,24,473,22,"target"],[440,30,473,28],[440,34,473,32],[441,10,474,8,"state"],[441,15,474,13],[441,16,474,14,"statusEffects"],[441,29,474,27],[441,30,474,28,"addEffect"],[441,39,474,37],[441,40,474,38,"target"],[441,46,474,44],[441,47,474,45,"id"],[441,49,474,47],[441,51,474,49],[442,12,475,10,"id"],[442,14,475,12],[442,16,475,14],[442,19,475,17,"ability"],[442,26,475,24],[442,27,475,25,"id"],[442,29,475,27],[442,35,475,33],[443,12,476,10,"type"],[443,16,476,14],[443,18,476,16],[443,23,476,21],[444,12,477,10,"remainingTicks"],[444,26,477,24],[444,28,477,26,"Math"],[444,32,477,30],[444,33,477,31,"floor"],[444,38,477,36],[444,39,477,37,"ability"],[444,46,477,44],[444,47,477,45,"stats"],[444,52,477,50],[444,53,477,51,"duration"],[444,61,477,59],[444,64,477,62],[444,66,477,64],[444,67,477,65],[445,12,478,10,"tickInterval"],[445,24,478,22],[445,26,478,24],[445,28,478,26],[446,12,479,10,"lastTick"],[446,20,479,18],[446,22,479,20,"state"],[446,27,479,25],[446,28,479,26,"currentTick"],[446,39,479,37],[447,12,480,10,"value"],[447,17,480,15],[447,19,480,17,"Math"],[447,23,480,21],[447,24,480,22,"floor"],[447,29,480,27],[447,30,480,28,"damage"],[447,36,480,34],[447,39,480,37],[447,42,480,40],[447,43,480,41],[448,12,481,10,"stackable"],[448,21,481,19],[448,23,481,21],[449,10,482,8],[449,11,482,9],[449,12,482,10],[450,8,483,6],[450,9,483,7],[450,10,483,8],[451,6,484,4],[452,4,485,2],[452,5,485,3],[454,4,487,2],[455,4,488,2],[455,8,488,8,"createProjectile"],[455,24,488,24],[455,27,488,27,"createProjectile"],[455,28,488,28,"targetEnemy"],[455,39,488,52],[455,41,488,54,"damage"],[455,47,488,68],[455,49,488,70,"ninjaPos"],[455,57,488,103],[455,59,488,105,"abilityInfo"],[455,70,488,159],[455,75,488,164],[456,6,489,4],[456,10,489,10,"SCREEN_WIDTH"],[456,22,489,22],[456,25,489,25],[456,28,489,28],[457,6,490,4],[457,10,490,10,"GAME_AREA_HEIGHT"],[457,26,490,26],[457,29,490,29],[457,32,490,32],[457,35,490,35],[457,38,490,38],[457,39,490,39],[457,40,490,40],[458,6,491,4],[458,10,491,10,"NINJA_SIZE"],[458,20,491,20],[458,23,491,23],[458,25,491,25],[460,6,493,4],[461,6,494,4],[461,10,494,10,"ninjaX"],[461,16,494,16],[461,19,494,19,"ninjaPos"],[461,27,494,27],[461,30,494,30,"ninjaPos"],[461,38,494,38],[461,39,494,39,"x"],[461,40,494,40],[461,43,494,43,"NINJA_SIZE"],[461,53,494,53],[461,56,494,56],[461,57,494,57],[461,60,494,60,"SCREEN_WIDTH"],[461,72,494,72],[461,75,494,75],[461,76,494,76],[462,6,495,4],[462,10,495,10,"ninjaY"],[462,16,495,16],[462,19,495,19,"ninjaPos"],[462,27,495,27],[462,30,495,30,"ninjaPos"],[462,38,495,38],[462,39,495,39,"y"],[462,40,495,40],[462,43,495,43,"NINJA_SIZE"],[462,53,495,53],[462,56,495,56],[462,57,495,57],[462,60,495,60,"GAME_AREA_HEIGHT"],[462,76,495,76],[462,79,495,79],[462,80,495,80],[463,6,496,4],[463,10,496,10,"ENEMY_SIZE"],[463,20,496,20],[463,23,496,23],[463,25,496,25],[464,6,498,4],[464,10,498,10,"projectile"],[464,20,498,38],[464,23,498,41],[465,8,499,6,"id"],[465,10,499,8],[465,12,499,10],[465,20,499,18,"Date"],[465,24,499,22],[465,25,499,23,"now"],[465,28,499,26],[465,29,499,27],[465,30,499,28],[465,34,499,32,"Math"],[465,38,499,36],[465,39,499,37,"random"],[465,45,499,43],[465,46,499,44],[465,47,499,45],[465,49,499,47],[466,8,500,6,"x"],[466,9,500,7],[466,11,500,9,"ninjaX"],[466,17,500,15],[467,8,501,6,"y"],[467,9,501,7],[467,11,501,9,"ninjaY"],[467,17,501,15],[468,8,502,6,"targetX"],[468,15,502,13],[468,17,502,15,"targetEnemy"],[468,28,502,26],[468,29,502,27,"position"],[468,37,502,35],[468,38,502,36,"x"],[468,39,502,37],[468,42,502,40,"ENEMY_SIZE"],[468,52,502,50],[468,55,502,53],[468,56,502,54],[469,8,503,6,"targetY"],[469,15,503,13],[469,17,503,15,"targetEnemy"],[469,28,503,26],[469,29,503,27,"position"],[469,37,503,35],[469,38,503,36,"y"],[469,39,503,37],[469,42,503,40,"ENEMY_SIZE"],[469,52,503,50],[469,55,503,53],[469,56,503,54],[470,8,504,6,"targetEnemyId"],[470,21,504,19],[470,23,504,21,"targetEnemy"],[470,34,504,32],[470,35,504,33,"id"],[470,37,504,35],[471,8,505,6,"damage"],[471,14,505,12],[471,16,505,14,"damage"],[471,22,505,20],[472,8,506,6,"startTime"],[472,17,506,15],[472,19,506,17,"Date"],[472,23,506,21],[472,24,506,22,"now"],[472,27,506,25],[472,28,506,26],[472,29,506,27],[473,8,507,6,"duration"],[473,16,507,14],[473,18,507,16],[473,21,507,19],[474,8,507,21],[475,8,508,6],[476,8,509,6,"abilityId"],[476,17,509,15],[476,19,509,17,"abilityInfo"],[476,30,509,28],[476,32,509,30,"id"],[476,34,509,32],[476,38,509,36],[476,54,509,52],[477,8,510,6,"abilityName"],[477,19,510,17],[477,21,510,19,"abilityInfo"],[477,32,510,30],[477,34,510,32,"name"],[477,38,510,36],[477,42,510,40],[477,58,510,56],[478,8,511,6,"abilityIcon"],[478,19,511,17],[478,21,511,19,"abilityInfo"],[478,32,511,30],[478,34,511,32,"icon"],[478,38,511,36],[478,42,511,40],[478,46,511,44],[478,47,511,46],[479,6,512,4],[479,7,512,5],[480,6,514,4,"console"],[480,13,514,11],[480,14,514,12,"log"],[480,17,514,15],[480,18,514,16],[480,53,514,51,"targetEnemy"],[480,64,514,62],[480,65,514,63,"id"],[480,67,514,65],[480,75,514,73,"damage"],[480,81,514,79],[480,90,514,88],[480,91,514,89],[481,6,515,4,"console"],[481,13,515,11],[481,14,515,12,"log"],[481,17,515,15],[481,18,515,16],[481,53,515,51,"ninjaX"],[481,59,515,57],[481,64,515,62,"ninjaY"],[481,70,515,68],[481,87,515,85,"projectile"],[481,97,515,95],[481,98,515,96,"targetX"],[481,105,515,103],[481,110,515,108,"projectile"],[481,120,515,118],[481,121,515,119,"targetY"],[481,128,515,126],[481,131,515,129],[481,132,515,130],[482,6,517,4,"setProjectiles"],[482,20,517,18],[482,21,517,19,"prev"],[482,25,517,23],[482,29,517,27],[482,30,517,28],[482,33,517,31,"prev"],[482,37,517,35],[482,39,517,37,"projectile"],[482,49,517,47],[482,50,517,48],[482,51,517,49],[484,6,519,4],[485,6,520,4,"setTimeout"],[485,16,520,14],[485,17,520,15],[485,23,520,21],[486,8,521,6,"handleProjectileHit"],[486,27,521,25],[486,28,521,26,"projectile"],[486,38,521,36],[486,39,521,37],[487,6,522,4],[487,7,522,5],[487,9,522,7],[487,12,522,10],[487,13,522,11],[488,4,523,2],[488,5,523,3],[490,4,525,2],[491,4,526,2],[491,8,526,8,"spawnTestEnemy"],[491,22,526,22],[491,25,526,26,"state"],[491,30,526,44],[491,34,526,49],[492,6,527,4,"console"],[492,13,527,11],[492,14,527,12,"log"],[492,17,527,15],[492,18,527,16],[492,83,527,81],[492,84,527,82],[494,6,529,4],[495,6,530,4],[495,10,530,10,"zoneEnemy"],[495,19,530,19],[495,22,530,22,"spawnZoneEnemy"],[495,36,530,36],[495,37,530,37],[495,38,530,38],[496,6,531,4],[496,10,531,8],[496,11,531,9,"zoneEnemy"],[496,20,531,18],[496,22,531,20],[497,8,532,6,"console"],[497,15,532,13],[497,16,532,14,"log"],[497,19,532,17],[497,20,532,18],[497,76,532,74],[497,77,532,75],[498,8,533,6],[499,8,534,6,"spawnBasicTestEnemy"],[499,27,534,25],[499,28,534,26,"state"],[499,33,534,31],[499,34,534,32],[500,8,535,6],[501,6,536,4],[502,6,538,4,"console"],[502,13,538,11],[502,14,538,12,"log"],[502,17,538,15],[502,18,538,16],[502,44,538,42,"zoneEnemy"],[502,53,538,51],[502,54,538,52,"name"],[502,58,538,56],[502,63,538,61,"zoneEnemy"],[502,72,538,70],[502,73,538,71,"typeId"],[502,79,538,77],[502,94,538,92,"currentZone"],[502,105,538,103],[502,107,538,105,"id"],[502,109,538,107],[502,119,538,117,"currentZoneLevel"],[502,135,538,133],[502,137,538,135,"level"],[502,142,538,140],[502,144,538,142],[502,145,538,143],[504,6,540,4],[505,6,541,4],[505,10,541,10,"combatEnemy"],[505,21,541,34],[505,24,541,37],[506,8,542,6,"id"],[506,10,542,8],[506,12,542,10,"zoneEnemy"],[506,21,542,19],[506,22,542,20,"id"],[506,24,542,22],[507,8,543,6,"name"],[507,12,543,10],[507,14,543,12,"zoneEnemy"],[507,23,543,21],[507,24,543,22,"name"],[507,28,543,26],[508,8,544,6,"health"],[508,14,544,12],[508,16,544,14,"zoneEnemy"],[508,25,544,23],[508,26,544,24,"hp"],[508,28,544,26],[509,8,545,6,"maxHealth"],[509,17,545,15],[509,19,545,17,"zoneEnemy"],[509,28,545,26],[509,29,545,27,"maxHP"],[509,34,545,32],[510,8,546,6,"stats"],[510,13,546,11],[510,15,546,13],[511,10,547,8,"attack"],[511,16,547,14],[511,18,547,16,"zoneEnemy"],[511,27,547,25],[511,28,547,26,"attack"],[511,34,547,32],[512,10,548,8,"defense"],[512,17,548,15],[512,19,548,17],[512,21,548,19],[513,10,548,21],[514,10,549,8,"health"],[514,16,549,14],[514,18,549,16,"zoneEnemy"],[514,27,549,25],[514,28,549,26,"hp"],[514,30,549,28],[515,10,550,8,"maxHealth"],[515,19,550,17],[515,21,550,19,"zoneEnemy"],[515,30,550,28],[515,31,550,29,"maxHP"],[515,36,550,34],[516,10,551,8,"critChance"],[516,20,551,18],[516,22,551,20],[516,23,551,21],[517,10,552,8,"critDamage"],[517,20,552,18],[517,22,552,20],[517,25,552,23],[518,10,553,8,"cooldownReduction"],[518,27,553,25],[518,29,553,27],[519,8,554,6],[519,9,554,7],[520,8,555,6,"position"],[520,16,555,14],[520,18,555,16,"zoneEnemy"],[520,27,555,25],[520,28,555,26,"position"],[520,36,555,34],[521,8,556,6,"lastDamaged"],[521,19,556,17],[521,21,556,19],[521,22,556,20],[522,8,557,6],[523,8,558,6,"zoneTypeId"],[523,18,558,16],[523,20,558,18,"zoneEnemy"],[523,29,558,27],[523,30,558,28,"typeId"],[523,36,558,34],[524,8,559,6,"zoneXP"],[524,14,559,12],[524,16,559,14,"zoneEnemy"],[524,25,559,23],[524,26,559,24,"xp"],[525,6,560,4],[525,7,560,5],[526,6,562,4,"console"],[526,13,562,11],[526,14,562,12,"log"],[526,17,562,15],[526,18,562,16],[526,42,562,40,"combatEnemy"],[526,53,562,51],[526,54,562,52,"name"],[526,58,562,56],[526,67,562,65,"combatEnemy"],[526,78,562,76],[526,79,562,77,"health"],[526,85,562,83],[526,100,562,98,"currentZone"],[526,111,562,109],[526,113,562,111,"id"],[526,115,562,113],[526,125,562,123,"currentZoneLevel"],[526,141,562,139],[526,143,562,141,"level"],[526,148,562,146],[526,150,562,148],[526,151,562,149],[527,6,563,4,"state"],[527,11,563,9],[527,12,563,10,"enemies"],[527,19,563,17],[527,20,563,18,"push"],[527,24,563,22],[527,25,563,23,"combatEnemy"],[527,36,563,34],[527,37,563,35],[528,4,564,2],[528,5,564,3],[530,4,566,2],[531,4,567,2],[531,8,567,8,"spawnBasicTestEnemy"],[531,27,567,27],[531,30,567,31,"state"],[531,35,567,49],[531,39,567,54],[532,6,568,4],[532,10,568,10,"SCREEN_WIDTH"],[532,22,568,22],[532,25,568,25],[532,28,568,28],[533,6,569,4],[533,10,569,10,"GAME_AREA_HEIGHT"],[533,26,569,26],[533,29,569,29],[533,32,569,32],[533,35,569,35],[533,38,569,38],[534,6,570,4],[534,10,570,10,"ENEMY_SIZE"],[534,20,570,20],[534,23,570,23],[534,25,570,25],[535,6,572,4],[535,10,572,10,"x"],[535,11,572,11],[535,14,572,14,"Math"],[535,18,572,18],[535,19,572,19,"random"],[535,25,572,25],[535,26,572,26],[535,27,572,27],[535,31,572,31,"SCREEN_WIDTH"],[535,43,572,43],[535,46,572,46,"ENEMY_SIZE"],[535,56,572,56],[535,59,572,59],[535,60,572,60],[535,61,572,61],[535,64,572,64,"ENEMY_SIZE"],[535,74,572,74],[536,6,573,4],[536,10,573,10,"y"],[536,11,573,11],[536,14,573,14,"Math"],[536,18,573,18],[536,19,573,19,"random"],[536,25,573,25],[536,26,573,26],[536,27,573,27],[536,31,573,31,"GAME_AREA_HEIGHT"],[536,47,573,47],[536,50,573,50,"ENEMY_SIZE"],[536,60,573,60],[536,63,573,63],[536,64,573,64],[536,65,573,65],[536,68,573,68,"ENEMY_SIZE"],[536,78,573,78],[537,6,575,4],[537,10,575,10,"enemy"],[537,15,575,28],[537,18,575,31],[538,8,576,6,"id"],[538,10,576,8],[538,12,576,10],[538,30,576,28,"Date"],[538,34,576,32],[538,35,576,33,"now"],[538,38,576,36],[538,39,576,37],[538,40,576,38],[538,44,576,42,"Math"],[538,48,576,46],[538,49,576,47,"random"],[538,55,576,53],[538,56,576,54],[538,57,576,55],[538,59,576,57],[539,8,577,6,"name"],[539,12,577,10],[539,14,577,12],[539,26,577,24,"Math"],[539,30,577,28],[539,31,577,29,"floor"],[539,36,577,34],[539,37,577,35,"Math"],[539,41,577,39],[539,42,577,40,"random"],[539,48,577,46],[539,49,577,47],[539,50,577,48],[539,53,577,51],[539,56,577,54],[539,57,577,55],[539,59,577,57],[540,8,578,6,"health"],[540,14,578,12],[540,16,578,14],[540,18,578,16],[541,8,579,6,"maxHealth"],[541,17,579,15],[541,19,579,17],[541,21,579,19],[542,8,580,6,"stats"],[542,13,580,11],[542,15,580,13],[543,10,581,8,"attack"],[543,16,581,14],[543,18,581,16],[543,20,581,18],[544,10,582,8,"defense"],[544,17,582,15],[544,19,582,17],[544,21,582,19],[545,10,583,8,"health"],[545,16,583,14],[545,18,583,16],[545,20,583,18],[546,10,584,8,"maxHealth"],[546,19,584,17],[546,21,584,19],[546,23,584,21],[547,10,585,8,"critChance"],[547,20,585,18],[547,22,585,20],[547,23,585,21],[548,10,586,8,"critDamage"],[548,20,586,18],[548,22,586,20],[548,25,586,23],[549,10,587,8,"cooldownReduction"],[549,27,587,25],[549,29,587,27],[550,8,588,6],[550,9,588,7],[551,8,589,6,"position"],[551,16,589,14],[551,18,589,16],[552,10,589,18,"x"],[552,11,589,19],[553,10,589,21,"y"],[554,8,589,23],[554,9,589,24],[555,8,590,6,"lastDamaged"],[555,19,590,17],[555,21,590,19],[556,6,591,4],[556,7,591,5],[557,6,593,4,"console"],[557,13,593,11],[557,14,593,12,"log"],[557,17,593,15],[557,18,593,16],[557,42,593,40,"enemy"],[557,47,593,45],[557,48,593,46,"name"],[557,52,593,50],[557,60,593,58,"Math"],[557,64,593,62],[557,65,593,63,"round"],[557,70,593,68],[557,71,593,69,"x"],[557,72,593,70],[557,73,593,71],[557,78,593,76,"Math"],[557,82,593,80],[557,83,593,81,"round"],[557,88,593,86],[557,89,593,87,"y"],[557,90,593,88],[557,91,593,89],[557,94,593,92],[557,95,593,93],[558,6,594,4,"state"],[558,11,594,9],[558,12,594,10,"enemies"],[558,19,594,17],[558,20,594,18,"push"],[558,24,594,22],[558,25,594,23,"enemy"],[558,30,594,28],[558,31,594,29],[559,4,595,2],[559,5,595,3],[561,4,597,2],[562,4,598,2],[562,8,598,8,"startCombat"],[562,19,598,19],[562,22,598,22,"React"],[562,27,598,27],[562,28,598,27,"default"],[562,35,598,27],[562,36,598,28,"useCallback"],[562,47,598,39],[562,48,598,40],[562,54,598,46],[563,6,599,4,"console"],[563,13,599,11],[563,14,599,12,"log"],[563,17,599,15],[563,18,599,16],[563,63,599,61],[563,64,599,62],[564,6,600,4,"setCombatState"],[564,20,600,18],[564,21,600,19,"prev"],[564,25,600,23],[564,30,600,28],[565,8,600,30],[565,11,600,33,"prev"],[565,15,600,37],[566,8,600,39,"isInCombat"],[566,18,600,49],[566,20,600,51],[567,6,600,56],[567,7,600,57],[567,8,600,58],[567,9,600,59],[569,6,602,4],[570,6,603,4,"combatEngine"],[570,25,603,16],[570,26,603,16,"combatEngine"],[570,38,603,16],[570,39,603,17,"addTickCallback"],[570,54,603,32],[570,55,603,33,"handleCombatTick"],[570,71,603,49],[570,72,603,50],[571,6,604,4,"console"],[571,13,604,11],[571,14,604,12,"log"],[571,17,604,15],[571,18,604,16],[571,62,604,60],[571,63,604,61],[573,6,606,4],[574,6,607,4,"combatEngine"],[574,25,607,16],[574,26,607,16,"combatEngine"],[574,38,607,16],[574,39,607,17,"start"],[574,44,607,22],[574,45,607,23],[574,46,607,24],[575,4,608,2],[575,5,608,3],[575,7,608,5],[575,8,608,6,"combatEngine"],[575,27,608,18],[575,28,608,18,"combatEngine"],[575,40,608,18],[575,42,608,20,"handleCombatTick"],[575,58,608,36],[575,59,608,37],[575,60,608,38],[577,4,610,2],[578,4,611,2],[578,8,611,8,"stopCombat"],[578,18,611,18],[578,21,611,21,"React"],[578,26,611,26],[578,27,611,26,"default"],[578,34,611,26],[578,35,611,27,"useCallback"],[578,46,611,38],[578,47,611,39],[578,53,611,45],[579,6,612,4,"setCombatState"],[579,20,612,18],[579,21,612,19,"prev"],[579,25,612,23],[579,30,612,28],[580,8,612,30],[580,11,612,33,"prev"],[580,15,612,37],[581,8,612,39,"isInCombat"],[581,18,612,49],[581,20,612,51],[582,6,612,57],[582,7,612,58],[582,8,612,59],[582,9,612,60],[583,6,613,4,"combatEngine"],[583,25,613,16],[583,26,613,16,"combatEngine"],[583,38,613,16],[583,39,613,17,"removeTickCallback"],[583,57,613,35],[583,58,613,36,"handleCombatTick"],[583,74,613,52],[583,75,613,53],[584,4,614,2],[584,5,614,3],[584,7,614,5],[584,8,614,6,"combatEngine"],[584,27,614,18],[584,28,614,18,"combatEngine"],[584,40,614,18],[584,42,614,20,"handleCombatTick"],[584,58,614,36],[584,59,614,37],[584,60,614,38],[586,4,616,2],[587,4,617,2],[587,8,617,8,"equipAbility"],[587,20,617,20],[587,23,617,23,"equipAbility"],[587,24,617,24,"abilityId"],[587,33,617,41],[587,35,617,43,"slotIndex"],[587,44,617,60],[587,49,617,74],[588,6,618,4],[588,13,618,11,"combatState"],[588,24,618,22],[588,25,618,23,"abilityManager"],[588,39,618,37],[588,40,618,38,"equipAbility"],[588,52,618,50],[588,53,618,51,"abilityId"],[588,62,618,60],[588,64,618,62,"slotIndex"],[588,73,618,71],[588,74,618,72],[589,4,619,2],[589,5,619,3],[590,4,621,2],[590,8,621,8,"getDeck"],[590,15,621,15],[590,18,621,18,"getDeck"],[590,19,621,18],[590,24,621,24],[591,6,622,4],[591,13,622,11,"combatState"],[591,24,622,22],[591,25,622,23,"abilityManager"],[591,39,622,37],[591,40,622,38,"getDeck"],[591,47,622,45],[591,48,622,46],[591,49,622,47],[592,4,623,2],[592,5,623,3],[593,4,625,2],[593,8,625,8,"getAvailableAbilities"],[593,29,625,29],[593,32,625,32,"getAvailableAbilities"],[593,33,625,32],[593,38,625,38],[594,6,626,4],[594,13,626,11,"combatState"],[594,24,626,22],[594,25,626,23,"abilityManager"],[594,39,626,37],[594,40,626,38,"getAvailableAbilities"],[594,61,626,59],[594,62,626,60],[594,63,626,61],[595,4,627,2],[595,5,627,3],[596,4,629,2],[596,8,629,8,"upgradeAbility"],[596,22,629,22],[596,25,629,26,"abilityId"],[596,34,629,43],[596,38,629,57],[597,6,630,4],[597,13,630,11,"combatState"],[597,24,630,22],[597,25,630,23,"abilityManager"],[597,39,630,37],[597,40,630,38,"upgradeAbility"],[597,54,630,52],[597,55,630,53,"abilityId"],[597,64,630,62],[597,65,630,63],[598,4,631,2],[598,5,631,3],[600,4,633,2],[601,4,634,2],[601,8,634,8,"clearAllEnemies"],[601,23,634,23],[601,26,634,26,"clearAllEnemies"],[601,27,634,26],[601,32,634,32],[602,6,635,4,"console"],[602,13,635,11],[602,14,635,12,"log"],[602,17,635,15],[602,18,635,16],[602,67,635,65],[602,68,635,66],[603,6,636,4,"setCombatState"],[603,20,636,18],[603,21,636,19,"prev"],[603,25,636,23],[603,30,636,28],[604,8,637,6],[604,11,637,9,"prev"],[604,15,637,13],[605,8,638,6,"enemies"],[605,15,638,13],[605,17,638,15],[606,6,639,4],[606,7,639,5],[606,8,639,6],[606,9,639,7],[607,4,640,2],[607,5,640,3],[609,4,642,2],[610,4,643,2],[610,8,643,8,"triggerLevelUpExplosion"],[610,31,643,31],[610,34,643,34,"triggerLevelUpExplosion"],[610,35,643,34],[610,40,643,40],[611,6,644,4,"console"],[611,13,644,11],[611,14,644,12,"log"],[611,17,644,15],[611,18,644,16],[611,70,644,68],[611,71,644,69],[612,6,646,4],[612,10,646,10,"explosionTime"],[612,23,646,23],[612,26,646,26,"Date"],[612,30,646,30],[612,31,646,31,"now"],[612,34,646,34],[612,35,646,35],[612,36,646,36],[613,6,647,4,"setLastExplosionTime"],[613,26,647,24],[613,27,647,25,"explosionTime"],[613,40,647,38],[613,41,647,39],[614,6,649,4,"setCombatState"],[614,20,649,18],[614,21,649,19,"prev"],[614,25,649,23],[614,29,649,27],[615,8,650,6],[616,8,651,6],[616,12,651,12,"enemyCount"],[616,22,651,22],[616,25,651,25,"prev"],[616,29,651,29],[616,30,651,30,"enemies"],[616,37,651,37],[616,38,651,38,"length"],[616,44,651,44],[617,8,652,6],[617,12,652,12,"explosionXP"],[617,23,652,23],[617,26,652,26,"enemyCount"],[617,36,652,36],[617,39,652,39],[617,41,652,41],[617,42,652,42],[617,43,652,43],[618,8,653,6],[618,12,653,12,"explosionGold"],[618,25,653,25],[618,28,653,28,"enemyCount"],[618,38,653,38],[618,41,653,41],[618,42,653,42],[618,43,653,43],[618,44,653,44],[620,8,655,6,"console"],[620,15,655,13],[620,16,655,14,"log"],[620,19,655,17],[620,20,655,18],[620,44,655,42,"enemyCount"],[620,54,655,52],[620,76,655,74,"explosionXP"],[620,87,655,85],[620,98,655,96,"explosionGold"],[620,111,655,109],[620,118,655,116],[620,119,655,117],[622,8,657,6],[623,8,658,6],[623,12,658,10,"explosionXP"],[623,23,658,21],[623,26,658,24],[623,27,658,25],[623,29,658,27],[624,10,659,8,"setTimeout"],[624,20,659,18],[624,21,659,19],[624,27,659,25],[625,12,660,10,"game"],[625,16,660,14],[625,17,660,15,"updateNinja"],[625,28,660,26],[625,29,660,28,"ninja"],[625,34,660,33],[625,39,660,39],[626,14,661,12,"experience"],[626,24,661,22],[626,26,661,24,"ninja"],[626,31,661,29],[626,32,661,30,"experience"],[626,42,661,40],[626,45,661,43,"explosionXP"],[626,56,661,54],[627,14,662,12,"gold"],[627,18,662,16],[627,20,662,18,"ninja"],[627,25,662,23],[627,26,662,24,"gold"],[627,30,662,28],[627,33,662,31,"explosionGold"],[628,12,663,10],[628,13,663,11],[628,14,663,12],[628,15,663,13],[629,10,664,8],[629,11,664,9],[629,13,664,11],[629,14,664,12],[629,15,664,13],[629,16,664,14],[629,17,664,15],[630,8,665,6],[632,8,667,6],[633,8,668,6],[634,8,669,6],[634,12,669,12,"damagedEnemies"],[634,26,669,26],[634,29,669,29,"prev"],[634,33,669,33],[634,34,669,34,"enemies"],[634,41,669,41],[634,42,669,42,"map"],[634,45,669,45],[634,46,669,46,"enemy"],[634,51,669,51],[634,56,669,56],[635,10,670,8],[635,13,670,11,"enemy"],[635,18,670,16],[636,10,671,8,"health"],[636,16,671,14],[636,18,671,16],[636,19,671,17],[637,10,671,19],[638,10,672,8,"lastDamaged"],[638,21,672,19],[638,23,672,21,"combatEngine"],[638,42,672,33],[638,43,672,33,"combatEngine"],[638,55,672,33],[638,56,672,34,"getCurrentTick"],[638,70,672,48],[638,71,672,49],[639,8,673,6],[639,9,673,7],[639,10,673,8],[639,11,673,9],[640,8,675,6],[640,15,675,13],[641,10,676,8],[641,13,676,11,"prev"],[641,17,676,15],[642,10,677,8,"enemies"],[642,17,677,15],[642,19,677,17,"damagedEnemies"],[643,8,678,6],[643,9,678,7],[644,6,679,4],[644,7,679,5],[644,8,679,6],[645,4,680,2],[645,5,680,3],[647,4,682,2],[648,4,683,2],[648,8,683,8,"spawnEnemy"],[648,18,683,18],[648,21,683,22,"position"],[648,29,683,57],[648,33,683,75],[649,6,684,4],[649,10,684,10,"SCREEN_WIDTH"],[649,22,684,22],[649,25,684,25],[649,28,684,28],[650,6,685,4],[650,10,685,10,"GAME_AREA_HEIGHT"],[650,26,685,26],[650,29,685,29],[650,32,685,32],[650,35,685,35],[650,38,685,38],[650,39,685,39],[650,40,685,40],[651,6,686,4],[651,10,686,10,"ENEMY_SIZE"],[651,20,686,20],[651,23,686,23],[651,25,686,25],[653,6,688,4],[654,6,689,4],[654,10,689,10,"x"],[654,11,689,11],[654,14,689,14,"position"],[654,22,689,22],[654,24,689,24,"x"],[654,25,689,25],[654,29,689,29,"Math"],[654,33,689,33],[654,34,689,34,"random"],[654,40,689,40],[654,41,689,41],[654,42,689,42],[654,46,689,46,"SCREEN_WIDTH"],[654,58,689,58],[654,61,689,61,"ENEMY_SIZE"],[654,71,689,71],[654,74,689,74],[654,75,689,75],[654,76,689,76],[654,79,689,79,"ENEMY_SIZE"],[654,89,689,89],[655,6,690,4],[655,10,690,10,"y"],[655,11,690,11],[655,14,690,14,"position"],[655,22,690,22],[655,24,690,24,"y"],[655,25,690,25],[655,29,690,29,"Math"],[655,33,690,33],[655,34,690,34,"random"],[655,40,690,40],[655,41,690,41],[655,42,690,42],[655,46,690,46,"GAME_AREA_HEIGHT"],[655,62,690,62],[655,65,690,65,"ENEMY_SIZE"],[655,75,690,75],[655,78,690,78],[655,79,690,79],[655,80,690,80],[655,83,690,83,"ENEMY_SIZE"],[655,93,690,93],[656,6,692,4],[656,10,692,10,"enemy"],[656,15,692,28],[656,18,692,31],[657,8,693,6,"id"],[657,10,693,8],[657,12,693,10],[657,21,693,19],[657,23,693,21,"enemyCounter"],[657,35,693,33],[657,37,693,35],[658,8,694,6,"name"],[658,12,694,10],[658,14,694,12],[658,24,694,22],[659,8,695,6,"health"],[659,14,695,12],[659,16,695,14],[659,19,695,17],[660,8,696,6,"maxHealth"],[660,17,696,15],[660,19,696,17],[660,22,696,20],[661,8,697,6,"stats"],[661,13,697,11],[661,15,697,13],[662,10,698,8,"attack"],[662,16,698,14],[662,18,698,16],[662,20,698,18],[663,10,699,8,"defense"],[663,17,699,15],[663,19,699,17],[663,21,699,19],[664,10,700,8,"health"],[664,16,700,14],[664,18,700,16],[664,21,700,19],[665,10,701,8,"maxHealth"],[665,19,701,17],[665,21,701,19],[665,24,701,22],[666,10,702,8,"critChance"],[666,20,702,18],[666,22,702,20],[666,23,702,21],[667,10,703,8,"critDamage"],[667,20,703,18],[667,22,703,20],[667,25,703,23],[668,10,704,8,"cooldownReduction"],[668,27,704,25],[668,29,704,27],[669,8,705,6],[669,9,705,7],[670,8,706,6,"position"],[670,16,706,14],[670,18,706,16],[671,10,706,18,"x"],[671,11,706,19],[672,10,706,21,"y"],[673,8,706,23],[673,9,706,24],[674,8,707,6,"lastDamaged"],[674,19,707,17],[674,21,707,19],[675,6,708,4],[675,7,708,5],[676,6,710,4,"setCombatState"],[676,20,710,18],[676,21,710,19,"prev"],[676,25,710,23],[676,30,710,28],[677,8,711,6],[677,11,711,9,"prev"],[677,15,711,13],[678,8,712,6,"enemies"],[678,15,712,13],[678,17,712,15],[678,18,712,16],[678,21,712,19,"prev"],[678,25,712,23],[678,26,712,24,"enemies"],[678,33,712,31],[678,35,712,33,"enemy"],[678,40,712,38],[679,6,713,4],[679,7,713,5],[679,8,713,6],[679,9,713,7],[680,6,715,4],[680,13,715,11,"enemy"],[680,18,715,16],[681,4,716,2],[681,5,716,3],[683,4,718,2],[684,4,719,2],[684,8,719,8,"spawnBoss"],[684,17,719,17],[684,20,719,21,"bossEnemy"],[684,29,719,43],[684,33,719,48],[685,6,720,4,"console"],[685,13,720,11],[685,14,720,12,"log"],[685,17,720,15],[685,18,720,16],[685,39,720,37,"bossEnemy"],[685,48,720,46],[685,49,720,47,"name"],[685,53,720,51],[685,90,720,88],[685,91,720,89],[686,6,721,4,"setCombatState"],[686,20,721,18],[686,21,721,19,"prev"],[686,25,721,23],[686,30,721,28],[687,8,722,6],[687,11,722,9,"prev"],[687,15,722,13],[688,8,723,6,"enemies"],[688,15,723,13],[688,17,723,15],[688,18,723,16,"bossEnemy"],[688,27,723,25],[688,28,723,26],[688,29,723,27],[689,6,724,4],[689,7,724,5],[689,8,724,6],[689,9,724,7],[690,4,725,2],[690,5,725,3],[692,4,727,2],[693,4,728,2],[693,8,728,8,"clearSpecificEnemy"],[693,26,728,26],[693,29,728,30,"enemyId"],[693,36,728,45],[693,40,728,50],[694,6,729,4,"setCombatState"],[694,20,729,18],[694,21,729,19,"prev"],[694,25,729,23],[694,30,729,28],[695,8,730,6],[695,11,730,9,"prev"],[695,15,730,13],[696,8,731,6,"enemies"],[696,15,731,13],[696,17,731,15,"prev"],[696,21,731,19],[696,22,731,20,"enemies"],[696,29,731,27],[696,30,731,28,"filter"],[696,36,731,34],[696,37,731,35,"enemy"],[696,42,731,40],[696,46,731,44,"enemy"],[696,51,731,49],[696,52,731,50,"id"],[696,54,731,52],[696,59,731,57,"enemyId"],[696,66,731,64],[697,6,732,4],[697,7,732,5],[697,8,732,6],[697,9,732,7],[698,4,733,2],[698,5,733,3],[700,4,735,2],[701,4,736,2],[701,8,736,8,"useAbilityManually"],[701,26,736,26],[701,29,736,26,"_s3"],[701,32,736,26],[701,33,736,29],[701,37,736,29,"useCallback"],[701,43,736,40],[701,44,736,40,"useCallback"],[701,55,736,40],[701,57,736,40,"_s3"],[701,60,736,40],[701,61,736,42,"slotIndex"],[701,70,736,59],[701,74,736,73],[702,6,736,73,"_s3"],[702,9,736,73],[703,6,737,4,"console"],[703,13,737,11],[703,14,737,12,"log"],[703,17,737,15],[703,18,737,16],[703,53,737,51,"slotIndex"],[703,62,737,60],[703,64,737,62],[703,65,737,63],[705,6,739,4],[706,6,740,4],[706,10,740,10,"isReady"],[706,17,740,17],[706,20,740,20,"combatState"],[706,31,740,31],[706,32,740,32,"abilityManager"],[706,46,740,46],[706,47,740,47,"isAbilityReady"],[706,61,740,61],[706,62,740,62,"slotIndex"],[706,71,740,71],[706,72,740,72],[707,6,741,4],[707,10,741,8],[707,11,741,9,"isReady"],[707,18,741,16],[707,20,741,18],[708,8,742,6,"console"],[708,15,742,13],[708,16,742,14,"log"],[708,19,742,17],[708,20,742,18],[708,41,742,39,"slotIndex"],[708,50,742,48],[708,85,742,83],[708,86,742,84],[709,8,743,6],[709,15,743,13],[709,20,743,18],[710,6,744,4],[712,6,746,4],[713,6,747,4],[713,10,747,8,"combatState"],[713,21,747,19],[713,22,747,20,"enemies"],[713,29,747,27],[713,30,747,28,"length"],[713,36,747,34],[713,41,747,39],[713,42,747,40],[713,44,747,42],[714,8,748,6,"console"],[714,15,748,13],[714,16,748,14,"log"],[714,19,748,17],[714,20,748,18],[714,69,748,67],[714,70,748,68],[715,8,749,6],[715,15,749,13],[715,20,749,18],[716,6,750,4],[718,6,752,4],[719,6,753,4],[719,10,753,10,"currentTick"],[719,21,753,21],[719,24,753,24,"combatEngine"],[719,43,753,36],[719,44,753,36,"combatEngine"],[719,56,753,36],[719,57,753,37,"getCurrentTick"],[719,71,753,51],[719,72,753,52],[719,73,753,53],[720,6,754,4],[720,10,754,10,"success"],[720,17,754,17],[720,20,754,20,"combatState"],[720,31,754,31],[720,32,754,32,"abilityManager"],[720,46,754,46],[720,47,754,47,"useAbility"],[720,57,754,57],[720,58,754,58,"slotIndex"],[720,67,754,67],[720,69,754,69,"currentTick"],[720,80,754,80],[720,81,754,81],[721,6,756,4],[721,10,756,8,"success"],[721,17,756,15],[721,19,756,17],[722,8,757,6],[723,8,758,6,"setCombatState"],[723,22,758,20],[723,23,758,21,"prev"],[723,27,758,25],[723,31,758,29],[724,10,759,8],[724,14,759,14,"newState"],[724,22,759,22],[724,25,759,25],[725,12,759,27],[725,15,759,30,"prev"],[726,10,759,35],[726,11,759,36],[727,10,760,8,"castAbility"],[727,21,760,19],[727,22,760,20,"newState"],[727,30,760,28],[727,32,760,30,"slotIndex"],[727,41,760,39],[727,42,760,40],[728,10,761,8],[728,17,761,15,"newState"],[728,25,761,23],[729,8,762,6],[729,9,762,7],[729,10,762,8],[730,8,764,6,"console"],[730,15,764,13],[730,16,764,14,"log"],[730,19,764,17],[730,20,764,18],[730,65,764,63,"slotIndex"],[730,74,764,72],[730,76,764,74],[730,77,764,75],[731,8,765,6],[731,15,765,13],[731,19,765,17],[732,6,766,4],[732,7,766,5],[732,13,766,11],[733,8,767,6,"console"],[733,15,767,13],[733,16,767,14,"log"],[733,19,767,17],[733,20,767,18],[733,61,767,59,"slotIndex"],[733,70,767,68],[733,72,767,70],[733,73,767,71],[734,8,768,6],[734,15,768,13],[734,20,768,18],[735,6,769,4],[736,4,770,2],[736,5,770,3],[736,46,770,5],[736,47,770,6,"combatState"],[736,58,770,17],[736,59,770,18,"abilityManager"],[736,73,770,32],[736,75,770,34,"combatState"],[736,86,770,45],[736,87,770,46,"enemies"],[736,94,770,53],[736,95,770,54],[736,96,770,55],[737,4,771,2],[737,8,771,2,"useEffect"],[737,14,771,11],[737,15,771,11,"useEffect"],[737,24,771,11],[737,26,771,12],[737,32,771,18],[738,6,772,4,"combatEngine"],[738,25,772,16],[738,26,772,16,"combatEngine"],[738,38,772,16],[738,39,772,17,"start"],[738,44,772,22],[738,45,772,23],[738,46,772,24],[740,6,774,4],[741,6,775,4],[742,6,776,4,"console"],[742,13,776,11],[742,14,776,12,"log"],[742,17,776,15],[742,18,776,16],[742,97,776,95],[742,98,776,96],[743,6,778,4],[743,13,778,11],[743,19,778,17],[744,8,779,6,"combatEngine"],[744,27,779,18],[744,28,779,18,"combatEngine"],[744,40,779,18],[744,41,779,19,"stop"],[744,45,779,23],[744,46,779,24],[744,47,779,25],[745,6,780,4],[745,7,780,5],[746,4,781,2],[746,5,781,3],[746,7,781,5],[746,9,781,7],[746,10,781,8],[748,4,783,2],[749,4,784,2],[749,8,784,8,"saveAbilityData"],[749,23,784,23],[749,26,784,26],[749,30,784,26,"useCallback"],[749,36,784,37],[749,37,784,37,"useCallback"],[749,48,784,37],[749,50,784,38],[749,56,784,44],[750,6,785,4],[750,10,785,8,"combatState"],[750,21,785,19],[750,22,785,20,"abilityManager"],[750,36,785,34],[750,38,785,36],[751,8,786,6],[751,12,786,12,"abilityData"],[751,23,786,23],[751,26,786,26,"combatState"],[751,37,786,37],[751,38,786,38,"abilityManager"],[751,52,786,52],[751,53,786,53,"getSaveData"],[751,64,786,64],[751,65,786,65],[751,66,786,66],[752,8,787,6,"console"],[752,15,787,13],[752,16,787,14,"log"],[752,19,787,17],[752,20,787,18],[752,70,787,68],[752,72,787,70,"abilityData"],[752,83,787,81],[752,84,787,82],[753,8,788,6,"game"],[753,12,788,10],[753,13,788,11,"updateAbilityData"],[753,30,788,28],[753,31,788,29,"abilityData"],[753,42,788,40],[753,43,788,41],[754,6,789,4],[755,4,790,2],[755,5,790,3],[755,7,790,5],[755,8,790,6,"combatState"],[755,19,790,17],[755,20,790,18,"abilityManager"],[755,34,790,32],[755,36,790,34,"game"],[755,40,790,38],[755,41,790,39,"updateAbilityData"],[755,58,790,56],[755,59,790,57],[755,60,790,58],[756,4,792,2],[756,8,792,8,"contextValue"],[756,20,792,39],[756,23,792,42,"React"],[756,28,792,47],[756,29,792,47,"default"],[756,36,792,47],[756,37,792,48,"useMemo"],[756,44,792,55],[756,45,792,56],[756,52,792,63],[757,6,793,4,"combatState"],[757,17,793,15],[758,6,794,4,"projectiles"],[758,17,794,15],[759,6,795,4,"startCombat"],[759,17,795,15],[760,6,796,4,"stopCombat"],[760,16,796,14],[761,6,797,4,"equipAbility"],[761,18,797,16],[762,6,798,4,"handleEnemyKill"],[762,21,798,19],[763,6,799,4,"getDeck"],[763,13,799,11],[764,6,800,4,"getAvailableAbilities"],[764,27,800,25],[765,6,801,4,"upgradeAbility"],[765,20,801,18],[766,6,802,4,"spawnEnemy"],[766,16,802,14],[767,6,803,4,"spawnBoss"],[767,15,803,13],[768,6,804,4,"clearAllEnemies"],[768,21,804,19],[769,6,805,4,"clearSpecificEnemy"],[769,24,805,22],[770,6,806,4,"triggerLevelUpExplosion"],[770,29,806,27],[771,6,807,4,"findClosestEnemy"],[771,22,807,20],[772,6,808,4,"updateNinjaPosition"],[772,25,808,23],[773,6,809,4,"setManualControlActive"],[773,28,809,26],[774,6,810,4,"lastExplosionTime"],[774,23,810,21],[775,6,811,4,"useAbilityManually"],[775,24,811,22],[776,6,811,24],[777,6,812,4,"saveAbilityData"],[777,21,812,19],[777,22,812,21],[778,4,813,2],[778,5,813,3],[778,6,813,4],[778,8,813,6],[779,4,814,4],[780,4,815,4],[781,4,816,4,"combatState"],[781,15,816,15],[781,17,817,4,"projectiles"],[781,28,817,15],[781,30,818,4,"lastExplosionTime"],[781,47,818,21],[782,4,819,4],[783,4,820,4,"combatState"],[783,15,820,15],[783,16,820,16,"abilityManager"],[783,30,820,30],[783,32,821,4,"combatState"],[783,43,821,15],[783,44,821,16,"enemies"],[783,51,821,23],[783,53,822,4,"useAbilityManually"],[783,71,822,22],[784,4,822,24],[785,4,823,4,"saveAbilityData"],[785,19,823,19],[785,20,823,21],[786,4,823,21],[786,5,824,3],[786,6,824,4],[787,4,826,2],[787,24,827,4],[787,28,827,4,"_reactJsxDevRuntime"],[787,47,827,4],[787,48,827,4,"jsxDEV"],[787,54,827,4],[787,56,827,5,"CombatContext"],[787,69,827,18],[787,70,827,19,"Provider"],[787,78,827,27],[788,6,827,28,"value"],[788,11,827,33],[788,13,827,35,"contextValue"],[788,25,827,48],[789,6,827,48,"children"],[789,14,827,48],[789,16,828,7,"children"],[790,4,828,15],[791,6,828,15,"fileName"],[791,14,828,15],[791,16,828,15,"_jsxFileName"],[791,28,828,15],[792,6,828,15,"lineNumber"],[792,16,828,15],[793,6,828,15,"columnNumber"],[793,18,828,15],[794,4,828,15],[794,11,829,28],[794,12,829,29],[795,2,831,0],[795,3,831,1],[796,2,831,2,"_s4"],[796,5,831,2],[796,6,90,13,"CombatProvider"],[796,20,90,27],[797,4,90,27],[797,12,91,15,"useGame"],[797,24,91,22],[797,25,91,22,"useGame"],[797,32,91,22],[797,34,92,77,"useZone"],[797,46,92,84],[797,47,92,84,"useZone"],[797,54,92,84],[798,2,92,84],[799,2,92,84,"_c"],[799,4,92,84],[799,7,90,13,"CombatProvider"],[799,21,90,27],[800,2,90,27],[800,6,90,27,"_c"],[800,8,90,27],[801,2,90,27,"$RefreshReg$"],[801,14,90,27],[801,15,90,27,"_c"],[801,17,90,27],[802,0,90,27],[802,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","setTimeout$argument_0","game.updateNinja$argument_0","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.map$argument_0","lowHealthEnemies.map$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","setManualControlActive","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.filter$argument_0","enemiesInRange.forEach$argument_0","targets.forEach$argument_0","createProjectile","spawnTestEnemy","spawnBasicTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useAbilityManually","<anonymous>","saveAbilityData","React.useMemo$argument_0"],"mappings":"AAA;yBC+E;CDM;8BEI;YCyB;qBCM,qBD;GDE;sCGQ;eCY;uBCI;ODO;KDiB;GHC;6CMG;mBJK;4BKa;sDCC,sBD;0BEE;WFG;OLE;+BQG;OR0C;kDSc,0BT;mGUK,6BV;uDSI,+CT;kFWE,4CX;iDSK,yBT;4CYY,qBZ;KIiB;0BSK;KTG;GNC;mCgBG;oBCY;KDU;GhBI;2BkBG;GlBE;0CmBO;GnBE;6CoBG;GpBG;8BqBG;mBnBG;oDMI,sCN;KmBa;mBCG,oBC,2BD,CD;GrBC;sBwBG;iCCS;oCCE,iCD;KDG;kDGa;OHK;6BIK;OJS;6BGwB;SHO;sBKG;OLU;GxBE;2B8BG;mBR6B,6BQ;e1BG;K0BE;G9BC;yB+BG;G/BsC;8BgCG;GhC4B;wCiCG;mB/BE,uC+B;GjCQ;uCkCG;mBhCC,wCgC;GlCE;uBmCG;GnCE;kBoCE;GpCE;gCqCE;GrCE;yBsCE;GtCE;0BuCG;mBrCE;MqCG;GvCC;kCwCG;mBtCM;mBEU;2BCC;YDG;SFC;8CuCK;QvCI;KsCM;GxCC;qB0CG;mBxC2B;MwCG;G1CG;oB2CG;mBzCE;MyCG;G3CC;6B4CG;mB1CC;mC2CE,6B3C;M0CC;G5CC;yC8CG;qB5CsB;O4CI;G9CQ;YCC;W8CO;K9CE;GDC;sCgDG;GhDM;wDiDE;IjDqB;CFkB"},"hasCjsExports":false},"type":"js/module"}]}