{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":110,"index":110}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":164},"end":{"line":3,"column":106,"index":270}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":271},"end":{"line":4,"column":85,"index":356}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":357},"end":{"line":5,"column":40,"index":397}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":398},"end":{"line":6,"column":40,"index":438}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _engineCombatEngine = require(_dependencyMap[2], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[3], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[4], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[5], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[6], \"react/jsx-dev-runtime\");\n  var CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useCombat = () => {\n    _s();\n    var context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var enemyCounter = 0; // Global counter for unique enemy IDs\n\n  var CombatProvider = _ref => {\n    _s3();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      updateNinja = _useGame.updateNinja;\n    var _useZone = (0, _ZoneContext.useZone)(),\n      recordEnemyKill = _useZone.recordEnemyKill;\n    var _useState = (0, _react.useState)({\n        isInCombat: false,\n        currentTick: 0,\n        enemies: [],\n        abilityManager: new _typesAbilityTypes.AbilityManager(),\n        statusEffects: new _engineCombatEngine.StatusEffectManager(),\n        playerStats: {\n          attack: 10,\n          // Default stats - will be updated by game context\n          defense: 5,\n          health: 100,\n          maxHealth: 100,\n          critChance: 3,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      combatState = _useState2[0],\n      setCombatState = _useState2[1];\n    var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      projectiles = _useState4[0],\n      setProjectiles = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      lastExplosionTime = _useState6[0],\n      setLastExplosionTime = _useState6[1];\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    var SCREEN_WIDTH = 390;\n    var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n    var NINJA_SIZE = 40;\n    var _useState7 = (0, _react.useState)({\n        x: 50,\n        y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      ninjaPosition = _useState8[0],\n      setNinjaPosition = _useState8[1];\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    var handleEnemyKill = (0, _react.useCallback)(enemy => {\n      console.log(`🎯 Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      var xpReward = 20; // Base XP reward per kill\n      var goldReward = 10;\n      console.log(`💰 Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n\n      // MOBILE FIX: Defer ALL cross-context state updates to prevent render-phase violations\n      // Use setTimeout to break the synchronous chain and prevent React Native bridge overload\n      setTimeout(() => {\n        // Award XP and gold using GameContext\n        updateNinja(prev => {\n          console.log(`📊 XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n          return {\n            experience: prev.experience + xpReward,\n            gold: prev.gold + goldReward\n          };\n        });\n\n        // Convert CombatEnemy to CurrentEnemy format for zone progression\n        var zoneEnemy = {\n          id: enemy.id,\n          typeId: 'test_orc',\n          // Default type for test enemies\n          name: enemy.name,\n          icon: '🧌',\n          // Default icon for test enemies\n          hp: 0,\n          // Dead enemy\n          maxHP: enemy.maxHealth,\n          attack: enemy.stats.attack,\n          xp: 20,\n          // Base XP reward\n          position: enemy.position\n        };\n        recordEnemyKill(zoneEnemy);\n      }, 0); // 0ms delay to defer to next event loop\n    }, [updateNinja, recordEnemyKill]);\n\n    // Combat tick handler - MEMOIZED to prevent infinite re-renders\n    var handleCombatTick = React.default.useCallback(() => {\n      var _s2 = $RefreshSig$();\n      console.log('🔄 Combat tick running...');\n      var enemiesToKill = []; // Track enemies to kill outside of setState\n\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        var newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        var newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        var effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          var enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // MOBILE FIX: Add enemy movement logic - enemies were spawning but never moving!\n        newState.enemies.forEach(enemy => {\n          if (!enemy.isBoss) {\n            // Only move regular enemies, not bosses\n            // Mobile-optimized enemy movement - slower, more predictable\n            var MOVEMENT_SPEED = 0.3; // Pixels per tick (slower for mobile)\n            var _SCREEN_WIDTH = 390;\n            var _GAME_AREA_HEIGHT = 704; // 844 - 140 (top bar + bottom nav)\n            var ENEMY_SIZE = 35;\n\n            // Simple AI: Move randomly with bounds checking\n            if (!enemy.movementDirection) {\n              // Initialize random movement direction\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                // -1 to 1\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n\n            // Update position\n            var newX = enemy.position.x + enemy.movementDirection.x * MOVEMENT_SPEED;\n            var newY = enemy.position.y + enemy.movementDirection.y * MOVEMENT_SPEED;\n\n            // Bounce off boundaries and change direction\n            if (newX <= 0 || newX >= _SCREEN_WIDTH - ENEMY_SIZE) {\n              enemy.movementDirection.x *= -1;\n              newX = Math.max(0, Math.min(_SCREEN_WIDTH - ENEMY_SIZE, newX));\n            }\n            if (newY <= 0 || newY >= _GAME_AREA_HEIGHT - ENEMY_SIZE) {\n              enemy.movementDirection.y *= -1;\n              newY = Math.max(0, Math.min(_GAME_AREA_HEIGHT - ENEMY_SIZE, newY));\n            }\n\n            // Apply new position\n            enemy.position.x = newX;\n            enemy.position.y = newY;\n\n            // Occasionally change direction for more interesting movement\n            if (Math.random() < 0.02) {\n              // 2% chance per tick\n              enemy.movementDirection = {\n                x: (Math.random() - 0.5) * 2,\n                y: (Math.random() - 0.5) * 2\n              };\n            }\n          }\n        });\n\n        // Auto-cast abilities\n        for (var i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Identify dead enemies but DON'T handle kills inside setState\n        var deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        enemiesToKill = [...deadEnemies]; // Store for processing outside setState\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        var MAX_ENEMIES = 10;\n        var MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        var now = Date.now();\n        var hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`🐛 Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`🐛 Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n\n      // HANDLE ENEMY KILLS OUTSIDE OF setCombatState TO AVOID CROSS-COMPONENT ISSUES\n      enemiesToKill.forEach(enemy => {\n        handleEnemyKill(enemy);\n      });\n    }, [handleEnemyKill]); // Only depend on handleEnemyKill, not combatEngine\n\n    // Find closest enemy to ninja - exposed for UI use\n    var findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ninjaX = SCREEN_WIDTH / 2;\n      var ninjaY = GAME_AREA_HEIGHT / 2;\n      var closestEnemy = enemies[0];\n      var closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        var distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`🎯 Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    var findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    var updateNinjaPosition = position => {\n      console.log(`🎯 Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    var handleProjectileHit = projectile => {\n      console.log(`💥 Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        var newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        var enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`🎯 Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    var castAbility = (state, slotIndex) => {\n      var deck = state.abilityManager.getDeck();\n      var ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      var target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      var damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      var damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`🎯 ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    var createProjectile = (targetEnemy, damage, ninjaPos) => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      var ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      var ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      var ENEMY_SIZE = 35;\n      var projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`🔥 Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`🎯 Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    var spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      var SCREEN_WIDTH = 390; // Mobile width\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar // Screen height minus bottom tabs\n      var ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      var x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      var y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    var startCombat = React.default.useCallback(() => {\n      console.log('🚀 Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('🚀 Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Stop combat\n    var stopCombat = React.default.useCallback(() => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    }, [_engineCombatEngine.combatEngine, handleCombatTick]);\n\n    // Equipment management\n    var equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    var getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    var getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    var upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    var clearAllEnemies = () => {\n      console.log('💥 Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    var triggerLevelUpExplosion = () => {\n      console.log('💥 LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      var explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        var enemyCount = prev.enemies.length;\n        var explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        var explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`💥 Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill - MOBILE FIX: defer to prevent render-phase violation\n        if (explosionXP > 0) {\n          setTimeout(() => {\n            updateNinja(ninja => ({\n              experience: ninja.experience + explosionXP,\n              gold: ninja.gold + explosionGold\n            }));\n          }, 0); // Defer to next event loop to prevent cross-context update during render\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        var damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    var spawnEnemy = position => {\n      var SCREEN_WIDTH = 390;\n      var GAME_AREA_HEIGHT = 844 - 140; // Smaller top bar + compact abilities bar\n      var ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      var x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      var enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    var spawnBoss = bossEnemy => {\n      console.log(`🐉 Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    var clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    var contextValue = React.default.useMemo(() => ({\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    }), [\n    // Only include primitive values and state to prevent infinite loop\n    // Remove function dependencies that recreate and cause circular refs\n    combatState, projectiles, lastExplosionTime]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"387yj0EOMzCjt8z9UaORPer6soo=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":614,"map":[[15,2,67,0,"Object"],[15,8,67,0],[15,9,67,0,"defineProperty"],[15,23,67,0],[15,24,67,0,"exports"],[15,31,67,0],[16,4,67,0,"enumerable"],[16,14,67,0],[17,4,67,0,"get"],[17,7,67,0],[17,18,67,0,"get"],[17,19,67,0],[18,6,67,0],[18,13,67,0,"useCombat"],[18,22,67,0],[19,4,67,0],[20,2,67,0],[21,2,77,0,"Object"],[21,8,77,0],[21,9,77,0,"defineProperty"],[21,23,77,0],[21,24,77,0,"exports"],[21,31,77,0],[22,4,77,0,"enumerable"],[22,14,77,0],[23,4,77,0,"get"],[23,7,77,0],[23,18,77,0,"get"],[23,19,77,0],[24,6,77,0],[24,13,77,0,"CombatProvider"],[24,27,77,0],[25,4,77,0],[26,2,77,0],[27,2,624,2],[27,6,624,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,624,2],[27,42,624,2,"require"],[27,49,624,2],[27,50,624,2,"_dependencyMap"],[27,64,624,2],[28,2,624,2],[28,6,624,2,"_slicedToArray"],[28,20,624,2],[28,23,624,2,"_interopDefault"],[28,38,624,2],[28,39,624,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,624,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,3,0],[31,6,3,0,"_engineCombatEngine"],[31,25,3,0],[31,28,3,0,"require"],[31,35,3,0],[31,36,3,0,"_dependencyMap"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_typesAbilityTypes"],[32,24,4,0],[32,27,4,0,"require"],[32,34,4,0],[32,35,4,0,"_dependencyMap"],[32,49,4,0],[33,2,5,0],[33,6,5,0,"_GameContext"],[33,18,5,0],[33,21,5,0,"require"],[33,28,5,0],[33,29,5,0,"_dependencyMap"],[33,43,5,0],[34,2,6,0],[34,6,6,0,"_ZoneContext"],[34,18,6,0],[34,21,6,0,"require"],[34,28,6,0],[34,29,6,0,"_dependencyMap"],[34,43,6,0],[35,2,6,40],[35,6,6,40,"_reactJsxDevRuntime"],[35,25,6,40],[35,28,6,40,"require"],[35,35,6,40],[35,36,6,40,"_dependencyMap"],[35,50,6,40],[36,2,65,0],[36,6,65,6,"CombatContext"],[36,19,65,19],[36,35,65,22],[36,39,65,22,"createContext"],[36,45,65,35],[36,46,65,35,"createContext"],[36,59,65,35],[36,61,65,67,"undefined"],[36,70,65,76],[36,71,65,77],[37,2,67,7],[37,6,67,13,"useCombat"],[37,15,67,22],[37,18,67,25,"useCombat"],[37,19,67,25],[37,24,67,50],[38,4,67,50,"_s"],[38,6,67,50],[39,4,68,2],[39,8,68,8,"context"],[39,15,68,15],[39,18,68,18],[39,22,68,18,"useContext"],[39,28,68,28],[39,29,68,28,"useContext"],[39,39,68,28],[39,41,68,29,"CombatContext"],[39,54,68,42],[39,55,68,43],[40,4,69,2],[40,8,69,6],[40,9,69,7,"context"],[40,16,69,14],[40,18,69,16],[41,6,70,4],[41,12,70,10],[41,16,70,14,"Error"],[41,21,70,19],[41,22,70,20],[41,70,70,68],[41,71,70,69],[42,4,71,2],[43,4,72,2],[43,11,72,9,"context"],[43,18,72,16],[44,2,73,0],[44,3,73,1],[45,2,73,2,"_s"],[45,4,73,2],[45,5,67,13,"useCombat"],[45,14,67,22],[46,2,75,0],[46,6,75,4,"enemyCounter"],[46,18,75,16],[46,21,75,19],[46,22,75,20],[46,23,75,21],[46,24,75,22],[48,2,77,7],[48,6,77,13,"CombatProvider"],[48,20,77,27],[48,23,77,30,"_ref"],[48,27,77,30],[48,31,77,73],[49,4,77,73,"_s3"],[49,7,77,73],[50,4,77,73],[50,8,77,33,"children"],[50,16,77,41],[50,19,77,41,"_ref"],[50,23,77,41],[50,24,77,33,"children"],[50,32,77,41],[51,4,78,2],[51,8,78,2,"_useGame"],[51,16,78,2],[51,19,78,26],[51,23,78,26,"useGame"],[51,35,78,33],[51,36,78,33,"useGame"],[51,43,78,33],[51,45,78,34],[51,46,78,35],[52,6,78,10,"updateNinja"],[52,17,78,21],[52,20,78,21,"_useGame"],[52,28,78,21],[52,29,78,10,"updateNinja"],[52,40,78,21],[53,4,79,2],[53,8,79,2,"_useZone"],[53,16,79,2],[53,19,79,30],[53,23,79,30,"useZone"],[53,35,79,37],[53,36,79,37,"useZone"],[53,43,79,37],[53,45,79,38],[53,46,79,39],[54,6,79,10,"recordEnemyKill"],[54,21,79,25],[54,24,79,25,"_useZone"],[54,32,79,25],[54,33,79,10,"recordEnemyKill"],[54,48,79,25],[55,4,81,2],[55,8,81,2,"_useState"],[55,17,81,2],[55,20,81,40],[55,24,81,40,"useState"],[55,30,81,48],[55,31,81,48,"useState"],[55,39,81,48],[55,41,81,62],[56,8,82,4,"isInCombat"],[56,18,82,14],[56,20,82,16],[56,25,82,21],[57,8,83,4,"currentTick"],[57,19,83,15],[57,21,83,17],[57,22,83,18],[58,8,84,4,"enemies"],[58,15,84,11],[58,17,84,13],[58,19,84,15],[59,8,85,4,"abilityManager"],[59,22,85,18],[59,24,85,20],[59,28,85,24,"AbilityManager"],[59,46,85,38],[59,47,85,38,"AbilityManager"],[59,61,85,38],[59,62,85,39],[59,63,85,40],[60,8,86,4,"statusEffects"],[60,21,86,17],[60,23,86,19],[60,27,86,23,"StatusEffectManager"],[60,46,86,42],[60,47,86,42,"StatusEffectManager"],[60,66,86,42],[60,67,86,43],[60,68,86,44],[61,8,87,4,"playerStats"],[61,19,87,15],[61,21,87,17],[62,10,88,6,"attack"],[62,16,88,12],[62,18,88,14],[62,20,88,16],[63,10,88,18],[64,10,89,6,"defense"],[64,17,89,13],[64,19,89,15],[64,20,89,16],[65,10,90,6,"health"],[65,16,90,12],[65,18,90,14],[65,21,90,17],[66,10,91,6,"maxHealth"],[66,19,91,15],[66,21,91,17],[66,24,91,20],[67,10,92,6,"critChance"],[67,20,92,16],[67,22,92,18],[67,23,92,19],[68,10,93,6,"critDamage"],[68,20,93,16],[68,22,93,18],[68,25,93,21],[69,10,94,6,"cooldownReduction"],[69,27,94,23],[69,29,94,25],[70,8,95,4],[71,6,96,2],[71,7,96,3],[71,8,96,4],[72,6,96,4,"_useState2"],[72,16,96,4],[72,23,96,4,"_slicedToArray"],[72,37,96,4],[72,38,96,4,"default"],[72,45,96,4],[72,47,96,4,"_useState"],[72,56,96,4],[73,6,81,9,"combatState"],[73,17,81,20],[73,20,81,20,"_useState2"],[73,30,81,20],[74,6,81,22,"setCombatState"],[74,20,81,36],[74,23,81,36,"_useState2"],[74,33,81,36],[75,4,98,2],[75,8,98,2,"_useState3"],[75,18,98,2],[75,21,98,40],[75,25,98,40,"useState"],[75,31,98,48],[75,32,98,48,"useState"],[75,40,98,48],[75,42,98,69],[75,44,98,71],[75,45,98,72],[76,6,98,72,"_useState4"],[76,16,98,72],[76,23,98,72,"_slicedToArray"],[76,37,98,72],[76,38,98,72,"default"],[76,45,98,72],[76,47,98,72,"_useState3"],[76,57,98,72],[77,6,98,9,"projectiles"],[77,17,98,20],[77,20,98,20,"_useState4"],[77,30,98,20],[78,6,98,22,"setProjectiles"],[78,20,98,36],[78,23,98,36,"_useState4"],[78,33,98,36],[79,4,99,2],[79,8,99,2,"_useState5"],[79,18,99,2],[79,21,99,52],[79,25,99,52,"useState"],[79,31,99,60],[79,32,99,60,"useState"],[79,40,99,60],[79,42,99,69],[79,43,99,70],[79,44,99,71],[80,6,99,71,"_useState6"],[80,16,99,71],[80,23,99,71,"_slicedToArray"],[80,37,99,71],[80,38,99,71,"default"],[80,45,99,71],[80,47,99,71,"_useState5"],[80,57,99,71],[81,6,99,9,"lastExplosionTime"],[81,23,99,26],[81,26,99,26,"_useState6"],[81,36,99,26],[82,6,99,28,"setLastExplosionTime"],[82,26,99,48],[82,29,99,48,"_useState6"],[82,39,99,48],[83,4,100,2],[84,4,101,2],[84,8,101,8,"SCREEN_WIDTH"],[84,20,101,20],[84,23,101,23],[84,26,101,26],[85,4,102,2],[85,8,102,8,"GAME_AREA_HEIGHT"],[85,24,102,24],[85,27,102,27],[85,30,102,30],[85,33,102,33],[85,36,102,36],[85,37,102,37],[85,38,102,38],[86,4,103,2],[86,8,103,8,"NINJA_SIZE"],[86,18,103,18],[86,21,103,21],[86,23,103,23],[87,4,104,2],[87,8,104,2,"_useState7"],[87,18,104,2],[87,21,104,44],[87,25,104,44,"useState"],[87,31,104,52],[87,32,104,52,"useState"],[87,40,104,52],[87,42,104,77],[88,8,105,4,"x"],[88,9,105,5],[88,11,105,7],[88,13,105,9],[89,8,106,4,"y"],[89,9,106,5],[89,11,106,7,"GAME_AREA_HEIGHT"],[89,27,106,23],[89,30,106,26,"NINJA_SIZE"],[89,40,106,36],[89,43,106,39],[90,6,107,2],[90,7,107,3],[90,8,107,4],[91,6,107,4,"_useState8"],[91,16,107,4],[91,23,107,4,"_slicedToArray"],[91,37,107,4],[91,38,107,4,"default"],[91,45,107,4],[91,47,107,4,"_useState7"],[91,57,107,4],[92,6,104,9,"ninjaPosition"],[92,19,104,22],[92,22,104,22,"_useState8"],[92,32,104,22],[93,6,104,24,"setNinjaPosition"],[93,22,104,40],[93,25,104,40,"_useState8"],[93,35,104,40],[95,4,109,2],[96,4,110,2],[96,8,110,8,"handleEnemyKill"],[96,23,110,23],[96,26,110,26],[96,30,110,26,"useCallback"],[96,36,110,37],[96,37,110,37,"useCallback"],[96,48,110,37],[96,50,110,39,"enemy"],[96,55,110,57],[96,59,110,62],[97,6,111,4,"console"],[97,13,111,11],[97,14,111,12,"log"],[97,17,111,15],[97,18,111,16],[97,46,111,44,"enemy"],[97,51,111,49],[97,52,111,50,"maxHealth"],[97,61,111,59],[97,63,111,61],[97,64,111,62],[99,6,113,4],[100,6,114,4],[100,10,114,10,"xpReward"],[100,18,114,18],[100,21,114,21],[100,23,114,23],[100,24,114,24],[100,25,114,25],[101,6,115,4],[101,10,115,10,"goldReward"],[101,20,115,20],[101,23,115,23],[101,25,115,25],[102,6,117,4,"console"],[102,13,117,11],[102,14,117,12,"log"],[102,17,117,15],[102,18,117,16],[102,33,117,31,"xpReward"],[102,41,117,39],[102,52,117,50,"goldReward"],[102,62,117,60],[102,78,117,76],[102,79,117,77],[104,6,119,4],[105,6,120,4],[106,6,121,4,"setTimeout"],[106,16,121,14],[106,17,121,15],[106,23,121,21],[107,8,122,6],[108,8,123,6,"updateNinja"],[108,19,123,17],[108,20,123,19,"prev"],[108,24,123,23],[108,28,123,28],[109,10,124,8,"console"],[109,17,124,15],[109,18,124,16,"log"],[109,21,124,19],[109,22,124,20],[109,39,124,37,"prev"],[109,43,124,41],[109,44,124,42,"experience"],[109,54,124,52],[109,66,124,64,"prev"],[109,70,124,68],[109,71,124,69,"experience"],[109,81,124,79],[109,84,124,82,"xpReward"],[109,92,124,90],[109,94,124,92],[109,95,124,93],[110,10,125,8],[110,17,125,15],[111,12,126,10,"experience"],[111,22,126,20],[111,24,126,22,"prev"],[111,28,126,26],[111,29,126,27,"experience"],[111,39,126,37],[111,42,126,40,"xpReward"],[111,50,126,48],[112,12,127,10,"gold"],[112,16,127,14],[112,18,127,16,"prev"],[112,22,127,20],[112,23,127,21,"gold"],[112,27,127,25],[112,30,127,28,"goldReward"],[113,10,128,8],[113,11,128,9],[114,8,129,6],[114,9,129,7],[114,10,129,8],[116,8,131,6],[117,8,132,6],[117,12,132,12,"zoneEnemy"],[117,21,132,21],[117,24,132,24],[118,10,133,8,"id"],[118,12,133,10],[118,14,133,12,"enemy"],[118,19,133,17],[118,20,133,18,"id"],[118,22,133,20],[119,10,134,8,"typeId"],[119,16,134,14],[119,18,134,16],[119,28,134,26],[120,10,134,28],[121,10,135,8,"name"],[121,14,135,12],[121,16,135,14,"enemy"],[121,21,135,19],[121,22,135,20,"name"],[121,26,135,24],[122,10,136,8,"icon"],[122,14,136,12],[122,16,136,14],[122,20,136,18],[123,10,136,20],[124,10,137,8,"hp"],[124,12,137,10],[124,14,137,12],[124,15,137,13],[125,10,137,15],[126,10,138,8,"maxHP"],[126,15,138,13],[126,17,138,15,"enemy"],[126,22,138,20],[126,23,138,21,"maxHealth"],[126,32,138,30],[127,10,139,8,"attack"],[127,16,139,14],[127,18,139,16,"enemy"],[127,23,139,21],[127,24,139,22,"stats"],[127,29,139,27],[127,30,139,28,"attack"],[127,36,139,34],[128,10,140,8,"xp"],[128,12,140,10],[128,14,140,12],[128,16,140,14],[129,10,140,16],[130,10,141,8,"position"],[130,18,141,16],[130,20,141,18,"enemy"],[130,25,141,23],[130,26,141,24,"position"],[131,8,142,6],[131,9,142,7],[132,8,143,6,"recordEnemyKill"],[132,23,143,21],[132,24,143,22,"zoneEnemy"],[132,33,143,31],[132,34,143,32],[133,6,144,4],[133,7,144,5],[133,9,144,7],[133,10,144,8],[133,11,144,9],[133,12,144,10],[133,13,144,11],[134,4,145,2],[134,5,145,3],[134,7,145,5],[134,8,145,6,"updateNinja"],[134,19,145,17],[134,21,145,19,"recordEnemyKill"],[134,36,145,34],[134,37,145,35],[134,38,145,36],[136,4,147,2],[137,4,148,2],[137,8,148,8,"handleCombatTick"],[137,24,148,24],[137,27,148,27,"React"],[137,32,148,32],[137,33,148,32,"default"],[137,40,148,32],[137,41,148,33,"useCallback"],[137,52,148,44],[137,53,148,45],[137,59,148,51],[138,6,148,51],[138,10,148,51,"_s2"],[138,13,148,51],[138,16,148,51,"$RefreshSig$"],[138,28,148,51],[139,6,149,4,"console"],[139,13,149,11],[139,14,149,12,"log"],[139,17,149,15],[139,18,149,16],[139,45,149,43],[139,46,149,44],[140,6,151,4],[140,10,151,8,"enemiesToKill"],[140,23,151,36],[140,26,151,39],[140,28,151,41],[140,29,151,42],[140,30,151,43],[142,6,153,4,"_s2"],[142,9,153,4],[142,10,153,4,"setCombatState"],[142,24,153,18],[142,25,153,18,"_s2"],[142,28,153,18],[142,29,153,19,"prev"],[142,33,153,23],[142,37,153,27],[143,8,153,27,"_s2"],[143,11,153,27],[144,8,154,6],[144,12,154,12,"newTick"],[144,19,154,19],[144,22,154,22,"combatEngine"],[144,41,154,34],[144,42,154,34,"combatEngine"],[144,54,154,34],[144,55,154,35,"getCurrentTick"],[144,69,154,49],[144,70,154,50],[144,71,154,51],[145,8,155,6],[145,12,155,12,"newState"],[145,20,155,20],[145,23,155,23],[146,10,155,25],[146,13,155,28,"prev"],[146,17,155,32],[147,10,155,34,"currentTick"],[147,21,155,45],[147,23,155,47,"newTick"],[148,8,155,55],[148,9,155,56],[149,8,157,6],[149,12,157,10],[149,13,157,11,"newState"],[149,21,157,19],[149,22,157,20,"isInCombat"],[149,32,157,30],[149,34,157,32],[149,41,157,39,"newState"],[149,49,157,47],[151,8,159,6],[152,8,160,6,"newState"],[152,16,160,14],[152,17,160,15,"abilityManager"],[152,31,160,29],[152,32,160,30,"updateCooldowns"],[152,47,160,45],[152,48,160,46,"newTick"],[152,55,160,53],[152,56,160,54],[154,8,162,6],[155,8,163,6],[155,12,163,12,"effectResults"],[155,25,163,25],[155,28,163,28,"newState"],[155,36,163,36],[155,37,163,37,"statusEffects"],[155,50,163,50],[155,51,163,51,"processTick"],[155,62,163,62],[155,63,163,63,"newTick"],[155,70,163,70],[155,71,163,71],[157,8,165,6],[158,8,166,6,"effectResults"],[158,21,166,19],[158,22,166,20,"forEach"],[158,29,166,27],[158,30,166,28],[158,31,166,29,"results"],[158,38,166,36],[158,40,166,38,"entityId"],[158,48,166,46],[158,53,166,51],[159,10,167,8],[159,14,167,14,"enemyIndex"],[159,24,167,24],[159,27,167,27,"newState"],[159,35,167,35],[159,36,167,36,"enemies"],[159,43,167,43],[159,44,167,44,"findIndex"],[159,53,167,53],[159,54,167,54,"e"],[159,55,167,55],[159,59,167,59,"e"],[159,60,167,60],[159,61,167,61,"id"],[159,63,167,63],[159,68,167,68,"entityId"],[159,76,167,76],[159,77,167,77],[160,10,168,8],[160,14,168,12,"enemyIndex"],[160,24,168,22],[160,28,168,26],[160,29,168,27],[160,31,168,29],[161,12,169,10,"results"],[161,19,169,17],[161,20,169,18,"forEach"],[161,27,169,25],[161,28,169,26,"result"],[161,34,169,32],[161,38,169,36],[162,14,170,12,"newState"],[162,22,170,20],[162,23,170,21,"enemies"],[162,30,170,28],[162,31,170,29,"enemyIndex"],[162,41,170,39],[162,42,170,40],[162,43,170,41,"health"],[162,49,170,47],[162,53,170,51,"result"],[162,59,170,57],[162,60,170,58,"damage"],[162,66,170,64],[163,14,171,12,"newState"],[163,22,171,20],[163,23,171,21,"enemies"],[163,30,171,28],[163,31,171,29,"enemyIndex"],[163,41,171,39],[163,42,171,40],[163,43,171,41,"lastDamaged"],[163,54,171,52],[163,57,171,55,"newTick"],[163,64,171,62],[164,12,172,10],[164,13,172,11],[164,14,172,12],[165,10,173,8],[166,8,174,6],[166,9,174,7],[166,10,174,8],[168,8,176,6],[169,8,177,6,"newState"],[169,16,177,14],[169,17,177,15,"enemies"],[169,24,177,22],[169,25,177,23,"forEach"],[169,32,177,30],[169,33,177,31,"enemy"],[169,38,177,36],[169,42,177,40],[170,10,178,8],[170,14,178,12],[170,15,178,13,"enemy"],[170,20,178,18],[170,21,178,19,"isBoss"],[170,27,178,25],[170,29,178,27],[171,12,178,29],[172,12,179,10],[173,12,180,10],[173,16,180,16,"MOVEMENT_SPEED"],[173,30,180,30],[173,33,180,33],[173,36,180,36],[173,37,180,37],[173,38,180,38],[174,12,181,10],[174,16,181,16,"SCREEN_WIDTH"],[174,29,181,28],[174,32,181,31],[174,35,181,34],[175,12,182,10],[175,16,182,16,"GAME_AREA_HEIGHT"],[175,33,182,32],[175,36,182,35],[175,39,182,38],[175,40,182,39],[175,41,182,40],[176,12,183,10],[176,16,183,16,"ENEMY_SIZE"],[176,26,183,26],[176,29,183,29],[176,31,183,31],[178,12,185,10],[179,12,186,10],[179,16,186,14],[179,17,186,15,"enemy"],[179,22,186,20],[179,23,186,21,"movementDirection"],[179,40,186,38],[179,42,186,40],[180,14,187,12],[181,14,188,12,"enemy"],[181,19,188,17],[181,20,188,18,"movementDirection"],[181,37,188,35],[181,40,188,38],[182,16,189,14,"x"],[182,17,189,15],[182,19,189,17],[182,20,189,18,"Math"],[182,24,189,22],[182,25,189,23,"random"],[182,31,189,29],[182,32,189,30],[182,33,189,31],[182,36,189,34],[182,39,189,37],[182,43,189,41],[182,44,189,42],[183,16,189,44],[184,16,190,14,"y"],[184,17,190,15],[184,19,190,17],[184,20,190,18,"Math"],[184,24,190,22],[184,25,190,23,"random"],[184,31,190,29],[184,32,190,30],[184,33,190,31],[184,36,190,34],[184,39,190,37],[184,43,190,41],[185,14,191,12],[185,15,191,13],[186,12,192,10],[188,12,194,10],[189,12,195,10],[189,16,195,14,"newX"],[189,20,195,18],[189,23,195,21,"enemy"],[189,28,195,26],[189,29,195,27,"position"],[189,37,195,35],[189,38,195,36,"x"],[189,39,195,37],[189,42,195,41,"enemy"],[189,47,195,46],[189,48,195,47,"movementDirection"],[189,65,195,64],[189,66,195,65,"x"],[189,67,195,66],[189,70,195,69,"MOVEMENT_SPEED"],[189,84,195,84],[190,12,196,10],[190,16,196,14,"newY"],[190,20,196,18],[190,23,196,21,"enemy"],[190,28,196,26],[190,29,196,27,"position"],[190,37,196,35],[190,38,196,36,"y"],[190,39,196,37],[190,42,196,41,"enemy"],[190,47,196,46],[190,48,196,47,"movementDirection"],[190,65,196,64],[190,66,196,65,"y"],[190,67,196,66],[190,70,196,69,"MOVEMENT_SPEED"],[190,84,196,84],[192,12,198,10],[193,12,199,10],[193,16,199,14,"newX"],[193,20,199,18],[193,24,199,22],[193,25,199,23],[193,29,199,27,"newX"],[193,33,199,31],[193,37,199,35,"SCREEN_WIDTH"],[193,50,199,47],[193,53,199,50,"ENEMY_SIZE"],[193,63,199,60],[193,65,199,62],[194,14,200,12,"enemy"],[194,19,200,17],[194,20,200,18,"movementDirection"],[194,37,200,35],[194,38,200,36,"x"],[194,39,200,37],[194,43,200,41],[194,44,200,42],[194,45,200,43],[195,14,201,12,"newX"],[195,18,201,16],[195,21,201,19,"Math"],[195,25,201,23],[195,26,201,24,"max"],[195,29,201,27],[195,30,201,28],[195,31,201,29],[195,33,201,31,"Math"],[195,37,201,35],[195,38,201,36,"min"],[195,41,201,39],[195,42,201,40,"SCREEN_WIDTH"],[195,55,201,52],[195,58,201,55,"ENEMY_SIZE"],[195,68,201,65],[195,70,201,67,"newX"],[195,74,201,71],[195,75,201,72],[195,76,201,73],[196,12,202,10],[197,12,203,10],[197,16,203,14,"newY"],[197,20,203,18],[197,24,203,22],[197,25,203,23],[197,29,203,27,"newY"],[197,33,203,31],[197,37,203,35,"GAME_AREA_HEIGHT"],[197,54,203,51],[197,57,203,54,"ENEMY_SIZE"],[197,67,203,64],[197,69,203,66],[198,14,204,12,"enemy"],[198,19,204,17],[198,20,204,18,"movementDirection"],[198,37,204,35],[198,38,204,36,"y"],[198,39,204,37],[198,43,204,41],[198,44,204,42],[198,45,204,43],[199,14,205,12,"newY"],[199,18,205,16],[199,21,205,19,"Math"],[199,25,205,23],[199,26,205,24,"max"],[199,29,205,27],[199,30,205,28],[199,31,205,29],[199,33,205,31,"Math"],[199,37,205,35],[199,38,205,36,"min"],[199,41,205,39],[199,42,205,40,"GAME_AREA_HEIGHT"],[199,59,205,56],[199,62,205,59,"ENEMY_SIZE"],[199,72,205,69],[199,74,205,71,"newY"],[199,78,205,75],[199,79,205,76],[199,80,205,77],[200,12,206,10],[202,12,208,10],[203,12,209,10,"enemy"],[203,17,209,15],[203,18,209,16,"position"],[203,26,209,24],[203,27,209,25,"x"],[203,28,209,26],[203,31,209,29,"newX"],[203,35,209,33],[204,12,210,10,"enemy"],[204,17,210,15],[204,18,210,16,"position"],[204,26,210,24],[204,27,210,25,"y"],[204,28,210,26],[204,31,210,29,"newY"],[204,35,210,33],[206,12,212,10],[207,12,213,10],[207,16,213,14,"Math"],[207,20,213,18],[207,21,213,19,"random"],[207,27,213,25],[207,28,213,26],[207,29,213,27],[207,32,213,30],[207,36,213,34],[207,38,213,36],[208,14,213,38],[209,14,214,12,"enemy"],[209,19,214,17],[209,20,214,18,"movementDirection"],[209,37,214,35],[209,40,214,38],[210,16,215,14,"x"],[210,17,215,15],[210,19,215,17],[210,20,215,18,"Math"],[210,24,215,22],[210,25,215,23,"random"],[210,31,215,29],[210,32,215,30],[210,33,215,31],[210,36,215,34],[210,39,215,37],[210,43,215,41],[210,44,215,42],[211,16,216,14,"y"],[211,17,216,15],[211,19,216,17],[211,20,216,18,"Math"],[211,24,216,22],[211,25,216,23,"random"],[211,31,216,29],[211,32,216,30],[211,33,216,31],[211,36,216,34],[211,39,216,37],[211,43,216,41],[212,14,217,12],[212,15,217,13],[213,12,218,10],[214,10,219,8],[215,8,220,6],[215,9,220,7],[215,10,220,8],[217,8,222,6],[218,8,223,6],[218,13,223,11],[218,17,223,15,"i"],[218,18,223,16],[218,21,223,19],[218,22,223,20],[218,24,223,22,"i"],[218,25,223,23],[218,28,223,26],[218,29,223,27],[218,31,223,29,"i"],[218,32,223,30],[218,34,223,32],[218,36,223,34],[219,10,224,8],[219,14,224,12,"newState"],[219,22,224,20],[219,23,224,21,"abilityManager"],[219,37,224,35],[219,38,224,36,"isAbilityReady"],[219,52,224,50],[219,53,224,51,"i"],[219,54,224,52],[219,55,224,53],[219,59,224,57,"newState"],[219,67,224,65],[219,68,224,66,"enemies"],[219,75,224,73],[219,76,224,74,"length"],[219,82,224,80],[219,85,224,83],[219,86,224,84],[219,88,224,86],[220,12,225,10],[220,16,225,14,"newState"],[220,24,225,22],[220,25,225,23,"abilityManager"],[220,39,225,37],[220,40,225,38,"useAbility"],[220,50,225,48],[220,51,225,49,"i"],[220,52,225,50],[220,54,225,52,"newTick"],[220,61,225,59],[220,62,225,60],[220,64,225,62],[221,14,226,12,"castAbility"],[221,25,226,23],[221,26,226,24,"newState"],[221,34,226,32],[221,36,226,34,"i"],[221,37,226,35],[221,38,226,36],[222,12,227,10],[223,10,228,8],[224,8,229,6],[226,8,231,6],[227,8,232,6],[227,12,232,12,"deadEnemies"],[227,23,232,23],[227,26,232,26,"newState"],[227,34,232,34],[227,35,232,35,"enemies"],[227,42,232,42],[227,43,232,43,"filter"],[227,49,232,49],[227,50,232,50,"enemy"],[227,55,232,55],[227,59,232,59,"enemy"],[227,64,232,64],[227,65,232,65,"health"],[227,71,232,71],[227,75,232,75],[227,76,232,76],[227,77,232,77],[228,8,233,6,"enemiesToKill"],[228,21,233,19],[228,24,233,22],[228,25,233,23],[228,28,233,26,"deadEnemies"],[228,39,233,37],[228,40,233,38],[228,41,233,39],[228,42,233,40],[230,8,235,6],[231,8,236,6,"newState"],[231,16,236,14],[231,17,236,15,"enemies"],[231,24,236,22],[231,27,236,25,"newState"],[231,35,236,33],[231,36,236,34,"enemies"],[231,43,236,41],[231,44,236,42,"filter"],[231,50,236,48],[231,51,236,49,"enemy"],[231,56,236,54],[231,60,236,58,"enemy"],[231,65,236,63],[231,66,236,64,"health"],[231,72,236,70],[231,75,236,73],[231,76,236,74],[231,77,236,75],[233,8,238,6],[234,8,239,6],[235,8,240,6],[235,12,240,12,"MAX_ENEMIES"],[235,23,240,23],[235,26,240,26],[235,28,240,28],[236,8,241,6],[236,12,241,12,"MIN_SPAWN_DELAY"],[236,27,241,27],[236,30,241,30],[236,33,241,33],[236,34,241,34],[236,35,241,35],[237,8,242,6],[237,12,242,12,"now"],[237,15,242,15],[237,18,242,18,"Date"],[237,22,242,22],[237,23,242,23,"now"],[237,26,242,26],[237,27,242,27],[237,28,242,28],[238,8,243,6],[238,12,243,12,"hasBoss"],[238,19,243,19],[238,22,243,22,"newState"],[238,30,243,30],[238,31,243,31,"enemies"],[238,38,243,38],[238,39,243,39,"some"],[238,43,243,43],[238,44,243,44,"enemy"],[238,49,243,49],[238,53,243,53,"enemy"],[238,58,243,58],[238,59,243,59,"isBoss"],[238,65,243,65],[238,66,243,66],[240,8,245,6],[241,8,246,6],[241,12,246,10],[241,13,246,11,"newState"],[241,21,246,19],[241,22,246,20,"lastSpawnTime"],[241,35,246,33],[241,37,246,35],[242,10,247,8,"newState"],[242,18,247,16],[242,19,247,17,"lastSpawnTime"],[242,32,247,30],[242,35,247,33,"now"],[242,38,247,36],[243,8,248,6],[244,8,250,6,"console"],[244,15,250,13],[244,16,250,14,"log"],[244,19,250,17],[244,20,250,18],[244,53,250,51,"newState"],[244,61,250,59],[244,62,250,60,"enemies"],[244,69,250,67],[244,70,250,68,"length"],[244,76,250,74],[244,85,250,83,"MAX_ENEMIES"],[244,96,250,94],[244,109,250,107,"hasBoss"],[244,116,250,114],[244,118,250,116],[244,119,250,117],[246,8,252,6],[247,8,253,6],[247,12,253,10],[247,13,253,11,"hasBoss"],[247,20,253,18],[247,24,253,22,"newState"],[247,32,253,30],[247,33,253,31,"enemies"],[247,40,253,38],[247,41,253,39,"length"],[247,47,253,45],[247,50,253,48,"MAX_ENEMIES"],[247,61,253,59],[247,65,253,64,"now"],[247,68,253,67],[247,71,253,70,"newState"],[247,79,253,78],[247,80,253,79,"lastSpawnTime"],[247,93,253,92],[247,97,253,97,"MIN_SPAWN_DELAY"],[247,112,253,112],[247,114,253,114],[248,10,254,8,"console"],[248,17,254,15],[248,18,254,16,"log"],[248,21,254,19],[248,22,254,20],[248,43,254,41,"newState"],[248,51,254,49],[248,52,254,50,"enemies"],[248,59,254,57],[248,60,254,58,"length"],[248,66,254,64],[248,69,254,67],[248,70,254,68],[248,74,254,72,"MAX_ENEMIES"],[248,85,254,83],[248,87,254,85],[248,88,254,86],[249,10,255,8,"spawnTestEnemy"],[249,24,255,22],[249,25,255,23,"newState"],[249,33,255,31],[249,34,255,32],[250,10,256,8,"newState"],[250,18,256,16],[250,19,256,17,"lastSpawnTime"],[250,32,256,30],[250,35,256,33,"now"],[250,38,256,36],[251,8,257,6],[252,8,259,6],[252,15,259,13,"newState"],[252,23,259,21],[253,6,260,4],[253,7,260,5],[253,47,260,6],[255,6,262,4],[256,6,263,4,"enemiesToKill"],[256,19,263,17],[256,20,263,18,"forEach"],[256,27,263,25],[256,28,263,26,"enemy"],[256,33,263,31],[256,37,263,35],[257,8,264,6,"handleEnemyKill"],[257,23,264,21],[257,24,264,22,"enemy"],[257,29,264,27],[257,30,264,28],[258,6,265,4],[258,7,265,5],[258,8,265,6],[259,4,266,2],[259,5,266,3],[259,7,266,5],[259,8,266,6,"handleEnemyKill"],[259,23,266,21],[259,24,266,22],[259,25,266,23],[259,26,266,24],[259,27,266,25],[261,4,268,2],[262,4,269,2],[262,8,269,8,"findClosestEnemyInternal"],[262,32,269,32],[262,35,269,36,"enemies"],[262,42,269,58],[262,46,269,83],[263,6,270,4],[263,10,270,8,"enemies"],[263,17,270,15],[263,18,270,16,"length"],[263,24,270,22],[263,29,270,27],[263,30,270,28],[263,32,270,30],[263,39,270,37],[263,43,270,41],[265,6,272,4],[266,6,273,4],[266,10,273,10,"SCREEN_WIDTH"],[266,22,273,22],[266,25,273,25],[266,28,273,28],[267,6,274,4],[267,10,274,10,"GAME_AREA_HEIGHT"],[267,26,274,26],[267,29,274,29],[267,32,274,32],[267,35,274,35],[267,38,274,38],[267,39,274,39],[267,40,274,40],[268,6,275,4],[268,10,275,10,"ninjaX"],[268,16,275,16],[268,19,275,19,"SCREEN_WIDTH"],[268,31,275,31],[268,34,275,34],[268,35,275,35],[269,6,276,4],[269,10,276,10,"ninjaY"],[269,16,276,16],[269,19,276,19,"GAME_AREA_HEIGHT"],[269,35,276,35],[269,38,276,38],[269,39,276,39],[270,6,278,4],[270,10,278,8,"closestEnemy"],[270,22,278,20],[270,25,278,23,"enemies"],[270,32,278,30],[270,33,278,31],[270,34,278,32],[270,35,278,33],[271,6,279,4],[271,10,279,8,"closestDistance"],[271,25,279,23],[271,28,279,26,"Infinity"],[271,36,279,34],[272,6,281,4,"enemies"],[272,13,281,11],[272,14,281,12,"forEach"],[272,21,281,19],[272,22,281,20,"enemy"],[272,27,281,25],[272,31,281,29],[273,8,282,6],[273,12,282,12,"distance"],[273,20,282,20],[273,23,282,23,"Math"],[273,27,282,27],[273,28,282,28,"sqrt"],[273,32,282,32],[273,33,283,8,"Math"],[273,37,283,12],[273,38,283,13,"pow"],[273,41,283,16],[273,42,283,17,"enemy"],[273,47,283,22],[273,48,283,23,"position"],[273,56,283,31],[273,57,283,32,"x"],[273,58,283,33],[273,61,283,36,"ninjaX"],[273,67,283,42],[273,69,283,44],[273,70,283,45],[273,71,283,46],[273,74,284,8,"Math"],[273,78,284,12],[273,79,284,13,"pow"],[273,82,284,16],[273,83,284,17,"enemy"],[273,88,284,22],[273,89,284,23,"position"],[273,97,284,31],[273,98,284,32,"y"],[273,99,284,33],[273,102,284,36,"ninjaY"],[273,108,284,42],[273,110,284,44],[273,111,284,45],[273,112,285,6],[273,113,285,7],[274,8,287,6],[274,12,287,10,"distance"],[274,20,287,18],[274,23,287,21,"closestDistance"],[274,38,287,36],[274,40,287,38],[275,10,288,8,"closestDistance"],[275,25,288,23],[275,28,288,26,"distance"],[275,36,288,34],[276,10,289,8,"closestEnemy"],[276,22,289,20],[276,25,289,23,"enemy"],[276,30,289,28],[277,8,290,6],[278,6,291,4],[278,7,291,5],[278,8,291,6],[279,6,293,4,"console"],[279,13,293,11],[279,14,293,12,"log"],[279,17,293,15],[279,18,293,16],[279,60,293,58,"closestDistance"],[279,75,293,73],[279,76,293,74,"toFixed"],[279,83,293,81],[279,84,293,82],[279,85,293,83],[279,86,293,84],[279,88,293,86],[279,89,293,87],[280,6,294,4],[280,13,294,11,"closestEnemy"],[280,25,294,23],[281,4,295,2],[281,5,295,3],[283,4,297,2],[284,4,298,2],[284,8,298,8,"findClosestEnemy"],[284,24,298,24],[284,27,298,27,"findClosestEnemy"],[284,28,298,27],[284,33,298,53],[285,6,299,4],[285,13,299,11,"findClosestEnemyInternal"],[285,37,299,35],[285,38,299,36,"combatState"],[285,49,299,47],[285,50,299,48,"enemies"],[285,57,299,55],[285,58,299,56],[286,4,300,2],[286,5,300,3],[288,4,302,2],[289,4,303,2],[289,8,303,8,"updateNinjaPosition"],[289,27,303,27],[289,30,303,31,"position"],[289,38,303,63],[289,42,303,68],[290,6,304,4,"console"],[290,13,304,11],[290,14,304,12,"log"],[290,17,304,15],[290,18,304,16],[290,67,304,65,"position"],[290,75,304,73],[290,76,304,74,"x"],[290,77,304,75],[290,78,304,76,"toFixed"],[290,85,304,83],[290,86,304,84],[290,87,304,85],[290,88,304,86],[290,93,304,91,"position"],[290,101,304,99],[290,102,304,100,"y"],[290,103,304,101],[290,104,304,102,"toFixed"],[290,111,304,109],[290,112,304,110],[290,113,304,111],[290,114,304,112],[290,117,304,115],[290,118,304,116],[291,6,305,4,"setNinjaPosition"],[291,22,305,20],[291,23,305,21,"position"],[291,31,305,29],[291,32,305,30],[292,4,306,2],[292,5,306,3],[294,4,308,2],[295,4,309,2],[295,8,309,8,"handleProjectileHit"],[295,27,309,27],[295,30,309,31,"projectile"],[295,40,309,59],[295,44,309,64],[296,6,310,4,"console"],[296,13,310,11],[296,14,310,12,"log"],[296,17,310,15],[296,18,310,16],[296,35,310,33,"projectile"],[296,45,310,43],[296,46,310,44,"id"],[296,48,310,46],[296,62,310,60,"projectile"],[296,72,310,70],[296,73,310,71,"targetEnemyId"],[296,86,310,84],[296,94,310,92,"projectile"],[296,104,310,102],[296,105,310,103,"damage"],[296,111,310,109],[296,120,310,118],[296,121,310,119],[297,6,312,4,"setCombatState"],[297,20,312,18],[297,21,312,19,"prev"],[297,25,312,23],[297,29,312,27],[298,8,313,6],[298,12,313,12,"newState"],[298,20,313,20],[298,23,313,23],[299,10,313,25],[299,13,313,28,"prev"],[300,8,313,33],[300,9,313,34],[302,8,315,6],[303,8,316,6],[303,12,316,12,"enemyIndex"],[303,22,316,22],[303,25,316,25,"newState"],[303,33,316,33],[303,34,316,34,"enemies"],[303,41,316,41],[303,42,316,42,"findIndex"],[303,51,316,51],[303,52,316,52,"e"],[303,53,316,53],[303,57,316,57,"e"],[303,58,316,58],[303,59,316,59,"id"],[303,61,316,61],[303,66,316,66,"projectile"],[303,76,316,76],[303,77,316,77,"targetEnemyId"],[303,90,316,90],[303,91,316,91],[304,8,317,6],[304,12,317,10,"enemyIndex"],[304,22,317,20],[304,26,317,24],[304,27,317,25],[304,29,317,27],[305,10,318,8,"newState"],[305,18,318,16],[305,19,318,17,"enemies"],[305,26,318,24],[305,29,318,27],[305,30,318,28],[305,33,318,31,"newState"],[305,41,318,39],[305,42,318,40,"enemies"],[305,49,318,47],[305,50,318,48],[306,10,319,8,"newState"],[306,18,319,16],[306,19,319,17,"enemies"],[306,26,319,24],[306,27,319,25,"enemyIndex"],[306,37,319,35],[306,38,319,36],[306,41,319,39],[307,12,320,10],[307,15,320,13,"newState"],[307,23,320,21],[307,24,320,22,"enemies"],[307,31,320,29],[307,32,320,30,"enemyIndex"],[307,42,320,40],[307,43,320,41],[308,12,321,10,"health"],[308,18,321,16],[308,20,321,18,"newState"],[308,28,321,26],[308,29,321,27,"enemies"],[308,36,321,34],[308,37,321,35,"enemyIndex"],[308,47,321,45],[308,48,321,46],[308,49,321,47,"health"],[308,55,321,53],[308,58,321,56,"projectile"],[308,68,321,66],[308,69,321,67,"damage"],[308,75,321,73],[309,12,322,10,"lastDamaged"],[309,23,322,21],[309,25,322,23,"combatEngine"],[309,44,322,35],[309,45,322,35,"combatEngine"],[309,57,322,35],[309,58,322,36,"getCurrentTick"],[309,72,322,50],[309,73,322,51],[310,10,323,8],[310,11,323,9],[311,10,325,8,"console"],[311,17,325,15],[311,18,325,16,"log"],[311,21,325,19],[311,22,325,20],[311,34,325,32,"projectile"],[311,44,325,42],[311,45,325,43,"targetEnemyId"],[311,58,325,56],[311,70,325,68,"newState"],[311,78,325,76],[311,79,325,77,"enemies"],[311,86,325,84],[311,87,325,85,"enemyIndex"],[311,97,325,95],[311,98,325,96],[311,99,325,97,"health"],[311,105,325,103],[311,109,325,107,"newState"],[311,117,325,115],[311,118,325,116,"enemies"],[311,125,325,123],[311,126,325,124,"enemyIndex"],[311,136,325,134],[311,137,325,135],[311,138,325,136,"maxHealth"],[311,147,325,145],[311,149,325,147],[311,150,325,148],[312,8,326,6],[313,8,328,6],[313,15,328,13,"newState"],[313,23,328,21],[314,6,329,4],[314,7,329,5],[314,8,329,6],[316,6,331,4],[317,6,332,4,"setProjectiles"],[317,20,332,18],[317,21,332,19,"prev"],[317,25,332,23],[317,29,332,27,"prev"],[317,33,332,31],[317,34,332,32,"filter"],[317,40,332,38],[317,41,332,39,"p"],[317,42,332,40],[317,46,332,44,"p"],[317,47,332,45],[317,48,332,46,"id"],[317,50,332,48],[317,55,332,53,"projectile"],[317,65,332,63],[317,66,332,64,"id"],[317,68,332,66],[317,69,332,67],[317,70,332,68],[318,4,333,2],[318,5,333,3],[320,4,335,2],[321,4,336,2],[321,8,336,8,"castAbility"],[321,19,336,19],[321,22,336,22,"castAbility"],[321,23,336,23,"state"],[321,28,336,41],[321,30,336,43,"slotIndex"],[321,39,336,60],[321,44,336,65],[322,6,337,4],[322,10,337,10,"deck"],[322,14,337,14],[322,17,337,17,"state"],[322,22,337,22],[322,23,337,23,"abilityManager"],[322,37,337,37],[322,38,337,38,"getDeck"],[322,45,337,45],[322,46,337,46],[322,47,337,47],[323,6,338,4],[323,10,338,10,"ability"],[323,17,338,17],[323,20,338,20,"deck"],[323,24,338,24],[323,25,338,25,"slots"],[323,30,338,30],[323,31,338,31,"slotIndex"],[323,40,338,40],[323,41,338,41],[324,6,339,4],[324,10,339,8],[324,11,339,9,"ability"],[324,18,339,16],[324,20,339,18],[326,6,341,4],[327,6,342,4],[327,10,342,10,"target"],[327,16,342,16],[327,19,342,19,"findClosestEnemyInternal"],[327,43,342,43],[327,44,342,44,"state"],[327,49,342,49],[327,50,342,50,"enemies"],[327,57,342,57],[327,58,342,58],[328,6,343,4],[328,10,343,8],[328,11,343,9,"target"],[328,17,343,15],[328,19,343,17],[330,6,345,4],[331,6,346,4],[331,10,346,8,"damage"],[331,16,346,14],[331,19,346,17,"ability"],[331,26,346,24],[331,27,346,25,"stats"],[331,32,346,30],[331,33,346,31,"baseDamage"],[331,43,346,41],[333,6,348,4],[334,6,349,4,"deck"],[334,10,349,8],[334,11,349,9,"activeSynergies"],[334,26,349,24],[334,27,349,25,"forEach"],[334,34,349,32],[334,35,349,33,"synergy"],[334,42,349,40],[334,46,349,44],[335,8,350,6],[335,12,350,10,"synergy"],[335,19,350,17],[335,20,350,18,"bonus"],[335,25,350,23],[335,26,350,24,"damageBonus"],[335,37,350,35],[335,41,351,10,"synergy"],[335,48,351,17],[335,49,351,18,"requiredTags"],[335,61,351,30],[335,62,351,31,"some"],[335,66,351,35],[335,67,351,36,"tag"],[335,70,351,39],[335,74,351,43,"ability"],[335,81,351,50],[335,82,351,51,"tags"],[335,86,351,55],[335,87,351,56,"includes"],[335,95,351,64],[335,96,351,65,"tag"],[335,99,351,68],[335,100,351,69],[335,101,351,70],[335,103,351,72],[336,10,352,8,"damage"],[336,16,352,14],[336,20,352,19],[336,21,352,20],[336,24,352,23,"synergy"],[336,31,352,30],[336,32,352,31,"bonus"],[336,37,352,36],[336,38,352,37,"damageBonus"],[336,49,352,48],[336,52,352,51],[336,55,352,55],[337,8,353,6],[338,6,354,4],[338,7,354,5],[338,8,354,6],[340,6,356,4],[341,6,357,4],[341,10,357,10,"damageResult"],[341,22,357,22],[341,25,357,25,"DamageCalculator"],[341,44,357,41],[341,45,357,41,"DamageCalculator"],[341,61,357,41],[341,62,357,42,"calculateDamage"],[341,77,357,57],[341,78,357,58,"damage"],[341,84,357,64],[341,86,357,66,"state"],[341,91,357,71],[341,92,357,72,"playerStats"],[341,103,357,83],[341,105,357,85,"target"],[341,111,357,91],[341,112,357,92,"stats"],[341,117,357,97],[341,118,357,98],[343,6,359,4],[344,6,360,4,"createProjectile"],[344,22,360,20],[344,23,360,21,"target"],[344,29,360,27],[344,31,360,29,"damageResult"],[344,43,360,41],[344,44,360,42,"damage"],[344,50,360,48],[344,52,360,50,"ninjaPosition"],[344,65,360,63],[344,66,360,64],[346,6,362,4],[347,6,363,4],[347,10,363,8,"ability"],[347,17,363,15],[347,18,363,16,"effects"],[347,25,363,23],[347,26,363,24,"includes"],[347,34,363,32],[347,35,363,33],[347,40,363,38],[347,41,363,39],[347,45,363,43,"ability"],[347,52,363,50],[347,53,363,51,"stats"],[347,58,363,56],[347,59,363,57,"duration"],[347,67,363,65],[347,69,363,67],[348,8,364,6,"state"],[348,13,364,11],[348,14,364,12,"statusEffects"],[348,27,364,25],[348,28,364,26,"addEffect"],[348,37,364,35],[348,38,364,36,"target"],[348,44,364,42],[348,45,364,43,"id"],[348,47,364,45],[348,49,364,47],[349,10,365,8,"id"],[349,12,365,10],[349,14,365,12],[349,17,365,15,"ability"],[349,24,365,22],[349,25,365,23,"id"],[349,27,365,25],[349,33,365,31],[350,10,366,8,"type"],[350,14,366,12],[350,16,366,14],[350,21,366,19],[351,10,367,8,"remainingTicks"],[351,24,367,22],[351,26,367,24,"Math"],[351,30,367,28],[351,31,367,29,"floor"],[351,36,367,34],[351,37,367,35,"ability"],[351,44,367,42],[351,45,367,43,"stats"],[351,50,367,48],[351,51,367,49,"duration"],[351,59,367,57],[351,62,367,60],[351,64,367,62],[351,65,367,63],[352,10,367,65],[353,10,368,8,"tickInterval"],[353,22,368,20],[353,24,368,22],[353,26,368,24],[354,10,368,26],[355,10,369,8,"lastTick"],[355,18,369,16],[355,20,369,18,"state"],[355,25,369,23],[355,26,369,24,"currentTick"],[355,37,369,35],[356,10,370,8,"value"],[356,15,370,13],[356,17,370,15,"Math"],[356,21,370,19],[356,22,370,20,"floor"],[356,27,370,25],[356,28,370,26,"damage"],[356,34,370,32],[356,37,370,35],[356,40,370,38],[356,41,370,39],[357,10,370,41],[358,10,371,8,"stackable"],[358,19,371,17],[358,21,371,19],[359,8,372,6],[359,9,372,7],[359,10,372,8],[360,6,373,4],[361,6,375,4,"console"],[361,13,375,11],[361,14,375,12,"log"],[361,17,375,15],[361,18,375,16],[361,24,375,22,"ability"],[361,31,375,29],[361,32,375,30,"name"],[361,36,375,34],[361,69,375,67,"damageResult"],[361,81,375,79],[361,82,375,80,"damage"],[361,88,375,86],[361,98,375,96,"damageResult"],[361,110,375,108],[361,111,375,109,"isCritical"],[361,121,375,119],[361,124,375,122],[361,134,375,132],[361,137,375,135],[361,139,375,137],[361,141,375,139],[361,142,375,140],[362,4,376,2],[362,5,376,3],[364,4,378,2],[365,4,379,2],[365,8,379,8,"createProjectile"],[365,24,379,24],[365,27,379,27,"createProjectile"],[365,28,379,28,"targetEnemy"],[365,39,379,52],[365,41,379,54,"damage"],[365,47,379,68],[365,49,379,70,"ninjaPos"],[365,57,379,103],[365,62,379,108],[366,6,380,4],[366,10,380,10,"SCREEN_WIDTH"],[366,22,380,22],[366,25,380,25],[366,28,380,28],[367,6,381,4],[367,10,381,10,"GAME_AREA_HEIGHT"],[367,26,381,26],[367,29,381,29],[367,32,381,32],[367,35,381,35],[367,38,381,38],[367,39,381,39],[367,40,381,40],[368,6,382,4],[368,10,382,10,"NINJA_SIZE"],[368,20,382,20],[368,23,382,23],[368,25,382,25],[370,6,384,4],[371,6,385,4],[371,10,385,10,"ninjaX"],[371,16,385,16],[371,19,385,19,"ninjaPos"],[371,27,385,27],[371,30,385,30,"ninjaPos"],[371,38,385,38],[371,39,385,39,"x"],[371,40,385,40],[371,43,385,43,"NINJA_SIZE"],[371,53,385,53],[371,56,385,56],[371,57,385,57],[371,60,385,60,"SCREEN_WIDTH"],[371,72,385,72],[371,75,385,75],[371,76,385,76],[372,6,386,4],[372,10,386,10,"ninjaY"],[372,16,386,16],[372,19,386,19,"ninjaPos"],[372,27,386,27],[372,30,386,30,"ninjaPos"],[372,38,386,38],[372,39,386,39,"y"],[372,40,386,40],[372,43,386,43,"NINJA_SIZE"],[372,53,386,53],[372,56,386,56],[372,57,386,57],[372,60,386,60,"GAME_AREA_HEIGHT"],[372,76,386,76],[372,79,386,79],[372,80,386,80],[373,6,387,4],[373,10,387,10,"ENEMY_SIZE"],[373,20,387,20],[373,23,387,23],[373,25,387,25],[374,6,389,4],[374,10,389,10,"projectile"],[374,20,389,38],[374,23,389,41],[375,8,390,6,"id"],[375,10,390,8],[375,12,390,10],[375,20,390,18,"Date"],[375,24,390,22],[375,25,390,23,"now"],[375,28,390,26],[375,29,390,27],[375,30,390,28],[375,34,390,32,"Math"],[375,38,390,36],[375,39,390,37,"random"],[375,45,390,43],[375,46,390,44],[375,47,390,45],[375,49,390,47],[376,8,391,6,"x"],[376,9,391,7],[376,11,391,9,"ninjaX"],[376,17,391,15],[377,8,392,6,"y"],[377,9,392,7],[377,11,392,9,"ninjaY"],[377,17,392,15],[378,8,393,6,"targetX"],[378,15,393,13],[378,17,393,15,"targetEnemy"],[378,28,393,26],[378,29,393,27,"position"],[378,37,393,35],[378,38,393,36,"x"],[378,39,393,37],[378,42,393,40,"ENEMY_SIZE"],[378,52,393,50],[378,55,393,53],[378,56,393,54],[379,8,394,6,"targetY"],[379,15,394,13],[379,17,394,15,"targetEnemy"],[379,28,394,26],[379,29,394,27,"position"],[379,37,394,35],[379,38,394,36,"y"],[379,39,394,37],[379,42,394,40,"ENEMY_SIZE"],[379,52,394,50],[379,55,394,53],[379,56,394,54],[380,8,395,6,"targetEnemyId"],[380,21,395,19],[380,23,395,21,"targetEnemy"],[380,34,395,32],[380,35,395,33,"id"],[380,37,395,35],[381,8,396,6,"damage"],[381,14,396,12],[381,16,396,14,"damage"],[381,22,396,20],[382,8,397,6,"startTime"],[382,17,397,15],[382,19,397,17,"Date"],[382,23,397,21],[382,24,397,22,"now"],[382,27,397,25],[382,28,397,26],[382,29,397,27],[383,8,398,6,"duration"],[383,16,398,14],[383,18,398,16],[383,21,398,19],[383,22,398,21],[384,6,399,4],[384,7,399,5],[385,6,401,4,"console"],[385,13,401,11],[385,14,401,12,"log"],[385,17,401,15],[385,18,401,16],[385,53,401,51,"targetEnemy"],[385,64,401,62],[385,65,401,63,"id"],[385,67,401,65],[385,75,401,73,"damage"],[385,81,401,79],[385,90,401,88],[385,91,401,89],[386,6,402,4,"console"],[386,13,402,11],[386,14,402,12,"log"],[386,17,402,15],[386,18,402,16],[386,53,402,51,"ninjaX"],[386,59,402,57],[386,64,402,62,"ninjaY"],[386,70,402,68],[386,87,402,85,"projectile"],[386,97,402,95],[386,98,402,96,"targetX"],[386,105,402,103],[386,110,402,108,"projectile"],[386,120,402,118],[386,121,402,119,"targetY"],[386,128,402,126],[386,131,402,129],[386,132,402,130],[387,6,404,4,"setProjectiles"],[387,20,404,18],[387,21,404,19,"prev"],[387,25,404,23],[387,29,404,27],[387,30,404,28],[387,33,404,31,"prev"],[387,37,404,35],[387,39,404,37,"projectile"],[387,49,404,47],[387,50,404,48],[387,51,404,49],[389,6,406,4],[390,6,407,4,"setTimeout"],[390,16,407,14],[390,17,407,15],[390,23,407,21],[391,8,408,6,"handleProjectileHit"],[391,27,408,25],[391,28,408,26,"projectile"],[391,38,408,36],[391,39,408,37],[392,6,409,4],[392,7,409,5],[392,9,409,7],[392,12,409,10],[392,13,409,11],[393,4,410,2],[393,5,410,3],[395,4,412,2],[396,4,413,2],[396,8,413,8,"spawnTestEnemy"],[396,22,413,22],[396,25,413,26,"state"],[396,30,413,44],[396,34,413,49],[397,6,414,4],[398,6,415,4],[398,10,415,10,"SCREEN_WIDTH"],[398,22,415,22],[398,25,415,25],[398,28,415,28],[398,29,415,29],[398,30,415,30],[399,6,416,4],[399,10,416,10,"GAME_AREA_HEIGHT"],[399,26,416,26],[399,29,416,29],[399,32,416,32],[399,35,416,35],[399,38,416,38],[399,39,416,39],[399,40,416,40],[400,6,417,4],[400,10,417,10,"ENEMY_SIZE"],[400,20,417,20],[400,23,417,23],[400,25,417,25],[402,6,419,4],[403,6,420,4],[403,10,420,10,"x"],[403,11,420,11],[403,14,420,14,"Math"],[403,18,420,18],[403,19,420,19,"random"],[403,25,420,25],[403,26,420,26],[403,27,420,27],[403,31,420,31,"SCREEN_WIDTH"],[403,43,420,43],[403,46,420,46,"ENEMY_SIZE"],[403,56,420,56],[403,59,420,59],[403,60,420,60],[403,61,420,61],[403,64,420,64,"ENEMY_SIZE"],[403,74,420,74],[403,75,420,75],[403,76,420,76],[404,6,421,4],[404,10,421,10,"y"],[404,11,421,11],[404,14,421,14,"Math"],[404,18,421,18],[404,19,421,19,"random"],[404,25,421,25],[404,26,421,26],[404,27,421,27],[404,31,421,31,"GAME_AREA_HEIGHT"],[404,47,421,47],[404,50,421,50,"ENEMY_SIZE"],[404,60,421,60],[404,63,421,63],[404,64,421,64],[404,65,421,65],[404,68,421,68,"ENEMY_SIZE"],[404,78,421,78],[404,79,421,79],[404,80,421,80],[406,6,423,4],[406,10,423,10,"enemy"],[406,15,423,28],[406,18,423,31],[407,8,424,6,"id"],[407,10,424,8],[407,12,424,10],[407,21,424,19],[407,23,424,21,"enemyCounter"],[407,35,424,33],[407,37,424,35],[408,8,425,6,"name"],[408,12,425,10],[408,14,425,12],[408,24,425,22],[409,8,426,6,"health"],[409,14,426,12],[409,16,426,14],[409,19,426,17],[410,8,427,6,"maxHealth"],[410,17,427,15],[410,19,427,17],[410,22,427,20],[411,8,428,6,"stats"],[411,13,428,11],[411,15,428,13],[412,10,429,8,"attack"],[412,16,429,14],[412,18,429,16],[412,20,429,18],[413,10,430,8,"defense"],[413,17,430,15],[413,19,430,17],[413,21,430,19],[414,10,431,8,"health"],[414,16,431,14],[414,18,431,16],[414,21,431,19],[415,10,432,8,"maxHealth"],[415,19,432,17],[415,21,432,19],[415,24,432,22],[416,10,433,8,"critChance"],[416,20,433,18],[416,22,433,20],[416,23,433,21],[417,10,434,8,"critDamage"],[417,20,434,18],[417,22,434,20],[417,25,434,23],[418,10,435,8,"cooldownReduction"],[418,27,435,25],[418,29,435,27],[419,8,436,6],[419,9,436,7],[420,8,437,6,"position"],[420,16,437,14],[420,18,437,16],[421,10,437,18,"x"],[421,11,437,19],[422,10,437,21,"y"],[423,8,437,23],[423,9,437,24],[424,8,438,6,"lastDamaged"],[424,19,438,17],[424,21,438,19],[425,6,439,4],[425,7,439,5],[426,6,441,4,"state"],[426,11,441,9],[426,12,441,10,"enemies"],[426,19,441,17],[426,20,441,18,"push"],[426,24,441,22],[426,25,441,23,"enemy"],[426,30,441,28],[426,31,441,29],[427,4,442,2],[427,5,442,3],[429,4,444,2],[430,4,445,2],[430,8,445,8,"startCombat"],[430,19,445,19],[430,22,445,22,"React"],[430,27,445,27],[430,28,445,27,"default"],[430,35,445,27],[430,36,445,28,"useCallback"],[430,47,445,39],[430,48,445,40],[430,54,445,46],[431,6,446,4,"console"],[431,13,446,11],[431,14,446,12,"log"],[431,17,446,15],[431,18,446,16],[431,63,446,61],[431,64,446,62],[432,6,447,4,"setCombatState"],[432,20,447,18],[432,21,447,19,"prev"],[432,25,447,23],[432,30,447,28],[433,8,447,30],[433,11,447,33,"prev"],[433,15,447,37],[434,8,447,39,"isInCombat"],[434,18,447,49],[434,20,447,51],[435,6,447,56],[435,7,447,57],[435,8,447,58],[435,9,447,59],[437,6,449,4],[438,6,450,4,"combatEngine"],[438,25,450,16],[438,26,450,16,"combatEngine"],[438,38,450,16],[438,39,450,17,"addTickCallback"],[438,54,450,32],[438,55,450,33,"handleCombatTick"],[438,71,450,49],[438,72,450,50],[439,6,451,4,"console"],[439,13,451,11],[439,14,451,12,"log"],[439,17,451,15],[439,18,451,16],[439,62,451,60],[439,63,451,61],[441,6,453,4],[442,6,454,4,"combatEngine"],[442,25,454,16],[442,26,454,16,"combatEngine"],[442,38,454,16],[442,39,454,17,"start"],[442,44,454,22],[442,45,454,23],[442,46,454,24],[443,4,455,2],[443,5,455,3],[443,7,455,5],[443,8,455,6,"combatEngine"],[443,27,455,18],[443,28,455,18,"combatEngine"],[443,40,455,18],[443,42,455,20,"handleCombatTick"],[443,58,455,36],[443,59,455,37],[443,60,455,38],[445,4,457,2],[446,4,458,2],[446,8,458,8,"stopCombat"],[446,18,458,18],[446,21,458,21,"React"],[446,26,458,26],[446,27,458,26,"default"],[446,34,458,26],[446,35,458,27,"useCallback"],[446,46,458,38],[446,47,458,39],[446,53,458,45],[447,6,459,4,"setCombatState"],[447,20,459,18],[447,21,459,19,"prev"],[447,25,459,23],[447,30,459,28],[448,8,459,30],[448,11,459,33,"prev"],[448,15,459,37],[449,8,459,39,"isInCombat"],[449,18,459,49],[449,20,459,51],[450,6,459,57],[450,7,459,58],[450,8,459,59],[450,9,459,60],[451,6,460,4,"combatEngine"],[451,25,460,16],[451,26,460,16,"combatEngine"],[451,38,460,16],[451,39,460,17,"removeTickCallback"],[451,57,460,35],[451,58,460,36,"handleCombatTick"],[451,74,460,52],[451,75,460,53],[452,4,461,2],[452,5,461,3],[452,7,461,5],[452,8,461,6,"combatEngine"],[452,27,461,18],[452,28,461,18,"combatEngine"],[452,40,461,18],[452,42,461,20,"handleCombatTick"],[452,58,461,36],[452,59,461,37],[452,60,461,38],[454,4,463,2],[455,4,464,2],[455,8,464,8,"equipAbility"],[455,20,464,20],[455,23,464,23,"equipAbility"],[455,24,464,24,"abilityId"],[455,33,464,41],[455,35,464,43,"slotIndex"],[455,44,464,60],[455,49,464,74],[456,6,465,4],[456,13,465,11,"combatState"],[456,24,465,22],[456,25,465,23,"abilityManager"],[456,39,465,37],[456,40,465,38,"equipAbility"],[456,52,465,50],[456,53,465,51,"abilityId"],[456,62,465,60],[456,64,465,62,"slotIndex"],[456,73,465,71],[456,74,465,72],[457,4,466,2],[457,5,466,3],[458,4,468,2],[458,8,468,8,"getDeck"],[458,15,468,15],[458,18,468,18,"getDeck"],[458,19,468,18],[458,24,468,24],[459,6,469,4],[459,13,469,11,"combatState"],[459,24,469,22],[459,25,469,23,"abilityManager"],[459,39,469,37],[459,40,469,38,"getDeck"],[459,47,469,45],[459,48,469,46],[459,49,469,47],[460,4,470,2],[460,5,470,3],[461,4,472,2],[461,8,472,8,"getAvailableAbilities"],[461,29,472,29],[461,32,472,32,"getAvailableAbilities"],[461,33,472,32],[461,38,472,38],[462,6,473,4],[462,13,473,11,"combatState"],[462,24,473,22],[462,25,473,23,"abilityManager"],[462,39,473,37],[462,40,473,38,"getAvailableAbilities"],[462,61,473,59],[462,62,473,60],[462,63,473,61],[463,4,474,2],[463,5,474,3],[464,4,476,2],[464,8,476,8,"upgradeAbility"],[464,22,476,22],[464,25,476,26,"abilityId"],[464,34,476,43],[464,38,476,57],[465,6,477,4],[465,13,477,11,"combatState"],[465,24,477,22],[465,25,477,23,"abilityManager"],[465,39,477,37],[465,40,477,38,"upgradeAbility"],[465,54,477,52],[465,55,477,53,"abilityId"],[465,64,477,62],[465,65,477,63],[466,4,478,2],[466,5,478,3],[468,4,480,2],[469,4,481,2],[469,8,481,8,"clearAllEnemies"],[469,23,481,23],[469,26,481,26,"clearAllEnemies"],[469,27,481,26],[469,32,481,32],[470,6,482,4,"console"],[470,13,482,11],[470,14,482,12,"log"],[470,17,482,15],[470,18,482,16],[470,67,482,65],[470,68,482,66],[471,6,483,4,"setCombatState"],[471,20,483,18],[471,21,483,19,"prev"],[471,25,483,23],[471,30,483,28],[472,8,484,6],[472,11,484,9,"prev"],[472,15,484,13],[473,8,485,6,"enemies"],[473,15,485,13],[473,17,485,15],[474,6,486,4],[474,7,486,5],[474,8,486,6],[474,9,486,7],[475,4,487,2],[475,5,487,3],[477,4,489,2],[478,4,490,2],[478,8,490,8,"triggerLevelUpExplosion"],[478,31,490,31],[478,34,490,34,"triggerLevelUpExplosion"],[478,35,490,34],[478,40,490,40],[479,6,491,4,"console"],[479,13,491,11],[479,14,491,12,"log"],[479,17,491,15],[479,18,491,16],[479,70,491,68],[479,71,491,69],[480,6,493,4],[480,10,493,10,"explosionTime"],[480,23,493,23],[480,26,493,26,"Date"],[480,30,493,30],[480,31,493,31,"now"],[480,34,493,34],[480,35,493,35],[480,36,493,36],[481,6,494,4,"setLastExplosionTime"],[481,26,494,24],[481,27,494,25,"explosionTime"],[481,40,494,38],[481,41,494,39],[482,6,496,4,"setCombatState"],[482,20,496,18],[482,21,496,19,"prev"],[482,25,496,23],[482,29,496,27],[483,8,497,6],[484,8,498,6],[484,12,498,12,"enemyCount"],[484,22,498,22],[484,25,498,25,"prev"],[484,29,498,29],[484,30,498,30,"enemies"],[484,37,498,37],[484,38,498,38,"length"],[484,44,498,44],[485,8,499,6],[485,12,499,12,"explosionXP"],[485,23,499,23],[485,26,499,26,"enemyCount"],[485,36,499,36],[485,39,499,39],[485,41,499,41],[485,42,499,42],[485,43,499,43],[486,8,500,6],[486,12,500,12,"explosionGold"],[486,25,500,25],[486,28,500,28,"enemyCount"],[486,38,500,38],[486,41,500,41],[486,42,500,42],[486,43,500,43],[486,44,500,44],[488,8,502,6,"console"],[488,15,502,13],[488,16,502,14,"log"],[488,19,502,17],[488,20,502,18],[488,44,502,42,"enemyCount"],[488,54,502,52],[488,76,502,74,"explosionXP"],[488,87,502,85],[488,98,502,96,"explosionGold"],[488,111,502,109],[488,118,502,116],[488,119,502,117],[490,8,504,6],[491,8,505,6],[491,12,505,10,"explosionXP"],[491,23,505,21],[491,26,505,24],[491,27,505,25],[491,29,505,27],[492,10,506,8,"setTimeout"],[492,20,506,18],[492,21,506,19],[492,27,506,25],[493,12,507,10,"updateNinja"],[493,23,507,21],[493,24,507,23,"ninja"],[493,29,507,28],[493,34,507,34],[494,14,508,12,"experience"],[494,24,508,22],[494,26,508,24,"ninja"],[494,31,508,29],[494,32,508,30,"experience"],[494,42,508,40],[494,45,508,43,"explosionXP"],[494,56,508,54],[495,14,509,12,"gold"],[495,18,509,16],[495,20,509,18,"ninja"],[495,25,509,23],[495,26,509,24,"gold"],[495,30,509,28],[495,33,509,31,"explosionGold"],[496,12,510,10],[496,13,510,11],[496,14,510,12],[496,15,510,13],[497,10,511,8],[497,11,511,9],[497,13,511,11],[497,14,511,12],[497,15,511,13],[497,16,511,14],[497,17,511,15],[498,8,512,6],[500,8,514,6],[501,8,515,6],[502,8,516,6],[502,12,516,12,"damagedEnemies"],[502,26,516,26],[502,29,516,29,"prev"],[502,33,516,33],[502,34,516,34,"enemies"],[502,41,516,41],[502,42,516,42,"map"],[502,45,516,45],[502,46,516,46,"enemy"],[502,51,516,51],[502,56,516,56],[503,10,517,8],[503,13,517,11,"enemy"],[503,18,517,16],[504,10,518,8,"health"],[504,16,518,14],[504,18,518,16],[504,19,518,17],[505,10,518,19],[506,10,519,8,"lastDamaged"],[506,21,519,19],[506,23,519,21,"combatEngine"],[506,42,519,33],[506,43,519,33,"combatEngine"],[506,55,519,33],[506,56,519,34,"getCurrentTick"],[506,70,519,48],[506,71,519,49],[507,8,520,6],[507,9,520,7],[507,10,520,8],[507,11,520,9],[508,8,522,6],[508,15,522,13],[509,10,523,8],[509,13,523,11,"prev"],[509,17,523,15],[510,10,524,8,"enemies"],[510,17,524,15],[510,19,524,17,"damagedEnemies"],[511,8,525,6],[511,9,525,7],[512,6,526,4],[512,7,526,5],[512,8,526,6],[513,4,527,2],[513,5,527,3],[515,4,529,2],[516,4,530,2],[516,8,530,8,"spawnEnemy"],[516,18,530,18],[516,21,530,22,"position"],[516,29,530,57],[516,33,530,75],[517,6,531,4],[517,10,531,10,"SCREEN_WIDTH"],[517,22,531,22],[517,25,531,25],[517,28,531,28],[518,6,532,4],[518,10,532,10,"GAME_AREA_HEIGHT"],[518,26,532,26],[518,29,532,29],[518,32,532,32],[518,35,532,35],[518,38,532,38],[518,39,532,39],[518,40,532,40],[519,6,533,4],[519,10,533,10,"ENEMY_SIZE"],[519,20,533,20],[519,23,533,23],[519,25,533,25],[521,6,535,4],[522,6,536,4],[522,10,536,10,"x"],[522,11,536,11],[522,14,536,14,"position"],[522,22,536,22],[522,24,536,24,"x"],[522,25,536,25],[522,29,536,29,"Math"],[522,33,536,33],[522,34,536,34,"random"],[522,40,536,40],[522,41,536,41],[522,42,536,42],[522,46,536,46,"SCREEN_WIDTH"],[522,58,536,58],[522,61,536,61,"ENEMY_SIZE"],[522,71,536,71],[522,74,536,74],[522,75,536,75],[522,76,536,76],[522,79,536,79,"ENEMY_SIZE"],[522,89,536,89],[523,6,537,4],[523,10,537,10,"y"],[523,11,537,11],[523,14,537,14,"position"],[523,22,537,22],[523,24,537,24,"y"],[523,25,537,25],[523,29,537,29,"Math"],[523,33,537,33],[523,34,537,34,"random"],[523,40,537,40],[523,41,537,41],[523,42,537,42],[523,46,537,46,"GAME_AREA_HEIGHT"],[523,62,537,62],[523,65,537,65,"ENEMY_SIZE"],[523,75,537,75],[523,78,537,78],[523,79,537,79],[523,80,537,80],[523,83,537,83,"ENEMY_SIZE"],[523,93,537,93],[524,6,539,4],[524,10,539,10,"enemy"],[524,15,539,28],[524,18,539,31],[525,8,540,6,"id"],[525,10,540,8],[525,12,540,10],[525,21,540,19],[525,23,540,21,"enemyCounter"],[525,35,540,33],[525,37,540,35],[526,8,541,6,"name"],[526,12,541,10],[526,14,541,12],[526,24,541,22],[527,8,542,6,"health"],[527,14,542,12],[527,16,542,14],[527,19,542,17],[528,8,543,6,"maxHealth"],[528,17,543,15],[528,19,543,17],[528,22,543,20],[529,8,544,6,"stats"],[529,13,544,11],[529,15,544,13],[530,10,545,8,"attack"],[530,16,545,14],[530,18,545,16],[530,20,545,18],[531,10,546,8,"defense"],[531,17,546,15],[531,19,546,17],[531,21,546,19],[532,10,547,8,"health"],[532,16,547,14],[532,18,547,16],[532,21,547,19],[533,10,548,8,"maxHealth"],[533,19,548,17],[533,21,548,19],[533,24,548,22],[534,10,549,8,"critChance"],[534,20,549,18],[534,22,549,20],[534,23,549,21],[535,10,550,8,"critDamage"],[535,20,550,18],[535,22,550,20],[535,25,550,23],[536,10,551,8,"cooldownReduction"],[536,27,551,25],[536,29,551,27],[537,8,552,6],[537,9,552,7],[538,8,553,6,"position"],[538,16,553,14],[538,18,553,16],[539,10,553,18,"x"],[539,11,553,19],[540,10,553,21,"y"],[541,8,553,23],[541,9,553,24],[542,8,554,6,"lastDamaged"],[542,19,554,17],[542,21,554,19],[543,6,555,4],[543,7,555,5],[544,6,557,4,"setCombatState"],[544,20,557,18],[544,21,557,19,"prev"],[544,25,557,23],[544,30,557,28],[545,8,558,6],[545,11,558,9,"prev"],[545,15,558,13],[546,8,559,6,"enemies"],[546,15,559,13],[546,17,559,15],[546,18,559,16],[546,21,559,19,"prev"],[546,25,559,23],[546,26,559,24,"enemies"],[546,33,559,31],[546,35,559,33,"enemy"],[546,40,559,38],[547,6,560,4],[547,7,560,5],[547,8,560,6],[547,9,560,7],[548,6,562,4],[548,13,562,11,"enemy"],[548,18,562,16],[549,4,563,2],[549,5,563,3],[551,4,565,2],[552,4,566,2],[552,8,566,8,"spawnBoss"],[552,17,566,17],[552,20,566,21,"bossEnemy"],[552,29,566,43],[552,33,566,48],[553,6,567,4,"console"],[553,13,567,11],[553,14,567,12,"log"],[553,17,567,15],[553,18,567,16],[553,39,567,37,"bossEnemy"],[553,48,567,46],[553,49,567,47,"name"],[553,53,567,51],[553,90,567,88],[553,91,567,89],[554,6,568,4,"setCombatState"],[554,20,568,18],[554,21,568,19,"prev"],[554,25,568,23],[554,30,568,28],[555,8,569,6],[555,11,569,9,"prev"],[555,15,569,13],[556,8,570,6,"enemies"],[556,15,570,13],[556,17,570,15],[556,18,570,16,"bossEnemy"],[556,27,570,25],[556,28,570,26],[556,29,570,27],[557,6,571,4],[557,7,571,5],[557,8,571,6],[557,9,571,7],[558,4,572,2],[558,5,572,3],[560,4,574,2],[561,4,575,2],[561,8,575,8,"clearSpecificEnemy"],[561,26,575,26],[561,29,575,30,"enemyId"],[561,36,575,45],[561,40,575,50],[562,6,576,4,"setCombatState"],[562,20,576,18],[562,21,576,19,"prev"],[562,25,576,23],[562,30,576,28],[563,8,577,6],[563,11,577,9,"prev"],[563,15,577,13],[564,8,578,6,"enemies"],[564,15,578,13],[564,17,578,15,"prev"],[564,21,578,19],[564,22,578,20,"enemies"],[564,29,578,27],[564,30,578,28,"filter"],[564,36,578,34],[564,37,578,35,"enemy"],[564,42,578,40],[564,46,578,44,"enemy"],[564,51,578,49],[564,52,578,50,"id"],[564,54,578,52],[564,59,578,57,"enemyId"],[564,66,578,64],[565,6,579,4],[565,7,579,5],[565,8,579,6],[565,9,579,7],[566,4,580,2],[566,5,580,3],[567,4,581,2],[567,8,581,2,"useEffect"],[567,14,581,11],[567,15,581,11,"useEffect"],[567,24,581,11],[567,26,581,12],[567,32,581,18],[568,6,582,4,"combatEngine"],[568,25,582,16],[568,26,582,16,"combatEngine"],[568,38,582,16],[568,39,582,17,"start"],[568,44,582,22],[568,45,582,23],[568,46,582,24],[570,6,584,4],[571,6,585,4,"combatState"],[571,17,585,15],[571,18,585,16,"abilityManager"],[571,32,585,30],[571,33,585,31,"equipAbility"],[571,45,585,43],[571,46,585,44],[571,62,585,60],[571,64,585,62],[571,65,585,63],[571,66,585,64],[572,6,586,4,"combatState"],[572,17,586,15],[572,18,586,16,"abilityManager"],[572,32,586,30],[572,33,586,31,"equipAbility"],[572,45,586,43],[572,46,586,44],[572,61,586,59],[572,63,586,61],[572,64,586,62],[572,65,586,63],[573,6,588,4],[573,13,588,11],[573,19,588,17],[574,8,589,6,"combatEngine"],[574,27,589,18],[574,28,589,18,"combatEngine"],[574,40,589,18],[574,41,589,19,"stop"],[574,45,589,23],[574,46,589,24],[574,47,589,25],[575,6,590,4],[575,7,590,5],[576,4,591,2],[576,5,591,3],[576,7,591,5],[576,9,591,7],[576,10,591,8],[577,4,593,2],[577,8,593,8,"contextValue"],[577,20,593,39],[577,23,593,42,"React"],[577,28,593,47],[577,29,593,47,"default"],[577,36,593,47],[577,37,593,48,"useMemo"],[577,44,593,55],[577,45,593,56],[577,52,593,63],[578,6,594,4,"combatState"],[578,17,594,15],[579,6,595,4,"projectiles"],[579,17,595,15],[580,6,596,4,"startCombat"],[580,17,596,15],[581,6,597,4,"stopCombat"],[581,16,597,14],[582,6,598,4,"equipAbility"],[582,18,598,16],[583,6,599,4,"handleEnemyKill"],[583,21,599,19],[584,6,600,4,"getDeck"],[584,13,600,11],[585,6,601,4,"getAvailableAbilities"],[585,27,601,25],[586,6,602,4,"upgradeAbility"],[586,20,602,18],[587,6,603,4,"spawnEnemy"],[587,16,603,14],[588,6,604,4,"spawnBoss"],[588,15,604,13],[589,6,605,4,"clearAllEnemies"],[589,21,605,19],[590,6,606,4,"clearSpecificEnemy"],[590,24,606,22],[591,6,607,4,"triggerLevelUpExplosion"],[591,29,607,27],[592,6,608,4,"findClosestEnemy"],[592,22,608,20],[593,6,609,4,"updateNinjaPosition"],[593,25,609,23],[594,6,610,4,"lastExplosionTime"],[595,4,611,2],[595,5,611,3],[595,6,611,4],[595,8,611,6],[596,4,612,4],[597,4,613,4],[598,4,614,4,"combatState"],[598,15,614,15],[598,17,615,4,"projectiles"],[598,28,615,15],[598,30,616,4,"lastExplosionTime"],[598,47,616,21],[598,48,617,3],[598,49,617,4],[599,4,619,2],[599,24,620,4],[599,28,620,4,"_reactJsxDevRuntime"],[599,47,620,4],[599,48,620,4,"jsxDEV"],[599,54,620,4],[599,56,620,5,"CombatContext"],[599,69,620,18],[599,70,620,19,"Provider"],[599,78,620,27],[600,6,620,28,"value"],[600,11,620,33],[600,13,620,35,"contextValue"],[600,25,620,48],[601,6,620,48,"children"],[601,14,620,48],[601,16,621,7,"children"],[602,4,621,15],[603,6,621,15,"fileName"],[603,14,621,15],[603,16,621,15,"_jsxFileName"],[603,28,621,15],[604,6,621,15,"lineNumber"],[604,16,621,15],[605,6,621,15,"columnNumber"],[605,18,621,15],[606,4,621,15],[606,11,622,28],[606,12,622,29],[607,2,624,0],[607,3,624,1],[608,2,624,2,"_s3"],[608,5,624,2],[608,6,77,13,"CombatProvider"],[608,20,77,27],[609,4,77,27],[609,12,78,26,"useGame"],[609,24,78,33],[609,25,78,33,"useGame"],[609,32,78,33],[609,34,79,30,"useZone"],[609,46,79,37],[609,47,79,37,"useZone"],[609,54,79,37],[610,2,79,37],[611,2,79,37,"_c"],[611,4,79,37],[611,7,77,13,"CombatProvider"],[611,21,77,27],[612,2,77,27],[612,6,77,27,"_c"],[612,8,77,27],[613,2,77,27,"$RefreshReg$"],[613,14,77,27],[613,15,77,27,"_c"],[613,17,77,27],[614,0,77,27],[614,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","setTimeout$argument_0","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.forEach$argument_0","newState.enemies.filter$argument_0","newState.enemies.some$argument_0","enemiesToKill.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>","React.useMemo$argument_0"],"mappings":"AAA;yBCkE;CDM;8BEI;sCCiC;eCW;kBCE;ODM;KDe;GDC;6CIG;mBCK;4BCa;sDCC,sBD;0BEE;WFG;ODE;+BIG;OJ2C;kDKY,0BL;iDKI,yBL;4CMO,qBN;KDiB;0BQG;KRE;GJC;mCaG;oBCY;KDU;GbI;2BeG;GfE;8BgBG;GhBG;8BiBG;mBZG;oDEI,sCF;KYa;mBCG,oBC,2BD,CD;GjBC;sBoBG;iCCa;oCCE,iCD;KDG;GpBsB;2BuBG;mBLyB,6BK;erBG;KqBE;GvBC;yBwBG;GxB6B;wCyBG;mBpBE,uCoB;GzBQ;uC0BG;mBrBC,wCqB;G1BE;uB2BG;G3BE;kB4BE;G5BE;gC6BE;G7BE;yB8BE;G9BE;0B+BG;mB1BE;M0BG;G/BC;kCgCG;mB3BM;mBHU;sBCC;YDG;SGC;8C4BK;Q5BI;K2BM;GhCC;qBkCG;mB7B2B;M6BG;GlCG;oBmCG;mB9BE;M8BG;GnCC;6BoCG;mB/BC;mCgCE,6BhC;M+BC;GpCC;YsCC;WCO;KDE;GtCC;wDwCE;IxCkB;CFa"},"hasCjsExports":false},"type":"js/module"}]}