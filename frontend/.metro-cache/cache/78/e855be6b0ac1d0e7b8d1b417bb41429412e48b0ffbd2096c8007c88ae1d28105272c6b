{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      gameState,\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: gameState.ninja.attack,\n        defense: gameState.ninja.defense,\n        health: gameState.ninja.health,\n        maxHealth: gameState.ninja.maxHealth,\n        critChance: gameState.ninja.luck,\n        // Use luck as crit chance\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n\n    // Update player stats when ninja stats change\n    (0, _react.useEffect)(() => {\n      setCombatState(prev => ({\n        ...prev,\n        playerStats: {\n          attack: gameState.ninja.attack,\n          defense: gameState.ninja.defense,\n          health: gameState.ninja.health,\n          maxHealth: gameState.ninja.maxHealth,\n          critChance: gameState.ninja.luck,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }));\n    }, [gameState.ninja]);\n\n    // Function to handle enemy kills and reward XP\n    const handleEnemyKill = enemy => {\n      // Calculate XP reward based on enemy max health\n      const baseXP = Math.floor(enemy.maxHealth * 0.5); // 0.5 XP per HP\n      const goldReward = Math.floor(enemy.maxHealth * 0.1); // 0.1 gold per HP\n\n      console.log(`ðŸŽ¯ Enemy killed! Rewarding ${baseXP} XP and ${goldReward} gold`);\n\n      // Update ninja with rewards\n      updateNinja({\n        experience: gameState.ninja.experience + baseXP,\n        gold: gameState.ninja.gold + goldReward\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Spawn new enemies if none remain (for testing)\n        if (newState.enemies.length === 0) {\n          spawnTestEnemy(newState);\n        }\n        return newState;\n      });\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (nearest enemy for now)\n      const target = state.enemies[0];\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Apply damage based on ability effects\n      if (ability.effects.includes('SingleTarget')) {\n        target.health -= damageResult.damage;\n        target.lastDamaged = state.currentTick;\n      } else if (ability.effects.includes('AoE')) {\n        // Damage all enemies\n        state.enemies.forEach(enemy => {\n          enemy.health -= Math.floor(damageResult.damage * 0.8); // 80% damage to secondary targets\n          enemy.lastDamaged = state.currentTick;\n        });\n      }\n\n      // Apply DoT effects\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`ðŸŽ¯ ${ability.name} cast! Damage: ${damageResult.damage}${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      const enemy = {\n        id: `enemy_${Date.now()}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x: 300,\n          y: 200\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      if (!_engineCombatEngine.combatEngine) {\n        _engineCombatEngine.combatEngine.start();\n      }\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":286,"map":[[8,2,37,0,"Object"],[8,8,37,0],[8,9,37,0,"defineProperty"],[8,23,37,0],[8,24,37,0,"exports"],[8,31,37,0],[9,4,37,0,"enumerable"],[9,14,37,0],[10,4,37,0,"get"],[10,7,37,0],[10,18,37,0,"get"],[10,19,37,0],[11,6,37,0],[11,13,37,0,"useCombat"],[11,22,37,0],[12,4,37,0],[13,2,37,0],[14,2,45,0,"Object"],[14,8,45,0],[14,9,45,0,"defineProperty"],[14,23,45,0],[14,24,45,0,"exports"],[14,31,45,0],[15,4,45,0,"enumerable"],[15,14,45,0],[16,4,45,0,"get"],[16,7,45,0],[16,18,45,0,"get"],[16,19,45,0],[17,6,45,0],[17,13,45,0,"CombatProvider"],[17,27,45,0],[18,4,45,0],[19,2,45,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_engineCombatEngine"],[21,25,2,0],[21,28,2,0,"require"],[21,35,2,0],[21,36,2,0,"_dependencyMap"],[21,50,2,0],[22,2,3,0],[22,6,3,0,"_typesAbilityTypes"],[22,24,3,0],[22,27,3,0,"require"],[22,34,3,0],[22,35,3,0,"_dependencyMap"],[22,49,3,0],[23,2,4,0],[23,6,4,0,"_GameContext"],[23,18,4,0],[23,21,4,0,"require"],[23,28,4,0],[23,29,4,0,"_dependencyMap"],[23,43,4,0],[24,2,4,40],[24,6,4,40,"_reactJsxDevRuntime"],[24,25,4,40],[24,28,4,40,"require"],[24,35,4,40],[24,36,4,40,"_dependencyMap"],[24,50,4,40],[25,2,35,0],[25,8,35,6,"CombatContext"],[25,21,35,19],[25,37,35,22],[25,41,35,22,"createContext"],[25,47,35,35],[25,48,35,35,"createContext"],[25,61,35,35],[25,63,35,67,"undefined"],[25,72,35,76],[25,73,35,77],[26,2,37,7],[26,8,37,13,"useCombat"],[26,17,37,22],[26,20,37,25,"useCombat"],[26,21,37,25],[26,26,37,50],[27,4,38,2],[27,10,38,8,"context"],[27,17,38,15],[27,20,38,18],[27,24,38,18,"useContext"],[27,30,38,28],[27,31,38,28,"useContext"],[27,41,38,28],[27,43,38,29,"CombatContext"],[27,56,38,42],[27,57,38,43],[28,4,39,2],[28,8,39,6],[28,9,39,7,"context"],[28,16,39,14],[28,18,39,16],[29,6,40,4],[29,12,40,10],[29,16,40,14,"Error"],[29,21,40,19],[29,22,40,20],[29,70,40,68],[29,71,40,69],[30,4,41,2],[31,4,42,2],[31,11,42,9,"context"],[31,18,42,16],[32,2,43,0],[32,3,43,1],[33,2,45,7],[33,8,45,13,"CombatProvider"],[33,22,45,27],[33,25,45,30,"CombatProvider"],[33,26,45,31],[34,4,45,33,"children"],[35,2,45,67],[35,3,45,68],[35,8,45,73],[36,4,46,2],[36,10,46,8],[37,6,46,10,"gameState"],[37,15,46,19],[38,6,46,21,"updateNinja"],[39,4,46,33],[39,5,46,34],[39,8,46,37],[39,12,46,37,"useGame"],[39,24,46,44],[39,25,46,44,"useGame"],[39,32,46,44],[39,34,46,45],[39,35,46,46],[40,4,48,2],[40,10,48,8],[40,11,48,9,"combatState"],[40,22,48,20],[40,24,48,22,"setCombatState"],[40,38,48,36],[40,39,48,37],[40,42,48,40],[40,46,48,40,"useState"],[40,52,48,48],[40,53,48,48,"useState"],[40,61,48,48],[40,63,48,62],[41,6,49,4,"isInCombat"],[41,16,49,14],[41,18,49,16],[41,23,49,21],[42,6,50,4,"currentTick"],[42,17,50,15],[42,19,50,17],[42,20,50,18],[43,6,51,4,"enemies"],[43,13,51,11],[43,15,51,13],[43,17,51,15],[44,6,52,4,"abilityManager"],[44,20,52,18],[44,22,52,20],[44,26,52,24,"AbilityManager"],[44,44,52,38],[44,45,52,38,"AbilityManager"],[44,59,52,38],[44,60,52,39],[44,61,52,40],[45,6,53,4,"statusEffects"],[45,19,53,17],[45,21,53,19],[45,25,53,23,"StatusEffectManager"],[45,44,53,42],[45,45,53,42,"StatusEffectManager"],[45,64,53,42],[45,65,53,43],[45,66,53,44],[46,6,54,4,"playerStats"],[46,17,54,15],[46,19,54,17],[47,8,55,6,"attack"],[47,14,55,12],[47,16,55,14,"gameState"],[47,25,55,23],[47,26,55,24,"ninja"],[47,31,55,29],[47,32,55,30,"attack"],[47,38,55,36],[48,8,56,6,"defense"],[48,15,56,13],[48,17,56,15,"gameState"],[48,26,56,24],[48,27,56,25,"ninja"],[48,32,56,30],[48,33,56,31,"defense"],[48,40,56,38],[49,8,57,6,"health"],[49,14,57,12],[49,16,57,14,"gameState"],[49,25,57,23],[49,26,57,24,"ninja"],[49,31,57,29],[49,32,57,30,"health"],[49,38,57,36],[50,8,58,6,"maxHealth"],[50,17,58,15],[50,19,58,17,"gameState"],[50,28,58,26],[50,29,58,27,"ninja"],[50,34,58,32],[50,35,58,33,"maxHealth"],[50,44,58,42],[51,8,59,6,"critChance"],[51,18,59,16],[51,20,59,18,"gameState"],[51,29,59,27],[51,30,59,28,"ninja"],[51,35,59,33],[51,36,59,34,"luck"],[51,40,59,38],[52,8,59,40],[53,8,60,6,"critDamage"],[53,18,60,16],[53,20,60,18],[53,23,60,21],[54,8,61,6,"cooldownReduction"],[54,25,61,23],[54,27,61,25],[55,6,62,4],[56,4,63,2],[56,5,63,3],[56,6,63,4],[58,4,65,2],[59,4,66,2],[59,8,66,2,"useEffect"],[59,14,66,11],[59,15,66,11,"useEffect"],[59,24,66,11],[59,26,66,12],[59,32,66,18],[60,6,67,4,"setCombatState"],[60,20,67,18],[60,21,67,19,"prev"],[60,25,67,23],[60,30,67,28],[61,8,68,6],[61,11,68,9,"prev"],[61,15,68,13],[62,8,69,6,"playerStats"],[62,19,69,17],[62,21,69,19],[63,10,70,8,"attack"],[63,16,70,14],[63,18,70,16,"gameState"],[63,27,70,25],[63,28,70,26,"ninja"],[63,33,70,31],[63,34,70,32,"attack"],[63,40,70,38],[64,10,71,8,"defense"],[64,17,71,15],[64,19,71,17,"gameState"],[64,28,71,26],[64,29,71,27,"ninja"],[64,34,71,32],[64,35,71,33,"defense"],[64,42,71,40],[65,10,72,8,"health"],[65,16,72,14],[65,18,72,16,"gameState"],[65,27,72,25],[65,28,72,26,"ninja"],[65,33,72,31],[65,34,72,32,"health"],[65,40,72,38],[66,10,73,8,"maxHealth"],[66,19,73,17],[66,21,73,19,"gameState"],[66,30,73,28],[66,31,73,29,"ninja"],[66,36,73,34],[66,37,73,35,"maxHealth"],[66,46,73,44],[67,10,74,8,"critChance"],[67,20,74,18],[67,22,74,20,"gameState"],[67,31,74,29],[67,32,74,30,"ninja"],[67,37,74,35],[67,38,74,36,"luck"],[67,42,74,40],[68,10,75,8,"critDamage"],[68,20,75,18],[68,22,75,20],[68,25,75,23],[69,10,76,8,"cooldownReduction"],[69,27,76,25],[69,29,76,27],[70,8,77,6],[71,6,78,4],[71,7,78,5],[71,8,78,6],[71,9,78,7],[72,4,79,2],[72,5,79,3],[72,7,79,5],[72,8,79,6,"gameState"],[72,17,79,15],[72,18,79,16,"ninja"],[72,23,79,21],[72,24,79,22],[72,25,79,23],[74,4,81,2],[75,4,82,2],[75,10,82,8,"handleEnemyKill"],[75,25,82,23],[75,28,82,27,"enemy"],[75,33,82,45],[75,37,82,50],[76,6,83,4],[77,6,84,4],[77,12,84,10,"baseXP"],[77,18,84,16],[77,21,84,19,"Math"],[77,25,84,23],[77,26,84,24,"floor"],[77,31,84,29],[77,32,84,30,"enemy"],[77,37,84,35],[77,38,84,36,"maxHealth"],[77,47,84,45],[77,50,84,48],[77,53,84,51],[77,54,84,52],[77,55,84,53],[77,56,84,54],[78,6,85,4],[78,12,85,10,"goldReward"],[78,22,85,20],[78,25,85,23,"Math"],[78,29,85,27],[78,30,85,28,"floor"],[78,35,85,33],[78,36,85,34,"enemy"],[78,41,85,39],[78,42,85,40,"maxHealth"],[78,51,85,49],[78,54,85,52],[78,57,85,55],[78,58,85,56],[78,59,85,57],[78,60,85,58],[80,6,87,4,"console"],[80,13,87,11],[80,14,87,12,"log"],[80,17,87,15],[80,18,87,16],[80,48,87,46,"baseXP"],[80,54,87,52],[80,65,87,63,"goldReward"],[80,75,87,73],[80,82,87,80],[80,83,87,81],[82,6,89,4],[83,6,90,4,"updateNinja"],[83,17,90,15],[83,18,90,16],[84,8,91,6,"experience"],[84,18,91,16],[84,20,91,18,"gameState"],[84,29,91,27],[84,30,91,28,"ninja"],[84,35,91,33],[84,36,91,34,"experience"],[84,46,91,44],[84,49,91,47,"baseXP"],[84,55,91,53],[85,8,92,6,"gold"],[85,12,92,10],[85,14,92,12,"gameState"],[85,23,92,21],[85,24,92,22,"ninja"],[85,29,92,27],[85,30,92,28,"gold"],[85,34,92,32],[85,37,92,35,"goldReward"],[86,6,93,4],[86,7,93,5],[86,8,93,6],[87,4,94,2],[87,5,94,3],[89,4,96,2],[90,4,97,2],[90,10,97,8,"handleCombatTick"],[90,26,97,24],[90,29,97,27,"handleCombatTick"],[90,30,97,27],[90,35,97,33],[91,6,98,4,"setCombatState"],[91,20,98,18],[91,21,98,19,"prev"],[91,25,98,23],[91,29,98,27],[92,8,99,6],[92,14,99,12,"newTick"],[92,21,99,19],[92,24,99,22,"combatEngine"],[92,43,99,34],[92,44,99,34,"combatEngine"],[92,56,99,34],[92,57,99,35,"getCurrentTick"],[92,71,99,49],[92,72,99,50],[92,73,99,51],[93,8,100,6],[93,14,100,12,"newState"],[93,22,100,20],[93,25,100,23],[94,10,100,25],[94,13,100,28,"prev"],[94,17,100,32],[95,10,100,34,"currentTick"],[95,21,100,45],[95,23,100,47,"newTick"],[96,8,100,55],[96,9,100,56],[97,8,102,6],[97,12,102,10],[97,13,102,11,"newState"],[97,21,102,19],[97,22,102,20,"isInCombat"],[97,32,102,30],[97,34,102,32],[97,41,102,39,"newState"],[97,49,102,47],[99,8,104,6],[100,8,105,6,"newState"],[100,16,105,14],[100,17,105,15,"abilityManager"],[100,31,105,29],[100,32,105,30,"updateCooldowns"],[100,47,105,45],[100,48,105,46,"newTick"],[100,55,105,53],[100,56,105,54],[102,8,107,6],[103,8,108,6],[103,14,108,12,"effectResults"],[103,27,108,25],[103,30,108,28,"newState"],[103,38,108,36],[103,39,108,37,"statusEffects"],[103,52,108,50],[103,53,108,51,"processTick"],[103,64,108,62],[103,65,108,63,"newTick"],[103,72,108,70],[103,73,108,71],[105,8,110,6],[106,8,111,6,"effectResults"],[106,21,111,19],[106,22,111,20,"forEach"],[106,29,111,27],[106,30,111,28],[106,31,111,29,"results"],[106,38,111,36],[106,40,111,38,"entityId"],[106,48,111,46],[106,53,111,51],[107,10,112,8],[107,16,112,14,"enemyIndex"],[107,26,112,24],[107,29,112,27,"newState"],[107,37,112,35],[107,38,112,36,"enemies"],[107,45,112,43],[107,46,112,44,"findIndex"],[107,55,112,53],[107,56,112,54,"e"],[107,57,112,55],[107,61,112,59,"e"],[107,62,112,60],[107,63,112,61,"id"],[107,65,112,63],[107,70,112,68,"entityId"],[107,78,112,76],[107,79,112,77],[108,10,113,8],[108,14,113,12,"enemyIndex"],[108,24,113,22],[108,28,113,26],[108,29,113,27],[108,31,113,29],[109,12,114,10,"results"],[109,19,114,17],[109,20,114,18,"forEach"],[109,27,114,25],[109,28,114,26,"result"],[109,34,114,32],[109,38,114,36],[110,14,115,12,"newState"],[110,22,115,20],[110,23,115,21,"enemies"],[110,30,115,28],[110,31,115,29,"enemyIndex"],[110,41,115,39],[110,42,115,40],[110,43,115,41,"health"],[110,49,115,47],[110,53,115,51,"result"],[110,59,115,57],[110,60,115,58,"damage"],[110,66,115,64],[111,14,116,12,"newState"],[111,22,116,20],[111,23,116,21,"enemies"],[111,30,116,28],[111,31,116,29,"enemyIndex"],[111,41,116,39],[111,42,116,40],[111,43,116,41,"lastDamaged"],[111,54,116,52],[111,57,116,55,"newTick"],[111,64,116,62],[112,12,117,10],[112,13,117,11],[112,14,117,12],[113,10,118,8],[114,8,119,6],[114,9,119,7],[114,10,119,8],[116,8,121,6],[117,8,122,6],[117,13,122,11],[117,17,122,15,"i"],[117,18,122,16],[117,21,122,19],[117,22,122,20],[117,24,122,22,"i"],[117,25,122,23],[117,28,122,26],[117,29,122,27],[117,31,122,29,"i"],[117,32,122,30],[117,34,122,32],[117,36,122,34],[118,10,123,8],[118,14,123,12,"newState"],[118,22,123,20],[118,23,123,21,"abilityManager"],[118,37,123,35],[118,38,123,36,"isAbilityReady"],[118,52,123,50],[118,53,123,51,"i"],[118,54,123,52],[118,55,123,53],[118,59,123,57,"newState"],[118,67,123,65],[118,68,123,66,"enemies"],[118,75,123,73],[118,76,123,74,"length"],[118,82,123,80],[118,85,123,83],[118,86,123,84],[118,88,123,86],[119,12,124,10],[119,16,124,14,"newState"],[119,24,124,22],[119,25,124,23,"abilityManager"],[119,39,124,37],[119,40,124,38,"useAbility"],[119,50,124,48],[119,51,124,49,"i"],[119,52,124,50],[119,54,124,52,"newTick"],[119,61,124,59],[119,62,124,60],[119,64,124,62],[120,14,125,12,"castAbility"],[120,25,125,23],[120,26,125,24,"newState"],[120,34,125,32],[120,36,125,34,"i"],[120,37,125,35],[120,38,125,36],[121,12,126,10],[122,10,127,8],[123,8,128,6],[125,8,130,6],[126,8,131,6],[126,14,131,12,"deadEnemies"],[126,25,131,23],[126,28,131,26,"newState"],[126,36,131,34],[126,37,131,35,"enemies"],[126,44,131,42],[126,45,131,43,"filter"],[126,51,131,49],[126,52,131,50,"enemy"],[126,57,131,55],[126,61,131,59,"enemy"],[126,66,131,64],[126,67,131,65,"health"],[126,73,131,71],[126,77,131,75],[126,78,131,76],[126,79,131,77],[127,8,132,6,"deadEnemies"],[127,19,132,17],[127,20,132,18,"forEach"],[127,27,132,25],[127,28,132,26,"enemy"],[127,33,132,31],[127,37,132,35],[128,10,133,8,"handleEnemyKill"],[128,25,133,23],[128,26,133,24,"enemy"],[128,31,133,29],[128,32,133,30],[129,8,134,6],[129,9,134,7],[129,10,134,8],[131,8,136,6],[132,8,137,6,"newState"],[132,16,137,14],[132,17,137,15,"enemies"],[132,24,137,22],[132,27,137,25,"newState"],[132,35,137,33],[132,36,137,34,"enemies"],[132,43,137,41],[132,44,137,42,"filter"],[132,50,137,48],[132,51,137,49,"enemy"],[132,56,137,54],[132,60,137,58,"enemy"],[132,65,137,63],[132,66,137,64,"health"],[132,72,137,70],[132,75,137,73],[132,76,137,74],[132,77,137,75],[134,8,139,6],[135,8,140,6],[135,12,140,10,"newState"],[135,20,140,18],[135,21,140,19,"enemies"],[135,28,140,26],[135,29,140,27,"length"],[135,35,140,33],[135,40,140,38],[135,41,140,39],[135,43,140,41],[136,10,141,8,"spawnTestEnemy"],[136,24,141,22],[136,25,141,23,"newState"],[136,33,141,31],[136,34,141,32],[137,8,142,6],[138,8,144,6],[138,15,144,13,"newState"],[138,23,144,21],[139,6,145,4],[139,7,145,5],[139,8,145,6],[140,4,146,2],[140,5,146,3],[142,4,148,2],[143,4,149,2],[143,10,149,8,"castAbility"],[143,21,149,19],[143,24,149,22,"castAbility"],[143,25,149,23,"state"],[143,30,149,41],[143,32,149,43,"slotIndex"],[143,41,149,60],[143,46,149,65],[144,6,150,4],[144,12,150,10,"deck"],[144,16,150,14],[144,19,150,17,"state"],[144,24,150,22],[144,25,150,23,"abilityManager"],[144,39,150,37],[144,40,150,38,"getDeck"],[144,47,150,45],[144,48,150,46],[144,49,150,47],[145,6,151,4],[145,12,151,10,"ability"],[145,19,151,17],[145,22,151,20,"deck"],[145,26,151,24],[145,27,151,25,"slots"],[145,32,151,30],[145,33,151,31,"slotIndex"],[145,42,151,40],[145,43,151,41],[146,6,152,4],[146,10,152,8],[146,11,152,9,"ability"],[146,18,152,16],[146,20,152,18],[148,6,154,4],[149,6,155,4],[149,12,155,10,"target"],[149,18,155,16],[149,21,155,19,"state"],[149,26,155,24],[149,27,155,25,"enemies"],[149,34,155,32],[149,35,155,33],[149,36,155,34],[149,37,155,35],[150,6,156,4],[150,10,156,8],[150,11,156,9,"target"],[150,17,156,15],[150,19,156,17],[152,6,158,4],[153,6,159,4],[153,10,159,8,"damage"],[153,16,159,14],[153,19,159,17,"ability"],[153,26,159,24],[153,27,159,25,"stats"],[153,32,159,30],[153,33,159,31,"baseDamage"],[153,43,159,41],[155,6,161,4],[156,6,162,4,"deck"],[156,10,162,8],[156,11,162,9,"activeSynergies"],[156,26,162,24],[156,27,162,25,"forEach"],[156,34,162,32],[156,35,162,33,"synergy"],[156,42,162,40],[156,46,162,44],[157,8,163,6],[157,12,163,10,"synergy"],[157,19,163,17],[157,20,163,18,"bonus"],[157,25,163,23],[157,26,163,24,"damageBonus"],[157,37,163,35],[157,41,164,10,"synergy"],[157,48,164,17],[157,49,164,18,"requiredTags"],[157,61,164,30],[157,62,164,31,"some"],[157,66,164,35],[157,67,164,36,"tag"],[157,70,164,39],[157,74,164,43,"ability"],[157,81,164,50],[157,82,164,51,"tags"],[157,86,164,55],[157,87,164,56,"includes"],[157,95,164,64],[157,96,164,65,"tag"],[157,99,164,68],[157,100,164,69],[157,101,164,70],[157,103,164,72],[158,10,165,8,"damage"],[158,16,165,14],[158,20,165,19],[158,21,165,20],[158,24,165,23,"synergy"],[158,31,165,30],[158,32,165,31,"bonus"],[158,37,165,36],[158,38,165,37,"damageBonus"],[158,49,165,48],[158,52,165,51],[158,55,165,55],[159,8,166,6],[160,6,167,4],[160,7,167,5],[160,8,167,6],[162,6,169,4],[163,6,170,4],[163,12,170,10,"damageResult"],[163,24,170,22],[163,27,170,25,"DamageCalculator"],[163,46,170,41],[163,47,170,41,"DamageCalculator"],[163,63,170,41],[163,64,170,42,"calculateDamage"],[163,79,170,57],[163,80,170,58,"damage"],[163,86,170,64],[163,88,170,66,"state"],[163,93,170,71],[163,94,170,72,"playerStats"],[163,105,170,83],[163,107,170,85,"target"],[163,113,170,91],[163,114,170,92,"stats"],[163,119,170,97],[163,120,170,98],[165,6,172,4],[166,6,173,4],[166,10,173,8,"ability"],[166,17,173,15],[166,18,173,16,"effects"],[166,25,173,23],[166,26,173,24,"includes"],[166,34,173,32],[166,35,173,33],[166,49,173,47],[166,50,173,48],[166,52,173,50],[167,8,174,6,"target"],[167,14,174,12],[167,15,174,13,"health"],[167,21,174,19],[167,25,174,23,"damageResult"],[167,37,174,35],[167,38,174,36,"damage"],[167,44,174,42],[168,8,175,6,"target"],[168,14,175,12],[168,15,175,13,"lastDamaged"],[168,26,175,24],[168,29,175,27,"state"],[168,34,175,32],[168,35,175,33,"currentTick"],[168,46,175,44],[169,6,176,4],[169,7,176,5],[169,13,176,11],[169,17,176,15,"ability"],[169,24,176,22],[169,25,176,23,"effects"],[169,32,176,30],[169,33,176,31,"includes"],[169,41,176,39],[169,42,176,40],[169,47,176,45],[169,48,176,46],[169,50,176,48],[170,8,177,6],[171,8,178,6,"state"],[171,13,178,11],[171,14,178,12,"enemies"],[171,21,178,19],[171,22,178,20,"forEach"],[171,29,178,27],[171,30,178,28,"enemy"],[171,35,178,33],[171,39,178,37],[172,10,179,8,"enemy"],[172,15,179,13],[172,16,179,14,"health"],[172,22,179,20],[172,26,179,24,"Math"],[172,30,179,28],[172,31,179,29,"floor"],[172,36,179,34],[172,37,179,35,"damageResult"],[172,49,179,47],[172,50,179,48,"damage"],[172,56,179,54],[172,59,179,57],[172,62,179,60],[172,63,179,61],[172,64,179,62],[172,65,179,63],[173,10,180,8,"enemy"],[173,15,180,13],[173,16,180,14,"lastDamaged"],[173,27,180,25],[173,30,180,28,"state"],[173,35,180,33],[173,36,180,34,"currentTick"],[173,47,180,45],[174,8,181,6],[174,9,181,7],[174,10,181,8],[175,6,182,4],[177,6,184,4],[178,6,185,4],[178,10,185,8,"ability"],[178,17,185,15],[178,18,185,16,"effects"],[178,25,185,23],[178,26,185,24,"includes"],[178,34,185,32],[178,35,185,33],[178,40,185,38],[178,41,185,39],[178,45,185,43,"ability"],[178,52,185,50],[178,53,185,51,"stats"],[178,58,185,56],[178,59,185,57,"duration"],[178,67,185,65],[178,69,185,67],[179,8,186,6,"state"],[179,13,186,11],[179,14,186,12,"statusEffects"],[179,27,186,25],[179,28,186,26,"addEffect"],[179,37,186,35],[179,38,186,36,"target"],[179,44,186,42],[179,45,186,43,"id"],[179,47,186,45],[179,49,186,47],[180,10,187,8,"id"],[180,12,187,10],[180,14,187,12],[180,17,187,15,"ability"],[180,24,187,22],[180,25,187,23,"id"],[180,27,187,25],[180,33,187,31],[181,10,188,8,"type"],[181,14,188,12],[181,16,188,14],[181,21,188,19],[182,10,189,8,"remainingTicks"],[182,24,189,22],[182,26,189,24,"Math"],[182,30,189,28],[182,31,189,29,"floor"],[182,36,189,34],[182,37,189,35,"ability"],[182,44,189,42],[182,45,189,43,"stats"],[182,50,189,48],[182,51,189,49,"duration"],[182,59,189,57],[182,62,189,60],[182,64,189,62],[182,65,189,63],[183,10,189,65],[184,10,190,8,"tickInterval"],[184,22,190,20],[184,24,190,22],[184,26,190,24],[185,10,190,26],[186,10,191,8,"lastTick"],[186,18,191,16],[186,20,191,18,"state"],[186,25,191,23],[186,26,191,24,"currentTick"],[186,37,191,35],[187,10,192,8,"value"],[187,15,192,13],[187,17,192,15,"Math"],[187,21,192,19],[187,22,192,20,"floor"],[187,27,192,25],[187,28,192,26,"damage"],[187,34,192,32],[187,37,192,35],[187,40,192,38],[187,41,192,39],[188,10,192,41],[189,10,193,8,"stackable"],[189,19,193,17],[189,21,193,19],[190,8,194,6],[190,9,194,7],[190,10,194,8],[191,6,195,4],[192,6,197,4,"console"],[192,13,197,11],[192,14,197,12,"log"],[192,17,197,15],[192,18,197,16],[192,24,197,22,"ability"],[192,31,197,29],[192,32,197,30,"name"],[192,36,197,34],[192,54,197,52,"damageResult"],[192,66,197,64],[192,67,197,65,"damage"],[192,73,197,71],[192,76,197,74,"damageResult"],[192,88,197,86],[192,89,197,87,"isCritical"],[192,99,197,97],[192,102,197,100],[192,112,197,110],[192,115,197,113],[192,117,197,115],[192,119,197,117],[192,120,197,118],[193,4,198,2],[193,5,198,3],[195,4,200,2],[196,4,201,2],[196,10,201,8,"spawnTestEnemy"],[196,24,201,22],[196,27,201,26,"state"],[196,32,201,44],[196,36,201,49],[197,6,202,4],[197,12,202,10,"enemy"],[197,17,202,28],[197,20,202,31],[198,8,203,6,"id"],[198,10,203,8],[198,12,203,10],[198,21,203,19,"Date"],[198,25,203,23],[198,26,203,24,"now"],[198,29,203,27],[198,30,203,28],[198,31,203,29],[198,33,203,31],[199,8,204,6,"name"],[199,12,204,10],[199,14,204,12],[199,24,204,22],[200,8,205,6,"health"],[200,14,205,12],[200,16,205,14],[200,19,205,17],[201,8,206,6,"maxHealth"],[201,17,206,15],[201,19,206,17],[201,22,206,20],[202,8,207,6,"stats"],[202,13,207,11],[202,15,207,13],[203,10,208,8,"attack"],[203,16,208,14],[203,18,208,16],[203,20,208,18],[204,10,209,8,"defense"],[204,17,209,15],[204,19,209,17],[204,21,209,19],[205,10,210,8,"health"],[205,16,210,14],[205,18,210,16],[205,21,210,19],[206,10,211,8,"maxHealth"],[206,19,211,17],[206,21,211,19],[206,24,211,22],[207,10,212,8,"critChance"],[207,20,212,18],[207,22,212,20],[207,23,212,21],[208,10,213,8,"critDamage"],[208,20,213,18],[208,22,213,20],[208,25,213,23],[209,10,214,8,"cooldownReduction"],[209,27,214,25],[209,29,214,27],[210,8,215,6],[210,9,215,7],[211,8,216,6,"position"],[211,16,216,14],[211,18,216,16],[212,10,216,18,"x"],[212,11,216,19],[212,13,216,21],[212,16,216,24],[213,10,216,26,"y"],[213,11,216,27],[213,13,216,29],[214,8,216,33],[214,9,216,34],[215,8,217,6,"lastDamaged"],[215,19,217,17],[215,21,217,19],[216,6,218,4],[216,7,218,5],[217,6,220,4,"state"],[217,11,220,9],[217,12,220,10,"enemies"],[217,19,220,17],[217,20,220,18,"push"],[217,24,220,22],[217,25,220,23,"enemy"],[217,30,220,28],[217,31,220,29],[218,4,221,2],[218,5,221,3],[220,4,223,2],[221,4,224,2],[221,10,224,8,"startCombat"],[221,21,224,19],[221,24,224,22,"startCombat"],[221,25,224,22],[221,30,224,28],[222,6,225,4,"setCombatState"],[222,20,225,18],[222,21,225,19,"prev"],[222,25,225,23],[222,30,225,28],[223,8,225,30],[223,11,225,33,"prev"],[223,15,225,37],[224,8,225,39,"isInCombat"],[224,18,225,49],[224,20,225,51],[225,6,225,56],[225,7,225,57],[225,8,225,58],[225,9,225,59],[227,6,227,4],[228,6,228,4,"combatEngine"],[228,25,228,16],[228,26,228,16,"combatEngine"],[228,38,228,16],[228,39,228,17,"addTickCallback"],[228,54,228,32],[228,55,228,33,"handleCombatTick"],[228,71,228,49],[228,72,228,50],[229,6,230,4],[229,10,230,8],[229,11,230,9,"combatEngine"],[229,30,230,21],[229,31,230,21,"combatEngine"],[229,43,230,21],[229,45,230,23],[230,8,231,6,"combatEngine"],[230,27,231,18],[230,28,231,18,"combatEngine"],[230,40,231,18],[230,41,231,19,"start"],[230,46,231,24],[230,47,231,25],[230,48,231,26],[231,6,232,4],[232,4,233,2],[232,5,233,3],[234,4,235,2],[235,4,236,2],[235,10,236,8,"stopCombat"],[235,20,236,18],[235,23,236,21,"stopCombat"],[235,24,236,21],[235,29,236,27],[236,6,237,4,"setCombatState"],[236,20,237,18],[236,21,237,19,"prev"],[236,25,237,23],[236,30,237,28],[237,8,237,30],[237,11,237,33,"prev"],[237,15,237,37],[238,8,237,39,"isInCombat"],[238,18,237,49],[238,20,237,51],[239,6,237,57],[239,7,237,58],[239,8,237,59],[239,9,237,60],[240,6,238,4,"combatEngine"],[240,25,238,16],[240,26,238,16,"combatEngine"],[240,38,238,16],[240,39,238,17,"removeTickCallback"],[240,57,238,35],[240,58,238,36,"handleCombatTick"],[240,74,238,52],[240,75,238,53],[241,4,239,2],[241,5,239,3],[243,4,241,2],[244,4,242,2],[244,10,242,8,"equipAbility"],[244,22,242,20],[244,25,242,23,"equipAbility"],[244,26,242,24,"abilityId"],[244,35,242,41],[244,37,242,43,"slotIndex"],[244,46,242,60],[244,51,242,74],[245,6,243,4],[245,13,243,11,"combatState"],[245,24,243,22],[245,25,243,23,"abilityManager"],[245,39,243,37],[245,40,243,38,"equipAbility"],[245,52,243,50],[245,53,243,51,"abilityId"],[245,62,243,60],[245,64,243,62,"slotIndex"],[245,73,243,71],[245,74,243,72],[246,4,244,2],[246,5,244,3],[247,4,246,2],[247,10,246,8,"getDeck"],[247,17,246,15],[247,20,246,18,"getDeck"],[247,21,246,18],[247,26,246,24],[248,6,247,4],[248,13,247,11,"combatState"],[248,24,247,22],[248,25,247,23,"abilityManager"],[248,39,247,37],[248,40,247,38,"getDeck"],[248,47,247,45],[248,48,247,46],[248,49,247,47],[249,4,248,2],[249,5,248,3],[250,4,250,2],[250,10,250,8,"getAvailableAbilities"],[250,31,250,29],[250,34,250,32,"getAvailableAbilities"],[250,35,250,32],[250,40,250,38],[251,6,251,4],[251,13,251,11,"combatState"],[251,24,251,22],[251,25,251,23,"abilityManager"],[251,39,251,37],[251,40,251,38,"getAvailableAbilities"],[251,61,251,59],[251,62,251,60],[251,63,251,61],[252,4,252,2],[252,5,252,3],[253,4,254,2],[253,10,254,8,"upgradeAbility"],[253,24,254,22],[253,27,254,26,"abilityId"],[253,36,254,43],[253,40,254,57],[254,6,255,4],[254,13,255,11,"combatState"],[254,24,255,22],[254,25,255,23,"abilityManager"],[254,39,255,37],[254,40,255,38,"upgradeAbility"],[254,54,255,52],[254,55,255,53,"abilityId"],[254,64,255,62],[254,65,255,63],[255,4,256,2],[255,5,256,3],[257,4,258,2],[258,4,259,2],[258,8,259,2,"useEffect"],[258,14,259,11],[258,15,259,11,"useEffect"],[258,24,259,11],[258,26,259,12],[258,32,259,18],[259,6,260,4,"combatEngine"],[259,25,260,16],[259,26,260,16,"combatEngine"],[259,38,260,16],[259,39,260,17,"start"],[259,44,260,22],[259,45,260,23],[259,46,260,24],[261,6,262,4],[262,6,263,4,"combatState"],[262,17,263,15],[262,18,263,16,"abilityManager"],[262,32,263,30],[262,33,263,31,"equipAbility"],[262,45,263,43],[262,46,263,44],[262,62,263,60],[262,64,263,62],[262,65,263,63],[262,66,263,64],[263,6,264,4,"combatState"],[263,17,264,15],[263,18,264,16,"abilityManager"],[263,32,264,30],[263,33,264,31,"equipAbility"],[263,45,264,43],[263,46,264,44],[263,61,264,59],[263,63,264,61],[263,64,264,62],[263,65,264,63],[264,6,266,4],[264,13,266,11],[264,19,266,17],[265,8,267,6,"combatEngine"],[265,27,267,18],[265,28,267,18,"combatEngine"],[265,40,267,18],[265,41,267,19,"stop"],[265,45,267,23],[265,46,267,24],[265,47,267,25],[266,6,268,4],[266,7,268,5],[267,4,269,2],[267,5,269,3],[267,7,269,5],[267,9,269,7],[267,10,269,8],[268,4,271,2],[268,10,271,8,"contextValue"],[268,22,271,39],[268,25,271,42],[269,6,272,4,"combatState"],[269,17,272,15],[270,6,273,4,"startCombat"],[270,17,273,15],[271,6,274,4,"stopCombat"],[271,16,274,14],[272,6,275,4,"equipAbility"],[272,18,275,16],[273,6,276,4,"getDeck"],[273,13,276,11],[274,6,277,4,"getAvailableAbilities"],[274,27,277,25],[275,6,278,4,"upgradeAbility"],[276,4,279,2],[276,5,279,3],[277,4,281,2],[277,24,282,4],[277,28,282,4,"_reactJsxDevRuntime"],[277,47,282,4],[277,48,282,4,"jsxDEV"],[277,54,282,4],[277,56,282,5,"CombatContext"],[277,69,282,18],[277,70,282,19,"Provider"],[277,78,282,27],[278,6,282,28,"value"],[278,11,282,33],[278,13,282,35,"contextValue"],[278,25,282,48],[279,6,282,48,"children"],[279,14,282,48],[279,16,283,7,"children"],[280,4,283,15],[281,6,283,15,"fileName"],[281,14,283,15],[281,16,283,15,"_jsxFileName"],[281,28,283,15],[282,6,283,15,"lineNumber"],[282,16,283,15],[283,6,283,15,"columnNumber"],[283,18,283,15],[284,4,283,15],[284,11,284,28],[284,12,284,29],[285,2,286,0],[285,3,286,1],[286,0,286,2],[286,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.forEach$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","<anonymous>"],"mappings":"AAA;yBCoC;CDM;8BEE;YCqB;mBCC;MDW;GDC;0BGG;GHY;2BIG;mBFC;4BGa;sDCC,sBD;0BEE;WFG;OHE;kDMY,0BN;0BOC;OPE;iDMG,yBN;KEQ;GJC;sBUG;iCCa;oCCE,iCD;KDG;4BGW;OHG;GViB;yBcG;GdoB;sBeG;mBbC,uCa;GfQ;qBgBG;mBdC,wCc;GhBE;uBiBG;GjBE;kBkBE;GlBE;gCmBE;GnBE;yBoBE;GpBE;YCG;WoBO;KpBE;GDC;CFiB"},"hasCjsExports":false},"type":"js/module"}]}