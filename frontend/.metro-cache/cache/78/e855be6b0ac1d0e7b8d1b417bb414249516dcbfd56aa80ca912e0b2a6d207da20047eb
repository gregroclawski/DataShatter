{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n\n    // Function to handle enemy kills - just log for now, main component will handle rewards\n    const handleEnemyKill = enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 50;\n      const goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      updateNinja(prev => {\n        console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      console.log('üîÑ Combat tick running...');\n      setCombatState(prev => {\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen\n        const MAX_ENEMIES = 10;\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}`);\n        while (newState.enemies.length < MAX_ENEMIES) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n        }\n        return newState;\n      });\n    };\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 250;\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 250;\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 250; // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 25; // 25 XP per enemy\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      clearAllEnemies,\n      triggerLevelUpExplosion,\n      findClosestEnemy\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":407,"map":[[8,2,53,0,"Object"],[8,8,53,0],[8,9,53,0,"defineProperty"],[8,23,53,0],[8,24,53,0,"exports"],[8,31,53,0],[9,4,53,0,"enumerable"],[9,14,53,0],[10,4,53,0,"get"],[10,7,53,0],[10,18,53,0,"get"],[10,19,53,0],[11,6,53,0],[11,13,53,0,"useCombat"],[11,22,53,0],[12,4,53,0],[13,2,53,0],[14,2,63,0,"Object"],[14,8,63,0],[14,9,63,0,"defineProperty"],[14,23,63,0],[14,24,63,0,"exports"],[14,31,63,0],[15,4,63,0,"enumerable"],[15,14,63,0],[16,4,63,0,"get"],[16,7,63,0],[16,18,63,0,"get"],[16,19,63,0],[17,6,63,0],[17,13,63,0,"CombatProvider"],[17,27,63,0],[18,4,63,0],[19,2,63,0],[20,2,1,0],[20,6,1,0,"_react"],[20,12,1,0],[20,15,1,0,"require"],[20,22,1,0],[20,23,1,0,"_dependencyMap"],[20,37,1,0],[21,2,2,0],[21,6,2,0,"_engineCombatEngine"],[21,25,2,0],[21,28,2,0,"require"],[21,35,2,0],[21,36,2,0,"_dependencyMap"],[21,50,2,0],[22,2,3,0],[22,6,3,0,"_typesAbilityTypes"],[22,24,3,0],[22,27,3,0,"require"],[22,34,3,0],[22,35,3,0,"_dependencyMap"],[22,49,3,0],[23,2,4,0],[23,6,4,0,"_GameContext"],[23,18,4,0],[23,21,4,0,"require"],[23,28,4,0],[23,29,4,0,"_dependencyMap"],[23,43,4,0],[24,2,4,40],[24,6,4,40,"_reactJsxDevRuntime"],[24,25,4,40],[24,28,4,40,"require"],[24,35,4,40],[24,36,4,40,"_dependencyMap"],[24,50,4,40],[25,2,51,0],[25,8,51,6,"CombatContext"],[25,21,51,19],[25,37,51,22],[25,41,51,22,"createContext"],[25,47,51,35],[25,48,51,35,"createContext"],[25,61,51,35],[25,63,51,67,"undefined"],[25,72,51,76],[25,73,51,77],[26,2,53,7],[26,8,53,13,"useCombat"],[26,17,53,22],[26,20,53,25,"useCombat"],[26,21,53,25],[26,26,53,50],[27,4,54,2],[27,10,54,8,"context"],[27,17,54,15],[27,20,54,18],[27,24,54,18,"useContext"],[27,30,54,28],[27,31,54,28,"useContext"],[27,41,54,28],[27,43,54,29,"CombatContext"],[27,56,54,42],[27,57,54,43],[28,4,55,2],[28,8,55,6],[28,9,55,7,"context"],[28,16,55,14],[28,18,55,16],[29,6,56,4],[29,12,56,10],[29,16,56,14,"Error"],[29,21,56,19],[29,22,56,20],[29,70,56,68],[29,71,56,69],[30,4,57,2],[31,4,58,2],[31,11,58,9,"context"],[31,18,58,16],[32,2,59,0],[32,3,59,1],[33,2,61,0],[33,6,61,4,"enemyCounter"],[33,18,61,16],[33,21,61,19],[33,22,61,20],[33,23,61,21],[33,24,61,22],[35,2,63,7],[35,8,63,13,"CombatProvider"],[35,22,63,27],[35,25,63,30,"CombatProvider"],[35,26,63,31],[36,4,63,33,"children"],[37,2,63,67],[37,3,63,68],[37,8,63,73],[38,4,64,2],[38,10,64,8],[39,6,64,10,"updateNinja"],[40,4,64,22],[40,5,64,23],[40,8,64,26],[40,12,64,26,"useGame"],[40,24,64,33],[40,25,64,33,"useGame"],[40,32,64,33],[40,34,64,34],[40,35,64,35],[41,4,66,2],[41,10,66,8],[41,11,66,9,"combatState"],[41,22,66,20],[41,24,66,22,"setCombatState"],[41,38,66,36],[41,39,66,37],[41,42,66,40],[41,46,66,40,"useState"],[41,52,66,48],[41,53,66,48,"useState"],[41,61,66,48],[41,63,66,62],[42,6,67,4,"isInCombat"],[42,16,67,14],[42,18,67,16],[42,23,67,21],[43,6,68,4,"currentTick"],[43,17,68,15],[43,19,68,17],[43,20,68,18],[44,6,69,4,"enemies"],[44,13,69,11],[44,15,69,13],[44,17,69,15],[45,6,70,4,"abilityManager"],[45,20,70,18],[45,22,70,20],[45,26,70,24,"AbilityManager"],[45,44,70,38],[45,45,70,38,"AbilityManager"],[45,59,70,38],[45,60,70,39],[45,61,70,40],[46,6,71,4,"statusEffects"],[46,19,71,17],[46,21,71,19],[46,25,71,23,"StatusEffectManager"],[46,44,71,42],[46,45,71,42,"StatusEffectManager"],[46,64,71,42],[46,65,71,43],[46,66,71,44],[47,6,72,4,"playerStats"],[47,17,72,15],[47,19,72,17],[48,8,73,6,"attack"],[48,14,73,12],[48,16,73,14],[48,18,73,16],[49,8,73,18],[50,8,74,6,"defense"],[50,15,74,13],[50,17,74,15],[50,18,74,16],[51,8,75,6,"health"],[51,14,75,12],[51,16,75,14],[51,19,75,17],[52,8,76,6,"maxHealth"],[52,17,76,15],[52,19,76,17],[52,22,76,20],[53,8,77,6,"critChance"],[53,18,77,16],[53,20,77,18],[53,21,77,19],[54,8,78,6,"critDamage"],[54,18,78,16],[54,20,78,18],[54,23,78,21],[55,8,79,6,"cooldownReduction"],[55,25,79,23],[55,27,79,25],[56,6,80,4],[57,4,81,2],[57,5,81,3],[57,6,81,4],[58,4,83,2],[58,10,83,8],[58,11,83,9,"projectiles"],[58,22,83,20],[58,24,83,22,"setProjectiles"],[58,38,83,36],[58,39,83,37],[58,42,83,40],[58,46,83,40,"useState"],[58,52,83,48],[58,53,83,48,"useState"],[58,61,83,48],[58,63,83,69],[58,65,83,71],[58,66,83,72],[60,4,85,2],[61,4,86,2],[61,10,86,8,"handleEnemyKill"],[61,25,86,23],[61,28,86,27,"enemy"],[61,33,86,45],[61,37,86,50],[62,6,87,4,"console"],[62,13,87,11],[62,14,87,12,"log"],[62,17,87,15],[62,18,87,16],[62,46,87,44,"enemy"],[62,51,87,49],[62,52,87,50,"maxHealth"],[62,61,87,59],[62,63,87,61],[62,64,87,62],[64,6,89,4],[65,6,90,4],[65,12,90,10,"xpReward"],[65,20,90,18],[65,23,90,21],[65,25,90,23],[66,6,91,4],[66,12,91,10,"goldReward"],[66,22,91,20],[66,25,91,23],[66,27,91,25],[67,6,93,4,"console"],[67,13,93,11],[67,14,93,12,"log"],[67,17,93,15],[67,18,93,16],[67,33,93,31,"xpReward"],[67,41,93,39],[67,52,93,50,"goldReward"],[67,62,93,60],[67,78,93,76],[67,79,93,77],[68,6,95,4,"updateNinja"],[68,17,95,15],[68,18,95,17,"prev"],[68,22,95,21],[68,26,95,26],[69,8,96,6,"console"],[69,15,96,13],[69,16,96,14,"log"],[69,19,96,17],[69,20,96,18],[69,37,96,35,"prev"],[69,41,96,39],[69,42,96,40,"experience"],[69,52,96,50],[69,64,96,62,"prev"],[69,68,96,66],[69,69,96,67,"experience"],[69,79,96,77],[69,82,96,80,"xpReward"],[69,90,96,88],[69,92,96,90],[69,93,96,91],[70,8,97,6],[70,15,97,13],[71,10,98,8,"experience"],[71,20,98,18],[71,22,98,20,"prev"],[71,26,98,24],[71,27,98,25,"experience"],[71,37,98,35],[71,40,98,38,"xpReward"],[71,48,98,46],[72,10,99,8,"gold"],[72,14,99,12],[72,16,99,14,"prev"],[72,20,99,18],[72,21,99,19,"gold"],[72,25,99,23],[72,28,99,26,"goldReward"],[73,8,100,6],[73,9,100,7],[74,6,101,4],[74,7,101,5],[74,8,101,6],[75,4,102,2],[75,5,102,3],[77,4,104,2],[78,4,105,2],[78,10,105,8,"handleCombatTick"],[78,26,105,24],[78,29,105,27,"handleCombatTick"],[78,30,105,27],[78,35,105,33],[79,6,106,4,"console"],[79,13,106,11],[79,14,106,12,"log"],[79,17,106,15],[79,18,106,16],[79,45,106,43],[79,46,106,44],[80,6,107,4,"setCombatState"],[80,20,107,18],[80,21,107,19,"prev"],[80,25,107,23],[80,29,107,27],[81,8,108,6],[81,14,108,12,"newTick"],[81,21,108,19],[81,24,108,22,"combatEngine"],[81,43,108,34],[81,44,108,34,"combatEngine"],[81,56,108,34],[81,57,108,35,"getCurrentTick"],[81,71,108,49],[81,72,108,50],[81,73,108,51],[82,8,109,6],[82,14,109,12,"newState"],[82,22,109,20],[82,25,109,23],[83,10,109,25],[83,13,109,28,"prev"],[83,17,109,32],[84,10,109,34,"currentTick"],[84,21,109,45],[84,23,109,47,"newTick"],[85,8,109,55],[85,9,109,56],[86,8,111,6],[86,12,111,10],[86,13,111,11,"newState"],[86,21,111,19],[86,22,111,20,"isInCombat"],[86,32,111,30],[86,34,111,32],[86,41,111,39,"newState"],[86,49,111,47],[88,8,113,6],[89,8,114,6,"newState"],[89,16,114,14],[89,17,114,15,"abilityManager"],[89,31,114,29],[89,32,114,30,"updateCooldowns"],[89,47,114,45],[89,48,114,46,"newTick"],[89,55,114,53],[89,56,114,54],[91,8,116,6],[92,8,117,6],[92,14,117,12,"effectResults"],[92,27,117,25],[92,30,117,28,"newState"],[92,38,117,36],[92,39,117,37,"statusEffects"],[92,52,117,50],[92,53,117,51,"processTick"],[92,64,117,62],[92,65,117,63,"newTick"],[92,72,117,70],[92,73,117,71],[94,8,119,6],[95,8,120,6,"effectResults"],[95,21,120,19],[95,22,120,20,"forEach"],[95,29,120,27],[95,30,120,28],[95,31,120,29,"results"],[95,38,120,36],[95,40,120,38,"entityId"],[95,48,120,46],[95,53,120,51],[96,10,121,8],[96,16,121,14,"enemyIndex"],[96,26,121,24],[96,29,121,27,"newState"],[96,37,121,35],[96,38,121,36,"enemies"],[96,45,121,43],[96,46,121,44,"findIndex"],[96,55,121,53],[96,56,121,54,"e"],[96,57,121,55],[96,61,121,59,"e"],[96,62,121,60],[96,63,121,61,"id"],[96,65,121,63],[96,70,121,68,"entityId"],[96,78,121,76],[96,79,121,77],[97,10,122,8],[97,14,122,12,"enemyIndex"],[97,24,122,22],[97,28,122,26],[97,29,122,27],[97,31,122,29],[98,12,123,10,"results"],[98,19,123,17],[98,20,123,18,"forEach"],[98,27,123,25],[98,28,123,26,"result"],[98,34,123,32],[98,38,123,36],[99,14,124,12,"newState"],[99,22,124,20],[99,23,124,21,"enemies"],[99,30,124,28],[99,31,124,29,"enemyIndex"],[99,41,124,39],[99,42,124,40],[99,43,124,41,"health"],[99,49,124,47],[99,53,124,51,"result"],[99,59,124,57],[99,60,124,58,"damage"],[99,66,124,64],[100,14,125,12,"newState"],[100,22,125,20],[100,23,125,21,"enemies"],[100,30,125,28],[100,31,125,29,"enemyIndex"],[100,41,125,39],[100,42,125,40],[100,43,125,41,"lastDamaged"],[100,54,125,52],[100,57,125,55,"newTick"],[100,64,125,62],[101,12,126,10],[101,13,126,11],[101,14,126,12],[102,10,127,8],[103,8,128,6],[103,9,128,7],[103,10,128,8],[105,8,130,6],[106,8,131,6],[106,13,131,11],[106,17,131,15,"i"],[106,18,131,16],[106,21,131,19],[106,22,131,20],[106,24,131,22,"i"],[106,25,131,23],[106,28,131,26],[106,29,131,27],[106,31,131,29,"i"],[106,32,131,30],[106,34,131,32],[106,36,131,34],[107,10,132,8],[107,14,132,12,"newState"],[107,22,132,20],[107,23,132,21,"abilityManager"],[107,37,132,35],[107,38,132,36,"isAbilityReady"],[107,52,132,50],[107,53,132,51,"i"],[107,54,132,52],[107,55,132,53],[107,59,132,57,"newState"],[107,67,132,65],[107,68,132,66,"enemies"],[107,75,132,73],[107,76,132,74,"length"],[107,82,132,80],[107,85,132,83],[107,86,132,84],[107,88,132,86],[108,12,133,10],[108,16,133,14,"newState"],[108,24,133,22],[108,25,133,23,"abilityManager"],[108,39,133,37],[108,40,133,38,"useAbility"],[108,50,133,48],[108,51,133,49,"i"],[108,52,133,50],[108,54,133,52,"newTick"],[108,61,133,59],[108,62,133,60],[108,64,133,62],[109,14,134,12,"castAbility"],[109,25,134,23],[109,26,134,24,"newState"],[109,34,134,32],[109,36,134,34,"i"],[109,37,134,35],[109,38,134,36],[110,12,135,10],[111,10,136,8],[112,8,137,6],[114,8,139,6],[115,8,140,6],[115,14,140,12,"deadEnemies"],[115,25,140,23],[115,28,140,26,"newState"],[115,36,140,34],[115,37,140,35,"enemies"],[115,44,140,42],[115,45,140,43,"filter"],[115,51,140,49],[115,52,140,50,"enemy"],[115,57,140,55],[115,61,140,59,"enemy"],[115,66,140,64],[115,67,140,65,"health"],[115,73,140,71],[115,77,140,75],[115,78,140,76],[115,79,140,77],[116,8,141,6,"deadEnemies"],[116,19,141,17],[116,20,141,18,"forEach"],[116,27,141,25],[116,28,141,26,"enemy"],[116,33,141,31],[116,37,141,35],[117,10,142,8,"handleEnemyKill"],[117,25,142,23],[117,26,142,24,"enemy"],[117,31,142,29],[117,32,142,30],[118,8,143,6],[118,9,143,7],[118,10,143,8],[120,8,145,6],[121,8,146,6,"newState"],[121,16,146,14],[121,17,146,15,"enemies"],[121,24,146,22],[121,27,146,25,"newState"],[121,35,146,33],[121,36,146,34,"enemies"],[121,43,146,41],[121,44,146,42,"filter"],[121,50,146,48],[121,51,146,49,"enemy"],[121,56,146,54],[121,60,146,58,"enemy"],[121,65,146,63],[121,66,146,64,"health"],[121,72,146,70],[121,75,146,73],[121,76,146,74],[121,77,146,75],[123,8,148,6],[124,8,149,6],[124,14,149,12,"MAX_ENEMIES"],[124,25,149,23],[124,28,149,26],[124,30,149,28],[125,8,150,6,"console"],[125,15,150,13],[125,16,150,14,"log"],[125,19,150,17],[125,20,150,18],[125,53,150,51,"newState"],[125,61,150,59],[125,62,150,60,"enemies"],[125,69,150,67],[125,70,150,68,"length"],[125,76,150,74],[125,85,150,83,"MAX_ENEMIES"],[125,96,150,94],[125,98,150,96],[125,99,150,97],[126,8,151,6],[126,15,151,13,"newState"],[126,23,151,21],[126,24,151,22,"enemies"],[126,31,151,29],[126,32,151,30,"length"],[126,38,151,36],[126,41,151,39,"MAX_ENEMIES"],[126,52,151,50],[126,54,151,52],[127,10,152,8,"console"],[127,17,152,15],[127,18,152,16,"log"],[127,21,152,19],[127,22,152,20],[127,43,152,41,"newState"],[127,51,152,49],[127,52,152,50,"enemies"],[127,59,152,57],[127,60,152,58,"length"],[127,66,152,64],[127,69,152,67],[127,70,152,68],[127,74,152,72,"MAX_ENEMIES"],[127,85,152,83],[127,87,152,85],[127,88,152,86],[128,10,153,8,"spawnTestEnemy"],[128,24,153,22],[128,25,153,23,"newState"],[128,33,153,31],[128,34,153,32],[129,8,154,6],[130,8,156,6],[130,15,156,13,"newState"],[130,23,156,21],[131,6,157,4],[131,7,157,5],[131,8,157,6],[132,4,158,2],[132,5,158,3],[134,4,160,2],[135,4,161,2],[135,10,161,8,"findClosestEnemyInternal"],[135,34,161,32],[135,37,161,36,"enemies"],[135,44,161,58],[135,48,161,83],[136,6,162,4],[136,10,162,8,"enemies"],[136,17,162,15],[136,18,162,16,"length"],[136,24,162,22],[136,29,162,27],[136,30,162,28],[136,32,162,30],[136,39,162,37],[136,43,162,41],[138,6,164,4],[139,6,165,4],[139,12,165,10,"SCREEN_WIDTH"],[139,24,165,22],[139,27,165,25],[139,30,165,28],[140,6,166,4],[140,12,166,10,"GAME_AREA_HEIGHT"],[140,28,166,26],[140,31,166,29],[140,34,166,32],[140,37,166,35],[140,40,166,38],[141,6,167,4],[141,12,167,10,"ninjaX"],[141,18,167,16],[141,21,167,19,"SCREEN_WIDTH"],[141,33,167,31],[141,36,167,34],[141,37,167,35],[142,6,168,4],[142,12,168,10,"ninjaY"],[142,18,168,16],[142,21,168,19,"GAME_AREA_HEIGHT"],[142,37,168,35],[142,40,168,38],[142,41,168,39],[143,6,170,4],[143,10,170,8,"closestEnemy"],[143,22,170,20],[143,25,170,23,"enemies"],[143,32,170,30],[143,33,170,31],[143,34,170,32],[143,35,170,33],[144,6,171,4],[144,10,171,8,"closestDistance"],[144,25,171,23],[144,28,171,26,"Infinity"],[144,36,171,34],[145,6,173,4,"enemies"],[145,13,173,11],[145,14,173,12,"forEach"],[145,21,173,19],[145,22,173,20,"enemy"],[145,27,173,25],[145,31,173,29],[146,8,174,6],[146,14,174,12,"distance"],[146,22,174,20],[146,25,174,23,"Math"],[146,29,174,27],[146,30,174,28,"sqrt"],[146,34,174,32],[146,35,175,8,"Math"],[146,39,175,12],[146,40,175,13,"pow"],[146,43,175,16],[146,44,175,17,"enemy"],[146,49,175,22],[146,50,175,23,"position"],[146,58,175,31],[146,59,175,32,"x"],[146,60,175,33],[146,63,175,36,"ninjaX"],[146,69,175,42],[146,71,175,44],[146,72,175,45],[146,73,175,46],[146,76,176,8,"Math"],[146,80,176,12],[146,81,176,13,"pow"],[146,84,176,16],[146,85,176,17,"enemy"],[146,90,176,22],[146,91,176,23,"position"],[146,99,176,31],[146,100,176,32,"y"],[146,101,176,33],[146,104,176,36,"ninjaY"],[146,110,176,42],[146,112,176,44],[146,113,176,45],[146,114,177,6],[146,115,177,7],[147,8,179,6],[147,12,179,10,"distance"],[147,20,179,18],[147,23,179,21,"closestDistance"],[147,38,179,36],[147,40,179,38],[148,10,180,8,"closestDistance"],[148,25,180,23],[148,28,180,26,"distance"],[148,36,180,34],[149,10,181,8,"closestEnemy"],[149,22,181,20],[149,25,181,23,"enemy"],[149,30,181,28],[150,8,182,6],[151,6,183,4],[151,7,183,5],[151,8,183,6],[152,6,185,4,"console"],[152,13,185,11],[152,14,185,12,"log"],[152,17,185,15],[152,18,185,16],[152,60,185,58,"closestDistance"],[152,75,185,73],[152,76,185,74,"toFixed"],[152,83,185,81],[152,84,185,82],[152,85,185,83],[152,86,185,84],[152,88,185,86],[152,89,185,87],[153,6,186,4],[153,13,186,11,"closestEnemy"],[153,25,186,23],[154,4,187,2],[154,5,187,3],[156,4,189,2],[157,4,190,2],[157,10,190,8,"findClosestEnemy"],[157,26,190,24],[157,29,190,27,"findClosestEnemy"],[157,30,190,27],[157,35,190,53],[158,6,191,4],[158,13,191,11,"findClosestEnemyInternal"],[158,37,191,35],[158,38,191,36,"combatState"],[158,49,191,47],[158,50,191,48,"enemies"],[158,57,191,55],[158,58,191,56],[159,4,192,2],[159,5,192,3],[161,4,194,2],[162,4,195,2],[162,10,195,8,"handleProjectileHit"],[162,29,195,27],[162,32,195,31,"projectile"],[162,42,195,59],[162,46,195,64],[163,6,196,4,"console"],[163,13,196,11],[163,14,196,12,"log"],[163,17,196,15],[163,18,196,16],[163,35,196,33,"projectile"],[163,45,196,43],[163,46,196,44,"id"],[163,48,196,46],[163,62,196,60,"projectile"],[163,72,196,70],[163,73,196,71,"targetEnemyId"],[163,86,196,84],[163,94,196,92,"projectile"],[163,104,196,102],[163,105,196,103,"damage"],[163,111,196,109],[163,120,196,118],[163,121,196,119],[164,6,198,4,"setCombatState"],[164,20,198,18],[164,21,198,19,"prev"],[164,25,198,23],[164,29,198,27],[165,8,199,6],[165,14,199,12,"newState"],[165,22,199,20],[165,25,199,23],[166,10,199,25],[166,13,199,28,"prev"],[167,8,199,33],[167,9,199,34],[169,8,201,6],[170,8,202,6],[170,14,202,12,"enemyIndex"],[170,24,202,22],[170,27,202,25,"newState"],[170,35,202,33],[170,36,202,34,"enemies"],[170,43,202,41],[170,44,202,42,"findIndex"],[170,53,202,51],[170,54,202,52,"e"],[170,55,202,53],[170,59,202,57,"e"],[170,60,202,58],[170,61,202,59,"id"],[170,63,202,61],[170,68,202,66,"projectile"],[170,78,202,76],[170,79,202,77,"targetEnemyId"],[170,92,202,90],[170,93,202,91],[171,8,203,6],[171,12,203,10,"enemyIndex"],[171,22,203,20],[171,26,203,24],[171,27,203,25],[171,29,203,27],[172,10,204,8,"newState"],[172,18,204,16],[172,19,204,17,"enemies"],[172,26,204,24],[172,29,204,27],[172,30,204,28],[172,33,204,31,"newState"],[172,41,204,39],[172,42,204,40,"enemies"],[172,49,204,47],[172,50,204,48],[173,10,205,8,"newState"],[173,18,205,16],[173,19,205,17,"enemies"],[173,26,205,24],[173,27,205,25,"enemyIndex"],[173,37,205,35],[173,38,205,36],[173,41,205,39],[174,12,206,10],[174,15,206,13,"newState"],[174,23,206,21],[174,24,206,22,"enemies"],[174,31,206,29],[174,32,206,30,"enemyIndex"],[174,42,206,40],[174,43,206,41],[175,12,207,10,"health"],[175,18,207,16],[175,20,207,18,"newState"],[175,28,207,26],[175,29,207,27,"enemies"],[175,36,207,34],[175,37,207,35,"enemyIndex"],[175,47,207,45],[175,48,207,46],[175,49,207,47,"health"],[175,55,207,53],[175,58,207,56,"projectile"],[175,68,207,66],[175,69,207,67,"damage"],[175,75,207,73],[176,12,208,10,"lastDamaged"],[176,23,208,21],[176,25,208,23,"combatEngine"],[176,44,208,35],[176,45,208,35,"combatEngine"],[176,57,208,35],[176,58,208,36,"getCurrentTick"],[176,72,208,50],[176,73,208,51],[177,10,209,8],[177,11,209,9],[178,10,211,8,"console"],[178,17,211,15],[178,18,211,16,"log"],[178,21,211,19],[178,22,211,20],[178,34,211,32,"projectile"],[178,44,211,42],[178,45,211,43,"targetEnemyId"],[178,58,211,56],[178,70,211,68,"newState"],[178,78,211,76],[178,79,211,77,"enemies"],[178,86,211,84],[178,87,211,85,"enemyIndex"],[178,97,211,95],[178,98,211,96],[178,99,211,97,"health"],[178,105,211,103],[178,109,211,107,"newState"],[178,117,211,115],[178,118,211,116,"enemies"],[178,125,211,123],[178,126,211,124,"enemyIndex"],[178,136,211,134],[178,137,211,135],[178,138,211,136,"maxHealth"],[178,147,211,145],[178,149,211,147],[178,150,211,148],[179,8,212,6],[180,8,214,6],[180,15,214,13,"newState"],[180,23,214,21],[181,6,215,4],[181,7,215,5],[181,8,215,6],[183,6,217,4],[184,6,218,4,"setProjectiles"],[184,20,218,18],[184,21,218,19,"prev"],[184,25,218,23],[184,29,218,27,"prev"],[184,33,218,31],[184,34,218,32,"filter"],[184,40,218,38],[184,41,218,39,"p"],[184,42,218,40],[184,46,218,44,"p"],[184,47,218,45],[184,48,218,46,"id"],[184,50,218,48],[184,55,218,53,"projectile"],[184,65,218,63],[184,66,218,64,"id"],[184,68,218,66],[184,69,218,67],[184,70,218,68],[185,4,219,2],[185,5,219,3],[187,4,221,2],[188,4,222,2],[188,10,222,8,"castAbility"],[188,21,222,19],[188,24,222,22,"castAbility"],[188,25,222,23,"state"],[188,30,222,41],[188,32,222,43,"slotIndex"],[188,41,222,60],[188,46,222,65],[189,6,223,4],[189,12,223,10,"deck"],[189,16,223,14],[189,19,223,17,"state"],[189,24,223,22],[189,25,223,23,"abilityManager"],[189,39,223,37],[189,40,223,38,"getDeck"],[189,47,223,45],[189,48,223,46],[189,49,223,47],[190,6,224,4],[190,12,224,10,"ability"],[190,19,224,17],[190,22,224,20,"deck"],[190,26,224,24],[190,27,224,25,"slots"],[190,32,224,30],[190,33,224,31,"slotIndex"],[190,42,224,40],[190,43,224,41],[191,6,225,4],[191,10,225,8],[191,11,225,9,"ability"],[191,18,225,16],[191,20,225,18],[193,6,227,4],[194,6,228,4],[194,12,228,10,"target"],[194,18,228,16],[194,21,228,19,"findClosestEnemyInternal"],[194,45,228,43],[194,46,228,44,"state"],[194,51,228,49],[194,52,228,50,"enemies"],[194,59,228,57],[194,60,228,58],[195,6,229,4],[195,10,229,8],[195,11,229,9,"target"],[195,17,229,15],[195,19,229,17],[197,6,231,4],[198,6,232,4],[198,10,232,8,"damage"],[198,16,232,14],[198,19,232,17,"ability"],[198,26,232,24],[198,27,232,25,"stats"],[198,32,232,30],[198,33,232,31,"baseDamage"],[198,43,232,41],[200,6,234,4],[201,6,235,4,"deck"],[201,10,235,8],[201,11,235,9,"activeSynergies"],[201,26,235,24],[201,27,235,25,"forEach"],[201,34,235,32],[201,35,235,33,"synergy"],[201,42,235,40],[201,46,235,44],[202,8,236,6],[202,12,236,10,"synergy"],[202,19,236,17],[202,20,236,18,"bonus"],[202,25,236,23],[202,26,236,24,"damageBonus"],[202,37,236,35],[202,41,237,10,"synergy"],[202,48,237,17],[202,49,237,18,"requiredTags"],[202,61,237,30],[202,62,237,31,"some"],[202,66,237,35],[202,67,237,36,"tag"],[202,70,237,39],[202,74,237,43,"ability"],[202,81,237,50],[202,82,237,51,"tags"],[202,86,237,55],[202,87,237,56,"includes"],[202,95,237,64],[202,96,237,65,"tag"],[202,99,237,68],[202,100,237,69],[202,101,237,70],[202,103,237,72],[203,10,238,8,"damage"],[203,16,238,14],[203,20,238,19],[203,21,238,20],[203,24,238,23,"synergy"],[203,31,238,30],[203,32,238,31,"bonus"],[203,37,238,36],[203,38,238,37,"damageBonus"],[203,49,238,48],[203,52,238,51],[203,55,238,55],[204,8,239,6],[205,6,240,4],[205,7,240,5],[205,8,240,6],[207,6,242,4],[208,6,243,4],[208,12,243,10,"damageResult"],[208,24,243,22],[208,27,243,25,"DamageCalculator"],[208,46,243,41],[208,47,243,41,"DamageCalculator"],[208,63,243,41],[208,64,243,42,"calculateDamage"],[208,79,243,57],[208,80,243,58,"damage"],[208,86,243,64],[208,88,243,66,"state"],[208,93,243,71],[208,94,243,72,"playerStats"],[208,105,243,83],[208,107,243,85,"target"],[208,113,243,91],[208,114,243,92,"stats"],[208,119,243,97],[208,120,243,98],[210,6,245,4],[211,6,246,4,"createProjectile"],[211,22,246,20],[211,23,246,21,"target"],[211,29,246,27],[211,31,246,29,"damageResult"],[211,43,246,41],[211,44,246,42,"damage"],[211,50,246,48],[211,51,246,49],[213,6,248,4],[214,6,249,4],[214,10,249,8,"ability"],[214,17,249,15],[214,18,249,16,"effects"],[214,25,249,23],[214,26,249,24,"includes"],[214,34,249,32],[214,35,249,33],[214,40,249,38],[214,41,249,39],[214,45,249,43,"ability"],[214,52,249,50],[214,53,249,51,"stats"],[214,58,249,56],[214,59,249,57,"duration"],[214,67,249,65],[214,69,249,67],[215,8,250,6,"state"],[215,13,250,11],[215,14,250,12,"statusEffects"],[215,27,250,25],[215,28,250,26,"addEffect"],[215,37,250,35],[215,38,250,36,"target"],[215,44,250,42],[215,45,250,43,"id"],[215,47,250,45],[215,49,250,47],[216,10,251,8,"id"],[216,12,251,10],[216,14,251,12],[216,17,251,15,"ability"],[216,24,251,22],[216,25,251,23,"id"],[216,27,251,25],[216,33,251,31],[217,10,252,8,"type"],[217,14,252,12],[217,16,252,14],[217,21,252,19],[218,10,253,8,"remainingTicks"],[218,24,253,22],[218,26,253,24,"Math"],[218,30,253,28],[218,31,253,29,"floor"],[218,36,253,34],[218,37,253,35,"ability"],[218,44,253,42],[218,45,253,43,"stats"],[218,50,253,48],[218,51,253,49,"duration"],[218,59,253,57],[218,62,253,60],[218,64,253,62],[218,65,253,63],[219,10,253,65],[220,10,254,8,"tickInterval"],[220,22,254,20],[220,24,254,22],[220,26,254,24],[221,10,254,26],[222,10,255,8,"lastTick"],[222,18,255,16],[222,20,255,18,"state"],[222,25,255,23],[222,26,255,24,"currentTick"],[222,37,255,35],[223,10,256,8,"value"],[223,15,256,13],[223,17,256,15,"Math"],[223,21,256,19],[223,22,256,20,"floor"],[223,27,256,25],[223,28,256,26,"damage"],[223,34,256,32],[223,37,256,35],[223,40,256,38],[223,41,256,39],[224,10,256,41],[225,10,257,8,"stackable"],[225,19,257,17],[225,21,257,19],[226,8,258,6],[226,9,258,7],[226,10,258,8],[227,6,259,4],[228,6,261,4,"console"],[228,13,261,11],[228,14,261,12,"log"],[228,17,261,15],[228,18,261,16],[228,24,261,22,"ability"],[228,31,261,29],[228,32,261,30,"name"],[228,36,261,34],[228,69,261,67,"damageResult"],[228,81,261,79],[228,82,261,80,"damage"],[228,88,261,86],[228,98,261,96,"damageResult"],[228,110,261,108],[228,111,261,109,"isCritical"],[228,121,261,119],[228,124,261,122],[228,134,261,132],[228,137,261,135],[228,139,261,137],[228,141,261,139],[228,142,261,140],[229,4,262,2],[229,5,262,3],[231,4,264,2],[232,4,265,2],[232,10,265,8,"createProjectile"],[232,26,265,24],[232,29,265,27,"createProjectile"],[232,30,265,28,"targetEnemy"],[232,41,265,52],[232,43,265,54,"damage"],[232,49,265,68],[232,54,265,73],[233,6,266,4],[233,12,266,10,"SCREEN_WIDTH"],[233,24,266,22],[233,27,266,25],[233,30,266,28],[234,6,267,4],[234,12,267,10,"GAME_AREA_HEIGHT"],[234,28,267,26],[234,31,267,29],[234,34,267,32],[234,37,267,35],[234,40,267,38],[235,6,268,4],[235,12,268,10,"ninjaX"],[235,18,268,16],[235,21,268,19,"SCREEN_WIDTH"],[235,33,268,31],[235,36,268,34],[235,37,268,35],[236,6,269,4],[236,12,269,10,"ninjaY"],[236,18,269,16],[236,21,269,19,"GAME_AREA_HEIGHT"],[236,37,269,35],[236,40,269,38],[236,41,269,39],[237,6,270,4],[237,12,270,10,"ENEMY_SIZE"],[237,22,270,20],[237,25,270,23],[237,27,270,25],[238,6,272,4],[238,12,272,10,"projectile"],[238,22,272,38],[238,25,272,41],[239,8,273,6,"id"],[239,10,273,8],[239,12,273,10],[239,20,273,18,"Date"],[239,24,273,22],[239,25,273,23,"now"],[239,28,273,26],[239,29,273,27],[239,30,273,28],[239,34,273,32,"Math"],[239,38,273,36],[239,39,273,37,"random"],[239,45,273,43],[239,46,273,44],[239,47,273,45],[239,49,273,47],[240,8,274,6,"x"],[240,9,274,7],[240,11,274,9,"ninjaX"],[240,17,274,15],[241,8,275,6,"y"],[241,9,275,7],[241,11,275,9,"ninjaY"],[241,17,275,15],[242,8,276,6,"targetX"],[242,15,276,13],[242,17,276,15,"targetEnemy"],[242,28,276,26],[242,29,276,27,"position"],[242,37,276,35],[242,38,276,36,"x"],[242,39,276,37],[242,42,276,40,"ENEMY_SIZE"],[242,52,276,50],[242,55,276,53],[242,56,276,54],[243,8,277,6,"targetY"],[243,15,277,13],[243,17,277,15,"targetEnemy"],[243,28,277,26],[243,29,277,27,"position"],[243,37,277,35],[243,38,277,36,"y"],[243,39,277,37],[243,42,277,40,"ENEMY_SIZE"],[243,52,277,50],[243,55,277,53],[243,56,277,54],[244,8,278,6,"targetEnemyId"],[244,21,278,19],[244,23,278,21,"targetEnemy"],[244,34,278,32],[244,35,278,33,"id"],[244,37,278,35],[245,8,279,6,"damage"],[245,14,279,12],[245,16,279,14,"damage"],[245,22,279,20],[246,8,280,6,"startTime"],[246,17,280,15],[246,19,280,17,"Date"],[246,23,280,21],[246,24,280,22,"now"],[246,27,280,25],[246,28,280,26],[246,29,280,27],[247,8,281,6,"duration"],[247,16,281,14],[247,18,281,16],[247,21,281,19],[247,22,281,21],[248,6,282,4],[248,7,282,5],[249,6,284,4,"console"],[249,13,284,11],[249,14,284,12,"log"],[249,17,284,15],[249,18,284,16],[249,53,284,51,"targetEnemy"],[249,64,284,62],[249,65,284,63,"id"],[249,67,284,65],[249,75,284,73,"damage"],[249,81,284,79],[249,90,284,88],[249,91,284,89],[250,6,286,4,"setProjectiles"],[250,20,286,18],[250,21,286,19,"prev"],[250,25,286,23],[250,29,286,27],[250,30,286,28],[250,33,286,31,"prev"],[250,37,286,35],[250,39,286,37,"projectile"],[250,49,286,47],[250,50,286,48],[250,51,286,49],[252,6,288,4],[253,6,289,4,"setTimeout"],[253,16,289,14],[253,17,289,15],[253,23,289,21],[254,8,290,6,"handleProjectileHit"],[254,27,290,25],[254,28,290,26,"projectile"],[254,38,290,36],[254,39,290,37],[255,6,291,4],[255,7,291,5],[255,9,291,7],[255,12,291,10],[255,13,291,11],[256,4,292,2],[256,5,292,3],[258,4,294,2],[259,4,295,2],[259,10,295,8,"spawnTestEnemy"],[259,24,295,22],[259,27,295,26,"state"],[259,32,295,44],[259,36,295,49],[260,6,296,4],[261,6,297,4],[261,12,297,10,"SCREEN_WIDTH"],[261,24,297,22],[261,27,297,25],[261,30,297,28],[261,31,297,29],[261,32,297,30],[262,6,298,4],[262,12,298,10,"GAME_AREA_HEIGHT"],[262,28,298,26],[262,31,298,29],[262,34,298,32],[262,37,298,35],[262,40,298,38],[262,41,298,39],[262,42,298,40],[263,6,299,4],[263,12,299,10,"ENEMY_SIZE"],[263,22,299,20],[263,25,299,23],[263,27,299,25],[265,6,301,4],[266,6,302,4],[266,12,302,10,"x"],[266,13,302,11],[266,16,302,14,"Math"],[266,20,302,18],[266,21,302,19,"random"],[266,27,302,25],[266,28,302,26],[266,29,302,27],[266,33,302,31,"SCREEN_WIDTH"],[266,45,302,43],[266,48,302,46,"ENEMY_SIZE"],[266,58,302,56],[266,61,302,59],[266,62,302,60],[266,63,302,61],[266,66,302,64,"ENEMY_SIZE"],[266,76,302,74],[266,77,302,75],[266,78,302,76],[267,6,303,4],[267,12,303,10,"y"],[267,13,303,11],[267,16,303,14,"Math"],[267,20,303,18],[267,21,303,19,"random"],[267,27,303,25],[267,28,303,26],[267,29,303,27],[267,33,303,31,"GAME_AREA_HEIGHT"],[267,49,303,47],[267,52,303,50,"ENEMY_SIZE"],[267,62,303,60],[267,65,303,63],[267,66,303,64],[267,67,303,65],[267,70,303,68,"ENEMY_SIZE"],[267,80,303,78],[267,81,303,79],[267,82,303,80],[269,6,305,4],[269,12,305,10,"enemy"],[269,17,305,28],[269,20,305,31],[270,8,306,6,"id"],[270,10,306,8],[270,12,306,10],[270,21,306,19],[270,23,306,21,"enemyCounter"],[270,35,306,33],[270,37,306,35],[271,8,307,6,"name"],[271,12,307,10],[271,14,307,12],[271,24,307,22],[272,8,308,6,"health"],[272,14,308,12],[272,16,308,14],[272,19,308,17],[273,8,309,6,"maxHealth"],[273,17,309,15],[273,19,309,17],[273,22,309,20],[274,8,310,6,"stats"],[274,13,310,11],[274,15,310,13],[275,10,311,8,"attack"],[275,16,311,14],[275,18,311,16],[275,20,311,18],[276,10,312,8,"defense"],[276,17,312,15],[276,19,312,17],[276,21,312,19],[277,10,313,8,"health"],[277,16,313,14],[277,18,313,16],[277,21,313,19],[278,10,314,8,"maxHealth"],[278,19,314,17],[278,21,314,19],[278,24,314,22],[279,10,315,8,"critChance"],[279,20,315,18],[279,22,315,20],[279,23,315,21],[280,10,316,8,"critDamage"],[280,20,316,18],[280,22,316,20],[280,25,316,23],[281,10,317,8,"cooldownReduction"],[281,27,317,25],[281,29,317,27],[282,8,318,6],[282,9,318,7],[283,8,319,6,"position"],[283,16,319,14],[283,18,319,16],[284,10,319,18,"x"],[284,11,319,19],[285,10,319,21,"y"],[286,8,319,23],[286,9,319,24],[287,8,320,6,"lastDamaged"],[287,19,320,17],[287,21,320,19],[288,6,321,4],[288,7,321,5],[289,6,323,4,"state"],[289,11,323,9],[289,12,323,10,"enemies"],[289,19,323,17],[289,20,323,18,"push"],[289,24,323,22],[289,25,323,23,"enemy"],[289,30,323,28],[289,31,323,29],[290,4,324,2],[290,5,324,3],[292,4,326,2],[293,4,327,2],[293,10,327,8,"startCombat"],[293,21,327,19],[293,24,327,22,"startCombat"],[293,25,327,22],[293,30,327,28],[294,6,328,4,"console"],[294,13,328,11],[294,14,328,12,"log"],[294,17,328,15],[294,18,328,16],[294,63,328,61],[294,64,328,62],[295,6,329,4,"setCombatState"],[295,20,329,18],[295,21,329,19,"prev"],[295,25,329,23],[295,30,329,28],[296,8,329,30],[296,11,329,33,"prev"],[296,15,329,37],[297,8,329,39,"isInCombat"],[297,18,329,49],[297,20,329,51],[298,6,329,56],[298,7,329,57],[298,8,329,58],[298,9,329,59],[300,6,331,4],[301,6,332,4,"combatEngine"],[301,25,332,16],[301,26,332,16,"combatEngine"],[301,38,332,16],[301,39,332,17,"addTickCallback"],[301,54,332,32],[301,55,332,33,"handleCombatTick"],[301,71,332,49],[301,72,332,50],[302,6,333,4,"console"],[302,13,333,11],[302,14,333,12,"log"],[302,17,333,15],[302,18,333,16],[302,62,333,60],[302,63,333,61],[304,6,335,4],[305,6,336,4,"combatEngine"],[305,25,336,16],[305,26,336,16,"combatEngine"],[305,38,336,16],[305,39,336,17,"start"],[305,44,336,22],[305,45,336,23],[305,46,336,24],[306,4,337,2],[306,5,337,3],[308,4,339,2],[309,4,340,2],[309,10,340,8,"stopCombat"],[309,20,340,18],[309,23,340,21,"stopCombat"],[309,24,340,21],[309,29,340,27],[310,6,341,4,"setCombatState"],[310,20,341,18],[310,21,341,19,"prev"],[310,25,341,23],[310,30,341,28],[311,8,341,30],[311,11,341,33,"prev"],[311,15,341,37],[312,8,341,39,"isInCombat"],[312,18,341,49],[312,20,341,51],[313,6,341,57],[313,7,341,58],[313,8,341,59],[313,9,341,60],[314,6,342,4,"combatEngine"],[314,25,342,16],[314,26,342,16,"combatEngine"],[314,38,342,16],[314,39,342,17,"removeTickCallback"],[314,57,342,35],[314,58,342,36,"handleCombatTick"],[314,74,342,52],[314,75,342,53],[315,4,343,2],[315,5,343,3],[317,4,345,2],[318,4,346,2],[318,10,346,8,"equipAbility"],[318,22,346,20],[318,25,346,23,"equipAbility"],[318,26,346,24,"abilityId"],[318,35,346,41],[318,37,346,43,"slotIndex"],[318,46,346,60],[318,51,346,74],[319,6,347,4],[319,13,347,11,"combatState"],[319,24,347,22],[319,25,347,23,"abilityManager"],[319,39,347,37],[319,40,347,38,"equipAbility"],[319,52,347,50],[319,53,347,51,"abilityId"],[319,62,347,60],[319,64,347,62,"slotIndex"],[319,73,347,71],[319,74,347,72],[320,4,348,2],[320,5,348,3],[321,4,350,2],[321,10,350,8,"getDeck"],[321,17,350,15],[321,20,350,18,"getDeck"],[321,21,350,18],[321,26,350,24],[322,6,351,4],[322,13,351,11,"combatState"],[322,24,351,22],[322,25,351,23,"abilityManager"],[322,39,351,37],[322,40,351,38,"getDeck"],[322,47,351,45],[322,48,351,46],[322,49,351,47],[323,4,352,2],[323,5,352,3],[324,4,354,2],[324,10,354,8,"getAvailableAbilities"],[324,31,354,29],[324,34,354,32,"getAvailableAbilities"],[324,35,354,32],[324,40,354,38],[325,6,355,4],[325,13,355,11,"combatState"],[325,24,355,22],[325,25,355,23,"abilityManager"],[325,39,355,37],[325,40,355,38,"getAvailableAbilities"],[325,61,355,59],[325,62,355,60],[325,63,355,61],[326,4,356,2],[326,5,356,3],[327,4,358,2],[327,10,358,8,"upgradeAbility"],[327,24,358,22],[327,27,358,26,"abilityId"],[327,36,358,43],[327,40,358,57],[328,6,359,4],[328,13,359,11,"combatState"],[328,24,359,22],[328,25,359,23,"abilityManager"],[328,39,359,37],[328,40,359,38,"upgradeAbility"],[328,54,359,52],[328,55,359,53,"abilityId"],[328,64,359,62],[328,65,359,63],[329,4,360,2],[329,5,360,3],[331,4,362,2],[332,4,363,2],[332,10,363,8,"clearAllEnemies"],[332,25,363,23],[332,28,363,26,"clearAllEnemies"],[332,29,363,26],[332,34,363,32],[333,6,364,4,"console"],[333,13,364,11],[333,14,364,12,"log"],[333,17,364,15],[333,18,364,16],[333,67,364,65],[333,68,364,66],[334,6,365,4,"setCombatState"],[334,20,365,18],[334,21,365,19,"prev"],[334,25,365,23],[334,30,365,28],[335,8,366,6],[335,11,366,9,"prev"],[335,15,366,13],[336,8,367,6,"enemies"],[336,15,367,13],[336,17,367,15],[337,6,368,4],[337,7,368,5],[337,8,368,6],[337,9,368,7],[338,4,369,2],[338,5,369,3],[340,4,371,2],[341,4,372,2],[341,10,372,8,"triggerLevelUpExplosion"],[341,33,372,31],[341,36,372,34,"triggerLevelUpExplosion"],[341,37,372,34],[341,42,372,40],[342,6,373,4,"console"],[342,13,373,11],[342,14,373,12,"log"],[342,17,373,15],[342,18,373,16],[342,70,373,68],[342,71,373,69],[343,6,375,4,"setCombatState"],[343,20,375,18],[343,21,375,19,"prev"],[343,25,375,23],[343,29,375,27],[344,8,376,6],[345,8,377,6],[345,14,377,12,"enemyCount"],[345,24,377,22],[345,27,377,25,"prev"],[345,31,377,29],[345,32,377,30,"enemies"],[345,39,377,37],[345,40,377,38,"length"],[345,46,377,44],[346,8,378,6],[346,14,378,12,"explosionXP"],[346,25,378,23],[346,28,378,26,"enemyCount"],[346,38,378,36],[346,41,378,39],[346,43,378,41],[346,44,378,42],[346,45,378,43],[347,8,379,6],[347,14,379,12,"explosionGold"],[347,27,379,25],[347,30,379,28,"enemyCount"],[347,40,379,38],[347,43,379,41],[347,44,379,42],[347,45,379,43],[347,46,379,44],[349,8,381,6,"console"],[349,15,381,13],[349,16,381,14,"log"],[349,19,381,17],[349,20,381,18],[349,44,381,42,"enemyCount"],[349,54,381,52],[349,76,381,74,"explosionXP"],[349,87,381,85],[349,98,381,96,"explosionGold"],[349,111,381,109],[349,118,381,116],[349,119,381,117],[351,8,383,6],[352,8,384,6],[352,12,384,10,"explosionXP"],[352,23,384,21],[352,26,384,24],[352,27,384,25],[352,29,384,27],[353,10,385,8,"updateNinja"],[353,21,385,19],[353,22,385,21,"ninja"],[353,27,385,26],[353,32,385,32],[354,12,386,10,"experience"],[354,22,386,20],[354,24,386,22,"ninja"],[354,29,386,27],[354,30,386,28,"experience"],[354,40,386,38],[354,43,386,41,"explosionXP"],[354,54,386,52],[355,12,387,10,"gold"],[355,16,387,14],[355,18,387,16,"ninja"],[355,23,387,21],[355,24,387,22,"gold"],[355,28,387,26],[355,31,387,29,"explosionGold"],[356,10,388,8],[356,11,388,9],[356,12,388,10],[356,13,388,11],[357,8,389,6],[359,8,391,6],[360,8,392,6],[361,8,393,6],[361,14,393,12,"damagedEnemies"],[361,28,393,26],[361,31,393,29,"prev"],[361,35,393,33],[361,36,393,34,"enemies"],[361,43,393,41],[361,44,393,42,"map"],[361,47,393,45],[361,48,393,46,"enemy"],[361,53,393,51],[361,58,393,56],[362,10,394,8],[362,13,394,11,"enemy"],[362,18,394,16],[363,10,395,8,"health"],[363,16,395,14],[363,18,395,16],[363,19,395,17],[364,10,395,19],[365,10,396,8,"lastDamaged"],[365,21,396,19],[365,23,396,21,"combatEngine"],[365,42,396,33],[365,43,396,33,"combatEngine"],[365,55,396,33],[365,56,396,34,"getCurrentTick"],[365,70,396,48],[365,71,396,49],[366,8,397,6],[366,9,397,7],[366,10,397,8],[366,11,397,9],[367,8,399,6],[367,15,399,13],[368,10,400,8],[368,13,400,11,"prev"],[368,17,400,15],[369,10,401,8,"enemies"],[369,17,401,15],[369,19,401,17,"damagedEnemies"],[370,8,402,6],[370,9,402,7],[371,6,403,4],[371,7,403,5],[371,8,403,6],[372,4,404,2],[372,5,404,3],[374,4,406,2],[375,4,407,2],[375,8,407,2,"useEffect"],[375,14,407,11],[375,15,407,11,"useEffect"],[375,24,407,11],[375,26,407,12],[375,32,407,18],[376,6,408,4,"combatEngine"],[376,25,408,16],[376,26,408,16,"combatEngine"],[376,38,408,16],[376,39,408,17,"start"],[376,44,408,22],[376,45,408,23],[376,46,408,24],[378,6,410,4],[379,6,411,4,"combatState"],[379,17,411,15],[379,18,411,16,"abilityManager"],[379,32,411,30],[379,33,411,31,"equipAbility"],[379,45,411,43],[379,46,411,44],[379,62,411,60],[379,64,411,62],[379,65,411,63],[379,66,411,64],[380,6,412,4,"combatState"],[380,17,412,15],[380,18,412,16,"abilityManager"],[380,32,412,30],[380,33,412,31,"equipAbility"],[380,45,412,43],[380,46,412,44],[380,61,412,59],[380,63,412,61],[380,64,412,62],[380,65,412,63],[381,6,414,4],[381,13,414,11],[381,19,414,17],[382,8,415,6,"combatEngine"],[382,27,415,18],[382,28,415,18,"combatEngine"],[382,40,415,18],[382,41,415,19,"stop"],[382,45,415,23],[382,46,415,24],[382,47,415,25],[383,6,416,4],[383,7,416,5],[384,4,417,2],[384,5,417,3],[384,7,417,5],[384,9,417,7],[384,10,417,8],[385,4,419,2],[385,10,419,8,"contextValue"],[385,22,419,39],[385,25,419,42],[386,6,420,4,"combatState"],[386,17,420,15],[387,6,421,4,"projectiles"],[387,17,421,15],[388,6,422,4,"startCombat"],[388,17,422,15],[389,6,423,4,"stopCombat"],[389,16,423,14],[390,6,424,4,"equipAbility"],[390,18,424,16],[391,6,425,4,"getDeck"],[391,13,425,11],[392,6,426,4,"getAvailableAbilities"],[392,27,426,25],[393,6,427,4,"upgradeAbility"],[393,20,427,18],[394,6,428,4,"clearAllEnemies"],[394,21,428,19],[395,6,429,4,"triggerLevelUpExplosion"],[395,29,429,27],[396,6,430,4,"findClosestEnemy"],[397,4,431,2],[397,5,431,3],[398,4,433,2],[398,24,434,4],[398,28,434,4,"_reactJsxDevRuntime"],[398,47,434,4],[398,48,434,4,"jsxDEV"],[398,54,434,4],[398,56,434,5,"CombatContext"],[398,69,434,18],[398,70,434,19,"Provider"],[398,78,434,27],[399,6,434,28,"value"],[399,11,434,33],[399,13,434,35,"contextValue"],[399,25,434,48],[400,6,434,48,"children"],[400,14,434,48],[400,16,435,7,"children"],[401,4,435,15],[402,6,435,15,"fileName"],[402,14,435,15],[402,16,435,15,"_jsxFileName"],[402,28,435,15],[403,6,435,15,"lineNumber"],[403,16,435,15],[404,6,435,15,"columnNumber"],[404,18,435,15],[405,4,435,15],[405,11,436,28],[405,12,436,29],[406,2,438,0],[406,3,438,1],[407,0,438,2],[407,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","setTimeout$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","useEffect$argument_0","<anonymous>"],"mappings":"AAA;yBCoD;CDM;8BEI;0BCuB;gBCS;KDM;GDC;2BGG;mBCE;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;0BKC;OLE;iDIG,yBJ;KDW;GHC;mCUG;oBCY;KDU;GVI;2BYG;GZE;8BaG;mBTG;oDEI,sCF;KSa;mBCG,oBC,2BD,CD;GbC;sBgBG;iCCa;oCCE,iCD;KDG;GhBsB;2BmBG;mBLqB,6BK;eCG;KDE;GnBC;yBqBG;GrB6B;sBsBG;mBlBE,uCkB;GtBQ;qBuBG;mBnBC,wCmB;GvBE;uBwBG;GxBE;kByBE;GzBE;gC0BE;G1BE;yB2BE;G3BE;0B4BG;mBxBE;MwBG;G5BC;kC6BG;mBzBG;oBFU;UEG;8C0BK;Q1BI;KyBM;G7BC;Y+BG;WCO;KDE;G/BC;CFqB"},"hasCjsExports":false},"type":"js/module"}]}