{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token && {\n              'Authorization': `Bearer ${token}`\n            })\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n        }\n        console.log('Session check result:', isValid);\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error (keeping current session):', error);\n        // Don't log out on network errors - keep current session\n        return !!token && !!user;\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":291,"map":[[15,2,30,0,"Object"],[15,8,30,0],[15,9,30,0,"defineProperty"],[15,23,30,0],[15,24,30,0,"exports"],[15,31,30,0],[16,4,30,0,"enumerable"],[16,14,30,0],[17,4,30,0,"get"],[17,7,30,0],[17,18,30,0,"get"],[17,19,30,0],[18,6,30,0],[18,13,30,0,"AuthProvider"],[18,25,30,0],[19,4,30,0],[20,2,30,0],[21,2,275,0,"Object"],[21,8,275,0],[21,9,275,0,"defineProperty"],[21,23,275,0],[21,24,275,0,"exports"],[21,31,275,0],[22,4,275,0,"enumerable"],[22,14,275,0],[23,4,275,0,"get"],[23,7,275,0],[23,18,275,0,"get"],[23,19,275,0],[24,6,275,0],[24,13,275,0,"useAuth"],[24,20,275,0],[25,4,275,0],[26,2,275,0],[27,2,281,2],[27,6,281,2,"_expoVirtualEnv"],[27,21,281,2],[27,24,281,2,"require"],[27,31,281,2],[27,32,281,2,"_dependencyMap"],[27,46,281,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,3,0],[31,6,3,0,"_expoConstants"],[31,20,3,0],[31,23,3,0,"require"],[31,30,3,0],[31,31,3,0,"_dependencyMap"],[31,45,3,0],[32,2,3,0],[32,6,3,0,"Constants"],[32,15,3,0],[32,18,3,0,"_interopDefault"],[32,33,3,0],[32,34,3,0,"_expoConstants"],[32,48,3,0],[33,2,3,39],[33,6,3,39,"_reactJsxDevRuntime"],[33,25,3,39],[33,28,3,39,"require"],[33,35,3,39],[33,36,3,39,"_dependencyMap"],[33,50,3,39],[34,2,26,0],[34,8,26,6,"AuthContext"],[34,19,26,17],[34,35,26,20],[34,39,26,20,"createContext"],[34,45,26,33],[34,46,26,33,"createContext"],[34,59,26,33],[34,61,26,63,"undefined"],[34,70,26,72],[34,71,26,73],[35,2,28,0],[35,8,28,6,"API_BASE_URL"],[35,20,28,18],[35,23,28,21,"Constants"],[35,32,28,30],[35,33,28,30,"default"],[35,40,28,30],[35,41,28,31,"expoConfig"],[35,51,28,41],[35,53,28,43,"extra"],[35,58,28,48],[35,60,28,50,"backendUrl"],[35,70,28,60],[35,74,28,60,"_expoVirtualEnv"],[35,89,28,60],[35,90,28,60,"env"],[35,93,28,60],[35,94,28,60,"EXPO_PUBLIC_BACKEND_URL"],[35,117,28,99],[35,121,28,103],[35,144,28,126],[36,2,30,7],[36,8,30,13,"AuthProvider"],[36,20,30,25],[36,23,30,28,"AuthProvider"],[36,24,30,29],[37,4,30,31,"children"],[38,2,30,65],[38,3,30,66],[38,8,30,71],[39,4,30,71,"_s"],[39,6,30,71],[40,4,31,2],[40,10,31,8],[40,11,31,9,"user"],[40,15,31,13],[40,17,31,15,"setUser"],[40,24,31,22],[40,25,31,23],[40,28,31,26],[40,32,31,26,"useState"],[40,38,31,34],[40,39,31,34,"useState"],[40,47,31,34],[40,49,31,48],[40,53,31,52],[40,54,31,53],[41,4,32,2],[41,10,32,8],[41,11,32,9,"token"],[41,16,32,14],[41,18,32,16,"setToken"],[41,26,32,24],[41,27,32,25],[41,30,32,28],[41,34,32,28,"useState"],[41,40,32,36],[41,41,32,36,"useState"],[41,49,32,36],[41,51,32,52],[41,55,32,56],[41,56,32,57],[42,4,33,2],[42,10,33,8],[42,11,33,9,"isLoading"],[42,20,33,18],[42,22,33,20,"setIsLoading"],[42,34,33,32],[42,35,33,33],[42,38,33,36],[42,42,33,36,"useState"],[42,48,33,44],[42,49,33,44,"useState"],[42,57,33,44],[42,59,33,45],[42,63,33,49],[42,64,33,50],[43,4,35,2],[43,10,35,8,"isAuthenticated"],[43,25,35,23],[43,28,35,26],[43,29,35,27],[43,30,35,28,"user"],[43,34,35,32],[43,38,35,36],[43,39,35,37],[43,40,35,38,"token"],[43,45,35,43],[45,4,37,2],[46,4,38,2],[46,8,38,2,"useEffect"],[46,14,38,11],[46,15,38,11,"useEffect"],[46,24,38,11],[46,26,38,12],[46,32,38,18],[47,6,39,4,"checkExistingSession"],[47,26,39,24],[47,27,39,25],[47,28,39,26],[48,4,40,2],[48,5,40,3],[48,7,40,5],[48,9,40,7],[48,10,40,8],[49,4,42,2],[49,10,42,8,"checkExistingSession"],[49,30,42,28],[49,33,42,31],[49,39,42,31,"checkExistingSession"],[49,40,42,31],[49,45,42,43],[50,6,43,4],[50,10,43,8],[51,8,44,6,"setIsLoading"],[51,20,44,18],[51,21,44,19],[51,25,44,23],[51,26,44,24],[53,8,46,6],[54,8,47,6],[54,14,47,12,"storedToken"],[54,25,47,23],[54,28,47,26],[54,34,47,32,"AsyncStorage"],[54,46,47,44],[54,47,47,44,"default"],[54,54,47,44],[54,55,47,45,"getItem"],[54,62,47,52],[54,63,47,53],[54,75,47,65],[54,76,47,66],[55,8,48,6],[55,14,48,12,"storedUser"],[55,24,48,22],[55,27,48,25],[55,33,48,31,"AsyncStorage"],[55,45,48,43],[55,46,48,43,"default"],[55,53,48,43],[55,54,48,44,"getItem"],[55,61,48,51],[55,62,48,52],[55,73,48,63],[55,74,48,64],[56,8,50,6,"console"],[56,15,50,13],[56,16,50,14,"log"],[56,19,50,17],[56,20,50,18],[56,51,50,49],[56,53,50,51],[56,54,50,52],[56,55,50,53,"storedToken"],[56,66,50,64],[56,68,50,66],[56,69,50,67],[56,70,50,68,"storedUser"],[56,80,50,78],[56,81,50,79],[57,8,52,6],[57,12,52,10,"storedToken"],[57,23,52,21],[57,27,52,25,"storedUser"],[57,37,52,35],[57,39,52,37],[58,10,53,8],[58,14,53,12],[59,12,54,10],[59,18,54,16,"userData"],[59,26,54,24],[59,29,54,27,"JSON"],[59,33,54,31],[59,34,54,32,"parse"],[59,39,54,37],[59,40,54,38,"storedUser"],[59,50,54,48],[59,51,54,49],[60,12,55,10,"setToken"],[60,20,55,18],[60,21,55,19,"storedToken"],[60,32,55,30],[60,33,55,31],[61,12,56,10,"setUser"],[61,19,56,17],[61,20,56,18,"userData"],[61,28,56,26],[61,29,56,27],[62,12,57,10,"console"],[62,19,57,17],[62,20,57,18,"log"],[62,23,57,21],[62,24,57,22],[62,58,57,56],[62,60,57,58,"userData"],[62,68,57,66],[62,69,57,67,"email"],[62,74,57,72],[62,75,57,73],[64,12,59,10],[65,12,60,10],[65,16,60,14,"sessionValid"],[65,28,60,26],[65,31,60,29],[65,36,60,34],[66,12,61,10],[66,16,61,14,"attempts"],[66,24,61,22],[66,27,61,25],[66,28,61,26],[67,12,62,10],[67,18,62,16,"maxAttempts"],[67,29,62,27],[67,32,62,30],[67,33,62,31],[68,12,64,10],[68,19,64,17],[68,20,64,18,"sessionValid"],[68,32,64,30],[68,36,64,34,"attempts"],[68,44,64,42],[68,47,64,45,"maxAttempts"],[68,58,64,56],[68,60,64,58],[69,14,65,12,"attempts"],[69,22,65,20],[69,24,65,22],[70,14,66,12,"console"],[70,21,66,19],[70,22,66,20,"log"],[70,25,66,23],[70,26,66,24],[70,59,66,57,"attempts"],[70,67,66,65],[70,71,66,69,"maxAttempts"],[70,82,66,80],[70,84,66,82],[70,85,66,83],[71,14,68,12],[71,18,68,16],[72,16,69,14,"sessionValid"],[72,28,69,26],[72,31,69,29],[72,37,69,35,"checkSession"],[72,49,69,47],[72,50,69,48],[72,51,69,49],[73,16,70,14],[73,20,70,18],[73,21,70,19,"sessionValid"],[73,33,70,31],[73,35,70,33],[74,18,71,16,"console"],[74,25,71,23],[74,26,71,24,"log"],[74,29,71,27],[74,30,71,28],[74,68,71,66],[74,70,71,68,"attempts"],[74,78,71,76],[74,79,71,77],[75,18,72,16],[75,22,72,20,"attempts"],[75,30,72,28],[75,33,72,31,"maxAttempts"],[75,44,72,42],[75,46,72,44],[76,20,73,18],[76,26,73,24],[76,30,73,28,"Promise"],[76,37,73,35],[76,38,73,36,"resolve"],[76,45,73,43],[76,49,73,47,"setTimeout"],[76,59,73,57],[76,60,73,58,"resolve"],[76,67,73,65],[76,69,73,67],[76,73,73,71],[76,74,73,72],[76,75,73,73],[76,76,73,74],[76,77,73,75],[77,18,74,16],[78,16,75,14],[78,17,75,15],[78,23,75,21],[79,18,76,16,"console"],[79,25,76,23],[79,26,76,24,"log"],[79,29,76,27],[79,30,76,28],[79,64,76,62],[79,65,76,63],[80,16,77,14],[81,14,78,12],[81,15,78,13],[81,16,78,14],[81,23,78,21,"error"],[81,28,78,26],[81,30,78,28],[82,16,79,14,"console"],[82,23,79,21],[82,24,79,22,"log"],[82,27,79,25],[82,28,79,26],[82,57,79,55],[82,59,79,57,"error"],[82,64,79,62],[82,65,79,63],[83,16,80,14],[83,20,80,18,"attempts"],[83,28,80,26],[83,31,80,29,"maxAttempts"],[83,42,80,40],[83,44,80,42],[84,18,81,16],[84,24,81,22],[84,28,81,26,"Promise"],[84,35,81,33],[84,36,81,34,"resolve"],[84,43,81,41],[84,47,81,45,"setTimeout"],[84,57,81,55],[84,58,81,56,"resolve"],[84,65,81,63],[84,67,81,65],[84,71,81,69],[84,72,81,70],[84,73,81,71],[84,74,81,72],[84,75,81,73],[85,16,82,14],[86,14,83,12],[87,12,84,10],[88,12,86,10],[88,16,86,14],[88,17,86,15,"sessionValid"],[88,29,86,27],[88,31,86,29],[89,14,87,12,"console"],[89,21,87,19],[89,22,87,20,"log"],[89,25,87,23],[89,26,87,24],[89,87,87,85],[89,88,87,86],[90,14,88,12],[90,20,88,18,"logout"],[90,26,88,24],[90,27,88,25],[90,28,88,26],[91,12,89,10],[92,10,90,8],[92,11,90,9],[92,12,90,10],[92,19,90,17,"parseError"],[92,29,90,27],[92,31,90,29],[93,12,91,10,"console"],[93,19,91,17],[93,20,91,18,"error"],[93,25,91,23],[93,26,91,24],[93,59,91,57],[93,61,91,59,"parseError"],[93,71,91,69],[93,72,91,70],[94,12,92,10],[94,18,92,16,"logout"],[94,24,92,22],[94,25,92,23],[94,26,92,24],[95,10,93,8],[96,8,94,6],[96,9,94,7],[96,15,94,13],[97,10,95,8,"console"],[97,17,95,15],[97,18,95,16,"log"],[97,21,95,19],[97,22,95,20],[97,50,95,48],[97,51,95,49],[98,8,96,6],[99,6,97,4],[99,7,97,5],[99,8,97,6],[99,15,97,13,"error"],[99,20,97,18],[99,22,97,20],[100,8,98,6,"console"],[100,15,98,13],[100,16,98,14,"error"],[100,21,98,19],[100,22,98,20],[100,56,98,54],[100,58,98,56,"error"],[100,63,98,61],[100,64,98,62],[101,8,99,6],[101,14,99,12,"logout"],[101,20,99,18],[101,21,99,19],[101,22,99,20],[102,6,100,4],[102,7,100,5],[102,16,100,14],[103,8,101,6,"setIsLoading"],[103,20,101,18],[103,21,101,19],[103,26,101,24],[103,27,101,25],[104,6,102,4],[105,4,103,2],[105,5,103,3],[106,4,105,2],[106,10,105,8,"checkSession"],[106,22,105,20],[106,25,105,23],[106,31,105,23,"checkSession"],[106,32,105,23],[106,37,105,53],[107,6,106,4],[107,10,106,8],[108,8,107,6],[108,14,107,12,"response"],[108,22,107,20],[108,25,107,23],[108,31,107,29,"fetch"],[108,36,107,34],[108,37,107,35],[108,40,107,38,"API_BASE_URL"],[108,52,107,50],[108,77,107,75],[108,79,107,77],[109,10,108,8,"method"],[109,16,108,14],[109,18,108,16],[109,23,108,21],[110,10,109,8,"credentials"],[110,21,109,19],[110,23,109,21],[110,32,109,30],[111,10,110,8,"headers"],[111,17,110,15],[111,19,110,17],[112,12,111,10],[112,26,111,24],[112,28,111,26],[112,46,111,44],[113,12,112,10],[113,16,112,14,"token"],[113,21,112,19],[113,25,112,23],[114,14,112,25],[114,29,112,40],[114,31,112,42],[114,41,112,52,"token"],[114,46,112,57],[115,12,112,60],[115,13,112,61],[116,10,113,8],[117,8,114,6],[117,9,114,7],[117,10,114,8],[118,8,116,6],[118,12,116,10],[118,13,116,11,"response"],[118,21,116,19],[118,22,116,20,"ok"],[118,24,116,22],[118,26,116,24],[119,10,117,8,"console"],[119,17,117,15],[119,18,117,16,"log"],[119,21,117,19],[119,22,117,20],[119,45,117,43],[119,47,117,45,"response"],[119,55,117,53],[119,56,117,54,"status"],[119,62,117,60],[119,63,117,61],[120,10,118,8],[120,17,118,15],[120,22,118,20],[121,8,119,6],[122,8,121,6],[122,14,121,12,"data"],[122,18,121,16],[122,21,121,19],[122,27,121,25,"response"],[122,35,121,33],[122,36,121,34,"json"],[122,40,121,38],[122,41,121,39],[122,42,121,40],[123,8,122,6],[123,14,122,12,"isValid"],[123,21,122,19],[123,24,122,22,"data"],[123,28,122,26],[123,29,122,27,"authenticated"],[123,42,122,40],[123,47,122,45],[123,51,122,49],[124,8,124,6],[124,12,124,10,"isValid"],[124,19,124,17],[124,23,124,21,"data"],[124,27,124,25],[124,28,124,26,"user"],[124,32,124,30],[124,34,124,32],[125,10,125,8],[126,10,126,8,"setUser"],[126,17,126,15],[126,18,126,16,"data"],[126,22,126,20],[126,23,126,21,"user"],[126,27,126,25],[126,28,126,26],[127,8,127,6],[128,8,129,6,"console"],[128,15,129,13],[128,16,129,14,"log"],[128,19,129,17],[128,20,129,18],[128,43,129,41],[128,45,129,43,"isValid"],[128,52,129,50],[128,53,129,51],[129,8,130,6],[129,15,130,13,"isValid"],[129,22,130,20],[130,6,131,4],[130,7,131,5],[130,8,131,6],[130,15,131,13,"error"],[130,20,131,18],[130,22,131,20],[131,8,132,6,"console"],[131,15,132,13],[131,16,132,14,"error"],[131,21,132,19],[131,22,132,20],[131,78,132,76],[131,80,132,78,"error"],[131,85,132,83],[131,86,132,84],[132,8,133,6],[133,8,134,6],[133,15,134,13],[133,16,134,14],[133,17,134,15,"token"],[133,22,134,20],[133,26,134,24],[133,27,134,25],[133,28,134,26,"user"],[133,32,134,30],[134,6,135,4],[135,4,136,2],[135,5,136,3],[136,4,138,2],[136,10,138,8,"login"],[136,15,138,13],[136,18,138,16],[136,24,138,16,"login"],[136,25,138,23,"email"],[136,30,138,36],[136,32,138,38,"password"],[136,40,138,54],[136,45,138,106],[137,6,139,4],[137,10,139,8],[138,8,140,6,"setIsLoading"],[138,20,140,18],[138,21,140,19],[138,25,140,23],[138,26,140,24],[139,8,142,6],[139,14,142,12,"formData"],[139,22,142,20],[139,25,142,23],[139,29,142,27,"URLSearchParams"],[139,44,142,42],[139,45,142,43],[139,46,142,44],[140,8,143,6,"formData"],[140,16,143,14],[140,17,143,15,"append"],[140,23,143,21],[140,24,143,22],[140,34,143,32],[140,36,143,34,"email"],[140,41,143,39],[140,42,143,40],[140,43,143,41],[140,44,143,42],[141,8,144,6,"formData"],[141,16,144,14],[141,17,144,15,"append"],[141,23,144,21],[141,24,144,22],[141,34,144,32],[141,36,144,34,"password"],[141,44,144,42],[141,45,144,43],[142,8,146,6],[142,14,146,12,"response"],[142,22,146,20],[142,25,146,23],[142,31,146,29,"fetch"],[142,36,146,34],[142,37,146,35],[142,40,146,38,"API_BASE_URL"],[142,52,146,50],[142,69,146,67],[142,71,146,69],[143,10,147,8,"method"],[143,16,147,14],[143,18,147,16],[143,24,147,22],[144,10,148,8,"credentials"],[144,21,148,19],[144,23,148,21],[144,32,148,30],[145,10,149,8,"headers"],[145,17,149,15],[145,19,149,17],[146,12,150,10],[146,26,150,24],[146,28,150,26],[147,10,151,8],[147,11,151,9],[148,10,152,8,"body"],[148,14,152,12],[148,16,152,14,"formData"],[148,24,152,22],[148,25,152,23,"toString"],[148,33,152,31],[148,34,152,32],[149,8,153,6],[149,9,153,7],[149,10,153,8],[150,8,155,6],[150,14,155,12,"data"],[150,18,155,16],[150,21,155,19],[150,27,155,25,"response"],[150,35,155,33],[150,36,155,34,"json"],[150,40,155,38],[150,41,155,39],[150,42,155,40],[151,8,157,6],[151,12,157,10],[151,13,157,11,"response"],[151,21,157,19],[151,22,157,20,"ok"],[151,24,157,22],[151,26,157,24],[152,10,158,8],[152,17,158,15],[153,12,158,17,"success"],[153,19,158,24],[153,21,158,26],[153,26,158,31],[154,12,158,33,"error"],[154,17,158,38],[154,19,158,40,"data"],[154,23,158,44],[154,24,158,45,"detail"],[154,30,158,51],[154,34,158,55],[155,10,158,70],[155,11,158,71],[156,8,159,6],[158,8,161,6],[159,8,162,6],[159,14,162,12,"AsyncStorage"],[159,26,162,24],[159,27,162,24,"default"],[159,34,162,24],[159,35,162,25,"setItem"],[159,42,162,32],[159,43,162,33],[159,55,162,45],[159,57,162,47,"data"],[159,61,162,51],[159,62,162,52,"access_token"],[159,74,162,64],[159,75,162,65],[160,8,163,6],[160,14,163,12,"AsyncStorage"],[160,26,163,24],[160,27,163,24,"default"],[160,34,163,24],[160,35,163,25,"setItem"],[160,42,163,32],[160,43,163,33],[160,54,163,44],[160,56,163,46,"JSON"],[160,60,163,50],[160,61,163,51,"stringify"],[160,70,163,60],[160,71,163,61,"data"],[160,75,163,65],[160,76,163,66,"user"],[160,80,163,70],[160,81,163,71],[160,82,163,72],[161,8,165,6,"setToken"],[161,16,165,14],[161,17,165,15,"data"],[161,21,165,19],[161,22,165,20,"access_token"],[161,34,165,32],[161,35,165,33],[162,8,166,6,"setUser"],[162,15,166,13],[162,16,166,14,"data"],[162,20,166,18],[162,21,166,19,"user"],[162,25,166,23],[162,26,166,24],[163,8,168,6],[163,15,168,13],[164,10,168,15,"success"],[164,17,168,22],[164,19,168,24],[165,8,168,29],[165,9,168,30],[166,6,169,4],[166,7,169,5],[166,8,169,6],[166,15,169,13,"error"],[166,20,169,18],[166,22,169,20],[167,8,170,6,"console"],[167,15,170,13],[167,16,170,14,"error"],[167,21,170,19],[167,22,170,20],[167,36,170,34],[167,38,170,36,"error"],[167,43,170,41],[167,44,170,42],[168,8,171,6],[168,15,171,13],[169,10,171,15,"success"],[169,17,171,22],[169,19,171,24],[169,24,171,29],[170,10,171,31,"error"],[170,15,171,36],[170,17,171,38],[171,8,171,63],[171,9,171,64],[172,6,172,4],[172,7,172,5],[172,16,172,14],[173,8,173,6,"setIsLoading"],[173,20,173,18],[173,21,173,19],[173,26,173,24],[173,27,173,25],[174,6,174,4],[175,4,175,2],[175,5,175,3],[176,4,177,2],[176,10,177,8,"register"],[176,18,177,16],[176,21,177,19],[176,27,177,19,"register"],[176,28,177,26,"email"],[176,33,177,39],[176,35,177,41,"password"],[176,43,177,57],[176,45,177,59,"name"],[176,49,177,71],[176,54,177,123],[177,6,178,4],[177,10,178,8],[178,8,179,6,"setIsLoading"],[178,20,179,18],[178,21,179,19],[178,25,179,23],[178,26,179,24],[179,8,181,6],[179,14,181,12,"response"],[179,22,181,20],[179,25,181,23],[179,31,181,29,"fetch"],[179,36,181,34],[179,37,181,35],[179,40,181,38,"API_BASE_URL"],[179,52,181,50],[179,72,181,70],[179,74,181,72],[180,10,182,8,"method"],[180,16,182,14],[180,18,182,16],[180,24,182,22],[181,10,183,8,"credentials"],[181,21,183,19],[181,23,183,21],[181,32,183,30],[182,10,184,8,"headers"],[182,17,184,15],[182,19,184,17],[183,12,185,10],[183,26,185,24],[183,28,185,26],[184,10,186,8],[184,11,186,9],[185,10,187,8,"body"],[185,14,187,12],[185,16,187,14,"JSON"],[185,20,187,18],[185,21,187,19,"stringify"],[185,30,187,28],[185,31,187,29],[186,12,188,10,"email"],[186,17,188,15],[187,12,189,10,"password"],[187,20,189,18],[188,12,190,10,"name"],[189,10,191,8],[189,11,191,9],[190,8,192,6],[190,9,192,7],[190,10,192,8],[191,8,194,6],[191,14,194,12,"data"],[191,18,194,16],[191,21,194,19],[191,27,194,25,"response"],[191,35,194,33],[191,36,194,34,"json"],[191,40,194,38],[191,41,194,39],[191,42,194,40],[192,8,196,6],[192,12,196,10],[192,13,196,11,"response"],[192,21,196,19],[192,22,196,20,"ok"],[192,24,196,22],[192,26,196,24],[193,10,197,8],[193,17,197,15],[194,12,197,17,"success"],[194,19,197,24],[194,21,197,26],[194,26,197,31],[195,12,197,33,"error"],[195,17,197,38],[195,19,197,40,"data"],[195,23,197,44],[195,24,197,45,"detail"],[195,30,197,51],[195,34,197,55],[196,10,197,77],[196,11,197,78],[197,8,198,6],[199,8,200,6],[200,8,201,6],[200,14,201,12,"AsyncStorage"],[200,26,201,24],[200,27,201,24,"default"],[200,34,201,24],[200,35,201,25,"setItem"],[200,42,201,32],[200,43,201,33],[200,55,201,45],[200,57,201,47,"data"],[200,61,201,51],[200,62,201,52,"access_token"],[200,74,201,64],[200,75,201,65],[201,8,202,6],[201,14,202,12,"AsyncStorage"],[201,26,202,24],[201,27,202,24,"default"],[201,34,202,24],[201,35,202,25,"setItem"],[201,42,202,32],[201,43,202,33],[201,54,202,44],[201,56,202,46,"JSON"],[201,60,202,50],[201,61,202,51,"stringify"],[201,70,202,60],[201,71,202,61,"data"],[201,75,202,65],[201,76,202,66,"user"],[201,80,202,70],[201,81,202,71],[201,82,202,72],[202,8,204,6,"setToken"],[202,16,204,14],[202,17,204,15,"data"],[202,21,204,19],[202,22,204,20,"access_token"],[202,34,204,32],[202,35,204,33],[203,8,205,6,"setUser"],[203,15,205,13],[203,16,205,14,"data"],[203,20,205,18],[203,21,205,19,"user"],[203,25,205,23],[203,26,205,24],[204,8,207,6],[204,15,207,13],[205,10,207,15,"success"],[205,17,207,22],[205,19,207,24],[206,8,207,29],[206,9,207,30],[207,6,208,4],[207,7,208,5],[207,8,208,6],[207,15,208,13,"error"],[207,20,208,18],[207,22,208,20],[208,8,209,6,"console"],[208,15,209,13],[208,16,209,14,"error"],[208,21,209,19],[208,22,209,20],[208,43,209,41],[208,45,209,43,"error"],[208,50,209,48],[208,51,209,49],[209,8,210,6],[209,15,210,13],[210,10,210,15,"success"],[210,17,210,22],[210,19,210,24],[210,24,210,29],[211,10,210,31,"error"],[211,15,210,36],[211,17,210,38],[212,8,210,63],[212,9,210,64],[213,6,211,4],[213,7,211,5],[213,16,211,14],[214,8,212,6,"setIsLoading"],[214,20,212,18],[214,21,212,19],[214,26,212,24],[214,27,212,25],[215,6,213,4],[216,4,214,2],[216,5,214,3],[217,4,216,2],[217,10,216,8,"loginWithGoogle"],[217,25,216,23],[217,28,216,26],[217,34,216,26,"loginWithGoogle"],[217,35,216,26],[217,40,216,85],[218,6,217,4],[218,10,217,8],[219,8,218,6],[220,8,219,6],[221,8,220,6],[221,14,220,12,"redirectUrl"],[221,25,220,23],[221,28,220,26,"encodeURIComponent"],[221,46,220,44],[221,47,220,45,"window"],[221,53,220,51],[221,54,220,52,"location"],[221,62,220,60],[221,63,220,61,"href"],[221,67,220,65],[221,68,220,66],[222,8,221,6],[222,14,221,12,"googleAuthUrl"],[222,27,221,25],[222,30,221,28],[222,74,221,72,"redirectUrl"],[222,85,221,83],[222,87,221,85],[224,8,223,6],[225,8,224,6,"window"],[225,14,224,12],[225,15,224,13,"open"],[225,19,224,17],[225,20,224,18,"googleAuthUrl"],[225,33,224,31],[225,35,224,33],[225,42,224,40],[225,43,224,41],[226,8,226,6],[226,15,226,13],[227,10,226,15,"success"],[227,17,226,22],[227,19,226,24],[228,8,226,29],[228,9,226,30],[229,6,227,4],[229,7,227,5],[229,8,227,6],[229,15,227,13,"error"],[229,20,227,18],[229,22,227,20],[230,8,228,6,"console"],[230,15,228,13],[230,16,228,14,"error"],[230,21,228,19],[230,22,228,20],[230,43,228,41],[230,45,228,43,"error"],[230,50,228,48],[230,51,228,49],[231,8,229,6],[231,15,229,13],[232,10,229,15,"success"],[232,17,229,22],[232,19,229,24],[232,24,229,29],[233,10,229,31,"error"],[233,15,229,36],[233,17,229,38],[234,8,229,60],[234,9,229,61],[235,6,230,4],[236,4,231,2],[236,5,231,3],[237,4,233,2],[237,10,233,8,"logout"],[237,16,233,14],[237,19,233,17],[237,25,233,17,"logout"],[237,26,233,17],[237,31,233,44],[238,6,234,4],[238,10,234,8],[239,8,235,6],[240,8,236,6],[240,12,236,10,"token"],[240,17,236,15],[240,19,236,17],[241,10,237,8],[241,16,237,14,"fetch"],[241,21,237,19],[241,22,237,20],[241,25,237,23,"API_BASE_URL"],[241,37,237,35],[241,55,237,53],[241,57,237,55],[242,12,238,10,"method"],[242,18,238,16],[242,20,238,18],[242,26,238,24],[243,12,239,10,"credentials"],[243,23,239,21],[243,25,239,23],[243,34,239,32],[244,12,240,10,"headers"],[244,19,240,17],[244,21,240,19],[245,14,241,12],[245,29,241,27],[245,31,241,29],[245,41,241,39,"token"],[245,46,241,44],[245,48,241,46],[246,14,242,12],[246,28,242,26],[246,30,242,28],[247,12,243,10],[248,10,244,8],[248,11,244,9],[248,12,244,10],[249,8,245,6],[250,6,246,4],[250,7,246,5],[250,8,246,6],[250,15,246,13,"error"],[250,20,246,18],[250,22,246,20],[251,8,247,6,"console"],[251,15,247,13],[251,16,247,14,"error"],[251,21,247,19],[251,22,247,20],[251,37,247,35],[251,39,247,37,"error"],[251,44,247,42],[251,45,247,43],[252,6,248,4],[252,7,248,5],[252,16,248,14],[253,8,249,6],[254,8,250,6],[254,14,250,12,"AsyncStorage"],[254,26,250,24],[254,27,250,24,"default"],[254,34,250,24],[254,35,250,25,"multiRemove"],[254,46,250,36],[254,47,250,37],[254,48,250,38],[254,60,250,50],[254,62,250,52],[254,73,250,63],[254,74,250,64],[254,75,250,65],[255,8,251,6,"setToken"],[255,16,251,14],[255,17,251,15],[255,21,251,19],[255,22,251,20],[256,8,252,6,"setUser"],[256,15,252,13],[256,16,252,14],[256,20,252,18],[256,21,252,19],[257,6,253,4],[258,4,254,2],[258,5,254,3],[259,4,256,2],[259,24,257,4],[259,28,257,4,"_reactJsxDevRuntime"],[259,47,257,4],[259,48,257,4,"jsxDEV"],[259,54,257,4],[259,56,257,5,"AuthContext"],[259,67,257,16],[259,68,257,17,"Provider"],[259,76,257,25],[260,6,258,6,"value"],[260,11,258,11],[260,13,258,13],[261,8,259,8,"user"],[261,12,259,12],[262,8,260,8,"token"],[262,13,260,13],[263,8,261,8,"isLoading"],[263,17,261,17],[264,8,262,8,"isAuthenticated"],[264,23,262,23],[265,8,263,8,"login"],[265,13,263,13],[266,8,264,8,"register"],[266,16,264,16],[267,8,265,8,"loginWithGoogle"],[267,23,265,23],[268,8,266,8,"logout"],[268,14,266,14],[269,8,267,8,"checkSession"],[270,6,268,6],[270,7,268,8],[271,6,268,8,"children"],[271,14,268,8],[271,16,270,7,"children"],[272,4,270,15],[273,6,270,15,"fileName"],[273,14,270,15],[273,16,270,15,"_jsxFileName"],[273,28,270,15],[274,6,270,15,"lineNumber"],[274,16,270,15],[275,6,270,15,"columnNumber"],[275,18,270,15],[276,4,270,15],[276,11,271,26],[276,12,271,27],[277,2,273,0],[277,3,273,1],[278,2,273,2,"_s"],[278,4,273,2],[278,5,30,13,"AuthProvider"],[278,17,30,25],[279,2,30,25,"_c"],[279,4,30,25],[279,7,30,13,"AuthProvider"],[279,19,30,25],[280,2,275,7],[280,8,275,13,"useAuth"],[280,15,275,20],[280,18,275,23,"useAuth"],[280,19,275,23],[280,24,275,46],[281,4,275,46,"_s2"],[281,7,275,46],[282,4,276,2],[282,10,276,8,"context"],[282,17,276,15],[282,20,276,18],[282,24,276,18,"useContext"],[282,30,276,28],[282,31,276,28,"useContext"],[282,41,276,28],[282,43,276,29,"AuthContext"],[282,54,276,40],[282,55,276,41],[283,4,277,2],[283,8,277,6,"context"],[283,15,277,13],[283,20,277,18,"undefined"],[283,29,277,27],[283,31,277,29],[284,6,278,4],[284,12,278,10],[284,16,278,14,"Error"],[284,21,278,19],[284,22,278,20],[284,67,278,65],[284,68,278,66],[285,4,279,2],[286,4,280,2],[286,11,280,9,"context"],[286,18,280,16],[287,2,281,0],[287,3,281,1],[288,2,281,2,"_s2"],[288,5,281,2],[288,6,275,13,"useAuth"],[288,13,275,20],[289,2,275,20],[289,6,275,20,"_c"],[289,8,275,20],[290,2,275,20,"$RefreshReg$"],[290,14,275,20],[290,15,275,20,"_c"],[290,17,275,20],[291,0,275,20],[291,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCC+B,oCD;kCCQ,oCD;GFsB;uBIE;GJ+B;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}