{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Session check - Token exists:', !!storedToken, 'User exists:', !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            console.log('üë§ Restoring user session:', userData.email, 'ID:', userData.id);\n            setToken(storedToken);\n            setUser(userData);\n\n            // Simple session validation\n            try {\n              const isValid = await checkSession();\n              if (isValid) {\n                console.log('‚úÖ Session validation successful - user auto-logged in');\n              } else {\n                console.log('‚ùå Session validation failed - clearing stored session');\n                await logout();\n              }\n            } catch (error) {\n              console.log('‚ö†Ô∏è Session validation error - keeping session:', error);\n              // Keep session on network errors\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            // Clear invalid stored data\n            await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n            setToken(null);\n            setUser(null);\n          }\n        } else {\n          console.log('üîç No stored session found - showing auth screen');\n        }\n\n        // Minimal loading time to prevent stuck loading\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 1000; // Reduced to 1 second\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n        console.log('üèÅ Auth loading completed, setting isLoading to false');\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        // Don't logout on errors, just continue\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"mX4/AXRUN66G8j/NKXHYWKblzjI=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":298,"map":[[15,2,30,0,"Object"],[15,8,30,0],[15,9,30,0,"defineProperty"],[15,23,30,0],[15,24,30,0,"exports"],[15,31,30,0],[16,4,30,0,"enumerable"],[16,14,30,0],[17,4,30,0,"get"],[17,7,30,0],[17,18,30,0,"get"],[17,19,30,0],[18,6,30,0],[18,13,30,0,"AuthProvider"],[18,25,30,0],[19,4,30,0],[20,2,30,0],[21,2,287,0,"Object"],[21,8,287,0],[21,9,287,0,"defineProperty"],[21,23,287,0],[21,24,287,0,"exports"],[21,31,287,0],[22,4,287,0,"enumerable"],[22,14,287,0],[23,4,287,0,"get"],[23,7,287,0],[23,18,287,0,"get"],[23,19,287,0],[24,6,287,0],[24,13,287,0,"useAuth"],[24,20,287,0],[25,4,287,0],[26,2,287,0],[27,2,293,2],[27,6,293,2,"_expoVirtualEnv"],[27,21,293,2],[27,24,293,2,"require"],[27,31,293,2],[27,32,293,2,"_dependencyMap"],[27,46,293,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,3,0],[31,6,3,0,"_expoConstants"],[31,20,3,0],[31,23,3,0,"require"],[31,30,3,0],[31,31,3,0,"_dependencyMap"],[31,45,3,0],[32,2,3,0],[32,6,3,0,"Constants"],[32,15,3,0],[32,18,3,0,"_interopDefault"],[32,33,3,0],[32,34,3,0,"_expoConstants"],[32,48,3,0],[33,2,3,39],[33,6,3,39,"_reactJsxDevRuntime"],[33,25,3,39],[33,28,3,39,"require"],[33,35,3,39],[33,36,3,39,"_dependencyMap"],[33,50,3,39],[34,2,26,0],[34,8,26,6,"AuthContext"],[34,19,26,17],[34,35,26,20],[34,39,26,20,"createContext"],[34,45,26,33],[34,46,26,33,"createContext"],[34,59,26,33],[34,61,26,63,"undefined"],[34,70,26,72],[34,71,26,73],[35,2,28,0],[35,8,28,6,"API_BASE_URL"],[35,20,28,18],[35,23,28,21,"Constants"],[35,32,28,30],[35,33,28,30,"default"],[35,40,28,30],[35,41,28,31,"expoConfig"],[35,51,28,41],[35,53,28,43,"extra"],[35,58,28,48],[35,60,28,50,"backendUrl"],[35,70,28,60],[35,74,28,60,"_expoVirtualEnv"],[35,89,28,60],[35,90,28,60,"env"],[35,93,28,60],[35,94,28,60,"EXPO_PUBLIC_BACKEND_URL"],[35,117,28,99],[35,121,28,103],[35,144,28,126],[36,2,30,7],[36,8,30,13,"AuthProvider"],[36,20,30,25],[36,23,30,28,"AuthProvider"],[36,24,30,29],[37,4,30,31,"children"],[38,2,30,65],[38,3,30,66],[38,8,30,71],[39,4,30,71,"_s"],[39,6,30,71],[40,4,31,2],[40,10,31,8],[40,11,31,9,"user"],[40,15,31,13],[40,17,31,15,"setUser"],[40,24,31,22],[40,25,31,23],[40,28,31,26],[40,32,31,26,"useState"],[40,38,31,34],[40,39,31,34,"useState"],[40,47,31,34],[40,49,31,48],[40,53,31,52],[40,54,31,53],[41,4,32,2],[41,10,32,8],[41,11,32,9,"token"],[41,16,32,14],[41,18,32,16,"setToken"],[41,26,32,24],[41,27,32,25],[41,30,32,28],[41,34,32,28,"useState"],[41,40,32,36],[41,41,32,36,"useState"],[41,49,32,36],[41,51,32,52],[41,55,32,56],[41,56,32,57],[42,4,33,2],[42,10,33,8],[42,11,33,9,"isLoading"],[42,20,33,18],[42,22,33,20,"setIsLoading"],[42,34,33,32],[42,35,33,33],[42,38,33,36],[42,42,33,36,"useState"],[42,48,33,44],[42,49,33,44,"useState"],[42,57,33,44],[42,59,33,45],[42,63,33,49],[42,64,33,50],[43,4,35,2],[43,10,35,8,"isAuthenticated"],[43,25,35,23],[43,28,35,26],[43,29,35,27],[43,30,35,28,"user"],[43,34,35,32],[43,38,35,36],[43,39,35,37],[43,40,35,38,"token"],[43,45,35,43],[45,4,37,2],[46,4,38,2],[46,8,38,2,"useEffect"],[46,14,38,11],[46,15,38,11,"useEffect"],[46,24,38,11],[46,26,38,12],[46,32,38,18],[47,6,39,4,"checkExistingSession"],[47,26,39,24],[47,27,39,25],[47,28,39,26],[48,4,40,2],[48,5,40,3],[48,7,40,5],[48,9,40,7],[48,10,40,8],[49,4,42,2],[49,10,42,8,"checkExistingSession"],[49,30,42,28],[49,33,42,31],[49,39,42,31,"checkExistingSession"],[49,40,42,31],[49,45,42,43],[50,6,43,4],[50,10,43,8],[51,8,44,6,"setIsLoading"],[51,20,44,18],[51,21,44,19],[51,25,44,23],[51,26,44,24],[52,8,45,6],[52,14,45,12,"startTime"],[52,23,45,21],[52,26,45,24,"Date"],[52,30,45,28],[52,31,45,29,"now"],[52,34,45,32],[52,35,45,33],[52,36,45,34],[52,37,45,35],[52,38,45,36],[54,8,47,6],[55,8,48,6],[55,14,48,12,"storedToken"],[55,25,48,23],[55,28,48,26],[55,34,48,32,"AsyncStorage"],[55,46,48,44],[55,47,48,44,"default"],[55,54,48,44],[55,55,48,45,"getItem"],[55,62,48,52],[55,63,48,53],[55,75,48,65],[55,76,48,66],[56,8,49,6],[56,14,49,12,"storedUser"],[56,24,49,22],[56,27,49,25],[56,33,49,31,"AsyncStorage"],[56,45,49,43],[56,46,49,43,"default"],[56,53,49,43],[56,54,49,44,"getItem"],[56,61,49,51],[56,62,49,52],[56,73,49,63],[56,74,49,64],[57,8,51,6,"console"],[57,15,51,13],[57,16,51,14,"log"],[57,19,51,17],[57,20,51,18],[57,54,51,52],[57,56,51,54],[57,57,51,55],[57,58,51,56,"storedToken"],[57,69,51,67],[57,71,51,69],[57,85,51,83],[57,87,51,85],[57,88,51,86],[57,89,51,87,"storedUser"],[57,99,51,97],[57,100,51,98],[58,8,53,6],[58,12,53,10,"storedToken"],[58,23,53,21],[58,27,53,25,"storedUser"],[58,37,53,35],[58,39,53,37],[59,10,54,8],[59,14,54,12],[60,12,55,10],[60,18,55,16,"userData"],[60,26,55,24],[60,29,55,27,"JSON"],[60,33,55,31],[60,34,55,32,"parse"],[60,39,55,37],[60,40,55,38,"storedUser"],[60,50,55,48],[60,51,55,49],[61,12,56,10,"console"],[61,19,56,17],[61,20,56,18,"log"],[61,23,56,21],[61,24,56,22],[61,52,56,50],[61,54,56,52,"userData"],[61,62,56,60],[61,63,56,61,"email"],[61,68,56,66],[61,70,56,68],[61,75,56,73],[61,77,56,75,"userData"],[61,85,56,83],[61,86,56,84,"id"],[61,88,56,86],[61,89,56,87],[62,12,58,10,"setToken"],[62,20,58,18],[62,21,58,19,"storedToken"],[62,32,58,30],[62,33,58,31],[63,12,59,10,"setUser"],[63,19,59,17],[63,20,59,18,"userData"],[63,28,59,26],[63,29,59,27],[65,12,61,10],[66,12,62,10],[66,16,62,14],[67,14,63,12],[67,20,63,18,"isValid"],[67,27,63,25],[67,30,63,28],[67,36,63,34,"checkSession"],[67,48,63,46],[67,49,63,47],[67,50,63,48],[68,14,64,12],[68,18,64,16,"isValid"],[68,25,64,23],[68,27,64,25],[69,16,65,14,"console"],[69,23,65,21],[69,24,65,22,"log"],[69,27,65,25],[69,28,65,26],[69,83,65,81],[69,84,65,82],[70,14,66,12],[70,15,66,13],[70,21,66,19],[71,16,67,14,"console"],[71,23,67,21],[71,24,67,22,"log"],[71,27,67,25],[71,28,67,26],[71,83,67,81],[71,84,67,82],[72,16,68,14],[72,22,68,20,"logout"],[72,28,68,26],[72,29,68,27],[72,30,68,28],[73,14,69,12],[74,12,70,10],[74,13,70,11],[74,14,70,12],[74,21,70,19,"error"],[74,26,70,24],[74,28,70,26],[75,14,71,12,"console"],[75,21,71,19],[75,22,71,20,"log"],[75,25,71,23],[75,26,71,24],[75,74,71,72],[75,76,71,74,"error"],[75,81,71,79],[75,82,71,80],[76,14,72,12],[77,12,73,10],[78,10,75,8],[78,11,75,9],[78,12,75,10],[78,19,75,17,"parseError"],[78,29,75,27],[78,31,75,29],[79,12,76,10,"console"],[79,19,76,17],[79,20,76,18,"error"],[79,25,76,23],[79,26,76,24],[79,59,76,57],[79,61,76,59,"parseError"],[79,71,76,69],[79,72,76,70],[80,12,77,10],[81,12,78,10],[81,18,78,16,"AsyncStorage"],[81,30,78,28],[81,31,78,28,"default"],[81,38,78,28],[81,39,78,29,"multiRemove"],[81,50,78,40],[81,51,78,41],[81,52,78,42],[81,64,78,54],[81,66,78,56],[81,77,78,67],[81,78,78,68],[81,79,78,69],[82,12,79,10,"setToken"],[82,20,79,18],[82,21,79,19],[82,25,79,23],[82,26,79,24],[83,12,80,10,"setUser"],[83,19,80,17],[83,20,80,18],[83,24,80,22],[83,25,80,23],[84,10,81,8],[85,8,82,6],[85,9,82,7],[85,15,82,13],[86,10,83,8,"console"],[86,17,83,15],[86,18,83,16,"log"],[86,21,83,19],[86,22,83,20],[86,72,83,70],[86,73,83,71],[87,8,84,6],[89,8,86,6],[90,8,87,6],[90,14,87,12,"elapsedTime"],[90,25,87,23],[90,28,87,26,"Date"],[90,32,87,30],[90,33,87,31,"now"],[90,36,87,34],[90,37,87,35],[90,38,87,36],[90,41,87,39,"startTime"],[90,50,87,48],[91,8,88,6],[91,14,88,12,"minLoadingTime"],[91,28,88,26],[91,31,88,29],[91,35,88,33],[91,36,88,34],[91,37,88,35],[92,8,89,6],[92,12,89,10,"elapsedTime"],[92,23,89,21],[92,26,89,24,"minLoadingTime"],[92,40,89,38],[92,42,89,40],[93,10,90,8],[93,16,90,14,"remainingTime"],[93,29,90,27],[93,32,90,30,"minLoadingTime"],[93,46,90,44],[93,49,90,47,"elapsedTime"],[93,60,90,58],[94,10,91,8,"console"],[94,17,91,15],[94,18,91,16,"log"],[94,21,91,19],[94,22,91,20],[94,57,91,55,"remainingTime"],[94,70,91,68],[94,74,91,72],[94,75,91,73],[95,10,92,8],[95,16,92,14],[95,20,92,18,"Promise"],[95,27,92,25],[95,28,92,26,"resolve"],[95,35,92,33],[95,39,92,37,"setTimeout"],[95,49,92,47],[95,50,92,48,"resolve"],[95,57,92,55],[95,59,92,57,"remainingTime"],[95,72,92,70],[95,73,92,71],[95,74,92,72],[96,8,93,6],[97,8,95,6,"console"],[97,15,95,13],[97,16,95,14,"log"],[97,19,95,17],[97,20,95,18],[97,75,95,73],[97,76,95,74],[98,6,96,4],[98,7,96,5],[98,8,96,6],[98,15,96,13,"error"],[98,20,96,18],[98,22,96,20],[99,8,97,6,"console"],[99,15,97,13],[99,16,97,14,"error"],[99,21,97,19],[99,22,97,20],[99,56,97,54],[99,58,97,56,"error"],[99,63,97,61],[99,64,97,62],[100,8,98,6],[101,6,99,4],[101,7,99,5],[101,16,99,14],[102,8,100,6,"setIsLoading"],[102,20,100,18],[102,21,100,19],[102,26,100,24],[102,27,100,25],[103,6,101,4],[104,4,102,2],[104,5,102,3],[105,4,104,2],[105,10,104,8,"checkSession"],[105,22,104,20],[105,25,104,23],[105,31,104,23,"checkSession"],[105,32,104,23],[105,37,104,53],[106,6,105,4],[106,10,105,8],[107,8,106,6],[108,8,107,6],[108,12,107,10],[108,13,107,11,"token"],[108,18,107,16],[108,22,107,20],[108,23,107,21,"user"],[108,27,107,25],[108,29,107,27],[109,10,108,8,"console"],[109,17,108,15],[109,18,108,16,"log"],[109,21,108,19],[109,22,108,20],[109,64,108,62],[109,65,108,63],[110,10,109,8],[110,17,109,15],[110,22,109,20],[111,8,110,6],[112,8,112,6],[112,14,112,12,"response"],[112,22,112,20],[112,25,112,23],[112,31,112,29,"fetch"],[112,36,112,34],[112,37,112,35],[112,40,112,38,"API_BASE_URL"],[112,52,112,50],[112,77,112,75],[112,79,112,77],[113,10,113,8,"method"],[113,16,113,14],[113,18,113,16],[113,23,113,21],[114,10,114,8,"credentials"],[114,21,114,19],[114,23,114,21],[114,32,114,30],[115,10,115,8,"headers"],[115,17,115,15],[115,19,115,17],[116,12,116,10],[116,26,116,24],[116,28,116,26],[116,46,116,44],[117,12,117,10],[117,27,117,25],[117,29,117,27],[117,39,117,37,"token"],[117,44,117,42],[118,10,118,8],[119,8,119,6],[119,9,119,7],[119,10,119,8],[120,8,121,6],[120,12,121,10],[120,13,121,11,"response"],[120,21,121,19],[120,22,121,20,"ok"],[120,24,121,22],[120,26,121,24],[121,10,122,8,"console"],[121,17,122,15],[121,18,122,16,"log"],[121,21,122,19],[121,22,122,20],[121,45,122,43],[121,47,122,45,"response"],[121,55,122,53],[121,56,122,54,"status"],[121,62,122,60],[121,63,122,61],[122,10,123,8],[122,17,123,15],[122,22,123,20],[123,8,124,6],[124,8,126,6],[124,14,126,12,"data"],[124,18,126,16],[124,21,126,19],[124,27,126,25,"response"],[124,35,126,33],[124,36,126,34,"json"],[124,40,126,38],[124,41,126,39],[124,42,126,40],[125,8,127,6],[125,14,127,12,"isValid"],[125,21,127,19],[125,24,127,22,"data"],[125,28,127,26],[125,29,127,27,"authenticated"],[125,42,127,40],[125,47,127,45],[125,51,127,49],[126,8,129,6],[126,12,129,10,"isValid"],[126,19,129,17],[126,23,129,21,"data"],[126,27,129,25],[126,28,129,26,"user"],[126,32,129,30],[126,34,129,32],[127,10,130,8],[128,10,131,8,"setUser"],[128,17,131,15],[128,18,131,16,"data"],[128,22,131,20],[128,23,131,21,"user"],[128,27,131,25],[128,28,131,26],[129,10,132,8,"console"],[129,17,132,15],[129,18,132,16,"log"],[129,21,132,19],[129,22,132,20],[129,66,132,64],[129,68,132,66,"data"],[129,72,132,70],[129,73,132,71,"user"],[129,77,132,75],[129,78,132,76,"email"],[129,83,132,81],[129,84,132,82],[130,8,133,6],[130,9,133,7],[130,15,133,13],[131,10,134,8,"console"],[131,17,134,15],[131,18,134,16,"log"],[131,21,134,19],[131,22,134,20],[131,57,134,55],[131,59,134,57,"data"],[131,63,134,61],[131,64,134,62],[132,8,135,6],[133,8,137,6],[133,15,137,13,"isValid"],[133,22,137,20],[134,6,138,4],[134,7,138,5],[134,8,138,6],[134,15,138,13,"error"],[134,20,138,18],[134,22,138,20],[135,8,139,6,"console"],[135,15,139,13],[135,16,139,14,"error"],[135,21,139,19],[135,22,139,20],[135,78,139,76],[135,80,139,78,"error"],[135,85,139,83],[135,86,139,84],[136,8,140,6],[137,8,141,6],[138,8,142,6],[138,15,142,13],[138,19,142,17],[138,20,142,18],[138,21,142,19],[139,6,143,4],[140,4,144,2],[140,5,144,3],[141,4,146,2],[141,10,146,8,"login"],[141,15,146,13],[141,18,146,16],[141,24,146,16,"login"],[141,25,146,23,"email"],[141,30,146,36],[141,32,146,38,"password"],[141,40,146,54],[141,45,146,106],[142,6,147,4],[142,10,147,8],[143,8,148,6,"setIsLoading"],[143,20,148,18],[143,21,148,19],[143,25,148,23],[143,26,148,24],[144,8,150,6],[144,14,150,12,"formData"],[144,22,150,20],[144,25,150,23],[144,29,150,27,"URLSearchParams"],[144,44,150,42],[144,45,150,43],[144,46,150,44],[145,8,151,6,"formData"],[145,16,151,14],[145,17,151,15,"append"],[145,23,151,21],[145,24,151,22],[145,34,151,32],[145,36,151,34,"email"],[145,41,151,39],[145,42,151,40],[145,43,151,41],[145,44,151,42],[146,8,152,6,"formData"],[146,16,152,14],[146,17,152,15,"append"],[146,23,152,21],[146,24,152,22],[146,34,152,32],[146,36,152,34,"password"],[146,44,152,42],[146,45,152,43],[147,8,154,6],[147,14,154,12,"response"],[147,22,154,20],[147,25,154,23],[147,31,154,29,"fetch"],[147,36,154,34],[147,37,154,35],[147,40,154,38,"API_BASE_URL"],[147,52,154,50],[147,69,154,67],[147,71,154,69],[148,10,155,8,"method"],[148,16,155,14],[148,18,155,16],[148,24,155,22],[149,10,156,8,"credentials"],[149,21,156,19],[149,23,156,21],[149,32,156,30],[150,10,157,8,"headers"],[150,17,157,15],[150,19,157,17],[151,12,158,10],[151,26,158,24],[151,28,158,26],[152,10,159,8],[152,11,159,9],[153,10,160,8,"body"],[153,14,160,12],[153,16,160,14,"formData"],[153,24,160,22],[153,25,160,23,"toString"],[153,33,160,31],[153,34,160,32],[154,8,161,6],[154,9,161,7],[154,10,161,8],[155,8,163,6],[155,14,163,12,"data"],[155,18,163,16],[155,21,163,19],[155,27,163,25,"response"],[155,35,163,33],[155,36,163,34,"json"],[155,40,163,38],[155,41,163,39],[155,42,163,40],[156,8,165,6],[156,12,165,10],[156,13,165,11,"response"],[156,21,165,19],[156,22,165,20,"ok"],[156,24,165,22],[156,26,165,24],[157,10,166,8],[157,17,166,15],[158,12,166,17,"success"],[158,19,166,24],[158,21,166,26],[158,26,166,31],[159,12,166,33,"error"],[159,17,166,38],[159,19,166,40,"data"],[159,23,166,44],[159,24,166,45,"detail"],[159,30,166,51],[159,34,166,55],[160,10,166,70],[160,11,166,71],[161,8,167,6],[163,8,169,6],[164,8,170,6],[164,14,170,12,"AsyncStorage"],[164,26,170,24],[164,27,170,24,"default"],[164,34,170,24],[164,35,170,25,"setItem"],[164,42,170,32],[164,43,170,33],[164,55,170,45],[164,57,170,47,"data"],[164,61,170,51],[164,62,170,52,"access_token"],[164,74,170,64],[164,75,170,65],[165,8,171,6],[165,14,171,12,"AsyncStorage"],[165,26,171,24],[165,27,171,24,"default"],[165,34,171,24],[165,35,171,25,"setItem"],[165,42,171,32],[165,43,171,33],[165,54,171,44],[165,56,171,46,"JSON"],[165,60,171,50],[165,61,171,51,"stringify"],[165,70,171,60],[165,71,171,61,"data"],[165,75,171,65],[165,76,171,66,"user"],[165,80,171,70],[165,81,171,71],[165,82,171,72],[166,8,173,6,"setToken"],[166,16,173,14],[166,17,173,15,"data"],[166,21,173,19],[166,22,173,20,"access_token"],[166,34,173,32],[166,35,173,33],[167,8,174,6,"setUser"],[167,15,174,13],[167,16,174,14,"data"],[167,20,174,18],[167,21,174,19,"user"],[167,25,174,23],[167,26,174,24],[168,8,176,6,"console"],[168,15,176,13],[168,16,176,14,"log"],[168,19,176,17],[168,20,176,18],[168,51,176,49],[168,53,176,51,"data"],[168,57,176,55],[168,58,176,56,"user"],[168,62,176,60],[168,63,176,61,"id"],[168,65,176,63],[168,67,176,65],[168,81,176,79],[168,82,176,80],[169,8,178,6],[169,15,178,13],[170,10,178,15,"success"],[170,17,178,22],[170,19,178,24],[171,8,178,29],[171,9,178,30],[172,6,179,4],[172,7,179,5],[172,8,179,6],[172,15,179,13,"error"],[172,20,179,18],[172,22,179,20],[173,8,180,6,"console"],[173,15,180,13],[173,16,180,14,"error"],[173,21,180,19],[173,22,180,20],[173,36,180,34],[173,38,180,36,"error"],[173,43,180,41],[173,44,180,42],[174,8,181,6],[174,15,181,13],[175,10,181,15,"success"],[175,17,181,22],[175,19,181,24],[175,24,181,29],[176,10,181,31,"error"],[176,15,181,36],[176,17,181,38],[177,8,181,63],[177,9,181,64],[178,6,182,4],[178,7,182,5],[178,16,182,14],[179,8,183,6,"setIsLoading"],[179,20,183,18],[179,21,183,19],[179,26,183,24],[179,27,183,25],[180,6,184,4],[181,4,185,2],[181,5,185,3],[182,4,187,2],[182,10,187,8,"register"],[182,18,187,16],[182,21,187,19],[182,27,187,19,"register"],[182,28,187,26,"email"],[182,33,187,39],[182,35,187,41,"password"],[182,43,187,57],[182,45,187,59,"name"],[182,49,187,71],[182,54,187,123],[183,6,188,4],[183,10,188,8],[184,8,189,6,"setIsLoading"],[184,20,189,18],[184,21,189,19],[184,25,189,23],[184,26,189,24],[185,8,191,6],[185,14,191,12,"response"],[185,22,191,20],[185,25,191,23],[185,31,191,29,"fetch"],[185,36,191,34],[185,37,191,35],[185,40,191,38,"API_BASE_URL"],[185,52,191,50],[185,72,191,70],[185,74,191,72],[186,10,192,8,"method"],[186,16,192,14],[186,18,192,16],[186,24,192,22],[187,10,193,8,"credentials"],[187,21,193,19],[187,23,193,21],[187,32,193,30],[188,10,194,8,"headers"],[188,17,194,15],[188,19,194,17],[189,12,195,10],[189,26,195,24],[189,28,195,26],[190,10,196,8],[190,11,196,9],[191,10,197,8,"body"],[191,14,197,12],[191,16,197,14,"JSON"],[191,20,197,18],[191,21,197,19,"stringify"],[191,30,197,28],[191,31,197,29],[192,12,198,10,"email"],[192,17,198,15],[193,12,199,10,"password"],[193,20,199,18],[194,12,200,10,"name"],[195,10,201,8],[195,11,201,9],[196,8,202,6],[196,9,202,7],[196,10,202,8],[197,8,204,6],[197,14,204,12,"data"],[197,18,204,16],[197,21,204,19],[197,27,204,25,"response"],[197,35,204,33],[197,36,204,34,"json"],[197,40,204,38],[197,41,204,39],[197,42,204,40],[198,8,206,6],[198,12,206,10],[198,13,206,11,"response"],[198,21,206,19],[198,22,206,20,"ok"],[198,24,206,22],[198,26,206,24],[199,10,207,8],[199,17,207,15],[200,12,207,17,"success"],[200,19,207,24],[200,21,207,26],[200,26,207,31],[201,12,207,33,"error"],[201,17,207,38],[201,19,207,40,"data"],[201,23,207,44],[201,24,207,45,"detail"],[201,30,207,51],[201,34,207,55],[202,10,207,77],[202,11,207,78],[203,8,208,6],[205,8,210,6],[206,8,211,6],[206,14,211,12,"AsyncStorage"],[206,26,211,24],[206,27,211,24,"default"],[206,34,211,24],[206,35,211,25,"setItem"],[206,42,211,32],[206,43,211,33],[206,55,211,45],[206,57,211,47,"data"],[206,61,211,51],[206,62,211,52,"access_token"],[206,74,211,64],[206,75,211,65],[207,8,212,6],[207,14,212,12,"AsyncStorage"],[207,26,212,24],[207,27,212,24,"default"],[207,34,212,24],[207,35,212,25,"setItem"],[207,42,212,32],[207,43,212,33],[207,54,212,44],[207,56,212,46,"JSON"],[207,60,212,50],[207,61,212,51,"stringify"],[207,70,212,60],[207,71,212,61,"data"],[207,75,212,65],[207,76,212,66,"user"],[207,80,212,70],[207,81,212,71],[207,82,212,72],[208,8,214,6,"setToken"],[208,16,214,14],[208,17,214,15,"data"],[208,21,214,19],[208,22,214,20,"access_token"],[208,34,214,32],[208,35,214,33],[209,8,215,6,"setUser"],[209,15,215,13],[209,16,215,14,"data"],[209,20,215,18],[209,21,215,19,"user"],[209,25,215,23],[209,26,215,24],[210,8,217,6,"console"],[210,15,217,13],[210,16,217,14,"log"],[210,19,217,17],[210,20,217,18],[210,58,217,56],[210,60,217,58,"data"],[210,64,217,62],[210,65,217,63,"user"],[210,69,217,67],[210,70,217,68,"id"],[210,72,217,70],[210,74,217,72],[210,88,217,86],[210,89,217,87],[211,8,219,6],[211,15,219,13],[212,10,219,15,"success"],[212,17,219,22],[212,19,219,24],[213,8,219,29],[213,9,219,30],[214,6,220,4],[214,7,220,5],[214,8,220,6],[214,15,220,13,"error"],[214,20,220,18],[214,22,220,20],[215,8,221,6,"console"],[215,15,221,13],[215,16,221,14,"error"],[215,21,221,19],[215,22,221,20],[215,43,221,41],[215,45,221,43,"error"],[215,50,221,48],[215,51,221,49],[216,8,222,6],[216,15,222,13],[217,10,222,15,"success"],[217,17,222,22],[217,19,222,24],[217,24,222,29],[218,10,222,31,"error"],[218,15,222,36],[218,17,222,38],[219,8,222,63],[219,9,222,64],[220,6,223,4],[220,7,223,5],[220,16,223,14],[221,8,224,6,"setIsLoading"],[221,20,224,18],[221,21,224,19],[221,26,224,24],[221,27,224,25],[222,6,225,4],[223,4,226,2],[223,5,226,3],[224,4,228,2],[224,10,228,8,"loginWithGoogle"],[224,25,228,23],[224,28,228,26],[224,34,228,26,"loginWithGoogle"],[224,35,228,26],[224,40,228,85],[225,6,229,4],[225,10,229,8],[226,8,230,6],[227,8,231,6],[228,8,232,6],[228,14,232,12,"redirectUrl"],[228,25,232,23],[228,28,232,26,"encodeURIComponent"],[228,46,232,44],[228,47,232,45,"window"],[228,53,232,51],[228,54,232,52,"location"],[228,62,232,60],[228,63,232,61,"href"],[228,67,232,65],[228,68,232,66],[229,8,233,6],[229,14,233,12,"googleAuthUrl"],[229,27,233,25],[229,30,233,28],[229,74,233,72,"redirectUrl"],[229,85,233,83],[229,87,233,85],[231,8,235,6],[232,8,236,6,"window"],[232,14,236,12],[232,15,236,13,"open"],[232,19,236,17],[232,20,236,18,"googleAuthUrl"],[232,33,236,31],[232,35,236,33],[232,42,236,40],[232,43,236,41],[233,8,238,6],[233,15,238,13],[234,10,238,15,"success"],[234,17,238,22],[234,19,238,24],[235,8,238,29],[235,9,238,30],[236,6,239,4],[236,7,239,5],[236,8,239,6],[236,15,239,13,"error"],[236,20,239,18],[236,22,239,20],[237,8,240,6,"console"],[237,15,240,13],[237,16,240,14,"error"],[237,21,240,19],[237,22,240,20],[237,43,240,41],[237,45,240,43,"error"],[237,50,240,48],[237,51,240,49],[238,8,241,6],[238,15,241,13],[239,10,241,15,"success"],[239,17,241,22],[239,19,241,24],[239,24,241,29],[240,10,241,31,"error"],[240,15,241,36],[240,17,241,38],[241,8,241,60],[241,9,241,61],[242,6,242,4],[243,4,243,2],[243,5,243,3],[244,4,245,2],[244,10,245,8,"logout"],[244,16,245,14],[244,19,245,17],[244,25,245,17,"logout"],[244,26,245,17],[244,31,245,44],[245,6,246,4],[245,10,246,8],[246,8,247,6],[247,8,248,6],[247,12,248,10,"token"],[247,17,248,15],[247,19,248,17],[248,10,249,8],[248,16,249,14,"fetch"],[248,21,249,19],[248,22,249,20],[248,25,249,23,"API_BASE_URL"],[248,37,249,35],[248,55,249,53],[248,57,249,55],[249,12,250,10,"method"],[249,18,250,16],[249,20,250,18],[249,26,250,24],[250,12,251,10,"credentials"],[250,23,251,21],[250,25,251,23],[250,34,251,32],[251,12,252,10,"headers"],[251,19,252,17],[251,21,252,19],[252,14,253,12],[252,29,253,27],[252,31,253,29],[252,41,253,39,"token"],[252,46,253,44],[252,48,253,46],[253,14,254,12],[253,28,254,26],[253,30,254,28],[254,12,255,10],[255,10,256,8],[255,11,256,9],[255,12,256,10],[256,8,257,6],[257,6,258,4],[257,7,258,5],[257,8,258,6],[257,15,258,13,"error"],[257,20,258,18],[257,22,258,20],[258,8,259,6,"console"],[258,15,259,13],[258,16,259,14,"error"],[258,21,259,19],[258,22,259,20],[258,37,259,35],[258,39,259,37,"error"],[258,44,259,42],[258,45,259,43],[259,6,260,4],[259,7,260,5],[259,16,260,14],[260,8,261,6],[261,8,262,6],[261,14,262,12,"AsyncStorage"],[261,26,262,24],[261,27,262,24,"default"],[261,34,262,24],[261,35,262,25,"multiRemove"],[261,46,262,36],[261,47,262,37],[261,48,262,38],[261,60,262,50],[261,62,262,52],[261,73,262,63],[261,74,262,64],[261,75,262,65],[262,8,263,6,"setToken"],[262,16,263,14],[262,17,263,15],[262,21,263,19],[262,22,263,20],[263,8,264,6,"setUser"],[263,15,264,13],[263,16,264,14],[263,20,264,18],[263,21,264,19],[264,6,265,4],[265,4,266,2],[265,5,266,3],[266,4,268,2],[266,24,269,4],[266,28,269,4,"_reactJsxDevRuntime"],[266,47,269,4],[266,48,269,4,"jsxDEV"],[266,54,269,4],[266,56,269,5,"AuthContext"],[266,67,269,16],[266,68,269,17,"Provider"],[266,76,269,25],[267,6,270,6,"value"],[267,11,270,11],[267,13,270,13],[268,8,271,8,"user"],[268,12,271,12],[269,8,272,8,"token"],[269,13,272,13],[270,8,273,8,"isLoading"],[270,17,273,17],[271,8,274,8,"isAuthenticated"],[271,23,274,23],[272,8,275,8,"login"],[272,13,275,13],[273,8,276,8,"register"],[273,16,276,16],[274,8,277,8,"loginWithGoogle"],[274,23,277,23],[275,8,278,8,"logout"],[275,14,278,14],[276,8,279,8,"checkSession"],[277,6,280,6],[277,7,280,8],[278,6,280,8,"children"],[278,14,280,8],[278,16,282,7,"children"],[279,4,282,15],[280,6,282,15,"fileName"],[280,14,282,15],[280,16,282,15,"_jsxFileName"],[280,28,282,15],[281,6,282,15,"lineNumber"],[281,16,282,15],[282,6,282,15,"columnNumber"],[282,18,282,15],[283,4,282,15],[283,11,283,26],[283,12,283,27],[284,2,285,0],[284,3,285,1],[285,2,285,2,"_s"],[285,4,285,2],[285,5,30,13,"AuthProvider"],[285,17,30,25],[286,2,30,25,"_c"],[286,4,30,25],[286,7,30,13,"AuthProvider"],[286,19,30,25],[287,2,287,7],[287,8,287,13,"useAuth"],[287,15,287,20],[287,18,287,23,"useAuth"],[287,19,287,23],[287,24,287,46],[288,4,287,46,"_s2"],[288,7,287,46],[289,4,288,2],[289,10,288,8,"context"],[289,17,288,15],[289,20,288,18],[289,24,288,18,"useContext"],[289,30,288,28],[289,31,288,28,"useContext"],[289,41,288,28],[289,43,288,29,"AuthContext"],[289,54,288,40],[289,55,288,41],[290,4,289,2],[290,8,289,6,"context"],[290,15,289,13],[290,20,289,18,"undefined"],[290,29,289,27],[290,31,289,29],[291,6,290,4],[291,12,290,10],[291,16,290,14,"Error"],[291,21,290,19],[291,22,290,20],[291,67,290,65],[291,68,290,66],[292,4,291,2],[293,4,292,2],[293,11,292,9,"context"],[293,18,292,16],[294,2,293,0],[294,3,293,1],[295,2,293,2,"_s2"],[295,5,293,2],[295,6,287,13,"useAuth"],[295,13,287,20],[296,2,287,20],[296,6,287,20,"_c"],[296,8,287,20],[297,2,287,20,"$RefreshReg$"],[297,14,287,20],[297,15,287,20,"_c"],[297,17,287,20],[298,0,287,20],[298,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;0BCkD,6CD;GFU;uBIE;GJwC;gBKE;GLuC;mBME;GNuC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}