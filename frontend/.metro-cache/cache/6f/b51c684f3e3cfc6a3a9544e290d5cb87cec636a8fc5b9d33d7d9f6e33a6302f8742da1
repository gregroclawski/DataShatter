{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(); // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    _s();\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const ZoneProvider = ({\n    children\n  }) => {\n    _s2();\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Initialize with GameContext data if available\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('🗺️ Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('🗺️ No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = Object.assign({}, prev);\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = Object.assign({}, newProgress[zoneId]);\n        progress.killsInLevel += 1;\n\n        // Get the required kills for current level from zone data\n        const currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        const requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= requiredKills) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"LvYGbT30mWRG/UxGcpmwant2jMs=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":260,"map":[[6,26,5,0],[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"value"],[8,9,5,0],[9,2,5,0],[10,2,5,0],[10,11,5,0,"_interopDefault"],[10,27,5,0,"e"],[10,28,5,0],[11,4,5,0],[11,11,5,0,"e"],[11,12,5,0],[11,16,5,0,"e"],[11,17,5,0],[11,18,5,0,"__esModule"],[11,28,5,0],[11,31,5,0,"e"],[11,32,5,0],[12,6,5,0,"default"],[12,13,5,0],[12,15,5,0,"e"],[13,4,5,0],[14,2,5,0],[15,2,56,0,"Object"],[15,8,56,0],[15,9,56,0,"defineProperty"],[15,23,56,0],[15,24,56,0,"exports"],[15,31,56,0],[16,4,56,0,"enumerable"],[16,14,56,0],[17,4,56,0,"get"],[17,7,56,0],[17,18,56,0,"get"],[17,19,56,0],[18,6,56,0],[18,13,56,0,"useZone"],[18,20,56,0],[19,4,56,0],[20,2,56,0],[21,2,64,0,"Object"],[21,8,64,0],[21,9,64,0,"defineProperty"],[21,23,64,0],[21,24,64,0,"exports"],[21,31,64,0],[22,4,64,0,"enumerable"],[22,14,64,0],[23,4,64,0,"get"],[23,7,64,0],[23,18,64,0,"get"],[23,19,64,0],[24,6,64,0],[24,13,64,0,"ZoneProvider"],[24,25,64,0],[25,4,64,0],[26,2,64,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,2,0],[29,6,2,0,"_dataZoneData"],[29,19,2,0],[29,22,2,0,"require"],[29,29,2,0],[29,30,2,0,"_dependencyMap"],[29,44,2,0],[30,2,3,0],[30,6,3,0,"_GameContext"],[30,18,3,0],[30,21,3,0,"require"],[30,28,3,0],[30,29,3,0,"_dependencyMap"],[30,43,3,0],[31,2,3,40],[31,6,3,40,"_reactJsxDevRuntime"],[31,25,3,40],[31,28,3,40,"require"],[31,35,3,40],[31,36,3,40,"_dependencyMap"],[31,50,3,40],[32,2,6,0],[32,8,6,6,"calculateKillRequirement"],[32,32,6,30],[32,35,6,33,"calculateKillRequirement"],[32,36,6,34,"zoneId"],[32,42,6,48],[32,44,6,50,"level"],[32,49,6,63],[32,54,6,76],[33,4,7,2],[33,8,7,6,"zoneId"],[33,14,7,12],[33,18,7,16],[33,19,7,17],[33,21,7,19],[33,28,7,26],[33,30,7,28],[33,33,7,32,"level"],[33,38,7,37],[33,41,7,40],[33,42,7,42],[33,43,7,43],[33,44,7,49],[34,4,8,2],[34,8,8,6,"zoneId"],[34,14,8,12],[34,18,8,16],[34,20,8,18],[34,22,8,20],[34,29,8,27],[34,31,8,29],[34,34,8,33,"level"],[34,39,8,38],[34,42,8,41],[34,44,8,44],[34,45,8,45],[34,46,8,50],[35,4,9,2],[35,8,9,6,"zoneId"],[35,14,9,12],[35,18,9,16],[35,20,9,18],[35,22,9,20],[35,29,9,27],[35,31,9,29],[35,34,9,33,"level"],[35,39,9,38],[35,42,9,41],[35,44,9,44],[35,45,9,45],[35,46,9,50],[36,4,10,2],[36,8,10,6,"zoneId"],[36,14,10,12],[36,18,10,16],[36,20,10,18],[36,22,10,20],[36,29,10,27],[36,32,10,30],[36,35,10,34,"level"],[36,40,10,39],[36,43,10,42],[36,45,10,45],[36,46,10,46],[36,47,10,50],[37,4,11,2],[37,11,11,9],[37,14,11,12],[37,17,11,16,"level"],[37,22,11,21],[37,25,11,24],[37,27,11,27],[37,28,11,28],[37,29,11,50],[38,2,12,0],[38,3,12,1],[39,2,54,0],[39,8,54,6,"ZoneContext"],[39,19,54,17],[39,35,54,20],[39,39,54,20,"createContext"],[39,45,54,33],[39,46,54,33,"createContext"],[39,59,54,33],[39,61,54,63,"undefined"],[39,70,54,72],[39,71,54,73],[40,2,56,7],[40,8,56,13,"useZone"],[40,15,56,20],[40,18,56,23,"useZone"],[40,19,56,23],[40,24,56,29],[41,4,56,29,"_s"],[41,6,56,29],[42,4,57,2],[42,10,57,8,"context"],[42,17,57,15],[42,20,57,18],[42,24,57,18,"useContext"],[42,30,57,28],[42,31,57,28,"useContext"],[42,41,57,28],[42,43,57,29,"ZoneContext"],[42,54,57,40],[42,55,57,41],[43,4,58,2],[43,8,58,6],[43,9,58,7,"context"],[43,16,58,14],[43,18,58,16],[44,6,59,4],[44,12,59,10],[44,16,59,14,"Error"],[44,21,59,19],[44,22,59,20],[44,66,59,64],[44,67,59,65],[45,4,60,2],[46,4,61,2],[46,11,61,9,"context"],[46,18,61,16],[47,2,62,0],[47,3,62,1],[48,2,62,2,"_s"],[48,4,62,2],[48,5,56,13,"useZone"],[48,12,56,20],[49,2,64,7],[49,8,64,13,"ZoneProvider"],[49,20,64,25],[49,23,64,28,"ZoneProvider"],[49,24,64,29],[50,4,64,31,"children"],[51,2,64,65],[51,3,64,66],[51,8,64,71],[52,4,64,71,"_s2"],[52,7,64,71],[53,4,65,2],[53,10,65,8],[54,6,65,10,"gameState"],[54,15,65,19],[55,6,65,21,"updateZoneProgress"],[56,4,65,40],[56,5,65,41],[56,8,65,44],[56,12,65,44,"useGame"],[56,24,65,51],[56,25,65,51,"useGame"],[56,32,65,51],[56,34,65,52],[56,35,65,53],[58,4,67,2],[59,4,68,2],[59,10,68,8],[59,11,68,9,"currentZone"],[59,22,68,20],[59,24,68,22,"setCurrentZone"],[59,38,68,36],[59,39,68,37],[59,42,68,40],[59,46,68,40,"useState"],[59,52,68,48],[59,53,68,48,"useState"],[59,61,68,48],[59,63,68,62,"ZONES"],[59,76,68,67],[59,77,68,67,"ZONES"],[59,82,68,67],[59,83,68,68],[59,84,68,69],[59,85,68,70],[59,86,68,71],[60,4,69,2],[60,10,69,8],[60,11,69,9,"currentZoneLevel"],[60,27,69,25],[60,29,69,27,"setCurrentZoneLevel"],[60,48,69,46],[60,49,69,47],[60,52,69,50],[60,56,69,50,"useState"],[60,62,69,58],[60,63,69,58,"useState"],[60,71,69,58],[60,73,69,77,"ZONES"],[60,86,69,82],[60,87,69,82,"ZONES"],[60,92,69,82],[60,93,69,83],[60,94,69,84],[60,95,69,85],[60,97,69,87,"levels"],[60,103,69,93],[60,104,69,94],[60,105,69,95],[60,106,69,96],[60,110,69,100],[60,114,69,104],[60,115,69,105],[61,4,70,2],[61,10,70,8],[61,11,70,9,"zoneProgress"],[61,23,70,21],[61,25,70,23,"setZoneProgress"],[61,40,70,38],[61,41,70,39],[61,44,70,42],[61,48,70,42,"useState"],[61,54,70,50],[61,55,70,50,"useState"],[61,63,70,50],[61,65,70,81],[61,71,70,87],[62,6,71,4],[63,6,72,4],[63,12,72,10,"savedProgress"],[63,25,72,23],[63,28,72,26,"gameState"],[63,37,72,35],[63,39,72,37,"zoneProgress"],[63,51,72,49],[64,6,73,4],[64,10,73,8,"savedProgress"],[64,23,73,21],[64,27,73,25,"Object"],[64,33,73,31],[64,34,73,32,"keys"],[64,38,73,36],[64,39,73,37,"savedProgress"],[64,52,73,50],[64,53,73,51],[64,54,73,52,"length"],[64,60,73,58],[64,63,73,61],[64,64,73,62],[64,66,73,64],[65,8,74,6,"console"],[65,15,74,13],[65,16,74,14,"log"],[65,19,74,17],[65,20,74,18],[65,54,74,52],[65,56,74,54,"savedProgress"],[65,69,74,67],[65,70,74,68],[66,8,75,6],[66,15,75,13,"savedProgress"],[66,28,75,26],[67,6,76,4],[67,7,76,5],[67,13,76,11],[68,8,77,6,"console"],[68,15,77,13],[68,16,77,14,"log"],[68,19,77,17],[68,20,77,18],[68,64,77,62],[68,65,77,63],[69,8,78,6],[69,15,78,13],[70,10,78,15],[70,11,78,16],[70,13,78,18],[71,12,78,20,"zoneId"],[71,18,78,26],[71,20,78,28],[71,21,78,29],[72,12,78,31,"currentLevel"],[72,24,78,43],[72,26,78,45],[72,27,78,46],[73,12,78,48,"killsInLevel"],[73,24,78,60],[73,26,78,62],[73,27,78,63],[74,12,78,65,"completed"],[74,21,78,74],[74,23,78,76],[75,10,78,82],[76,8,78,84],[76,9,78,85],[77,6,79,4],[78,4,80,2],[78,5,80,3],[78,6,80,4],[80,4,82,2],[81,4,83,2],[81,8,83,2,"useEffect"],[81,14,83,11],[81,15,83,11,"useEffect"],[81,24,83,11],[81,26,83,12],[81,32,83,18],[82,6,84,4],[82,10,84,8,"gameState"],[82,19,84,17],[82,21,84,19,"zoneProgress"],[82,33,84,31],[82,37,84,35,"Object"],[82,43,84,41],[82,44,84,42,"keys"],[82,48,84,46],[82,49,84,47,"gameState"],[82,58,84,56],[82,59,84,57,"zoneProgress"],[82,71,84,69],[82,72,84,70],[82,73,84,71,"length"],[82,79,84,77],[82,82,84,80],[82,83,84,81],[82,85,84,83],[83,8,85,6,"console"],[83,15,85,13],[83,16,85,14,"log"],[83,19,85,17],[83,20,85,18],[83,64,85,62],[83,66,85,64,"gameState"],[83,75,85,73],[83,76,85,74,"zoneProgress"],[83,88,85,86],[83,89,85,87],[84,8,86,6,"setZoneProgress"],[84,23,86,21],[84,24,86,22,"gameState"],[84,33,86,31],[84,34,86,32,"zoneProgress"],[84,46,86,44],[84,47,86,45],[85,6,87,4],[86,4,88,2],[86,5,88,3],[86,7,88,5],[86,8,88,6,"gameState"],[86,17,88,15],[86,19,88,17,"zoneProgress"],[86,31,88,29],[86,32,88,30],[86,33,88,31],[88,4,90,2],[89,4,91,2],[89,8,91,2,"useEffect"],[89,14,91,11],[89,15,91,11,"useEffect"],[89,24,91,11],[89,26,91,12],[89,32,91,18],[90,6,92,4],[90,10,92,8,"gameState"],[90,19,92,17],[90,21,92,19,"ninja"],[90,26,92,24],[90,28,92,26],[91,8,93,6],[91,14,93,12,"recommendedZone"],[91,29,93,27],[91,32,93,30],[91,36,93,30,"getZoneByLevel"],[91,49,93,44],[91,50,93,44,"getZoneByLevel"],[91,64,93,44],[91,66,93,45,"gameState"],[91,75,93,54],[91,76,93,55,"ninja"],[91,81,93,60],[91,82,93,61,"level"],[91,87,93,66],[91,88,93,67],[92,8,94,6],[92,12,94,10,"recommendedZone"],[92,27,94,25],[92,31,94,29],[92,32,94,30,"currentZone"],[92,43,94,41],[92,45,94,43],[93,10,95,8,"setCurrentZone"],[93,24,95,22],[93,25,95,23,"recommendedZone"],[93,40,95,38],[93,41,95,39],[94,10,96,8,"setCurrentZoneLevel"],[94,29,96,27],[94,30,96,28,"recommendedZone"],[94,45,96,43],[94,46,96,44,"levels"],[94,52,96,50],[94,53,96,51],[94,54,96,52],[94,55,96,53],[94,56,96,54],[95,8,97,6],[96,6,98,4],[97,4,99,2],[97,5,99,3],[97,7,99,5],[97,8,99,6,"gameState"],[97,17,99,15],[97,19,99,17,"ninja"],[97,24,99,22],[97,26,99,24,"level"],[97,31,99,29],[97,32,99,30],[97,33,99,31],[99,4,101,2],[100,4,102,2],[100,10,102,8,"selectZone"],[100,20,102,18],[100,23,102,21,"selectZone"],[100,24,102,22,"zoneId"],[100,30,102,36],[100,32,102,38,"levelNumber"],[100,43,102,57],[100,48,102,71],[101,6,103,4],[101,12,103,10,"zone"],[101,16,103,14],[101,19,103,17,"ZONES"],[101,32,103,22],[101,33,103,22,"ZONES"],[101,38,103,22],[101,39,103,23,"find"],[101,43,103,27],[101,44,103,28,"z"],[101,45,103,29],[101,49,103,33,"z"],[101,50,103,34],[101,51,103,35,"id"],[101,53,103,37],[101,58,103,42,"zoneId"],[101,64,103,48],[101,65,103,49],[102,6,104,4],[102,10,104,8],[102,11,104,9,"zone"],[102,15,104,13],[102,19,104,17],[102,20,104,18],[102,24,104,18,"isZoneUnlocked"],[102,37,104,32],[102,38,104,32,"isZoneUnlocked"],[102,52,104,32],[102,54,104,33,"zoneId"],[102,60,104,39],[102,62,104,41,"zoneProgress"],[102,74,104,53],[102,75,104,54],[102,77,104,56],[103,8,105,6,"console"],[103,15,105,13],[103,16,105,14,"log"],[103,19,105,17],[103,20,105,18],[103,30,105,28,"zoneId"],[103,36,105,34],[103,58,105,56],[103,59,105,57],[104,8,106,6],[104,15,106,13],[104,20,106,18],[105,6,107,4],[106,6,109,4],[106,12,109,10,"level"],[106,17,109,15],[106,20,109,18,"zone"],[106,24,109,22],[106,25,109,23,"levels"],[106,31,109,29],[106,32,109,30,"levelNumber"],[106,43,109,41],[106,46,109,44],[106,47,109,45],[106,48,109,46],[107,6,110,4],[107,10,110,8],[107,11,110,9,"level"],[107,16,110,14],[107,18,110,16],[108,8,111,6,"console"],[108,15,111,13],[108,16,111,14,"log"],[108,19,111,17],[108,20,111,18],[108,31,111,29,"levelNumber"],[108,42,111,40],[108,64,111,62,"zoneId"],[108,70,111,68],[108,72,111,70],[108,73,111,71],[109,8,112,6],[109,15,112,13],[109,20,112,18],[110,6,113,4],[111,6,115,4,"setCurrentZone"],[111,20,115,18],[111,21,115,19,"zone"],[111,25,115,23],[111,26,115,24],[112,6,116,4,"setCurrentZoneLevel"],[112,25,116,23],[112,26,116,24,"level"],[112,31,116,29],[112,32,116,30],[113,6,117,4,"console"],[113,13,117,11],[113,14,117,12,"log"],[113,17,117,15],[113,18,117,16],[113,34,117,32,"zone"],[113,38,117,36],[113,39,117,37,"name"],[113,43,117,41],[113,55,117,53,"levelNumber"],[113,66,117,64],[113,68,117,66],[113,69,117,67],[114,6,118,4],[114,13,118,11],[114,17,118,15],[115,4,119,2],[115,5,119,3],[117,4,121,2],[118,4,122,2],[118,10,122,8,"getZoneProgress"],[118,25,122,23],[118,28,122,27,"zoneId"],[118,34,122,41],[118,38,122,67],[119,6,123,4],[119,13,123,11,"zoneProgress"],[119,25,123,23],[119,26,123,24,"zoneId"],[119,32,123,30],[119,33,123,31],[119,37,123,35],[119,41,123,39],[120,4,124,2],[120,5,124,3],[122,4,126,2],[123,4,127,2],[123,10,127,8,"spawnZoneEnemy"],[123,24,127,22],[123,27,127,25,"spawnZoneEnemy"],[123,28,127,25],[123,33,127,52],[124,6,128,4],[124,10,128,8],[124,11,128,9,"currentZone"],[124,22,128,20],[124,26,128,24],[124,27,128,25,"currentZoneLevel"],[124,43,128,41],[124,45,128,43],[125,8,129,6,"console"],[125,15,129,13],[125,16,129,14,"log"],[125,19,129,17],[125,20,129,18],[125,65,129,63],[125,66,129,64],[126,8,130,6],[126,15,130,13],[126,19,130,17],[127,6,131,4],[129,6,133,4],[130,6,134,4],[130,12,134,10,"enemyTypeIds"],[130,24,134,22],[130,27,134,25,"currentZoneLevel"],[130,43,134,41],[130,44,134,42,"enemyTypes"],[130,54,134,52],[131,6,135,4],[131,12,135,10,"randomEnemyTypeId"],[131,29,135,27],[131,32,135,30,"enemyTypeIds"],[131,44,135,42],[131,45,135,43,"Math"],[131,49,135,47],[131,50,135,48,"floor"],[131,55,135,53],[131,56,135,54,"Math"],[131,60,135,58],[131,61,135,59,"random"],[131,67,135,65],[131,68,135,66],[131,69,135,67],[131,72,135,70,"enemyTypeIds"],[131,84,135,82],[131,85,135,83,"length"],[131,91,135,89],[131,92,135,90],[131,93,135,91],[132,6,136,4],[132,12,136,10,"enemyType"],[132,21,136,19],[132,24,136,22,"ENEMY_TYPES"],[132,37,136,33],[132,38,136,33,"ENEMY_TYPES"],[132,49,136,33],[132,50,136,34,"randomEnemyTypeId"],[132,67,136,51],[132,68,136,52],[133,6,138,4],[133,10,138,8],[133,11,138,9,"enemyType"],[133,20,138,18],[133,22,138,20],[134,8,139,6,"console"],[134,15,139,13],[134,16,139,14,"log"],[134,19,139,17],[134,20,139,18],[134,36,139,34,"randomEnemyTypeId"],[134,53,139,51],[134,65,139,63],[134,66,139,64],[135,8,140,6],[135,15,140,13],[135,19,140,17],[136,6,141,4],[138,6,143,4],[139,6,144,4],[139,12,144,10,"scaledStats"],[139,23,144,21],[139,26,144,24],[139,30,144,24,"calculateEnemyStats"],[139,43,144,43],[139,44,144,43,"calculateEnemyStats"],[139,63,144,43],[139,65,144,44,"enemyType"],[139,74,144,53],[139,76,144,55,"currentZoneLevel"],[139,92,144,71],[139,94,144,73,"currentZone"],[139,105,144,84],[139,106,144,85,"id"],[139,108,144,87],[139,109,144,88],[141,6,146,4],[142,6,147,4],[142,12,147,10,"enemy"],[142,17,147,29],[142,20,147,32],[143,8,148,6,"id"],[143,10,148,8],[143,12,148,10],[143,15,148,13,"randomEnemyTypeId"],[143,32,148,30],[143,36,148,34,"Date"],[143,40,148,38],[143,41,148,39,"now"],[143,44,148,42],[143,45,148,43],[143,46,148,44],[143,50,148,48,"Math"],[143,54,148,52],[143,55,148,53,"random"],[143,61,148,59],[143,62,148,60],[143,63,148,61],[143,65,148,63],[144,8,149,6,"typeId"],[144,14,149,12],[144,16,149,14,"randomEnemyTypeId"],[144,33,149,31],[145,8,150,6,"name"],[145,12,150,10],[145,14,150,12,"enemyType"],[145,23,150,21],[145,24,150,22,"name"],[145,28,150,26],[146,8,151,6,"icon"],[146,12,151,10],[146,14,151,12,"enemyType"],[146,23,151,21],[146,24,151,22,"icon"],[146,28,151,26],[147,8,152,6,"hp"],[147,10,152,8],[147,12,152,10,"scaledStats"],[147,23,152,21],[147,24,152,22,"hp"],[147,26,152,24],[148,8,153,6,"maxHP"],[148,13,153,11],[148,15,153,13,"scaledStats"],[148,26,153,24],[148,27,153,25,"hp"],[148,29,153,27],[149,8,154,6,"attack"],[149,14,154,12],[149,16,154,14,"scaledStats"],[149,27,154,25],[149,28,154,26,"attack"],[149,34,154,32],[150,8,155,6,"xp"],[150,10,155,8],[150,12,155,10,"scaledStats"],[150,23,155,21],[150,24,155,22,"xp"],[150,26,155,24],[151,8,156,6,"resistances"],[151,19,156,17],[151,21,156,19,"scaledStats"],[151,32,156,30],[151,33,156,31,"resistances"],[151,44,156,42],[152,8,157,6,"position"],[152,16,157,14],[152,18,157,16],[153,10,158,8,"x"],[153,11,158,9],[153,13,158,11,"Math"],[153,17,158,15],[153,18,158,16,"random"],[153,24,158,22],[153,25,158,23],[153,26,158,24],[153,29,158,27],[153,32,158,30],[153,35,158,33],[153,37,158,35],[154,10,158,37],[155,10,159,8,"y"],[155,11,159,9],[155,13,159,11,"Math"],[155,17,159,15],[155,18,159,16,"random"],[155,24,159,22],[155,25,159,23],[155,26,159,24],[155,29,159,27],[155,32,159,30],[155,35,159,33],[156,8,160,6],[156,9,160,7],[157,8,161,6,"lastDamaged"],[157,19,161,17],[157,21,161,19],[158,6,162,4],[158,7,162,5],[159,6,164,4,"console"],[159,13,164,11],[159,14,164,12,"log"],[159,17,164,15],[159,18,164,16],[159,32,164,30,"enemy"],[159,37,164,35],[159,38,164,36,"name"],[159,42,164,40],[159,47,164,45,"enemy"],[159,52,164,50],[159,53,164,51,"hp"],[159,55,164,53],[159,63,164,61,"enemy"],[159,68,164,66],[159,69,164,67,"xp"],[159,71,164,69],[159,82,164,80,"currentZone"],[159,93,164,91],[159,94,164,92,"name"],[159,98,164,96],[159,100,164,98],[159,101,164,99],[160,6,165,4],[160,13,165,11,"enemy"],[160,18,165,16],[161,4,166,2],[161,5,166,3],[163,4,168,2],[164,4,169,2],[164,10,169,8,"recordEnemyKill"],[164,25,169,23],[164,28,169,27,"enemy"],[164,33,169,46],[164,37,169,51],[165,6,170,4],[165,10,170,8],[165,11,170,9,"currentZone"],[165,22,170,20],[165,26,170,24],[165,27,170,25,"currentZoneLevel"],[165,43,170,41],[165,45,170,43],[166,6,172,4,"console"],[166,13,172,11],[166,14,172,12,"log"],[166,17,172,15],[166,18,172,16],[166,24,172,22,"enemy"],[166,29,172,27],[166,30,172,28,"name"],[166,34,172,32],[166,47,172,45,"enemy"],[166,52,172,50],[166,53,172,51,"xp"],[166,55,172,53],[166,60,172,58],[166,61,172,59],[167,6,174,4,"setZoneProgress"],[167,21,174,19],[167,22,174,20,"prev"],[167,26,174,24],[167,30,174,28],[168,8,175,6],[168,14,175,12,"newProgress"],[168,25,175,23],[168,28,175,23,"Object"],[168,34,175,23],[168,35,175,23,"assign"],[168,41,175,23],[168,46,175,31,"prev"],[168,50,175,35],[168,51,175,37],[169,8,176,6],[169,14,176,12,"zoneId"],[169,20,176,18],[169,23,176,21,"currentZone"],[169,34,176,32],[169,35,176,33,"id"],[169,37,176,35],[170,8,178,6],[170,12,178,10],[170,13,178,11,"newProgress"],[170,24,178,22],[170,25,178,23,"zoneId"],[170,31,178,29],[170,32,178,30],[170,34,178,32],[171,10,179,8,"newProgress"],[171,21,179,19],[171,22,179,20,"zoneId"],[171,28,179,26],[171,29,179,27],[171,32,179,30],[172,12,180,10,"zoneId"],[172,18,180,16],[173,12,181,10,"currentLevel"],[173,24,181,22],[173,26,181,24],[173,27,181,25],[174,12,182,10,"killsInLevel"],[174,24,182,22],[174,26,182,24],[174,27,182,25],[175,12,183,10,"completed"],[175,21,183,19],[175,23,183,21],[176,10,184,8],[176,11,184,9],[177,8,185,6],[178,8,187,6],[178,14,187,12,"progress"],[178,22,187,20],[178,25,187,20,"Object"],[178,31,187,20],[178,32,187,20,"assign"],[178,38,187,20],[178,43,187,28,"newProgress"],[178,54,187,39],[178,55,187,40,"zoneId"],[178,61,187,46],[178,62,187,47],[178,63,187,49],[179,8,188,6,"progress"],[179,16,188,14],[179,17,188,15,"killsInLevel"],[179,29,188,27],[179,33,188,31],[179,34,188,32],[181,8,190,6],[182,8,191,6],[182,14,191,12,"currentZoneLevel"],[182,30,191,28],[182,33,191,31,"currentZone"],[182,44,191,42],[182,45,191,43,"levels"],[182,51,191,49],[182,52,191,50,"progress"],[182,60,191,58],[182,61,191,59,"currentLevel"],[182,73,191,71],[182,76,191,74],[182,77,191,75],[182,78,191,76],[183,8,192,6],[183,14,192,12,"requiredKills"],[183,27,192,25],[183,30,192,28,"currentZoneLevel"],[183,46,192,44],[183,49,192,47,"currentZoneLevel"],[183,65,192,63],[183,66,192,64,"requiredKills"],[183,79,192,77],[183,82,192,80,"calculateKillRequirement"],[183,106,192,104],[183,107,192,105,"zoneId"],[183,113,192,111],[183,115,192,113,"progress"],[183,123,192,121],[183,124,192,122,"currentLevel"],[183,136,192,134],[183,137,192,135],[184,8,194,6,"console"],[184,15,194,13],[184,16,194,14,"log"],[184,19,194,17],[184,20,194,18],[184,31,194,29,"zoneId"],[184,37,194,35],[184,47,194,45,"progress"],[184,55,194,53],[184,56,194,54,"currentLevel"],[184,68,194,66],[184,73,194,71,"progress"],[184,81,194,79],[184,82,194,80,"killsInLevel"],[184,94,194,92],[184,98,194,96,"requiredKills"],[184,111,194,109],[184,119,194,117],[184,120,194,118],[186,8,196,6],[187,8,197,6],[187,12,197,10,"progress"],[187,20,197,18],[187,21,197,19,"killsInLevel"],[187,33,197,31],[187,37,197,35,"requiredKills"],[187,50,197,48],[187,52,197,50],[188,10,198,8,"console"],[188,17,198,15],[188,18,198,16,"log"],[188,21,198,19],[188,22,198,20],[188,34,198,32,"progress"],[188,42,198,40],[188,43,198,41,"currentLevel"],[188,55,198,53],[188,72,198,70,"currentZone"],[188,83,198,81],[188,84,198,82,"name"],[188,88,198,86],[188,91,198,89],[188,92,198,90],[190,10,200,8],[191,10,201,8],[191,14,201,12,"progress"],[191,22,201,20],[191,23,201,21,"currentLevel"],[191,35,201,33],[191,38,201,36],[191,39,201,37],[191,41,201,39],[192,12,202,10,"progress"],[192,20,202,18],[192,21,202,19,"currentLevel"],[192,33,202,31],[192,37,202,35],[192,38,202,36],[193,12,203,10,"progress"],[193,20,203,18],[193,21,203,19,"killsInLevel"],[193,33,203,31],[193,36,203,34],[193,37,203,35],[194,12,204,10,"console"],[194,19,204,17],[194,20,204,18,"log"],[194,23,204,21],[194,24,204,22],[194,48,204,46,"progress"],[194,56,204,54],[194,57,204,55,"currentLevel"],[194,69,204,67],[194,71,204,69],[194,72,204,70],[196,12,206,10],[197,12,207,10],[197,18,207,16,"nextLevel"],[197,27,207,25],[197,30,207,28,"currentZone"],[197,41,207,39],[197,42,207,40,"levels"],[197,48,207,46],[197,49,207,47,"progress"],[197,57,207,55],[197,58,207,56,"currentLevel"],[197,70,207,68],[197,73,207,71],[197,74,207,72],[197,75,207,73],[198,12,208,10],[198,16,208,14,"nextLevel"],[198,25,208,23],[198,27,208,25],[199,14,209,12,"setCurrentZoneLevel"],[199,33,209,31],[199,34,209,32,"nextLevel"],[199,43,209,41],[199,44,209,42],[200,12,210,10],[201,10,211,8],[201,11,211,9],[201,17,211,15],[202,12,212,10],[203,12,213,10,"progress"],[203,20,213,18],[203,21,213,19,"completed"],[203,30,213,28],[203,33,213,31],[203,37,213,35],[204,12,214,10,"console"],[204,19,214,17],[204,20,214,18,"log"],[204,23,214,21],[204,24,214,22],[204,35,214,33,"currentZone"],[204,46,214,44],[204,47,214,45,"name"],[204,51,214,49],[204,84,214,82],[204,85,214,83],[205,10,215,8],[206,8,216,6],[207,8,218,6,"newProgress"],[207,19,218,17],[207,20,218,18,"zoneId"],[207,26,218,24],[207,27,218,25],[207,30,218,28,"progress"],[207,38,218,36],[209,8,220,6],[210,8,221,6,"setTimeout"],[210,18,221,16],[210,19,221,17],[210,25,221,23],[211,10,222,8,"console"],[211,17,222,15],[211,18,222,16,"log"],[211,21,222,19],[211,22,222,20],[211,67,222,65],[211,69,222,67,"newProgress"],[211,80,222,78],[211,81,222,79],[212,10,223,8,"updateZoneProgress"],[212,28,223,26],[212,29,223,27,"newProgress"],[212,40,223,38],[212,41,223,39],[213,8,224,6],[213,9,224,7],[213,11,224,9],[213,12,224,10],[213,13,224,11],[213,14,224,12],[213,15,224,13],[215,8,226,6],[215,15,226,13,"newProgress"],[215,26,226,24],[216,6,227,4],[216,7,227,5],[216,8,227,6],[217,4,228,2],[217,5,228,3],[219,4,230,2],[220,4,231,2],[220,10,231,8,"isZoneUnlockedLocal"],[220,29,231,27],[220,32,231,31,"zoneId"],[220,38,231,45],[220,42,231,59],[221,6,232,4],[221,10,232,8,"zoneId"],[221,16,232,14],[221,21,232,19],[221,22,232,20],[221,24,232,22],[221,31,232,29],[221,35,232,33],[221,36,232,34],[221,37,232,35],[223,6,234,4],[223,12,234,10,"zone"],[223,16,234,14],[223,19,234,17,"ZONES"],[223,32,234,22],[223,33,234,22,"ZONES"],[223,38,234,22],[223,39,234,23,"find"],[223,43,234,27],[223,44,234,28,"z"],[223,45,234,29],[223,49,234,33,"z"],[223,50,234,34],[223,51,234,35,"id"],[223,53,234,37],[223,58,234,42,"zoneId"],[223,64,234,48],[223,65,234,49],[224,6,235,4],[224,10,235,8],[224,11,235,9,"zone"],[224,15,235,13],[224,17,235,15,"unlockRequirement"],[224,34,235,32],[224,35,235,33,"previousZone"],[224,47,235,45],[224,49,235,47],[224,56,235,54],[224,60,235,58],[225,6,237,4],[225,12,237,10,"prevZoneProgress"],[225,28,237,26],[225,31,237,29,"zoneProgress"],[225,43,237,41],[225,44,237,42,"zone"],[225,48,237,46],[225,49,237,47,"unlockRequirement"],[225,66,237,64],[225,67,237,65,"previousZone"],[225,79,237,77],[225,80,237,78],[226,6,238,4],[226,13,238,11,"prevZoneProgress"],[226,29,238,27],[226,31,238,29,"completed"],[226,40,238,38],[226,44,238,42],[226,49,238,47],[227,4,239,2],[227,5,239,3],[229,4,241,2],[230,4,242,2],[230,10,242,8,"getUnlockedZones"],[230,26,242,24],[230,29,242,27,"getUnlockedZones"],[230,30,242,27],[230,35,242,41],[231,6,243,4],[231,13,243,11,"ZONES"],[231,26,243,16],[231,27,243,16,"ZONES"],[231,32,243,16],[231,33,243,17,"filter"],[231,39,243,23],[231,40,243,24,"zone"],[231,44,243,28],[231,48,243,32,"isZoneUnlockedLocal"],[231,67,243,51],[231,68,243,52,"zone"],[231,72,243,56],[231,73,243,57,"id"],[231,75,243,59],[231,76,243,60],[231,77,243,61],[232,4,244,2],[232,5,244,3],[233,4,246,2],[233,10,246,8,"contextValue"],[233,22,246,37],[233,25,246,40,"React"],[233,30,246,45],[233,31,246,45,"default"],[233,38,246,45],[233,39,246,46,"useMemo"],[233,46,246,53],[233,47,246,54],[233,54,246,61],[234,6,247,4,"currentZone"],[234,17,247,15],[235,6,248,4,"currentZoneLevel"],[235,22,248,20],[236,6,249,4,"zoneProgress"],[236,18,249,16],[237,6,250,4,"availableZones"],[237,20,250,18],[237,22,250,20,"ZONES"],[237,35,250,25],[237,36,250,25,"ZONES"],[237,41,250,25],[238,6,251,4,"selectZone"],[238,16,251,14],[239,6,252,4,"getZoneProgress"],[239,21,252,19],[240,6,253,4,"spawnZoneEnemy"],[240,20,253,18],[241,6,254,4,"recordEnemyKill"],[241,21,254,19],[242,6,255,4,"isZoneUnlocked"],[242,20,255,18],[242,22,255,20,"isZoneUnlockedLocal"],[242,41,255,39],[243,6,256,4,"getUnlockedZones"],[244,4,257,2],[244,5,257,3],[244,6,257,4],[244,8,257,6],[244,9,258,4,"currentZone"],[244,20,258,15],[244,22,259,4,"currentZoneLevel"],[244,38,259,20],[244,40,260,4,"zoneProgress"],[244,52,260,16],[244,54,261,4,"selectZone"],[244,64,261,14],[244,66,262,4,"getZoneProgress"],[244,81,262,19],[244,83,263,4,"spawnZoneEnemy"],[244,97,263,18],[244,99,264,4,"recordEnemyKill"],[244,114,264,19],[244,116,265,4,"isZoneUnlockedLocal"],[244,135,265,23],[244,137,266,4,"getUnlockedZones"],[244,153,266,20],[244,154,267,3],[244,155,267,4],[245,4,269,2],[245,24,270,4],[245,28,270,4,"_reactJsxDevRuntime"],[245,47,270,4],[245,48,270,4,"jsxDEV"],[245,54,270,4],[245,56,270,5,"ZoneContext"],[245,67,270,16],[245,68,270,17,"Provider"],[245,76,270,25],[246,6,270,26,"value"],[246,11,270,31],[246,13,270,33,"contextValue"],[246,25,270,46],[247,6,270,46,"children"],[247,14,270,46],[247,16,271,7,"children"],[248,4,271,15],[249,6,271,15,"fileName"],[249,14,271,15],[249,16,271,15,"_jsxFileName"],[249,28,271,15],[250,6,271,15,"lineNumber"],[250,16,271,15],[251,6,271,15,"columnNumber"],[251,18,271,15],[252,4,271,15],[252,11,272,26],[252,12,272,27],[253,2,274,0],[253,3,274,1],[254,2,274,2,"_s2"],[254,5,274,2],[254,6,64,13,"ZoneProvider"],[254,18,64,25],[255,4,64,25],[255,12,65,44,"useGame"],[255,24,65,51],[255,25,65,51,"useGame"],[255,32,65,51],[256,2,65,51],[257,2,65,51,"_c"],[257,4,65,51],[257,7,64,13,"ZoneProvider"],[257,19,64,25],[258,2,64,25],[258,6,64,25,"_c"],[258,8,64,25],[259,2,64,25,"$RefreshReg$"],[259,14,64,25],[259,15,64,25,"_c"],[259,17,64,25],[260,0,64,25],[260,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE4C;CFM;4BGE;iFCM;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCC,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC+C;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbW;CHiB"},"hasCjsExports":false},"type":"js/module"}]}