{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(); // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    _s();\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const ZoneProvider = ({\n    children\n  }) => {\n    _s2();\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Separate \"progression\" from \"currently selected\" zones\n    const [currentZone, setCurrentZone] = (0, _react.useState)(() => {\n      console.log('🎯 ZONE INIT: Initializing currentZone (selected zone) to Zone 1 Level 1');\n      return _dataZoneData.ZONES[0];\n    }); // Currently selected zone for gameplay\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(() => {\n      console.log('🎯 ZONE INIT: Initializing currentZoneLevel to Zone 1 Level 1');\n      return _dataZoneData.ZONES[0]?.levels[0] || null;\n    });\n    const [progressionZone, setProgressionZone] = (0, _react.useState)(() => {\n      console.log('🎯 ZONE INIT: Initializing progressionZone (unlock progress) to Zone 1');\n      return _dataZoneData.ZONES[0];\n    }); // Highest unlocked zone for progression\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('🗺️ Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('🗺️ No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // Initialize with game context data when it becomes available\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress) {\n        console.log('🔄 ZONE CONTEXT - Loading zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n\n        // Find the highest unlocked zone for progression tracking\n        const progressEntries = Object.values(gameState.zoneProgress || {});\n        let highestZone = _dataZoneData.ZONES[0];\n        let highestLevel = _dataZoneData.ZONES[0]?.levels[0];\n        for (const progress of progressEntries) {\n          if (progress && progress.zoneId) {\n            const zone = _dataZoneData.ZONES.find(z => z.id === progress.zoneId);\n            if (zone) {\n              highestZone = zone;\n              highestLevel = zone.levels[(progress.currentLevel || 1) - 1];\n            }\n          }\n        }\n        console.log(`🎯 PROGRESSION ZONE SET: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (highest unlocked)`);\n        setProgressionZone(highestZone);\n\n        // Set current selected zone to progression zone initially  \n        console.log(`🎯 SELECTED ZONE INITIALIZED: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (matching progression)`);\n        setCurrentZone(highestZone);\n        setCurrentZoneLevel(highestLevel || _dataZoneData.ZONES[0]?.levels[0]);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Zone selection and management - separate from progression\n    const selectZone = (zoneId, levelNumber) => {\n      if (!isZoneUnlockedLocal(zoneId)) {\n        console.log(`❌ Zone ${zoneId} is not unlocked`);\n        return false;\n      }\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone) {\n        console.log(`❌ Zone ${zoneId} not found`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Zone ${zoneId} Level ${levelNumber} not found`);\n        return false;\n      }\n      console.log(`🎯 ZONE SELECTION: Setting currentZone to Zone ${zoneId} Level ${levelNumber} (${zone.name})`);\n      console.log(`📍 BEFORE: currentZone=${currentZone?.id}, currentLevel=${currentZoneLevel?.level}`);\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`📍 AFTER: Selected Zone ${zoneId} Level ${levelNumber} - Kills will count toward this zone`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      console.log(`🎯 KILL TRACKING: Recording kill for SELECTED Zone ${currentZone.id} Level ${currentZoneLevel.level}`);\n      setZoneProgress(prev => {\n        const newProgress = Object.assign({}, prev);\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = Object.assign({}, newProgress[zoneId]);\n\n        // Get the required kills for current level from zone data\n        const currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        const requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        const willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment\n          progress.killsInLevel += 1;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ PROGRESSION: Advanced to Level ${progress.currentLevel} (player can still select other zones)`);\n\n            // Update progression zone but DON'T auto-select next level\n            // Player keeps their current selection unless they manually change it\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel && currentZone === progressionZone) {\n              // Only auto-advance if player is currently on the progression zone\n              console.log(`🎯 AUTO-ADVANCE: Player was on progression zone, advancing to next level`);\n              setCurrentZoneLevel(nextLevel);\n              setProgressionZone(currentZone); // Update progression zone\n            } else {\n              console.log(`🎯 SELECTION PRESERVED: Player selected different zone, keeping their choice`);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      // Currently selected zone for gameplay\n      currentZoneLevel,\n      progressionZone,\n      // Highest unlocked zone for progression\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, progressionZone, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"NpNqhN7dxEQakwzs4FMu823gqFI=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":319,"map":[[6,26,5,0],[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"value"],[8,9,5,0],[9,2,5,0],[10,2,5,0],[10,11,5,0,"_interopDefault"],[10,27,5,0,"e"],[10,28,5,0],[11,4,5,0],[11,11,5,0,"e"],[11,12,5,0],[11,16,5,0,"e"],[11,17,5,0],[11,18,5,0,"__esModule"],[11,28,5,0],[11,31,5,0,"e"],[11,32,5,0],[12,6,5,0,"default"],[12,13,5,0],[12,15,5,0,"e"],[13,4,5,0],[14,2,5,0],[15,2,57,0,"Object"],[15,8,57,0],[15,9,57,0,"defineProperty"],[15,23,57,0],[15,24,57,0,"exports"],[15,31,57,0],[16,4,57,0,"enumerable"],[16,14,57,0],[17,4,57,0,"get"],[17,7,57,0],[17,18,57,0,"get"],[17,19,57,0],[18,6,57,0],[18,13,57,0,"useZone"],[18,20,57,0],[19,4,57,0],[20,2,57,0],[21,2,65,0,"Object"],[21,8,65,0],[21,9,65,0,"defineProperty"],[21,23,65,0],[21,24,65,0,"exports"],[21,31,65,0],[22,4,65,0,"enumerable"],[22,14,65,0],[23,4,65,0,"get"],[23,7,65,0],[23,18,65,0,"get"],[23,19,65,0],[24,6,65,0],[24,13,65,0,"ZoneProvider"],[24,25,65,0],[25,4,65,0],[26,2,65,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,2,0],[29,6,2,0,"_dataZoneData"],[29,19,2,0],[29,22,2,0,"require"],[29,29,2,0],[29,30,2,0,"_dependencyMap"],[29,44,2,0],[30,2,3,0],[30,6,3,0,"_GameContext"],[30,18,3,0],[30,21,3,0,"require"],[30,28,3,0],[30,29,3,0,"_dependencyMap"],[30,43,3,0],[31,2,3,40],[31,6,3,40,"_reactJsxDevRuntime"],[31,25,3,40],[31,28,3,40,"require"],[31,35,3,40],[31,36,3,40,"_dependencyMap"],[31,50,3,40],[32,2,6,0],[32,8,6,6,"calculateKillRequirement"],[32,32,6,30],[32,35,6,33,"calculateKillRequirement"],[32,36,6,34,"zoneId"],[32,42,6,48],[32,44,6,50,"level"],[32,49,6,63],[32,54,6,76],[33,4,7,2],[33,8,7,6,"zoneId"],[33,14,7,12],[33,18,7,16],[33,19,7,17],[33,21,7,19],[33,28,7,26],[33,30,7,28],[33,33,7,32,"level"],[33,38,7,37],[33,41,7,40],[33,42,7,42],[33,43,7,43],[33,44,7,49],[34,4,8,2],[34,8,8,6,"zoneId"],[34,14,8,12],[34,18,8,16],[34,20,8,18],[34,22,8,20],[34,29,8,27],[34,31,8,29],[34,34,8,33,"level"],[34,39,8,38],[34,42,8,41],[34,44,8,44],[34,45,8,45],[34,46,8,50],[35,4,9,2],[35,8,9,6,"zoneId"],[35,14,9,12],[35,18,9,16],[35,20,9,18],[35,22,9,20],[35,29,9,27],[35,31,9,29],[35,34,9,33,"level"],[35,39,9,38],[35,42,9,41],[35,44,9,44],[35,45,9,45],[35,46,9,50],[36,4,10,2],[36,8,10,6,"zoneId"],[36,14,10,12],[36,18,10,16],[36,20,10,18],[36,22,10,20],[36,29,10,27],[36,32,10,30],[36,35,10,34,"level"],[36,40,10,39],[36,43,10,42],[36,45,10,45],[36,46,10,46],[36,47,10,50],[37,4,11,2],[37,11,11,9],[37,14,11,12],[37,17,11,16,"level"],[37,22,11,21],[37,25,11,24],[37,27,11,27],[37,28,11,28],[37,29,11,50],[38,2,12,0],[38,3,12,1],[39,2,55,0],[39,8,55,6,"ZoneContext"],[39,19,55,17],[39,35,55,20],[39,39,55,20,"createContext"],[39,45,55,33],[39,46,55,33,"createContext"],[39,59,55,33],[39,61,55,63,"undefined"],[39,70,55,72],[39,71,55,73],[40,2,57,7],[40,8,57,13,"useZone"],[40,15,57,20],[40,18,57,23,"useZone"],[40,19,57,23],[40,24,57,29],[41,4,57,29,"_s"],[41,6,57,29],[42,4,58,2],[42,10,58,8,"context"],[42,17,58,15],[42,20,58,18],[42,24,58,18,"useContext"],[42,30,58,28],[42,31,58,28,"useContext"],[42,41,58,28],[42,43,58,29,"ZoneContext"],[42,54,58,40],[42,55,58,41],[43,4,59,2],[43,8,59,6],[43,9,59,7,"context"],[43,16,59,14],[43,18,59,16],[44,6,60,4],[44,12,60,10],[44,16,60,14,"Error"],[44,21,60,19],[44,22,60,20],[44,66,60,64],[44,67,60,65],[45,4,61,2],[46,4,62,2],[46,11,62,9,"context"],[46,18,62,16],[47,2,63,0],[47,3,63,1],[48,2,63,2,"_s"],[48,4,63,2],[48,5,57,13,"useZone"],[48,12,57,20],[49,2,65,7],[49,8,65,13,"ZoneProvider"],[49,20,65,25],[49,23,65,28,"ZoneProvider"],[49,24,65,29],[50,4,65,31,"children"],[51,2,65,65],[51,3,65,66],[51,8,65,71],[52,4,65,71,"_s2"],[52,7,65,71],[53,4,66,2],[53,10,66,8],[54,6,66,10,"gameState"],[54,15,66,19],[55,6,66,21,"updateZoneProgress"],[56,4,66,40],[56,5,66,41],[56,8,66,44],[56,12,66,44,"useGame"],[56,24,66,51],[56,25,66,51,"useGame"],[56,32,66,51],[56,34,66,52],[56,35,66,53],[58,4,68,2],[59,4,69,2],[59,10,69,8],[59,11,69,9,"currentZone"],[59,22,69,20],[59,24,69,22,"setCurrentZone"],[59,38,69,36],[59,39,69,37],[59,42,69,40],[59,46,69,40,"useState"],[59,52,69,48],[59,53,69,48,"useState"],[59,61,69,48],[59,63,69,62],[59,69,69,68],[60,6,70,4,"console"],[60,13,70,11],[60,14,70,12,"log"],[60,17,70,15],[60,18,70,16],[60,92,70,90],[60,93,70,91],[61,6,71,4],[61,13,71,11,"ZONES"],[61,26,71,16],[61,27,71,16,"ZONES"],[61,32,71,16],[61,33,71,17],[61,34,71,18],[61,35,71,19],[62,4,72,2],[62,5,72,3],[62,6,72,4],[62,7,72,5],[62,8,72,6],[63,4,73,2],[63,10,73,8],[63,11,73,9,"currentZoneLevel"],[63,27,73,25],[63,29,73,27,"setCurrentZoneLevel"],[63,48,73,46],[63,49,73,47],[63,52,73,50],[63,56,73,50,"useState"],[63,62,73,58],[63,63,73,58,"useState"],[63,71,73,58],[63,73,73,77],[63,79,73,83],[64,6,74,4,"console"],[64,13,74,11],[64,14,74,12,"log"],[64,17,74,15],[64,18,74,16],[64,81,74,79],[64,82,74,80],[65,6,75,4],[65,13,75,11,"ZONES"],[65,26,75,16],[65,27,75,16,"ZONES"],[65,32,75,16],[65,33,75,17],[65,34,75,18],[65,35,75,19],[65,37,75,21,"levels"],[65,43,75,27],[65,44,75,28],[65,45,75,29],[65,46,75,30],[65,50,75,34],[65,54,75,38],[66,4,76,2],[66,5,76,3],[66,6,76,4],[67,4,77,2],[67,10,77,8],[67,11,77,9,"progressionZone"],[67,26,77,24],[67,28,77,26,"setProgressionZone"],[67,46,77,44],[67,47,77,45],[67,50,77,48],[67,54,77,48,"useState"],[67,60,77,56],[67,61,77,56,"useState"],[67,69,77,56],[67,71,77,70],[67,77,77,76],[68,6,78,4,"console"],[68,13,78,11],[68,14,78,12,"log"],[68,17,78,15],[68,18,78,16],[68,90,78,88],[68,91,78,89],[69,6,79,4],[69,13,79,11,"ZONES"],[69,26,79,16],[69,27,79,16,"ZONES"],[69,32,79,16],[69,33,79,17],[69,34,79,18],[69,35,79,19],[70,4,80,2],[70,5,80,3],[70,6,80,4],[70,7,80,5],[70,8,80,6],[71,4,81,2],[71,10,81,8],[71,11,81,9,"zoneProgress"],[71,23,81,21],[71,25,81,23,"setZoneProgress"],[71,40,81,38],[71,41,81,39],[71,44,81,42],[71,48,81,42,"useState"],[71,54,81,50],[71,55,81,50,"useState"],[71,63,81,50],[71,65,81,81],[71,71,81,87],[72,6,82,4],[73,6,83,4],[73,12,83,10,"savedProgress"],[73,25,83,23],[73,28,83,26,"gameState"],[73,37,83,35],[73,39,83,37,"zoneProgress"],[73,51,83,49],[74,6,84,4],[74,10,84,8,"savedProgress"],[74,23,84,21],[74,27,84,25,"Object"],[74,33,84,31],[74,34,84,32,"keys"],[74,38,84,36],[74,39,84,37,"savedProgress"],[74,52,84,50],[74,53,84,51],[74,54,84,52,"length"],[74,60,84,58],[74,63,84,61],[74,64,84,62],[74,66,84,64],[75,8,85,6,"console"],[75,15,85,13],[75,16,85,14,"log"],[75,19,85,17],[75,20,85,18],[75,54,85,52],[75,56,85,54,"savedProgress"],[75,69,85,67],[75,70,85,68],[76,8,86,6],[76,15,86,13,"savedProgress"],[76,28,86,26],[77,6,87,4],[77,7,87,5],[77,13,87,11],[78,8,88,6,"console"],[78,15,88,13],[78,16,88,14,"log"],[78,19,88,17],[78,20,88,18],[78,64,88,62],[78,65,88,63],[79,8,89,6],[79,15,89,13],[80,10,89,15],[80,11,89,16],[80,13,89,18],[81,12,89,20,"zoneId"],[81,18,89,26],[81,20,89,28],[81,21,89,29],[82,12,89,31,"currentLevel"],[82,24,89,43],[82,26,89,45],[82,27,89,46],[83,12,89,48,"killsInLevel"],[83,24,89,60],[83,26,89,62],[83,27,89,63],[84,12,89,65,"completed"],[84,21,89,74],[84,23,89,76],[85,10,89,82],[86,8,89,84],[86,9,89,85],[87,6,90,4],[88,4,91,2],[88,5,91,3],[88,6,91,4],[90,4,93,2],[91,4,94,2],[91,8,94,2,"useEffect"],[91,14,94,11],[91,15,94,11,"useEffect"],[91,24,94,11],[91,26,94,12],[91,32,94,18],[92,6,95,4],[92,10,95,8,"gameState"],[92,19,95,17],[92,21,95,19,"zoneProgress"],[92,33,95,31],[92,35,95,33],[93,8,96,6,"console"],[93,15,96,13],[93,16,96,14,"log"],[93,19,96,17],[93,20,96,18],[93,79,96,77],[93,81,96,79,"gameState"],[93,90,96,88],[93,91,96,89,"zoneProgress"],[93,103,96,101],[93,104,96,102],[94,8,97,6,"setZoneProgress"],[94,23,97,21],[94,24,97,22,"gameState"],[94,33,97,31],[94,34,97,32,"zoneProgress"],[94,46,97,44],[94,47,97,45],[96,8,99,6],[97,8,100,6],[97,14,100,12,"progressEntries"],[97,29,100,27],[97,32,100,30,"Object"],[97,38,100,36],[97,39,100,37,"values"],[97,45,100,43],[97,46,100,44,"gameState"],[97,55,100,53],[97,56,100,54,"zoneProgress"],[97,68,100,66],[97,72,100,70],[97,73,100,71],[97,74,100,72],[97,75,100,73],[98,8,101,6],[98,12,101,10,"highestZone"],[98,23,101,21],[98,26,101,24,"ZONES"],[98,39,101,29],[98,40,101,29,"ZONES"],[98,45,101,29],[98,46,101,30],[98,47,101,31],[98,48,101,32],[99,8,102,6],[99,12,102,10,"highestLevel"],[99,24,102,22],[99,27,102,25,"ZONES"],[99,40,102,30],[99,41,102,30,"ZONES"],[99,46,102,30],[99,47,102,31],[99,48,102,32],[99,49,102,33],[99,51,102,35,"levels"],[99,57,102,41],[99,58,102,42],[99,59,102,43],[99,60,102,44],[100,8,104,6],[100,13,104,11],[100,19,104,17,"progress"],[100,27,104,25],[100,31,104,29,"progressEntries"],[100,46,104,44],[100,48,104,46],[101,10,105,8],[101,14,105,12,"progress"],[101,22,105,20],[101,26,105,24,"progress"],[101,34,105,32],[101,35,105,33,"zoneId"],[101,41,105,39],[101,43,105,41],[102,12,106,10],[102,18,106,16,"zone"],[102,22,106,20],[102,25,106,23,"ZONES"],[102,38,106,28],[102,39,106,28,"ZONES"],[102,44,106,28],[102,45,106,29,"find"],[102,49,106,33],[102,50,106,34,"z"],[102,51,106,35],[102,55,106,39,"z"],[102,56,106,40],[102,57,106,41,"id"],[102,59,106,43],[102,64,106,48,"progress"],[102,72,106,56],[102,73,106,57,"zoneId"],[102,79,106,63],[102,80,106,64],[103,12,107,10],[103,16,107,14,"zone"],[103,20,107,18],[103,22,107,20],[104,14,108,12,"highestZone"],[104,25,108,23],[104,28,108,26,"zone"],[104,32,108,30],[105,14,109,12,"highestLevel"],[105,26,109,24],[105,29,109,27,"zone"],[105,33,109,31],[105,34,109,32,"levels"],[105,40,109,38],[105,41,109,39],[105,42,109,40,"progress"],[105,50,109,48],[105,51,109,49,"currentLevel"],[105,63,109,61],[105,67,109,65],[105,68,109,66],[105,72,109,70],[105,73,109,71],[105,74,109,72],[106,12,110,10],[107,10,111,8],[108,8,112,6],[109,8,114,6,"console"],[109,15,114,13],[109,16,114,14,"log"],[109,19,114,17],[109,20,114,18],[109,53,114,51,"highestZone"],[109,64,114,62],[109,65,114,63,"id"],[109,67,114,65],[109,77,114,75,"highestLevel"],[109,89,114,87],[109,91,114,89,"level"],[109,96,114,94],[109,100,114,98],[109,101,114,99],[109,122,114,120],[109,123,114,121],[110,8,115,6,"setProgressionZone"],[110,26,115,24],[110,27,115,25,"highestZone"],[110,38,115,36],[110,39,115,37],[112,8,117,6],[113,8,118,6,"console"],[113,15,118,13],[113,16,118,14,"log"],[113,19,118,17],[113,20,118,18],[113,58,118,56,"highestZone"],[113,69,118,67],[113,70,118,68,"id"],[113,72,118,70],[113,82,118,80,"highestLevel"],[113,94,118,92],[113,96,118,94,"level"],[113,101,118,99],[113,105,118,103],[113,106,118,104],[113,131,118,129],[113,132,118,130],[114,8,119,6,"setCurrentZone"],[114,22,119,20],[114,23,119,21,"highestZone"],[114,34,119,32],[114,35,119,33],[115,8,120,6,"setCurrentZoneLevel"],[115,27,120,25],[115,28,120,26,"highestLevel"],[115,40,120,38],[115,44,120,42,"ZONES"],[115,57,120,47],[115,58,120,47,"ZONES"],[115,63,120,47],[115,64,120,48],[115,65,120,49],[115,66,120,50],[115,68,120,52,"levels"],[115,74,120,58],[115,75,120,59],[115,76,120,60],[115,77,120,61],[115,78,120,62],[116,6,121,4],[117,4,122,2],[117,5,122,3],[117,7,122,5],[117,8,122,6,"gameState"],[117,17,122,15],[117,19,122,17,"zoneProgress"],[117,31,122,29],[117,32,122,30],[117,33,122,31],[119,4,124,2],[120,4,125,2],[120,8,125,2,"useEffect"],[120,14,125,11],[120,15,125,11,"useEffect"],[120,24,125,11],[120,26,125,12],[120,32,125,18],[121,6,126,4],[121,10,126,8,"gameState"],[121,19,126,17],[121,21,126,19,"ninja"],[121,26,126,24],[121,28,126,26],[122,8,127,6],[122,14,127,12,"recommendedZone"],[122,29,127,27],[122,32,127,30],[122,36,127,30,"getZoneByLevel"],[122,49,127,44],[122,50,127,44,"getZoneByLevel"],[122,64,127,44],[122,66,127,45,"gameState"],[122,75,127,54],[122,76,127,55,"ninja"],[122,81,127,60],[122,82,127,61,"level"],[122,87,127,66],[122,88,127,67],[123,8,128,6],[123,12,128,10,"recommendedZone"],[123,27,128,25],[123,31,128,29],[123,32,128,30,"currentZone"],[123,43,128,41],[123,45,128,43],[124,10,129,8,"setCurrentZone"],[124,24,129,22],[124,25,129,23,"recommendedZone"],[124,40,129,38],[124,41,129,39],[125,10,130,8,"setCurrentZoneLevel"],[125,29,130,27],[125,30,130,28,"recommendedZone"],[125,45,130,43],[125,46,130,44,"levels"],[125,52,130,50],[125,53,130,51],[125,54,130,52],[125,55,130,53],[125,56,130,54],[126,8,131,6],[127,6,132,4],[128,4,133,2],[128,5,133,3],[128,7,133,5],[128,8,133,6,"gameState"],[128,17,133,15],[128,19,133,17,"ninja"],[128,24,133,22],[128,26,133,24,"level"],[128,31,133,29],[128,32,133,30],[128,33,133,31],[130,4,135,2],[131,4,136,2],[131,10,136,8,"selectZone"],[131,20,136,18],[131,23,136,21,"selectZone"],[131,24,136,22,"zoneId"],[131,30,136,36],[131,32,136,38,"levelNumber"],[131,43,136,57],[131,48,136,71],[132,6,137,4],[132,10,137,8],[132,11,137,9,"isZoneUnlockedLocal"],[132,30,137,28],[132,31,137,29,"zoneId"],[132,37,137,35],[132,38,137,36],[132,40,137,38],[133,8,138,6,"console"],[133,15,138,13],[133,16,138,14,"log"],[133,19,138,17],[133,20,138,18],[133,30,138,28,"zoneId"],[133,36,138,34],[133,54,138,52],[133,55,138,53],[134,8,139,6],[134,15,139,13],[134,20,139,18],[135,6,140,4],[136,6,142,4],[136,12,142,10,"zone"],[136,16,142,14],[136,19,142,17,"ZONES"],[136,32,142,22],[136,33,142,22,"ZONES"],[136,38,142,22],[136,39,142,23,"find"],[136,43,142,27],[136,44,142,28,"z"],[136,45,142,29],[136,49,142,33,"z"],[136,50,142,34],[136,51,142,35,"id"],[136,53,142,37],[136,58,142,42,"zoneId"],[136,64,142,48],[136,65,142,49],[137,6,143,4],[137,10,143,8],[137,11,143,9,"zone"],[137,15,143,13],[137,17,143,15],[138,8,144,6,"console"],[138,15,144,13],[138,16,144,14,"log"],[138,19,144,17],[138,20,144,18],[138,30,144,28,"zoneId"],[138,36,144,34],[138,48,144,46],[138,49,144,47],[139,8,145,6],[139,15,145,13],[139,20,145,18],[140,6,146,4],[141,6,148,4],[141,12,148,10,"level"],[141,17,148,15],[141,20,148,18,"zone"],[141,24,148,22],[141,25,148,23,"levels"],[141,31,148,29],[141,32,148,30,"levelNumber"],[141,43,148,41],[141,46,148,44],[141,47,148,45],[141,48,148,46],[142,6,149,4],[142,10,149,8],[142,11,149,9,"level"],[142,16,149,14],[142,18,149,16],[143,8,150,6,"console"],[143,15,150,13],[143,16,150,14,"log"],[143,19,150,17],[143,20,150,18],[143,30,150,28,"zoneId"],[143,36,150,34],[143,46,150,44,"levelNumber"],[143,57,150,55],[143,69,150,67],[143,70,150,68],[144,8,151,6],[144,15,151,13],[144,20,151,18],[145,6,152,4],[146,6,154,4,"console"],[146,13,154,11],[146,14,154,12,"log"],[146,17,154,15],[146,18,154,16],[146,68,154,66,"zoneId"],[146,74,154,72],[146,84,154,82,"levelNumber"],[146,95,154,93],[146,100,154,98,"zone"],[146,104,154,102],[146,105,154,103,"name"],[146,109,154,107],[146,112,154,110],[146,113,154,111],[147,6,155,4,"console"],[147,13,155,11],[147,14,155,12,"log"],[147,17,155,15],[147,18,155,16],[147,44,155,42,"currentZone"],[147,55,155,53],[147,57,155,55,"id"],[147,59,155,57],[147,77,155,75,"currentZoneLevel"],[147,93,155,91],[147,95,155,93,"level"],[147,100,155,98],[147,102,155,100],[147,103,155,101],[148,6,157,4,"setCurrentZone"],[148,20,157,18],[148,21,157,19,"zone"],[148,25,157,23],[148,26,157,24],[149,6,158,4,"setCurrentZoneLevel"],[149,25,158,23],[149,26,158,24,"level"],[149,31,158,29],[149,32,158,30],[150,6,160,4,"console"],[150,13,160,11],[150,14,160,12,"log"],[150,17,160,15],[150,18,160,16],[150,45,160,43,"zoneId"],[150,51,160,49],[150,61,160,59,"levelNumber"],[150,72,160,70],[150,110,160,108],[150,111,160,109],[151,6,161,4],[151,13,161,11],[151,17,161,15],[152,4,162,2],[152,5,162,3],[154,4,164,2],[155,4,165,2],[155,10,165,8,"getZoneProgress"],[155,25,165,23],[155,28,165,27,"zoneId"],[155,34,165,41],[155,38,165,67],[156,6,166,4],[156,13,166,11,"zoneProgress"],[156,25,166,23],[156,26,166,24,"zoneId"],[156,32,166,30],[156,33,166,31],[156,37,166,35],[156,41,166,39],[157,4,167,2],[157,5,167,3],[159,4,169,2],[160,4,170,2],[160,10,170,8,"spawnZoneEnemy"],[160,24,170,22],[160,27,170,25,"spawnZoneEnemy"],[160,28,170,25],[160,33,170,52],[161,6,171,4],[161,10,171,8],[161,11,171,9,"currentZone"],[161,22,171,20],[161,26,171,24],[161,27,171,25,"currentZoneLevel"],[161,43,171,41],[161,45,171,43],[162,8,172,6,"console"],[162,15,172,13],[162,16,172,14,"log"],[162,19,172,17],[162,20,172,18],[162,65,172,63],[162,66,172,64],[163,8,173,6],[163,15,173,13],[163,19,173,17],[164,6,174,4],[166,6,176,4],[167,6,177,4],[167,12,177,10,"enemyTypeIds"],[167,24,177,22],[167,27,177,25,"currentZoneLevel"],[167,43,177,41],[167,44,177,42,"enemyTypes"],[167,54,177,52],[168,6,178,4],[168,12,178,10,"randomEnemyTypeId"],[168,29,178,27],[168,32,178,30,"enemyTypeIds"],[168,44,178,42],[168,45,178,43,"Math"],[168,49,178,47],[168,50,178,48,"floor"],[168,55,178,53],[168,56,178,54,"Math"],[168,60,178,58],[168,61,178,59,"random"],[168,67,178,65],[168,68,178,66],[168,69,178,67],[168,72,178,70,"enemyTypeIds"],[168,84,178,82],[168,85,178,83,"length"],[168,91,178,89],[168,92,178,90],[168,93,178,91],[169,6,179,4],[169,12,179,10,"enemyType"],[169,21,179,19],[169,24,179,22,"ENEMY_TYPES"],[169,37,179,33],[169,38,179,33,"ENEMY_TYPES"],[169,49,179,33],[169,50,179,34,"randomEnemyTypeId"],[169,67,179,51],[169,68,179,52],[170,6,181,4],[170,10,181,8],[170,11,181,9,"enemyType"],[170,20,181,18],[170,22,181,20],[171,8,182,6,"console"],[171,15,182,13],[171,16,182,14,"log"],[171,19,182,17],[171,20,182,18],[171,36,182,34,"randomEnemyTypeId"],[171,53,182,51],[171,65,182,63],[171,66,182,64],[172,8,183,6],[172,15,183,13],[172,19,183,17],[173,6,184,4],[175,6,186,4],[176,6,187,4],[176,12,187,10,"scaledStats"],[176,23,187,21],[176,26,187,24],[176,30,187,24,"calculateEnemyStats"],[176,43,187,43],[176,44,187,43,"calculateEnemyStats"],[176,63,187,43],[176,65,187,44,"enemyType"],[176,74,187,53],[176,76,187,55,"currentZoneLevel"],[176,92,187,71],[176,94,187,73,"currentZone"],[176,105,187,84],[176,106,187,85,"id"],[176,108,187,87],[176,109,187,88],[178,6,189,4],[179,6,190,4],[179,12,190,10,"enemy"],[179,17,190,29],[179,20,190,32],[180,8,191,6,"id"],[180,10,191,8],[180,12,191,10],[180,15,191,13,"randomEnemyTypeId"],[180,32,191,30],[180,36,191,34,"Date"],[180,40,191,38],[180,41,191,39,"now"],[180,44,191,42],[180,45,191,43],[180,46,191,44],[180,50,191,48,"Math"],[180,54,191,52],[180,55,191,53,"random"],[180,61,191,59],[180,62,191,60],[180,63,191,61],[180,65,191,63],[181,8,192,6,"typeId"],[181,14,192,12],[181,16,192,14,"randomEnemyTypeId"],[181,33,192,31],[182,8,193,6,"name"],[182,12,193,10],[182,14,193,12,"enemyType"],[182,23,193,21],[182,24,193,22,"name"],[182,28,193,26],[183,8,194,6,"icon"],[183,12,194,10],[183,14,194,12,"enemyType"],[183,23,194,21],[183,24,194,22,"icon"],[183,28,194,26],[184,8,195,6,"hp"],[184,10,195,8],[184,12,195,10,"scaledStats"],[184,23,195,21],[184,24,195,22,"hp"],[184,26,195,24],[185,8,196,6,"maxHP"],[185,13,196,11],[185,15,196,13,"scaledStats"],[185,26,196,24],[185,27,196,25,"hp"],[185,29,196,27],[186,8,197,6,"attack"],[186,14,197,12],[186,16,197,14,"scaledStats"],[186,27,197,25],[186,28,197,26,"attack"],[186,34,197,32],[187,8,198,6,"xp"],[187,10,198,8],[187,12,198,10,"scaledStats"],[187,23,198,21],[187,24,198,22,"xp"],[187,26,198,24],[188,8,199,6,"resistances"],[188,19,199,17],[188,21,199,19,"scaledStats"],[188,32,199,30],[188,33,199,31,"resistances"],[188,44,199,42],[189,8,200,6,"position"],[189,16,200,14],[189,18,200,16],[190,10,201,8,"x"],[190,11,201,9],[190,13,201,11,"Math"],[190,17,201,15],[190,18,201,16,"random"],[190,24,201,22],[190,25,201,23],[190,26,201,24],[190,29,201,27],[190,32,201,30],[190,35,201,33],[190,37,201,35],[191,10,201,37],[192,10,202,8,"y"],[192,11,202,9],[192,13,202,11,"Math"],[192,17,202,15],[192,18,202,16,"random"],[192,24,202,22],[192,25,202,23],[192,26,202,24],[192,29,202,27],[192,32,202,30],[192,35,202,33],[193,8,203,6],[193,9,203,7],[194,8,204,6,"lastDamaged"],[194,19,204,17],[194,21,204,19],[195,6,205,4],[195,7,205,5],[196,6,207,4,"console"],[196,13,207,11],[196,14,207,12,"log"],[196,17,207,15],[196,18,207,16],[196,32,207,30,"enemy"],[196,37,207,35],[196,38,207,36,"name"],[196,42,207,40],[196,47,207,45,"enemy"],[196,52,207,50],[196,53,207,51,"hp"],[196,55,207,53],[196,63,207,61,"enemy"],[196,68,207,66],[196,69,207,67,"xp"],[196,71,207,69],[196,82,207,80,"currentZone"],[196,93,207,91],[196,94,207,92,"name"],[196,98,207,96],[196,100,207,98],[196,101,207,99],[197,6,208,4],[197,13,208,11,"enemy"],[197,18,208,16],[198,4,209,2],[198,5,209,3],[200,4,211,2],[201,4,212,2],[201,10,212,8,"recordEnemyKill"],[201,25,212,23],[201,28,212,27,"enemy"],[201,33,212,46],[201,37,212,51],[202,6,213,4],[202,10,213,8],[202,11,213,9,"currentZone"],[202,22,213,20],[202,26,213,24],[202,27,213,25,"currentZoneLevel"],[202,43,213,41],[202,45,213,43],[203,6,215,4,"console"],[203,13,215,11],[203,14,215,12,"log"],[203,17,215,15],[203,18,215,16],[203,24,215,22,"enemy"],[203,29,215,27],[203,30,215,28,"name"],[203,34,215,32],[203,47,215,45,"enemy"],[203,52,215,50],[203,53,215,51,"xp"],[203,55,215,53],[203,60,215,58],[203,61,215,59],[204,6,216,4,"console"],[204,13,216,11],[204,14,216,12,"log"],[204,17,216,15],[204,18,216,16],[204,72,216,70,"currentZone"],[204,83,216,81],[204,84,216,82,"id"],[204,86,216,84],[204,96,216,94,"currentZoneLevel"],[204,112,216,110],[204,113,216,111,"level"],[204,118,216,116],[204,120,216,118],[204,121,216,119],[205,6,218,4,"setZoneProgress"],[205,21,218,19],[205,22,218,20,"prev"],[205,26,218,24],[205,30,218,28],[206,8,219,6],[206,14,219,12,"newProgress"],[206,25,219,23],[206,28,219,23,"Object"],[206,34,219,23],[206,35,219,23,"assign"],[206,41,219,23],[206,46,219,31,"prev"],[206,50,219,35],[206,51,219,37],[207,8,220,6],[207,14,220,12,"zoneId"],[207,20,220,18],[207,23,220,21,"currentZone"],[207,34,220,32],[207,35,220,33,"id"],[207,37,220,35],[208,8,222,6],[208,12,222,10],[208,13,222,11,"newProgress"],[208,24,222,22],[208,25,222,23,"zoneId"],[208,31,222,29],[208,32,222,30],[208,34,222,32],[209,10,223,8,"newProgress"],[209,21,223,19],[209,22,223,20,"zoneId"],[209,28,223,26],[209,29,223,27],[209,32,223,30],[210,12,224,10,"zoneId"],[210,18,224,16],[211,12,225,10,"currentLevel"],[211,24,225,22],[211,26,225,24],[211,27,225,25],[212,12,226,10,"killsInLevel"],[212,24,226,22],[212,26,226,24],[212,27,226,25],[213,12,227,10,"completed"],[213,21,227,19],[213,23,227,21],[214,10,228,8],[214,11,228,9],[215,8,229,6],[216,8,231,6],[216,14,231,12,"progress"],[216,22,231,20],[216,25,231,20,"Object"],[216,31,231,20],[216,32,231,20,"assign"],[216,38,231,20],[216,43,231,28,"newProgress"],[216,54,231,39],[216,55,231,40,"zoneId"],[216,61,231,46],[216,62,231,47],[216,63,231,49],[218,8,233,6],[219,8,234,6],[219,14,234,12,"currentZoneLevel"],[219,30,234,28],[219,33,234,31,"currentZone"],[219,44,234,42],[219,45,234,43,"levels"],[219,51,234,49],[219,52,234,50,"progress"],[219,60,234,58],[219,61,234,59,"currentLevel"],[219,73,234,71],[219,76,234,74],[219,77,234,75],[219,78,234,76],[220,8,235,6],[220,14,235,12,"requiredKills"],[220,27,235,25],[220,30,235,28,"currentZoneLevel"],[220,46,235,44],[220,49,235,47,"currentZoneLevel"],[220,65,235,63],[220,66,235,64,"requiredKills"],[220,79,235,77],[220,82,235,80,"calculateKillRequirement"],[220,106,235,104],[220,107,235,105,"zoneId"],[220,113,235,111],[220,115,235,113,"progress"],[220,123,235,121],[220,124,235,122,"currentLevel"],[220,136,235,134],[220,137,235,135],[222,8,237,6],[223,8,238,6],[223,14,238,12,"willCompleteLevel"],[223,31,238,29],[223,34,238,33,"progress"],[223,42,238,41],[223,43,238,42,"killsInLevel"],[223,55,238,54],[223,58,238,57],[223,59,238,58],[223,63,238,63,"requiredKills"],[223,76,238,76],[224,8,240,6],[224,12,240,10,"willCompleteLevel"],[224,29,240,27],[224,31,240,29],[225,10,241,8,"console"],[225,17,241,15],[225,18,241,16,"log"],[225,21,241,19],[225,22,241,20],[225,34,241,32,"progress"],[225,42,241,40],[225,43,241,41,"currentLevel"],[225,55,241,53],[225,72,241,70,"currentZone"],[225,83,241,81],[225,84,241,82,"name"],[225,88,241,86],[225,91,241,89],[225,92,241,90],[227,10,243,8],[228,10,244,8,"progress"],[228,18,244,16],[228,19,244,17,"killsInLevel"],[228,31,244,29],[228,34,244,32,"requiredKills"],[228,47,244,45],[229,10,246,8,"console"],[229,17,246,15],[229,18,246,16,"log"],[229,21,246,19],[229,22,246,20],[229,33,246,31,"zoneId"],[229,39,246,37],[229,49,246,47,"progress"],[229,57,246,55],[229,58,246,56,"currentLevel"],[229,70,246,68],[229,75,246,73,"progress"],[229,83,246,81],[229,84,246,82,"killsInLevel"],[229,96,246,94],[229,100,246,98,"requiredKills"],[229,113,246,111],[229,133,246,131],[229,134,246,132],[230,8,247,6],[230,9,247,7],[230,15,247,13],[231,10,248,8],[232,10,249,8,"progress"],[232,18,249,16],[232,19,249,17,"killsInLevel"],[232,31,249,29],[232,35,249,33],[232,36,249,34],[233,10,250,8,"console"],[233,17,250,15],[233,18,250,16,"log"],[233,21,250,19],[233,22,250,20],[233,33,250,31,"zoneId"],[233,39,250,37],[233,49,250,47,"progress"],[233,57,250,55],[233,58,250,56,"currentLevel"],[233,70,250,68],[233,75,250,73,"progress"],[233,83,250,81],[233,84,250,82,"killsInLevel"],[233,96,250,94],[233,100,250,98,"requiredKills"],[233,113,250,111],[233,121,250,119],[233,122,250,120],[234,8,251,6],[236,8,253,6],[237,8,254,6],[237,12,254,10,"willCompleteLevel"],[237,29,254,27],[237,31,254,29],[238,10,255,8,"console"],[238,17,255,15],[238,18,255,16,"log"],[238,21,255,19],[238,22,255,20],[238,34,255,32,"progress"],[238,42,255,40],[238,43,255,41,"currentLevel"],[238,55,255,53],[238,72,255,70,"currentZone"],[238,83,255,81],[238,84,255,82,"name"],[238,88,255,86],[238,91,255,89],[238,92,255,90],[240,10,257,8],[241,10,258,8],[241,14,258,12,"progress"],[241,22,258,20],[241,23,258,21,"currentLevel"],[241,35,258,33],[241,38,258,36],[241,39,258,37],[241,41,258,39],[242,12,259,10,"progress"],[242,20,259,18],[242,21,259,19,"currentLevel"],[242,33,259,31],[242,37,259,35],[242,38,259,36],[243,12,260,10,"progress"],[243,20,260,18],[243,21,260,19,"killsInLevel"],[243,33,260,31],[243,36,260,34],[243,37,260,35],[244,12,261,10,"console"],[244,19,261,17],[244,20,261,18,"log"],[244,23,261,21],[244,24,261,22],[244,61,261,59,"progress"],[244,69,261,67],[244,70,261,68,"currentLevel"],[244,82,261,80],[244,122,261,120],[244,123,261,121],[246,12,263,10],[247,12,264,10],[248,12,265,10],[248,18,265,16,"nextLevel"],[248,27,265,25],[248,30,265,28,"currentZone"],[248,41,265,39],[248,42,265,40,"levels"],[248,48,265,46],[248,49,265,47,"progress"],[248,57,265,55],[248,58,265,56,"currentLevel"],[248,70,265,68],[248,73,265,71],[248,74,265,72],[248,75,265,73],[249,12,266,10],[249,16,266,14,"nextLevel"],[249,25,266,23],[249,29,266,27,"currentZone"],[249,40,266,38],[249,45,266,43,"progressionZone"],[249,60,266,58],[249,62,266,60],[250,14,267,12],[251,14,268,12,"console"],[251,21,268,19],[251,22,268,20,"log"],[251,25,268,23],[251,26,268,24],[251,100,268,98],[251,101,268,99],[252,14,269,12,"setCurrentZoneLevel"],[252,33,269,31],[252,34,269,32,"nextLevel"],[252,43,269,41],[252,44,269,42],[253,14,270,12,"setProgressionZone"],[253,32,270,30],[253,33,270,31,"currentZone"],[253,44,270,42],[253,45,270,43],[253,46,270,44],[253,47,270,45],[254,12,271,10],[254,13,271,11],[254,19,271,17],[255,14,272,12,"console"],[255,21,272,19],[255,22,272,20,"log"],[255,25,272,23],[255,26,272,24],[255,104,272,102],[255,105,272,103],[256,12,273,10],[257,10,274,8],[257,11,274,9],[257,17,274,15],[258,12,275,10],[259,12,276,10,"progress"],[259,20,276,18],[259,21,276,19,"completed"],[259,30,276,28],[259,33,276,31],[259,37,276,35],[260,12,277,10,"console"],[260,19,277,17],[260,20,277,18,"log"],[260,23,277,21],[260,24,277,22],[260,35,277,33,"currentZone"],[260,46,277,44],[260,47,277,45,"name"],[260,51,277,49],[260,84,277,82],[260,85,277,83],[261,10,278,8],[262,8,279,6],[263,8,281,6,"newProgress"],[263,19,281,17],[263,20,281,18,"zoneId"],[263,26,281,24],[263,27,281,25],[263,30,281,28,"progress"],[263,38,281,36],[265,8,283,6],[266,8,284,6,"setTimeout"],[266,18,284,16],[266,19,284,17],[266,25,284,23],[267,10,285,8,"console"],[267,17,285,15],[267,18,285,16,"log"],[267,21,285,19],[267,22,285,20],[267,67,285,65],[267,69,285,67,"newProgress"],[267,80,285,78],[267,81,285,79],[268,10,286,8,"updateZoneProgress"],[268,28,286,26],[268,29,286,27,"newProgress"],[268,40,286,38],[268,41,286,39],[269,8,287,6],[269,9,287,7],[269,11,287,9],[269,12,287,10],[269,13,287,11],[269,14,287,12],[269,15,287,13],[271,8,289,6],[271,15,289,13,"newProgress"],[271,26,289,24],[272,6,290,4],[272,7,290,5],[272,8,290,6],[273,4,291,2],[273,5,291,3],[275,4,293,2],[276,4,294,2],[276,10,294,8,"isZoneUnlockedLocal"],[276,29,294,27],[276,32,294,31,"zoneId"],[276,38,294,45],[276,42,294,59],[277,6,295,4],[277,10,295,8,"zoneId"],[277,16,295,14],[277,21,295,19],[277,22,295,20],[277,24,295,22],[277,31,295,29],[277,35,295,33],[277,36,295,34],[277,37,295,35],[279,6,297,4],[279,12,297,10,"zone"],[279,16,297,14],[279,19,297,17,"ZONES"],[279,32,297,22],[279,33,297,22,"ZONES"],[279,38,297,22],[279,39,297,23,"find"],[279,43,297,27],[279,44,297,28,"z"],[279,45,297,29],[279,49,297,33,"z"],[279,50,297,34],[279,51,297,35,"id"],[279,53,297,37],[279,58,297,42,"zoneId"],[279,64,297,48],[279,65,297,49],[280,6,298,4],[280,10,298,8],[280,11,298,9,"zone"],[280,15,298,13],[280,17,298,15,"unlockRequirement"],[280,34,298,32],[280,35,298,33,"previousZone"],[280,47,298,45],[280,49,298,47],[280,56,298,54],[280,60,298,58],[281,6,300,4],[281,12,300,10,"prevZoneProgress"],[281,28,300,26],[281,31,300,29,"zoneProgress"],[281,43,300,41],[281,44,300,42,"zone"],[281,48,300,46],[281,49,300,47,"unlockRequirement"],[281,66,300,64],[281,67,300,65,"previousZone"],[281,79,300,77],[281,80,300,78],[282,6,301,4],[282,13,301,11,"prevZoneProgress"],[282,29,301,27],[282,31,301,29,"completed"],[282,40,301,38],[282,44,301,42],[282,49,301,47],[283,4,302,2],[283,5,302,3],[285,4,304,2],[286,4,305,2],[286,10,305,8,"getUnlockedZones"],[286,26,305,24],[286,29,305,27,"getUnlockedZones"],[286,30,305,27],[286,35,305,41],[287,6,306,4],[287,13,306,11,"ZONES"],[287,26,306,16],[287,27,306,16,"ZONES"],[287,32,306,16],[287,33,306,17,"filter"],[287,39,306,23],[287,40,306,24,"zone"],[287,44,306,28],[287,48,306,32,"isZoneUnlockedLocal"],[287,67,306,51],[287,68,306,52,"zone"],[287,72,306,56],[287,73,306,57,"id"],[287,75,306,59],[287,76,306,60],[287,77,306,61],[288,4,307,2],[288,5,307,3],[289,4,309,2],[289,10,309,8,"contextValue"],[289,22,309,37],[289,25,309,40,"React"],[289,30,309,45],[289,31,309,45,"default"],[289,38,309,45],[289,39,309,46,"useMemo"],[289,46,309,53],[289,47,309,54],[289,54,309,61],[290,6,310,4,"currentZone"],[290,17,310,15],[291,6,310,17],[292,6,311,4,"currentZoneLevel"],[292,22,311,20],[293,6,312,4,"progressionZone"],[293,21,312,19],[294,6,312,21],[295,6,313,4,"zoneProgress"],[295,18,313,16],[296,6,314,4,"availableZones"],[296,20,314,18],[296,22,314,20,"ZONES"],[296,35,314,25],[296,36,314,25,"ZONES"],[296,41,314,25],[297,6,315,4,"selectZone"],[297,16,315,14],[298,6,316,4,"getZoneProgress"],[298,21,316,19],[299,6,317,4,"spawnZoneEnemy"],[299,20,317,18],[300,6,318,4,"recordEnemyKill"],[300,21,318,19],[301,6,319,4,"isZoneUnlocked"],[301,20,319,18],[301,22,319,20,"isZoneUnlockedLocal"],[301,41,319,39],[302,6,320,4,"getUnlockedZones"],[303,4,321,2],[303,5,321,3],[303,6,321,4],[303,8,321,6],[303,9,322,4,"currentZone"],[303,20,322,15],[303,22,323,4,"currentZoneLevel"],[303,38,323,20],[303,40,324,4,"progressionZone"],[303,55,324,19],[303,57,325,4,"zoneProgress"],[303,69,325,16],[303,71,326,4,"selectZone"],[303,81,326,14],[303,83,327,4,"getZoneProgress"],[303,98,327,19],[303,100,328,4,"spawnZoneEnemy"],[303,114,328,18],[303,116,329,4,"recordEnemyKill"],[303,131,329,19],[303,133,330,4,"isZoneUnlockedLocal"],[303,152,330,23],[303,154,331,4,"getUnlockedZones"],[303,170,331,20],[303,171,332,3],[303,172,332,4],[304,4,334,2],[304,24,335,4],[304,28,335,4,"_reactJsxDevRuntime"],[304,47,335,4],[304,48,335,4,"jsxDEV"],[304,54,335,4],[304,56,335,5,"ZoneContext"],[304,67,335,16],[304,68,335,17,"Provider"],[304,76,335,25],[305,6,335,26,"value"],[305,11,335,31],[305,13,335,33,"contextValue"],[305,25,335,46],[306,6,335,46,"children"],[306,14,335,46],[306,16,336,7,"children"],[307,4,336,15],[308,6,336,15,"fileName"],[308,14,336,15],[308,16,336,15,"_jsxFileName"],[308,28,336,15],[309,6,336,15,"lineNumber"],[309,16,336,15],[310,6,336,15,"columnNumber"],[310,18,336,15],[311,4,336,15],[311,11,337,26],[311,12,337,27],[312,2,339,0],[312,3,339,1],[313,2,339,2,"_s2"],[313,5,339,2],[313,6,65,13,"ZoneProvider"],[313,18,65,25],[314,4,65,25],[314,12,66,44,"useGame"],[314,24,66,51],[314,25,66,51,"useGame"],[314,32,66,51],[315,2,66,51],[316,2,66,51,"_c"],[316,4,66,51],[316,7,65,13,"ZoneProvider"],[316,19,65,25],[317,2,65,25],[317,6,65,25,"_c"],[317,8,65,25],[318,2,65,25,"$RefreshReg$"],[318,14,65,25],[318,15,65,25,"_c"],[318,17,65,25],[319,0,65,25],[319,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","ZONES.find$argument_0","selectZone","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE6C;CFM;4BGE;8DCI;GDG;6ECC;GDG;sECC;GDG;iFCC;GDU;YEG;kCCY,6BD;GFgB;YEG;GFQ;qBIG;4BDM,oBC;GJoB;0BKG;GLE;yBMG;GNuC;0BOG;oBCM;iBCkE;ODG;KDG;GPC;8BUG;4BPG,oBO;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbY;CHkB"},"hasCjsExports":false},"type":"js/module"}]}