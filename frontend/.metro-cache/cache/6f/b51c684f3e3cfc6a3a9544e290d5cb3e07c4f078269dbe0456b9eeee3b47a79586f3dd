{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    _s();\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const ZoneProvider = ({\n    children\n  }) => {\n    _s2();\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Initialize with GameContext data if available\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('🗺️ Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('🗺️ No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = Object.assign({}, prev);\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = Object.assign({}, newProgress[zoneId]);\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"LvYGbT30mWRG/UxGcpmwant2jMs=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":249,"map":[[15,2,47,0,"Object"],[15,8,47,0],[15,9,47,0,"defineProperty"],[15,23,47,0],[15,24,47,0,"exports"],[15,31,47,0],[16,4,47,0,"enumerable"],[16,14,47,0],[17,4,47,0,"get"],[17,7,47,0],[17,18,47,0,"get"],[17,19,47,0],[18,6,47,0],[18,13,47,0,"useZone"],[18,20,47,0],[19,4,47,0],[20,2,47,0],[21,2,55,0,"Object"],[21,8,55,0],[21,9,55,0,"defineProperty"],[21,23,55,0],[21,24,55,0,"exports"],[21,31,55,0],[22,4,55,0,"enumerable"],[22,14,55,0],[23,4,55,0,"get"],[23,7,55,0],[23,18,55,0,"get"],[23,19,55,0],[24,6,55,0],[24,13,55,0,"ZoneProvider"],[24,25,55,0],[25,4,55,0],[26,2,55,0],[27,2,1,0],[27,6,1,0,"_react"],[27,12,1,0],[27,15,1,0,"require"],[27,22,1,0],[27,23,1,0,"_dependencyMap"],[27,37,1,0],[28,2,1,0],[28,6,1,0,"React"],[28,11,1,0],[28,14,1,0,"_interopDefault"],[28,29,1,0],[28,30,1,0,"_react"],[28,36,1,0],[29,2,2,0],[29,6,2,0,"_dataZoneData"],[29,19,2,0],[29,22,2,0,"require"],[29,29,2,0],[29,30,2,0,"_dependencyMap"],[29,44,2,0],[30,2,3,0],[30,6,3,0,"_GameContext"],[30,18,3,0],[30,21,3,0,"require"],[30,28,3,0],[30,29,3,0,"_dependencyMap"],[30,43,3,0],[31,2,3,40],[31,6,3,40,"_reactJsxDevRuntime"],[31,25,3,40],[31,28,3,40,"require"],[31,35,3,40],[31,36,3,40,"_dependencyMap"],[31,50,3,40],[32,2,45,0],[32,8,45,6,"ZoneContext"],[32,19,45,17],[32,35,45,20],[32,39,45,20,"createContext"],[32,45,45,33],[32,46,45,33,"createContext"],[32,59,45,33],[32,61,45,63,"undefined"],[32,70,45,72],[32,71,45,73],[33,2,47,7],[33,8,47,13,"useZone"],[33,15,47,20],[33,18,47,23,"useZone"],[33,19,47,23],[33,24,47,29],[34,4,47,29,"_s"],[34,6,47,29],[35,4,48,2],[35,10,48,8,"context"],[35,17,48,15],[35,20,48,18],[35,24,48,18,"useContext"],[35,30,48,28],[35,31,48,28,"useContext"],[35,41,48,28],[35,43,48,29,"ZoneContext"],[35,54,48,40],[35,55,48,41],[36,4,49,2],[36,8,49,6],[36,9,49,7,"context"],[36,16,49,14],[36,18,49,16],[37,6,50,4],[37,12,50,10],[37,16,50,14,"Error"],[37,21,50,19],[37,22,50,20],[37,66,50,64],[37,67,50,65],[38,4,51,2],[39,4,52,2],[39,11,52,9,"context"],[39,18,52,16],[40,2,53,0],[40,3,53,1],[41,2,53,2,"_s"],[41,4,53,2],[41,5,47,13,"useZone"],[41,12,47,20],[42,2,55,7],[42,8,55,13,"ZoneProvider"],[42,20,55,25],[42,23,55,28,"ZoneProvider"],[42,24,55,29],[43,4,55,31,"children"],[44,2,55,65],[44,3,55,66],[44,8,55,71],[45,4,55,71,"_s2"],[45,7,55,71],[46,4,56,2],[46,10,56,8],[47,6,56,10,"gameState"],[47,15,56,19],[48,6,56,21,"updateZoneProgress"],[49,4,56,40],[49,5,56,41],[49,8,56,44],[49,12,56,44,"useGame"],[49,24,56,51],[49,25,56,51,"useGame"],[49,32,56,51],[49,34,56,52],[49,35,56,53],[51,4,58,2],[52,4,59,2],[52,10,59,8],[52,11,59,9,"currentZone"],[52,22,59,20],[52,24,59,22,"setCurrentZone"],[52,38,59,36],[52,39,59,37],[52,42,59,40],[52,46,59,40,"useState"],[52,52,59,48],[52,53,59,48,"useState"],[52,61,59,48],[52,63,59,62,"ZONES"],[52,76,59,67],[52,77,59,67,"ZONES"],[52,82,59,67],[52,83,59,68],[52,84,59,69],[52,85,59,70],[52,86,59,71],[53,4,60,2],[53,10,60,8],[53,11,60,9,"currentZoneLevel"],[53,27,60,25],[53,29,60,27,"setCurrentZoneLevel"],[53,48,60,46],[53,49,60,47],[53,52,60,50],[53,56,60,50,"useState"],[53,62,60,58],[53,63,60,58,"useState"],[53,71,60,58],[53,73,60,77,"ZONES"],[53,86,60,82],[53,87,60,82,"ZONES"],[53,92,60,82],[53,93,60,83],[53,94,60,84],[53,95,60,85],[53,97,60,87,"levels"],[53,103,60,93],[53,104,60,94],[53,105,60,95],[53,106,60,96],[53,110,60,100],[53,114,60,104],[53,115,60,105],[54,4,61,2],[54,10,61,8],[54,11,61,9,"zoneProgress"],[54,23,61,21],[54,25,61,23,"setZoneProgress"],[54,40,61,38],[54,41,61,39],[54,44,61,42],[54,48,61,42,"useState"],[54,54,61,50],[54,55,61,50,"useState"],[54,63,61,50],[54,65,61,81],[54,71,61,87],[55,6,62,4],[56,6,63,4],[56,12,63,10,"savedProgress"],[56,25,63,23],[56,28,63,26,"gameState"],[56,37,63,35],[56,39,63,37,"zoneProgress"],[56,51,63,49],[57,6,64,4],[57,10,64,8,"savedProgress"],[57,23,64,21],[57,27,64,25,"Object"],[57,33,64,31],[57,34,64,32,"keys"],[57,38,64,36],[57,39,64,37,"savedProgress"],[57,52,64,50],[57,53,64,51],[57,54,64,52,"length"],[57,60,64,58],[57,63,64,61],[57,64,64,62],[57,66,64,64],[58,8,65,6,"console"],[58,15,65,13],[58,16,65,14,"log"],[58,19,65,17],[58,20,65,18],[58,54,65,52],[58,56,65,54,"savedProgress"],[58,69,65,67],[58,70,65,68],[59,8,66,6],[59,15,66,13,"savedProgress"],[59,28,66,26],[60,6,67,4],[60,7,67,5],[60,13,67,11],[61,8,68,6,"console"],[61,15,68,13],[61,16,68,14,"log"],[61,19,68,17],[61,20,68,18],[61,64,68,62],[61,65,68,63],[62,8,69,6],[62,15,69,13],[63,10,69,15],[63,11,69,16],[63,13,69,18],[64,12,69,20,"zoneId"],[64,18,69,26],[64,20,69,28],[64,21,69,29],[65,12,69,31,"currentLevel"],[65,24,69,43],[65,26,69,45],[65,27,69,46],[66,12,69,48,"killsInLevel"],[66,24,69,60],[66,26,69,62],[66,27,69,63],[67,12,69,65,"completed"],[67,21,69,74],[67,23,69,76],[68,10,69,82],[69,8,69,84],[69,9,69,85],[70,6,70,4],[71,4,71,2],[71,5,71,3],[71,6,71,4],[73,4,73,2],[74,4,74,2],[74,8,74,2,"useEffect"],[74,14,74,11],[74,15,74,11,"useEffect"],[74,24,74,11],[74,26,74,12],[74,32,74,18],[75,6,75,4],[75,10,75,8,"gameState"],[75,19,75,17],[75,21,75,19,"zoneProgress"],[75,33,75,31],[75,37,75,35,"Object"],[75,43,75,41],[75,44,75,42,"keys"],[75,48,75,46],[75,49,75,47,"gameState"],[75,58,75,56],[75,59,75,57,"zoneProgress"],[75,71,75,69],[75,72,75,70],[75,73,75,71,"length"],[75,79,75,77],[75,82,75,80],[75,83,75,81],[75,85,75,83],[76,8,76,6,"console"],[76,15,76,13],[76,16,76,14,"log"],[76,19,76,17],[76,20,76,18],[76,64,76,62],[76,66,76,64,"gameState"],[76,75,76,73],[76,76,76,74,"zoneProgress"],[76,88,76,86],[76,89,76,87],[77,8,77,6,"setZoneProgress"],[77,23,77,21],[77,24,77,22,"gameState"],[77,33,77,31],[77,34,77,32,"zoneProgress"],[77,46,77,44],[77,47,77,45],[78,6,78,4],[79,4,79,2],[79,5,79,3],[79,7,79,5],[79,8,79,6,"gameState"],[79,17,79,15],[79,19,79,17,"zoneProgress"],[79,31,79,29],[79,32,79,30],[79,33,79,31],[81,4,81,2],[82,4,82,2],[82,8,82,2,"useEffect"],[82,14,82,11],[82,15,82,11,"useEffect"],[82,24,82,11],[82,26,82,12],[82,32,82,18],[83,6,83,4],[83,10,83,8,"gameState"],[83,19,83,17],[83,21,83,19,"ninja"],[83,26,83,24],[83,28,83,26],[84,8,84,6],[84,14,84,12,"recommendedZone"],[84,29,84,27],[84,32,84,30],[84,36,84,30,"getZoneByLevel"],[84,49,84,44],[84,50,84,44,"getZoneByLevel"],[84,64,84,44],[84,66,84,45,"gameState"],[84,75,84,54],[84,76,84,55,"ninja"],[84,81,84,60],[84,82,84,61,"level"],[84,87,84,66],[84,88,84,67],[85,8,85,6],[85,12,85,10,"recommendedZone"],[85,27,85,25],[85,31,85,29],[85,32,85,30,"currentZone"],[85,43,85,41],[85,45,85,43],[86,10,86,8,"setCurrentZone"],[86,24,86,22],[86,25,86,23,"recommendedZone"],[86,40,86,38],[86,41,86,39],[87,10,87,8,"setCurrentZoneLevel"],[87,29,87,27],[87,30,87,28,"recommendedZone"],[87,45,87,43],[87,46,87,44,"levels"],[87,52,87,50],[87,53,87,51],[87,54,87,52],[87,55,87,53],[87,56,87,54],[88,8,88,6],[89,6,89,4],[90,4,90,2],[90,5,90,3],[90,7,90,5],[90,8,90,6,"gameState"],[90,17,90,15],[90,19,90,17,"ninja"],[90,24,90,22],[90,26,90,24,"level"],[90,31,90,29],[90,32,90,30],[90,33,90,31],[92,4,92,2],[93,4,93,2],[93,10,93,8,"selectZone"],[93,20,93,18],[93,23,93,21,"selectZone"],[93,24,93,22,"zoneId"],[93,30,93,36],[93,32,93,38,"levelNumber"],[93,43,93,57],[93,48,93,71],[94,6,94,4],[94,12,94,10,"zone"],[94,16,94,14],[94,19,94,17,"ZONES"],[94,32,94,22],[94,33,94,22,"ZONES"],[94,38,94,22],[94,39,94,23,"find"],[94,43,94,27],[94,44,94,28,"z"],[94,45,94,29],[94,49,94,33,"z"],[94,50,94,34],[94,51,94,35,"id"],[94,53,94,37],[94,58,94,42,"zoneId"],[94,64,94,48],[94,65,94,49],[95,6,95,4],[95,10,95,8],[95,11,95,9,"zone"],[95,15,95,13],[95,19,95,17],[95,20,95,18],[95,24,95,18,"isZoneUnlocked"],[95,37,95,32],[95,38,95,32,"isZoneUnlocked"],[95,52,95,32],[95,54,95,33,"zoneId"],[95,60,95,39],[95,62,95,41,"zoneProgress"],[95,74,95,53],[95,75,95,54],[95,77,95,56],[96,8,96,6,"console"],[96,15,96,13],[96,16,96,14,"log"],[96,19,96,17],[96,20,96,18],[96,30,96,28,"zoneId"],[96,36,96,34],[96,58,96,56],[96,59,96,57],[97,8,97,6],[97,15,97,13],[97,20,97,18],[98,6,98,4],[99,6,100,4],[99,12,100,10,"level"],[99,17,100,15],[99,20,100,18,"zone"],[99,24,100,22],[99,25,100,23,"levels"],[99,31,100,29],[99,32,100,30,"levelNumber"],[99,43,100,41],[99,46,100,44],[99,47,100,45],[99,48,100,46],[100,6,101,4],[100,10,101,8],[100,11,101,9,"level"],[100,16,101,14],[100,18,101,16],[101,8,102,6,"console"],[101,15,102,13],[101,16,102,14,"log"],[101,19,102,17],[101,20,102,18],[101,31,102,29,"levelNumber"],[101,42,102,40],[101,64,102,62,"zoneId"],[101,70,102,68],[101,72,102,70],[101,73,102,71],[102,8,103,6],[102,15,103,13],[102,20,103,18],[103,6,104,4],[104,6,106,4,"setCurrentZone"],[104,20,106,18],[104,21,106,19,"zone"],[104,25,106,23],[104,26,106,24],[105,6,107,4,"setCurrentZoneLevel"],[105,25,107,23],[105,26,107,24,"level"],[105,31,107,29],[105,32,107,30],[106,6,108,4,"console"],[106,13,108,11],[106,14,108,12,"log"],[106,17,108,15],[106,18,108,16],[106,34,108,32,"zone"],[106,38,108,36],[106,39,108,37,"name"],[106,43,108,41],[106,55,108,53,"levelNumber"],[106,66,108,64],[106,68,108,66],[106,69,108,67],[107,6,109,4],[107,13,109,11],[107,17,109,15],[108,4,110,2],[108,5,110,3],[110,4,112,2],[111,4,113,2],[111,10,113,8,"getZoneProgress"],[111,25,113,23],[111,28,113,27,"zoneId"],[111,34,113,41],[111,38,113,67],[112,6,114,4],[112,13,114,11,"zoneProgress"],[112,25,114,23],[112,26,114,24,"zoneId"],[112,32,114,30],[112,33,114,31],[112,37,114,35],[112,41,114,39],[113,4,115,2],[113,5,115,3],[115,4,117,2],[116,4,118,2],[116,10,118,8,"spawnZoneEnemy"],[116,24,118,22],[116,27,118,25,"spawnZoneEnemy"],[116,28,118,25],[116,33,118,52],[117,6,119,4],[117,10,119,8],[117,11,119,9,"currentZone"],[117,22,119,20],[117,26,119,24],[117,27,119,25,"currentZoneLevel"],[117,43,119,41],[117,45,119,43],[118,8,120,6,"console"],[118,15,120,13],[118,16,120,14,"log"],[118,19,120,17],[118,20,120,18],[118,65,120,63],[118,66,120,64],[119,8,121,6],[119,15,121,13],[119,19,121,17],[120,6,122,4],[122,6,124,4],[123,6,125,4],[123,12,125,10,"enemyTypeIds"],[123,24,125,22],[123,27,125,25,"currentZoneLevel"],[123,43,125,41],[123,44,125,42,"enemyTypes"],[123,54,125,52],[124,6,126,4],[124,12,126,10,"randomEnemyTypeId"],[124,29,126,27],[124,32,126,30,"enemyTypeIds"],[124,44,126,42],[124,45,126,43,"Math"],[124,49,126,47],[124,50,126,48,"floor"],[124,55,126,53],[124,56,126,54,"Math"],[124,60,126,58],[124,61,126,59,"random"],[124,67,126,65],[124,68,126,66],[124,69,126,67],[124,72,126,70,"enemyTypeIds"],[124,84,126,82],[124,85,126,83,"length"],[124,91,126,89],[124,92,126,90],[124,93,126,91],[125,6,127,4],[125,12,127,10,"enemyType"],[125,21,127,19],[125,24,127,22,"ENEMY_TYPES"],[125,37,127,33],[125,38,127,33,"ENEMY_TYPES"],[125,49,127,33],[125,50,127,34,"randomEnemyTypeId"],[125,67,127,51],[125,68,127,52],[126,6,129,4],[126,10,129,8],[126,11,129,9,"enemyType"],[126,20,129,18],[126,22,129,20],[127,8,130,6,"console"],[127,15,130,13],[127,16,130,14,"log"],[127,19,130,17],[127,20,130,18],[127,36,130,34,"randomEnemyTypeId"],[127,53,130,51],[127,65,130,63],[127,66,130,64],[128,8,131,6],[128,15,131,13],[128,19,131,17],[129,6,132,4],[131,6,134,4],[132,6,135,4],[132,12,135,10,"scaledStats"],[132,23,135,21],[132,26,135,24],[132,30,135,24,"calculateEnemyStats"],[132,43,135,43],[132,44,135,43,"calculateEnemyStats"],[132,63,135,43],[132,65,135,44,"enemyType"],[132,74,135,53],[132,76,135,55,"currentZoneLevel"],[132,92,135,71],[132,94,135,73,"currentZone"],[132,105,135,84],[132,106,135,85,"id"],[132,108,135,87],[132,109,135,88],[134,6,137,4],[135,6,138,4],[135,12,138,10,"enemy"],[135,17,138,29],[135,20,138,32],[136,8,139,6,"id"],[136,10,139,8],[136,12,139,10],[136,15,139,13,"randomEnemyTypeId"],[136,32,139,30],[136,36,139,34,"Date"],[136,40,139,38],[136,41,139,39,"now"],[136,44,139,42],[136,45,139,43],[136,46,139,44],[136,50,139,48,"Math"],[136,54,139,52],[136,55,139,53,"random"],[136,61,139,59],[136,62,139,60],[136,63,139,61],[136,65,139,63],[137,8,140,6,"typeId"],[137,14,140,12],[137,16,140,14,"randomEnemyTypeId"],[137,33,140,31],[138,8,141,6,"name"],[138,12,141,10],[138,14,141,12,"enemyType"],[138,23,141,21],[138,24,141,22,"name"],[138,28,141,26],[139,8,142,6,"icon"],[139,12,142,10],[139,14,142,12,"enemyType"],[139,23,142,21],[139,24,142,22,"icon"],[139,28,142,26],[140,8,143,6,"hp"],[140,10,143,8],[140,12,143,10,"scaledStats"],[140,23,143,21],[140,24,143,22,"hp"],[140,26,143,24],[141,8,144,6,"maxHP"],[141,13,144,11],[141,15,144,13,"scaledStats"],[141,26,144,24],[141,27,144,25,"hp"],[141,29,144,27],[142,8,145,6,"attack"],[142,14,145,12],[142,16,145,14,"scaledStats"],[142,27,145,25],[142,28,145,26,"attack"],[142,34,145,32],[143,8,146,6,"xp"],[143,10,146,8],[143,12,146,10,"scaledStats"],[143,23,146,21],[143,24,146,22,"xp"],[143,26,146,24],[144,8,147,6,"resistances"],[144,19,147,17],[144,21,147,19,"scaledStats"],[144,32,147,30],[144,33,147,31,"resistances"],[144,44,147,42],[145,8,148,6,"position"],[145,16,148,14],[145,18,148,16],[146,10,149,8,"x"],[146,11,149,9],[146,13,149,11,"Math"],[146,17,149,15],[146,18,149,16,"random"],[146,24,149,22],[146,25,149,23],[146,26,149,24],[146,29,149,27],[146,32,149,30],[146,35,149,33],[146,37,149,35],[147,10,149,37],[148,10,150,8,"y"],[148,11,150,9],[148,13,150,11,"Math"],[148,17,150,15],[148,18,150,16,"random"],[148,24,150,22],[148,25,150,23],[148,26,150,24],[148,29,150,27],[148,32,150,30],[148,35,150,33],[149,8,151,6],[149,9,151,7],[150,8,152,6,"lastDamaged"],[150,19,152,17],[150,21,152,19],[151,6,153,4],[151,7,153,5],[152,6,155,4,"console"],[152,13,155,11],[152,14,155,12,"log"],[152,17,155,15],[152,18,155,16],[152,32,155,30,"enemy"],[152,37,155,35],[152,38,155,36,"name"],[152,42,155,40],[152,47,155,45,"enemy"],[152,52,155,50],[152,53,155,51,"hp"],[152,55,155,53],[152,63,155,61,"enemy"],[152,68,155,66],[152,69,155,67,"xp"],[152,71,155,69],[152,82,155,80,"currentZone"],[152,93,155,91],[152,94,155,92,"name"],[152,98,155,96],[152,100,155,98],[152,101,155,99],[153,6,156,4],[153,13,156,11,"enemy"],[153,18,156,16],[154,4,157,2],[154,5,157,3],[156,4,159,2],[157,4,160,2],[157,10,160,8,"recordEnemyKill"],[157,25,160,23],[157,28,160,27,"enemy"],[157,33,160,46],[157,37,160,51],[158,6,161,4],[158,10,161,8],[158,11,161,9,"currentZone"],[158,22,161,20],[158,26,161,24],[158,27,161,25,"currentZoneLevel"],[158,43,161,41],[158,45,161,43],[159,6,163,4,"console"],[159,13,163,11],[159,14,163,12,"log"],[159,17,163,15],[159,18,163,16],[159,24,163,22,"enemy"],[159,29,163,27],[159,30,163,28,"name"],[159,34,163,32],[159,47,163,45,"enemy"],[159,52,163,50],[159,53,163,51,"xp"],[159,55,163,53],[159,60,163,58],[159,61,163,59],[160,6,165,4,"setZoneProgress"],[160,21,165,19],[160,22,165,20,"prev"],[160,26,165,24],[160,30,165,28],[161,8,166,6],[161,14,166,12,"newProgress"],[161,25,166,23],[161,28,166,23,"Object"],[161,34,166,23],[161,35,166,23,"assign"],[161,41,166,23],[161,46,166,31,"prev"],[161,50,166,35],[161,51,166,37],[162,8,167,6],[162,14,167,12,"zoneId"],[162,20,167,18],[162,23,167,21,"currentZone"],[162,34,167,32],[162,35,167,33,"id"],[162,37,167,35],[163,8,169,6],[163,12,169,10],[163,13,169,11,"newProgress"],[163,24,169,22],[163,25,169,23,"zoneId"],[163,31,169,29],[163,32,169,30],[163,34,169,32],[164,10,170,8,"newProgress"],[164,21,170,19],[164,22,170,20,"zoneId"],[164,28,170,26],[164,29,170,27],[164,32,170,30],[165,12,171,10,"zoneId"],[165,18,171,16],[166,12,172,10,"currentLevel"],[166,24,172,22],[166,26,172,24],[166,27,172,25],[167,12,173,10,"killsInLevel"],[167,24,173,22],[167,26,173,24],[167,27,173,25],[168,12,174,10,"completed"],[168,21,174,19],[168,23,174,21],[169,10,175,8],[169,11,175,9],[170,8,176,6],[171,8,178,6],[171,14,178,12,"progress"],[171,22,178,20],[171,25,178,20,"Object"],[171,31,178,20],[171,32,178,20,"assign"],[171,38,178,20],[171,43,178,28,"newProgress"],[171,54,178,39],[171,55,178,40,"zoneId"],[171,61,178,46],[171,62,178,47],[171,63,178,49],[172,8,179,6,"progress"],[172,16,179,14],[172,17,179,15,"killsInLevel"],[172,29,179,27],[172,33,179,31],[172,34,179,32],[173,8,181,6,"console"],[173,15,181,13],[173,16,181,14,"log"],[173,19,181,17],[173,20,181,18],[173,31,181,29,"zoneId"],[173,37,181,35],[173,47,181,45,"progress"],[173,55,181,53],[173,56,181,54,"currentLevel"],[173,68,181,66],[173,73,181,71,"progress"],[173,81,181,79],[173,82,181,80,"killsInLevel"],[173,94,181,92],[173,107,181,105],[173,108,181,106],[175,8,183,6],[176,8,184,6],[176,12,184,10,"progress"],[176,20,184,18],[176,21,184,19,"killsInLevel"],[176,33,184,31],[176,37,184,35],[176,41,184,39],[176,43,184,41],[177,10,185,8,"console"],[177,17,185,15],[177,18,185,16,"log"],[177,21,185,19],[177,22,185,20],[177,34,185,32,"progress"],[177,42,185,40],[177,43,185,41,"currentLevel"],[177,55,185,53],[177,72,185,70,"currentZone"],[177,83,185,81],[177,84,185,82,"name"],[177,88,185,86],[177,91,185,89],[177,92,185,90],[179,10,187,8],[180,10,188,8],[180,14,188,12,"progress"],[180,22,188,20],[180,23,188,21,"currentLevel"],[180,35,188,33],[180,38,188,36],[180,39,188,37],[180,41,188,39],[181,12,189,10,"progress"],[181,20,189,18],[181,21,189,19,"currentLevel"],[181,33,189,31],[181,37,189,35],[181,38,189,36],[182,12,190,10,"progress"],[182,20,190,18],[182,21,190,19,"killsInLevel"],[182,33,190,31],[182,36,190,34],[182,37,190,35],[183,12,191,10,"console"],[183,19,191,17],[183,20,191,18,"log"],[183,23,191,21],[183,24,191,22],[183,48,191,46,"progress"],[183,56,191,54],[183,57,191,55,"currentLevel"],[183,69,191,67],[183,71,191,69],[183,72,191,70],[185,12,193,10],[186,12,194,10],[186,18,194,16,"nextLevel"],[186,27,194,25],[186,30,194,28,"currentZone"],[186,41,194,39],[186,42,194,40,"levels"],[186,48,194,46],[186,49,194,47,"progress"],[186,57,194,55],[186,58,194,56,"currentLevel"],[186,70,194,68],[186,73,194,71],[186,74,194,72],[186,75,194,73],[187,12,195,10],[187,16,195,14,"nextLevel"],[187,25,195,23],[187,27,195,25],[188,14,196,12,"setCurrentZoneLevel"],[188,33,196,31],[188,34,196,32,"nextLevel"],[188,43,196,41],[188,44,196,42],[189,12,197,10],[190,10,198,8],[190,11,198,9],[190,17,198,15],[191,12,199,10],[192,12,200,10,"progress"],[192,20,200,18],[192,21,200,19,"completed"],[192,30,200,28],[192,33,200,31],[192,37,200,35],[193,12,201,10,"console"],[193,19,201,17],[193,20,201,18,"log"],[193,23,201,21],[193,24,201,22],[193,35,201,33,"currentZone"],[193,46,201,44],[193,47,201,45,"name"],[193,51,201,49],[193,84,201,82],[193,85,201,83],[194,10,202,8],[195,8,203,6],[196,8,205,6,"newProgress"],[196,19,205,17],[196,20,205,18,"zoneId"],[196,26,205,24],[196,27,205,25],[196,30,205,28,"progress"],[196,38,205,36],[198,8,207,6],[199,8,208,6,"setTimeout"],[199,18,208,16],[199,19,208,17],[199,25,208,23],[200,10,209,8,"console"],[200,17,209,15],[200,18,209,16,"log"],[200,21,209,19],[200,22,209,20],[200,67,209,65],[200,69,209,67,"newProgress"],[200,80,209,78],[200,81,209,79],[201,10,210,8,"updateZoneProgress"],[201,28,210,26],[201,29,210,27,"newProgress"],[201,40,210,38],[201,41,210,39],[202,8,211,6],[202,9,211,7],[202,11,211,9],[202,12,211,10],[202,13,211,11],[202,14,211,12],[202,15,211,13],[204,8,213,6],[204,15,213,13,"newProgress"],[204,26,213,24],[205,6,214,4],[205,7,214,5],[205,8,214,6],[206,4,215,2],[206,5,215,3],[208,4,217,2],[209,4,218,2],[209,10,218,8,"isZoneUnlockedLocal"],[209,29,218,27],[209,32,218,31,"zoneId"],[209,38,218,45],[209,42,218,59],[210,6,219,4],[210,10,219,8,"zoneId"],[210,16,219,14],[210,21,219,19],[210,22,219,20],[210,24,219,22],[210,31,219,29],[210,35,219,33],[210,36,219,34],[210,37,219,35],[212,6,221,4],[212,12,221,10,"zone"],[212,16,221,14],[212,19,221,17,"ZONES"],[212,32,221,22],[212,33,221,22,"ZONES"],[212,38,221,22],[212,39,221,23,"find"],[212,43,221,27],[212,44,221,28,"z"],[212,45,221,29],[212,49,221,33,"z"],[212,50,221,34],[212,51,221,35,"id"],[212,53,221,37],[212,58,221,42,"zoneId"],[212,64,221,48],[212,65,221,49],[213,6,222,4],[213,10,222,8],[213,11,222,9,"zone"],[213,15,222,13],[213,17,222,15,"unlockRequirement"],[213,34,222,32],[213,35,222,33,"previousZone"],[213,47,222,45],[213,49,222,47],[213,56,222,54],[213,60,222,58],[214,6,224,4],[214,12,224,10,"prevZoneProgress"],[214,28,224,26],[214,31,224,29,"zoneProgress"],[214,43,224,41],[214,44,224,42,"zone"],[214,48,224,46],[214,49,224,47,"unlockRequirement"],[214,66,224,64],[214,67,224,65,"previousZone"],[214,79,224,77],[214,80,224,78],[215,6,225,4],[215,13,225,11,"prevZoneProgress"],[215,29,225,27],[215,31,225,29,"completed"],[215,40,225,38],[215,44,225,42],[215,49,225,47],[216,4,226,2],[216,5,226,3],[218,4,228,2],[219,4,229,2],[219,10,229,8,"getUnlockedZones"],[219,26,229,24],[219,29,229,27,"getUnlockedZones"],[219,30,229,27],[219,35,229,41],[220,6,230,4],[220,13,230,11,"ZONES"],[220,26,230,16],[220,27,230,16,"ZONES"],[220,32,230,16],[220,33,230,17,"filter"],[220,39,230,23],[220,40,230,24,"zone"],[220,44,230,28],[220,48,230,32,"isZoneUnlockedLocal"],[220,67,230,51],[220,68,230,52,"zone"],[220,72,230,56],[220,73,230,57,"id"],[220,75,230,59],[220,76,230,60],[220,77,230,61],[221,4,231,2],[221,5,231,3],[222,4,233,2],[222,10,233,8,"contextValue"],[222,22,233,37],[222,25,233,40,"React"],[222,30,233,45],[222,31,233,45,"default"],[222,38,233,45],[222,39,233,46,"useMemo"],[222,46,233,53],[222,47,233,54],[222,54,233,61],[223,6,234,4,"currentZone"],[223,17,234,15],[224,6,235,4,"currentZoneLevel"],[224,22,235,20],[225,6,236,4,"zoneProgress"],[225,18,236,16],[226,6,237,4,"availableZones"],[226,20,237,18],[226,22,237,20,"ZONES"],[226,35,237,25],[226,36,237,25,"ZONES"],[226,41,237,25],[227,6,238,4,"selectZone"],[227,16,238,14],[228,6,239,4,"getZoneProgress"],[228,21,239,19],[229,6,240,4,"spawnZoneEnemy"],[229,20,240,18],[230,6,241,4,"recordEnemyKill"],[230,21,241,19],[231,6,242,4,"isZoneUnlocked"],[231,20,242,18],[231,22,242,20,"isZoneUnlockedLocal"],[231,41,242,39],[232,6,243,4,"getUnlockedZones"],[233,4,244,2],[233,5,244,3],[233,6,244,4],[233,8,244,6],[233,9,245,4,"currentZone"],[233,20,245,15],[233,22,246,4,"currentZoneLevel"],[233,38,246,20],[233,40,247,4,"zoneProgress"],[233,52,247,16],[233,54,248,4,"selectZone"],[233,64,248,14],[233,66,249,4,"getZoneProgress"],[233,81,249,19],[233,83,250,4,"spawnZoneEnemy"],[233,97,250,18],[233,99,251,4,"recordEnemyKill"],[233,114,251,19],[233,116,252,4,"isZoneUnlockedLocal"],[233,135,252,23],[233,137,253,4,"getUnlockedZones"],[233,153,253,20],[233,154,254,3],[233,155,254,4],[234,4,256,2],[234,24,257,4],[234,28,257,4,"_reactJsxDevRuntime"],[234,47,257,4],[234,48,257,4,"jsxDEV"],[234,54,257,4],[234,56,257,5,"ZoneContext"],[234,67,257,16],[234,68,257,17,"Provider"],[234,76,257,25],[235,6,257,26,"value"],[235,11,257,31],[235,13,257,33,"contextValue"],[235,25,257,46],[236,6,257,46,"children"],[236,14,257,46],[236,16,258,7,"children"],[237,4,258,15],[238,6,258,15,"fileName"],[238,14,258,15],[238,16,258,15,"_jsxFileName"],[238,28,258,15],[239,6,258,15,"lineNumber"],[239,16,258,15],[240,6,258,15,"columnNumber"],[240,18,258,15],[241,4,258,15],[241,11,259,26],[241,12,259,27],[242,2,261,0],[242,3,261,1],[243,2,261,2,"_s2"],[243,5,261,2],[243,6,55,13,"ZoneProvider"],[243,18,55,25],[244,4,55,25],[244,12,56,44,"useGame"],[244,24,56,51],[244,25,56,51,"useGame"],[244,32,56,51],[245,2,56,51],[246,2,56,51,"_c"],[246,4,56,51],[246,7,55,13,"ZoneProvider"],[246,19,55,25],[247,2,55,25],[247,6,55,25,"_c"],[247,8,55,25],[248,2,55,25,"$RefreshReg$"],[248,14,55,25],[248,15,55,25,"_c"],[248,17,55,25],[249,0,55,25],[249,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;iFCM;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCC,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC2C;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}