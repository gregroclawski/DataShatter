{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"./ZoneContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":324},"end":{"line":5,"column":40,"index":364}}],"key":"i9sMaHA5l/hFF4qXwwv8uyRcuxU=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _ZoneContext = require(_dependencyMap[4], \"./ZoneContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[5], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const {\n      recordEnemyKill\n    } = (0, _ZoneContext.useZone)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [lastExplosionTime, setLastExplosionTime] = (0, _react.useState)(0);\n    // Initialize ninja position to match game's starting position (bottom left corner)\n    const SCREEN_WIDTH = 390;\n    const GAME_AREA_HEIGHT = 844 - 200; // Updated to match smaller UI\n    const NINJA_SIZE = 40;\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: 50,\n      y: GAME_AREA_HEIGHT - NINJA_SIZE - 50\n    });\n\n    // Function to handle enemy kills - integrates with zone progression and awards XP/gold\n    const handleEnemyKill = enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Convert CombatEnemy to CurrentEnemy format for zone progression\n      const zoneEnemy = {\n        id: enemy.id,\n        typeId: 'test_orc',\n        // Default type for test enemies\n        name: enemy.name,\n        icon: 'üßå',\n        // Default icon for test enemies\n        hp: 0,\n        // Dead enemy\n        maxHP: enemy.maxHealth,\n        attack: enemy.stats.attack,\n        xp: 20,\n        // Base XP reward - updated to 20\n        position: enemy.position\n      };\n\n      // Record the kill for zone progression\n      recordEnemyKill(zoneEnemy);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 20; // Base XP reward per kill\n      const goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      updateNinja(prev => {\n        console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('üîÑ Combat tick running...');\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        // BUT: Don't spawn new enemies if there's a boss present\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n        const hasBoss = newState.enemies.some(enemy => enemy.isBoss);\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}, HasBoss=${hasBoss}`);\n\n        // Only spawn normal enemies if no boss is present\n        if (!hasBoss && newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n    };\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 200; // Updated to match smaller UI\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      console.log(`üéØ Combat context ninja position updated to: (${position.x.toFixed(0)}, ${position.y.toFixed(0)})`);\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 200; // Updated to match smaller UI\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`üéØ Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 200; // Updated to match smaller UI // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      const explosionTime = Date.now();\n      setLastExplosionTime(explosionTime);\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 20; // Base XP reward per enemy in explosion\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Enhanced enemy spawning function\n    const spawnEnemy = position => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 200; // Updated to match smaller UI\n      const ENEMY_SIZE = 35;\n\n      // Use provided position or generate random position\n      const x = position?.x ?? Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const y = position?.y ?? Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE;\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [...prev.enemies, enemy]\n      }));\n      return enemy;\n    };\n\n    // Spawn boss enemy function\n    const spawnBoss = bossEnemy => {\n      console.log(`üêâ Spawning boss: ${bossEnemy.name} - clearing all other enemies first`);\n      setCombatState(prev => ({\n        ...prev,\n        enemies: [bossEnemy] // Replace all enemies with just the boss\n      }));\n    };\n\n    // Clear specific enemy by ID\n    const clearSpecificEnemy = enemyId => {\n      setCombatState(prev => ({\n        ...prev,\n        enemies: prev.enemies.filter(enemy => enemy.id !== enemyId)\n      }));\n    };\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      handleEnemyKill,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      spawnEnemy,\n      spawnBoss,\n      clearAllEnemies,\n      clearSpecificEnemy,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition,\n      lastExplosionTime\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"yd9vEyNFWBUWEiDgLxWqOItDCFI=\", false, function () {\n    return [_GameContext.useGame, _ZoneContext.useZone];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":534,"map":[[10,2,65,0,"Object"],[10,8,65,0],[10,9,65,0,"defineProperty"],[10,23,65,0],[10,24,65,0,"exports"],[10,31,65,0],[11,4,65,0,"enumerable"],[11,14,65,0],[12,4,65,0,"get"],[12,7,65,0],[12,18,65,0,"get"],[12,19,65,0],[13,6,65,0],[13,13,65,0,"useCombat"],[13,22,65,0],[14,4,65,0],[15,2,65,0],[16,2,75,0,"Object"],[16,8,75,0],[16,9,75,0,"defineProperty"],[16,23,75,0],[16,24,75,0,"exports"],[16,31,75,0],[17,4,75,0,"enumerable"],[17,14,75,0],[18,4,75,0,"get"],[18,7,75,0],[18,18,75,0,"get"],[18,19,75,0],[19,6,75,0],[19,13,75,0,"CombatProvider"],[19,27,75,0],[20,4,75,0],[21,2,75,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_engineCombatEngine"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,3,0],[24,6,3,0,"_typesAbilityTypes"],[24,24,3,0],[24,27,3,0,"require"],[24,34,3,0],[24,35,3,0,"_dependencyMap"],[24,49,3,0],[25,2,4,0],[25,6,4,0,"_GameContext"],[25,18,4,0],[25,21,4,0,"require"],[25,28,4,0],[25,29,4,0,"_dependencyMap"],[25,43,4,0],[26,2,5,0],[26,6,5,0,"_ZoneContext"],[26,18,5,0],[26,21,5,0,"require"],[26,28,5,0],[26,29,5,0,"_dependencyMap"],[26,43,5,0],[27,2,5,40],[27,6,5,40,"_reactJsxDevRuntime"],[27,25,5,40],[27,28,5,40,"require"],[27,35,5,40],[27,36,5,40,"_dependencyMap"],[27,50,5,40],[28,2,63,0],[28,8,63,6,"CombatContext"],[28,21,63,19],[28,37,63,22],[28,41,63,22,"createContext"],[28,47,63,35],[28,48,63,35,"createContext"],[28,61,63,35],[28,63,63,67,"undefined"],[28,72,63,76],[28,73,63,77],[29,2,65,7],[29,8,65,13,"useCombat"],[29,17,65,22],[29,20,65,25,"useCombat"],[29,21,65,25],[29,26,65,50],[30,4,65,50,"_s"],[30,6,65,50],[31,4,66,2],[31,10,66,8,"context"],[31,17,66,15],[31,20,66,18],[31,24,66,18,"useContext"],[31,30,66,28],[31,31,66,28,"useContext"],[31,41,66,28],[31,43,66,29,"CombatContext"],[31,56,66,42],[31,57,66,43],[32,4,67,2],[32,8,67,6],[32,9,67,7,"context"],[32,16,67,14],[32,18,67,16],[33,6,68,4],[33,12,68,10],[33,16,68,14,"Error"],[33,21,68,19],[33,22,68,20],[33,70,68,68],[33,71,68,69],[34,4,69,2],[35,4,70,2],[35,11,70,9,"context"],[35,18,70,16],[36,2,71,0],[36,3,71,1],[37,2,71,2,"_s"],[37,4,71,2],[37,5,65,13,"useCombat"],[37,14,65,22],[38,2,73,0],[38,6,73,4,"enemyCounter"],[38,18,73,16],[38,21,73,19],[38,22,73,20],[38,23,73,21],[38,24,73,22],[40,2,75,7],[40,8,75,13,"CombatProvider"],[40,22,75,27],[40,25,75,30,"CombatProvider"],[40,26,75,31],[41,4,75,33,"children"],[42,2,75,67],[42,3,75,68],[42,8,75,73],[43,4,75,73,"_s3"],[43,7,75,73],[44,4,76,2],[44,10,76,8],[45,6,76,10,"updateNinja"],[46,4,76,22],[46,5,76,23],[46,8,76,26],[46,12,76,26,"useGame"],[46,24,76,33],[46,25,76,33,"useGame"],[46,32,76,33],[46,34,76,34],[46,35,76,35],[47,4,77,2],[47,10,77,8],[48,6,77,10,"recordEnemyKill"],[49,4,77,26],[49,5,77,27],[49,8,77,30],[49,12,77,30,"useZone"],[49,24,77,37],[49,25,77,37,"useZone"],[49,32,77,37],[49,34,77,38],[49,35,77,39],[50,4,79,2],[50,10,79,8],[50,11,79,9,"combatState"],[50,22,79,20],[50,24,79,22,"setCombatState"],[50,38,79,36],[50,39,79,37],[50,42,79,40],[50,46,79,40,"useState"],[50,52,79,48],[50,53,79,48,"useState"],[50,61,79,48],[50,63,79,62],[51,6,80,4,"isInCombat"],[51,16,80,14],[51,18,80,16],[51,23,80,21],[52,6,81,4,"currentTick"],[52,17,81,15],[52,19,81,17],[52,20,81,18],[53,6,82,4,"enemies"],[53,13,82,11],[53,15,82,13],[53,17,82,15],[54,6,83,4,"abilityManager"],[54,20,83,18],[54,22,83,20],[54,26,83,24,"AbilityManager"],[54,44,83,38],[54,45,83,38,"AbilityManager"],[54,59,83,38],[54,60,83,39],[54,61,83,40],[55,6,84,4,"statusEffects"],[55,19,84,17],[55,21,84,19],[55,25,84,23,"StatusEffectManager"],[55,44,84,42],[55,45,84,42,"StatusEffectManager"],[55,64,84,42],[55,65,84,43],[55,66,84,44],[56,6,85,4,"playerStats"],[56,17,85,15],[56,19,85,17],[57,8,86,6,"attack"],[57,14,86,12],[57,16,86,14],[57,18,86,16],[58,8,86,18],[59,8,87,6,"defense"],[59,15,87,13],[59,17,87,15],[59,18,87,16],[60,8,88,6,"health"],[60,14,88,12],[60,16,88,14],[60,19,88,17],[61,8,89,6,"maxHealth"],[61,17,89,15],[61,19,89,17],[61,22,89,20],[62,8,90,6,"critChance"],[62,18,90,16],[62,20,90,18],[62,21,90,19],[63,8,91,6,"critDamage"],[63,18,91,16],[63,20,91,18],[63,23,91,21],[64,8,92,6,"cooldownReduction"],[64,25,92,23],[64,27,92,25],[65,6,93,4],[66,4,94,2],[66,5,94,3],[66,6,94,4],[67,4,96,2],[67,10,96,8],[67,11,96,9,"projectiles"],[67,22,96,20],[67,24,96,22,"setProjectiles"],[67,38,96,36],[67,39,96,37],[67,42,96,40],[67,46,96,40,"useState"],[67,52,96,48],[67,53,96,48,"useState"],[67,61,96,48],[67,63,96,69],[67,65,96,71],[67,66,96,72],[68,4,97,2],[68,10,97,8],[68,11,97,9,"lastExplosionTime"],[68,28,97,26],[68,30,97,28,"setLastExplosionTime"],[68,50,97,48],[68,51,97,49],[68,54,97,52],[68,58,97,52,"useState"],[68,64,97,60],[68,65,97,60,"useState"],[68,73,97,60],[68,75,97,69],[68,76,97,70],[68,77,97,71],[69,4,98,2],[70,4,99,2],[70,10,99,8,"SCREEN_WIDTH"],[70,22,99,20],[70,25,99,23],[70,28,99,26],[71,4,100,2],[71,10,100,8,"GAME_AREA_HEIGHT"],[71,26,100,24],[71,29,100,27],[71,32,100,30],[71,35,100,33],[71,38,100,36],[71,39,100,37],[71,40,100,38],[72,4,101,2],[72,10,101,8,"NINJA_SIZE"],[72,20,101,18],[72,23,101,21],[72,25,101,23],[73,4,102,2],[73,10,102,8],[73,11,102,9,"ninjaPosition"],[73,24,102,22],[73,26,102,24,"setNinjaPosition"],[73,42,102,40],[73,43,102,41],[73,46,102,44],[73,50,102,44,"useState"],[73,56,102,52],[73,57,102,52,"useState"],[73,65,102,52],[73,67,102,77],[74,6,103,4,"x"],[74,7,103,5],[74,9,103,7],[74,11,103,9],[75,6,104,4,"y"],[75,7,104,5],[75,9,104,7,"GAME_AREA_HEIGHT"],[75,25,104,23],[75,28,104,26,"NINJA_SIZE"],[75,38,104,36],[75,41,104,39],[76,4,105,2],[76,5,105,3],[76,6,105,4],[78,4,107,2],[79,4,108,2],[79,10,108,8,"handleEnemyKill"],[79,25,108,23],[79,28,108,27,"enemy"],[79,33,108,45],[79,37,108,50],[80,6,109,4,"console"],[80,13,109,11],[80,14,109,12,"log"],[80,17,109,15],[80,18,109,16],[80,46,109,44,"enemy"],[80,51,109,49],[80,52,109,50,"maxHealth"],[80,61,109,59],[80,63,109,61],[80,64,109,62],[82,6,111,4],[83,6,112,4],[83,12,112,10,"zoneEnemy"],[83,21,112,19],[83,24,112,22],[84,8,113,6,"id"],[84,10,113,8],[84,12,113,10,"enemy"],[84,17,113,15],[84,18,113,16,"id"],[84,20,113,18],[85,8,114,6,"typeId"],[85,14,114,12],[85,16,114,14],[85,26,114,24],[86,8,114,26],[87,8,115,6,"name"],[87,12,115,10],[87,14,115,12,"enemy"],[87,19,115,17],[87,20,115,18,"name"],[87,24,115,22],[88,8,116,6,"icon"],[88,12,116,10],[88,14,116,12],[88,18,116,16],[89,8,116,18],[90,8,117,6,"hp"],[90,10,117,8],[90,12,117,10],[90,13,117,11],[91,8,117,13],[92,8,118,6,"maxHP"],[92,13,118,11],[92,15,118,13,"enemy"],[92,20,118,18],[92,21,118,19,"maxHealth"],[92,30,118,28],[93,8,119,6,"attack"],[93,14,119,12],[93,16,119,14,"enemy"],[93,21,119,19],[93,22,119,20,"stats"],[93,27,119,25],[93,28,119,26,"attack"],[93,34,119,32],[94,8,120,6,"xp"],[94,10,120,8],[94,12,120,10],[94,14,120,12],[95,8,120,14],[96,8,121,6,"position"],[96,16,121,14],[96,18,121,16,"enemy"],[96,23,121,21],[96,24,121,22,"position"],[97,6,122,4],[97,7,122,5],[99,6,124,4],[100,6,125,4,"recordEnemyKill"],[100,21,125,19],[100,22,125,20,"zoneEnemy"],[100,31,125,29],[100,32,125,30],[102,6,127,4],[103,6,128,4],[103,12,128,10,"xpReward"],[103,20,128,18],[103,23,128,21],[103,25,128,23],[103,26,128,24],[103,27,128,25],[104,6,129,4],[104,12,129,10,"goldReward"],[104,22,129,20],[104,25,129,23],[104,27,129,25],[105,6,131,4,"console"],[105,13,131,11],[105,14,131,12,"log"],[105,17,131,15],[105,18,131,16],[105,33,131,31,"xpReward"],[105,41,131,39],[105,52,131,50,"goldReward"],[105,62,131,60],[105,78,131,76],[105,79,131,77],[106,6,133,4,"updateNinja"],[106,17,133,15],[106,18,133,17,"prev"],[106,22,133,21],[106,26,133,26],[107,8,134,6,"console"],[107,15,134,13],[107,16,134,14,"log"],[107,19,134,17],[107,20,134,18],[107,37,134,35,"prev"],[107,41,134,39],[107,42,134,40,"experience"],[107,52,134,50],[107,64,134,62,"prev"],[107,68,134,66],[107,69,134,67,"experience"],[107,79,134,77],[107,82,134,80,"xpReward"],[107,90,134,88],[107,92,134,90],[107,93,134,91],[108,8,135,6],[108,15,135,13],[109,10,136,8,"experience"],[109,20,136,18],[109,22,136,20,"prev"],[109,26,136,24],[109,27,136,25,"experience"],[109,37,136,35],[109,40,136,38,"xpReward"],[109,48,136,46],[110,10,137,8,"gold"],[110,14,137,12],[110,16,137,14,"prev"],[110,20,137,18],[110,21,137,19,"gold"],[110,25,137,23],[110,28,137,26,"goldReward"],[111,8,138,6],[111,9,138,7],[112,6,139,4],[112,7,139,5],[112,8,139,6],[113,4,140,2],[113,5,140,3],[115,4,142,2],[116,4,143,2],[116,10,143,8,"handleCombatTick"],[116,26,143,24],[116,29,143,27,"handleCombatTick"],[116,30,143,27],[116,35,143,33],[117,6,143,33],[117,10,143,33,"_s2"],[117,13,143,33],[117,16,143,33,"$RefreshSig$"],[117,28,143,33],[118,6,144,4,"console"],[118,13,144,11],[118,14,144,12,"log"],[118,17,144,15],[118,18,144,16],[118,45,144,43],[118,46,144,44],[119,6,145,4,"_s2"],[119,9,145,4],[119,10,145,4,"setCombatState"],[119,24,145,18],[119,25,145,18,"_s2"],[119,28,145,18],[119,29,145,19,"prev"],[119,33,145,23],[119,37,145,27],[120,8,145,27,"_s2"],[120,11,145,27],[121,8,146,6],[121,14,146,12,"newTick"],[121,21,146,19],[121,24,146,22,"combatEngine"],[121,43,146,34],[121,44,146,34,"combatEngine"],[121,56,146,34],[121,57,146,35,"getCurrentTick"],[121,71,146,49],[121,72,146,50],[121,73,146,51],[122,8,147,6],[122,14,147,12,"newState"],[122,22,147,20],[122,25,147,23],[123,10,147,25],[123,13,147,28,"prev"],[123,17,147,32],[124,10,147,34,"currentTick"],[124,21,147,45],[124,23,147,47,"newTick"],[125,8,147,55],[125,9,147,56],[126,8,149,6],[126,12,149,10],[126,13,149,11,"newState"],[126,21,149,19],[126,22,149,20,"isInCombat"],[126,32,149,30],[126,34,149,32],[126,41,149,39,"newState"],[126,49,149,47],[128,8,151,6],[129,8,152,6,"newState"],[129,16,152,14],[129,17,152,15,"abilityManager"],[129,31,152,29],[129,32,152,30,"updateCooldowns"],[129,47,152,45],[129,48,152,46,"newTick"],[129,55,152,53],[129,56,152,54],[131,8,154,6],[132,8,155,6],[132,14,155,12,"effectResults"],[132,27,155,25],[132,30,155,28,"newState"],[132,38,155,36],[132,39,155,37,"statusEffects"],[132,52,155,50],[132,53,155,51,"processTick"],[132,64,155,62],[132,65,155,63,"newTick"],[132,72,155,70],[132,73,155,71],[134,8,157,6],[135,8,158,6,"effectResults"],[135,21,158,19],[135,22,158,20,"forEach"],[135,29,158,27],[135,30,158,28],[135,31,158,29,"results"],[135,38,158,36],[135,40,158,38,"entityId"],[135,48,158,46],[135,53,158,51],[136,10,159,8],[136,16,159,14,"enemyIndex"],[136,26,159,24],[136,29,159,27,"newState"],[136,37,159,35],[136,38,159,36,"enemies"],[136,45,159,43],[136,46,159,44,"findIndex"],[136,55,159,53],[136,56,159,54,"e"],[136,57,159,55],[136,61,159,59,"e"],[136,62,159,60],[136,63,159,61,"id"],[136,65,159,63],[136,70,159,68,"entityId"],[136,78,159,76],[136,79,159,77],[137,10,160,8],[137,14,160,12,"enemyIndex"],[137,24,160,22],[137,28,160,26],[137,29,160,27],[137,31,160,29],[138,12,161,10,"results"],[138,19,161,17],[138,20,161,18,"forEach"],[138,27,161,25],[138,28,161,26,"result"],[138,34,161,32],[138,38,161,36],[139,14,162,12,"newState"],[139,22,162,20],[139,23,162,21,"enemies"],[139,30,162,28],[139,31,162,29,"enemyIndex"],[139,41,162,39],[139,42,162,40],[139,43,162,41,"health"],[139,49,162,47],[139,53,162,51,"result"],[139,59,162,57],[139,60,162,58,"damage"],[139,66,162,64],[140,14,163,12,"newState"],[140,22,163,20],[140,23,163,21,"enemies"],[140,30,163,28],[140,31,163,29,"enemyIndex"],[140,41,163,39],[140,42,163,40],[140,43,163,41,"lastDamaged"],[140,54,163,52],[140,57,163,55,"newTick"],[140,64,163,62],[141,12,164,10],[141,13,164,11],[141,14,164,12],[142,10,165,8],[143,8,166,6],[143,9,166,7],[143,10,166,8],[145,8,168,6],[146,8,169,6],[146,13,169,11],[146,17,169,15,"i"],[146,18,169,16],[146,21,169,19],[146,22,169,20],[146,24,169,22,"i"],[146,25,169,23],[146,28,169,26],[146,29,169,27],[146,31,169,29,"i"],[146,32,169,30],[146,34,169,32],[146,36,169,34],[147,10,170,8],[147,14,170,12,"newState"],[147,22,170,20],[147,23,170,21,"abilityManager"],[147,37,170,35],[147,38,170,36,"isAbilityReady"],[147,52,170,50],[147,53,170,51,"i"],[147,54,170,52],[147,55,170,53],[147,59,170,57,"newState"],[147,67,170,65],[147,68,170,66,"enemies"],[147,75,170,73],[147,76,170,74,"length"],[147,82,170,80],[147,85,170,83],[147,86,170,84],[147,88,170,86],[148,12,171,10],[148,16,171,14,"newState"],[148,24,171,22],[148,25,171,23,"abilityManager"],[148,39,171,37],[148,40,171,38,"useAbility"],[148,50,171,48],[148,51,171,49,"i"],[148,52,171,50],[148,54,171,52,"newTick"],[148,61,171,59],[148,62,171,60],[148,64,171,62],[149,14,172,12,"castAbility"],[149,25,172,23],[149,26,172,24,"newState"],[149,34,172,32],[149,36,172,34,"i"],[149,37,172,35],[149,38,172,36],[150,12,173,10],[151,10,174,8],[152,8,175,6],[154,8,177,6],[155,8,178,6],[155,14,178,12,"deadEnemies"],[155,25,178,23],[155,28,178,26,"newState"],[155,36,178,34],[155,37,178,35,"enemies"],[155,44,178,42],[155,45,178,43,"filter"],[155,51,178,49],[155,52,178,50,"enemy"],[155,57,178,55],[155,61,178,59,"enemy"],[155,66,178,64],[155,67,178,65,"health"],[155,73,178,71],[155,77,178,75],[155,78,178,76],[155,79,178,77],[156,8,179,6,"deadEnemies"],[156,19,179,17],[156,20,179,18,"forEach"],[156,27,179,25],[156,28,179,26,"enemy"],[156,33,179,31],[156,37,179,35],[157,10,180,8,"handleEnemyKill"],[157,25,180,23],[157,26,180,24,"enemy"],[157,31,180,29],[157,32,180,30],[158,8,181,6],[158,9,181,7],[158,10,181,8],[160,8,183,6],[161,8,184,6,"newState"],[161,16,184,14],[161,17,184,15,"enemies"],[161,24,184,22],[161,27,184,25,"newState"],[161,35,184,33],[161,36,184,34,"enemies"],[161,43,184,41],[161,44,184,42,"filter"],[161,50,184,48],[161,51,184,49,"enemy"],[161,56,184,54],[161,60,184,58,"enemy"],[161,65,184,63],[161,66,184,64,"health"],[161,72,184,70],[161,75,184,73],[161,76,184,74],[161,77,184,75],[163,8,186,6],[164,8,187,6],[165,8,188,6],[165,14,188,12,"MAX_ENEMIES"],[165,25,188,23],[165,28,188,26],[165,30,188,28],[166,8,189,6],[166,14,189,12,"MIN_SPAWN_DELAY"],[166,29,189,27],[166,32,189,30],[166,35,189,33],[166,36,189,34],[166,37,189,35],[167,8,190,6],[167,14,190,12,"now"],[167,17,190,15],[167,20,190,18,"Date"],[167,24,190,22],[167,25,190,23,"now"],[167,28,190,26],[167,29,190,27],[167,30,190,28],[168,8,191,6],[168,14,191,12,"hasBoss"],[168,21,191,19],[168,24,191,22,"newState"],[168,32,191,30],[168,33,191,31,"enemies"],[168,40,191,38],[168,41,191,39,"some"],[168,45,191,43],[168,46,191,44,"enemy"],[168,51,191,49],[168,55,191,53,"enemy"],[168,60,191,58],[168,61,191,59,"isBoss"],[168,67,191,65],[168,68,191,66],[170,8,193,6],[171,8,194,6],[171,12,194,10],[171,13,194,11,"newState"],[171,21,194,19],[171,22,194,20,"lastSpawnTime"],[171,35,194,33],[171,37,194,35],[172,10,195,8,"newState"],[172,18,195,16],[172,19,195,17,"lastSpawnTime"],[172,32,195,30],[172,35,195,33,"now"],[172,38,195,36],[173,8,196,6],[174,8,198,6,"console"],[174,15,198,13],[174,16,198,14,"log"],[174,19,198,17],[174,20,198,18],[174,53,198,51,"newState"],[174,61,198,59],[174,62,198,60,"enemies"],[174,69,198,67],[174,70,198,68,"length"],[174,76,198,74],[174,85,198,83,"MAX_ENEMIES"],[174,96,198,94],[174,109,198,107,"hasBoss"],[174,116,198,114],[174,118,198,116],[174,119,198,117],[176,8,200,6],[177,8,201,6],[177,12,201,10],[177,13,201,11,"hasBoss"],[177,20,201,18],[177,24,201,22,"newState"],[177,32,201,30],[177,33,201,31,"enemies"],[177,40,201,38],[177,41,201,39,"length"],[177,47,201,45],[177,50,201,48,"MAX_ENEMIES"],[177,61,201,59],[177,65,201,64,"now"],[177,68,201,67],[177,71,201,70,"newState"],[177,79,201,78],[177,80,201,79,"lastSpawnTime"],[177,93,201,92],[177,97,201,97,"MIN_SPAWN_DELAY"],[177,112,201,112],[177,114,201,114],[178,10,202,8,"console"],[178,17,202,15],[178,18,202,16,"log"],[178,21,202,19],[178,22,202,20],[178,43,202,41,"newState"],[178,51,202,49],[178,52,202,50,"enemies"],[178,59,202,57],[178,60,202,58,"length"],[178,66,202,64],[178,69,202,67],[178,70,202,68],[178,74,202,72,"MAX_ENEMIES"],[178,85,202,83],[178,87,202,85],[178,88,202,86],[179,10,203,8,"spawnTestEnemy"],[179,24,203,22],[179,25,203,23,"newState"],[179,33,203,31],[179,34,203,32],[180,10,204,8,"newState"],[180,18,204,16],[180,19,204,17,"lastSpawnTime"],[180,32,204,30],[180,35,204,33,"now"],[180,38,204,36],[181,8,205,6],[182,8,207,6],[182,15,207,13,"newState"],[182,23,207,21],[183,6,208,4],[183,7,208,5],[183,47,208,6],[184,4,209,2],[184,5,209,3],[186,4,211,2],[187,4,212,2],[187,10,212,8,"findClosestEnemyInternal"],[187,34,212,32],[187,37,212,36,"enemies"],[187,44,212,58],[187,48,212,83],[188,6,213,4],[188,10,213,8,"enemies"],[188,17,213,15],[188,18,213,16,"length"],[188,24,213,22],[188,29,213,27],[188,30,213,28],[188,32,213,30],[188,39,213,37],[188,43,213,41],[190,6,215,4],[191,6,216,4],[191,12,216,10,"SCREEN_WIDTH"],[191,24,216,22],[191,27,216,25],[191,30,216,28],[192,6,217,4],[192,12,217,10,"GAME_AREA_HEIGHT"],[192,28,217,26],[192,31,217,29],[192,34,217,32],[192,37,217,35],[192,40,217,38],[192,41,217,39],[192,42,217,40],[193,6,218,4],[193,12,218,10,"ninjaX"],[193,18,218,16],[193,21,218,19,"SCREEN_WIDTH"],[193,33,218,31],[193,36,218,34],[193,37,218,35],[194,6,219,4],[194,12,219,10,"ninjaY"],[194,18,219,16],[194,21,219,19,"GAME_AREA_HEIGHT"],[194,37,219,35],[194,40,219,38],[194,41,219,39],[195,6,221,4],[195,10,221,8,"closestEnemy"],[195,22,221,20],[195,25,221,23,"enemies"],[195,32,221,30],[195,33,221,31],[195,34,221,32],[195,35,221,33],[196,6,222,4],[196,10,222,8,"closestDistance"],[196,25,222,23],[196,28,222,26,"Infinity"],[196,36,222,34],[197,6,224,4,"enemies"],[197,13,224,11],[197,14,224,12,"forEach"],[197,21,224,19],[197,22,224,20,"enemy"],[197,27,224,25],[197,31,224,29],[198,8,225,6],[198,14,225,12,"distance"],[198,22,225,20],[198,25,225,23,"Math"],[198,29,225,27],[198,30,225,28,"sqrt"],[198,34,225,32],[198,35,226,8,"Math"],[198,39,226,12],[198,40,226,13,"pow"],[198,43,226,16],[198,44,226,17,"enemy"],[198,49,226,22],[198,50,226,23,"position"],[198,58,226,31],[198,59,226,32,"x"],[198,60,226,33],[198,63,226,36,"ninjaX"],[198,69,226,42],[198,71,226,44],[198,72,226,45],[198,73,226,46],[198,76,227,8,"Math"],[198,80,227,12],[198,81,227,13,"pow"],[198,84,227,16],[198,85,227,17,"enemy"],[198,90,227,22],[198,91,227,23,"position"],[198,99,227,31],[198,100,227,32,"y"],[198,101,227,33],[198,104,227,36,"ninjaY"],[198,110,227,42],[198,112,227,44],[198,113,227,45],[198,114,228,6],[198,115,228,7],[199,8,230,6],[199,12,230,10,"distance"],[199,20,230,18],[199,23,230,21,"closestDistance"],[199,38,230,36],[199,40,230,38],[200,10,231,8,"closestDistance"],[200,25,231,23],[200,28,231,26,"distance"],[200,36,231,34],[201,10,232,8,"closestEnemy"],[201,22,232,20],[201,25,232,23,"enemy"],[201,30,232,28],[202,8,233,6],[203,6,234,4],[203,7,234,5],[203,8,234,6],[204,6,236,4,"console"],[204,13,236,11],[204,14,236,12,"log"],[204,17,236,15],[204,18,236,16],[204,60,236,58,"closestDistance"],[204,75,236,73],[204,76,236,74,"toFixed"],[204,83,236,81],[204,84,236,82],[204,85,236,83],[204,86,236,84],[204,88,236,86],[204,89,236,87],[205,6,237,4],[205,13,237,11,"closestEnemy"],[205,25,237,23],[206,4,238,2],[206,5,238,3],[208,4,240,2],[209,4,241,2],[209,10,241,8,"findClosestEnemy"],[209,26,241,24],[209,29,241,27,"findClosestEnemy"],[209,30,241,27],[209,35,241,53],[210,6,242,4],[210,13,242,11,"findClosestEnemyInternal"],[210,37,242,35],[210,38,242,36,"combatState"],[210,49,242,47],[210,50,242,48,"enemies"],[210,57,242,55],[210,58,242,56],[211,4,243,2],[211,5,243,3],[213,4,245,2],[214,4,246,2],[214,10,246,8,"updateNinjaPosition"],[214,29,246,27],[214,32,246,31,"position"],[214,40,246,63],[214,44,246,68],[215,6,247,4,"console"],[215,13,247,11],[215,14,247,12,"log"],[215,17,247,15],[215,18,247,16],[215,67,247,65,"position"],[215,75,247,73],[215,76,247,74,"x"],[215,77,247,75],[215,78,247,76,"toFixed"],[215,85,247,83],[215,86,247,84],[215,87,247,85],[215,88,247,86],[215,93,247,91,"position"],[215,101,247,99],[215,102,247,100,"y"],[215,103,247,101],[215,104,247,102,"toFixed"],[215,111,247,109],[215,112,247,110],[215,113,247,111],[215,114,247,112],[215,117,247,115],[215,118,247,116],[216,6,248,4,"setNinjaPosition"],[216,22,248,20],[216,23,248,21,"position"],[216,31,248,29],[216,32,248,30],[217,4,249,2],[217,5,249,3],[219,4,251,2],[220,4,252,2],[220,10,252,8,"handleProjectileHit"],[220,29,252,27],[220,32,252,31,"projectile"],[220,42,252,59],[220,46,252,64],[221,6,253,4,"console"],[221,13,253,11],[221,14,253,12,"log"],[221,17,253,15],[221,18,253,16],[221,35,253,33,"projectile"],[221,45,253,43],[221,46,253,44,"id"],[221,48,253,46],[221,62,253,60,"projectile"],[221,72,253,70],[221,73,253,71,"targetEnemyId"],[221,86,253,84],[221,94,253,92,"projectile"],[221,104,253,102],[221,105,253,103,"damage"],[221,111,253,109],[221,120,253,118],[221,121,253,119],[222,6,255,4,"setCombatState"],[222,20,255,18],[222,21,255,19,"prev"],[222,25,255,23],[222,29,255,27],[223,8,256,6],[223,14,256,12,"newState"],[223,22,256,20],[223,25,256,23],[224,10,256,25],[224,13,256,28,"prev"],[225,8,256,33],[225,9,256,34],[227,8,258,6],[228,8,259,6],[228,14,259,12,"enemyIndex"],[228,24,259,22],[228,27,259,25,"newState"],[228,35,259,33],[228,36,259,34,"enemies"],[228,43,259,41],[228,44,259,42,"findIndex"],[228,53,259,51],[228,54,259,52,"e"],[228,55,259,53],[228,59,259,57,"e"],[228,60,259,58],[228,61,259,59,"id"],[228,63,259,61],[228,68,259,66,"projectile"],[228,78,259,76],[228,79,259,77,"targetEnemyId"],[228,92,259,90],[228,93,259,91],[229,8,260,6],[229,12,260,10,"enemyIndex"],[229,22,260,20],[229,26,260,24],[229,27,260,25],[229,29,260,27],[230,10,261,8,"newState"],[230,18,261,16],[230,19,261,17,"enemies"],[230,26,261,24],[230,29,261,27],[230,30,261,28],[230,33,261,31,"newState"],[230,41,261,39],[230,42,261,40,"enemies"],[230,49,261,47],[230,50,261,48],[231,10,262,8,"newState"],[231,18,262,16],[231,19,262,17,"enemies"],[231,26,262,24],[231,27,262,25,"enemyIndex"],[231,37,262,35],[231,38,262,36],[231,41,262,39],[232,12,263,10],[232,15,263,13,"newState"],[232,23,263,21],[232,24,263,22,"enemies"],[232,31,263,29],[232,32,263,30,"enemyIndex"],[232,42,263,40],[232,43,263,41],[233,12,264,10,"health"],[233,18,264,16],[233,20,264,18,"newState"],[233,28,264,26],[233,29,264,27,"enemies"],[233,36,264,34],[233,37,264,35,"enemyIndex"],[233,47,264,45],[233,48,264,46],[233,49,264,47,"health"],[233,55,264,53],[233,58,264,56,"projectile"],[233,68,264,66],[233,69,264,67,"damage"],[233,75,264,73],[234,12,265,10,"lastDamaged"],[234,23,265,21],[234,25,265,23,"combatEngine"],[234,44,265,35],[234,45,265,35,"combatEngine"],[234,57,265,35],[234,58,265,36,"getCurrentTick"],[234,72,265,50],[234,73,265,51],[235,10,266,8],[235,11,266,9],[236,10,268,8,"console"],[236,17,268,15],[236,18,268,16,"log"],[236,21,268,19],[236,22,268,20],[236,34,268,32,"projectile"],[236,44,268,42],[236,45,268,43,"targetEnemyId"],[236,58,268,56],[236,70,268,68,"newState"],[236,78,268,76],[236,79,268,77,"enemies"],[236,86,268,84],[236,87,268,85,"enemyIndex"],[236,97,268,95],[236,98,268,96],[236,99,268,97,"health"],[236,105,268,103],[236,109,268,107,"newState"],[236,117,268,115],[236,118,268,116,"enemies"],[236,125,268,123],[236,126,268,124,"enemyIndex"],[236,136,268,134],[236,137,268,135],[236,138,268,136,"maxHealth"],[236,147,268,145],[236,149,268,147],[236,150,268,148],[237,8,269,6],[238,8,271,6],[238,15,271,13,"newState"],[238,23,271,21],[239,6,272,4],[239,7,272,5],[239,8,272,6],[241,6,274,4],[242,6,275,4,"setProjectiles"],[242,20,275,18],[242,21,275,19,"prev"],[242,25,275,23],[242,29,275,27,"prev"],[242,33,275,31],[242,34,275,32,"filter"],[242,40,275,38],[242,41,275,39,"p"],[242,42,275,40],[242,46,275,44,"p"],[242,47,275,45],[242,48,275,46,"id"],[242,50,275,48],[242,55,275,53,"projectile"],[242,65,275,63],[242,66,275,64,"id"],[242,68,275,66],[242,69,275,67],[242,70,275,68],[243,4,276,2],[243,5,276,3],[245,4,278,2],[246,4,279,2],[246,10,279,8,"castAbility"],[246,21,279,19],[246,24,279,22,"castAbility"],[246,25,279,23,"state"],[246,30,279,41],[246,32,279,43,"slotIndex"],[246,41,279,60],[246,46,279,65],[247,6,280,4],[247,12,280,10,"deck"],[247,16,280,14],[247,19,280,17,"state"],[247,24,280,22],[247,25,280,23,"abilityManager"],[247,39,280,37],[247,40,280,38,"getDeck"],[247,47,280,45],[247,48,280,46],[247,49,280,47],[248,6,281,4],[248,12,281,10,"ability"],[248,19,281,17],[248,22,281,20,"deck"],[248,26,281,24],[248,27,281,25,"slots"],[248,32,281,30],[248,33,281,31,"slotIndex"],[248,42,281,40],[248,43,281,41],[249,6,282,4],[249,10,282,8],[249,11,282,9,"ability"],[249,18,282,16],[249,20,282,18],[251,6,284,4],[252,6,285,4],[252,12,285,10,"target"],[252,18,285,16],[252,21,285,19,"findClosestEnemyInternal"],[252,45,285,43],[252,46,285,44,"state"],[252,51,285,49],[252,52,285,50,"enemies"],[252,59,285,57],[252,60,285,58],[253,6,286,4],[253,10,286,8],[253,11,286,9,"target"],[253,17,286,15],[253,19,286,17],[255,6,288,4],[256,6,289,4],[256,10,289,8,"damage"],[256,16,289,14],[256,19,289,17,"ability"],[256,26,289,24],[256,27,289,25,"stats"],[256,32,289,30],[256,33,289,31,"baseDamage"],[256,43,289,41],[258,6,291,4],[259,6,292,4,"deck"],[259,10,292,8],[259,11,292,9,"activeSynergies"],[259,26,292,24],[259,27,292,25,"forEach"],[259,34,292,32],[259,35,292,33,"synergy"],[259,42,292,40],[259,46,292,44],[260,8,293,6],[260,12,293,10,"synergy"],[260,19,293,17],[260,20,293,18,"bonus"],[260,25,293,23],[260,26,293,24,"damageBonus"],[260,37,293,35],[260,41,294,10,"synergy"],[260,48,294,17],[260,49,294,18,"requiredTags"],[260,61,294,30],[260,62,294,31,"some"],[260,66,294,35],[260,67,294,36,"tag"],[260,70,294,39],[260,74,294,43,"ability"],[260,81,294,50],[260,82,294,51,"tags"],[260,86,294,55],[260,87,294,56,"includes"],[260,95,294,64],[260,96,294,65,"tag"],[260,99,294,68],[260,100,294,69],[260,101,294,70],[260,103,294,72],[261,10,295,8,"damage"],[261,16,295,14],[261,20,295,19],[261,21,295,20],[261,24,295,23,"synergy"],[261,31,295,30],[261,32,295,31,"bonus"],[261,37,295,36],[261,38,295,37,"damageBonus"],[261,49,295,48],[261,52,295,51],[261,55,295,55],[262,8,296,6],[263,6,297,4],[263,7,297,5],[263,8,297,6],[265,6,299,4],[266,6,300,4],[266,12,300,10,"damageResult"],[266,24,300,22],[266,27,300,25,"DamageCalculator"],[266,46,300,41],[266,47,300,41,"DamageCalculator"],[266,63,300,41],[266,64,300,42,"calculateDamage"],[266,79,300,57],[266,80,300,58,"damage"],[266,86,300,64],[266,88,300,66,"state"],[266,93,300,71],[266,94,300,72,"playerStats"],[266,105,300,83],[266,107,300,85,"target"],[266,113,300,91],[266,114,300,92,"stats"],[266,119,300,97],[266,120,300,98],[268,6,302,4],[269,6,303,4,"createProjectile"],[269,22,303,20],[269,23,303,21,"target"],[269,29,303,27],[269,31,303,29,"damageResult"],[269,43,303,41],[269,44,303,42,"damage"],[269,50,303,48],[269,52,303,50,"ninjaPosition"],[269,65,303,63],[269,66,303,64],[271,6,305,4],[272,6,306,4],[272,10,306,8,"ability"],[272,17,306,15],[272,18,306,16,"effects"],[272,25,306,23],[272,26,306,24,"includes"],[272,34,306,32],[272,35,306,33],[272,40,306,38],[272,41,306,39],[272,45,306,43,"ability"],[272,52,306,50],[272,53,306,51,"stats"],[272,58,306,56],[272,59,306,57,"duration"],[272,67,306,65],[272,69,306,67],[273,8,307,6,"state"],[273,13,307,11],[273,14,307,12,"statusEffects"],[273,27,307,25],[273,28,307,26,"addEffect"],[273,37,307,35],[273,38,307,36,"target"],[273,44,307,42],[273,45,307,43,"id"],[273,47,307,45],[273,49,307,47],[274,10,308,8,"id"],[274,12,308,10],[274,14,308,12],[274,17,308,15,"ability"],[274,24,308,22],[274,25,308,23,"id"],[274,27,308,25],[274,33,308,31],[275,10,309,8,"type"],[275,14,309,12],[275,16,309,14],[275,21,309,19],[276,10,310,8,"remainingTicks"],[276,24,310,22],[276,26,310,24,"Math"],[276,30,310,28],[276,31,310,29,"floor"],[276,36,310,34],[276,37,310,35,"ability"],[276,44,310,42],[276,45,310,43,"stats"],[276,50,310,48],[276,51,310,49,"duration"],[276,59,310,57],[276,62,310,60],[276,64,310,62],[276,65,310,63],[277,10,310,65],[278,10,311,8,"tickInterval"],[278,22,311,20],[278,24,311,22],[278,26,311,24],[279,10,311,26],[280,10,312,8,"lastTick"],[280,18,312,16],[280,20,312,18,"state"],[280,25,312,23],[280,26,312,24,"currentTick"],[280,37,312,35],[281,10,313,8,"value"],[281,15,313,13],[281,17,313,15,"Math"],[281,21,313,19],[281,22,313,20,"floor"],[281,27,313,25],[281,28,313,26,"damage"],[281,34,313,32],[281,37,313,35],[281,40,313,38],[281,41,313,39],[282,10,313,41],[283,10,314,8,"stackable"],[283,19,314,17],[283,21,314,19],[284,8,315,6],[284,9,315,7],[284,10,315,8],[285,6,316,4],[286,6,318,4,"console"],[286,13,318,11],[286,14,318,12,"log"],[286,17,318,15],[286,18,318,16],[286,24,318,22,"ability"],[286,31,318,29],[286,32,318,30,"name"],[286,36,318,34],[286,69,318,67,"damageResult"],[286,81,318,79],[286,82,318,80,"damage"],[286,88,318,86],[286,98,318,96,"damageResult"],[286,110,318,108],[286,111,318,109,"isCritical"],[286,121,318,119],[286,124,318,122],[286,134,318,132],[286,137,318,135],[286,139,318,137],[286,141,318,139],[286,142,318,140],[287,4,319,2],[287,5,319,3],[289,4,321,2],[290,4,322,2],[290,10,322,8,"createProjectile"],[290,26,322,24],[290,29,322,27,"createProjectile"],[290,30,322,28,"targetEnemy"],[290,41,322,52],[290,43,322,54,"damage"],[290,49,322,68],[290,51,322,70,"ninjaPos"],[290,59,322,103],[290,64,322,108],[291,6,323,4],[291,12,323,10,"SCREEN_WIDTH"],[291,24,323,22],[291,27,323,25],[291,30,323,28],[292,6,324,4],[292,12,324,10,"GAME_AREA_HEIGHT"],[292,28,324,26],[292,31,324,29],[292,34,324,32],[292,37,324,35],[292,40,324,38],[292,41,324,39],[292,42,324,40],[293,6,325,4],[293,12,325,10,"NINJA_SIZE"],[293,22,325,20],[293,25,325,23],[293,27,325,25],[295,6,327,4],[296,6,328,4],[296,12,328,10,"ninjaX"],[296,18,328,16],[296,21,328,19,"ninjaPos"],[296,29,328,27],[296,32,328,30,"ninjaPos"],[296,40,328,38],[296,41,328,39,"x"],[296,42,328,40],[296,45,328,43,"NINJA_SIZE"],[296,55,328,53],[296,58,328,56],[296,59,328,57],[296,62,328,60,"SCREEN_WIDTH"],[296,74,328,72],[296,77,328,75],[296,78,328,76],[297,6,329,4],[297,12,329,10,"ninjaY"],[297,18,329,16],[297,21,329,19,"ninjaPos"],[297,29,329,27],[297,32,329,30,"ninjaPos"],[297,40,329,38],[297,41,329,39,"y"],[297,42,329,40],[297,45,329,43,"NINJA_SIZE"],[297,55,329,53],[297,58,329,56],[297,59,329,57],[297,62,329,60,"GAME_AREA_HEIGHT"],[297,78,329,76],[297,81,329,79],[297,82,329,80],[298,6,330,4],[298,12,330,10,"ENEMY_SIZE"],[298,22,330,20],[298,25,330,23],[298,27,330,25],[299,6,332,4],[299,12,332,10,"projectile"],[299,22,332,38],[299,25,332,41],[300,8,333,6,"id"],[300,10,333,8],[300,12,333,10],[300,20,333,18,"Date"],[300,24,333,22],[300,25,333,23,"now"],[300,28,333,26],[300,29,333,27],[300,30,333,28],[300,34,333,32,"Math"],[300,38,333,36],[300,39,333,37,"random"],[300,45,333,43],[300,46,333,44],[300,47,333,45],[300,49,333,47],[301,8,334,6,"x"],[301,9,334,7],[301,11,334,9,"ninjaX"],[301,17,334,15],[302,8,335,6,"y"],[302,9,335,7],[302,11,335,9,"ninjaY"],[302,17,335,15],[303,8,336,6,"targetX"],[303,15,336,13],[303,17,336,15,"targetEnemy"],[303,28,336,26],[303,29,336,27,"position"],[303,37,336,35],[303,38,336,36,"x"],[303,39,336,37],[303,42,336,40,"ENEMY_SIZE"],[303,52,336,50],[303,55,336,53],[303,56,336,54],[304,8,337,6,"targetY"],[304,15,337,13],[304,17,337,15,"targetEnemy"],[304,28,337,26],[304,29,337,27,"position"],[304,37,337,35],[304,38,337,36,"y"],[304,39,337,37],[304,42,337,40,"ENEMY_SIZE"],[304,52,337,50],[304,55,337,53],[304,56,337,54],[305,8,338,6,"targetEnemyId"],[305,21,338,19],[305,23,338,21,"targetEnemy"],[305,34,338,32],[305,35,338,33,"id"],[305,37,338,35],[306,8,339,6,"damage"],[306,14,339,12],[306,16,339,14,"damage"],[306,22,339,20],[307,8,340,6,"startTime"],[307,17,340,15],[307,19,340,17,"Date"],[307,23,340,21],[307,24,340,22,"now"],[307,27,340,25],[307,28,340,26],[307,29,340,27],[308,8,341,6,"duration"],[308,16,341,14],[308,18,341,16],[308,21,341,19],[308,22,341,21],[309,6,342,4],[309,7,342,5],[310,6,344,4,"console"],[310,13,344,11],[310,14,344,12,"log"],[310,17,344,15],[310,18,344,16],[310,53,344,51,"targetEnemy"],[310,64,344,62],[310,65,344,63,"id"],[310,67,344,65],[310,75,344,73,"damage"],[310,81,344,79],[310,90,344,88],[310,91,344,89],[311,6,345,4,"console"],[311,13,345,11],[311,14,345,12,"log"],[311,17,345,15],[311,18,345,16],[311,53,345,51,"ninjaX"],[311,59,345,57],[311,64,345,62,"ninjaY"],[311,70,345,68],[311,87,345,85,"projectile"],[311,97,345,95],[311,98,345,96,"targetX"],[311,105,345,103],[311,110,345,108,"projectile"],[311,120,345,118],[311,121,345,119,"targetY"],[311,128,345,126],[311,131,345,129],[311,132,345,130],[312,6,347,4,"setProjectiles"],[312,20,347,18],[312,21,347,19,"prev"],[312,25,347,23],[312,29,347,27],[312,30,347,28],[312,33,347,31,"prev"],[312,37,347,35],[312,39,347,37,"projectile"],[312,49,347,47],[312,50,347,48],[312,51,347,49],[314,6,349,4],[315,6,350,4,"setTimeout"],[315,16,350,14],[315,17,350,15],[315,23,350,21],[316,8,351,6,"handleProjectileHit"],[316,27,351,25],[316,28,351,26,"projectile"],[316,38,351,36],[316,39,351,37],[317,6,352,4],[317,7,352,5],[317,9,352,7],[317,12,352,10],[317,13,352,11],[318,4,353,2],[318,5,353,3],[320,4,355,2],[321,4,356,2],[321,10,356,8,"spawnTestEnemy"],[321,24,356,22],[321,27,356,26,"state"],[321,32,356,44],[321,36,356,49],[322,6,357,4],[323,6,358,4],[323,12,358,10,"SCREEN_WIDTH"],[323,24,358,22],[323,27,358,25],[323,30,358,28],[323,31,358,29],[323,32,358,30],[324,6,359,4],[324,12,359,10,"GAME_AREA_HEIGHT"],[324,28,359,26],[324,31,359,29],[324,34,359,32],[324,37,359,35],[324,40,359,38],[324,41,359,39],[324,42,359,40],[325,6,360,4],[325,12,360,10,"ENEMY_SIZE"],[325,22,360,20],[325,25,360,23],[325,27,360,25],[327,6,362,4],[328,6,363,4],[328,12,363,10,"x"],[328,13,363,11],[328,16,363,14,"Math"],[328,20,363,18],[328,21,363,19,"random"],[328,27,363,25],[328,28,363,26],[328,29,363,27],[328,33,363,31,"SCREEN_WIDTH"],[328,45,363,43],[328,48,363,46,"ENEMY_SIZE"],[328,58,363,56],[328,61,363,59],[328,62,363,60],[328,63,363,61],[328,66,363,64,"ENEMY_SIZE"],[328,76,363,74],[328,77,363,75],[328,78,363,76],[329,6,364,4],[329,12,364,10,"y"],[329,13,364,11],[329,16,364,14,"Math"],[329,20,364,18],[329,21,364,19,"random"],[329,27,364,25],[329,28,364,26],[329,29,364,27],[329,33,364,31,"GAME_AREA_HEIGHT"],[329,49,364,47],[329,52,364,50,"ENEMY_SIZE"],[329,62,364,60],[329,65,364,63],[329,66,364,64],[329,67,364,65],[329,70,364,68,"ENEMY_SIZE"],[329,80,364,78],[329,81,364,79],[329,82,364,80],[331,6,366,4],[331,12,366,10,"enemy"],[331,17,366,28],[331,20,366,31],[332,8,367,6,"id"],[332,10,367,8],[332,12,367,10],[332,21,367,19],[332,23,367,21,"enemyCounter"],[332,35,367,33],[332,37,367,35],[333,8,368,6,"name"],[333,12,368,10],[333,14,368,12],[333,24,368,22],[334,8,369,6,"health"],[334,14,369,12],[334,16,369,14],[334,19,369,17],[335,8,370,6,"maxHealth"],[335,17,370,15],[335,19,370,17],[335,22,370,20],[336,8,371,6,"stats"],[336,13,371,11],[336,15,371,13],[337,10,372,8,"attack"],[337,16,372,14],[337,18,372,16],[337,20,372,18],[338,10,373,8,"defense"],[338,17,373,15],[338,19,373,17],[338,21,373,19],[339,10,374,8,"health"],[339,16,374,14],[339,18,374,16],[339,21,374,19],[340,10,375,8,"maxHealth"],[340,19,375,17],[340,21,375,19],[340,24,375,22],[341,10,376,8,"critChance"],[341,20,376,18],[341,22,376,20],[341,23,376,21],[342,10,377,8,"critDamage"],[342,20,377,18],[342,22,377,20],[342,25,377,23],[343,10,378,8,"cooldownReduction"],[343,27,378,25],[343,29,378,27],[344,8,379,6],[344,9,379,7],[345,8,380,6,"position"],[345,16,380,14],[345,18,380,16],[346,10,380,18,"x"],[346,11,380,19],[347,10,380,21,"y"],[348,8,380,23],[348,9,380,24],[349,8,381,6,"lastDamaged"],[349,19,381,17],[349,21,381,19],[350,6,382,4],[350,7,382,5],[351,6,384,4,"state"],[351,11,384,9],[351,12,384,10,"enemies"],[351,19,384,17],[351,20,384,18,"push"],[351,24,384,22],[351,25,384,23,"enemy"],[351,30,384,28],[351,31,384,29],[352,4,385,2],[352,5,385,3],[354,4,387,2],[355,4,388,2],[355,10,388,8,"startCombat"],[355,21,388,19],[355,24,388,22,"startCombat"],[355,25,388,22],[355,30,388,28],[356,6,389,4,"console"],[356,13,389,11],[356,14,389,12,"log"],[356,17,389,15],[356,18,389,16],[356,63,389,61],[356,64,389,62],[357,6,390,4,"setCombatState"],[357,20,390,18],[357,21,390,19,"prev"],[357,25,390,23],[357,30,390,28],[358,8,390,30],[358,11,390,33,"prev"],[358,15,390,37],[359,8,390,39,"isInCombat"],[359,18,390,49],[359,20,390,51],[360,6,390,56],[360,7,390,57],[360,8,390,58],[360,9,390,59],[362,6,392,4],[363,6,393,4,"combatEngine"],[363,25,393,16],[363,26,393,16,"combatEngine"],[363,38,393,16],[363,39,393,17,"addTickCallback"],[363,54,393,32],[363,55,393,33,"handleCombatTick"],[363,71,393,49],[363,72,393,50],[364,6,394,4,"console"],[364,13,394,11],[364,14,394,12,"log"],[364,17,394,15],[364,18,394,16],[364,62,394,60],[364,63,394,61],[366,6,396,4],[367,6,397,4,"combatEngine"],[367,25,397,16],[367,26,397,16,"combatEngine"],[367,38,397,16],[367,39,397,17,"start"],[367,44,397,22],[367,45,397,23],[367,46,397,24],[368,4,398,2],[368,5,398,3],[370,4,400,2],[371,4,401,2],[371,10,401,8,"stopCombat"],[371,20,401,18],[371,23,401,21,"stopCombat"],[371,24,401,21],[371,29,401,27],[372,6,402,4,"setCombatState"],[372,20,402,18],[372,21,402,19,"prev"],[372,25,402,23],[372,30,402,28],[373,8,402,30],[373,11,402,33,"prev"],[373,15,402,37],[374,8,402,39,"isInCombat"],[374,18,402,49],[374,20,402,51],[375,6,402,57],[375,7,402,58],[375,8,402,59],[375,9,402,60],[376,6,403,4,"combatEngine"],[376,25,403,16],[376,26,403,16,"combatEngine"],[376,38,403,16],[376,39,403,17,"removeTickCallback"],[376,57,403,35],[376,58,403,36,"handleCombatTick"],[376,74,403,52],[376,75,403,53],[377,4,404,2],[377,5,404,3],[379,4,406,2],[380,4,407,2],[380,10,407,8,"equipAbility"],[380,22,407,20],[380,25,407,23,"equipAbility"],[380,26,407,24,"abilityId"],[380,35,407,41],[380,37,407,43,"slotIndex"],[380,46,407,60],[380,51,407,74],[381,6,408,4],[381,13,408,11,"combatState"],[381,24,408,22],[381,25,408,23,"abilityManager"],[381,39,408,37],[381,40,408,38,"equipAbility"],[381,52,408,50],[381,53,408,51,"abilityId"],[381,62,408,60],[381,64,408,62,"slotIndex"],[381,73,408,71],[381,74,408,72],[382,4,409,2],[382,5,409,3],[383,4,411,2],[383,10,411,8,"getDeck"],[383,17,411,15],[383,20,411,18,"getDeck"],[383,21,411,18],[383,26,411,24],[384,6,412,4],[384,13,412,11,"combatState"],[384,24,412,22],[384,25,412,23,"abilityManager"],[384,39,412,37],[384,40,412,38,"getDeck"],[384,47,412,45],[384,48,412,46],[384,49,412,47],[385,4,413,2],[385,5,413,3],[386,4,415,2],[386,10,415,8,"getAvailableAbilities"],[386,31,415,29],[386,34,415,32,"getAvailableAbilities"],[386,35,415,32],[386,40,415,38],[387,6,416,4],[387,13,416,11,"combatState"],[387,24,416,22],[387,25,416,23,"abilityManager"],[387,39,416,37],[387,40,416,38,"getAvailableAbilities"],[387,61,416,59],[387,62,416,60],[387,63,416,61],[388,4,417,2],[388,5,417,3],[389,4,419,2],[389,10,419,8,"upgradeAbility"],[389,24,419,22],[389,27,419,26,"abilityId"],[389,36,419,43],[389,40,419,57],[390,6,420,4],[390,13,420,11,"combatState"],[390,24,420,22],[390,25,420,23,"abilityManager"],[390,39,420,37],[390,40,420,38,"upgradeAbility"],[390,54,420,52],[390,55,420,53,"abilityId"],[390,64,420,62],[390,65,420,63],[391,4,421,2],[391,5,421,3],[393,4,423,2],[394,4,424,2],[394,10,424,8,"clearAllEnemies"],[394,25,424,23],[394,28,424,26,"clearAllEnemies"],[394,29,424,26],[394,34,424,32],[395,6,425,4,"console"],[395,13,425,11],[395,14,425,12,"log"],[395,17,425,15],[395,18,425,16],[395,67,425,65],[395,68,425,66],[396,6,426,4,"setCombatState"],[396,20,426,18],[396,21,426,19,"prev"],[396,25,426,23],[396,30,426,28],[397,8,427,6],[397,11,427,9,"prev"],[397,15,427,13],[398,8,428,6,"enemies"],[398,15,428,13],[398,17,428,15],[399,6,429,4],[399,7,429,5],[399,8,429,6],[399,9,429,7],[400,4,430,2],[400,5,430,3],[402,4,432,2],[403,4,433,2],[403,10,433,8,"triggerLevelUpExplosion"],[403,33,433,31],[403,36,433,34,"triggerLevelUpExplosion"],[403,37,433,34],[403,42,433,40],[404,6,434,4,"console"],[404,13,434,11],[404,14,434,12,"log"],[404,17,434,15],[404,18,434,16],[404,70,434,68],[404,71,434,69],[405,6,436,4],[405,12,436,10,"explosionTime"],[405,25,436,23],[405,28,436,26,"Date"],[405,32,436,30],[405,33,436,31,"now"],[405,36,436,34],[405,37,436,35],[405,38,436,36],[406,6,437,4,"setLastExplosionTime"],[406,26,437,24],[406,27,437,25,"explosionTime"],[406,40,437,38],[406,41,437,39],[407,6,439,4,"setCombatState"],[407,20,439,18],[407,21,439,19,"prev"],[407,25,439,23],[407,29,439,27],[408,8,440,6],[409,8,441,6],[409,14,441,12,"enemyCount"],[409,24,441,22],[409,27,441,25,"prev"],[409,31,441,29],[409,32,441,30,"enemies"],[409,39,441,37],[409,40,441,38,"length"],[409,46,441,44],[410,8,442,6],[410,14,442,12,"explosionXP"],[410,25,442,23],[410,28,442,26,"enemyCount"],[410,38,442,36],[410,41,442,39],[410,43,442,41],[410,44,442,42],[410,45,442,43],[411,8,443,6],[411,14,443,12,"explosionGold"],[411,27,443,25],[411,30,443,28,"enemyCount"],[411,40,443,38],[411,43,443,41],[411,44,443,42],[411,45,443,43],[411,46,443,44],[413,8,445,6,"console"],[413,15,445,13],[413,16,445,14,"log"],[413,19,445,17],[413,20,445,18],[413,44,445,42,"enemyCount"],[413,54,445,52],[413,76,445,74,"explosionXP"],[413,87,445,85],[413,98,445,96,"explosionGold"],[413,111,445,109],[413,118,445,116],[413,119,445,117],[415,8,447,6],[416,8,448,6],[416,12,448,10,"explosionXP"],[416,23,448,21],[416,26,448,24],[416,27,448,25],[416,29,448,27],[417,10,449,8,"updateNinja"],[417,21,449,19],[417,22,449,21,"ninja"],[417,27,449,26],[417,32,449,32],[418,12,450,10,"experience"],[418,22,450,20],[418,24,450,22,"ninja"],[418,29,450,27],[418,30,450,28,"experience"],[418,40,450,38],[418,43,450,41,"explosionXP"],[418,54,450,52],[419,12,451,10,"gold"],[419,16,451,14],[419,18,451,16,"ninja"],[419,23,451,21],[419,24,451,22,"gold"],[419,28,451,26],[419,31,451,29,"explosionGold"],[420,10,452,8],[420,11,452,9],[420,12,452,10],[420,13,452,11],[421,8,453,6],[423,8,455,6],[424,8,456,6],[425,8,457,6],[425,14,457,12,"damagedEnemies"],[425,28,457,26],[425,31,457,29,"prev"],[425,35,457,33],[425,36,457,34,"enemies"],[425,43,457,41],[425,44,457,42,"map"],[425,47,457,45],[425,48,457,46,"enemy"],[425,53,457,51],[425,58,457,56],[426,10,458,8],[426,13,458,11,"enemy"],[426,18,458,16],[427,10,459,8,"health"],[427,16,459,14],[427,18,459,16],[427,19,459,17],[428,10,459,19],[429,10,460,8,"lastDamaged"],[429,21,460,19],[429,23,460,21,"combatEngine"],[429,42,460,33],[429,43,460,33,"combatEngine"],[429,55,460,33],[429,56,460,34,"getCurrentTick"],[429,70,460,48],[429,71,460,49],[430,8,461,6],[430,9,461,7],[430,10,461,8],[430,11,461,9],[431,8,463,6],[431,15,463,13],[432,10,464,8],[432,13,464,11,"prev"],[432,17,464,15],[433,10,465,8,"enemies"],[433,17,465,15],[433,19,465,17,"damagedEnemies"],[434,8,466,6],[434,9,466,7],[435,6,467,4],[435,7,467,5],[435,8,467,6],[436,4,468,2],[436,5,468,3],[438,4,470,2],[439,4,471,2],[439,10,471,8,"spawnEnemy"],[439,20,471,18],[439,23,471,22,"position"],[439,31,471,57],[439,35,471,75],[440,6,472,4],[440,12,472,10,"SCREEN_WIDTH"],[440,24,472,22],[440,27,472,25],[440,30,472,28],[441,6,473,4],[441,12,473,10,"GAME_AREA_HEIGHT"],[441,28,473,26],[441,31,473,29],[441,34,473,32],[441,37,473,35],[441,40,473,38],[441,41,473,39],[441,42,473,40],[442,6,474,4],[442,12,474,10,"ENEMY_SIZE"],[442,22,474,20],[442,25,474,23],[442,27,474,25],[444,6,476,4],[445,6,477,4],[445,12,477,10,"x"],[445,13,477,11],[445,16,477,14,"position"],[445,24,477,22],[445,26,477,24,"x"],[445,27,477,25],[445,31,477,29,"Math"],[445,35,477,33],[445,36,477,34,"random"],[445,42,477,40],[445,43,477,41],[445,44,477,42],[445,48,477,46,"SCREEN_WIDTH"],[445,60,477,58],[445,63,477,61,"ENEMY_SIZE"],[445,73,477,71],[445,76,477,74],[445,77,477,75],[445,78,477,76],[445,81,477,79,"ENEMY_SIZE"],[445,91,477,89],[446,6,478,4],[446,12,478,10,"y"],[446,13,478,11],[446,16,478,14,"position"],[446,24,478,22],[446,26,478,24,"y"],[446,27,478,25],[446,31,478,29,"Math"],[446,35,478,33],[446,36,478,34,"random"],[446,42,478,40],[446,43,478,41],[446,44,478,42],[446,48,478,46,"GAME_AREA_HEIGHT"],[446,64,478,62],[446,67,478,65,"ENEMY_SIZE"],[446,77,478,75],[446,80,478,78],[446,81,478,79],[446,82,478,80],[446,85,478,83,"ENEMY_SIZE"],[446,95,478,93],[447,6,480,4],[447,12,480,10,"enemy"],[447,17,480,28],[447,20,480,31],[448,8,481,6,"id"],[448,10,481,8],[448,12,481,10],[448,21,481,19],[448,23,481,21,"enemyCounter"],[448,35,481,33],[448,37,481,35],[449,8,482,6,"name"],[449,12,482,10],[449,14,482,12],[449,24,482,22],[450,8,483,6,"health"],[450,14,483,12],[450,16,483,14],[450,19,483,17],[451,8,484,6,"maxHealth"],[451,17,484,15],[451,19,484,17],[451,22,484,20],[452,8,485,6,"stats"],[452,13,485,11],[452,15,485,13],[453,10,486,8,"attack"],[453,16,486,14],[453,18,486,16],[453,20,486,18],[454,10,487,8,"defense"],[454,17,487,15],[454,19,487,17],[454,21,487,19],[455,10,488,8,"health"],[455,16,488,14],[455,18,488,16],[455,21,488,19],[456,10,489,8,"maxHealth"],[456,19,489,17],[456,21,489,19],[456,24,489,22],[457,10,490,8,"critChance"],[457,20,490,18],[457,22,490,20],[457,23,490,21],[458,10,491,8,"critDamage"],[458,20,491,18],[458,22,491,20],[458,25,491,23],[459,10,492,8,"cooldownReduction"],[459,27,492,25],[459,29,492,27],[460,8,493,6],[460,9,493,7],[461,8,494,6,"position"],[461,16,494,14],[461,18,494,16],[462,10,494,18,"x"],[462,11,494,19],[463,10,494,21,"y"],[464,8,494,23],[464,9,494,24],[465,8,495,6,"lastDamaged"],[465,19,495,17],[465,21,495,19],[466,6,496,4],[466,7,496,5],[467,6,498,4,"setCombatState"],[467,20,498,18],[467,21,498,19,"prev"],[467,25,498,23],[467,30,498,28],[468,8,499,6],[468,11,499,9,"prev"],[468,15,499,13],[469,8,500,6,"enemies"],[469,15,500,13],[469,17,500,15],[469,18,500,16],[469,21,500,19,"prev"],[469,25,500,23],[469,26,500,24,"enemies"],[469,33,500,31],[469,35,500,33,"enemy"],[469,40,500,38],[470,6,501,4],[470,7,501,5],[470,8,501,6],[470,9,501,7],[471,6,503,4],[471,13,503,11,"enemy"],[471,18,503,16],[472,4,504,2],[472,5,504,3],[474,4,506,2],[475,4,507,2],[475,10,507,8,"spawnBoss"],[475,19,507,17],[475,22,507,21,"bossEnemy"],[475,31,507,43],[475,35,507,48],[476,6,508,4,"console"],[476,13,508,11],[476,14,508,12,"log"],[476,17,508,15],[476,18,508,16],[476,39,508,37,"bossEnemy"],[476,48,508,46],[476,49,508,47,"name"],[476,53,508,51],[476,90,508,88],[476,91,508,89],[477,6,509,4,"setCombatState"],[477,20,509,18],[477,21,509,19,"prev"],[477,25,509,23],[477,30,509,28],[478,8,510,6],[478,11,510,9,"prev"],[478,15,510,13],[479,8,511,6,"enemies"],[479,15,511,13],[479,17,511,15],[479,18,511,16,"bossEnemy"],[479,27,511,25],[479,28,511,26],[479,29,511,27],[480,6,512,4],[480,7,512,5],[480,8,512,6],[480,9,512,7],[481,4,513,2],[481,5,513,3],[483,4,515,2],[484,4,516,2],[484,10,516,8,"clearSpecificEnemy"],[484,28,516,26],[484,31,516,30,"enemyId"],[484,38,516,45],[484,42,516,50],[485,6,517,4,"setCombatState"],[485,20,517,18],[485,21,517,19,"prev"],[485,25,517,23],[485,30,517,28],[486,8,518,6],[486,11,518,9,"prev"],[486,15,518,13],[487,8,519,6,"enemies"],[487,15,519,13],[487,17,519,15,"prev"],[487,21,519,19],[487,22,519,20,"enemies"],[487,29,519,27],[487,30,519,28,"filter"],[487,36,519,34],[487,37,519,35,"enemy"],[487,42,519,40],[487,46,519,44,"enemy"],[487,51,519,49],[487,52,519,50,"id"],[487,54,519,52],[487,59,519,57,"enemyId"],[487,66,519,64],[488,6,520,4],[488,7,520,5],[488,8,520,6],[488,9,520,7],[489,4,521,2],[489,5,521,3],[490,4,522,2],[490,8,522,2,"useEffect"],[490,14,522,11],[490,15,522,11,"useEffect"],[490,24,522,11],[490,26,522,12],[490,32,522,18],[491,6,523,4,"combatEngine"],[491,25,523,16],[491,26,523,16,"combatEngine"],[491,38,523,16],[491,39,523,17,"start"],[491,44,523,22],[491,45,523,23],[491,46,523,24],[493,6,525,4],[494,6,526,4,"combatState"],[494,17,526,15],[494,18,526,16,"abilityManager"],[494,32,526,30],[494,33,526,31,"equipAbility"],[494,45,526,43],[494,46,526,44],[494,62,526,60],[494,64,526,62],[494,65,526,63],[494,66,526,64],[495,6,527,4,"combatState"],[495,17,527,15],[495,18,527,16,"abilityManager"],[495,32,527,30],[495,33,527,31,"equipAbility"],[495,45,527,43],[495,46,527,44],[495,61,527,59],[495,63,527,61],[495,64,527,62],[495,65,527,63],[496,6,529,4],[496,13,529,11],[496,19,529,17],[497,8,530,6,"combatEngine"],[497,27,530,18],[497,28,530,18,"combatEngine"],[497,40,530,18],[497,41,530,19,"stop"],[497,45,530,23],[497,46,530,24],[497,47,530,25],[498,6,531,4],[498,7,531,5],[499,4,532,2],[499,5,532,3],[499,7,532,5],[499,9,532,7],[499,10,532,8],[500,4,534,2],[500,10,534,8,"contextValue"],[500,22,534,39],[500,25,534,42],[501,6,535,4,"combatState"],[501,17,535,15],[502,6,536,4,"projectiles"],[502,17,536,15],[503,6,537,4,"startCombat"],[503,17,537,15],[504,6,538,4,"stopCombat"],[504,16,538,14],[505,6,539,4,"equipAbility"],[505,18,539,16],[506,6,540,4,"handleEnemyKill"],[506,21,540,19],[507,6,541,4,"getDeck"],[507,13,541,11],[508,6,542,4,"getAvailableAbilities"],[508,27,542,25],[509,6,543,4,"upgradeAbility"],[509,20,543,18],[510,6,544,4,"spawnEnemy"],[510,16,544,14],[511,6,545,4,"spawnBoss"],[511,15,545,13],[512,6,546,4,"clearAllEnemies"],[512,21,546,19],[513,6,547,4,"clearSpecificEnemy"],[513,24,547,22],[514,6,548,4,"triggerLevelUpExplosion"],[514,29,548,27],[515,6,549,4,"findClosestEnemy"],[515,22,549,20],[516,6,550,4,"updateNinjaPosition"],[516,25,550,23],[517,6,551,4,"lastExplosionTime"],[518,4,552,2],[518,5,552,3],[519,4,554,2],[519,24,555,4],[519,28,555,4,"_reactJsxDevRuntime"],[519,47,555,4],[519,48,555,4,"jsxDEV"],[519,54,555,4],[519,56,555,5,"CombatContext"],[519,69,555,18],[519,70,555,19,"Provider"],[519,78,555,27],[520,6,555,28,"value"],[520,11,555,33],[520,13,555,35,"contextValue"],[520,25,555,48],[521,6,555,48,"children"],[521,14,555,48],[521,16,556,7,"children"],[522,4,556,15],[523,6,556,15,"fileName"],[523,14,556,15],[523,16,556,15,"_jsxFileName"],[523,28,556,15],[524,6,556,15,"lineNumber"],[524,16,556,15],[525,6,556,15,"columnNumber"],[525,18,556,15],[526,4,556,15],[526,11,557,28],[526,12,557,29],[527,2,559,0],[527,3,559,1],[528,2,559,2,"_s3"],[528,5,559,2],[528,6,75,13,"CombatProvider"],[528,20,75,27],[529,4,75,27],[529,12,76,26,"useGame"],[529,24,76,33],[529,25,76,33,"useGame"],[529,32,76,33],[529,34,77,30,"useZone"],[529,46,77,37],[529,47,77,37,"useZone"],[529,54,77,37],[530,2,77,37],[531,2,77,37,"_c"],[531,4,77,37],[531,7,75,13,"CombatProvider"],[531,21,75,27],[532,2,75,27],[532,6,75,27,"_c"],[532,8,75,27],[533,2,75,27,"$RefreshReg$"],[533,14,75,27],[533,15,75,27,"_c"],[533,17,75,27],[534,0,75,27],[534,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","newState.enemies.some$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","setTimeout$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","spawnEnemy","spawnBoss","clearSpecificEnemy","prev.enemies.filter$argument_0","useEffect$argument_0","<anonymous>"],"mappings":"AAA;yBCgE;CDM;8BEI;0BCiC;gBCyB;KDM;GDC;2BGG;mBCE;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;0BKC;OLE;iDIG,yBJ;4CMO,qBN;KDiB;GHC;mCWG;oBCY;KDU;GXI;2BaG;GbE;8BcG;GdG;8BeG;mBXG;oDEI,sCF;KWa;mBCG,oBC,2BD,CD;GfC;sBkBG;iCCa;oCCE,iCD;KDG;GlBsB;2BqBG;mBLyB,6BK;eCG;KDE;GrBC;yBuBG;GvB6B;sBwBG;mBpBE,uCoB;GxBQ;qByBG;mBrBC,wCqB;GzBE;uB0BG;G1BE;kB2BE;G3BE;gC4BE;G5BE;yB6BE;G7BE;0B8BG;mB1BE;M0BG;G9BC;kC+BG;mB3BM;oBFU;UEG;8C4BK;Q5BI;K2BM;G/BC;qBiCG;mB7B2B;M6BG;GjCG;oBkCG;mB9BE;M8BG;GlCC;6BmCG;mB/BC;mCgCE,6BhC;M+BC;GnCC;YqCC;WCO;KDE;GrCC;CF2B"},"hasCjsExports":false},"type":"js/module"}]}