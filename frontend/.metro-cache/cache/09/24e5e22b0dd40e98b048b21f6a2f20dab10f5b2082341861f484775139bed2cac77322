{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('üîß AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('üîç AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      // Ensure loading screen shows for minimum duration\n      const startTime = Date.now();\n      const minLoadingDuration = 1500; // 1.5 seconds\n\n      try {\n        setIsLoading(true);\n        console.log('üîç Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('‚úÖ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('‚úÖ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('üì± Mobile environment - no localStorage available');\n          }\n        }\n        console.log('üîç Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('üîë Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('‚úÖ Auto-login successful!');\n            } else {\n              console.log('‚ùå Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (typeof window !== 'undefined' && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('‚ùå Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('üîç No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        // Ensure minimum loading duration for better UX\n        const elapsedTime = Date.now() - startTime;\n        const remainingTime = minLoadingDuration - elapsedTime;\n        if (remainingTime > 0) {\n          console.log(`üïê Ensuring loading screen shows for ${remainingTime}ms more`);\n          setTimeout(() => {\n            console.log('üèÅ Credential check completed, setting isLoading to false');\n            setIsLoading(false);\n          }, remainingTime);\n        } else {\n          console.log('üèÅ Credential check completed, setting isLoading to false');\n          setIsLoading(false);\n        }\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('üîç AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"PiwoDeqPRCsfRwdePw8UHQ38Ar0=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":420,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,414,0,"Object"],[21,8,414,0],[21,9,414,0,"defineProperty"],[21,23,414,0],[21,24,414,0,"exports"],[21,31,414,0],[22,4,414,0,"enumerable"],[22,14,414,0],[23,4,414,0,"get"],[23,7,414,0],[23,18,414,0,"get"],[23,19,414,0],[24,6,414,0],[24,13,414,0,"useAuth"],[24,20,414,0],[25,4,414,0],[26,2,414,0],[27,2,420,2],[27,6,420,2,"_expoVirtualEnv"],[27,21,420,2],[27,24,420,2,"require"],[27,31,420,2],[27,32,420,2,"_dependencyMap"],[27,46,420,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,4,0],[31,6,4,0,"_expoConstants"],[31,20,4,0],[31,23,4,0,"require"],[31,30,4,0],[31,31,4,0,"_dependencyMap"],[31,45,4,0],[32,2,4,0],[32,6,4,0,"Constants"],[32,15,4,0],[32,18,4,0,"_interopDefault"],[32,33,4,0],[32,34,4,0,"_expoConstants"],[32,48,4,0],[33,2,4,39],[33,6,4,39,"_reactJsxDevRuntime"],[33,25,4,39],[33,28,4,39,"require"],[33,35,4,39],[33,36,4,39,"_dependencyMap"],[33,50,4,39],[34,2,27,0],[34,8,27,6,"AuthContext"],[34,19,27,17],[34,35,27,20],[34,39,27,20,"createContext"],[34,45,27,33],[34,46,27,33,"createContext"],[34,59,27,33],[34,61,27,63,"undefined"],[34,70,27,72],[34,71,27,73],[36,2,29,0],[37,2,30,0],[37,8,30,6,"getBackendUrl"],[37,21,30,19],[37,24,30,22,"getBackendUrl"],[37,25,30,22],[37,30,30,28],[38,4,31,2],[38,8,31,6],[38,15,31,13,"window"],[38,21,31,19],[38,26,31,24],[38,37,31,35],[38,39,31,37],[39,6,32,4],[39,12,32,10,"currentHost"],[39,23,32,21],[39,26,32,24,"window"],[39,32,32,30],[39,33,32,31,"location"],[39,41,32,39],[39,42,32,40,"hostname"],[39,50,32,48],[40,6,33,4],[40,12,33,10,"currentProtocol"],[40,27,33,25],[40,30,33,28,"window"],[40,36,33,34],[40,37,33,35,"location"],[40,45,33,43],[40,46,33,44,"protocol"],[40,54,33,52],[42,6,35,4],[43,6,36,4],[43,10,36,8,"currentHost"],[43,21,36,19],[43,22,36,20,"includes"],[43,30,36,28],[43,31,36,29],[43,42,36,40],[43,43,36,41],[43,45,36,43],[44,8,37,6],[44,15,37,13],[44,18,37,16,"currentProtocol"],[44,33,37,31],[44,38,37,36,"currentHost"],[44,49,37,47],[44,51,37,49],[45,6,38,4],[46,6,39,4],[47,6,40,4],[47,10,40,8,"currentHost"],[47,21,40,19],[47,22,40,20,"includes"],[47,30,40,28],[47,31,40,29],[47,59,40,57],[47,60,40,58],[47,62,40,60],[48,8,41,6],[48,15,41,13],[48,18,41,16,"currentProtocol"],[48,33,41,31],[48,38,41,36,"currentHost"],[48,49,41,47],[48,51,41,49],[49,6,42,4],[50,4,43,2],[52,4,45,2],[53,4,46,2],[53,11,46,9,"Constants"],[53,20,46,18],[53,21,46,18,"default"],[53,28,46,18],[53,29,46,19,"expoConfig"],[53,39,46,29],[53,41,46,31,"extra"],[53,46,46,36],[53,48,46,38,"backendUrl"],[53,58,46,48],[53,62,46,48,"_expoVirtualEnv"],[53,77,46,48],[53,78,46,48,"env"],[53,81,46,48],[53,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[53,105,46,87],[53,109,46,91],[53,132,46,114],[54,2,47,0],[54,3,47,1],[55,2,49,0],[55,8,49,6,"API_BASE_URL"],[55,20,49,18],[55,23,49,21,"getBackendUrl"],[55,36,49,34],[55,37,49,35],[55,38,49,36],[56,2,51,0,"console"],[56,9,51,7],[56,10,51,8,"log"],[56,13,51,11],[56,14,51,12],[56,59,51,57],[56,60,51,58],[57,2,52,0,"console"],[57,9,52,7],[57,10,52,8,"log"],[57,13,52,11],[57,14,52,12],[57,42,52,40],[57,44,52,42,"API_BASE_URL"],[57,56,52,54],[57,57,52,55],[58,2,53,0],[58,6,53,4],[58,13,53,11,"window"],[58,19,53,17],[58,24,53,22],[58,35,53,33],[58,37,53,35],[59,4,54,2,"console"],[59,11,54,9],[59,12,54,10,"log"],[59,15,54,13],[59,16,54,14],[59,39,54,37],[59,41,54,39,"window"],[59,47,54,45],[59,48,54,46,"location"],[59,56,54,54],[59,57,54,55,"hostname"],[59,65,54,63],[59,66,54,64],[60,4,55,2,"console"],[60,11,55,9],[60,12,55,10,"log"],[60,15,55,13],[60,16,55,14],[60,39,55,37],[60,41,55,39,"window"],[60,47,55,45],[60,48,55,46,"location"],[60,56,55,54],[60,57,55,55,"protocol"],[60,65,55,63],[60,66,55,64],[61,2,56,0],[62,2,58,7],[62,8,58,13,"AuthProvider"],[62,20,58,25],[62,23,58,28,"AuthProvider"],[62,24,58,29],[63,4,58,31,"children"],[64,2,58,65],[64,3,58,66],[64,8,58,71],[65,4,58,71,"_s"],[65,6,58,71],[66,4,59,2],[66,10,59,8],[66,11,59,9,"user"],[66,15,59,13],[66,17,59,15,"setUser"],[66,24,59,22],[66,25,59,23],[66,28,59,26],[66,32,59,26,"useState"],[66,38,59,34],[66,39,59,34,"useState"],[66,47,59,34],[66,49,59,48],[66,53,59,52],[66,54,59,53],[67,4,60,2],[67,10,60,8],[67,11,60,9,"token"],[67,16,60,14],[67,18,60,16,"setToken"],[67,26,60,24],[67,27,60,25],[67,30,60,28],[67,34,60,28,"useState"],[67,40,60,36],[67,41,60,36,"useState"],[67,49,60,36],[67,51,60,52],[67,55,60,56],[67,56,60,57],[68,4,61,2],[68,10,61,8],[68,11,61,9,"isLoading"],[68,20,61,18],[68,22,61,20,"setIsLoading"],[68,34,61,32],[68,35,61,33],[68,38,61,36],[68,42,61,36,"useState"],[68,48,61,44],[68,49,61,44,"useState"],[68,57,61,44],[68,59,61,45],[68,63,61,49],[68,64,61,50],[69,4,63,2],[69,10,63,8,"isAuthenticated"],[69,25,63,23],[69,28,63,26],[69,29,63,27],[69,30,63,28,"user"],[69,34,63,32],[69,38,63,36],[69,39,63,37],[69,40,63,38,"token"],[69,45,63,43],[71,4,65,2],[72,4,66,2],[72,8,66,2,"useEffect"],[72,14,66,11],[72,15,66,11,"useEffect"],[72,24,66,11],[72,26,66,12],[72,32,66,18],[73,6,67,4,"console"],[73,13,67,11],[73,14,67,12,"log"],[73,17,67,15],[73,18,67,16],[73,41,67,39],[73,42,67,40],[74,6,68,4,"console"],[74,13,68,11],[74,14,68,12,"log"],[74,17,68,15],[74,18,68,16],[74,36,68,34],[74,38,68,36],[74,39,68,37],[74,40,68,38,"user"],[74,44,68,42],[74,45,68,43],[75,6,69,4,"console"],[75,13,69,11],[75,14,69,12,"log"],[75,17,69,15],[75,18,69,16],[75,37,69,35],[75,39,69,37],[75,40,69,38],[75,41,69,39,"token"],[75,46,69,44],[75,47,69,45],[76,6,70,4,"console"],[76,13,70,11],[76,14,70,12,"log"],[76,17,70,15],[76,18,70,16],[76,40,70,38],[76,42,70,40,"isAuthenticated"],[76,57,70,55],[76,58,70,56],[77,6,71,4],[77,10,71,8,"user"],[77,14,71,12],[77,16,71,14,"console"],[77,23,71,21],[77,24,71,22,"log"],[77,27,71,25],[77,28,71,26],[77,45,71,43],[77,47,71,45,"user"],[77,51,71,49],[77,52,71,50,"email"],[77,57,71,55],[77,58,71,56],[78,6,72,4],[78,10,72,8,"token"],[78,15,72,13],[78,17,72,15,"console"],[78,24,72,22],[78,25,72,23,"log"],[78,28,72,26],[78,29,72,27],[78,49,72,47],[78,51,72,49,"token"],[78,56,72,54],[78,57,72,55,"substring"],[78,66,72,64],[78,67,72,65],[78,68,72,66],[78,70,72,68],[78,72,72,70],[78,73,72,71],[78,76,72,74],[78,81,72,79],[78,82,72,80],[79,4,73,2],[79,5,73,3],[79,7,73,5],[79,8,73,6,"user"],[79,12,73,10],[79,14,73,12,"token"],[79,19,73,17],[79,21,73,19,"isAuthenticated"],[79,36,73,34],[79,37,73,35],[79,38,73,36],[81,4,75,2],[82,4,76,2],[82,8,76,2,"useEffect"],[82,14,76,11],[82,15,76,11,"useEffect"],[82,24,76,11],[82,26,76,12],[82,32,76,18],[83,6,77,4,"checkExistingSession"],[83,26,77,24],[83,27,77,25],[83,28,77,26],[84,4,78,2],[84,5,78,3],[84,7,78,5],[84,9,78,7],[84,10,78,8],[85,4,80,2],[85,10,80,8,"checkExistingSession"],[85,30,80,28],[85,33,80,31],[85,39,80,31,"checkExistingSession"],[85,40,80,31],[85,45,80,43],[86,6,81,4],[87,6,82,4],[87,12,82,10,"startTime"],[87,21,82,19],[87,24,82,22,"Date"],[87,28,82,26],[87,29,82,27,"now"],[87,32,82,30],[87,33,82,31],[87,34,82,32],[88,6,83,4],[88,12,83,10,"minLoadingDuration"],[88,30,83,28],[88,33,83,31],[88,37,83,35],[88,38,83,36],[88,39,83,37],[90,6,85,4],[90,10,85,8],[91,8,86,6,"setIsLoading"],[91,20,86,18],[91,21,86,19],[91,25,86,23],[91,26,86,24],[92,8,87,6,"console"],[92,15,87,13],[92,16,87,14,"log"],[92,19,87,17],[92,20,87,18],[92,65,87,63],[92,66,87,64],[94,8,89,6],[95,8,90,6],[95,12,90,10,"storedEmail"],[95,23,90,21],[95,26,90,24],[95,30,90,28],[96,8,91,6],[96,12,91,10,"storedPassword"],[96,26,91,24],[96,29,91,27],[96,33,91,31],[97,8,93,6],[97,12,93,10],[98,10,94,8],[99,10,95,8,"storedEmail"],[99,21,95,19],[99,24,95,22],[99,30,95,28,"AsyncStorage"],[99,42,95,40],[99,43,95,40,"default"],[99,50,95,40],[99,51,95,41,"getItem"],[99,58,95,48],[99,59,95,49],[99,72,95,62],[99,73,95,63],[100,10,96,8,"storedPassword"],[100,24,96,22],[100,27,96,25],[100,33,96,31,"AsyncStorage"],[100,45,96,43],[100,46,96,43,"default"],[100,53,96,43],[100,54,96,44,"getItem"],[100,61,96,51],[100,62,96,52],[100,78,96,68],[100,79,96,69],[101,10,97,8,"console"],[101,17,97,15],[101,18,97,16,"log"],[101,21,97,19],[101,22,97,20],[101,55,97,53],[101,56,97,54],[102,8,98,6],[102,9,98,7],[102,10,98,8],[102,17,98,15,"asyncError"],[102,27,98,25],[102,29,98,27],[103,10,99,8,"console"],[103,17,99,15],[103,18,99,16,"log"],[103,21,99,19],[103,22,99,20],[103,44,99,42],[103,46,99,44,"asyncError"],[103,56,99,54],[103,57,99,55],[104,10,100,8],[105,10,101,8],[105,14,101,12],[105,21,101,19,"window"],[105,27,101,25],[105,32,101,30],[105,43,101,41],[105,47,101,45,"window"],[105,53,101,51],[105,54,101,52,"localStorage"],[105,66,101,64],[105,68,101,66],[106,12,102,10],[106,16,102,14],[107,14,103,12,"storedEmail"],[107,25,103,23],[107,28,103,26,"window"],[107,34,103,32],[107,35,103,33,"localStorage"],[107,47,103,45],[107,48,103,46,"getItem"],[107,55,103,53],[107,56,103,54],[107,69,103,67],[107,70,103,68],[108,14,104,12,"storedPassword"],[108,28,104,26],[108,31,104,29,"window"],[108,37,104,35],[108,38,104,36,"localStorage"],[108,50,104,48],[108,51,104,49,"getItem"],[108,58,104,56],[108,59,104,57],[108,75,104,73],[108,76,104,74],[109,14,105,12,"console"],[109,21,105,19],[109,22,105,20,"log"],[109,25,105,23],[109,26,105,24],[109,65,105,63],[109,66,105,64],[110,12,106,10],[110,13,106,11],[110,14,106,12],[110,21,106,19,"localError"],[110,31,106,29],[110,33,106,31],[111,14,107,12,"console"],[111,21,107,19],[111,22,107,20,"error"],[111,27,107,25],[111,28,107,26],[111,55,107,53],[111,57,107,55,"localError"],[111,67,107,65],[111,68,107,66],[112,12,108,10],[113,10,109,8],[113,11,109,9],[113,17,109,15],[114,12,110,10,"console"],[114,19,110,17],[114,20,110,18,"log"],[114,23,110,21],[114,24,110,22],[114,75,110,73],[114,76,110,74],[115,10,111,8],[116,8,112,6],[117,8,114,6,"console"],[117,15,114,13],[117,16,114,14,"log"],[117,19,114,17],[117,20,114,18],[117,50,114,48],[117,51,114,49],[118,8,115,6,"console"],[118,15,115,13],[118,16,115,14,"log"],[118,19,115,17],[118,20,115,18],[118,39,115,37],[118,41,115,39],[118,42,115,40],[118,43,115,41,"storedEmail"],[118,54,115,52],[118,55,115,53],[119,8,116,6,"console"],[119,15,116,13],[119,16,116,14,"log"],[119,19,116,17],[119,20,116,18],[119,42,116,40],[119,44,116,42],[119,45,116,43],[119,46,116,44,"storedPassword"],[119,60,116,58],[119,61,116,59],[120,8,117,6],[120,12,117,10,"storedEmail"],[120,23,117,21],[120,25,117,23,"console"],[120,32,117,30],[120,33,117,31,"log"],[120,36,117,34],[120,37,117,35],[120,49,117,47],[120,51,117,49,"storedEmail"],[120,62,117,60],[120,63,117,61],[121,8,119,6],[121,12,119,10,"storedEmail"],[121,23,119,21],[121,27,119,25,"storedPassword"],[121,41,119,39],[121,43,119,41],[122,10,120,8,"console"],[122,17,120,15],[122,18,120,16,"log"],[122,21,120,19],[122,22,120,20],[122,78,120,76],[122,79,120,77],[123,10,122,8],[123,14,122,12],[124,12,123,10],[125,12,124,10],[125,18,124,16,"timeoutPromise"],[125,32,124,30],[125,35,124,33],[125,39,124,37,"Promise"],[125,46,124,44],[125,47,124,45],[125,48,124,46,"_"],[125,49,124,47],[125,51,124,49,"reject"],[125,57,124,55],[125,62,125,12,"setTimeout"],[125,72,125,22],[125,73,125,23],[125,79,125,29,"reject"],[125,85,125,35],[125,86,125,36],[125,90,125,40,"Error"],[125,95,125,45],[125,96,125,46],[125,116,125,66],[125,117,125,67],[125,118,125,68],[125,120,125,70],[125,125,125,75],[125,126,126,10],[125,127,126,11],[126,12,128,10],[126,18,128,16,"loginPromise"],[126,30,128,28],[126,33,128,31,"login"],[126,38,128,36],[126,39,128,37,"storedEmail"],[126,50,128,48],[126,52,128,50,"storedPassword"],[126,66,128,64],[126,67,128,65],[127,12,129,10],[127,18,129,16,"loginResult"],[127,29,129,27],[127,32,129,30],[127,38,129,36,"Promise"],[127,45,129,43],[127,46,129,44,"race"],[127,50,129,48],[127,51,129,49],[127,52,129,50,"loginPromise"],[127,64,129,62],[127,66,129,64,"timeoutPromise"],[127,80,129,78],[127,81,129,79],[127,82,129,80],[128,12,131,10],[128,16,131,14,"loginResult"],[128,27,131,25],[128,28,131,26,"success"],[128,35,131,33],[128,37,131,35],[129,14,132,12,"console"],[129,21,132,19],[129,22,132,20,"log"],[129,25,132,23],[129,26,132,24],[129,52,132,50],[129,53,132,51],[130,12,133,10],[130,13,133,11],[130,19,133,17],[131,14,134,12,"console"],[131,21,134,19],[131,22,134,20,"log"],[131,25,134,23],[131,26,134,24],[131,48,134,46],[131,50,134,48,"loginResult"],[131,61,134,59],[131,62,134,60,"error"],[131,67,134,65],[131,68,134,66],[132,14,135,12],[133,14,136,12],[133,18,136,16],[134,16,137,14],[134,22,137,20,"AsyncStorage"],[134,34,137,32],[134,35,137,32,"default"],[134,42,137,32],[134,43,137,33,"multiRemove"],[134,54,137,44],[134,55,137,45],[134,56,137,46],[134,69,137,59],[134,71,137,61],[134,87,137,77],[134,88,137,78],[134,89,137,79],[135,14,138,12],[135,15,138,13],[135,16,138,14],[135,23,138,21,"e"],[135,24,138,22],[135,26,138,24],[136,16,139,14],[137,16,140,14],[137,20,140,18],[137,27,140,25,"window"],[137,33,140,31],[137,38,140,36],[137,49,140,47],[137,53,140,51,"window"],[137,59,140,57],[137,60,140,58,"localStorage"],[137,72,140,70],[137,74,140,72],[138,18,141,16,"window"],[138,24,141,22],[138,25,141,23,"localStorage"],[138,37,141,35],[138,38,141,36,"removeItem"],[138,48,141,46],[138,49,141,47],[138,62,141,60],[138,63,141,61],[139,18,142,16,"window"],[139,24,142,22],[139,25,142,23,"localStorage"],[139,37,142,35],[139,38,142,36,"removeItem"],[139,48,142,46],[139,49,142,47],[139,65,142,63],[139,66,142,64],[140,16,143,14],[141,14,144,12],[142,12,145,10],[143,10,146,8],[143,11,146,9],[143,12,146,10],[143,19,146,17,"autoLoginError"],[143,33,146,31],[143,35,146,33],[144,12,147,10,"console"],[144,19,147,17],[144,20,147,18,"log"],[144,23,147,21],[144,24,147,22],[144,59,147,57],[144,61,147,59,"autoLoginError"],[144,75,147,73],[144,76,147,74,"message"],[144,83,147,81],[144,84,147,82],[145,12,148,10],[146,12,149,10],[146,16,149,14],[147,14,150,12],[147,20,150,18,"AsyncStorage"],[147,32,150,30],[147,33,150,30,"default"],[147,40,150,30],[147,41,150,31,"multiRemove"],[147,52,150,42],[147,53,150,43],[147,54,150,44],[147,67,150,57],[147,69,150,59],[147,85,150,75],[147,86,150,76],[147,87,150,77],[148,12,151,10],[148,13,151,11],[148,14,151,12],[148,21,151,19,"e"],[148,22,151,20],[148,24,151,22],[149,14,152,12],[149,18,152,16],[149,25,152,23,"window"],[149,31,152,29],[149,36,152,34],[149,47,152,45],[149,51,152,49,"window"],[149,57,152,55],[149,58,152,56,"localStorage"],[149,70,152,68],[149,72,152,70],[150,16,153,14,"window"],[150,22,153,20],[150,23,153,21,"localStorage"],[150,35,153,33],[150,36,153,34,"removeItem"],[150,46,153,44],[150,47,153,45],[150,60,153,58],[150,61,153,59],[151,16,154,14,"window"],[151,22,154,20],[151,23,154,21,"localStorage"],[151,35,154,33],[151,36,154,34,"removeItem"],[151,46,154,44],[151,47,154,45],[151,63,154,61],[151,64,154,62],[152,14,155,12],[153,12,156,10],[154,10,157,8],[155,8,158,6],[155,9,158,7],[155,15,158,13],[156,10,159,8,"console"],[156,17,159,15],[156,18,159,16,"log"],[156,21,159,19],[156,22,159,20],[156,78,159,76],[156,79,159,77],[157,8,160,6],[158,6,161,4],[158,7,161,5],[158,8,161,6],[158,15,161,13,"error"],[158,20,161,18],[158,22,161,20],[159,8,162,6,"console"],[159,15,162,13],[159,16,162,14,"error"],[159,21,162,19],[159,22,162,20],[159,50,162,48],[159,52,162,50,"error"],[159,57,162,55],[159,58,162,56],[160,6,163,4],[160,7,163,5],[160,16,163,14],[161,8,164,6],[162,8,165,6],[162,14,165,12,"elapsedTime"],[162,25,165,23],[162,28,165,26,"Date"],[162,32,165,30],[162,33,165,31,"now"],[162,36,165,34],[162,37,165,35],[162,38,165,36],[162,41,165,39,"startTime"],[162,50,165,48],[163,8,166,6],[163,14,166,12,"remainingTime"],[163,27,166,25],[163,30,166,28,"minLoadingDuration"],[163,48,166,46],[163,51,166,49,"elapsedTime"],[163,62,166,60],[164,8,168,6],[164,12,168,10,"remainingTime"],[164,25,168,23],[164,28,168,26],[164,29,168,27],[164,31,168,29],[165,10,169,8,"console"],[165,17,169,15],[165,18,169,16,"log"],[165,21,169,19],[165,22,169,20],[165,62,169,60,"remainingTime"],[165,75,169,73],[165,84,169,82],[165,85,169,83],[166,10,170,8,"setTimeout"],[166,20,170,18],[166,21,170,19],[166,27,170,25],[167,12,171,10,"console"],[167,19,171,17],[167,20,171,18,"log"],[167,23,171,21],[167,24,171,22],[167,83,171,81],[167,84,171,82],[168,12,172,10,"setIsLoading"],[168,24,172,22],[168,25,172,23],[168,30,172,28],[168,31,172,29],[169,10,173,8],[169,11,173,9],[169,13,173,11,"remainingTime"],[169,26,173,24],[169,27,173,25],[170,8,174,6],[170,9,174,7],[170,15,174,13],[171,10,175,8,"console"],[171,17,175,15],[171,18,175,16,"log"],[171,21,175,19],[171,22,175,20],[171,81,175,79],[171,82,175,80],[172,10,176,8,"setIsLoading"],[172,22,176,20],[172,23,176,21],[172,28,176,26],[172,29,176,27],[173,8,177,6],[174,6,178,4],[175,4,179,2],[175,5,179,3],[176,4,181,2],[176,10,181,8,"checkSession"],[176,22,181,20],[176,25,181,23],[176,31,181,23,"checkSession"],[176,32,181,23],[176,37,181,53],[177,6,182,4],[177,10,182,8],[178,8,183,6],[179,8,184,6],[179,12,184,10],[179,13,184,11,"token"],[179,18,184,16],[179,22,184,20],[179,23,184,21,"user"],[179,27,184,25],[179,29,184,27],[180,10,185,8,"console"],[180,17,185,15],[180,18,185,16,"log"],[180,21,185,19],[180,22,185,20],[180,64,185,62],[180,65,185,63],[181,10,186,8],[181,17,186,15],[181,22,186,20],[182,8,187,6],[183,8,189,6],[183,14,189,12,"response"],[183,22,189,20],[183,25,189,23],[183,31,189,29,"fetch"],[183,36,189,34],[183,37,189,35],[183,40,189,38,"API_BASE_URL"],[183,52,189,50],[183,77,189,75],[183,79,189,77],[184,10,190,8,"method"],[184,16,190,14],[184,18,190,16],[184,23,190,21],[185,10,191,8,"credentials"],[185,21,191,19],[185,23,191,21],[185,32,191,30],[186,10,192,8,"headers"],[186,17,192,15],[186,19,192,17],[187,12,193,10],[187,26,193,24],[187,28,193,26],[187,46,193,44],[188,12,194,10],[188,27,194,25],[188,29,194,27],[188,39,194,37,"token"],[188,44,194,42],[189,10,195,8],[190,8,196,6],[190,9,196,7],[190,10,196,8],[191,8,198,6],[191,12,198,10],[191,13,198,11,"response"],[191,21,198,19],[191,22,198,20,"ok"],[191,24,198,22],[191,26,198,24],[192,10,199,8,"console"],[192,17,199,15],[192,18,199,16,"log"],[192,21,199,19],[192,22,199,20],[192,45,199,43],[192,47,199,45,"response"],[192,55,199,53],[192,56,199,54,"status"],[192,62,199,60],[192,63,199,61],[193,10,200,8],[193,17,200,15],[193,22,200,20],[194,8,201,6],[195,8,203,6],[195,14,203,12,"data"],[195,18,203,16],[195,21,203,19],[195,27,203,25,"response"],[195,35,203,33],[195,36,203,34,"json"],[195,40,203,38],[195,41,203,39],[195,42,203,40],[196,8,204,6],[196,14,204,12,"isValid"],[196,21,204,19],[196,24,204,22,"data"],[196,28,204,26],[196,29,204,27,"authenticated"],[196,42,204,40],[196,47,204,45],[196,51,204,49],[197,8,206,6],[197,12,206,10,"isValid"],[197,19,206,17],[197,23,206,21,"data"],[197,27,206,25],[197,28,206,26,"user"],[197,32,206,30],[197,34,206,32],[198,10,207,8],[199,10,208,8,"setUser"],[199,17,208,15],[199,18,208,16,"data"],[199,22,208,20],[199,23,208,21,"user"],[199,27,208,25],[199,28,208,26],[200,10,209,8,"console"],[200,17,209,15],[200,18,209,16,"log"],[200,21,209,19],[200,22,209,20],[200,66,209,64],[200,68,209,66,"data"],[200,72,209,70],[200,73,209,71,"user"],[200,77,209,75],[200,78,209,76,"email"],[200,83,209,81],[200,84,209,82],[201,8,210,6],[201,9,210,7],[201,15,210,13],[202,10,211,8,"console"],[202,17,211,15],[202,18,211,16,"log"],[202,21,211,19],[202,22,211,20],[202,57,211,55],[202,59,211,57,"data"],[202,63,211,61],[202,64,211,62],[203,8,212,6],[204,8,214,6],[204,15,214,13,"isValid"],[204,22,214,20],[205,6,215,4],[205,7,215,5],[205,8,215,6],[205,15,215,13,"error"],[205,20,215,18],[205,22,215,20],[206,8,216,6,"console"],[206,15,216,13],[206,16,216,14,"error"],[206,21,216,19],[206,22,216,20],[206,78,216,76],[206,80,216,78,"error"],[206,85,216,83],[206,86,216,84],[207,8,217,6],[208,8,218,6],[209,8,219,6],[209,15,219,13],[209,19,219,17],[209,20,219,18],[209,21,219,19],[210,6,220,4],[211,4,221,2],[211,5,221,3],[212,4,223,2],[212,10,223,8,"login"],[212,15,223,13],[212,18,223,16],[212,24,223,16,"login"],[212,25,223,23,"email"],[212,30,223,36],[212,32,223,38,"password"],[212,40,223,54],[212,45,223,106],[213,6,224,4],[213,10,224,8],[214,8,225,6,"setIsLoading"],[214,20,225,18],[214,21,225,19],[214,25,225,23],[214,26,225,24],[215,8,227,6],[215,14,227,12,"formData"],[215,22,227,20],[215,25,227,23],[215,29,227,27,"URLSearchParams"],[215,44,227,42],[215,45,227,43],[215,46,227,44],[216,8,228,6,"formData"],[216,16,228,14],[216,17,228,15,"append"],[216,23,228,21],[216,24,228,22],[216,34,228,32],[216,36,228,34,"email"],[216,41,228,39],[216,42,228,40],[216,43,228,41],[216,44,228,42],[217,8,229,6,"formData"],[217,16,229,14],[217,17,229,15,"append"],[217,23,229,21],[217,24,229,22],[217,34,229,32],[217,36,229,34,"password"],[217,44,229,42],[217,45,229,43],[218,8,231,6],[218,14,231,12,"response"],[218,22,231,20],[218,25,231,23],[218,31,231,29,"fetch"],[218,36,231,34],[218,37,231,35],[218,40,231,38,"API_BASE_URL"],[218,52,231,50],[218,69,231,67],[218,71,231,69],[219,10,232,8,"method"],[219,16,232,14],[219,18,232,16],[219,24,232,22],[220,10,233,8,"credentials"],[220,21,233,19],[220,23,233,21],[220,32,233,30],[221,10,234,8,"headers"],[221,17,234,15],[221,19,234,17],[222,12,235,10],[222,26,235,24],[222,28,235,26],[223,10,236,8],[223,11,236,9],[224,10,237,8,"body"],[224,14,237,12],[224,16,237,14,"formData"],[224,24,237,22],[224,25,237,23,"toString"],[224,33,237,31],[224,34,237,32],[225,8,238,6],[225,9,238,7],[225,10,238,8],[226,8,240,6],[226,14,240,12,"data"],[226,18,240,16],[226,21,240,19],[226,27,240,25,"response"],[226,35,240,33],[226,36,240,34,"json"],[226,40,240,38],[226,41,240,39],[226,42,240,40],[227,8,242,6],[227,12,242,10],[227,13,242,11,"response"],[227,21,242,19],[227,22,242,20,"ok"],[227,24,242,22],[227,26,242,24],[228,10,243,8],[228,17,243,15],[229,12,243,17,"success"],[229,19,243,24],[229,21,243,26],[229,26,243,31],[230,12,243,33,"error"],[230,17,243,38],[230,19,243,40,"data"],[230,23,243,44],[230,24,243,45,"detail"],[230,30,243,51],[230,34,243,55],[231,10,243,70],[231,11,243,71],[232,8,244,6],[234,8,246,2],[235,8,247,6],[235,14,247,12,"AsyncStorage"],[235,26,247,24],[235,27,247,24,"default"],[235,34,247,24],[235,35,247,25,"setItem"],[235,42,247,32],[235,43,247,33],[235,55,247,45],[235,57,247,47,"data"],[235,61,247,51],[235,62,247,52,"access_token"],[235,74,247,64],[235,75,247,65],[235,76,247,66,"catch"],[235,81,247,71],[235,82,247,72],[235,88,247,79,"asyncError"],[235,98,247,89],[235,102,247,94],[236,10,248,8,"console"],[236,17,248,15],[236,18,248,16,"error"],[236,23,248,21],[236,24,248,22],[236,75,248,73],[236,77,248,75,"asyncError"],[236,87,248,85],[236,88,248,86],[237,10,249,8],[238,10,250,8],[238,14,250,12],[238,21,250,19,"window"],[238,27,250,25],[238,32,250,30],[238,43,250,41],[238,47,250,45,"window"],[238,53,250,51],[238,54,250,52,"localStorage"],[238,66,250,64],[238,68,250,66],[239,12,251,10,"window"],[239,18,251,16],[239,19,251,17,"localStorage"],[239,31,251,29],[239,32,251,30,"setItem"],[239,39,251,37],[239,40,251,38],[239,52,251,50],[239,54,251,52,"data"],[239,58,251,56],[239,59,251,57,"access_token"],[239,71,251,69],[239,72,251,70],[240,12,252,10,"window"],[240,18,252,16],[240,19,252,17,"localStorage"],[240,31,252,29],[240,32,252,30,"setItem"],[240,39,252,37],[240,40,252,38],[240,51,252,49],[240,53,252,51,"JSON"],[240,57,252,55],[240,58,252,56,"stringify"],[240,67,252,65],[240,68,252,66,"data"],[240,72,252,70],[240,73,252,71,"user"],[240,77,252,75],[240,78,252,76],[240,79,252,77],[241,12,253,10,"window"],[241,18,253,16],[241,19,253,17,"localStorage"],[241,31,253,29],[241,32,253,30,"setItem"],[241,39,253,37],[241,40,253,38],[241,53,253,51],[241,55,253,53,"email"],[241,60,253,58],[241,61,253,59],[242,12,254,10,"window"],[242,18,254,16],[242,19,254,17,"localStorage"],[242,31,254,29],[242,32,254,30,"setItem"],[242,39,254,37],[242,40,254,38],[242,56,254,54],[242,58,254,56,"password"],[242,66,254,64],[242,67,254,65],[243,10,255,8],[244,8,256,6],[244,9,256,7],[244,10,256,8],[245,8,258,6],[245,14,258,12,"AsyncStorage"],[245,26,258,24],[245,27,258,24,"default"],[245,34,258,24],[245,35,258,25,"setItem"],[245,42,258,32],[245,43,258,33],[245,54,258,44],[245,56,258,46,"JSON"],[245,60,258,50],[245,61,258,51,"stringify"],[245,70,258,60],[245,71,258,61,"data"],[245,75,258,65],[245,76,258,66,"user"],[245,80,258,70],[245,81,258,71],[245,82,258,72],[245,83,258,73,"catch"],[245,88,258,78],[245,89,258,80,"error"],[245,94,258,85],[245,98,258,90],[246,10,259,8,"console"],[246,17,259,15],[246,18,259,16,"error"],[246,23,259,21],[246,24,259,22],[246,59,259,57],[246,61,259,59,"error"],[246,66,259,64],[246,67,259,65],[247,8,260,6],[247,9,260,7],[247,10,260,8],[249,8,262,6],[250,8,263,6],[250,14,263,12,"AsyncStorage"],[250,26,263,24],[250,27,263,24,"default"],[250,34,263,24],[250,35,263,25,"setItem"],[250,42,263,32],[250,43,263,33],[250,56,263,46],[250,58,263,48,"email"],[250,63,263,53],[250,64,263,54],[250,65,263,55,"catch"],[250,70,263,60],[250,71,263,61],[250,77,263,67],[250,78,263,68],[250,79,263,69],[250,80,263,70],[251,8,264,6],[251,14,264,12,"AsyncStorage"],[251,26,264,24],[251,27,264,24,"default"],[251,34,264,24],[251,35,264,25,"setItem"],[251,42,264,32],[251,43,264,33],[251,59,264,49],[251,61,264,51,"password"],[251,69,264,59],[251,70,264,60],[251,71,264,61,"catch"],[251,76,264,66],[251,77,264,67],[251,83,264,73],[251,84,264,74],[251,85,264,75],[251,86,264,76],[252,8,266,6,"setToken"],[252,16,266,14],[252,17,266,15,"data"],[252,21,266,19],[252,22,266,20,"access_token"],[252,34,266,32],[252,35,266,33],[253,8,267,6,"setUser"],[253,15,267,13],[253,16,267,14,"data"],[253,20,267,18],[253,21,267,19,"user"],[253,25,267,23],[253,26,267,24],[254,8,269,6,"console"],[254,15,269,13],[254,16,269,14,"log"],[254,19,269,17],[254,20,269,18],[254,62,269,60],[254,63,269,61],[255,8,270,6,"console"],[255,15,270,13],[255,16,270,14,"log"],[255,19,270,17],[255,20,270,18],[255,34,270,32],[255,36,270,34,"data"],[255,40,270,38],[255,41,270,39,"user"],[255,45,270,43],[255,46,270,44,"id"],[255,48,270,46],[255,49,270,47],[256,8,271,6,"console"],[256,15,271,13],[256,16,271,14,"log"],[256,19,271,17],[256,20,271,18],[256,37,271,35],[256,39,271,37,"data"],[256,43,271,41],[256,44,271,42,"user"],[256,48,271,46],[256,49,271,47,"email"],[256,54,271,52],[256,55,271,53],[257,8,272,6,"console"],[257,15,272,13],[257,16,272,14,"log"],[257,19,272,17],[257,20,272,18],[257,36,272,34],[257,38,272,36],[257,39,272,37],[257,40,272,38,"data"],[257,44,272,42],[257,45,272,43,"access_token"],[257,57,272,55],[257,58,272,56],[258,8,273,6,"console"],[258,15,273,13],[258,16,273,14,"log"],[258,19,273,17],[258,20,273,18],[258,40,273,38],[258,42,273,40,"data"],[258,46,273,44],[258,47,273,45,"access_token"],[258,59,273,57],[258,60,273,58,"substring"],[258,69,273,67],[258,70,273,68],[258,71,273,69],[258,73,273,71],[258,75,273,73],[258,76,273,74],[258,79,273,77],[258,84,273,82],[258,85,273,83],[260,8,275,6],[261,8,276,6,"setTimeout"],[261,18,276,16],[261,19,276,17],[261,25,276,23],[262,10,277,8,"console"],[262,17,277,15],[262,18,277,16,"log"],[262,21,277,19],[262,22,277,20],[262,68,277,66],[262,69,277,67],[263,10,278,8,"console"],[263,17,278,15],[263,18,278,16,"log"],[263,21,278,19],[263,22,278,20],[263,39,278,37],[263,41,278,39],[263,42,278,40],[263,43,278,41,"user"],[263,47,278,45],[263,48,278,46],[264,10,279,8,"console"],[264,17,279,15],[264,18,279,16,"log"],[264,21,279,19],[264,22,279,20],[264,40,279,38],[264,42,279,40],[264,43,279,41],[264,44,279,42,"token"],[264,49,279,47],[264,50,279,48],[265,10,280,8,"console"],[265,17,280,15],[265,18,280,16,"log"],[265,21,280,19],[265,22,280,20],[265,55,280,53],[265,57,280,55],[265,58,280,56],[265,60,280,58,"user"],[265,64,280,62],[265,68,280,66,"token"],[265,73,280,71],[265,74,280,72],[265,75,280,73],[266,8,281,6],[266,9,281,7],[266,11,281,9],[266,15,281,13],[266,16,281,14],[267,8,283,6,"console"],[267,15,283,13],[267,16,283,14,"log"],[267,19,283,17],[267,20,283,18],[267,51,283,49],[267,53,283,51,"data"],[267,57,283,55],[267,58,283,56,"user"],[267,62,283,60],[267,63,283,61,"id"],[267,65,283,63],[267,67,283,65],[267,102,283,100],[267,103,283,101],[268,8,285,6],[268,15,285,13],[269,10,285,15,"success"],[269,17,285,22],[269,19,285,24],[270,8,285,29],[270,9,285,30],[271,6,286,4],[271,7,286,5],[271,8,286,6],[271,15,286,13,"error"],[271,20,286,18],[271,22,286,20],[272,8,287,6,"console"],[272,15,287,13],[272,16,287,14,"error"],[272,21,287,19],[272,22,287,20],[272,36,287,34],[272,38,287,36,"error"],[272,43,287,41],[272,44,287,42],[273,8,288,6],[273,15,288,13],[274,10,288,15,"success"],[274,17,288,22],[274,19,288,24],[274,24,288,29],[275,10,288,31,"error"],[275,15,288,36],[275,17,288,38],[276,8,288,63],[276,9,288,64],[277,6,289,4],[277,7,289,5],[277,16,289,14],[278,8,290,6,"setIsLoading"],[278,20,290,18],[278,21,290,19],[278,26,290,24],[278,27,290,25],[279,6,291,4],[280,4,292,2],[280,5,292,3],[281,4,294,2],[281,10,294,8,"register"],[281,18,294,16],[281,21,294,19],[281,27,294,19,"register"],[281,28,294,26,"email"],[281,33,294,39],[281,35,294,41,"password"],[281,43,294,57],[281,45,294,59,"name"],[281,49,294,71],[281,54,294,123],[282,6,295,4],[282,10,295,8],[283,8,296,6,"setIsLoading"],[283,20,296,18],[283,21,296,19],[283,25,296,23],[283,26,296,24],[284,8,298,6],[284,14,298,12,"response"],[284,22,298,20],[284,25,298,23],[284,31,298,29,"fetch"],[284,36,298,34],[284,37,298,35],[284,40,298,38,"API_BASE_URL"],[284,52,298,50],[284,72,298,70],[284,74,298,72],[285,10,299,8,"method"],[285,16,299,14],[285,18,299,16],[285,24,299,22],[286,10,300,8,"credentials"],[286,21,300,19],[286,23,300,21],[286,32,300,30],[287,10,301,8,"headers"],[287,17,301,15],[287,19,301,17],[288,12,302,10],[288,26,302,24],[288,28,302,26],[289,10,303,8],[289,11,303,9],[290,10,304,8,"body"],[290,14,304,12],[290,16,304,14,"JSON"],[290,20,304,18],[290,21,304,19,"stringify"],[290,30,304,28],[290,31,304,29],[291,12,305,10,"email"],[291,17,305,15],[292,12,306,10,"password"],[292,20,306,18],[293,12,307,10,"name"],[294,10,308,8],[294,11,308,9],[295,8,309,6],[295,9,309,7],[295,10,309,8],[296,8,311,6],[296,14,311,12,"data"],[296,18,311,16],[296,21,311,19],[296,27,311,25,"response"],[296,35,311,33],[296,36,311,34,"json"],[296,40,311,38],[296,41,311,39],[296,42,311,40],[297,8,313,6],[297,12,313,10],[297,13,313,11,"response"],[297,21,313,19],[297,22,313,20,"ok"],[297,24,313,22],[297,26,313,24],[298,10,314,8],[298,17,314,15],[299,12,314,17,"success"],[299,19,314,24],[299,21,314,26],[299,26,314,31],[300,12,314,33,"error"],[300,17,314,38],[300,19,314,40,"data"],[300,23,314,44],[300,24,314,45,"detail"],[300,30,314,51],[300,34,314,55],[301,10,314,77],[301,11,314,78],[302,8,315,6],[304,8,317,6],[305,8,318,6],[305,14,318,12,"AsyncStorage"],[305,26,318,24],[305,27,318,24,"default"],[305,34,318,24],[305,35,318,25,"setItem"],[305,42,318,32],[305,43,318,33],[305,55,318,45],[305,57,318,47,"data"],[305,61,318,51],[305,62,318,52,"access_token"],[305,74,318,64],[305,75,318,65],[306,8,319,6],[306,14,319,12,"AsyncStorage"],[306,26,319,24],[306,27,319,24,"default"],[306,34,319,24],[306,35,319,25,"setItem"],[306,42,319,32],[306,43,319,33],[306,54,319,44],[306,56,319,46,"JSON"],[306,60,319,50],[306,61,319,51,"stringify"],[306,70,319,60],[306,71,319,61,"data"],[306,75,319,65],[306,76,319,66,"user"],[306,80,319,70],[306,81,319,71],[306,82,319,72],[308,8,321,6],[309,8,322,6],[309,12,322,10],[310,10,323,8],[310,16,323,14,"AsyncStorage"],[310,28,323,26],[310,29,323,26,"default"],[310,36,323,26],[310,37,323,27,"setItem"],[310,44,323,34],[310,45,323,35],[310,58,323,48],[310,60,323,50,"email"],[310,65,323,55],[310,66,323,56],[311,10,324,8],[311,16,324,14,"AsyncStorage"],[311,28,324,26],[311,29,324,26,"default"],[311,36,324,26],[311,37,324,27,"setItem"],[311,44,324,34],[311,45,324,35],[311,61,324,51],[311,63,324,53,"password"],[311,71,324,61],[311,72,324,62],[312,8,325,6],[312,9,325,7],[312,10,325,8],[312,17,325,15,"asyncError"],[312,27,325,25],[312,29,325,27],[313,10,326,8],[313,14,326,12],[313,21,326,19,"window"],[313,27,326,25],[313,32,326,30],[313,43,326,41],[313,47,326,45,"window"],[313,53,326,51],[313,54,326,52,"localStorage"],[313,66,326,64],[313,68,326,66],[314,12,327,10,"window"],[314,18,327,16],[314,19,327,17,"localStorage"],[314,31,327,29],[314,32,327,30,"setItem"],[314,39,327,37],[314,40,327,38],[314,52,327,50],[314,54,327,52,"data"],[314,58,327,56],[314,59,327,57,"access_token"],[314,71,327,69],[314,72,327,70],[315,12,328,10,"window"],[315,18,328,16],[315,19,328,17,"localStorage"],[315,31,328,29],[315,32,328,30,"setItem"],[315,39,328,37],[315,40,328,38],[315,51,328,49],[315,53,328,51,"JSON"],[315,57,328,55],[315,58,328,56,"stringify"],[315,67,328,65],[315,68,328,66,"data"],[315,72,328,70],[315,73,328,71,"user"],[315,77,328,75],[315,78,328,76],[315,79,328,77],[316,12,329,10,"window"],[316,18,329,16],[316,19,329,17,"localStorage"],[316,31,329,29],[316,32,329,30,"setItem"],[316,39,329,37],[316,40,329,38],[316,53,329,51],[316,55,329,53,"email"],[316,60,329,58],[316,61,329,59],[317,12,330,10,"window"],[317,18,330,16],[317,19,330,17,"localStorage"],[317,31,330,29],[317,32,330,30,"setItem"],[317,39,330,37],[317,40,330,38],[317,56,330,54],[317,58,330,56,"password"],[317,66,330,64],[317,67,330,65],[318,12,331,10,"console"],[318,19,331,17],[318,20,331,18,"log"],[318,23,331,21],[318,24,331,22],[318,82,331,80],[318,83,331,81],[319,10,332,8],[320,8,333,6],[321,8,335,6,"setToken"],[321,16,335,14],[321,17,335,15,"data"],[321,21,335,19],[321,22,335,20,"access_token"],[321,34,335,32],[321,35,335,33],[322,8,336,6,"setUser"],[322,15,336,13],[322,16,336,14,"data"],[322,20,336,18],[322,21,336,19,"user"],[322,25,336,23],[322,26,336,24],[323,8,338,6,"console"],[323,15,338,13],[323,16,338,14,"log"],[323,19,338,17],[323,20,338,18],[323,58,338,56],[323,60,338,58,"data"],[323,64,338,62],[323,65,338,63,"user"],[323,69,338,67],[323,70,338,68,"id"],[323,72,338,70],[323,74,338,72],[323,109,338,107],[323,110,338,108],[324,8,340,6],[324,15,340,13],[325,10,340,15,"success"],[325,17,340,22],[325,19,340,24],[326,8,340,29],[326,9,340,30],[327,6,341,4],[327,7,341,5],[327,8,341,6],[327,15,341,13,"error"],[327,20,341,18],[327,22,341,20],[328,8,342,6,"console"],[328,15,342,13],[328,16,342,14,"error"],[328,21,342,19],[328,22,342,20],[328,43,342,41],[328,45,342,43,"error"],[328,50,342,48],[328,51,342,49],[329,8,343,6],[329,15,343,13],[330,10,343,15,"success"],[330,17,343,22],[330,19,343,24],[330,24,343,29],[331,10,343,31,"error"],[331,15,343,36],[331,17,343,38],[332,8,343,63],[332,9,343,64],[333,6,344,4],[333,7,344,5],[333,16,344,14],[334,8,345,6,"setIsLoading"],[334,20,345,18],[334,21,345,19],[334,26,345,24],[334,27,345,25],[335,6,346,4],[336,4,347,2],[336,5,347,3],[337,4,349,2],[337,10,349,8,"loginWithGoogle"],[337,25,349,23],[337,28,349,26],[337,34,349,26,"loginWithGoogle"],[337,35,349,26],[337,40,349,85],[338,6,350,4],[338,10,350,8],[339,8,351,6],[340,8,352,6],[340,12,352,10],[340,19,352,17,"window"],[340,25,352,23],[340,30,352,28],[340,41,352,39],[340,45,352,43,"window"],[340,51,352,49],[340,52,352,50,"location"],[340,60,352,58],[340,62,352,60],[341,10,353,8],[342,10,354,8],[342,16,354,14,"redirectUrl"],[342,27,354,25],[342,30,354,28,"encodeURIComponent"],[342,48,354,46],[342,49,354,47,"window"],[342,55,354,53],[342,56,354,54,"location"],[342,64,354,62],[342,65,354,63,"href"],[342,69,354,67],[342,70,354,68],[343,10,355,8],[343,16,355,14,"googleAuthUrl"],[343,29,355,27],[343,32,355,30],[343,76,355,74,"redirectUrl"],[343,87,355,85],[343,89,355,87],[345,10,357,8],[346,10,358,8,"window"],[346,16,358,14],[346,17,358,15,"open"],[346,21,358,19],[346,22,358,20,"googleAuthUrl"],[346,35,358,33],[346,37,358,35],[346,44,358,42],[346,45,358,43],[347,10,360,8],[347,17,360,15],[348,12,360,17,"success"],[348,19,360,24],[348,21,360,26],[349,10,360,31],[349,11,360,32],[350,8,361,6],[350,9,361,7],[350,15,361,13],[351,10,362,8],[352,10,363,8,"console"],[352,17,363,15],[352,18,363,16,"log"],[352,21,363,19],[352,22,363,20],[352,72,363,70],[352,73,363,71],[353,10,364,8],[353,17,364,15],[354,12,364,17,"success"],[354,19,364,24],[354,21,364,26],[354,26,364,31],[355,12,364,33,"error"],[355,17,364,38],[355,19,364,40],[356,10,364,83],[356,11,364,84],[357,8,365,6],[358,6,366,4],[358,7,366,5],[358,8,366,6],[358,15,366,13,"error"],[358,20,366,18],[358,22,366,20],[359,8,367,6,"console"],[359,15,367,13],[359,16,367,14,"error"],[359,21,367,19],[359,22,367,20],[359,43,367,41],[359,45,367,43,"error"],[359,50,367,48],[359,51,367,49],[360,8,368,6],[360,15,368,13],[361,10,368,15,"success"],[361,17,368,22],[361,19,368,24],[361,24,368,29],[362,10,368,31,"error"],[362,15,368,36],[362,17,368,38],[363,8,368,60],[363,9,368,61],[364,6,369,4],[365,4,370,2],[365,5,370,3],[366,4,372,2],[366,10,372,8,"logout"],[366,16,372,14],[366,19,372,17],[366,25,372,17,"logout"],[366,26,372,17],[366,31,372,44],[367,6,373,4],[367,10,373,8],[368,8,374,6],[369,8,375,6],[369,12,375,10,"token"],[369,17,375,15],[369,19,375,17],[370,10,376,8],[370,16,376,14,"fetch"],[370,21,376,19],[370,22,376,20],[370,25,376,23,"API_BASE_URL"],[370,37,376,35],[370,55,376,53],[370,57,376,55],[371,12,377,10,"method"],[371,18,377,16],[371,20,377,18],[371,26,377,24],[372,12,378,10,"credentials"],[372,23,378,21],[372,25,378,23],[372,34,378,32],[373,12,379,10,"headers"],[373,19,379,17],[373,21,379,19],[374,14,380,12],[374,29,380,27],[374,31,380,29],[374,41,380,39,"token"],[374,46,380,44],[374,48,380,46],[375,14,381,12],[375,28,381,26],[375,30,381,28],[376,12,382,10],[377,10,383,8],[377,11,383,9],[377,12,383,10],[378,8,384,6],[379,6,385,4],[379,7,385,5],[379,8,385,6],[379,15,385,13,"error"],[379,20,385,18],[379,22,385,20],[380,8,386,6,"console"],[380,15,386,13],[380,16,386,14,"error"],[380,21,386,19],[380,22,386,20],[380,37,386,35],[380,39,386,37,"error"],[380,44,386,42],[380,45,386,43],[381,6,387,4],[381,7,387,5],[381,16,387,14],[382,8,388,6],[383,8,389,6],[383,14,389,12,"AsyncStorage"],[383,26,389,24],[383,27,389,24,"default"],[383,34,389,24],[383,35,389,25,"multiRemove"],[383,46,389,36],[383,47,389,37],[383,48,389,38],[383,60,389,50],[383,62,389,52],[383,73,389,63],[383,74,389,64],[383,75,389,65],[384,8,390,6,"setToken"],[384,16,390,14],[384,17,390,15],[384,21,390,19],[384,22,390,20],[385,8,391,6,"setUser"],[385,15,391,13],[385,16,391,14],[385,20,391,18],[385,21,391,19],[386,6,392,4],[387,4,393,2],[387,5,393,3],[388,4,395,2],[388,24,396,4],[388,28,396,4,"_reactJsxDevRuntime"],[388,47,396,4],[388,48,396,4,"jsxDEV"],[388,54,396,4],[388,56,396,5,"AuthContext"],[388,67,396,16],[388,68,396,17,"Provider"],[388,76,396,25],[389,6,397,6,"value"],[389,11,397,11],[389,13,397,13],[390,8,398,8,"user"],[390,12,398,12],[391,8,399,8,"token"],[391,13,399,13],[392,8,400,8,"isLoading"],[392,17,400,17],[393,8,401,8,"isAuthenticated"],[393,23,401,23],[394,8,402,8,"login"],[394,13,402,13],[395,8,403,8,"register"],[395,16,403,16],[396,8,404,8,"loginWithGoogle"],[396,23,404,23],[397,8,405,8,"logout"],[397,14,405,14],[398,8,406,8,"checkSession"],[399,6,407,6],[399,7,407,8],[400,6,407,8,"children"],[400,14,407,8],[400,16,409,7,"children"],[401,4,409,15],[402,6,409,15,"fileName"],[402,14,409,15],[402,16,409,15,"_jsxFileName"],[402,28,409,15],[403,6,409,15,"lineNumber"],[403,16,409,15],[404,6,409,15,"columnNumber"],[404,18,409,15],[405,4,409,15],[405,11,410,26],[405,12,410,27],[406,2,412,0],[406,3,412,1],[407,2,412,2,"_s"],[407,4,412,2],[407,5,58,13,"AuthProvider"],[407,17,58,25],[408,2,58,25,"_c"],[408,4,58,25],[408,7,58,13,"AuthProvider"],[408,19,58,25],[409,2,414,7],[409,8,414,13,"useAuth"],[409,15,414,20],[409,18,414,23,"useAuth"],[409,19,414,23],[409,24,414,46],[410,4,414,46,"_s2"],[410,7,414,46],[411,4,415,2],[411,10,415,8,"context"],[411,17,415,15],[411,20,415,18],[411,24,415,18,"useContext"],[411,30,415,28],[411,31,415,28,"useContext"],[411,41,415,28],[411,43,415,29,"AuthContext"],[411,54,415,40],[411,55,415,41],[412,4,416,2],[412,8,416,6,"context"],[412,15,416,13],[412,20,416,18,"undefined"],[412,29,416,27],[412,31,416,29],[413,6,417,4],[413,12,417,10],[413,16,417,14,"Error"],[413,21,417,19],[413,22,417,20],[413,67,417,65],[413,68,417,66],[414,4,418,2],[415,4,419,2],[415,11,419,9,"context"],[415,18,419,16],[416,2,420,0],[416,3,420,1],[417,2,420,2,"_s2"],[417,5,420,2],[417,6,414,13,"useAuth"],[417,13,414,20],[418,2,414,20],[418,6,414,20,"_c"],[418,8,414,20],[419,2,414,20,"$RefreshReg$"],[419,14,414,20],[419,15,414,20,"_c"],[419,17,414,20],[420,0,414,20],[420,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;6CC4C;uBCC,6CD,QD;mBE6C;SFG;GFM;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}