{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n\n    // Function to handle enemy kills - just log for now, main component will handle rewards\n    const handleEnemyKill = enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 50;\n      const goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      updateNinja(prev => {\n        console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('üîÑ Combat tick running...');\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen\n        const MAX_ENEMIES = 10;\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}`);\n        while (newState.enemies.length < MAX_ENEMIES) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n    };\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 250;\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 250;\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 250; // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 25; // 25 XP per enemy\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      clearAllEnemies,\n      triggerLevelUpExplosion,\n      findClosestEnemy\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"RHmpS0y9FAoE3yr3BynfgLQynIE=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":420,"map":[[10,2,53,0,"Object"],[10,8,53,0],[10,9,53,0,"defineProperty"],[10,23,53,0],[10,24,53,0,"exports"],[10,31,53,0],[11,4,53,0,"enumerable"],[11,14,53,0],[12,4,53,0,"get"],[12,7,53,0],[12,18,53,0,"get"],[12,19,53,0],[13,6,53,0],[13,13,53,0,"useCombat"],[13,22,53,0],[14,4,53,0],[15,2,53,0],[16,2,63,0,"Object"],[16,8,63,0],[16,9,63,0,"defineProperty"],[16,23,63,0],[16,24,63,0,"exports"],[16,31,63,0],[17,4,63,0,"enumerable"],[17,14,63,0],[18,4,63,0,"get"],[18,7,63,0],[18,18,63,0,"get"],[18,19,63,0],[19,6,63,0],[19,13,63,0,"CombatProvider"],[19,27,63,0],[20,4,63,0],[21,2,63,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_engineCombatEngine"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,3,0],[24,6,3,0,"_typesAbilityTypes"],[24,24,3,0],[24,27,3,0,"require"],[24,34,3,0],[24,35,3,0,"_dependencyMap"],[24,49,3,0],[25,2,4,0],[25,6,4,0,"_GameContext"],[25,18,4,0],[25,21,4,0,"require"],[25,28,4,0],[25,29,4,0,"_dependencyMap"],[25,43,4,0],[26,2,4,40],[26,6,4,40,"_reactJsxDevRuntime"],[26,25,4,40],[26,28,4,40,"require"],[26,35,4,40],[26,36,4,40,"_dependencyMap"],[26,50,4,40],[27,2,51,0],[27,8,51,6,"CombatContext"],[27,21,51,19],[27,37,51,22],[27,41,51,22,"createContext"],[27,47,51,35],[27,48,51,35,"createContext"],[27,61,51,35],[27,63,51,67,"undefined"],[27,72,51,76],[27,73,51,77],[28,2,53,7],[28,8,53,13,"useCombat"],[28,17,53,22],[28,20,53,25,"useCombat"],[28,21,53,25],[28,26,53,50],[29,4,53,50,"_s"],[29,6,53,50],[30,4,54,2],[30,10,54,8,"context"],[30,17,54,15],[30,20,54,18],[30,24,54,18,"useContext"],[30,30,54,28],[30,31,54,28,"useContext"],[30,41,54,28],[30,43,54,29,"CombatContext"],[30,56,54,42],[30,57,54,43],[31,4,55,2],[31,8,55,6],[31,9,55,7,"context"],[31,16,55,14],[31,18,55,16],[32,6,56,4],[32,12,56,10],[32,16,56,14,"Error"],[32,21,56,19],[32,22,56,20],[32,70,56,68],[32,71,56,69],[33,4,57,2],[34,4,58,2],[34,11,58,9,"context"],[34,18,58,16],[35,2,59,0],[35,3,59,1],[36,2,59,2,"_s"],[36,4,59,2],[36,5,53,13,"useCombat"],[36,14,53,22],[37,2,61,0],[37,6,61,4,"enemyCounter"],[37,18,61,16],[37,21,61,19],[37,22,61,20],[37,23,61,21],[37,24,61,22],[39,2,63,7],[39,8,63,13,"CombatProvider"],[39,22,63,27],[39,25,63,30,"CombatProvider"],[39,26,63,31],[40,4,63,33,"children"],[41,2,63,67],[41,3,63,68],[41,8,63,73],[42,4,63,73,"_s3"],[42,7,63,73],[43,4,64,2],[43,10,64,8],[44,6,64,10,"updateNinja"],[45,4,64,22],[45,5,64,23],[45,8,64,26],[45,12,64,26,"useGame"],[45,24,64,33],[45,25,64,33,"useGame"],[45,32,64,33],[45,34,64,34],[45,35,64,35],[46,4,66,2],[46,10,66,8],[46,11,66,9,"combatState"],[46,22,66,20],[46,24,66,22,"setCombatState"],[46,38,66,36],[46,39,66,37],[46,42,66,40],[46,46,66,40,"useState"],[46,52,66,48],[46,53,66,48,"useState"],[46,61,66,48],[46,63,66,62],[47,6,67,4,"isInCombat"],[47,16,67,14],[47,18,67,16],[47,23,67,21],[48,6,68,4,"currentTick"],[48,17,68,15],[48,19,68,17],[48,20,68,18],[49,6,69,4,"enemies"],[49,13,69,11],[49,15,69,13],[49,17,69,15],[50,6,70,4,"abilityManager"],[50,20,70,18],[50,22,70,20],[50,26,70,24,"AbilityManager"],[50,44,70,38],[50,45,70,38,"AbilityManager"],[50,59,70,38],[50,60,70,39],[50,61,70,40],[51,6,71,4,"statusEffects"],[51,19,71,17],[51,21,71,19],[51,25,71,23,"StatusEffectManager"],[51,44,71,42],[51,45,71,42,"StatusEffectManager"],[51,64,71,42],[51,65,71,43],[51,66,71,44],[52,6,72,4,"playerStats"],[52,17,72,15],[52,19,72,17],[53,8,73,6,"attack"],[53,14,73,12],[53,16,73,14],[53,18,73,16],[54,8,73,18],[55,8,74,6,"defense"],[55,15,74,13],[55,17,74,15],[55,18,74,16],[56,8,75,6,"health"],[56,14,75,12],[56,16,75,14],[56,19,75,17],[57,8,76,6,"maxHealth"],[57,17,76,15],[57,19,76,17],[57,22,76,20],[58,8,77,6,"critChance"],[58,18,77,16],[58,20,77,18],[58,21,77,19],[59,8,78,6,"critDamage"],[59,18,78,16],[59,20,78,18],[59,23,78,21],[60,8,79,6,"cooldownReduction"],[60,25,79,23],[60,27,79,25],[61,6,80,4],[62,4,81,2],[62,5,81,3],[62,6,81,4],[63,4,83,2],[63,10,83,8],[63,11,83,9,"projectiles"],[63,22,83,20],[63,24,83,22,"setProjectiles"],[63,38,83,36],[63,39,83,37],[63,42,83,40],[63,46,83,40,"useState"],[63,52,83,48],[63,53,83,48,"useState"],[63,61,83,48],[63,63,83,69],[63,65,83,71],[63,66,83,72],[65,4,85,2],[66,4,86,2],[66,10,86,8,"handleEnemyKill"],[66,25,86,23],[66,28,86,27,"enemy"],[66,33,86,45],[66,37,86,50],[67,6,87,4,"console"],[67,13,87,11],[67,14,87,12,"log"],[67,17,87,15],[67,18,87,16],[67,46,87,44,"enemy"],[67,51,87,49],[67,52,87,50,"maxHealth"],[67,61,87,59],[67,63,87,61],[67,64,87,62],[69,6,89,4],[70,6,90,4],[70,12,90,10,"xpReward"],[70,20,90,18],[70,23,90,21],[70,25,90,23],[71,6,91,4],[71,12,91,10,"goldReward"],[71,22,91,20],[71,25,91,23],[71,27,91,25],[72,6,93,4,"console"],[72,13,93,11],[72,14,93,12,"log"],[72,17,93,15],[72,18,93,16],[72,33,93,31,"xpReward"],[72,41,93,39],[72,52,93,50,"goldReward"],[72,62,93,60],[72,78,93,76],[72,79,93,77],[73,6,95,4,"updateNinja"],[73,17,95,15],[73,18,95,17,"prev"],[73,22,95,21],[73,26,95,26],[74,8,96,6,"console"],[74,15,96,13],[74,16,96,14,"log"],[74,19,96,17],[74,20,96,18],[74,37,96,35,"prev"],[74,41,96,39],[74,42,96,40,"experience"],[74,52,96,50],[74,64,96,62,"prev"],[74,68,96,66],[74,69,96,67,"experience"],[74,79,96,77],[74,82,96,80,"xpReward"],[74,90,96,88],[74,92,96,90],[74,93,96,91],[75,8,97,6],[75,15,97,13],[76,10,98,8,"experience"],[76,20,98,18],[76,22,98,20,"prev"],[76,26,98,24],[76,27,98,25,"experience"],[76,37,98,35],[76,40,98,38,"xpReward"],[76,48,98,46],[77,10,99,8,"gold"],[77,14,99,12],[77,16,99,14,"prev"],[77,20,99,18],[77,21,99,19,"gold"],[77,25,99,23],[77,28,99,26,"goldReward"],[78,8,100,6],[78,9,100,7],[79,6,101,4],[79,7,101,5],[79,8,101,6],[80,4,102,2],[80,5,102,3],[82,4,104,2],[83,4,105,2],[83,10,105,8,"handleCombatTick"],[83,26,105,24],[83,29,105,27,"handleCombatTick"],[83,30,105,27],[83,35,105,33],[84,6,105,33],[84,10,105,33,"_s2"],[84,13,105,33],[84,16,105,33,"$RefreshSig$"],[84,28,105,33],[85,6,106,4,"console"],[85,13,106,11],[85,14,106,12,"log"],[85,17,106,15],[85,18,106,16],[85,45,106,43],[85,46,106,44],[86,6,107,4,"_s2"],[86,9,107,4],[86,10,107,4,"setCombatState"],[86,24,107,18],[86,25,107,18,"_s2"],[86,28,107,18],[86,29,107,19,"prev"],[86,33,107,23],[86,37,107,27],[87,8,107,27,"_s2"],[87,11,107,27],[88,8,108,6],[88,14,108,12,"newTick"],[88,21,108,19],[88,24,108,22,"combatEngine"],[88,43,108,34],[88,44,108,34,"combatEngine"],[88,56,108,34],[88,57,108,35,"getCurrentTick"],[88,71,108,49],[88,72,108,50],[88,73,108,51],[89,8,109,6],[89,14,109,12,"newState"],[89,22,109,20],[89,25,109,23],[90,10,109,25],[90,13,109,28,"prev"],[90,17,109,32],[91,10,109,34,"currentTick"],[91,21,109,45],[91,23,109,47,"newTick"],[92,8,109,55],[92,9,109,56],[93,8,111,6],[93,12,111,10],[93,13,111,11,"newState"],[93,21,111,19],[93,22,111,20,"isInCombat"],[93,32,111,30],[93,34,111,32],[93,41,111,39,"newState"],[93,49,111,47],[95,8,113,6],[96,8,114,6,"newState"],[96,16,114,14],[96,17,114,15,"abilityManager"],[96,31,114,29],[96,32,114,30,"updateCooldowns"],[96,47,114,45],[96,48,114,46,"newTick"],[96,55,114,53],[96,56,114,54],[98,8,116,6],[99,8,117,6],[99,14,117,12,"effectResults"],[99,27,117,25],[99,30,117,28,"newState"],[99,38,117,36],[99,39,117,37,"statusEffects"],[99,52,117,50],[99,53,117,51,"processTick"],[99,64,117,62],[99,65,117,63,"newTick"],[99,72,117,70],[99,73,117,71],[101,8,119,6],[102,8,120,6,"effectResults"],[102,21,120,19],[102,22,120,20,"forEach"],[102,29,120,27],[102,30,120,28],[102,31,120,29,"results"],[102,38,120,36],[102,40,120,38,"entityId"],[102,48,120,46],[102,53,120,51],[103,10,121,8],[103,16,121,14,"enemyIndex"],[103,26,121,24],[103,29,121,27,"newState"],[103,37,121,35],[103,38,121,36,"enemies"],[103,45,121,43],[103,46,121,44,"findIndex"],[103,55,121,53],[103,56,121,54,"e"],[103,57,121,55],[103,61,121,59,"e"],[103,62,121,60],[103,63,121,61,"id"],[103,65,121,63],[103,70,121,68,"entityId"],[103,78,121,76],[103,79,121,77],[104,10,122,8],[104,14,122,12,"enemyIndex"],[104,24,122,22],[104,28,122,26],[104,29,122,27],[104,31,122,29],[105,12,123,10,"results"],[105,19,123,17],[105,20,123,18,"forEach"],[105,27,123,25],[105,28,123,26,"result"],[105,34,123,32],[105,38,123,36],[106,14,124,12,"newState"],[106,22,124,20],[106,23,124,21,"enemies"],[106,30,124,28],[106,31,124,29,"enemyIndex"],[106,41,124,39],[106,42,124,40],[106,43,124,41,"health"],[106,49,124,47],[106,53,124,51,"result"],[106,59,124,57],[106,60,124,58,"damage"],[106,66,124,64],[107,14,125,12,"newState"],[107,22,125,20],[107,23,125,21,"enemies"],[107,30,125,28],[107,31,125,29,"enemyIndex"],[107,41,125,39],[107,42,125,40],[107,43,125,41,"lastDamaged"],[107,54,125,52],[107,57,125,55,"newTick"],[107,64,125,62],[108,12,126,10],[108,13,126,11],[108,14,126,12],[109,10,127,8],[110,8,128,6],[110,9,128,7],[110,10,128,8],[112,8,130,6],[113,8,131,6],[113,13,131,11],[113,17,131,15,"i"],[113,18,131,16],[113,21,131,19],[113,22,131,20],[113,24,131,22,"i"],[113,25,131,23],[113,28,131,26],[113,29,131,27],[113,31,131,29,"i"],[113,32,131,30],[113,34,131,32],[113,36,131,34],[114,10,132,8],[114,14,132,12,"newState"],[114,22,132,20],[114,23,132,21,"abilityManager"],[114,37,132,35],[114,38,132,36,"isAbilityReady"],[114,52,132,50],[114,53,132,51,"i"],[114,54,132,52],[114,55,132,53],[114,59,132,57,"newState"],[114,67,132,65],[114,68,132,66,"enemies"],[114,75,132,73],[114,76,132,74,"length"],[114,82,132,80],[114,85,132,83],[114,86,132,84],[114,88,132,86],[115,12,133,10],[115,16,133,14,"newState"],[115,24,133,22],[115,25,133,23,"abilityManager"],[115,39,133,37],[115,40,133,38,"useAbility"],[115,50,133,48],[115,51,133,49,"i"],[115,52,133,50],[115,54,133,52,"newTick"],[115,61,133,59],[115,62,133,60],[115,64,133,62],[116,14,134,12,"castAbility"],[116,25,134,23],[116,26,134,24,"newState"],[116,34,134,32],[116,36,134,34,"i"],[116,37,134,35],[116,38,134,36],[117,12,135,10],[118,10,136,8],[119,8,137,6],[121,8,139,6],[122,8,140,6],[122,14,140,12,"deadEnemies"],[122,25,140,23],[122,28,140,26,"newState"],[122,36,140,34],[122,37,140,35,"enemies"],[122,44,140,42],[122,45,140,43,"filter"],[122,51,140,49],[122,52,140,50,"enemy"],[122,57,140,55],[122,61,140,59,"enemy"],[122,66,140,64],[122,67,140,65,"health"],[122,73,140,71],[122,77,140,75],[122,78,140,76],[122,79,140,77],[123,8,141,6,"deadEnemies"],[123,19,141,17],[123,20,141,18,"forEach"],[123,27,141,25],[123,28,141,26,"enemy"],[123,33,141,31],[123,37,141,35],[124,10,142,8,"handleEnemyKill"],[124,25,142,23],[124,26,142,24,"enemy"],[124,31,142,29],[124,32,142,30],[125,8,143,6],[125,9,143,7],[125,10,143,8],[127,8,145,6],[128,8,146,6,"newState"],[128,16,146,14],[128,17,146,15,"enemies"],[128,24,146,22],[128,27,146,25,"newState"],[128,35,146,33],[128,36,146,34,"enemies"],[128,43,146,41],[128,44,146,42,"filter"],[128,50,146,48],[128,51,146,49,"enemy"],[128,56,146,54],[128,60,146,58,"enemy"],[128,65,146,63],[128,66,146,64,"health"],[128,72,146,70],[128,75,146,73],[128,76,146,74],[128,77,146,75],[130,8,148,6],[131,8,149,6],[131,14,149,12,"MAX_ENEMIES"],[131,25,149,23],[131,28,149,26],[131,30,149,28],[132,8,150,6,"console"],[132,15,150,13],[132,16,150,14,"log"],[132,19,150,17],[132,20,150,18],[132,53,150,51,"newState"],[132,61,150,59],[132,62,150,60,"enemies"],[132,69,150,67],[132,70,150,68,"length"],[132,76,150,74],[132,85,150,83,"MAX_ENEMIES"],[132,96,150,94],[132,98,150,96],[132,99,150,97],[133,8,151,6],[133,15,151,13,"newState"],[133,23,151,21],[133,24,151,22,"enemies"],[133,31,151,29],[133,32,151,30,"length"],[133,38,151,36],[133,41,151,39,"MAX_ENEMIES"],[133,52,151,50],[133,54,151,52],[134,10,152,8,"console"],[134,17,152,15],[134,18,152,16,"log"],[134,21,152,19],[134,22,152,20],[134,43,152,41,"newState"],[134,51,152,49],[134,52,152,50,"enemies"],[134,59,152,57],[134,60,152,58,"length"],[134,66,152,64],[134,69,152,67],[134,70,152,68],[134,74,152,72,"MAX_ENEMIES"],[134,85,152,83],[134,87,152,85],[134,88,152,86],[135,10,153,8,"spawnTestEnemy"],[135,24,153,22],[135,25,153,23,"newState"],[135,33,153,31],[135,34,153,32],[136,8,154,6],[137,8,156,6],[137,15,156,13,"newState"],[137,23,156,21],[138,6,157,4],[138,7,157,5],[138,47,157,6],[139,4,158,2],[139,5,158,3],[141,4,160,2],[142,4,161,2],[142,10,161,8,"findClosestEnemyInternal"],[142,34,161,32],[142,37,161,36,"enemies"],[142,44,161,58],[142,48,161,83],[143,6,162,4],[143,10,162,8,"enemies"],[143,17,162,15],[143,18,162,16,"length"],[143,24,162,22],[143,29,162,27],[143,30,162,28],[143,32,162,30],[143,39,162,37],[143,43,162,41],[145,6,164,4],[146,6,165,4],[146,12,165,10,"SCREEN_WIDTH"],[146,24,165,22],[146,27,165,25],[146,30,165,28],[147,6,166,4],[147,12,166,10,"GAME_AREA_HEIGHT"],[147,28,166,26],[147,31,166,29],[147,34,166,32],[147,37,166,35],[147,40,166,38],[148,6,167,4],[148,12,167,10,"ninjaX"],[148,18,167,16],[148,21,167,19,"SCREEN_WIDTH"],[148,33,167,31],[148,36,167,34],[148,37,167,35],[149,6,168,4],[149,12,168,10,"ninjaY"],[149,18,168,16],[149,21,168,19,"GAME_AREA_HEIGHT"],[149,37,168,35],[149,40,168,38],[149,41,168,39],[150,6,170,4],[150,10,170,8,"closestEnemy"],[150,22,170,20],[150,25,170,23,"enemies"],[150,32,170,30],[150,33,170,31],[150,34,170,32],[150,35,170,33],[151,6,171,4],[151,10,171,8,"closestDistance"],[151,25,171,23],[151,28,171,26,"Infinity"],[151,36,171,34],[152,6,173,4,"enemies"],[152,13,173,11],[152,14,173,12,"forEach"],[152,21,173,19],[152,22,173,20,"enemy"],[152,27,173,25],[152,31,173,29],[153,8,174,6],[153,14,174,12,"distance"],[153,22,174,20],[153,25,174,23,"Math"],[153,29,174,27],[153,30,174,28,"sqrt"],[153,34,174,32],[153,35,175,8,"Math"],[153,39,175,12],[153,40,175,13,"pow"],[153,43,175,16],[153,44,175,17,"enemy"],[153,49,175,22],[153,50,175,23,"position"],[153,58,175,31],[153,59,175,32,"x"],[153,60,175,33],[153,63,175,36,"ninjaX"],[153,69,175,42],[153,71,175,44],[153,72,175,45],[153,73,175,46],[153,76,176,8,"Math"],[153,80,176,12],[153,81,176,13,"pow"],[153,84,176,16],[153,85,176,17,"enemy"],[153,90,176,22],[153,91,176,23,"position"],[153,99,176,31],[153,100,176,32,"y"],[153,101,176,33],[153,104,176,36,"ninjaY"],[153,110,176,42],[153,112,176,44],[153,113,176,45],[153,114,177,6],[153,115,177,7],[154,8,179,6],[154,12,179,10,"distance"],[154,20,179,18],[154,23,179,21,"closestDistance"],[154,38,179,36],[154,40,179,38],[155,10,180,8,"closestDistance"],[155,25,180,23],[155,28,180,26,"distance"],[155,36,180,34],[156,10,181,8,"closestEnemy"],[156,22,181,20],[156,25,181,23,"enemy"],[156,30,181,28],[157,8,182,6],[158,6,183,4],[158,7,183,5],[158,8,183,6],[159,6,185,4,"console"],[159,13,185,11],[159,14,185,12,"log"],[159,17,185,15],[159,18,185,16],[159,60,185,58,"closestDistance"],[159,75,185,73],[159,76,185,74,"toFixed"],[159,83,185,81],[159,84,185,82],[159,85,185,83],[159,86,185,84],[159,88,185,86],[159,89,185,87],[160,6,186,4],[160,13,186,11,"closestEnemy"],[160,25,186,23],[161,4,187,2],[161,5,187,3],[163,4,189,2],[164,4,190,2],[164,10,190,8,"findClosestEnemy"],[164,26,190,24],[164,29,190,27,"findClosestEnemy"],[164,30,190,27],[164,35,190,53],[165,6,191,4],[165,13,191,11,"findClosestEnemyInternal"],[165,37,191,35],[165,38,191,36,"combatState"],[165,49,191,47],[165,50,191,48,"enemies"],[165,57,191,55],[165,58,191,56],[166,4,192,2],[166,5,192,3],[168,4,194,2],[169,4,195,2],[169,10,195,8,"handleProjectileHit"],[169,29,195,27],[169,32,195,31,"projectile"],[169,42,195,59],[169,46,195,64],[170,6,196,4,"console"],[170,13,196,11],[170,14,196,12,"log"],[170,17,196,15],[170,18,196,16],[170,35,196,33,"projectile"],[170,45,196,43],[170,46,196,44,"id"],[170,48,196,46],[170,62,196,60,"projectile"],[170,72,196,70],[170,73,196,71,"targetEnemyId"],[170,86,196,84],[170,94,196,92,"projectile"],[170,104,196,102],[170,105,196,103,"damage"],[170,111,196,109],[170,120,196,118],[170,121,196,119],[171,6,198,4,"setCombatState"],[171,20,198,18],[171,21,198,19,"prev"],[171,25,198,23],[171,29,198,27],[172,8,199,6],[172,14,199,12,"newState"],[172,22,199,20],[172,25,199,23],[173,10,199,25],[173,13,199,28,"prev"],[174,8,199,33],[174,9,199,34],[176,8,201,6],[177,8,202,6],[177,14,202,12,"enemyIndex"],[177,24,202,22],[177,27,202,25,"newState"],[177,35,202,33],[177,36,202,34,"enemies"],[177,43,202,41],[177,44,202,42,"findIndex"],[177,53,202,51],[177,54,202,52,"e"],[177,55,202,53],[177,59,202,57,"e"],[177,60,202,58],[177,61,202,59,"id"],[177,63,202,61],[177,68,202,66,"projectile"],[177,78,202,76],[177,79,202,77,"targetEnemyId"],[177,92,202,90],[177,93,202,91],[178,8,203,6],[178,12,203,10,"enemyIndex"],[178,22,203,20],[178,26,203,24],[178,27,203,25],[178,29,203,27],[179,10,204,8,"newState"],[179,18,204,16],[179,19,204,17,"enemies"],[179,26,204,24],[179,29,204,27],[179,30,204,28],[179,33,204,31,"newState"],[179,41,204,39],[179,42,204,40,"enemies"],[179,49,204,47],[179,50,204,48],[180,10,205,8,"newState"],[180,18,205,16],[180,19,205,17,"enemies"],[180,26,205,24],[180,27,205,25,"enemyIndex"],[180,37,205,35],[180,38,205,36],[180,41,205,39],[181,12,206,10],[181,15,206,13,"newState"],[181,23,206,21],[181,24,206,22,"enemies"],[181,31,206,29],[181,32,206,30,"enemyIndex"],[181,42,206,40],[181,43,206,41],[182,12,207,10,"health"],[182,18,207,16],[182,20,207,18,"newState"],[182,28,207,26],[182,29,207,27,"enemies"],[182,36,207,34],[182,37,207,35,"enemyIndex"],[182,47,207,45],[182,48,207,46],[182,49,207,47,"health"],[182,55,207,53],[182,58,207,56,"projectile"],[182,68,207,66],[182,69,207,67,"damage"],[182,75,207,73],[183,12,208,10,"lastDamaged"],[183,23,208,21],[183,25,208,23,"combatEngine"],[183,44,208,35],[183,45,208,35,"combatEngine"],[183,57,208,35],[183,58,208,36,"getCurrentTick"],[183,72,208,50],[183,73,208,51],[184,10,209,8],[184,11,209,9],[185,10,211,8,"console"],[185,17,211,15],[185,18,211,16,"log"],[185,21,211,19],[185,22,211,20],[185,34,211,32,"projectile"],[185,44,211,42],[185,45,211,43,"targetEnemyId"],[185,58,211,56],[185,70,211,68,"newState"],[185,78,211,76],[185,79,211,77,"enemies"],[185,86,211,84],[185,87,211,85,"enemyIndex"],[185,97,211,95],[185,98,211,96],[185,99,211,97,"health"],[185,105,211,103],[185,109,211,107,"newState"],[185,117,211,115],[185,118,211,116,"enemies"],[185,125,211,123],[185,126,211,124,"enemyIndex"],[185,136,211,134],[185,137,211,135],[185,138,211,136,"maxHealth"],[185,147,211,145],[185,149,211,147],[185,150,211,148],[186,8,212,6],[187,8,214,6],[187,15,214,13,"newState"],[187,23,214,21],[188,6,215,4],[188,7,215,5],[188,8,215,6],[190,6,217,4],[191,6,218,4,"setProjectiles"],[191,20,218,18],[191,21,218,19,"prev"],[191,25,218,23],[191,29,218,27,"prev"],[191,33,218,31],[191,34,218,32,"filter"],[191,40,218,38],[191,41,218,39,"p"],[191,42,218,40],[191,46,218,44,"p"],[191,47,218,45],[191,48,218,46,"id"],[191,50,218,48],[191,55,218,53,"projectile"],[191,65,218,63],[191,66,218,64,"id"],[191,68,218,66],[191,69,218,67],[191,70,218,68],[192,4,219,2],[192,5,219,3],[194,4,221,2],[195,4,222,2],[195,10,222,8,"castAbility"],[195,21,222,19],[195,24,222,22,"castAbility"],[195,25,222,23,"state"],[195,30,222,41],[195,32,222,43,"slotIndex"],[195,41,222,60],[195,46,222,65],[196,6,223,4],[196,12,223,10,"deck"],[196,16,223,14],[196,19,223,17,"state"],[196,24,223,22],[196,25,223,23,"abilityManager"],[196,39,223,37],[196,40,223,38,"getDeck"],[196,47,223,45],[196,48,223,46],[196,49,223,47],[197,6,224,4],[197,12,224,10,"ability"],[197,19,224,17],[197,22,224,20,"deck"],[197,26,224,24],[197,27,224,25,"slots"],[197,32,224,30],[197,33,224,31,"slotIndex"],[197,42,224,40],[197,43,224,41],[198,6,225,4],[198,10,225,8],[198,11,225,9,"ability"],[198,18,225,16],[198,20,225,18],[200,6,227,4],[201,6,228,4],[201,12,228,10,"target"],[201,18,228,16],[201,21,228,19,"findClosestEnemyInternal"],[201,45,228,43],[201,46,228,44,"state"],[201,51,228,49],[201,52,228,50,"enemies"],[201,59,228,57],[201,60,228,58],[202,6,229,4],[202,10,229,8],[202,11,229,9,"target"],[202,17,229,15],[202,19,229,17],[204,6,231,4],[205,6,232,4],[205,10,232,8,"damage"],[205,16,232,14],[205,19,232,17,"ability"],[205,26,232,24],[205,27,232,25,"stats"],[205,32,232,30],[205,33,232,31,"baseDamage"],[205,43,232,41],[207,6,234,4],[208,6,235,4,"deck"],[208,10,235,8],[208,11,235,9,"activeSynergies"],[208,26,235,24],[208,27,235,25,"forEach"],[208,34,235,32],[208,35,235,33,"synergy"],[208,42,235,40],[208,46,235,44],[209,8,236,6],[209,12,236,10,"synergy"],[209,19,236,17],[209,20,236,18,"bonus"],[209,25,236,23],[209,26,236,24,"damageBonus"],[209,37,236,35],[209,41,237,10,"synergy"],[209,48,237,17],[209,49,237,18,"requiredTags"],[209,61,237,30],[209,62,237,31,"some"],[209,66,237,35],[209,67,237,36,"tag"],[209,70,237,39],[209,74,237,43,"ability"],[209,81,237,50],[209,82,237,51,"tags"],[209,86,237,55],[209,87,237,56,"includes"],[209,95,237,64],[209,96,237,65,"tag"],[209,99,237,68],[209,100,237,69],[209,101,237,70],[209,103,237,72],[210,10,238,8,"damage"],[210,16,238,14],[210,20,238,19],[210,21,238,20],[210,24,238,23,"synergy"],[210,31,238,30],[210,32,238,31,"bonus"],[210,37,238,36],[210,38,238,37,"damageBonus"],[210,49,238,48],[210,52,238,51],[210,55,238,55],[211,8,239,6],[212,6,240,4],[212,7,240,5],[212,8,240,6],[214,6,242,4],[215,6,243,4],[215,12,243,10,"damageResult"],[215,24,243,22],[215,27,243,25,"DamageCalculator"],[215,46,243,41],[215,47,243,41,"DamageCalculator"],[215,63,243,41],[215,64,243,42,"calculateDamage"],[215,79,243,57],[215,80,243,58,"damage"],[215,86,243,64],[215,88,243,66,"state"],[215,93,243,71],[215,94,243,72,"playerStats"],[215,105,243,83],[215,107,243,85,"target"],[215,113,243,91],[215,114,243,92,"stats"],[215,119,243,97],[215,120,243,98],[217,6,245,4],[218,6,246,4,"createProjectile"],[218,22,246,20],[218,23,246,21,"target"],[218,29,246,27],[218,31,246,29,"damageResult"],[218,43,246,41],[218,44,246,42,"damage"],[218,50,246,48],[218,51,246,49],[220,6,248,4],[221,6,249,4],[221,10,249,8,"ability"],[221,17,249,15],[221,18,249,16,"effects"],[221,25,249,23],[221,26,249,24,"includes"],[221,34,249,32],[221,35,249,33],[221,40,249,38],[221,41,249,39],[221,45,249,43,"ability"],[221,52,249,50],[221,53,249,51,"stats"],[221,58,249,56],[221,59,249,57,"duration"],[221,67,249,65],[221,69,249,67],[222,8,250,6,"state"],[222,13,250,11],[222,14,250,12,"statusEffects"],[222,27,250,25],[222,28,250,26,"addEffect"],[222,37,250,35],[222,38,250,36,"target"],[222,44,250,42],[222,45,250,43,"id"],[222,47,250,45],[222,49,250,47],[223,10,251,8,"id"],[223,12,251,10],[223,14,251,12],[223,17,251,15,"ability"],[223,24,251,22],[223,25,251,23,"id"],[223,27,251,25],[223,33,251,31],[224,10,252,8,"type"],[224,14,252,12],[224,16,252,14],[224,21,252,19],[225,10,253,8,"remainingTicks"],[225,24,253,22],[225,26,253,24,"Math"],[225,30,253,28],[225,31,253,29,"floor"],[225,36,253,34],[225,37,253,35,"ability"],[225,44,253,42],[225,45,253,43,"stats"],[225,50,253,48],[225,51,253,49,"duration"],[225,59,253,57],[225,62,253,60],[225,64,253,62],[225,65,253,63],[226,10,253,65],[227,10,254,8,"tickInterval"],[227,22,254,20],[227,24,254,22],[227,26,254,24],[228,10,254,26],[229,10,255,8,"lastTick"],[229,18,255,16],[229,20,255,18,"state"],[229,25,255,23],[229,26,255,24,"currentTick"],[229,37,255,35],[230,10,256,8,"value"],[230,15,256,13],[230,17,256,15,"Math"],[230,21,256,19],[230,22,256,20,"floor"],[230,27,256,25],[230,28,256,26,"damage"],[230,34,256,32],[230,37,256,35],[230,40,256,38],[230,41,256,39],[231,10,256,41],[232,10,257,8,"stackable"],[232,19,257,17],[232,21,257,19],[233,8,258,6],[233,9,258,7],[233,10,258,8],[234,6,259,4],[235,6,261,4,"console"],[235,13,261,11],[235,14,261,12,"log"],[235,17,261,15],[235,18,261,16],[235,24,261,22,"ability"],[235,31,261,29],[235,32,261,30,"name"],[235,36,261,34],[235,69,261,67,"damageResult"],[235,81,261,79],[235,82,261,80,"damage"],[235,88,261,86],[235,98,261,96,"damageResult"],[235,110,261,108],[235,111,261,109,"isCritical"],[235,121,261,119],[235,124,261,122],[235,134,261,132],[235,137,261,135],[235,139,261,137],[235,141,261,139],[235,142,261,140],[236,4,262,2],[236,5,262,3],[238,4,264,2],[239,4,265,2],[239,10,265,8,"createProjectile"],[239,26,265,24],[239,29,265,27,"createProjectile"],[239,30,265,28,"targetEnemy"],[239,41,265,52],[239,43,265,54,"damage"],[239,49,265,68],[239,54,265,73],[240,6,266,4],[240,12,266,10,"SCREEN_WIDTH"],[240,24,266,22],[240,27,266,25],[240,30,266,28],[241,6,267,4],[241,12,267,10,"GAME_AREA_HEIGHT"],[241,28,267,26],[241,31,267,29],[241,34,267,32],[241,37,267,35],[241,40,267,38],[242,6,268,4],[242,12,268,10,"ninjaX"],[242,18,268,16],[242,21,268,19,"SCREEN_WIDTH"],[242,33,268,31],[242,36,268,34],[242,37,268,35],[243,6,269,4],[243,12,269,10,"ninjaY"],[243,18,269,16],[243,21,269,19,"GAME_AREA_HEIGHT"],[243,37,269,35],[243,40,269,38],[243,41,269,39],[244,6,270,4],[244,12,270,10,"ENEMY_SIZE"],[244,22,270,20],[244,25,270,23],[244,27,270,25],[245,6,272,4],[245,12,272,10,"projectile"],[245,22,272,38],[245,25,272,41],[246,8,273,6,"id"],[246,10,273,8],[246,12,273,10],[246,20,273,18,"Date"],[246,24,273,22],[246,25,273,23,"now"],[246,28,273,26],[246,29,273,27],[246,30,273,28],[246,34,273,32,"Math"],[246,38,273,36],[246,39,273,37,"random"],[246,45,273,43],[246,46,273,44],[246,47,273,45],[246,49,273,47],[247,8,274,6,"x"],[247,9,274,7],[247,11,274,9,"ninjaX"],[247,17,274,15],[248,8,275,6,"y"],[248,9,275,7],[248,11,275,9,"ninjaY"],[248,17,275,15],[249,8,276,6,"targetX"],[249,15,276,13],[249,17,276,15,"targetEnemy"],[249,28,276,26],[249,29,276,27,"position"],[249,37,276,35],[249,38,276,36,"x"],[249,39,276,37],[249,42,276,40,"ENEMY_SIZE"],[249,52,276,50],[249,55,276,53],[249,56,276,54],[250,8,277,6,"targetY"],[250,15,277,13],[250,17,277,15,"targetEnemy"],[250,28,277,26],[250,29,277,27,"position"],[250,37,277,35],[250,38,277,36,"y"],[250,39,277,37],[250,42,277,40,"ENEMY_SIZE"],[250,52,277,50],[250,55,277,53],[250,56,277,54],[251,8,278,6,"targetEnemyId"],[251,21,278,19],[251,23,278,21,"targetEnemy"],[251,34,278,32],[251,35,278,33,"id"],[251,37,278,35],[252,8,279,6,"damage"],[252,14,279,12],[252,16,279,14,"damage"],[252,22,279,20],[253,8,280,6,"startTime"],[253,17,280,15],[253,19,280,17,"Date"],[253,23,280,21],[253,24,280,22,"now"],[253,27,280,25],[253,28,280,26],[253,29,280,27],[254,8,281,6,"duration"],[254,16,281,14],[254,18,281,16],[254,21,281,19],[254,22,281,21],[255,6,282,4],[255,7,282,5],[256,6,284,4,"console"],[256,13,284,11],[256,14,284,12,"log"],[256,17,284,15],[256,18,284,16],[256,53,284,51,"targetEnemy"],[256,64,284,62],[256,65,284,63,"id"],[256,67,284,65],[256,75,284,73,"damage"],[256,81,284,79],[256,90,284,88],[256,91,284,89],[257,6,286,4,"setProjectiles"],[257,20,286,18],[257,21,286,19,"prev"],[257,25,286,23],[257,29,286,27],[257,30,286,28],[257,33,286,31,"prev"],[257,37,286,35],[257,39,286,37,"projectile"],[257,49,286,47],[257,50,286,48],[257,51,286,49],[259,6,288,4],[260,6,289,4,"setTimeout"],[260,16,289,14],[260,17,289,15],[260,23,289,21],[261,8,290,6,"handleProjectileHit"],[261,27,290,25],[261,28,290,26,"projectile"],[261,38,290,36],[261,39,290,37],[262,6,291,4],[262,7,291,5],[262,9,291,7],[262,12,291,10],[262,13,291,11],[263,4,292,2],[263,5,292,3],[265,4,294,2],[266,4,295,2],[266,10,295,8,"spawnTestEnemy"],[266,24,295,22],[266,27,295,26,"state"],[266,32,295,44],[266,36,295,49],[267,6,296,4],[268,6,297,4],[268,12,297,10,"SCREEN_WIDTH"],[268,24,297,22],[268,27,297,25],[268,30,297,28],[268,31,297,29],[268,32,297,30],[269,6,298,4],[269,12,298,10,"GAME_AREA_HEIGHT"],[269,28,298,26],[269,31,298,29],[269,34,298,32],[269,37,298,35],[269,40,298,38],[269,41,298,39],[269,42,298,40],[270,6,299,4],[270,12,299,10,"ENEMY_SIZE"],[270,22,299,20],[270,25,299,23],[270,27,299,25],[272,6,301,4],[273,6,302,4],[273,12,302,10,"x"],[273,13,302,11],[273,16,302,14,"Math"],[273,20,302,18],[273,21,302,19,"random"],[273,27,302,25],[273,28,302,26],[273,29,302,27],[273,33,302,31,"SCREEN_WIDTH"],[273,45,302,43],[273,48,302,46,"ENEMY_SIZE"],[273,58,302,56],[273,61,302,59],[273,62,302,60],[273,63,302,61],[273,66,302,64,"ENEMY_SIZE"],[273,76,302,74],[273,77,302,75],[273,78,302,76],[274,6,303,4],[274,12,303,10,"y"],[274,13,303,11],[274,16,303,14,"Math"],[274,20,303,18],[274,21,303,19,"random"],[274,27,303,25],[274,28,303,26],[274,29,303,27],[274,33,303,31,"GAME_AREA_HEIGHT"],[274,49,303,47],[274,52,303,50,"ENEMY_SIZE"],[274,62,303,60],[274,65,303,63],[274,66,303,64],[274,67,303,65],[274,70,303,68,"ENEMY_SIZE"],[274,80,303,78],[274,81,303,79],[274,82,303,80],[276,6,305,4],[276,12,305,10,"enemy"],[276,17,305,28],[276,20,305,31],[277,8,306,6,"id"],[277,10,306,8],[277,12,306,10],[277,21,306,19],[277,23,306,21,"enemyCounter"],[277,35,306,33],[277,37,306,35],[278,8,307,6,"name"],[278,12,307,10],[278,14,307,12],[278,24,307,22],[279,8,308,6,"health"],[279,14,308,12],[279,16,308,14],[279,19,308,17],[280,8,309,6,"maxHealth"],[280,17,309,15],[280,19,309,17],[280,22,309,20],[281,8,310,6,"stats"],[281,13,310,11],[281,15,310,13],[282,10,311,8,"attack"],[282,16,311,14],[282,18,311,16],[282,20,311,18],[283,10,312,8,"defense"],[283,17,312,15],[283,19,312,17],[283,21,312,19],[284,10,313,8,"health"],[284,16,313,14],[284,18,313,16],[284,21,313,19],[285,10,314,8,"maxHealth"],[285,19,314,17],[285,21,314,19],[285,24,314,22],[286,10,315,8,"critChance"],[286,20,315,18],[286,22,315,20],[286,23,315,21],[287,10,316,8,"critDamage"],[287,20,316,18],[287,22,316,20],[287,25,316,23],[288,10,317,8,"cooldownReduction"],[288,27,317,25],[288,29,317,27],[289,8,318,6],[289,9,318,7],[290,8,319,6,"position"],[290,16,319,14],[290,18,319,16],[291,10,319,18,"x"],[291,11,319,19],[292,10,319,21,"y"],[293,8,319,23],[293,9,319,24],[294,8,320,6,"lastDamaged"],[294,19,320,17],[294,21,320,19],[295,6,321,4],[295,7,321,5],[296,6,323,4,"state"],[296,11,323,9],[296,12,323,10,"enemies"],[296,19,323,17],[296,20,323,18,"push"],[296,24,323,22],[296,25,323,23,"enemy"],[296,30,323,28],[296,31,323,29],[297,4,324,2],[297,5,324,3],[299,4,326,2],[300,4,327,2],[300,10,327,8,"startCombat"],[300,21,327,19],[300,24,327,22,"startCombat"],[300,25,327,22],[300,30,327,28],[301,6,328,4,"console"],[301,13,328,11],[301,14,328,12,"log"],[301,17,328,15],[301,18,328,16],[301,63,328,61],[301,64,328,62],[302,6,329,4,"setCombatState"],[302,20,329,18],[302,21,329,19,"prev"],[302,25,329,23],[302,30,329,28],[303,8,329,30],[303,11,329,33,"prev"],[303,15,329,37],[304,8,329,39,"isInCombat"],[304,18,329,49],[304,20,329,51],[305,6,329,56],[305,7,329,57],[305,8,329,58],[305,9,329,59],[307,6,331,4],[308,6,332,4,"combatEngine"],[308,25,332,16],[308,26,332,16,"combatEngine"],[308,38,332,16],[308,39,332,17,"addTickCallback"],[308,54,332,32],[308,55,332,33,"handleCombatTick"],[308,71,332,49],[308,72,332,50],[309,6,333,4,"console"],[309,13,333,11],[309,14,333,12,"log"],[309,17,333,15],[309,18,333,16],[309,62,333,60],[309,63,333,61],[311,6,335,4],[312,6,336,4,"combatEngine"],[312,25,336,16],[312,26,336,16,"combatEngine"],[312,38,336,16],[312,39,336,17,"start"],[312,44,336,22],[312,45,336,23],[312,46,336,24],[313,4,337,2],[313,5,337,3],[315,4,339,2],[316,4,340,2],[316,10,340,8,"stopCombat"],[316,20,340,18],[316,23,340,21,"stopCombat"],[316,24,340,21],[316,29,340,27],[317,6,341,4,"setCombatState"],[317,20,341,18],[317,21,341,19,"prev"],[317,25,341,23],[317,30,341,28],[318,8,341,30],[318,11,341,33,"prev"],[318,15,341,37],[319,8,341,39,"isInCombat"],[319,18,341,49],[319,20,341,51],[320,6,341,57],[320,7,341,58],[320,8,341,59],[320,9,341,60],[321,6,342,4,"combatEngine"],[321,25,342,16],[321,26,342,16,"combatEngine"],[321,38,342,16],[321,39,342,17,"removeTickCallback"],[321,57,342,35],[321,58,342,36,"handleCombatTick"],[321,74,342,52],[321,75,342,53],[322,4,343,2],[322,5,343,3],[324,4,345,2],[325,4,346,2],[325,10,346,8,"equipAbility"],[325,22,346,20],[325,25,346,23,"equipAbility"],[325,26,346,24,"abilityId"],[325,35,346,41],[325,37,346,43,"slotIndex"],[325,46,346,60],[325,51,346,74],[326,6,347,4],[326,13,347,11,"combatState"],[326,24,347,22],[326,25,347,23,"abilityManager"],[326,39,347,37],[326,40,347,38,"equipAbility"],[326,52,347,50],[326,53,347,51,"abilityId"],[326,62,347,60],[326,64,347,62,"slotIndex"],[326,73,347,71],[326,74,347,72],[327,4,348,2],[327,5,348,3],[328,4,350,2],[328,10,350,8,"getDeck"],[328,17,350,15],[328,20,350,18,"getDeck"],[328,21,350,18],[328,26,350,24],[329,6,351,4],[329,13,351,11,"combatState"],[329,24,351,22],[329,25,351,23,"abilityManager"],[329,39,351,37],[329,40,351,38,"getDeck"],[329,47,351,45],[329,48,351,46],[329,49,351,47],[330,4,352,2],[330,5,352,3],[331,4,354,2],[331,10,354,8,"getAvailableAbilities"],[331,31,354,29],[331,34,354,32,"getAvailableAbilities"],[331,35,354,32],[331,40,354,38],[332,6,355,4],[332,13,355,11,"combatState"],[332,24,355,22],[332,25,355,23,"abilityManager"],[332,39,355,37],[332,40,355,38,"getAvailableAbilities"],[332,61,355,59],[332,62,355,60],[332,63,355,61],[333,4,356,2],[333,5,356,3],[334,4,358,2],[334,10,358,8,"upgradeAbility"],[334,24,358,22],[334,27,358,26,"abilityId"],[334,36,358,43],[334,40,358,57],[335,6,359,4],[335,13,359,11,"combatState"],[335,24,359,22],[335,25,359,23,"abilityManager"],[335,39,359,37],[335,40,359,38,"upgradeAbility"],[335,54,359,52],[335,55,359,53,"abilityId"],[335,64,359,62],[335,65,359,63],[336,4,360,2],[336,5,360,3],[338,4,362,2],[339,4,363,2],[339,10,363,8,"clearAllEnemies"],[339,25,363,23],[339,28,363,26,"clearAllEnemies"],[339,29,363,26],[339,34,363,32],[340,6,364,4,"console"],[340,13,364,11],[340,14,364,12,"log"],[340,17,364,15],[340,18,364,16],[340,67,364,65],[340,68,364,66],[341,6,365,4,"setCombatState"],[341,20,365,18],[341,21,365,19,"prev"],[341,25,365,23],[341,30,365,28],[342,8,366,6],[342,11,366,9,"prev"],[342,15,366,13],[343,8,367,6,"enemies"],[343,15,367,13],[343,17,367,15],[344,6,368,4],[344,7,368,5],[344,8,368,6],[344,9,368,7],[345,4,369,2],[345,5,369,3],[347,4,371,2],[348,4,372,2],[348,10,372,8,"triggerLevelUpExplosion"],[348,33,372,31],[348,36,372,34,"triggerLevelUpExplosion"],[348,37,372,34],[348,42,372,40],[349,6,373,4,"console"],[349,13,373,11],[349,14,373,12,"log"],[349,17,373,15],[349,18,373,16],[349,70,373,68],[349,71,373,69],[350,6,375,4,"setCombatState"],[350,20,375,18],[350,21,375,19,"prev"],[350,25,375,23],[350,29,375,27],[351,8,376,6],[352,8,377,6],[352,14,377,12,"enemyCount"],[352,24,377,22],[352,27,377,25,"prev"],[352,31,377,29],[352,32,377,30,"enemies"],[352,39,377,37],[352,40,377,38,"length"],[352,46,377,44],[353,8,378,6],[353,14,378,12,"explosionXP"],[353,25,378,23],[353,28,378,26,"enemyCount"],[353,38,378,36],[353,41,378,39],[353,43,378,41],[353,44,378,42],[353,45,378,43],[354,8,379,6],[354,14,379,12,"explosionGold"],[354,27,379,25],[354,30,379,28,"enemyCount"],[354,40,379,38],[354,43,379,41],[354,44,379,42],[354,45,379,43],[354,46,379,44],[356,8,381,6,"console"],[356,15,381,13],[356,16,381,14,"log"],[356,19,381,17],[356,20,381,18],[356,44,381,42,"enemyCount"],[356,54,381,52],[356,76,381,74,"explosionXP"],[356,87,381,85],[356,98,381,96,"explosionGold"],[356,111,381,109],[356,118,381,116],[356,119,381,117],[358,8,383,6],[359,8,384,6],[359,12,384,10,"explosionXP"],[359,23,384,21],[359,26,384,24],[359,27,384,25],[359,29,384,27],[360,10,385,8,"updateNinja"],[360,21,385,19],[360,22,385,21,"ninja"],[360,27,385,26],[360,32,385,32],[361,12,386,10,"experience"],[361,22,386,20],[361,24,386,22,"ninja"],[361,29,386,27],[361,30,386,28,"experience"],[361,40,386,38],[361,43,386,41,"explosionXP"],[361,54,386,52],[362,12,387,10,"gold"],[362,16,387,14],[362,18,387,16,"ninja"],[362,23,387,21],[362,24,387,22,"gold"],[362,28,387,26],[362,31,387,29,"explosionGold"],[363,10,388,8],[363,11,388,9],[363,12,388,10],[363,13,388,11],[364,8,389,6],[366,8,391,6],[367,8,392,6],[368,8,393,6],[368,14,393,12,"damagedEnemies"],[368,28,393,26],[368,31,393,29,"prev"],[368,35,393,33],[368,36,393,34,"enemies"],[368,43,393,41],[368,44,393,42,"map"],[368,47,393,45],[368,48,393,46,"enemy"],[368,53,393,51],[368,58,393,56],[369,10,394,8],[369,13,394,11,"enemy"],[369,18,394,16],[370,10,395,8,"health"],[370,16,395,14],[370,18,395,16],[370,19,395,17],[371,10,395,19],[372,10,396,8,"lastDamaged"],[372,21,396,19],[372,23,396,21,"combatEngine"],[372,42,396,33],[372,43,396,33,"combatEngine"],[372,55,396,33],[372,56,396,34,"getCurrentTick"],[372,70,396,48],[372,71,396,49],[373,8,397,6],[373,9,397,7],[373,10,397,8],[373,11,397,9],[374,8,399,6],[374,15,399,13],[375,10,400,8],[375,13,400,11,"prev"],[375,17,400,15],[376,10,401,8,"enemies"],[376,17,401,15],[376,19,401,17,"damagedEnemies"],[377,8,402,6],[377,9,402,7],[378,6,403,4],[378,7,403,5],[378,8,403,6],[379,4,404,2],[379,5,404,3],[381,4,406,2],[382,4,407,2],[382,8,407,2,"useEffect"],[382,14,407,11],[382,15,407,11,"useEffect"],[382,24,407,11],[382,26,407,12],[382,32,407,18],[383,6,408,4,"combatEngine"],[383,25,408,16],[383,26,408,16,"combatEngine"],[383,38,408,16],[383,39,408,17,"start"],[383,44,408,22],[383,45,408,23],[383,46,408,24],[385,6,410,4],[386,6,411,4,"combatState"],[386,17,411,15],[386,18,411,16,"abilityManager"],[386,32,411,30],[386,33,411,31,"equipAbility"],[386,45,411,43],[386,46,411,44],[386,62,411,60],[386,64,411,62],[386,65,411,63],[386,66,411,64],[387,6,412,4,"combatState"],[387,17,412,15],[387,18,412,16,"abilityManager"],[387,32,412,30],[387,33,412,31,"equipAbility"],[387,45,412,43],[387,46,412,44],[387,61,412,59],[387,63,412,61],[387,64,412,62],[387,65,412,63],[388,6,414,4],[388,13,414,11],[388,19,414,17],[389,8,415,6,"combatEngine"],[389,27,415,18],[389,28,415,18,"combatEngine"],[389,40,415,18],[389,41,415,19,"stop"],[389,45,415,23],[389,46,415,24],[389,47,415,25],[390,6,416,4],[390,7,416,5],[391,4,417,2],[391,5,417,3],[391,7,417,5],[391,9,417,7],[391,10,417,8],[392,4,419,2],[392,10,419,8,"contextValue"],[392,22,419,39],[392,25,419,42],[393,6,420,4,"combatState"],[393,17,420,15],[394,6,421,4,"projectiles"],[394,17,421,15],[395,6,422,4,"startCombat"],[395,17,422,15],[396,6,423,4,"stopCombat"],[396,16,423,14],[397,6,424,4,"equipAbility"],[397,18,424,16],[398,6,425,4,"getDeck"],[398,13,425,11],[399,6,426,4,"getAvailableAbilities"],[399,27,426,25],[400,6,427,4,"upgradeAbility"],[400,20,427,18],[401,6,428,4,"clearAllEnemies"],[401,21,428,19],[402,6,429,4,"triggerLevelUpExplosion"],[402,29,429,27],[403,6,430,4,"findClosestEnemy"],[404,4,431,2],[404,5,431,3],[405,4,433,2],[405,24,434,4],[405,28,434,4,"_reactJsxDevRuntime"],[405,47,434,4],[405,48,434,4,"jsxDEV"],[405,54,434,4],[405,56,434,5,"CombatContext"],[405,69,434,18],[405,70,434,19,"Provider"],[405,78,434,27],[406,6,434,28,"value"],[406,11,434,33],[406,13,434,35,"contextValue"],[406,25,434,48],[407,6,434,48,"children"],[407,14,434,48],[407,16,435,7,"children"],[408,4,435,15],[409,6,435,15,"fileName"],[409,14,435,15],[409,16,435,15,"_jsxFileName"],[409,28,435,15],[410,6,435,15,"lineNumber"],[410,16,435,15],[411,6,435,15,"columnNumber"],[411,18,435,15],[412,4,435,15],[412,11,436,28],[412,12,436,29],[413,2,438,0],[413,3,438,1],[414,2,438,2,"_s3"],[414,5,438,2],[414,6,63,13,"CombatProvider"],[414,20,63,27],[415,4,63,27],[415,12,64,26,"useGame"],[415,24,64,33],[415,25,64,33,"useGame"],[415,32,64,33],[416,2,64,33],[417,2,64,33,"_c"],[417,4,64,33],[417,7,63,13,"CombatProvider"],[417,21,63,27],[418,2,63,27],[418,6,63,27,"_c"],[418,8,63,27],[419,2,63,27,"$RefreshReg$"],[419,14,63,27],[419,15,63,27,"_c"],[419,17,63,27],[420,0,63,27],[420,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","setTimeout$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","useEffect$argument_0","<anonymous>"],"mappings":"AAA;yBCoD;CDM;8BEI;0BCuB;gBCS;KDM;GDC;2BGG;mBCE;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;0BKC;OLE;iDIG,yBJ;KDW;GHC;mCUG;oBCY;KDU;GVI;2BYG;GZE;8BaG;mBTG;oDEI,sCF;KSa;mBCG,oBC,2BD,CD;GbC;sBgBG;iCCa;oCCE,iCD;KDG;GhBsB;2BmBG;mBLqB,6BK;eCG;KDE;GnBC;yBqBG;GrB6B;sBsBG;mBlBE,uCkB;GtBQ;qBuBG;mBnBC,wCmB;GvBE;uBwBG;GxBE;kByBE;GzBE;gC0BE;G1BE;yB2BE;G3BE;0B4BG;mBxBE;MwBG;G5BC;kC6BG;mBzBG;oBFU;UEG;8C0BK;Q1BI;KyBM;G7BC;Y+BG;WCO;KDE;G/BC;CFqB"},"hasCjsExports":false},"type":"js/module"}]}