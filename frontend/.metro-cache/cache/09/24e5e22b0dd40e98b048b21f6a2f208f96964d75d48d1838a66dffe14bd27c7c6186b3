{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('üîß AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('üîç AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      // Ensure loading screen shows for minimum duration\n      const startTime = Date.now();\n      const minLoadingDuration = 8000; // 8 seconds\n\n      try {\n        setIsLoading(true);\n        console.log('üîç Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('‚úÖ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('‚úÖ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('üì± Mobile environment - no localStorage available');\n          }\n        }\n        console.log('üîç Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('üîë Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('‚úÖ Auto-login successful!');\n            } else {\n              console.log('‚ùå Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (typeof window !== 'undefined' && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('‚ùå Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('üîç No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        // ALWAYS ensure minimum loading duration for better UX\n        const elapsedTime = Date.now() - startTime;\n        const remainingTime = Math.max(0, minLoadingDuration - elapsedTime);\n        console.log(`üïê Auth check completed in ${elapsedTime}ms, ensuring loading shows for ${remainingTime}ms more`);\n        setTimeout(() => {\n          console.log('üèÅ Minimum loading duration complete, setting isLoading to false');\n          setIsLoading(false);\n        }, remainingTime);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('üîç AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"PiwoDeqPRCsfRwdePw8UHQ38Ar0=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":415,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,410,0,"Object"],[21,8,410,0],[21,9,410,0,"defineProperty"],[21,23,410,0],[21,24,410,0,"exports"],[21,31,410,0],[22,4,410,0,"enumerable"],[22,14,410,0],[23,4,410,0,"get"],[23,7,410,0],[23,18,410,0,"get"],[23,19,410,0],[24,6,410,0],[24,13,410,0,"useAuth"],[24,20,410,0],[25,4,410,0],[26,2,410,0],[27,2,416,2],[27,6,416,2,"_expoVirtualEnv"],[27,21,416,2],[27,24,416,2,"require"],[27,31,416,2],[27,32,416,2,"_dependencyMap"],[27,46,416,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,4,0],[31,6,4,0,"_expoConstants"],[31,20,4,0],[31,23,4,0,"require"],[31,30,4,0],[31,31,4,0,"_dependencyMap"],[31,45,4,0],[32,2,4,0],[32,6,4,0,"Constants"],[32,15,4,0],[32,18,4,0,"_interopDefault"],[32,33,4,0],[32,34,4,0,"_expoConstants"],[32,48,4,0],[33,2,4,39],[33,6,4,39,"_reactJsxDevRuntime"],[33,25,4,39],[33,28,4,39,"require"],[33,35,4,39],[33,36,4,39,"_dependencyMap"],[33,50,4,39],[34,2,27,0],[34,8,27,6,"AuthContext"],[34,19,27,17],[34,35,27,20],[34,39,27,20,"createContext"],[34,45,27,33],[34,46,27,33,"createContext"],[34,59,27,33],[34,61,27,63,"undefined"],[34,70,27,72],[34,71,27,73],[36,2,29,0],[37,2,30,0],[37,8,30,6,"getBackendUrl"],[37,21,30,19],[37,24,30,22,"getBackendUrl"],[37,25,30,22],[37,30,30,28],[38,4,31,2],[38,8,31,6],[38,15,31,13,"window"],[38,21,31,19],[38,26,31,24],[38,37,31,35],[38,39,31,37],[39,6,32,4],[39,12,32,10,"currentHost"],[39,23,32,21],[39,26,32,24,"window"],[39,32,32,30],[39,33,32,31,"location"],[39,41,32,39],[39,42,32,40,"hostname"],[39,50,32,48],[40,6,33,4],[40,12,33,10,"currentProtocol"],[40,27,33,25],[40,30,33,28,"window"],[40,36,33,34],[40,37,33,35,"location"],[40,45,33,43],[40,46,33,44,"protocol"],[40,54,33,52],[42,6,35,4],[43,6,36,4],[43,10,36,8,"currentHost"],[43,21,36,19],[43,22,36,20,"includes"],[43,30,36,28],[43,31,36,29],[43,42,36,40],[43,43,36,41],[43,45,36,43],[44,8,37,6],[44,15,37,13],[44,18,37,16,"currentProtocol"],[44,33,37,31],[44,38,37,36,"currentHost"],[44,49,37,47],[44,51,37,49],[45,6,38,4],[46,6,39,4],[47,6,40,4],[47,10,40,8,"currentHost"],[47,21,40,19],[47,22,40,20,"includes"],[47,30,40,28],[47,31,40,29],[47,59,40,57],[47,60,40,58],[47,62,40,60],[48,8,41,6],[48,15,41,13],[48,18,41,16,"currentProtocol"],[48,33,41,31],[48,38,41,36,"currentHost"],[48,49,41,47],[48,51,41,49],[49,6,42,4],[50,4,43,2],[52,4,45,2],[53,4,46,2],[53,11,46,9,"Constants"],[53,20,46,18],[53,21,46,18,"default"],[53,28,46,18],[53,29,46,19,"expoConfig"],[53,39,46,29],[53,41,46,31,"extra"],[53,46,46,36],[53,48,46,38,"backendUrl"],[53,58,46,48],[53,62,46,48,"_expoVirtualEnv"],[53,77,46,48],[53,78,46,48,"env"],[53,81,46,48],[53,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[53,105,46,87],[53,109,46,91],[53,132,46,114],[54,2,47,0],[54,3,47,1],[55,2,49,0],[55,8,49,6,"API_BASE_URL"],[55,20,49,18],[55,23,49,21,"getBackendUrl"],[55,36,49,34],[55,37,49,35],[55,38,49,36],[56,2,51,0,"console"],[56,9,51,7],[56,10,51,8,"log"],[56,13,51,11],[56,14,51,12],[56,59,51,57],[56,60,51,58],[57,2,52,0,"console"],[57,9,52,7],[57,10,52,8,"log"],[57,13,52,11],[57,14,52,12],[57,42,52,40],[57,44,52,42,"API_BASE_URL"],[57,56,52,54],[57,57,52,55],[58,2,53,0],[58,6,53,4],[58,13,53,11,"window"],[58,19,53,17],[58,24,53,22],[58,35,53,33],[58,37,53,35],[59,4,54,2,"console"],[59,11,54,9],[59,12,54,10,"log"],[59,15,54,13],[59,16,54,14],[59,39,54,37],[59,41,54,39,"window"],[59,47,54,45],[59,48,54,46,"location"],[59,56,54,54],[59,57,54,55,"hostname"],[59,65,54,63],[59,66,54,64],[60,4,55,2,"console"],[60,11,55,9],[60,12,55,10,"log"],[60,15,55,13],[60,16,55,14],[60,39,55,37],[60,41,55,39,"window"],[60,47,55,45],[60,48,55,46,"location"],[60,56,55,54],[60,57,55,55,"protocol"],[60,65,55,63],[60,66,55,64],[61,2,56,0],[62,2,58,7],[62,8,58,13,"AuthProvider"],[62,20,58,25],[62,23,58,28,"AuthProvider"],[62,24,58,29],[63,4,58,31,"children"],[64,2,58,65],[64,3,58,66],[64,8,58,71],[65,4,58,71,"_s"],[65,6,58,71],[66,4,59,2],[66,10,59,8],[66,11,59,9,"user"],[66,15,59,13],[66,17,59,15,"setUser"],[66,24,59,22],[66,25,59,23],[66,28,59,26],[66,32,59,26,"useState"],[66,38,59,34],[66,39,59,34,"useState"],[66,47,59,34],[66,49,59,48],[66,53,59,52],[66,54,59,53],[67,4,60,2],[67,10,60,8],[67,11,60,9,"token"],[67,16,60,14],[67,18,60,16,"setToken"],[67,26,60,24],[67,27,60,25],[67,30,60,28],[67,34,60,28,"useState"],[67,40,60,36],[67,41,60,36,"useState"],[67,49,60,36],[67,51,60,52],[67,55,60,56],[67,56,60,57],[68,4,61,2],[68,10,61,8],[68,11,61,9,"isLoading"],[68,20,61,18],[68,22,61,20,"setIsLoading"],[68,34,61,32],[68,35,61,33],[68,38,61,36],[68,42,61,36,"useState"],[68,48,61,44],[68,49,61,44,"useState"],[68,57,61,44],[68,59,61,45],[68,63,61,49],[68,64,61,50],[69,4,63,2],[69,10,63,8,"isAuthenticated"],[69,25,63,23],[69,28,63,26],[69,29,63,27],[69,30,63,28,"user"],[69,34,63,32],[69,38,63,36],[69,39,63,37],[69,40,63,38,"token"],[69,45,63,43],[71,4,65,2],[72,4,66,2],[72,8,66,2,"useEffect"],[72,14,66,11],[72,15,66,11,"useEffect"],[72,24,66,11],[72,26,66,12],[72,32,66,18],[73,6,67,4,"console"],[73,13,67,11],[73,14,67,12,"log"],[73,17,67,15],[73,18,67,16],[73,41,67,39],[73,42,67,40],[74,6,68,4,"console"],[74,13,68,11],[74,14,68,12,"log"],[74,17,68,15],[74,18,68,16],[74,36,68,34],[74,38,68,36],[74,39,68,37],[74,40,68,38,"user"],[74,44,68,42],[74,45,68,43],[75,6,69,4,"console"],[75,13,69,11],[75,14,69,12,"log"],[75,17,69,15],[75,18,69,16],[75,37,69,35],[75,39,69,37],[75,40,69,38],[75,41,69,39,"token"],[75,46,69,44],[75,47,69,45],[76,6,70,4,"console"],[76,13,70,11],[76,14,70,12,"log"],[76,17,70,15],[76,18,70,16],[76,40,70,38],[76,42,70,40,"isAuthenticated"],[76,57,70,55],[76,58,70,56],[77,6,71,4],[77,10,71,8,"user"],[77,14,71,12],[77,16,71,14,"console"],[77,23,71,21],[77,24,71,22,"log"],[77,27,71,25],[77,28,71,26],[77,45,71,43],[77,47,71,45,"user"],[77,51,71,49],[77,52,71,50,"email"],[77,57,71,55],[77,58,71,56],[78,6,72,4],[78,10,72,8,"token"],[78,15,72,13],[78,17,72,15,"console"],[78,24,72,22],[78,25,72,23,"log"],[78,28,72,26],[78,29,72,27],[78,49,72,47],[78,51,72,49,"token"],[78,56,72,54],[78,57,72,55,"substring"],[78,66,72,64],[78,67,72,65],[78,68,72,66],[78,70,72,68],[78,72,72,70],[78,73,72,71],[78,76,72,74],[78,81,72,79],[78,82,72,80],[79,4,73,2],[79,5,73,3],[79,7,73,5],[79,8,73,6,"user"],[79,12,73,10],[79,14,73,12,"token"],[79,19,73,17],[79,21,73,19,"isAuthenticated"],[79,36,73,34],[79,37,73,35],[79,38,73,36],[81,4,75,2],[82,4,76,2],[82,8,76,2,"useEffect"],[82,14,76,11],[82,15,76,11,"useEffect"],[82,24,76,11],[82,26,76,12],[82,32,76,18],[83,6,77,4,"checkExistingSession"],[83,26,77,24],[83,27,77,25],[83,28,77,26],[84,4,78,2],[84,5,78,3],[84,7,78,5],[84,9,78,7],[84,10,78,8],[85,4,80,2],[85,10,80,8,"checkExistingSession"],[85,30,80,28],[85,33,80,31],[85,39,80,31,"checkExistingSession"],[85,40,80,31],[85,45,80,43],[86,6,81,4],[87,6,82,4],[87,12,82,10,"startTime"],[87,21,82,19],[87,24,82,22,"Date"],[87,28,82,26],[87,29,82,27,"now"],[87,32,82,30],[87,33,82,31],[87,34,82,32],[88,6,83,4],[88,12,83,10,"minLoadingDuration"],[88,30,83,28],[88,33,83,31],[88,37,83,35],[88,38,83,36],[88,39,83,37],[90,6,85,4],[90,10,85,8],[91,8,86,6,"setIsLoading"],[91,20,86,18],[91,21,86,19],[91,25,86,23],[91,26,86,24],[92,8,87,6,"console"],[92,15,87,13],[92,16,87,14,"log"],[92,19,87,17],[92,20,87,18],[92,65,87,63],[92,66,87,64],[94,8,89,6],[95,8,90,6],[95,12,90,10,"storedEmail"],[95,23,90,21],[95,26,90,24],[95,30,90,28],[96,8,91,6],[96,12,91,10,"storedPassword"],[96,26,91,24],[96,29,91,27],[96,33,91,31],[97,8,93,6],[97,12,93,10],[98,10,94,8],[99,10,95,8,"storedEmail"],[99,21,95,19],[99,24,95,22],[99,30,95,28,"AsyncStorage"],[99,42,95,40],[99,43,95,40,"default"],[99,50,95,40],[99,51,95,41,"getItem"],[99,58,95,48],[99,59,95,49],[99,72,95,62],[99,73,95,63],[100,10,96,8,"storedPassword"],[100,24,96,22],[100,27,96,25],[100,33,96,31,"AsyncStorage"],[100,45,96,43],[100,46,96,43,"default"],[100,53,96,43],[100,54,96,44,"getItem"],[100,61,96,51],[100,62,96,52],[100,78,96,68],[100,79,96,69],[101,10,97,8,"console"],[101,17,97,15],[101,18,97,16,"log"],[101,21,97,19],[101,22,97,20],[101,55,97,53],[101,56,97,54],[102,8,98,6],[102,9,98,7],[102,10,98,8],[102,17,98,15,"asyncError"],[102,27,98,25],[102,29,98,27],[103,10,99,8,"console"],[103,17,99,15],[103,18,99,16,"log"],[103,21,99,19],[103,22,99,20],[103,44,99,42],[103,46,99,44,"asyncError"],[103,56,99,54],[103,57,99,55],[104,10,100,8],[105,10,101,8],[105,14,101,12],[105,21,101,19,"window"],[105,27,101,25],[105,32,101,30],[105,43,101,41],[105,47,101,45,"window"],[105,53,101,51],[105,54,101,52,"localStorage"],[105,66,101,64],[105,68,101,66],[106,12,102,10],[106,16,102,14],[107,14,103,12,"storedEmail"],[107,25,103,23],[107,28,103,26,"window"],[107,34,103,32],[107,35,103,33,"localStorage"],[107,47,103,45],[107,48,103,46,"getItem"],[107,55,103,53],[107,56,103,54],[107,69,103,67],[107,70,103,68],[108,14,104,12,"storedPassword"],[108,28,104,26],[108,31,104,29,"window"],[108,37,104,35],[108,38,104,36,"localStorage"],[108,50,104,48],[108,51,104,49,"getItem"],[108,58,104,56],[108,59,104,57],[108,75,104,73],[108,76,104,74],[109,14,105,12,"console"],[109,21,105,19],[109,22,105,20,"log"],[109,25,105,23],[109,26,105,24],[109,65,105,63],[109,66,105,64],[110,12,106,10],[110,13,106,11],[110,14,106,12],[110,21,106,19,"localError"],[110,31,106,29],[110,33,106,31],[111,14,107,12,"console"],[111,21,107,19],[111,22,107,20,"error"],[111,27,107,25],[111,28,107,26],[111,55,107,53],[111,57,107,55,"localError"],[111,67,107,65],[111,68,107,66],[112,12,108,10],[113,10,109,8],[113,11,109,9],[113,17,109,15],[114,12,110,10,"console"],[114,19,110,17],[114,20,110,18,"log"],[114,23,110,21],[114,24,110,22],[114,75,110,73],[114,76,110,74],[115,10,111,8],[116,8,112,6],[117,8,114,6,"console"],[117,15,114,13],[117,16,114,14,"log"],[117,19,114,17],[117,20,114,18],[117,50,114,48],[117,51,114,49],[118,8,115,6,"console"],[118,15,115,13],[118,16,115,14,"log"],[118,19,115,17],[118,20,115,18],[118,39,115,37],[118,41,115,39],[118,42,115,40],[118,43,115,41,"storedEmail"],[118,54,115,52],[118,55,115,53],[119,8,116,6,"console"],[119,15,116,13],[119,16,116,14,"log"],[119,19,116,17],[119,20,116,18],[119,42,116,40],[119,44,116,42],[119,45,116,43],[119,46,116,44,"storedPassword"],[119,60,116,58],[119,61,116,59],[120,8,117,6],[120,12,117,10,"storedEmail"],[120,23,117,21],[120,25,117,23,"console"],[120,32,117,30],[120,33,117,31,"log"],[120,36,117,34],[120,37,117,35],[120,49,117,47],[120,51,117,49,"storedEmail"],[120,62,117,60],[120,63,117,61],[121,8,119,6],[121,12,119,10,"storedEmail"],[121,23,119,21],[121,27,119,25,"storedPassword"],[121,41,119,39],[121,43,119,41],[122,10,120,8,"console"],[122,17,120,15],[122,18,120,16,"log"],[122,21,120,19],[122,22,120,20],[122,78,120,76],[122,79,120,77],[123,10,122,8],[123,14,122,12],[124,12,123,10],[125,12,124,10],[125,18,124,16,"timeoutPromise"],[125,32,124,30],[125,35,124,33],[125,39,124,37,"Promise"],[125,46,124,44],[125,47,124,45],[125,48,124,46,"_"],[125,49,124,47],[125,51,124,49,"reject"],[125,57,124,55],[125,62,125,12,"setTimeout"],[125,72,125,22],[125,73,125,23],[125,79,125,29,"reject"],[125,85,125,35],[125,86,125,36],[125,90,125,40,"Error"],[125,95,125,45],[125,96,125,46],[125,116,125,66],[125,117,125,67],[125,118,125,68],[125,120,125,70],[125,125,125,75],[125,126,126,10],[125,127,126,11],[126,12,128,10],[126,18,128,16,"loginPromise"],[126,30,128,28],[126,33,128,31,"login"],[126,38,128,36],[126,39,128,37,"storedEmail"],[126,50,128,48],[126,52,128,50,"storedPassword"],[126,66,128,64],[126,67,128,65],[127,12,129,10],[127,18,129,16,"loginResult"],[127,29,129,27],[127,32,129,30],[127,38,129,36,"Promise"],[127,45,129,43],[127,46,129,44,"race"],[127,50,129,48],[127,51,129,49],[127,52,129,50,"loginPromise"],[127,64,129,62],[127,66,129,64,"timeoutPromise"],[127,80,129,78],[127,81,129,79],[127,82,129,80],[128,12,131,10],[128,16,131,14,"loginResult"],[128,27,131,25],[128,28,131,26,"success"],[128,35,131,33],[128,37,131,35],[129,14,132,12,"console"],[129,21,132,19],[129,22,132,20,"log"],[129,25,132,23],[129,26,132,24],[129,52,132,50],[129,53,132,51],[130,12,133,10],[130,13,133,11],[130,19,133,17],[131,14,134,12,"console"],[131,21,134,19],[131,22,134,20,"log"],[131,25,134,23],[131,26,134,24],[131,48,134,46],[131,50,134,48,"loginResult"],[131,61,134,59],[131,62,134,60,"error"],[131,67,134,65],[131,68,134,66],[132,14,135,12],[133,14,136,12],[133,18,136,16],[134,16,137,14],[134,22,137,20,"AsyncStorage"],[134,34,137,32],[134,35,137,32,"default"],[134,42,137,32],[134,43,137,33,"multiRemove"],[134,54,137,44],[134,55,137,45],[134,56,137,46],[134,69,137,59],[134,71,137,61],[134,87,137,77],[134,88,137,78],[134,89,137,79],[135,14,138,12],[135,15,138,13],[135,16,138,14],[135,23,138,21,"e"],[135,24,138,22],[135,26,138,24],[136,16,139,14],[137,16,140,14],[137,20,140,18],[137,27,140,25,"window"],[137,33,140,31],[137,38,140,36],[137,49,140,47],[137,53,140,51,"window"],[137,59,140,57],[137,60,140,58,"localStorage"],[137,72,140,70],[137,74,140,72],[138,18,141,16,"window"],[138,24,141,22],[138,25,141,23,"localStorage"],[138,37,141,35],[138,38,141,36,"removeItem"],[138,48,141,46],[138,49,141,47],[138,62,141,60],[138,63,141,61],[139,18,142,16,"window"],[139,24,142,22],[139,25,142,23,"localStorage"],[139,37,142,35],[139,38,142,36,"removeItem"],[139,48,142,46],[139,49,142,47],[139,65,142,63],[139,66,142,64],[140,16,143,14],[141,14,144,12],[142,12,145,10],[143,10,146,8],[143,11,146,9],[143,12,146,10],[143,19,146,17,"autoLoginError"],[143,33,146,31],[143,35,146,33],[144,12,147,10,"console"],[144,19,147,17],[144,20,147,18,"log"],[144,23,147,21],[144,24,147,22],[144,59,147,57],[144,61,147,59,"autoLoginError"],[144,75,147,73],[144,76,147,74,"message"],[144,83,147,81],[144,84,147,82],[145,12,148,10],[146,12,149,10],[146,16,149,14],[147,14,150,12],[147,20,150,18,"AsyncStorage"],[147,32,150,30],[147,33,150,30,"default"],[147,40,150,30],[147,41,150,31,"multiRemove"],[147,52,150,42],[147,53,150,43],[147,54,150,44],[147,67,150,57],[147,69,150,59],[147,85,150,75],[147,86,150,76],[147,87,150,77],[148,12,151,10],[148,13,151,11],[148,14,151,12],[148,21,151,19,"e"],[148,22,151,20],[148,24,151,22],[149,14,152,12],[149,18,152,16],[149,25,152,23,"window"],[149,31,152,29],[149,36,152,34],[149,47,152,45],[149,51,152,49,"window"],[149,57,152,55],[149,58,152,56,"localStorage"],[149,70,152,68],[149,72,152,70],[150,16,153,14,"window"],[150,22,153,20],[150,23,153,21,"localStorage"],[150,35,153,33],[150,36,153,34,"removeItem"],[150,46,153,44],[150,47,153,45],[150,60,153,58],[150,61,153,59],[151,16,154,14,"window"],[151,22,154,20],[151,23,154,21,"localStorage"],[151,35,154,33],[151,36,154,34,"removeItem"],[151,46,154,44],[151,47,154,45],[151,63,154,61],[151,64,154,62],[152,14,155,12],[153,12,156,10],[154,10,157,8],[155,8,158,6],[155,9,158,7],[155,15,158,13],[156,10,159,8,"console"],[156,17,159,15],[156,18,159,16,"log"],[156,21,159,19],[156,22,159,20],[156,78,159,76],[156,79,159,77],[157,8,160,6],[158,6,161,4],[158,7,161,5],[158,8,161,6],[158,15,161,13,"error"],[158,20,161,18],[158,22,161,20],[159,8,162,6,"console"],[159,15,162,13],[159,16,162,14,"error"],[159,21,162,19],[159,22,162,20],[159,50,162,48],[159,52,162,50,"error"],[159,57,162,55],[159,58,162,56],[160,6,163,4],[160,7,163,5],[160,16,163,14],[161,8,164,6],[162,8,165,6],[162,14,165,12,"elapsedTime"],[162,25,165,23],[162,28,165,26,"Date"],[162,32,165,30],[162,33,165,31,"now"],[162,36,165,34],[162,37,165,35],[162,38,165,36],[162,41,165,39,"startTime"],[162,50,165,48],[163,8,166,6],[163,14,166,12,"remainingTime"],[163,27,166,25],[163,30,166,28,"Math"],[163,34,166,32],[163,35,166,33,"max"],[163,38,166,36],[163,39,166,37],[163,40,166,38],[163,42,166,40,"minLoadingDuration"],[163,60,166,58],[163,63,166,61,"elapsedTime"],[163,74,166,72],[163,75,166,73],[164,8,168,6,"console"],[164,15,168,13],[164,16,168,14,"log"],[164,19,168,17],[164,20,168,18],[164,50,168,48,"elapsedTime"],[164,61,168,59],[164,95,168,93,"remainingTime"],[164,108,168,106],[164,117,168,115],[164,118,168,116],[165,8,170,6,"setTimeout"],[165,18,170,16],[165,19,170,17],[165,25,170,23],[166,10,171,8,"console"],[166,17,171,15],[166,18,171,16,"log"],[166,21,171,19],[166,22,171,20],[166,88,171,86],[166,89,171,87],[167,10,172,8,"setIsLoading"],[167,22,172,20],[167,23,172,21],[167,28,172,26],[167,29,172,27],[168,8,173,6],[168,9,173,7],[168,11,173,9,"remainingTime"],[168,24,173,22],[168,25,173,23],[169,6,174,4],[170,4,175,2],[170,5,175,3],[171,4,177,2],[171,10,177,8,"checkSession"],[171,22,177,20],[171,25,177,23],[171,31,177,23,"checkSession"],[171,32,177,23],[171,37,177,53],[172,6,178,4],[172,10,178,8],[173,8,179,6],[174,8,180,6],[174,12,180,10],[174,13,180,11,"token"],[174,18,180,16],[174,22,180,20],[174,23,180,21,"user"],[174,27,180,25],[174,29,180,27],[175,10,181,8,"console"],[175,17,181,15],[175,18,181,16,"log"],[175,21,181,19],[175,22,181,20],[175,64,181,62],[175,65,181,63],[176,10,182,8],[176,17,182,15],[176,22,182,20],[177,8,183,6],[178,8,185,6],[178,14,185,12,"response"],[178,22,185,20],[178,25,185,23],[178,31,185,29,"fetch"],[178,36,185,34],[178,37,185,35],[178,40,185,38,"API_BASE_URL"],[178,52,185,50],[178,77,185,75],[178,79,185,77],[179,10,186,8,"method"],[179,16,186,14],[179,18,186,16],[179,23,186,21],[180,10,187,8,"credentials"],[180,21,187,19],[180,23,187,21],[180,32,187,30],[181,10,188,8,"headers"],[181,17,188,15],[181,19,188,17],[182,12,189,10],[182,26,189,24],[182,28,189,26],[182,46,189,44],[183,12,190,10],[183,27,190,25],[183,29,190,27],[183,39,190,37,"token"],[183,44,190,42],[184,10,191,8],[185,8,192,6],[185,9,192,7],[185,10,192,8],[186,8,194,6],[186,12,194,10],[186,13,194,11,"response"],[186,21,194,19],[186,22,194,20,"ok"],[186,24,194,22],[186,26,194,24],[187,10,195,8,"console"],[187,17,195,15],[187,18,195,16,"log"],[187,21,195,19],[187,22,195,20],[187,45,195,43],[187,47,195,45,"response"],[187,55,195,53],[187,56,195,54,"status"],[187,62,195,60],[187,63,195,61],[188,10,196,8],[188,17,196,15],[188,22,196,20],[189,8,197,6],[190,8,199,6],[190,14,199,12,"data"],[190,18,199,16],[190,21,199,19],[190,27,199,25,"response"],[190,35,199,33],[190,36,199,34,"json"],[190,40,199,38],[190,41,199,39],[190,42,199,40],[191,8,200,6],[191,14,200,12,"isValid"],[191,21,200,19],[191,24,200,22,"data"],[191,28,200,26],[191,29,200,27,"authenticated"],[191,42,200,40],[191,47,200,45],[191,51,200,49],[192,8,202,6],[192,12,202,10,"isValid"],[192,19,202,17],[192,23,202,21,"data"],[192,27,202,25],[192,28,202,26,"user"],[192,32,202,30],[192,34,202,32],[193,10,203,8],[194,10,204,8,"setUser"],[194,17,204,15],[194,18,204,16,"data"],[194,22,204,20],[194,23,204,21,"user"],[194,27,204,25],[194,28,204,26],[195,10,205,8,"console"],[195,17,205,15],[195,18,205,16,"log"],[195,21,205,19],[195,22,205,20],[195,66,205,64],[195,68,205,66,"data"],[195,72,205,70],[195,73,205,71,"user"],[195,77,205,75],[195,78,205,76,"email"],[195,83,205,81],[195,84,205,82],[196,8,206,6],[196,9,206,7],[196,15,206,13],[197,10,207,8,"console"],[197,17,207,15],[197,18,207,16,"log"],[197,21,207,19],[197,22,207,20],[197,57,207,55],[197,59,207,57,"data"],[197,63,207,61],[197,64,207,62],[198,8,208,6],[199,8,210,6],[199,15,210,13,"isValid"],[199,22,210,20],[200,6,211,4],[200,7,211,5],[200,8,211,6],[200,15,211,13,"error"],[200,20,211,18],[200,22,211,20],[201,8,212,6,"console"],[201,15,212,13],[201,16,212,14,"error"],[201,21,212,19],[201,22,212,20],[201,78,212,76],[201,80,212,78,"error"],[201,85,212,83],[201,86,212,84],[202,8,213,6],[203,8,214,6],[204,8,215,6],[204,15,215,13],[204,19,215,17],[204,20,215,18],[204,21,215,19],[205,6,216,4],[206,4,217,2],[206,5,217,3],[207,4,219,2],[207,10,219,8,"login"],[207,15,219,13],[207,18,219,16],[207,24,219,16,"login"],[207,25,219,23,"email"],[207,30,219,36],[207,32,219,38,"password"],[207,40,219,54],[207,45,219,106],[208,6,220,4],[208,10,220,8],[209,8,221,6,"setIsLoading"],[209,20,221,18],[209,21,221,19],[209,25,221,23],[209,26,221,24],[210,8,223,6],[210,14,223,12,"formData"],[210,22,223,20],[210,25,223,23],[210,29,223,27,"URLSearchParams"],[210,44,223,42],[210,45,223,43],[210,46,223,44],[211,8,224,6,"formData"],[211,16,224,14],[211,17,224,15,"append"],[211,23,224,21],[211,24,224,22],[211,34,224,32],[211,36,224,34,"email"],[211,41,224,39],[211,42,224,40],[211,43,224,41],[211,44,224,42],[212,8,225,6,"formData"],[212,16,225,14],[212,17,225,15,"append"],[212,23,225,21],[212,24,225,22],[212,34,225,32],[212,36,225,34,"password"],[212,44,225,42],[212,45,225,43],[213,8,227,6],[213,14,227,12,"response"],[213,22,227,20],[213,25,227,23],[213,31,227,29,"fetch"],[213,36,227,34],[213,37,227,35],[213,40,227,38,"API_BASE_URL"],[213,52,227,50],[213,69,227,67],[213,71,227,69],[214,10,228,8,"method"],[214,16,228,14],[214,18,228,16],[214,24,228,22],[215,10,229,8,"credentials"],[215,21,229,19],[215,23,229,21],[215,32,229,30],[216,10,230,8,"headers"],[216,17,230,15],[216,19,230,17],[217,12,231,10],[217,26,231,24],[217,28,231,26],[218,10,232,8],[218,11,232,9],[219,10,233,8,"body"],[219,14,233,12],[219,16,233,14,"formData"],[219,24,233,22],[219,25,233,23,"toString"],[219,33,233,31],[219,34,233,32],[220,8,234,6],[220,9,234,7],[220,10,234,8],[221,8,236,6],[221,14,236,12,"data"],[221,18,236,16],[221,21,236,19],[221,27,236,25,"response"],[221,35,236,33],[221,36,236,34,"json"],[221,40,236,38],[221,41,236,39],[221,42,236,40],[222,8,238,6],[222,12,238,10],[222,13,238,11,"response"],[222,21,238,19],[222,22,238,20,"ok"],[222,24,238,22],[222,26,238,24],[223,10,239,8],[223,17,239,15],[224,12,239,17,"success"],[224,19,239,24],[224,21,239,26],[224,26,239,31],[225,12,239,33,"error"],[225,17,239,38],[225,19,239,40,"data"],[225,23,239,44],[225,24,239,45,"detail"],[225,30,239,51],[225,34,239,55],[226,10,239,70],[226,11,239,71],[227,8,240,6],[229,8,242,2],[230,8,243,6],[230,14,243,12,"AsyncStorage"],[230,26,243,24],[230,27,243,24,"default"],[230,34,243,24],[230,35,243,25,"setItem"],[230,42,243,32],[230,43,243,33],[230,55,243,45],[230,57,243,47,"data"],[230,61,243,51],[230,62,243,52,"access_token"],[230,74,243,64],[230,75,243,65],[230,76,243,66,"catch"],[230,81,243,71],[230,82,243,72],[230,88,243,79,"asyncError"],[230,98,243,89],[230,102,243,94],[231,10,244,8,"console"],[231,17,244,15],[231,18,244,16,"error"],[231,23,244,21],[231,24,244,22],[231,75,244,73],[231,77,244,75,"asyncError"],[231,87,244,85],[231,88,244,86],[232,10,245,8],[233,10,246,8],[233,14,246,12],[233,21,246,19,"window"],[233,27,246,25],[233,32,246,30],[233,43,246,41],[233,47,246,45,"window"],[233,53,246,51],[233,54,246,52,"localStorage"],[233,66,246,64],[233,68,246,66],[234,12,247,10,"window"],[234,18,247,16],[234,19,247,17,"localStorage"],[234,31,247,29],[234,32,247,30,"setItem"],[234,39,247,37],[234,40,247,38],[234,52,247,50],[234,54,247,52,"data"],[234,58,247,56],[234,59,247,57,"access_token"],[234,71,247,69],[234,72,247,70],[235,12,248,10,"window"],[235,18,248,16],[235,19,248,17,"localStorage"],[235,31,248,29],[235,32,248,30,"setItem"],[235,39,248,37],[235,40,248,38],[235,51,248,49],[235,53,248,51,"JSON"],[235,57,248,55],[235,58,248,56,"stringify"],[235,67,248,65],[235,68,248,66,"data"],[235,72,248,70],[235,73,248,71,"user"],[235,77,248,75],[235,78,248,76],[235,79,248,77],[236,12,249,10,"window"],[236,18,249,16],[236,19,249,17,"localStorage"],[236,31,249,29],[236,32,249,30,"setItem"],[236,39,249,37],[236,40,249,38],[236,53,249,51],[236,55,249,53,"email"],[236,60,249,58],[236,61,249,59],[237,12,250,10,"window"],[237,18,250,16],[237,19,250,17,"localStorage"],[237,31,250,29],[237,32,250,30,"setItem"],[237,39,250,37],[237,40,250,38],[237,56,250,54],[237,58,250,56,"password"],[237,66,250,64],[237,67,250,65],[238,10,251,8],[239,8,252,6],[239,9,252,7],[239,10,252,8],[240,8,254,6],[240,14,254,12,"AsyncStorage"],[240,26,254,24],[240,27,254,24,"default"],[240,34,254,24],[240,35,254,25,"setItem"],[240,42,254,32],[240,43,254,33],[240,54,254,44],[240,56,254,46,"JSON"],[240,60,254,50],[240,61,254,51,"stringify"],[240,70,254,60],[240,71,254,61,"data"],[240,75,254,65],[240,76,254,66,"user"],[240,80,254,70],[240,81,254,71],[240,82,254,72],[240,83,254,73,"catch"],[240,88,254,78],[240,89,254,80,"error"],[240,94,254,85],[240,98,254,90],[241,10,255,8,"console"],[241,17,255,15],[241,18,255,16,"error"],[241,23,255,21],[241,24,255,22],[241,59,255,57],[241,61,255,59,"error"],[241,66,255,64],[241,67,255,65],[242,8,256,6],[242,9,256,7],[242,10,256,8],[244,8,258,6],[245,8,259,6],[245,14,259,12,"AsyncStorage"],[245,26,259,24],[245,27,259,24,"default"],[245,34,259,24],[245,35,259,25,"setItem"],[245,42,259,32],[245,43,259,33],[245,56,259,46],[245,58,259,48,"email"],[245,63,259,53],[245,64,259,54],[245,65,259,55,"catch"],[245,70,259,60],[245,71,259,61],[245,77,259,67],[245,78,259,68],[245,79,259,69],[245,80,259,70],[246,8,260,6],[246,14,260,12,"AsyncStorage"],[246,26,260,24],[246,27,260,24,"default"],[246,34,260,24],[246,35,260,25,"setItem"],[246,42,260,32],[246,43,260,33],[246,59,260,49],[246,61,260,51,"password"],[246,69,260,59],[246,70,260,60],[246,71,260,61,"catch"],[246,76,260,66],[246,77,260,67],[246,83,260,73],[246,84,260,74],[246,85,260,75],[246,86,260,76],[247,8,262,6,"setToken"],[247,16,262,14],[247,17,262,15,"data"],[247,21,262,19],[247,22,262,20,"access_token"],[247,34,262,32],[247,35,262,33],[248,8,263,6,"setUser"],[248,15,263,13],[248,16,263,14,"data"],[248,20,263,18],[248,21,263,19,"user"],[248,25,263,23],[248,26,263,24],[249,8,265,6,"console"],[249,15,265,13],[249,16,265,14,"log"],[249,19,265,17],[249,20,265,18],[249,62,265,60],[249,63,265,61],[250,8,266,6,"console"],[250,15,266,13],[250,16,266,14,"log"],[250,19,266,17],[250,20,266,18],[250,34,266,32],[250,36,266,34,"data"],[250,40,266,38],[250,41,266,39,"user"],[250,45,266,43],[250,46,266,44,"id"],[250,48,266,46],[250,49,266,47],[251,8,267,6,"console"],[251,15,267,13],[251,16,267,14,"log"],[251,19,267,17],[251,20,267,18],[251,37,267,35],[251,39,267,37,"data"],[251,43,267,41],[251,44,267,42,"user"],[251,48,267,46],[251,49,267,47,"email"],[251,54,267,52],[251,55,267,53],[252,8,268,6,"console"],[252,15,268,13],[252,16,268,14,"log"],[252,19,268,17],[252,20,268,18],[252,36,268,34],[252,38,268,36],[252,39,268,37],[252,40,268,38,"data"],[252,44,268,42],[252,45,268,43,"access_token"],[252,57,268,55],[252,58,268,56],[253,8,269,6,"console"],[253,15,269,13],[253,16,269,14,"log"],[253,19,269,17],[253,20,269,18],[253,40,269,38],[253,42,269,40,"data"],[253,46,269,44],[253,47,269,45,"access_token"],[253,59,269,57],[253,60,269,58,"substring"],[253,69,269,67],[253,70,269,68],[253,71,269,69],[253,73,269,71],[253,75,269,73],[253,76,269,74],[253,79,269,77],[253,84,269,82],[253,85,269,83],[255,8,271,6],[256,8,272,6,"setTimeout"],[256,18,272,16],[256,19,272,17],[256,25,272,23],[257,10,273,8,"console"],[257,17,273,15],[257,18,273,16,"log"],[257,21,273,19],[257,22,273,20],[257,68,273,66],[257,69,273,67],[258,10,274,8,"console"],[258,17,274,15],[258,18,274,16,"log"],[258,21,274,19],[258,22,274,20],[258,39,274,37],[258,41,274,39],[258,42,274,40],[258,43,274,41,"user"],[258,47,274,45],[258,48,274,46],[259,10,275,8,"console"],[259,17,275,15],[259,18,275,16,"log"],[259,21,275,19],[259,22,275,20],[259,40,275,38],[259,42,275,40],[259,43,275,41],[259,44,275,42,"token"],[259,49,275,47],[259,50,275,48],[260,10,276,8,"console"],[260,17,276,15],[260,18,276,16,"log"],[260,21,276,19],[260,22,276,20],[260,55,276,53],[260,57,276,55],[260,58,276,56],[260,60,276,58,"user"],[260,64,276,62],[260,68,276,66,"token"],[260,73,276,71],[260,74,276,72],[260,75,276,73],[261,8,277,6],[261,9,277,7],[261,11,277,9],[261,15,277,13],[261,16,277,14],[262,8,279,6,"console"],[262,15,279,13],[262,16,279,14,"log"],[262,19,279,17],[262,20,279,18],[262,51,279,49],[262,53,279,51,"data"],[262,57,279,55],[262,58,279,56,"user"],[262,62,279,60],[262,63,279,61,"id"],[262,65,279,63],[262,67,279,65],[262,102,279,100],[262,103,279,101],[263,8,281,6],[263,15,281,13],[264,10,281,15,"success"],[264,17,281,22],[264,19,281,24],[265,8,281,29],[265,9,281,30],[266,6,282,4],[266,7,282,5],[266,8,282,6],[266,15,282,13,"error"],[266,20,282,18],[266,22,282,20],[267,8,283,6,"console"],[267,15,283,13],[267,16,283,14,"error"],[267,21,283,19],[267,22,283,20],[267,36,283,34],[267,38,283,36,"error"],[267,43,283,41],[267,44,283,42],[268,8,284,6],[268,15,284,13],[269,10,284,15,"success"],[269,17,284,22],[269,19,284,24],[269,24,284,29],[270,10,284,31,"error"],[270,15,284,36],[270,17,284,38],[271,8,284,63],[271,9,284,64],[272,6,285,4],[272,7,285,5],[272,16,285,14],[273,8,286,6,"setIsLoading"],[273,20,286,18],[273,21,286,19],[273,26,286,24],[273,27,286,25],[274,6,287,4],[275,4,288,2],[275,5,288,3],[276,4,290,2],[276,10,290,8,"register"],[276,18,290,16],[276,21,290,19],[276,27,290,19,"register"],[276,28,290,26,"email"],[276,33,290,39],[276,35,290,41,"password"],[276,43,290,57],[276,45,290,59,"name"],[276,49,290,71],[276,54,290,123],[277,6,291,4],[277,10,291,8],[278,8,292,6,"setIsLoading"],[278,20,292,18],[278,21,292,19],[278,25,292,23],[278,26,292,24],[279,8,294,6],[279,14,294,12,"response"],[279,22,294,20],[279,25,294,23],[279,31,294,29,"fetch"],[279,36,294,34],[279,37,294,35],[279,40,294,38,"API_BASE_URL"],[279,52,294,50],[279,72,294,70],[279,74,294,72],[280,10,295,8,"method"],[280,16,295,14],[280,18,295,16],[280,24,295,22],[281,10,296,8,"credentials"],[281,21,296,19],[281,23,296,21],[281,32,296,30],[282,10,297,8,"headers"],[282,17,297,15],[282,19,297,17],[283,12,298,10],[283,26,298,24],[283,28,298,26],[284,10,299,8],[284,11,299,9],[285,10,300,8,"body"],[285,14,300,12],[285,16,300,14,"JSON"],[285,20,300,18],[285,21,300,19,"stringify"],[285,30,300,28],[285,31,300,29],[286,12,301,10,"email"],[286,17,301,15],[287,12,302,10,"password"],[287,20,302,18],[288,12,303,10,"name"],[289,10,304,8],[289,11,304,9],[290,8,305,6],[290,9,305,7],[290,10,305,8],[291,8,307,6],[291,14,307,12,"data"],[291,18,307,16],[291,21,307,19],[291,27,307,25,"response"],[291,35,307,33],[291,36,307,34,"json"],[291,40,307,38],[291,41,307,39],[291,42,307,40],[292,8,309,6],[292,12,309,10],[292,13,309,11,"response"],[292,21,309,19],[292,22,309,20,"ok"],[292,24,309,22],[292,26,309,24],[293,10,310,8],[293,17,310,15],[294,12,310,17,"success"],[294,19,310,24],[294,21,310,26],[294,26,310,31],[295,12,310,33,"error"],[295,17,310,38],[295,19,310,40,"data"],[295,23,310,44],[295,24,310,45,"detail"],[295,30,310,51],[295,34,310,55],[296,10,310,77],[296,11,310,78],[297,8,311,6],[299,8,313,6],[300,8,314,6],[300,14,314,12,"AsyncStorage"],[300,26,314,24],[300,27,314,24,"default"],[300,34,314,24],[300,35,314,25,"setItem"],[300,42,314,32],[300,43,314,33],[300,55,314,45],[300,57,314,47,"data"],[300,61,314,51],[300,62,314,52,"access_token"],[300,74,314,64],[300,75,314,65],[301,8,315,6],[301,14,315,12,"AsyncStorage"],[301,26,315,24],[301,27,315,24,"default"],[301,34,315,24],[301,35,315,25,"setItem"],[301,42,315,32],[301,43,315,33],[301,54,315,44],[301,56,315,46,"JSON"],[301,60,315,50],[301,61,315,51,"stringify"],[301,70,315,60],[301,71,315,61,"data"],[301,75,315,65],[301,76,315,66,"user"],[301,80,315,70],[301,81,315,71],[301,82,315,72],[303,8,317,6],[304,8,318,6],[304,12,318,10],[305,10,319,8],[305,16,319,14,"AsyncStorage"],[305,28,319,26],[305,29,319,26,"default"],[305,36,319,26],[305,37,319,27,"setItem"],[305,44,319,34],[305,45,319,35],[305,58,319,48],[305,60,319,50,"email"],[305,65,319,55],[305,66,319,56],[306,10,320,8],[306,16,320,14,"AsyncStorage"],[306,28,320,26],[306,29,320,26,"default"],[306,36,320,26],[306,37,320,27,"setItem"],[306,44,320,34],[306,45,320,35],[306,61,320,51],[306,63,320,53,"password"],[306,71,320,61],[306,72,320,62],[307,8,321,6],[307,9,321,7],[307,10,321,8],[307,17,321,15,"asyncError"],[307,27,321,25],[307,29,321,27],[308,10,322,8],[308,14,322,12],[308,21,322,19,"window"],[308,27,322,25],[308,32,322,30],[308,43,322,41],[308,47,322,45,"window"],[308,53,322,51],[308,54,322,52,"localStorage"],[308,66,322,64],[308,68,322,66],[309,12,323,10,"window"],[309,18,323,16],[309,19,323,17,"localStorage"],[309,31,323,29],[309,32,323,30,"setItem"],[309,39,323,37],[309,40,323,38],[309,52,323,50],[309,54,323,52,"data"],[309,58,323,56],[309,59,323,57,"access_token"],[309,71,323,69],[309,72,323,70],[310,12,324,10,"window"],[310,18,324,16],[310,19,324,17,"localStorage"],[310,31,324,29],[310,32,324,30,"setItem"],[310,39,324,37],[310,40,324,38],[310,51,324,49],[310,53,324,51,"JSON"],[310,57,324,55],[310,58,324,56,"stringify"],[310,67,324,65],[310,68,324,66,"data"],[310,72,324,70],[310,73,324,71,"user"],[310,77,324,75],[310,78,324,76],[310,79,324,77],[311,12,325,10,"window"],[311,18,325,16],[311,19,325,17,"localStorage"],[311,31,325,29],[311,32,325,30,"setItem"],[311,39,325,37],[311,40,325,38],[311,53,325,51],[311,55,325,53,"email"],[311,60,325,58],[311,61,325,59],[312,12,326,10,"window"],[312,18,326,16],[312,19,326,17,"localStorage"],[312,31,326,29],[312,32,326,30,"setItem"],[312,39,326,37],[312,40,326,38],[312,56,326,54],[312,58,326,56,"password"],[312,66,326,64],[312,67,326,65],[313,12,327,10,"console"],[313,19,327,17],[313,20,327,18,"log"],[313,23,327,21],[313,24,327,22],[313,82,327,80],[313,83,327,81],[314,10,328,8],[315,8,329,6],[316,8,331,6,"setToken"],[316,16,331,14],[316,17,331,15,"data"],[316,21,331,19],[316,22,331,20,"access_token"],[316,34,331,32],[316,35,331,33],[317,8,332,6,"setUser"],[317,15,332,13],[317,16,332,14,"data"],[317,20,332,18],[317,21,332,19,"user"],[317,25,332,23],[317,26,332,24],[318,8,334,6,"console"],[318,15,334,13],[318,16,334,14,"log"],[318,19,334,17],[318,20,334,18],[318,58,334,56],[318,60,334,58,"data"],[318,64,334,62],[318,65,334,63,"user"],[318,69,334,67],[318,70,334,68,"id"],[318,72,334,70],[318,74,334,72],[318,109,334,107],[318,110,334,108],[319,8,336,6],[319,15,336,13],[320,10,336,15,"success"],[320,17,336,22],[320,19,336,24],[321,8,336,29],[321,9,336,30],[322,6,337,4],[322,7,337,5],[322,8,337,6],[322,15,337,13,"error"],[322,20,337,18],[322,22,337,20],[323,8,338,6,"console"],[323,15,338,13],[323,16,338,14,"error"],[323,21,338,19],[323,22,338,20],[323,43,338,41],[323,45,338,43,"error"],[323,50,338,48],[323,51,338,49],[324,8,339,6],[324,15,339,13],[325,10,339,15,"success"],[325,17,339,22],[325,19,339,24],[325,24,339,29],[326,10,339,31,"error"],[326,15,339,36],[326,17,339,38],[327,8,339,63],[327,9,339,64],[328,6,340,4],[328,7,340,5],[328,16,340,14],[329,8,341,6,"setIsLoading"],[329,20,341,18],[329,21,341,19],[329,26,341,24],[329,27,341,25],[330,6,342,4],[331,4,343,2],[331,5,343,3],[332,4,345,2],[332,10,345,8,"loginWithGoogle"],[332,25,345,23],[332,28,345,26],[332,34,345,26,"loginWithGoogle"],[332,35,345,26],[332,40,345,85],[333,6,346,4],[333,10,346,8],[334,8,347,6],[335,8,348,6],[335,12,348,10],[335,19,348,17,"window"],[335,25,348,23],[335,30,348,28],[335,41,348,39],[335,45,348,43,"window"],[335,51,348,49],[335,52,348,50,"location"],[335,60,348,58],[335,62,348,60],[336,10,349,8],[337,10,350,8],[337,16,350,14,"redirectUrl"],[337,27,350,25],[337,30,350,28,"encodeURIComponent"],[337,48,350,46],[337,49,350,47,"window"],[337,55,350,53],[337,56,350,54,"location"],[337,64,350,62],[337,65,350,63,"href"],[337,69,350,67],[337,70,350,68],[338,10,351,8],[338,16,351,14,"googleAuthUrl"],[338,29,351,27],[338,32,351,30],[338,76,351,74,"redirectUrl"],[338,87,351,85],[338,89,351,87],[340,10,353,8],[341,10,354,8,"window"],[341,16,354,14],[341,17,354,15,"open"],[341,21,354,19],[341,22,354,20,"googleAuthUrl"],[341,35,354,33],[341,37,354,35],[341,44,354,42],[341,45,354,43],[342,10,356,8],[342,17,356,15],[343,12,356,17,"success"],[343,19,356,24],[343,21,356,26],[344,10,356,31],[344,11,356,32],[345,8,357,6],[345,9,357,7],[345,15,357,13],[346,10,358,8],[347,10,359,8,"console"],[347,17,359,15],[347,18,359,16,"log"],[347,21,359,19],[347,22,359,20],[347,72,359,70],[347,73,359,71],[348,10,360,8],[348,17,360,15],[349,12,360,17,"success"],[349,19,360,24],[349,21,360,26],[349,26,360,31],[350,12,360,33,"error"],[350,17,360,38],[350,19,360,40],[351,10,360,83],[351,11,360,84],[352,8,361,6],[353,6,362,4],[353,7,362,5],[353,8,362,6],[353,15,362,13,"error"],[353,20,362,18],[353,22,362,20],[354,8,363,6,"console"],[354,15,363,13],[354,16,363,14,"error"],[354,21,363,19],[354,22,363,20],[354,43,363,41],[354,45,363,43,"error"],[354,50,363,48],[354,51,363,49],[355,8,364,6],[355,15,364,13],[356,10,364,15,"success"],[356,17,364,22],[356,19,364,24],[356,24,364,29],[357,10,364,31,"error"],[357,15,364,36],[357,17,364,38],[358,8,364,60],[358,9,364,61],[359,6,365,4],[360,4,366,2],[360,5,366,3],[361,4,368,2],[361,10,368,8,"logout"],[361,16,368,14],[361,19,368,17],[361,25,368,17,"logout"],[361,26,368,17],[361,31,368,44],[362,6,369,4],[362,10,369,8],[363,8,370,6],[364,8,371,6],[364,12,371,10,"token"],[364,17,371,15],[364,19,371,17],[365,10,372,8],[365,16,372,14,"fetch"],[365,21,372,19],[365,22,372,20],[365,25,372,23,"API_BASE_URL"],[365,37,372,35],[365,55,372,53],[365,57,372,55],[366,12,373,10,"method"],[366,18,373,16],[366,20,373,18],[366,26,373,24],[367,12,374,10,"credentials"],[367,23,374,21],[367,25,374,23],[367,34,374,32],[368,12,375,10,"headers"],[368,19,375,17],[368,21,375,19],[369,14,376,12],[369,29,376,27],[369,31,376,29],[369,41,376,39,"token"],[369,46,376,44],[369,48,376,46],[370,14,377,12],[370,28,377,26],[370,30,377,28],[371,12,378,10],[372,10,379,8],[372,11,379,9],[372,12,379,10],[373,8,380,6],[374,6,381,4],[374,7,381,5],[374,8,381,6],[374,15,381,13,"error"],[374,20,381,18],[374,22,381,20],[375,8,382,6,"console"],[375,15,382,13],[375,16,382,14,"error"],[375,21,382,19],[375,22,382,20],[375,37,382,35],[375,39,382,37,"error"],[375,44,382,42],[375,45,382,43],[376,6,383,4],[376,7,383,5],[376,16,383,14],[377,8,384,6],[378,8,385,6],[378,14,385,12,"AsyncStorage"],[378,26,385,24],[378,27,385,24,"default"],[378,34,385,24],[378,35,385,25,"multiRemove"],[378,46,385,36],[378,47,385,37],[378,48,385,38],[378,60,385,50],[378,62,385,52],[378,73,385,63],[378,74,385,64],[378,75,385,65],[379,8,386,6,"setToken"],[379,16,386,14],[379,17,386,15],[379,21,386,19],[379,22,386,20],[380,8,387,6,"setUser"],[380,15,387,13],[380,16,387,14],[380,20,387,18],[380,21,387,19],[381,6,388,4],[382,4,389,2],[382,5,389,3],[383,4,391,2],[383,24,392,4],[383,28,392,4,"_reactJsxDevRuntime"],[383,47,392,4],[383,48,392,4,"jsxDEV"],[383,54,392,4],[383,56,392,5,"AuthContext"],[383,67,392,16],[383,68,392,17,"Provider"],[383,76,392,25],[384,6,393,6,"value"],[384,11,393,11],[384,13,393,13],[385,8,394,8,"user"],[385,12,394,12],[386,8,395,8,"token"],[386,13,395,13],[387,8,396,8,"isLoading"],[387,17,396,17],[388,8,397,8,"isAuthenticated"],[388,23,397,23],[389,8,398,8,"login"],[389,13,398,13],[390,8,399,8,"register"],[390,16,399,16],[391,8,400,8,"loginWithGoogle"],[391,23,400,23],[392,8,401,8,"logout"],[392,14,401,14],[393,8,402,8,"checkSession"],[394,6,403,6],[394,7,403,8],[395,6,403,8,"children"],[395,14,403,8],[395,16,405,7,"children"],[396,4,405,15],[397,6,405,15,"fileName"],[397,14,405,15],[397,16,405,15,"_jsxFileName"],[397,28,405,15],[398,6,405,15,"lineNumber"],[398,16,405,15],[399,6,405,15,"columnNumber"],[399,18,405,15],[400,4,405,15],[400,11,406,26],[400,12,406,27],[401,2,408,0],[401,3,408,1],[402,2,408,2,"_s"],[402,4,408,2],[402,5,58,13,"AuthProvider"],[402,17,58,25],[403,2,58,25,"_c"],[403,4,58,25],[403,7,58,13,"AuthProvider"],[403,19,58,25],[404,2,410,7],[404,8,410,13,"useAuth"],[404,15,410,20],[404,18,410,23,"useAuth"],[404,19,410,23],[404,24,410,46],[405,4,410,46,"_s2"],[405,7,410,46],[406,4,411,2],[406,10,411,8,"context"],[406,17,411,15],[406,20,411,18],[406,24,411,18,"useContext"],[406,30,411,28],[406,31,411,28,"useContext"],[406,41,411,28],[406,43,411,29,"AuthContext"],[406,54,411,40],[406,55,411,41],[407,4,412,2],[407,8,412,6,"context"],[407,15,412,13],[407,20,412,18,"undefined"],[407,29,412,27],[407,31,412,29],[408,6,413,4],[408,12,413,10],[408,16,413,14,"Error"],[408,21,413,19],[408,22,413,20],[408,67,413,65],[408,68,413,66],[409,4,414,2],[410,4,415,2],[410,11,415,9,"context"],[410,18,415,16],[411,2,416,0],[411,3,416,1],[412,2,416,2,"_s2"],[412,5,416,2],[412,6,410,13,"useAuth"],[412,13,410,20],[413,2,410,20],[413,6,410,20,"_c"],[413,8,410,20],[414,2,410,20,"$RefreshReg$"],[414,14,410,20],[414,15,410,20,"_c"],[414,17,410,20],[415,0,410,20],[415,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","setTimeout$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCQ;GDO;YCG;GDE;+BEE;6CC4C;uBCC,6CD,QD;iBE6C;OFG;GFE;uBKE;GLwC;gBME;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBFY;OEK;GNW;mBQE;GRqD;0BSE;GTqB;iBUE;GVqB;CFmB;uBaE;CbM"},"hasCjsExports":false},"type":"js/module"}]}