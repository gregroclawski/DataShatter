{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('üîß AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('üîç AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('üïê Starting 8-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('‚è∞ 8-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 8000);\n\n      // Start authentication check\n      checkExistingSession();\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Only allow loading to finish when both auth check is done AND minimum time has passed\n    const actualIsLoading = isLoading || !minLoadingComplete;\n    const checkExistingSession = async () => {\n      try {\n        console.log('üîç Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('‚úÖ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('‚úÖ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('üì± Mobile environment - no localStorage available');\n          }\n        }\n        console.log('üîç Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('üîë Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('‚úÖ Auto-login successful!');\n            } else {\n              console.log('‚ùå Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (typeof window !== 'undefined' && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('‚ùå Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('üîç No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('üèÅ Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('üîç AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading: actualIsLoading,\n        // Use combined loading state\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"ZLtXTf6n0pVi30ZLfsdLQ/sf6Xw=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":417,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,410,0,"Object"],[21,8,410,0],[21,9,410,0,"defineProperty"],[21,23,410,0],[21,24,410,0,"exports"],[21,31,410,0],[22,4,410,0,"enumerable"],[22,14,410,0],[23,4,410,0,"get"],[23,7,410,0],[23,18,410,0,"get"],[23,19,410,0],[24,6,410,0],[24,13,410,0,"useAuth"],[24,20,410,0],[25,4,410,0],[26,2,410,0],[27,2,416,2],[27,6,416,2,"_expoVirtualEnv"],[27,21,416,2],[27,24,416,2,"require"],[27,31,416,2],[27,32,416,2,"_dependencyMap"],[27,46,416,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,2,0],[29,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[29,42,2,0],[29,45,2,0,"require"],[29,52,2,0],[29,53,2,0,"_dependencyMap"],[29,67,2,0],[30,2,2,0],[30,6,2,0,"AsyncStorage"],[30,18,2,0],[30,21,2,0,"_interopDefault"],[30,36,2,0],[30,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,73,2,0],[31,2,4,0],[31,6,4,0,"_expoConstants"],[31,20,4,0],[31,23,4,0,"require"],[31,30,4,0],[31,31,4,0,"_dependencyMap"],[31,45,4,0],[32,2,4,0],[32,6,4,0,"Constants"],[32,15,4,0],[32,18,4,0,"_interopDefault"],[32,33,4,0],[32,34,4,0,"_expoConstants"],[32,48,4,0],[33,2,4,39],[33,6,4,39,"_reactJsxDevRuntime"],[33,25,4,39],[33,28,4,39,"require"],[33,35,4,39],[33,36,4,39,"_dependencyMap"],[33,50,4,39],[34,2,27,0],[34,8,27,6,"AuthContext"],[34,19,27,17],[34,35,27,20],[34,39,27,20,"createContext"],[34,45,27,33],[34,46,27,33,"createContext"],[34,59,27,33],[34,61,27,63,"undefined"],[34,70,27,72],[34,71,27,73],[36,2,29,0],[37,2,30,0],[37,8,30,6,"getBackendUrl"],[37,21,30,19],[37,24,30,22,"getBackendUrl"],[37,25,30,22],[37,30,30,28],[38,4,31,2],[38,8,31,6],[38,15,31,13,"window"],[38,21,31,19],[38,26,31,24],[38,37,31,35],[38,39,31,37],[39,6,32,4],[39,12,32,10,"currentHost"],[39,23,32,21],[39,26,32,24,"window"],[39,32,32,30],[39,33,32,31,"location"],[39,41,32,39],[39,42,32,40,"hostname"],[39,50,32,48],[40,6,33,4],[40,12,33,10,"currentProtocol"],[40,27,33,25],[40,30,33,28,"window"],[40,36,33,34],[40,37,33,35,"location"],[40,45,33,43],[40,46,33,44,"protocol"],[40,54,33,52],[42,6,35,4],[43,6,36,4],[43,10,36,8,"currentHost"],[43,21,36,19],[43,22,36,20,"includes"],[43,30,36,28],[43,31,36,29],[43,42,36,40],[43,43,36,41],[43,45,36,43],[44,8,37,6],[44,15,37,13],[44,18,37,16,"currentProtocol"],[44,33,37,31],[44,38,37,36,"currentHost"],[44,49,37,47],[44,51,37,49],[45,6,38,4],[46,6,39,4],[47,6,40,4],[47,10,40,8,"currentHost"],[47,21,40,19],[47,22,40,20,"includes"],[47,30,40,28],[47,31,40,29],[47,59,40,57],[47,60,40,58],[47,62,40,60],[48,8,41,6],[48,15,41,13],[48,18,41,16,"currentProtocol"],[48,33,41,31],[48,38,41,36,"currentHost"],[48,49,41,47],[48,51,41,49],[49,6,42,4],[50,4,43,2],[52,4,45,2],[53,4,46,2],[53,11,46,9,"Constants"],[53,20,46,18],[53,21,46,18,"default"],[53,28,46,18],[53,29,46,19,"expoConfig"],[53,39,46,29],[53,41,46,31,"extra"],[53,46,46,36],[53,48,46,38,"backendUrl"],[53,58,46,48],[53,62,46,48,"_expoVirtualEnv"],[53,77,46,48],[53,78,46,48,"env"],[53,81,46,48],[53,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[53,105,46,87],[53,109,46,91],[53,132,46,114],[54,2,47,0],[54,3,47,1],[55,2,49,0],[55,8,49,6,"API_BASE_URL"],[55,20,49,18],[55,23,49,21,"getBackendUrl"],[55,36,49,34],[55,37,49,35],[55,38,49,36],[56,2,51,0,"console"],[56,9,51,7],[56,10,51,8,"log"],[56,13,51,11],[56,14,51,12],[56,59,51,57],[56,60,51,58],[57,2,52,0,"console"],[57,9,52,7],[57,10,52,8,"log"],[57,13,52,11],[57,14,52,12],[57,42,52,40],[57,44,52,42,"API_BASE_URL"],[57,56,52,54],[57,57,52,55],[58,2,53,0],[58,6,53,4],[58,13,53,11,"window"],[58,19,53,17],[58,24,53,22],[58,35,53,33],[58,37,53,35],[59,4,54,2,"console"],[59,11,54,9],[59,12,54,10,"log"],[59,15,54,13],[59,16,54,14],[59,39,54,37],[59,41,54,39,"window"],[59,47,54,45],[59,48,54,46,"location"],[59,56,54,54],[59,57,54,55,"hostname"],[59,65,54,63],[59,66,54,64],[60,4,55,2,"console"],[60,11,55,9],[60,12,55,10,"log"],[60,15,55,13],[60,16,55,14],[60,39,55,37],[60,41,55,39,"window"],[60,47,55,45],[60,48,55,46,"location"],[60,56,55,54],[60,57,55,55,"protocol"],[60,65,55,63],[60,66,55,64],[61,2,56,0],[62,2,58,7],[62,8,58,13,"AuthProvider"],[62,20,58,25],[62,23,58,28,"AuthProvider"],[62,24,58,29],[63,4,58,31,"children"],[64,2,58,65],[64,3,58,66],[64,8,58,71],[65,4,58,71,"_s"],[65,6,58,71],[66,4,59,2],[66,10,59,8],[66,11,59,9,"user"],[66,15,59,13],[66,17,59,15,"setUser"],[66,24,59,22],[66,25,59,23],[66,28,59,26],[66,32,59,26,"useState"],[66,38,59,34],[66,39,59,34,"useState"],[66,47,59,34],[66,49,59,48],[66,53,59,52],[66,54,59,53],[67,4,60,2],[67,10,60,8],[67,11,60,9,"token"],[67,16,60,14],[67,18,60,16,"setToken"],[67,26,60,24],[67,27,60,25],[67,30,60,28],[67,34,60,28,"useState"],[67,40,60,36],[67,41,60,36,"useState"],[67,49,60,36],[67,51,60,52],[67,55,60,56],[67,56,60,57],[68,4,61,2],[68,10,61,8],[68,11,61,9,"isLoading"],[68,20,61,18],[68,22,61,20,"setIsLoading"],[68,34,61,32],[68,35,61,33],[68,38,61,36],[68,42,61,36,"useState"],[68,48,61,44],[68,49,61,44,"useState"],[68,57,61,44],[68,59,61,45],[68,63,61,49],[68,64,61,50],[69,4,62,2],[69,10,62,8],[69,11,62,9,"minLoadingComplete"],[69,29,62,27],[69,31,62,29,"setMinLoadingComplete"],[69,52,62,50],[69,53,62,51],[69,56,62,54],[69,60,62,54,"useState"],[69,66,62,62],[69,67,62,62,"useState"],[69,75,62,62],[69,77,62,63],[69,82,62,68],[69,83,62,69],[70,4,64,2],[70,10,64,8,"isAuthenticated"],[70,25,64,23],[70,28,64,26],[70,29,64,27],[70,30,64,28,"user"],[70,34,64,32],[70,38,64,36],[70,39,64,37],[70,40,64,38,"token"],[70,45,64,43],[72,4,66,2],[73,4,67,2],[73,8,67,2,"useEffect"],[73,14,67,11],[73,15,67,11,"useEffect"],[73,24,67,11],[73,26,67,12],[73,32,67,18],[74,6,68,4,"console"],[74,13,68,11],[74,14,68,12,"log"],[74,17,68,15],[74,18,68,16],[74,41,68,39],[74,42,68,40],[75,6,69,4,"console"],[75,13,69,11],[75,14,69,12,"log"],[75,17,69,15],[75,18,69,16],[75,36,69,34],[75,38,69,36],[75,39,69,37],[75,40,69,38,"user"],[75,44,69,42],[75,45,69,43],[76,6,70,4,"console"],[76,13,70,11],[76,14,70,12,"log"],[76,17,70,15],[76,18,70,16],[76,37,70,35],[76,39,70,37],[76,40,70,38],[76,41,70,39,"token"],[76,46,70,44],[76,47,70,45],[77,6,71,4,"console"],[77,13,71,11],[77,14,71,12,"log"],[77,17,71,15],[77,18,71,16],[77,40,71,38],[77,42,71,40,"isAuthenticated"],[77,57,71,55],[77,58,71,56],[78,6,72,4],[78,10,72,8,"user"],[78,14,72,12],[78,16,72,14,"console"],[78,23,72,21],[78,24,72,22,"log"],[78,27,72,25],[78,28,72,26],[78,45,72,43],[78,47,72,45,"user"],[78,51,72,49],[78,52,72,50,"email"],[78,57,72,55],[78,58,72,56],[79,6,73,4],[79,10,73,8,"token"],[79,15,73,13],[79,17,73,15,"console"],[79,24,73,22],[79,25,73,23,"log"],[79,28,73,26],[79,29,73,27],[79,49,73,47],[79,51,73,49,"token"],[79,56,73,54],[79,57,73,55,"substring"],[79,66,73,64],[79,67,73,65],[79,68,73,66],[79,70,73,68],[79,72,73,70],[79,73,73,71],[79,76,73,74],[79,81,73,79],[79,82,73,80],[80,4,74,2],[80,5,74,3],[80,7,74,5],[80,8,74,6,"user"],[80,12,74,10],[80,14,74,12,"token"],[80,19,74,17],[80,21,74,19,"isAuthenticated"],[80,36,74,34],[80,37,74,35],[80,38,74,36],[82,4,76,2],[83,4,77,2],[83,8,77,2,"useEffect"],[83,14,77,11],[83,15,77,11,"useEffect"],[83,24,77,11],[83,26,77,12],[83,32,77,18],[84,6,78,4,"console"],[84,13,78,11],[84,14,78,12,"log"],[84,17,78,15],[84,18,78,16],[84,57,78,55],[84,58,78,56],[85,6,79,4],[85,12,79,10,"minLoadingTimer"],[85,27,79,25],[85,30,79,28,"setTimeout"],[85,40,79,38],[85,41,79,39],[85,47,79,45],[86,8,80,6,"console"],[86,15,80,13],[86,16,80,14,"log"],[86,19,80,17],[86,20,80,18],[86,55,80,53],[86,56,80,54],[87,8,81,6,"setMinLoadingComplete"],[87,29,81,27],[87,30,81,28],[87,34,81,32],[87,35,81,33],[88,6,82,4],[88,7,82,5],[88,9,82,7],[88,13,82,11],[88,14,82,12],[90,6,84,4],[91,6,85,4,"checkExistingSession"],[91,26,85,24],[91,27,85,25],[91,28,85,26],[92,6,87,4],[92,13,87,11],[92,19,87,17,"clearTimeout"],[92,31,87,29],[92,32,87,30,"minLoadingTimer"],[92,47,87,45],[92,48,87,46],[93,4,88,2],[93,5,88,3],[93,7,88,5],[93,9,88,7],[93,10,88,8],[95,4,90,2],[96,4,91,2],[96,10,91,8,"actualIsLoading"],[96,25,91,23],[96,28,91,26,"isLoading"],[96,37,91,35],[96,41,91,39],[96,42,91,40,"minLoadingComplete"],[96,60,91,58],[97,4,93,2],[97,10,93,8,"checkExistingSession"],[97,30,93,28],[97,33,93,31],[97,39,93,31,"checkExistingSession"],[97,40,93,31],[97,45,93,43],[98,6,94,4],[98,10,94,8],[99,8,95,6,"console"],[99,15,95,13],[99,16,95,14,"log"],[99,19,95,17],[99,20,95,18],[99,65,95,63],[99,66,95,64],[101,8,97,6],[102,8,98,6],[102,12,98,10,"storedEmail"],[102,23,98,21],[102,26,98,24],[102,30,98,28],[103,8,99,6],[103,12,99,10,"storedPassword"],[103,26,99,24],[103,29,99,27],[103,33,99,31],[104,8,101,6],[104,12,101,10],[105,10,102,8],[106,10,103,8,"storedEmail"],[106,21,103,19],[106,24,103,22],[106,30,103,28,"AsyncStorage"],[106,42,103,40],[106,43,103,40,"default"],[106,50,103,40],[106,51,103,41,"getItem"],[106,58,103,48],[106,59,103,49],[106,72,103,62],[106,73,103,63],[107,10,104,8,"storedPassword"],[107,24,104,22],[107,27,104,25],[107,33,104,31,"AsyncStorage"],[107,45,104,43],[107,46,104,43,"default"],[107,53,104,43],[107,54,104,44,"getItem"],[107,61,104,51],[107,62,104,52],[107,78,104,68],[107,79,104,69],[108,10,105,8,"console"],[108,17,105,15],[108,18,105,16,"log"],[108,21,105,19],[108,22,105,20],[108,55,105,53],[108,56,105,54],[109,8,106,6],[109,9,106,7],[109,10,106,8],[109,17,106,15,"asyncError"],[109,27,106,25],[109,29,106,27],[110,10,107,8,"console"],[110,17,107,15],[110,18,107,16,"log"],[110,21,107,19],[110,22,107,20],[110,44,107,42],[110,46,107,44,"asyncError"],[110,56,107,54],[110,57,107,55],[111,10,108,8],[112,10,109,8],[112,14,109,12],[112,21,109,19,"window"],[112,27,109,25],[112,32,109,30],[112,43,109,41],[112,47,109,45,"window"],[112,53,109,51],[112,54,109,52,"localStorage"],[112,66,109,64],[112,68,109,66],[113,12,110,10],[113,16,110,14],[114,14,111,12,"storedEmail"],[114,25,111,23],[114,28,111,26,"window"],[114,34,111,32],[114,35,111,33,"localStorage"],[114,47,111,45],[114,48,111,46,"getItem"],[114,55,111,53],[114,56,111,54],[114,69,111,67],[114,70,111,68],[115,14,112,12,"storedPassword"],[115,28,112,26],[115,31,112,29,"window"],[115,37,112,35],[115,38,112,36,"localStorage"],[115,50,112,48],[115,51,112,49,"getItem"],[115,58,112,56],[115,59,112,57],[115,75,112,73],[115,76,112,74],[116,14,113,12,"console"],[116,21,113,19],[116,22,113,20,"log"],[116,25,113,23],[116,26,113,24],[116,65,113,63],[116,66,113,64],[117,12,114,10],[117,13,114,11],[117,14,114,12],[117,21,114,19,"localError"],[117,31,114,29],[117,33,114,31],[118,14,115,12,"console"],[118,21,115,19],[118,22,115,20,"error"],[118,27,115,25],[118,28,115,26],[118,55,115,53],[118,57,115,55,"localError"],[118,67,115,65],[118,68,115,66],[119,12,116,10],[120,10,117,8],[120,11,117,9],[120,17,117,15],[121,12,118,10,"console"],[121,19,118,17],[121,20,118,18,"log"],[121,23,118,21],[121,24,118,22],[121,75,118,73],[121,76,118,74],[122,10,119,8],[123,8,120,6],[124,8,122,6,"console"],[124,15,122,13],[124,16,122,14,"log"],[124,19,122,17],[124,20,122,18],[124,50,122,48],[124,51,122,49],[125,8,123,6,"console"],[125,15,123,13],[125,16,123,14,"log"],[125,19,123,17],[125,20,123,18],[125,39,123,37],[125,41,123,39],[125,42,123,40],[125,43,123,41,"storedEmail"],[125,54,123,52],[125,55,123,53],[126,8,124,6,"console"],[126,15,124,13],[126,16,124,14,"log"],[126,19,124,17],[126,20,124,18],[126,42,124,40],[126,44,124,42],[126,45,124,43],[126,46,124,44,"storedPassword"],[126,60,124,58],[126,61,124,59],[127,8,125,6],[127,12,125,10,"storedEmail"],[127,23,125,21],[127,25,125,23,"console"],[127,32,125,30],[127,33,125,31,"log"],[127,36,125,34],[127,37,125,35],[127,49,125,47],[127,51,125,49,"storedEmail"],[127,62,125,60],[127,63,125,61],[128,8,127,6],[128,12,127,10,"storedEmail"],[128,23,127,21],[128,27,127,25,"storedPassword"],[128,41,127,39],[128,43,127,41],[129,10,128,8,"console"],[129,17,128,15],[129,18,128,16,"log"],[129,21,128,19],[129,22,128,20],[129,78,128,76],[129,79,128,77],[130,10,130,8],[130,14,130,12],[131,12,131,10],[132,12,132,10],[132,18,132,16,"timeoutPromise"],[132,32,132,30],[132,35,132,33],[132,39,132,37,"Promise"],[132,46,132,44],[132,47,132,45],[132,48,132,46,"_"],[132,49,132,47],[132,51,132,49,"reject"],[132,57,132,55],[132,62,133,12,"setTimeout"],[132,72,133,22],[132,73,133,23],[132,79,133,29,"reject"],[132,85,133,35],[132,86,133,36],[132,90,133,40,"Error"],[132,95,133,45],[132,96,133,46],[132,116,133,66],[132,117,133,67],[132,118,133,68],[132,120,133,70],[132,125,133,75],[132,126,134,10],[132,127,134,11],[133,12,136,10],[133,18,136,16,"loginPromise"],[133,30,136,28],[133,33,136,31,"login"],[133,38,136,36],[133,39,136,37,"storedEmail"],[133,50,136,48],[133,52,136,50,"storedPassword"],[133,66,136,64],[133,67,136,65],[134,12,137,10],[134,18,137,16,"loginResult"],[134,29,137,27],[134,32,137,30],[134,38,137,36,"Promise"],[134,45,137,43],[134,46,137,44,"race"],[134,50,137,48],[134,51,137,49],[134,52,137,50,"loginPromise"],[134,64,137,62],[134,66,137,64,"timeoutPromise"],[134,80,137,78],[134,81,137,79],[134,82,137,80],[135,12,139,10],[135,16,139,14,"loginResult"],[135,27,139,25],[135,28,139,26,"success"],[135,35,139,33],[135,37,139,35],[136,14,140,12,"console"],[136,21,140,19],[136,22,140,20,"log"],[136,25,140,23],[136,26,140,24],[136,52,140,50],[136,53,140,51],[137,12,141,10],[137,13,141,11],[137,19,141,17],[138,14,142,12,"console"],[138,21,142,19],[138,22,142,20,"log"],[138,25,142,23],[138,26,142,24],[138,48,142,46],[138,50,142,48,"loginResult"],[138,61,142,59],[138,62,142,60,"error"],[138,67,142,65],[138,68,142,66],[139,14,143,12],[140,14,144,12],[140,18,144,16],[141,16,145,14],[141,22,145,20,"AsyncStorage"],[141,34,145,32],[141,35,145,32,"default"],[141,42,145,32],[141,43,145,33,"multiRemove"],[141,54,145,44],[141,55,145,45],[141,56,145,46],[141,69,145,59],[141,71,145,61],[141,87,145,77],[141,88,145,78],[141,89,145,79],[142,14,146,12],[142,15,146,13],[142,16,146,14],[142,23,146,21,"e"],[142,24,146,22],[142,26,146,24],[143,16,147,14],[144,16,148,14],[144,20,148,18],[144,27,148,25,"window"],[144,33,148,31],[144,38,148,36],[144,49,148,47],[144,53,148,51,"window"],[144,59,148,57],[144,60,148,58,"localStorage"],[144,72,148,70],[144,74,148,72],[145,18,149,16,"window"],[145,24,149,22],[145,25,149,23,"localStorage"],[145,37,149,35],[145,38,149,36,"removeItem"],[145,48,149,46],[145,49,149,47],[145,62,149,60],[145,63,149,61],[146,18,150,16,"window"],[146,24,150,22],[146,25,150,23,"localStorage"],[146,37,150,35],[146,38,150,36,"removeItem"],[146,48,150,46],[146,49,150,47],[146,65,150,63],[146,66,150,64],[147,16,151,14],[148,14,152,12],[149,12,153,10],[150,10,154,8],[150,11,154,9],[150,12,154,10],[150,19,154,17,"autoLoginError"],[150,33,154,31],[150,35,154,33],[151,12,155,10,"console"],[151,19,155,17],[151,20,155,18,"log"],[151,23,155,21],[151,24,155,22],[151,59,155,57],[151,61,155,59,"autoLoginError"],[151,75,155,73],[151,76,155,74,"message"],[151,83,155,81],[151,84,155,82],[152,12,156,10],[153,12,157,10],[153,16,157,14],[154,14,158,12],[154,20,158,18,"AsyncStorage"],[154,32,158,30],[154,33,158,30,"default"],[154,40,158,30],[154,41,158,31,"multiRemove"],[154,52,158,42],[154,53,158,43],[154,54,158,44],[154,67,158,57],[154,69,158,59],[154,85,158,75],[154,86,158,76],[154,87,158,77],[155,12,159,10],[155,13,159,11],[155,14,159,12],[155,21,159,19,"e"],[155,22,159,20],[155,24,159,22],[156,14,160,12],[156,18,160,16],[156,25,160,23,"window"],[156,31,160,29],[156,36,160,34],[156,47,160,45],[156,51,160,49,"window"],[156,57,160,55],[156,58,160,56,"localStorage"],[156,70,160,68],[156,72,160,70],[157,16,161,14,"window"],[157,22,161,20],[157,23,161,21,"localStorage"],[157,35,161,33],[157,36,161,34,"removeItem"],[157,46,161,44],[157,47,161,45],[157,60,161,58],[157,61,161,59],[158,16,162,14,"window"],[158,22,162,20],[158,23,162,21,"localStorage"],[158,35,162,33],[158,36,162,34,"removeItem"],[158,46,162,44],[158,47,162,45],[158,63,162,61],[158,64,162,62],[159,14,163,12],[160,12,164,10],[161,10,165,8],[162,8,166,6],[162,9,166,7],[162,15,166,13],[163,10,167,8,"console"],[163,17,167,15],[163,18,167,16,"log"],[163,21,167,19],[163,22,167,20],[163,78,167,76],[163,79,167,77],[164,8,168,6],[165,6,169,4],[165,7,169,5],[165,8,169,6],[165,15,169,13,"error"],[165,20,169,18],[165,22,169,20],[166,8,170,6,"console"],[166,15,170,13],[166,16,170,14,"error"],[166,21,170,19],[166,22,170,20],[166,50,170,48],[166,52,170,50,"error"],[166,57,170,55],[166,58,170,56],[167,6,171,4],[167,7,171,5],[167,16,171,14],[168,8,172,6,"console"],[168,15,172,13],[168,16,172,14,"log"],[168,19,172,17],[168,20,172,18],[168,73,172,71],[168,74,172,72],[169,8,173,6,"setIsLoading"],[169,20,173,18],[169,21,173,19],[169,26,173,24],[169,27,173,25],[170,6,174,4],[171,4,175,2],[171,5,175,3],[172,4,177,2],[172,10,177,8,"checkSession"],[172,22,177,20],[172,25,177,23],[172,31,177,23,"checkSession"],[172,32,177,23],[172,37,177,53],[173,6,178,4],[173,10,178,8],[174,8,179,6],[175,8,180,6],[175,12,180,10],[175,13,180,11,"token"],[175,18,180,16],[175,22,180,20],[175,23,180,21,"user"],[175,27,180,25],[175,29,180,27],[176,10,181,8,"console"],[176,17,181,15],[176,18,181,16,"log"],[176,21,181,19],[176,22,181,20],[176,64,181,62],[176,65,181,63],[177,10,182,8],[177,17,182,15],[177,22,182,20],[178,8,183,6],[179,8,185,6],[179,14,185,12,"response"],[179,22,185,20],[179,25,185,23],[179,31,185,29,"fetch"],[179,36,185,34],[179,37,185,35],[179,40,185,38,"API_BASE_URL"],[179,52,185,50],[179,77,185,75],[179,79,185,77],[180,10,186,8,"method"],[180,16,186,14],[180,18,186,16],[180,23,186,21],[181,10,187,8,"credentials"],[181,21,187,19],[181,23,187,21],[181,32,187,30],[182,10,188,8,"headers"],[182,17,188,15],[182,19,188,17],[183,12,189,10],[183,26,189,24],[183,28,189,26],[183,46,189,44],[184,12,190,10],[184,27,190,25],[184,29,190,27],[184,39,190,37,"token"],[184,44,190,42],[185,10,191,8],[186,8,192,6],[186,9,192,7],[186,10,192,8],[187,8,194,6],[187,12,194,10],[187,13,194,11,"response"],[187,21,194,19],[187,22,194,20,"ok"],[187,24,194,22],[187,26,194,24],[188,10,195,8,"console"],[188,17,195,15],[188,18,195,16,"log"],[188,21,195,19],[188,22,195,20],[188,45,195,43],[188,47,195,45,"response"],[188,55,195,53],[188,56,195,54,"status"],[188,62,195,60],[188,63,195,61],[189,10,196,8],[189,17,196,15],[189,22,196,20],[190,8,197,6],[191,8,199,6],[191,14,199,12,"data"],[191,18,199,16],[191,21,199,19],[191,27,199,25,"response"],[191,35,199,33],[191,36,199,34,"json"],[191,40,199,38],[191,41,199,39],[191,42,199,40],[192,8,200,6],[192,14,200,12,"isValid"],[192,21,200,19],[192,24,200,22,"data"],[192,28,200,26],[192,29,200,27,"authenticated"],[192,42,200,40],[192,47,200,45],[192,51,200,49],[193,8,202,6],[193,12,202,10,"isValid"],[193,19,202,17],[193,23,202,21,"data"],[193,27,202,25],[193,28,202,26,"user"],[193,32,202,30],[193,34,202,32],[194,10,203,8],[195,10,204,8,"setUser"],[195,17,204,15],[195,18,204,16,"data"],[195,22,204,20],[195,23,204,21,"user"],[195,27,204,25],[195,28,204,26],[196,10,205,8,"console"],[196,17,205,15],[196,18,205,16,"log"],[196,21,205,19],[196,22,205,20],[196,66,205,64],[196,68,205,66,"data"],[196,72,205,70],[196,73,205,71,"user"],[196,77,205,75],[196,78,205,76,"email"],[196,83,205,81],[196,84,205,82],[197,8,206,6],[197,9,206,7],[197,15,206,13],[198,10,207,8,"console"],[198,17,207,15],[198,18,207,16,"log"],[198,21,207,19],[198,22,207,20],[198,57,207,55],[198,59,207,57,"data"],[198,63,207,61],[198,64,207,62],[199,8,208,6],[200,8,210,6],[200,15,210,13,"isValid"],[200,22,210,20],[201,6,211,4],[201,7,211,5],[201,8,211,6],[201,15,211,13,"error"],[201,20,211,18],[201,22,211,20],[202,8,212,6,"console"],[202,15,212,13],[202,16,212,14,"error"],[202,21,212,19],[202,22,212,20],[202,78,212,76],[202,80,212,78,"error"],[202,85,212,83],[202,86,212,84],[203,8,213,6],[204,8,214,6],[205,8,215,6],[205,15,215,13],[205,19,215,17],[205,20,215,18],[205,21,215,19],[206,6,216,4],[207,4,217,2],[207,5,217,3],[208,4,219,2],[208,10,219,8,"login"],[208,15,219,13],[208,18,219,16],[208,24,219,16,"login"],[208,25,219,23,"email"],[208,30,219,36],[208,32,219,38,"password"],[208,40,219,54],[208,45,219,106],[209,6,220,4],[209,10,220,8],[210,8,221,6,"setIsLoading"],[210,20,221,18],[210,21,221,19],[210,25,221,23],[210,26,221,24],[211,8,223,6],[211,14,223,12,"formData"],[211,22,223,20],[211,25,223,23],[211,29,223,27,"URLSearchParams"],[211,44,223,42],[211,45,223,43],[211,46,223,44],[212,8,224,6,"formData"],[212,16,224,14],[212,17,224,15,"append"],[212,23,224,21],[212,24,224,22],[212,34,224,32],[212,36,224,34,"email"],[212,41,224,39],[212,42,224,40],[212,43,224,41],[212,44,224,42],[213,8,225,6,"formData"],[213,16,225,14],[213,17,225,15,"append"],[213,23,225,21],[213,24,225,22],[213,34,225,32],[213,36,225,34,"password"],[213,44,225,42],[213,45,225,43],[214,8,227,6],[214,14,227,12,"response"],[214,22,227,20],[214,25,227,23],[214,31,227,29,"fetch"],[214,36,227,34],[214,37,227,35],[214,40,227,38,"API_BASE_URL"],[214,52,227,50],[214,69,227,67],[214,71,227,69],[215,10,228,8,"method"],[215,16,228,14],[215,18,228,16],[215,24,228,22],[216,10,229,8,"credentials"],[216,21,229,19],[216,23,229,21],[216,32,229,30],[217,10,230,8,"headers"],[217,17,230,15],[217,19,230,17],[218,12,231,10],[218,26,231,24],[218,28,231,26],[219,10,232,8],[219,11,232,9],[220,10,233,8,"body"],[220,14,233,12],[220,16,233,14,"formData"],[220,24,233,22],[220,25,233,23,"toString"],[220,33,233,31],[220,34,233,32],[221,8,234,6],[221,9,234,7],[221,10,234,8],[222,8,236,6],[222,14,236,12,"data"],[222,18,236,16],[222,21,236,19],[222,27,236,25,"response"],[222,35,236,33],[222,36,236,34,"json"],[222,40,236,38],[222,41,236,39],[222,42,236,40],[223,8,238,6],[223,12,238,10],[223,13,238,11,"response"],[223,21,238,19],[223,22,238,20,"ok"],[223,24,238,22],[223,26,238,24],[224,10,239,8],[224,17,239,15],[225,12,239,17,"success"],[225,19,239,24],[225,21,239,26],[225,26,239,31],[226,12,239,33,"error"],[226,17,239,38],[226,19,239,40,"data"],[226,23,239,44],[226,24,239,45,"detail"],[226,30,239,51],[226,34,239,55],[227,10,239,70],[227,11,239,71],[228,8,240,6],[230,8,242,2],[231,8,243,6],[231,14,243,12,"AsyncStorage"],[231,26,243,24],[231,27,243,24,"default"],[231,34,243,24],[231,35,243,25,"setItem"],[231,42,243,32],[231,43,243,33],[231,55,243,45],[231,57,243,47,"data"],[231,61,243,51],[231,62,243,52,"access_token"],[231,74,243,64],[231,75,243,65],[231,76,243,66,"catch"],[231,81,243,71],[231,82,243,72],[231,88,243,79,"asyncError"],[231,98,243,89],[231,102,243,94],[232,10,244,8,"console"],[232,17,244,15],[232,18,244,16,"error"],[232,23,244,21],[232,24,244,22],[232,75,244,73],[232,77,244,75,"asyncError"],[232,87,244,85],[232,88,244,86],[233,10,245,8],[234,10,246,8],[234,14,246,12],[234,21,246,19,"window"],[234,27,246,25],[234,32,246,30],[234,43,246,41],[234,47,246,45,"window"],[234,53,246,51],[234,54,246,52,"localStorage"],[234,66,246,64],[234,68,246,66],[235,12,247,10,"window"],[235,18,247,16],[235,19,247,17,"localStorage"],[235,31,247,29],[235,32,247,30,"setItem"],[235,39,247,37],[235,40,247,38],[235,52,247,50],[235,54,247,52,"data"],[235,58,247,56],[235,59,247,57,"access_token"],[235,71,247,69],[235,72,247,70],[236,12,248,10,"window"],[236,18,248,16],[236,19,248,17,"localStorage"],[236,31,248,29],[236,32,248,30,"setItem"],[236,39,248,37],[236,40,248,38],[236,51,248,49],[236,53,248,51,"JSON"],[236,57,248,55],[236,58,248,56,"stringify"],[236,67,248,65],[236,68,248,66,"data"],[236,72,248,70],[236,73,248,71,"user"],[236,77,248,75],[236,78,248,76],[236,79,248,77],[237,12,249,10,"window"],[237,18,249,16],[237,19,249,17,"localStorage"],[237,31,249,29],[237,32,249,30,"setItem"],[237,39,249,37],[237,40,249,38],[237,53,249,51],[237,55,249,53,"email"],[237,60,249,58],[237,61,249,59],[238,12,250,10,"window"],[238,18,250,16],[238,19,250,17,"localStorage"],[238,31,250,29],[238,32,250,30,"setItem"],[238,39,250,37],[238,40,250,38],[238,56,250,54],[238,58,250,56,"password"],[238,66,250,64],[238,67,250,65],[239,10,251,8],[240,8,252,6],[240,9,252,7],[240,10,252,8],[241,8,254,6],[241,14,254,12,"AsyncStorage"],[241,26,254,24],[241,27,254,24,"default"],[241,34,254,24],[241,35,254,25,"setItem"],[241,42,254,32],[241,43,254,33],[241,54,254,44],[241,56,254,46,"JSON"],[241,60,254,50],[241,61,254,51,"stringify"],[241,70,254,60],[241,71,254,61,"data"],[241,75,254,65],[241,76,254,66,"user"],[241,80,254,70],[241,81,254,71],[241,82,254,72],[241,83,254,73,"catch"],[241,88,254,78],[241,89,254,80,"error"],[241,94,254,85],[241,98,254,90],[242,10,255,8,"console"],[242,17,255,15],[242,18,255,16,"error"],[242,23,255,21],[242,24,255,22],[242,59,255,57],[242,61,255,59,"error"],[242,66,255,64],[242,67,255,65],[243,8,256,6],[243,9,256,7],[243,10,256,8],[245,8,258,6],[246,8,259,6],[246,14,259,12,"AsyncStorage"],[246,26,259,24],[246,27,259,24,"default"],[246,34,259,24],[246,35,259,25,"setItem"],[246,42,259,32],[246,43,259,33],[246,56,259,46],[246,58,259,48,"email"],[246,63,259,53],[246,64,259,54],[246,65,259,55,"catch"],[246,70,259,60],[246,71,259,61],[246,77,259,67],[246,78,259,68],[246,79,259,69],[246,80,259,70],[247,8,260,6],[247,14,260,12,"AsyncStorage"],[247,26,260,24],[247,27,260,24,"default"],[247,34,260,24],[247,35,260,25,"setItem"],[247,42,260,32],[247,43,260,33],[247,59,260,49],[247,61,260,51,"password"],[247,69,260,59],[247,70,260,60],[247,71,260,61,"catch"],[247,76,260,66],[247,77,260,67],[247,83,260,73],[247,84,260,74],[247,85,260,75],[247,86,260,76],[248,8,262,6,"setToken"],[248,16,262,14],[248,17,262,15,"data"],[248,21,262,19],[248,22,262,20,"access_token"],[248,34,262,32],[248,35,262,33],[249,8,263,6,"setUser"],[249,15,263,13],[249,16,263,14,"data"],[249,20,263,18],[249,21,263,19,"user"],[249,25,263,23],[249,26,263,24],[250,8,265,6,"console"],[250,15,265,13],[250,16,265,14,"log"],[250,19,265,17],[250,20,265,18],[250,62,265,60],[250,63,265,61],[251,8,266,6,"console"],[251,15,266,13],[251,16,266,14,"log"],[251,19,266,17],[251,20,266,18],[251,34,266,32],[251,36,266,34,"data"],[251,40,266,38],[251,41,266,39,"user"],[251,45,266,43],[251,46,266,44,"id"],[251,48,266,46],[251,49,266,47],[252,8,267,6,"console"],[252,15,267,13],[252,16,267,14,"log"],[252,19,267,17],[252,20,267,18],[252,37,267,35],[252,39,267,37,"data"],[252,43,267,41],[252,44,267,42,"user"],[252,48,267,46],[252,49,267,47,"email"],[252,54,267,52],[252,55,267,53],[253,8,268,6,"console"],[253,15,268,13],[253,16,268,14,"log"],[253,19,268,17],[253,20,268,18],[253,36,268,34],[253,38,268,36],[253,39,268,37],[253,40,268,38,"data"],[253,44,268,42],[253,45,268,43,"access_token"],[253,57,268,55],[253,58,268,56],[254,8,269,6,"console"],[254,15,269,13],[254,16,269,14,"log"],[254,19,269,17],[254,20,269,18],[254,40,269,38],[254,42,269,40,"data"],[254,46,269,44],[254,47,269,45,"access_token"],[254,59,269,57],[254,60,269,58,"substring"],[254,69,269,67],[254,70,269,68],[254,71,269,69],[254,73,269,71],[254,75,269,73],[254,76,269,74],[254,79,269,77],[254,84,269,82],[254,85,269,83],[256,8,271,6],[257,8,272,6,"setTimeout"],[257,18,272,16],[257,19,272,17],[257,25,272,23],[258,10,273,8,"console"],[258,17,273,15],[258,18,273,16,"log"],[258,21,273,19],[258,22,273,20],[258,68,273,66],[258,69,273,67],[259,10,274,8,"console"],[259,17,274,15],[259,18,274,16,"log"],[259,21,274,19],[259,22,274,20],[259,39,274,37],[259,41,274,39],[259,42,274,40],[259,43,274,41,"user"],[259,47,274,45],[259,48,274,46],[260,10,275,8,"console"],[260,17,275,15],[260,18,275,16,"log"],[260,21,275,19],[260,22,275,20],[260,40,275,38],[260,42,275,40],[260,43,275,41],[260,44,275,42,"token"],[260,49,275,47],[260,50,275,48],[261,10,276,8,"console"],[261,17,276,15],[261,18,276,16,"log"],[261,21,276,19],[261,22,276,20],[261,55,276,53],[261,57,276,55],[261,58,276,56],[261,60,276,58,"user"],[261,64,276,62],[261,68,276,66,"token"],[261,73,276,71],[261,74,276,72],[261,75,276,73],[262,8,277,6],[262,9,277,7],[262,11,277,9],[262,15,277,13],[262,16,277,14],[263,8,279,6,"console"],[263,15,279,13],[263,16,279,14,"log"],[263,19,279,17],[263,20,279,18],[263,51,279,49],[263,53,279,51,"data"],[263,57,279,55],[263,58,279,56,"user"],[263,62,279,60],[263,63,279,61,"id"],[263,65,279,63],[263,67,279,65],[263,102,279,100],[263,103,279,101],[264,8,281,6],[264,15,281,13],[265,10,281,15,"success"],[265,17,281,22],[265,19,281,24],[266,8,281,29],[266,9,281,30],[267,6,282,4],[267,7,282,5],[267,8,282,6],[267,15,282,13,"error"],[267,20,282,18],[267,22,282,20],[268,8,283,6,"console"],[268,15,283,13],[268,16,283,14,"error"],[268,21,283,19],[268,22,283,20],[268,36,283,34],[268,38,283,36,"error"],[268,43,283,41],[268,44,283,42],[269,8,284,6],[269,15,284,13],[270,10,284,15,"success"],[270,17,284,22],[270,19,284,24],[270,24,284,29],[271,10,284,31,"error"],[271,15,284,36],[271,17,284,38],[272,8,284,63],[272,9,284,64],[273,6,285,4],[273,7,285,5],[273,16,285,14],[274,8,286,6,"setIsLoading"],[274,20,286,18],[274,21,286,19],[274,26,286,24],[274,27,286,25],[275,6,287,4],[276,4,288,2],[276,5,288,3],[277,4,290,2],[277,10,290,8,"register"],[277,18,290,16],[277,21,290,19],[277,27,290,19,"register"],[277,28,290,26,"email"],[277,33,290,39],[277,35,290,41,"password"],[277,43,290,57],[277,45,290,59,"name"],[277,49,290,71],[277,54,290,123],[278,6,291,4],[278,10,291,8],[279,8,292,6,"setIsLoading"],[279,20,292,18],[279,21,292,19],[279,25,292,23],[279,26,292,24],[280,8,294,6],[280,14,294,12,"response"],[280,22,294,20],[280,25,294,23],[280,31,294,29,"fetch"],[280,36,294,34],[280,37,294,35],[280,40,294,38,"API_BASE_URL"],[280,52,294,50],[280,72,294,70],[280,74,294,72],[281,10,295,8,"method"],[281,16,295,14],[281,18,295,16],[281,24,295,22],[282,10,296,8,"credentials"],[282,21,296,19],[282,23,296,21],[282,32,296,30],[283,10,297,8,"headers"],[283,17,297,15],[283,19,297,17],[284,12,298,10],[284,26,298,24],[284,28,298,26],[285,10,299,8],[285,11,299,9],[286,10,300,8,"body"],[286,14,300,12],[286,16,300,14,"JSON"],[286,20,300,18],[286,21,300,19,"stringify"],[286,30,300,28],[286,31,300,29],[287,12,301,10,"email"],[287,17,301,15],[288,12,302,10,"password"],[288,20,302,18],[289,12,303,10,"name"],[290,10,304,8],[290,11,304,9],[291,8,305,6],[291,9,305,7],[291,10,305,8],[292,8,307,6],[292,14,307,12,"data"],[292,18,307,16],[292,21,307,19],[292,27,307,25,"response"],[292,35,307,33],[292,36,307,34,"json"],[292,40,307,38],[292,41,307,39],[292,42,307,40],[293,8,309,6],[293,12,309,10],[293,13,309,11,"response"],[293,21,309,19],[293,22,309,20,"ok"],[293,24,309,22],[293,26,309,24],[294,10,310,8],[294,17,310,15],[295,12,310,17,"success"],[295,19,310,24],[295,21,310,26],[295,26,310,31],[296,12,310,33,"error"],[296,17,310,38],[296,19,310,40,"data"],[296,23,310,44],[296,24,310,45,"detail"],[296,30,310,51],[296,34,310,55],[297,10,310,77],[297,11,310,78],[298,8,311,6],[300,8,313,6],[301,8,314,6],[301,14,314,12,"AsyncStorage"],[301,26,314,24],[301,27,314,24,"default"],[301,34,314,24],[301,35,314,25,"setItem"],[301,42,314,32],[301,43,314,33],[301,55,314,45],[301,57,314,47,"data"],[301,61,314,51],[301,62,314,52,"access_token"],[301,74,314,64],[301,75,314,65],[302,8,315,6],[302,14,315,12,"AsyncStorage"],[302,26,315,24],[302,27,315,24,"default"],[302,34,315,24],[302,35,315,25,"setItem"],[302,42,315,32],[302,43,315,33],[302,54,315,44],[302,56,315,46,"JSON"],[302,60,315,50],[302,61,315,51,"stringify"],[302,70,315,60],[302,71,315,61,"data"],[302,75,315,65],[302,76,315,66,"user"],[302,80,315,70],[302,81,315,71],[302,82,315,72],[304,8,317,6],[305,8,318,6],[305,12,318,10],[306,10,319,8],[306,16,319,14,"AsyncStorage"],[306,28,319,26],[306,29,319,26,"default"],[306,36,319,26],[306,37,319,27,"setItem"],[306,44,319,34],[306,45,319,35],[306,58,319,48],[306,60,319,50,"email"],[306,65,319,55],[306,66,319,56],[307,10,320,8],[307,16,320,14,"AsyncStorage"],[307,28,320,26],[307,29,320,26,"default"],[307,36,320,26],[307,37,320,27,"setItem"],[307,44,320,34],[307,45,320,35],[307,61,320,51],[307,63,320,53,"password"],[307,71,320,61],[307,72,320,62],[308,8,321,6],[308,9,321,7],[308,10,321,8],[308,17,321,15,"asyncError"],[308,27,321,25],[308,29,321,27],[309,10,322,8],[309,14,322,12],[309,21,322,19,"window"],[309,27,322,25],[309,32,322,30],[309,43,322,41],[309,47,322,45,"window"],[309,53,322,51],[309,54,322,52,"localStorage"],[309,66,322,64],[309,68,322,66],[310,12,323,10,"window"],[310,18,323,16],[310,19,323,17,"localStorage"],[310,31,323,29],[310,32,323,30,"setItem"],[310,39,323,37],[310,40,323,38],[310,52,323,50],[310,54,323,52,"data"],[310,58,323,56],[310,59,323,57,"access_token"],[310,71,323,69],[310,72,323,70],[311,12,324,10,"window"],[311,18,324,16],[311,19,324,17,"localStorage"],[311,31,324,29],[311,32,324,30,"setItem"],[311,39,324,37],[311,40,324,38],[311,51,324,49],[311,53,324,51,"JSON"],[311,57,324,55],[311,58,324,56,"stringify"],[311,67,324,65],[311,68,324,66,"data"],[311,72,324,70],[311,73,324,71,"user"],[311,77,324,75],[311,78,324,76],[311,79,324,77],[312,12,325,10,"window"],[312,18,325,16],[312,19,325,17,"localStorage"],[312,31,325,29],[312,32,325,30,"setItem"],[312,39,325,37],[312,40,325,38],[312,53,325,51],[312,55,325,53,"email"],[312,60,325,58],[312,61,325,59],[313,12,326,10,"window"],[313,18,326,16],[313,19,326,17,"localStorage"],[313,31,326,29],[313,32,326,30,"setItem"],[313,39,326,37],[313,40,326,38],[313,56,326,54],[313,58,326,56,"password"],[313,66,326,64],[313,67,326,65],[314,12,327,10,"console"],[314,19,327,17],[314,20,327,18,"log"],[314,23,327,21],[314,24,327,22],[314,82,327,80],[314,83,327,81],[315,10,328,8],[316,8,329,6],[317,8,331,6,"setToken"],[317,16,331,14],[317,17,331,15,"data"],[317,21,331,19],[317,22,331,20,"access_token"],[317,34,331,32],[317,35,331,33],[318,8,332,6,"setUser"],[318,15,332,13],[318,16,332,14,"data"],[318,20,332,18],[318,21,332,19,"user"],[318,25,332,23],[318,26,332,24],[319,8,334,6,"console"],[319,15,334,13],[319,16,334,14,"log"],[319,19,334,17],[319,20,334,18],[319,58,334,56],[319,60,334,58,"data"],[319,64,334,62],[319,65,334,63,"user"],[319,69,334,67],[319,70,334,68,"id"],[319,72,334,70],[319,74,334,72],[319,109,334,107],[319,110,334,108],[320,8,336,6],[320,15,336,13],[321,10,336,15,"success"],[321,17,336,22],[321,19,336,24],[322,8,336,29],[322,9,336,30],[323,6,337,4],[323,7,337,5],[323,8,337,6],[323,15,337,13,"error"],[323,20,337,18],[323,22,337,20],[324,8,338,6,"console"],[324,15,338,13],[324,16,338,14,"error"],[324,21,338,19],[324,22,338,20],[324,43,338,41],[324,45,338,43,"error"],[324,50,338,48],[324,51,338,49],[325,8,339,6],[325,15,339,13],[326,10,339,15,"success"],[326,17,339,22],[326,19,339,24],[326,24,339,29],[327,10,339,31,"error"],[327,15,339,36],[327,17,339,38],[328,8,339,63],[328,9,339,64],[329,6,340,4],[329,7,340,5],[329,16,340,14],[330,8,341,6,"setIsLoading"],[330,20,341,18],[330,21,341,19],[330,26,341,24],[330,27,341,25],[331,6,342,4],[332,4,343,2],[332,5,343,3],[333,4,345,2],[333,10,345,8,"loginWithGoogle"],[333,25,345,23],[333,28,345,26],[333,34,345,26,"loginWithGoogle"],[333,35,345,26],[333,40,345,85],[334,6,346,4],[334,10,346,8],[335,8,347,6],[336,8,348,6],[336,12,348,10],[336,19,348,17,"window"],[336,25,348,23],[336,30,348,28],[336,41,348,39],[336,45,348,43,"window"],[336,51,348,49],[336,52,348,50,"location"],[336,60,348,58],[336,62,348,60],[337,10,349,8],[338,10,350,8],[338,16,350,14,"redirectUrl"],[338,27,350,25],[338,30,350,28,"encodeURIComponent"],[338,48,350,46],[338,49,350,47,"window"],[338,55,350,53],[338,56,350,54,"location"],[338,64,350,62],[338,65,350,63,"href"],[338,69,350,67],[338,70,350,68],[339,10,351,8],[339,16,351,14,"googleAuthUrl"],[339,29,351,27],[339,32,351,30],[339,76,351,74,"redirectUrl"],[339,87,351,85],[339,89,351,87],[341,10,353,8],[342,10,354,8,"window"],[342,16,354,14],[342,17,354,15,"open"],[342,21,354,19],[342,22,354,20,"googleAuthUrl"],[342,35,354,33],[342,37,354,35],[342,44,354,42],[342,45,354,43],[343,10,356,8],[343,17,356,15],[344,12,356,17,"success"],[344,19,356,24],[344,21,356,26],[345,10,356,31],[345,11,356,32],[346,8,357,6],[346,9,357,7],[346,15,357,13],[347,10,358,8],[348,10,359,8,"console"],[348,17,359,15],[348,18,359,16,"log"],[348,21,359,19],[348,22,359,20],[348,72,359,70],[348,73,359,71],[349,10,360,8],[349,17,360,15],[350,12,360,17,"success"],[350,19,360,24],[350,21,360,26],[350,26,360,31],[351,12,360,33,"error"],[351,17,360,38],[351,19,360,40],[352,10,360,83],[352,11,360,84],[353,8,361,6],[354,6,362,4],[354,7,362,5],[354,8,362,6],[354,15,362,13,"error"],[354,20,362,18],[354,22,362,20],[355,8,363,6,"console"],[355,15,363,13],[355,16,363,14,"error"],[355,21,363,19],[355,22,363,20],[355,43,363,41],[355,45,363,43,"error"],[355,50,363,48],[355,51,363,49],[356,8,364,6],[356,15,364,13],[357,10,364,15,"success"],[357,17,364,22],[357,19,364,24],[357,24,364,29],[358,10,364,31,"error"],[358,15,364,36],[358,17,364,38],[359,8,364,60],[359,9,364,61],[360,6,365,4],[361,4,366,2],[361,5,366,3],[362,4,368,2],[362,10,368,8,"logout"],[362,16,368,14],[362,19,368,17],[362,25,368,17,"logout"],[362,26,368,17],[362,31,368,44],[363,6,369,4],[363,10,369,8],[364,8,370,6],[365,8,371,6],[365,12,371,10,"token"],[365,17,371,15],[365,19,371,17],[366,10,372,8],[366,16,372,14,"fetch"],[366,21,372,19],[366,22,372,20],[366,25,372,23,"API_BASE_URL"],[366,37,372,35],[366,55,372,53],[366,57,372,55],[367,12,373,10,"method"],[367,18,373,16],[367,20,373,18],[367,26,373,24],[368,12,374,10,"credentials"],[368,23,374,21],[368,25,374,23],[368,34,374,32],[369,12,375,10,"headers"],[369,19,375,17],[369,21,375,19],[370,14,376,12],[370,29,376,27],[370,31,376,29],[370,41,376,39,"token"],[370,46,376,44],[370,48,376,46],[371,14,377,12],[371,28,377,26],[371,30,377,28],[372,12,378,10],[373,10,379,8],[373,11,379,9],[373,12,379,10],[374,8,380,6],[375,6,381,4],[375,7,381,5],[375,8,381,6],[375,15,381,13,"error"],[375,20,381,18],[375,22,381,20],[376,8,382,6,"console"],[376,15,382,13],[376,16,382,14,"error"],[376,21,382,19],[376,22,382,20],[376,37,382,35],[376,39,382,37,"error"],[376,44,382,42],[376,45,382,43],[377,6,383,4],[377,7,383,5],[377,16,383,14],[378,8,384,6],[379,8,385,6],[379,14,385,12,"AsyncStorage"],[379,26,385,24],[379,27,385,24,"default"],[379,34,385,24],[379,35,385,25,"multiRemove"],[379,46,385,36],[379,47,385,37],[379,48,385,38],[379,60,385,50],[379,62,385,52],[379,73,385,63],[379,74,385,64],[379,75,385,65],[380,8,386,6,"setToken"],[380,16,386,14],[380,17,386,15],[380,21,386,19],[380,22,386,20],[381,8,387,6,"setUser"],[381,15,387,13],[381,16,387,14],[381,20,387,18],[381,21,387,19],[382,6,388,4],[383,4,389,2],[383,5,389,3],[384,4,391,2],[384,24,392,4],[384,28,392,4,"_reactJsxDevRuntime"],[384,47,392,4],[384,48,392,4,"jsxDEV"],[384,54,392,4],[384,56,392,5,"AuthContext"],[384,67,392,16],[384,68,392,17,"Provider"],[384,76,392,25],[385,6,393,6,"value"],[385,11,393,11],[385,13,393,13],[386,8,394,8,"user"],[386,12,394,12],[387,8,395,8,"token"],[387,13,395,13],[388,8,396,8,"isLoading"],[388,17,396,17],[388,19,396,19,"actualIsLoading"],[388,34,396,34],[389,8,396,37],[390,8,397,8,"isAuthenticated"],[390,23,397,23],[391,8,398,8,"login"],[391,13,398,13],[392,8,399,8,"register"],[392,16,399,16],[393,8,400,8,"loginWithGoogle"],[393,23,400,23],[394,8,401,8,"logout"],[394,14,401,14],[395,8,402,8,"checkSession"],[396,6,403,6],[396,7,403,8],[397,6,403,8,"children"],[397,14,403,8],[397,16,405,7,"children"],[398,4,405,15],[399,6,405,15,"fileName"],[399,14,405,15],[399,16,405,15,"_jsxFileName"],[399,28,405,15],[400,6,405,15,"lineNumber"],[400,16,405,15],[401,6,405,15,"columnNumber"],[401,18,405,15],[402,4,405,15],[402,11,406,26],[402,12,406,27],[403,2,408,0],[403,3,408,1],[404,2,408,2,"_s"],[404,4,408,2],[404,5,58,13,"AuthProvider"],[404,17,58,25],[405,2,58,25,"_c"],[405,4,58,25],[405,7,58,13,"AuthProvider"],[405,19,58,25],[406,2,410,7],[406,8,410,13,"useAuth"],[406,15,410,20],[406,18,410,23,"useAuth"],[406,19,410,23],[406,24,410,46],[407,4,410,46,"_s2"],[407,7,410,46],[408,4,411,2],[408,10,411,8,"context"],[408,17,411,15],[408,20,411,18],[408,24,411,18,"useContext"],[408,30,411,28],[408,31,411,28,"useContext"],[408,41,411,28],[408,43,411,29,"AuthContext"],[408,54,411,40],[408,55,411,41],[409,4,412,2],[409,8,412,6,"context"],[409,15,412,13],[409,20,412,18,"undefined"],[409,29,412,27],[409,31,412,29],[410,6,413,4],[410,12,413,10],[410,16,413,14,"Error"],[410,21,413,19],[410,22,413,20],[410,67,413,65],[410,68,413,66],[411,4,414,2],[412,4,415,2],[412,11,415,9,"context"],[412,18,415,16],[413,2,416,0],[413,3,416,1],[414,2,416,2,"_s2"],[414,5,416,2],[414,6,410,13,"useAuth"],[414,13,410,20],[415,2,410,20],[415,6,410,20,"_c"],[415,8,410,20],[416,2,410,20,"$RefreshReg$"],[416,14,410,20],[416,15,410,20,"_c"],[416,17,410,20],[417,0,410,20],[417,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCS;GDO;YCG;uCCE;KDG;WEK,mCF;GDC;+BIK;6CCuC;uBHC,6CG,QD;GJ0C;uBME;GNwC;gBOE;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GPW;mBSE;GTqD;0BUE;GVqB;iBWE;GXqB;CFmB;uBcE;CdM"},"hasCjsExports":false},"type":"js/module"}]}