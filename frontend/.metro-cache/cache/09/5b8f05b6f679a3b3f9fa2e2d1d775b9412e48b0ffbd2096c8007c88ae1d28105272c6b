{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      gameState,\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: gameState.ninja.attack,\n        defense: gameState.ninja.defense,\n        health: gameState.ninja.health,\n        maxHealth: gameState.ninja.maxHealth,\n        critChance: gameState.ninja.luck,\n        // Use luck as crit chance\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n\n    // Update player stats when ninja stats change\n    (0, _react.useEffect)(() => {\n      setCombatState(prev => ({\n        ...prev,\n        playerStats: {\n          attack: gameState.ninja.attack,\n          defense: gameState.ninja.defense,\n          health: gameState.ninja.health,\n          maxHealth: gameState.ninja.maxHealth,\n          critChance: gameState.ninja.luck,\n          critDamage: 150,\n          cooldownReduction: 0\n        }\n      }));\n    }, [gameState.ninja]);\n\n    // Function to handle enemy kills and reward XP\n    const handleEnemyKill = enemy => {\n      // Calculate XP reward based on enemy max health\n      const baseXP = Math.floor(enemy.maxHealth * 0.5); // 0.5 XP per HP\n      const goldReward = Math.floor(enemy.maxHealth * 0.1); // 0.1 gold per HP\n\n      console.log(`ðŸŽ¯ Enemy killed! Rewarding ${baseXP} XP and ${goldReward} gold`);\n\n      // Update ninja with rewards\n      updateNinja({\n        experience: gameState.ninja.experience + baseXP,\n        gold: gameState.ninja.gold + goldReward\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Spawn new enemies if none remain (for testing)\n        if (newState.enemies.length === 0) {\n          spawnTestEnemy(newState);\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (nearest enemy for now)\n      const target = state.enemies[0];\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Apply damage based on ability effects\n      if (ability.effects.includes('SingleTarget')) {\n        target.health -= damageResult.damage;\n        target.lastDamaged = state.currentTick;\n      } else if (ability.effects.includes('AoE')) {\n        // Damage all enemies\n        state.enemies.forEach(enemy => {\n          enemy.health -= Math.floor(damageResult.damage * 0.8); // 80% damage to secondary targets\n          enemy.lastDamaged = state.currentTick;\n        });\n      }\n\n      // Apply DoT effects\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`ðŸŽ¯ ${ability.name} cast! Damage: ${damageResult.damage}${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      const enemy = {\n        id: `enemy_${Date.now()}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x: 300,\n          y: 200\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      if (!_engineCombatEngine.combatEngine) {\n        _engineCombatEngine.combatEngine.start();\n      }\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"NlA+F0AdAD+WxqGCsuByh2Tq2O8=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":299,"map":[[10,2,37,0,"Object"],[10,8,37,0],[10,9,37,0,"defineProperty"],[10,23,37,0],[10,24,37,0,"exports"],[10,31,37,0],[11,4,37,0,"enumerable"],[11,14,37,0],[12,4,37,0,"get"],[12,7,37,0],[12,18,37,0,"get"],[12,19,37,0],[13,6,37,0],[13,13,37,0,"useCombat"],[13,22,37,0],[14,4,37,0],[15,2,37,0],[16,2,45,0,"Object"],[16,8,45,0],[16,9,45,0,"defineProperty"],[16,23,45,0],[16,24,45,0,"exports"],[16,31,45,0],[17,4,45,0,"enumerable"],[17,14,45,0],[18,4,45,0,"get"],[18,7,45,0],[18,18,45,0,"get"],[18,19,45,0],[19,6,45,0],[19,13,45,0,"CombatProvider"],[19,27,45,0],[20,4,45,0],[21,2,45,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_engineCombatEngine"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,3,0],[24,6,3,0,"_typesAbilityTypes"],[24,24,3,0],[24,27,3,0,"require"],[24,34,3,0],[24,35,3,0,"_dependencyMap"],[24,49,3,0],[25,2,4,0],[25,6,4,0,"_GameContext"],[25,18,4,0],[25,21,4,0,"require"],[25,28,4,0],[25,29,4,0,"_dependencyMap"],[25,43,4,0],[26,2,4,40],[26,6,4,40,"_reactJsxDevRuntime"],[26,25,4,40],[26,28,4,40,"require"],[26,35,4,40],[26,36,4,40,"_dependencyMap"],[26,50,4,40],[27,2,35,0],[27,8,35,6,"CombatContext"],[27,21,35,19],[27,37,35,22],[27,41,35,22,"createContext"],[27,47,35,35],[27,48,35,35,"createContext"],[27,61,35,35],[27,63,35,67,"undefined"],[27,72,35,76],[27,73,35,77],[28,2,37,7],[28,8,37,13,"useCombat"],[28,17,37,22],[28,20,37,25,"useCombat"],[28,21,37,25],[28,26,37,50],[29,4,37,50,"_s"],[29,6,37,50],[30,4,38,2],[30,10,38,8,"context"],[30,17,38,15],[30,20,38,18],[30,24,38,18,"useContext"],[30,30,38,28],[30,31,38,28,"useContext"],[30,41,38,28],[30,43,38,29,"CombatContext"],[30,56,38,42],[30,57,38,43],[31,4,39,2],[31,8,39,6],[31,9,39,7,"context"],[31,16,39,14],[31,18,39,16],[32,6,40,4],[32,12,40,10],[32,16,40,14,"Error"],[32,21,40,19],[32,22,40,20],[32,70,40,68],[32,71,40,69],[33,4,41,2],[34,4,42,2],[34,11,42,9,"context"],[34,18,42,16],[35,2,43,0],[35,3,43,1],[36,2,43,2,"_s"],[36,4,43,2],[36,5,37,13,"useCombat"],[36,14,37,22],[37,2,45,7],[37,8,45,13,"CombatProvider"],[37,22,45,27],[37,25,45,30,"CombatProvider"],[37,26,45,31],[38,4,45,33,"children"],[39,2,45,67],[39,3,45,68],[39,8,45,73],[40,4,45,73,"_s3"],[40,7,45,73],[41,4,46,2],[41,10,46,8],[42,6,46,10,"gameState"],[42,15,46,19],[43,6,46,21,"updateNinja"],[44,4,46,33],[44,5,46,34],[44,8,46,37],[44,12,46,37,"useGame"],[44,24,46,44],[44,25,46,44,"useGame"],[44,32,46,44],[44,34,46,45],[44,35,46,46],[45,4,48,2],[45,10,48,8],[45,11,48,9,"combatState"],[45,22,48,20],[45,24,48,22,"setCombatState"],[45,38,48,36],[45,39,48,37],[45,42,48,40],[45,46,48,40,"useState"],[45,52,48,48],[45,53,48,48,"useState"],[45,61,48,48],[45,63,48,62],[46,6,49,4,"isInCombat"],[46,16,49,14],[46,18,49,16],[46,23,49,21],[47,6,50,4,"currentTick"],[47,17,50,15],[47,19,50,17],[47,20,50,18],[48,6,51,4,"enemies"],[48,13,51,11],[48,15,51,13],[48,17,51,15],[49,6,52,4,"abilityManager"],[49,20,52,18],[49,22,52,20],[49,26,52,24,"AbilityManager"],[49,44,52,38],[49,45,52,38,"AbilityManager"],[49,59,52,38],[49,60,52,39],[49,61,52,40],[50,6,53,4,"statusEffects"],[50,19,53,17],[50,21,53,19],[50,25,53,23,"StatusEffectManager"],[50,44,53,42],[50,45,53,42,"StatusEffectManager"],[50,64,53,42],[50,65,53,43],[50,66,53,44],[51,6,54,4,"playerStats"],[51,17,54,15],[51,19,54,17],[52,8,55,6,"attack"],[52,14,55,12],[52,16,55,14,"gameState"],[52,25,55,23],[52,26,55,24,"ninja"],[52,31,55,29],[52,32,55,30,"attack"],[52,38,55,36],[53,8,56,6,"defense"],[53,15,56,13],[53,17,56,15,"gameState"],[53,26,56,24],[53,27,56,25,"ninja"],[53,32,56,30],[53,33,56,31,"defense"],[53,40,56,38],[54,8,57,6,"health"],[54,14,57,12],[54,16,57,14,"gameState"],[54,25,57,23],[54,26,57,24,"ninja"],[54,31,57,29],[54,32,57,30,"health"],[54,38,57,36],[55,8,58,6,"maxHealth"],[55,17,58,15],[55,19,58,17,"gameState"],[55,28,58,26],[55,29,58,27,"ninja"],[55,34,58,32],[55,35,58,33,"maxHealth"],[55,44,58,42],[56,8,59,6,"critChance"],[56,18,59,16],[56,20,59,18,"gameState"],[56,29,59,27],[56,30,59,28,"ninja"],[56,35,59,33],[56,36,59,34,"luck"],[56,40,59,38],[57,8,59,40],[58,8,60,6,"critDamage"],[58,18,60,16],[58,20,60,18],[58,23,60,21],[59,8,61,6,"cooldownReduction"],[59,25,61,23],[59,27,61,25],[60,6,62,4],[61,4,63,2],[61,5,63,3],[61,6,63,4],[63,4,65,2],[64,4,66,2],[64,8,66,2,"useEffect"],[64,14,66,11],[64,15,66,11,"useEffect"],[64,24,66,11],[64,26,66,12],[64,32,66,18],[65,6,67,4,"setCombatState"],[65,20,67,18],[65,21,67,19,"prev"],[65,25,67,23],[65,30,67,28],[66,8,68,6],[66,11,68,9,"prev"],[66,15,68,13],[67,8,69,6,"playerStats"],[67,19,69,17],[67,21,69,19],[68,10,70,8,"attack"],[68,16,70,14],[68,18,70,16,"gameState"],[68,27,70,25],[68,28,70,26,"ninja"],[68,33,70,31],[68,34,70,32,"attack"],[68,40,70,38],[69,10,71,8,"defense"],[69,17,71,15],[69,19,71,17,"gameState"],[69,28,71,26],[69,29,71,27,"ninja"],[69,34,71,32],[69,35,71,33,"defense"],[69,42,71,40],[70,10,72,8,"health"],[70,16,72,14],[70,18,72,16,"gameState"],[70,27,72,25],[70,28,72,26,"ninja"],[70,33,72,31],[70,34,72,32,"health"],[70,40,72,38],[71,10,73,8,"maxHealth"],[71,19,73,17],[71,21,73,19,"gameState"],[71,30,73,28],[71,31,73,29,"ninja"],[71,36,73,34],[71,37,73,35,"maxHealth"],[71,46,73,44],[72,10,74,8,"critChance"],[72,20,74,18],[72,22,74,20,"gameState"],[72,31,74,29],[72,32,74,30,"ninja"],[72,37,74,35],[72,38,74,36,"luck"],[72,42,74,40],[73,10,75,8,"critDamage"],[73,20,75,18],[73,22,75,20],[73,25,75,23],[74,10,76,8,"cooldownReduction"],[74,27,76,25],[74,29,76,27],[75,8,77,6],[76,6,78,4],[76,7,78,5],[76,8,78,6],[76,9,78,7],[77,4,79,2],[77,5,79,3],[77,7,79,5],[77,8,79,6,"gameState"],[77,17,79,15],[77,18,79,16,"ninja"],[77,23,79,21],[77,24,79,22],[77,25,79,23],[79,4,81,2],[80,4,82,2],[80,10,82,8,"handleEnemyKill"],[80,25,82,23],[80,28,82,27,"enemy"],[80,33,82,45],[80,37,82,50],[81,6,83,4],[82,6,84,4],[82,12,84,10,"baseXP"],[82,18,84,16],[82,21,84,19,"Math"],[82,25,84,23],[82,26,84,24,"floor"],[82,31,84,29],[82,32,84,30,"enemy"],[82,37,84,35],[82,38,84,36,"maxHealth"],[82,47,84,45],[82,50,84,48],[82,53,84,51],[82,54,84,52],[82,55,84,53],[82,56,84,54],[83,6,85,4],[83,12,85,10,"goldReward"],[83,22,85,20],[83,25,85,23,"Math"],[83,29,85,27],[83,30,85,28,"floor"],[83,35,85,33],[83,36,85,34,"enemy"],[83,41,85,39],[83,42,85,40,"maxHealth"],[83,51,85,49],[83,54,85,52],[83,57,85,55],[83,58,85,56],[83,59,85,57],[83,60,85,58],[85,6,87,4,"console"],[85,13,87,11],[85,14,87,12,"log"],[85,17,87,15],[85,18,87,16],[85,48,87,46,"baseXP"],[85,54,87,52],[85,65,87,63,"goldReward"],[85,75,87,73],[85,82,87,80],[85,83,87,81],[87,6,89,4],[88,6,90,4,"updateNinja"],[88,17,90,15],[88,18,90,16],[89,8,91,6,"experience"],[89,18,91,16],[89,20,91,18,"gameState"],[89,29,91,27],[89,30,91,28,"ninja"],[89,35,91,33],[89,36,91,34,"experience"],[89,46,91,44],[89,49,91,47,"baseXP"],[89,55,91,53],[90,8,92,6,"gold"],[90,12,92,10],[90,14,92,12,"gameState"],[90,23,92,21],[90,24,92,22,"ninja"],[90,29,92,27],[90,30,92,28,"gold"],[90,34,92,32],[90,37,92,35,"goldReward"],[91,6,93,4],[91,7,93,5],[91,8,93,6],[92,4,94,2],[92,5,94,3],[94,4,96,2],[95,4,97,2],[95,10,97,8,"handleCombatTick"],[95,26,97,24],[95,29,97,27,"handleCombatTick"],[95,30,97,27],[95,35,97,33],[96,6,97,33],[96,10,97,33,"_s2"],[96,13,97,33],[96,16,97,33,"$RefreshSig$"],[96,28,97,33],[97,6,98,4,"_s2"],[97,9,98,4],[97,10,98,4,"setCombatState"],[97,24,98,18],[97,25,98,18,"_s2"],[97,28,98,18],[97,29,98,19,"prev"],[97,33,98,23],[97,37,98,27],[98,8,98,27,"_s2"],[98,11,98,27],[99,8,99,6],[99,14,99,12,"newTick"],[99,21,99,19],[99,24,99,22,"combatEngine"],[99,43,99,34],[99,44,99,34,"combatEngine"],[99,56,99,34],[99,57,99,35,"getCurrentTick"],[99,71,99,49],[99,72,99,50],[99,73,99,51],[100,8,100,6],[100,14,100,12,"newState"],[100,22,100,20],[100,25,100,23],[101,10,100,25],[101,13,100,28,"prev"],[101,17,100,32],[102,10,100,34,"currentTick"],[102,21,100,45],[102,23,100,47,"newTick"],[103,8,100,55],[103,9,100,56],[104,8,102,6],[104,12,102,10],[104,13,102,11,"newState"],[104,21,102,19],[104,22,102,20,"isInCombat"],[104,32,102,30],[104,34,102,32],[104,41,102,39,"newState"],[104,49,102,47],[106,8,104,6],[107,8,105,6,"newState"],[107,16,105,14],[107,17,105,15,"abilityManager"],[107,31,105,29],[107,32,105,30,"updateCooldowns"],[107,47,105,45],[107,48,105,46,"newTick"],[107,55,105,53],[107,56,105,54],[109,8,107,6],[110,8,108,6],[110,14,108,12,"effectResults"],[110,27,108,25],[110,30,108,28,"newState"],[110,38,108,36],[110,39,108,37,"statusEffects"],[110,52,108,50],[110,53,108,51,"processTick"],[110,64,108,62],[110,65,108,63,"newTick"],[110,72,108,70],[110,73,108,71],[112,8,110,6],[113,8,111,6,"effectResults"],[113,21,111,19],[113,22,111,20,"forEach"],[113,29,111,27],[113,30,111,28],[113,31,111,29,"results"],[113,38,111,36],[113,40,111,38,"entityId"],[113,48,111,46],[113,53,111,51],[114,10,112,8],[114,16,112,14,"enemyIndex"],[114,26,112,24],[114,29,112,27,"newState"],[114,37,112,35],[114,38,112,36,"enemies"],[114,45,112,43],[114,46,112,44,"findIndex"],[114,55,112,53],[114,56,112,54,"e"],[114,57,112,55],[114,61,112,59,"e"],[114,62,112,60],[114,63,112,61,"id"],[114,65,112,63],[114,70,112,68,"entityId"],[114,78,112,76],[114,79,112,77],[115,10,113,8],[115,14,113,12,"enemyIndex"],[115,24,113,22],[115,28,113,26],[115,29,113,27],[115,31,113,29],[116,12,114,10,"results"],[116,19,114,17],[116,20,114,18,"forEach"],[116,27,114,25],[116,28,114,26,"result"],[116,34,114,32],[116,38,114,36],[117,14,115,12,"newState"],[117,22,115,20],[117,23,115,21,"enemies"],[117,30,115,28],[117,31,115,29,"enemyIndex"],[117,41,115,39],[117,42,115,40],[117,43,115,41,"health"],[117,49,115,47],[117,53,115,51,"result"],[117,59,115,57],[117,60,115,58,"damage"],[117,66,115,64],[118,14,116,12,"newState"],[118,22,116,20],[118,23,116,21,"enemies"],[118,30,116,28],[118,31,116,29,"enemyIndex"],[118,41,116,39],[118,42,116,40],[118,43,116,41,"lastDamaged"],[118,54,116,52],[118,57,116,55,"newTick"],[118,64,116,62],[119,12,117,10],[119,13,117,11],[119,14,117,12],[120,10,118,8],[121,8,119,6],[121,9,119,7],[121,10,119,8],[123,8,121,6],[124,8,122,6],[124,13,122,11],[124,17,122,15,"i"],[124,18,122,16],[124,21,122,19],[124,22,122,20],[124,24,122,22,"i"],[124,25,122,23],[124,28,122,26],[124,29,122,27],[124,31,122,29,"i"],[124,32,122,30],[124,34,122,32],[124,36,122,34],[125,10,123,8],[125,14,123,12,"newState"],[125,22,123,20],[125,23,123,21,"abilityManager"],[125,37,123,35],[125,38,123,36,"isAbilityReady"],[125,52,123,50],[125,53,123,51,"i"],[125,54,123,52],[125,55,123,53],[125,59,123,57,"newState"],[125,67,123,65],[125,68,123,66,"enemies"],[125,75,123,73],[125,76,123,74,"length"],[125,82,123,80],[125,85,123,83],[125,86,123,84],[125,88,123,86],[126,12,124,10],[126,16,124,14,"newState"],[126,24,124,22],[126,25,124,23,"abilityManager"],[126,39,124,37],[126,40,124,38,"useAbility"],[126,50,124,48],[126,51,124,49,"i"],[126,52,124,50],[126,54,124,52,"newTick"],[126,61,124,59],[126,62,124,60],[126,64,124,62],[127,14,125,12,"castAbility"],[127,25,125,23],[127,26,125,24,"newState"],[127,34,125,32],[127,36,125,34,"i"],[127,37,125,35],[127,38,125,36],[128,12,126,10],[129,10,127,8],[130,8,128,6],[132,8,130,6],[133,8,131,6],[133,14,131,12,"deadEnemies"],[133,25,131,23],[133,28,131,26,"newState"],[133,36,131,34],[133,37,131,35,"enemies"],[133,44,131,42],[133,45,131,43,"filter"],[133,51,131,49],[133,52,131,50,"enemy"],[133,57,131,55],[133,61,131,59,"enemy"],[133,66,131,64],[133,67,131,65,"health"],[133,73,131,71],[133,77,131,75],[133,78,131,76],[133,79,131,77],[134,8,132,6,"deadEnemies"],[134,19,132,17],[134,20,132,18,"forEach"],[134,27,132,25],[134,28,132,26,"enemy"],[134,33,132,31],[134,37,132,35],[135,10,133,8,"handleEnemyKill"],[135,25,133,23],[135,26,133,24,"enemy"],[135,31,133,29],[135,32,133,30],[136,8,134,6],[136,9,134,7],[136,10,134,8],[138,8,136,6],[139,8,137,6,"newState"],[139,16,137,14],[139,17,137,15,"enemies"],[139,24,137,22],[139,27,137,25,"newState"],[139,35,137,33],[139,36,137,34,"enemies"],[139,43,137,41],[139,44,137,42,"filter"],[139,50,137,48],[139,51,137,49,"enemy"],[139,56,137,54],[139,60,137,58,"enemy"],[139,65,137,63],[139,66,137,64,"health"],[139,72,137,70],[139,75,137,73],[139,76,137,74],[139,77,137,75],[141,8,139,6],[142,8,140,6],[142,12,140,10,"newState"],[142,20,140,18],[142,21,140,19,"enemies"],[142,28,140,26],[142,29,140,27,"length"],[142,35,140,33],[142,40,140,38],[142,41,140,39],[142,43,140,41],[143,10,141,8,"spawnTestEnemy"],[143,24,141,22],[143,25,141,23,"newState"],[143,33,141,31],[143,34,141,32],[144,8,142,6],[145,8,144,6],[145,15,144,13,"newState"],[145,23,144,21],[146,6,145,4],[146,7,145,5],[146,47,145,6],[147,4,146,2],[147,5,146,3],[149,4,148,2],[150,4,149,2],[150,10,149,8,"castAbility"],[150,21,149,19],[150,24,149,22,"castAbility"],[150,25,149,23,"state"],[150,30,149,41],[150,32,149,43,"slotIndex"],[150,41,149,60],[150,46,149,65],[151,6,150,4],[151,12,150,10,"deck"],[151,16,150,14],[151,19,150,17,"state"],[151,24,150,22],[151,25,150,23,"abilityManager"],[151,39,150,37],[151,40,150,38,"getDeck"],[151,47,150,45],[151,48,150,46],[151,49,150,47],[152,6,151,4],[152,12,151,10,"ability"],[152,19,151,17],[152,22,151,20,"deck"],[152,26,151,24],[152,27,151,25,"slots"],[152,32,151,30],[152,33,151,31,"slotIndex"],[152,42,151,40],[152,43,151,41],[153,6,152,4],[153,10,152,8],[153,11,152,9,"ability"],[153,18,152,16],[153,20,152,18],[155,6,154,4],[156,6,155,4],[156,12,155,10,"target"],[156,18,155,16],[156,21,155,19,"state"],[156,26,155,24],[156,27,155,25,"enemies"],[156,34,155,32],[156,35,155,33],[156,36,155,34],[156,37,155,35],[157,6,156,4],[157,10,156,8],[157,11,156,9,"target"],[157,17,156,15],[157,19,156,17],[159,6,158,4],[160,6,159,4],[160,10,159,8,"damage"],[160,16,159,14],[160,19,159,17,"ability"],[160,26,159,24],[160,27,159,25,"stats"],[160,32,159,30],[160,33,159,31,"baseDamage"],[160,43,159,41],[162,6,161,4],[163,6,162,4,"deck"],[163,10,162,8],[163,11,162,9,"activeSynergies"],[163,26,162,24],[163,27,162,25,"forEach"],[163,34,162,32],[163,35,162,33,"synergy"],[163,42,162,40],[163,46,162,44],[164,8,163,6],[164,12,163,10,"synergy"],[164,19,163,17],[164,20,163,18,"bonus"],[164,25,163,23],[164,26,163,24,"damageBonus"],[164,37,163,35],[164,41,164,10,"synergy"],[164,48,164,17],[164,49,164,18,"requiredTags"],[164,61,164,30],[164,62,164,31,"some"],[164,66,164,35],[164,67,164,36,"tag"],[164,70,164,39],[164,74,164,43,"ability"],[164,81,164,50],[164,82,164,51,"tags"],[164,86,164,55],[164,87,164,56,"includes"],[164,95,164,64],[164,96,164,65,"tag"],[164,99,164,68],[164,100,164,69],[164,101,164,70],[164,103,164,72],[165,10,165,8,"damage"],[165,16,165,14],[165,20,165,19],[165,21,165,20],[165,24,165,23,"synergy"],[165,31,165,30],[165,32,165,31,"bonus"],[165,37,165,36],[165,38,165,37,"damageBonus"],[165,49,165,48],[165,52,165,51],[165,55,165,55],[166,8,166,6],[167,6,167,4],[167,7,167,5],[167,8,167,6],[169,6,169,4],[170,6,170,4],[170,12,170,10,"damageResult"],[170,24,170,22],[170,27,170,25,"DamageCalculator"],[170,46,170,41],[170,47,170,41,"DamageCalculator"],[170,63,170,41],[170,64,170,42,"calculateDamage"],[170,79,170,57],[170,80,170,58,"damage"],[170,86,170,64],[170,88,170,66,"state"],[170,93,170,71],[170,94,170,72,"playerStats"],[170,105,170,83],[170,107,170,85,"target"],[170,113,170,91],[170,114,170,92,"stats"],[170,119,170,97],[170,120,170,98],[172,6,172,4],[173,6,173,4],[173,10,173,8,"ability"],[173,17,173,15],[173,18,173,16,"effects"],[173,25,173,23],[173,26,173,24,"includes"],[173,34,173,32],[173,35,173,33],[173,49,173,47],[173,50,173,48],[173,52,173,50],[174,8,174,6,"target"],[174,14,174,12],[174,15,174,13,"health"],[174,21,174,19],[174,25,174,23,"damageResult"],[174,37,174,35],[174,38,174,36,"damage"],[174,44,174,42],[175,8,175,6,"target"],[175,14,175,12],[175,15,175,13,"lastDamaged"],[175,26,175,24],[175,29,175,27,"state"],[175,34,175,32],[175,35,175,33,"currentTick"],[175,46,175,44],[176,6,176,4],[176,7,176,5],[176,13,176,11],[176,17,176,15,"ability"],[176,24,176,22],[176,25,176,23,"effects"],[176,32,176,30],[176,33,176,31,"includes"],[176,41,176,39],[176,42,176,40],[176,47,176,45],[176,48,176,46],[176,50,176,48],[177,8,177,6],[178,8,178,6,"state"],[178,13,178,11],[178,14,178,12,"enemies"],[178,21,178,19],[178,22,178,20,"forEach"],[178,29,178,27],[178,30,178,28,"enemy"],[178,35,178,33],[178,39,178,37],[179,10,179,8,"enemy"],[179,15,179,13],[179,16,179,14,"health"],[179,22,179,20],[179,26,179,24,"Math"],[179,30,179,28],[179,31,179,29,"floor"],[179,36,179,34],[179,37,179,35,"damageResult"],[179,49,179,47],[179,50,179,48,"damage"],[179,56,179,54],[179,59,179,57],[179,62,179,60],[179,63,179,61],[179,64,179,62],[179,65,179,63],[180,10,180,8,"enemy"],[180,15,180,13],[180,16,180,14,"lastDamaged"],[180,27,180,25],[180,30,180,28,"state"],[180,35,180,33],[180,36,180,34,"currentTick"],[180,47,180,45],[181,8,181,6],[181,9,181,7],[181,10,181,8],[182,6,182,4],[184,6,184,4],[185,6,185,4],[185,10,185,8,"ability"],[185,17,185,15],[185,18,185,16,"effects"],[185,25,185,23],[185,26,185,24,"includes"],[185,34,185,32],[185,35,185,33],[185,40,185,38],[185,41,185,39],[185,45,185,43,"ability"],[185,52,185,50],[185,53,185,51,"stats"],[185,58,185,56],[185,59,185,57,"duration"],[185,67,185,65],[185,69,185,67],[186,8,186,6,"state"],[186,13,186,11],[186,14,186,12,"statusEffects"],[186,27,186,25],[186,28,186,26,"addEffect"],[186,37,186,35],[186,38,186,36,"target"],[186,44,186,42],[186,45,186,43,"id"],[186,47,186,45],[186,49,186,47],[187,10,187,8,"id"],[187,12,187,10],[187,14,187,12],[187,17,187,15,"ability"],[187,24,187,22],[187,25,187,23,"id"],[187,27,187,25],[187,33,187,31],[188,10,188,8,"type"],[188,14,188,12],[188,16,188,14],[188,21,188,19],[189,10,189,8,"remainingTicks"],[189,24,189,22],[189,26,189,24,"Math"],[189,30,189,28],[189,31,189,29,"floor"],[189,36,189,34],[189,37,189,35,"ability"],[189,44,189,42],[189,45,189,43,"stats"],[189,50,189,48],[189,51,189,49,"duration"],[189,59,189,57],[189,62,189,60],[189,64,189,62],[189,65,189,63],[190,10,189,65],[191,10,190,8,"tickInterval"],[191,22,190,20],[191,24,190,22],[191,26,190,24],[192,10,190,26],[193,10,191,8,"lastTick"],[193,18,191,16],[193,20,191,18,"state"],[193,25,191,23],[193,26,191,24,"currentTick"],[193,37,191,35],[194,10,192,8,"value"],[194,15,192,13],[194,17,192,15,"Math"],[194,21,192,19],[194,22,192,20,"floor"],[194,27,192,25],[194,28,192,26,"damage"],[194,34,192,32],[194,37,192,35],[194,40,192,38],[194,41,192,39],[195,10,192,41],[196,10,193,8,"stackable"],[196,19,193,17],[196,21,193,19],[197,8,194,6],[197,9,194,7],[197,10,194,8],[198,6,195,4],[199,6,197,4,"console"],[199,13,197,11],[199,14,197,12,"log"],[199,17,197,15],[199,18,197,16],[199,24,197,22,"ability"],[199,31,197,29],[199,32,197,30,"name"],[199,36,197,34],[199,54,197,52,"damageResult"],[199,66,197,64],[199,67,197,65,"damage"],[199,73,197,71],[199,76,197,74,"damageResult"],[199,88,197,86],[199,89,197,87,"isCritical"],[199,99,197,97],[199,102,197,100],[199,112,197,110],[199,115,197,113],[199,117,197,115],[199,119,197,117],[199,120,197,118],[200,4,198,2],[200,5,198,3],[202,4,200,2],[203,4,201,2],[203,10,201,8,"spawnTestEnemy"],[203,24,201,22],[203,27,201,26,"state"],[203,32,201,44],[203,36,201,49],[204,6,202,4],[204,12,202,10,"enemy"],[204,17,202,28],[204,20,202,31],[205,8,203,6,"id"],[205,10,203,8],[205,12,203,10],[205,21,203,19,"Date"],[205,25,203,23],[205,26,203,24,"now"],[205,29,203,27],[205,30,203,28],[205,31,203,29],[205,33,203,31],[206,8,204,6,"name"],[206,12,204,10],[206,14,204,12],[206,24,204,22],[207,8,205,6,"health"],[207,14,205,12],[207,16,205,14],[207,19,205,17],[208,8,206,6,"maxHealth"],[208,17,206,15],[208,19,206,17],[208,22,206,20],[209,8,207,6,"stats"],[209,13,207,11],[209,15,207,13],[210,10,208,8,"attack"],[210,16,208,14],[210,18,208,16],[210,20,208,18],[211,10,209,8,"defense"],[211,17,209,15],[211,19,209,17],[211,21,209,19],[212,10,210,8,"health"],[212,16,210,14],[212,18,210,16],[212,21,210,19],[213,10,211,8,"maxHealth"],[213,19,211,17],[213,21,211,19],[213,24,211,22],[214,10,212,8,"critChance"],[214,20,212,18],[214,22,212,20],[214,23,212,21],[215,10,213,8,"critDamage"],[215,20,213,18],[215,22,213,20],[215,25,213,23],[216,10,214,8,"cooldownReduction"],[216,27,214,25],[216,29,214,27],[217,8,215,6],[217,9,215,7],[218,8,216,6,"position"],[218,16,216,14],[218,18,216,16],[219,10,216,18,"x"],[219,11,216,19],[219,13,216,21],[219,16,216,24],[220,10,216,26,"y"],[220,11,216,27],[220,13,216,29],[221,8,216,33],[221,9,216,34],[222,8,217,6,"lastDamaged"],[222,19,217,17],[222,21,217,19],[223,6,218,4],[223,7,218,5],[224,6,220,4,"state"],[224,11,220,9],[224,12,220,10,"enemies"],[224,19,220,17],[224,20,220,18,"push"],[224,24,220,22],[224,25,220,23,"enemy"],[224,30,220,28],[224,31,220,29],[225,4,221,2],[225,5,221,3],[227,4,223,2],[228,4,224,2],[228,10,224,8,"startCombat"],[228,21,224,19],[228,24,224,22,"startCombat"],[228,25,224,22],[228,30,224,28],[229,6,225,4,"setCombatState"],[229,20,225,18],[229,21,225,19,"prev"],[229,25,225,23],[229,30,225,28],[230,8,225,30],[230,11,225,33,"prev"],[230,15,225,37],[231,8,225,39,"isInCombat"],[231,18,225,49],[231,20,225,51],[232,6,225,56],[232,7,225,57],[232,8,225,58],[232,9,225,59],[234,6,227,4],[235,6,228,4,"combatEngine"],[235,25,228,16],[235,26,228,16,"combatEngine"],[235,38,228,16],[235,39,228,17,"addTickCallback"],[235,54,228,32],[235,55,228,33,"handleCombatTick"],[235,71,228,49],[235,72,228,50],[236,6,230,4],[236,10,230,8],[236,11,230,9,"combatEngine"],[236,30,230,21],[236,31,230,21,"combatEngine"],[236,43,230,21],[236,45,230,23],[237,8,231,6,"combatEngine"],[237,27,231,18],[237,28,231,18,"combatEngine"],[237,40,231,18],[237,41,231,19,"start"],[237,46,231,24],[237,47,231,25],[237,48,231,26],[238,6,232,4],[239,4,233,2],[239,5,233,3],[241,4,235,2],[242,4,236,2],[242,10,236,8,"stopCombat"],[242,20,236,18],[242,23,236,21,"stopCombat"],[242,24,236,21],[242,29,236,27],[243,6,237,4,"setCombatState"],[243,20,237,18],[243,21,237,19,"prev"],[243,25,237,23],[243,30,237,28],[244,8,237,30],[244,11,237,33,"prev"],[244,15,237,37],[245,8,237,39,"isInCombat"],[245,18,237,49],[245,20,237,51],[246,6,237,57],[246,7,237,58],[246,8,237,59],[246,9,237,60],[247,6,238,4,"combatEngine"],[247,25,238,16],[247,26,238,16,"combatEngine"],[247,38,238,16],[247,39,238,17,"removeTickCallback"],[247,57,238,35],[247,58,238,36,"handleCombatTick"],[247,74,238,52],[247,75,238,53],[248,4,239,2],[248,5,239,3],[250,4,241,2],[251,4,242,2],[251,10,242,8,"equipAbility"],[251,22,242,20],[251,25,242,23,"equipAbility"],[251,26,242,24,"abilityId"],[251,35,242,41],[251,37,242,43,"slotIndex"],[251,46,242,60],[251,51,242,74],[252,6,243,4],[252,13,243,11,"combatState"],[252,24,243,22],[252,25,243,23,"abilityManager"],[252,39,243,37],[252,40,243,38,"equipAbility"],[252,52,243,50],[252,53,243,51,"abilityId"],[252,62,243,60],[252,64,243,62,"slotIndex"],[252,73,243,71],[252,74,243,72],[253,4,244,2],[253,5,244,3],[254,4,246,2],[254,10,246,8,"getDeck"],[254,17,246,15],[254,20,246,18,"getDeck"],[254,21,246,18],[254,26,246,24],[255,6,247,4],[255,13,247,11,"combatState"],[255,24,247,22],[255,25,247,23,"abilityManager"],[255,39,247,37],[255,40,247,38,"getDeck"],[255,47,247,45],[255,48,247,46],[255,49,247,47],[256,4,248,2],[256,5,248,3],[257,4,250,2],[257,10,250,8,"getAvailableAbilities"],[257,31,250,29],[257,34,250,32,"getAvailableAbilities"],[257,35,250,32],[257,40,250,38],[258,6,251,4],[258,13,251,11,"combatState"],[258,24,251,22],[258,25,251,23,"abilityManager"],[258,39,251,37],[258,40,251,38,"getAvailableAbilities"],[258,61,251,59],[258,62,251,60],[258,63,251,61],[259,4,252,2],[259,5,252,3],[260,4,254,2],[260,10,254,8,"upgradeAbility"],[260,24,254,22],[260,27,254,26,"abilityId"],[260,36,254,43],[260,40,254,57],[261,6,255,4],[261,13,255,11,"combatState"],[261,24,255,22],[261,25,255,23,"abilityManager"],[261,39,255,37],[261,40,255,38,"upgradeAbility"],[261,54,255,52],[261,55,255,53,"abilityId"],[261,64,255,62],[261,65,255,63],[262,4,256,2],[262,5,256,3],[264,4,258,2],[265,4,259,2],[265,8,259,2,"useEffect"],[265,14,259,11],[265,15,259,11,"useEffect"],[265,24,259,11],[265,26,259,12],[265,32,259,18],[266,6,260,4,"combatEngine"],[266,25,260,16],[266,26,260,16,"combatEngine"],[266,38,260,16],[266,39,260,17,"start"],[266,44,260,22],[266,45,260,23],[266,46,260,24],[268,6,262,4],[269,6,263,4,"combatState"],[269,17,263,15],[269,18,263,16,"abilityManager"],[269,32,263,30],[269,33,263,31,"equipAbility"],[269,45,263,43],[269,46,263,44],[269,62,263,60],[269,64,263,62],[269,65,263,63],[269,66,263,64],[270,6,264,4,"combatState"],[270,17,264,15],[270,18,264,16,"abilityManager"],[270,32,264,30],[270,33,264,31,"equipAbility"],[270,45,264,43],[270,46,264,44],[270,61,264,59],[270,63,264,61],[270,64,264,62],[270,65,264,63],[271,6,266,4],[271,13,266,11],[271,19,266,17],[272,8,267,6,"combatEngine"],[272,27,267,18],[272,28,267,18,"combatEngine"],[272,40,267,18],[272,41,267,19,"stop"],[272,45,267,23],[272,46,267,24],[272,47,267,25],[273,6,268,4],[273,7,268,5],[274,4,269,2],[274,5,269,3],[274,7,269,5],[274,9,269,7],[274,10,269,8],[275,4,271,2],[275,10,271,8,"contextValue"],[275,22,271,39],[275,25,271,42],[276,6,272,4,"combatState"],[276,17,272,15],[277,6,273,4,"startCombat"],[277,17,273,15],[278,6,274,4,"stopCombat"],[278,16,274,14],[279,6,275,4,"equipAbility"],[279,18,275,16],[280,6,276,4,"getDeck"],[280,13,276,11],[281,6,277,4,"getAvailableAbilities"],[281,27,277,25],[282,6,278,4,"upgradeAbility"],[283,4,279,2],[283,5,279,3],[284,4,281,2],[284,24,282,4],[284,28,282,4,"_reactJsxDevRuntime"],[284,47,282,4],[284,48,282,4,"jsxDEV"],[284,54,282,4],[284,56,282,5,"CombatContext"],[284,69,282,18],[284,70,282,19,"Provider"],[284,78,282,27],[285,6,282,28,"value"],[285,11,282,33],[285,13,282,35,"contextValue"],[285,25,282,48],[286,6,282,48,"children"],[286,14,282,48],[286,16,283,7,"children"],[287,4,283,15],[288,6,283,15,"fileName"],[288,14,283,15],[288,16,283,15,"_jsxFileName"],[288,28,283,15],[289,6,283,15,"lineNumber"],[289,16,283,15],[290,6,283,15,"columnNumber"],[290,18,283,15],[291,4,283,15],[291,11,284,28],[291,12,284,29],[292,2,286,0],[292,3,286,1],[293,2,286,2,"_s3"],[293,5,286,2],[293,6,45,13,"CombatProvider"],[293,20,45,27],[294,4,45,27],[294,12,46,37,"useGame"],[294,24,46,44],[294,25,46,44,"useGame"],[294,32,46,44],[295,2,46,44],[296,2,46,44,"_c"],[296,4,46,44],[296,7,45,13,"CombatProvider"],[296,21,45,27],[297,2,45,27],[297,6,45,27,"_c"],[297,8,45,27],[298,2,45,27,"$RefreshReg$"],[298,14,45,27],[298,15,45,27,"_c"],[298,17,45,27],[299,0,45,27],[299,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","useEffect$argument_0","setCombatState$argument_0","handleEnemyKill","handleCombatTick","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.forEach$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","<anonymous>"],"mappings":"AAA;yBCoC;CDM;8BEE;YCqB;mBCC;MDW;GDC;0BGG;GHY;2BIG;mBFC;4BGa;sDCC,sBD;0BEE;WFG;OHE;kDMY,0BN;0BOC;OPE;iDMG,yBN;KEQ;GJC;sBUG;iCCa;oCCE,iCD;KDG;4BGW;OHG;GViB;yBcG;GdoB;sBeG;mBbC,uCa;GfQ;qBgBG;mBdC,wCc;GhBE;uBiBG;GjBE;kBkBE;GlBE;gCmBE;GnBE;yBoBE;GpBE;YCG;WoBO;KpBE;GDC;CFiB"},"hasCjsExports":false},"type":"js/module"}]}