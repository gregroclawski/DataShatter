{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":283},"end":{"line":4,"column":40,"index":323}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  let enemyCounter = 0; // Global counter for unique enemy IDs\n\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const {\n      updateNinja\n    } = (0, _GameContext.useGame)();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n    const [projectiles, setProjectiles] = (0, _react.useState)([]);\n    const [ninjaPosition, setNinjaPosition] = (0, _react.useState)({\n      x: 195,\n      y: 297\n    }); // Default center position\n\n    // Function to handle enemy kills - just log for now, main component will handle rewards\n    const handleEnemyKill = enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n\n      // Award XP and gold directly using useGame hook\n      const xpReward = 50;\n      const goldReward = 10;\n      console.log(`üí∞ Awarding ${xpReward} XP and ${goldReward} gold for kill`);\n      updateNinja(prev => {\n        console.log(`üìä XP before: ${prev.experience}, after: ${prev.experience + xpReward}`);\n        return {\n          experience: prev.experience + xpReward,\n          gold: prev.gold + goldReward\n        };\n      });\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('üîÑ Combat tick running...');\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen with slower respawn to prevent chaos\n        const MAX_ENEMIES = 10;\n        const MIN_SPAWN_DELAY = 500; // Minimum 500ms between spawns\n        const now = Date.now();\n\n        // Add respawn cooldown tracking\n        if (!newState.lastSpawnTime) {\n          newState.lastSpawnTime = now;\n        }\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}`);\n        if (newState.enemies.length < MAX_ENEMIES && now - newState.lastSpawnTime >= MIN_SPAWN_DELAY) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n          newState.lastSpawnTime = now;\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n    };\n\n    // Find closest enemy to ninja - exposed for UI use\n    const findClosestEnemyInternal = enemies => {\n      if (enemies.length === 0) return null;\n\n      // Ninja position (center of screen)\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 250;\n      const ninjaX = SCREEN_WIDTH / 2;\n      const ninjaY = GAME_AREA_HEIGHT / 2;\n      let closestEnemy = enemies[0];\n      let closestDistance = Infinity;\n      enemies.forEach(enemy => {\n        const distance = Math.sqrt(Math.pow(enemy.position.x - ninjaX, 2) + Math.pow(enemy.position.y - ninjaY, 2));\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestEnemy = enemy;\n        }\n      });\n      console.log(`üéØ Targeting closest enemy at distance ${closestDistance.toFixed(0)}`);\n      return closestEnemy;\n    };\n\n    // Public function to find closest enemy from current combat state\n    const findClosestEnemy = () => {\n      return findClosestEnemyInternal(combatState.enemies);\n    };\n\n    // Update ninja position for accurate projectile origin\n    const updateNinjaPosition = position => {\n      setNinjaPosition(position);\n    };\n\n    // Handle projectile hit - deals damage to target enemy\n    const handleProjectileHit = projectile => {\n      console.log(`üí• Projectile ${projectile.id} hit enemy ${projectile.targetEnemyId} for ${projectile.damage} damage`);\n      setCombatState(prev => {\n        const newState = {\n          ...prev\n        };\n\n        // Find the target enemy and deal damage\n        const enemyIndex = newState.enemies.findIndex(e => e.id === projectile.targetEnemyId);\n        if (enemyIndex >= 0) {\n          newState.enemies = [...newState.enemies];\n          newState.enemies[enemyIndex] = {\n            ...newState.enemies[enemyIndex],\n            health: newState.enemies[enemyIndex].health - projectile.damage,\n            lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n          };\n          console.log(`üéØ Enemy ${projectile.targetEnemyId} health: ${newState.enemies[enemyIndex].health}/${newState.enemies[enemyIndex].maxHealth}`);\n        }\n        return newState;\n      });\n\n      // Remove projectile after hit\n      setProjectiles(prev => prev.filter(p => p.id !== projectile.id));\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (closest enemy)\n      const target = findClosestEnemyInternal(state.enemies);\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Create projectile for visual effect and delayed damage\n      createProjectile(target, damageResult.damage, ninjaPosition);\n\n      // Apply DoT effects (immediate)\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Projectile created for ${damageResult.damage} damage${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Create projectile that will deal damage when it hits\n    const createProjectile = (targetEnemy, damage, ninjaPos) => {\n      const SCREEN_WIDTH = 390;\n      const GAME_AREA_HEIGHT = 844 - 250;\n      const NINJA_SIZE = 40;\n\n      // Use provided ninja position or default to center\n      const ninjaX = ninjaPos ? ninjaPos.x + NINJA_SIZE / 2 : SCREEN_WIDTH / 2;\n      const ninjaY = ninjaPos ? ninjaPos.y + NINJA_SIZE / 2 : GAME_AREA_HEIGHT / 2;\n      const ENEMY_SIZE = 35;\n      const projectile = {\n        id: `proj_${Date.now()}_${Math.random()}`,\n        x: ninjaX,\n        y: ninjaY,\n        targetX: targetEnemy.position.x + ENEMY_SIZE / 2,\n        targetY: targetEnemy.position.y + ENEMY_SIZE / 2,\n        targetEnemyId: targetEnemy.id,\n        damage: damage,\n        startTime: Date.now(),\n        duration: 500 // 500ms travel time\n      };\n      console.log(`üî• Creating projectile to enemy ${targetEnemy.id} for ${damage} damage`);\n      console.log(`üéØ Projectile origin: ninja at (${ninjaX}, ${ninjaY}), target at (${projectile.targetX}, ${projectile.targetY})`);\n      setProjectiles(prev => [...prev, projectile]);\n\n      // Schedule projectile hit\n      setTimeout(() => {\n        handleProjectileHit(projectile);\n      }, 500);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      // Get screen dimensions for proper positioning\n      const SCREEN_WIDTH = 390; // Mobile width\n      const GAME_AREA_HEIGHT = 844 - 250; // Screen height minus bottom tabs\n      const ENEMY_SIZE = 35;\n\n      // Random position within game area bounds (like ninja positioning)\n      const x = Math.random() * (SCREEN_WIDTH - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n      const y = Math.random() * (GAME_AREA_HEIGHT - ENEMY_SIZE * 2) + ENEMY_SIZE; // Avoid edges\n\n      const enemy = {\n        id: `enemy_${++enemyCounter}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x,\n          y\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Clear all enemies (for level-up explosion)\n    const clearAllEnemies = () => {\n      console.log('üí• Clearing all enemies for level-up explosion!');\n      setCombatState(prev => ({\n        ...prev,\n        enemies: []\n      }));\n    };\n\n    // Trigger level-up explosion that actually damages enemies\n    const triggerLevelUpExplosion = () => {\n      console.log('üí• LEVEL UP EXPLOSION TRIGGERED IN COMBAT CONTEXT!');\n      setCombatState(prev => {\n        // Calculate rewards for all current enemies\n        const enemyCount = prev.enemies.length;\n        const explosionXP = enemyCount * 25; // 25 XP per enemy\n        const explosionGold = enemyCount * 5; // 5 gold per enemy\n\n        console.log(`üí• Explosion killing ${enemyCount} enemies, awarding ${explosionXP} XP and ${explosionGold} gold`);\n\n        // Award XP using updateNinja if there are enemies to kill\n        if (explosionXP > 0) {\n          updateNinja(ninja => ({\n            experience: ninja.experience + explosionXP,\n            gold: ninja.gold + explosionGold\n          }));\n        }\n\n        // Actually damage all enemies to 0 health instead of just clearing them\n        // This will trigger the normal kill processing in the next tick\n        const damagedEnemies = prev.enemies.map(enemy => ({\n          ...enemy,\n          health: 0,\n          // Set health to 0 to trigger normal kill processing\n          lastDamaged: _engineCombatEngine.combatEngine.getCurrentTick()\n        }));\n        return {\n          ...prev,\n          enemies: damagedEnemies\n        };\n      });\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      projectiles,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility,\n      clearAllEnemies,\n      triggerLevelUpExplosion,\n      findClosestEnemy,\n      updateNinjaPosition\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"lTUTOhbvph+NxiM35HUdeqT4rwI=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":442,"map":[[10,2,55,0,"Object"],[10,8,55,0],[10,9,55,0,"defineProperty"],[10,23,55,0],[10,24,55,0,"exports"],[10,31,55,0],[11,4,55,0,"enumerable"],[11,14,55,0],[12,4,55,0,"get"],[12,7,55,0],[12,18,55,0,"get"],[12,19,55,0],[13,6,55,0],[13,13,55,0,"useCombat"],[13,22,55,0],[14,4,55,0],[15,2,55,0],[16,2,65,0,"Object"],[16,8,65,0],[16,9,65,0,"defineProperty"],[16,23,65,0],[16,24,65,0,"exports"],[16,31,65,0],[17,4,65,0,"enumerable"],[17,14,65,0],[18,4,65,0,"get"],[18,7,65,0],[18,18,65,0,"get"],[18,19,65,0],[19,6,65,0],[19,13,65,0,"CombatProvider"],[19,27,65,0],[20,4,65,0],[21,2,65,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_engineCombatEngine"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,3,0],[24,6,3,0,"_typesAbilityTypes"],[24,24,3,0],[24,27,3,0,"require"],[24,34,3,0],[24,35,3,0,"_dependencyMap"],[24,49,3,0],[25,2,4,0],[25,6,4,0,"_GameContext"],[25,18,4,0],[25,21,4,0,"require"],[25,28,4,0],[25,29,4,0,"_dependencyMap"],[25,43,4,0],[26,2,4,40],[26,6,4,40,"_reactJsxDevRuntime"],[26,25,4,40],[26,28,4,40,"require"],[26,35,4,40],[26,36,4,40,"_dependencyMap"],[26,50,4,40],[27,2,53,0],[27,8,53,6,"CombatContext"],[27,21,53,19],[27,37,53,22],[27,41,53,22,"createContext"],[27,47,53,35],[27,48,53,35,"createContext"],[27,61,53,35],[27,63,53,67,"undefined"],[27,72,53,76],[27,73,53,77],[28,2,55,7],[28,8,55,13,"useCombat"],[28,17,55,22],[28,20,55,25,"useCombat"],[28,21,55,25],[28,26,55,50],[29,4,55,50,"_s"],[29,6,55,50],[30,4,56,2],[30,10,56,8,"context"],[30,17,56,15],[30,20,56,18],[30,24,56,18,"useContext"],[30,30,56,28],[30,31,56,28,"useContext"],[30,41,56,28],[30,43,56,29,"CombatContext"],[30,56,56,42],[30,57,56,43],[31,4,57,2],[31,8,57,6],[31,9,57,7,"context"],[31,16,57,14],[31,18,57,16],[32,6,58,4],[32,12,58,10],[32,16,58,14,"Error"],[32,21,58,19],[32,22,58,20],[32,70,58,68],[32,71,58,69],[33,4,59,2],[34,4,60,2],[34,11,60,9,"context"],[34,18,60,16],[35,2,61,0],[35,3,61,1],[36,2,61,2,"_s"],[36,4,61,2],[36,5,55,13,"useCombat"],[36,14,55,22],[37,2,63,0],[37,6,63,4,"enemyCounter"],[37,18,63,16],[37,21,63,19],[37,22,63,20],[37,23,63,21],[37,24,63,22],[39,2,65,7],[39,8,65,13,"CombatProvider"],[39,22,65,27],[39,25,65,30,"CombatProvider"],[39,26,65,31],[40,4,65,33,"children"],[41,2,65,67],[41,3,65,68],[41,8,65,73],[42,4,65,73,"_s3"],[42,7,65,73],[43,4,66,2],[43,10,66,8],[44,6,66,10,"updateNinja"],[45,4,66,22],[45,5,66,23],[45,8,66,26],[45,12,66,26,"useGame"],[45,24,66,33],[45,25,66,33,"useGame"],[45,32,66,33],[45,34,66,34],[45,35,66,35],[46,4,68,2],[46,10,68,8],[46,11,68,9,"combatState"],[46,22,68,20],[46,24,68,22,"setCombatState"],[46,38,68,36],[46,39,68,37],[46,42,68,40],[46,46,68,40,"useState"],[46,52,68,48],[46,53,68,48,"useState"],[46,61,68,48],[46,63,68,62],[47,6,69,4,"isInCombat"],[47,16,69,14],[47,18,69,16],[47,23,69,21],[48,6,70,4,"currentTick"],[48,17,70,15],[48,19,70,17],[48,20,70,18],[49,6,71,4,"enemies"],[49,13,71,11],[49,15,71,13],[49,17,71,15],[50,6,72,4,"abilityManager"],[50,20,72,18],[50,22,72,20],[50,26,72,24,"AbilityManager"],[50,44,72,38],[50,45,72,38,"AbilityManager"],[50,59,72,38],[50,60,72,39],[50,61,72,40],[51,6,73,4,"statusEffects"],[51,19,73,17],[51,21,73,19],[51,25,73,23,"StatusEffectManager"],[51,44,73,42],[51,45,73,42,"StatusEffectManager"],[51,64,73,42],[51,65,73,43],[51,66,73,44],[52,6,74,4,"playerStats"],[52,17,74,15],[52,19,74,17],[53,8,75,6,"attack"],[53,14,75,12],[53,16,75,14],[53,18,75,16],[54,8,75,18],[55,8,76,6,"defense"],[55,15,76,13],[55,17,76,15],[55,18,76,16],[56,8,77,6,"health"],[56,14,77,12],[56,16,77,14],[56,19,77,17],[57,8,78,6,"maxHealth"],[57,17,78,15],[57,19,78,17],[57,22,78,20],[58,8,79,6,"critChance"],[58,18,79,16],[58,20,79,18],[58,21,79,19],[59,8,80,6,"critDamage"],[59,18,80,16],[59,20,80,18],[59,23,80,21],[60,8,81,6,"cooldownReduction"],[60,25,81,23],[60,27,81,25],[61,6,82,4],[62,4,83,2],[62,5,83,3],[62,6,83,4],[63,4,85,2],[63,10,85,8],[63,11,85,9,"projectiles"],[63,22,85,20],[63,24,85,22,"setProjectiles"],[63,38,85,36],[63,39,85,37],[63,42,85,40],[63,46,85,40,"useState"],[63,52,85,48],[63,53,85,48,"useState"],[63,61,85,48],[63,63,85,69],[63,65,85,71],[63,66,85,72],[64,4,86,2],[64,10,86,8],[64,11,86,9,"ninjaPosition"],[64,24,86,22],[64,26,86,24,"setNinjaPosition"],[64,42,86,40],[64,43,86,41],[64,46,86,44],[64,50,86,44,"useState"],[64,56,86,52],[64,57,86,52,"useState"],[64,65,86,52],[64,67,86,77],[65,6,86,79,"x"],[65,7,86,80],[65,9,86,82],[65,12,86,85],[66,6,86,87,"y"],[66,7,86,88],[66,9,86,90],[67,4,86,94],[67,5,86,95],[67,6,86,96],[67,7,86,97],[67,8,86,98],[69,4,88,2],[70,4,89,2],[70,10,89,8,"handleEnemyKill"],[70,25,89,23],[70,28,89,27,"enemy"],[70,33,89,45],[70,37,89,50],[71,6,90,4,"console"],[71,13,90,11],[71,14,90,12,"log"],[71,17,90,15],[71,18,90,16],[71,46,90,44,"enemy"],[71,51,90,49],[71,52,90,50,"maxHealth"],[71,61,90,59],[71,63,90,61],[71,64,90,62],[73,6,92,4],[74,6,93,4],[74,12,93,10,"xpReward"],[74,20,93,18],[74,23,93,21],[74,25,93,23],[75,6,94,4],[75,12,94,10,"goldReward"],[75,22,94,20],[75,25,94,23],[75,27,94,25],[76,6,96,4,"console"],[76,13,96,11],[76,14,96,12,"log"],[76,17,96,15],[76,18,96,16],[76,33,96,31,"xpReward"],[76,41,96,39],[76,52,96,50,"goldReward"],[76,62,96,60],[76,78,96,76],[76,79,96,77],[77,6,98,4,"updateNinja"],[77,17,98,15],[77,18,98,17,"prev"],[77,22,98,21],[77,26,98,26],[78,8,99,6,"console"],[78,15,99,13],[78,16,99,14,"log"],[78,19,99,17],[78,20,99,18],[78,37,99,35,"prev"],[78,41,99,39],[78,42,99,40,"experience"],[78,52,99,50],[78,64,99,62,"prev"],[78,68,99,66],[78,69,99,67,"experience"],[78,79,99,77],[78,82,99,80,"xpReward"],[78,90,99,88],[78,92,99,90],[78,93,99,91],[79,8,100,6],[79,15,100,13],[80,10,101,8,"experience"],[80,20,101,18],[80,22,101,20,"prev"],[80,26,101,24],[80,27,101,25,"experience"],[80,37,101,35],[80,40,101,38,"xpReward"],[80,48,101,46],[81,10,102,8,"gold"],[81,14,102,12],[81,16,102,14,"prev"],[81,20,102,18],[81,21,102,19,"gold"],[81,25,102,23],[81,28,102,26,"goldReward"],[82,8,103,6],[82,9,103,7],[83,6,104,4],[83,7,104,5],[83,8,104,6],[84,4,105,2],[84,5,105,3],[86,4,107,2],[87,4,108,2],[87,10,108,8,"handleCombatTick"],[87,26,108,24],[87,29,108,27,"handleCombatTick"],[87,30,108,27],[87,35,108,33],[88,6,108,33],[88,10,108,33,"_s2"],[88,13,108,33],[88,16,108,33,"$RefreshSig$"],[88,28,108,33],[89,6,109,4,"console"],[89,13,109,11],[89,14,109,12,"log"],[89,17,109,15],[89,18,109,16],[89,45,109,43],[89,46,109,44],[90,6,110,4,"_s2"],[90,9,110,4],[90,10,110,4,"setCombatState"],[90,24,110,18],[90,25,110,18,"_s2"],[90,28,110,18],[90,29,110,19,"prev"],[90,33,110,23],[90,37,110,27],[91,8,110,27,"_s2"],[91,11,110,27],[92,8,111,6],[92,14,111,12,"newTick"],[92,21,111,19],[92,24,111,22,"combatEngine"],[92,43,111,34],[92,44,111,34,"combatEngine"],[92,56,111,34],[92,57,111,35,"getCurrentTick"],[92,71,111,49],[92,72,111,50],[92,73,111,51],[93,8,112,6],[93,14,112,12,"newState"],[93,22,112,20],[93,25,112,23],[94,10,112,25],[94,13,112,28,"prev"],[94,17,112,32],[95,10,112,34,"currentTick"],[95,21,112,45],[95,23,112,47,"newTick"],[96,8,112,55],[96,9,112,56],[97,8,114,6],[97,12,114,10],[97,13,114,11,"newState"],[97,21,114,19],[97,22,114,20,"isInCombat"],[97,32,114,30],[97,34,114,32],[97,41,114,39,"newState"],[97,49,114,47],[99,8,116,6],[100,8,117,6,"newState"],[100,16,117,14],[100,17,117,15,"abilityManager"],[100,31,117,29],[100,32,117,30,"updateCooldowns"],[100,47,117,45],[100,48,117,46,"newTick"],[100,55,117,53],[100,56,117,54],[102,8,119,6],[103,8,120,6],[103,14,120,12,"effectResults"],[103,27,120,25],[103,30,120,28,"newState"],[103,38,120,36],[103,39,120,37,"statusEffects"],[103,52,120,50],[103,53,120,51,"processTick"],[103,64,120,62],[103,65,120,63,"newTick"],[103,72,120,70],[103,73,120,71],[105,8,122,6],[106,8,123,6,"effectResults"],[106,21,123,19],[106,22,123,20,"forEach"],[106,29,123,27],[106,30,123,28],[106,31,123,29,"results"],[106,38,123,36],[106,40,123,38,"entityId"],[106,48,123,46],[106,53,123,51],[107,10,124,8],[107,16,124,14,"enemyIndex"],[107,26,124,24],[107,29,124,27,"newState"],[107,37,124,35],[107,38,124,36,"enemies"],[107,45,124,43],[107,46,124,44,"findIndex"],[107,55,124,53],[107,56,124,54,"e"],[107,57,124,55],[107,61,124,59,"e"],[107,62,124,60],[107,63,124,61,"id"],[107,65,124,63],[107,70,124,68,"entityId"],[107,78,124,76],[107,79,124,77],[108,10,125,8],[108,14,125,12,"enemyIndex"],[108,24,125,22],[108,28,125,26],[108,29,125,27],[108,31,125,29],[109,12,126,10,"results"],[109,19,126,17],[109,20,126,18,"forEach"],[109,27,126,25],[109,28,126,26,"result"],[109,34,126,32],[109,38,126,36],[110,14,127,12,"newState"],[110,22,127,20],[110,23,127,21,"enemies"],[110,30,127,28],[110,31,127,29,"enemyIndex"],[110,41,127,39],[110,42,127,40],[110,43,127,41,"health"],[110,49,127,47],[110,53,127,51,"result"],[110,59,127,57],[110,60,127,58,"damage"],[110,66,127,64],[111,14,128,12,"newState"],[111,22,128,20],[111,23,128,21,"enemies"],[111,30,128,28],[111,31,128,29,"enemyIndex"],[111,41,128,39],[111,42,128,40],[111,43,128,41,"lastDamaged"],[111,54,128,52],[111,57,128,55,"newTick"],[111,64,128,62],[112,12,129,10],[112,13,129,11],[112,14,129,12],[113,10,130,8],[114,8,131,6],[114,9,131,7],[114,10,131,8],[116,8,133,6],[117,8,134,6],[117,13,134,11],[117,17,134,15,"i"],[117,18,134,16],[117,21,134,19],[117,22,134,20],[117,24,134,22,"i"],[117,25,134,23],[117,28,134,26],[117,29,134,27],[117,31,134,29,"i"],[117,32,134,30],[117,34,134,32],[117,36,134,34],[118,10,135,8],[118,14,135,12,"newState"],[118,22,135,20],[118,23,135,21,"abilityManager"],[118,37,135,35],[118,38,135,36,"isAbilityReady"],[118,52,135,50],[118,53,135,51,"i"],[118,54,135,52],[118,55,135,53],[118,59,135,57,"newState"],[118,67,135,65],[118,68,135,66,"enemies"],[118,75,135,73],[118,76,135,74,"length"],[118,82,135,80],[118,85,135,83],[118,86,135,84],[118,88,135,86],[119,12,136,10],[119,16,136,14,"newState"],[119,24,136,22],[119,25,136,23,"abilityManager"],[119,39,136,37],[119,40,136,38,"useAbility"],[119,50,136,48],[119,51,136,49,"i"],[119,52,136,50],[119,54,136,52,"newTick"],[119,61,136,59],[119,62,136,60],[119,64,136,62],[120,14,137,12,"castAbility"],[120,25,137,23],[120,26,137,24,"newState"],[120,34,137,32],[120,36,137,34,"i"],[120,37,137,35],[120,38,137,36],[121,12,138,10],[122,10,139,8],[123,8,140,6],[125,8,142,6],[126,8,143,6],[126,14,143,12,"deadEnemies"],[126,25,143,23],[126,28,143,26,"newState"],[126,36,143,34],[126,37,143,35,"enemies"],[126,44,143,42],[126,45,143,43,"filter"],[126,51,143,49],[126,52,143,50,"enemy"],[126,57,143,55],[126,61,143,59,"enemy"],[126,66,143,64],[126,67,143,65,"health"],[126,73,143,71],[126,77,143,75],[126,78,143,76],[126,79,143,77],[127,8,144,6,"deadEnemies"],[127,19,144,17],[127,20,144,18,"forEach"],[127,27,144,25],[127,28,144,26,"enemy"],[127,33,144,31],[127,37,144,35],[128,10,145,8,"handleEnemyKill"],[128,25,145,23],[128,26,145,24,"enemy"],[128,31,145,29],[128,32,145,30],[129,8,146,6],[129,9,146,7],[129,10,146,8],[131,8,148,6],[132,8,149,6,"newState"],[132,16,149,14],[132,17,149,15,"enemies"],[132,24,149,22],[132,27,149,25,"newState"],[132,35,149,33],[132,36,149,34,"enemies"],[132,43,149,41],[132,44,149,42,"filter"],[132,50,149,48],[132,51,149,49,"enemy"],[132,56,149,54],[132,60,149,58,"enemy"],[132,65,149,63],[132,66,149,64,"health"],[132,72,149,70],[132,75,149,73],[132,76,149,74],[132,77,149,75],[134,8,151,6],[135,8,152,6],[135,14,152,12,"MAX_ENEMIES"],[135,25,152,23],[135,28,152,26],[135,30,152,28],[136,8,153,6],[136,14,153,12,"MIN_SPAWN_DELAY"],[136,29,153,27],[136,32,153,30],[136,35,153,33],[136,36,153,34],[136,37,153,35],[137,8,154,6],[137,14,154,12,"now"],[137,17,154,15],[137,20,154,18,"Date"],[137,24,154,22],[137,25,154,23,"now"],[137,28,154,26],[137,29,154,27],[137,30,154,28],[139,8,156,6],[140,8,157,6],[140,12,157,10],[140,13,157,11,"newState"],[140,21,157,19],[140,22,157,20,"lastSpawnTime"],[140,35,157,33],[140,37,157,35],[141,10,158,8,"newState"],[141,18,158,16],[141,19,158,17,"lastSpawnTime"],[141,32,158,30],[141,35,158,33,"now"],[141,38,158,36],[142,8,159,6],[143,8,161,6,"console"],[143,15,161,13],[143,16,161,14,"log"],[143,19,161,17],[143,20,161,18],[143,53,161,51,"newState"],[143,61,161,59],[143,62,161,60,"enemies"],[143,69,161,67],[143,70,161,68,"length"],[143,76,161,74],[143,85,161,83,"MAX_ENEMIES"],[143,96,161,94],[143,98,161,96],[143,99,161,97],[144,8,162,6],[144,12,162,10,"newState"],[144,20,162,18],[144,21,162,19,"enemies"],[144,28,162,26],[144,29,162,27,"length"],[144,35,162,33],[144,38,162,36,"MAX_ENEMIES"],[144,49,162,47],[144,53,162,52,"now"],[144,56,162,55],[144,59,162,58,"newState"],[144,67,162,66],[144,68,162,67,"lastSpawnTime"],[144,81,162,80],[144,85,162,85,"MIN_SPAWN_DELAY"],[144,100,162,100],[144,102,162,102],[145,10,163,8,"console"],[145,17,163,15],[145,18,163,16,"log"],[145,21,163,19],[145,22,163,20],[145,43,163,41,"newState"],[145,51,163,49],[145,52,163,50,"enemies"],[145,59,163,57],[145,60,163,58,"length"],[145,66,163,64],[145,69,163,67],[145,70,163,68],[145,74,163,72,"MAX_ENEMIES"],[145,85,163,83],[145,87,163,85],[145,88,163,86],[146,10,164,8,"spawnTestEnemy"],[146,24,164,22],[146,25,164,23,"newState"],[146,33,164,31],[146,34,164,32],[147,10,165,8,"newState"],[147,18,165,16],[147,19,165,17,"lastSpawnTime"],[147,32,165,30],[147,35,165,33,"now"],[147,38,165,36],[148,8,166,6],[149,8,168,6],[149,15,168,13,"newState"],[149,23,168,21],[150,6,169,4],[150,7,169,5],[150,47,169,6],[151,4,170,2],[151,5,170,3],[153,4,172,2],[154,4,173,2],[154,10,173,8,"findClosestEnemyInternal"],[154,34,173,32],[154,37,173,36,"enemies"],[154,44,173,58],[154,48,173,83],[155,6,174,4],[155,10,174,8,"enemies"],[155,17,174,15],[155,18,174,16,"length"],[155,24,174,22],[155,29,174,27],[155,30,174,28],[155,32,174,30],[155,39,174,37],[155,43,174,41],[157,6,176,4],[158,6,177,4],[158,12,177,10,"SCREEN_WIDTH"],[158,24,177,22],[158,27,177,25],[158,30,177,28],[159,6,178,4],[159,12,178,10,"GAME_AREA_HEIGHT"],[159,28,178,26],[159,31,178,29],[159,34,178,32],[159,37,178,35],[159,40,178,38],[160,6,179,4],[160,12,179,10,"ninjaX"],[160,18,179,16],[160,21,179,19,"SCREEN_WIDTH"],[160,33,179,31],[160,36,179,34],[160,37,179,35],[161,6,180,4],[161,12,180,10,"ninjaY"],[161,18,180,16],[161,21,180,19,"GAME_AREA_HEIGHT"],[161,37,180,35],[161,40,180,38],[161,41,180,39],[162,6,182,4],[162,10,182,8,"closestEnemy"],[162,22,182,20],[162,25,182,23,"enemies"],[162,32,182,30],[162,33,182,31],[162,34,182,32],[162,35,182,33],[163,6,183,4],[163,10,183,8,"closestDistance"],[163,25,183,23],[163,28,183,26,"Infinity"],[163,36,183,34],[164,6,185,4,"enemies"],[164,13,185,11],[164,14,185,12,"forEach"],[164,21,185,19],[164,22,185,20,"enemy"],[164,27,185,25],[164,31,185,29],[165,8,186,6],[165,14,186,12,"distance"],[165,22,186,20],[165,25,186,23,"Math"],[165,29,186,27],[165,30,186,28,"sqrt"],[165,34,186,32],[165,35,187,8,"Math"],[165,39,187,12],[165,40,187,13,"pow"],[165,43,187,16],[165,44,187,17,"enemy"],[165,49,187,22],[165,50,187,23,"position"],[165,58,187,31],[165,59,187,32,"x"],[165,60,187,33],[165,63,187,36,"ninjaX"],[165,69,187,42],[165,71,187,44],[165,72,187,45],[165,73,187,46],[165,76,188,8,"Math"],[165,80,188,12],[165,81,188,13,"pow"],[165,84,188,16],[165,85,188,17,"enemy"],[165,90,188,22],[165,91,188,23,"position"],[165,99,188,31],[165,100,188,32,"y"],[165,101,188,33],[165,104,188,36,"ninjaY"],[165,110,188,42],[165,112,188,44],[165,113,188,45],[165,114,189,6],[165,115,189,7],[166,8,191,6],[166,12,191,10,"distance"],[166,20,191,18],[166,23,191,21,"closestDistance"],[166,38,191,36],[166,40,191,38],[167,10,192,8,"closestDistance"],[167,25,192,23],[167,28,192,26,"distance"],[167,36,192,34],[168,10,193,8,"closestEnemy"],[168,22,193,20],[168,25,193,23,"enemy"],[168,30,193,28],[169,8,194,6],[170,6,195,4],[170,7,195,5],[170,8,195,6],[171,6,197,4,"console"],[171,13,197,11],[171,14,197,12,"log"],[171,17,197,15],[171,18,197,16],[171,60,197,58,"closestDistance"],[171,75,197,73],[171,76,197,74,"toFixed"],[171,83,197,81],[171,84,197,82],[171,85,197,83],[171,86,197,84],[171,88,197,86],[171,89,197,87],[172,6,198,4],[172,13,198,11,"closestEnemy"],[172,25,198,23],[173,4,199,2],[173,5,199,3],[175,4,201,2],[176,4,202,2],[176,10,202,8,"findClosestEnemy"],[176,26,202,24],[176,29,202,27,"findClosestEnemy"],[176,30,202,27],[176,35,202,53],[177,6,203,4],[177,13,203,11,"findClosestEnemyInternal"],[177,37,203,35],[177,38,203,36,"combatState"],[177,49,203,47],[177,50,203,48,"enemies"],[177,57,203,55],[177,58,203,56],[178,4,204,2],[178,5,204,3],[180,4,206,2],[181,4,207,2],[181,10,207,8,"updateNinjaPosition"],[181,29,207,27],[181,32,207,31,"position"],[181,40,207,63],[181,44,207,68],[182,6,208,4,"setNinjaPosition"],[182,22,208,20],[182,23,208,21,"position"],[182,31,208,29],[182,32,208,30],[183,4,209,2],[183,5,209,3],[185,4,211,2],[186,4,212,2],[186,10,212,8,"handleProjectileHit"],[186,29,212,27],[186,32,212,31,"projectile"],[186,42,212,59],[186,46,212,64],[187,6,213,4,"console"],[187,13,213,11],[187,14,213,12,"log"],[187,17,213,15],[187,18,213,16],[187,35,213,33,"projectile"],[187,45,213,43],[187,46,213,44,"id"],[187,48,213,46],[187,62,213,60,"projectile"],[187,72,213,70],[187,73,213,71,"targetEnemyId"],[187,86,213,84],[187,94,213,92,"projectile"],[187,104,213,102],[187,105,213,103,"damage"],[187,111,213,109],[187,120,213,118],[187,121,213,119],[188,6,215,4,"setCombatState"],[188,20,215,18],[188,21,215,19,"prev"],[188,25,215,23],[188,29,215,27],[189,8,216,6],[189,14,216,12,"newState"],[189,22,216,20],[189,25,216,23],[190,10,216,25],[190,13,216,28,"prev"],[191,8,216,33],[191,9,216,34],[193,8,218,6],[194,8,219,6],[194,14,219,12,"enemyIndex"],[194,24,219,22],[194,27,219,25,"newState"],[194,35,219,33],[194,36,219,34,"enemies"],[194,43,219,41],[194,44,219,42,"findIndex"],[194,53,219,51],[194,54,219,52,"e"],[194,55,219,53],[194,59,219,57,"e"],[194,60,219,58],[194,61,219,59,"id"],[194,63,219,61],[194,68,219,66,"projectile"],[194,78,219,76],[194,79,219,77,"targetEnemyId"],[194,92,219,90],[194,93,219,91],[195,8,220,6],[195,12,220,10,"enemyIndex"],[195,22,220,20],[195,26,220,24],[195,27,220,25],[195,29,220,27],[196,10,221,8,"newState"],[196,18,221,16],[196,19,221,17,"enemies"],[196,26,221,24],[196,29,221,27],[196,30,221,28],[196,33,221,31,"newState"],[196,41,221,39],[196,42,221,40,"enemies"],[196,49,221,47],[196,50,221,48],[197,10,222,8,"newState"],[197,18,222,16],[197,19,222,17,"enemies"],[197,26,222,24],[197,27,222,25,"enemyIndex"],[197,37,222,35],[197,38,222,36],[197,41,222,39],[198,12,223,10],[198,15,223,13,"newState"],[198,23,223,21],[198,24,223,22,"enemies"],[198,31,223,29],[198,32,223,30,"enemyIndex"],[198,42,223,40],[198,43,223,41],[199,12,224,10,"health"],[199,18,224,16],[199,20,224,18,"newState"],[199,28,224,26],[199,29,224,27,"enemies"],[199,36,224,34],[199,37,224,35,"enemyIndex"],[199,47,224,45],[199,48,224,46],[199,49,224,47,"health"],[199,55,224,53],[199,58,224,56,"projectile"],[199,68,224,66],[199,69,224,67,"damage"],[199,75,224,73],[200,12,225,10,"lastDamaged"],[200,23,225,21],[200,25,225,23,"combatEngine"],[200,44,225,35],[200,45,225,35,"combatEngine"],[200,57,225,35],[200,58,225,36,"getCurrentTick"],[200,72,225,50],[200,73,225,51],[201,10,226,8],[201,11,226,9],[202,10,228,8,"console"],[202,17,228,15],[202,18,228,16,"log"],[202,21,228,19],[202,22,228,20],[202,34,228,32,"projectile"],[202,44,228,42],[202,45,228,43,"targetEnemyId"],[202,58,228,56],[202,70,228,68,"newState"],[202,78,228,76],[202,79,228,77,"enemies"],[202,86,228,84],[202,87,228,85,"enemyIndex"],[202,97,228,95],[202,98,228,96],[202,99,228,97,"health"],[202,105,228,103],[202,109,228,107,"newState"],[202,117,228,115],[202,118,228,116,"enemies"],[202,125,228,123],[202,126,228,124,"enemyIndex"],[202,136,228,134],[202,137,228,135],[202,138,228,136,"maxHealth"],[202,147,228,145],[202,149,228,147],[202,150,228,148],[203,8,229,6],[204,8,231,6],[204,15,231,13,"newState"],[204,23,231,21],[205,6,232,4],[205,7,232,5],[205,8,232,6],[207,6,234,4],[208,6,235,4,"setProjectiles"],[208,20,235,18],[208,21,235,19,"prev"],[208,25,235,23],[208,29,235,27,"prev"],[208,33,235,31],[208,34,235,32,"filter"],[208,40,235,38],[208,41,235,39,"p"],[208,42,235,40],[208,46,235,44,"p"],[208,47,235,45],[208,48,235,46,"id"],[208,50,235,48],[208,55,235,53,"projectile"],[208,65,235,63],[208,66,235,64,"id"],[208,68,235,66],[208,69,235,67],[208,70,235,68],[209,4,236,2],[209,5,236,3],[211,4,238,2],[212,4,239,2],[212,10,239,8,"castAbility"],[212,21,239,19],[212,24,239,22,"castAbility"],[212,25,239,23,"state"],[212,30,239,41],[212,32,239,43,"slotIndex"],[212,41,239,60],[212,46,239,65],[213,6,240,4],[213,12,240,10,"deck"],[213,16,240,14],[213,19,240,17,"state"],[213,24,240,22],[213,25,240,23,"abilityManager"],[213,39,240,37],[213,40,240,38,"getDeck"],[213,47,240,45],[213,48,240,46],[213,49,240,47],[214,6,241,4],[214,12,241,10,"ability"],[214,19,241,17],[214,22,241,20,"deck"],[214,26,241,24],[214,27,241,25,"slots"],[214,32,241,30],[214,33,241,31,"slotIndex"],[214,42,241,40],[214,43,241,41],[215,6,242,4],[215,10,242,8],[215,11,242,9,"ability"],[215,18,242,16],[215,20,242,18],[217,6,244,4],[218,6,245,4],[218,12,245,10,"target"],[218,18,245,16],[218,21,245,19,"findClosestEnemyInternal"],[218,45,245,43],[218,46,245,44,"state"],[218,51,245,49],[218,52,245,50,"enemies"],[218,59,245,57],[218,60,245,58],[219,6,246,4],[219,10,246,8],[219,11,246,9,"target"],[219,17,246,15],[219,19,246,17],[221,6,248,4],[222,6,249,4],[222,10,249,8,"damage"],[222,16,249,14],[222,19,249,17,"ability"],[222,26,249,24],[222,27,249,25,"stats"],[222,32,249,30],[222,33,249,31,"baseDamage"],[222,43,249,41],[224,6,251,4],[225,6,252,4,"deck"],[225,10,252,8],[225,11,252,9,"activeSynergies"],[225,26,252,24],[225,27,252,25,"forEach"],[225,34,252,32],[225,35,252,33,"synergy"],[225,42,252,40],[225,46,252,44],[226,8,253,6],[226,12,253,10,"synergy"],[226,19,253,17],[226,20,253,18,"bonus"],[226,25,253,23],[226,26,253,24,"damageBonus"],[226,37,253,35],[226,41,254,10,"synergy"],[226,48,254,17],[226,49,254,18,"requiredTags"],[226,61,254,30],[226,62,254,31,"some"],[226,66,254,35],[226,67,254,36,"tag"],[226,70,254,39],[226,74,254,43,"ability"],[226,81,254,50],[226,82,254,51,"tags"],[226,86,254,55],[226,87,254,56,"includes"],[226,95,254,64],[226,96,254,65,"tag"],[226,99,254,68],[226,100,254,69],[226,101,254,70],[226,103,254,72],[227,10,255,8,"damage"],[227,16,255,14],[227,20,255,19],[227,21,255,20],[227,24,255,23,"synergy"],[227,31,255,30],[227,32,255,31,"bonus"],[227,37,255,36],[227,38,255,37,"damageBonus"],[227,49,255,48],[227,52,255,51],[227,55,255,55],[228,8,256,6],[229,6,257,4],[229,7,257,5],[229,8,257,6],[231,6,259,4],[232,6,260,4],[232,12,260,10,"damageResult"],[232,24,260,22],[232,27,260,25,"DamageCalculator"],[232,46,260,41],[232,47,260,41,"DamageCalculator"],[232,63,260,41],[232,64,260,42,"calculateDamage"],[232,79,260,57],[232,80,260,58,"damage"],[232,86,260,64],[232,88,260,66,"state"],[232,93,260,71],[232,94,260,72,"playerStats"],[232,105,260,83],[232,107,260,85,"target"],[232,113,260,91],[232,114,260,92,"stats"],[232,119,260,97],[232,120,260,98],[234,6,262,4],[235,6,263,4,"createProjectile"],[235,22,263,20],[235,23,263,21,"target"],[235,29,263,27],[235,31,263,29,"damageResult"],[235,43,263,41],[235,44,263,42,"damage"],[235,50,263,48],[235,52,263,50,"ninjaPosition"],[235,65,263,63],[235,66,263,64],[237,6,265,4],[238,6,266,4],[238,10,266,8,"ability"],[238,17,266,15],[238,18,266,16,"effects"],[238,25,266,23],[238,26,266,24,"includes"],[238,34,266,32],[238,35,266,33],[238,40,266,38],[238,41,266,39],[238,45,266,43,"ability"],[238,52,266,50],[238,53,266,51,"stats"],[238,58,266,56],[238,59,266,57,"duration"],[238,67,266,65],[238,69,266,67],[239,8,267,6,"state"],[239,13,267,11],[239,14,267,12,"statusEffects"],[239,27,267,25],[239,28,267,26,"addEffect"],[239,37,267,35],[239,38,267,36,"target"],[239,44,267,42],[239,45,267,43,"id"],[239,47,267,45],[239,49,267,47],[240,10,268,8,"id"],[240,12,268,10],[240,14,268,12],[240,17,268,15,"ability"],[240,24,268,22],[240,25,268,23,"id"],[240,27,268,25],[240,33,268,31],[241,10,269,8,"type"],[241,14,269,12],[241,16,269,14],[241,21,269,19],[242,10,270,8,"remainingTicks"],[242,24,270,22],[242,26,270,24,"Math"],[242,30,270,28],[242,31,270,29,"floor"],[242,36,270,34],[242,37,270,35,"ability"],[242,44,270,42],[242,45,270,43,"stats"],[242,50,270,48],[242,51,270,49,"duration"],[242,59,270,57],[242,62,270,60],[242,64,270,62],[242,65,270,63],[243,10,270,65],[244,10,271,8,"tickInterval"],[244,22,271,20],[244,24,271,22],[244,26,271,24],[245,10,271,26],[246,10,272,8,"lastTick"],[246,18,272,16],[246,20,272,18,"state"],[246,25,272,23],[246,26,272,24,"currentTick"],[246,37,272,35],[247,10,273,8,"value"],[247,15,273,13],[247,17,273,15,"Math"],[247,21,273,19],[247,22,273,20,"floor"],[247,27,273,25],[247,28,273,26,"damage"],[247,34,273,32],[247,37,273,35],[247,40,273,38],[247,41,273,39],[248,10,273,41],[249,10,274,8,"stackable"],[249,19,274,17],[249,21,274,19],[250,8,275,6],[250,9,275,7],[250,10,275,8],[251,6,276,4],[252,6,278,4,"console"],[252,13,278,11],[252,14,278,12,"log"],[252,17,278,15],[252,18,278,16],[252,24,278,22,"ability"],[252,31,278,29],[252,32,278,30,"name"],[252,36,278,34],[252,69,278,67,"damageResult"],[252,81,278,79],[252,82,278,80,"damage"],[252,88,278,86],[252,98,278,96,"damageResult"],[252,110,278,108],[252,111,278,109,"isCritical"],[252,121,278,119],[252,124,278,122],[252,134,278,132],[252,137,278,135],[252,139,278,137],[252,141,278,139],[252,142,278,140],[253,4,279,2],[253,5,279,3],[255,4,281,2],[256,4,282,2],[256,10,282,8,"createProjectile"],[256,26,282,24],[256,29,282,27,"createProjectile"],[256,30,282,28,"targetEnemy"],[256,41,282,52],[256,43,282,54,"damage"],[256,49,282,68],[256,51,282,70,"ninjaPos"],[256,59,282,103],[256,64,282,108],[257,6,283,4],[257,12,283,10,"SCREEN_WIDTH"],[257,24,283,22],[257,27,283,25],[257,30,283,28],[258,6,284,4],[258,12,284,10,"GAME_AREA_HEIGHT"],[258,28,284,26],[258,31,284,29],[258,34,284,32],[258,37,284,35],[258,40,284,38],[259,6,285,4],[259,12,285,10,"NINJA_SIZE"],[259,22,285,20],[259,25,285,23],[259,27,285,25],[261,6,287,4],[262,6,288,4],[262,12,288,10,"ninjaX"],[262,18,288,16],[262,21,288,19,"ninjaPos"],[262,29,288,27],[262,32,288,30,"ninjaPos"],[262,40,288,38],[262,41,288,39,"x"],[262,42,288,40],[262,45,288,43,"NINJA_SIZE"],[262,55,288,53],[262,58,288,56],[262,59,288,57],[262,62,288,60,"SCREEN_WIDTH"],[262,74,288,72],[262,77,288,75],[262,78,288,76],[263,6,289,4],[263,12,289,10,"ninjaY"],[263,18,289,16],[263,21,289,19,"ninjaPos"],[263,29,289,27],[263,32,289,30,"ninjaPos"],[263,40,289,38],[263,41,289,39,"y"],[263,42,289,40],[263,45,289,43,"NINJA_SIZE"],[263,55,289,53],[263,58,289,56],[263,59,289,57],[263,62,289,60,"GAME_AREA_HEIGHT"],[263,78,289,76],[263,81,289,79],[263,82,289,80],[264,6,290,4],[264,12,290,10,"ENEMY_SIZE"],[264,22,290,20],[264,25,290,23],[264,27,290,25],[265,6,292,4],[265,12,292,10,"projectile"],[265,22,292,38],[265,25,292,41],[266,8,293,6,"id"],[266,10,293,8],[266,12,293,10],[266,20,293,18,"Date"],[266,24,293,22],[266,25,293,23,"now"],[266,28,293,26],[266,29,293,27],[266,30,293,28],[266,34,293,32,"Math"],[266,38,293,36],[266,39,293,37,"random"],[266,45,293,43],[266,46,293,44],[266,47,293,45],[266,49,293,47],[267,8,294,6,"x"],[267,9,294,7],[267,11,294,9,"ninjaX"],[267,17,294,15],[268,8,295,6,"y"],[268,9,295,7],[268,11,295,9,"ninjaY"],[268,17,295,15],[269,8,296,6,"targetX"],[269,15,296,13],[269,17,296,15,"targetEnemy"],[269,28,296,26],[269,29,296,27,"position"],[269,37,296,35],[269,38,296,36,"x"],[269,39,296,37],[269,42,296,40,"ENEMY_SIZE"],[269,52,296,50],[269,55,296,53],[269,56,296,54],[270,8,297,6,"targetY"],[270,15,297,13],[270,17,297,15,"targetEnemy"],[270,28,297,26],[270,29,297,27,"position"],[270,37,297,35],[270,38,297,36,"y"],[270,39,297,37],[270,42,297,40,"ENEMY_SIZE"],[270,52,297,50],[270,55,297,53],[270,56,297,54],[271,8,298,6,"targetEnemyId"],[271,21,298,19],[271,23,298,21,"targetEnemy"],[271,34,298,32],[271,35,298,33,"id"],[271,37,298,35],[272,8,299,6,"damage"],[272,14,299,12],[272,16,299,14,"damage"],[272,22,299,20],[273,8,300,6,"startTime"],[273,17,300,15],[273,19,300,17,"Date"],[273,23,300,21],[273,24,300,22,"now"],[273,27,300,25],[273,28,300,26],[273,29,300,27],[274,8,301,6,"duration"],[274,16,301,14],[274,18,301,16],[274,21,301,19],[274,22,301,21],[275,6,302,4],[275,7,302,5],[276,6,304,4,"console"],[276,13,304,11],[276,14,304,12,"log"],[276,17,304,15],[276,18,304,16],[276,53,304,51,"targetEnemy"],[276,64,304,62],[276,65,304,63,"id"],[276,67,304,65],[276,75,304,73,"damage"],[276,81,304,79],[276,90,304,88],[276,91,304,89],[277,6,305,4,"console"],[277,13,305,11],[277,14,305,12,"log"],[277,17,305,15],[277,18,305,16],[277,53,305,51,"ninjaX"],[277,59,305,57],[277,64,305,62,"ninjaY"],[277,70,305,68],[277,87,305,85,"projectile"],[277,97,305,95],[277,98,305,96,"targetX"],[277,105,305,103],[277,110,305,108,"projectile"],[277,120,305,118],[277,121,305,119,"targetY"],[277,128,305,126],[277,131,305,129],[277,132,305,130],[278,6,307,4,"setProjectiles"],[278,20,307,18],[278,21,307,19,"prev"],[278,25,307,23],[278,29,307,27],[278,30,307,28],[278,33,307,31,"prev"],[278,37,307,35],[278,39,307,37,"projectile"],[278,49,307,47],[278,50,307,48],[278,51,307,49],[280,6,309,4],[281,6,310,4,"setTimeout"],[281,16,310,14],[281,17,310,15],[281,23,310,21],[282,8,311,6,"handleProjectileHit"],[282,27,311,25],[282,28,311,26,"projectile"],[282,38,311,36],[282,39,311,37],[283,6,312,4],[283,7,312,5],[283,9,312,7],[283,12,312,10],[283,13,312,11],[284,4,313,2],[284,5,313,3],[286,4,315,2],[287,4,316,2],[287,10,316,8,"spawnTestEnemy"],[287,24,316,22],[287,27,316,26,"state"],[287,32,316,44],[287,36,316,49],[288,6,317,4],[289,6,318,4],[289,12,318,10,"SCREEN_WIDTH"],[289,24,318,22],[289,27,318,25],[289,30,318,28],[289,31,318,29],[289,32,318,30],[290,6,319,4],[290,12,319,10,"GAME_AREA_HEIGHT"],[290,28,319,26],[290,31,319,29],[290,34,319,32],[290,37,319,35],[290,40,319,38],[290,41,319,39],[290,42,319,40],[291,6,320,4],[291,12,320,10,"ENEMY_SIZE"],[291,22,320,20],[291,25,320,23],[291,27,320,25],[293,6,322,4],[294,6,323,4],[294,12,323,10,"x"],[294,13,323,11],[294,16,323,14,"Math"],[294,20,323,18],[294,21,323,19,"random"],[294,27,323,25],[294,28,323,26],[294,29,323,27],[294,33,323,31,"SCREEN_WIDTH"],[294,45,323,43],[294,48,323,46,"ENEMY_SIZE"],[294,58,323,56],[294,61,323,59],[294,62,323,60],[294,63,323,61],[294,66,323,64,"ENEMY_SIZE"],[294,76,323,74],[294,77,323,75],[294,78,323,76],[295,6,324,4],[295,12,324,10,"y"],[295,13,324,11],[295,16,324,14,"Math"],[295,20,324,18],[295,21,324,19,"random"],[295,27,324,25],[295,28,324,26],[295,29,324,27],[295,33,324,31,"GAME_AREA_HEIGHT"],[295,49,324,47],[295,52,324,50,"ENEMY_SIZE"],[295,62,324,60],[295,65,324,63],[295,66,324,64],[295,67,324,65],[295,70,324,68,"ENEMY_SIZE"],[295,80,324,78],[295,81,324,79],[295,82,324,80],[297,6,326,4],[297,12,326,10,"enemy"],[297,17,326,28],[297,20,326,31],[298,8,327,6,"id"],[298,10,327,8],[298,12,327,10],[298,21,327,19],[298,23,327,21,"enemyCounter"],[298,35,327,33],[298,37,327,35],[299,8,328,6,"name"],[299,12,328,10],[299,14,328,12],[299,24,328,22],[300,8,329,6,"health"],[300,14,329,12],[300,16,329,14],[300,19,329,17],[301,8,330,6,"maxHealth"],[301,17,330,15],[301,19,330,17],[301,22,330,20],[302,8,331,6,"stats"],[302,13,331,11],[302,15,331,13],[303,10,332,8,"attack"],[303,16,332,14],[303,18,332,16],[303,20,332,18],[304,10,333,8,"defense"],[304,17,333,15],[304,19,333,17],[304,21,333,19],[305,10,334,8,"health"],[305,16,334,14],[305,18,334,16],[305,21,334,19],[306,10,335,8,"maxHealth"],[306,19,335,17],[306,21,335,19],[306,24,335,22],[307,10,336,8,"critChance"],[307,20,336,18],[307,22,336,20],[307,23,336,21],[308,10,337,8,"critDamage"],[308,20,337,18],[308,22,337,20],[308,25,337,23],[309,10,338,8,"cooldownReduction"],[309,27,338,25],[309,29,338,27],[310,8,339,6],[310,9,339,7],[311,8,340,6,"position"],[311,16,340,14],[311,18,340,16],[312,10,340,18,"x"],[312,11,340,19],[313,10,340,21,"y"],[314,8,340,23],[314,9,340,24],[315,8,341,6,"lastDamaged"],[315,19,341,17],[315,21,341,19],[316,6,342,4],[316,7,342,5],[317,6,344,4,"state"],[317,11,344,9],[317,12,344,10,"enemies"],[317,19,344,17],[317,20,344,18,"push"],[317,24,344,22],[317,25,344,23,"enemy"],[317,30,344,28],[317,31,344,29],[318,4,345,2],[318,5,345,3],[320,4,347,2],[321,4,348,2],[321,10,348,8,"startCombat"],[321,21,348,19],[321,24,348,22,"startCombat"],[321,25,348,22],[321,30,348,28],[322,6,349,4,"console"],[322,13,349,11],[322,14,349,12,"log"],[322,17,349,15],[322,18,349,16],[322,63,349,61],[322,64,349,62],[323,6,350,4,"setCombatState"],[323,20,350,18],[323,21,350,19,"prev"],[323,25,350,23],[323,30,350,28],[324,8,350,30],[324,11,350,33,"prev"],[324,15,350,37],[325,8,350,39,"isInCombat"],[325,18,350,49],[325,20,350,51],[326,6,350,56],[326,7,350,57],[326,8,350,58],[326,9,350,59],[328,6,352,4],[329,6,353,4,"combatEngine"],[329,25,353,16],[329,26,353,16,"combatEngine"],[329,38,353,16],[329,39,353,17,"addTickCallback"],[329,54,353,32],[329,55,353,33,"handleCombatTick"],[329,71,353,49],[329,72,353,50],[330,6,354,4,"console"],[330,13,354,11],[330,14,354,12,"log"],[330,17,354,15],[330,18,354,16],[330,62,354,60],[330,63,354,61],[332,6,356,4],[333,6,357,4,"combatEngine"],[333,25,357,16],[333,26,357,16,"combatEngine"],[333,38,357,16],[333,39,357,17,"start"],[333,44,357,22],[333,45,357,23],[333,46,357,24],[334,4,358,2],[334,5,358,3],[336,4,360,2],[337,4,361,2],[337,10,361,8,"stopCombat"],[337,20,361,18],[337,23,361,21,"stopCombat"],[337,24,361,21],[337,29,361,27],[338,6,362,4,"setCombatState"],[338,20,362,18],[338,21,362,19,"prev"],[338,25,362,23],[338,30,362,28],[339,8,362,30],[339,11,362,33,"prev"],[339,15,362,37],[340,8,362,39,"isInCombat"],[340,18,362,49],[340,20,362,51],[341,6,362,57],[341,7,362,58],[341,8,362,59],[341,9,362,60],[342,6,363,4,"combatEngine"],[342,25,363,16],[342,26,363,16,"combatEngine"],[342,38,363,16],[342,39,363,17,"removeTickCallback"],[342,57,363,35],[342,58,363,36,"handleCombatTick"],[342,74,363,52],[342,75,363,53],[343,4,364,2],[343,5,364,3],[345,4,366,2],[346,4,367,2],[346,10,367,8,"equipAbility"],[346,22,367,20],[346,25,367,23,"equipAbility"],[346,26,367,24,"abilityId"],[346,35,367,41],[346,37,367,43,"slotIndex"],[346,46,367,60],[346,51,367,74],[347,6,368,4],[347,13,368,11,"combatState"],[347,24,368,22],[347,25,368,23,"abilityManager"],[347,39,368,37],[347,40,368,38,"equipAbility"],[347,52,368,50],[347,53,368,51,"abilityId"],[347,62,368,60],[347,64,368,62,"slotIndex"],[347,73,368,71],[347,74,368,72],[348,4,369,2],[348,5,369,3],[349,4,371,2],[349,10,371,8,"getDeck"],[349,17,371,15],[349,20,371,18,"getDeck"],[349,21,371,18],[349,26,371,24],[350,6,372,4],[350,13,372,11,"combatState"],[350,24,372,22],[350,25,372,23,"abilityManager"],[350,39,372,37],[350,40,372,38,"getDeck"],[350,47,372,45],[350,48,372,46],[350,49,372,47],[351,4,373,2],[351,5,373,3],[352,4,375,2],[352,10,375,8,"getAvailableAbilities"],[352,31,375,29],[352,34,375,32,"getAvailableAbilities"],[352,35,375,32],[352,40,375,38],[353,6,376,4],[353,13,376,11,"combatState"],[353,24,376,22],[353,25,376,23,"abilityManager"],[353,39,376,37],[353,40,376,38,"getAvailableAbilities"],[353,61,376,59],[353,62,376,60],[353,63,376,61],[354,4,377,2],[354,5,377,3],[355,4,379,2],[355,10,379,8,"upgradeAbility"],[355,24,379,22],[355,27,379,26,"abilityId"],[355,36,379,43],[355,40,379,57],[356,6,380,4],[356,13,380,11,"combatState"],[356,24,380,22],[356,25,380,23,"abilityManager"],[356,39,380,37],[356,40,380,38,"upgradeAbility"],[356,54,380,52],[356,55,380,53,"abilityId"],[356,64,380,62],[356,65,380,63],[357,4,381,2],[357,5,381,3],[359,4,383,2],[360,4,384,2],[360,10,384,8,"clearAllEnemies"],[360,25,384,23],[360,28,384,26,"clearAllEnemies"],[360,29,384,26],[360,34,384,32],[361,6,385,4,"console"],[361,13,385,11],[361,14,385,12,"log"],[361,17,385,15],[361,18,385,16],[361,67,385,65],[361,68,385,66],[362,6,386,4,"setCombatState"],[362,20,386,18],[362,21,386,19,"prev"],[362,25,386,23],[362,30,386,28],[363,8,387,6],[363,11,387,9,"prev"],[363,15,387,13],[364,8,388,6,"enemies"],[364,15,388,13],[364,17,388,15],[365,6,389,4],[365,7,389,5],[365,8,389,6],[365,9,389,7],[366,4,390,2],[366,5,390,3],[368,4,392,2],[369,4,393,2],[369,10,393,8,"triggerLevelUpExplosion"],[369,33,393,31],[369,36,393,34,"triggerLevelUpExplosion"],[369,37,393,34],[369,42,393,40],[370,6,394,4,"console"],[370,13,394,11],[370,14,394,12,"log"],[370,17,394,15],[370,18,394,16],[370,70,394,68],[370,71,394,69],[371,6,396,4,"setCombatState"],[371,20,396,18],[371,21,396,19,"prev"],[371,25,396,23],[371,29,396,27],[372,8,397,6],[373,8,398,6],[373,14,398,12,"enemyCount"],[373,24,398,22],[373,27,398,25,"prev"],[373,31,398,29],[373,32,398,30,"enemies"],[373,39,398,37],[373,40,398,38,"length"],[373,46,398,44],[374,8,399,6],[374,14,399,12,"explosionXP"],[374,25,399,23],[374,28,399,26,"enemyCount"],[374,38,399,36],[374,41,399,39],[374,43,399,41],[374,44,399,42],[374,45,399,43],[375,8,400,6],[375,14,400,12,"explosionGold"],[375,27,400,25],[375,30,400,28,"enemyCount"],[375,40,400,38],[375,43,400,41],[375,44,400,42],[375,45,400,43],[375,46,400,44],[377,8,402,6,"console"],[377,15,402,13],[377,16,402,14,"log"],[377,19,402,17],[377,20,402,18],[377,44,402,42,"enemyCount"],[377,54,402,52],[377,76,402,74,"explosionXP"],[377,87,402,85],[377,98,402,96,"explosionGold"],[377,111,402,109],[377,118,402,116],[377,119,402,117],[379,8,404,6],[380,8,405,6],[380,12,405,10,"explosionXP"],[380,23,405,21],[380,26,405,24],[380,27,405,25],[380,29,405,27],[381,10,406,8,"updateNinja"],[381,21,406,19],[381,22,406,21,"ninja"],[381,27,406,26],[381,32,406,32],[382,12,407,10,"experience"],[382,22,407,20],[382,24,407,22,"ninja"],[382,29,407,27],[382,30,407,28,"experience"],[382,40,407,38],[382,43,407,41,"explosionXP"],[382,54,407,52],[383,12,408,10,"gold"],[383,16,408,14],[383,18,408,16,"ninja"],[383,23,408,21],[383,24,408,22,"gold"],[383,28,408,26],[383,31,408,29,"explosionGold"],[384,10,409,8],[384,11,409,9],[384,12,409,10],[384,13,409,11],[385,8,410,6],[387,8,412,6],[388,8,413,6],[389,8,414,6],[389,14,414,12,"damagedEnemies"],[389,28,414,26],[389,31,414,29,"prev"],[389,35,414,33],[389,36,414,34,"enemies"],[389,43,414,41],[389,44,414,42,"map"],[389,47,414,45],[389,48,414,46,"enemy"],[389,53,414,51],[389,58,414,56],[390,10,415,8],[390,13,415,11,"enemy"],[390,18,415,16],[391,10,416,8,"health"],[391,16,416,14],[391,18,416,16],[391,19,416,17],[392,10,416,19],[393,10,417,8,"lastDamaged"],[393,21,417,19],[393,23,417,21,"combatEngine"],[393,42,417,33],[393,43,417,33,"combatEngine"],[393,55,417,33],[393,56,417,34,"getCurrentTick"],[393,70,417,48],[393,71,417,49],[394,8,418,6],[394,9,418,7],[394,10,418,8],[394,11,418,9],[395,8,420,6],[395,15,420,13],[396,10,421,8],[396,13,421,11,"prev"],[396,17,421,15],[397,10,422,8,"enemies"],[397,17,422,15],[397,19,422,17,"damagedEnemies"],[398,8,423,6],[398,9,423,7],[399,6,424,4],[399,7,424,5],[399,8,424,6],[400,4,425,2],[400,5,425,3],[402,4,427,2],[403,4,428,2],[403,8,428,2,"useEffect"],[403,14,428,11],[403,15,428,11,"useEffect"],[403,24,428,11],[403,26,428,12],[403,32,428,18],[404,6,429,4,"combatEngine"],[404,25,429,16],[404,26,429,16,"combatEngine"],[404,38,429,16],[404,39,429,17,"start"],[404,44,429,22],[404,45,429,23],[404,46,429,24],[406,6,431,4],[407,6,432,4,"combatState"],[407,17,432,15],[407,18,432,16,"abilityManager"],[407,32,432,30],[407,33,432,31,"equipAbility"],[407,45,432,43],[407,46,432,44],[407,62,432,60],[407,64,432,62],[407,65,432,63],[407,66,432,64],[408,6,433,4,"combatState"],[408,17,433,15],[408,18,433,16,"abilityManager"],[408,32,433,30],[408,33,433,31,"equipAbility"],[408,45,433,43],[408,46,433,44],[408,61,433,59],[408,63,433,61],[408,64,433,62],[408,65,433,63],[409,6,435,4],[409,13,435,11],[409,19,435,17],[410,8,436,6,"combatEngine"],[410,27,436,18],[410,28,436,18,"combatEngine"],[410,40,436,18],[410,41,436,19,"stop"],[410,45,436,23],[410,46,436,24],[410,47,436,25],[411,6,437,4],[411,7,437,5],[412,4,438,2],[412,5,438,3],[412,7,438,5],[412,9,438,7],[412,10,438,8],[413,4,440,2],[413,10,440,8,"contextValue"],[413,22,440,39],[413,25,440,42],[414,6,441,4,"combatState"],[414,17,441,15],[415,6,442,4,"projectiles"],[415,17,442,15],[416,6,443,4,"startCombat"],[416,17,443,15],[417,6,444,4,"stopCombat"],[417,16,444,14],[418,6,445,4,"equipAbility"],[418,18,445,16],[419,6,446,4,"getDeck"],[419,13,446,11],[420,6,447,4,"getAvailableAbilities"],[420,27,447,25],[421,6,448,4,"upgradeAbility"],[421,20,448,18],[422,6,449,4,"clearAllEnemies"],[422,21,449,19],[423,6,450,4,"triggerLevelUpExplosion"],[423,29,450,27],[424,6,451,4,"findClosestEnemy"],[424,22,451,20],[425,6,452,4,"updateNinjaPosition"],[426,4,453,2],[426,5,453,3],[427,4,455,2],[427,24,456,4],[427,28,456,4,"_reactJsxDevRuntime"],[427,47,456,4],[427,48,456,4,"jsxDEV"],[427,54,456,4],[427,56,456,5,"CombatContext"],[427,69,456,18],[427,70,456,19,"Provider"],[427,78,456,27],[428,6,456,28,"value"],[428,11,456,33],[428,13,456,35,"contextValue"],[428,25,456,48],[429,6,456,48,"children"],[429,14,456,48],[429,16,457,7,"children"],[430,4,457,15],[431,6,457,15,"fileName"],[431,14,457,15],[431,16,457,15,"_jsxFileName"],[431,28,457,15],[432,6,457,15,"lineNumber"],[432,16,457,15],[433,6,457,15,"columnNumber"],[433,18,457,15],[434,4,457,15],[434,11,458,28],[434,12,458,29],[435,2,460,0],[435,3,460,1],[436,2,460,2,"_s3"],[436,5,460,2],[436,6,65,13,"CombatProvider"],[436,20,65,27],[437,4,65,27],[437,12,66,26,"useGame"],[437,24,66,33],[437,25,66,33,"useGame"],[437,32,66,33],[438,2,66,33],[439,2,66,33,"_c"],[439,4,66,33],[439,7,65,13,"CombatProvider"],[439,21,65,27],[440,2,65,27],[440,6,65,27,"_c"],[440,8,65,27],[441,2,65,27,"$RefreshReg$"],[441,14,65,27],[441,15,65,27,"_c"],[441,17,65,27],[442,0,65,27],[442,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","updateNinja$argument_0","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","findClosestEnemyInternal","enemies.forEach$argument_0","findClosestEnemy","updateNinjaPosition","handleProjectileHit","setProjectiles$argument_0","prev.filter$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","createProjectile","setTimeout$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","clearAllEnemies","triggerLevelUpExplosion","prev.enemies.map$argument_0","useEffect$argument_0","<anonymous>"],"mappings":"AAA;yBCsD;CDM;8BEI;0BCwB;gBCS;KDM;GDC;2BGG;mBCE;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;0BKC;OLE;iDIG,yBJ;KDoB;GHC;mCUG;oBCY;KDU;GVI;2BYG;GZE;8BaG;GbE;8BcG;mBVG;oDEI,sCF;KUa;mBCG,oBC,2BD,CD;GdC;sBiBG;iCCa;oCCE,iCD;KDG;GjBsB;2BoBG;mBLyB,6BK;eCG;KDE;GpBC;yBsBG;GtB6B;sBuBG;mBnBE,uCmB;GvBQ;qBwBG;mBpBC,wCoB;GxBE;uByBG;GzBE;kB0BE;G1BE;gC2BE;G3BE;yB4BE;G5BE;0B6BG;mBzBE;MyBG;G7BC;kC8BG;mB1BG;oBFU;UEG;8C2BK;Q3BI;K0BM;G9BC;YgCG;WCO;KDE;GhCC;CFsB"},"hasCjsExports":false},"type":"js/module"}]}