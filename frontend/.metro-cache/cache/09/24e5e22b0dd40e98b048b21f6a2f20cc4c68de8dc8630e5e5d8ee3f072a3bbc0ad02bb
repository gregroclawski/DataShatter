{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('üîß AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('üîç AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Memoize the combined loading state to prevent infinite re-renders\n    const actualIsLoading = React.default.useMemo(() => {\n      return isLoading || !minLoadingComplete;\n    }, [isLoading, minLoadingComplete]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('üïê Starting 8-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('‚è∞ 8-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 8000);\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Start authentication check on app start  \n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = React.default.useCallback(async () => {\n      try {\n        console.log('üîç Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('‚úÖ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('‚úÖ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('üì± Mobile environment - no localStorage available');\n          }\n        }\n        console.log('üîç Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('üîë Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('‚úÖ Auto-login successful!');\n            } else {\n              console.log('‚ùå Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (typeof window !== 'undefined' && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('‚ùå Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('üîç No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('üèÅ Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    }, []); // Remove login dependency to fix circular reference\n\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('üîç AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading: actualIsLoading,\n        // Use combined loading state\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"m22AX02pg+BQSc2r9AuYrdG04sk=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":423,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,414,0,"Object"],[21,8,414,0],[21,9,414,0,"defineProperty"],[21,23,414,0],[21,24,414,0,"exports"],[21,31,414,0],[22,4,414,0,"enumerable"],[22,14,414,0],[23,4,414,0,"get"],[23,7,414,0],[23,18,414,0,"get"],[23,19,414,0],[24,6,414,0],[24,13,414,0,"useAuth"],[24,20,414,0],[25,4,414,0],[26,2,414,0],[27,2,420,2],[27,6,420,2,"_expoVirtualEnv"],[27,21,420,2],[27,24,420,2,"require"],[27,31,420,2],[27,32,420,2,"_dependencyMap"],[27,46,420,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,1,0],[29,6,1,0,"React"],[29,11,1,0],[29,14,1,0,"_interopDefault"],[29,29,1,0],[29,30,1,0,"_react"],[29,36,1,0],[30,2,2,0],[30,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,42,2,0],[30,45,2,0,"require"],[30,52,2,0],[30,53,2,0,"_dependencyMap"],[30,67,2,0],[31,2,2,0],[31,6,2,0,"AsyncStorage"],[31,18,2,0],[31,21,2,0,"_interopDefault"],[31,36,2,0],[31,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[31,73,2,0],[32,2,4,0],[32,6,4,0,"_expoConstants"],[32,20,4,0],[32,23,4,0,"require"],[32,30,4,0],[32,31,4,0,"_dependencyMap"],[32,45,4,0],[33,2,4,0],[33,6,4,0,"Constants"],[33,15,4,0],[33,18,4,0,"_interopDefault"],[33,33,4,0],[33,34,4,0,"_expoConstants"],[33,48,4,0],[34,2,4,39],[34,6,4,39,"_reactJsxDevRuntime"],[34,25,4,39],[34,28,4,39,"require"],[34,35,4,39],[34,36,4,39,"_dependencyMap"],[34,50,4,39],[35,2,27,0],[35,8,27,6,"AuthContext"],[35,19,27,17],[35,35,27,20],[35,39,27,20,"createContext"],[35,45,27,33],[35,46,27,33,"createContext"],[35,59,27,33],[35,61,27,63,"undefined"],[35,70,27,72],[35,71,27,73],[37,2,29,0],[38,2,30,0],[38,8,30,6,"getBackendUrl"],[38,21,30,19],[38,24,30,22,"getBackendUrl"],[38,25,30,22],[38,30,30,28],[39,4,31,2],[39,8,31,6],[39,15,31,13,"window"],[39,21,31,19],[39,26,31,24],[39,37,31,35],[39,39,31,37],[40,6,32,4],[40,12,32,10,"currentHost"],[40,23,32,21],[40,26,32,24,"window"],[40,32,32,30],[40,33,32,31,"location"],[40,41,32,39],[40,42,32,40,"hostname"],[40,50,32,48],[41,6,33,4],[41,12,33,10,"currentProtocol"],[41,27,33,25],[41,30,33,28,"window"],[41,36,33,34],[41,37,33,35,"location"],[41,45,33,43],[41,46,33,44,"protocol"],[41,54,33,52],[43,6,35,4],[44,6,36,4],[44,10,36,8,"currentHost"],[44,21,36,19],[44,22,36,20,"includes"],[44,30,36,28],[44,31,36,29],[44,42,36,40],[44,43,36,41],[44,45,36,43],[45,8,37,6],[45,15,37,13],[45,18,37,16,"currentProtocol"],[45,33,37,31],[45,38,37,36,"currentHost"],[45,49,37,47],[45,51,37,49],[46,6,38,4],[47,6,39,4],[48,6,40,4],[48,10,40,8,"currentHost"],[48,21,40,19],[48,22,40,20,"includes"],[48,30,40,28],[48,31,40,29],[48,59,40,57],[48,60,40,58],[48,62,40,60],[49,8,41,6],[49,15,41,13],[49,18,41,16,"currentProtocol"],[49,33,41,31],[49,38,41,36,"currentHost"],[49,49,41,47],[49,51,41,49],[50,6,42,4],[51,4,43,2],[53,4,45,2],[54,4,46,2],[54,11,46,9,"Constants"],[54,20,46,18],[54,21,46,18,"default"],[54,28,46,18],[54,29,46,19,"expoConfig"],[54,39,46,29],[54,41,46,31,"extra"],[54,46,46,36],[54,48,46,38,"backendUrl"],[54,58,46,48],[54,62,46,48,"_expoVirtualEnv"],[54,77,46,48],[54,78,46,48,"env"],[54,81,46,48],[54,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[54,105,46,87],[54,109,46,91],[54,132,46,114],[55,2,47,0],[55,3,47,1],[56,2,49,0],[56,8,49,6,"API_BASE_URL"],[56,20,49,18],[56,23,49,21,"getBackendUrl"],[56,36,49,34],[56,37,49,35],[56,38,49,36],[57,2,51,0,"console"],[57,9,51,7],[57,10,51,8,"log"],[57,13,51,11],[57,14,51,12],[57,59,51,57],[57,60,51,58],[58,2,52,0,"console"],[58,9,52,7],[58,10,52,8,"log"],[58,13,52,11],[58,14,52,12],[58,42,52,40],[58,44,52,42,"API_BASE_URL"],[58,56,52,54],[58,57,52,55],[59,2,53,0],[59,6,53,4],[59,13,53,11,"window"],[59,19,53,17],[59,24,53,22],[59,35,53,33],[59,37,53,35],[60,4,54,2,"console"],[60,11,54,9],[60,12,54,10,"log"],[60,15,54,13],[60,16,54,14],[60,39,54,37],[60,41,54,39,"window"],[60,47,54,45],[60,48,54,46,"location"],[60,56,54,54],[60,57,54,55,"hostname"],[60,65,54,63],[60,66,54,64],[61,4,55,2,"console"],[61,11,55,9],[61,12,55,10,"log"],[61,15,55,13],[61,16,55,14],[61,39,55,37],[61,41,55,39,"window"],[61,47,55,45],[61,48,55,46,"location"],[61,56,55,54],[61,57,55,55,"protocol"],[61,65,55,63],[61,66,55,64],[62,2,56,0],[63,2,58,7],[63,8,58,13,"AuthProvider"],[63,20,58,25],[63,23,58,28,"AuthProvider"],[63,24,58,29],[64,4,58,31,"children"],[65,2,58,65],[65,3,58,66],[65,8,58,71],[66,4,58,71,"_s"],[66,6,58,71],[67,4,59,2],[67,10,59,8],[67,11,59,9,"user"],[67,15,59,13],[67,17,59,15,"setUser"],[67,24,59,22],[67,25,59,23],[67,28,59,26],[67,32,59,26,"useState"],[67,38,59,34],[67,39,59,34,"useState"],[67,47,59,34],[67,49,59,48],[67,53,59,52],[67,54,59,53],[68,4,60,2],[68,10,60,8],[68,11,60,9,"token"],[68,16,60,14],[68,18,60,16,"setToken"],[68,26,60,24],[68,27,60,25],[68,30,60,28],[68,34,60,28,"useState"],[68,40,60,36],[68,41,60,36,"useState"],[68,49,60,36],[68,51,60,52],[68,55,60,56],[68,56,60,57],[69,4,61,2],[69,10,61,8],[69,11,61,9,"isLoading"],[69,20,61,18],[69,22,61,20,"setIsLoading"],[69,34,61,32],[69,35,61,33],[69,38,61,36],[69,42,61,36,"useState"],[69,48,61,44],[69,49,61,44,"useState"],[69,57,61,44],[69,59,61,45],[69,63,61,49],[69,64,61,50],[70,4,62,2],[70,10,62,8],[70,11,62,9,"minLoadingComplete"],[70,29,62,27],[70,31,62,29,"setMinLoadingComplete"],[70,52,62,50],[70,53,62,51],[70,56,62,54],[70,60,62,54,"useState"],[70,66,62,62],[70,67,62,62,"useState"],[70,75,62,62],[70,77,62,63],[70,82,62,68],[70,83,62,69],[71,4,64,2],[71,10,64,8,"isAuthenticated"],[71,25,64,23],[71,28,64,26],[71,29,64,27],[71,30,64,28,"user"],[71,34,64,32],[71,38,64,36],[71,39,64,37],[71,40,64,38,"token"],[71,45,64,43],[73,4,66,2],[74,4,67,2],[74,8,67,2,"useEffect"],[74,14,67,11],[74,15,67,11,"useEffect"],[74,24,67,11],[74,26,67,12],[74,32,67,18],[75,6,68,4,"console"],[75,13,68,11],[75,14,68,12,"log"],[75,17,68,15],[75,18,68,16],[75,41,68,39],[75,42,68,40],[76,6,69,4,"console"],[76,13,69,11],[76,14,69,12,"log"],[76,17,69,15],[76,18,69,16],[76,36,69,34],[76,38,69,36],[76,39,69,37],[76,40,69,38,"user"],[76,44,69,42],[76,45,69,43],[77,6,70,4,"console"],[77,13,70,11],[77,14,70,12,"log"],[77,17,70,15],[77,18,70,16],[77,37,70,35],[77,39,70,37],[77,40,70,38],[77,41,70,39,"token"],[77,46,70,44],[77,47,70,45],[78,6,71,4,"console"],[78,13,71,11],[78,14,71,12,"log"],[78,17,71,15],[78,18,71,16],[78,40,71,38],[78,42,71,40,"isAuthenticated"],[78,57,71,55],[78,58,71,56],[79,6,72,4],[79,10,72,8,"user"],[79,14,72,12],[79,16,72,14,"console"],[79,23,72,21],[79,24,72,22,"log"],[79,27,72,25],[79,28,72,26],[79,45,72,43],[79,47,72,45,"user"],[79,51,72,49],[79,52,72,50,"email"],[79,57,72,55],[79,58,72,56],[80,6,73,4],[80,10,73,8,"token"],[80,15,73,13],[80,17,73,15,"console"],[80,24,73,22],[80,25,73,23,"log"],[80,28,73,26],[80,29,73,27],[80,49,73,47],[80,51,73,49,"token"],[80,56,73,54],[80,57,73,55,"substring"],[80,66,73,64],[80,67,73,65],[80,68,73,66],[80,70,73,68],[80,72,73,70],[80,73,73,71],[80,76,73,74],[80,81,73,79],[80,82,73,80],[81,4,74,2],[81,5,74,3],[81,7,74,5],[81,8,74,6,"user"],[81,12,74,10],[81,14,74,12,"token"],[81,19,74,17],[81,21,74,19,"isAuthenticated"],[81,36,74,34],[81,37,74,35],[81,38,74,36],[83,4,76,2],[84,4,77,2],[84,10,77,8,"actualIsLoading"],[84,25,77,23],[84,28,77,26,"React"],[84,33,77,31],[84,34,77,31,"default"],[84,41,77,31],[84,42,77,32,"useMemo"],[84,49,77,39],[84,50,77,40],[84,56,77,46],[85,6,78,4],[85,13,78,11,"isLoading"],[85,22,78,20],[85,26,78,24],[85,27,78,25,"minLoadingComplete"],[85,45,78,43],[86,4,79,2],[86,5,79,3],[86,7,79,5],[86,8,79,6,"isLoading"],[86,17,79,15],[86,19,79,17,"minLoadingComplete"],[86,37,79,35],[86,38,79,36],[86,39,79,37],[88,4,81,2],[89,4,82,2],[89,8,82,2,"useEffect"],[89,14,82,11],[89,15,82,11,"useEffect"],[89,24,82,11],[89,26,82,12],[89,32,82,18],[90,6,83,4,"console"],[90,13,83,11],[90,14,83,12,"log"],[90,17,83,15],[90,18,83,16],[90,57,83,55],[90,58,83,56],[91,6,84,4],[91,12,84,10,"minLoadingTimer"],[91,27,84,25],[91,30,84,28,"setTimeout"],[91,40,84,38],[91,41,84,39],[91,47,84,45],[92,8,85,6,"console"],[92,15,85,13],[92,16,85,14,"log"],[92,19,85,17],[92,20,85,18],[92,55,85,53],[92,56,85,54],[93,8,86,6,"setMinLoadingComplete"],[93,29,86,27],[93,30,86,28],[93,34,86,32],[93,35,86,33],[94,6,87,4],[94,7,87,5],[94,9,87,7],[94,13,87,11],[94,14,87,12],[95,6,89,4],[95,13,89,11],[95,19,89,17,"clearTimeout"],[95,31,89,29],[95,32,89,30,"minLoadingTimer"],[95,47,89,45],[95,48,89,46],[96,4,90,2],[96,5,90,3],[96,7,90,5],[96,9,90,7],[96,10,90,8],[98,4,92,2],[99,4,93,2],[99,8,93,2,"useEffect"],[99,14,93,11],[99,15,93,11,"useEffect"],[99,24,93,11],[99,26,93,12],[99,32,93,18],[100,6,94,4,"checkExistingSession"],[100,26,94,24],[100,27,94,25],[100,28,94,26],[101,4,95,2],[101,5,95,3],[101,7,95,5],[101,9,95,7],[101,10,95,8],[102,4,97,2],[102,10,97,8,"checkExistingSession"],[102,30,97,28],[102,33,97,31,"React"],[102,38,97,36],[102,39,97,36,"default"],[102,46,97,36],[102,47,97,37,"useCallback"],[102,58,97,48],[102,59,97,49],[102,71,97,61],[103,6,98,4],[103,10,98,8],[104,8,99,6,"console"],[104,15,99,13],[104,16,99,14,"log"],[104,19,99,17],[104,20,99,18],[104,65,99,63],[104,66,99,64],[106,8,101,6],[107,8,102,6],[107,12,102,10,"storedEmail"],[107,23,102,21],[107,26,102,24],[107,30,102,28],[108,8,103,6],[108,12,103,10,"storedPassword"],[108,26,103,24],[108,29,103,27],[108,33,103,31],[109,8,105,6],[109,12,105,10],[110,10,106,8],[111,10,107,8,"storedEmail"],[111,21,107,19],[111,24,107,22],[111,30,107,28,"AsyncStorage"],[111,42,107,40],[111,43,107,40,"default"],[111,50,107,40],[111,51,107,41,"getItem"],[111,58,107,48],[111,59,107,49],[111,72,107,62],[111,73,107,63],[112,10,108,8,"storedPassword"],[112,24,108,22],[112,27,108,25],[112,33,108,31,"AsyncStorage"],[112,45,108,43],[112,46,108,43,"default"],[112,53,108,43],[112,54,108,44,"getItem"],[112,61,108,51],[112,62,108,52],[112,78,108,68],[112,79,108,69],[113,10,109,8,"console"],[113,17,109,15],[113,18,109,16,"log"],[113,21,109,19],[113,22,109,20],[113,55,109,53],[113,56,109,54],[114,8,110,6],[114,9,110,7],[114,10,110,8],[114,17,110,15,"asyncError"],[114,27,110,25],[114,29,110,27],[115,10,111,8,"console"],[115,17,111,15],[115,18,111,16,"log"],[115,21,111,19],[115,22,111,20],[115,44,111,42],[115,46,111,44,"asyncError"],[115,56,111,54],[115,57,111,55],[116,10,112,8],[117,10,113,8],[117,14,113,12],[117,21,113,19,"window"],[117,27,113,25],[117,32,113,30],[117,43,113,41],[117,47,113,45,"window"],[117,53,113,51],[117,54,113,52,"localStorage"],[117,66,113,64],[117,68,113,66],[118,12,114,10],[118,16,114,14],[119,14,115,12,"storedEmail"],[119,25,115,23],[119,28,115,26,"window"],[119,34,115,32],[119,35,115,33,"localStorage"],[119,47,115,45],[119,48,115,46,"getItem"],[119,55,115,53],[119,56,115,54],[119,69,115,67],[119,70,115,68],[120,14,116,12,"storedPassword"],[120,28,116,26],[120,31,116,29,"window"],[120,37,116,35],[120,38,116,36,"localStorage"],[120,50,116,48],[120,51,116,49,"getItem"],[120,58,116,56],[120,59,116,57],[120,75,116,73],[120,76,116,74],[121,14,117,12,"console"],[121,21,117,19],[121,22,117,20,"log"],[121,25,117,23],[121,26,117,24],[121,65,117,63],[121,66,117,64],[122,12,118,10],[122,13,118,11],[122,14,118,12],[122,21,118,19,"localError"],[122,31,118,29],[122,33,118,31],[123,14,119,12,"console"],[123,21,119,19],[123,22,119,20,"error"],[123,27,119,25],[123,28,119,26],[123,55,119,53],[123,57,119,55,"localError"],[123,67,119,65],[123,68,119,66],[124,12,120,10],[125,10,121,8],[125,11,121,9],[125,17,121,15],[126,12,122,10,"console"],[126,19,122,17],[126,20,122,18,"log"],[126,23,122,21],[126,24,122,22],[126,75,122,73],[126,76,122,74],[127,10,123,8],[128,8,124,6],[129,8,126,6,"console"],[129,15,126,13],[129,16,126,14,"log"],[129,19,126,17],[129,20,126,18],[129,50,126,48],[129,51,126,49],[130,8,127,6,"console"],[130,15,127,13],[130,16,127,14,"log"],[130,19,127,17],[130,20,127,18],[130,39,127,37],[130,41,127,39],[130,42,127,40],[130,43,127,41,"storedEmail"],[130,54,127,52],[130,55,127,53],[131,8,128,6,"console"],[131,15,128,13],[131,16,128,14,"log"],[131,19,128,17],[131,20,128,18],[131,42,128,40],[131,44,128,42],[131,45,128,43],[131,46,128,44,"storedPassword"],[131,60,128,58],[131,61,128,59],[132,8,129,6],[132,12,129,10,"storedEmail"],[132,23,129,21],[132,25,129,23,"console"],[132,32,129,30],[132,33,129,31,"log"],[132,36,129,34],[132,37,129,35],[132,49,129,47],[132,51,129,49,"storedEmail"],[132,62,129,60],[132,63,129,61],[133,8,131,6],[133,12,131,10,"storedEmail"],[133,23,131,21],[133,27,131,25,"storedPassword"],[133,41,131,39],[133,43,131,41],[134,10,132,8,"console"],[134,17,132,15],[134,18,132,16,"log"],[134,21,132,19],[134,22,132,20],[134,78,132,76],[134,79,132,77],[135,10,134,8],[135,14,134,12],[136,12,135,10],[137,12,136,10],[137,18,136,16,"timeoutPromise"],[137,32,136,30],[137,35,136,33],[137,39,136,37,"Promise"],[137,46,136,44],[137,47,136,45],[137,48,136,46,"_"],[137,49,136,47],[137,51,136,49,"reject"],[137,57,136,55],[137,62,137,12,"setTimeout"],[137,72,137,22],[137,73,137,23],[137,79,137,29,"reject"],[137,85,137,35],[137,86,137,36],[137,90,137,40,"Error"],[137,95,137,45],[137,96,137,46],[137,116,137,66],[137,117,137,67],[137,118,137,68],[137,120,137,70],[137,125,137,75],[137,126,138,10],[137,127,138,11],[138,12,140,10],[138,18,140,16,"loginPromise"],[138,30,140,28],[138,33,140,31,"login"],[138,38,140,36],[138,39,140,37,"storedEmail"],[138,50,140,48],[138,52,140,50,"storedPassword"],[138,66,140,64],[138,67,140,65],[139,12,141,10],[139,18,141,16,"loginResult"],[139,29,141,27],[139,32,141,30],[139,38,141,36,"Promise"],[139,45,141,43],[139,46,141,44,"race"],[139,50,141,48],[139,51,141,49],[139,52,141,50,"loginPromise"],[139,64,141,62],[139,66,141,64,"timeoutPromise"],[139,80,141,78],[139,81,141,79],[139,82,141,80],[140,12,143,10],[140,16,143,14,"loginResult"],[140,27,143,25],[140,28,143,26,"success"],[140,35,143,33],[140,37,143,35],[141,14,144,12,"console"],[141,21,144,19],[141,22,144,20,"log"],[141,25,144,23],[141,26,144,24],[141,52,144,50],[141,53,144,51],[142,12,145,10],[142,13,145,11],[142,19,145,17],[143,14,146,12,"console"],[143,21,146,19],[143,22,146,20,"log"],[143,25,146,23],[143,26,146,24],[143,48,146,46],[143,50,146,48,"loginResult"],[143,61,146,59],[143,62,146,60,"error"],[143,67,146,65],[143,68,146,66],[144,14,147,12],[145,14,148,12],[145,18,148,16],[146,16,149,14],[146,22,149,20,"AsyncStorage"],[146,34,149,32],[146,35,149,32,"default"],[146,42,149,32],[146,43,149,33,"multiRemove"],[146,54,149,44],[146,55,149,45],[146,56,149,46],[146,69,149,59],[146,71,149,61],[146,87,149,77],[146,88,149,78],[146,89,149,79],[147,14,150,12],[147,15,150,13],[147,16,150,14],[147,23,150,21,"e"],[147,24,150,22],[147,26,150,24],[148,16,151,14],[149,16,152,14],[149,20,152,18],[149,27,152,25,"window"],[149,33,152,31],[149,38,152,36],[149,49,152,47],[149,53,152,51,"window"],[149,59,152,57],[149,60,152,58,"localStorage"],[149,72,152,70],[149,74,152,72],[150,18,153,16,"window"],[150,24,153,22],[150,25,153,23,"localStorage"],[150,37,153,35],[150,38,153,36,"removeItem"],[150,48,153,46],[150,49,153,47],[150,62,153,60],[150,63,153,61],[151,18,154,16,"window"],[151,24,154,22],[151,25,154,23,"localStorage"],[151,37,154,35],[151,38,154,36,"removeItem"],[151,48,154,46],[151,49,154,47],[151,65,154,63],[151,66,154,64],[152,16,155,14],[153,14,156,12],[154,12,157,10],[155,10,158,8],[155,11,158,9],[155,12,158,10],[155,19,158,17,"autoLoginError"],[155,33,158,31],[155,35,158,33],[156,12,159,10,"console"],[156,19,159,17],[156,20,159,18,"log"],[156,23,159,21],[156,24,159,22],[156,59,159,57],[156,61,159,59,"autoLoginError"],[156,75,159,73],[156,76,159,74,"message"],[156,83,159,81],[156,84,159,82],[157,12,160,10],[158,12,161,10],[158,16,161,14],[159,14,162,12],[159,20,162,18,"AsyncStorage"],[159,32,162,30],[159,33,162,30,"default"],[159,40,162,30],[159,41,162,31,"multiRemove"],[159,52,162,42],[159,53,162,43],[159,54,162,44],[159,67,162,57],[159,69,162,59],[159,85,162,75],[159,86,162,76],[159,87,162,77],[160,12,163,10],[160,13,163,11],[160,14,163,12],[160,21,163,19,"e"],[160,22,163,20],[160,24,163,22],[161,14,164,12],[161,18,164,16],[161,25,164,23,"window"],[161,31,164,29],[161,36,164,34],[161,47,164,45],[161,51,164,49,"window"],[161,57,164,55],[161,58,164,56,"localStorage"],[161,70,164,68],[161,72,164,70],[162,16,165,14,"window"],[162,22,165,20],[162,23,165,21,"localStorage"],[162,35,165,33],[162,36,165,34,"removeItem"],[162,46,165,44],[162,47,165,45],[162,60,165,58],[162,61,165,59],[163,16,166,14,"window"],[163,22,166,20],[163,23,166,21,"localStorage"],[163,35,166,33],[163,36,166,34,"removeItem"],[163,46,166,44],[163,47,166,45],[163,63,166,61],[163,64,166,62],[164,14,167,12],[165,12,168,10],[166,10,169,8],[167,8,170,6],[167,9,170,7],[167,15,170,13],[168,10,171,8,"console"],[168,17,171,15],[168,18,171,16,"log"],[168,21,171,19],[168,22,171,20],[168,78,171,76],[168,79,171,77],[169,8,172,6],[170,6,173,4],[170,7,173,5],[170,8,173,6],[170,15,173,13,"error"],[170,20,173,18],[170,22,173,20],[171,8,174,6,"console"],[171,15,174,13],[171,16,174,14,"error"],[171,21,174,19],[171,22,174,20],[171,50,174,48],[171,52,174,50,"error"],[171,57,174,55],[171,58,174,56],[172,6,175,4],[172,7,175,5],[172,16,175,14],[173,8,176,6,"console"],[173,15,176,13],[173,16,176,14,"log"],[173,19,176,17],[173,20,176,18],[173,73,176,71],[173,74,176,72],[174,8,177,6,"setIsLoading"],[174,20,177,18],[174,21,177,19],[174,26,177,24],[174,27,177,25],[175,6,178,4],[176,4,179,2],[176,5,179,3],[176,7,179,5],[176,9,179,7],[176,10,179,8],[176,11,179,9],[176,12,179,10],[178,4,181,2],[178,10,181,8,"checkSession"],[178,22,181,20],[178,25,181,23],[178,31,181,23,"checkSession"],[178,32,181,23],[178,37,181,53],[179,6,182,4],[179,10,182,8],[180,8,183,6],[181,8,184,6],[181,12,184,10],[181,13,184,11,"token"],[181,18,184,16],[181,22,184,20],[181,23,184,21,"user"],[181,27,184,25],[181,29,184,27],[182,10,185,8,"console"],[182,17,185,15],[182,18,185,16,"log"],[182,21,185,19],[182,22,185,20],[182,64,185,62],[182,65,185,63],[183,10,186,8],[183,17,186,15],[183,22,186,20],[184,8,187,6],[185,8,189,6],[185,14,189,12,"response"],[185,22,189,20],[185,25,189,23],[185,31,189,29,"fetch"],[185,36,189,34],[185,37,189,35],[185,40,189,38,"API_BASE_URL"],[185,52,189,50],[185,77,189,75],[185,79,189,77],[186,10,190,8,"method"],[186,16,190,14],[186,18,190,16],[186,23,190,21],[187,10,191,8,"credentials"],[187,21,191,19],[187,23,191,21],[187,32,191,30],[188,10,192,8,"headers"],[188,17,192,15],[188,19,192,17],[189,12,193,10],[189,26,193,24],[189,28,193,26],[189,46,193,44],[190,12,194,10],[190,27,194,25],[190,29,194,27],[190,39,194,37,"token"],[190,44,194,42],[191,10,195,8],[192,8,196,6],[192,9,196,7],[192,10,196,8],[193,8,198,6],[193,12,198,10],[193,13,198,11,"response"],[193,21,198,19],[193,22,198,20,"ok"],[193,24,198,22],[193,26,198,24],[194,10,199,8,"console"],[194,17,199,15],[194,18,199,16,"log"],[194,21,199,19],[194,22,199,20],[194,45,199,43],[194,47,199,45,"response"],[194,55,199,53],[194,56,199,54,"status"],[194,62,199,60],[194,63,199,61],[195,10,200,8],[195,17,200,15],[195,22,200,20],[196,8,201,6],[197,8,203,6],[197,14,203,12,"data"],[197,18,203,16],[197,21,203,19],[197,27,203,25,"response"],[197,35,203,33],[197,36,203,34,"json"],[197,40,203,38],[197,41,203,39],[197,42,203,40],[198,8,204,6],[198,14,204,12,"isValid"],[198,21,204,19],[198,24,204,22,"data"],[198,28,204,26],[198,29,204,27,"authenticated"],[198,42,204,40],[198,47,204,45],[198,51,204,49],[199,8,206,6],[199,12,206,10,"isValid"],[199,19,206,17],[199,23,206,21,"data"],[199,27,206,25],[199,28,206,26,"user"],[199,32,206,30],[199,34,206,32],[200,10,207,8],[201,10,208,8,"setUser"],[201,17,208,15],[201,18,208,16,"data"],[201,22,208,20],[201,23,208,21,"user"],[201,27,208,25],[201,28,208,26],[202,10,209,8,"console"],[202,17,209,15],[202,18,209,16,"log"],[202,21,209,19],[202,22,209,20],[202,66,209,64],[202,68,209,66,"data"],[202,72,209,70],[202,73,209,71,"user"],[202,77,209,75],[202,78,209,76,"email"],[202,83,209,81],[202,84,209,82],[203,8,210,6],[203,9,210,7],[203,15,210,13],[204,10,211,8,"console"],[204,17,211,15],[204,18,211,16,"log"],[204,21,211,19],[204,22,211,20],[204,57,211,55],[204,59,211,57,"data"],[204,63,211,61],[204,64,211,62],[205,8,212,6],[206,8,214,6],[206,15,214,13,"isValid"],[206,22,214,20],[207,6,215,4],[207,7,215,5],[207,8,215,6],[207,15,215,13,"error"],[207,20,215,18],[207,22,215,20],[208,8,216,6,"console"],[208,15,216,13],[208,16,216,14,"error"],[208,21,216,19],[208,22,216,20],[208,78,216,76],[208,80,216,78,"error"],[208,85,216,83],[208,86,216,84],[209,8,217,6],[210,8,218,6],[211,8,219,6],[211,15,219,13],[211,19,219,17],[211,20,219,18],[211,21,219,19],[212,6,220,4],[213,4,221,2],[213,5,221,3],[214,4,223,2],[214,10,223,8,"login"],[214,15,223,13],[214,18,223,16],[214,24,223,16,"login"],[214,25,223,23,"email"],[214,30,223,36],[214,32,223,38,"password"],[214,40,223,54],[214,45,223,106],[215,6,224,4],[215,10,224,8],[216,8,225,6,"setIsLoading"],[216,20,225,18],[216,21,225,19],[216,25,225,23],[216,26,225,24],[217,8,227,6],[217,14,227,12,"formData"],[217,22,227,20],[217,25,227,23],[217,29,227,27,"URLSearchParams"],[217,44,227,42],[217,45,227,43],[217,46,227,44],[218,8,228,6,"formData"],[218,16,228,14],[218,17,228,15,"append"],[218,23,228,21],[218,24,228,22],[218,34,228,32],[218,36,228,34,"email"],[218,41,228,39],[218,42,228,40],[218,43,228,41],[218,44,228,42],[219,8,229,6,"formData"],[219,16,229,14],[219,17,229,15,"append"],[219,23,229,21],[219,24,229,22],[219,34,229,32],[219,36,229,34,"password"],[219,44,229,42],[219,45,229,43],[220,8,231,6],[220,14,231,12,"response"],[220,22,231,20],[220,25,231,23],[220,31,231,29,"fetch"],[220,36,231,34],[220,37,231,35],[220,40,231,38,"API_BASE_URL"],[220,52,231,50],[220,69,231,67],[220,71,231,69],[221,10,232,8,"method"],[221,16,232,14],[221,18,232,16],[221,24,232,22],[222,10,233,8,"credentials"],[222,21,233,19],[222,23,233,21],[222,32,233,30],[223,10,234,8,"headers"],[223,17,234,15],[223,19,234,17],[224,12,235,10],[224,26,235,24],[224,28,235,26],[225,10,236,8],[225,11,236,9],[226,10,237,8,"body"],[226,14,237,12],[226,16,237,14,"formData"],[226,24,237,22],[226,25,237,23,"toString"],[226,33,237,31],[226,34,237,32],[227,8,238,6],[227,9,238,7],[227,10,238,8],[228,8,240,6],[228,14,240,12,"data"],[228,18,240,16],[228,21,240,19],[228,27,240,25,"response"],[228,35,240,33],[228,36,240,34,"json"],[228,40,240,38],[228,41,240,39],[228,42,240,40],[229,8,242,6],[229,12,242,10],[229,13,242,11,"response"],[229,21,242,19],[229,22,242,20,"ok"],[229,24,242,22],[229,26,242,24],[230,10,243,8],[230,17,243,15],[231,12,243,17,"success"],[231,19,243,24],[231,21,243,26],[231,26,243,31],[232,12,243,33,"error"],[232,17,243,38],[232,19,243,40,"data"],[232,23,243,44],[232,24,243,45,"detail"],[232,30,243,51],[232,34,243,55],[233,10,243,70],[233,11,243,71],[234,8,244,6],[236,8,246,2],[237,8,247,6],[237,14,247,12,"AsyncStorage"],[237,26,247,24],[237,27,247,24,"default"],[237,34,247,24],[237,35,247,25,"setItem"],[237,42,247,32],[237,43,247,33],[237,55,247,45],[237,57,247,47,"data"],[237,61,247,51],[237,62,247,52,"access_token"],[237,74,247,64],[237,75,247,65],[237,76,247,66,"catch"],[237,81,247,71],[237,82,247,72],[237,88,247,79,"asyncError"],[237,98,247,89],[237,102,247,94],[238,10,248,8,"console"],[238,17,248,15],[238,18,248,16,"error"],[238,23,248,21],[238,24,248,22],[238,75,248,73],[238,77,248,75,"asyncError"],[238,87,248,85],[238,88,248,86],[239,10,249,8],[240,10,250,8],[240,14,250,12],[240,21,250,19,"window"],[240,27,250,25],[240,32,250,30],[240,43,250,41],[240,47,250,45,"window"],[240,53,250,51],[240,54,250,52,"localStorage"],[240,66,250,64],[240,68,250,66],[241,12,251,10,"window"],[241,18,251,16],[241,19,251,17,"localStorage"],[241,31,251,29],[241,32,251,30,"setItem"],[241,39,251,37],[241,40,251,38],[241,52,251,50],[241,54,251,52,"data"],[241,58,251,56],[241,59,251,57,"access_token"],[241,71,251,69],[241,72,251,70],[242,12,252,10,"window"],[242,18,252,16],[242,19,252,17,"localStorage"],[242,31,252,29],[242,32,252,30,"setItem"],[242,39,252,37],[242,40,252,38],[242,51,252,49],[242,53,252,51,"JSON"],[242,57,252,55],[242,58,252,56,"stringify"],[242,67,252,65],[242,68,252,66,"data"],[242,72,252,70],[242,73,252,71,"user"],[242,77,252,75],[242,78,252,76],[242,79,252,77],[243,12,253,10,"window"],[243,18,253,16],[243,19,253,17,"localStorage"],[243,31,253,29],[243,32,253,30,"setItem"],[243,39,253,37],[243,40,253,38],[243,53,253,51],[243,55,253,53,"email"],[243,60,253,58],[243,61,253,59],[244,12,254,10,"window"],[244,18,254,16],[244,19,254,17,"localStorage"],[244,31,254,29],[244,32,254,30,"setItem"],[244,39,254,37],[244,40,254,38],[244,56,254,54],[244,58,254,56,"password"],[244,66,254,64],[244,67,254,65],[245,10,255,8],[246,8,256,6],[246,9,256,7],[246,10,256,8],[247,8,258,6],[247,14,258,12,"AsyncStorage"],[247,26,258,24],[247,27,258,24,"default"],[247,34,258,24],[247,35,258,25,"setItem"],[247,42,258,32],[247,43,258,33],[247,54,258,44],[247,56,258,46,"JSON"],[247,60,258,50],[247,61,258,51,"stringify"],[247,70,258,60],[247,71,258,61,"data"],[247,75,258,65],[247,76,258,66,"user"],[247,80,258,70],[247,81,258,71],[247,82,258,72],[247,83,258,73,"catch"],[247,88,258,78],[247,89,258,80,"error"],[247,94,258,85],[247,98,258,90],[248,10,259,8,"console"],[248,17,259,15],[248,18,259,16,"error"],[248,23,259,21],[248,24,259,22],[248,59,259,57],[248,61,259,59,"error"],[248,66,259,64],[248,67,259,65],[249,8,260,6],[249,9,260,7],[249,10,260,8],[251,8,262,6],[252,8,263,6],[252,14,263,12,"AsyncStorage"],[252,26,263,24],[252,27,263,24,"default"],[252,34,263,24],[252,35,263,25,"setItem"],[252,42,263,32],[252,43,263,33],[252,56,263,46],[252,58,263,48,"email"],[252,63,263,53],[252,64,263,54],[252,65,263,55,"catch"],[252,70,263,60],[252,71,263,61],[252,77,263,67],[252,78,263,68],[252,79,263,69],[252,80,263,70],[253,8,264,6],[253,14,264,12,"AsyncStorage"],[253,26,264,24],[253,27,264,24,"default"],[253,34,264,24],[253,35,264,25,"setItem"],[253,42,264,32],[253,43,264,33],[253,59,264,49],[253,61,264,51,"password"],[253,69,264,59],[253,70,264,60],[253,71,264,61,"catch"],[253,76,264,66],[253,77,264,67],[253,83,264,73],[253,84,264,74],[253,85,264,75],[253,86,264,76],[254,8,266,6,"setToken"],[254,16,266,14],[254,17,266,15,"data"],[254,21,266,19],[254,22,266,20,"access_token"],[254,34,266,32],[254,35,266,33],[255,8,267,6,"setUser"],[255,15,267,13],[255,16,267,14,"data"],[255,20,267,18],[255,21,267,19,"user"],[255,25,267,23],[255,26,267,24],[256,8,269,6,"console"],[256,15,269,13],[256,16,269,14,"log"],[256,19,269,17],[256,20,269,18],[256,62,269,60],[256,63,269,61],[257,8,270,6,"console"],[257,15,270,13],[257,16,270,14,"log"],[257,19,270,17],[257,20,270,18],[257,34,270,32],[257,36,270,34,"data"],[257,40,270,38],[257,41,270,39,"user"],[257,45,270,43],[257,46,270,44,"id"],[257,48,270,46],[257,49,270,47],[258,8,271,6,"console"],[258,15,271,13],[258,16,271,14,"log"],[258,19,271,17],[258,20,271,18],[258,37,271,35],[258,39,271,37,"data"],[258,43,271,41],[258,44,271,42,"user"],[258,48,271,46],[258,49,271,47,"email"],[258,54,271,52],[258,55,271,53],[259,8,272,6,"console"],[259,15,272,13],[259,16,272,14,"log"],[259,19,272,17],[259,20,272,18],[259,36,272,34],[259,38,272,36],[259,39,272,37],[259,40,272,38,"data"],[259,44,272,42],[259,45,272,43,"access_token"],[259,57,272,55],[259,58,272,56],[260,8,273,6,"console"],[260,15,273,13],[260,16,273,14,"log"],[260,19,273,17],[260,20,273,18],[260,40,273,38],[260,42,273,40,"data"],[260,46,273,44],[260,47,273,45,"access_token"],[260,59,273,57],[260,60,273,58,"substring"],[260,69,273,67],[260,70,273,68],[260,71,273,69],[260,73,273,71],[260,75,273,73],[260,76,273,74],[260,79,273,77],[260,84,273,82],[260,85,273,83],[262,8,275,6],[263,8,276,6,"setTimeout"],[263,18,276,16],[263,19,276,17],[263,25,276,23],[264,10,277,8,"console"],[264,17,277,15],[264,18,277,16,"log"],[264,21,277,19],[264,22,277,20],[264,68,277,66],[264,69,277,67],[265,10,278,8,"console"],[265,17,278,15],[265,18,278,16,"log"],[265,21,278,19],[265,22,278,20],[265,39,278,37],[265,41,278,39],[265,42,278,40],[265,43,278,41,"user"],[265,47,278,45],[265,48,278,46],[266,10,279,8,"console"],[266,17,279,15],[266,18,279,16,"log"],[266,21,279,19],[266,22,279,20],[266,40,279,38],[266,42,279,40],[266,43,279,41],[266,44,279,42,"token"],[266,49,279,47],[266,50,279,48],[267,10,280,8,"console"],[267,17,280,15],[267,18,280,16,"log"],[267,21,280,19],[267,22,280,20],[267,55,280,53],[267,57,280,55],[267,58,280,56],[267,60,280,58,"user"],[267,64,280,62],[267,68,280,66,"token"],[267,73,280,71],[267,74,280,72],[267,75,280,73],[268,8,281,6],[268,9,281,7],[268,11,281,9],[268,15,281,13],[268,16,281,14],[269,8,283,6,"console"],[269,15,283,13],[269,16,283,14,"log"],[269,19,283,17],[269,20,283,18],[269,51,283,49],[269,53,283,51,"data"],[269,57,283,55],[269,58,283,56,"user"],[269,62,283,60],[269,63,283,61,"id"],[269,65,283,63],[269,67,283,65],[269,102,283,100],[269,103,283,101],[270,8,285,6],[270,15,285,13],[271,10,285,15,"success"],[271,17,285,22],[271,19,285,24],[272,8,285,29],[272,9,285,30],[273,6,286,4],[273,7,286,5],[273,8,286,6],[273,15,286,13,"error"],[273,20,286,18],[273,22,286,20],[274,8,287,6,"console"],[274,15,287,13],[274,16,287,14,"error"],[274,21,287,19],[274,22,287,20],[274,36,287,34],[274,38,287,36,"error"],[274,43,287,41],[274,44,287,42],[275,8,288,6],[275,15,288,13],[276,10,288,15,"success"],[276,17,288,22],[276,19,288,24],[276,24,288,29],[277,10,288,31,"error"],[277,15,288,36],[277,17,288,38],[278,8,288,63],[278,9,288,64],[279,6,289,4],[279,7,289,5],[279,16,289,14],[280,8,290,6,"setIsLoading"],[280,20,290,18],[280,21,290,19],[280,26,290,24],[280,27,290,25],[281,6,291,4],[282,4,292,2],[282,5,292,3],[283,4,294,2],[283,10,294,8,"register"],[283,18,294,16],[283,21,294,19],[283,27,294,19,"register"],[283,28,294,26,"email"],[283,33,294,39],[283,35,294,41,"password"],[283,43,294,57],[283,45,294,59,"name"],[283,49,294,71],[283,54,294,123],[284,6,295,4],[284,10,295,8],[285,8,296,6,"setIsLoading"],[285,20,296,18],[285,21,296,19],[285,25,296,23],[285,26,296,24],[286,8,298,6],[286,14,298,12,"response"],[286,22,298,20],[286,25,298,23],[286,31,298,29,"fetch"],[286,36,298,34],[286,37,298,35],[286,40,298,38,"API_BASE_URL"],[286,52,298,50],[286,72,298,70],[286,74,298,72],[287,10,299,8,"method"],[287,16,299,14],[287,18,299,16],[287,24,299,22],[288,10,300,8,"credentials"],[288,21,300,19],[288,23,300,21],[288,32,300,30],[289,10,301,8,"headers"],[289,17,301,15],[289,19,301,17],[290,12,302,10],[290,26,302,24],[290,28,302,26],[291,10,303,8],[291,11,303,9],[292,10,304,8,"body"],[292,14,304,12],[292,16,304,14,"JSON"],[292,20,304,18],[292,21,304,19,"stringify"],[292,30,304,28],[292,31,304,29],[293,12,305,10,"email"],[293,17,305,15],[294,12,306,10,"password"],[294,20,306,18],[295,12,307,10,"name"],[296,10,308,8],[296,11,308,9],[297,8,309,6],[297,9,309,7],[297,10,309,8],[298,8,311,6],[298,14,311,12,"data"],[298,18,311,16],[298,21,311,19],[298,27,311,25,"response"],[298,35,311,33],[298,36,311,34,"json"],[298,40,311,38],[298,41,311,39],[298,42,311,40],[299,8,313,6],[299,12,313,10],[299,13,313,11,"response"],[299,21,313,19],[299,22,313,20,"ok"],[299,24,313,22],[299,26,313,24],[300,10,314,8],[300,17,314,15],[301,12,314,17,"success"],[301,19,314,24],[301,21,314,26],[301,26,314,31],[302,12,314,33,"error"],[302,17,314,38],[302,19,314,40,"data"],[302,23,314,44],[302,24,314,45,"detail"],[302,30,314,51],[302,34,314,55],[303,10,314,77],[303,11,314,78],[304,8,315,6],[306,8,317,6],[307,8,318,6],[307,14,318,12,"AsyncStorage"],[307,26,318,24],[307,27,318,24,"default"],[307,34,318,24],[307,35,318,25,"setItem"],[307,42,318,32],[307,43,318,33],[307,55,318,45],[307,57,318,47,"data"],[307,61,318,51],[307,62,318,52,"access_token"],[307,74,318,64],[307,75,318,65],[308,8,319,6],[308,14,319,12,"AsyncStorage"],[308,26,319,24],[308,27,319,24,"default"],[308,34,319,24],[308,35,319,25,"setItem"],[308,42,319,32],[308,43,319,33],[308,54,319,44],[308,56,319,46,"JSON"],[308,60,319,50],[308,61,319,51,"stringify"],[308,70,319,60],[308,71,319,61,"data"],[308,75,319,65],[308,76,319,66,"user"],[308,80,319,70],[308,81,319,71],[308,82,319,72],[310,8,321,6],[311,8,322,6],[311,12,322,10],[312,10,323,8],[312,16,323,14,"AsyncStorage"],[312,28,323,26],[312,29,323,26,"default"],[312,36,323,26],[312,37,323,27,"setItem"],[312,44,323,34],[312,45,323,35],[312,58,323,48],[312,60,323,50,"email"],[312,65,323,55],[312,66,323,56],[313,10,324,8],[313,16,324,14,"AsyncStorage"],[313,28,324,26],[313,29,324,26,"default"],[313,36,324,26],[313,37,324,27,"setItem"],[313,44,324,34],[313,45,324,35],[313,61,324,51],[313,63,324,53,"password"],[313,71,324,61],[313,72,324,62],[314,8,325,6],[314,9,325,7],[314,10,325,8],[314,17,325,15,"asyncError"],[314,27,325,25],[314,29,325,27],[315,10,326,8],[315,14,326,12],[315,21,326,19,"window"],[315,27,326,25],[315,32,326,30],[315,43,326,41],[315,47,326,45,"window"],[315,53,326,51],[315,54,326,52,"localStorage"],[315,66,326,64],[315,68,326,66],[316,12,327,10,"window"],[316,18,327,16],[316,19,327,17,"localStorage"],[316,31,327,29],[316,32,327,30,"setItem"],[316,39,327,37],[316,40,327,38],[316,52,327,50],[316,54,327,52,"data"],[316,58,327,56],[316,59,327,57,"access_token"],[316,71,327,69],[316,72,327,70],[317,12,328,10,"window"],[317,18,328,16],[317,19,328,17,"localStorage"],[317,31,328,29],[317,32,328,30,"setItem"],[317,39,328,37],[317,40,328,38],[317,51,328,49],[317,53,328,51,"JSON"],[317,57,328,55],[317,58,328,56,"stringify"],[317,67,328,65],[317,68,328,66,"data"],[317,72,328,70],[317,73,328,71,"user"],[317,77,328,75],[317,78,328,76],[317,79,328,77],[318,12,329,10,"window"],[318,18,329,16],[318,19,329,17,"localStorage"],[318,31,329,29],[318,32,329,30,"setItem"],[318,39,329,37],[318,40,329,38],[318,53,329,51],[318,55,329,53,"email"],[318,60,329,58],[318,61,329,59],[319,12,330,10,"window"],[319,18,330,16],[319,19,330,17,"localStorage"],[319,31,330,29],[319,32,330,30,"setItem"],[319,39,330,37],[319,40,330,38],[319,56,330,54],[319,58,330,56,"password"],[319,66,330,64],[319,67,330,65],[320,12,331,10,"console"],[320,19,331,17],[320,20,331,18,"log"],[320,23,331,21],[320,24,331,22],[320,82,331,80],[320,83,331,81],[321,10,332,8],[322,8,333,6],[323,8,335,6,"setToken"],[323,16,335,14],[323,17,335,15,"data"],[323,21,335,19],[323,22,335,20,"access_token"],[323,34,335,32],[323,35,335,33],[324,8,336,6,"setUser"],[324,15,336,13],[324,16,336,14,"data"],[324,20,336,18],[324,21,336,19,"user"],[324,25,336,23],[324,26,336,24],[325,8,338,6,"console"],[325,15,338,13],[325,16,338,14,"log"],[325,19,338,17],[325,20,338,18],[325,58,338,56],[325,60,338,58,"data"],[325,64,338,62],[325,65,338,63,"user"],[325,69,338,67],[325,70,338,68,"id"],[325,72,338,70],[325,74,338,72],[325,109,338,107],[325,110,338,108],[326,8,340,6],[326,15,340,13],[327,10,340,15,"success"],[327,17,340,22],[327,19,340,24],[328,8,340,29],[328,9,340,30],[329,6,341,4],[329,7,341,5],[329,8,341,6],[329,15,341,13,"error"],[329,20,341,18],[329,22,341,20],[330,8,342,6,"console"],[330,15,342,13],[330,16,342,14,"error"],[330,21,342,19],[330,22,342,20],[330,43,342,41],[330,45,342,43,"error"],[330,50,342,48],[330,51,342,49],[331,8,343,6],[331,15,343,13],[332,10,343,15,"success"],[332,17,343,22],[332,19,343,24],[332,24,343,29],[333,10,343,31,"error"],[333,15,343,36],[333,17,343,38],[334,8,343,63],[334,9,343,64],[335,6,344,4],[335,7,344,5],[335,16,344,14],[336,8,345,6,"setIsLoading"],[336,20,345,18],[336,21,345,19],[336,26,345,24],[336,27,345,25],[337,6,346,4],[338,4,347,2],[338,5,347,3],[339,4,349,2],[339,10,349,8,"loginWithGoogle"],[339,25,349,23],[339,28,349,26],[339,34,349,26,"loginWithGoogle"],[339,35,349,26],[339,40,349,85],[340,6,350,4],[340,10,350,8],[341,8,351,6],[342,8,352,6],[342,12,352,10],[342,19,352,17,"window"],[342,25,352,23],[342,30,352,28],[342,41,352,39],[342,45,352,43,"window"],[342,51,352,49],[342,52,352,50,"location"],[342,60,352,58],[342,62,352,60],[343,10,353,8],[344,10,354,8],[344,16,354,14,"redirectUrl"],[344,27,354,25],[344,30,354,28,"encodeURIComponent"],[344,48,354,46],[344,49,354,47,"window"],[344,55,354,53],[344,56,354,54,"location"],[344,64,354,62],[344,65,354,63,"href"],[344,69,354,67],[344,70,354,68],[345,10,355,8],[345,16,355,14,"googleAuthUrl"],[345,29,355,27],[345,32,355,30],[345,76,355,74,"redirectUrl"],[345,87,355,85],[345,89,355,87],[347,10,357,8],[348,10,358,8,"window"],[348,16,358,14],[348,17,358,15,"open"],[348,21,358,19],[348,22,358,20,"googleAuthUrl"],[348,35,358,33],[348,37,358,35],[348,44,358,42],[348,45,358,43],[349,10,360,8],[349,17,360,15],[350,12,360,17,"success"],[350,19,360,24],[350,21,360,26],[351,10,360,31],[351,11,360,32],[352,8,361,6],[352,9,361,7],[352,15,361,13],[353,10,362,8],[354,10,363,8,"console"],[354,17,363,15],[354,18,363,16,"log"],[354,21,363,19],[354,22,363,20],[354,72,363,70],[354,73,363,71],[355,10,364,8],[355,17,364,15],[356,12,364,17,"success"],[356,19,364,24],[356,21,364,26],[356,26,364,31],[357,12,364,33,"error"],[357,17,364,38],[357,19,364,40],[358,10,364,83],[358,11,364,84],[359,8,365,6],[360,6,366,4],[360,7,366,5],[360,8,366,6],[360,15,366,13,"error"],[360,20,366,18],[360,22,366,20],[361,8,367,6,"console"],[361,15,367,13],[361,16,367,14,"error"],[361,21,367,19],[361,22,367,20],[361,43,367,41],[361,45,367,43,"error"],[361,50,367,48],[361,51,367,49],[362,8,368,6],[362,15,368,13],[363,10,368,15,"success"],[363,17,368,22],[363,19,368,24],[363,24,368,29],[364,10,368,31,"error"],[364,15,368,36],[364,17,368,38],[365,8,368,60],[365,9,368,61],[366,6,369,4],[367,4,370,2],[367,5,370,3],[368,4,372,2],[368,10,372,8,"logout"],[368,16,372,14],[368,19,372,17],[368,25,372,17,"logout"],[368,26,372,17],[368,31,372,44],[369,6,373,4],[369,10,373,8],[370,8,374,6],[371,8,375,6],[371,12,375,10,"token"],[371,17,375,15],[371,19,375,17],[372,10,376,8],[372,16,376,14,"fetch"],[372,21,376,19],[372,22,376,20],[372,25,376,23,"API_BASE_URL"],[372,37,376,35],[372,55,376,53],[372,57,376,55],[373,12,377,10,"method"],[373,18,377,16],[373,20,377,18],[373,26,377,24],[374,12,378,10,"credentials"],[374,23,378,21],[374,25,378,23],[374,34,378,32],[375,12,379,10,"headers"],[375,19,379,17],[375,21,379,19],[376,14,380,12],[376,29,380,27],[376,31,380,29],[376,41,380,39,"token"],[376,46,380,44],[376,48,380,46],[377,14,381,12],[377,28,381,26],[377,30,381,28],[378,12,382,10],[379,10,383,8],[379,11,383,9],[379,12,383,10],[380,8,384,6],[381,6,385,4],[381,7,385,5],[381,8,385,6],[381,15,385,13,"error"],[381,20,385,18],[381,22,385,20],[382,8,386,6,"console"],[382,15,386,13],[382,16,386,14,"error"],[382,21,386,19],[382,22,386,20],[382,37,386,35],[382,39,386,37,"error"],[382,44,386,42],[382,45,386,43],[383,6,387,4],[383,7,387,5],[383,16,387,14],[384,8,388,6],[385,8,389,6],[385,14,389,12,"AsyncStorage"],[385,26,389,24],[385,27,389,24,"default"],[385,34,389,24],[385,35,389,25,"multiRemove"],[385,46,389,36],[385,47,389,37],[385,48,389,38],[385,60,389,50],[385,62,389,52],[385,73,389,63],[385,74,389,64],[385,75,389,65],[386,8,390,6,"setToken"],[386,16,390,14],[386,17,390,15],[386,21,390,19],[386,22,390,20],[387,8,391,6,"setUser"],[387,15,391,13],[387,16,391,14],[387,20,391,18],[387,21,391,19],[388,6,392,4],[389,4,393,2],[389,5,393,3],[390,4,395,2],[390,24,396,4],[390,28,396,4,"_reactJsxDevRuntime"],[390,47,396,4],[390,48,396,4,"jsxDEV"],[390,54,396,4],[390,56,396,5,"AuthContext"],[390,67,396,16],[390,68,396,17,"Provider"],[390,76,396,25],[391,6,397,6,"value"],[391,11,397,11],[391,13,397,13],[392,8,398,8,"user"],[392,12,398,12],[393,8,399,8,"token"],[393,13,399,13],[394,8,400,8,"isLoading"],[394,17,400,17],[394,19,400,19,"actualIsLoading"],[394,34,400,34],[395,8,400,37],[396,8,401,8,"isAuthenticated"],[396,23,401,23],[397,8,402,8,"login"],[397,13,402,13],[398,8,403,8,"register"],[398,16,403,16],[399,8,404,8,"loginWithGoogle"],[399,23,404,23],[400,8,405,8,"logout"],[400,14,405,14],[401,8,406,8,"checkSession"],[402,6,407,6],[402,7,407,8],[403,6,407,8,"children"],[403,14,407,8],[403,16,409,7,"children"],[404,4,409,15],[405,6,409,15,"fileName"],[405,14,409,15],[405,16,409,15,"_jsxFileName"],[405,28,409,15],[406,6,409,15,"lineNumber"],[406,16,409,15],[407,6,409,15,"columnNumber"],[407,18,409,15],[408,4,409,15],[408,11,410,26],[408,12,410,27],[409,2,412,0],[409,3,412,1],[410,2,412,2,"_s"],[410,4,412,2],[410,5,58,13,"AuthProvider"],[410,17,58,25],[411,2,58,25,"_c"],[411,4,58,25],[411,7,58,13,"AuthProvider"],[411,19,58,25],[412,2,414,7],[412,8,414,13,"useAuth"],[412,15,414,20],[412,18,414,23,"useAuth"],[412,19,414,23],[412,24,414,46],[413,4,414,46,"_s2"],[413,7,414,46],[414,4,415,2],[414,10,415,8,"context"],[414,17,415,15],[414,20,415,18],[414,24,415,18,"useContext"],[414,30,415,28],[414,31,415,28,"useContext"],[414,41,415,28],[414,43,415,29,"AuthContext"],[414,54,415,40],[414,55,415,41],[415,4,416,2],[415,8,416,6,"context"],[415,15,416,13],[415,20,416,18,"undefined"],[415,29,416,27],[415,31,416,29],[416,6,417,4],[416,12,417,10],[416,16,417,14,"Error"],[416,21,417,19],[416,22,417,20],[416,67,417,65],[416,68,417,66],[417,4,418,2],[418,4,419,2],[418,11,419,9,"context"],[418,18,419,16],[419,2,420,0],[419,3,420,1],[420,2,420,2,"_s2"],[420,5,420,2],[420,6,414,13,"useAuth"],[420,13,414,20],[421,2,414,20],[421,6,414,20,"_c"],[421,8,414,20],[422,2,414,20,"$RefreshReg$"],[422,14,414,20],[422,15,414,20,"_c"],[422,17,414,20],[423,0,414,20],[423,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","React.useMemo$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCS;GDO;wCEG;GFE;YCG;uCEE;KFG;WGE,mCH;GDC;YCG;GDE;iDKE;6CCuC;uBHC,6CG,QD;GL0C;uBOE;GPwC;gBQE;wECwB;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GRW;mBUE;GVqD;0BWE;GXqB;iBYE;GZqB;CFmB;uBeE;CfM"},"hasCjsExports":false},"type":"js/module"}]}