{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":201},"end":{"line":4,"column":39,"index":240}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _expoVirtualEnv = require(_dependencyMap[0], \"expo/virtual/env\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[3], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n\n  // Dynamically determine backend URL based on current hostname\n  const getBackendUrl = () => {\n    if (typeof window !== 'undefined') {\n      const currentHost = window.location.hostname;\n      const currentProtocol = window.location.protocol;\n\n      // If we're on ngrok (mobile Expo Go), use the same ngrok URL for backend\n      if (currentHost.includes('.ngrok.io')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n      // If we're on preview domain (web), use the preview domain for backend\n      if (currentHost.includes('.preview.emergentagent.com')) {\n        return `${currentProtocol}//${currentHost}`;\n      }\n    }\n\n    // Fallback to environment variable or localhost\n    return Constants.default.expoConfig?.extra?.backendUrl || _expoVirtualEnv.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  };\n  const API_BASE_URL = getBackendUrl();\n  console.log('üîß AuthContext - Backend URL Configuration:');\n  console.log('  - Detected API_BASE_URL:', API_BASE_URL);\n  if (typeof window !== 'undefined') {\n    console.log('  - Current hostname:', window.location.hostname);\n    console.log('  - Current protocol:', window.location.protocol);\n  }\n  const AuthProvider = ({\n    children\n  }) => {\n    _s();\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const [minLoadingComplete, setMinLoadingComplete] = (0, _react.useState)(false);\n    const isAuthenticated = !!user && !!token;\n\n    // Debug authentication state changes\n    (0, _react.useEffect)(() => {\n      console.log('üîç AUTH STATE CHANGE:');\n      console.log('  - user exists:', !!user);\n      console.log('  - token exists:', !!token);\n      console.log('  - isAuthenticated:', isAuthenticated);\n      if (user) console.log('  - user email:', user.email);\n      if (token) console.log('  - token preview:', token.substring(0, 15) + '...');\n    }, [user, token, isAuthenticated]);\n\n    // Memoize the combined loading state to prevent infinite re-renders\n    const actualIsLoading = React.default.useMemo(() => {\n      return isLoading || !minLoadingComplete;\n    }, [isLoading, minLoadingComplete]);\n\n    // Set up minimum loading timer on app start\n    (0, _react.useEffect)(() => {\n      console.log('üïê Starting 2-second loading timer...');\n      const minLoadingTimer = setTimeout(() => {\n        console.log('‚è∞ 2-second loading timer complete');\n        setMinLoadingComplete(true);\n      }, 2000);\n      return () => clearTimeout(minLoadingTimer);\n    }, []);\n\n    // Start authentication check on app start  \n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = React.default.useCallback(async () => {\n      try {\n        console.log('üîç Checking for stored login credentials...');\n\n        // Check for stored login credentials with web fallback\n        let storedEmail = null;\n        let storedPassword = null;\n        try {\n          // Try AsyncStorage first (mobile)\n          storedEmail = await AsyncStorage.default.getItem('login_email');\n          storedPassword = await AsyncStorage.default.getItem('login_password');\n          console.log('‚úÖ Using AsyncStorage for mobile');\n        } catch (asyncError) {\n          console.log('AsyncStorage failed:', asyncError);\n          // Only use localStorage if in web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            try {\n              storedEmail = window.localStorage.getItem('login_email');\n              storedPassword = window.localStorage.getItem('login_password');\n              console.log('‚úÖ Using localStorage fallback for web');\n            } catch (localError) {\n              console.error('localStorage also failed:', localError);\n            }\n          } else {\n            console.log('üì± Mobile environment - no localStorage available');\n          }\n        }\n        console.log('üîç Stored credentials check:');\n        console.log('  - Email exists:', !!storedEmail);\n        console.log('  - Password exists:', !!storedPassword);\n        if (storedEmail) console.log('  - Email:', storedEmail);\n        if (storedEmail && storedPassword) {\n          console.log('üîë Found stored credentials - attempting auto-login...');\n          try {\n            // Auto-login with stored credentials with 15-second timeout (only for auto-login)\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Auto-login timeout')), 15000));\n            const loginPromise = login(storedEmail, storedPassword);\n            const loginResult = await Promise.race([loginPromise, timeoutPromise]);\n            if (loginResult.success) {\n              console.log('‚úÖ Auto-login successful!');\n            } else {\n              console.log('‚ùå Auto-login failed:', loginResult.error);\n              // Clear invalid credentials\n              try {\n                await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n              } catch (e) {\n                // Fallback to localStorage clear\n                if (typeof window !== 'undefined' && window.localStorage) {\n                  window.localStorage.removeItem('login_email');\n                  window.localStorage.removeItem('login_password');\n                }\n              }\n            }\n          } catch (autoLoginError) {\n            console.log('‚ùå Auto-login timed out or failed:', autoLoginError.message);\n            // Clear credentials on timeout\n            try {\n              await AsyncStorage.default.multiRemove(['login_email', 'login_password']);\n            } catch (e) {\n              if (typeof window !== 'undefined' && window.localStorage) {\n                window.localStorage.removeItem('login_email');\n                window.localStorage.removeItem('login_password');\n              }\n            }\n          }\n        } else {\n          console.log('üîç No stored credentials found - will show auth screen');\n        }\n      } catch (error) {\n        console.error('Error in credential check:', error);\n      } finally {\n        console.log('üèÅ Auth check completed, setting isLoading to false');\n        setIsLoading(false);\n      }\n    }, []); // Remove login dependency to fix circular reference\n\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        console.log('üîê LOGIN ATTEMPT:');\n        console.log('  - API_BASE_URL:', API_BASE_URL);\n        console.log('  - Login URL:', `${API_BASE_URL}/api/auth/login`);\n        console.log('  - Email:', email);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        console.log('üì° RESPONSE RECEIVED:');\n        console.log('  - Status:', response.status);\n        console.log('  - Status Text:', response.statusText);\n        console.log('  - Content-Type:', response.headers.get('content-type'));\n\n        // Check if response is actually JSON before parsing\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          console.error('‚ùå Non-JSON response received:', contentType);\n          const textResponse = await response.text();\n          console.error('‚ùå Response body:', textResponse);\n          return {\n            success: false,\n            error: 'Server returned invalid response. Please check your internet connection.'\n          };\n        }\n        const data = await response.json();\n        if (!response.ok) {\n          console.error('‚ùå Login failed:', data.detail || 'Unknown error');\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token).catch(async asyncError => {\n          console.error('AsyncStorage failed, using localStorage fallback:', asyncError);\n          // Fallback to localStorage for web environment\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n          }\n        });\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user)).catch(error => {\n          console.error('AsyncStorage user storage failed:', error);\n        });\n\n        // Store credentials for auto-login\n        await AsyncStorage.default.setItem('login_email', email).catch(() => {});\n        await AsyncStorage.default.setItem('login_password', password).catch(() => {});\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - SETTING AUTH STATE:');\n        console.log('  - User ID:', data.user.id);\n        console.log('  - User email:', data.user.email);\n        console.log('  - Token set:', !!data.access_token);\n        console.log('  - Token preview:', data.access_token.substring(0, 15) + '...');\n\n        // Force state verification\n        setTimeout(() => {\n          console.log('üîç AUTH STATE VERIFICATION (1s after login):');\n          console.log('  - user state:', !!user);\n          console.log('  - token state:', !!token);\n          console.log('  - isAuthenticated calculated:', !!(user && token));\n        }, 1000);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('‚ùå LOGIN ERROR DETAILS:', {\n          message: error.message,\n          name: error.name,\n          stack: error.stack,\n          cause: error.cause\n        });\n\n        // More specific error handling\n        if (error.message.includes('JSON')) {\n          console.error('‚ùå JSON Parse Error - Server likely returned HTML instead of JSON');\n          return {\n            success: false,\n            error: 'Server communication error. Please check your connection and try again.'\n          };\n        }\n        if (error.message.includes('Network') || error.message.includes('fetch')) {\n          console.error('‚ùå Network Error - Check internet connection');\n          return {\n            success: false,\n            error: 'Network error. Please check your internet connection and try again.'\n          };\n        }\n        console.error('‚ùå Unknown error type:', error);\n        return {\n          success: false,\n          error: error.message || 'An unexpected error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data AND credentials for auto-login\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n\n        // Store credentials for auto-login with web fallback\n        try {\n          await AsyncStorage.default.setItem('login_email', email);\n          await AsyncStorage.default.setItem('login_password', password);\n        } catch (asyncError) {\n          if (typeof window !== 'undefined' && window.localStorage) {\n            window.localStorage.setItem('auth_token', data.access_token);\n            window.localStorage.setItem('auth_user', JSON.stringify(data.user));\n            window.localStorage.setItem('login_email', email);\n            window.localStorage.setItem('login_password', password);\n            console.log('Stored credentials in localStorage for web compatibility');\n          }\n        }\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Credentials stored for auto-login');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // Check if we're in web environment\n        if (typeof window !== 'undefined' && window.location) {\n          // Web environment - use redirect\n          const redirectUrl = encodeURIComponent(window.location.href);\n          const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n          // Open Google auth in new window/tab\n          window.open(googleAuthUrl, '_self');\n          return {\n            success: true\n          };\n        } else {\n          // Mobile environment - show message\n          console.log('Google OAuth not available in mobile environment');\n          return {\n            success: false,\n            error: 'Google login not available in mobile app'\n          };\n        }\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    const contextValue = React.default.useMemo(() => ({\n      user,\n      token,\n      isLoading: actualIsLoading,\n      // Use combined loading state\n      isAuthenticated,\n      login,\n      register,\n      loginWithGoogle,\n      logout,\n      checkSession\n    }), [user, token, actualIsLoading, isAuthenticated, login, register, loginWithGoogle, logout, checkSession]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }, this);\n  };\n  _s(AuthProvider, \"H2G/WJJpeLicgGFziAXe/5Q94pg=\");\n  _c = AuthProvider;\n  const useAuth = () => {\n    _s2();\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n  _s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var _c;\n  $RefreshReg$(_c, \"AuthProvider\");\n});","lineCount":467,"map":[[15,2,58,0,"Object"],[15,8,58,0],[15,9,58,0,"defineProperty"],[15,23,58,0],[15,24,58,0,"exports"],[15,31,58,0],[16,4,58,0,"enumerable"],[16,14,58,0],[17,4,58,0,"get"],[17,7,58,0],[17,18,58,0,"get"],[17,19,58,0],[18,6,58,0],[18,13,58,0,"AuthProvider"],[18,25,58,0],[19,4,58,0],[20,2,58,0],[21,2,452,0,"Object"],[21,8,452,0],[21,9,452,0,"defineProperty"],[21,23,452,0],[21,24,452,0,"exports"],[21,31,452,0],[22,4,452,0,"enumerable"],[22,14,452,0],[23,4,452,0,"get"],[23,7,452,0],[23,18,452,0,"get"],[23,19,452,0],[24,6,452,0],[24,13,452,0,"useAuth"],[24,20,452,0],[25,4,452,0],[26,2,452,0],[27,2,458,2],[27,6,458,2,"_expoVirtualEnv"],[27,21,458,2],[27,24,458,2,"require"],[27,31,458,2],[27,32,458,2,"_dependencyMap"],[27,46,458,2],[28,2,1,0],[28,6,1,0,"_react"],[28,12,1,0],[28,15,1,0,"require"],[28,22,1,0],[28,23,1,0,"_dependencyMap"],[28,37,1,0],[29,2,1,0],[29,6,1,0,"React"],[29,11,1,0],[29,14,1,0,"_interopDefault"],[29,29,1,0],[29,30,1,0,"_react"],[29,36,1,0],[30,2,2,0],[30,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[30,42,2,0],[30,45,2,0,"require"],[30,52,2,0],[30,53,2,0,"_dependencyMap"],[30,67,2,0],[31,2,2,0],[31,6,2,0,"AsyncStorage"],[31,18,2,0],[31,21,2,0,"_interopDefault"],[31,36,2,0],[31,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[31,73,2,0],[32,2,4,0],[32,6,4,0,"_expoConstants"],[32,20,4,0],[32,23,4,0,"require"],[32,30,4,0],[32,31,4,0,"_dependencyMap"],[32,45,4,0],[33,2,4,0],[33,6,4,0,"Constants"],[33,15,4,0],[33,18,4,0,"_interopDefault"],[33,33,4,0],[33,34,4,0,"_expoConstants"],[33,48,4,0],[34,2,4,39],[34,6,4,39,"_reactJsxDevRuntime"],[34,25,4,39],[34,28,4,39,"require"],[34,35,4,39],[34,36,4,39,"_dependencyMap"],[34,50,4,39],[35,2,27,0],[35,8,27,6,"AuthContext"],[35,19,27,17],[35,35,27,20],[35,39,27,20,"createContext"],[35,45,27,33],[35,46,27,33,"createContext"],[35,59,27,33],[35,61,27,63,"undefined"],[35,70,27,72],[35,71,27,73],[37,2,29,0],[38,2,30,0],[38,8,30,6,"getBackendUrl"],[38,21,30,19],[38,24,30,22,"getBackendUrl"],[38,25,30,22],[38,30,30,28],[39,4,31,2],[39,8,31,6],[39,15,31,13,"window"],[39,21,31,19],[39,26,31,24],[39,37,31,35],[39,39,31,37],[40,6,32,4],[40,12,32,10,"currentHost"],[40,23,32,21],[40,26,32,24,"window"],[40,32,32,30],[40,33,32,31,"location"],[40,41,32,39],[40,42,32,40,"hostname"],[40,50,32,48],[41,6,33,4],[41,12,33,10,"currentProtocol"],[41,27,33,25],[41,30,33,28,"window"],[41,36,33,34],[41,37,33,35,"location"],[41,45,33,43],[41,46,33,44,"protocol"],[41,54,33,52],[43,6,35,4],[44,6,36,4],[44,10,36,8,"currentHost"],[44,21,36,19],[44,22,36,20,"includes"],[44,30,36,28],[44,31,36,29],[44,42,36,40],[44,43,36,41],[44,45,36,43],[45,8,37,6],[45,15,37,13],[45,18,37,16,"currentProtocol"],[45,33,37,31],[45,38,37,36,"currentHost"],[45,49,37,47],[45,51,37,49],[46,6,38,4],[47,6,39,4],[48,6,40,4],[48,10,40,8,"currentHost"],[48,21,40,19],[48,22,40,20,"includes"],[48,30,40,28],[48,31,40,29],[48,59,40,57],[48,60,40,58],[48,62,40,60],[49,8,41,6],[49,15,41,13],[49,18,41,16,"currentProtocol"],[49,33,41,31],[49,38,41,36,"currentHost"],[49,49,41,47],[49,51,41,49],[50,6,42,4],[51,4,43,2],[53,4,45,2],[54,4,46,2],[54,11,46,9,"Constants"],[54,20,46,18],[54,21,46,18,"default"],[54,28,46,18],[54,29,46,19,"expoConfig"],[54,39,46,29],[54,41,46,31,"extra"],[54,46,46,36],[54,48,46,38,"backendUrl"],[54,58,46,48],[54,62,46,48,"_expoVirtualEnv"],[54,77,46,48],[54,78,46,48,"env"],[54,81,46,48],[54,82,46,48,"EXPO_PUBLIC_BACKEND_URL"],[54,105,46,87],[54,109,46,91],[54,132,46,114],[55,2,47,0],[55,3,47,1],[56,2,49,0],[56,8,49,6,"API_BASE_URL"],[56,20,49,18],[56,23,49,21,"getBackendUrl"],[56,36,49,34],[56,37,49,35],[56,38,49,36],[57,2,51,0,"console"],[57,9,51,7],[57,10,51,8,"log"],[57,13,51,11],[57,14,51,12],[57,59,51,57],[57,60,51,58],[58,2,52,0,"console"],[58,9,52,7],[58,10,52,8,"log"],[58,13,52,11],[58,14,52,12],[58,42,52,40],[58,44,52,42,"API_BASE_URL"],[58,56,52,54],[58,57,52,55],[59,2,53,0],[59,6,53,4],[59,13,53,11,"window"],[59,19,53,17],[59,24,53,22],[59,35,53,33],[59,37,53,35],[60,4,54,2,"console"],[60,11,54,9],[60,12,54,10,"log"],[60,15,54,13],[60,16,54,14],[60,39,54,37],[60,41,54,39,"window"],[60,47,54,45],[60,48,54,46,"location"],[60,56,54,54],[60,57,54,55,"hostname"],[60,65,54,63],[60,66,54,64],[61,4,55,2,"console"],[61,11,55,9],[61,12,55,10,"log"],[61,15,55,13],[61,16,55,14],[61,39,55,37],[61,41,55,39,"window"],[61,47,55,45],[61,48,55,46,"location"],[61,56,55,54],[61,57,55,55,"protocol"],[61,65,55,63],[61,66,55,64],[62,2,56,0],[63,2,58,7],[63,8,58,13,"AuthProvider"],[63,20,58,25],[63,23,58,28,"AuthProvider"],[63,24,58,29],[64,4,58,31,"children"],[65,2,58,65],[65,3,58,66],[65,8,58,71],[66,4,58,71,"_s"],[66,6,58,71],[67,4,59,2],[67,10,59,8],[67,11,59,9,"user"],[67,15,59,13],[67,17,59,15,"setUser"],[67,24,59,22],[67,25,59,23],[67,28,59,26],[67,32,59,26,"useState"],[67,38,59,34],[67,39,59,34,"useState"],[67,47,59,34],[67,49,59,48],[67,53,59,52],[67,54,59,53],[68,4,60,2],[68,10,60,8],[68,11,60,9,"token"],[68,16,60,14],[68,18,60,16,"setToken"],[68,26,60,24],[68,27,60,25],[68,30,60,28],[68,34,60,28,"useState"],[68,40,60,36],[68,41,60,36,"useState"],[68,49,60,36],[68,51,60,52],[68,55,60,56],[68,56,60,57],[69,4,61,2],[69,10,61,8],[69,11,61,9,"isLoading"],[69,20,61,18],[69,22,61,20,"setIsLoading"],[69,34,61,32],[69,35,61,33],[69,38,61,36],[69,42,61,36,"useState"],[69,48,61,44],[69,49,61,44,"useState"],[69,57,61,44],[69,59,61,45],[69,63,61,49],[69,64,61,50],[70,4,62,2],[70,10,62,8],[70,11,62,9,"minLoadingComplete"],[70,29,62,27],[70,31,62,29,"setMinLoadingComplete"],[70,52,62,50],[70,53,62,51],[70,56,62,54],[70,60,62,54,"useState"],[70,66,62,62],[70,67,62,62,"useState"],[70,75,62,62],[70,77,62,63],[70,82,62,68],[70,83,62,69],[71,4,64,2],[71,10,64,8,"isAuthenticated"],[71,25,64,23],[71,28,64,26],[71,29,64,27],[71,30,64,28,"user"],[71,34,64,32],[71,38,64,36],[71,39,64,37],[71,40,64,38,"token"],[71,45,64,43],[73,4,66,2],[74,4,67,2],[74,8,67,2,"useEffect"],[74,14,67,11],[74,15,67,11,"useEffect"],[74,24,67,11],[74,26,67,12],[74,32,67,18],[75,6,68,4,"console"],[75,13,68,11],[75,14,68,12,"log"],[75,17,68,15],[75,18,68,16],[75,41,68,39],[75,42,68,40],[76,6,69,4,"console"],[76,13,69,11],[76,14,69,12,"log"],[76,17,69,15],[76,18,69,16],[76,36,69,34],[76,38,69,36],[76,39,69,37],[76,40,69,38,"user"],[76,44,69,42],[76,45,69,43],[77,6,70,4,"console"],[77,13,70,11],[77,14,70,12,"log"],[77,17,70,15],[77,18,70,16],[77,37,70,35],[77,39,70,37],[77,40,70,38],[77,41,70,39,"token"],[77,46,70,44],[77,47,70,45],[78,6,71,4,"console"],[78,13,71,11],[78,14,71,12,"log"],[78,17,71,15],[78,18,71,16],[78,40,71,38],[78,42,71,40,"isAuthenticated"],[78,57,71,55],[78,58,71,56],[79,6,72,4],[79,10,72,8,"user"],[79,14,72,12],[79,16,72,14,"console"],[79,23,72,21],[79,24,72,22,"log"],[79,27,72,25],[79,28,72,26],[79,45,72,43],[79,47,72,45,"user"],[79,51,72,49],[79,52,72,50,"email"],[79,57,72,55],[79,58,72,56],[80,6,73,4],[80,10,73,8,"token"],[80,15,73,13],[80,17,73,15,"console"],[80,24,73,22],[80,25,73,23,"log"],[80,28,73,26],[80,29,73,27],[80,49,73,47],[80,51,73,49,"token"],[80,56,73,54],[80,57,73,55,"substring"],[80,66,73,64],[80,67,73,65],[80,68,73,66],[80,70,73,68],[80,72,73,70],[80,73,73,71],[80,76,73,74],[80,81,73,79],[80,82,73,80],[81,4,74,2],[81,5,74,3],[81,7,74,5],[81,8,74,6,"user"],[81,12,74,10],[81,14,74,12,"token"],[81,19,74,17],[81,21,74,19,"isAuthenticated"],[81,36,74,34],[81,37,74,35],[81,38,74,36],[83,4,76,2],[84,4,77,2],[84,10,77,8,"actualIsLoading"],[84,25,77,23],[84,28,77,26,"React"],[84,33,77,31],[84,34,77,31,"default"],[84,41,77,31],[84,42,77,32,"useMemo"],[84,49,77,39],[84,50,77,40],[84,56,77,46],[85,6,78,4],[85,13,78,11,"isLoading"],[85,22,78,20],[85,26,78,24],[85,27,78,25,"minLoadingComplete"],[85,45,78,43],[86,4,79,2],[86,5,79,3],[86,7,79,5],[86,8,79,6,"isLoading"],[86,17,79,15],[86,19,79,17,"minLoadingComplete"],[86,37,79,35],[86,38,79,36],[86,39,79,37],[88,4,81,2],[89,4,82,2],[89,8,82,2,"useEffect"],[89,14,82,11],[89,15,82,11,"useEffect"],[89,24,82,11],[89,26,82,12],[89,32,82,18],[90,6,83,4,"console"],[90,13,83,11],[90,14,83,12,"log"],[90,17,83,15],[90,18,83,16],[90,57,83,55],[90,58,83,56],[91,6,84,4],[91,12,84,10,"minLoadingTimer"],[91,27,84,25],[91,30,84,28,"setTimeout"],[91,40,84,38],[91,41,84,39],[91,47,84,45],[92,8,85,6,"console"],[92,15,85,13],[92,16,85,14,"log"],[92,19,85,17],[92,20,85,18],[92,55,85,53],[92,56,85,54],[93,8,86,6,"setMinLoadingComplete"],[93,29,86,27],[93,30,86,28],[93,34,86,32],[93,35,86,33],[94,6,87,4],[94,7,87,5],[94,9,87,7],[94,13,87,11],[94,14,87,12],[95,6,89,4],[95,13,89,11],[95,19,89,17,"clearTimeout"],[95,31,89,29],[95,32,89,30,"minLoadingTimer"],[95,47,89,45],[95,48,89,46],[96,4,90,2],[96,5,90,3],[96,7,90,5],[96,9,90,7],[96,10,90,8],[98,4,92,2],[99,4,93,2],[99,8,93,2,"useEffect"],[99,14,93,11],[99,15,93,11,"useEffect"],[99,24,93,11],[99,26,93,12],[99,32,93,18],[100,6,94,4,"checkExistingSession"],[100,26,94,24],[100,27,94,25],[100,28,94,26],[101,4,95,2],[101,5,95,3],[101,7,95,5],[101,9,95,7],[101,10,95,8],[102,4,97,2],[102,10,97,8,"checkExistingSession"],[102,30,97,28],[102,33,97,31,"React"],[102,38,97,36],[102,39,97,36,"default"],[102,46,97,36],[102,47,97,37,"useCallback"],[102,58,97,48],[102,59,97,49],[102,71,97,61],[103,6,98,4],[103,10,98,8],[104,8,99,6,"console"],[104,15,99,13],[104,16,99,14,"log"],[104,19,99,17],[104,20,99,18],[104,65,99,63],[104,66,99,64],[106,8,101,6],[107,8,102,6],[107,12,102,10,"storedEmail"],[107,23,102,21],[107,26,102,24],[107,30,102,28],[108,8,103,6],[108,12,103,10,"storedPassword"],[108,26,103,24],[108,29,103,27],[108,33,103,31],[109,8,105,6],[109,12,105,10],[110,10,106,8],[111,10,107,8,"storedEmail"],[111,21,107,19],[111,24,107,22],[111,30,107,28,"AsyncStorage"],[111,42,107,40],[111,43,107,40,"default"],[111,50,107,40],[111,51,107,41,"getItem"],[111,58,107,48],[111,59,107,49],[111,72,107,62],[111,73,107,63],[112,10,108,8,"storedPassword"],[112,24,108,22],[112,27,108,25],[112,33,108,31,"AsyncStorage"],[112,45,108,43],[112,46,108,43,"default"],[112,53,108,43],[112,54,108,44,"getItem"],[112,61,108,51],[112,62,108,52],[112,78,108,68],[112,79,108,69],[113,10,109,8,"console"],[113,17,109,15],[113,18,109,16,"log"],[113,21,109,19],[113,22,109,20],[113,55,109,53],[113,56,109,54],[114,8,110,6],[114,9,110,7],[114,10,110,8],[114,17,110,15,"asyncError"],[114,27,110,25],[114,29,110,27],[115,10,111,8,"console"],[115,17,111,15],[115,18,111,16,"log"],[115,21,111,19],[115,22,111,20],[115,44,111,42],[115,46,111,44,"asyncError"],[115,56,111,54],[115,57,111,55],[116,10,112,8],[117,10,113,8],[117,14,113,12],[117,21,113,19,"window"],[117,27,113,25],[117,32,113,30],[117,43,113,41],[117,47,113,45,"window"],[117,53,113,51],[117,54,113,52,"localStorage"],[117,66,113,64],[117,68,113,66],[118,12,114,10],[118,16,114,14],[119,14,115,12,"storedEmail"],[119,25,115,23],[119,28,115,26,"window"],[119,34,115,32],[119,35,115,33,"localStorage"],[119,47,115,45],[119,48,115,46,"getItem"],[119,55,115,53],[119,56,115,54],[119,69,115,67],[119,70,115,68],[120,14,116,12,"storedPassword"],[120,28,116,26],[120,31,116,29,"window"],[120,37,116,35],[120,38,116,36,"localStorage"],[120,50,116,48],[120,51,116,49,"getItem"],[120,58,116,56],[120,59,116,57],[120,75,116,73],[120,76,116,74],[121,14,117,12,"console"],[121,21,117,19],[121,22,117,20,"log"],[121,25,117,23],[121,26,117,24],[121,65,117,63],[121,66,117,64],[122,12,118,10],[122,13,118,11],[122,14,118,12],[122,21,118,19,"localError"],[122,31,118,29],[122,33,118,31],[123,14,119,12,"console"],[123,21,119,19],[123,22,119,20,"error"],[123,27,119,25],[123,28,119,26],[123,55,119,53],[123,57,119,55,"localError"],[123,67,119,65],[123,68,119,66],[124,12,120,10],[125,10,121,8],[125,11,121,9],[125,17,121,15],[126,12,122,10,"console"],[126,19,122,17],[126,20,122,18,"log"],[126,23,122,21],[126,24,122,22],[126,75,122,73],[126,76,122,74],[127,10,123,8],[128,8,124,6],[129,8,126,6,"console"],[129,15,126,13],[129,16,126,14,"log"],[129,19,126,17],[129,20,126,18],[129,50,126,48],[129,51,126,49],[130,8,127,6,"console"],[130,15,127,13],[130,16,127,14,"log"],[130,19,127,17],[130,20,127,18],[130,39,127,37],[130,41,127,39],[130,42,127,40],[130,43,127,41,"storedEmail"],[130,54,127,52],[130,55,127,53],[131,8,128,6,"console"],[131,15,128,13],[131,16,128,14,"log"],[131,19,128,17],[131,20,128,18],[131,42,128,40],[131,44,128,42],[131,45,128,43],[131,46,128,44,"storedPassword"],[131,60,128,58],[131,61,128,59],[132,8,129,6],[132,12,129,10,"storedEmail"],[132,23,129,21],[132,25,129,23,"console"],[132,32,129,30],[132,33,129,31,"log"],[132,36,129,34],[132,37,129,35],[132,49,129,47],[132,51,129,49,"storedEmail"],[132,62,129,60],[132,63,129,61],[133,8,131,6],[133,12,131,10,"storedEmail"],[133,23,131,21],[133,27,131,25,"storedPassword"],[133,41,131,39],[133,43,131,41],[134,10,132,8,"console"],[134,17,132,15],[134,18,132,16,"log"],[134,21,132,19],[134,22,132,20],[134,78,132,76],[134,79,132,77],[135,10,134,8],[135,14,134,12],[136,12,135,10],[137,12,136,10],[137,18,136,16,"timeoutPromise"],[137,32,136,30],[137,35,136,33],[137,39,136,37,"Promise"],[137,46,136,44],[137,47,136,45],[137,48,136,46,"_"],[137,49,136,47],[137,51,136,49,"reject"],[137,57,136,55],[137,62,137,12,"setTimeout"],[137,72,137,22],[137,73,137,23],[137,79,137,29,"reject"],[137,85,137,35],[137,86,137,36],[137,90,137,40,"Error"],[137,95,137,45],[137,96,137,46],[137,116,137,66],[137,117,137,67],[137,118,137,68],[137,120,137,70],[137,125,137,75],[137,126,138,10],[137,127,138,11],[138,12,140,10],[138,18,140,16,"loginPromise"],[138,30,140,28],[138,33,140,31,"login"],[138,38,140,36],[138,39,140,37,"storedEmail"],[138,50,140,48],[138,52,140,50,"storedPassword"],[138,66,140,64],[138,67,140,65],[139,12,141,10],[139,18,141,16,"loginResult"],[139,29,141,27],[139,32,141,30],[139,38,141,36,"Promise"],[139,45,141,43],[139,46,141,44,"race"],[139,50,141,48],[139,51,141,49],[139,52,141,50,"loginPromise"],[139,64,141,62],[139,66,141,64,"timeoutPromise"],[139,80,141,78],[139,81,141,79],[139,82,141,80],[140,12,143,10],[140,16,143,14,"loginResult"],[140,27,143,25],[140,28,143,26,"success"],[140,35,143,33],[140,37,143,35],[141,14,144,12,"console"],[141,21,144,19],[141,22,144,20,"log"],[141,25,144,23],[141,26,144,24],[141,52,144,50],[141,53,144,51],[142,12,145,10],[142,13,145,11],[142,19,145,17],[143,14,146,12,"console"],[143,21,146,19],[143,22,146,20,"log"],[143,25,146,23],[143,26,146,24],[143,48,146,46],[143,50,146,48,"loginResult"],[143,61,146,59],[143,62,146,60,"error"],[143,67,146,65],[143,68,146,66],[144,14,147,12],[145,14,148,12],[145,18,148,16],[146,16,149,14],[146,22,149,20,"AsyncStorage"],[146,34,149,32],[146,35,149,32,"default"],[146,42,149,32],[146,43,149,33,"multiRemove"],[146,54,149,44],[146,55,149,45],[146,56,149,46],[146,69,149,59],[146,71,149,61],[146,87,149,77],[146,88,149,78],[146,89,149,79],[147,14,150,12],[147,15,150,13],[147,16,150,14],[147,23,150,21,"e"],[147,24,150,22],[147,26,150,24],[148,16,151,14],[149,16,152,14],[149,20,152,18],[149,27,152,25,"window"],[149,33,152,31],[149,38,152,36],[149,49,152,47],[149,53,152,51,"window"],[149,59,152,57],[149,60,152,58,"localStorage"],[149,72,152,70],[149,74,152,72],[150,18,153,16,"window"],[150,24,153,22],[150,25,153,23,"localStorage"],[150,37,153,35],[150,38,153,36,"removeItem"],[150,48,153,46],[150,49,153,47],[150,62,153,60],[150,63,153,61],[151,18,154,16,"window"],[151,24,154,22],[151,25,154,23,"localStorage"],[151,37,154,35],[151,38,154,36,"removeItem"],[151,48,154,46],[151,49,154,47],[151,65,154,63],[151,66,154,64],[152,16,155,14],[153,14,156,12],[154,12,157,10],[155,10,158,8],[155,11,158,9],[155,12,158,10],[155,19,158,17,"autoLoginError"],[155,33,158,31],[155,35,158,33],[156,12,159,10,"console"],[156,19,159,17],[156,20,159,18,"log"],[156,23,159,21],[156,24,159,22],[156,59,159,57],[156,61,159,59,"autoLoginError"],[156,75,159,73],[156,76,159,74,"message"],[156,83,159,81],[156,84,159,82],[157,12,160,10],[158,12,161,10],[158,16,161,14],[159,14,162,12],[159,20,162,18,"AsyncStorage"],[159,32,162,30],[159,33,162,30,"default"],[159,40,162,30],[159,41,162,31,"multiRemove"],[159,52,162,42],[159,53,162,43],[159,54,162,44],[159,67,162,57],[159,69,162,59],[159,85,162,75],[159,86,162,76],[159,87,162,77],[160,12,163,10],[160,13,163,11],[160,14,163,12],[160,21,163,19,"e"],[160,22,163,20],[160,24,163,22],[161,14,164,12],[161,18,164,16],[161,25,164,23,"window"],[161,31,164,29],[161,36,164,34],[161,47,164,45],[161,51,164,49,"window"],[161,57,164,55],[161,58,164,56,"localStorage"],[161,70,164,68],[161,72,164,70],[162,16,165,14,"window"],[162,22,165,20],[162,23,165,21,"localStorage"],[162,35,165,33],[162,36,165,34,"removeItem"],[162,46,165,44],[162,47,165,45],[162,60,165,58],[162,61,165,59],[163,16,166,14,"window"],[163,22,166,20],[163,23,166,21,"localStorage"],[163,35,166,33],[163,36,166,34,"removeItem"],[163,46,166,44],[163,47,166,45],[163,63,166,61],[163,64,166,62],[164,14,167,12],[165,12,168,10],[166,10,169,8],[167,8,170,6],[167,9,170,7],[167,15,170,13],[168,10,171,8,"console"],[168,17,171,15],[168,18,171,16,"log"],[168,21,171,19],[168,22,171,20],[168,78,171,76],[168,79,171,77],[169,8,172,6],[170,6,173,4],[170,7,173,5],[170,8,173,6],[170,15,173,13,"error"],[170,20,173,18],[170,22,173,20],[171,8,174,6,"console"],[171,15,174,13],[171,16,174,14,"error"],[171,21,174,19],[171,22,174,20],[171,50,174,48],[171,52,174,50,"error"],[171,57,174,55],[171,58,174,56],[172,6,175,4],[172,7,175,5],[172,16,175,14],[173,8,176,6,"console"],[173,15,176,13],[173,16,176,14,"log"],[173,19,176,17],[173,20,176,18],[173,73,176,71],[173,74,176,72],[174,8,177,6,"setIsLoading"],[174,20,177,18],[174,21,177,19],[174,26,177,24],[174,27,177,25],[175,6,178,4],[176,4,179,2],[176,5,179,3],[176,7,179,5],[176,9,179,7],[176,10,179,8],[176,11,179,9],[176,12,179,10],[178,4,181,2],[178,10,181,8,"checkSession"],[178,22,181,20],[178,25,181,23],[178,31,181,23,"checkSession"],[178,32,181,23],[178,37,181,53],[179,6,182,4],[179,10,182,8],[180,8,183,6],[181,8,184,6],[181,12,184,10],[181,13,184,11,"token"],[181,18,184,16],[181,22,184,20],[181,23,184,21,"user"],[181,27,184,25],[181,29,184,27],[182,10,185,8,"console"],[182,17,185,15],[182,18,185,16,"log"],[182,21,185,19],[182,22,185,20],[182,64,185,62],[182,65,185,63],[183,10,186,8],[183,17,186,15],[183,22,186,20],[184,8,187,6],[185,8,189,6],[185,14,189,12,"response"],[185,22,189,20],[185,25,189,23],[185,31,189,29,"fetch"],[185,36,189,34],[185,37,189,35],[185,40,189,38,"API_BASE_URL"],[185,52,189,50],[185,77,189,75],[185,79,189,77],[186,10,190,8,"method"],[186,16,190,14],[186,18,190,16],[186,23,190,21],[187,10,191,8,"credentials"],[187,21,191,19],[187,23,191,21],[187,32,191,30],[188,10,192,8,"headers"],[188,17,192,15],[188,19,192,17],[189,12,193,10],[189,26,193,24],[189,28,193,26],[189,46,193,44],[190,12,194,10],[190,27,194,25],[190,29,194,27],[190,39,194,37,"token"],[190,44,194,42],[191,10,195,8],[192,8,196,6],[192,9,196,7],[192,10,196,8],[193,8,198,6],[193,12,198,10],[193,13,198,11,"response"],[193,21,198,19],[193,22,198,20,"ok"],[193,24,198,22],[193,26,198,24],[194,10,199,8,"console"],[194,17,199,15],[194,18,199,16,"log"],[194,21,199,19],[194,22,199,20],[194,45,199,43],[194,47,199,45,"response"],[194,55,199,53],[194,56,199,54,"status"],[194,62,199,60],[194,63,199,61],[195,10,200,8],[195,17,200,15],[195,22,200,20],[196,8,201,6],[197,8,203,6],[197,14,203,12,"data"],[197,18,203,16],[197,21,203,19],[197,27,203,25,"response"],[197,35,203,33],[197,36,203,34,"json"],[197,40,203,38],[197,41,203,39],[197,42,203,40],[198,8,204,6],[198,14,204,12,"isValid"],[198,21,204,19],[198,24,204,22,"data"],[198,28,204,26],[198,29,204,27,"authenticated"],[198,42,204,40],[198,47,204,45],[198,51,204,49],[199,8,206,6],[199,12,206,10,"isValid"],[199,19,206,17],[199,23,206,21,"data"],[199,27,206,25],[199,28,206,26,"user"],[199,32,206,30],[199,34,206,32],[200,10,207,8],[201,10,208,8,"setUser"],[201,17,208,15],[201,18,208,16,"data"],[201,22,208,20],[201,23,208,21,"user"],[201,27,208,25],[201,28,208,26],[202,10,209,8,"console"],[202,17,209,15],[202,18,209,16,"log"],[202,21,209,19],[202,22,209,20],[202,66,209,64],[202,68,209,66,"data"],[202,72,209,70],[202,73,209,71,"user"],[202,77,209,75],[202,78,209,76,"email"],[202,83,209,81],[202,84,209,82],[203,8,210,6],[203,9,210,7],[203,15,210,13],[204,10,211,8,"console"],[204,17,211,15],[204,18,211,16,"log"],[204,21,211,19],[204,22,211,20],[204,57,211,55],[204,59,211,57,"data"],[204,63,211,61],[204,64,211,62],[205,8,212,6],[206,8,214,6],[206,15,214,13,"isValid"],[206,22,214,20],[207,6,215,4],[207,7,215,5],[207,8,215,6],[207,15,215,13,"error"],[207,20,215,18],[207,22,215,20],[208,8,216,6,"console"],[208,15,216,13],[208,16,216,14,"error"],[208,21,216,19],[208,22,216,20],[208,78,216,76],[208,80,216,78,"error"],[208,85,216,83],[208,86,216,84],[209,8,217,6],[210,8,218,6],[211,8,219,6],[211,15,219,13],[211,19,219,17],[211,20,219,18],[211,21,219,19],[212,6,220,4],[213,4,221,2],[213,5,221,3],[214,4,223,2],[214,10,223,8,"login"],[214,15,223,13],[214,18,223,16],[214,24,223,16,"login"],[214,25,223,23,"email"],[214,30,223,36],[214,32,223,38,"password"],[214,40,223,54],[214,45,223,106],[215,6,224,4],[215,10,224,8],[216,8,225,6,"setIsLoading"],[216,20,225,18],[216,21,225,19],[216,25,225,23],[216,26,225,24],[217,8,227,6],[217,14,227,12,"formData"],[217,22,227,20],[217,25,227,23],[217,29,227,27,"URLSearchParams"],[217,44,227,42],[217,45,227,43],[217,46,227,44],[218,8,228,6,"formData"],[218,16,228,14],[218,17,228,15,"append"],[218,23,228,21],[218,24,228,22],[218,34,228,32],[218,36,228,34,"email"],[218,41,228,39],[218,42,228,40],[218,43,228,41],[218,44,228,42],[219,8,229,6,"formData"],[219,16,229,14],[219,17,229,15,"append"],[219,23,229,21],[219,24,229,22],[219,34,229,32],[219,36,229,34,"password"],[219,44,229,42],[219,45,229,43],[220,8,231,6,"console"],[220,15,231,13],[220,16,231,14,"log"],[220,19,231,17],[220,20,231,18],[220,39,231,37],[220,40,231,38],[221,8,232,6,"console"],[221,15,232,13],[221,16,232,14,"log"],[221,19,232,17],[221,20,232,18],[221,39,232,37],[221,41,232,39,"API_BASE_URL"],[221,53,232,51],[221,54,232,52],[222,8,233,6,"console"],[222,15,233,13],[222,16,233,14,"log"],[222,19,233,17],[222,20,233,18],[222,36,233,34],[222,38,233,36],[222,41,233,39,"API_BASE_URL"],[222,53,233,51],[222,70,233,68],[222,71,233,69],[223,8,234,6,"console"],[223,15,234,13],[223,16,234,14,"log"],[223,19,234,17],[223,20,234,18],[223,32,234,30],[223,34,234,32,"email"],[223,39,234,37],[223,40,234,38],[224,8,236,6],[224,14,236,12,"response"],[224,22,236,20],[224,25,236,23],[224,31,236,29,"fetch"],[224,36,236,34],[224,37,236,35],[224,40,236,38,"API_BASE_URL"],[224,52,236,50],[224,69,236,67],[224,71,236,69],[225,10,237,8,"method"],[225,16,237,14],[225,18,237,16],[225,24,237,22],[226,10,238,8,"credentials"],[226,21,238,19],[226,23,238,21],[226,32,238,30],[227,10,239,8,"headers"],[227,17,239,15],[227,19,239,17],[228,12,240,10],[228,26,240,24],[228,28,240,26],[229,10,241,8],[229,11,241,9],[230,10,242,8,"body"],[230,14,242,12],[230,16,242,14,"formData"],[230,24,242,22],[230,25,242,23,"toString"],[230,33,242,31],[230,34,242,32],[231,8,243,6],[231,9,243,7],[231,10,243,8],[232,8,245,6,"console"],[232,15,245,13],[232,16,245,14,"log"],[232,19,245,17],[232,20,245,18],[232,43,245,41],[232,44,245,42],[233,8,246,6,"console"],[233,15,246,13],[233,16,246,14,"log"],[233,19,246,17],[233,20,246,18],[233,33,246,31],[233,35,246,33,"response"],[233,43,246,41],[233,44,246,42,"status"],[233,50,246,48],[233,51,246,49],[234,8,247,6,"console"],[234,15,247,13],[234,16,247,14,"log"],[234,19,247,17],[234,20,247,18],[234,38,247,36],[234,40,247,38,"response"],[234,48,247,46],[234,49,247,47,"statusText"],[234,59,247,57],[234,60,247,58],[235,8,248,6,"console"],[235,15,248,13],[235,16,248,14,"log"],[235,19,248,17],[235,20,248,18],[235,39,248,37],[235,41,248,39,"response"],[235,49,248,47],[235,50,248,48,"headers"],[235,57,248,55],[235,58,248,56,"get"],[235,61,248,59],[235,62,248,60],[235,76,248,74],[235,77,248,75],[235,78,248,76],[237,8,250,6],[238,8,251,6],[238,14,251,12,"contentType"],[238,25,251,23],[238,28,251,26,"response"],[238,36,251,34],[238,37,251,35,"headers"],[238,44,251,42],[238,45,251,43,"get"],[238,48,251,46],[238,49,251,47],[238,63,251,61],[238,64,251,62],[239,8,252,6],[239,12,252,10],[239,13,252,11,"contentType"],[239,24,252,22],[239,28,252,26],[239,29,252,27,"contentType"],[239,40,252,38],[239,41,252,39,"includes"],[239,49,252,47],[239,50,252,48],[239,68,252,66],[239,69,252,67],[239,71,252,69],[240,10,253,8,"console"],[240,17,253,15],[240,18,253,16,"error"],[240,23,253,21],[240,24,253,22],[240,55,253,53],[240,57,253,55,"contentType"],[240,68,253,66],[240,69,253,67],[241,10,254,8],[241,16,254,14,"textResponse"],[241,28,254,26],[241,31,254,29],[241,37,254,35,"response"],[241,45,254,43],[241,46,254,44,"text"],[241,50,254,48],[241,51,254,49],[241,52,254,50],[242,10,255,8,"console"],[242,17,255,15],[242,18,255,16,"error"],[242,23,255,21],[242,24,255,22],[242,42,255,40],[242,44,255,42,"textResponse"],[242,56,255,54],[242,57,255,55],[243,10,256,8],[243,17,256,15],[244,12,256,17,"success"],[244,19,256,24],[244,21,256,26],[244,26,256,31],[245,12,256,33,"error"],[245,17,256,38],[245,19,256,40],[246,10,256,115],[246,11,256,116],[247,8,257,6],[248,8,259,6],[248,14,259,12,"data"],[248,18,259,16],[248,21,259,19],[248,27,259,25,"response"],[248,35,259,33],[248,36,259,34,"json"],[248,40,259,38],[248,41,259,39],[248,42,259,40],[249,8,261,6],[249,12,261,10],[249,13,261,11,"response"],[249,21,261,19],[249,22,261,20,"ok"],[249,24,261,22],[249,26,261,24],[250,10,262,8,"console"],[250,17,262,15],[250,18,262,16,"error"],[250,23,262,21],[250,24,262,22],[250,41,262,39],[250,43,262,41,"data"],[250,47,262,45],[250,48,262,46,"detail"],[250,54,262,52],[250,58,262,56],[250,73,262,71],[250,74,262,72],[251,10,263,8],[251,17,263,15],[252,12,263,17,"success"],[252,19,263,24],[252,21,263,26],[252,26,263,31],[253,12,263,33,"error"],[253,17,263,38],[253,19,263,40,"data"],[253,23,263,44],[253,24,263,45,"detail"],[253,30,263,51],[253,34,263,55],[254,10,263,70],[254,11,263,71],[255,8,264,6],[257,8,266,2],[258,8,267,6],[258,14,267,12,"AsyncStorage"],[258,26,267,24],[258,27,267,24,"default"],[258,34,267,24],[258,35,267,25,"setItem"],[258,42,267,32],[258,43,267,33],[258,55,267,45],[258,57,267,47,"data"],[258,61,267,51],[258,62,267,52,"access_token"],[258,74,267,64],[258,75,267,65],[258,76,267,66,"catch"],[258,81,267,71],[258,82,267,72],[258,88,267,79,"asyncError"],[258,98,267,89],[258,102,267,94],[259,10,268,8,"console"],[259,17,268,15],[259,18,268,16,"error"],[259,23,268,21],[259,24,268,22],[259,75,268,73],[259,77,268,75,"asyncError"],[259,87,268,85],[259,88,268,86],[260,10,269,8],[261,10,270,8],[261,14,270,12],[261,21,270,19,"window"],[261,27,270,25],[261,32,270,30],[261,43,270,41],[261,47,270,45,"window"],[261,53,270,51],[261,54,270,52,"localStorage"],[261,66,270,64],[261,68,270,66],[262,12,271,10,"window"],[262,18,271,16],[262,19,271,17,"localStorage"],[262,31,271,29],[262,32,271,30,"setItem"],[262,39,271,37],[262,40,271,38],[262,52,271,50],[262,54,271,52,"data"],[262,58,271,56],[262,59,271,57,"access_token"],[262,71,271,69],[262,72,271,70],[263,12,272,10,"window"],[263,18,272,16],[263,19,272,17,"localStorage"],[263,31,272,29],[263,32,272,30,"setItem"],[263,39,272,37],[263,40,272,38],[263,51,272,49],[263,53,272,51,"JSON"],[263,57,272,55],[263,58,272,56,"stringify"],[263,67,272,65],[263,68,272,66,"data"],[263,72,272,70],[263,73,272,71,"user"],[263,77,272,75],[263,78,272,76],[263,79,272,77],[264,12,273,10,"window"],[264,18,273,16],[264,19,273,17,"localStorage"],[264,31,273,29],[264,32,273,30,"setItem"],[264,39,273,37],[264,40,273,38],[264,53,273,51],[264,55,273,53,"email"],[264,60,273,58],[264,61,273,59],[265,12,274,10,"window"],[265,18,274,16],[265,19,274,17,"localStorage"],[265,31,274,29],[265,32,274,30,"setItem"],[265,39,274,37],[265,40,274,38],[265,56,274,54],[265,58,274,56,"password"],[265,66,274,64],[265,67,274,65],[266,10,275,8],[267,8,276,6],[267,9,276,7],[267,10,276,8],[268,8,278,6],[268,14,278,12,"AsyncStorage"],[268,26,278,24],[268,27,278,24,"default"],[268,34,278,24],[268,35,278,25,"setItem"],[268,42,278,32],[268,43,278,33],[268,54,278,44],[268,56,278,46,"JSON"],[268,60,278,50],[268,61,278,51,"stringify"],[268,70,278,60],[268,71,278,61,"data"],[268,75,278,65],[268,76,278,66,"user"],[268,80,278,70],[268,81,278,71],[268,82,278,72],[268,83,278,73,"catch"],[268,88,278,78],[268,89,278,80,"error"],[268,94,278,85],[268,98,278,90],[269,10,279,8,"console"],[269,17,279,15],[269,18,279,16,"error"],[269,23,279,21],[269,24,279,22],[269,59,279,57],[269,61,279,59,"error"],[269,66,279,64],[269,67,279,65],[270,8,280,6],[270,9,280,7],[270,10,280,8],[272,8,282,6],[273,8,283,6],[273,14,283,12,"AsyncStorage"],[273,26,283,24],[273,27,283,24,"default"],[273,34,283,24],[273,35,283,25,"setItem"],[273,42,283,32],[273,43,283,33],[273,56,283,46],[273,58,283,48,"email"],[273,63,283,53],[273,64,283,54],[273,65,283,55,"catch"],[273,70,283,60],[273,71,283,61],[273,77,283,67],[273,78,283,68],[273,79,283,69],[273,80,283,70],[274,8,284,6],[274,14,284,12,"AsyncStorage"],[274,26,284,24],[274,27,284,24,"default"],[274,34,284,24],[274,35,284,25,"setItem"],[274,42,284,32],[274,43,284,33],[274,59,284,49],[274,61,284,51,"password"],[274,69,284,59],[274,70,284,60],[274,71,284,61,"catch"],[274,76,284,66],[274,77,284,67],[274,83,284,73],[274,84,284,74],[274,85,284,75],[274,86,284,76],[275,8,286,6,"setToken"],[275,16,286,14],[275,17,286,15,"data"],[275,21,286,19],[275,22,286,20,"access_token"],[275,34,286,32],[275,35,286,33],[276,8,287,6,"setUser"],[276,15,287,13],[276,16,287,14,"data"],[276,20,287,18],[276,21,287,19,"user"],[276,25,287,23],[276,26,287,24],[277,8,289,6,"console"],[277,15,289,13],[277,16,289,14,"log"],[277,19,289,17],[277,20,289,18],[277,62,289,60],[277,63,289,61],[278,8,290,6,"console"],[278,15,290,13],[278,16,290,14,"log"],[278,19,290,17],[278,20,290,18],[278,34,290,32],[278,36,290,34,"data"],[278,40,290,38],[278,41,290,39,"user"],[278,45,290,43],[278,46,290,44,"id"],[278,48,290,46],[278,49,290,47],[279,8,291,6,"console"],[279,15,291,13],[279,16,291,14,"log"],[279,19,291,17],[279,20,291,18],[279,37,291,35],[279,39,291,37,"data"],[279,43,291,41],[279,44,291,42,"user"],[279,48,291,46],[279,49,291,47,"email"],[279,54,291,52],[279,55,291,53],[280,8,292,6,"console"],[280,15,292,13],[280,16,292,14,"log"],[280,19,292,17],[280,20,292,18],[280,36,292,34],[280,38,292,36],[280,39,292,37],[280,40,292,38,"data"],[280,44,292,42],[280,45,292,43,"access_token"],[280,57,292,55],[280,58,292,56],[281,8,293,6,"console"],[281,15,293,13],[281,16,293,14,"log"],[281,19,293,17],[281,20,293,18],[281,40,293,38],[281,42,293,40,"data"],[281,46,293,44],[281,47,293,45,"access_token"],[281,59,293,57],[281,60,293,58,"substring"],[281,69,293,67],[281,70,293,68],[281,71,293,69],[281,73,293,71],[281,75,293,73],[281,76,293,74],[281,79,293,77],[281,84,293,82],[281,85,293,83],[283,8,295,6],[284,8,296,6,"setTimeout"],[284,18,296,16],[284,19,296,17],[284,25,296,23],[285,10,297,8,"console"],[285,17,297,15],[285,18,297,16,"log"],[285,21,297,19],[285,22,297,20],[285,68,297,66],[285,69,297,67],[286,10,298,8,"console"],[286,17,298,15],[286,18,298,16,"log"],[286,21,298,19],[286,22,298,20],[286,39,298,37],[286,41,298,39],[286,42,298,40],[286,43,298,41,"user"],[286,47,298,45],[286,48,298,46],[287,10,299,8,"console"],[287,17,299,15],[287,18,299,16,"log"],[287,21,299,19],[287,22,299,20],[287,40,299,38],[287,42,299,40],[287,43,299,41],[287,44,299,42,"token"],[287,49,299,47],[287,50,299,48],[288,10,300,8,"console"],[288,17,300,15],[288,18,300,16,"log"],[288,21,300,19],[288,22,300,20],[288,55,300,53],[288,57,300,55],[288,58,300,56],[288,60,300,58,"user"],[288,64,300,62],[288,68,300,66,"token"],[288,73,300,71],[288,74,300,72],[288,75,300,73],[289,8,301,6],[289,9,301,7],[289,11,301,9],[289,15,301,13],[289,16,301,14],[290,8,303,6,"console"],[290,15,303,13],[290,16,303,14,"log"],[290,19,303,17],[290,20,303,18],[290,51,303,49],[290,53,303,51,"data"],[290,57,303,55],[290,58,303,56,"user"],[290,62,303,60],[290,63,303,61,"id"],[290,65,303,63],[290,67,303,65],[290,102,303,100],[290,103,303,101],[291,8,305,6],[291,15,305,13],[292,10,305,15,"success"],[292,17,305,22],[292,19,305,24],[293,8,305,29],[293,9,305,30],[294,6,306,4],[294,7,306,5],[294,8,306,6],[294,15,306,13,"error"],[294,20,306,18],[294,22,306,20],[295,8,307,6,"console"],[295,15,307,13],[295,16,307,14,"error"],[295,21,307,19],[295,22,307,20],[295,46,307,44],[295,48,307,46],[296,10,308,8,"message"],[296,17,308,15],[296,19,308,17,"error"],[296,24,308,22],[296,25,308,23,"message"],[296,32,308,30],[297,10,309,8,"name"],[297,14,309,12],[297,16,309,14,"error"],[297,21,309,19],[297,22,309,20,"name"],[297,26,309,24],[298,10,310,8,"stack"],[298,15,310,13],[298,17,310,15,"error"],[298,22,310,20],[298,23,310,21,"stack"],[298,28,310,26],[299,10,311,8,"cause"],[299,15,311,13],[299,17,311,15,"error"],[299,22,311,20],[299,23,311,21,"cause"],[300,8,312,6],[300,9,312,7],[300,10,312,8],[302,8,314,6],[303,8,315,6],[303,12,315,10,"error"],[303,17,315,15],[303,18,315,16,"message"],[303,25,315,23],[303,26,315,24,"includes"],[303,34,315,32],[303,35,315,33],[303,41,315,39],[303,42,315,40],[303,44,315,42],[304,10,316,8,"console"],[304,17,316,15],[304,18,316,16,"error"],[304,23,316,21],[304,24,316,22],[304,90,316,88],[304,91,316,89],[305,10,317,8],[305,17,317,15],[306,12,317,17,"success"],[306,19,317,24],[306,21,317,26],[306,26,317,31],[307,12,317,33,"error"],[307,17,317,38],[307,19,317,40],[308,10,317,114],[308,11,317,115],[309,8,318,6],[310,8,320,6],[310,12,320,10,"error"],[310,17,320,15],[310,18,320,16,"message"],[310,25,320,23],[310,26,320,24,"includes"],[310,34,320,32],[310,35,320,33],[310,44,320,42],[310,45,320,43],[310,49,320,47,"error"],[310,54,320,52],[310,55,320,53,"message"],[310,62,320,60],[310,63,320,61,"includes"],[310,71,320,69],[310,72,320,70],[310,79,320,77],[310,80,320,78],[310,82,320,80],[311,10,321,8,"console"],[311,17,321,15],[311,18,321,16,"error"],[311,23,321,21],[311,24,321,22],[311,69,321,67],[311,70,321,68],[312,10,322,8],[312,17,322,15],[313,12,322,17,"success"],[313,19,322,24],[313,21,322,26],[313,26,322,31],[314,12,322,33,"error"],[314,17,322,38],[314,19,322,40],[315,10,322,110],[315,11,322,111],[316,8,323,6],[317,8,325,6,"console"],[317,15,325,13],[317,16,325,14,"error"],[317,21,325,19],[317,22,325,20],[317,45,325,43],[317,47,325,45,"error"],[317,52,325,50],[317,53,325,51],[318,8,326,6],[318,15,326,13],[319,10,326,15,"success"],[319,17,326,22],[319,19,326,24],[319,24,326,29],[320,10,326,31,"error"],[320,15,326,36],[320,17,326,38,"error"],[320,22,326,43],[320,23,326,44,"message"],[320,30,326,51],[320,34,326,55],[321,8,326,86],[321,9,326,87],[322,6,327,4],[322,7,327,5],[322,16,327,14],[323,8,328,6,"setIsLoading"],[323,20,328,18],[323,21,328,19],[323,26,328,24],[323,27,328,25],[324,6,329,4],[325,4,330,2],[325,5,330,3],[326,4,332,2],[326,10,332,8,"register"],[326,18,332,16],[326,21,332,19],[326,27,332,19,"register"],[326,28,332,26,"email"],[326,33,332,39],[326,35,332,41,"password"],[326,43,332,57],[326,45,332,59,"name"],[326,49,332,71],[326,54,332,123],[327,6,333,4],[327,10,333,8],[328,8,334,6,"setIsLoading"],[328,20,334,18],[328,21,334,19],[328,25,334,23],[328,26,334,24],[329,8,336,6],[329,14,336,12,"response"],[329,22,336,20],[329,25,336,23],[329,31,336,29,"fetch"],[329,36,336,34],[329,37,336,35],[329,40,336,38,"API_BASE_URL"],[329,52,336,50],[329,72,336,70],[329,74,336,72],[330,10,337,8,"method"],[330,16,337,14],[330,18,337,16],[330,24,337,22],[331,10,338,8,"credentials"],[331,21,338,19],[331,23,338,21],[331,32,338,30],[332,10,339,8,"headers"],[332,17,339,15],[332,19,339,17],[333,12,340,10],[333,26,340,24],[333,28,340,26],[334,10,341,8],[334,11,341,9],[335,10,342,8,"body"],[335,14,342,12],[335,16,342,14,"JSON"],[335,20,342,18],[335,21,342,19,"stringify"],[335,30,342,28],[335,31,342,29],[336,12,343,10,"email"],[336,17,343,15],[337,12,344,10,"password"],[337,20,344,18],[338,12,345,10,"name"],[339,10,346,8],[339,11,346,9],[340,8,347,6],[340,9,347,7],[340,10,347,8],[341,8,349,6],[341,14,349,12,"data"],[341,18,349,16],[341,21,349,19],[341,27,349,25,"response"],[341,35,349,33],[341,36,349,34,"json"],[341,40,349,38],[341,41,349,39],[341,42,349,40],[342,8,351,6],[342,12,351,10],[342,13,351,11,"response"],[342,21,351,19],[342,22,351,20,"ok"],[342,24,351,22],[342,26,351,24],[343,10,352,8],[343,17,352,15],[344,12,352,17,"success"],[344,19,352,24],[344,21,352,26],[344,26,352,31],[345,12,352,33,"error"],[345,17,352,38],[345,19,352,40,"data"],[345,23,352,44],[345,24,352,45,"detail"],[345,30,352,51],[345,34,352,55],[346,10,352,77],[346,11,352,78],[347,8,353,6],[349,8,355,6],[350,8,356,6],[350,14,356,12,"AsyncStorage"],[350,26,356,24],[350,27,356,24,"default"],[350,34,356,24],[350,35,356,25,"setItem"],[350,42,356,32],[350,43,356,33],[350,55,356,45],[350,57,356,47,"data"],[350,61,356,51],[350,62,356,52,"access_token"],[350,74,356,64],[350,75,356,65],[351,8,357,6],[351,14,357,12,"AsyncStorage"],[351,26,357,24],[351,27,357,24,"default"],[351,34,357,24],[351,35,357,25,"setItem"],[351,42,357,32],[351,43,357,33],[351,54,357,44],[351,56,357,46,"JSON"],[351,60,357,50],[351,61,357,51,"stringify"],[351,70,357,60],[351,71,357,61,"data"],[351,75,357,65],[351,76,357,66,"user"],[351,80,357,70],[351,81,357,71],[351,82,357,72],[353,8,359,6],[354,8,360,6],[354,12,360,10],[355,10,361,8],[355,16,361,14,"AsyncStorage"],[355,28,361,26],[355,29,361,26,"default"],[355,36,361,26],[355,37,361,27,"setItem"],[355,44,361,34],[355,45,361,35],[355,58,361,48],[355,60,361,50,"email"],[355,65,361,55],[355,66,361,56],[356,10,362,8],[356,16,362,14,"AsyncStorage"],[356,28,362,26],[356,29,362,26,"default"],[356,36,362,26],[356,37,362,27,"setItem"],[356,44,362,34],[356,45,362,35],[356,61,362,51],[356,63,362,53,"password"],[356,71,362,61],[356,72,362,62],[357,8,363,6],[357,9,363,7],[357,10,363,8],[357,17,363,15,"asyncError"],[357,27,363,25],[357,29,363,27],[358,10,364,8],[358,14,364,12],[358,21,364,19,"window"],[358,27,364,25],[358,32,364,30],[358,43,364,41],[358,47,364,45,"window"],[358,53,364,51],[358,54,364,52,"localStorage"],[358,66,364,64],[358,68,364,66],[359,12,365,10,"window"],[359,18,365,16],[359,19,365,17,"localStorage"],[359,31,365,29],[359,32,365,30,"setItem"],[359,39,365,37],[359,40,365,38],[359,52,365,50],[359,54,365,52,"data"],[359,58,365,56],[359,59,365,57,"access_token"],[359,71,365,69],[359,72,365,70],[360,12,366,10,"window"],[360,18,366,16],[360,19,366,17,"localStorage"],[360,31,366,29],[360,32,366,30,"setItem"],[360,39,366,37],[360,40,366,38],[360,51,366,49],[360,53,366,51,"JSON"],[360,57,366,55],[360,58,366,56,"stringify"],[360,67,366,65],[360,68,366,66,"data"],[360,72,366,70],[360,73,366,71,"user"],[360,77,366,75],[360,78,366,76],[360,79,366,77],[361,12,367,10,"window"],[361,18,367,16],[361,19,367,17,"localStorage"],[361,31,367,29],[361,32,367,30,"setItem"],[361,39,367,37],[361,40,367,38],[361,53,367,51],[361,55,367,53,"email"],[361,60,367,58],[361,61,367,59],[362,12,368,10,"window"],[362,18,368,16],[362,19,368,17,"localStorage"],[362,31,368,29],[362,32,368,30,"setItem"],[362,39,368,37],[362,40,368,38],[362,56,368,54],[362,58,368,56,"password"],[362,66,368,64],[362,67,368,65],[363,12,369,10,"console"],[363,19,369,17],[363,20,369,18,"log"],[363,23,369,21],[363,24,369,22],[363,82,369,80],[363,83,369,81],[364,10,370,8],[365,8,371,6],[366,8,373,6,"setToken"],[366,16,373,14],[366,17,373,15,"data"],[366,21,373,19],[366,22,373,20,"access_token"],[366,34,373,32],[366,35,373,33],[367,8,374,6,"setUser"],[367,15,374,13],[367,16,374,14,"data"],[367,20,374,18],[367,21,374,19,"user"],[367,25,374,23],[367,26,374,24],[368,8,376,6,"console"],[368,15,376,13],[368,16,376,14,"log"],[368,19,376,17],[368,20,376,18],[368,58,376,56],[368,60,376,58,"data"],[368,64,376,62],[368,65,376,63,"user"],[368,69,376,67],[368,70,376,68,"id"],[368,72,376,70],[368,74,376,72],[368,109,376,107],[368,110,376,108],[369,8,378,6],[369,15,378,13],[370,10,378,15,"success"],[370,17,378,22],[370,19,378,24],[371,8,378,29],[371,9,378,30],[372,6,379,4],[372,7,379,5],[372,8,379,6],[372,15,379,13,"error"],[372,20,379,18],[372,22,379,20],[373,8,380,6,"console"],[373,15,380,13],[373,16,380,14,"error"],[373,21,380,19],[373,22,380,20],[373,43,380,41],[373,45,380,43,"error"],[373,50,380,48],[373,51,380,49],[374,8,381,6],[374,15,381,13],[375,10,381,15,"success"],[375,17,381,22],[375,19,381,24],[375,24,381,29],[376,10,381,31,"error"],[376,15,381,36],[376,17,381,38],[377,8,381,63],[377,9,381,64],[378,6,382,4],[378,7,382,5],[378,16,382,14],[379,8,383,6,"setIsLoading"],[379,20,383,18],[379,21,383,19],[379,26,383,24],[379,27,383,25],[380,6,384,4],[381,4,385,2],[381,5,385,3],[382,4,387,2],[382,10,387,8,"loginWithGoogle"],[382,25,387,23],[382,28,387,26],[382,34,387,26,"loginWithGoogle"],[382,35,387,26],[382,40,387,85],[383,6,388,4],[383,10,388,8],[384,8,389,6],[385,8,390,6],[385,12,390,10],[385,19,390,17,"window"],[385,25,390,23],[385,30,390,28],[385,41,390,39],[385,45,390,43,"window"],[385,51,390,49],[385,52,390,50,"location"],[385,60,390,58],[385,62,390,60],[386,10,391,8],[387,10,392,8],[387,16,392,14,"redirectUrl"],[387,27,392,25],[387,30,392,28,"encodeURIComponent"],[387,48,392,46],[387,49,392,47,"window"],[387,55,392,53],[387,56,392,54,"location"],[387,64,392,62],[387,65,392,63,"href"],[387,69,392,67],[387,70,392,68],[388,10,393,8],[388,16,393,14,"googleAuthUrl"],[388,29,393,27],[388,32,393,30],[388,76,393,74,"redirectUrl"],[388,87,393,85],[388,89,393,87],[390,10,395,8],[391,10,396,8,"window"],[391,16,396,14],[391,17,396,15,"open"],[391,21,396,19],[391,22,396,20,"googleAuthUrl"],[391,35,396,33],[391,37,396,35],[391,44,396,42],[391,45,396,43],[392,10,398,8],[392,17,398,15],[393,12,398,17,"success"],[393,19,398,24],[393,21,398,26],[394,10,398,31],[394,11,398,32],[395,8,399,6],[395,9,399,7],[395,15,399,13],[396,10,400,8],[397,10,401,8,"console"],[397,17,401,15],[397,18,401,16,"log"],[397,21,401,19],[397,22,401,20],[397,72,401,70],[397,73,401,71],[398,10,402,8],[398,17,402,15],[399,12,402,17,"success"],[399,19,402,24],[399,21,402,26],[399,26,402,31],[400,12,402,33,"error"],[400,17,402,38],[400,19,402,40],[401,10,402,83],[401,11,402,84],[402,8,403,6],[403,6,404,4],[403,7,404,5],[403,8,404,6],[403,15,404,13,"error"],[403,20,404,18],[403,22,404,20],[404,8,405,6,"console"],[404,15,405,13],[404,16,405,14,"error"],[404,21,405,19],[404,22,405,20],[404,43,405,41],[404,45,405,43,"error"],[404,50,405,48],[404,51,405,49],[405,8,406,6],[405,15,406,13],[406,10,406,15,"success"],[406,17,406,22],[406,19,406,24],[406,24,406,29],[407,10,406,31,"error"],[407,15,406,36],[407,17,406,38],[408,8,406,60],[408,9,406,61],[409,6,407,4],[410,4,408,2],[410,5,408,3],[411,4,410,2],[411,10,410,8,"logout"],[411,16,410,14],[411,19,410,17],[411,25,410,17,"logout"],[411,26,410,17],[411,31,410,44],[412,6,411,4],[412,10,411,8],[413,8,412,6],[414,8,413,6],[414,12,413,10,"token"],[414,17,413,15],[414,19,413,17],[415,10,414,8],[415,16,414,14,"fetch"],[415,21,414,19],[415,22,414,20],[415,25,414,23,"API_BASE_URL"],[415,37,414,35],[415,55,414,53],[415,57,414,55],[416,12,415,10,"method"],[416,18,415,16],[416,20,415,18],[416,26,415,24],[417,12,416,10,"credentials"],[417,23,416,21],[417,25,416,23],[417,34,416,32],[418,12,417,10,"headers"],[418,19,417,17],[418,21,417,19],[419,14,418,12],[419,29,418,27],[419,31,418,29],[419,41,418,39,"token"],[419,46,418,44],[419,48,418,46],[420,14,419,12],[420,28,419,26],[420,30,419,28],[421,12,420,10],[422,10,421,8],[422,11,421,9],[422,12,421,10],[423,8,422,6],[424,6,423,4],[424,7,423,5],[424,8,423,6],[424,15,423,13,"error"],[424,20,423,18],[424,22,423,20],[425,8,424,6,"console"],[425,15,424,13],[425,16,424,14,"error"],[425,21,424,19],[425,22,424,20],[425,37,424,35],[425,39,424,37,"error"],[425,44,424,42],[425,45,424,43],[426,6,425,4],[426,7,425,5],[426,16,425,14],[427,8,426,6],[428,8,427,6],[428,14,427,12,"AsyncStorage"],[428,26,427,24],[428,27,427,24,"default"],[428,34,427,24],[428,35,427,25,"multiRemove"],[428,46,427,36],[428,47,427,37],[428,48,427,38],[428,60,427,50],[428,62,427,52],[428,73,427,63],[428,74,427,64],[428,75,427,65],[429,8,428,6,"setToken"],[429,16,428,14],[429,17,428,15],[429,21,428,19],[429,22,428,20],[430,8,429,6,"setUser"],[430,15,429,13],[430,16,429,14],[430,20,429,18],[430,21,429,19],[431,6,430,4],[432,4,431,2],[432,5,431,3],[433,4,433,2],[433,10,433,8,"contextValue"],[433,22,433,20],[433,25,433,23,"React"],[433,30,433,28],[433,31,433,28,"default"],[433,38,433,28],[433,39,433,29,"useMemo"],[433,46,433,36],[433,47,433,37],[433,54,433,44],[434,6,434,4,"user"],[434,10,434,8],[435,6,435,4,"token"],[435,11,435,9],[436,6,436,4,"isLoading"],[436,15,436,13],[436,17,436,15,"actualIsLoading"],[436,32,436,30],[437,6,436,33],[438,6,437,4,"isAuthenticated"],[438,21,437,19],[439,6,438,4,"login"],[439,11,438,9],[440,6,439,4,"register"],[440,14,439,12],[441,6,440,4,"loginWithGoogle"],[441,21,440,19],[442,6,441,4,"logout"],[442,12,441,10],[443,6,442,4,"checkSession"],[444,4,443,2],[444,5,443,3],[444,6,443,4],[444,8,443,6],[444,9,443,7,"user"],[444,13,443,11],[444,15,443,13,"token"],[444,20,443,18],[444,22,443,20,"actualIsLoading"],[444,37,443,35],[444,39,443,37,"isAuthenticated"],[444,54,443,52],[444,56,443,54,"login"],[444,61,443,59],[444,63,443,61,"register"],[444,71,443,69],[444,73,443,71,"loginWithGoogle"],[444,88,443,86],[444,90,443,88,"logout"],[444,96,443,94],[444,98,443,96,"checkSession"],[444,110,443,108],[444,111,443,109],[444,112,443,110],[445,4,445,2],[445,24,446,4],[445,28,446,4,"_reactJsxDevRuntime"],[445,47,446,4],[445,48,446,4,"jsxDEV"],[445,54,446,4],[445,56,446,5,"AuthContext"],[445,67,446,16],[445,68,446,17,"Provider"],[445,76,446,25],[446,6,446,26,"value"],[446,11,446,31],[446,13,446,33,"contextValue"],[446,25,446,46],[447,6,446,46,"children"],[447,14,446,46],[447,16,447,7,"children"],[448,4,447,15],[449,6,447,15,"fileName"],[449,14,447,15],[449,16,447,15,"_jsxFileName"],[449,28,447,15],[450,6,447,15,"lineNumber"],[450,16,447,15],[451,6,447,15,"columnNumber"],[451,18,447,15],[452,4,447,15],[452,11,448,26],[452,12,448,27],[453,2,450,0],[453,3,450,1],[454,2,450,2,"_s"],[454,4,450,2],[454,5,58,13,"AuthProvider"],[454,17,58,25],[455,2,58,25,"_c"],[455,4,58,25],[455,7,58,13,"AuthProvider"],[455,19,58,25],[456,2,452,7],[456,8,452,13,"useAuth"],[456,15,452,20],[456,18,452,23,"useAuth"],[456,19,452,23],[456,24,452,46],[457,4,452,46,"_s2"],[457,7,452,46],[458,4,453,2],[458,10,453,8,"context"],[458,17,453,15],[458,20,453,18],[458,24,453,18,"useContext"],[458,30,453,28],[458,31,453,28,"useContext"],[458,41,453,28],[458,43,453,29,"AuthContext"],[458,54,453,40],[458,55,453,41],[459,4,454,2],[459,8,454,6,"context"],[459,15,454,13],[459,20,454,18,"undefined"],[459,29,454,27],[459,31,454,29],[460,6,455,4],[460,12,455,10],[460,16,455,14,"Error"],[460,21,455,19],[460,22,455,20],[460,67,455,65],[460,68,455,66],[461,4,456,2],[462,4,457,2],[462,11,457,9,"context"],[462,18,457,16],[463,2,458,0],[463,3,458,1],[464,2,458,2,"_s2"],[464,5,458,2],[464,6,452,13,"useAuth"],[464,13,452,20],[465,2,452,20],[465,6,452,20,"_c"],[465,8,452,20],[466,2,452,20,"$RefreshReg$"],[466,14,452,20],[466,15,452,20,"_c"],[466,17,452,20],[467,0,452,20],[467,3]],"functionMap":{"names":["<global>","getBackendUrl","AuthProvider","useEffect$argument_0","React.useMemo$argument_0","setTimeout$argument_0","<anonymous>","checkExistingSession","Promise$argument_0","checkSession","login","AsyncStorage.setItem._catch$argument_0","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;sBC6B;CDiB;4BEW;YCS;GDO;wCEG;GFE;YCG;uCEE;KFG;WGE,mCH;GDC;YCG;GDE;iDKE;6CCuC;uBHC,6CG,QD;GL0C;uBOE;GPwC;gBQE;wEC4C;ODS;+ECE;ODE;6DCG,QD;mECC,QD;iBLY;OKK;GR6B;mBUE;GVqD;0BWE;GXqB;iBYE;GZqB;qCEE;IFU;CFO;uBeE;CfM"},"hasCjsExports":false},"type":"js/module"}]}