{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../engine/CombatEngine","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":106,"index":196}}],"key":"nZQ1Uh4sL1pIx0mgIprqIFVXaUk=","exportNames":["*"],"imports":1}},{"name":"../types/AbilityTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":197},"end":{"line":3,"column":85,"index":282}}],"key":"b+W3bytKRoiCr0Aj83k4CvB3JRM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/CombatContext.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"useCombat\", {\n    enumerable: true,\n    get: function () {\n      return useCombat;\n    }\n  });\n  Object.defineProperty(exports, \"CombatProvider\", {\n    enumerable: true,\n    get: function () {\n      return CombatProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _engineCombatEngine = require(_dependencyMap[1], \"../engine/CombatEngine\");\n  var _typesAbilityTypes = require(_dependencyMap[2], \"../types/AbilityTypes\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const CombatContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useCombat = () => {\n    _s();\n    const context = (0, _react.useContext)(CombatContext);\n    if (!context) {\n      throw new Error('useCombat must be used within a CombatProvider');\n    }\n    return context;\n  };\n  _s(useCombat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  const CombatProvider = ({\n    children\n  }) => {\n    _s3();\n    const [combatState, setCombatState] = (0, _react.useState)({\n      isInCombat: false,\n      currentTick: 0,\n      enemies: [],\n      abilityManager: new _typesAbilityTypes.AbilityManager(),\n      statusEffects: new _engineCombatEngine.StatusEffectManager(),\n      playerStats: {\n        attack: 10,\n        // Default stats - will be updated by game context\n        defense: 5,\n        health: 100,\n        maxHealth: 100,\n        critChance: 3,\n        critDamage: 150,\n        cooldownReduction: 0\n      }\n    });\n\n    // Function to handle enemy kills - just log for now, main component will handle rewards\n    const handleEnemyKill = enemy => {\n      console.log(`üéØ Enemy killed! Max HP: ${enemy.maxHealth}`);\n    };\n\n    // Combat tick handler\n    const handleCombatTick = () => {\n      var _s2 = $RefreshSig$();\n      console.log('üîÑ Combat tick running...');\n      _s2(setCombatState(_s2(prev => {\n        _s2();\n        const newTick = _engineCombatEngine.combatEngine.getCurrentTick();\n        const newState = {\n          ...prev,\n          currentTick: newTick\n        };\n        if (!newState.isInCombat) return newState;\n\n        // Update ability cooldowns\n        newState.abilityManager.updateCooldowns(newTick);\n\n        // Process status effects\n        const effectResults = newState.statusEffects.processTick(newTick);\n\n        // Apply effect damage to enemies\n        effectResults.forEach((results, entityId) => {\n          const enemyIndex = newState.enemies.findIndex(e => e.id === entityId);\n          if (enemyIndex >= 0) {\n            results.forEach(result => {\n              newState.enemies[enemyIndex].health -= result.damage;\n              newState.enemies[enemyIndex].lastDamaged = newTick;\n            });\n          }\n        });\n\n        // Auto-cast abilities\n        for (let i = 0; i < 5; i++) {\n          if (newState.abilityManager.isAbilityReady(i) && newState.enemies.length > 0) {\n            if (newState.abilityManager.useAbility(i, newTick)) {\n              castAbility(newState, i);\n            }\n          }\n        }\n\n        // Handle dead enemies and reward XP\n        const deadEnemies = newState.enemies.filter(enemy => enemy.health <= 0);\n        deadEnemies.forEach(enemy => {\n          handleEnemyKill(enemy);\n        });\n\n        // Remove dead enemies\n        newState.enemies = newState.enemies.filter(enemy => enemy.health > 0);\n\n        // Maintain 10 enemies on screen\n        const MAX_ENEMIES = 10;\n        console.log(`üêõ Enemy spawn check: Current=${newState.enemies.length}, Max=${MAX_ENEMIES}`);\n        while (newState.enemies.length < MAX_ENEMIES) {\n          console.log(`üêõ Spawning enemy ${newState.enemies.length + 1}/${MAX_ENEMIES}`);\n          spawnTestEnemy(newState);\n        }\n        return newState;\n      }, \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true)), \"F3bX94StzMGnCFytE4/0MpoNfKg=\", true);\n    };\n\n    // Cast ability and apply effects\n    const castAbility = (state, slotIndex) => {\n      const deck = state.abilityManager.getDeck();\n      const ability = deck.slots[slotIndex];\n      if (!ability) return;\n\n      // Find target (nearest enemy for now)\n      const target = state.enemies[0];\n      if (!target) return;\n\n      // Calculate base damage\n      let damage = ability.stats.baseDamage;\n\n      // Apply synergy bonuses\n      deck.activeSynergies.forEach(synergy => {\n        if (synergy.bonus.damageBonus && synergy.requiredTags.some(tag => ability.tags.includes(tag))) {\n          damage *= 1 + synergy.bonus.damageBonus / 100;\n        }\n      });\n\n      // Calculate final damage with stats\n      const damageResult = _engineCombatEngine.DamageCalculator.calculateDamage(damage, state.playerStats, target.stats);\n\n      // Apply damage based on ability effects\n      if (ability.effects.includes('SingleTarget')) {\n        target.health -= damageResult.damage;\n        target.lastDamaged = state.currentTick;\n      } else if (ability.effects.includes('AoE')) {\n        // Damage all enemies\n        state.enemies.forEach(enemy => {\n          enemy.health -= Math.floor(damageResult.damage * 0.8); // 80% damage to secondary targets\n          enemy.lastDamaged = state.currentTick;\n        });\n      }\n\n      // Apply DoT effects\n      if (ability.effects.includes('DoT') && ability.stats.duration) {\n        state.statusEffects.addEffect(target.id, {\n          id: `${ability.id}_dot`,\n          type: 'dot',\n          remainingTicks: Math.floor(ability.stats.duration * 10),\n          // Convert seconds to ticks\n          tickInterval: 10,\n          // Every second\n          lastTick: state.currentTick,\n          value: Math.floor(damage * 0.3),\n          // 30% of base damage per tick\n          stackable: false\n        });\n      }\n      console.log(`üéØ ${ability.name} cast! Damage: ${damageResult.damage}${damageResult.isCritical ? ' (CRIT!)' : ''}`);\n    };\n\n    // Spawn a test enemy\n    const spawnTestEnemy = state => {\n      const enemy = {\n        id: `enemy_${Date.now()}`,\n        name: 'Test Orc',\n        health: 100,\n        maxHealth: 100,\n        stats: {\n          attack: 30,\n          defense: 10,\n          health: 100,\n          maxHealth: 100,\n          critChance: 5,\n          critDamage: 120,\n          cooldownReduction: 0\n        },\n        position: {\n          x: 300,\n          y: 200\n        },\n        lastDamaged: 0\n      };\n      state.enemies.push(enemy);\n    };\n\n    // Start combat\n    const startCombat = () => {\n      console.log('üöÄ Starting combat, adding tick callback...');\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: true\n      }));\n\n      // Add tick callback if not already added\n      _engineCombatEngine.combatEngine.addTickCallback(handleCombatTick);\n      console.log('üöÄ Tick callback added, starting engine...');\n\n      // Start the engine\n      _engineCombatEngine.combatEngine.start();\n    };\n\n    // Stop combat\n    const stopCombat = () => {\n      setCombatState(prev => ({\n        ...prev,\n        isInCombat: false\n      }));\n      _engineCombatEngine.combatEngine.removeTickCallback(handleCombatTick);\n    };\n\n    // Equipment management\n    const equipAbility = (abilityId, slotIndex) => {\n      return combatState.abilityManager.equipAbility(abilityId, slotIndex);\n    };\n    const getDeck = () => {\n      return combatState.abilityManager.getDeck();\n    };\n    const getAvailableAbilities = () => {\n      return combatState.abilityManager.getAvailableAbilities();\n    };\n    const upgradeAbility = abilityId => {\n      return combatState.abilityManager.upgradeAbility(abilityId);\n    };\n\n    // Initialize combat engine\n    (0, _react.useEffect)(() => {\n      _engineCombatEngine.combatEngine.start();\n\n      // Equip some default abilities for testing\n      combatState.abilityManager.equipAbility('basic_shuriken', 0);\n      combatState.abilityManager.equipAbility('fire_shuriken', 1);\n      return () => {\n        _engineCombatEngine.combatEngine.stop();\n      };\n    }, []);\n    const contextValue = {\n      combatState,\n      startCombat,\n      stopCombat,\n      equipAbility,\n      getDeck,\n      getAvailableAbilities,\n      upgradeAbility\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(CombatContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }, this);\n  };\n  _s3(CombatProvider, \"sjvsZ9aYnAcBXQDfT3kNLzJnF80=\");\n  _c = CombatProvider;\n  var _c;\n  $RefreshReg$(_c, \"CombatProvider\");\n});","lineCount":272,"map":[[10,2,36,0,"Object"],[10,8,36,0],[10,9,36,0,"defineProperty"],[10,23,36,0],[10,24,36,0,"exports"],[10,31,36,0],[11,4,36,0,"enumerable"],[11,14,36,0],[12,4,36,0,"get"],[12,7,36,0],[12,18,36,0,"get"],[12,19,36,0],[13,6,36,0],[13,13,36,0,"useCombat"],[13,22,36,0],[14,4,36,0],[15,2,36,0],[16,2,44,0,"Object"],[16,8,44,0],[16,9,44,0,"defineProperty"],[16,23,44,0],[16,24,44,0,"exports"],[16,31,44,0],[17,4,44,0,"enumerable"],[17,14,44,0],[18,4,44,0,"get"],[18,7,44,0],[18,18,44,0,"get"],[18,19,44,0],[19,6,44,0],[19,13,44,0,"CombatProvider"],[19,27,44,0],[20,4,44,0],[21,2,44,0],[22,2,1,0],[22,6,1,0,"_react"],[22,12,1,0],[22,15,1,0,"require"],[22,22,1,0],[22,23,1,0,"_dependencyMap"],[22,37,1,0],[23,2,2,0],[23,6,2,0,"_engineCombatEngine"],[23,25,2,0],[23,28,2,0,"require"],[23,35,2,0],[23,36,2,0,"_dependencyMap"],[23,50,2,0],[24,2,3,0],[24,6,3,0,"_typesAbilityTypes"],[24,24,3,0],[24,27,3,0,"require"],[24,34,3,0],[24,35,3,0,"_dependencyMap"],[24,49,3,0],[25,2,3,85],[25,6,3,85,"_reactJsxDevRuntime"],[25,25,3,85],[25,28,3,85,"require"],[25,35,3,85],[25,36,3,85,"_dependencyMap"],[25,50,3,85],[26,2,34,0],[26,8,34,6,"CombatContext"],[26,21,34,19],[26,37,34,22],[26,41,34,22,"createContext"],[26,47,34,35],[26,48,34,35,"createContext"],[26,61,34,35],[26,63,34,67,"undefined"],[26,72,34,76],[26,73,34,77],[27,2,36,7],[27,8,36,13,"useCombat"],[27,17,36,22],[27,20,36,25,"useCombat"],[27,21,36,25],[27,26,36,50],[28,4,36,50,"_s"],[28,6,36,50],[29,4,37,2],[29,10,37,8,"context"],[29,17,37,15],[29,20,37,18],[29,24,37,18,"useContext"],[29,30,37,28],[29,31,37,28,"useContext"],[29,41,37,28],[29,43,37,29,"CombatContext"],[29,56,37,42],[29,57,37,43],[30,4,38,2],[30,8,38,6],[30,9,38,7,"context"],[30,16,38,14],[30,18,38,16],[31,6,39,4],[31,12,39,10],[31,16,39,14,"Error"],[31,21,39,19],[31,22,39,20],[31,70,39,68],[31,71,39,69],[32,4,40,2],[33,4,41,2],[33,11,41,9,"context"],[33,18,41,16],[34,2,42,0],[34,3,42,1],[35,2,42,2,"_s"],[35,4,42,2],[35,5,36,13,"useCombat"],[35,14,36,22],[36,2,44,7],[36,8,44,13,"CombatProvider"],[36,22,44,27],[36,25,44,30,"CombatProvider"],[36,26,44,31],[37,4,44,33,"children"],[38,2,44,67],[38,3,44,68],[38,8,44,73],[39,4,44,73,"_s3"],[39,7,44,73],[40,4,46,2],[40,10,46,8],[40,11,46,9,"combatState"],[40,22,46,20],[40,24,46,22,"setCombatState"],[40,38,46,36],[40,39,46,37],[40,42,46,40],[40,46,46,40,"useState"],[40,52,46,48],[40,53,46,48,"useState"],[40,61,46,48],[40,63,46,62],[41,6,47,4,"isInCombat"],[41,16,47,14],[41,18,47,16],[41,23,47,21],[42,6,48,4,"currentTick"],[42,17,48,15],[42,19,48,17],[42,20,48,18],[43,6,49,4,"enemies"],[43,13,49,11],[43,15,49,13],[43,17,49,15],[44,6,50,4,"abilityManager"],[44,20,50,18],[44,22,50,20],[44,26,50,24,"AbilityManager"],[44,44,50,38],[44,45,50,38,"AbilityManager"],[44,59,50,38],[44,60,50,39],[44,61,50,40],[45,6,51,4,"statusEffects"],[45,19,51,17],[45,21,51,19],[45,25,51,23,"StatusEffectManager"],[45,44,51,42],[45,45,51,42,"StatusEffectManager"],[45,64,51,42],[45,65,51,43],[45,66,51,44],[46,6,52,4,"playerStats"],[46,17,52,15],[46,19,52,17],[47,8,53,6,"attack"],[47,14,53,12],[47,16,53,14],[47,18,53,16],[48,8,53,18],[49,8,54,6,"defense"],[49,15,54,13],[49,17,54,15],[49,18,54,16],[50,8,55,6,"health"],[50,14,55,12],[50,16,55,14],[50,19,55,17],[51,8,56,6,"maxHealth"],[51,17,56,15],[51,19,56,17],[51,22,56,20],[52,8,57,6,"critChance"],[52,18,57,16],[52,20,57,18],[52,21,57,19],[53,8,58,6,"critDamage"],[53,18,58,16],[53,20,58,18],[53,23,58,21],[54,8,59,6,"cooldownReduction"],[54,25,59,23],[54,27,59,25],[55,6,60,4],[56,4,61,2],[56,5,61,3],[56,6,61,4],[58,4,63,2],[59,4,64,2],[59,10,64,8,"handleEnemyKill"],[59,25,64,23],[59,28,64,27,"enemy"],[59,33,64,45],[59,37,64,50],[60,6,65,4,"console"],[60,13,65,11],[60,14,65,12,"log"],[60,17,65,15],[60,18,65,16],[60,46,65,44,"enemy"],[60,51,65,49],[60,52,65,50,"maxHealth"],[60,61,65,59],[60,63,65,61],[60,64,65,62],[61,4,66,2],[61,5,66,3],[63,4,68,2],[64,4,69,2],[64,10,69,8,"handleCombatTick"],[64,26,69,24],[64,29,69,27,"handleCombatTick"],[64,30,69,27],[64,35,69,33],[65,6,69,33],[65,10,69,33,"_s2"],[65,13,69,33],[65,16,69,33,"$RefreshSig$"],[65,28,69,33],[66,6,70,4,"console"],[66,13,70,11],[66,14,70,12,"log"],[66,17,70,15],[66,18,70,16],[66,45,70,43],[66,46,70,44],[67,6,71,4,"_s2"],[67,9,71,4],[67,10,71,4,"setCombatState"],[67,24,71,18],[67,25,71,18,"_s2"],[67,28,71,18],[67,29,71,19,"prev"],[67,33,71,23],[67,37,71,27],[68,8,71,27,"_s2"],[68,11,71,27],[69,8,72,6],[69,14,72,12,"newTick"],[69,21,72,19],[69,24,72,22,"combatEngine"],[69,43,72,34],[69,44,72,34,"combatEngine"],[69,56,72,34],[69,57,72,35,"getCurrentTick"],[69,71,72,49],[69,72,72,50],[69,73,72,51],[70,8,73,6],[70,14,73,12,"newState"],[70,22,73,20],[70,25,73,23],[71,10,73,25],[71,13,73,28,"prev"],[71,17,73,32],[72,10,73,34,"currentTick"],[72,21,73,45],[72,23,73,47,"newTick"],[73,8,73,55],[73,9,73,56],[74,8,75,6],[74,12,75,10],[74,13,75,11,"newState"],[74,21,75,19],[74,22,75,20,"isInCombat"],[74,32,75,30],[74,34,75,32],[74,41,75,39,"newState"],[74,49,75,47],[76,8,77,6],[77,8,78,6,"newState"],[77,16,78,14],[77,17,78,15,"abilityManager"],[77,31,78,29],[77,32,78,30,"updateCooldowns"],[77,47,78,45],[77,48,78,46,"newTick"],[77,55,78,53],[77,56,78,54],[79,8,80,6],[80,8,81,6],[80,14,81,12,"effectResults"],[80,27,81,25],[80,30,81,28,"newState"],[80,38,81,36],[80,39,81,37,"statusEffects"],[80,52,81,50],[80,53,81,51,"processTick"],[80,64,81,62],[80,65,81,63,"newTick"],[80,72,81,70],[80,73,81,71],[82,8,83,6],[83,8,84,6,"effectResults"],[83,21,84,19],[83,22,84,20,"forEach"],[83,29,84,27],[83,30,84,28],[83,31,84,29,"results"],[83,38,84,36],[83,40,84,38,"entityId"],[83,48,84,46],[83,53,84,51],[84,10,85,8],[84,16,85,14,"enemyIndex"],[84,26,85,24],[84,29,85,27,"newState"],[84,37,85,35],[84,38,85,36,"enemies"],[84,45,85,43],[84,46,85,44,"findIndex"],[84,55,85,53],[84,56,85,54,"e"],[84,57,85,55],[84,61,85,59,"e"],[84,62,85,60],[84,63,85,61,"id"],[84,65,85,63],[84,70,85,68,"entityId"],[84,78,85,76],[84,79,85,77],[85,10,86,8],[85,14,86,12,"enemyIndex"],[85,24,86,22],[85,28,86,26],[85,29,86,27],[85,31,86,29],[86,12,87,10,"results"],[86,19,87,17],[86,20,87,18,"forEach"],[86,27,87,25],[86,28,87,26,"result"],[86,34,87,32],[86,38,87,36],[87,14,88,12,"newState"],[87,22,88,20],[87,23,88,21,"enemies"],[87,30,88,28],[87,31,88,29,"enemyIndex"],[87,41,88,39],[87,42,88,40],[87,43,88,41,"health"],[87,49,88,47],[87,53,88,51,"result"],[87,59,88,57],[87,60,88,58,"damage"],[87,66,88,64],[88,14,89,12,"newState"],[88,22,89,20],[88,23,89,21,"enemies"],[88,30,89,28],[88,31,89,29,"enemyIndex"],[88,41,89,39],[88,42,89,40],[88,43,89,41,"lastDamaged"],[88,54,89,52],[88,57,89,55,"newTick"],[88,64,89,62],[89,12,90,10],[89,13,90,11],[89,14,90,12],[90,10,91,8],[91,8,92,6],[91,9,92,7],[91,10,92,8],[93,8,94,6],[94,8,95,6],[94,13,95,11],[94,17,95,15,"i"],[94,18,95,16],[94,21,95,19],[94,22,95,20],[94,24,95,22,"i"],[94,25,95,23],[94,28,95,26],[94,29,95,27],[94,31,95,29,"i"],[94,32,95,30],[94,34,95,32],[94,36,95,34],[95,10,96,8],[95,14,96,12,"newState"],[95,22,96,20],[95,23,96,21,"abilityManager"],[95,37,96,35],[95,38,96,36,"isAbilityReady"],[95,52,96,50],[95,53,96,51,"i"],[95,54,96,52],[95,55,96,53],[95,59,96,57,"newState"],[95,67,96,65],[95,68,96,66,"enemies"],[95,75,96,73],[95,76,96,74,"length"],[95,82,96,80],[95,85,96,83],[95,86,96,84],[95,88,96,86],[96,12,97,10],[96,16,97,14,"newState"],[96,24,97,22],[96,25,97,23,"abilityManager"],[96,39,97,37],[96,40,97,38,"useAbility"],[96,50,97,48],[96,51,97,49,"i"],[96,52,97,50],[96,54,97,52,"newTick"],[96,61,97,59],[96,62,97,60],[96,64,97,62],[97,14,98,12,"castAbility"],[97,25,98,23],[97,26,98,24,"newState"],[97,34,98,32],[97,36,98,34,"i"],[97,37,98,35],[97,38,98,36],[98,12,99,10],[99,10,100,8],[100,8,101,6],[102,8,103,6],[103,8,104,6],[103,14,104,12,"deadEnemies"],[103,25,104,23],[103,28,104,26,"newState"],[103,36,104,34],[103,37,104,35,"enemies"],[103,44,104,42],[103,45,104,43,"filter"],[103,51,104,49],[103,52,104,50,"enemy"],[103,57,104,55],[103,61,104,59,"enemy"],[103,66,104,64],[103,67,104,65,"health"],[103,73,104,71],[103,77,104,75],[103,78,104,76],[103,79,104,77],[104,8,105,6,"deadEnemies"],[104,19,105,17],[104,20,105,18,"forEach"],[104,27,105,25],[104,28,105,26,"enemy"],[104,33,105,31],[104,37,105,35],[105,10,106,8,"handleEnemyKill"],[105,25,106,23],[105,26,106,24,"enemy"],[105,31,106,29],[105,32,106,30],[106,8,107,6],[106,9,107,7],[106,10,107,8],[108,8,109,6],[109,8,110,6,"newState"],[109,16,110,14],[109,17,110,15,"enemies"],[109,24,110,22],[109,27,110,25,"newState"],[109,35,110,33],[109,36,110,34,"enemies"],[109,43,110,41],[109,44,110,42,"filter"],[109,50,110,48],[109,51,110,49,"enemy"],[109,56,110,54],[109,60,110,58,"enemy"],[109,65,110,63],[109,66,110,64,"health"],[109,72,110,70],[109,75,110,73],[109,76,110,74],[109,77,110,75],[111,8,112,6],[112,8,113,6],[112,14,113,12,"MAX_ENEMIES"],[112,25,113,23],[112,28,113,26],[112,30,113,28],[113,8,114,6,"console"],[113,15,114,13],[113,16,114,14,"log"],[113,19,114,17],[113,20,114,18],[113,53,114,51,"newState"],[113,61,114,59],[113,62,114,60,"enemies"],[113,69,114,67],[113,70,114,68,"length"],[113,76,114,74],[113,85,114,83,"MAX_ENEMIES"],[113,96,114,94],[113,98,114,96],[113,99,114,97],[114,8,115,6],[114,15,115,13,"newState"],[114,23,115,21],[114,24,115,22,"enemies"],[114,31,115,29],[114,32,115,30,"length"],[114,38,115,36],[114,41,115,39,"MAX_ENEMIES"],[114,52,115,50],[114,54,115,52],[115,10,116,8,"console"],[115,17,116,15],[115,18,116,16,"log"],[115,21,116,19],[115,22,116,20],[115,43,116,41,"newState"],[115,51,116,49],[115,52,116,50,"enemies"],[115,59,116,57],[115,60,116,58,"length"],[115,66,116,64],[115,69,116,67],[115,70,116,68],[115,74,116,72,"MAX_ENEMIES"],[115,85,116,83],[115,87,116,85],[115,88,116,86],[116,10,117,8,"spawnTestEnemy"],[116,24,117,22],[116,25,117,23,"newState"],[116,33,117,31],[116,34,117,32],[117,8,118,6],[118,8,120,6],[118,15,120,13,"newState"],[118,23,120,21],[119,6,121,4],[119,7,121,5],[119,47,121,6],[120,4,122,2],[120,5,122,3],[122,4,124,2],[123,4,125,2],[123,10,125,8,"castAbility"],[123,21,125,19],[123,24,125,22,"castAbility"],[123,25,125,23,"state"],[123,30,125,41],[123,32,125,43,"slotIndex"],[123,41,125,60],[123,46,125,65],[124,6,126,4],[124,12,126,10,"deck"],[124,16,126,14],[124,19,126,17,"state"],[124,24,126,22],[124,25,126,23,"abilityManager"],[124,39,126,37],[124,40,126,38,"getDeck"],[124,47,126,45],[124,48,126,46],[124,49,126,47],[125,6,127,4],[125,12,127,10,"ability"],[125,19,127,17],[125,22,127,20,"deck"],[125,26,127,24],[125,27,127,25,"slots"],[125,32,127,30],[125,33,127,31,"slotIndex"],[125,42,127,40],[125,43,127,41],[126,6,128,4],[126,10,128,8],[126,11,128,9,"ability"],[126,18,128,16],[126,20,128,18],[128,6,130,4],[129,6,131,4],[129,12,131,10,"target"],[129,18,131,16],[129,21,131,19,"state"],[129,26,131,24],[129,27,131,25,"enemies"],[129,34,131,32],[129,35,131,33],[129,36,131,34],[129,37,131,35],[130,6,132,4],[130,10,132,8],[130,11,132,9,"target"],[130,17,132,15],[130,19,132,17],[132,6,134,4],[133,6,135,4],[133,10,135,8,"damage"],[133,16,135,14],[133,19,135,17,"ability"],[133,26,135,24],[133,27,135,25,"stats"],[133,32,135,30],[133,33,135,31,"baseDamage"],[133,43,135,41],[135,6,137,4],[136,6,138,4,"deck"],[136,10,138,8],[136,11,138,9,"activeSynergies"],[136,26,138,24],[136,27,138,25,"forEach"],[136,34,138,32],[136,35,138,33,"synergy"],[136,42,138,40],[136,46,138,44],[137,8,139,6],[137,12,139,10,"synergy"],[137,19,139,17],[137,20,139,18,"bonus"],[137,25,139,23],[137,26,139,24,"damageBonus"],[137,37,139,35],[137,41,140,10,"synergy"],[137,48,140,17],[137,49,140,18,"requiredTags"],[137,61,140,30],[137,62,140,31,"some"],[137,66,140,35],[137,67,140,36,"tag"],[137,70,140,39],[137,74,140,43,"ability"],[137,81,140,50],[137,82,140,51,"tags"],[137,86,140,55],[137,87,140,56,"includes"],[137,95,140,64],[137,96,140,65,"tag"],[137,99,140,68],[137,100,140,69],[137,101,140,70],[137,103,140,72],[138,10,141,8,"damage"],[138,16,141,14],[138,20,141,19],[138,21,141,20],[138,24,141,23,"synergy"],[138,31,141,30],[138,32,141,31,"bonus"],[138,37,141,36],[138,38,141,37,"damageBonus"],[138,49,141,48],[138,52,141,51],[138,55,141,55],[139,8,142,6],[140,6,143,4],[140,7,143,5],[140,8,143,6],[142,6,145,4],[143,6,146,4],[143,12,146,10,"damageResult"],[143,24,146,22],[143,27,146,25,"DamageCalculator"],[143,46,146,41],[143,47,146,41,"DamageCalculator"],[143,63,146,41],[143,64,146,42,"calculateDamage"],[143,79,146,57],[143,80,146,58,"damage"],[143,86,146,64],[143,88,146,66,"state"],[143,93,146,71],[143,94,146,72,"playerStats"],[143,105,146,83],[143,107,146,85,"target"],[143,113,146,91],[143,114,146,92,"stats"],[143,119,146,97],[143,120,146,98],[145,6,148,4],[146,6,149,4],[146,10,149,8,"ability"],[146,17,149,15],[146,18,149,16,"effects"],[146,25,149,23],[146,26,149,24,"includes"],[146,34,149,32],[146,35,149,33],[146,49,149,47],[146,50,149,48],[146,52,149,50],[147,8,150,6,"target"],[147,14,150,12],[147,15,150,13,"health"],[147,21,150,19],[147,25,150,23,"damageResult"],[147,37,150,35],[147,38,150,36,"damage"],[147,44,150,42],[148,8,151,6,"target"],[148,14,151,12],[148,15,151,13,"lastDamaged"],[148,26,151,24],[148,29,151,27,"state"],[148,34,151,32],[148,35,151,33,"currentTick"],[148,46,151,44],[149,6,152,4],[149,7,152,5],[149,13,152,11],[149,17,152,15,"ability"],[149,24,152,22],[149,25,152,23,"effects"],[149,32,152,30],[149,33,152,31,"includes"],[149,41,152,39],[149,42,152,40],[149,47,152,45],[149,48,152,46],[149,50,152,48],[150,8,153,6],[151,8,154,6,"state"],[151,13,154,11],[151,14,154,12,"enemies"],[151,21,154,19],[151,22,154,20,"forEach"],[151,29,154,27],[151,30,154,28,"enemy"],[151,35,154,33],[151,39,154,37],[152,10,155,8,"enemy"],[152,15,155,13],[152,16,155,14,"health"],[152,22,155,20],[152,26,155,24,"Math"],[152,30,155,28],[152,31,155,29,"floor"],[152,36,155,34],[152,37,155,35,"damageResult"],[152,49,155,47],[152,50,155,48,"damage"],[152,56,155,54],[152,59,155,57],[152,62,155,60],[152,63,155,61],[152,64,155,62],[152,65,155,63],[153,10,156,8,"enemy"],[153,15,156,13],[153,16,156,14,"lastDamaged"],[153,27,156,25],[153,30,156,28,"state"],[153,35,156,33],[153,36,156,34,"currentTick"],[153,47,156,45],[154,8,157,6],[154,9,157,7],[154,10,157,8],[155,6,158,4],[157,6,160,4],[158,6,161,4],[158,10,161,8,"ability"],[158,17,161,15],[158,18,161,16,"effects"],[158,25,161,23],[158,26,161,24,"includes"],[158,34,161,32],[158,35,161,33],[158,40,161,38],[158,41,161,39],[158,45,161,43,"ability"],[158,52,161,50],[158,53,161,51,"stats"],[158,58,161,56],[158,59,161,57,"duration"],[158,67,161,65],[158,69,161,67],[159,8,162,6,"state"],[159,13,162,11],[159,14,162,12,"statusEffects"],[159,27,162,25],[159,28,162,26,"addEffect"],[159,37,162,35],[159,38,162,36,"target"],[159,44,162,42],[159,45,162,43,"id"],[159,47,162,45],[159,49,162,47],[160,10,163,8,"id"],[160,12,163,10],[160,14,163,12],[160,17,163,15,"ability"],[160,24,163,22],[160,25,163,23,"id"],[160,27,163,25],[160,33,163,31],[161,10,164,8,"type"],[161,14,164,12],[161,16,164,14],[161,21,164,19],[162,10,165,8,"remainingTicks"],[162,24,165,22],[162,26,165,24,"Math"],[162,30,165,28],[162,31,165,29,"floor"],[162,36,165,34],[162,37,165,35,"ability"],[162,44,165,42],[162,45,165,43,"stats"],[162,50,165,48],[162,51,165,49,"duration"],[162,59,165,57],[162,62,165,60],[162,64,165,62],[162,65,165,63],[163,10,165,65],[164,10,166,8,"tickInterval"],[164,22,166,20],[164,24,166,22],[164,26,166,24],[165,10,166,26],[166,10,167,8,"lastTick"],[166,18,167,16],[166,20,167,18,"state"],[166,25,167,23],[166,26,167,24,"currentTick"],[166,37,167,35],[167,10,168,8,"value"],[167,15,168,13],[167,17,168,15,"Math"],[167,21,168,19],[167,22,168,20,"floor"],[167,27,168,25],[167,28,168,26,"damage"],[167,34,168,32],[167,37,168,35],[167,40,168,38],[167,41,168,39],[168,10,168,41],[169,10,169,8,"stackable"],[169,19,169,17],[169,21,169,19],[170,8,170,6],[170,9,170,7],[170,10,170,8],[171,6,171,4],[172,6,173,4,"console"],[172,13,173,11],[172,14,173,12,"log"],[172,17,173,15],[172,18,173,16],[172,24,173,22,"ability"],[172,31,173,29],[172,32,173,30,"name"],[172,36,173,34],[172,54,173,52,"damageResult"],[172,66,173,64],[172,67,173,65,"damage"],[172,73,173,71],[172,76,173,74,"damageResult"],[172,88,173,86],[172,89,173,87,"isCritical"],[172,99,173,97],[172,102,173,100],[172,112,173,110],[172,115,173,113],[172,117,173,115],[172,119,173,117],[172,120,173,118],[173,4,174,2],[173,5,174,3],[175,4,176,2],[176,4,177,2],[176,10,177,8,"spawnTestEnemy"],[176,24,177,22],[176,27,177,26,"state"],[176,32,177,44],[176,36,177,49],[177,6,178,4],[177,12,178,10,"enemy"],[177,17,178,28],[177,20,178,31],[178,8,179,6,"id"],[178,10,179,8],[178,12,179,10],[178,21,179,19,"Date"],[178,25,179,23],[178,26,179,24,"now"],[178,29,179,27],[178,30,179,28],[178,31,179,29],[178,33,179,31],[179,8,180,6,"name"],[179,12,180,10],[179,14,180,12],[179,24,180,22],[180,8,181,6,"health"],[180,14,181,12],[180,16,181,14],[180,19,181,17],[181,8,182,6,"maxHealth"],[181,17,182,15],[181,19,182,17],[181,22,182,20],[182,8,183,6,"stats"],[182,13,183,11],[182,15,183,13],[183,10,184,8,"attack"],[183,16,184,14],[183,18,184,16],[183,20,184,18],[184,10,185,8,"defense"],[184,17,185,15],[184,19,185,17],[184,21,185,19],[185,10,186,8,"health"],[185,16,186,14],[185,18,186,16],[185,21,186,19],[186,10,187,8,"maxHealth"],[186,19,187,17],[186,21,187,19],[186,24,187,22],[187,10,188,8,"critChance"],[187,20,188,18],[187,22,188,20],[187,23,188,21],[188,10,189,8,"critDamage"],[188,20,189,18],[188,22,189,20],[188,25,189,23],[189,10,190,8,"cooldownReduction"],[189,27,190,25],[189,29,190,27],[190,8,191,6],[190,9,191,7],[191,8,192,6,"position"],[191,16,192,14],[191,18,192,16],[192,10,192,18,"x"],[192,11,192,19],[192,13,192,21],[192,16,192,24],[193,10,192,26,"y"],[193,11,192,27],[193,13,192,29],[194,8,192,33],[194,9,192,34],[195,8,193,6,"lastDamaged"],[195,19,193,17],[195,21,193,19],[196,6,194,4],[196,7,194,5],[197,6,196,4,"state"],[197,11,196,9],[197,12,196,10,"enemies"],[197,19,196,17],[197,20,196,18,"push"],[197,24,196,22],[197,25,196,23,"enemy"],[197,30,196,28],[197,31,196,29],[198,4,197,2],[198,5,197,3],[200,4,199,2],[201,4,200,2],[201,10,200,8,"startCombat"],[201,21,200,19],[201,24,200,22,"startCombat"],[201,25,200,22],[201,30,200,28],[202,6,201,4,"console"],[202,13,201,11],[202,14,201,12,"log"],[202,17,201,15],[202,18,201,16],[202,63,201,61],[202,64,201,62],[203,6,202,4,"setCombatState"],[203,20,202,18],[203,21,202,19,"prev"],[203,25,202,23],[203,30,202,28],[204,8,202,30],[204,11,202,33,"prev"],[204,15,202,37],[205,8,202,39,"isInCombat"],[205,18,202,49],[205,20,202,51],[206,6,202,56],[206,7,202,57],[206,8,202,58],[206,9,202,59],[208,6,204,4],[209,6,205,4,"combatEngine"],[209,25,205,16],[209,26,205,16,"combatEngine"],[209,38,205,16],[209,39,205,17,"addTickCallback"],[209,54,205,32],[209,55,205,33,"handleCombatTick"],[209,71,205,49],[209,72,205,50],[210,6,206,4,"console"],[210,13,206,11],[210,14,206,12,"log"],[210,17,206,15],[210,18,206,16],[210,62,206,60],[210,63,206,61],[212,6,208,4],[213,6,209,4,"combatEngine"],[213,25,209,16],[213,26,209,16,"combatEngine"],[213,38,209,16],[213,39,209,17,"start"],[213,44,209,22],[213,45,209,23],[213,46,209,24],[214,4,210,2],[214,5,210,3],[216,4,212,2],[217,4,213,2],[217,10,213,8,"stopCombat"],[217,20,213,18],[217,23,213,21,"stopCombat"],[217,24,213,21],[217,29,213,27],[218,6,214,4,"setCombatState"],[218,20,214,18],[218,21,214,19,"prev"],[218,25,214,23],[218,30,214,28],[219,8,214,30],[219,11,214,33,"prev"],[219,15,214,37],[220,8,214,39,"isInCombat"],[220,18,214,49],[220,20,214,51],[221,6,214,57],[221,7,214,58],[221,8,214,59],[221,9,214,60],[222,6,215,4,"combatEngine"],[222,25,215,16],[222,26,215,16,"combatEngine"],[222,38,215,16],[222,39,215,17,"removeTickCallback"],[222,57,215,35],[222,58,215,36,"handleCombatTick"],[222,74,215,52],[222,75,215,53],[223,4,216,2],[223,5,216,3],[225,4,218,2],[226,4,219,2],[226,10,219,8,"equipAbility"],[226,22,219,20],[226,25,219,23,"equipAbility"],[226,26,219,24,"abilityId"],[226,35,219,41],[226,37,219,43,"slotIndex"],[226,46,219,60],[226,51,219,74],[227,6,220,4],[227,13,220,11,"combatState"],[227,24,220,22],[227,25,220,23,"abilityManager"],[227,39,220,37],[227,40,220,38,"equipAbility"],[227,52,220,50],[227,53,220,51,"abilityId"],[227,62,220,60],[227,64,220,62,"slotIndex"],[227,73,220,71],[227,74,220,72],[228,4,221,2],[228,5,221,3],[229,4,223,2],[229,10,223,8,"getDeck"],[229,17,223,15],[229,20,223,18,"getDeck"],[229,21,223,18],[229,26,223,24],[230,6,224,4],[230,13,224,11,"combatState"],[230,24,224,22],[230,25,224,23,"abilityManager"],[230,39,224,37],[230,40,224,38,"getDeck"],[230,47,224,45],[230,48,224,46],[230,49,224,47],[231,4,225,2],[231,5,225,3],[232,4,227,2],[232,10,227,8,"getAvailableAbilities"],[232,31,227,29],[232,34,227,32,"getAvailableAbilities"],[232,35,227,32],[232,40,227,38],[233,6,228,4],[233,13,228,11,"combatState"],[233,24,228,22],[233,25,228,23,"abilityManager"],[233,39,228,37],[233,40,228,38,"getAvailableAbilities"],[233,61,228,59],[233,62,228,60],[233,63,228,61],[234,4,229,2],[234,5,229,3],[235,4,231,2],[235,10,231,8,"upgradeAbility"],[235,24,231,22],[235,27,231,26,"abilityId"],[235,36,231,43],[235,40,231,57],[236,6,232,4],[236,13,232,11,"combatState"],[236,24,232,22],[236,25,232,23,"abilityManager"],[236,39,232,37],[236,40,232,38,"upgradeAbility"],[236,54,232,52],[236,55,232,53,"abilityId"],[236,64,232,62],[236,65,232,63],[237,4,233,2],[237,5,233,3],[239,4,235,2],[240,4,236,2],[240,8,236,2,"useEffect"],[240,14,236,11],[240,15,236,11,"useEffect"],[240,24,236,11],[240,26,236,12],[240,32,236,18],[241,6,237,4,"combatEngine"],[241,25,237,16],[241,26,237,16,"combatEngine"],[241,38,237,16],[241,39,237,17,"start"],[241,44,237,22],[241,45,237,23],[241,46,237,24],[243,6,239,4],[244,6,240,4,"combatState"],[244,17,240,15],[244,18,240,16,"abilityManager"],[244,32,240,30],[244,33,240,31,"equipAbility"],[244,45,240,43],[244,46,240,44],[244,62,240,60],[244,64,240,62],[244,65,240,63],[244,66,240,64],[245,6,241,4,"combatState"],[245,17,241,15],[245,18,241,16,"abilityManager"],[245,32,241,30],[245,33,241,31,"equipAbility"],[245,45,241,43],[245,46,241,44],[245,61,241,59],[245,63,241,61],[245,64,241,62],[245,65,241,63],[246,6,243,4],[246,13,243,11],[246,19,243,17],[247,8,244,6,"combatEngine"],[247,27,244,18],[247,28,244,18,"combatEngine"],[247,40,244,18],[247,41,244,19,"stop"],[247,45,244,23],[247,46,244,24],[247,47,244,25],[248,6,245,4],[248,7,245,5],[249,4,246,2],[249,5,246,3],[249,7,246,5],[249,9,246,7],[249,10,246,8],[250,4,248,2],[250,10,248,8,"contextValue"],[250,22,248,39],[250,25,248,42],[251,6,249,4,"combatState"],[251,17,249,15],[252,6,250,4,"startCombat"],[252,17,250,15],[253,6,251,4,"stopCombat"],[253,16,251,14],[254,6,252,4,"equipAbility"],[254,18,252,16],[255,6,253,4,"getDeck"],[255,13,253,11],[256,6,254,4,"getAvailableAbilities"],[256,27,254,25],[257,6,255,4,"upgradeAbility"],[258,4,256,2],[258,5,256,3],[259,4,258,2],[259,24,259,4],[259,28,259,4,"_reactJsxDevRuntime"],[259,47,259,4],[259,48,259,4,"jsxDEV"],[259,54,259,4],[259,56,259,5,"CombatContext"],[259,69,259,18],[259,70,259,19,"Provider"],[259,78,259,27],[260,6,259,28,"value"],[260,11,259,33],[260,13,259,35,"contextValue"],[260,25,259,48],[261,6,259,48,"children"],[261,14,259,48],[261,16,260,7,"children"],[262,4,260,15],[263,6,260,15,"fileName"],[263,14,260,15],[263,16,260,15,"_jsxFileName"],[263,28,260,15],[264,6,260,15,"lineNumber"],[264,16,260,15],[265,6,260,15,"columnNumber"],[265,18,260,15],[266,4,260,15],[266,11,261,28],[266,12,261,29],[267,2,263,0],[267,3,263,1],[268,2,263,2,"_s3"],[268,5,263,2],[268,6,44,13,"CombatProvider"],[268,20,44,27],[269,2,44,27,"_c"],[269,4,44,27],[269,7,44,13,"CombatProvider"],[269,21,44,27],[270,2,44,27],[270,6,44,27,"_c"],[270,8,44,27],[271,2,44,27,"$RefreshReg$"],[271,14,44,27],[271,15,44,27,"_c"],[271,17,44,27],[272,0,44,27],[272,3]],"functionMap":{"names":["<global>","useCombat","CombatProvider","handleEnemyKill","handleCombatTick","setCombatState$argument_0","effectResults.forEach$argument_0","newState.enemies.findIndex$argument_0","results.forEach$argument_0","newState.enemies.filter$argument_0","deadEnemies.forEach$argument_0","castAbility","deck.activeSynergies.forEach$argument_0","synergy.requiredTags.some$argument_0","state.enemies.forEach$argument_0","spawnTestEnemy","startCombat","stopCombat","equipAbility","getDeck","getAvailableAbilities","upgradeAbility","useEffect$argument_0","<anonymous>"],"mappings":"AAA;yBCmC;CDM;8BEE;0BCoB;GDE;2BEG;mBCE;4BCa;sDCC,sBD;0BEE;WFG;ODE;kDIY,0BJ;0BKC;OLE;iDIG,yBJ;KDW;GFC;sBSG;iCCa;oCCE,iCD;KDG;4BGW;OHG;GTiB;yBaG;GboB;sBcG;mBXE,uCW;GdQ;qBeG;mBZC,wCY;GfE;uBgBG;GhBE;kBiBE;GjBE;gCkBE;GlBE;yBmBE;GnBE;YoBG;WCO;KDE;GpBC;CFiB"},"hasCjsExports":false},"type":"js/module"}]}