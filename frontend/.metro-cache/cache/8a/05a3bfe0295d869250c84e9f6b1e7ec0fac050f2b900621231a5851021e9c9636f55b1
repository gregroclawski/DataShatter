{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n\n        // Ensure minimum 5 second loading time for user experience\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 5000; // 5 seconds\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms to show themed animation`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":297,"map":[[13,2,30,0,"Object"],[13,8,30,0],[13,9,30,0,"defineProperty"],[13,23,30,0],[13,24,30,0,"exports"],[13,31,30,0],[14,4,30,0,"enumerable"],[14,14,30,0],[15,4,30,0,"get"],[15,7,30,0],[15,18,30,0,"get"],[15,19,30,0],[16,6,30,0],[16,13,30,0,"AuthProvider"],[16,25,30,0],[17,4,30,0],[18,2,30,0],[19,2,294,0,"Object"],[19,8,294,0],[19,9,294,0,"defineProperty"],[19,23,294,0],[19,24,294,0,"exports"],[19,31,294,0],[20,4,294,0,"enumerable"],[20,14,294,0],[21,4,294,0,"get"],[21,7,294,0],[21,18,294,0,"get"],[21,19,294,0],[22,6,294,0],[22,13,294,0,"useAuth"],[22,20,294,0],[23,4,294,0],[24,2,294,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_expoConstants"],[28,20,3,0],[28,23,3,0,"require"],[28,30,3,0],[28,31,3,0,"_dependencyMap"],[28,45,3,0],[29,2,3,0],[29,6,3,0,"Constants"],[29,15,3,0],[29,18,3,0,"_interopDefault"],[29,33,3,0],[29,34,3,0,"_expoConstants"],[29,48,3,0],[30,2,3,39],[30,6,3,39,"_reactJsxDevRuntime"],[30,25,3,39],[30,28,3,39,"require"],[30,35,3,39],[30,36,3,39,"_dependencyMap"],[30,50,3,39],[31,2,26,0],[31,8,26,6,"AuthContext"],[31,19,26,17],[31,35,26,20],[31,39,26,20,"createContext"],[31,45,26,33],[31,46,26,33,"createContext"],[31,59,26,33],[31,61,26,63,"undefined"],[31,70,26,72],[31,71,26,73],[32,2,28,0],[32,8,28,6,"API_BASE_URL"],[32,20,28,18],[32,23,28,21,"Constants"],[32,32,28,30],[32,33,28,30,"default"],[32,40,28,30],[32,41,28,31,"expoConfig"],[32,51,28,41],[32,53,28,43,"extra"],[32,58,28,48],[32,60,28,50,"backendUrl"],[32,70,28,60],[32,74,28,64,"process"],[32,81,28,71],[32,82,28,72,"env"],[32,85,28,75],[32,86,28,76,"EXPO_PUBLIC_BACKEND_URL"],[32,109,28,99],[32,113,28,103],[32,136,28,126],[33,2,30,7],[33,8,30,13,"AuthProvider"],[33,20,30,25],[33,23,30,28,"AuthProvider"],[33,24,30,29],[34,4,30,31,"children"],[35,2,30,65],[35,3,30,66],[35,8,30,71],[36,4,31,2],[36,10,31,8],[36,11,31,9,"user"],[36,15,31,13],[36,17,31,15,"setUser"],[36,24,31,22],[36,25,31,23],[36,28,31,26],[36,32,31,26,"useState"],[36,38,31,34],[36,39,31,34,"useState"],[36,47,31,34],[36,49,31,48],[36,53,31,52],[36,54,31,53],[37,4,32,2],[37,10,32,8],[37,11,32,9,"token"],[37,16,32,14],[37,18,32,16,"setToken"],[37,26,32,24],[37,27,32,25],[37,30,32,28],[37,34,32,28,"useState"],[37,40,32,36],[37,41,32,36,"useState"],[37,49,32,36],[37,51,32,52],[37,55,32,56],[37,56,32,57],[38,4,33,2],[38,10,33,8],[38,11,33,9,"isLoading"],[38,20,33,18],[38,22,33,20,"setIsLoading"],[38,34,33,32],[38,35,33,33],[38,38,33,36],[38,42,33,36,"useState"],[38,48,33,44],[38,49,33,44,"useState"],[38,57,33,44],[38,59,33,45],[38,63,33,49],[38,64,33,50],[39,4,35,2],[39,10,35,8,"isAuthenticated"],[39,25,35,23],[39,28,35,26],[39,29,35,27],[39,30,35,28,"user"],[39,34,35,32],[39,38,35,36],[39,39,35,37],[39,40,35,38,"token"],[39,45,35,43],[41,4,37,2],[42,4,38,2],[42,8,38,2,"useEffect"],[42,14,38,11],[42,15,38,11,"useEffect"],[42,24,38,11],[42,26,38,12],[42,32,38,18],[43,6,39,4,"checkExistingSession"],[43,26,39,24],[43,27,39,25],[43,28,39,26],[44,4,40,2],[44,5,40,3],[44,7,40,5],[44,9,40,7],[44,10,40,8],[45,4,42,2],[45,10,42,8,"checkExistingSession"],[45,30,42,28],[45,33,42,31],[45,39,42,31,"checkExistingSession"],[45,40,42,31],[45,45,42,43],[46,6,43,4],[46,10,43,8],[47,8,44,6,"setIsLoading"],[47,20,44,18],[47,21,44,19],[47,25,44,23],[47,26,44,24],[48,8,45,6],[48,14,45,12,"startTime"],[48,23,45,21],[48,26,45,24,"Date"],[48,30,45,28],[48,31,45,29,"now"],[48,34,45,32],[48,35,45,33],[48,36,45,34],[48,37,45,35],[48,38,45,36],[50,8,47,6],[51,8,48,6],[51,14,48,12,"storedToken"],[51,25,48,23],[51,28,48,26],[51,34,48,32,"AsyncStorage"],[51,46,48,44],[51,47,48,44,"default"],[51,54,48,44],[51,55,48,45,"getItem"],[51,62,48,52],[51,63,48,53],[51,75,48,65],[51,76,48,66],[52,8,49,6],[52,14,49,12,"storedUser"],[52,24,49,22],[52,27,49,25],[52,33,49,31,"AsyncStorage"],[52,45,49,43],[52,46,49,43,"default"],[52,53,49,43],[52,54,49,44,"getItem"],[52,61,49,51],[52,62,49,52],[52,73,49,63],[52,74,49,64],[53,8,51,6,"console"],[53,15,51,13],[53,16,51,14,"log"],[53,19,51,17],[53,20,51,18],[53,51,51,49],[53,53,51,51],[53,54,51,52],[53,55,51,53,"storedToken"],[53,66,51,64],[53,68,51,66],[53,69,51,67],[53,70,51,68,"storedUser"],[53,80,51,78],[53,81,51,79],[54,8,53,6],[54,12,53,10,"storedToken"],[54,23,53,21],[54,27,53,25,"storedUser"],[54,37,53,35],[54,39,53,37],[55,10,54,8],[55,14,54,12],[56,12,55,10],[56,18,55,16,"userData"],[56,26,55,24],[56,29,55,27,"JSON"],[56,33,55,31],[56,34,55,32,"parse"],[56,39,55,37],[56,40,55,38,"storedUser"],[56,50,55,48],[56,51,55,49],[57,12,56,10,"setToken"],[57,20,56,18],[57,21,56,19,"storedToken"],[57,32,56,30],[57,33,56,31],[58,12,57,10,"setUser"],[58,19,57,17],[58,20,57,18,"userData"],[58,28,57,26],[58,29,57,27],[59,12,58,10,"console"],[59,19,58,17],[59,20,58,18,"log"],[59,23,58,21],[59,24,58,22],[59,58,58,56],[59,60,58,58,"userData"],[59,68,58,66],[59,69,58,67,"email"],[59,74,58,72],[59,75,58,73],[61,12,60,10],[62,12,61,10],[62,16,61,14,"sessionValid"],[62,28,61,26],[62,31,61,29],[62,36,61,34],[63,12,62,10],[63,16,62,14,"attempts"],[63,24,62,22],[63,27,62,25],[63,28,62,26],[64,12,63,10],[64,18,63,16,"maxAttempts"],[64,29,63,27],[64,32,63,30],[64,33,63,31],[65,12,65,10],[65,19,65,17],[65,20,65,18,"sessionValid"],[65,32,65,30],[65,36,65,34,"attempts"],[65,44,65,42],[65,47,65,45,"maxAttempts"],[65,58,65,56],[65,60,65,58],[66,14,66,12,"attempts"],[66,22,66,20],[66,24,66,22],[67,14,67,12,"console"],[67,21,67,19],[67,22,67,20,"log"],[67,25,67,23],[67,26,67,24],[67,59,67,57,"attempts"],[67,67,67,65],[67,71,67,69,"maxAttempts"],[67,82,67,80],[67,84,67,82],[67,85,67,83],[68,14,69,12],[68,18,69,16],[69,16,70,14,"sessionValid"],[69,28,70,26],[69,31,70,29],[69,37,70,35,"checkSession"],[69,49,70,47],[69,50,70,48],[69,51,70,49],[70,16,71,14],[70,20,71,18],[70,21,71,19,"sessionValid"],[70,33,71,31],[70,35,71,33],[71,18,72,16,"console"],[71,25,72,23],[71,26,72,24,"log"],[71,29,72,27],[71,30,72,28],[71,68,72,66],[71,70,72,68,"attempts"],[71,78,72,76],[71,79,72,77],[72,18,73,16],[72,22,73,20,"attempts"],[72,30,73,28],[72,33,73,31,"maxAttempts"],[72,44,73,42],[72,46,73,44],[73,20,74,18],[73,26,74,24],[73,30,74,28,"Promise"],[73,37,74,35],[73,38,74,36,"resolve"],[73,45,74,43],[73,49,74,47,"setTimeout"],[73,59,74,57],[73,60,74,58,"resolve"],[73,67,74,65],[73,69,74,67],[73,73,74,71],[73,74,74,72],[73,75,74,73],[73,76,74,74],[73,77,74,75],[74,18,75,16],[75,16,76,14],[75,17,76,15],[75,23,76,21],[76,18,77,16,"console"],[76,25,77,23],[76,26,77,24,"log"],[76,29,77,27],[76,30,77,28],[76,64,77,62],[76,65,77,63],[77,16,78,14],[78,14,79,12],[78,15,79,13],[78,16,79,14],[78,23,79,21,"error"],[78,28,79,26],[78,30,79,28],[79,16,80,14,"console"],[79,23,80,21],[79,24,80,22,"log"],[79,27,80,25],[79,28,80,26],[79,57,80,55],[79,59,80,57,"error"],[79,64,80,62],[79,65,80,63],[80,16,81,14],[80,20,81,18,"attempts"],[80,28,81,26],[80,31,81,29,"maxAttempts"],[80,42,81,40],[80,44,81,42],[81,18,82,16],[81,24,82,22],[81,28,82,26,"Promise"],[81,35,82,33],[81,36,82,34,"resolve"],[81,43,82,41],[81,47,82,45,"setTimeout"],[81,57,82,55],[81,58,82,56,"resolve"],[81,65,82,63],[81,67,82,65],[81,71,82,69],[81,72,82,70],[81,73,82,71],[81,74,82,72],[81,75,82,73],[82,16,83,14],[83,14,84,12],[84,12,85,10],[85,12,87,10],[85,16,87,14],[85,17,87,15,"sessionValid"],[85,29,87,27],[85,31,87,29],[86,14,88,12,"console"],[86,21,88,19],[86,22,88,20,"log"],[86,25,88,23],[86,26,88,24],[86,87,88,85],[86,88,88,86],[87,14,89,12],[87,20,89,18,"logout"],[87,26,89,24],[87,27,89,25],[87,28,89,26],[88,12,90,10],[89,10,91,8],[89,11,91,9],[89,12,91,10],[89,19,91,17,"parseError"],[89,29,91,27],[89,31,91,29],[90,12,92,10,"console"],[90,19,92,17],[90,20,92,18,"error"],[90,25,92,23],[90,26,92,24],[90,59,92,57],[90,61,92,59,"parseError"],[90,71,92,69],[90,72,92,70],[91,12,93,10],[91,18,93,16,"logout"],[91,24,93,22],[91,25,93,23],[91,26,93,24],[92,10,94,8],[93,8,95,6],[93,9,95,7],[93,15,95,13],[94,10,96,8,"console"],[94,17,96,15],[94,18,96,16,"log"],[94,21,96,19],[94,22,96,20],[94,50,96,48],[94,51,96,49],[95,8,97,6],[97,8,99,6],[98,8,100,6],[98,14,100,12,"elapsedTime"],[98,25,100,23],[98,28,100,26,"Date"],[98,32,100,30],[98,33,100,31,"now"],[98,36,100,34],[98,37,100,35],[98,38,100,36],[98,41,100,39,"startTime"],[98,50,100,48],[99,8,101,6],[99,14,101,12,"minLoadingTime"],[99,28,101,26],[99,31,101,29],[99,35,101,33],[99,36,101,34],[99,37,101,35],[100,8,102,6],[100,12,102,10,"elapsedTime"],[100,23,102,21],[100,26,102,24,"minLoadingTime"],[100,40,102,38],[100,42,102,40],[101,10,103,8],[101,16,103,14,"remainingTime"],[101,29,103,27],[101,32,103,30,"minLoadingTime"],[101,46,103,44],[101,49,103,47,"elapsedTime"],[101,60,103,58],[102,10,104,8,"console"],[102,17,104,15],[102,18,104,16,"log"],[102,21,104,19],[102,22,104,20],[102,57,104,55,"remainingTime"],[102,70,104,68],[102,99,104,97],[102,100,104,98],[103,10,105,8],[103,16,105,14],[103,20,105,18,"Promise"],[103,27,105,25],[103,28,105,26,"resolve"],[103,35,105,33],[103,39,105,37,"setTimeout"],[103,49,105,47],[103,50,105,48,"resolve"],[103,57,105,55],[103,59,105,57,"remainingTime"],[103,72,105,70],[103,73,105,71],[103,74,105,72],[104,8,106,6],[105,6,107,4],[105,7,107,5],[105,8,107,6],[105,15,107,13,"error"],[105,20,107,18],[105,22,107,20],[106,8,108,6,"console"],[106,15,108,13],[106,16,108,14,"error"],[106,21,108,19],[106,22,108,20],[106,56,108,54],[106,58,108,56,"error"],[106,63,108,61],[106,64,108,62],[107,8,109,6],[107,14,109,12,"logout"],[107,20,109,18],[107,21,109,19],[107,22,109,20],[108,6,110,4],[108,7,110,5],[108,16,110,14],[109,8,111,6,"setIsLoading"],[109,20,111,18],[109,21,111,19],[109,26,111,24],[109,27,111,25],[110,6,112,4],[111,4,113,2],[111,5,113,3],[112,4,115,2],[112,10,115,8,"checkSession"],[112,22,115,20],[112,25,115,23],[112,31,115,23,"checkSession"],[112,32,115,23],[112,37,115,53],[113,6,116,4],[113,10,116,8],[114,8,117,6],[115,8,118,6],[115,12,118,10],[115,13,118,11,"token"],[115,18,118,16],[115,22,118,20],[115,23,118,21,"user"],[115,27,118,25],[115,29,118,27],[116,10,119,8,"console"],[116,17,119,15],[116,18,119,16,"log"],[116,21,119,19],[116,22,119,20],[116,64,119,62],[116,65,119,63],[117,10,120,8],[117,17,120,15],[117,22,120,20],[118,8,121,6],[119,8,123,6],[119,14,123,12,"response"],[119,22,123,20],[119,25,123,23],[119,31,123,29,"fetch"],[119,36,123,34],[119,37,123,35],[119,40,123,38,"API_BASE_URL"],[119,52,123,50],[119,77,123,75],[119,79,123,77],[120,10,124,8,"method"],[120,16,124,14],[120,18,124,16],[120,23,124,21],[121,10,125,8,"credentials"],[121,21,125,19],[121,23,125,21],[121,32,125,30],[122,10,126,8,"headers"],[122,17,126,15],[122,19,126,17],[123,12,127,10],[123,26,127,24],[123,28,127,26],[123,46,127,44],[124,12,128,10],[124,27,128,25],[124,29,128,27],[124,39,128,37,"token"],[124,44,128,42],[125,10,129,8],[126,8,130,6],[126,9,130,7],[126,10,130,8],[127,8,132,6],[127,12,132,10],[127,13,132,11,"response"],[127,21,132,19],[127,22,132,20,"ok"],[127,24,132,22],[127,26,132,24],[128,10,133,8,"console"],[128,17,133,15],[128,18,133,16,"log"],[128,21,133,19],[128,22,133,20],[128,45,133,43],[128,47,133,45,"response"],[128,55,133,53],[128,56,133,54,"status"],[128,62,133,60],[128,63,133,61],[129,10,134,8],[129,17,134,15],[129,22,134,20],[130,8,135,6],[131,8,137,6],[131,14,137,12,"data"],[131,18,137,16],[131,21,137,19],[131,27,137,25,"response"],[131,35,137,33],[131,36,137,34,"json"],[131,40,137,38],[131,41,137,39],[131,42,137,40],[132,8,138,6],[132,14,138,12,"isValid"],[132,21,138,19],[132,24,138,22,"data"],[132,28,138,26],[132,29,138,27,"authenticated"],[132,42,138,40],[132,47,138,45],[132,51,138,49],[133,8,140,6],[133,12,140,10,"isValid"],[133,19,140,17],[133,23,140,21,"data"],[133,27,140,25],[133,28,140,26,"user"],[133,32,140,30],[133,34,140,32],[134,10,141,8],[135,10,142,8,"setUser"],[135,17,142,15],[135,18,142,16,"data"],[135,22,142,20],[135,23,142,21,"user"],[135,27,142,25],[135,28,142,26],[136,10,143,8,"console"],[136,17,143,15],[136,18,143,16,"log"],[136,21,143,19],[136,22,143,20],[136,66,143,64],[136,68,143,66,"data"],[136,72,143,70],[136,73,143,71,"user"],[136,77,143,75],[136,78,143,76,"email"],[136,83,143,81],[136,84,143,82],[137,8,144,6],[137,9,144,7],[137,15,144,13],[138,10,145,8,"console"],[138,17,145,15],[138,18,145,16,"log"],[138,21,145,19],[138,22,145,20],[138,57,145,55],[138,59,145,57,"data"],[138,63,145,61],[138,64,145,62],[139,8,146,6],[140,8,148,6],[140,15,148,13,"isValid"],[140,22,148,20],[141,6,149,4],[141,7,149,5],[141,8,149,6],[141,15,149,13,"error"],[141,20,149,18],[141,22,149,20],[142,8,150,6,"console"],[142,15,150,13],[142,16,150,14,"error"],[142,21,150,19],[142,22,150,20],[142,78,150,76],[142,80,150,78,"error"],[142,85,150,83],[142,86,150,84],[143,8,151,6],[144,8,152,6],[145,8,153,6],[145,15,153,13],[145,19,153,17],[145,20,153,18],[145,21,153,19],[146,6,154,4],[147,4,155,2],[147,5,155,3],[148,4,157,2],[148,10,157,8,"login"],[148,15,157,13],[148,18,157,16],[148,24,157,16,"login"],[148,25,157,23,"email"],[148,30,157,36],[148,32,157,38,"password"],[148,40,157,54],[148,45,157,106],[149,6,158,4],[149,10,158,8],[150,8,159,6,"setIsLoading"],[150,20,159,18],[150,21,159,19],[150,25,159,23],[150,26,159,24],[151,8,161,6],[151,14,161,12,"formData"],[151,22,161,20],[151,25,161,23],[151,29,161,27,"URLSearchParams"],[151,44,161,42],[151,45,161,43],[151,46,161,44],[152,8,162,6,"formData"],[152,16,162,14],[152,17,162,15,"append"],[152,23,162,21],[152,24,162,22],[152,34,162,32],[152,36,162,34,"email"],[152,41,162,39],[152,42,162,40],[152,43,162,41],[152,44,162,42],[153,8,163,6,"formData"],[153,16,163,14],[153,17,163,15,"append"],[153,23,163,21],[153,24,163,22],[153,34,163,32],[153,36,163,34,"password"],[153,44,163,42],[153,45,163,43],[154,8,165,6],[154,14,165,12,"response"],[154,22,165,20],[154,25,165,23],[154,31,165,29,"fetch"],[154,36,165,34],[154,37,165,35],[154,40,165,38,"API_BASE_URL"],[154,52,165,50],[154,69,165,67],[154,71,165,69],[155,10,166,8,"method"],[155,16,166,14],[155,18,166,16],[155,24,166,22],[156,10,167,8,"credentials"],[156,21,167,19],[156,23,167,21],[156,32,167,30],[157,10,168,8,"headers"],[157,17,168,15],[157,19,168,17],[158,12,169,10],[158,26,169,24],[158,28,169,26],[159,10,170,8],[159,11,170,9],[160,10,171,8,"body"],[160,14,171,12],[160,16,171,14,"formData"],[160,24,171,22],[160,25,171,23,"toString"],[160,33,171,31],[160,34,171,32],[161,8,172,6],[161,9,172,7],[161,10,172,8],[162,8,174,6],[162,14,174,12,"data"],[162,18,174,16],[162,21,174,19],[162,27,174,25,"response"],[162,35,174,33],[162,36,174,34,"json"],[162,40,174,38],[162,41,174,39],[162,42,174,40],[163,8,176,6],[163,12,176,10],[163,13,176,11,"response"],[163,21,176,19],[163,22,176,20,"ok"],[163,24,176,22],[163,26,176,24],[164,10,177,8],[164,17,177,15],[165,12,177,17,"success"],[165,19,177,24],[165,21,177,26],[165,26,177,31],[166,12,177,33,"error"],[166,17,177,38],[166,19,177,40,"data"],[166,23,177,44],[166,24,177,45,"detail"],[166,30,177,51],[166,34,177,55],[167,10,177,70],[167,11,177,71],[168,8,178,6],[170,8,180,6],[171,8,181,6],[171,14,181,12,"AsyncStorage"],[171,26,181,24],[171,27,181,24,"default"],[171,34,181,24],[171,35,181,25,"setItem"],[171,42,181,32],[171,43,181,33],[171,55,181,45],[171,57,181,47,"data"],[171,61,181,51],[171,62,181,52,"access_token"],[171,74,181,64],[171,75,181,65],[172,8,182,6],[172,14,182,12,"AsyncStorage"],[172,26,182,24],[172,27,182,24,"default"],[172,34,182,24],[172,35,182,25,"setItem"],[172,42,182,32],[172,43,182,33],[172,54,182,44],[172,56,182,46,"JSON"],[172,60,182,50],[172,61,182,51,"stringify"],[172,70,182,60],[172,71,182,61,"data"],[172,75,182,65],[172,76,182,66,"user"],[172,80,182,70],[172,81,182,71],[172,82,182,72],[173,8,184,6,"setToken"],[173,16,184,14],[173,17,184,15,"data"],[173,21,184,19],[173,22,184,20,"access_token"],[173,34,184,32],[173,35,184,33],[174,8,185,6,"setUser"],[174,15,185,13],[174,16,185,14,"data"],[174,20,185,18],[174,21,185,19,"user"],[174,25,185,23],[174,26,185,24],[175,8,187,6],[175,15,187,13],[176,10,187,15,"success"],[176,17,187,22],[176,19,187,24],[177,8,187,29],[177,9,187,30],[178,6,188,4],[178,7,188,5],[178,8,188,6],[178,15,188,13,"error"],[178,20,188,18],[178,22,188,20],[179,8,189,6,"console"],[179,15,189,13],[179,16,189,14,"error"],[179,21,189,19],[179,22,189,20],[179,36,189,34],[179,38,189,36,"error"],[179,43,189,41],[179,44,189,42],[180,8,190,6],[180,15,190,13],[181,10,190,15,"success"],[181,17,190,22],[181,19,190,24],[181,24,190,29],[182,10,190,31,"error"],[182,15,190,36],[182,17,190,38],[183,8,190,63],[183,9,190,64],[184,6,191,4],[184,7,191,5],[184,16,191,14],[185,8,192,6,"setIsLoading"],[185,20,192,18],[185,21,192,19],[185,26,192,24],[185,27,192,25],[186,6,193,4],[187,4,194,2],[187,5,194,3],[188,4,196,2],[188,10,196,8,"register"],[188,18,196,16],[188,21,196,19],[188,27,196,19,"register"],[188,28,196,26,"email"],[188,33,196,39],[188,35,196,41,"password"],[188,43,196,57],[188,45,196,59,"name"],[188,49,196,71],[188,54,196,123],[189,6,197,4],[189,10,197,8],[190,8,198,6,"setIsLoading"],[190,20,198,18],[190,21,198,19],[190,25,198,23],[190,26,198,24],[191,8,200,6],[191,14,200,12,"response"],[191,22,200,20],[191,25,200,23],[191,31,200,29,"fetch"],[191,36,200,34],[191,37,200,35],[191,40,200,38,"API_BASE_URL"],[191,52,200,50],[191,72,200,70],[191,74,200,72],[192,10,201,8,"method"],[192,16,201,14],[192,18,201,16],[192,24,201,22],[193,10,202,8,"credentials"],[193,21,202,19],[193,23,202,21],[193,32,202,30],[194,10,203,8,"headers"],[194,17,203,15],[194,19,203,17],[195,12,204,10],[195,26,204,24],[195,28,204,26],[196,10,205,8],[196,11,205,9],[197,10,206,8,"body"],[197,14,206,12],[197,16,206,14,"JSON"],[197,20,206,18],[197,21,206,19,"stringify"],[197,30,206,28],[197,31,206,29],[198,12,207,10,"email"],[198,17,207,15],[199,12,208,10,"password"],[199,20,208,18],[200,12,209,10,"name"],[201,10,210,8],[201,11,210,9],[202,8,211,6],[202,9,211,7],[202,10,211,8],[203,8,213,6],[203,14,213,12,"data"],[203,18,213,16],[203,21,213,19],[203,27,213,25,"response"],[203,35,213,33],[203,36,213,34,"json"],[203,40,213,38],[203,41,213,39],[203,42,213,40],[204,8,215,6],[204,12,215,10],[204,13,215,11,"response"],[204,21,215,19],[204,22,215,20,"ok"],[204,24,215,22],[204,26,215,24],[205,10,216,8],[205,17,216,15],[206,12,216,17,"success"],[206,19,216,24],[206,21,216,26],[206,26,216,31],[207,12,216,33,"error"],[207,17,216,38],[207,19,216,40,"data"],[207,23,216,44],[207,24,216,45,"detail"],[207,30,216,51],[207,34,216,55],[208,10,216,77],[208,11,216,78],[209,8,217,6],[211,8,219,6],[212,8,220,6],[212,14,220,12,"AsyncStorage"],[212,26,220,24],[212,27,220,24,"default"],[212,34,220,24],[212,35,220,25,"setItem"],[212,42,220,32],[212,43,220,33],[212,55,220,45],[212,57,220,47,"data"],[212,61,220,51],[212,62,220,52,"access_token"],[212,74,220,64],[212,75,220,65],[213,8,221,6],[213,14,221,12,"AsyncStorage"],[213,26,221,24],[213,27,221,24,"default"],[213,34,221,24],[213,35,221,25,"setItem"],[213,42,221,32],[213,43,221,33],[213,54,221,44],[213,56,221,46,"JSON"],[213,60,221,50],[213,61,221,51,"stringify"],[213,70,221,60],[213,71,221,61,"data"],[213,75,221,65],[213,76,221,66,"user"],[213,80,221,70],[213,81,221,71],[213,82,221,72],[214,8,223,6,"setToken"],[214,16,223,14],[214,17,223,15,"data"],[214,21,223,19],[214,22,223,20,"access_token"],[214,34,223,32],[214,35,223,33],[215,8,224,6,"setUser"],[215,15,224,13],[215,16,224,14,"data"],[215,20,224,18],[215,21,224,19,"user"],[215,25,224,23],[215,26,224,24],[216,8,226,6],[216,15,226,13],[217,10,226,15,"success"],[217,17,226,22],[217,19,226,24],[218,8,226,29],[218,9,226,30],[219,6,227,4],[219,7,227,5],[219,8,227,6],[219,15,227,13,"error"],[219,20,227,18],[219,22,227,20],[220,8,228,6,"console"],[220,15,228,13],[220,16,228,14,"error"],[220,21,228,19],[220,22,228,20],[220,43,228,41],[220,45,228,43,"error"],[220,50,228,48],[220,51,228,49],[221,8,229,6],[221,15,229,13],[222,10,229,15,"success"],[222,17,229,22],[222,19,229,24],[222,24,229,29],[223,10,229,31,"error"],[223,15,229,36],[223,17,229,38],[224,8,229,63],[224,9,229,64],[225,6,230,4],[225,7,230,5],[225,16,230,14],[226,8,231,6,"setIsLoading"],[226,20,231,18],[226,21,231,19],[226,26,231,24],[226,27,231,25],[227,6,232,4],[228,4,233,2],[228,5,233,3],[229,4,235,2],[229,10,235,8,"loginWithGoogle"],[229,25,235,23],[229,28,235,26],[229,34,235,26,"loginWithGoogle"],[229,35,235,26],[229,40,235,85],[230,6,236,4],[230,10,236,8],[231,8,237,6],[232,8,238,6],[233,8,239,6],[233,14,239,12,"redirectUrl"],[233,25,239,23],[233,28,239,26,"encodeURIComponent"],[233,46,239,44],[233,47,239,45,"window"],[233,53,239,51],[233,54,239,52,"location"],[233,62,239,60],[233,63,239,61,"href"],[233,67,239,65],[233,68,239,66],[234,8,240,6],[234,14,240,12,"googleAuthUrl"],[234,27,240,25],[234,30,240,28],[234,74,240,72,"redirectUrl"],[234,85,240,83],[234,87,240,85],[236,8,242,6],[237,8,243,6,"window"],[237,14,243,12],[237,15,243,13,"open"],[237,19,243,17],[237,20,243,18,"googleAuthUrl"],[237,33,243,31],[237,35,243,33],[237,42,243,40],[237,43,243,41],[238,8,245,6],[238,15,245,13],[239,10,245,15,"success"],[239,17,245,22],[239,19,245,24],[240,8,245,29],[240,9,245,30],[241,6,246,4],[241,7,246,5],[241,8,246,6],[241,15,246,13,"error"],[241,20,246,18],[241,22,246,20],[242,8,247,6,"console"],[242,15,247,13],[242,16,247,14,"error"],[242,21,247,19],[242,22,247,20],[242,43,247,41],[242,45,247,43,"error"],[242,50,247,48],[242,51,247,49],[243,8,248,6],[243,15,248,13],[244,10,248,15,"success"],[244,17,248,22],[244,19,248,24],[244,24,248,29],[245,10,248,31,"error"],[245,15,248,36],[245,17,248,38],[246,8,248,60],[246,9,248,61],[247,6,249,4],[248,4,250,2],[248,5,250,3],[249,4,252,2],[249,10,252,8,"logout"],[249,16,252,14],[249,19,252,17],[249,25,252,17,"logout"],[249,26,252,17],[249,31,252,44],[250,6,253,4],[250,10,253,8],[251,8,254,6],[252,8,255,6],[252,12,255,10,"token"],[252,17,255,15],[252,19,255,17],[253,10,256,8],[253,16,256,14,"fetch"],[253,21,256,19],[253,22,256,20],[253,25,256,23,"API_BASE_URL"],[253,37,256,35],[253,55,256,53],[253,57,256,55],[254,12,257,10,"method"],[254,18,257,16],[254,20,257,18],[254,26,257,24],[255,12,258,10,"credentials"],[255,23,258,21],[255,25,258,23],[255,34,258,32],[256,12,259,10,"headers"],[256,19,259,17],[256,21,259,19],[257,14,260,12],[257,29,260,27],[257,31,260,29],[257,41,260,39,"token"],[257,46,260,44],[257,48,260,46],[258,14,261,12],[258,28,261,26],[258,30,261,28],[259,12,262,10],[260,10,263,8],[260,11,263,9],[260,12,263,10],[261,8,264,6],[262,6,265,4],[262,7,265,5],[262,8,265,6],[262,15,265,13,"error"],[262,20,265,18],[262,22,265,20],[263,8,266,6,"console"],[263,15,266,13],[263,16,266,14,"error"],[263,21,266,19],[263,22,266,20],[263,37,266,35],[263,39,266,37,"error"],[263,44,266,42],[263,45,266,43],[264,6,267,4],[264,7,267,5],[264,16,267,14],[265,8,268,6],[266,8,269,6],[266,14,269,12,"AsyncStorage"],[266,26,269,24],[266,27,269,24,"default"],[266,34,269,24],[266,35,269,25,"multiRemove"],[266,46,269,36],[266,47,269,37],[266,48,269,38],[266,60,269,50],[266,62,269,52],[266,73,269,63],[266,74,269,64],[266,75,269,65],[267,8,270,6,"setToken"],[267,16,270,14],[267,17,270,15],[267,21,270,19],[267,22,270,20],[268,8,271,6,"setUser"],[268,15,271,13],[268,16,271,14],[268,20,271,18],[268,21,271,19],[269,6,272,4],[270,4,273,2],[270,5,273,3],[271,4,275,2],[271,24,276,4],[271,28,276,4,"_reactJsxDevRuntime"],[271,47,276,4],[271,48,276,4,"jsxDEV"],[271,54,276,4],[271,56,276,5,"AuthContext"],[271,67,276,16],[271,68,276,17,"Provider"],[271,76,276,25],[272,6,277,6,"value"],[272,11,277,11],[272,13,277,13],[273,8,278,8,"user"],[273,12,278,12],[274,8,279,8,"token"],[274,13,279,13],[275,8,280,8,"isLoading"],[275,17,280,17],[276,8,281,8,"isAuthenticated"],[276,23,281,23],[277,8,282,8,"login"],[277,13,282,13],[278,8,283,8,"register"],[278,16,283,16],[279,8,284,8,"loginWithGoogle"],[279,23,284,23],[280,8,285,8,"logout"],[280,14,285,14],[281,8,286,8,"checkSession"],[282,6,287,6],[282,7,287,8],[283,6,287,8,"children"],[283,14,287,8],[283,16,289,7,"children"],[284,4,289,15],[285,6,289,15,"fileName"],[285,14,289,15],[285,16,289,15,"_jsxFileName"],[285,28,289,15],[286,6,289,15,"lineNumber"],[286,16,289,15],[287,6,289,15,"columnNumber"],[287,18,289,15],[288,4,289,15],[288,11,290,26],[288,12,290,27],[289,2,292,0],[289,3,292,1],[290,2,294,7],[290,8,294,13,"useAuth"],[290,15,294,20],[290,18,294,23,"useAuth"],[290,19,294,23],[290,24,294,46],[291,4,295,2],[291,10,295,8,"context"],[291,17,295,15],[291,20,295,18],[291,24,295,18,"useContext"],[291,30,295,28],[291,31,295,28,"useContext"],[291,41,295,28],[291,43,295,29,"AuthContext"],[291,54,295,40],[291,55,295,41],[292,4,296,2],[292,8,296,6,"context"],[292,15,296,13],[292,20,296,18,"undefined"],[292,29,296,27],[292,31,296,29],[293,6,297,4],[293,12,297,10],[293,16,297,14,"Error"],[293,21,297,19],[293,22,297,20],[293,67,297,65],[293,68,297,66],[294,4,298,2],[295,4,299,2],[295,11,299,9,"context"],[295,18,299,16],[296,2,300,0],[296,3,300,1],[297,0,300,2],[297,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCCgC,oCD;kCCQ,oCD;0BCuB,6CD;GFQ;uBIE;GJwC;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}