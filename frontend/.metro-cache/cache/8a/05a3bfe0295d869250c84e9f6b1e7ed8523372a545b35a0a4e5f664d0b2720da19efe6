{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Session check - Token exists:', !!storedToken, 'User exists:', !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            console.log('üë§ Restoring user session:', userData.email, 'ID:', userData.id);\n            setToken(storedToken);\n            setUser(userData);\n\n            // Simple session validation\n            try {\n              const isValid = await checkSession();\n              if (isValid) {\n                console.log('‚úÖ Session validation successful - user auto-logged in');\n              } else {\n                console.log('‚ùå Session validation failed - clearing stored session');\n                await logout();\n              }\n            } catch (error) {\n              console.log('‚ö†Ô∏è Session validation error - keeping session:', error);\n              // Keep session on network errors\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            // Clear invalid stored data\n            await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n            setToken(null);\n            setUser(null);\n          }\n        } else {\n          console.log('üîç No stored session found - showing auth screen');\n        }\n\n        // Ensure minimum 5 second loading time for user experience\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 5000; // 5 seconds\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms to show themed animation`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        // Don't logout on errors, just continue\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":287,"map":[[13,2,30,0,"Object"],[13,8,30,0],[13,9,30,0,"defineProperty"],[13,23,30,0],[13,24,30,0,"exports"],[13,31,30,0],[14,4,30,0,"enumerable"],[14,14,30,0],[15,4,30,0,"get"],[15,7,30,0],[15,18,30,0,"get"],[15,19,30,0],[16,6,30,0],[16,13,30,0,"AuthProvider"],[16,25,30,0],[17,4,30,0],[18,2,30,0],[19,2,285,0,"Object"],[19,8,285,0],[19,9,285,0,"defineProperty"],[19,23,285,0],[19,24,285,0,"exports"],[19,31,285,0],[20,4,285,0,"enumerable"],[20,14,285,0],[21,4,285,0,"get"],[21,7,285,0],[21,18,285,0,"get"],[21,19,285,0],[22,6,285,0],[22,13,285,0,"useAuth"],[22,20,285,0],[23,4,285,0],[24,2,285,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_expoConstants"],[28,20,3,0],[28,23,3,0,"require"],[28,30,3,0],[28,31,3,0,"_dependencyMap"],[28,45,3,0],[29,2,3,0],[29,6,3,0,"Constants"],[29,15,3,0],[29,18,3,0,"_interopDefault"],[29,33,3,0],[29,34,3,0,"_expoConstants"],[29,48,3,0],[30,2,3,39],[30,6,3,39,"_reactJsxDevRuntime"],[30,25,3,39],[30,28,3,39,"require"],[30,35,3,39],[30,36,3,39,"_dependencyMap"],[30,50,3,39],[31,2,26,0],[31,8,26,6,"AuthContext"],[31,19,26,17],[31,35,26,20],[31,39,26,20,"createContext"],[31,45,26,33],[31,46,26,33,"createContext"],[31,59,26,33],[31,61,26,63,"undefined"],[31,70,26,72],[31,71,26,73],[32,2,28,0],[32,8,28,6,"API_BASE_URL"],[32,20,28,18],[32,23,28,21,"Constants"],[32,32,28,30],[32,33,28,30,"default"],[32,40,28,30],[32,41,28,31,"expoConfig"],[32,51,28,41],[32,53,28,43,"extra"],[32,58,28,48],[32,60,28,50,"backendUrl"],[32,70,28,60],[32,74,28,64,"process"],[32,81,28,71],[32,82,28,72,"env"],[32,85,28,75],[32,86,28,76,"EXPO_PUBLIC_BACKEND_URL"],[32,109,28,99],[32,113,28,103],[32,136,28,126],[33,2,30,7],[33,8,30,13,"AuthProvider"],[33,20,30,25],[33,23,30,28,"AuthProvider"],[33,24,30,29],[34,4,30,31,"children"],[35,2,30,65],[35,3,30,66],[35,8,30,71],[36,4,31,2],[36,10,31,8],[36,11,31,9,"user"],[36,15,31,13],[36,17,31,15,"setUser"],[36,24,31,22],[36,25,31,23],[36,28,31,26],[36,32,31,26,"useState"],[36,38,31,34],[36,39,31,34,"useState"],[36,47,31,34],[36,49,31,48],[36,53,31,52],[36,54,31,53],[37,4,32,2],[37,10,32,8],[37,11,32,9,"token"],[37,16,32,14],[37,18,32,16,"setToken"],[37,26,32,24],[37,27,32,25],[37,30,32,28],[37,34,32,28,"useState"],[37,40,32,36],[37,41,32,36,"useState"],[37,49,32,36],[37,51,32,52],[37,55,32,56],[37,56,32,57],[38,4,33,2],[38,10,33,8],[38,11,33,9,"isLoading"],[38,20,33,18],[38,22,33,20,"setIsLoading"],[38,34,33,32],[38,35,33,33],[38,38,33,36],[38,42,33,36,"useState"],[38,48,33,44],[38,49,33,44,"useState"],[38,57,33,44],[38,59,33,45],[38,63,33,49],[38,64,33,50],[39,4,35,2],[39,10,35,8,"isAuthenticated"],[39,25,35,23],[39,28,35,26],[39,29,35,27],[39,30,35,28,"user"],[39,34,35,32],[39,38,35,36],[39,39,35,37],[39,40,35,38,"token"],[39,45,35,43],[41,4,37,2],[42,4,38,2],[42,8,38,2,"useEffect"],[42,14,38,11],[42,15,38,11,"useEffect"],[42,24,38,11],[42,26,38,12],[42,32,38,18],[43,6,39,4,"checkExistingSession"],[43,26,39,24],[43,27,39,25],[43,28,39,26],[44,4,40,2],[44,5,40,3],[44,7,40,5],[44,9,40,7],[44,10,40,8],[45,4,42,2],[45,10,42,8,"checkExistingSession"],[45,30,42,28],[45,33,42,31],[45,39,42,31,"checkExistingSession"],[45,40,42,31],[45,45,42,43],[46,6,43,4],[46,10,43,8],[47,8,44,6,"setIsLoading"],[47,20,44,18],[47,21,44,19],[47,25,44,23],[47,26,44,24],[48,8,45,6],[48,14,45,12,"startTime"],[48,23,45,21],[48,26,45,24,"Date"],[48,30,45,28],[48,31,45,29,"now"],[48,34,45,32],[48,35,45,33],[48,36,45,34],[48,37,45,35],[48,38,45,36],[50,8,47,6],[51,8,48,6],[51,14,48,12,"storedToken"],[51,25,48,23],[51,28,48,26],[51,34,48,32,"AsyncStorage"],[51,46,48,44],[51,47,48,44,"default"],[51,54,48,44],[51,55,48,45,"getItem"],[51,62,48,52],[51,63,48,53],[51,75,48,65],[51,76,48,66],[52,8,49,6],[52,14,49,12,"storedUser"],[52,24,49,22],[52,27,49,25],[52,33,49,31,"AsyncStorage"],[52,45,49,43],[52,46,49,43,"default"],[52,53,49,43],[52,54,49,44,"getItem"],[52,61,49,51],[52,62,49,52],[52,73,49,63],[52,74,49,64],[53,8,51,6,"console"],[53,15,51,13],[53,16,51,14,"log"],[53,19,51,17],[53,20,51,18],[53,54,51,52],[53,56,51,54],[53,57,51,55],[53,58,51,56,"storedToken"],[53,69,51,67],[53,71,51,69],[53,85,51,83],[53,87,51,85],[53,88,51,86],[53,89,51,87,"storedUser"],[53,99,51,97],[53,100,51,98],[54,8,53,6],[54,12,53,10,"storedToken"],[54,23,53,21],[54,27,53,25,"storedUser"],[54,37,53,35],[54,39,53,37],[55,10,54,8],[55,14,54,12],[56,12,55,10],[56,18,55,16,"userData"],[56,26,55,24],[56,29,55,27,"JSON"],[56,33,55,31],[56,34,55,32,"parse"],[56,39,55,37],[56,40,55,38,"storedUser"],[56,50,55,48],[56,51,55,49],[57,12,56,10,"console"],[57,19,56,17],[57,20,56,18,"log"],[57,23,56,21],[57,24,56,22],[57,52,56,50],[57,54,56,52,"userData"],[57,62,56,60],[57,63,56,61,"email"],[57,68,56,66],[57,70,56,68],[57,75,56,73],[57,77,56,75,"userData"],[57,85,56,83],[57,86,56,84,"id"],[57,88,56,86],[57,89,56,87],[58,12,58,10,"setToken"],[58,20,58,18],[58,21,58,19,"storedToken"],[58,32,58,30],[58,33,58,31],[59,12,59,10,"setUser"],[59,19,59,17],[59,20,59,18,"userData"],[59,28,59,26],[59,29,59,27],[61,12,61,10],[62,12,62,10],[62,16,62,14],[63,14,63,12],[63,20,63,18,"isValid"],[63,27,63,25],[63,30,63,28],[63,36,63,34,"checkSession"],[63,48,63,46],[63,49,63,47],[63,50,63,48],[64,14,64,12],[64,18,64,16,"isValid"],[64,25,64,23],[64,27,64,25],[65,16,65,14,"console"],[65,23,65,21],[65,24,65,22,"log"],[65,27,65,25],[65,28,65,26],[65,83,65,81],[65,84,65,82],[66,14,66,12],[66,15,66,13],[66,21,66,19],[67,16,67,14,"console"],[67,23,67,21],[67,24,67,22,"log"],[67,27,67,25],[67,28,67,26],[67,83,67,81],[67,84,67,82],[68,16,68,14],[68,22,68,20,"logout"],[68,28,68,26],[68,29,68,27],[68,30,68,28],[69,14,69,12],[70,12,70,10],[70,13,70,11],[70,14,70,12],[70,21,70,19,"error"],[70,26,70,24],[70,28,70,26],[71,14,71,12,"console"],[71,21,71,19],[71,22,71,20,"log"],[71,25,71,23],[71,26,71,24],[71,74,71,72],[71,76,71,74,"error"],[71,81,71,79],[71,82,71,80],[72,14,72,12],[73,12,73,10],[74,10,75,8],[74,11,75,9],[74,12,75,10],[74,19,75,17,"parseError"],[74,29,75,27],[74,31,75,29],[75,12,76,10,"console"],[75,19,76,17],[75,20,76,18,"error"],[75,25,76,23],[75,26,76,24],[75,59,76,57],[75,61,76,59,"parseError"],[75,71,76,69],[75,72,76,70],[76,12,77,10],[77,12,78,10],[77,18,78,16,"AsyncStorage"],[77,30,78,28],[77,31,78,28,"default"],[77,38,78,28],[77,39,78,29,"multiRemove"],[77,50,78,40],[77,51,78,41],[77,52,78,42],[77,64,78,54],[77,66,78,56],[77,77,78,67],[77,78,78,68],[77,79,78,69],[78,12,79,10,"setToken"],[78,20,79,18],[78,21,79,19],[78,25,79,23],[78,26,79,24],[79,12,80,10,"setUser"],[79,19,80,17],[79,20,80,18],[79,24,80,22],[79,25,80,23],[80,10,81,8],[81,8,82,6],[81,9,82,7],[81,15,82,13],[82,10,83,8,"console"],[82,17,83,15],[82,18,83,16,"log"],[82,21,83,19],[82,22,83,20],[82,72,83,70],[82,73,83,71],[83,8,84,6],[85,8,86,6],[86,8,87,6],[86,14,87,12,"elapsedTime"],[86,25,87,23],[86,28,87,26,"Date"],[86,32,87,30],[86,33,87,31,"now"],[86,36,87,34],[86,37,87,35],[86,38,87,36],[86,41,87,39,"startTime"],[86,50,87,48],[87,8,88,6],[87,14,88,12,"minLoadingTime"],[87,28,88,26],[87,31,88,29],[87,35,88,33],[87,36,88,34],[87,37,88,35],[88,8,89,6],[88,12,89,10,"elapsedTime"],[88,23,89,21],[88,26,89,24,"minLoadingTime"],[88,40,89,38],[88,42,89,40],[89,10,90,8],[89,16,90,14,"remainingTime"],[89,29,90,27],[89,32,90,30,"minLoadingTime"],[89,46,90,44],[89,49,90,47,"elapsedTime"],[89,60,90,58],[90,10,91,8,"console"],[90,17,91,15],[90,18,91,16,"log"],[90,21,91,19],[90,22,91,20],[90,57,91,55,"remainingTime"],[90,70,91,68],[90,99,91,97],[90,100,91,98],[91,10,92,8],[91,16,92,14],[91,20,92,18,"Promise"],[91,27,92,25],[91,28,92,26,"resolve"],[91,35,92,33],[91,39,92,37,"setTimeout"],[91,49,92,47],[91,50,92,48,"resolve"],[91,57,92,55],[91,59,92,57,"remainingTime"],[91,72,92,70],[91,73,92,71],[91,74,92,72],[92,8,93,6],[93,6,94,4],[93,7,94,5],[93,8,94,6],[93,15,94,13,"error"],[93,20,94,18],[93,22,94,20],[94,8,95,6,"console"],[94,15,95,13],[94,16,95,14,"error"],[94,21,95,19],[94,22,95,20],[94,56,95,54],[94,58,95,56,"error"],[94,63,95,61],[94,64,95,62],[95,8,96,6],[96,6,97,4],[96,7,97,5],[96,16,97,14],[97,8,98,6,"setIsLoading"],[97,20,98,18],[97,21,98,19],[97,26,98,24],[97,27,98,25],[98,6,99,4],[99,4,100,2],[99,5,100,3],[100,4,102,2],[100,10,102,8,"checkSession"],[100,22,102,20],[100,25,102,23],[100,31,102,23,"checkSession"],[100,32,102,23],[100,37,102,53],[101,6,103,4],[101,10,103,8],[102,8,104,6],[103,8,105,6],[103,12,105,10],[103,13,105,11,"token"],[103,18,105,16],[103,22,105,20],[103,23,105,21,"user"],[103,27,105,25],[103,29,105,27],[104,10,106,8,"console"],[104,17,106,15],[104,18,106,16,"log"],[104,21,106,19],[104,22,106,20],[104,64,106,62],[104,65,106,63],[105,10,107,8],[105,17,107,15],[105,22,107,20],[106,8,108,6],[107,8,110,6],[107,14,110,12,"response"],[107,22,110,20],[107,25,110,23],[107,31,110,29,"fetch"],[107,36,110,34],[107,37,110,35],[107,40,110,38,"API_BASE_URL"],[107,52,110,50],[107,77,110,75],[107,79,110,77],[108,10,111,8,"method"],[108,16,111,14],[108,18,111,16],[108,23,111,21],[109,10,112,8,"credentials"],[109,21,112,19],[109,23,112,21],[109,32,112,30],[110,10,113,8,"headers"],[110,17,113,15],[110,19,113,17],[111,12,114,10],[111,26,114,24],[111,28,114,26],[111,46,114,44],[112,12,115,10],[112,27,115,25],[112,29,115,27],[112,39,115,37,"token"],[112,44,115,42],[113,10,116,8],[114,8,117,6],[114,9,117,7],[114,10,117,8],[115,8,119,6],[115,12,119,10],[115,13,119,11,"response"],[115,21,119,19],[115,22,119,20,"ok"],[115,24,119,22],[115,26,119,24],[116,10,120,8,"console"],[116,17,120,15],[116,18,120,16,"log"],[116,21,120,19],[116,22,120,20],[116,45,120,43],[116,47,120,45,"response"],[116,55,120,53],[116,56,120,54,"status"],[116,62,120,60],[116,63,120,61],[117,10,121,8],[117,17,121,15],[117,22,121,20],[118,8,122,6],[119,8,124,6],[119,14,124,12,"data"],[119,18,124,16],[119,21,124,19],[119,27,124,25,"response"],[119,35,124,33],[119,36,124,34,"json"],[119,40,124,38],[119,41,124,39],[119,42,124,40],[120,8,125,6],[120,14,125,12,"isValid"],[120,21,125,19],[120,24,125,22,"data"],[120,28,125,26],[120,29,125,27,"authenticated"],[120,42,125,40],[120,47,125,45],[120,51,125,49],[121,8,127,6],[121,12,127,10,"isValid"],[121,19,127,17],[121,23,127,21,"data"],[121,27,127,25],[121,28,127,26,"user"],[121,32,127,30],[121,34,127,32],[122,10,128,8],[123,10,129,8,"setUser"],[123,17,129,15],[123,18,129,16,"data"],[123,22,129,20],[123,23,129,21,"user"],[123,27,129,25],[123,28,129,26],[124,10,130,8,"console"],[124,17,130,15],[124,18,130,16,"log"],[124,21,130,19],[124,22,130,20],[124,66,130,64],[124,68,130,66,"data"],[124,72,130,70],[124,73,130,71,"user"],[124,77,130,75],[124,78,130,76,"email"],[124,83,130,81],[124,84,130,82],[125,8,131,6],[125,9,131,7],[125,15,131,13],[126,10,132,8,"console"],[126,17,132,15],[126,18,132,16,"log"],[126,21,132,19],[126,22,132,20],[126,57,132,55],[126,59,132,57,"data"],[126,63,132,61],[126,64,132,62],[127,8,133,6],[128,8,135,6],[128,15,135,13,"isValid"],[128,22,135,20],[129,6,136,4],[129,7,136,5],[129,8,136,6],[129,15,136,13,"error"],[129,20,136,18],[129,22,136,20],[130,8,137,6,"console"],[130,15,137,13],[130,16,137,14,"error"],[130,21,137,19],[130,22,137,20],[130,78,137,76],[130,80,137,78,"error"],[130,85,137,83],[130,86,137,84],[131,8,138,6],[132,8,139,6],[133,8,140,6],[133,15,140,13],[133,19,140,17],[133,20,140,18],[133,21,140,19],[134,6,141,4],[135,4,142,2],[135,5,142,3],[136,4,144,2],[136,10,144,8,"login"],[136,15,144,13],[136,18,144,16],[136,24,144,16,"login"],[136,25,144,23,"email"],[136,30,144,36],[136,32,144,38,"password"],[136,40,144,54],[136,45,144,106],[137,6,145,4],[137,10,145,8],[138,8,146,6,"setIsLoading"],[138,20,146,18],[138,21,146,19],[138,25,146,23],[138,26,146,24],[139,8,148,6],[139,14,148,12,"formData"],[139,22,148,20],[139,25,148,23],[139,29,148,27,"URLSearchParams"],[139,44,148,42],[139,45,148,43],[139,46,148,44],[140,8,149,6,"formData"],[140,16,149,14],[140,17,149,15,"append"],[140,23,149,21],[140,24,149,22],[140,34,149,32],[140,36,149,34,"email"],[140,41,149,39],[140,42,149,40],[140,43,149,41],[140,44,149,42],[141,8,150,6,"formData"],[141,16,150,14],[141,17,150,15,"append"],[141,23,150,21],[141,24,150,22],[141,34,150,32],[141,36,150,34,"password"],[141,44,150,42],[141,45,150,43],[142,8,152,6],[142,14,152,12,"response"],[142,22,152,20],[142,25,152,23],[142,31,152,29,"fetch"],[142,36,152,34],[142,37,152,35],[142,40,152,38,"API_BASE_URL"],[142,52,152,50],[142,69,152,67],[142,71,152,69],[143,10,153,8,"method"],[143,16,153,14],[143,18,153,16],[143,24,153,22],[144,10,154,8,"credentials"],[144,21,154,19],[144,23,154,21],[144,32,154,30],[145,10,155,8,"headers"],[145,17,155,15],[145,19,155,17],[146,12,156,10],[146,26,156,24],[146,28,156,26],[147,10,157,8],[147,11,157,9],[148,10,158,8,"body"],[148,14,158,12],[148,16,158,14,"formData"],[148,24,158,22],[148,25,158,23,"toString"],[148,33,158,31],[148,34,158,32],[149,8,159,6],[149,9,159,7],[149,10,159,8],[150,8,161,6],[150,14,161,12,"data"],[150,18,161,16],[150,21,161,19],[150,27,161,25,"response"],[150,35,161,33],[150,36,161,34,"json"],[150,40,161,38],[150,41,161,39],[150,42,161,40],[151,8,163,6],[151,12,163,10],[151,13,163,11,"response"],[151,21,163,19],[151,22,163,20,"ok"],[151,24,163,22],[151,26,163,24],[152,10,164,8],[152,17,164,15],[153,12,164,17,"success"],[153,19,164,24],[153,21,164,26],[153,26,164,31],[154,12,164,33,"error"],[154,17,164,38],[154,19,164,40,"data"],[154,23,164,44],[154,24,164,45,"detail"],[154,30,164,51],[154,34,164,55],[155,10,164,70],[155,11,164,71],[156,8,165,6],[158,8,167,6],[159,8,168,6],[159,14,168,12,"AsyncStorage"],[159,26,168,24],[159,27,168,24,"default"],[159,34,168,24],[159,35,168,25,"setItem"],[159,42,168,32],[159,43,168,33],[159,55,168,45],[159,57,168,47,"data"],[159,61,168,51],[159,62,168,52,"access_token"],[159,74,168,64],[159,75,168,65],[160,8,169,6],[160,14,169,12,"AsyncStorage"],[160,26,169,24],[160,27,169,24,"default"],[160,34,169,24],[160,35,169,25,"setItem"],[160,42,169,32],[160,43,169,33],[160,54,169,44],[160,56,169,46,"JSON"],[160,60,169,50],[160,61,169,51,"stringify"],[160,70,169,60],[160,71,169,61,"data"],[160,75,169,65],[160,76,169,66,"user"],[160,80,169,70],[160,81,169,71],[160,82,169,72],[161,8,171,6,"setToken"],[161,16,171,14],[161,17,171,15,"data"],[161,21,171,19],[161,22,171,20,"access_token"],[161,34,171,32],[161,35,171,33],[162,8,172,6,"setUser"],[162,15,172,13],[162,16,172,14,"data"],[162,20,172,18],[162,21,172,19,"user"],[162,25,172,23],[162,26,172,24],[163,8,174,6,"console"],[163,15,174,13],[163,16,174,14,"log"],[163,19,174,17],[163,20,174,18],[163,51,174,49],[163,53,174,51,"data"],[163,57,174,55],[163,58,174,56,"user"],[163,62,174,60],[163,63,174,61,"id"],[163,65,174,63],[163,67,174,65],[163,81,174,79],[163,82,174,80],[164,8,176,6],[164,15,176,13],[165,10,176,15,"success"],[165,17,176,22],[165,19,176,24],[166,8,176,29],[166,9,176,30],[167,6,177,4],[167,7,177,5],[167,8,177,6],[167,15,177,13,"error"],[167,20,177,18],[167,22,177,20],[168,8,178,6,"console"],[168,15,178,13],[168,16,178,14,"error"],[168,21,178,19],[168,22,178,20],[168,36,178,34],[168,38,178,36,"error"],[168,43,178,41],[168,44,178,42],[169,8,179,6],[169,15,179,13],[170,10,179,15,"success"],[170,17,179,22],[170,19,179,24],[170,24,179,29],[171,10,179,31,"error"],[171,15,179,36],[171,17,179,38],[172,8,179,63],[172,9,179,64],[173,6,180,4],[173,7,180,5],[173,16,180,14],[174,8,181,6,"setIsLoading"],[174,20,181,18],[174,21,181,19],[174,26,181,24],[174,27,181,25],[175,6,182,4],[176,4,183,2],[176,5,183,3],[177,4,185,2],[177,10,185,8,"register"],[177,18,185,16],[177,21,185,19],[177,27,185,19,"register"],[177,28,185,26,"email"],[177,33,185,39],[177,35,185,41,"password"],[177,43,185,57],[177,45,185,59,"name"],[177,49,185,71],[177,54,185,123],[178,6,186,4],[178,10,186,8],[179,8,187,6,"setIsLoading"],[179,20,187,18],[179,21,187,19],[179,25,187,23],[179,26,187,24],[180,8,189,6],[180,14,189,12,"response"],[180,22,189,20],[180,25,189,23],[180,31,189,29,"fetch"],[180,36,189,34],[180,37,189,35],[180,40,189,38,"API_BASE_URL"],[180,52,189,50],[180,72,189,70],[180,74,189,72],[181,10,190,8,"method"],[181,16,190,14],[181,18,190,16],[181,24,190,22],[182,10,191,8,"credentials"],[182,21,191,19],[182,23,191,21],[182,32,191,30],[183,10,192,8,"headers"],[183,17,192,15],[183,19,192,17],[184,12,193,10],[184,26,193,24],[184,28,193,26],[185,10,194,8],[185,11,194,9],[186,10,195,8,"body"],[186,14,195,12],[186,16,195,14,"JSON"],[186,20,195,18],[186,21,195,19,"stringify"],[186,30,195,28],[186,31,195,29],[187,12,196,10,"email"],[187,17,196,15],[188,12,197,10,"password"],[188,20,197,18],[189,12,198,10,"name"],[190,10,199,8],[190,11,199,9],[191,8,200,6],[191,9,200,7],[191,10,200,8],[192,8,202,6],[192,14,202,12,"data"],[192,18,202,16],[192,21,202,19],[192,27,202,25,"response"],[192,35,202,33],[192,36,202,34,"json"],[192,40,202,38],[192,41,202,39],[192,42,202,40],[193,8,204,6],[193,12,204,10],[193,13,204,11,"response"],[193,21,204,19],[193,22,204,20,"ok"],[193,24,204,22],[193,26,204,24],[194,10,205,8],[194,17,205,15],[195,12,205,17,"success"],[195,19,205,24],[195,21,205,26],[195,26,205,31],[196,12,205,33,"error"],[196,17,205,38],[196,19,205,40,"data"],[196,23,205,44],[196,24,205,45,"detail"],[196,30,205,51],[196,34,205,55],[197,10,205,77],[197,11,205,78],[198,8,206,6],[200,8,208,6],[201,8,209,6],[201,14,209,12,"AsyncStorage"],[201,26,209,24],[201,27,209,24,"default"],[201,34,209,24],[201,35,209,25,"setItem"],[201,42,209,32],[201,43,209,33],[201,55,209,45],[201,57,209,47,"data"],[201,61,209,51],[201,62,209,52,"access_token"],[201,74,209,64],[201,75,209,65],[202,8,210,6],[202,14,210,12,"AsyncStorage"],[202,26,210,24],[202,27,210,24,"default"],[202,34,210,24],[202,35,210,25,"setItem"],[202,42,210,32],[202,43,210,33],[202,54,210,44],[202,56,210,46,"JSON"],[202,60,210,50],[202,61,210,51,"stringify"],[202,70,210,60],[202,71,210,61,"data"],[202,75,210,65],[202,76,210,66,"user"],[202,80,210,70],[202,81,210,71],[202,82,210,72],[203,8,212,6,"setToken"],[203,16,212,14],[203,17,212,15,"data"],[203,21,212,19],[203,22,212,20,"access_token"],[203,34,212,32],[203,35,212,33],[204,8,213,6,"setUser"],[204,15,213,13],[204,16,213,14,"data"],[204,20,213,18],[204,21,213,19,"user"],[204,25,213,23],[204,26,213,24],[205,8,215,6,"console"],[205,15,215,13],[205,16,215,14,"log"],[205,19,215,17],[205,20,215,18],[205,58,215,56],[205,60,215,58,"data"],[205,64,215,62],[205,65,215,63,"user"],[205,69,215,67],[205,70,215,68,"id"],[205,72,215,70],[205,74,215,72],[205,88,215,86],[205,89,215,87],[206,8,217,6],[206,15,217,13],[207,10,217,15,"success"],[207,17,217,22],[207,19,217,24],[208,8,217,29],[208,9,217,30],[209,6,218,4],[209,7,218,5],[209,8,218,6],[209,15,218,13,"error"],[209,20,218,18],[209,22,218,20],[210,8,219,6,"console"],[210,15,219,13],[210,16,219,14,"error"],[210,21,219,19],[210,22,219,20],[210,43,219,41],[210,45,219,43,"error"],[210,50,219,48],[210,51,219,49],[211,8,220,6],[211,15,220,13],[212,10,220,15,"success"],[212,17,220,22],[212,19,220,24],[212,24,220,29],[213,10,220,31,"error"],[213,15,220,36],[213,17,220,38],[214,8,220,63],[214,9,220,64],[215,6,221,4],[215,7,221,5],[215,16,221,14],[216,8,222,6,"setIsLoading"],[216,20,222,18],[216,21,222,19],[216,26,222,24],[216,27,222,25],[217,6,223,4],[218,4,224,2],[218,5,224,3],[219,4,226,2],[219,10,226,8,"loginWithGoogle"],[219,25,226,23],[219,28,226,26],[219,34,226,26,"loginWithGoogle"],[219,35,226,26],[219,40,226,85],[220,6,227,4],[220,10,227,8],[221,8,228,6],[222,8,229,6],[223,8,230,6],[223,14,230,12,"redirectUrl"],[223,25,230,23],[223,28,230,26,"encodeURIComponent"],[223,46,230,44],[223,47,230,45,"window"],[223,53,230,51],[223,54,230,52,"location"],[223,62,230,60],[223,63,230,61,"href"],[223,67,230,65],[223,68,230,66],[224,8,231,6],[224,14,231,12,"googleAuthUrl"],[224,27,231,25],[224,30,231,28],[224,74,231,72,"redirectUrl"],[224,85,231,83],[224,87,231,85],[226,8,233,6],[227,8,234,6,"window"],[227,14,234,12],[227,15,234,13,"open"],[227,19,234,17],[227,20,234,18,"googleAuthUrl"],[227,33,234,31],[227,35,234,33],[227,42,234,40],[227,43,234,41],[228,8,236,6],[228,15,236,13],[229,10,236,15,"success"],[229,17,236,22],[229,19,236,24],[230,8,236,29],[230,9,236,30],[231,6,237,4],[231,7,237,5],[231,8,237,6],[231,15,237,13,"error"],[231,20,237,18],[231,22,237,20],[232,8,238,6,"console"],[232,15,238,13],[232,16,238,14,"error"],[232,21,238,19],[232,22,238,20],[232,43,238,41],[232,45,238,43,"error"],[232,50,238,48],[232,51,238,49],[233,8,239,6],[233,15,239,13],[234,10,239,15,"success"],[234,17,239,22],[234,19,239,24],[234,24,239,29],[235,10,239,31,"error"],[235,15,239,36],[235,17,239,38],[236,8,239,60],[236,9,239,61],[237,6,240,4],[238,4,241,2],[238,5,241,3],[239,4,243,2],[239,10,243,8,"logout"],[239,16,243,14],[239,19,243,17],[239,25,243,17,"logout"],[239,26,243,17],[239,31,243,44],[240,6,244,4],[240,10,244,8],[241,8,245,6],[242,8,246,6],[242,12,246,10,"token"],[242,17,246,15],[242,19,246,17],[243,10,247,8],[243,16,247,14,"fetch"],[243,21,247,19],[243,22,247,20],[243,25,247,23,"API_BASE_URL"],[243,37,247,35],[243,55,247,53],[243,57,247,55],[244,12,248,10,"method"],[244,18,248,16],[244,20,248,18],[244,26,248,24],[245,12,249,10,"credentials"],[245,23,249,21],[245,25,249,23],[245,34,249,32],[246,12,250,10,"headers"],[246,19,250,17],[246,21,250,19],[247,14,251,12],[247,29,251,27],[247,31,251,29],[247,41,251,39,"token"],[247,46,251,44],[247,48,251,46],[248,14,252,12],[248,28,252,26],[248,30,252,28],[249,12,253,10],[250,10,254,8],[250,11,254,9],[250,12,254,10],[251,8,255,6],[252,6,256,4],[252,7,256,5],[252,8,256,6],[252,15,256,13,"error"],[252,20,256,18],[252,22,256,20],[253,8,257,6,"console"],[253,15,257,13],[253,16,257,14,"error"],[253,21,257,19],[253,22,257,20],[253,37,257,35],[253,39,257,37,"error"],[253,44,257,42],[253,45,257,43],[254,6,258,4],[254,7,258,5],[254,16,258,14],[255,8,259,6],[256,8,260,6],[256,14,260,12,"AsyncStorage"],[256,26,260,24],[256,27,260,24,"default"],[256,34,260,24],[256,35,260,25,"multiRemove"],[256,46,260,36],[256,47,260,37],[256,48,260,38],[256,60,260,50],[256,62,260,52],[256,73,260,63],[256,74,260,64],[256,75,260,65],[257,8,261,6,"setToken"],[257,16,261,14],[257,17,261,15],[257,21,261,19],[257,22,261,20],[258,8,262,6,"setUser"],[258,15,262,13],[258,16,262,14],[258,20,262,18],[258,21,262,19],[259,6,263,4],[260,4,264,2],[260,5,264,3],[261,4,266,2],[261,24,267,4],[261,28,267,4,"_reactJsxDevRuntime"],[261,47,267,4],[261,48,267,4,"jsxDEV"],[261,54,267,4],[261,56,267,5,"AuthContext"],[261,67,267,16],[261,68,267,17,"Provider"],[261,76,267,25],[262,6,268,6,"value"],[262,11,268,11],[262,13,268,13],[263,8,269,8,"user"],[263,12,269,12],[264,8,270,8,"token"],[264,13,270,13],[265,8,271,8,"isLoading"],[265,17,271,17],[266,8,272,8,"isAuthenticated"],[266,23,272,23],[267,8,273,8,"login"],[267,13,273,13],[268,8,274,8,"register"],[268,16,274,16],[269,8,275,8,"loginWithGoogle"],[269,23,275,23],[270,8,276,8,"logout"],[270,14,276,14],[271,8,277,8,"checkSession"],[272,6,278,6],[272,7,278,8],[273,6,278,8,"children"],[273,14,278,8],[273,16,280,7,"children"],[274,4,280,15],[275,6,280,15,"fileName"],[275,14,280,15],[275,16,280,15,"_jsxFileName"],[275,28,280,15],[276,6,280,15,"lineNumber"],[276,16,280,15],[277,6,280,15,"columnNumber"],[277,18,280,15],[278,4,280,15],[278,11,281,26],[278,12,281,27],[279,2,283,0],[279,3,283,1],[280,2,285,7],[280,8,285,13,"useAuth"],[280,15,285,20],[280,18,285,23,"useAuth"],[280,19,285,23],[280,24,285,46],[281,4,286,2],[281,10,286,8,"context"],[281,17,286,15],[281,20,286,18],[281,24,286,18,"useContext"],[281,30,286,28],[281,31,286,28,"useContext"],[281,41,286,28],[281,43,286,29,"AuthContext"],[281,54,286,40],[281,55,286,41],[282,4,287,2],[282,8,287,6,"context"],[282,15,287,13],[282,20,287,18,"undefined"],[282,29,287,27],[282,31,287,29],[283,6,288,4],[283,12,288,10],[283,16,288,14,"Error"],[283,21,288,19],[283,22,288,20],[283,67,288,65],[283,68,288,66],[284,4,289,2],[285,4,290,2],[285,11,290,9,"context"],[285,18,290,16],[286,2,291,0],[286,3,291,1],[287,0,291,2],[287,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;0BCkD,6CD;GFQ;uBIE;GJwC;gBKE;GLuC;mBME;GNuC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}