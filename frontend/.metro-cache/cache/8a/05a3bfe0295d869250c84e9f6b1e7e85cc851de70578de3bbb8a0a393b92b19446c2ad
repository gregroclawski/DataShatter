{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token && {\n              'Authorization': `Bearer ${token}`\n            })\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n        }\n        console.log('Session check result:', isValid);\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error (keeping current session):', error);\n        // Don't log out on network errors - keep current session\n        return !!token && !!user;\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":281,"map":[[13,2,30,0,"Object"],[13,8,30,0],[13,9,30,0,"defineProperty"],[13,23,30,0],[13,24,30,0,"exports"],[13,31,30,0],[14,4,30,0,"enumerable"],[14,14,30,0],[15,4,30,0,"get"],[15,7,30,0],[15,18,30,0,"get"],[15,19,30,0],[16,6,30,0],[16,13,30,0,"AuthProvider"],[16,25,30,0],[17,4,30,0],[18,2,30,0],[19,2,275,0,"Object"],[19,8,275,0],[19,9,275,0,"defineProperty"],[19,23,275,0],[19,24,275,0,"exports"],[19,31,275,0],[20,4,275,0,"enumerable"],[20,14,275,0],[21,4,275,0,"get"],[21,7,275,0],[21,18,275,0,"get"],[21,19,275,0],[22,6,275,0],[22,13,275,0,"useAuth"],[22,20,275,0],[23,4,275,0],[24,2,275,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_expoConstants"],[28,20,3,0],[28,23,3,0,"require"],[28,30,3,0],[28,31,3,0,"_dependencyMap"],[28,45,3,0],[29,2,3,0],[29,6,3,0,"Constants"],[29,15,3,0],[29,18,3,0,"_interopDefault"],[29,33,3,0],[29,34,3,0,"_expoConstants"],[29,48,3,0],[30,2,3,39],[30,6,3,39,"_reactJsxDevRuntime"],[30,25,3,39],[30,28,3,39,"require"],[30,35,3,39],[30,36,3,39,"_dependencyMap"],[30,50,3,39],[31,2,26,0],[31,8,26,6,"AuthContext"],[31,19,26,17],[31,35,26,20],[31,39,26,20,"createContext"],[31,45,26,33],[31,46,26,33,"createContext"],[31,59,26,33],[31,61,26,63,"undefined"],[31,70,26,72],[31,71,26,73],[32,2,28,0],[32,8,28,6,"API_BASE_URL"],[32,20,28,18],[32,23,28,21,"Constants"],[32,32,28,30],[32,33,28,30,"default"],[32,40,28,30],[32,41,28,31,"expoConfig"],[32,51,28,41],[32,53,28,43,"extra"],[32,58,28,48],[32,60,28,50,"backendUrl"],[32,70,28,60],[32,74,28,64,"process"],[32,81,28,71],[32,82,28,72,"env"],[32,85,28,75],[32,86,28,76,"EXPO_PUBLIC_BACKEND_URL"],[32,109,28,99],[32,113,28,103],[32,136,28,126],[33,2,30,7],[33,8,30,13,"AuthProvider"],[33,20,30,25],[33,23,30,28,"AuthProvider"],[33,24,30,29],[34,4,30,31,"children"],[35,2,30,65],[35,3,30,66],[35,8,30,71],[36,4,31,2],[36,10,31,8],[36,11,31,9,"user"],[36,15,31,13],[36,17,31,15,"setUser"],[36,24,31,22],[36,25,31,23],[36,28,31,26],[36,32,31,26,"useState"],[36,38,31,34],[36,39,31,34,"useState"],[36,47,31,34],[36,49,31,48],[36,53,31,52],[36,54,31,53],[37,4,32,2],[37,10,32,8],[37,11,32,9,"token"],[37,16,32,14],[37,18,32,16,"setToken"],[37,26,32,24],[37,27,32,25],[37,30,32,28],[37,34,32,28,"useState"],[37,40,32,36],[37,41,32,36,"useState"],[37,49,32,36],[37,51,32,52],[37,55,32,56],[37,56,32,57],[38,4,33,2],[38,10,33,8],[38,11,33,9,"isLoading"],[38,20,33,18],[38,22,33,20,"setIsLoading"],[38,34,33,32],[38,35,33,33],[38,38,33,36],[38,42,33,36,"useState"],[38,48,33,44],[38,49,33,44,"useState"],[38,57,33,44],[38,59,33,45],[38,63,33,49],[38,64,33,50],[39,4,35,2],[39,10,35,8,"isAuthenticated"],[39,25,35,23],[39,28,35,26],[39,29,35,27],[39,30,35,28,"user"],[39,34,35,32],[39,38,35,36],[39,39,35,37],[39,40,35,38,"token"],[39,45,35,43],[41,4,37,2],[42,4,38,2],[42,8,38,2,"useEffect"],[42,14,38,11],[42,15,38,11,"useEffect"],[42,24,38,11],[42,26,38,12],[42,32,38,18],[43,6,39,4,"checkExistingSession"],[43,26,39,24],[43,27,39,25],[43,28,39,26],[44,4,40,2],[44,5,40,3],[44,7,40,5],[44,9,40,7],[44,10,40,8],[45,4,42,2],[45,10,42,8,"checkExistingSession"],[45,30,42,28],[45,33,42,31],[45,39,42,31,"checkExistingSession"],[45,40,42,31],[45,45,42,43],[46,6,43,4],[46,10,43,8],[47,8,44,6,"setIsLoading"],[47,20,44,18],[47,21,44,19],[47,25,44,23],[47,26,44,24],[49,8,46,6],[50,8,47,6],[50,14,47,12,"storedToken"],[50,25,47,23],[50,28,47,26],[50,34,47,32,"AsyncStorage"],[50,46,47,44],[50,47,47,44,"default"],[50,54,47,44],[50,55,47,45,"getItem"],[50,62,47,52],[50,63,47,53],[50,75,47,65],[50,76,47,66],[51,8,48,6],[51,14,48,12,"storedUser"],[51,24,48,22],[51,27,48,25],[51,33,48,31,"AsyncStorage"],[51,45,48,43],[51,46,48,43,"default"],[51,53,48,43],[51,54,48,44,"getItem"],[51,61,48,51],[51,62,48,52],[51,73,48,63],[51,74,48,64],[52,8,50,6,"console"],[52,15,50,13],[52,16,50,14,"log"],[52,19,50,17],[52,20,50,18],[52,51,50,49],[52,53,50,51],[52,54,50,52],[52,55,50,53,"storedToken"],[52,66,50,64],[52,68,50,66],[52,69,50,67],[52,70,50,68,"storedUser"],[52,80,50,78],[52,81,50,79],[53,8,52,6],[53,12,52,10,"storedToken"],[53,23,52,21],[53,27,52,25,"storedUser"],[53,37,52,35],[53,39,52,37],[54,10,53,8],[54,14,53,12],[55,12,54,10],[55,18,54,16,"userData"],[55,26,54,24],[55,29,54,27,"JSON"],[55,33,54,31],[55,34,54,32,"parse"],[55,39,54,37],[55,40,54,38,"storedUser"],[55,50,54,48],[55,51,54,49],[56,12,55,10,"setToken"],[56,20,55,18],[56,21,55,19,"storedToken"],[56,32,55,30],[56,33,55,31],[57,12,56,10,"setUser"],[57,19,56,17],[57,20,56,18,"userData"],[57,28,56,26],[57,29,56,27],[58,12,57,10,"console"],[58,19,57,17],[58,20,57,18,"log"],[58,23,57,21],[58,24,57,22],[58,58,57,56],[58,60,57,58,"userData"],[58,68,57,66],[58,69,57,67,"email"],[58,74,57,72],[58,75,57,73],[60,12,59,10],[61,12,60,10],[61,16,60,14,"sessionValid"],[61,28,60,26],[61,31,60,29],[61,36,60,34],[62,12,61,10],[62,16,61,14,"attempts"],[62,24,61,22],[62,27,61,25],[62,28,61,26],[63,12,62,10],[63,18,62,16,"maxAttempts"],[63,29,62,27],[63,32,62,30],[63,33,62,31],[64,12,64,10],[64,19,64,17],[64,20,64,18,"sessionValid"],[64,32,64,30],[64,36,64,34,"attempts"],[64,44,64,42],[64,47,64,45,"maxAttempts"],[64,58,64,56],[64,60,64,58],[65,14,65,12,"attempts"],[65,22,65,20],[65,24,65,22],[66,14,66,12,"console"],[66,21,66,19],[66,22,66,20,"log"],[66,25,66,23],[66,26,66,24],[66,59,66,57,"attempts"],[66,67,66,65],[66,71,66,69,"maxAttempts"],[66,82,66,80],[66,84,66,82],[66,85,66,83],[67,14,68,12],[67,18,68,16],[68,16,69,14,"sessionValid"],[68,28,69,26],[68,31,69,29],[68,37,69,35,"checkSession"],[68,49,69,47],[68,50,69,48],[68,51,69,49],[69,16,70,14],[69,20,70,18],[69,21,70,19,"sessionValid"],[69,33,70,31],[69,35,70,33],[70,18,71,16,"console"],[70,25,71,23],[70,26,71,24,"log"],[70,29,71,27],[70,30,71,28],[70,68,71,66],[70,70,71,68,"attempts"],[70,78,71,76],[70,79,71,77],[71,18,72,16],[71,22,72,20,"attempts"],[71,30,72,28],[71,33,72,31,"maxAttempts"],[71,44,72,42],[71,46,72,44],[72,20,73,18],[72,26,73,24],[72,30,73,28,"Promise"],[72,37,73,35],[72,38,73,36,"resolve"],[72,45,73,43],[72,49,73,47,"setTimeout"],[72,59,73,57],[72,60,73,58,"resolve"],[72,67,73,65],[72,69,73,67],[72,73,73,71],[72,74,73,72],[72,75,73,73],[72,76,73,74],[72,77,73,75],[73,18,74,16],[74,16,75,14],[74,17,75,15],[74,23,75,21],[75,18,76,16,"console"],[75,25,76,23],[75,26,76,24,"log"],[75,29,76,27],[75,30,76,28],[75,64,76,62],[75,65,76,63],[76,16,77,14],[77,14,78,12],[77,15,78,13],[77,16,78,14],[77,23,78,21,"error"],[77,28,78,26],[77,30,78,28],[78,16,79,14,"console"],[78,23,79,21],[78,24,79,22,"log"],[78,27,79,25],[78,28,79,26],[78,57,79,55],[78,59,79,57,"error"],[78,64,79,62],[78,65,79,63],[79,16,80,14],[79,20,80,18,"attempts"],[79,28,80,26],[79,31,80,29,"maxAttempts"],[79,42,80,40],[79,44,80,42],[80,18,81,16],[80,24,81,22],[80,28,81,26,"Promise"],[80,35,81,33],[80,36,81,34,"resolve"],[80,43,81,41],[80,47,81,45,"setTimeout"],[80,57,81,55],[80,58,81,56,"resolve"],[80,65,81,63],[80,67,81,65],[80,71,81,69],[80,72,81,70],[80,73,81,71],[80,74,81,72],[80,75,81,73],[81,16,82,14],[82,14,83,12],[83,12,84,10],[84,12,86,10],[84,16,86,14],[84,17,86,15,"sessionValid"],[84,29,86,27],[84,31,86,29],[85,14,87,12,"console"],[85,21,87,19],[85,22,87,20,"log"],[85,25,87,23],[85,26,87,24],[85,87,87,85],[85,88,87,86],[86,14,88,12],[86,20,88,18,"logout"],[86,26,88,24],[86,27,88,25],[86,28,88,26],[87,12,89,10],[88,10,90,8],[88,11,90,9],[88,12,90,10],[88,19,90,17,"parseError"],[88,29,90,27],[88,31,90,29],[89,12,91,10,"console"],[89,19,91,17],[89,20,91,18,"error"],[89,25,91,23],[89,26,91,24],[89,59,91,57],[89,61,91,59,"parseError"],[89,71,91,69],[89,72,91,70],[90,12,92,10],[90,18,92,16,"logout"],[90,24,92,22],[90,25,92,23],[90,26,92,24],[91,10,93,8],[92,8,94,6],[92,9,94,7],[92,15,94,13],[93,10,95,8,"console"],[93,17,95,15],[93,18,95,16,"log"],[93,21,95,19],[93,22,95,20],[93,50,95,48],[93,51,95,49],[94,8,96,6],[95,6,97,4],[95,7,97,5],[95,8,97,6],[95,15,97,13,"error"],[95,20,97,18],[95,22,97,20],[96,8,98,6,"console"],[96,15,98,13],[96,16,98,14,"error"],[96,21,98,19],[96,22,98,20],[96,56,98,54],[96,58,98,56,"error"],[96,63,98,61],[96,64,98,62],[97,8,99,6],[97,14,99,12,"logout"],[97,20,99,18],[97,21,99,19],[97,22,99,20],[98,6,100,4],[98,7,100,5],[98,16,100,14],[99,8,101,6,"setIsLoading"],[99,20,101,18],[99,21,101,19],[99,26,101,24],[99,27,101,25],[100,6,102,4],[101,4,103,2],[101,5,103,3],[102,4,105,2],[102,10,105,8,"checkSession"],[102,22,105,20],[102,25,105,23],[102,31,105,23,"checkSession"],[102,32,105,23],[102,37,105,53],[103,6,106,4],[103,10,106,8],[104,8,107,6],[104,14,107,12,"response"],[104,22,107,20],[104,25,107,23],[104,31,107,29,"fetch"],[104,36,107,34],[104,37,107,35],[104,40,107,38,"API_BASE_URL"],[104,52,107,50],[104,77,107,75],[104,79,107,77],[105,10,108,8,"method"],[105,16,108,14],[105,18,108,16],[105,23,108,21],[106,10,109,8,"credentials"],[106,21,109,19],[106,23,109,21],[106,32,109,30],[107,10,110,8,"headers"],[107,17,110,15],[107,19,110,17],[108,12,111,10],[108,26,111,24],[108,28,111,26],[108,46,111,44],[109,12,112,10],[109,16,112,14,"token"],[109,21,112,19],[109,25,112,23],[110,14,112,25],[110,29,112,40],[110,31,112,42],[110,41,112,52,"token"],[110,46,112,57],[111,12,112,60],[111,13,112,61],[112,10,113,8],[113,8,114,6],[113,9,114,7],[113,10,114,8],[114,8,116,6],[114,12,116,10],[114,13,116,11,"response"],[114,21,116,19],[114,22,116,20,"ok"],[114,24,116,22],[114,26,116,24],[115,10,117,8,"console"],[115,17,117,15],[115,18,117,16,"log"],[115,21,117,19],[115,22,117,20],[115,45,117,43],[115,47,117,45,"response"],[115,55,117,53],[115,56,117,54,"status"],[115,62,117,60],[115,63,117,61],[116,10,118,8],[116,17,118,15],[116,22,118,20],[117,8,119,6],[118,8,121,6],[118,14,121,12,"data"],[118,18,121,16],[118,21,121,19],[118,27,121,25,"response"],[118,35,121,33],[118,36,121,34,"json"],[118,40,121,38],[118,41,121,39],[118,42,121,40],[119,8,122,6],[119,14,122,12,"isValid"],[119,21,122,19],[119,24,122,22,"data"],[119,28,122,26],[119,29,122,27,"authenticated"],[119,42,122,40],[119,47,122,45],[119,51,122,49],[120,8,124,6],[120,12,124,10,"isValid"],[120,19,124,17],[120,23,124,21,"data"],[120,27,124,25],[120,28,124,26,"user"],[120,32,124,30],[120,34,124,32],[121,10,125,8],[122,10,126,8,"setUser"],[122,17,126,15],[122,18,126,16,"data"],[122,22,126,20],[122,23,126,21,"user"],[122,27,126,25],[122,28,126,26],[123,8,127,6],[124,8,129,6,"console"],[124,15,129,13],[124,16,129,14,"log"],[124,19,129,17],[124,20,129,18],[124,43,129,41],[124,45,129,43,"isValid"],[124,52,129,50],[124,53,129,51],[125,8,130,6],[125,15,130,13,"isValid"],[125,22,130,20],[126,6,131,4],[126,7,131,5],[126,8,131,6],[126,15,131,13,"error"],[126,20,131,18],[126,22,131,20],[127,8,132,6,"console"],[127,15,132,13],[127,16,132,14,"error"],[127,21,132,19],[127,22,132,20],[127,78,132,76],[127,80,132,78,"error"],[127,85,132,83],[127,86,132,84],[128,8,133,6],[129,8,134,6],[129,15,134,13],[129,16,134,14],[129,17,134,15,"token"],[129,22,134,20],[129,26,134,24],[129,27,134,25],[129,28,134,26,"user"],[129,32,134,30],[130,6,135,4],[131,4,136,2],[131,5,136,3],[132,4,138,2],[132,10,138,8,"login"],[132,15,138,13],[132,18,138,16],[132,24,138,16,"login"],[132,25,138,23,"email"],[132,30,138,36],[132,32,138,38,"password"],[132,40,138,54],[132,45,138,106],[133,6,139,4],[133,10,139,8],[134,8,140,6,"setIsLoading"],[134,20,140,18],[134,21,140,19],[134,25,140,23],[134,26,140,24],[135,8,142,6],[135,14,142,12,"formData"],[135,22,142,20],[135,25,142,23],[135,29,142,27,"URLSearchParams"],[135,44,142,42],[135,45,142,43],[135,46,142,44],[136,8,143,6,"formData"],[136,16,143,14],[136,17,143,15,"append"],[136,23,143,21],[136,24,143,22],[136,34,143,32],[136,36,143,34,"email"],[136,41,143,39],[136,42,143,40],[136,43,143,41],[136,44,143,42],[137,8,144,6,"formData"],[137,16,144,14],[137,17,144,15,"append"],[137,23,144,21],[137,24,144,22],[137,34,144,32],[137,36,144,34,"password"],[137,44,144,42],[137,45,144,43],[138,8,146,6],[138,14,146,12,"response"],[138,22,146,20],[138,25,146,23],[138,31,146,29,"fetch"],[138,36,146,34],[138,37,146,35],[138,40,146,38,"API_BASE_URL"],[138,52,146,50],[138,69,146,67],[138,71,146,69],[139,10,147,8,"method"],[139,16,147,14],[139,18,147,16],[139,24,147,22],[140,10,148,8,"credentials"],[140,21,148,19],[140,23,148,21],[140,32,148,30],[141,10,149,8,"headers"],[141,17,149,15],[141,19,149,17],[142,12,150,10],[142,26,150,24],[142,28,150,26],[143,10,151,8],[143,11,151,9],[144,10,152,8,"body"],[144,14,152,12],[144,16,152,14,"formData"],[144,24,152,22],[144,25,152,23,"toString"],[144,33,152,31],[144,34,152,32],[145,8,153,6],[145,9,153,7],[145,10,153,8],[146,8,155,6],[146,14,155,12,"data"],[146,18,155,16],[146,21,155,19],[146,27,155,25,"response"],[146,35,155,33],[146,36,155,34,"json"],[146,40,155,38],[146,41,155,39],[146,42,155,40],[147,8,157,6],[147,12,157,10],[147,13,157,11,"response"],[147,21,157,19],[147,22,157,20,"ok"],[147,24,157,22],[147,26,157,24],[148,10,158,8],[148,17,158,15],[149,12,158,17,"success"],[149,19,158,24],[149,21,158,26],[149,26,158,31],[150,12,158,33,"error"],[150,17,158,38],[150,19,158,40,"data"],[150,23,158,44],[150,24,158,45,"detail"],[150,30,158,51],[150,34,158,55],[151,10,158,70],[151,11,158,71],[152,8,159,6],[154,8,161,6],[155,8,162,6],[155,14,162,12,"AsyncStorage"],[155,26,162,24],[155,27,162,24,"default"],[155,34,162,24],[155,35,162,25,"setItem"],[155,42,162,32],[155,43,162,33],[155,55,162,45],[155,57,162,47,"data"],[155,61,162,51],[155,62,162,52,"access_token"],[155,74,162,64],[155,75,162,65],[156,8,163,6],[156,14,163,12,"AsyncStorage"],[156,26,163,24],[156,27,163,24,"default"],[156,34,163,24],[156,35,163,25,"setItem"],[156,42,163,32],[156,43,163,33],[156,54,163,44],[156,56,163,46,"JSON"],[156,60,163,50],[156,61,163,51,"stringify"],[156,70,163,60],[156,71,163,61,"data"],[156,75,163,65],[156,76,163,66,"user"],[156,80,163,70],[156,81,163,71],[156,82,163,72],[157,8,165,6,"setToken"],[157,16,165,14],[157,17,165,15,"data"],[157,21,165,19],[157,22,165,20,"access_token"],[157,34,165,32],[157,35,165,33],[158,8,166,6,"setUser"],[158,15,166,13],[158,16,166,14,"data"],[158,20,166,18],[158,21,166,19,"user"],[158,25,166,23],[158,26,166,24],[159,8,168,6],[159,15,168,13],[160,10,168,15,"success"],[160,17,168,22],[160,19,168,24],[161,8,168,29],[161,9,168,30],[162,6,169,4],[162,7,169,5],[162,8,169,6],[162,15,169,13,"error"],[162,20,169,18],[162,22,169,20],[163,8,170,6,"console"],[163,15,170,13],[163,16,170,14,"error"],[163,21,170,19],[163,22,170,20],[163,36,170,34],[163,38,170,36,"error"],[163,43,170,41],[163,44,170,42],[164,8,171,6],[164,15,171,13],[165,10,171,15,"success"],[165,17,171,22],[165,19,171,24],[165,24,171,29],[166,10,171,31,"error"],[166,15,171,36],[166,17,171,38],[167,8,171,63],[167,9,171,64],[168,6,172,4],[168,7,172,5],[168,16,172,14],[169,8,173,6,"setIsLoading"],[169,20,173,18],[169,21,173,19],[169,26,173,24],[169,27,173,25],[170,6,174,4],[171,4,175,2],[171,5,175,3],[172,4,177,2],[172,10,177,8,"register"],[172,18,177,16],[172,21,177,19],[172,27,177,19,"register"],[172,28,177,26,"email"],[172,33,177,39],[172,35,177,41,"password"],[172,43,177,57],[172,45,177,59,"name"],[172,49,177,71],[172,54,177,123],[173,6,178,4],[173,10,178,8],[174,8,179,6,"setIsLoading"],[174,20,179,18],[174,21,179,19],[174,25,179,23],[174,26,179,24],[175,8,181,6],[175,14,181,12,"response"],[175,22,181,20],[175,25,181,23],[175,31,181,29,"fetch"],[175,36,181,34],[175,37,181,35],[175,40,181,38,"API_BASE_URL"],[175,52,181,50],[175,72,181,70],[175,74,181,72],[176,10,182,8,"method"],[176,16,182,14],[176,18,182,16],[176,24,182,22],[177,10,183,8,"credentials"],[177,21,183,19],[177,23,183,21],[177,32,183,30],[178,10,184,8,"headers"],[178,17,184,15],[178,19,184,17],[179,12,185,10],[179,26,185,24],[179,28,185,26],[180,10,186,8],[180,11,186,9],[181,10,187,8,"body"],[181,14,187,12],[181,16,187,14,"JSON"],[181,20,187,18],[181,21,187,19,"stringify"],[181,30,187,28],[181,31,187,29],[182,12,188,10,"email"],[182,17,188,15],[183,12,189,10,"password"],[183,20,189,18],[184,12,190,10,"name"],[185,10,191,8],[185,11,191,9],[186,8,192,6],[186,9,192,7],[186,10,192,8],[187,8,194,6],[187,14,194,12,"data"],[187,18,194,16],[187,21,194,19],[187,27,194,25,"response"],[187,35,194,33],[187,36,194,34,"json"],[187,40,194,38],[187,41,194,39],[187,42,194,40],[188,8,196,6],[188,12,196,10],[188,13,196,11,"response"],[188,21,196,19],[188,22,196,20,"ok"],[188,24,196,22],[188,26,196,24],[189,10,197,8],[189,17,197,15],[190,12,197,17,"success"],[190,19,197,24],[190,21,197,26],[190,26,197,31],[191,12,197,33,"error"],[191,17,197,38],[191,19,197,40,"data"],[191,23,197,44],[191,24,197,45,"detail"],[191,30,197,51],[191,34,197,55],[192,10,197,77],[192,11,197,78],[193,8,198,6],[195,8,200,6],[196,8,201,6],[196,14,201,12,"AsyncStorage"],[196,26,201,24],[196,27,201,24,"default"],[196,34,201,24],[196,35,201,25,"setItem"],[196,42,201,32],[196,43,201,33],[196,55,201,45],[196,57,201,47,"data"],[196,61,201,51],[196,62,201,52,"access_token"],[196,74,201,64],[196,75,201,65],[197,8,202,6],[197,14,202,12,"AsyncStorage"],[197,26,202,24],[197,27,202,24,"default"],[197,34,202,24],[197,35,202,25,"setItem"],[197,42,202,32],[197,43,202,33],[197,54,202,44],[197,56,202,46,"JSON"],[197,60,202,50],[197,61,202,51,"stringify"],[197,70,202,60],[197,71,202,61,"data"],[197,75,202,65],[197,76,202,66,"user"],[197,80,202,70],[197,81,202,71],[197,82,202,72],[198,8,204,6,"setToken"],[198,16,204,14],[198,17,204,15,"data"],[198,21,204,19],[198,22,204,20,"access_token"],[198,34,204,32],[198,35,204,33],[199,8,205,6,"setUser"],[199,15,205,13],[199,16,205,14,"data"],[199,20,205,18],[199,21,205,19,"user"],[199,25,205,23],[199,26,205,24],[200,8,207,6],[200,15,207,13],[201,10,207,15,"success"],[201,17,207,22],[201,19,207,24],[202,8,207,29],[202,9,207,30],[203,6,208,4],[203,7,208,5],[203,8,208,6],[203,15,208,13,"error"],[203,20,208,18],[203,22,208,20],[204,8,209,6,"console"],[204,15,209,13],[204,16,209,14,"error"],[204,21,209,19],[204,22,209,20],[204,43,209,41],[204,45,209,43,"error"],[204,50,209,48],[204,51,209,49],[205,8,210,6],[205,15,210,13],[206,10,210,15,"success"],[206,17,210,22],[206,19,210,24],[206,24,210,29],[207,10,210,31,"error"],[207,15,210,36],[207,17,210,38],[208,8,210,63],[208,9,210,64],[209,6,211,4],[209,7,211,5],[209,16,211,14],[210,8,212,6,"setIsLoading"],[210,20,212,18],[210,21,212,19],[210,26,212,24],[210,27,212,25],[211,6,213,4],[212,4,214,2],[212,5,214,3],[213,4,216,2],[213,10,216,8,"loginWithGoogle"],[213,25,216,23],[213,28,216,26],[213,34,216,26,"loginWithGoogle"],[213,35,216,26],[213,40,216,85],[214,6,217,4],[214,10,217,8],[215,8,218,6],[216,8,219,6],[217,8,220,6],[217,14,220,12,"redirectUrl"],[217,25,220,23],[217,28,220,26,"encodeURIComponent"],[217,46,220,44],[217,47,220,45,"window"],[217,53,220,51],[217,54,220,52,"location"],[217,62,220,60],[217,63,220,61,"href"],[217,67,220,65],[217,68,220,66],[218,8,221,6],[218,14,221,12,"googleAuthUrl"],[218,27,221,25],[218,30,221,28],[218,74,221,72,"redirectUrl"],[218,85,221,83],[218,87,221,85],[220,8,223,6],[221,8,224,6,"window"],[221,14,224,12],[221,15,224,13,"open"],[221,19,224,17],[221,20,224,18,"googleAuthUrl"],[221,33,224,31],[221,35,224,33],[221,42,224,40],[221,43,224,41],[222,8,226,6],[222,15,226,13],[223,10,226,15,"success"],[223,17,226,22],[223,19,226,24],[224,8,226,29],[224,9,226,30],[225,6,227,4],[225,7,227,5],[225,8,227,6],[225,15,227,13,"error"],[225,20,227,18],[225,22,227,20],[226,8,228,6,"console"],[226,15,228,13],[226,16,228,14,"error"],[226,21,228,19],[226,22,228,20],[226,43,228,41],[226,45,228,43,"error"],[226,50,228,48],[226,51,228,49],[227,8,229,6],[227,15,229,13],[228,10,229,15,"success"],[228,17,229,22],[228,19,229,24],[228,24,229,29],[229,10,229,31,"error"],[229,15,229,36],[229,17,229,38],[230,8,229,60],[230,9,229,61],[231,6,230,4],[232,4,231,2],[232,5,231,3],[233,4,233,2],[233,10,233,8,"logout"],[233,16,233,14],[233,19,233,17],[233,25,233,17,"logout"],[233,26,233,17],[233,31,233,44],[234,6,234,4],[234,10,234,8],[235,8,235,6],[236,8,236,6],[236,12,236,10,"token"],[236,17,236,15],[236,19,236,17],[237,10,237,8],[237,16,237,14,"fetch"],[237,21,237,19],[237,22,237,20],[237,25,237,23,"API_BASE_URL"],[237,37,237,35],[237,55,237,53],[237,57,237,55],[238,12,238,10,"method"],[238,18,238,16],[238,20,238,18],[238,26,238,24],[239,12,239,10,"credentials"],[239,23,239,21],[239,25,239,23],[239,34,239,32],[240,12,240,10,"headers"],[240,19,240,17],[240,21,240,19],[241,14,241,12],[241,29,241,27],[241,31,241,29],[241,41,241,39,"token"],[241,46,241,44],[241,48,241,46],[242,14,242,12],[242,28,242,26],[242,30,242,28],[243,12,243,10],[244,10,244,8],[244,11,244,9],[244,12,244,10],[245,8,245,6],[246,6,246,4],[246,7,246,5],[246,8,246,6],[246,15,246,13,"error"],[246,20,246,18],[246,22,246,20],[247,8,247,6,"console"],[247,15,247,13],[247,16,247,14,"error"],[247,21,247,19],[247,22,247,20],[247,37,247,35],[247,39,247,37,"error"],[247,44,247,42],[247,45,247,43],[248,6,248,4],[248,7,248,5],[248,16,248,14],[249,8,249,6],[250,8,250,6],[250,14,250,12,"AsyncStorage"],[250,26,250,24],[250,27,250,24,"default"],[250,34,250,24],[250,35,250,25,"multiRemove"],[250,46,250,36],[250,47,250,37],[250,48,250,38],[250,60,250,50],[250,62,250,52],[250,73,250,63],[250,74,250,64],[250,75,250,65],[251,8,251,6,"setToken"],[251,16,251,14],[251,17,251,15],[251,21,251,19],[251,22,251,20],[252,8,252,6,"setUser"],[252,15,252,13],[252,16,252,14],[252,20,252,18],[252,21,252,19],[253,6,253,4],[254,4,254,2],[254,5,254,3],[255,4,256,2],[255,24,257,4],[255,28,257,4,"_reactJsxDevRuntime"],[255,47,257,4],[255,48,257,4,"jsxDEV"],[255,54,257,4],[255,56,257,5,"AuthContext"],[255,67,257,16],[255,68,257,17,"Provider"],[255,76,257,25],[256,6,258,6,"value"],[256,11,258,11],[256,13,258,13],[257,8,259,8,"user"],[257,12,259,12],[258,8,260,8,"token"],[258,13,260,13],[259,8,261,8,"isLoading"],[259,17,261,17],[260,8,262,8,"isAuthenticated"],[260,23,262,23],[261,8,263,8,"login"],[261,13,263,13],[262,8,264,8,"register"],[262,16,264,16],[263,8,265,8,"loginWithGoogle"],[263,23,265,23],[264,8,266,8,"logout"],[264,14,266,14],[265,8,267,8,"checkSession"],[266,6,268,6],[266,7,268,8],[267,6,268,8,"children"],[267,14,268,8],[267,16,270,7,"children"],[268,4,270,15],[269,6,270,15,"fileName"],[269,14,270,15],[269,16,270,15,"_jsxFileName"],[269,28,270,15],[270,6,270,15,"lineNumber"],[270,16,270,15],[271,6,270,15,"columnNumber"],[271,18,270,15],[272,4,270,15],[272,11,271,26],[272,12,271,27],[273,2,273,0],[273,3,273,1],[274,2,275,7],[274,8,275,13,"useAuth"],[274,15,275,20],[274,18,275,23,"useAuth"],[274,19,275,23],[274,24,275,46],[275,4,276,2],[275,10,276,8,"context"],[275,17,276,15],[275,20,276,18],[275,24,276,18,"useContext"],[275,30,276,28],[275,31,276,28,"useContext"],[275,41,276,28],[275,43,276,29,"AuthContext"],[275,54,276,40],[275,55,276,41],[276,4,277,2],[276,8,277,6,"context"],[276,15,277,13],[276,20,277,18,"undefined"],[276,29,277,27],[276,31,277,29],[277,6,278,4],[277,12,278,10],[277,16,278,14,"Error"],[277,21,278,19],[277,22,278,20],[277,67,278,65],[277,68,278,66],[278,4,279,2],[279,4,280,2],[279,11,280,9,"context"],[279,18,280,16],[280,2,281,0],[280,3,281,1],[281,0,281,2],[281,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCC+B,oCD;kCCQ,oCD;GFsB;uBIE;GJ+B;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}