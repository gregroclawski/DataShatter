{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Checking existing session:', !!storedToken, !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            setToken(storedToken);\n            setUser(userData);\n            console.log('‚úÖ Restored session from storage:', userData.email);\n\n            // Verify session is still valid with retry logic\n            let sessionValid = false;\n            let attempts = 0;\n            const maxAttempts = 3;\n            while (!sessionValid && attempts < maxAttempts) {\n              attempts++;\n              console.log(`üîÑ Session validation attempt ${attempts}/${maxAttempts}`);\n              try {\n                sessionValid = await checkSession();\n                if (!sessionValid) {\n                  console.log('‚ùå Session validation failed, attempt', attempts);\n                  if (attempts < maxAttempts) {\n                    await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                  }\n                } else {\n                  console.log('‚úÖ Session validated successfully');\n                }\n              } catch (error) {\n                console.log('‚ùå Session validation error:', error);\n                if (attempts < maxAttempts) {\n                  await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1s before retry\n                }\n              }\n            }\n            if (!sessionValid) {\n              console.log('‚ùå Session validation failed after all attempts, logging out');\n              await logout();\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            await logout();\n          }\n        } else {\n          console.log('üîç No stored session found');\n        }\n\n        // Ensure minimum 5 second loading time for user experience\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 5000; // 5 seconds\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms to show themed animation`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        await logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token && {\n              'Authorization': `Bearer ${token}`\n            })\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n        }\n        console.log('Session check result:', isValid);\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error (keeping current session):', error);\n        // Don't log out on network errors - keep current session\n        return !!token && !!user;\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":291,"map":[[13,2,30,0,"Object"],[13,8,30,0],[13,9,30,0,"defineProperty"],[13,23,30,0],[13,24,30,0,"exports"],[13,31,30,0],[14,4,30,0,"enumerable"],[14,14,30,0],[15,4,30,0,"get"],[15,7,30,0],[15,18,30,0,"get"],[15,19,30,0],[16,6,30,0],[16,13,30,0,"AuthProvider"],[16,25,30,0],[17,4,30,0],[18,2,30,0],[19,2,285,0,"Object"],[19,8,285,0],[19,9,285,0,"defineProperty"],[19,23,285,0],[19,24,285,0,"exports"],[19,31,285,0],[20,4,285,0,"enumerable"],[20,14,285,0],[21,4,285,0,"get"],[21,7,285,0],[21,18,285,0,"get"],[21,19,285,0],[22,6,285,0],[22,13,285,0,"useAuth"],[22,20,285,0],[23,4,285,0],[24,2,285,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_expoConstants"],[28,20,3,0],[28,23,3,0,"require"],[28,30,3,0],[28,31,3,0,"_dependencyMap"],[28,45,3,0],[29,2,3,0],[29,6,3,0,"Constants"],[29,15,3,0],[29,18,3,0,"_interopDefault"],[29,33,3,0],[29,34,3,0,"_expoConstants"],[29,48,3,0],[30,2,3,39],[30,6,3,39,"_reactJsxDevRuntime"],[30,25,3,39],[30,28,3,39,"require"],[30,35,3,39],[30,36,3,39,"_dependencyMap"],[30,50,3,39],[31,2,26,0],[31,8,26,6,"AuthContext"],[31,19,26,17],[31,35,26,20],[31,39,26,20,"createContext"],[31,45,26,33],[31,46,26,33,"createContext"],[31,59,26,33],[31,61,26,63,"undefined"],[31,70,26,72],[31,71,26,73],[32,2,28,0],[32,8,28,6,"API_BASE_URL"],[32,20,28,18],[32,23,28,21,"Constants"],[32,32,28,30],[32,33,28,30,"default"],[32,40,28,30],[32,41,28,31,"expoConfig"],[32,51,28,41],[32,53,28,43,"extra"],[32,58,28,48],[32,60,28,50,"backendUrl"],[32,70,28,60],[32,74,28,64,"process"],[32,81,28,71],[32,82,28,72,"env"],[32,85,28,75],[32,86,28,76,"EXPO_PUBLIC_BACKEND_URL"],[32,109,28,99],[32,113,28,103],[32,136,28,126],[33,2,30,7],[33,8,30,13,"AuthProvider"],[33,20,30,25],[33,23,30,28,"AuthProvider"],[33,24,30,29],[34,4,30,31,"children"],[35,2,30,65],[35,3,30,66],[35,8,30,71],[36,4,31,2],[36,10,31,8],[36,11,31,9,"user"],[36,15,31,13],[36,17,31,15,"setUser"],[36,24,31,22],[36,25,31,23],[36,28,31,26],[36,32,31,26,"useState"],[36,38,31,34],[36,39,31,34,"useState"],[36,47,31,34],[36,49,31,48],[36,53,31,52],[36,54,31,53],[37,4,32,2],[37,10,32,8],[37,11,32,9,"token"],[37,16,32,14],[37,18,32,16,"setToken"],[37,26,32,24],[37,27,32,25],[37,30,32,28],[37,34,32,28,"useState"],[37,40,32,36],[37,41,32,36,"useState"],[37,49,32,36],[37,51,32,52],[37,55,32,56],[37,56,32,57],[38,4,33,2],[38,10,33,8],[38,11,33,9,"isLoading"],[38,20,33,18],[38,22,33,20,"setIsLoading"],[38,34,33,32],[38,35,33,33],[38,38,33,36],[38,42,33,36,"useState"],[38,48,33,44],[38,49,33,44,"useState"],[38,57,33,44],[38,59,33,45],[38,63,33,49],[38,64,33,50],[39,4,35,2],[39,10,35,8,"isAuthenticated"],[39,25,35,23],[39,28,35,26],[39,29,35,27],[39,30,35,28,"user"],[39,34,35,32],[39,38,35,36],[39,39,35,37],[39,40,35,38,"token"],[39,45,35,43],[41,4,37,2],[42,4,38,2],[42,8,38,2,"useEffect"],[42,14,38,11],[42,15,38,11,"useEffect"],[42,24,38,11],[42,26,38,12],[42,32,38,18],[43,6,39,4,"checkExistingSession"],[43,26,39,24],[43,27,39,25],[43,28,39,26],[44,4,40,2],[44,5,40,3],[44,7,40,5],[44,9,40,7],[44,10,40,8],[45,4,42,2],[45,10,42,8,"checkExistingSession"],[45,30,42,28],[45,33,42,31],[45,39,42,31,"checkExistingSession"],[45,40,42,31],[45,45,42,43],[46,6,43,4],[46,10,43,8],[47,8,44,6,"setIsLoading"],[47,20,44,18],[47,21,44,19],[47,25,44,23],[47,26,44,24],[48,8,45,6],[48,14,45,12,"startTime"],[48,23,45,21],[48,26,45,24,"Date"],[48,30,45,28],[48,31,45,29,"now"],[48,34,45,32],[48,35,45,33],[48,36,45,34],[48,37,45,35],[48,38,45,36],[50,8,47,6],[51,8,48,6],[51,14,48,12,"storedToken"],[51,25,48,23],[51,28,48,26],[51,34,48,32,"AsyncStorage"],[51,46,48,44],[51,47,48,44,"default"],[51,54,48,44],[51,55,48,45,"getItem"],[51,62,48,52],[51,63,48,53],[51,75,48,65],[51,76,48,66],[52,8,49,6],[52,14,49,12,"storedUser"],[52,24,49,22],[52,27,49,25],[52,33,49,31,"AsyncStorage"],[52,45,49,43],[52,46,49,43,"default"],[52,53,49,43],[52,54,49,44,"getItem"],[52,61,49,51],[52,62,49,52],[52,73,49,63],[52,74,49,64],[53,8,51,6,"console"],[53,15,51,13],[53,16,51,14,"log"],[53,19,51,17],[53,20,51,18],[53,51,51,49],[53,53,51,51],[53,54,51,52],[53,55,51,53,"storedToken"],[53,66,51,64],[53,68,51,66],[53,69,51,67],[53,70,51,68,"storedUser"],[53,80,51,78],[53,81,51,79],[54,8,53,6],[54,12,53,10,"storedToken"],[54,23,53,21],[54,27,53,25,"storedUser"],[54,37,53,35],[54,39,53,37],[55,10,54,8],[55,14,54,12],[56,12,55,10],[56,18,55,16,"userData"],[56,26,55,24],[56,29,55,27,"JSON"],[56,33,55,31],[56,34,55,32,"parse"],[56,39,55,37],[56,40,55,38,"storedUser"],[56,50,55,48],[56,51,55,49],[57,12,56,10,"setToken"],[57,20,56,18],[57,21,56,19,"storedToken"],[57,32,56,30],[57,33,56,31],[58,12,57,10,"setUser"],[58,19,57,17],[58,20,57,18,"userData"],[58,28,57,26],[58,29,57,27],[59,12,58,10,"console"],[59,19,58,17],[59,20,58,18,"log"],[59,23,58,21],[59,24,58,22],[59,58,58,56],[59,60,58,58,"userData"],[59,68,58,66],[59,69,58,67,"email"],[59,74,58,72],[59,75,58,73],[61,12,60,10],[62,12,61,10],[62,16,61,14,"sessionValid"],[62,28,61,26],[62,31,61,29],[62,36,61,34],[63,12,62,10],[63,16,62,14,"attempts"],[63,24,62,22],[63,27,62,25],[63,28,62,26],[64,12,63,10],[64,18,63,16,"maxAttempts"],[64,29,63,27],[64,32,63,30],[64,33,63,31],[65,12,65,10],[65,19,65,17],[65,20,65,18,"sessionValid"],[65,32,65,30],[65,36,65,34,"attempts"],[65,44,65,42],[65,47,65,45,"maxAttempts"],[65,58,65,56],[65,60,65,58],[66,14,66,12,"attempts"],[66,22,66,20],[66,24,66,22],[67,14,67,12,"console"],[67,21,67,19],[67,22,67,20,"log"],[67,25,67,23],[67,26,67,24],[67,59,67,57,"attempts"],[67,67,67,65],[67,71,67,69,"maxAttempts"],[67,82,67,80],[67,84,67,82],[67,85,67,83],[68,14,69,12],[68,18,69,16],[69,16,70,14,"sessionValid"],[69,28,70,26],[69,31,70,29],[69,37,70,35,"checkSession"],[69,49,70,47],[69,50,70,48],[69,51,70,49],[70,16,71,14],[70,20,71,18],[70,21,71,19,"sessionValid"],[70,33,71,31],[70,35,71,33],[71,18,72,16,"console"],[71,25,72,23],[71,26,72,24,"log"],[71,29,72,27],[71,30,72,28],[71,68,72,66],[71,70,72,68,"attempts"],[71,78,72,76],[71,79,72,77],[72,18,73,16],[72,22,73,20,"attempts"],[72,30,73,28],[72,33,73,31,"maxAttempts"],[72,44,73,42],[72,46,73,44],[73,20,74,18],[73,26,74,24],[73,30,74,28,"Promise"],[73,37,74,35],[73,38,74,36,"resolve"],[73,45,74,43],[73,49,74,47,"setTimeout"],[73,59,74,57],[73,60,74,58,"resolve"],[73,67,74,65],[73,69,74,67],[73,73,74,71],[73,74,74,72],[73,75,74,73],[73,76,74,74],[73,77,74,75],[74,18,75,16],[75,16,76,14],[75,17,76,15],[75,23,76,21],[76,18,77,16,"console"],[76,25,77,23],[76,26,77,24,"log"],[76,29,77,27],[76,30,77,28],[76,64,77,62],[76,65,77,63],[77,16,78,14],[78,14,79,12],[78,15,79,13],[78,16,79,14],[78,23,79,21,"error"],[78,28,79,26],[78,30,79,28],[79,16,80,14,"console"],[79,23,80,21],[79,24,80,22,"log"],[79,27,80,25],[79,28,80,26],[79,57,80,55],[79,59,80,57,"error"],[79,64,80,62],[79,65,80,63],[80,16,81,14],[80,20,81,18,"attempts"],[80,28,81,26],[80,31,81,29,"maxAttempts"],[80,42,81,40],[80,44,81,42],[81,18,82,16],[81,24,82,22],[81,28,82,26,"Promise"],[81,35,82,33],[81,36,82,34,"resolve"],[81,43,82,41],[81,47,82,45,"setTimeout"],[81,57,82,55],[81,58,82,56,"resolve"],[81,65,82,63],[81,67,82,65],[81,71,82,69],[81,72,82,70],[81,73,82,71],[81,74,82,72],[81,75,82,73],[82,16,83,14],[83,14,84,12],[84,12,85,10],[85,12,87,10],[85,16,87,14],[85,17,87,15,"sessionValid"],[85,29,87,27],[85,31,87,29],[86,14,88,12,"console"],[86,21,88,19],[86,22,88,20,"log"],[86,25,88,23],[86,26,88,24],[86,87,88,85],[86,88,88,86],[87,14,89,12],[87,20,89,18,"logout"],[87,26,89,24],[87,27,89,25],[87,28,89,26],[88,12,90,10],[89,10,91,8],[89,11,91,9],[89,12,91,10],[89,19,91,17,"parseError"],[89,29,91,27],[89,31,91,29],[90,12,92,10,"console"],[90,19,92,17],[90,20,92,18,"error"],[90,25,92,23],[90,26,92,24],[90,59,92,57],[90,61,92,59,"parseError"],[90,71,92,69],[90,72,92,70],[91,12,93,10],[91,18,93,16,"logout"],[91,24,93,22],[91,25,93,23],[91,26,93,24],[92,10,94,8],[93,8,95,6],[93,9,95,7],[93,15,95,13],[94,10,96,8,"console"],[94,17,96,15],[94,18,96,16,"log"],[94,21,96,19],[94,22,96,20],[94,50,96,48],[94,51,96,49],[95,8,97,6],[97,8,99,6],[98,8,100,6],[98,14,100,12,"elapsedTime"],[98,25,100,23],[98,28,100,26,"Date"],[98,32,100,30],[98,33,100,31,"now"],[98,36,100,34],[98,37,100,35],[98,38,100,36],[98,41,100,39,"startTime"],[98,50,100,48],[99,8,101,6],[99,14,101,12,"minLoadingTime"],[99,28,101,26],[99,31,101,29],[99,35,101,33],[99,36,101,34],[99,37,101,35],[100,8,102,6],[100,12,102,10,"elapsedTime"],[100,23,102,21],[100,26,102,24,"minLoadingTime"],[100,40,102,38],[100,42,102,40],[101,10,103,8],[101,16,103,14,"remainingTime"],[101,29,103,27],[101,32,103,30,"minLoadingTime"],[101,46,103,44],[101,49,103,47,"elapsedTime"],[101,60,103,58],[102,10,104,8,"console"],[102,17,104,15],[102,18,104,16,"log"],[102,21,104,19],[102,22,104,20],[102,57,104,55,"remainingTime"],[102,70,104,68],[102,99,104,97],[102,100,104,98],[103,10,105,8],[103,16,105,14],[103,20,105,18,"Promise"],[103,27,105,25],[103,28,105,26,"resolve"],[103,35,105,33],[103,39,105,37,"setTimeout"],[103,49,105,47],[103,50,105,48,"resolve"],[103,57,105,55],[103,59,105,57,"remainingTime"],[103,72,105,70],[103,73,105,71],[103,74,105,72],[104,8,106,6],[105,6,107,4],[105,7,107,5],[105,8,107,6],[105,15,107,13,"error"],[105,20,107,18],[105,22,107,20],[106,8,108,6,"console"],[106,15,108,13],[106,16,108,14,"error"],[106,21,108,19],[106,22,108,20],[106,56,108,54],[106,58,108,56,"error"],[106,63,108,61],[106,64,108,62],[107,8,109,6],[107,14,109,12,"logout"],[107,20,109,18],[107,21,109,19],[107,22,109,20],[108,6,110,4],[108,7,110,5],[108,16,110,14],[109,8,111,6,"setIsLoading"],[109,20,111,18],[109,21,111,19],[109,26,111,24],[109,27,111,25],[110,6,112,4],[111,4,113,2],[111,5,113,3],[112,4,115,2],[112,10,115,8,"checkSession"],[112,22,115,20],[112,25,115,23],[112,31,115,23,"checkSession"],[112,32,115,23],[112,37,115,53],[113,6,116,4],[113,10,116,8],[114,8,117,6],[114,14,117,12,"response"],[114,22,117,20],[114,25,117,23],[114,31,117,29,"fetch"],[114,36,117,34],[114,37,117,35],[114,40,117,38,"API_BASE_URL"],[114,52,117,50],[114,77,117,75],[114,79,117,77],[115,10,118,8,"method"],[115,16,118,14],[115,18,118,16],[115,23,118,21],[116,10,119,8,"credentials"],[116,21,119,19],[116,23,119,21],[116,32,119,30],[117,10,120,8,"headers"],[117,17,120,15],[117,19,120,17],[118,12,121,10],[118,26,121,24],[118,28,121,26],[118,46,121,44],[119,12,122,10],[119,16,122,14,"token"],[119,21,122,19],[119,25,122,23],[120,14,122,25],[120,29,122,40],[120,31,122,42],[120,41,122,52,"token"],[120,46,122,57],[121,12,122,60],[121,13,122,61],[122,10,123,8],[123,8,124,6],[123,9,124,7],[123,10,124,8],[124,8,126,6],[124,12,126,10],[124,13,126,11,"response"],[124,21,126,19],[124,22,126,20,"ok"],[124,24,126,22],[124,26,126,24],[125,10,127,8,"console"],[125,17,127,15],[125,18,127,16,"log"],[125,21,127,19],[125,22,127,20],[125,45,127,43],[125,47,127,45,"response"],[125,55,127,53],[125,56,127,54,"status"],[125,62,127,60],[125,63,127,61],[126,10,128,8],[126,17,128,15],[126,22,128,20],[127,8,129,6],[128,8,131,6],[128,14,131,12,"data"],[128,18,131,16],[128,21,131,19],[128,27,131,25,"response"],[128,35,131,33],[128,36,131,34,"json"],[128,40,131,38],[128,41,131,39],[128,42,131,40],[129,8,132,6],[129,14,132,12,"isValid"],[129,21,132,19],[129,24,132,22,"data"],[129,28,132,26],[129,29,132,27,"authenticated"],[129,42,132,40],[129,47,132,45],[129,51,132,49],[130,8,134,6],[130,12,134,10,"isValid"],[130,19,134,17],[130,23,134,21,"data"],[130,27,134,25],[130,28,134,26,"user"],[130,32,134,30],[130,34,134,32],[131,10,135,8],[132,10,136,8,"setUser"],[132,17,136,15],[132,18,136,16,"data"],[132,22,136,20],[132,23,136,21,"user"],[132,27,136,25],[132,28,136,26],[133,8,137,6],[134,8,139,6,"console"],[134,15,139,13],[134,16,139,14,"log"],[134,19,139,17],[134,20,139,18],[134,43,139,41],[134,45,139,43,"isValid"],[134,52,139,50],[134,53,139,51],[135,8,140,6],[135,15,140,13,"isValid"],[135,22,140,20],[136,6,141,4],[136,7,141,5],[136,8,141,6],[136,15,141,13,"error"],[136,20,141,18],[136,22,141,20],[137,8,142,6,"console"],[137,15,142,13],[137,16,142,14,"error"],[137,21,142,19],[137,22,142,20],[137,78,142,76],[137,80,142,78,"error"],[137,85,142,83],[137,86,142,84],[138,8,143,6],[139,8,144,6],[139,15,144,13],[139,16,144,14],[139,17,144,15,"token"],[139,22,144,20],[139,26,144,24],[139,27,144,25],[139,28,144,26,"user"],[139,32,144,30],[140,6,145,4],[141,4,146,2],[141,5,146,3],[142,4,148,2],[142,10,148,8,"login"],[142,15,148,13],[142,18,148,16],[142,24,148,16,"login"],[142,25,148,23,"email"],[142,30,148,36],[142,32,148,38,"password"],[142,40,148,54],[142,45,148,106],[143,6,149,4],[143,10,149,8],[144,8,150,6,"setIsLoading"],[144,20,150,18],[144,21,150,19],[144,25,150,23],[144,26,150,24],[145,8,152,6],[145,14,152,12,"formData"],[145,22,152,20],[145,25,152,23],[145,29,152,27,"URLSearchParams"],[145,44,152,42],[145,45,152,43],[145,46,152,44],[146,8,153,6,"formData"],[146,16,153,14],[146,17,153,15,"append"],[146,23,153,21],[146,24,153,22],[146,34,153,32],[146,36,153,34,"email"],[146,41,153,39],[146,42,153,40],[146,43,153,41],[146,44,153,42],[147,8,154,6,"formData"],[147,16,154,14],[147,17,154,15,"append"],[147,23,154,21],[147,24,154,22],[147,34,154,32],[147,36,154,34,"password"],[147,44,154,42],[147,45,154,43],[148,8,156,6],[148,14,156,12,"response"],[148,22,156,20],[148,25,156,23],[148,31,156,29,"fetch"],[148,36,156,34],[148,37,156,35],[148,40,156,38,"API_BASE_URL"],[148,52,156,50],[148,69,156,67],[148,71,156,69],[149,10,157,8,"method"],[149,16,157,14],[149,18,157,16],[149,24,157,22],[150,10,158,8,"credentials"],[150,21,158,19],[150,23,158,21],[150,32,158,30],[151,10,159,8,"headers"],[151,17,159,15],[151,19,159,17],[152,12,160,10],[152,26,160,24],[152,28,160,26],[153,10,161,8],[153,11,161,9],[154,10,162,8,"body"],[154,14,162,12],[154,16,162,14,"formData"],[154,24,162,22],[154,25,162,23,"toString"],[154,33,162,31],[154,34,162,32],[155,8,163,6],[155,9,163,7],[155,10,163,8],[156,8,165,6],[156,14,165,12,"data"],[156,18,165,16],[156,21,165,19],[156,27,165,25,"response"],[156,35,165,33],[156,36,165,34,"json"],[156,40,165,38],[156,41,165,39],[156,42,165,40],[157,8,167,6],[157,12,167,10],[157,13,167,11,"response"],[157,21,167,19],[157,22,167,20,"ok"],[157,24,167,22],[157,26,167,24],[158,10,168,8],[158,17,168,15],[159,12,168,17,"success"],[159,19,168,24],[159,21,168,26],[159,26,168,31],[160,12,168,33,"error"],[160,17,168,38],[160,19,168,40,"data"],[160,23,168,44],[160,24,168,45,"detail"],[160,30,168,51],[160,34,168,55],[161,10,168,70],[161,11,168,71],[162,8,169,6],[164,8,171,6],[165,8,172,6],[165,14,172,12,"AsyncStorage"],[165,26,172,24],[165,27,172,24,"default"],[165,34,172,24],[165,35,172,25,"setItem"],[165,42,172,32],[165,43,172,33],[165,55,172,45],[165,57,172,47,"data"],[165,61,172,51],[165,62,172,52,"access_token"],[165,74,172,64],[165,75,172,65],[166,8,173,6],[166,14,173,12,"AsyncStorage"],[166,26,173,24],[166,27,173,24,"default"],[166,34,173,24],[166,35,173,25,"setItem"],[166,42,173,32],[166,43,173,33],[166,54,173,44],[166,56,173,46,"JSON"],[166,60,173,50],[166,61,173,51,"stringify"],[166,70,173,60],[166,71,173,61,"data"],[166,75,173,65],[166,76,173,66,"user"],[166,80,173,70],[166,81,173,71],[166,82,173,72],[167,8,175,6,"setToken"],[167,16,175,14],[167,17,175,15,"data"],[167,21,175,19],[167,22,175,20,"access_token"],[167,34,175,32],[167,35,175,33],[168,8,176,6,"setUser"],[168,15,176,13],[168,16,176,14,"data"],[168,20,176,18],[168,21,176,19,"user"],[168,25,176,23],[168,26,176,24],[169,8,178,6],[169,15,178,13],[170,10,178,15,"success"],[170,17,178,22],[170,19,178,24],[171,8,178,29],[171,9,178,30],[172,6,179,4],[172,7,179,5],[172,8,179,6],[172,15,179,13,"error"],[172,20,179,18],[172,22,179,20],[173,8,180,6,"console"],[173,15,180,13],[173,16,180,14,"error"],[173,21,180,19],[173,22,180,20],[173,36,180,34],[173,38,180,36,"error"],[173,43,180,41],[173,44,180,42],[174,8,181,6],[174,15,181,13],[175,10,181,15,"success"],[175,17,181,22],[175,19,181,24],[175,24,181,29],[176,10,181,31,"error"],[176,15,181,36],[176,17,181,38],[177,8,181,63],[177,9,181,64],[178,6,182,4],[178,7,182,5],[178,16,182,14],[179,8,183,6,"setIsLoading"],[179,20,183,18],[179,21,183,19],[179,26,183,24],[179,27,183,25],[180,6,184,4],[181,4,185,2],[181,5,185,3],[182,4,187,2],[182,10,187,8,"register"],[182,18,187,16],[182,21,187,19],[182,27,187,19,"register"],[182,28,187,26,"email"],[182,33,187,39],[182,35,187,41,"password"],[182,43,187,57],[182,45,187,59,"name"],[182,49,187,71],[182,54,187,123],[183,6,188,4],[183,10,188,8],[184,8,189,6,"setIsLoading"],[184,20,189,18],[184,21,189,19],[184,25,189,23],[184,26,189,24],[185,8,191,6],[185,14,191,12,"response"],[185,22,191,20],[185,25,191,23],[185,31,191,29,"fetch"],[185,36,191,34],[185,37,191,35],[185,40,191,38,"API_BASE_URL"],[185,52,191,50],[185,72,191,70],[185,74,191,72],[186,10,192,8,"method"],[186,16,192,14],[186,18,192,16],[186,24,192,22],[187,10,193,8,"credentials"],[187,21,193,19],[187,23,193,21],[187,32,193,30],[188,10,194,8,"headers"],[188,17,194,15],[188,19,194,17],[189,12,195,10],[189,26,195,24],[189,28,195,26],[190,10,196,8],[190,11,196,9],[191,10,197,8,"body"],[191,14,197,12],[191,16,197,14,"JSON"],[191,20,197,18],[191,21,197,19,"stringify"],[191,30,197,28],[191,31,197,29],[192,12,198,10,"email"],[192,17,198,15],[193,12,199,10,"password"],[193,20,199,18],[194,12,200,10,"name"],[195,10,201,8],[195,11,201,9],[196,8,202,6],[196,9,202,7],[196,10,202,8],[197,8,204,6],[197,14,204,12,"data"],[197,18,204,16],[197,21,204,19],[197,27,204,25,"response"],[197,35,204,33],[197,36,204,34,"json"],[197,40,204,38],[197,41,204,39],[197,42,204,40],[198,8,206,6],[198,12,206,10],[198,13,206,11,"response"],[198,21,206,19],[198,22,206,20,"ok"],[198,24,206,22],[198,26,206,24],[199,10,207,8],[199,17,207,15],[200,12,207,17,"success"],[200,19,207,24],[200,21,207,26],[200,26,207,31],[201,12,207,33,"error"],[201,17,207,38],[201,19,207,40,"data"],[201,23,207,44],[201,24,207,45,"detail"],[201,30,207,51],[201,34,207,55],[202,10,207,77],[202,11,207,78],[203,8,208,6],[205,8,210,6],[206,8,211,6],[206,14,211,12,"AsyncStorage"],[206,26,211,24],[206,27,211,24,"default"],[206,34,211,24],[206,35,211,25,"setItem"],[206,42,211,32],[206,43,211,33],[206,55,211,45],[206,57,211,47,"data"],[206,61,211,51],[206,62,211,52,"access_token"],[206,74,211,64],[206,75,211,65],[207,8,212,6],[207,14,212,12,"AsyncStorage"],[207,26,212,24],[207,27,212,24,"default"],[207,34,212,24],[207,35,212,25,"setItem"],[207,42,212,32],[207,43,212,33],[207,54,212,44],[207,56,212,46,"JSON"],[207,60,212,50],[207,61,212,51,"stringify"],[207,70,212,60],[207,71,212,61,"data"],[207,75,212,65],[207,76,212,66,"user"],[207,80,212,70],[207,81,212,71],[207,82,212,72],[208,8,214,6,"setToken"],[208,16,214,14],[208,17,214,15,"data"],[208,21,214,19],[208,22,214,20,"access_token"],[208,34,214,32],[208,35,214,33],[209,8,215,6,"setUser"],[209,15,215,13],[209,16,215,14,"data"],[209,20,215,18],[209,21,215,19,"user"],[209,25,215,23],[209,26,215,24],[210,8,217,6],[210,15,217,13],[211,10,217,15,"success"],[211,17,217,22],[211,19,217,24],[212,8,217,29],[212,9,217,30],[213,6,218,4],[213,7,218,5],[213,8,218,6],[213,15,218,13,"error"],[213,20,218,18],[213,22,218,20],[214,8,219,6,"console"],[214,15,219,13],[214,16,219,14,"error"],[214,21,219,19],[214,22,219,20],[214,43,219,41],[214,45,219,43,"error"],[214,50,219,48],[214,51,219,49],[215,8,220,6],[215,15,220,13],[216,10,220,15,"success"],[216,17,220,22],[216,19,220,24],[216,24,220,29],[217,10,220,31,"error"],[217,15,220,36],[217,17,220,38],[218,8,220,63],[218,9,220,64],[219,6,221,4],[219,7,221,5],[219,16,221,14],[220,8,222,6,"setIsLoading"],[220,20,222,18],[220,21,222,19],[220,26,222,24],[220,27,222,25],[221,6,223,4],[222,4,224,2],[222,5,224,3],[223,4,226,2],[223,10,226,8,"loginWithGoogle"],[223,25,226,23],[223,28,226,26],[223,34,226,26,"loginWithGoogle"],[223,35,226,26],[223,40,226,85],[224,6,227,4],[224,10,227,8],[225,8,228,6],[226,8,229,6],[227,8,230,6],[227,14,230,12,"redirectUrl"],[227,25,230,23],[227,28,230,26,"encodeURIComponent"],[227,46,230,44],[227,47,230,45,"window"],[227,53,230,51],[227,54,230,52,"location"],[227,62,230,60],[227,63,230,61,"href"],[227,67,230,65],[227,68,230,66],[228,8,231,6],[228,14,231,12,"googleAuthUrl"],[228,27,231,25],[228,30,231,28],[228,74,231,72,"redirectUrl"],[228,85,231,83],[228,87,231,85],[230,8,233,6],[231,8,234,6,"window"],[231,14,234,12],[231,15,234,13,"open"],[231,19,234,17],[231,20,234,18,"googleAuthUrl"],[231,33,234,31],[231,35,234,33],[231,42,234,40],[231,43,234,41],[232,8,236,6],[232,15,236,13],[233,10,236,15,"success"],[233,17,236,22],[233,19,236,24],[234,8,236,29],[234,9,236,30],[235,6,237,4],[235,7,237,5],[235,8,237,6],[235,15,237,13,"error"],[235,20,237,18],[235,22,237,20],[236,8,238,6,"console"],[236,15,238,13],[236,16,238,14,"error"],[236,21,238,19],[236,22,238,20],[236,43,238,41],[236,45,238,43,"error"],[236,50,238,48],[236,51,238,49],[237,8,239,6],[237,15,239,13],[238,10,239,15,"success"],[238,17,239,22],[238,19,239,24],[238,24,239,29],[239,10,239,31,"error"],[239,15,239,36],[239,17,239,38],[240,8,239,60],[240,9,239,61],[241,6,240,4],[242,4,241,2],[242,5,241,3],[243,4,243,2],[243,10,243,8,"logout"],[243,16,243,14],[243,19,243,17],[243,25,243,17,"logout"],[243,26,243,17],[243,31,243,44],[244,6,244,4],[244,10,244,8],[245,8,245,6],[246,8,246,6],[246,12,246,10,"token"],[246,17,246,15],[246,19,246,17],[247,10,247,8],[247,16,247,14,"fetch"],[247,21,247,19],[247,22,247,20],[247,25,247,23,"API_BASE_URL"],[247,37,247,35],[247,55,247,53],[247,57,247,55],[248,12,248,10,"method"],[248,18,248,16],[248,20,248,18],[248,26,248,24],[249,12,249,10,"credentials"],[249,23,249,21],[249,25,249,23],[249,34,249,32],[250,12,250,10,"headers"],[250,19,250,17],[250,21,250,19],[251,14,251,12],[251,29,251,27],[251,31,251,29],[251,41,251,39,"token"],[251,46,251,44],[251,48,251,46],[252,14,252,12],[252,28,252,26],[252,30,252,28],[253,12,253,10],[254,10,254,8],[254,11,254,9],[254,12,254,10],[255,8,255,6],[256,6,256,4],[256,7,256,5],[256,8,256,6],[256,15,256,13,"error"],[256,20,256,18],[256,22,256,20],[257,8,257,6,"console"],[257,15,257,13],[257,16,257,14,"error"],[257,21,257,19],[257,22,257,20],[257,37,257,35],[257,39,257,37,"error"],[257,44,257,42],[257,45,257,43],[258,6,258,4],[258,7,258,5],[258,16,258,14],[259,8,259,6],[260,8,260,6],[260,14,260,12,"AsyncStorage"],[260,26,260,24],[260,27,260,24,"default"],[260,34,260,24],[260,35,260,25,"multiRemove"],[260,46,260,36],[260,47,260,37],[260,48,260,38],[260,60,260,50],[260,62,260,52],[260,73,260,63],[260,74,260,64],[260,75,260,65],[261,8,261,6,"setToken"],[261,16,261,14],[261,17,261,15],[261,21,261,19],[261,22,261,20],[262,8,262,6,"setUser"],[262,15,262,13],[262,16,262,14],[262,20,262,18],[262,21,262,19],[263,6,263,4],[264,4,264,2],[264,5,264,3],[265,4,266,2],[265,24,267,4],[265,28,267,4,"_reactJsxDevRuntime"],[265,47,267,4],[265,48,267,4,"jsxDEV"],[265,54,267,4],[265,56,267,5,"AuthContext"],[265,67,267,16],[265,68,267,17,"Provider"],[265,76,267,25],[266,6,268,6,"value"],[266,11,268,11],[266,13,268,13],[267,8,269,8,"user"],[267,12,269,12],[268,8,270,8,"token"],[268,13,270,13],[269,8,271,8,"isLoading"],[269,17,271,17],[270,8,272,8,"isAuthenticated"],[270,23,272,23],[271,8,273,8,"login"],[271,13,273,13],[272,8,274,8,"register"],[272,16,274,16],[273,8,275,8,"loginWithGoogle"],[273,23,275,23],[274,8,276,8,"logout"],[274,14,276,14],[275,8,277,8,"checkSession"],[276,6,278,6],[276,7,278,8],[277,6,278,8,"children"],[277,14,278,8],[277,16,280,7,"children"],[278,4,280,15],[279,6,280,15,"fileName"],[279,14,280,15],[279,16,280,15,"_jsxFileName"],[279,28,280,15],[280,6,280,15,"lineNumber"],[280,16,280,15],[281,6,280,15,"columnNumber"],[281,18,280,15],[282,4,280,15],[282,11,281,26],[282,12,281,27],[283,2,283,0],[283,3,283,1],[284,2,285,7],[284,8,285,13,"useAuth"],[284,15,285,20],[284,18,285,23,"useAuth"],[284,19,285,23],[284,24,285,46],[285,4,286,2],[285,10,286,8,"context"],[285,17,286,15],[285,20,286,18],[285,24,286,18,"useContext"],[285,30,286,28],[285,31,286,28,"useContext"],[285,41,286,28],[285,43,286,29,"AuthContext"],[285,54,286,40],[285,55,286,41],[286,4,287,2],[286,8,287,6,"context"],[286,15,287,13],[286,20,287,18,"undefined"],[286,29,287,27],[286,31,287,29],[287,6,288,4],[287,12,288,10],[287,16,288,14,"Error"],[287,21,288,19],[287,22,288,20],[287,67,288,65],[287,68,288,66],[288,4,289,2],[289,4,290,2],[289,11,290,9,"context"],[289,18,290,16],[290,2,291,0],[290,3,291,1],[291,0,291,2],[291,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;oCCgC,oCD;kCCQ,oCD;0BCuB,6CD;GFQ;uBIE;GJ+B;gBKE;GLqC;mBME;GNqC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}