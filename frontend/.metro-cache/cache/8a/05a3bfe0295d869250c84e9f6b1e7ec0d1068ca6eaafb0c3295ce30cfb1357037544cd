{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":69,"index":159}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":160},"end":{"line":3,"column":39,"index":199}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/AuthContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"AuthProvider\", {\n    enumerable: true,\n    get: function () {\n      return AuthProvider;\n    }\n  });\n  Object.defineProperty(exports, \"useAuth\", {\n    enumerable: true,\n    get: function () {\n      return useAuth;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _expoConstants = require(_dependencyMap[2], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const AuthContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const API_BASE_URL = Constants.default.expoConfig?.extra?.backendUrl || process.env.EXPO_PUBLIC_BACKEND_URL || 'http://localhost:8001';\n  const AuthProvider = ({\n    children\n  }) => {\n    const [user, setUser] = (0, _react.useState)(null);\n    const [token, setToken] = (0, _react.useState)(null);\n    const [isLoading, setIsLoading] = (0, _react.useState)(true);\n    const isAuthenticated = !!user && !!token;\n\n    // Check existing session on app start\n    (0, _react.useEffect)(() => {\n      checkExistingSession();\n    }, []);\n    const checkExistingSession = async () => {\n      try {\n        setIsLoading(true);\n        const startTime = Date.now(); // Track loading start time\n\n        // Check stored token first\n        const storedToken = await AsyncStorage.default.getItem('auth_token');\n        const storedUser = await AsyncStorage.default.getItem('auth_user');\n        console.log('üîç Session check - Token exists:', !!storedToken, 'User exists:', !!storedUser);\n        if (storedToken && storedUser) {\n          try {\n            const userData = JSON.parse(storedUser);\n            console.log('üë§ Restoring user session:', userData.email, 'ID:', userData.id);\n            setToken(storedToken);\n            setUser(userData);\n\n            // Simple session validation\n            try {\n              const isValid = await checkSession();\n              if (isValid) {\n                console.log('‚úÖ Session validation successful - user auto-logged in');\n              } else {\n                console.log('‚ùå Session validation failed - clearing stored session');\n                await logout();\n              }\n            } catch (error) {\n              console.log('‚ö†Ô∏è Session validation error - keeping session:', error);\n              // Keep session on network errors\n            }\n          } catch (parseError) {\n            console.error('Error parsing stored user data:', parseError);\n            // Clear invalid stored data\n            await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n            setToken(null);\n            setUser(null);\n          }\n        } else {\n          console.log('üîç No stored session found - showing auth screen');\n        }\n\n        // Minimal loading time to prevent stuck loading\n        const elapsedTime = Date.now() - startTime;\n        const minLoadingTime = 1000; // Reduced to 1 second\n        if (elapsedTime < minLoadingTime) {\n          const remainingTime = minLoadingTime - elapsedTime;\n          console.log(`‚è±Ô∏è Extending loading screen for ${remainingTime}ms`);\n          await new Promise(resolve => setTimeout(resolve, remainingTime));\n        }\n        console.log('üèÅ Auth loading completed, setting isLoading to false');\n      } catch (error) {\n        console.error('Error checking existing session:', error);\n        // Don't logout on errors, just continue\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const checkSession = async () => {\n      try {\n        // Always return true if we have both token and user to avoid unnecessary logouts\n        if (!token || !user) {\n          console.log('No token or user found - session invalid');\n          return false;\n        }\n        const response = await fetch(`${API_BASE_URL}/api/auth/session/check`, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          console.log('Session check failed:', response.status);\n          return false;\n        }\n        const data = await response.json();\n        const isValid = data.authenticated === true;\n        if (isValid && data.user) {\n          // Update user data if it changed\n          setUser(data.user);\n          console.log('‚úÖ Session validated successfully for user:', data.user.email);\n        } else {\n          console.log('‚ùå Session check returned invalid:', data);\n        }\n        return isValid;\n      } catch (error) {\n        console.error('Session check network error - keeping current session:', error);\n        // CRITICAL: Don't log out on network errors - keep current session\n        // This prevents users from losing progress due to temporary network issues\n        return true; // Keep user logged in on network errors\n      }\n    };\n    const login = async (email, password) => {\n      try {\n        setIsLoading(true);\n        const formData = new URLSearchParams();\n        formData.append('username', email); // OAuth2PasswordRequestForm uses 'username'\n        formData.append('password', password);\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: formData.toString()\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Login failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Login successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Login error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const register = async (email, password, name) => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email,\n            password,\n            name\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          return {\n            success: false,\n            error: data.detail || 'Registration failed'\n          };\n        }\n\n        // Store auth data\n        await AsyncStorage.default.setItem('auth_token', data.access_token);\n        await AsyncStorage.default.setItem('auth_user', JSON.stringify(data.user));\n        setToken(data.access_token);\n        setUser(data.user);\n        console.log('‚úÖ Registration successful - User ID:', data.user.id, 'Token stored');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Registration error:', error);\n        return {\n          success: false,\n          error: 'Network error occurred'\n        };\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const loginWithGoogle = async () => {\n      try {\n        // For now, redirect to Google OAuth URL\n        // In a real implementation, you'd use WebBrowser.openAuthSessionAsync\n        const redirectUrl = encodeURIComponent(window.location.href);\n        const googleAuthUrl = `https://auth.emergentagent.com/?redirect=${redirectUrl}`;\n\n        // Open Google auth in new window/tab\n        window.open(googleAuthUrl, '_self');\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('Google login error:', error);\n        return {\n          success: false,\n          error: 'Google login failed'\n        };\n      }\n    };\n    const logout = async () => {\n      try {\n        // Call backend logout if we have a token\n        if (token) {\n          await fetch(`${API_BASE_URL}/api/auth/logout`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        // Always clear local auth data\n        await AsyncStorage.default.multiRemove(['auth_token', 'auth_user']);\n        setToken(null);\n        setUser(null);\n      }\n    };\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        isLoading,\n        isAuthenticated,\n        login,\n        register,\n        loginWithGoogle,\n        logout,\n        checkSession\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }, this);\n  };\n  const useAuth = () => {\n    const context = (0, _react.useContext)(AuthContext);\n    if (context === undefined) {\n      throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n  };\n});","lineCount":288,"map":[[13,2,30,0,"Object"],[13,8,30,0],[13,9,30,0,"defineProperty"],[13,23,30,0],[13,24,30,0,"exports"],[13,31,30,0],[14,4,30,0,"enumerable"],[14,14,30,0],[15,4,30,0,"get"],[15,7,30,0],[15,18,30,0,"get"],[15,19,30,0],[16,6,30,0],[16,13,30,0,"AuthProvider"],[16,25,30,0],[17,4,30,0],[18,2,30,0],[19,2,287,0,"Object"],[19,8,287,0],[19,9,287,0,"defineProperty"],[19,23,287,0],[19,24,287,0,"exports"],[19,31,287,0],[20,4,287,0,"enumerable"],[20,14,287,0],[21,4,287,0,"get"],[21,7,287,0],[21,18,287,0,"get"],[21,19,287,0],[22,6,287,0],[22,13,287,0,"useAuth"],[22,20,287,0],[23,4,287,0],[24,2,287,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,2,0],[26,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[26,42,2,0],[26,45,2,0,"require"],[26,52,2,0],[26,53,2,0,"_dependencyMap"],[26,67,2,0],[27,2,2,0],[27,6,2,0,"AsyncStorage"],[27,18,2,0],[27,21,2,0,"_interopDefault"],[27,36,2,0],[27,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[27,73,2,0],[28,2,3,0],[28,6,3,0,"_expoConstants"],[28,20,3,0],[28,23,3,0,"require"],[28,30,3,0],[28,31,3,0,"_dependencyMap"],[28,45,3,0],[29,2,3,0],[29,6,3,0,"Constants"],[29,15,3,0],[29,18,3,0,"_interopDefault"],[29,33,3,0],[29,34,3,0,"_expoConstants"],[29,48,3,0],[30,2,3,39],[30,6,3,39,"_reactJsxDevRuntime"],[30,25,3,39],[30,28,3,39,"require"],[30,35,3,39],[30,36,3,39,"_dependencyMap"],[30,50,3,39],[31,2,26,0],[31,8,26,6,"AuthContext"],[31,19,26,17],[31,35,26,20],[31,39,26,20,"createContext"],[31,45,26,33],[31,46,26,33,"createContext"],[31,59,26,33],[31,61,26,63,"undefined"],[31,70,26,72],[31,71,26,73],[32,2,28,0],[32,8,28,6,"API_BASE_URL"],[32,20,28,18],[32,23,28,21,"Constants"],[32,32,28,30],[32,33,28,30,"default"],[32,40,28,30],[32,41,28,31,"expoConfig"],[32,51,28,41],[32,53,28,43,"extra"],[32,58,28,48],[32,60,28,50,"backendUrl"],[32,70,28,60],[32,74,28,64,"process"],[32,81,28,71],[32,82,28,72,"env"],[32,85,28,75],[32,86,28,76,"EXPO_PUBLIC_BACKEND_URL"],[32,109,28,99],[32,113,28,103],[32,136,28,126],[33,2,30,7],[33,8,30,13,"AuthProvider"],[33,20,30,25],[33,23,30,28,"AuthProvider"],[33,24,30,29],[34,4,30,31,"children"],[35,2,30,65],[35,3,30,66],[35,8,30,71],[36,4,31,2],[36,10,31,8],[36,11,31,9,"user"],[36,15,31,13],[36,17,31,15,"setUser"],[36,24,31,22],[36,25,31,23],[36,28,31,26],[36,32,31,26,"useState"],[36,38,31,34],[36,39,31,34,"useState"],[36,47,31,34],[36,49,31,48],[36,53,31,52],[36,54,31,53],[37,4,32,2],[37,10,32,8],[37,11,32,9,"token"],[37,16,32,14],[37,18,32,16,"setToken"],[37,26,32,24],[37,27,32,25],[37,30,32,28],[37,34,32,28,"useState"],[37,40,32,36],[37,41,32,36,"useState"],[37,49,32,36],[37,51,32,52],[37,55,32,56],[37,56,32,57],[38,4,33,2],[38,10,33,8],[38,11,33,9,"isLoading"],[38,20,33,18],[38,22,33,20,"setIsLoading"],[38,34,33,32],[38,35,33,33],[38,38,33,36],[38,42,33,36,"useState"],[38,48,33,44],[38,49,33,44,"useState"],[38,57,33,44],[38,59,33,45],[38,63,33,49],[38,64,33,50],[39,4,35,2],[39,10,35,8,"isAuthenticated"],[39,25,35,23],[39,28,35,26],[39,29,35,27],[39,30,35,28,"user"],[39,34,35,32],[39,38,35,36],[39,39,35,37],[39,40,35,38,"token"],[39,45,35,43],[41,4,37,2],[42,4,38,2],[42,8,38,2,"useEffect"],[42,14,38,11],[42,15,38,11,"useEffect"],[42,24,38,11],[42,26,38,12],[42,32,38,18],[43,6,39,4,"checkExistingSession"],[43,26,39,24],[43,27,39,25],[43,28,39,26],[44,4,40,2],[44,5,40,3],[44,7,40,5],[44,9,40,7],[44,10,40,8],[45,4,42,2],[45,10,42,8,"checkExistingSession"],[45,30,42,28],[45,33,42,31],[45,39,42,31,"checkExistingSession"],[45,40,42,31],[45,45,42,43],[46,6,43,4],[46,10,43,8],[47,8,44,6,"setIsLoading"],[47,20,44,18],[47,21,44,19],[47,25,44,23],[47,26,44,24],[48,8,45,6],[48,14,45,12,"startTime"],[48,23,45,21],[48,26,45,24,"Date"],[48,30,45,28],[48,31,45,29,"now"],[48,34,45,32],[48,35,45,33],[48,36,45,34],[48,37,45,35],[48,38,45,36],[50,8,47,6],[51,8,48,6],[51,14,48,12,"storedToken"],[51,25,48,23],[51,28,48,26],[51,34,48,32,"AsyncStorage"],[51,46,48,44],[51,47,48,44,"default"],[51,54,48,44],[51,55,48,45,"getItem"],[51,62,48,52],[51,63,48,53],[51,75,48,65],[51,76,48,66],[52,8,49,6],[52,14,49,12,"storedUser"],[52,24,49,22],[52,27,49,25],[52,33,49,31,"AsyncStorage"],[52,45,49,43],[52,46,49,43,"default"],[52,53,49,43],[52,54,49,44,"getItem"],[52,61,49,51],[52,62,49,52],[52,73,49,63],[52,74,49,64],[53,8,51,6,"console"],[53,15,51,13],[53,16,51,14,"log"],[53,19,51,17],[53,20,51,18],[53,54,51,52],[53,56,51,54],[53,57,51,55],[53,58,51,56,"storedToken"],[53,69,51,67],[53,71,51,69],[53,85,51,83],[53,87,51,85],[53,88,51,86],[53,89,51,87,"storedUser"],[53,99,51,97],[53,100,51,98],[54,8,53,6],[54,12,53,10,"storedToken"],[54,23,53,21],[54,27,53,25,"storedUser"],[54,37,53,35],[54,39,53,37],[55,10,54,8],[55,14,54,12],[56,12,55,10],[56,18,55,16,"userData"],[56,26,55,24],[56,29,55,27,"JSON"],[56,33,55,31],[56,34,55,32,"parse"],[56,39,55,37],[56,40,55,38,"storedUser"],[56,50,55,48],[56,51,55,49],[57,12,56,10,"console"],[57,19,56,17],[57,20,56,18,"log"],[57,23,56,21],[57,24,56,22],[57,52,56,50],[57,54,56,52,"userData"],[57,62,56,60],[57,63,56,61,"email"],[57,68,56,66],[57,70,56,68],[57,75,56,73],[57,77,56,75,"userData"],[57,85,56,83],[57,86,56,84,"id"],[57,88,56,86],[57,89,56,87],[58,12,58,10,"setToken"],[58,20,58,18],[58,21,58,19,"storedToken"],[58,32,58,30],[58,33,58,31],[59,12,59,10,"setUser"],[59,19,59,17],[59,20,59,18,"userData"],[59,28,59,26],[59,29,59,27],[61,12,61,10],[62,12,62,10],[62,16,62,14],[63,14,63,12],[63,20,63,18,"isValid"],[63,27,63,25],[63,30,63,28],[63,36,63,34,"checkSession"],[63,48,63,46],[63,49,63,47],[63,50,63,48],[64,14,64,12],[64,18,64,16,"isValid"],[64,25,64,23],[64,27,64,25],[65,16,65,14,"console"],[65,23,65,21],[65,24,65,22,"log"],[65,27,65,25],[65,28,65,26],[65,83,65,81],[65,84,65,82],[66,14,66,12],[66,15,66,13],[66,21,66,19],[67,16,67,14,"console"],[67,23,67,21],[67,24,67,22,"log"],[67,27,67,25],[67,28,67,26],[67,83,67,81],[67,84,67,82],[68,16,68,14],[68,22,68,20,"logout"],[68,28,68,26],[68,29,68,27],[68,30,68,28],[69,14,69,12],[70,12,70,10],[70,13,70,11],[70,14,70,12],[70,21,70,19,"error"],[70,26,70,24],[70,28,70,26],[71,14,71,12,"console"],[71,21,71,19],[71,22,71,20,"log"],[71,25,71,23],[71,26,71,24],[71,74,71,72],[71,76,71,74,"error"],[71,81,71,79],[71,82,71,80],[72,14,72,12],[73,12,73,10],[74,10,75,8],[74,11,75,9],[74,12,75,10],[74,19,75,17,"parseError"],[74,29,75,27],[74,31,75,29],[75,12,76,10,"console"],[75,19,76,17],[75,20,76,18,"error"],[75,25,76,23],[75,26,76,24],[75,59,76,57],[75,61,76,59,"parseError"],[75,71,76,69],[75,72,76,70],[76,12,77,10],[77,12,78,10],[77,18,78,16,"AsyncStorage"],[77,30,78,28],[77,31,78,28,"default"],[77,38,78,28],[77,39,78,29,"multiRemove"],[77,50,78,40],[77,51,78,41],[77,52,78,42],[77,64,78,54],[77,66,78,56],[77,77,78,67],[77,78,78,68],[77,79,78,69],[78,12,79,10,"setToken"],[78,20,79,18],[78,21,79,19],[78,25,79,23],[78,26,79,24],[79,12,80,10,"setUser"],[79,19,80,17],[79,20,80,18],[79,24,80,22],[79,25,80,23],[80,10,81,8],[81,8,82,6],[81,9,82,7],[81,15,82,13],[82,10,83,8,"console"],[82,17,83,15],[82,18,83,16,"log"],[82,21,83,19],[82,22,83,20],[82,72,83,70],[82,73,83,71],[83,8,84,6],[85,8,86,6],[86,8,87,6],[86,14,87,12,"elapsedTime"],[86,25,87,23],[86,28,87,26,"Date"],[86,32,87,30],[86,33,87,31,"now"],[86,36,87,34],[86,37,87,35],[86,38,87,36],[86,41,87,39,"startTime"],[86,50,87,48],[87,8,88,6],[87,14,88,12,"minLoadingTime"],[87,28,88,26],[87,31,88,29],[87,35,88,33],[87,36,88,34],[87,37,88,35],[88,8,89,6],[88,12,89,10,"elapsedTime"],[88,23,89,21],[88,26,89,24,"minLoadingTime"],[88,40,89,38],[88,42,89,40],[89,10,90,8],[89,16,90,14,"remainingTime"],[89,29,90,27],[89,32,90,30,"minLoadingTime"],[89,46,90,44],[89,49,90,47,"elapsedTime"],[89,60,90,58],[90,10,91,8,"console"],[90,17,91,15],[90,18,91,16,"log"],[90,21,91,19],[90,22,91,20],[90,57,91,55,"remainingTime"],[90,70,91,68],[90,74,91,72],[90,75,91,73],[91,10,92,8],[91,16,92,14],[91,20,92,18,"Promise"],[91,27,92,25],[91,28,92,26,"resolve"],[91,35,92,33],[91,39,92,37,"setTimeout"],[91,49,92,47],[91,50,92,48,"resolve"],[91,57,92,55],[91,59,92,57,"remainingTime"],[91,72,92,70],[91,73,92,71],[91,74,92,72],[92,8,93,6],[93,8,95,6,"console"],[93,15,95,13],[93,16,95,14,"log"],[93,19,95,17],[93,20,95,18],[93,75,95,73],[93,76,95,74],[94,6,96,4],[94,7,96,5],[94,8,96,6],[94,15,96,13,"error"],[94,20,96,18],[94,22,96,20],[95,8,97,6,"console"],[95,15,97,13],[95,16,97,14,"error"],[95,21,97,19],[95,22,97,20],[95,56,97,54],[95,58,97,56,"error"],[95,63,97,61],[95,64,97,62],[96,8,98,6],[97,6,99,4],[97,7,99,5],[97,16,99,14],[98,8,100,6,"setIsLoading"],[98,20,100,18],[98,21,100,19],[98,26,100,24],[98,27,100,25],[99,6,101,4],[100,4,102,2],[100,5,102,3],[101,4,104,2],[101,10,104,8,"checkSession"],[101,22,104,20],[101,25,104,23],[101,31,104,23,"checkSession"],[101,32,104,23],[101,37,104,53],[102,6,105,4],[102,10,105,8],[103,8,106,6],[104,8,107,6],[104,12,107,10],[104,13,107,11,"token"],[104,18,107,16],[104,22,107,20],[104,23,107,21,"user"],[104,27,107,25],[104,29,107,27],[105,10,108,8,"console"],[105,17,108,15],[105,18,108,16,"log"],[105,21,108,19],[105,22,108,20],[105,64,108,62],[105,65,108,63],[106,10,109,8],[106,17,109,15],[106,22,109,20],[107,8,110,6],[108,8,112,6],[108,14,112,12,"response"],[108,22,112,20],[108,25,112,23],[108,31,112,29,"fetch"],[108,36,112,34],[108,37,112,35],[108,40,112,38,"API_BASE_URL"],[108,52,112,50],[108,77,112,75],[108,79,112,77],[109,10,113,8,"method"],[109,16,113,14],[109,18,113,16],[109,23,113,21],[110,10,114,8,"credentials"],[110,21,114,19],[110,23,114,21],[110,32,114,30],[111,10,115,8,"headers"],[111,17,115,15],[111,19,115,17],[112,12,116,10],[112,26,116,24],[112,28,116,26],[112,46,116,44],[113,12,117,10],[113,27,117,25],[113,29,117,27],[113,39,117,37,"token"],[113,44,117,42],[114,10,118,8],[115,8,119,6],[115,9,119,7],[115,10,119,8],[116,8,121,6],[116,12,121,10],[116,13,121,11,"response"],[116,21,121,19],[116,22,121,20,"ok"],[116,24,121,22],[116,26,121,24],[117,10,122,8,"console"],[117,17,122,15],[117,18,122,16,"log"],[117,21,122,19],[117,22,122,20],[117,45,122,43],[117,47,122,45,"response"],[117,55,122,53],[117,56,122,54,"status"],[117,62,122,60],[117,63,122,61],[118,10,123,8],[118,17,123,15],[118,22,123,20],[119,8,124,6],[120,8,126,6],[120,14,126,12,"data"],[120,18,126,16],[120,21,126,19],[120,27,126,25,"response"],[120,35,126,33],[120,36,126,34,"json"],[120,40,126,38],[120,41,126,39],[120,42,126,40],[121,8,127,6],[121,14,127,12,"isValid"],[121,21,127,19],[121,24,127,22,"data"],[121,28,127,26],[121,29,127,27,"authenticated"],[121,42,127,40],[121,47,127,45],[121,51,127,49],[122,8,129,6],[122,12,129,10,"isValid"],[122,19,129,17],[122,23,129,21,"data"],[122,27,129,25],[122,28,129,26,"user"],[122,32,129,30],[122,34,129,32],[123,10,130,8],[124,10,131,8,"setUser"],[124,17,131,15],[124,18,131,16,"data"],[124,22,131,20],[124,23,131,21,"user"],[124,27,131,25],[124,28,131,26],[125,10,132,8,"console"],[125,17,132,15],[125,18,132,16,"log"],[125,21,132,19],[125,22,132,20],[125,66,132,64],[125,68,132,66,"data"],[125,72,132,70],[125,73,132,71,"user"],[125,77,132,75],[125,78,132,76,"email"],[125,83,132,81],[125,84,132,82],[126,8,133,6],[126,9,133,7],[126,15,133,13],[127,10,134,8,"console"],[127,17,134,15],[127,18,134,16,"log"],[127,21,134,19],[127,22,134,20],[127,57,134,55],[127,59,134,57,"data"],[127,63,134,61],[127,64,134,62],[128,8,135,6],[129,8,137,6],[129,15,137,13,"isValid"],[129,22,137,20],[130,6,138,4],[130,7,138,5],[130,8,138,6],[130,15,138,13,"error"],[130,20,138,18],[130,22,138,20],[131,8,139,6,"console"],[131,15,139,13],[131,16,139,14,"error"],[131,21,139,19],[131,22,139,20],[131,78,139,76],[131,80,139,78,"error"],[131,85,139,83],[131,86,139,84],[132,8,140,6],[133,8,141,6],[134,8,142,6],[134,15,142,13],[134,19,142,17],[134,20,142,18],[134,21,142,19],[135,6,143,4],[136,4,144,2],[136,5,144,3],[137,4,146,2],[137,10,146,8,"login"],[137,15,146,13],[137,18,146,16],[137,24,146,16,"login"],[137,25,146,23,"email"],[137,30,146,36],[137,32,146,38,"password"],[137,40,146,54],[137,45,146,106],[138,6,147,4],[138,10,147,8],[139,8,148,6,"setIsLoading"],[139,20,148,18],[139,21,148,19],[139,25,148,23],[139,26,148,24],[140,8,150,6],[140,14,150,12,"formData"],[140,22,150,20],[140,25,150,23],[140,29,150,27,"URLSearchParams"],[140,44,150,42],[140,45,150,43],[140,46,150,44],[141,8,151,6,"formData"],[141,16,151,14],[141,17,151,15,"append"],[141,23,151,21],[141,24,151,22],[141,34,151,32],[141,36,151,34,"email"],[141,41,151,39],[141,42,151,40],[141,43,151,41],[141,44,151,42],[142,8,152,6,"formData"],[142,16,152,14],[142,17,152,15,"append"],[142,23,152,21],[142,24,152,22],[142,34,152,32],[142,36,152,34,"password"],[142,44,152,42],[142,45,152,43],[143,8,154,6],[143,14,154,12,"response"],[143,22,154,20],[143,25,154,23],[143,31,154,29,"fetch"],[143,36,154,34],[143,37,154,35],[143,40,154,38,"API_BASE_URL"],[143,52,154,50],[143,69,154,67],[143,71,154,69],[144,10,155,8,"method"],[144,16,155,14],[144,18,155,16],[144,24,155,22],[145,10,156,8,"credentials"],[145,21,156,19],[145,23,156,21],[145,32,156,30],[146,10,157,8,"headers"],[146,17,157,15],[146,19,157,17],[147,12,158,10],[147,26,158,24],[147,28,158,26],[148,10,159,8],[148,11,159,9],[149,10,160,8,"body"],[149,14,160,12],[149,16,160,14,"formData"],[149,24,160,22],[149,25,160,23,"toString"],[149,33,160,31],[149,34,160,32],[150,8,161,6],[150,9,161,7],[150,10,161,8],[151,8,163,6],[151,14,163,12,"data"],[151,18,163,16],[151,21,163,19],[151,27,163,25,"response"],[151,35,163,33],[151,36,163,34,"json"],[151,40,163,38],[151,41,163,39],[151,42,163,40],[152,8,165,6],[152,12,165,10],[152,13,165,11,"response"],[152,21,165,19],[152,22,165,20,"ok"],[152,24,165,22],[152,26,165,24],[153,10,166,8],[153,17,166,15],[154,12,166,17,"success"],[154,19,166,24],[154,21,166,26],[154,26,166,31],[155,12,166,33,"error"],[155,17,166,38],[155,19,166,40,"data"],[155,23,166,44],[155,24,166,45,"detail"],[155,30,166,51],[155,34,166,55],[156,10,166,70],[156,11,166,71],[157,8,167,6],[159,8,169,6],[160,8,170,6],[160,14,170,12,"AsyncStorage"],[160,26,170,24],[160,27,170,24,"default"],[160,34,170,24],[160,35,170,25,"setItem"],[160,42,170,32],[160,43,170,33],[160,55,170,45],[160,57,170,47,"data"],[160,61,170,51],[160,62,170,52,"access_token"],[160,74,170,64],[160,75,170,65],[161,8,171,6],[161,14,171,12,"AsyncStorage"],[161,26,171,24],[161,27,171,24,"default"],[161,34,171,24],[161,35,171,25,"setItem"],[161,42,171,32],[161,43,171,33],[161,54,171,44],[161,56,171,46,"JSON"],[161,60,171,50],[161,61,171,51,"stringify"],[161,70,171,60],[161,71,171,61,"data"],[161,75,171,65],[161,76,171,66,"user"],[161,80,171,70],[161,81,171,71],[161,82,171,72],[162,8,173,6,"setToken"],[162,16,173,14],[162,17,173,15,"data"],[162,21,173,19],[162,22,173,20,"access_token"],[162,34,173,32],[162,35,173,33],[163,8,174,6,"setUser"],[163,15,174,13],[163,16,174,14,"data"],[163,20,174,18],[163,21,174,19,"user"],[163,25,174,23],[163,26,174,24],[164,8,176,6,"console"],[164,15,176,13],[164,16,176,14,"log"],[164,19,176,17],[164,20,176,18],[164,51,176,49],[164,53,176,51,"data"],[164,57,176,55],[164,58,176,56,"user"],[164,62,176,60],[164,63,176,61,"id"],[164,65,176,63],[164,67,176,65],[164,81,176,79],[164,82,176,80],[165,8,178,6],[165,15,178,13],[166,10,178,15,"success"],[166,17,178,22],[166,19,178,24],[167,8,178,29],[167,9,178,30],[168,6,179,4],[168,7,179,5],[168,8,179,6],[168,15,179,13,"error"],[168,20,179,18],[168,22,179,20],[169,8,180,6,"console"],[169,15,180,13],[169,16,180,14,"error"],[169,21,180,19],[169,22,180,20],[169,36,180,34],[169,38,180,36,"error"],[169,43,180,41],[169,44,180,42],[170,8,181,6],[170,15,181,13],[171,10,181,15,"success"],[171,17,181,22],[171,19,181,24],[171,24,181,29],[172,10,181,31,"error"],[172,15,181,36],[172,17,181,38],[173,8,181,63],[173,9,181,64],[174,6,182,4],[174,7,182,5],[174,16,182,14],[175,8,183,6,"setIsLoading"],[175,20,183,18],[175,21,183,19],[175,26,183,24],[175,27,183,25],[176,6,184,4],[177,4,185,2],[177,5,185,3],[178,4,187,2],[178,10,187,8,"register"],[178,18,187,16],[178,21,187,19],[178,27,187,19,"register"],[178,28,187,26,"email"],[178,33,187,39],[178,35,187,41,"password"],[178,43,187,57],[178,45,187,59,"name"],[178,49,187,71],[178,54,187,123],[179,6,188,4],[179,10,188,8],[180,8,189,6,"setIsLoading"],[180,20,189,18],[180,21,189,19],[180,25,189,23],[180,26,189,24],[181,8,191,6],[181,14,191,12,"response"],[181,22,191,20],[181,25,191,23],[181,31,191,29,"fetch"],[181,36,191,34],[181,37,191,35],[181,40,191,38,"API_BASE_URL"],[181,52,191,50],[181,72,191,70],[181,74,191,72],[182,10,192,8,"method"],[182,16,192,14],[182,18,192,16],[182,24,192,22],[183,10,193,8,"credentials"],[183,21,193,19],[183,23,193,21],[183,32,193,30],[184,10,194,8,"headers"],[184,17,194,15],[184,19,194,17],[185,12,195,10],[185,26,195,24],[185,28,195,26],[186,10,196,8],[186,11,196,9],[187,10,197,8,"body"],[187,14,197,12],[187,16,197,14,"JSON"],[187,20,197,18],[187,21,197,19,"stringify"],[187,30,197,28],[187,31,197,29],[188,12,198,10,"email"],[188,17,198,15],[189,12,199,10,"password"],[189,20,199,18],[190,12,200,10,"name"],[191,10,201,8],[191,11,201,9],[192,8,202,6],[192,9,202,7],[192,10,202,8],[193,8,204,6],[193,14,204,12,"data"],[193,18,204,16],[193,21,204,19],[193,27,204,25,"response"],[193,35,204,33],[193,36,204,34,"json"],[193,40,204,38],[193,41,204,39],[193,42,204,40],[194,8,206,6],[194,12,206,10],[194,13,206,11,"response"],[194,21,206,19],[194,22,206,20,"ok"],[194,24,206,22],[194,26,206,24],[195,10,207,8],[195,17,207,15],[196,12,207,17,"success"],[196,19,207,24],[196,21,207,26],[196,26,207,31],[197,12,207,33,"error"],[197,17,207,38],[197,19,207,40,"data"],[197,23,207,44],[197,24,207,45,"detail"],[197,30,207,51],[197,34,207,55],[198,10,207,77],[198,11,207,78],[199,8,208,6],[201,8,210,6],[202,8,211,6],[202,14,211,12,"AsyncStorage"],[202,26,211,24],[202,27,211,24,"default"],[202,34,211,24],[202,35,211,25,"setItem"],[202,42,211,32],[202,43,211,33],[202,55,211,45],[202,57,211,47,"data"],[202,61,211,51],[202,62,211,52,"access_token"],[202,74,211,64],[202,75,211,65],[203,8,212,6],[203,14,212,12,"AsyncStorage"],[203,26,212,24],[203,27,212,24,"default"],[203,34,212,24],[203,35,212,25,"setItem"],[203,42,212,32],[203,43,212,33],[203,54,212,44],[203,56,212,46,"JSON"],[203,60,212,50],[203,61,212,51,"stringify"],[203,70,212,60],[203,71,212,61,"data"],[203,75,212,65],[203,76,212,66,"user"],[203,80,212,70],[203,81,212,71],[203,82,212,72],[204,8,214,6,"setToken"],[204,16,214,14],[204,17,214,15,"data"],[204,21,214,19],[204,22,214,20,"access_token"],[204,34,214,32],[204,35,214,33],[205,8,215,6,"setUser"],[205,15,215,13],[205,16,215,14,"data"],[205,20,215,18],[205,21,215,19,"user"],[205,25,215,23],[205,26,215,24],[206,8,217,6,"console"],[206,15,217,13],[206,16,217,14,"log"],[206,19,217,17],[206,20,217,18],[206,58,217,56],[206,60,217,58,"data"],[206,64,217,62],[206,65,217,63,"user"],[206,69,217,67],[206,70,217,68,"id"],[206,72,217,70],[206,74,217,72],[206,88,217,86],[206,89,217,87],[207,8,219,6],[207,15,219,13],[208,10,219,15,"success"],[208,17,219,22],[208,19,219,24],[209,8,219,29],[209,9,219,30],[210,6,220,4],[210,7,220,5],[210,8,220,6],[210,15,220,13,"error"],[210,20,220,18],[210,22,220,20],[211,8,221,6,"console"],[211,15,221,13],[211,16,221,14,"error"],[211,21,221,19],[211,22,221,20],[211,43,221,41],[211,45,221,43,"error"],[211,50,221,48],[211,51,221,49],[212,8,222,6],[212,15,222,13],[213,10,222,15,"success"],[213,17,222,22],[213,19,222,24],[213,24,222,29],[214,10,222,31,"error"],[214,15,222,36],[214,17,222,38],[215,8,222,63],[215,9,222,64],[216,6,223,4],[216,7,223,5],[216,16,223,14],[217,8,224,6,"setIsLoading"],[217,20,224,18],[217,21,224,19],[217,26,224,24],[217,27,224,25],[218,6,225,4],[219,4,226,2],[219,5,226,3],[220,4,228,2],[220,10,228,8,"loginWithGoogle"],[220,25,228,23],[220,28,228,26],[220,34,228,26,"loginWithGoogle"],[220,35,228,26],[220,40,228,85],[221,6,229,4],[221,10,229,8],[222,8,230,6],[223,8,231,6],[224,8,232,6],[224,14,232,12,"redirectUrl"],[224,25,232,23],[224,28,232,26,"encodeURIComponent"],[224,46,232,44],[224,47,232,45,"window"],[224,53,232,51],[224,54,232,52,"location"],[224,62,232,60],[224,63,232,61,"href"],[224,67,232,65],[224,68,232,66],[225,8,233,6],[225,14,233,12,"googleAuthUrl"],[225,27,233,25],[225,30,233,28],[225,74,233,72,"redirectUrl"],[225,85,233,83],[225,87,233,85],[227,8,235,6],[228,8,236,6,"window"],[228,14,236,12],[228,15,236,13,"open"],[228,19,236,17],[228,20,236,18,"googleAuthUrl"],[228,33,236,31],[228,35,236,33],[228,42,236,40],[228,43,236,41],[229,8,238,6],[229,15,238,13],[230,10,238,15,"success"],[230,17,238,22],[230,19,238,24],[231,8,238,29],[231,9,238,30],[232,6,239,4],[232,7,239,5],[232,8,239,6],[232,15,239,13,"error"],[232,20,239,18],[232,22,239,20],[233,8,240,6,"console"],[233,15,240,13],[233,16,240,14,"error"],[233,21,240,19],[233,22,240,20],[233,43,240,41],[233,45,240,43,"error"],[233,50,240,48],[233,51,240,49],[234,8,241,6],[234,15,241,13],[235,10,241,15,"success"],[235,17,241,22],[235,19,241,24],[235,24,241,29],[236,10,241,31,"error"],[236,15,241,36],[236,17,241,38],[237,8,241,60],[237,9,241,61],[238,6,242,4],[239,4,243,2],[239,5,243,3],[240,4,245,2],[240,10,245,8,"logout"],[240,16,245,14],[240,19,245,17],[240,25,245,17,"logout"],[240,26,245,17],[240,31,245,44],[241,6,246,4],[241,10,246,8],[242,8,247,6],[243,8,248,6],[243,12,248,10,"token"],[243,17,248,15],[243,19,248,17],[244,10,249,8],[244,16,249,14,"fetch"],[244,21,249,19],[244,22,249,20],[244,25,249,23,"API_BASE_URL"],[244,37,249,35],[244,55,249,53],[244,57,249,55],[245,12,250,10,"method"],[245,18,250,16],[245,20,250,18],[245,26,250,24],[246,12,251,10,"credentials"],[246,23,251,21],[246,25,251,23],[246,34,251,32],[247,12,252,10,"headers"],[247,19,252,17],[247,21,252,19],[248,14,253,12],[248,29,253,27],[248,31,253,29],[248,41,253,39,"token"],[248,46,253,44],[248,48,253,46],[249,14,254,12],[249,28,254,26],[249,30,254,28],[250,12,255,10],[251,10,256,8],[251,11,256,9],[251,12,256,10],[252,8,257,6],[253,6,258,4],[253,7,258,5],[253,8,258,6],[253,15,258,13,"error"],[253,20,258,18],[253,22,258,20],[254,8,259,6,"console"],[254,15,259,13],[254,16,259,14,"error"],[254,21,259,19],[254,22,259,20],[254,37,259,35],[254,39,259,37,"error"],[254,44,259,42],[254,45,259,43],[255,6,260,4],[255,7,260,5],[255,16,260,14],[256,8,261,6],[257,8,262,6],[257,14,262,12,"AsyncStorage"],[257,26,262,24],[257,27,262,24,"default"],[257,34,262,24],[257,35,262,25,"multiRemove"],[257,46,262,36],[257,47,262,37],[257,48,262,38],[257,60,262,50],[257,62,262,52],[257,73,262,63],[257,74,262,64],[257,75,262,65],[258,8,263,6,"setToken"],[258,16,263,14],[258,17,263,15],[258,21,263,19],[258,22,263,20],[259,8,264,6,"setUser"],[259,15,264,13],[259,16,264,14],[259,20,264,18],[259,21,264,19],[260,6,265,4],[261,4,266,2],[261,5,266,3],[262,4,268,2],[262,24,269,4],[262,28,269,4,"_reactJsxDevRuntime"],[262,47,269,4],[262,48,269,4,"jsxDEV"],[262,54,269,4],[262,56,269,5,"AuthContext"],[262,67,269,16],[262,68,269,17,"Provider"],[262,76,269,25],[263,6,270,6,"value"],[263,11,270,11],[263,13,270,13],[264,8,271,8,"user"],[264,12,271,12],[265,8,272,8,"token"],[265,13,272,13],[266,8,273,8,"isLoading"],[266,17,273,17],[267,8,274,8,"isAuthenticated"],[267,23,274,23],[268,8,275,8,"login"],[268,13,275,13],[269,8,276,8,"register"],[269,16,276,16],[270,8,277,8,"loginWithGoogle"],[270,23,277,23],[271,8,278,8,"logout"],[271,14,278,14],[272,8,279,8,"checkSession"],[273,6,280,6],[273,7,280,8],[274,6,280,8,"children"],[274,14,280,8],[274,16,282,7,"children"],[275,4,282,15],[276,6,282,15,"fileName"],[276,14,282,15],[276,16,282,15,"_jsxFileName"],[276,28,282,15],[277,6,282,15,"lineNumber"],[277,16,282,15],[278,6,282,15,"columnNumber"],[278,18,282,15],[279,4,282,15],[279,11,283,26],[279,12,283,27],[280,2,285,0],[280,3,285,1],[281,2,287,7],[281,8,287,13,"useAuth"],[281,15,287,20],[281,18,287,23,"useAuth"],[281,19,287,23],[281,24,287,46],[282,4,288,2],[282,10,288,8,"context"],[282,17,288,15],[282,20,288,18],[282,24,288,18,"useContext"],[282,30,288,28],[282,31,288,28,"useContext"],[282,41,288,28],[282,43,288,29,"AuthContext"],[282,54,288,40],[282,55,288,41],[283,4,289,2],[283,8,289,6,"context"],[283,15,289,13],[283,20,289,18,"undefined"],[283,29,289,27],[283,31,289,29],[284,6,290,4],[284,12,290,10],[284,16,290,14,"Error"],[284,21,290,19],[284,22,290,20],[284,67,290,65],[284,68,290,66],[285,4,291,2],[286,4,292,2],[286,11,292,9,"context"],[286,18,292,16],[287,2,293,0],[287,3,293,1],[288,0,293,2],[288,3]],"functionMap":{"names":["<global>","AuthProvider","useEffect$argument_0","checkExistingSession","Promise$argument_0","checkSession","login","register","loginWithGoogle","logout","useAuth"],"mappings":"AAA;4BC6B;YCQ;GDE;+BEE;0BCkD,6CD;GFU;uBIE;GJwC;gBKE;GLuC;mBME;GNuC;0BOE;GPe;iBQE;GRqB;CDmB;uBUE;CVM"},"hasCjsExports":false},"type":"js/module"}]}