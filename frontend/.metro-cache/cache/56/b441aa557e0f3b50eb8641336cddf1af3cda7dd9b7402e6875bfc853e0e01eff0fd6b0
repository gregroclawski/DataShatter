{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../errors/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"rg9G2hGSxUlgvvl94nwST8IJkQ8=","exportNames":["*"],"imports":1}},{"name":"../model/index.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":52,"index":104}}],"key":"CtBebnGS/4nZdZlVrl5RR9qrROU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"SemanticPreEncoder\", {\n    enumerable: true,\n    get: function () {\n      return SemanticPreEncoder;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _errorsIndexJs = require(_dependencyMap[2], \"../errors/index.js\");\n  var _modelIndexJs = require(_dependencyMap[3], \"../model/index.js\");\n  var SemanticPreEncoder = /*#__PURE__*/function () {\n    function SemanticPreEncoder() {\n      (0, _classCallCheck.default)(this, SemanticPreEncoder);\n    }\n    return (0, _createClass.default)(SemanticPreEncoder, null, [{\n      key: \"process\",\n      value: function process(tcModel, options) {\n        var gvl = tcModel.gvl;\n        if (!gvl) {\n          throw new _errorsIndexJs.EncodingError('Unable to encode TCModel without a GVL');\n        }\n        if (!gvl.isReady) {\n          throw new _errorsIndexJs.EncodingError('Unable to encode TCModel tcModel.gvl.readyPromise is not resolved');\n        }\n        tcModel = tcModel.clone();\n        tcModel.consentLanguage = gvl.language.toUpperCase();\n        if (options?.version > 0 && options?.version <= this.processor.length) {\n          tcModel.version = options.version;\n        } else {\n          /**\n           * this is equal to the latest or most current version\n           */\n          tcModel.version = this.processor.length;\n        }\n        var processorFunctionIndex = tcModel.version - 1;\n        if (!this.processor[processorFunctionIndex]) {\n          throw new _errorsIndexJs.EncodingError(`Invalid version: ${tcModel.version}`);\n        }\n        return this.processor[processorFunctionIndex](tcModel, gvl);\n      }\n    }]);\n  }();\n  SemanticPreEncoder.processor = [tcModel => tcModel, (tcModel, gvl) => {\n    /**\n     * in case this wasn't set previously.  This should filter out invalid\n     * purpose restrictions.\n     */\n    tcModel.publisherRestrictions.gvl = gvl;\n    /**\n     * Purpose 1 is never allowed to be true for legitimate interest\n     */\n    tcModel.purposeLegitimateInterests.unset(1);\n    /**\n     * If a Vendor does not declare a purpose for consent or legitimate\n     * interest they should not have a positive signal for it. This code\n     * removes positive signals created mistakingly.\n     */\n    var vectorToIntMap = new Map();\n    vectorToIntMap.set('legIntPurposes', tcModel.vendorLegitimateInterests);\n    vectorToIntMap.set('purposes', tcModel.vendorConsents);\n    vectorToIntMap.forEach((vector, gvlVendorKey) => {\n      vector.forEach((value, vendorId) => {\n        if (value) {\n          var vendor = gvl.vendors[vendorId];\n          if (!vendor || vendor.deletedDate) {\n            /**\n             * If the vendor doesn't exist, then they should not receive a\n             * positive signal\n             */\n            vector.unset(vendorId);\n          } else if (vendor[gvlVendorKey].length === 0) {\n            if (gvlVendorKey === 'legIntPurposes' && vendor['purposes'].length === 0 && vendor['legIntPurposes'].length === 0 && vendor['specialPurposes'].length > 0) {\n              /**\n               * Per June 2021 Policy change, Vendors declaring only Special Purposes must\n               * have their legitimate interest Vendor bit set if they have been disclosed.\n               * This empty block ensures their LI bit remains set\n               */\n            } else {\n              /**\n               * If the vendor does exist, but they haven't declared any\n               * purposes for this legal basis, then we need to see if they can\n               * possibly have the legal basis from their flexible purposes.\n               */\n              if (tcModel.isServiceSpecific) {\n                if (vendor.flexiblePurposes.length === 0) {\n                  /**\n                   * No flexible basis for any purposes, so we can safely remove\n                   * this vendor from the legal basis.\n                   */\n                  vector.unset(vendorId);\n                } else {\n                  /**\n                   * They have some flexible purposes, we should check for a\n                   * publisher restriction value that would enable this vendor to\n                   * have the override-preferred basis.\n                   */\n                  var restrictions = tcModel.publisherRestrictions.getRestrictions(vendorId);\n                  var isValid = false;\n                  for (var i = 0, len = restrictions.length; i < len && !isValid; i++) {\n                    /**\n                     * If this condition is true the loop will break.  If we are\n                     * dealing with the consent purposes ('purposes') and the\n                     * publisher restriction overrides to consent then it is\n                     * valid for the vendor to have a positive signal for\n                     * consent.  Likewise for legitimate interest purposes\n                     * ('legIntPurposes') and requiring legitimate interest.\n                     */\n                    isValid = restrictions[i].restrictionType === _modelIndexJs.RestrictionType.REQUIRE_CONSENT && gvlVendorKey === 'purposes' || restrictions[i].restrictionType === _modelIndexJs.RestrictionType.REQUIRE_LI && gvlVendorKey === 'legIntPurposes';\n                  }\n                  if (!isValid) {\n                    /**\n                     * if we came through the previous  loop without finding a\n                     * valid reasing: no overriding restrictions (changes in\n                     * legal basis) then it's not valid for this vendor to have\n                     * this legal basis.\n                     */\n                    vector.unset(vendorId);\n                  }\n                }\n              } else {\n                /**\n                 * This is a globally-scoped string so flexible purposes will not\n                 * be able to change this value because purposeRestrictions only\n                 * apply to service-specific strings.\n                 */\n                vector.unset(vendorId);\n              }\n            }\n          }\n        }\n      });\n    });\n    tcModel.vendorsDisclosed.set(gvl.vendors);\n    return tcModel;\n  }];\n});","lineCount":149,"map":[[12,2,3,0,"Object"],[12,8,3,0],[12,9,3,0,"defineProperty"],[12,23,3,0],[12,24,3,0,"exports"],[12,31,3,0],[13,4,3,0,"enumerable"],[13,14,3,0],[14,4,3,0,"get"],[14,7,3,0],[14,18,3,0,"get"],[14,19,3,0],[15,6,3,0],[15,13,3,0,"SemanticPreEncoder"],[15,31,3,0],[16,4,3,0],[17,2,3,0],[18,2,132,1],[18,6,132,1,"_babelRuntimeHelpersClassCallCheck"],[18,40,132,1],[18,43,132,1,"require"],[18,50,132,1],[18,51,132,1,"_dependencyMap"],[18,65,132,1],[19,2,132,1],[19,6,132,1,"_classCallCheck"],[19,21,132,1],[19,24,132,1,"_interopDefault"],[19,39,132,1],[19,40,132,1,"_babelRuntimeHelpersClassCallCheck"],[19,74,132,1],[20,2,132,1],[20,6,132,1,"_babelRuntimeHelpersCreateClass"],[20,37,132,1],[20,40,132,1,"require"],[20,47,132,1],[20,48,132,1,"_dependencyMap"],[20,62,132,1],[21,2,132,1],[21,6,132,1,"_createClass"],[21,18,132,1],[21,21,132,1,"_interopDefault"],[21,36,132,1],[21,37,132,1,"_babelRuntimeHelpersCreateClass"],[21,68,132,1],[22,2,1,0],[22,6,1,0,"_errorsIndexJs"],[22,20,1,0],[22,23,1,0,"require"],[22,30,1,0],[22,31,1,0,"_dependencyMap"],[22,45,1,0],[23,2,2,0],[23,6,2,0,"_modelIndexJs"],[23,19,2,0],[23,22,2,0,"require"],[23,29,2,0],[23,30,2,0,"_dependencyMap"],[23,44,2,0],[24,2,2,52],[24,6,3,13,"SemanticPreEncoder"],[24,24,3,31],[25,4,3,31],[25,13,3,31,"SemanticPreEncoder"],[25,32,3,31],[26,6,3,31],[26,10,3,31,"_classCallCheck"],[26,25,3,31],[26,26,3,31,"default"],[26,33,3,31],[26,41,3,31,"SemanticPreEncoder"],[26,59,3,31],[27,4,3,31],[28,4,3,31],[28,15,3,31,"_createClass"],[28,27,3,31],[28,28,3,31,"default"],[28,35,3,31],[28,37,3,31,"SemanticPreEncoder"],[28,55,3,31],[29,6,3,31,"key"],[29,9,3,31],[30,6,3,31,"value"],[30,11,3,31],[30,13,107,4],[30,22,107,11,"process"],[30,29,107,18,"process"],[30,30,107,19,"tcModel"],[30,37,107,26],[30,39,107,28,"options"],[30,46,107,35],[30,48,107,37],[31,8,108,8],[31,12,108,14,"gvl"],[31,15,108,17],[31,18,108,20,"tcModel"],[31,25,108,27],[31,26,108,28,"gvl"],[31,29,108,31],[32,8,109,8],[32,12,109,12],[32,13,109,13,"gvl"],[32,16,109,16],[32,18,109,18],[33,10,110,12],[33,16,110,18],[33,20,110,22,"EncodingError"],[33,34,110,35],[33,35,110,35,"EncodingError"],[33,48,110,35],[33,49,110,36],[33,89,110,76],[33,90,110,77],[34,8,111,8],[35,8,112,8],[35,12,112,12],[35,13,112,13,"gvl"],[35,16,112,16],[35,17,112,17,"isReady"],[35,24,112,24],[35,26,112,26],[36,10,113,12],[36,16,113,18],[36,20,113,22,"EncodingError"],[36,34,113,35],[36,35,113,35,"EncodingError"],[36,48,113,35],[36,49,113,36],[36,116,113,103],[36,117,113,104],[37,8,114,8],[38,8,115,8,"tcModel"],[38,15,115,15],[38,18,115,18,"tcModel"],[38,25,115,25],[38,26,115,26,"clone"],[38,31,115,31],[38,32,115,32],[38,33,115,33],[39,8,116,8,"tcModel"],[39,15,116,15],[39,16,116,16,"consentLanguage"],[39,31,116,31],[39,34,116,34,"gvl"],[39,37,116,37],[39,38,116,38,"language"],[39,46,116,46],[39,47,116,47,"toUpperCase"],[39,58,116,58],[39,59,116,59],[39,60,116,60],[40,8,117,8],[40,12,117,12,"options"],[40,19,117,19],[40,21,117,21,"version"],[40,28,117,28],[40,31,117,31],[40,32,117,32],[40,36,117,36,"options"],[40,43,117,43],[40,45,117,45,"version"],[40,52,117,52],[40,56,117,56],[40,60,117,60],[40,61,117,61,"processor"],[40,70,117,70],[40,71,117,71,"length"],[40,77,117,77],[40,79,117,79],[41,10,118,12,"tcModel"],[41,17,118,19],[41,18,118,20,"version"],[41,25,118,27],[41,28,118,30,"options"],[41,35,118,37],[41,36,118,38,"version"],[41,43,118,45],[42,8,119,8],[42,9,119,9],[42,15,120,13],[43,10,121,12],[44,0,122,0],[45,0,123,0],[46,10,124,12,"tcModel"],[46,17,124,19],[46,18,124,20,"version"],[46,25,124,27],[46,28,124,30],[46,32,124,34],[46,33,124,35,"processor"],[46,42,124,44],[46,43,124,45,"length"],[46,49,124,51],[47,8,125,8],[48,8,126,8],[48,12,126,14,"processorFunctionIndex"],[48,34,126,36],[48,37,126,39,"tcModel"],[48,44,126,46],[48,45,126,47,"version"],[48,52,126,54],[48,55,126,57],[48,56,126,58],[49,8,127,8],[49,12,127,12],[49,13,127,13],[49,17,127,17],[49,18,127,18,"processor"],[49,27,127,27],[49,28,127,28,"processorFunctionIndex"],[49,50,127,50],[49,51,127,51],[49,53,127,53],[50,10,128,12],[50,16,128,18],[50,20,128,22,"EncodingError"],[50,34,128,35],[50,35,128,35,"EncodingError"],[50,48,128,35],[50,49,128,36],[50,69,128,56,"tcModel"],[50,76,128,63],[50,77,128,64,"version"],[50,84,128,71],[50,86,128,73],[50,87,128,74],[51,8,129,8],[52,8,130,8],[52,15,130,15],[52,19,130,19],[52,20,130,20,"processor"],[52,29,130,29],[52,30,130,30,"processorFunctionIndex"],[52,52,130,52],[52,53,130,53],[52,54,130,54,"tcModel"],[52,61,130,61],[52,63,130,63,"gvl"],[52,66,130,66],[52,67,130,67],[53,6,131,4],[54,4,131,5],[55,2,131,5],[56,2,3,13,"SemanticPreEncoder"],[56,20,3,31],[56,21,4,11,"processor"],[56,30,4,20],[56,33,4,23],[56,34,5,9,"tcModel"],[56,41,5,16],[56,45,5,21,"tcModel"],[56,52,5,28],[56,54,6,8],[56,55,6,9,"tcModel"],[56,62,6,16],[56,64,6,18,"gvl"],[56,67,6,21],[56,72,6,26],[57,4,7,12],[58,0,8,0],[59,0,9,0],[60,0,10,0],[61,4,11,12,"tcModel"],[61,11,11,19],[61,12,11,20,"publisherRestrictions"],[61,33,11,41],[61,34,11,42,"gvl"],[61,37,11,45],[61,40,11,48,"gvl"],[61,43,11,51],[62,4,12,12],[63,0,13,0],[64,0,14,0],[65,4,15,12,"tcModel"],[65,11,15,19],[65,12,15,20,"purposeLegitimateInterests"],[65,38,15,46],[65,39,15,47,"unset"],[65,44,15,52],[65,45,15,53],[65,46,15,54],[65,47,15,55],[66,4,16,12],[67,0,17,0],[68,0,18,0],[69,0,19,0],[70,0,20,0],[71,4,21,12],[71,8,21,18,"vectorToIntMap"],[71,22,21,32],[71,25,21,35],[71,29,21,39,"Map"],[71,32,21,42],[71,33,21,43],[71,34,21,44],[72,4,22,12,"vectorToIntMap"],[72,18,22,26],[72,19,22,27,"set"],[72,22,22,30],[72,23,22,31],[72,39,22,47],[72,41,22,49,"tcModel"],[72,48,22,56],[72,49,22,57,"vendorLegitimateInterests"],[72,74,22,82],[72,75,22,83],[73,4,23,12,"vectorToIntMap"],[73,18,23,26],[73,19,23,27,"set"],[73,22,23,30],[73,23,23,31],[73,33,23,41],[73,35,23,43,"tcModel"],[73,42,23,50],[73,43,23,51,"vendorConsents"],[73,57,23,65],[73,58,23,66],[74,4,24,12,"vectorToIntMap"],[74,18,24,26],[74,19,24,27,"forEach"],[74,26,24,34],[74,27,24,35],[74,28,24,36,"vector"],[74,34,24,42],[74,36,24,44,"gvlVendorKey"],[74,48,24,56],[74,53,24,61],[75,6,25,16,"vector"],[75,12,25,22],[75,13,25,23,"forEach"],[75,20,25,30],[75,21,25,31],[75,22,25,32,"value"],[75,27,25,37],[75,29,25,39,"vendorId"],[75,37,25,47],[75,42,25,52],[76,8,26,20],[76,12,26,24,"value"],[76,17,26,29],[76,19,26,31],[77,10,27,24],[77,14,27,30,"vendor"],[77,20,27,36],[77,23,27,39,"gvl"],[77,26,27,42],[77,27,27,43,"vendors"],[77,34,27,50],[77,35,27,51,"vendorId"],[77,43,27,59],[77,44,27,60],[78,10,28,24],[78,14,28,28],[78,15,28,29,"vendor"],[78,21,28,35],[78,25,28,39,"vendor"],[78,31,28,45],[78,32,28,46,"deletedDate"],[78,43,28,57],[78,45,28,59],[79,12,29,28],[80,0,30,0],[81,0,31,0],[82,0,32,0],[83,12,33,28,"vector"],[83,18,33,34],[83,19,33,35,"unset"],[83,24,33,40],[83,25,33,41,"vendorId"],[83,33,33,49],[83,34,33,50],[84,10,34,24],[84,11,34,25],[84,17,35,29],[84,21,35,33,"vendor"],[84,27,35,39],[84,28,35,40,"gvlVendorKey"],[84,40,35,52],[84,41,35,53],[84,42,35,54,"length"],[84,48,35,60],[84,53,35,65],[84,54,35,66],[84,56,35,68],[85,12,36,28],[85,16,36,32,"gvlVendorKey"],[85,28,36,44],[85,33,36,49],[85,49,36,65],[85,53,36,69,"vendor"],[85,59,36,75],[85,60,36,76],[85,70,36,86],[85,71,36,87],[85,72,36,88,"length"],[85,78,36,94],[85,83,36,99],[85,84,36,100],[85,88,36,104,"vendor"],[85,94,36,110],[85,95,36,111],[85,111,36,127],[85,112,36,128],[85,113,36,129,"length"],[85,119,36,135],[85,124,36,140],[85,125,36,141],[85,129,36,145,"vendor"],[85,135,36,151],[85,136,36,152],[85,153,36,169],[85,154,36,170],[85,155,36,171,"length"],[85,161,36,177],[85,164,36,180],[85,165,36,181],[85,167,36,183],[86,14,37,32],[87,0,38,0],[88,0,39,0],[89,0,40,0],[90,0,41,0],[91,12,37,32],[91,13,42,29],[91,19,43,33],[92,14,44,32],[93,0,45,0],[94,0,46,0],[95,0,47,0],[96,0,48,0],[97,14,49,32],[97,18,49,36,"tcModel"],[97,25,49,43],[97,26,49,44,"isServiceSpecific"],[97,43,49,61],[97,45,49,63],[98,16,50,36],[98,20,50,40,"vendor"],[98,26,50,46],[98,27,50,47,"flexiblePurposes"],[98,43,50,63],[98,44,50,64,"length"],[98,50,50,70],[98,55,50,75],[98,56,50,76],[98,58,50,78],[99,18,51,40],[100,0,52,0],[101,0,53,0],[102,0,54,0],[103,18,55,40,"vector"],[103,24,55,46],[103,25,55,47,"unset"],[103,30,55,52],[103,31,55,53,"vendorId"],[103,39,55,61],[103,40,55,62],[104,16,56,36],[104,17,56,37],[104,23,57,41],[105,18,58,40],[106,0,59,0],[107,0,60,0],[108,0,61,0],[109,0,62,0],[110,18,63,40],[110,22,63,46,"restrictions"],[110,34,63,58],[110,37,63,61,"tcModel"],[110,44,63,68],[110,45,63,69,"publisherRestrictions"],[110,66,63,90],[110,67,63,91,"getRestrictions"],[110,82,63,106],[110,83,63,107,"vendorId"],[110,91,63,115],[110,92,63,116],[111,18,64,40],[111,22,64,44,"isValid"],[111,29,64,51],[111,32,64,54],[111,37,64,59],[112,18,65,40],[112,23,65,45],[112,27,65,49,"i"],[112,28,65,50],[112,31,65,53],[112,32,65,54],[112,34,65,56,"len"],[112,37,65,59],[112,40,65,62,"restrictions"],[112,52,65,74],[112,53,65,75,"length"],[112,59,65,81],[112,61,65,83,"i"],[112,62,65,84],[112,65,65,87,"len"],[112,68,65,90],[112,72,65,94],[112,73,65,95,"isValid"],[112,80,65,102],[112,82,65,104,"i"],[112,83,65,105],[112,85,65,107],[112,87,65,109],[113,20,66,44],[114,0,67,0],[115,0,68,0],[116,0,69,0],[117,0,70,0],[118,0,71,0],[119,0,72,0],[120,0,73,0],[121,20,74,44,"isValid"],[121,27,74,51],[121,30,74,56,"restrictions"],[121,42,74,68],[121,43,74,69,"i"],[121,44,74,70],[121,45,74,71],[121,46,74,72,"restrictionType"],[121,61,74,87],[121,66,74,92,"RestrictionType"],[121,79,74,107],[121,80,74,107,"RestrictionType"],[121,95,74,107],[121,96,74,108,"REQUIRE_CONSENT"],[121,111,74,123],[121,115,75,48,"gvlVendorKey"],[121,127,75,60],[121,132,75,65],[121,142,75,75],[121,146,76,49,"restrictions"],[121,158,76,61],[121,159,76,62,"i"],[121,160,76,63],[121,161,76,64],[121,162,76,65,"restrictionType"],[121,177,76,80],[121,182,76,85,"RestrictionType"],[121,195,76,100],[121,196,76,100,"RestrictionType"],[121,211,76,100],[121,212,76,101,"REQUIRE_LI"],[121,222,76,111],[121,226,77,52,"gvlVendorKey"],[121,238,77,64],[121,243,77,69],[121,259,77,87],[122,18,78,40],[123,18,79,40],[123,22,79,44],[123,23,79,45,"isValid"],[123,30,79,52],[123,32,79,54],[124,20,80,44],[125,0,81,0],[126,0,82,0],[127,0,83,0],[128,0,84,0],[129,0,85,0],[130,20,86,44,"vector"],[130,26,86,50],[130,27,86,51,"unset"],[130,32,86,56],[130,33,86,57,"vendorId"],[130,41,86,65],[130,42,86,66],[131,18,87,40],[132,16,88,36],[133,14,89,32],[133,15,89,33],[133,21,90,37],[134,16,91,36],[135,0,92,0],[136,0,93,0],[137,0,94,0],[138,0,95,0],[139,16,96,36,"vector"],[139,22,96,42],[139,23,96,43,"unset"],[139,28,96,48],[139,29,96,49,"vendorId"],[139,37,96,57],[139,38,96,58],[140,14,97,32],[141,12,98,28],[142,10,99,24],[143,8,100,20],[144,6,101,16],[144,7,101,17],[144,8,101,18],[145,4,102,12],[145,5,102,13],[145,6,102,14],[146,4,103,12,"tcModel"],[146,11,103,19],[146,12,103,20,"vendorsDisclosed"],[146,28,103,36],[146,29,103,37,"set"],[146,32,103,40],[146,33,103,41,"gvl"],[146,36,103,44],[146,37,103,45,"vendors"],[146,44,103,52],[146,45,103,53],[147,4,104,12],[147,11,104,19,"tcModel"],[147,18,104,26],[148,2,105,8],[148,3,105,9],[148,4,106,5],[149,0,106,5],[149,3]],"functionMap":{"names":["<global>","SemanticPreEncoder","<anonymous>","vectorToIntMap.forEach$argument_0","vector.forEach$argument_0","process"],"mappings":"AAA;OCE;QCE,oBD;QCC;mCCkB;+BCC;iBD4E;aDC;SDG;IIE;KJwB;CDC"},"hasCjsExports":false},"type":"js/module"}]}