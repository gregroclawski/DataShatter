{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  const ZoneProvider = ({\n    children\n  }) => {\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Initialize with GameContext data if available\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('🗺️ Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('🗺️ No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n\n        // Get the required kills for current level from zone data\n        const currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        const requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : 1000; // fallback to 1000\n\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= requiredKills) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":247,"map":[[13,2,47,0,"Object"],[13,8,47,0],[13,9,47,0,"defineProperty"],[13,23,47,0],[13,24,47,0,"exports"],[13,31,47,0],[14,4,47,0,"enumerable"],[14,14,47,0],[15,4,47,0,"get"],[15,7,47,0],[15,18,47,0,"get"],[15,19,47,0],[16,6,47,0],[16,13,47,0,"useZone"],[16,20,47,0],[17,4,47,0],[18,2,47,0],[19,2,55,0,"Object"],[19,8,55,0],[19,9,55,0,"defineProperty"],[19,23,55,0],[19,24,55,0,"exports"],[19,31,55,0],[20,4,55,0,"enumerable"],[20,14,55,0],[21,4,55,0,"get"],[21,7,55,0],[21,18,55,0,"get"],[21,19,55,0],[22,6,55,0],[22,13,55,0,"ZoneProvider"],[22,25,55,0],[23,4,55,0],[24,2,55,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_dataZoneData"],[27,19,2,0],[27,22,2,0,"require"],[27,29,2,0],[27,30,2,0,"_dependencyMap"],[27,44,2,0],[28,2,3,0],[28,6,3,0,"_GameContext"],[28,18,3,0],[28,21,3,0,"require"],[28,28,3,0],[28,29,3,0,"_dependencyMap"],[28,43,3,0],[29,2,3,40],[29,6,3,40,"_reactJsxDevRuntime"],[29,25,3,40],[29,28,3,40,"require"],[29,35,3,40],[29,36,3,40,"_dependencyMap"],[29,50,3,40],[30,2,45,0],[30,8,45,6,"ZoneContext"],[30,19,45,17],[30,35,45,20],[30,39,45,20,"createContext"],[30,45,45,33],[30,46,45,33,"createContext"],[30,59,45,33],[30,61,45,63,"undefined"],[30,70,45,72],[30,71,45,73],[31,2,47,7],[31,8,47,13,"useZone"],[31,15,47,20],[31,18,47,23,"useZone"],[31,19,47,23],[31,24,47,29],[32,4,48,2],[32,10,48,8,"context"],[32,17,48,15],[32,20,48,18],[32,24,48,18,"useContext"],[32,30,48,28],[32,31,48,28,"useContext"],[32,41,48,28],[32,43,48,29,"ZoneContext"],[32,54,48,40],[32,55,48,41],[33,4,49,2],[33,8,49,6],[33,9,49,7,"context"],[33,16,49,14],[33,18,49,16],[34,6,50,4],[34,12,50,10],[34,16,50,14,"Error"],[34,21,50,19],[34,22,50,20],[34,66,50,64],[34,67,50,65],[35,4,51,2],[36,4,52,2],[36,11,52,9,"context"],[36,18,52,16],[37,2,53,0],[37,3,53,1],[38,2,55,7],[38,8,55,13,"ZoneProvider"],[38,20,55,25],[38,23,55,28,"ZoneProvider"],[38,24,55,29],[39,4,55,31,"children"],[40,2,55,65],[40,3,55,66],[40,8,55,71],[41,4,56,2],[41,10,56,8],[42,6,56,10,"gameState"],[42,15,56,19],[43,6,56,21,"updateZoneProgress"],[44,4,56,40],[44,5,56,41],[44,8,56,44],[44,12,56,44,"useGame"],[44,24,56,51],[44,25,56,51,"useGame"],[44,32,56,51],[44,34,56,52],[44,35,56,53],[46,4,58,2],[47,4,59,2],[47,10,59,8],[47,11,59,9,"currentZone"],[47,22,59,20],[47,24,59,22,"setCurrentZone"],[47,38,59,36],[47,39,59,37],[47,42,59,40],[47,46,59,40,"useState"],[47,52,59,48],[47,53,59,48,"useState"],[47,61,59,48],[47,63,59,62,"ZONES"],[47,76,59,67],[47,77,59,67,"ZONES"],[47,82,59,67],[47,83,59,68],[47,84,59,69],[47,85,59,70],[47,86,59,71],[48,4,60,2],[48,10,60,8],[48,11,60,9,"currentZoneLevel"],[48,27,60,25],[48,29,60,27,"setCurrentZoneLevel"],[48,48,60,46],[48,49,60,47],[48,52,60,50],[48,56,60,50,"useState"],[48,62,60,58],[48,63,60,58,"useState"],[48,71,60,58],[48,73,60,77,"ZONES"],[48,86,60,82],[48,87,60,82,"ZONES"],[48,92,60,82],[48,93,60,83],[48,94,60,84],[48,95,60,85],[48,97,60,87,"levels"],[48,103,60,93],[48,104,60,94],[48,105,60,95],[48,106,60,96],[48,110,60,100],[48,114,60,104],[48,115,60,105],[49,4,61,2],[49,10,61,8],[49,11,61,9,"zoneProgress"],[49,23,61,21],[49,25,61,23,"setZoneProgress"],[49,40,61,38],[49,41,61,39],[49,44,61,42],[49,48,61,42,"useState"],[49,54,61,50],[49,55,61,50,"useState"],[49,63,61,50],[49,65,61,81],[49,71,61,87],[50,6,62,4],[51,6,63,4],[51,12,63,10,"savedProgress"],[51,25,63,23],[51,28,63,26,"gameState"],[51,37,63,35],[51,39,63,37,"zoneProgress"],[51,51,63,49],[52,6,64,4],[52,10,64,8,"savedProgress"],[52,23,64,21],[52,27,64,25,"Object"],[52,33,64,31],[52,34,64,32,"keys"],[52,38,64,36],[52,39,64,37,"savedProgress"],[52,52,64,50],[52,53,64,51],[52,54,64,52,"length"],[52,60,64,58],[52,63,64,61],[52,64,64,62],[52,66,64,64],[53,8,65,6,"console"],[53,15,65,13],[53,16,65,14,"log"],[53,19,65,17],[53,20,65,18],[53,54,65,52],[53,56,65,54,"savedProgress"],[53,69,65,67],[53,70,65,68],[54,8,66,6],[54,15,66,13,"savedProgress"],[54,28,66,26],[55,6,67,4],[55,7,67,5],[55,13,67,11],[56,8,68,6,"console"],[56,15,68,13],[56,16,68,14,"log"],[56,19,68,17],[56,20,68,18],[56,64,68,62],[56,65,68,63],[57,8,69,6],[57,15,69,13],[58,10,69,15],[58,11,69,16],[58,13,69,18],[59,12,69,20,"zoneId"],[59,18,69,26],[59,20,69,28],[59,21,69,29],[60,12,69,31,"currentLevel"],[60,24,69,43],[60,26,69,45],[60,27,69,46],[61,12,69,48,"killsInLevel"],[61,24,69,60],[61,26,69,62],[61,27,69,63],[62,12,69,65,"completed"],[62,21,69,74],[62,23,69,76],[63,10,69,82],[64,8,69,84],[64,9,69,85],[65,6,70,4],[66,4,71,2],[66,5,71,3],[66,6,71,4],[68,4,73,2],[69,4,74,2],[69,8,74,2,"useEffect"],[69,14,74,11],[69,15,74,11,"useEffect"],[69,24,74,11],[69,26,74,12],[69,32,74,18],[70,6,75,4],[70,10,75,8,"gameState"],[70,19,75,17],[70,21,75,19,"zoneProgress"],[70,33,75,31],[70,37,75,35,"Object"],[70,43,75,41],[70,44,75,42,"keys"],[70,48,75,46],[70,49,75,47,"gameState"],[70,58,75,56],[70,59,75,57,"zoneProgress"],[70,71,75,69],[70,72,75,70],[70,73,75,71,"length"],[70,79,75,77],[70,82,75,80],[70,83,75,81],[70,85,75,83],[71,8,76,6,"console"],[71,15,76,13],[71,16,76,14,"log"],[71,19,76,17],[71,20,76,18],[71,64,76,62],[71,66,76,64,"gameState"],[71,75,76,73],[71,76,76,74,"zoneProgress"],[71,88,76,86],[71,89,76,87],[72,8,77,6,"setZoneProgress"],[72,23,77,21],[72,24,77,22,"gameState"],[72,33,77,31],[72,34,77,32,"zoneProgress"],[72,46,77,44],[72,47,77,45],[73,6,78,4],[74,4,79,2],[74,5,79,3],[74,7,79,5],[74,8,79,6,"gameState"],[74,17,79,15],[74,19,79,17,"zoneProgress"],[74,31,79,29],[74,32,79,30],[74,33,79,31],[76,4,81,2],[77,4,82,2],[77,8,82,2,"useEffect"],[77,14,82,11],[77,15,82,11,"useEffect"],[77,24,82,11],[77,26,82,12],[77,32,82,18],[78,6,83,4],[78,10,83,8,"gameState"],[78,19,83,17],[78,21,83,19,"ninja"],[78,26,83,24],[78,28,83,26],[79,8,84,6],[79,14,84,12,"recommendedZone"],[79,29,84,27],[79,32,84,30],[79,36,84,30,"getZoneByLevel"],[79,49,84,44],[79,50,84,44,"getZoneByLevel"],[79,64,84,44],[79,66,84,45,"gameState"],[79,75,84,54],[79,76,84,55,"ninja"],[79,81,84,60],[79,82,84,61,"level"],[79,87,84,66],[79,88,84,67],[80,8,85,6],[80,12,85,10,"recommendedZone"],[80,27,85,25],[80,31,85,29],[80,32,85,30,"currentZone"],[80,43,85,41],[80,45,85,43],[81,10,86,8,"setCurrentZone"],[81,24,86,22],[81,25,86,23,"recommendedZone"],[81,40,86,38],[81,41,86,39],[82,10,87,8,"setCurrentZoneLevel"],[82,29,87,27],[82,30,87,28,"recommendedZone"],[82,45,87,43],[82,46,87,44,"levels"],[82,52,87,50],[82,53,87,51],[82,54,87,52],[82,55,87,53],[82,56,87,54],[83,8,88,6],[84,6,89,4],[85,4,90,2],[85,5,90,3],[85,7,90,5],[85,8,90,6,"gameState"],[85,17,90,15],[85,19,90,17,"ninja"],[85,24,90,22],[85,26,90,24,"level"],[85,31,90,29],[85,32,90,30],[85,33,90,31],[87,4,92,2],[88,4,93,2],[88,10,93,8,"selectZone"],[88,20,93,18],[88,23,93,21,"selectZone"],[88,24,93,22,"zoneId"],[88,30,93,36],[88,32,93,38,"levelNumber"],[88,43,93,57],[88,48,93,71],[89,6,94,4],[89,12,94,10,"zone"],[89,16,94,14],[89,19,94,17,"ZONES"],[89,32,94,22],[89,33,94,22,"ZONES"],[89,38,94,22],[89,39,94,23,"find"],[89,43,94,27],[89,44,94,28,"z"],[89,45,94,29],[89,49,94,33,"z"],[89,50,94,34],[89,51,94,35,"id"],[89,53,94,37],[89,58,94,42,"zoneId"],[89,64,94,48],[89,65,94,49],[90,6,95,4],[90,10,95,8],[90,11,95,9,"zone"],[90,15,95,13],[90,19,95,17],[90,20,95,18],[90,24,95,18,"isZoneUnlocked"],[90,37,95,32],[90,38,95,32,"isZoneUnlocked"],[90,52,95,32],[90,54,95,33,"zoneId"],[90,60,95,39],[90,62,95,41,"zoneProgress"],[90,74,95,53],[90,75,95,54],[90,77,95,56],[91,8,96,6,"console"],[91,15,96,13],[91,16,96,14,"log"],[91,19,96,17],[91,20,96,18],[91,30,96,28,"zoneId"],[91,36,96,34],[91,58,96,56],[91,59,96,57],[92,8,97,6],[92,15,97,13],[92,20,97,18],[93,6,98,4],[94,6,100,4],[94,12,100,10,"level"],[94,17,100,15],[94,20,100,18,"zone"],[94,24,100,22],[94,25,100,23,"levels"],[94,31,100,29],[94,32,100,30,"levelNumber"],[94,43,100,41],[94,46,100,44],[94,47,100,45],[94,48,100,46],[95,6,101,4],[95,10,101,8],[95,11,101,9,"level"],[95,16,101,14],[95,18,101,16],[96,8,102,6,"console"],[96,15,102,13],[96,16,102,14,"log"],[96,19,102,17],[96,20,102,18],[96,31,102,29,"levelNumber"],[96,42,102,40],[96,64,102,62,"zoneId"],[96,70,102,68],[96,72,102,70],[96,73,102,71],[97,8,103,6],[97,15,103,13],[97,20,103,18],[98,6,104,4],[99,6,106,4,"setCurrentZone"],[99,20,106,18],[99,21,106,19,"zone"],[99,25,106,23],[99,26,106,24],[100,6,107,4,"setCurrentZoneLevel"],[100,25,107,23],[100,26,107,24,"level"],[100,31,107,29],[100,32,107,30],[101,6,108,4,"console"],[101,13,108,11],[101,14,108,12,"log"],[101,17,108,15],[101,18,108,16],[101,34,108,32,"zone"],[101,38,108,36],[101,39,108,37,"name"],[101,43,108,41],[101,55,108,53,"levelNumber"],[101,66,108,64],[101,68,108,66],[101,69,108,67],[102,6,109,4],[102,13,109,11],[102,17,109,15],[103,4,110,2],[103,5,110,3],[105,4,112,2],[106,4,113,2],[106,10,113,8,"getZoneProgress"],[106,25,113,23],[106,28,113,27,"zoneId"],[106,34,113,41],[106,38,113,67],[107,6,114,4],[107,13,114,11,"zoneProgress"],[107,25,114,23],[107,26,114,24,"zoneId"],[107,32,114,30],[107,33,114,31],[107,37,114,35],[107,41,114,39],[108,4,115,2],[108,5,115,3],[110,4,117,2],[111,4,118,2],[111,10,118,8,"spawnZoneEnemy"],[111,24,118,22],[111,27,118,25,"spawnZoneEnemy"],[111,28,118,25],[111,33,118,52],[112,6,119,4],[112,10,119,8],[112,11,119,9,"currentZone"],[112,22,119,20],[112,26,119,24],[112,27,119,25,"currentZoneLevel"],[112,43,119,41],[112,45,119,43],[113,8,120,6,"console"],[113,15,120,13],[113,16,120,14,"log"],[113,19,120,17],[113,20,120,18],[113,65,120,63],[113,66,120,64],[114,8,121,6],[114,15,121,13],[114,19,121,17],[115,6,122,4],[117,6,124,4],[118,6,125,4],[118,12,125,10,"enemyTypeIds"],[118,24,125,22],[118,27,125,25,"currentZoneLevel"],[118,43,125,41],[118,44,125,42,"enemyTypes"],[118,54,125,52],[119,6,126,4],[119,12,126,10,"randomEnemyTypeId"],[119,29,126,27],[119,32,126,30,"enemyTypeIds"],[119,44,126,42],[119,45,126,43,"Math"],[119,49,126,47],[119,50,126,48,"floor"],[119,55,126,53],[119,56,126,54,"Math"],[119,60,126,58],[119,61,126,59,"random"],[119,67,126,65],[119,68,126,66],[119,69,126,67],[119,72,126,70,"enemyTypeIds"],[119,84,126,82],[119,85,126,83,"length"],[119,91,126,89],[119,92,126,90],[119,93,126,91],[120,6,127,4],[120,12,127,10,"enemyType"],[120,21,127,19],[120,24,127,22,"ENEMY_TYPES"],[120,37,127,33],[120,38,127,33,"ENEMY_TYPES"],[120,49,127,33],[120,50,127,34,"randomEnemyTypeId"],[120,67,127,51],[120,68,127,52],[121,6,129,4],[121,10,129,8],[121,11,129,9,"enemyType"],[121,20,129,18],[121,22,129,20],[122,8,130,6,"console"],[122,15,130,13],[122,16,130,14,"log"],[122,19,130,17],[122,20,130,18],[122,36,130,34,"randomEnemyTypeId"],[122,53,130,51],[122,65,130,63],[122,66,130,64],[123,8,131,6],[123,15,131,13],[123,19,131,17],[124,6,132,4],[126,6,134,4],[127,6,135,4],[127,12,135,10,"scaledStats"],[127,23,135,21],[127,26,135,24],[127,30,135,24,"calculateEnemyStats"],[127,43,135,43],[127,44,135,43,"calculateEnemyStats"],[127,63,135,43],[127,65,135,44,"enemyType"],[127,74,135,53],[127,76,135,55,"currentZoneLevel"],[127,92,135,71],[127,94,135,73,"currentZone"],[127,105,135,84],[127,106,135,85,"id"],[127,108,135,87],[127,109,135,88],[129,6,137,4],[130,6,138,4],[130,12,138,10,"enemy"],[130,17,138,29],[130,20,138,32],[131,8,139,6,"id"],[131,10,139,8],[131,12,139,10],[131,15,139,13,"randomEnemyTypeId"],[131,32,139,30],[131,36,139,34,"Date"],[131,40,139,38],[131,41,139,39,"now"],[131,44,139,42],[131,45,139,43],[131,46,139,44],[131,50,139,48,"Math"],[131,54,139,52],[131,55,139,53,"random"],[131,61,139,59],[131,62,139,60],[131,63,139,61],[131,65,139,63],[132,8,140,6,"typeId"],[132,14,140,12],[132,16,140,14,"randomEnemyTypeId"],[132,33,140,31],[133,8,141,6,"name"],[133,12,141,10],[133,14,141,12,"enemyType"],[133,23,141,21],[133,24,141,22,"name"],[133,28,141,26],[134,8,142,6,"icon"],[134,12,142,10],[134,14,142,12,"enemyType"],[134,23,142,21],[134,24,142,22,"icon"],[134,28,142,26],[135,8,143,6,"hp"],[135,10,143,8],[135,12,143,10,"scaledStats"],[135,23,143,21],[135,24,143,22,"hp"],[135,26,143,24],[136,8,144,6,"maxHP"],[136,13,144,11],[136,15,144,13,"scaledStats"],[136,26,144,24],[136,27,144,25,"hp"],[136,29,144,27],[137,8,145,6,"attack"],[137,14,145,12],[137,16,145,14,"scaledStats"],[137,27,145,25],[137,28,145,26,"attack"],[137,34,145,32],[138,8,146,6,"xp"],[138,10,146,8],[138,12,146,10,"scaledStats"],[138,23,146,21],[138,24,146,22,"xp"],[138,26,146,24],[139,8,147,6,"resistances"],[139,19,147,17],[139,21,147,19,"scaledStats"],[139,32,147,30],[139,33,147,31,"resistances"],[139,44,147,42],[140,8,148,6,"position"],[140,16,148,14],[140,18,148,16],[141,10,149,8,"x"],[141,11,149,9],[141,13,149,11,"Math"],[141,17,149,15],[141,18,149,16,"random"],[141,24,149,22],[141,25,149,23],[141,26,149,24],[141,29,149,27],[141,32,149,30],[141,35,149,33],[141,37,149,35],[142,10,149,37],[143,10,150,8,"y"],[143,11,150,9],[143,13,150,11,"Math"],[143,17,150,15],[143,18,150,16,"random"],[143,24,150,22],[143,25,150,23],[143,26,150,24],[143,29,150,27],[143,32,150,30],[143,35,150,33],[144,8,151,6],[144,9,151,7],[145,8,152,6,"lastDamaged"],[145,19,152,17],[145,21,152,19],[146,6,153,4],[146,7,153,5],[147,6,155,4,"console"],[147,13,155,11],[147,14,155,12,"log"],[147,17,155,15],[147,18,155,16],[147,32,155,30,"enemy"],[147,37,155,35],[147,38,155,36,"name"],[147,42,155,40],[147,47,155,45,"enemy"],[147,52,155,50],[147,53,155,51,"hp"],[147,55,155,53],[147,63,155,61,"enemy"],[147,68,155,66],[147,69,155,67,"xp"],[147,71,155,69],[147,82,155,80,"currentZone"],[147,93,155,91],[147,94,155,92,"name"],[147,98,155,96],[147,100,155,98],[147,101,155,99],[148,6,156,4],[148,13,156,11,"enemy"],[148,18,156,16],[149,4,157,2],[149,5,157,3],[151,4,159,2],[152,4,160,2],[152,10,160,8,"recordEnemyKill"],[152,25,160,23],[152,28,160,27,"enemy"],[152,33,160,46],[152,37,160,51],[153,6,161,4],[153,10,161,8],[153,11,161,9,"currentZone"],[153,22,161,20],[153,26,161,24],[153,27,161,25,"currentZoneLevel"],[153,43,161,41],[153,45,161,43],[154,6,163,4,"console"],[154,13,163,11],[154,14,163,12,"log"],[154,17,163,15],[154,18,163,16],[154,24,163,22,"enemy"],[154,29,163,27],[154,30,163,28,"name"],[154,34,163,32],[154,47,163,45,"enemy"],[154,52,163,50],[154,53,163,51,"xp"],[154,55,163,53],[154,60,163,58],[154,61,163,59],[155,6,165,4,"setZoneProgress"],[155,21,165,19],[155,22,165,20,"prev"],[155,26,165,24],[155,30,165,28],[156,8,166,6],[156,14,166,12,"newProgress"],[156,25,166,23],[156,28,166,26],[157,10,166,28],[157,13,166,31,"prev"],[158,8,166,36],[158,9,166,37],[159,8,167,6],[159,14,167,12,"zoneId"],[159,20,167,18],[159,23,167,21,"currentZone"],[159,34,167,32],[159,35,167,33,"id"],[159,37,167,35],[160,8,169,6],[160,12,169,10],[160,13,169,11,"newProgress"],[160,24,169,22],[160,25,169,23,"zoneId"],[160,31,169,29],[160,32,169,30],[160,34,169,32],[161,10,170,8,"newProgress"],[161,21,170,19],[161,22,170,20,"zoneId"],[161,28,170,26],[161,29,170,27],[161,32,170,30],[162,12,171,10,"zoneId"],[162,18,171,16],[163,12,172,10,"currentLevel"],[163,24,172,22],[163,26,172,24],[163,27,172,25],[164,12,173,10,"killsInLevel"],[164,24,173,22],[164,26,173,24],[164,27,173,25],[165,12,174,10,"completed"],[165,21,174,19],[165,23,174,21],[166,10,175,8],[166,11,175,9],[167,8,176,6],[168,8,178,6],[168,14,178,12,"progress"],[168,22,178,20],[168,25,178,23],[169,10,178,25],[169,13,178,28,"newProgress"],[169,24,178,39],[169,25,178,40,"zoneId"],[169,31,178,46],[170,8,178,48],[170,9,178,49],[171,8,179,6,"progress"],[171,16,179,14],[171,17,179,15,"killsInLevel"],[171,29,179,27],[171,33,179,31],[171,34,179,32],[173,8,181,6],[174,8,182,6],[174,14,182,12,"currentZoneLevel"],[174,30,182,28],[174,33,182,31,"currentZone"],[174,44,182,42],[174,45,182,43,"levels"],[174,51,182,49],[174,52,182,50,"progress"],[174,60,182,58],[174,61,182,59,"currentLevel"],[174,73,182,71],[174,76,182,74],[174,77,182,75],[174,78,182,76],[175,8,183,6],[175,14,183,12,"requiredKills"],[175,27,183,25],[175,30,183,28,"currentZoneLevel"],[175,46,183,44],[175,49,183,47,"currentZoneLevel"],[175,65,183,63],[175,66,183,64,"requiredKills"],[175,79,183,77],[175,82,183,80],[175,86,183,84],[175,87,183,85],[175,88,183,86],[177,8,185,6,"console"],[177,15,185,13],[177,16,185,14,"log"],[177,19,185,17],[177,20,185,18],[177,31,185,29,"zoneId"],[177,37,185,35],[177,47,185,45,"progress"],[177,55,185,53],[177,56,185,54,"currentLevel"],[177,68,185,66],[177,73,185,71,"progress"],[177,81,185,79],[177,82,185,80,"killsInLevel"],[177,94,185,92],[177,98,185,96,"requiredKills"],[177,111,185,109],[177,119,185,117],[177,120,185,118],[179,8,187,6],[180,8,188,6],[180,12,188,10,"progress"],[180,20,188,18],[180,21,188,19,"killsInLevel"],[180,33,188,31],[180,37,188,35,"requiredKills"],[180,50,188,48],[180,52,188,50],[181,10,189,8,"console"],[181,17,189,15],[181,18,189,16,"log"],[181,21,189,19],[181,22,189,20],[181,34,189,32,"progress"],[181,42,189,40],[181,43,189,41,"currentLevel"],[181,55,189,53],[181,72,189,70,"currentZone"],[181,83,189,81],[181,84,189,82,"name"],[181,88,189,86],[181,91,189,89],[181,92,189,90],[183,10,191,8],[184,10,192,8],[184,14,192,12,"progress"],[184,22,192,20],[184,23,192,21,"currentLevel"],[184,35,192,33],[184,38,192,36],[184,39,192,37],[184,41,192,39],[185,12,193,10,"progress"],[185,20,193,18],[185,21,193,19,"currentLevel"],[185,33,193,31],[185,37,193,35],[185,38,193,36],[186,12,194,10,"progress"],[186,20,194,18],[186,21,194,19,"killsInLevel"],[186,33,194,31],[186,36,194,34],[186,37,194,35],[187,12,195,10,"console"],[187,19,195,17],[187,20,195,18,"log"],[187,23,195,21],[187,24,195,22],[187,48,195,46,"progress"],[187,56,195,54],[187,57,195,55,"currentLevel"],[187,69,195,67],[187,71,195,69],[187,72,195,70],[189,12,197,10],[190,12,198,10],[190,18,198,16,"nextLevel"],[190,27,198,25],[190,30,198,28,"currentZone"],[190,41,198,39],[190,42,198,40,"levels"],[190,48,198,46],[190,49,198,47,"progress"],[190,57,198,55],[190,58,198,56,"currentLevel"],[190,70,198,68],[190,73,198,71],[190,74,198,72],[190,75,198,73],[191,12,199,10],[191,16,199,14,"nextLevel"],[191,25,199,23],[191,27,199,25],[192,14,200,12,"setCurrentZoneLevel"],[192,33,200,31],[192,34,200,32,"nextLevel"],[192,43,200,41],[192,44,200,42],[193,12,201,10],[194,10,202,8],[194,11,202,9],[194,17,202,15],[195,12,203,10],[196,12,204,10,"progress"],[196,20,204,18],[196,21,204,19,"completed"],[196,30,204,28],[196,33,204,31],[196,37,204,35],[197,12,205,10,"console"],[197,19,205,17],[197,20,205,18,"log"],[197,23,205,21],[197,24,205,22],[197,35,205,33,"currentZone"],[197,46,205,44],[197,47,205,45,"name"],[197,51,205,49],[197,84,205,82],[197,85,205,83],[198,10,206,8],[199,8,207,6],[200,8,209,6,"newProgress"],[200,19,209,17],[200,20,209,18,"zoneId"],[200,26,209,24],[200,27,209,25],[200,30,209,28,"progress"],[200,38,209,36],[202,8,211,6],[203,8,212,6,"setTimeout"],[203,18,212,16],[203,19,212,17],[203,25,212,23],[204,10,213,8,"console"],[204,17,213,15],[204,18,213,16,"log"],[204,21,213,19],[204,22,213,20],[204,67,213,65],[204,69,213,67,"newProgress"],[204,80,213,78],[204,81,213,79],[205,10,214,8,"updateZoneProgress"],[205,28,214,26],[205,29,214,27,"newProgress"],[205,40,214,38],[205,41,214,39],[206,8,215,6],[206,9,215,7],[206,11,215,9],[206,12,215,10],[206,13,215,11],[206,14,215,12],[206,15,215,13],[208,8,217,6],[208,15,217,13,"newProgress"],[208,26,217,24],[209,6,218,4],[209,7,218,5],[209,8,218,6],[210,4,219,2],[210,5,219,3],[212,4,221,2],[213,4,222,2],[213,10,222,8,"isZoneUnlockedLocal"],[213,29,222,27],[213,32,222,31,"zoneId"],[213,38,222,45],[213,42,222,59],[214,6,223,4],[214,10,223,8,"zoneId"],[214,16,223,14],[214,21,223,19],[214,22,223,20],[214,24,223,22],[214,31,223,29],[214,35,223,33],[214,36,223,34],[214,37,223,35],[216,6,225,4],[216,12,225,10,"zone"],[216,16,225,14],[216,19,225,17,"ZONES"],[216,32,225,22],[216,33,225,22,"ZONES"],[216,38,225,22],[216,39,225,23,"find"],[216,43,225,27],[216,44,225,28,"z"],[216,45,225,29],[216,49,225,33,"z"],[216,50,225,34],[216,51,225,35,"id"],[216,53,225,37],[216,58,225,42,"zoneId"],[216,64,225,48],[216,65,225,49],[217,6,226,4],[217,10,226,8],[217,11,226,9,"zone"],[217,15,226,13],[217,17,226,15,"unlockRequirement"],[217,34,226,32],[217,35,226,33,"previousZone"],[217,47,226,45],[217,49,226,47],[217,56,226,54],[217,60,226,58],[218,6,228,4],[218,12,228,10,"prevZoneProgress"],[218,28,228,26],[218,31,228,29,"zoneProgress"],[218,43,228,41],[218,44,228,42,"zone"],[218,48,228,46],[218,49,228,47,"unlockRequirement"],[218,66,228,64],[218,67,228,65,"previousZone"],[218,79,228,77],[218,80,228,78],[219,6,229,4],[219,13,229,11,"prevZoneProgress"],[219,29,229,27],[219,31,229,29,"completed"],[219,40,229,38],[219,44,229,42],[219,49,229,47],[220,4,230,2],[220,5,230,3],[222,4,232,2],[223,4,233,2],[223,10,233,8,"getUnlockedZones"],[223,26,233,24],[223,29,233,27,"getUnlockedZones"],[223,30,233,27],[223,35,233,41],[224,6,234,4],[224,13,234,11,"ZONES"],[224,26,234,16],[224,27,234,16,"ZONES"],[224,32,234,16],[224,33,234,17,"filter"],[224,39,234,23],[224,40,234,24,"zone"],[224,44,234,28],[224,48,234,32,"isZoneUnlockedLocal"],[224,67,234,51],[224,68,234,52,"zone"],[224,72,234,56],[224,73,234,57,"id"],[224,75,234,59],[224,76,234,60],[224,77,234,61],[225,4,235,2],[225,5,235,3],[226,4,237,2],[226,10,237,8,"contextValue"],[226,22,237,37],[226,25,237,40,"React"],[226,30,237,45],[226,31,237,45,"default"],[226,38,237,45],[226,39,237,46,"useMemo"],[226,46,237,53],[226,47,237,54],[226,54,237,61],[227,6,238,4,"currentZone"],[227,17,238,15],[228,6,239,4,"currentZoneLevel"],[228,22,239,20],[229,6,240,4,"zoneProgress"],[229,18,240,16],[230,6,241,4,"availableZones"],[230,20,241,18],[230,22,241,20,"ZONES"],[230,35,241,25],[230,36,241,25,"ZONES"],[230,41,241,25],[231,6,242,4,"selectZone"],[231,16,242,14],[232,6,243,4,"getZoneProgress"],[232,21,243,19],[233,6,244,4,"spawnZoneEnemy"],[233,20,244,18],[234,6,245,4,"recordEnemyKill"],[234,21,245,19],[235,6,246,4,"isZoneUnlocked"],[235,20,246,18],[235,22,246,20,"isZoneUnlockedLocal"],[235,41,246,39],[236,6,247,4,"getUnlockedZones"],[237,4,248,2],[237,5,248,3],[237,6,248,4],[237,8,248,6],[237,9,249,4,"currentZone"],[237,20,249,15],[237,22,250,4,"currentZoneLevel"],[237,38,250,20],[237,40,251,4,"zoneProgress"],[237,52,251,16],[237,54,252,4,"selectZone"],[237,64,252,14],[237,66,253,4,"getZoneProgress"],[237,81,253,19],[237,83,254,4,"spawnZoneEnemy"],[237,97,254,18],[237,99,255,4,"recordEnemyKill"],[237,114,255,19],[237,116,256,4,"isZoneUnlockedLocal"],[237,135,256,23],[237,137,257,4,"getUnlockedZones"],[237,153,257,20],[237,154,258,3],[237,155,258,4],[238,4,260,2],[238,24,261,4],[238,28,261,4,"_reactJsxDevRuntime"],[238,47,261,4],[238,48,261,4,"jsxDEV"],[238,54,261,4],[238,56,261,5,"ZoneContext"],[238,67,261,16],[238,68,261,17,"Provider"],[238,76,261,25],[239,6,261,26,"value"],[239,11,261,31],[239,13,261,33,"contextValue"],[239,25,261,46],[240,6,261,46,"children"],[240,14,261,46],[240,16,262,7,"children"],[241,4,262,15],[242,6,262,15,"fileName"],[242,14,262,15],[242,16,262,15,"_jsxFileName"],[242,28,262,15],[243,6,262,15,"lineNumber"],[243,16,262,15],[244,6,262,15,"columnNumber"],[244,18,262,15],[245,4,262,15],[245,11,263,26],[245,12,263,27],[246,2,265,0],[246,3,265,1],[247,0,265,2],[247,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;iFCM;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCC,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC+C;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}