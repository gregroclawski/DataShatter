{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  const ZoneProvider = ({\n    children\n  }) => {\n    const {\n      gameState\n    } = (0, _GameContext.useGame)();\n\n    // Zone State\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)({\n      1: {\n        zoneId: 1,\n        currentLevel: 1,\n        killsInLevel: 0,\n        completed: false\n      }\n    });\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":216,"map":[[13,2,47,0,"Object"],[13,8,47,0],[13,9,47,0,"defineProperty"],[13,23,47,0],[13,24,47,0,"exports"],[13,31,47,0],[14,4,47,0,"enumerable"],[14,14,47,0],[15,4,47,0,"get"],[15,7,47,0],[15,18,47,0,"get"],[15,19,47,0],[16,6,47,0],[16,13,47,0,"useZone"],[16,20,47,0],[17,4,47,0],[18,2,47,0],[19,2,55,0,"Object"],[19,8,55,0],[19,9,55,0,"defineProperty"],[19,23,55,0],[19,24,55,0,"exports"],[19,31,55,0],[20,4,55,0,"enumerable"],[20,14,55,0],[21,4,55,0,"get"],[21,7,55,0],[21,18,55,0,"get"],[21,19,55,0],[22,6,55,0],[22,13,55,0,"ZoneProvider"],[22,25,55,0],[23,4,55,0],[24,2,55,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_dataZoneData"],[27,19,2,0],[27,22,2,0,"require"],[27,29,2,0],[27,30,2,0,"_dependencyMap"],[27,44,2,0],[28,2,3,0],[28,6,3,0,"_GameContext"],[28,18,3,0],[28,21,3,0,"require"],[28,28,3,0],[28,29,3,0,"_dependencyMap"],[28,43,3,0],[29,2,3,40],[29,6,3,40,"_reactJsxDevRuntime"],[29,25,3,40],[29,28,3,40,"require"],[29,35,3,40],[29,36,3,40,"_dependencyMap"],[29,50,3,40],[30,2,45,0],[30,8,45,6,"ZoneContext"],[30,19,45,17],[30,35,45,20],[30,39,45,20,"createContext"],[30,45,45,33],[30,46,45,33,"createContext"],[30,59,45,33],[30,61,45,63,"undefined"],[30,70,45,72],[30,71,45,73],[31,2,47,7],[31,8,47,13,"useZone"],[31,15,47,20],[31,18,47,23,"useZone"],[31,19,47,23],[31,24,47,29],[32,4,48,2],[32,10,48,8,"context"],[32,17,48,15],[32,20,48,18],[32,24,48,18,"useContext"],[32,30,48,28],[32,31,48,28,"useContext"],[32,41,48,28],[32,43,48,29,"ZoneContext"],[32,54,48,40],[32,55,48,41],[33,4,49,2],[33,8,49,6],[33,9,49,7,"context"],[33,16,49,14],[33,18,49,16],[34,6,50,4],[34,12,50,10],[34,16,50,14,"Error"],[34,21,50,19],[34,22,50,20],[34,66,50,64],[34,67,50,65],[35,4,51,2],[36,4,52,2],[36,11,52,9,"context"],[36,18,52,16],[37,2,53,0],[37,3,53,1],[38,2,55,7],[38,8,55,13,"ZoneProvider"],[38,20,55,25],[38,23,55,28,"ZoneProvider"],[38,24,55,29],[39,4,55,31,"children"],[40,2,55,65],[40,3,55,66],[40,8,55,71],[41,4,56,2],[41,10,56,8],[42,6,56,10,"gameState"],[43,4,56,20],[43,5,56,21],[43,8,56,24],[43,12,56,24,"useGame"],[43,24,56,31],[43,25,56,31,"useGame"],[43,32,56,31],[43,34,56,32],[43,35,56,33],[45,4,58,2],[46,4,59,2],[46,10,59,8],[46,11,59,9,"currentZone"],[46,22,59,20],[46,24,59,22,"setCurrentZone"],[46,38,59,36],[46,39,59,37],[46,42,59,40],[46,46,59,40,"useState"],[46,52,59,48],[46,53,59,48,"useState"],[46,61,59,48],[46,63,59,62,"ZONES"],[46,76,59,67],[46,77,59,67,"ZONES"],[46,82,59,67],[46,83,59,68],[46,84,59,69],[46,85,59,70],[46,86,59,71],[47,4,60,2],[47,10,60,8],[47,11,60,9,"currentZoneLevel"],[47,27,60,25],[47,29,60,27,"setCurrentZoneLevel"],[47,48,60,46],[47,49,60,47],[47,52,60,50],[47,56,60,50,"useState"],[47,62,60,58],[47,63,60,58,"useState"],[47,71,60,58],[47,73,60,77,"ZONES"],[47,86,60,82],[47,87,60,82,"ZONES"],[47,92,60,82],[47,93,60,83],[47,94,60,84],[47,95,60,85],[47,97,60,87,"levels"],[47,103,60,93],[47,104,60,94],[47,105,60,95],[47,106,60,96],[47,110,60,100],[47,114,60,104],[47,115,60,105],[48,4,61,2],[48,10,61,8],[48,11,61,9,"zoneProgress"],[48,23,61,21],[48,25,61,23,"setZoneProgress"],[48,40,61,38],[48,41,61,39],[48,44,61,42],[48,48,61,42,"useState"],[48,54,61,50],[48,55,61,50,"useState"],[48,63,61,50],[48,65,61,81],[49,6,62,4],[49,7,62,5],[49,9,62,7],[50,8,62,9,"zoneId"],[50,14,62,15],[50,16,62,17],[50,17,62,18],[51,8,62,20,"currentLevel"],[51,20,62,32],[51,22,62,34],[51,23,62,35],[52,8,62,37,"killsInLevel"],[52,20,62,49],[52,22,62,51],[52,23,62,52],[53,8,62,54,"completed"],[53,17,62,63],[53,19,62,65],[54,6,62,71],[55,4,63,2],[55,5,63,3],[55,6,63,4],[57,4,65,2],[58,4,66,2],[58,8,66,2,"useEffect"],[58,14,66,11],[58,15,66,11,"useEffect"],[58,24,66,11],[58,26,66,12],[58,32,66,18],[59,6,67,4],[59,10,67,8,"gameState"],[59,19,67,17],[59,21,67,19,"ninja"],[59,26,67,24],[59,28,67,26],[60,8,68,6],[60,14,68,12,"recommendedZone"],[60,29,68,27],[60,32,68,30],[60,36,68,30,"getZoneByLevel"],[60,49,68,44],[60,50,68,44,"getZoneByLevel"],[60,64,68,44],[60,66,68,45,"gameState"],[60,75,68,54],[60,76,68,55,"ninja"],[60,81,68,60],[60,82,68,61,"level"],[60,87,68,66],[60,88,68,67],[61,8,69,6],[61,12,69,10,"recommendedZone"],[61,27,69,25],[61,31,69,29],[61,32,69,30,"currentZone"],[61,43,69,41],[61,45,69,43],[62,10,70,8,"setCurrentZone"],[62,24,70,22],[62,25,70,23,"recommendedZone"],[62,40,70,38],[62,41,70,39],[63,10,71,8,"setCurrentZoneLevel"],[63,29,71,27],[63,30,71,28,"recommendedZone"],[63,45,71,43],[63,46,71,44,"levels"],[63,52,71,50],[63,53,71,51],[63,54,71,52],[63,55,71,53],[63,56,71,54],[64,8,72,6],[65,6,73,4],[66,4,74,2],[66,5,74,3],[66,7,74,5],[66,8,74,6,"gameState"],[66,17,74,15],[66,19,74,17,"ninja"],[66,24,74,22],[66,26,74,24,"level"],[66,31,74,29],[66,32,74,30],[66,33,74,31],[68,4,76,2],[69,4,77,2],[69,10,77,8,"selectZone"],[69,20,77,18],[69,23,77,21,"selectZone"],[69,24,77,22,"zoneId"],[69,30,77,36],[69,32,77,38,"levelNumber"],[69,43,77,57],[69,48,77,71],[70,6,78,4],[70,12,78,10,"zone"],[70,16,78,14],[70,19,78,17,"ZONES"],[70,32,78,22],[70,33,78,22,"ZONES"],[70,38,78,22],[70,39,78,23,"find"],[70,43,78,27],[70,44,78,28,"z"],[70,45,78,29],[70,49,78,33,"z"],[70,50,78,34],[70,51,78,35,"id"],[70,53,78,37],[70,58,78,42,"zoneId"],[70,64,78,48],[70,65,78,49],[71,6,79,4],[71,10,79,8],[71,11,79,9,"zone"],[71,15,79,13],[71,19,79,17],[71,20,79,18],[71,24,79,18,"isZoneUnlocked"],[71,37,79,32],[71,38,79,32,"isZoneUnlocked"],[71,52,79,32],[71,54,79,33,"zoneId"],[71,60,79,39],[71,62,79,41,"zoneProgress"],[71,74,79,53],[71,75,79,54],[71,77,79,56],[72,8,80,6,"console"],[72,15,80,13],[72,16,80,14,"log"],[72,19,80,17],[72,20,80,18],[72,30,80,28,"zoneId"],[72,36,80,34],[72,58,80,56],[72,59,80,57],[73,8,81,6],[73,15,81,13],[73,20,81,18],[74,6,82,4],[75,6,84,4],[75,12,84,10,"level"],[75,17,84,15],[75,20,84,18,"zone"],[75,24,84,22],[75,25,84,23,"levels"],[75,31,84,29],[75,32,84,30,"levelNumber"],[75,43,84,41],[75,46,84,44],[75,47,84,45],[75,48,84,46],[76,6,85,4],[76,10,85,8],[76,11,85,9,"level"],[76,16,85,14],[76,18,85,16],[77,8,86,6,"console"],[77,15,86,13],[77,16,86,14,"log"],[77,19,86,17],[77,20,86,18],[77,31,86,29,"levelNumber"],[77,42,86,40],[77,64,86,62,"zoneId"],[77,70,86,68],[77,72,86,70],[77,73,86,71],[78,8,87,6],[78,15,87,13],[78,20,87,18],[79,6,88,4],[80,6,90,4,"setCurrentZone"],[80,20,90,18],[80,21,90,19,"zone"],[80,25,90,23],[80,26,90,24],[81,6,91,4,"setCurrentZoneLevel"],[81,25,91,23],[81,26,91,24,"level"],[81,31,91,29],[81,32,91,30],[82,6,92,4,"console"],[82,13,92,11],[82,14,92,12,"log"],[82,17,92,15],[82,18,92,16],[82,34,92,32,"zone"],[82,38,92,36],[82,39,92,37,"name"],[82,43,92,41],[82,55,92,53,"levelNumber"],[82,66,92,64],[82,68,92,66],[82,69,92,67],[83,6,93,4],[83,13,93,11],[83,17,93,15],[84,4,94,2],[84,5,94,3],[86,4,96,2],[87,4,97,2],[87,10,97,8,"getZoneProgress"],[87,25,97,23],[87,28,97,27,"zoneId"],[87,34,97,41],[87,38,97,67],[88,6,98,4],[88,13,98,11,"zoneProgress"],[88,25,98,23],[88,26,98,24,"zoneId"],[88,32,98,30],[88,33,98,31],[88,37,98,35],[88,41,98,39],[89,4,99,2],[89,5,99,3],[91,4,101,2],[92,4,102,2],[92,10,102,8,"spawnZoneEnemy"],[92,24,102,22],[92,27,102,25,"spawnZoneEnemy"],[92,28,102,25],[92,33,102,52],[93,6,103,4],[93,10,103,8],[93,11,103,9,"currentZone"],[93,22,103,20],[93,26,103,24],[93,27,103,25,"currentZoneLevel"],[93,43,103,41],[93,45,103,43],[94,8,104,6,"console"],[94,15,104,13],[94,16,104,14,"log"],[94,19,104,17],[94,20,104,18],[94,65,104,63],[94,66,104,64],[95,8,105,6],[95,15,105,13],[95,19,105,17],[96,6,106,4],[98,6,108,4],[99,6,109,4],[99,12,109,10,"enemyTypeIds"],[99,24,109,22],[99,27,109,25,"currentZoneLevel"],[99,43,109,41],[99,44,109,42,"enemyTypes"],[99,54,109,52],[100,6,110,4],[100,12,110,10,"randomEnemyTypeId"],[100,29,110,27],[100,32,110,30,"enemyTypeIds"],[100,44,110,42],[100,45,110,43,"Math"],[100,49,110,47],[100,50,110,48,"floor"],[100,55,110,53],[100,56,110,54,"Math"],[100,60,110,58],[100,61,110,59,"random"],[100,67,110,65],[100,68,110,66],[100,69,110,67],[100,72,110,70,"enemyTypeIds"],[100,84,110,82],[100,85,110,83,"length"],[100,91,110,89],[100,92,110,90],[100,93,110,91],[101,6,111,4],[101,12,111,10,"enemyType"],[101,21,111,19],[101,24,111,22,"ENEMY_TYPES"],[101,37,111,33],[101,38,111,33,"ENEMY_TYPES"],[101,49,111,33],[101,50,111,34,"randomEnemyTypeId"],[101,67,111,51],[101,68,111,52],[102,6,113,4],[102,10,113,8],[102,11,113,9,"enemyType"],[102,20,113,18],[102,22,113,20],[103,8,114,6,"console"],[103,15,114,13],[103,16,114,14,"log"],[103,19,114,17],[103,20,114,18],[103,36,114,34,"randomEnemyTypeId"],[103,53,114,51],[103,65,114,63],[103,66,114,64],[104,8,115,6],[104,15,115,13],[104,19,115,17],[105,6,116,4],[107,6,118,4],[108,6,119,4],[108,12,119,10,"scaledStats"],[108,23,119,21],[108,26,119,24],[108,30,119,24,"calculateEnemyStats"],[108,43,119,43],[108,44,119,43,"calculateEnemyStats"],[108,63,119,43],[108,65,119,44,"enemyType"],[108,74,119,53],[108,76,119,55,"currentZoneLevel"],[108,92,119,71],[108,94,119,73,"currentZone"],[108,105,119,84],[108,106,119,85,"id"],[108,108,119,87],[108,109,119,88],[110,6,121,4],[111,6,122,4],[111,12,122,10,"enemy"],[111,17,122,29],[111,20,122,32],[112,8,123,6,"id"],[112,10,123,8],[112,12,123,10],[112,15,123,13,"randomEnemyTypeId"],[112,32,123,30],[112,36,123,34,"Date"],[112,40,123,38],[112,41,123,39,"now"],[112,44,123,42],[112,45,123,43],[112,46,123,44],[112,50,123,48,"Math"],[112,54,123,52],[112,55,123,53,"random"],[112,61,123,59],[112,62,123,60],[112,63,123,61],[112,65,123,63],[113,8,124,6,"typeId"],[113,14,124,12],[113,16,124,14,"randomEnemyTypeId"],[113,33,124,31],[114,8,125,6,"name"],[114,12,125,10],[114,14,125,12,"enemyType"],[114,23,125,21],[114,24,125,22,"name"],[114,28,125,26],[115,8,126,6,"icon"],[115,12,126,10],[115,14,126,12,"enemyType"],[115,23,126,21],[115,24,126,22,"icon"],[115,28,126,26],[116,8,127,6,"hp"],[116,10,127,8],[116,12,127,10,"scaledStats"],[116,23,127,21],[116,24,127,22,"hp"],[116,26,127,24],[117,8,128,6,"maxHP"],[117,13,128,11],[117,15,128,13,"scaledStats"],[117,26,128,24],[117,27,128,25,"hp"],[117,29,128,27],[118,8,129,6,"attack"],[118,14,129,12],[118,16,129,14,"scaledStats"],[118,27,129,25],[118,28,129,26,"attack"],[118,34,129,32],[119,8,130,6,"xp"],[119,10,130,8],[119,12,130,10,"scaledStats"],[119,23,130,21],[119,24,130,22,"xp"],[119,26,130,24],[120,8,131,6,"resistances"],[120,19,131,17],[120,21,131,19,"scaledStats"],[120,32,131,30],[120,33,131,31,"resistances"],[120,44,131,42],[121,8,132,6,"position"],[121,16,132,14],[121,18,132,16],[122,10,133,8,"x"],[122,11,133,9],[122,13,133,11,"Math"],[122,17,133,15],[122,18,133,16,"random"],[122,24,133,22],[122,25,133,23],[122,26,133,24],[122,29,133,27],[122,32,133,30],[122,35,133,33],[122,37,133,35],[123,10,133,37],[124,10,134,8,"y"],[124,11,134,9],[124,13,134,11,"Math"],[124,17,134,15],[124,18,134,16,"random"],[124,24,134,22],[124,25,134,23],[124,26,134,24],[124,29,134,27],[124,32,134,30],[124,35,134,33],[125,8,135,6],[125,9,135,7],[126,8,136,6,"lastDamaged"],[126,19,136,17],[126,21,136,19],[127,6,137,4],[127,7,137,5],[128,6,139,4,"console"],[128,13,139,11],[128,14,139,12,"log"],[128,17,139,15],[128,18,139,16],[128,32,139,30,"enemy"],[128,37,139,35],[128,38,139,36,"name"],[128,42,139,40],[128,47,139,45,"enemy"],[128,52,139,50],[128,53,139,51,"hp"],[128,55,139,53],[128,63,139,61,"enemy"],[128,68,139,66],[128,69,139,67,"xp"],[128,71,139,69],[128,82,139,80,"currentZone"],[128,93,139,91],[128,94,139,92,"name"],[128,98,139,96],[128,100,139,98],[128,101,139,99],[129,6,140,4],[129,13,140,11,"enemy"],[129,18,140,16],[130,4,141,2],[130,5,141,3],[132,4,143,2],[133,4,144,2],[133,10,144,8,"recordEnemyKill"],[133,25,144,23],[133,28,144,27,"enemy"],[133,33,144,46],[133,37,144,51],[134,6,145,4],[134,10,145,8],[134,11,145,9,"currentZone"],[134,22,145,20],[134,26,145,24],[134,27,145,25,"currentZoneLevel"],[134,43,145,41],[134,45,145,43],[135,6,147,4,"console"],[135,13,147,11],[135,14,147,12,"log"],[135,17,147,15],[135,18,147,16],[135,24,147,22,"enemy"],[135,29,147,27],[135,30,147,28,"name"],[135,34,147,32],[135,47,147,45,"enemy"],[135,52,147,50],[135,53,147,51,"xp"],[135,55,147,53],[135,60,147,58],[135,61,147,59],[136,6,149,4,"setZoneProgress"],[136,21,149,19],[136,22,149,20,"prev"],[136,26,149,24],[136,30,149,28],[137,8,150,6],[137,14,150,12,"newProgress"],[137,25,150,23],[137,28,150,26],[138,10,150,28],[138,13,150,31,"prev"],[139,8,150,36],[139,9,150,37],[140,8,151,6],[140,14,151,12,"zoneId"],[140,20,151,18],[140,23,151,21,"currentZone"],[140,34,151,32],[140,35,151,33,"id"],[140,37,151,35],[141,8,153,6],[141,12,153,10],[141,13,153,11,"newProgress"],[141,24,153,22],[141,25,153,23,"zoneId"],[141,31,153,29],[141,32,153,30],[141,34,153,32],[142,10,154,8,"newProgress"],[142,21,154,19],[142,22,154,20,"zoneId"],[142,28,154,26],[142,29,154,27],[142,32,154,30],[143,12,155,10,"zoneId"],[143,18,155,16],[144,12,156,10,"currentLevel"],[144,24,156,22],[144,26,156,24],[144,27,156,25],[145,12,157,10,"killsInLevel"],[145,24,157,22],[145,26,157,24],[145,27,157,25],[146,12,158,10,"completed"],[146,21,158,19],[146,23,158,21],[147,10,159,8],[147,11,159,9],[148,8,160,6],[149,8,162,6],[149,14,162,12,"progress"],[149,22,162,20],[149,25,162,23],[150,10,162,25],[150,13,162,28,"newProgress"],[150,24,162,39],[150,25,162,40,"zoneId"],[150,31,162,46],[151,8,162,48],[151,9,162,49],[152,8,163,6,"progress"],[152,16,163,14],[152,17,163,15,"killsInLevel"],[152,29,163,27],[152,33,163,31],[152,34,163,32],[153,8,165,6,"console"],[153,15,165,13],[153,16,165,14,"log"],[153,19,165,17],[153,20,165,18],[153,31,165,29,"zoneId"],[153,37,165,35],[153,47,165,45,"progress"],[153,55,165,53],[153,56,165,54,"currentLevel"],[153,68,165,66],[153,73,165,71,"progress"],[153,81,165,79],[153,82,165,80,"killsInLevel"],[153,94,165,92],[153,107,165,105],[153,108,165,106],[155,8,167,6],[156,8,168,6],[156,12,168,10,"progress"],[156,20,168,18],[156,21,168,19,"killsInLevel"],[156,33,168,31],[156,37,168,35],[156,41,168,39],[156,43,168,41],[157,10,169,8,"console"],[157,17,169,15],[157,18,169,16,"log"],[157,21,169,19],[157,22,169,20],[157,34,169,32,"progress"],[157,42,169,40],[157,43,169,41,"currentLevel"],[157,55,169,53],[157,72,169,70,"currentZone"],[157,83,169,81],[157,84,169,82,"name"],[157,88,169,86],[157,91,169,89],[157,92,169,90],[159,10,171,8],[160,10,172,8],[160,14,172,12,"progress"],[160,22,172,20],[160,23,172,21,"currentLevel"],[160,35,172,33],[160,38,172,36],[160,39,172,37],[160,41,172,39],[161,12,173,10,"progress"],[161,20,173,18],[161,21,173,19,"currentLevel"],[161,33,173,31],[161,37,173,35],[161,38,173,36],[162,12,174,10,"progress"],[162,20,174,18],[162,21,174,19,"killsInLevel"],[162,33,174,31],[162,36,174,34],[162,37,174,35],[163,12,175,10,"console"],[163,19,175,17],[163,20,175,18,"log"],[163,23,175,21],[163,24,175,22],[163,48,175,46,"progress"],[163,56,175,54],[163,57,175,55,"currentLevel"],[163,69,175,67],[163,71,175,69],[163,72,175,70],[165,12,177,10],[166,12,178,10],[166,18,178,16,"nextLevel"],[166,27,178,25],[166,30,178,28,"currentZone"],[166,41,178,39],[166,42,178,40,"levels"],[166,48,178,46],[166,49,178,47,"progress"],[166,57,178,55],[166,58,178,56,"currentLevel"],[166,70,178,68],[166,73,178,71],[166,74,178,72],[166,75,178,73],[167,12,179,10],[167,16,179,14,"nextLevel"],[167,25,179,23],[167,27,179,25],[168,14,180,12,"setCurrentZoneLevel"],[168,33,180,31],[168,34,180,32,"nextLevel"],[168,43,180,41],[168,44,180,42],[169,12,181,10],[170,10,182,8],[170,11,182,9],[170,17,182,15],[171,12,183,10],[172,12,184,10,"progress"],[172,20,184,18],[172,21,184,19,"completed"],[172,30,184,28],[172,33,184,31],[172,37,184,35],[173,12,185,10,"console"],[173,19,185,17],[173,20,185,18,"log"],[173,23,185,21],[173,24,185,22],[173,35,185,33,"currentZone"],[173,46,185,44],[173,47,185,45,"name"],[173,51,185,49],[173,84,185,82],[173,85,185,83],[174,10,186,8],[175,8,187,6],[176,8,189,6,"newProgress"],[176,19,189,17],[176,20,189,18,"zoneId"],[176,26,189,24],[176,27,189,25],[176,30,189,28,"progress"],[176,38,189,36],[177,8,190,6],[177,15,190,13,"newProgress"],[177,26,190,24],[178,6,191,4],[178,7,191,5],[178,8,191,6],[179,4,192,2],[179,5,192,3],[181,4,194,2],[182,4,195,2],[182,10,195,8,"isZoneUnlockedLocal"],[182,29,195,27],[182,32,195,31,"zoneId"],[182,38,195,45],[182,42,195,59],[183,6,196,4],[183,10,196,8,"zoneId"],[183,16,196,14],[183,21,196,19],[183,22,196,20],[183,24,196,22],[183,31,196,29],[183,35,196,33],[183,36,196,34],[183,37,196,35],[185,6,198,4],[185,12,198,10,"zone"],[185,16,198,14],[185,19,198,17,"ZONES"],[185,32,198,22],[185,33,198,22,"ZONES"],[185,38,198,22],[185,39,198,23,"find"],[185,43,198,27],[185,44,198,28,"z"],[185,45,198,29],[185,49,198,33,"z"],[185,50,198,34],[185,51,198,35,"id"],[185,53,198,37],[185,58,198,42,"zoneId"],[185,64,198,48],[185,65,198,49],[186,6,199,4],[186,10,199,8],[186,11,199,9,"zone"],[186,15,199,13],[186,17,199,15,"unlockRequirement"],[186,34,199,32],[186,35,199,33,"previousZone"],[186,47,199,45],[186,49,199,47],[186,56,199,54],[186,60,199,58],[187,6,201,4],[187,12,201,10,"prevZoneProgress"],[187,28,201,26],[187,31,201,29,"zoneProgress"],[187,43,201,41],[187,44,201,42,"zone"],[187,48,201,46],[187,49,201,47,"unlockRequirement"],[187,66,201,64],[187,67,201,65,"previousZone"],[187,79,201,77],[187,80,201,78],[188,6,202,4],[188,13,202,11,"prevZoneProgress"],[188,29,202,27],[188,31,202,29,"completed"],[188,40,202,38],[188,44,202,42],[188,49,202,47],[189,4,203,2],[189,5,203,3],[191,4,205,2],[192,4,206,2],[192,10,206,8,"getUnlockedZones"],[192,26,206,24],[192,29,206,27,"getUnlockedZones"],[192,30,206,27],[192,35,206,41],[193,6,207,4],[193,13,207,11,"ZONES"],[193,26,207,16],[193,27,207,16,"ZONES"],[193,32,207,16],[193,33,207,17,"filter"],[193,39,207,23],[193,40,207,24,"zone"],[193,44,207,28],[193,48,207,32,"isZoneUnlockedLocal"],[193,67,207,51],[193,68,207,52,"zone"],[193,72,207,56],[193,73,207,57,"id"],[193,75,207,59],[193,76,207,60],[193,77,207,61],[194,4,208,2],[194,5,208,3],[195,4,210,2],[195,10,210,8,"contextValue"],[195,22,210,37],[195,25,210,40,"React"],[195,30,210,45],[195,31,210,45,"default"],[195,38,210,45],[195,39,210,46,"useMemo"],[195,46,210,53],[195,47,210,54],[195,54,210,61],[196,6,211,4,"currentZone"],[196,17,211,15],[197,6,212,4,"currentZoneLevel"],[197,22,212,20],[198,6,213,4,"zoneProgress"],[198,18,213,16],[199,6,214,4,"availableZones"],[199,20,214,18],[199,22,214,20,"ZONES"],[199,35,214,25],[199,36,214,25,"ZONES"],[199,41,214,25],[200,6,215,4,"selectZone"],[200,16,215,14],[201,6,216,4,"getZoneProgress"],[201,21,216,19],[202,6,217,4,"spawnZoneEnemy"],[202,20,217,18],[203,6,218,4,"recordEnemyKill"],[203,21,218,19],[204,6,219,4,"isZoneUnlocked"],[204,20,219,18],[204,22,219,20,"isZoneUnlockedLocal"],[204,41,219,39],[205,6,220,4,"getUnlockedZones"],[206,4,221,2],[206,5,221,3],[206,6,221,4],[206,8,221,6],[206,9,222,4,"currentZone"],[206,20,222,15],[206,22,223,4,"currentZoneLevel"],[206,38,223,20],[206,40,224,4,"zoneProgress"],[206,52,224,16],[206,54,225,4,"selectZone"],[206,64,225,14],[206,66,226,4,"getZoneProgress"],[206,81,226,19],[206,83,227,4,"spawnZoneEnemy"],[206,97,227,18],[206,99,228,4,"recordEnemyKill"],[206,114,228,19],[206,116,229,4,"isZoneUnlockedLocal"],[206,135,229,23],[206,137,230,4,"getUnlockedZones"],[206,153,230,20],[206,154,231,3],[206,155,231,4],[207,4,233,2],[207,24,234,4],[207,28,234,4,"_reactJsxDevRuntime"],[207,47,234,4],[207,48,234,4,"jsxDEV"],[207,54,234,4],[207,56,234,5,"ZoneContext"],[207,67,234,16],[207,68,234,17,"Provider"],[207,76,234,25],[208,6,234,26,"value"],[208,11,234,31],[208,13,234,33,"contextValue"],[208,25,234,46],[209,6,234,46,"children"],[209,14,234,46],[209,16,235,7,"children"],[210,4,235,15],[211,6,235,15,"fileName"],[211,14,235,15],[211,16,235,15,"_jsxFileName"],[211,28,235,15],[212,6,235,15,"lineNumber"],[212,16,235,15],[213,6,235,15,"columnNumber"],[213,18,235,15],[214,4,235,15],[214,11,236,26],[214,12,236,27],[215,2,238,0],[215,3,238,1],[216,0,238,2],[216,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;KD0C;GNC;8BQG;4BLG,oBK;GRK;2BSG;wBCC,oCD;GTC;sDWE;IXW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}