{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\"; // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  const ZoneProvider = ({\n    children\n  }) => {\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Initialize with GameContext data if available\n    const [currentZone, setCurrentZone] = (0, _react.useState)(_dataZoneData.ZONES[0]);\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null);\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('🗺️ Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('🗺️ No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    const selectZone = (zoneId, levelNumber) => {\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n\n        // Get the required kills for current level from zone data\n        const currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        const requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= requiredKills) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":253,"map":[[4,67,5,0],[5,2,5,0,"Object"],[5,8,5,0],[5,9,5,0,"defineProperty"],[5,23,5,0],[5,24,5,0,"exports"],[5,31,5,0],[6,4,5,0,"value"],[6,9,5,0],[7,2,5,0],[8,2,5,0],[8,11,5,0,"_interopDefault"],[8,27,5,0,"e"],[8,28,5,0],[9,4,5,0],[9,11,5,0,"e"],[9,12,5,0],[9,16,5,0,"e"],[9,17,5,0],[9,18,5,0,"__esModule"],[9,28,5,0],[9,31,5,0,"e"],[9,32,5,0],[10,6,5,0,"default"],[10,13,5,0],[10,15,5,0,"e"],[11,4,5,0],[12,2,5,0],[13,2,56,0,"Object"],[13,8,56,0],[13,9,56,0,"defineProperty"],[13,23,56,0],[13,24,56,0,"exports"],[13,31,56,0],[14,4,56,0,"enumerable"],[14,14,56,0],[15,4,56,0,"get"],[15,7,56,0],[15,18,56,0,"get"],[15,19,56,0],[16,6,56,0],[16,13,56,0,"useZone"],[16,20,56,0],[17,4,56,0],[18,2,56,0],[19,2,64,0,"Object"],[19,8,64,0],[19,9,64,0,"defineProperty"],[19,23,64,0],[19,24,64,0,"exports"],[19,31,64,0],[20,4,64,0,"enumerable"],[20,14,64,0],[21,4,64,0,"get"],[21,7,64,0],[21,18,64,0,"get"],[21,19,64,0],[22,6,64,0],[22,13,64,0,"ZoneProvider"],[22,25,64,0],[23,4,64,0],[24,2,64,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_dataZoneData"],[27,19,2,0],[27,22,2,0,"require"],[27,29,2,0],[27,30,2,0,"_dependencyMap"],[27,44,2,0],[28,2,3,0],[28,6,3,0,"_GameContext"],[28,18,3,0],[28,21,3,0,"require"],[28,28,3,0],[28,29,3,0,"_dependencyMap"],[28,43,3,0],[29,2,3,40],[29,6,3,40,"_reactJsxDevRuntime"],[29,25,3,40],[29,28,3,40,"require"],[29,35,3,40],[29,36,3,40,"_dependencyMap"],[29,50,3,40],[30,2,6,0],[30,8,6,6,"calculateKillRequirement"],[30,32,6,30],[30,35,6,33,"calculateKillRequirement"],[30,36,6,34,"zoneId"],[30,42,6,48],[30,44,6,50,"level"],[30,49,6,63],[30,54,6,76],[31,4,7,2],[31,8,7,6,"zoneId"],[31,14,7,12],[31,18,7,16],[31,19,7,17],[31,21,7,19],[31,28,7,26],[31,30,7,28],[31,33,7,32,"level"],[31,38,7,37],[31,41,7,40],[31,42,7,42],[31,43,7,43],[31,44,7,49],[32,4,8,2],[32,8,8,6,"zoneId"],[32,14,8,12],[32,18,8,16],[32,20,8,18],[32,22,8,20],[32,29,8,27],[32,31,8,29],[32,34,8,33,"level"],[32,39,8,38],[32,42,8,41],[32,44,8,44],[32,45,8,45],[32,46,8,50],[33,4,9,2],[33,8,9,6,"zoneId"],[33,14,9,12],[33,18,9,16],[33,20,9,18],[33,22,9,20],[33,29,9,27],[33,31,9,29],[33,34,9,33,"level"],[33,39,9,38],[33,42,9,41],[33,44,9,44],[33,45,9,45],[33,46,9,50],[34,4,10,2],[34,8,10,6,"zoneId"],[34,14,10,12],[34,18,10,16],[34,20,10,18],[34,22,10,20],[34,29,10,27],[34,32,10,30],[34,35,10,34,"level"],[34,40,10,39],[34,43,10,42],[34,45,10,45],[34,46,10,46],[34,47,10,50],[35,4,11,2],[35,11,11,9],[35,14,11,12],[35,17,11,16,"level"],[35,22,11,21],[35,25,11,24],[35,27,11,27],[35,28,11,28],[35,29,11,50],[36,2,12,0],[36,3,12,1],[37,2,54,0],[37,8,54,6,"ZoneContext"],[37,19,54,17],[37,35,54,20],[37,39,54,20,"createContext"],[37,45,54,33],[37,46,54,33,"createContext"],[37,59,54,33],[37,61,54,63,"undefined"],[37,70,54,72],[37,71,54,73],[38,2,56,7],[38,8,56,13,"useZone"],[38,15,56,20],[38,18,56,23,"useZone"],[38,19,56,23],[38,24,56,29],[39,4,57,2],[39,10,57,8,"context"],[39,17,57,15],[39,20,57,18],[39,24,57,18,"useContext"],[39,30,57,28],[39,31,57,28,"useContext"],[39,41,57,28],[39,43,57,29,"ZoneContext"],[39,54,57,40],[39,55,57,41],[40,4,58,2],[40,8,58,6],[40,9,58,7,"context"],[40,16,58,14],[40,18,58,16],[41,6,59,4],[41,12,59,10],[41,16,59,14,"Error"],[41,21,59,19],[41,22,59,20],[41,66,59,64],[41,67,59,65],[42,4,60,2],[43,4,61,2],[43,11,61,9,"context"],[43,18,61,16],[44,2,62,0],[44,3,62,1],[45,2,64,7],[45,8,64,13,"ZoneProvider"],[45,20,64,25],[45,23,64,28,"ZoneProvider"],[45,24,64,29],[46,4,64,31,"children"],[47,2,64,65],[47,3,64,66],[47,8,64,71],[48,4,65,2],[48,10,65,8],[49,6,65,10,"gameState"],[49,15,65,19],[50,6,65,21,"updateZoneProgress"],[51,4,65,40],[51,5,65,41],[51,8,65,44],[51,12,65,44,"useGame"],[51,24,65,51],[51,25,65,51,"useGame"],[51,32,65,51],[51,34,65,52],[51,35,65,53],[53,4,67,2],[54,4,68,2],[54,10,68,8],[54,11,68,9,"currentZone"],[54,22,68,20],[54,24,68,22,"setCurrentZone"],[54,38,68,36],[54,39,68,37],[54,42,68,40],[54,46,68,40,"useState"],[54,52,68,48],[54,53,68,48,"useState"],[54,61,68,48],[54,63,68,62,"ZONES"],[54,76,68,67],[54,77,68,67,"ZONES"],[54,82,68,67],[54,83,68,68],[54,84,68,69],[54,85,68,70],[54,86,68,71],[55,4,69,2],[55,10,69,8],[55,11,69,9,"currentZoneLevel"],[55,27,69,25],[55,29,69,27,"setCurrentZoneLevel"],[55,48,69,46],[55,49,69,47],[55,52,69,50],[55,56,69,50,"useState"],[55,62,69,58],[55,63,69,58,"useState"],[55,71,69,58],[55,73,69,77,"ZONES"],[55,86,69,82],[55,87,69,82,"ZONES"],[55,92,69,82],[55,93,69,83],[55,94,69,84],[55,95,69,85],[55,97,69,87,"levels"],[55,103,69,93],[55,104,69,94],[55,105,69,95],[55,106,69,96],[55,110,69,100],[55,114,69,104],[55,115,69,105],[56,4,70,2],[56,10,70,8],[56,11,70,9,"zoneProgress"],[56,23,70,21],[56,25,70,23,"setZoneProgress"],[56,40,70,38],[56,41,70,39],[56,44,70,42],[56,48,70,42,"useState"],[56,54,70,50],[56,55,70,50,"useState"],[56,63,70,50],[56,65,70,81],[56,71,70,87],[57,6,71,4],[58,6,72,4],[58,12,72,10,"savedProgress"],[58,25,72,23],[58,28,72,26,"gameState"],[58,37,72,35],[58,39,72,37,"zoneProgress"],[58,51,72,49],[59,6,73,4],[59,10,73,8,"savedProgress"],[59,23,73,21],[59,27,73,25,"Object"],[59,33,73,31],[59,34,73,32,"keys"],[59,38,73,36],[59,39,73,37,"savedProgress"],[59,52,73,50],[59,53,73,51],[59,54,73,52,"length"],[59,60,73,58],[59,63,73,61],[59,64,73,62],[59,66,73,64],[60,8,74,6,"console"],[60,15,74,13],[60,16,74,14,"log"],[60,19,74,17],[60,20,74,18],[60,54,74,52],[60,56,74,54,"savedProgress"],[60,69,74,67],[60,70,74,68],[61,8,75,6],[61,15,75,13,"savedProgress"],[61,28,75,26],[62,6,76,4],[62,7,76,5],[62,13,76,11],[63,8,77,6,"console"],[63,15,77,13],[63,16,77,14,"log"],[63,19,77,17],[63,20,77,18],[63,64,77,62],[63,65,77,63],[64,8,78,6],[64,15,78,13],[65,10,78,15],[65,11,78,16],[65,13,78,18],[66,12,78,20,"zoneId"],[66,18,78,26],[66,20,78,28],[66,21,78,29],[67,12,78,31,"currentLevel"],[67,24,78,43],[67,26,78,45],[67,27,78,46],[68,12,78,48,"killsInLevel"],[68,24,78,60],[68,26,78,62],[68,27,78,63],[69,12,78,65,"completed"],[69,21,78,74],[69,23,78,76],[70,10,78,82],[71,8,78,84],[71,9,78,85],[72,6,79,4],[73,4,80,2],[73,5,80,3],[73,6,80,4],[75,4,82,2],[76,4,83,2],[76,8,83,2,"useEffect"],[76,14,83,11],[76,15,83,11,"useEffect"],[76,24,83,11],[76,26,83,12],[76,32,83,18],[77,6,84,4],[77,10,84,8,"gameState"],[77,19,84,17],[77,21,84,19,"zoneProgress"],[77,33,84,31],[77,37,84,35,"Object"],[77,43,84,41],[77,44,84,42,"keys"],[77,48,84,46],[77,49,84,47,"gameState"],[77,58,84,56],[77,59,84,57,"zoneProgress"],[77,71,84,69],[77,72,84,70],[77,73,84,71,"length"],[77,79,84,77],[77,82,84,80],[77,83,84,81],[77,85,84,83],[78,8,85,6,"console"],[78,15,85,13],[78,16,85,14,"log"],[78,19,85,17],[78,20,85,18],[78,64,85,62],[78,66,85,64,"gameState"],[78,75,85,73],[78,76,85,74,"zoneProgress"],[78,88,85,86],[78,89,85,87],[79,8,86,6,"setZoneProgress"],[79,23,86,21],[79,24,86,22,"gameState"],[79,33,86,31],[79,34,86,32,"zoneProgress"],[79,46,86,44],[79,47,86,45],[80,6,87,4],[81,4,88,2],[81,5,88,3],[81,7,88,5],[81,8,88,6,"gameState"],[81,17,88,15],[81,19,88,17,"zoneProgress"],[81,31,88,29],[81,32,88,30],[81,33,88,31],[83,4,90,2],[84,4,91,2],[84,8,91,2,"useEffect"],[84,14,91,11],[84,15,91,11,"useEffect"],[84,24,91,11],[84,26,91,12],[84,32,91,18],[85,6,92,4],[85,10,92,8,"gameState"],[85,19,92,17],[85,21,92,19,"ninja"],[85,26,92,24],[85,28,92,26],[86,8,93,6],[86,14,93,12,"recommendedZone"],[86,29,93,27],[86,32,93,30],[86,36,93,30,"getZoneByLevel"],[86,49,93,44],[86,50,93,44,"getZoneByLevel"],[86,64,93,44],[86,66,93,45,"gameState"],[86,75,93,54],[86,76,93,55,"ninja"],[86,81,93,60],[86,82,93,61,"level"],[86,87,93,66],[86,88,93,67],[87,8,94,6],[87,12,94,10,"recommendedZone"],[87,27,94,25],[87,31,94,29],[87,32,94,30,"currentZone"],[87,43,94,41],[87,45,94,43],[88,10,95,8,"setCurrentZone"],[88,24,95,22],[88,25,95,23,"recommendedZone"],[88,40,95,38],[88,41,95,39],[89,10,96,8,"setCurrentZoneLevel"],[89,29,96,27],[89,30,96,28,"recommendedZone"],[89,45,96,43],[89,46,96,44,"levels"],[89,52,96,50],[89,53,96,51],[89,54,96,52],[89,55,96,53],[89,56,96,54],[90,8,97,6],[91,6,98,4],[92,4,99,2],[92,5,99,3],[92,7,99,5],[92,8,99,6,"gameState"],[92,17,99,15],[92,19,99,17,"ninja"],[92,24,99,22],[92,26,99,24,"level"],[92,31,99,29],[92,32,99,30],[92,33,99,31],[94,4,101,2],[95,4,102,2],[95,10,102,8,"selectZone"],[95,20,102,18],[95,23,102,21,"selectZone"],[95,24,102,22,"zoneId"],[95,30,102,36],[95,32,102,38,"levelNumber"],[95,43,102,57],[95,48,102,71],[96,6,103,4],[96,12,103,10,"zone"],[96,16,103,14],[96,19,103,17,"ZONES"],[96,32,103,22],[96,33,103,22,"ZONES"],[96,38,103,22],[96,39,103,23,"find"],[96,43,103,27],[96,44,103,28,"z"],[96,45,103,29],[96,49,103,33,"z"],[96,50,103,34],[96,51,103,35,"id"],[96,53,103,37],[96,58,103,42,"zoneId"],[96,64,103,48],[96,65,103,49],[97,6,104,4],[97,10,104,8],[97,11,104,9,"zone"],[97,15,104,13],[97,19,104,17],[97,20,104,18],[97,24,104,18,"isZoneUnlocked"],[97,37,104,32],[97,38,104,32,"isZoneUnlocked"],[97,52,104,32],[97,54,104,33,"zoneId"],[97,60,104,39],[97,62,104,41,"zoneProgress"],[97,74,104,53],[97,75,104,54],[97,77,104,56],[98,8,105,6,"console"],[98,15,105,13],[98,16,105,14,"log"],[98,19,105,17],[98,20,105,18],[98,30,105,28,"zoneId"],[98,36,105,34],[98,58,105,56],[98,59,105,57],[99,8,106,6],[99,15,106,13],[99,20,106,18],[100,6,107,4],[101,6,109,4],[101,12,109,10,"level"],[101,17,109,15],[101,20,109,18,"zone"],[101,24,109,22],[101,25,109,23,"levels"],[101,31,109,29],[101,32,109,30,"levelNumber"],[101,43,109,41],[101,46,109,44],[101,47,109,45],[101,48,109,46],[102,6,110,4],[102,10,110,8],[102,11,110,9,"level"],[102,16,110,14],[102,18,110,16],[103,8,111,6,"console"],[103,15,111,13],[103,16,111,14,"log"],[103,19,111,17],[103,20,111,18],[103,31,111,29,"levelNumber"],[103,42,111,40],[103,64,111,62,"zoneId"],[103,70,111,68],[103,72,111,70],[103,73,111,71],[104,8,112,6],[104,15,112,13],[104,20,112,18],[105,6,113,4],[106,6,115,4,"setCurrentZone"],[106,20,115,18],[106,21,115,19,"zone"],[106,25,115,23],[106,26,115,24],[107,6,116,4,"setCurrentZoneLevel"],[107,25,116,23],[107,26,116,24,"level"],[107,31,116,29],[107,32,116,30],[108,6,117,4,"console"],[108,13,117,11],[108,14,117,12,"log"],[108,17,117,15],[108,18,117,16],[108,34,117,32,"zone"],[108,38,117,36],[108,39,117,37,"name"],[108,43,117,41],[108,55,117,53,"levelNumber"],[108,66,117,64],[108,68,117,66],[108,69,117,67],[109,6,118,4],[109,13,118,11],[109,17,118,15],[110,4,119,2],[110,5,119,3],[112,4,121,2],[113,4,122,2],[113,10,122,8,"getZoneProgress"],[113,25,122,23],[113,28,122,27,"zoneId"],[113,34,122,41],[113,38,122,67],[114,6,123,4],[114,13,123,11,"zoneProgress"],[114,25,123,23],[114,26,123,24,"zoneId"],[114,32,123,30],[114,33,123,31],[114,37,123,35],[114,41,123,39],[115,4,124,2],[115,5,124,3],[117,4,126,2],[118,4,127,2],[118,10,127,8,"spawnZoneEnemy"],[118,24,127,22],[118,27,127,25,"spawnZoneEnemy"],[118,28,127,25],[118,33,127,52],[119,6,128,4],[119,10,128,8],[119,11,128,9,"currentZone"],[119,22,128,20],[119,26,128,24],[119,27,128,25,"currentZoneLevel"],[119,43,128,41],[119,45,128,43],[120,8,129,6,"console"],[120,15,129,13],[120,16,129,14,"log"],[120,19,129,17],[120,20,129,18],[120,65,129,63],[120,66,129,64],[121,8,130,6],[121,15,130,13],[121,19,130,17],[122,6,131,4],[124,6,133,4],[125,6,134,4],[125,12,134,10,"enemyTypeIds"],[125,24,134,22],[125,27,134,25,"currentZoneLevel"],[125,43,134,41],[125,44,134,42,"enemyTypes"],[125,54,134,52],[126,6,135,4],[126,12,135,10,"randomEnemyTypeId"],[126,29,135,27],[126,32,135,30,"enemyTypeIds"],[126,44,135,42],[126,45,135,43,"Math"],[126,49,135,47],[126,50,135,48,"floor"],[126,55,135,53],[126,56,135,54,"Math"],[126,60,135,58],[126,61,135,59,"random"],[126,67,135,65],[126,68,135,66],[126,69,135,67],[126,72,135,70,"enemyTypeIds"],[126,84,135,82],[126,85,135,83,"length"],[126,91,135,89],[126,92,135,90],[126,93,135,91],[127,6,136,4],[127,12,136,10,"enemyType"],[127,21,136,19],[127,24,136,22,"ENEMY_TYPES"],[127,37,136,33],[127,38,136,33,"ENEMY_TYPES"],[127,49,136,33],[127,50,136,34,"randomEnemyTypeId"],[127,67,136,51],[127,68,136,52],[128,6,138,4],[128,10,138,8],[128,11,138,9,"enemyType"],[128,20,138,18],[128,22,138,20],[129,8,139,6,"console"],[129,15,139,13],[129,16,139,14,"log"],[129,19,139,17],[129,20,139,18],[129,36,139,34,"randomEnemyTypeId"],[129,53,139,51],[129,65,139,63],[129,66,139,64],[130,8,140,6],[130,15,140,13],[130,19,140,17],[131,6,141,4],[133,6,143,4],[134,6,144,4],[134,12,144,10,"scaledStats"],[134,23,144,21],[134,26,144,24],[134,30,144,24,"calculateEnemyStats"],[134,43,144,43],[134,44,144,43,"calculateEnemyStats"],[134,63,144,43],[134,65,144,44,"enemyType"],[134,74,144,53],[134,76,144,55,"currentZoneLevel"],[134,92,144,71],[134,94,144,73,"currentZone"],[134,105,144,84],[134,106,144,85,"id"],[134,108,144,87],[134,109,144,88],[136,6,146,4],[137,6,147,4],[137,12,147,10,"enemy"],[137,17,147,29],[137,20,147,32],[138,8,148,6,"id"],[138,10,148,8],[138,12,148,10],[138,15,148,13,"randomEnemyTypeId"],[138,32,148,30],[138,36,148,34,"Date"],[138,40,148,38],[138,41,148,39,"now"],[138,44,148,42],[138,45,148,43],[138,46,148,44],[138,50,148,48,"Math"],[138,54,148,52],[138,55,148,53,"random"],[138,61,148,59],[138,62,148,60],[138,63,148,61],[138,65,148,63],[139,8,149,6,"typeId"],[139,14,149,12],[139,16,149,14,"randomEnemyTypeId"],[139,33,149,31],[140,8,150,6,"name"],[140,12,150,10],[140,14,150,12,"enemyType"],[140,23,150,21],[140,24,150,22,"name"],[140,28,150,26],[141,8,151,6,"icon"],[141,12,151,10],[141,14,151,12,"enemyType"],[141,23,151,21],[141,24,151,22,"icon"],[141,28,151,26],[142,8,152,6,"hp"],[142,10,152,8],[142,12,152,10,"scaledStats"],[142,23,152,21],[142,24,152,22,"hp"],[142,26,152,24],[143,8,153,6,"maxHP"],[143,13,153,11],[143,15,153,13,"scaledStats"],[143,26,153,24],[143,27,153,25,"hp"],[143,29,153,27],[144,8,154,6,"attack"],[144,14,154,12],[144,16,154,14,"scaledStats"],[144,27,154,25],[144,28,154,26,"attack"],[144,34,154,32],[145,8,155,6,"xp"],[145,10,155,8],[145,12,155,10,"scaledStats"],[145,23,155,21],[145,24,155,22,"xp"],[145,26,155,24],[146,8,156,6,"resistances"],[146,19,156,17],[146,21,156,19,"scaledStats"],[146,32,156,30],[146,33,156,31,"resistances"],[146,44,156,42],[147,8,157,6,"position"],[147,16,157,14],[147,18,157,16],[148,10,158,8,"x"],[148,11,158,9],[148,13,158,11,"Math"],[148,17,158,15],[148,18,158,16,"random"],[148,24,158,22],[148,25,158,23],[148,26,158,24],[148,29,158,27],[148,32,158,30],[148,35,158,33],[148,37,158,35],[149,10,158,37],[150,10,159,8,"y"],[150,11,159,9],[150,13,159,11,"Math"],[150,17,159,15],[150,18,159,16,"random"],[150,24,159,22],[150,25,159,23],[150,26,159,24],[150,29,159,27],[150,32,159,30],[150,35,159,33],[151,8,160,6],[151,9,160,7],[152,8,161,6,"lastDamaged"],[152,19,161,17],[152,21,161,19],[153,6,162,4],[153,7,162,5],[154,6,164,4,"console"],[154,13,164,11],[154,14,164,12,"log"],[154,17,164,15],[154,18,164,16],[154,32,164,30,"enemy"],[154,37,164,35],[154,38,164,36,"name"],[154,42,164,40],[154,47,164,45,"enemy"],[154,52,164,50],[154,53,164,51,"hp"],[154,55,164,53],[154,63,164,61,"enemy"],[154,68,164,66],[154,69,164,67,"xp"],[154,71,164,69],[154,82,164,80,"currentZone"],[154,93,164,91],[154,94,164,92,"name"],[154,98,164,96],[154,100,164,98],[154,101,164,99],[155,6,165,4],[155,13,165,11,"enemy"],[155,18,165,16],[156,4,166,2],[156,5,166,3],[158,4,168,2],[159,4,169,2],[159,10,169,8,"recordEnemyKill"],[159,25,169,23],[159,28,169,27,"enemy"],[159,33,169,46],[159,37,169,51],[160,6,170,4],[160,10,170,8],[160,11,170,9,"currentZone"],[160,22,170,20],[160,26,170,24],[160,27,170,25,"currentZoneLevel"],[160,43,170,41],[160,45,170,43],[161,6,172,4,"console"],[161,13,172,11],[161,14,172,12,"log"],[161,17,172,15],[161,18,172,16],[161,24,172,22,"enemy"],[161,29,172,27],[161,30,172,28,"name"],[161,34,172,32],[161,47,172,45,"enemy"],[161,52,172,50],[161,53,172,51,"xp"],[161,55,172,53],[161,60,172,58],[161,61,172,59],[162,6,174,4,"setZoneProgress"],[162,21,174,19],[162,22,174,20,"prev"],[162,26,174,24],[162,30,174,28],[163,8,175,6],[163,14,175,12,"newProgress"],[163,25,175,23],[163,28,175,26],[164,10,175,28],[164,13,175,31,"prev"],[165,8,175,36],[165,9,175,37],[166,8,176,6],[166,14,176,12,"zoneId"],[166,20,176,18],[166,23,176,21,"currentZone"],[166,34,176,32],[166,35,176,33,"id"],[166,37,176,35],[167,8,178,6],[167,12,178,10],[167,13,178,11,"newProgress"],[167,24,178,22],[167,25,178,23,"zoneId"],[167,31,178,29],[167,32,178,30],[167,34,178,32],[168,10,179,8,"newProgress"],[168,21,179,19],[168,22,179,20,"zoneId"],[168,28,179,26],[168,29,179,27],[168,32,179,30],[169,12,180,10,"zoneId"],[169,18,180,16],[170,12,181,10,"currentLevel"],[170,24,181,22],[170,26,181,24],[170,27,181,25],[171,12,182,10,"killsInLevel"],[171,24,182,22],[171,26,182,24],[171,27,182,25],[172,12,183,10,"completed"],[172,21,183,19],[172,23,183,21],[173,10,184,8],[173,11,184,9],[174,8,185,6],[175,8,187,6],[175,14,187,12,"progress"],[175,22,187,20],[175,25,187,23],[176,10,187,25],[176,13,187,28,"newProgress"],[176,24,187,39],[176,25,187,40,"zoneId"],[176,31,187,46],[177,8,187,48],[177,9,187,49],[178,8,188,6,"progress"],[178,16,188,14],[178,17,188,15,"killsInLevel"],[178,29,188,27],[178,33,188,31],[178,34,188,32],[180,8,190,6],[181,8,191,6],[181,14,191,12,"currentZoneLevel"],[181,30,191,28],[181,33,191,31,"currentZone"],[181,44,191,42],[181,45,191,43,"levels"],[181,51,191,49],[181,52,191,50,"progress"],[181,60,191,58],[181,61,191,59,"currentLevel"],[181,73,191,71],[181,76,191,74],[181,77,191,75],[181,78,191,76],[182,8,192,6],[182,14,192,12,"requiredKills"],[182,27,192,25],[182,30,192,28,"currentZoneLevel"],[182,46,192,44],[182,49,192,47,"currentZoneLevel"],[182,65,192,63],[182,66,192,64,"requiredKills"],[182,79,192,77],[182,82,192,80,"calculateKillRequirement"],[182,106,192,104],[182,107,192,105,"zoneId"],[182,113,192,111],[182,115,192,113,"progress"],[182,123,192,121],[182,124,192,122,"currentLevel"],[182,136,192,134],[182,137,192,135],[183,8,194,6,"console"],[183,15,194,13],[183,16,194,14,"log"],[183,19,194,17],[183,20,194,18],[183,31,194,29,"zoneId"],[183,37,194,35],[183,47,194,45,"progress"],[183,55,194,53],[183,56,194,54,"currentLevel"],[183,68,194,66],[183,73,194,71,"progress"],[183,81,194,79],[183,82,194,80,"killsInLevel"],[183,94,194,92],[183,98,194,96,"requiredKills"],[183,111,194,109],[183,119,194,117],[183,120,194,118],[185,8,196,6],[186,8,197,6],[186,12,197,10,"progress"],[186,20,197,18],[186,21,197,19,"killsInLevel"],[186,33,197,31],[186,37,197,35,"requiredKills"],[186,50,197,48],[186,52,197,50],[187,10,198,8,"console"],[187,17,198,15],[187,18,198,16,"log"],[187,21,198,19],[187,22,198,20],[187,34,198,32,"progress"],[187,42,198,40],[187,43,198,41,"currentLevel"],[187,55,198,53],[187,72,198,70,"currentZone"],[187,83,198,81],[187,84,198,82,"name"],[187,88,198,86],[187,91,198,89],[187,92,198,90],[189,10,200,8],[190,10,201,8],[190,14,201,12,"progress"],[190,22,201,20],[190,23,201,21,"currentLevel"],[190,35,201,33],[190,38,201,36],[190,39,201,37],[190,41,201,39],[191,12,202,10,"progress"],[191,20,202,18],[191,21,202,19,"currentLevel"],[191,33,202,31],[191,37,202,35],[191,38,202,36],[192,12,203,10,"progress"],[192,20,203,18],[192,21,203,19,"killsInLevel"],[192,33,203,31],[192,36,203,34],[192,37,203,35],[193,12,204,10,"console"],[193,19,204,17],[193,20,204,18,"log"],[193,23,204,21],[193,24,204,22],[193,48,204,46,"progress"],[193,56,204,54],[193,57,204,55,"currentLevel"],[193,69,204,67],[193,71,204,69],[193,72,204,70],[195,12,206,10],[196,12,207,10],[196,18,207,16,"nextLevel"],[196,27,207,25],[196,30,207,28,"currentZone"],[196,41,207,39],[196,42,207,40,"levels"],[196,48,207,46],[196,49,207,47,"progress"],[196,57,207,55],[196,58,207,56,"currentLevel"],[196,70,207,68],[196,73,207,71],[196,74,207,72],[196,75,207,73],[197,12,208,10],[197,16,208,14,"nextLevel"],[197,25,208,23],[197,27,208,25],[198,14,209,12,"setCurrentZoneLevel"],[198,33,209,31],[198,34,209,32,"nextLevel"],[198,43,209,41],[198,44,209,42],[199,12,210,10],[200,10,211,8],[200,11,211,9],[200,17,211,15],[201,12,212,10],[202,12,213,10,"progress"],[202,20,213,18],[202,21,213,19,"completed"],[202,30,213,28],[202,33,213,31],[202,37,213,35],[203,12,214,10,"console"],[203,19,214,17],[203,20,214,18,"log"],[203,23,214,21],[203,24,214,22],[203,35,214,33,"currentZone"],[203,46,214,44],[203,47,214,45,"name"],[203,51,214,49],[203,84,214,82],[203,85,214,83],[204,10,215,8],[205,8,216,6],[206,8,218,6,"newProgress"],[206,19,218,17],[206,20,218,18,"zoneId"],[206,26,218,24],[206,27,218,25],[206,30,218,28,"progress"],[206,38,218,36],[208,8,220,6],[209,8,221,6,"setTimeout"],[209,18,221,16],[209,19,221,17],[209,25,221,23],[210,10,222,8,"console"],[210,17,222,15],[210,18,222,16,"log"],[210,21,222,19],[210,22,222,20],[210,67,222,65],[210,69,222,67,"newProgress"],[210,80,222,78],[210,81,222,79],[211,10,223,8,"updateZoneProgress"],[211,28,223,26],[211,29,223,27,"newProgress"],[211,40,223,38],[211,41,223,39],[212,8,224,6],[212,9,224,7],[212,11,224,9],[212,12,224,10],[212,13,224,11],[212,14,224,12],[212,15,224,13],[214,8,226,6],[214,15,226,13,"newProgress"],[214,26,226,24],[215,6,227,4],[215,7,227,5],[215,8,227,6],[216,4,228,2],[216,5,228,3],[218,4,230,2],[219,4,231,2],[219,10,231,8,"isZoneUnlockedLocal"],[219,29,231,27],[219,32,231,31,"zoneId"],[219,38,231,45],[219,42,231,59],[220,6,232,4],[220,10,232,8,"zoneId"],[220,16,232,14],[220,21,232,19],[220,22,232,20],[220,24,232,22],[220,31,232,29],[220,35,232,33],[220,36,232,34],[220,37,232,35],[222,6,234,4],[222,12,234,10,"zone"],[222,16,234,14],[222,19,234,17,"ZONES"],[222,32,234,22],[222,33,234,22,"ZONES"],[222,38,234,22],[222,39,234,23,"find"],[222,43,234,27],[222,44,234,28,"z"],[222,45,234,29],[222,49,234,33,"z"],[222,50,234,34],[222,51,234,35,"id"],[222,53,234,37],[222,58,234,42,"zoneId"],[222,64,234,48],[222,65,234,49],[223,6,235,4],[223,10,235,8],[223,11,235,9,"zone"],[223,15,235,13],[223,17,235,15,"unlockRequirement"],[223,34,235,32],[223,35,235,33,"previousZone"],[223,47,235,45],[223,49,235,47],[223,56,235,54],[223,60,235,58],[224,6,237,4],[224,12,237,10,"prevZoneProgress"],[224,28,237,26],[224,31,237,29,"zoneProgress"],[224,43,237,41],[224,44,237,42,"zone"],[224,48,237,46],[224,49,237,47,"unlockRequirement"],[224,66,237,64],[224,67,237,65,"previousZone"],[224,79,237,77],[224,80,237,78],[225,6,238,4],[225,13,238,11,"prevZoneProgress"],[225,29,238,27],[225,31,238,29,"completed"],[225,40,238,38],[225,44,238,42],[225,49,238,47],[226,4,239,2],[226,5,239,3],[228,4,241,2],[229,4,242,2],[229,10,242,8,"getUnlockedZones"],[229,26,242,24],[229,29,242,27,"getUnlockedZones"],[229,30,242,27],[229,35,242,41],[230,6,243,4],[230,13,243,11,"ZONES"],[230,26,243,16],[230,27,243,16,"ZONES"],[230,32,243,16],[230,33,243,17,"filter"],[230,39,243,23],[230,40,243,24,"zone"],[230,44,243,28],[230,48,243,32,"isZoneUnlockedLocal"],[230,67,243,51],[230,68,243,52,"zone"],[230,72,243,56],[230,73,243,57,"id"],[230,75,243,59],[230,76,243,60],[230,77,243,61],[231,4,244,2],[231,5,244,3],[232,4,246,2],[232,10,246,8,"contextValue"],[232,22,246,37],[232,25,246,40,"React"],[232,30,246,45],[232,31,246,45,"default"],[232,38,246,45],[232,39,246,46,"useMemo"],[232,46,246,53],[232,47,246,54],[232,54,246,61],[233,6,247,4,"currentZone"],[233,17,247,15],[234,6,248,4,"currentZoneLevel"],[234,22,248,20],[235,6,249,4,"zoneProgress"],[235,18,249,16],[236,6,250,4,"availableZones"],[236,20,250,18],[236,22,250,20,"ZONES"],[236,35,250,25],[236,36,250,25,"ZONES"],[236,41,250,25],[237,6,251,4,"selectZone"],[237,16,251,14],[238,6,252,4,"getZoneProgress"],[238,21,252,19],[239,6,253,4,"spawnZoneEnemy"],[239,20,253,18],[240,6,254,4,"recordEnemyKill"],[240,21,254,19],[241,6,255,4,"isZoneUnlocked"],[241,20,255,18],[241,22,255,20,"isZoneUnlockedLocal"],[241,41,255,39],[242,6,256,4,"getUnlockedZones"],[243,4,257,2],[243,5,257,3],[243,6,257,4],[243,8,257,6],[243,9,258,4,"currentZone"],[243,20,258,15],[243,22,259,4,"currentZoneLevel"],[243,38,259,20],[243,40,260,4,"zoneProgress"],[243,52,260,16],[243,54,261,4,"selectZone"],[243,64,261,14],[243,66,262,4,"getZoneProgress"],[243,81,262,19],[243,83,263,4,"spawnZoneEnemy"],[243,97,263,18],[243,99,264,4,"recordEnemyKill"],[243,114,264,19],[243,116,265,4,"isZoneUnlockedLocal"],[243,135,265,23],[243,137,266,4,"getUnlockedZones"],[243,153,266,20],[243,154,267,3],[243,155,267,4],[244,4,269,2],[244,24,270,4],[244,28,270,4,"_reactJsxDevRuntime"],[244,47,270,4],[244,48,270,4,"jsxDEV"],[244,54,270,4],[244,56,270,5,"ZoneContext"],[244,67,270,16],[244,68,270,17,"Provider"],[244,76,270,25],[245,6,270,26,"value"],[245,11,270,31],[245,13,270,33,"contextValue"],[245,25,270,46],[246,6,270,46,"children"],[246,14,270,46],[246,16,271,7,"children"],[247,4,271,15],[248,6,271,15,"fileName"],[248,14,271,15],[248,16,271,15,"_jsxFileName"],[248,28,271,15],[249,6,271,15,"lineNumber"],[249,16,271,15],[250,6,271,15,"columnNumber"],[250,18,271,15],[251,4,271,15],[251,11,272,26],[251,12,272,27],[252,2,274,0],[252,3,274,1],[253,0,274,2],[253,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE4C;CFM;4BGE;iFCM;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCC,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC+C;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbW;CHiB"},"hasCjsExports":false},"type":"js/module"}]}