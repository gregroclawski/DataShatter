{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\"; // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  const ZoneProvider = ({\n    children\n  }) => {\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Separate \"progression\" from \"currently selected\" zones\n    const [currentZone, setCurrentZone] = (0, _react.useState)(() => {\n      console.log('üéØ ZONE INIT: Initializing currentZone (selected zone) to Zone 1 Level 1');\n      return _dataZoneData.ZONES[0];\n    }); // Currently selected zone for gameplay\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(() => {\n      console.log('üéØ ZONE INIT: Initializing currentZoneLevel to Zone 1 Level 1');\n      return _dataZoneData.ZONES[0]?.levels[0] || null;\n    });\n    const [progressionZone, setProgressionZone] = (0, _react.useState)(() => {\n      console.log('üéØ ZONE INIT: Initializing progressionZone (unlock progress) to Zone 1');\n      return _dataZoneData.ZONES[0];\n    }); // Highest unlocked zone for progression\n    const [hasInitializedZones, setHasInitializedZones] = (0, _react.useState)(false); // Flag to prevent re-initialization\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('üó∫Ô∏è Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('üó∫Ô∏è No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // Initialize with game context data when it becomes available (ONLY ONCE)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && !hasInitializedZones) {\n        console.log('üîÑ ZONE CONTEXT - Loading zone progress from GameContext (FIRST TIME):', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n\n        // Find the highest unlocked zone for progression tracking\n        const progressEntries = Object.values(gameState.zoneProgress || {});\n        let highestZone = _dataZoneData.ZONES[0];\n        let highestLevel = _dataZoneData.ZONES[0]?.levels[0];\n        for (const progress of progressEntries) {\n          if (progress && progress.zoneId) {\n            const zone = _dataZoneData.ZONES.find(z => z.id === progress.zoneId);\n            if (zone) {\n              highestZone = zone;\n              highestLevel = zone.levels[(progress.currentLevel || 1) - 1];\n            }\n          }\n        }\n        console.log(`üéØ PROGRESSION ZONE SET: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (highest unlocked)`);\n        setProgressionZone(highestZone);\n\n        // Set current selected zone to progression zone ONLY on initial load  \n        console.log(`üéØ SELECTED ZONE INITIALIZED (ONCE): Zone ${highestZone.id} Level ${highestLevel?.level || 1} (matching progression)`);\n        setCurrentZone(highestZone);\n        setCurrentZoneLevel(highestLevel || _dataZoneData.ZONES[0]?.levels[0]);\n        setHasInitializedZones(true); // Mark as initialized to prevent future auto-selection\n      } else if (gameState?.zoneProgress && hasInitializedZones) {\n        // Update zone progress data but DON'T change selected zone\n        console.log('üîÑ ZONE CONTEXT - Updating zone progress data (preserving selection)');\n        setZoneProgress(gameState.zoneProgress);\n\n        // Update progression zone tracking for unlock logic\n        const progressEntries = Object.values(gameState.zoneProgress || {});\n        let highestZone = _dataZoneData.ZONES[0];\n        for (const progress of progressEntries) {\n          if (progress && progress.zoneId) {\n            const zone = _dataZoneData.ZONES.find(z => z.id === progress.zoneId);\n            if (zone) {\n              highestZone = zone;\n            }\n          }\n        }\n        console.log(`üéØ PROGRESSION ZONE UPDATED: Zone ${highestZone.id} (selected zone unchanged)`);\n        setProgressionZone(highestZone);\n      }\n    }, [gameState?.zoneProgress, hasInitializedZones]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Zone selection and management - separate from progression\n    const selectZone = (zoneId, levelNumber) => {\n      if (!isZoneUnlockedLocal(zoneId)) {\n        console.log(`‚ùå Zone ${zoneId} is not unlocked`);\n        return false;\n      }\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone) {\n        console.log(`‚ùå Zone ${zoneId} not found`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`‚ùå Zone ${zoneId} Level ${levelNumber} not found`);\n        return false;\n      }\n      console.log(`üéØ ZONE SELECTION: Setting currentZone to Zone ${zoneId} Level ${levelNumber} (${zone.name})`);\n      console.log(`üìç BEFORE: currentZone=${currentZone?.id}, currentLevel=${currentZoneLevel?.level}`);\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`üìç AFTER: Selected Zone ${zoneId} Level ${levelNumber} - Kills will count toward this zone`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('‚ùå No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`‚ùå Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`üê∫ Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`üíÄ ${enemy.name} killed! +${enemy.xp} XP`);\n      console.log(`üéØ KILL TRACKING: Recording kill for SELECTED Zone ${currentZone.id} Level ${currentZoneLevel.level}`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n\n        // Get the required kills for current level from zone data\n        const currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        const requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        const willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`üéâ Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`üìä Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment with subscription multiplier\n          const zoneKillMultiplier = gameState.subscriptionBenefits?.zone_kill_multiplier || 1.0;\n          const killsToAdd = Math.floor(1 * zoneKillMultiplier);\n          progress.killsInLevel += killsToAdd;\n          console.log(`üìä Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (+${killsToAdd} with ${zoneKillMultiplier}x multiplier)`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`üéâ Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`‚¨ÜÔ∏è PROGRESSION: Advanced to Level ${progress.currentLevel} (player can still select other zones)`);\n\n            // Update progression zone but DON'T auto-select next level\n            // Player keeps their current selection unless they manually change it\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel && currentZone === progressionZone) {\n              // Only auto-advance if player is currently on the progression zone\n              console.log(`üéØ AUTO-ADVANCE: Player was on progression zone, advancing to next level`);\n              setCurrentZoneLevel(nextLevel);\n              setProgressionZone(currentZone); // Update progression zone\n            } else {\n              console.log(`üéØ SELECTION PRESERVED: Player selected different zone, keeping their choice`);\n            }\n          } else {\n            // Zone completed - Auto-advance to next zone\n            progress.completed = true;\n            console.log(`üèÜ Zone ${currentZone.name} completed! Next zone unlocked.`);\n\n            // CRITICAL FIX: Auto-advance to the next zone when current zone is completed\n            const nextZone = _dataZoneData.ZONES.find(z => z.id === zoneId + 1);\n            if (nextZone) {\n              console.log(`‚¨ÜÔ∏è ZONE PROGRESSION: Auto-advancing from Zone ${zoneId} to Zone ${nextZone.id}`);\n\n              // Initialize next zone progress if it doesn't exist\n              if (!newProgress[nextZone.id]) {\n                newProgress[nextZone.id] = {\n                  zoneId: nextZone.id,\n                  currentLevel: 1,\n                  killsInLevel: 0,\n                  completed: false\n                };\n              }\n\n              // Auto-select the next zone for the player\n              setTimeout(() => {\n                console.log(`üéØ AUTO-SELECTING: Moving player to Zone ${nextZone.id} Level 1`);\n                setCurrentZone(nextZone);\n                setCurrentZoneLevel(nextZone.levels[0]);\n                setProgressionZone(nextZone);\n              }, 100); // Small delay to ensure state updates properly\n            } else {\n              console.log(`üèÅ GAME COMPLETE: No more zones available after Zone ${zoneId}`);\n            }\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`üíæ Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      // Currently selected zone for gameplay\n      currentZoneLevel,\n      progressionZone,\n      // Highest unlocked zone for progression\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, progressionZone, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":360,"map":[[4,67,5,0],[5,2,5,0,"Object"],[5,8,5,0],[5,9,5,0,"defineProperty"],[5,23,5,0],[5,24,5,0,"exports"],[5,31,5,0],[6,4,5,0,"value"],[6,9,5,0],[7,2,5,0],[8,2,5,0],[8,11,5,0,"_interopDefault"],[8,27,5,0,"e"],[8,28,5,0],[9,4,5,0],[9,11,5,0,"e"],[9,12,5,0],[9,16,5,0,"e"],[9,17,5,0],[9,18,5,0,"__esModule"],[9,28,5,0],[9,31,5,0,"e"],[9,32,5,0],[10,6,5,0,"default"],[10,13,5,0],[10,15,5,0,"e"],[11,4,5,0],[12,2,5,0],[13,2,57,0,"Object"],[13,8,57,0],[13,9,57,0,"defineProperty"],[13,23,57,0],[13,24,57,0,"exports"],[13,31,57,0],[14,4,57,0,"enumerable"],[14,14,57,0],[15,4,57,0,"get"],[15,7,57,0],[15,18,57,0,"get"],[15,19,57,0],[16,6,57,0],[16,13,57,0,"useZone"],[16,20,57,0],[17,4,57,0],[18,2,57,0],[19,2,65,0,"Object"],[19,8,65,0],[19,9,65,0,"defineProperty"],[19,23,65,0],[19,24,65,0,"exports"],[19,31,65,0],[20,4,65,0,"enumerable"],[20,14,65,0],[21,4,65,0,"get"],[21,7,65,0],[21,18,65,0,"get"],[21,19,65,0],[22,6,65,0],[22,13,65,0,"ZoneProvider"],[22,25,65,0],[23,4,65,0],[24,2,65,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_dataZoneData"],[27,19,2,0],[27,22,2,0,"require"],[27,29,2,0],[27,30,2,0,"_dependencyMap"],[27,44,2,0],[28,2,3,0],[28,6,3,0,"_GameContext"],[28,18,3,0],[28,21,3,0,"require"],[28,28,3,0],[28,29,3,0,"_dependencyMap"],[28,43,3,0],[29,2,3,40],[29,6,3,40,"_reactJsxDevRuntime"],[29,25,3,40],[29,28,3,40,"require"],[29,35,3,40],[29,36,3,40,"_dependencyMap"],[29,50,3,40],[30,2,6,0],[30,8,6,6,"calculateKillRequirement"],[30,32,6,30],[30,35,6,33,"calculateKillRequirement"],[30,36,6,34,"zoneId"],[30,42,6,48],[30,44,6,50,"level"],[30,49,6,63],[30,54,6,76],[31,4,7,2],[31,8,7,6,"zoneId"],[31,14,7,12],[31,18,7,16],[31,19,7,17],[31,21,7,19],[31,28,7,26],[31,30,7,28],[31,33,7,32,"level"],[31,38,7,37],[31,41,7,40],[31,42,7,42],[31,43,7,43],[31,44,7,49],[32,4,8,2],[32,8,8,6,"zoneId"],[32,14,8,12],[32,18,8,16],[32,20,8,18],[32,22,8,20],[32,29,8,27],[32,31,8,29],[32,34,8,33,"level"],[32,39,8,38],[32,42,8,41],[32,44,8,44],[32,45,8,45],[32,46,8,50],[33,4,9,2],[33,8,9,6,"zoneId"],[33,14,9,12],[33,18,9,16],[33,20,9,18],[33,22,9,20],[33,29,9,27],[33,31,9,29],[33,34,9,33,"level"],[33,39,9,38],[33,42,9,41],[33,44,9,44],[33,45,9,45],[33,46,9,50],[34,4,10,2],[34,8,10,6,"zoneId"],[34,14,10,12],[34,18,10,16],[34,20,10,18],[34,22,10,20],[34,29,10,27],[34,32,10,30],[34,35,10,34,"level"],[34,40,10,39],[34,43,10,42],[34,45,10,45],[34,46,10,46],[34,47,10,50],[35,4,11,2],[35,11,11,9],[35,14,11,12],[35,17,11,16,"level"],[35,22,11,21],[35,25,11,24],[35,27,11,27],[35,28,11,28],[35,29,11,50],[36,2,12,0],[36,3,12,1],[37,2,55,0],[37,8,55,6,"ZoneContext"],[37,19,55,17],[37,35,55,20],[37,39,55,20,"createContext"],[37,45,55,33],[37,46,55,33,"createContext"],[37,59,55,33],[37,61,55,63,"undefined"],[37,70,55,72],[37,71,55,73],[38,2,57,7],[38,8,57,13,"useZone"],[38,15,57,20],[38,18,57,23,"useZone"],[38,19,57,23],[38,24,57,29],[39,4,58,2],[39,10,58,8,"context"],[39,17,58,15],[39,20,58,18],[39,24,58,18,"useContext"],[39,30,58,28],[39,31,58,28,"useContext"],[39,41,58,28],[39,43,58,29,"ZoneContext"],[39,54,58,40],[39,55,58,41],[40,4,59,2],[40,8,59,6],[40,9,59,7,"context"],[40,16,59,14],[40,18,59,16],[41,6,60,4],[41,12,60,10],[41,16,60,14,"Error"],[41,21,60,19],[41,22,60,20],[41,66,60,64],[41,67,60,65],[42,4,61,2],[43,4,62,2],[43,11,62,9,"context"],[43,18,62,16],[44,2,63,0],[44,3,63,1],[45,2,65,7],[45,8,65,13,"ZoneProvider"],[45,20,65,25],[45,23,65,28,"ZoneProvider"],[45,24,65,29],[46,4,65,31,"children"],[47,2,65,65],[47,3,65,66],[47,8,65,71],[48,4,66,2],[48,10,66,8],[49,6,66,10,"gameState"],[49,15,66,19],[50,6,66,21,"updateZoneProgress"],[51,4,66,40],[51,5,66,41],[51,8,66,44],[51,12,66,44,"useGame"],[51,24,66,51],[51,25,66,51,"useGame"],[51,32,66,51],[51,34,66,52],[51,35,66,53],[53,4,68,2],[54,4,69,2],[54,10,69,8],[54,11,69,9,"currentZone"],[54,22,69,20],[54,24,69,22,"setCurrentZone"],[54,38,69,36],[54,39,69,37],[54,42,69,40],[54,46,69,40,"useState"],[54,52,69,48],[54,53,69,48,"useState"],[54,61,69,48],[54,63,69,62],[54,69,69,68],[55,6,70,4,"console"],[55,13,70,11],[55,14,70,12,"log"],[55,17,70,15],[55,18,70,16],[55,92,70,90],[55,93,70,91],[56,6,71,4],[56,13,71,11,"ZONES"],[56,26,71,16],[56,27,71,16,"ZONES"],[56,32,71,16],[56,33,71,17],[56,34,71,18],[56,35,71,19],[57,4,72,2],[57,5,72,3],[57,6,72,4],[57,7,72,5],[57,8,72,6],[58,4,73,2],[58,10,73,8],[58,11,73,9,"currentZoneLevel"],[58,27,73,25],[58,29,73,27,"setCurrentZoneLevel"],[58,48,73,46],[58,49,73,47],[58,52,73,50],[58,56,73,50,"useState"],[58,62,73,58],[58,63,73,58,"useState"],[58,71,73,58],[58,73,73,77],[58,79,73,83],[59,6,74,4,"console"],[59,13,74,11],[59,14,74,12,"log"],[59,17,74,15],[59,18,74,16],[59,81,74,79],[59,82,74,80],[60,6,75,4],[60,13,75,11,"ZONES"],[60,26,75,16],[60,27,75,16,"ZONES"],[60,32,75,16],[60,33,75,17],[60,34,75,18],[60,35,75,19],[60,37,75,21,"levels"],[60,43,75,27],[60,44,75,28],[60,45,75,29],[60,46,75,30],[60,50,75,34],[60,54,75,38],[61,4,76,2],[61,5,76,3],[61,6,76,4],[62,4,77,2],[62,10,77,8],[62,11,77,9,"progressionZone"],[62,26,77,24],[62,28,77,26,"setProgressionZone"],[62,46,77,44],[62,47,77,45],[62,50,77,48],[62,54,77,48,"useState"],[62,60,77,56],[62,61,77,56,"useState"],[62,69,77,56],[62,71,77,70],[62,77,77,76],[63,6,78,4,"console"],[63,13,78,11],[63,14,78,12,"log"],[63,17,78,15],[63,18,78,16],[63,90,78,88],[63,91,78,89],[64,6,79,4],[64,13,79,11,"ZONES"],[64,26,79,16],[64,27,79,16,"ZONES"],[64,32,79,16],[64,33,79,17],[64,34,79,18],[64,35,79,19],[65,4,80,2],[65,5,80,3],[65,6,80,4],[65,7,80,5],[65,8,80,6],[66,4,81,2],[66,10,81,8],[66,11,81,9,"hasInitializedZones"],[66,30,81,28],[66,32,81,30,"setHasInitializedZones"],[66,54,81,52],[66,55,81,53],[66,58,81,56],[66,62,81,56,"useState"],[66,68,81,64],[66,69,81,64,"useState"],[66,77,81,64],[66,79,81,65],[66,84,81,70],[66,85,81,71],[66,86,81,72],[66,87,81,73],[67,4,82,2],[67,10,82,8],[67,11,82,9,"zoneProgress"],[67,23,82,21],[67,25,82,23,"setZoneProgress"],[67,40,82,38],[67,41,82,39],[67,44,82,42],[67,48,82,42,"useState"],[67,54,82,50],[67,55,82,50,"useState"],[67,63,82,50],[67,65,82,81],[67,71,82,87],[68,6,83,4],[69,6,84,4],[69,12,84,10,"savedProgress"],[69,25,84,23],[69,28,84,26,"gameState"],[69,37,84,35],[69,39,84,37,"zoneProgress"],[69,51,84,49],[70,6,85,4],[70,10,85,8,"savedProgress"],[70,23,85,21],[70,27,85,25,"Object"],[70,33,85,31],[70,34,85,32,"keys"],[70,38,85,36],[70,39,85,37,"savedProgress"],[70,52,85,50],[70,53,85,51],[70,54,85,52,"length"],[70,60,85,58],[70,63,85,61],[70,64,85,62],[70,66,85,64],[71,8,86,6,"console"],[71,15,86,13],[71,16,86,14,"log"],[71,19,86,17],[71,20,86,18],[71,54,86,52],[71,56,86,54,"savedProgress"],[71,69,86,67],[71,70,86,68],[72,8,87,6],[72,15,87,13,"savedProgress"],[72,28,87,26],[73,6,88,4],[73,7,88,5],[73,13,88,11],[74,8,89,6,"console"],[74,15,89,13],[74,16,89,14,"log"],[74,19,89,17],[74,20,89,18],[74,64,89,62],[74,65,89,63],[75,8,90,6],[75,15,90,13],[76,10,90,15],[76,11,90,16],[76,13,90,18],[77,12,90,20,"zoneId"],[77,18,90,26],[77,20,90,28],[77,21,90,29],[78,12,90,31,"currentLevel"],[78,24,90,43],[78,26,90,45],[78,27,90,46],[79,12,90,48,"killsInLevel"],[79,24,90,60],[79,26,90,62],[79,27,90,63],[80,12,90,65,"completed"],[80,21,90,74],[80,23,90,76],[81,10,90,82],[82,8,90,84],[82,9,90,85],[83,6,91,4],[84,4,92,2],[84,5,92,3],[84,6,92,4],[86,4,94,2],[87,4,95,2],[87,8,95,2,"useEffect"],[87,14,95,11],[87,15,95,11,"useEffect"],[87,24,95,11],[87,26,95,12],[87,32,95,18],[88,6,96,4],[88,10,96,8,"gameState"],[88,19,96,17],[88,21,96,19,"zoneProgress"],[88,33,96,31],[88,37,96,35],[88,38,96,36,"hasInitializedZones"],[88,57,96,55],[88,59,96,57],[89,8,97,6,"console"],[89,15,97,13],[89,16,97,14,"log"],[89,19,97,17],[89,20,97,18],[89,92,97,90],[89,94,97,92,"gameState"],[89,103,97,101],[89,104,97,102,"zoneProgress"],[89,116,97,114],[89,117,97,115],[90,8,98,6,"setZoneProgress"],[90,23,98,21],[90,24,98,22,"gameState"],[90,33,98,31],[90,34,98,32,"zoneProgress"],[90,46,98,44],[90,47,98,45],[92,8,100,6],[93,8,101,6],[93,14,101,12,"progressEntries"],[93,29,101,27],[93,32,101,30,"Object"],[93,38,101,36],[93,39,101,37,"values"],[93,45,101,43],[93,46,101,44,"gameState"],[93,55,101,53],[93,56,101,54,"zoneProgress"],[93,68,101,66],[93,72,101,70],[93,73,101,71],[93,74,101,72],[93,75,101,73],[94,8,102,6],[94,12,102,10,"highestZone"],[94,23,102,21],[94,26,102,24,"ZONES"],[94,39,102,29],[94,40,102,29,"ZONES"],[94,45,102,29],[94,46,102,30],[94,47,102,31],[94,48,102,32],[95,8,103,6],[95,12,103,10,"highestLevel"],[95,24,103,22],[95,27,103,25,"ZONES"],[95,40,103,30],[95,41,103,30,"ZONES"],[95,46,103,30],[95,47,103,31],[95,48,103,32],[95,49,103,33],[95,51,103,35,"levels"],[95,57,103,41],[95,58,103,42],[95,59,103,43],[95,60,103,44],[96,8,105,6],[96,13,105,11],[96,19,105,17,"progress"],[96,27,105,25],[96,31,105,29,"progressEntries"],[96,46,105,44],[96,48,105,46],[97,10,106,8],[97,14,106,12,"progress"],[97,22,106,20],[97,26,106,24,"progress"],[97,34,106,32],[97,35,106,33,"zoneId"],[97,41,106,39],[97,43,106,41],[98,12,107,10],[98,18,107,16,"zone"],[98,22,107,20],[98,25,107,23,"ZONES"],[98,38,107,28],[98,39,107,28,"ZONES"],[98,44,107,28],[98,45,107,29,"find"],[98,49,107,33],[98,50,107,34,"z"],[98,51,107,35],[98,55,107,39,"z"],[98,56,107,40],[98,57,107,41,"id"],[98,59,107,43],[98,64,107,48,"progress"],[98,72,107,56],[98,73,107,57,"zoneId"],[98,79,107,63],[98,80,107,64],[99,12,108,10],[99,16,108,14,"zone"],[99,20,108,18],[99,22,108,20],[100,14,109,12,"highestZone"],[100,25,109,23],[100,28,109,26,"zone"],[100,32,109,30],[101,14,110,12,"highestLevel"],[101,26,110,24],[101,29,110,27,"zone"],[101,33,110,31],[101,34,110,32,"levels"],[101,40,110,38],[101,41,110,39],[101,42,110,40,"progress"],[101,50,110,48],[101,51,110,49,"currentLevel"],[101,63,110,61],[101,67,110,65],[101,68,110,66],[101,72,110,70],[101,73,110,71],[101,74,110,72],[102,12,111,10],[103,10,112,8],[104,8,113,6],[105,8,115,6,"console"],[105,15,115,13],[105,16,115,14,"log"],[105,19,115,17],[105,20,115,18],[105,53,115,51,"highestZone"],[105,64,115,62],[105,65,115,63,"id"],[105,67,115,65],[105,77,115,75,"highestLevel"],[105,89,115,87],[105,91,115,89,"level"],[105,96,115,94],[105,100,115,98],[105,101,115,99],[105,122,115,120],[105,123,115,121],[106,8,116,6,"setProgressionZone"],[106,26,116,24],[106,27,116,25,"highestZone"],[106,38,116,36],[106,39,116,37],[108,8,118,6],[109,8,119,6,"console"],[109,15,119,13],[109,16,119,14,"log"],[109,19,119,17],[109,20,119,18],[109,65,119,63,"highestZone"],[109,76,119,74],[109,77,119,75,"id"],[109,79,119,77],[109,89,119,87,"highestLevel"],[109,101,119,99],[109,103,119,101,"level"],[109,108,119,106],[109,112,119,110],[109,113,119,111],[109,138,119,136],[109,139,119,137],[110,8,120,6,"setCurrentZone"],[110,22,120,20],[110,23,120,21,"highestZone"],[110,34,120,32],[110,35,120,33],[111,8,121,6,"setCurrentZoneLevel"],[111,27,121,25],[111,28,121,26,"highestLevel"],[111,40,121,38],[111,44,121,42,"ZONES"],[111,57,121,47],[111,58,121,47,"ZONES"],[111,63,121,47],[111,64,121,48],[111,65,121,49],[111,66,121,50],[111,68,121,52,"levels"],[111,74,121,58],[111,75,121,59],[111,76,121,60],[111,77,121,61],[111,78,121,62],[112,8,122,6,"setHasInitializedZones"],[112,30,122,28],[112,31,122,29],[112,35,122,33],[112,36,122,34],[112,37,122,35],[112,38,122,36],[113,6,123,4],[113,7,123,5],[113,13,123,11],[113,17,123,15,"gameState"],[113,26,123,24],[113,28,123,26,"zoneProgress"],[113,40,123,38],[113,44,123,42,"hasInitializedZones"],[113,63,123,61],[113,65,123,63],[114,8,124,6],[115,8,125,6,"console"],[115,15,125,13],[115,16,125,14,"log"],[115,19,125,17],[115,20,125,18],[115,90,125,88],[115,91,125,89],[116,8,126,6,"setZoneProgress"],[116,23,126,21],[116,24,126,22,"gameState"],[116,33,126,31],[116,34,126,32,"zoneProgress"],[116,46,126,44],[116,47,126,45],[118,8,128,6],[119,8,129,6],[119,14,129,12,"progressEntries"],[119,29,129,27],[119,32,129,30,"Object"],[119,38,129,36],[119,39,129,37,"values"],[119,45,129,43],[119,46,129,44,"gameState"],[119,55,129,53],[119,56,129,54,"zoneProgress"],[119,68,129,66],[119,72,129,70],[119,73,129,71],[119,74,129,72],[119,75,129,73],[120,8,130,6],[120,12,130,10,"highestZone"],[120,23,130,21],[120,26,130,24,"ZONES"],[120,39,130,29],[120,40,130,29,"ZONES"],[120,45,130,29],[120,46,130,30],[120,47,130,31],[120,48,130,32],[121,8,132,6],[121,13,132,11],[121,19,132,17,"progress"],[121,27,132,25],[121,31,132,29,"progressEntries"],[121,46,132,44],[121,48,132,46],[122,10,133,8],[122,14,133,12,"progress"],[122,22,133,20],[122,26,133,24,"progress"],[122,34,133,32],[122,35,133,33,"zoneId"],[122,41,133,39],[122,43,133,41],[123,12,134,10],[123,18,134,16,"zone"],[123,22,134,20],[123,25,134,23,"ZONES"],[123,38,134,28],[123,39,134,28,"ZONES"],[123,44,134,28],[123,45,134,29,"find"],[123,49,134,33],[123,50,134,34,"z"],[123,51,134,35],[123,55,134,39,"z"],[123,56,134,40],[123,57,134,41,"id"],[123,59,134,43],[123,64,134,48,"progress"],[123,72,134,56],[123,73,134,57,"zoneId"],[123,79,134,63],[123,80,134,64],[124,12,135,10],[124,16,135,14,"zone"],[124,20,135,18],[124,22,135,20],[125,14,136,12,"highestZone"],[125,25,136,23],[125,28,136,26,"zone"],[125,32,136,30],[126,12,137,10],[127,10,138,8],[128,8,139,6],[129,8,141,6,"console"],[129,15,141,13],[129,16,141,14,"log"],[129,19,141,17],[129,20,141,18],[129,57,141,55,"highestZone"],[129,68,141,66],[129,69,141,67,"id"],[129,71,141,69],[129,99,141,97],[129,100,141,98],[130,8,142,6,"setProgressionZone"],[130,26,142,24],[130,27,142,25,"highestZone"],[130,38,142,36],[130,39,142,37],[131,6,143,4],[132,4,144,2],[132,5,144,3],[132,7,144,5],[132,8,144,6,"gameState"],[132,17,144,15],[132,19,144,17,"zoneProgress"],[132,31,144,29],[132,33,144,31,"hasInitializedZones"],[132,52,144,50],[132,53,144,51],[132,54,144,52],[134,4,146,2],[135,4,147,2],[135,8,147,2,"useEffect"],[135,14,147,11],[135,15,147,11,"useEffect"],[135,24,147,11],[135,26,147,12],[135,32,147,18],[136,6,148,4],[136,10,148,8,"gameState"],[136,19,148,17],[136,21,148,19,"ninja"],[136,26,148,24],[136,28,148,26],[137,8,149,6],[137,14,149,12,"recommendedZone"],[137,29,149,27],[137,32,149,30],[137,36,149,30,"getZoneByLevel"],[137,49,149,44],[137,50,149,44,"getZoneByLevel"],[137,64,149,44],[137,66,149,45,"gameState"],[137,75,149,54],[137,76,149,55,"ninja"],[137,81,149,60],[137,82,149,61,"level"],[137,87,149,66],[137,88,149,67],[138,8,150,6],[138,12,150,10,"recommendedZone"],[138,27,150,25],[138,31,150,29],[138,32,150,30,"currentZone"],[138,43,150,41],[138,45,150,43],[139,10,151,8,"setCurrentZone"],[139,24,151,22],[139,25,151,23,"recommendedZone"],[139,40,151,38],[139,41,151,39],[140,10,152,8,"setCurrentZoneLevel"],[140,29,152,27],[140,30,152,28,"recommendedZone"],[140,45,152,43],[140,46,152,44,"levels"],[140,52,152,50],[140,53,152,51],[140,54,152,52],[140,55,152,53],[140,56,152,54],[141,8,153,6],[142,6,154,4],[143,4,155,2],[143,5,155,3],[143,7,155,5],[143,8,155,6,"gameState"],[143,17,155,15],[143,19,155,17,"ninja"],[143,24,155,22],[143,26,155,24,"level"],[143,31,155,29],[143,32,155,30],[143,33,155,31],[145,4,157,2],[146,4,158,2],[146,10,158,8,"selectZone"],[146,20,158,18],[146,23,158,21,"selectZone"],[146,24,158,22,"zoneId"],[146,30,158,36],[146,32,158,38,"levelNumber"],[146,43,158,57],[146,48,158,71],[147,6,159,4],[147,10,159,8],[147,11,159,9,"isZoneUnlockedLocal"],[147,30,159,28],[147,31,159,29,"zoneId"],[147,37,159,35],[147,38,159,36],[147,40,159,38],[148,8,160,6,"console"],[148,15,160,13],[148,16,160,14,"log"],[148,19,160,17],[148,20,160,18],[148,30,160,28,"zoneId"],[148,36,160,34],[148,54,160,52],[148,55,160,53],[149,8,161,6],[149,15,161,13],[149,20,161,18],[150,6,162,4],[151,6,164,4],[151,12,164,10,"zone"],[151,16,164,14],[151,19,164,17,"ZONES"],[151,32,164,22],[151,33,164,22,"ZONES"],[151,38,164,22],[151,39,164,23,"find"],[151,43,164,27],[151,44,164,28,"z"],[151,45,164,29],[151,49,164,33,"z"],[151,50,164,34],[151,51,164,35,"id"],[151,53,164,37],[151,58,164,42,"zoneId"],[151,64,164,48],[151,65,164,49],[152,6,165,4],[152,10,165,8],[152,11,165,9,"zone"],[152,15,165,13],[152,17,165,15],[153,8,166,6,"console"],[153,15,166,13],[153,16,166,14,"log"],[153,19,166,17],[153,20,166,18],[153,30,166,28,"zoneId"],[153,36,166,34],[153,48,166,46],[153,49,166,47],[154,8,167,6],[154,15,167,13],[154,20,167,18],[155,6,168,4],[156,6,170,4],[156,12,170,10,"level"],[156,17,170,15],[156,20,170,18,"zone"],[156,24,170,22],[156,25,170,23,"levels"],[156,31,170,29],[156,32,170,30,"levelNumber"],[156,43,170,41],[156,46,170,44],[156,47,170,45],[156,48,170,46],[157,6,171,4],[157,10,171,8],[157,11,171,9,"level"],[157,16,171,14],[157,18,171,16],[158,8,172,6,"console"],[158,15,172,13],[158,16,172,14,"log"],[158,19,172,17],[158,20,172,18],[158,30,172,28,"zoneId"],[158,36,172,34],[158,46,172,44,"levelNumber"],[158,57,172,55],[158,69,172,67],[158,70,172,68],[159,8,173,6],[159,15,173,13],[159,20,173,18],[160,6,174,4],[161,6,176,4,"console"],[161,13,176,11],[161,14,176,12,"log"],[161,17,176,15],[161,18,176,16],[161,68,176,66,"zoneId"],[161,74,176,72],[161,84,176,82,"levelNumber"],[161,95,176,93],[161,100,176,98,"zone"],[161,104,176,102],[161,105,176,103,"name"],[161,109,176,107],[161,112,176,110],[161,113,176,111],[162,6,177,4,"console"],[162,13,177,11],[162,14,177,12,"log"],[162,17,177,15],[162,18,177,16],[162,44,177,42,"currentZone"],[162,55,177,53],[162,57,177,55,"id"],[162,59,177,57],[162,77,177,75,"currentZoneLevel"],[162,93,177,91],[162,95,177,93,"level"],[162,100,177,98],[162,102,177,100],[162,103,177,101],[163,6,179,4,"setCurrentZone"],[163,20,179,18],[163,21,179,19,"zone"],[163,25,179,23],[163,26,179,24],[164,6,180,4,"setCurrentZoneLevel"],[164,25,180,23],[164,26,180,24,"level"],[164,31,180,29],[164,32,180,30],[165,6,182,4,"console"],[165,13,182,11],[165,14,182,12,"log"],[165,17,182,15],[165,18,182,16],[165,45,182,43,"zoneId"],[165,51,182,49],[165,61,182,59,"levelNumber"],[165,72,182,70],[165,110,182,108],[165,111,182,109],[166,6,183,4],[166,13,183,11],[166,17,183,15],[167,4,184,2],[167,5,184,3],[169,4,186,2],[170,4,187,2],[170,10,187,8,"getZoneProgress"],[170,25,187,23],[170,28,187,27,"zoneId"],[170,34,187,41],[170,38,187,67],[171,6,188,4],[171,13,188,11,"zoneProgress"],[171,25,188,23],[171,26,188,24,"zoneId"],[171,32,188,30],[171,33,188,31],[171,37,188,35],[171,41,188,39],[172,4,189,2],[172,5,189,3],[174,4,191,2],[175,4,192,2],[175,10,192,8,"spawnZoneEnemy"],[175,24,192,22],[175,27,192,25,"spawnZoneEnemy"],[175,28,192,25],[175,33,192,52],[176,6,193,4],[176,10,193,8],[176,11,193,9,"currentZone"],[176,22,193,20],[176,26,193,24],[176,27,193,25,"currentZoneLevel"],[176,43,193,41],[176,45,193,43],[177,8,194,6,"console"],[177,15,194,13],[177,16,194,14,"log"],[177,19,194,17],[177,20,194,18],[177,65,194,63],[177,66,194,64],[178,8,195,6],[178,15,195,13],[178,19,195,17],[179,6,196,4],[181,6,198,4],[182,6,199,4],[182,12,199,10,"enemyTypeIds"],[182,24,199,22],[182,27,199,25,"currentZoneLevel"],[182,43,199,41],[182,44,199,42,"enemyTypes"],[182,54,199,52],[183,6,200,4],[183,12,200,10,"randomEnemyTypeId"],[183,29,200,27],[183,32,200,30,"enemyTypeIds"],[183,44,200,42],[183,45,200,43,"Math"],[183,49,200,47],[183,50,200,48,"floor"],[183,55,200,53],[183,56,200,54,"Math"],[183,60,200,58],[183,61,200,59,"random"],[183,67,200,65],[183,68,200,66],[183,69,200,67],[183,72,200,70,"enemyTypeIds"],[183,84,200,82],[183,85,200,83,"length"],[183,91,200,89],[183,92,200,90],[183,93,200,91],[184,6,201,4],[184,12,201,10,"enemyType"],[184,21,201,19],[184,24,201,22,"ENEMY_TYPES"],[184,37,201,33],[184,38,201,33,"ENEMY_TYPES"],[184,49,201,33],[184,50,201,34,"randomEnemyTypeId"],[184,67,201,51],[184,68,201,52],[185,6,203,4],[185,10,203,8],[185,11,203,9,"enemyType"],[185,20,203,18],[185,22,203,20],[186,8,204,6,"console"],[186,15,204,13],[186,16,204,14,"log"],[186,19,204,17],[186,20,204,18],[186,36,204,34,"randomEnemyTypeId"],[186,53,204,51],[186,65,204,63],[186,66,204,64],[187,8,205,6],[187,15,205,13],[187,19,205,17],[188,6,206,4],[190,6,208,4],[191,6,209,4],[191,12,209,10,"scaledStats"],[191,23,209,21],[191,26,209,24],[191,30,209,24,"calculateEnemyStats"],[191,43,209,43],[191,44,209,43,"calculateEnemyStats"],[191,63,209,43],[191,65,209,44,"enemyType"],[191,74,209,53],[191,76,209,55,"currentZoneLevel"],[191,92,209,71],[191,94,209,73,"currentZone"],[191,105,209,84],[191,106,209,85,"id"],[191,108,209,87],[191,109,209,88],[193,6,211,4],[194,6,212,4],[194,12,212,10,"enemy"],[194,17,212,29],[194,20,212,32],[195,8,213,6,"id"],[195,10,213,8],[195,12,213,10],[195,15,213,13,"randomEnemyTypeId"],[195,32,213,30],[195,36,213,34,"Date"],[195,40,213,38],[195,41,213,39,"now"],[195,44,213,42],[195,45,213,43],[195,46,213,44],[195,50,213,48,"Math"],[195,54,213,52],[195,55,213,53,"random"],[195,61,213,59],[195,62,213,60],[195,63,213,61],[195,65,213,63],[196,8,214,6,"typeId"],[196,14,214,12],[196,16,214,14,"randomEnemyTypeId"],[196,33,214,31],[197,8,215,6,"name"],[197,12,215,10],[197,14,215,12,"enemyType"],[197,23,215,21],[197,24,215,22,"name"],[197,28,215,26],[198,8,216,6,"icon"],[198,12,216,10],[198,14,216,12,"enemyType"],[198,23,216,21],[198,24,216,22,"icon"],[198,28,216,26],[199,8,217,6,"hp"],[199,10,217,8],[199,12,217,10,"scaledStats"],[199,23,217,21],[199,24,217,22,"hp"],[199,26,217,24],[200,8,218,6,"maxHP"],[200,13,218,11],[200,15,218,13,"scaledStats"],[200,26,218,24],[200,27,218,25,"hp"],[200,29,218,27],[201,8,219,6,"attack"],[201,14,219,12],[201,16,219,14,"scaledStats"],[201,27,219,25],[201,28,219,26,"attack"],[201,34,219,32],[202,8,220,6,"xp"],[202,10,220,8],[202,12,220,10,"scaledStats"],[202,23,220,21],[202,24,220,22,"xp"],[202,26,220,24],[203,8,221,6,"resistances"],[203,19,221,17],[203,21,221,19,"scaledStats"],[203,32,221,30],[203,33,221,31,"resistances"],[203,44,221,42],[204,8,222,6,"position"],[204,16,222,14],[204,18,222,16],[205,10,223,8,"x"],[205,11,223,9],[205,13,223,11,"Math"],[205,17,223,15],[205,18,223,16,"random"],[205,24,223,22],[205,25,223,23],[205,26,223,24],[205,29,223,27],[205,32,223,30],[205,35,223,33],[205,37,223,35],[206,10,223,37],[207,10,224,8,"y"],[207,11,224,9],[207,13,224,11,"Math"],[207,17,224,15],[207,18,224,16,"random"],[207,24,224,22],[207,25,224,23],[207,26,224,24],[207,29,224,27],[207,32,224,30],[207,35,224,33],[208,8,225,6],[208,9,225,7],[209,8,226,6,"lastDamaged"],[209,19,226,17],[209,21,226,19],[210,6,227,4],[210,7,227,5],[211,6,229,4,"console"],[211,13,229,11],[211,14,229,12,"log"],[211,17,229,15],[211,18,229,16],[211,32,229,30,"enemy"],[211,37,229,35],[211,38,229,36,"name"],[211,42,229,40],[211,47,229,45,"enemy"],[211,52,229,50],[211,53,229,51,"hp"],[211,55,229,53],[211,63,229,61,"enemy"],[211,68,229,66],[211,69,229,67,"xp"],[211,71,229,69],[211,82,229,80,"currentZone"],[211,93,229,91],[211,94,229,92,"name"],[211,98,229,96],[211,100,229,98],[211,101,229,99],[212,6,230,4],[212,13,230,11,"enemy"],[212,18,230,16],[213,4,231,2],[213,5,231,3],[215,4,233,2],[216,4,234,2],[216,10,234,8,"recordEnemyKill"],[216,25,234,23],[216,28,234,27,"enemy"],[216,33,234,46],[216,37,234,51],[217,6,235,4],[217,10,235,8],[217,11,235,9,"currentZone"],[217,22,235,20],[217,26,235,24],[217,27,235,25,"currentZoneLevel"],[217,43,235,41],[217,45,235,43],[218,6,237,4,"console"],[218,13,237,11],[218,14,237,12,"log"],[218,17,237,15],[218,18,237,16],[218,24,237,22,"enemy"],[218,29,237,27],[218,30,237,28,"name"],[218,34,237,32],[218,47,237,45,"enemy"],[218,52,237,50],[218,53,237,51,"xp"],[218,55,237,53],[218,60,237,58],[218,61,237,59],[219,6,238,4,"console"],[219,13,238,11],[219,14,238,12,"log"],[219,17,238,15],[219,18,238,16],[219,72,238,70,"currentZone"],[219,83,238,81],[219,84,238,82,"id"],[219,86,238,84],[219,96,238,94,"currentZoneLevel"],[219,112,238,110],[219,113,238,111,"level"],[219,118,238,116],[219,120,238,118],[219,121,238,119],[220,6,240,4,"setZoneProgress"],[220,21,240,19],[220,22,240,20,"prev"],[220,26,240,24],[220,30,240,28],[221,8,241,6],[221,14,241,12,"newProgress"],[221,25,241,23],[221,28,241,26],[222,10,241,28],[222,13,241,31,"prev"],[223,8,241,36],[223,9,241,37],[224,8,242,6],[224,14,242,12,"zoneId"],[224,20,242,18],[224,23,242,21,"currentZone"],[224,34,242,32],[224,35,242,33,"id"],[224,37,242,35],[225,8,244,6],[225,12,244,10],[225,13,244,11,"newProgress"],[225,24,244,22],[225,25,244,23,"zoneId"],[225,31,244,29],[225,32,244,30],[225,34,244,32],[226,10,245,8,"newProgress"],[226,21,245,19],[226,22,245,20,"zoneId"],[226,28,245,26],[226,29,245,27],[226,32,245,30],[227,12,246,10,"zoneId"],[227,18,246,16],[228,12,247,10,"currentLevel"],[228,24,247,22],[228,26,247,24],[228,27,247,25],[229,12,248,10,"killsInLevel"],[229,24,248,22],[229,26,248,24],[229,27,248,25],[230,12,249,10,"completed"],[230,21,249,19],[230,23,249,21],[231,10,250,8],[231,11,250,9],[232,8,251,6],[233,8,253,6],[233,14,253,12,"progress"],[233,22,253,20],[233,25,253,23],[234,10,253,25],[234,13,253,28,"newProgress"],[234,24,253,39],[234,25,253,40,"zoneId"],[234,31,253,46],[235,8,253,48],[235,9,253,49],[237,8,255,6],[238,8,256,6],[238,14,256,12,"currentZoneLevel"],[238,30,256,28],[238,33,256,31,"currentZone"],[238,44,256,42],[238,45,256,43,"levels"],[238,51,256,49],[238,52,256,50,"progress"],[238,60,256,58],[238,61,256,59,"currentLevel"],[238,73,256,71],[238,76,256,74],[238,77,256,75],[238,78,256,76],[239,8,257,6],[239,14,257,12,"requiredKills"],[239,27,257,25],[239,30,257,28,"currentZoneLevel"],[239,46,257,44],[239,49,257,47,"currentZoneLevel"],[239,65,257,63],[239,66,257,64,"requiredKills"],[239,79,257,77],[239,82,257,80,"calculateKillRequirement"],[239,106,257,104],[239,107,257,105,"zoneId"],[239,113,257,111],[239,115,257,113,"progress"],[239,123,257,121],[239,124,257,122,"currentLevel"],[239,136,257,134],[239,137,257,135],[241,8,259,6],[242,8,260,6],[242,14,260,12,"willCompleteLevel"],[242,31,260,29],[242,34,260,33,"progress"],[242,42,260,41],[242,43,260,42,"killsInLevel"],[242,55,260,54],[242,58,260,57],[242,59,260,58],[242,63,260,63,"requiredKills"],[242,76,260,76],[243,8,262,6],[243,12,262,10,"willCompleteLevel"],[243,29,262,27],[243,31,262,29],[244,10,263,8,"console"],[244,17,263,15],[244,18,263,16,"log"],[244,21,263,19],[244,22,263,20],[244,34,263,32,"progress"],[244,42,263,40],[244,43,263,41,"currentLevel"],[244,55,263,53],[244,72,263,70,"currentZone"],[244,83,263,81],[244,84,263,82,"name"],[244,88,263,86],[244,91,263,89],[244,92,263,90],[246,10,265,8],[247,10,266,8,"progress"],[247,18,266,16],[247,19,266,17,"killsInLevel"],[247,31,266,29],[247,34,266,32,"requiredKills"],[247,47,266,45],[248,10,268,8,"console"],[248,17,268,15],[248,18,268,16,"log"],[248,21,268,19],[248,22,268,20],[248,33,268,31,"zoneId"],[248,39,268,37],[248,49,268,47,"progress"],[248,57,268,55],[248,58,268,56,"currentLevel"],[248,70,268,68],[248,75,268,73,"progress"],[248,83,268,81],[248,84,268,82,"killsInLevel"],[248,96,268,94],[248,100,268,98,"requiredKills"],[248,113,268,111],[248,133,268,131],[248,134,268,132],[249,8,269,6],[249,9,269,7],[249,15,269,13],[250,10,270,8],[251,10,271,8],[251,16,271,14,"zoneKillMultiplier"],[251,34,271,32],[251,37,271,35,"gameState"],[251,46,271,44],[251,47,271,45,"subscriptionBenefits"],[251,67,271,65],[251,69,271,67,"zone_kill_multiplier"],[251,89,271,87],[251,93,271,91],[251,96,271,94],[252,10,272,8],[252,16,272,14,"killsToAdd"],[252,26,272,24],[252,29,272,27,"Math"],[252,33,272,31],[252,34,272,32,"floor"],[252,39,272,37],[252,40,272,38],[252,41,272,39],[252,44,272,42,"zoneKillMultiplier"],[252,62,272,60],[252,63,272,61],[253,10,273,8,"progress"],[253,18,273,16],[253,19,273,17,"killsInLevel"],[253,31,273,29],[253,35,273,33,"killsToAdd"],[253,45,273,43],[254,10,274,8,"console"],[254,17,274,15],[254,18,274,16,"log"],[254,21,274,19],[254,22,274,20],[254,33,274,31,"zoneId"],[254,39,274,37],[254,49,274,47,"progress"],[254,57,274,55],[254,58,274,56,"currentLevel"],[254,70,274,68],[254,75,274,73,"progress"],[254,83,274,81],[254,84,274,82,"killsInLevel"],[254,96,274,94],[254,100,274,98,"requiredKills"],[254,113,274,111],[254,125,274,123,"killsToAdd"],[254,135,274,133],[254,144,274,142,"zoneKillMultiplier"],[254,162,274,160],[254,177,274,175],[254,178,274,176],[255,8,275,6],[257,8,277,6],[258,8,278,6],[258,12,278,10,"willCompleteLevel"],[258,29,278,27],[258,31,278,29],[259,10,279,8,"console"],[259,17,279,15],[259,18,279,16,"log"],[259,21,279,19],[259,22,279,20],[259,34,279,32,"progress"],[259,42,279,40],[259,43,279,41,"currentLevel"],[259,55,279,53],[259,72,279,70,"currentZone"],[259,83,279,81],[259,84,279,82,"name"],[259,88,279,86],[259,91,279,89],[259,92,279,90],[261,10,281,8],[262,10,282,8],[262,14,282,12,"progress"],[262,22,282,20],[262,23,282,21,"currentLevel"],[262,35,282,33],[262,38,282,36],[262,39,282,37],[262,41,282,39],[263,12,283,10,"progress"],[263,20,283,18],[263,21,283,19,"currentLevel"],[263,33,283,31],[263,37,283,35],[263,38,283,36],[264,12,284,10,"progress"],[264,20,284,18],[264,21,284,19,"killsInLevel"],[264,33,284,31],[264,36,284,34],[264,37,284,35],[265,12,285,10,"console"],[265,19,285,17],[265,20,285,18,"log"],[265,23,285,21],[265,24,285,22],[265,61,285,59,"progress"],[265,69,285,67],[265,70,285,68,"currentLevel"],[265,82,285,80],[265,122,285,120],[265,123,285,121],[267,12,287,10],[268,12,288,10],[269,12,289,10],[269,18,289,16,"nextLevel"],[269,27,289,25],[269,30,289,28,"currentZone"],[269,41,289,39],[269,42,289,40,"levels"],[269,48,289,46],[269,49,289,47,"progress"],[269,57,289,55],[269,58,289,56,"currentLevel"],[269,70,289,68],[269,73,289,71],[269,74,289,72],[269,75,289,73],[270,12,290,10],[270,16,290,14,"nextLevel"],[270,25,290,23],[270,29,290,27,"currentZone"],[270,40,290,38],[270,45,290,43,"progressionZone"],[270,60,290,58],[270,62,290,60],[271,14,291,12],[272,14,292,12,"console"],[272,21,292,19],[272,22,292,20,"log"],[272,25,292,23],[272,26,292,24],[272,100,292,98],[272,101,292,99],[273,14,293,12,"setCurrentZoneLevel"],[273,33,293,31],[273,34,293,32,"nextLevel"],[273,43,293,41],[273,44,293,42],[274,14,294,12,"setProgressionZone"],[274,32,294,30],[274,33,294,31,"currentZone"],[274,44,294,42],[274,45,294,43],[274,46,294,44],[274,47,294,45],[275,12,295,10],[275,13,295,11],[275,19,295,17],[276,14,296,12,"console"],[276,21,296,19],[276,22,296,20,"log"],[276,25,296,23],[276,26,296,24],[276,104,296,102],[276,105,296,103],[277,12,297,10],[278,10,298,8],[278,11,298,9],[278,17,298,15],[279,12,299,10],[280,12,300,10,"progress"],[280,20,300,18],[280,21,300,19,"completed"],[280,30,300,28],[280,33,300,31],[280,37,300,35],[281,12,301,10,"console"],[281,19,301,17],[281,20,301,18,"log"],[281,23,301,21],[281,24,301,22],[281,35,301,33,"currentZone"],[281,46,301,44],[281,47,301,45,"name"],[281,51,301,49],[281,84,301,82],[281,85,301,83],[283,12,303,10],[284,12,304,10],[284,18,304,16,"nextZone"],[284,26,304,24],[284,29,304,27,"ZONES"],[284,42,304,32],[284,43,304,32,"ZONES"],[284,48,304,32],[284,49,304,33,"find"],[284,53,304,37],[284,54,304,38,"z"],[284,55,304,39],[284,59,304,43,"z"],[284,60,304,44],[284,61,304,45,"id"],[284,63,304,47],[284,68,304,52,"zoneId"],[284,74,304,58],[284,77,304,61],[284,78,304,62],[284,79,304,63],[285,12,305,10],[285,16,305,14,"nextZone"],[285,24,305,22],[285,26,305,24],[286,14,306,12,"console"],[286,21,306,19],[286,22,306,20,"log"],[286,25,306,23],[286,26,306,24],[286,75,306,73,"zoneId"],[286,81,306,79],[286,93,306,91,"nextZone"],[286,101,306,99],[286,102,306,100,"id"],[286,104,306,102],[286,106,306,104],[286,107,306,105],[288,14,308,12],[289,14,309,12],[289,18,309,16],[289,19,309,17,"newProgress"],[289,30,309,28],[289,31,309,29,"nextZone"],[289,39,309,37],[289,40,309,38,"id"],[289,42,309,40],[289,43,309,41],[289,45,309,43],[290,16,310,14,"newProgress"],[290,27,310,25],[290,28,310,26,"nextZone"],[290,36,310,34],[290,37,310,35,"id"],[290,39,310,37],[290,40,310,38],[290,43,310,41],[291,18,311,16,"zoneId"],[291,24,311,22],[291,26,311,24,"nextZone"],[291,34,311,32],[291,35,311,33,"id"],[291,37,311,35],[292,18,312,16,"currentLevel"],[292,30,312,28],[292,32,312,30],[292,33,312,31],[293,18,313,16,"killsInLevel"],[293,30,313,28],[293,32,313,30],[293,33,313,31],[294,18,314,16,"completed"],[294,27,314,25],[294,29,314,27],[295,16,315,14],[295,17,315,15],[296,14,316,12],[298,14,318,12],[299,14,319,12,"setTimeout"],[299,24,319,22],[299,25,319,23],[299,31,319,29],[300,16,320,14,"console"],[300,23,320,21],[300,24,320,22,"log"],[300,27,320,25],[300,28,320,26],[300,72,320,70,"nextZone"],[300,80,320,78],[300,81,320,79,"id"],[300,83,320,81],[300,93,320,91],[300,94,320,92],[301,16,321,14,"setCurrentZone"],[301,30,321,28],[301,31,321,29,"nextZone"],[301,39,321,37],[301,40,321,38],[302,16,322,14,"setCurrentZoneLevel"],[302,35,322,33],[302,36,322,34,"nextZone"],[302,44,322,42],[302,45,322,43,"levels"],[302,51,322,49],[302,52,322,50],[302,53,322,51],[302,54,322,52],[302,55,322,53],[303,16,323,14,"setProgressionZone"],[303,34,323,32],[303,35,323,33,"nextZone"],[303,43,323,41],[303,44,323,42],[304,14,324,12],[304,15,324,13],[304,17,324,15],[304,20,324,18],[304,21,324,19],[304,22,324,20],[304,23,324,21],[305,12,325,10],[305,13,325,11],[305,19,325,17],[306,14,326,12,"console"],[306,21,326,19],[306,22,326,20,"log"],[306,25,326,23],[306,26,326,24],[306,82,326,80,"zoneId"],[306,88,326,86],[306,90,326,88],[306,91,326,89],[307,12,327,10],[308,10,328,8],[309,8,329,6],[310,8,331,6,"newProgress"],[310,19,331,17],[310,20,331,18,"zoneId"],[310,26,331,24],[310,27,331,25],[310,30,331,28,"progress"],[310,38,331,36],[312,8,333,6],[313,8,334,6,"setTimeout"],[313,18,334,16],[313,19,334,17],[313,25,334,23],[314,10,335,8,"console"],[314,17,335,15],[314,18,335,16,"log"],[314,21,335,19],[314,22,335,20],[314,67,335,65],[314,69,335,67,"newProgress"],[314,80,335,78],[314,81,335,79],[315,10,336,8,"updateZoneProgress"],[315,28,336,26],[315,29,336,27,"newProgress"],[315,40,336,38],[315,41,336,39],[316,8,337,6],[316,9,337,7],[316,11,337,9],[316,12,337,10],[316,13,337,11],[316,14,337,12],[316,15,337,13],[318,8,339,6],[318,15,339,13,"newProgress"],[318,26,339,24],[319,6,340,4],[319,7,340,5],[319,8,340,6],[320,4,341,2],[320,5,341,3],[322,4,343,2],[323,4,344,2],[323,10,344,8,"isZoneUnlockedLocal"],[323,29,344,27],[323,32,344,31,"zoneId"],[323,38,344,45],[323,42,344,59],[324,6,345,4],[324,10,345,8,"zoneId"],[324,16,345,14],[324,21,345,19],[324,22,345,20],[324,24,345,22],[324,31,345,29],[324,35,345,33],[324,36,345,34],[324,37,345,35],[326,6,347,4],[326,12,347,10,"zone"],[326,16,347,14],[326,19,347,17,"ZONES"],[326,32,347,22],[326,33,347,22,"ZONES"],[326,38,347,22],[326,39,347,23,"find"],[326,43,347,27],[326,44,347,28,"z"],[326,45,347,29],[326,49,347,33,"z"],[326,50,347,34],[326,51,347,35,"id"],[326,53,347,37],[326,58,347,42,"zoneId"],[326,64,347,48],[326,65,347,49],[327,6,348,4],[327,10,348,8],[327,11,348,9,"zone"],[327,15,348,13],[327,17,348,15,"unlockRequirement"],[327,34,348,32],[327,35,348,33,"previousZone"],[327,47,348,45],[327,49,348,47],[327,56,348,54],[327,60,348,58],[328,6,350,4],[328,12,350,10,"prevZoneProgress"],[328,28,350,26],[328,31,350,29,"zoneProgress"],[328,43,350,41],[328,44,350,42,"zone"],[328,48,350,46],[328,49,350,47,"unlockRequirement"],[328,66,350,64],[328,67,350,65,"previousZone"],[328,79,350,77],[328,80,350,78],[329,6,351,4],[329,13,351,11,"prevZoneProgress"],[329,29,351,27],[329,31,351,29,"completed"],[329,40,351,38],[329,44,351,42],[329,49,351,47],[330,4,352,2],[330,5,352,3],[332,4,354,2],[333,4,355,2],[333,10,355,8,"getUnlockedZones"],[333,26,355,24],[333,29,355,27,"getUnlockedZones"],[333,30,355,27],[333,35,355,41],[334,6,356,4],[334,13,356,11,"ZONES"],[334,26,356,16],[334,27,356,16,"ZONES"],[334,32,356,16],[334,33,356,17,"filter"],[334,39,356,23],[334,40,356,24,"zone"],[334,44,356,28],[334,48,356,32,"isZoneUnlockedLocal"],[334,67,356,51],[334,68,356,52,"zone"],[334,72,356,56],[334,73,356,57,"id"],[334,75,356,59],[334,76,356,60],[334,77,356,61],[335,4,357,2],[335,5,357,3],[336,4,359,2],[336,10,359,8,"contextValue"],[336,22,359,37],[336,25,359,40,"React"],[336,30,359,45],[336,31,359,45,"default"],[336,38,359,45],[336,39,359,46,"useMemo"],[336,46,359,53],[336,47,359,54],[336,54,359,61],[337,6,360,4,"currentZone"],[337,17,360,15],[338,6,360,17],[339,6,361,4,"currentZoneLevel"],[339,22,361,20],[340,6,362,4,"progressionZone"],[340,21,362,19],[341,6,362,21],[342,6,363,4,"zoneProgress"],[342,18,363,16],[343,6,364,4,"availableZones"],[343,20,364,18],[343,22,364,20,"ZONES"],[343,35,364,25],[343,36,364,25,"ZONES"],[343,41,364,25],[344,6,365,4,"selectZone"],[344,16,365,14],[345,6,366,4,"getZoneProgress"],[345,21,366,19],[346,6,367,4,"spawnZoneEnemy"],[346,20,367,18],[347,6,368,4,"recordEnemyKill"],[347,21,368,19],[348,6,369,4,"isZoneUnlocked"],[348,20,369,18],[348,22,369,20,"isZoneUnlockedLocal"],[348,41,369,39],[349,6,370,4,"getUnlockedZones"],[350,4,371,2],[350,5,371,3],[350,6,371,4],[350,8,371,6],[350,9,372,4,"currentZone"],[350,20,372,15],[350,22,373,4,"currentZoneLevel"],[350,38,373,20],[350,40,374,4,"progressionZone"],[350,55,374,19],[350,57,375,4,"zoneProgress"],[350,69,375,16],[350,71,376,4,"selectZone"],[350,81,376,14],[350,83,377,4,"getZoneProgress"],[350,98,377,19],[350,100,378,4,"spawnZoneEnemy"],[350,114,378,18],[350,116,379,4,"recordEnemyKill"],[350,131,379,19],[350,133,380,4,"isZoneUnlockedLocal"],[350,152,380,23],[350,154,381,4,"getUnlockedZones"],[350,170,381,20],[350,171,382,3],[350,172,382,4],[351,4,384,2],[351,24,385,4],[351,28,385,4,"_reactJsxDevRuntime"],[351,47,385,4],[351,48,385,4,"jsxDEV"],[351,54,385,4],[351,56,385,5,"ZoneContext"],[351,67,385,16],[351,68,385,17,"Provider"],[351,76,385,25],[352,6,385,26,"value"],[352,11,385,31],[352,13,385,33,"contextValue"],[352,25,385,46],[353,6,385,46,"children"],[353,14,385,46],[353,16,386,7,"children"],[354,4,386,15],[355,6,386,15,"fileName"],[355,14,386,15],[355,16,386,15,"_jsxFileName"],[355,28,386,15],[356,6,386,15,"lineNumber"],[356,16,386,15],[357,6,386,15,"columnNumber"],[357,18,386,15],[358,4,386,15],[358,11,387,26],[358,12,387,27],[359,2,389,0],[359,3,389,1],[360,0,389,2],[360,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","ZONES.find$argument_0","selectZone","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE6C;CFM;4BGE;8DCI;GDG;6ECC;GDG;sECC;GDG;iFCE;GDU;YEG;kCCY,6BD;kCC2B,6BD;GFU;YEG;GFQ;qBIG;4BDM,oBC;GJoB;0BKG;GLE;yBMG;GNuC;0BOG;oBCM;sCLgE,wBK;uBCe;aDK;iBCU;ODG;KDG;GPC;8BUG;4BPG,oBO;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbY;CHkB"},"hasCjsExports":false},"type":"js/module"}]}