{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\"; // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[1], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[2], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  const calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  const ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  const useZone = () => {\n    const context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  const ZoneProvider = ({\n    children\n  }) => {\n    const {\n      gameState,\n      updateZoneProgress\n    } = (0, _GameContext.useGame)();\n\n    // Zone State - Separate \"progression\" from \"currently selected\" zones\n    const [currentZone, setCurrentZone] = (0, _react.useState)(() => {\n      console.log('🎯 ZONE INIT: Initializing currentZone (selected zone) to Zone 1 Level 1');\n      return _dataZoneData.ZONES[0];\n    }); // Currently selected zone for gameplay\n    const [currentZoneLevel, setCurrentZoneLevel] = (0, _react.useState)(() => {\n      console.log('🎯 ZONE INIT: Initializing currentZoneLevel to Zone 1 Level 1');\n      return _dataZoneData.ZONES[0]?.levels[0] || null;\n    });\n    const [progressionZone, setProgressionZone] = (0, _react.useState)(() => {\n      console.log('🎯 ZONE INIT: Initializing progressionZone (unlock progress) to Zone 1');\n      return _dataZoneData.ZONES[0];\n    }); // Highest unlocked zone for progression\n    const [zoneProgress, setZoneProgress] = (0, _react.useState)(() => {\n      // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n      const savedProgress = gameState?.zoneProgress;\n      if (savedProgress && Object.keys(savedProgress).length > 0) {\n        console.log('🗺️ Loading saved zone progress:', savedProgress);\n        return savedProgress;\n      } else {\n        console.log('🗺️ No saved zone progress, using defaults');\n        return {\n          1: {\n            zoneId: 1,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          }\n        };\n      }\n    });\n\n    // Initialize with game context data when it becomes available\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress) {\n        console.log('🔄 ZONE CONTEXT - Loading zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n\n        // Find the highest unlocked zone for progression tracking\n        const progressEntries = Object.values(gameState.zoneProgress || {});\n        let highestZone = _dataZoneData.ZONES[0];\n        let highestLevel = _dataZoneData.ZONES[0]?.levels[0];\n        for (const progress of progressEntries) {\n          if (progress && progress.zoneId) {\n            const zone = _dataZoneData.ZONES.find(z => z.id === progress.zoneId);\n            if (zone) {\n              highestZone = zone;\n              highestLevel = zone.levels[(progress.currentLevel || 1) - 1];\n            }\n          }\n        }\n        console.log(`🎯 PROGRESSION ZONE SET: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (highest unlocked)`);\n        setProgressionZone(highestZone);\n\n        // Set current selected zone to progression zone initially  \n        console.log(`🎯 SELECTED ZONE INITIALIZED: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (matching progression)`);\n        setCurrentZone(highestZone);\n        setCurrentZoneLevel(highestLevel || _dataZoneData.ZONES[0]?.levels[0]);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        const recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Zone selection and management - separate from progression\n    const selectZone = (zoneId, levelNumber) => {\n      if (!isZoneUnlockedLocal(zoneId)) {\n        console.log(`❌ Zone ${zoneId} is not unlocked`);\n        return false;\n      }\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone) {\n        console.log(`❌ Zone ${zoneId} not found`);\n        return false;\n      }\n      const level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Zone ${zoneId} Level ${levelNumber} not found`);\n        return false;\n      }\n      console.log(`🎯 ZONE SELECTION: Setting currentZone to Zone ${zoneId} Level ${levelNumber} (${zone.name})`);\n      console.log(`📍 BEFORE: currentZone=${currentZone?.id}, currentLevel=${currentZoneLevel?.level}`);\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`📍 AFTER: Selected Zone ${zoneId} Level ${levelNumber} - Kills will count toward this zone`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    const getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    const spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      const enemyTypeIds = currentZoneLevel.enemyTypes;\n      const randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      const enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      const scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      const enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    const recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      console.log(`🎯 KILL TRACKING: Recording kill for SELECTED Zone ${currentZone.id} Level ${currentZoneLevel.level}`);\n      setZoneProgress(prev => {\n        const newProgress = {\n          ...prev\n        };\n        const zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        const progress = {\n          ...newProgress[zoneId]\n        };\n\n        // Get the required kills for current level from zone data\n        const currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        const requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        const willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment\n          progress.killsInLevel += 1;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ PROGRESSION: Advanced to Level ${progress.currentLevel} (player can still select other zones)`);\n\n            // Update progression zone but DON'T auto-select next level\n            // Player keeps their current selection unless they manually change it\n            const nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel && currentZone === progressionZone) {\n              // Only auto-advance if player is currently on the progression zone\n              console.log(`🎯 AUTO-ADVANCE: Player was on progression zone, advancing to next level`);\n              setCurrentZoneLevel(nextLevel);\n              setProgressionZone(currentZone); // Update progression zone\n            } else {\n              console.log(`🎯 SELECTION PRESERVED: Player selected different zone, keeping their choice`);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    const isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      const zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      const prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    const getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    const contextValue = React.default.useMemo(() => ({\n      currentZone,\n      // Currently selected zone for gameplay\n      currentZoneLevel,\n      progressionZone,\n      // Highest unlocked zone for progression\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, progressionZone, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }, this);\n  };\n});","lineCount":312,"map":[[4,67,5,0],[5,2,5,0,"Object"],[5,8,5,0],[5,9,5,0,"defineProperty"],[5,23,5,0],[5,24,5,0,"exports"],[5,31,5,0],[6,4,5,0,"value"],[6,9,5,0],[7,2,5,0],[8,2,5,0],[8,11,5,0,"_interopDefault"],[8,27,5,0,"e"],[8,28,5,0],[9,4,5,0],[9,11,5,0,"e"],[9,12,5,0],[9,16,5,0,"e"],[9,17,5,0],[9,18,5,0,"__esModule"],[9,28,5,0],[9,31,5,0,"e"],[9,32,5,0],[10,6,5,0,"default"],[10,13,5,0],[10,15,5,0,"e"],[11,4,5,0],[12,2,5,0],[13,2,57,0,"Object"],[13,8,57,0],[13,9,57,0,"defineProperty"],[13,23,57,0],[13,24,57,0,"exports"],[13,31,57,0],[14,4,57,0,"enumerable"],[14,14,57,0],[15,4,57,0,"get"],[15,7,57,0],[15,18,57,0,"get"],[15,19,57,0],[16,6,57,0],[16,13,57,0,"useZone"],[16,20,57,0],[17,4,57,0],[18,2,57,0],[19,2,65,0,"Object"],[19,8,65,0],[19,9,65,0,"defineProperty"],[19,23,65,0],[19,24,65,0,"exports"],[19,31,65,0],[20,4,65,0,"enumerable"],[20,14,65,0],[21,4,65,0,"get"],[21,7,65,0],[21,18,65,0,"get"],[21,19,65,0],[22,6,65,0],[22,13,65,0,"ZoneProvider"],[22,25,65,0],[23,4,65,0],[24,2,65,0],[25,2,1,0],[25,6,1,0,"_react"],[25,12,1,0],[25,15,1,0,"require"],[25,22,1,0],[25,23,1,0,"_dependencyMap"],[25,37,1,0],[26,2,1,0],[26,6,1,0,"React"],[26,11,1,0],[26,14,1,0,"_interopDefault"],[26,29,1,0],[26,30,1,0,"_react"],[26,36,1,0],[27,2,2,0],[27,6,2,0,"_dataZoneData"],[27,19,2,0],[27,22,2,0,"require"],[27,29,2,0],[27,30,2,0,"_dependencyMap"],[27,44,2,0],[28,2,3,0],[28,6,3,0,"_GameContext"],[28,18,3,0],[28,21,3,0,"require"],[28,28,3,0],[28,29,3,0,"_dependencyMap"],[28,43,3,0],[29,2,3,40],[29,6,3,40,"_reactJsxDevRuntime"],[29,25,3,40],[29,28,3,40,"require"],[29,35,3,40],[29,36,3,40,"_dependencyMap"],[29,50,3,40],[30,2,6,0],[30,8,6,6,"calculateKillRequirement"],[30,32,6,30],[30,35,6,33,"calculateKillRequirement"],[30,36,6,34,"zoneId"],[30,42,6,48],[30,44,6,50,"level"],[30,49,6,63],[30,54,6,76],[31,4,7,2],[31,8,7,6,"zoneId"],[31,14,7,12],[31,18,7,16],[31,19,7,17],[31,21,7,19],[31,28,7,26],[31,30,7,28],[31,33,7,32,"level"],[31,38,7,37],[31,41,7,40],[31,42,7,42],[31,43,7,43],[31,44,7,49],[32,4,8,2],[32,8,8,6,"zoneId"],[32,14,8,12],[32,18,8,16],[32,20,8,18],[32,22,8,20],[32,29,8,27],[32,31,8,29],[32,34,8,33,"level"],[32,39,8,38],[32,42,8,41],[32,44,8,44],[32,45,8,45],[32,46,8,50],[33,4,9,2],[33,8,9,6,"zoneId"],[33,14,9,12],[33,18,9,16],[33,20,9,18],[33,22,9,20],[33,29,9,27],[33,31,9,29],[33,34,9,33,"level"],[33,39,9,38],[33,42,9,41],[33,44,9,44],[33,45,9,45],[33,46,9,50],[34,4,10,2],[34,8,10,6,"zoneId"],[34,14,10,12],[34,18,10,16],[34,20,10,18],[34,22,10,20],[34,29,10,27],[34,32,10,30],[34,35,10,34,"level"],[34,40,10,39],[34,43,10,42],[34,45,10,45],[34,46,10,46],[34,47,10,50],[35,4,11,2],[35,11,11,9],[35,14,11,12],[35,17,11,16,"level"],[35,22,11,21],[35,25,11,24],[35,27,11,27],[35,28,11,28],[35,29,11,50],[36,2,12,0],[36,3,12,1],[37,2,55,0],[37,8,55,6,"ZoneContext"],[37,19,55,17],[37,35,55,20],[37,39,55,20,"createContext"],[37,45,55,33],[37,46,55,33,"createContext"],[37,59,55,33],[37,61,55,63,"undefined"],[37,70,55,72],[37,71,55,73],[38,2,57,7],[38,8,57,13,"useZone"],[38,15,57,20],[38,18,57,23,"useZone"],[38,19,57,23],[38,24,57,29],[39,4,58,2],[39,10,58,8,"context"],[39,17,58,15],[39,20,58,18],[39,24,58,18,"useContext"],[39,30,58,28],[39,31,58,28,"useContext"],[39,41,58,28],[39,43,58,29,"ZoneContext"],[39,54,58,40],[39,55,58,41],[40,4,59,2],[40,8,59,6],[40,9,59,7,"context"],[40,16,59,14],[40,18,59,16],[41,6,60,4],[41,12,60,10],[41,16,60,14,"Error"],[41,21,60,19],[41,22,60,20],[41,66,60,64],[41,67,60,65],[42,4,61,2],[43,4,62,2],[43,11,62,9,"context"],[43,18,62,16],[44,2,63,0],[44,3,63,1],[45,2,65,7],[45,8,65,13,"ZoneProvider"],[45,20,65,25],[45,23,65,28,"ZoneProvider"],[45,24,65,29],[46,4,65,31,"children"],[47,2,65,65],[47,3,65,66],[47,8,65,71],[48,4,66,2],[48,10,66,8],[49,6,66,10,"gameState"],[49,15,66,19],[50,6,66,21,"updateZoneProgress"],[51,4,66,40],[51,5,66,41],[51,8,66,44],[51,12,66,44,"useGame"],[51,24,66,51],[51,25,66,51,"useGame"],[51,32,66,51],[51,34,66,52],[51,35,66,53],[53,4,68,2],[54,4,69,2],[54,10,69,8],[54,11,69,9,"currentZone"],[54,22,69,20],[54,24,69,22,"setCurrentZone"],[54,38,69,36],[54,39,69,37],[54,42,69,40],[54,46,69,40,"useState"],[54,52,69,48],[54,53,69,48,"useState"],[54,61,69,48],[54,63,69,62],[54,69,69,68],[55,6,70,4,"console"],[55,13,70,11],[55,14,70,12,"log"],[55,17,70,15],[55,18,70,16],[55,92,70,90],[55,93,70,91],[56,6,71,4],[56,13,71,11,"ZONES"],[56,26,71,16],[56,27,71,16,"ZONES"],[56,32,71,16],[56,33,71,17],[56,34,71,18],[56,35,71,19],[57,4,72,2],[57,5,72,3],[57,6,72,4],[57,7,72,5],[57,8,72,6],[58,4,73,2],[58,10,73,8],[58,11,73,9,"currentZoneLevel"],[58,27,73,25],[58,29,73,27,"setCurrentZoneLevel"],[58,48,73,46],[58,49,73,47],[58,52,73,50],[58,56,73,50,"useState"],[58,62,73,58],[58,63,73,58,"useState"],[58,71,73,58],[58,73,73,77],[58,79,73,83],[59,6,74,4,"console"],[59,13,74,11],[59,14,74,12,"log"],[59,17,74,15],[59,18,74,16],[59,81,74,79],[59,82,74,80],[60,6,75,4],[60,13,75,11,"ZONES"],[60,26,75,16],[60,27,75,16,"ZONES"],[60,32,75,16],[60,33,75,17],[60,34,75,18],[60,35,75,19],[60,37,75,21,"levels"],[60,43,75,27],[60,44,75,28],[60,45,75,29],[60,46,75,30],[60,50,75,34],[60,54,75,38],[61,4,76,2],[61,5,76,3],[61,6,76,4],[62,4,77,2],[62,10,77,8],[62,11,77,9,"progressionZone"],[62,26,77,24],[62,28,77,26,"setProgressionZone"],[62,46,77,44],[62,47,77,45],[62,50,77,48],[62,54,77,48,"useState"],[62,60,77,56],[62,61,77,56,"useState"],[62,69,77,56],[62,71,77,70],[62,77,77,76],[63,6,78,4,"console"],[63,13,78,11],[63,14,78,12,"log"],[63,17,78,15],[63,18,78,16],[63,90,78,88],[63,91,78,89],[64,6,79,4],[64,13,79,11,"ZONES"],[64,26,79,16],[64,27,79,16,"ZONES"],[64,32,79,16],[64,33,79,17],[64,34,79,18],[64,35,79,19],[65,4,80,2],[65,5,80,3],[65,6,80,4],[65,7,80,5],[65,8,80,6],[66,4,81,2],[66,10,81,8],[66,11,81,9,"zoneProgress"],[66,23,81,21],[66,25,81,23,"setZoneProgress"],[66,40,81,38],[66,41,81,39],[66,44,81,42],[66,48,81,42,"useState"],[66,54,81,50],[66,55,81,50,"useState"],[66,63,81,50],[66,65,81,81],[66,71,81,87],[67,6,82,4],[68,6,83,4],[68,12,83,10,"savedProgress"],[68,25,83,23],[68,28,83,26,"gameState"],[68,37,83,35],[68,39,83,37,"zoneProgress"],[68,51,83,49],[69,6,84,4],[69,10,84,8,"savedProgress"],[69,23,84,21],[69,27,84,25,"Object"],[69,33,84,31],[69,34,84,32,"keys"],[69,38,84,36],[69,39,84,37,"savedProgress"],[69,52,84,50],[69,53,84,51],[69,54,84,52,"length"],[69,60,84,58],[69,63,84,61],[69,64,84,62],[69,66,84,64],[70,8,85,6,"console"],[70,15,85,13],[70,16,85,14,"log"],[70,19,85,17],[70,20,85,18],[70,54,85,52],[70,56,85,54,"savedProgress"],[70,69,85,67],[70,70,85,68],[71,8,86,6],[71,15,86,13,"savedProgress"],[71,28,86,26],[72,6,87,4],[72,7,87,5],[72,13,87,11],[73,8,88,6,"console"],[73,15,88,13],[73,16,88,14,"log"],[73,19,88,17],[73,20,88,18],[73,64,88,62],[73,65,88,63],[74,8,89,6],[74,15,89,13],[75,10,89,15],[75,11,89,16],[75,13,89,18],[76,12,89,20,"zoneId"],[76,18,89,26],[76,20,89,28],[76,21,89,29],[77,12,89,31,"currentLevel"],[77,24,89,43],[77,26,89,45],[77,27,89,46],[78,12,89,48,"killsInLevel"],[78,24,89,60],[78,26,89,62],[78,27,89,63],[79,12,89,65,"completed"],[79,21,89,74],[79,23,89,76],[80,10,89,82],[81,8,89,84],[81,9,89,85],[82,6,90,4],[83,4,91,2],[83,5,91,3],[83,6,91,4],[85,4,93,2],[86,4,94,2],[86,8,94,2,"useEffect"],[86,14,94,11],[86,15,94,11,"useEffect"],[86,24,94,11],[86,26,94,12],[86,32,94,18],[87,6,95,4],[87,10,95,8,"gameState"],[87,19,95,17],[87,21,95,19,"zoneProgress"],[87,33,95,31],[87,35,95,33],[88,8,96,6,"console"],[88,15,96,13],[88,16,96,14,"log"],[88,19,96,17],[88,20,96,18],[88,79,96,77],[88,81,96,79,"gameState"],[88,90,96,88],[88,91,96,89,"zoneProgress"],[88,103,96,101],[88,104,96,102],[89,8,97,6,"setZoneProgress"],[89,23,97,21],[89,24,97,22,"gameState"],[89,33,97,31],[89,34,97,32,"zoneProgress"],[89,46,97,44],[89,47,97,45],[91,8,99,6],[92,8,100,6],[92,14,100,12,"progressEntries"],[92,29,100,27],[92,32,100,30,"Object"],[92,38,100,36],[92,39,100,37,"values"],[92,45,100,43],[92,46,100,44,"gameState"],[92,55,100,53],[92,56,100,54,"zoneProgress"],[92,68,100,66],[92,72,100,70],[92,73,100,71],[92,74,100,72],[92,75,100,73],[93,8,101,6],[93,12,101,10,"highestZone"],[93,23,101,21],[93,26,101,24,"ZONES"],[93,39,101,29],[93,40,101,29,"ZONES"],[93,45,101,29],[93,46,101,30],[93,47,101,31],[93,48,101,32],[94,8,102,6],[94,12,102,10,"highestLevel"],[94,24,102,22],[94,27,102,25,"ZONES"],[94,40,102,30],[94,41,102,30,"ZONES"],[94,46,102,30],[94,47,102,31],[94,48,102,32],[94,49,102,33],[94,51,102,35,"levels"],[94,57,102,41],[94,58,102,42],[94,59,102,43],[94,60,102,44],[95,8,104,6],[95,13,104,11],[95,19,104,17,"progress"],[95,27,104,25],[95,31,104,29,"progressEntries"],[95,46,104,44],[95,48,104,46],[96,10,105,8],[96,14,105,12,"progress"],[96,22,105,20],[96,26,105,24,"progress"],[96,34,105,32],[96,35,105,33,"zoneId"],[96,41,105,39],[96,43,105,41],[97,12,106,10],[97,18,106,16,"zone"],[97,22,106,20],[97,25,106,23,"ZONES"],[97,38,106,28],[97,39,106,28,"ZONES"],[97,44,106,28],[97,45,106,29,"find"],[97,49,106,33],[97,50,106,34,"z"],[97,51,106,35],[97,55,106,39,"z"],[97,56,106,40],[97,57,106,41,"id"],[97,59,106,43],[97,64,106,48,"progress"],[97,72,106,56],[97,73,106,57,"zoneId"],[97,79,106,63],[97,80,106,64],[98,12,107,10],[98,16,107,14,"zone"],[98,20,107,18],[98,22,107,20],[99,14,108,12,"highestZone"],[99,25,108,23],[99,28,108,26,"zone"],[99,32,108,30],[100,14,109,12,"highestLevel"],[100,26,109,24],[100,29,109,27,"zone"],[100,33,109,31],[100,34,109,32,"levels"],[100,40,109,38],[100,41,109,39],[100,42,109,40,"progress"],[100,50,109,48],[100,51,109,49,"currentLevel"],[100,63,109,61],[100,67,109,65],[100,68,109,66],[100,72,109,70],[100,73,109,71],[100,74,109,72],[101,12,110,10],[102,10,111,8],[103,8,112,6],[104,8,114,6,"console"],[104,15,114,13],[104,16,114,14,"log"],[104,19,114,17],[104,20,114,18],[104,53,114,51,"highestZone"],[104,64,114,62],[104,65,114,63,"id"],[104,67,114,65],[104,77,114,75,"highestLevel"],[104,89,114,87],[104,91,114,89,"level"],[104,96,114,94],[104,100,114,98],[104,101,114,99],[104,122,114,120],[104,123,114,121],[105,8,115,6,"setProgressionZone"],[105,26,115,24],[105,27,115,25,"highestZone"],[105,38,115,36],[105,39,115,37],[107,8,117,6],[108,8,118,6,"console"],[108,15,118,13],[108,16,118,14,"log"],[108,19,118,17],[108,20,118,18],[108,58,118,56,"highestZone"],[108,69,118,67],[108,70,118,68,"id"],[108,72,118,70],[108,82,118,80,"highestLevel"],[108,94,118,92],[108,96,118,94,"level"],[108,101,118,99],[108,105,118,103],[108,106,118,104],[108,131,118,129],[108,132,118,130],[109,8,119,6,"setCurrentZone"],[109,22,119,20],[109,23,119,21,"highestZone"],[109,34,119,32],[109,35,119,33],[110,8,120,6,"setCurrentZoneLevel"],[110,27,120,25],[110,28,120,26,"highestLevel"],[110,40,120,38],[110,44,120,42,"ZONES"],[110,57,120,47],[110,58,120,47,"ZONES"],[110,63,120,47],[110,64,120,48],[110,65,120,49],[110,66,120,50],[110,68,120,52,"levels"],[110,74,120,58],[110,75,120,59],[110,76,120,60],[110,77,120,61],[110,78,120,62],[111,6,121,4],[112,4,122,2],[112,5,122,3],[112,7,122,5],[112,8,122,6,"gameState"],[112,17,122,15],[112,19,122,17,"zoneProgress"],[112,31,122,29],[112,32,122,30],[112,33,122,31],[114,4,124,2],[115,4,125,2],[115,8,125,2,"useEffect"],[115,14,125,11],[115,15,125,11,"useEffect"],[115,24,125,11],[115,26,125,12],[115,32,125,18],[116,6,126,4],[116,10,126,8,"gameState"],[116,19,126,17],[116,21,126,19,"ninja"],[116,26,126,24],[116,28,126,26],[117,8,127,6],[117,14,127,12,"recommendedZone"],[117,29,127,27],[117,32,127,30],[117,36,127,30,"getZoneByLevel"],[117,49,127,44],[117,50,127,44,"getZoneByLevel"],[117,64,127,44],[117,66,127,45,"gameState"],[117,75,127,54],[117,76,127,55,"ninja"],[117,81,127,60],[117,82,127,61,"level"],[117,87,127,66],[117,88,127,67],[118,8,128,6],[118,12,128,10,"recommendedZone"],[118,27,128,25],[118,31,128,29],[118,32,128,30,"currentZone"],[118,43,128,41],[118,45,128,43],[119,10,129,8,"setCurrentZone"],[119,24,129,22],[119,25,129,23,"recommendedZone"],[119,40,129,38],[119,41,129,39],[120,10,130,8,"setCurrentZoneLevel"],[120,29,130,27],[120,30,130,28,"recommendedZone"],[120,45,130,43],[120,46,130,44,"levels"],[120,52,130,50],[120,53,130,51],[120,54,130,52],[120,55,130,53],[120,56,130,54],[121,8,131,6],[122,6,132,4],[123,4,133,2],[123,5,133,3],[123,7,133,5],[123,8,133,6,"gameState"],[123,17,133,15],[123,19,133,17,"ninja"],[123,24,133,22],[123,26,133,24,"level"],[123,31,133,29],[123,32,133,30],[123,33,133,31],[125,4,135,2],[126,4,136,2],[126,10,136,8,"selectZone"],[126,20,136,18],[126,23,136,21,"selectZone"],[126,24,136,22,"zoneId"],[126,30,136,36],[126,32,136,38,"levelNumber"],[126,43,136,57],[126,48,136,71],[127,6,137,4],[127,10,137,8],[127,11,137,9,"isZoneUnlockedLocal"],[127,30,137,28],[127,31,137,29,"zoneId"],[127,37,137,35],[127,38,137,36],[127,40,137,38],[128,8,138,6,"console"],[128,15,138,13],[128,16,138,14,"log"],[128,19,138,17],[128,20,138,18],[128,30,138,28,"zoneId"],[128,36,138,34],[128,54,138,52],[128,55,138,53],[129,8,139,6],[129,15,139,13],[129,20,139,18],[130,6,140,4],[131,6,142,4],[131,12,142,10,"zone"],[131,16,142,14],[131,19,142,17,"ZONES"],[131,32,142,22],[131,33,142,22,"ZONES"],[131,38,142,22],[131,39,142,23,"find"],[131,43,142,27],[131,44,142,28,"z"],[131,45,142,29],[131,49,142,33,"z"],[131,50,142,34],[131,51,142,35,"id"],[131,53,142,37],[131,58,142,42,"zoneId"],[131,64,142,48],[131,65,142,49],[132,6,143,4],[132,10,143,8],[132,11,143,9,"zone"],[132,15,143,13],[132,17,143,15],[133,8,144,6,"console"],[133,15,144,13],[133,16,144,14,"log"],[133,19,144,17],[133,20,144,18],[133,30,144,28,"zoneId"],[133,36,144,34],[133,48,144,46],[133,49,144,47],[134,8,145,6],[134,15,145,13],[134,20,145,18],[135,6,146,4],[136,6,148,4],[136,12,148,10,"level"],[136,17,148,15],[136,20,148,18,"zone"],[136,24,148,22],[136,25,148,23,"levels"],[136,31,148,29],[136,32,148,30,"levelNumber"],[136,43,148,41],[136,46,148,44],[136,47,148,45],[136,48,148,46],[137,6,149,4],[137,10,149,8],[137,11,149,9,"level"],[137,16,149,14],[137,18,149,16],[138,8,150,6,"console"],[138,15,150,13],[138,16,150,14,"log"],[138,19,150,17],[138,20,150,18],[138,30,150,28,"zoneId"],[138,36,150,34],[138,46,150,44,"levelNumber"],[138,57,150,55],[138,69,150,67],[138,70,150,68],[139,8,151,6],[139,15,151,13],[139,20,151,18],[140,6,152,4],[141,6,154,4,"console"],[141,13,154,11],[141,14,154,12,"log"],[141,17,154,15],[141,18,154,16],[141,68,154,66,"zoneId"],[141,74,154,72],[141,84,154,82,"levelNumber"],[141,95,154,93],[141,100,154,98,"zone"],[141,104,154,102],[141,105,154,103,"name"],[141,109,154,107],[141,112,154,110],[141,113,154,111],[142,6,155,4,"console"],[142,13,155,11],[142,14,155,12,"log"],[142,17,155,15],[142,18,155,16],[142,44,155,42,"currentZone"],[142,55,155,53],[142,57,155,55,"id"],[142,59,155,57],[142,77,155,75,"currentZoneLevel"],[142,93,155,91],[142,95,155,93,"level"],[142,100,155,98],[142,102,155,100],[142,103,155,101],[143,6,157,4,"setCurrentZone"],[143,20,157,18],[143,21,157,19,"zone"],[143,25,157,23],[143,26,157,24],[144,6,158,4,"setCurrentZoneLevel"],[144,25,158,23],[144,26,158,24,"level"],[144,31,158,29],[144,32,158,30],[145,6,160,4,"console"],[145,13,160,11],[145,14,160,12,"log"],[145,17,160,15],[145,18,160,16],[145,45,160,43,"zoneId"],[145,51,160,49],[145,61,160,59,"levelNumber"],[145,72,160,70],[145,110,160,108],[145,111,160,109],[146,6,161,4],[146,13,161,11],[146,17,161,15],[147,4,162,2],[147,5,162,3],[149,4,164,2],[150,4,165,2],[150,10,165,8,"getZoneProgress"],[150,25,165,23],[150,28,165,27,"zoneId"],[150,34,165,41],[150,38,165,67],[151,6,166,4],[151,13,166,11,"zoneProgress"],[151,25,166,23],[151,26,166,24,"zoneId"],[151,32,166,30],[151,33,166,31],[151,37,166,35],[151,41,166,39],[152,4,167,2],[152,5,167,3],[154,4,169,2],[155,4,170,2],[155,10,170,8,"spawnZoneEnemy"],[155,24,170,22],[155,27,170,25,"spawnZoneEnemy"],[155,28,170,25],[155,33,170,52],[156,6,171,4],[156,10,171,8],[156,11,171,9,"currentZone"],[156,22,171,20],[156,26,171,24],[156,27,171,25,"currentZoneLevel"],[156,43,171,41],[156,45,171,43],[157,8,172,6,"console"],[157,15,172,13],[157,16,172,14,"log"],[157,19,172,17],[157,20,172,18],[157,65,172,63],[157,66,172,64],[158,8,173,6],[158,15,173,13],[158,19,173,17],[159,6,174,4],[161,6,176,4],[162,6,177,4],[162,12,177,10,"enemyTypeIds"],[162,24,177,22],[162,27,177,25,"currentZoneLevel"],[162,43,177,41],[162,44,177,42,"enemyTypes"],[162,54,177,52],[163,6,178,4],[163,12,178,10,"randomEnemyTypeId"],[163,29,178,27],[163,32,178,30,"enemyTypeIds"],[163,44,178,42],[163,45,178,43,"Math"],[163,49,178,47],[163,50,178,48,"floor"],[163,55,178,53],[163,56,178,54,"Math"],[163,60,178,58],[163,61,178,59,"random"],[163,67,178,65],[163,68,178,66],[163,69,178,67],[163,72,178,70,"enemyTypeIds"],[163,84,178,82],[163,85,178,83,"length"],[163,91,178,89],[163,92,178,90],[163,93,178,91],[164,6,179,4],[164,12,179,10,"enemyType"],[164,21,179,19],[164,24,179,22,"ENEMY_TYPES"],[164,37,179,33],[164,38,179,33,"ENEMY_TYPES"],[164,49,179,33],[164,50,179,34,"randomEnemyTypeId"],[164,67,179,51],[164,68,179,52],[165,6,181,4],[165,10,181,8],[165,11,181,9,"enemyType"],[165,20,181,18],[165,22,181,20],[166,8,182,6,"console"],[166,15,182,13],[166,16,182,14,"log"],[166,19,182,17],[166,20,182,18],[166,36,182,34,"randomEnemyTypeId"],[166,53,182,51],[166,65,182,63],[166,66,182,64],[167,8,183,6],[167,15,183,13],[167,19,183,17],[168,6,184,4],[170,6,186,4],[171,6,187,4],[171,12,187,10,"scaledStats"],[171,23,187,21],[171,26,187,24],[171,30,187,24,"calculateEnemyStats"],[171,43,187,43],[171,44,187,43,"calculateEnemyStats"],[171,63,187,43],[171,65,187,44,"enemyType"],[171,74,187,53],[171,76,187,55,"currentZoneLevel"],[171,92,187,71],[171,94,187,73,"currentZone"],[171,105,187,84],[171,106,187,85,"id"],[171,108,187,87],[171,109,187,88],[173,6,189,4],[174,6,190,4],[174,12,190,10,"enemy"],[174,17,190,29],[174,20,190,32],[175,8,191,6,"id"],[175,10,191,8],[175,12,191,10],[175,15,191,13,"randomEnemyTypeId"],[175,32,191,30],[175,36,191,34,"Date"],[175,40,191,38],[175,41,191,39,"now"],[175,44,191,42],[175,45,191,43],[175,46,191,44],[175,50,191,48,"Math"],[175,54,191,52],[175,55,191,53,"random"],[175,61,191,59],[175,62,191,60],[175,63,191,61],[175,65,191,63],[176,8,192,6,"typeId"],[176,14,192,12],[176,16,192,14,"randomEnemyTypeId"],[176,33,192,31],[177,8,193,6,"name"],[177,12,193,10],[177,14,193,12,"enemyType"],[177,23,193,21],[177,24,193,22,"name"],[177,28,193,26],[178,8,194,6,"icon"],[178,12,194,10],[178,14,194,12,"enemyType"],[178,23,194,21],[178,24,194,22,"icon"],[178,28,194,26],[179,8,195,6,"hp"],[179,10,195,8],[179,12,195,10,"scaledStats"],[179,23,195,21],[179,24,195,22,"hp"],[179,26,195,24],[180,8,196,6,"maxHP"],[180,13,196,11],[180,15,196,13,"scaledStats"],[180,26,196,24],[180,27,196,25,"hp"],[180,29,196,27],[181,8,197,6,"attack"],[181,14,197,12],[181,16,197,14,"scaledStats"],[181,27,197,25],[181,28,197,26,"attack"],[181,34,197,32],[182,8,198,6,"xp"],[182,10,198,8],[182,12,198,10,"scaledStats"],[182,23,198,21],[182,24,198,22,"xp"],[182,26,198,24],[183,8,199,6,"resistances"],[183,19,199,17],[183,21,199,19,"scaledStats"],[183,32,199,30],[183,33,199,31,"resistances"],[183,44,199,42],[184,8,200,6,"position"],[184,16,200,14],[184,18,200,16],[185,10,201,8,"x"],[185,11,201,9],[185,13,201,11,"Math"],[185,17,201,15],[185,18,201,16,"random"],[185,24,201,22],[185,25,201,23],[185,26,201,24],[185,29,201,27],[185,32,201,30],[185,35,201,33],[185,37,201,35],[186,10,201,37],[187,10,202,8,"y"],[187,11,202,9],[187,13,202,11,"Math"],[187,17,202,15],[187,18,202,16,"random"],[187,24,202,22],[187,25,202,23],[187,26,202,24],[187,29,202,27],[187,32,202,30],[187,35,202,33],[188,8,203,6],[188,9,203,7],[189,8,204,6,"lastDamaged"],[189,19,204,17],[189,21,204,19],[190,6,205,4],[190,7,205,5],[191,6,207,4,"console"],[191,13,207,11],[191,14,207,12,"log"],[191,17,207,15],[191,18,207,16],[191,32,207,30,"enemy"],[191,37,207,35],[191,38,207,36,"name"],[191,42,207,40],[191,47,207,45,"enemy"],[191,52,207,50],[191,53,207,51,"hp"],[191,55,207,53],[191,63,207,61,"enemy"],[191,68,207,66],[191,69,207,67,"xp"],[191,71,207,69],[191,82,207,80,"currentZone"],[191,93,207,91],[191,94,207,92,"name"],[191,98,207,96],[191,100,207,98],[191,101,207,99],[192,6,208,4],[192,13,208,11,"enemy"],[192,18,208,16],[193,4,209,2],[193,5,209,3],[195,4,211,2],[196,4,212,2],[196,10,212,8,"recordEnemyKill"],[196,25,212,23],[196,28,212,27,"enemy"],[196,33,212,46],[196,37,212,51],[197,6,213,4],[197,10,213,8],[197,11,213,9,"currentZone"],[197,22,213,20],[197,26,213,24],[197,27,213,25,"currentZoneLevel"],[197,43,213,41],[197,45,213,43],[198,6,215,4,"console"],[198,13,215,11],[198,14,215,12,"log"],[198,17,215,15],[198,18,215,16],[198,24,215,22,"enemy"],[198,29,215,27],[198,30,215,28,"name"],[198,34,215,32],[198,47,215,45,"enemy"],[198,52,215,50],[198,53,215,51,"xp"],[198,55,215,53],[198,60,215,58],[198,61,215,59],[199,6,216,4,"console"],[199,13,216,11],[199,14,216,12,"log"],[199,17,216,15],[199,18,216,16],[199,72,216,70,"currentZone"],[199,83,216,81],[199,84,216,82,"id"],[199,86,216,84],[199,96,216,94,"currentZoneLevel"],[199,112,216,110],[199,113,216,111,"level"],[199,118,216,116],[199,120,216,118],[199,121,216,119],[200,6,218,4,"setZoneProgress"],[200,21,218,19],[200,22,218,20,"prev"],[200,26,218,24],[200,30,218,28],[201,8,219,6],[201,14,219,12,"newProgress"],[201,25,219,23],[201,28,219,26],[202,10,219,28],[202,13,219,31,"prev"],[203,8,219,36],[203,9,219,37],[204,8,220,6],[204,14,220,12,"zoneId"],[204,20,220,18],[204,23,220,21,"currentZone"],[204,34,220,32],[204,35,220,33,"id"],[204,37,220,35],[205,8,222,6],[205,12,222,10],[205,13,222,11,"newProgress"],[205,24,222,22],[205,25,222,23,"zoneId"],[205,31,222,29],[205,32,222,30],[205,34,222,32],[206,10,223,8,"newProgress"],[206,21,223,19],[206,22,223,20,"zoneId"],[206,28,223,26],[206,29,223,27],[206,32,223,30],[207,12,224,10,"zoneId"],[207,18,224,16],[208,12,225,10,"currentLevel"],[208,24,225,22],[208,26,225,24],[208,27,225,25],[209,12,226,10,"killsInLevel"],[209,24,226,22],[209,26,226,24],[209,27,226,25],[210,12,227,10,"completed"],[210,21,227,19],[210,23,227,21],[211,10,228,8],[211,11,228,9],[212,8,229,6],[213,8,231,6],[213,14,231,12,"progress"],[213,22,231,20],[213,25,231,23],[214,10,231,25],[214,13,231,28,"newProgress"],[214,24,231,39],[214,25,231,40,"zoneId"],[214,31,231,46],[215,8,231,48],[215,9,231,49],[217,8,233,6],[218,8,234,6],[218,14,234,12,"currentZoneLevel"],[218,30,234,28],[218,33,234,31,"currentZone"],[218,44,234,42],[218,45,234,43,"levels"],[218,51,234,49],[218,52,234,50,"progress"],[218,60,234,58],[218,61,234,59,"currentLevel"],[218,73,234,71],[218,76,234,74],[218,77,234,75],[218,78,234,76],[219,8,235,6],[219,14,235,12,"requiredKills"],[219,27,235,25],[219,30,235,28,"currentZoneLevel"],[219,46,235,44],[219,49,235,47,"currentZoneLevel"],[219,65,235,63],[219,66,235,64,"requiredKills"],[219,79,235,77],[219,82,235,80,"calculateKillRequirement"],[219,106,235,104],[219,107,235,105,"zoneId"],[219,113,235,111],[219,115,235,113,"progress"],[219,123,235,121],[219,124,235,122,"currentLevel"],[219,136,235,134],[219,137,235,135],[221,8,237,6],[222,8,238,6],[222,14,238,12,"willCompleteLevel"],[222,31,238,29],[222,34,238,33,"progress"],[222,42,238,41],[222,43,238,42,"killsInLevel"],[222,55,238,54],[222,58,238,57],[222,59,238,58],[222,63,238,63,"requiredKills"],[222,76,238,76],[223,8,240,6],[223,12,240,10,"willCompleteLevel"],[223,29,240,27],[223,31,240,29],[224,10,241,8,"console"],[224,17,241,15],[224,18,241,16,"log"],[224,21,241,19],[224,22,241,20],[224,34,241,32,"progress"],[224,42,241,40],[224,43,241,41,"currentLevel"],[224,55,241,53],[224,72,241,70,"currentZone"],[224,83,241,81],[224,84,241,82,"name"],[224,88,241,86],[224,91,241,89],[224,92,241,90],[226,10,243,8],[227,10,244,8,"progress"],[227,18,244,16],[227,19,244,17,"killsInLevel"],[227,31,244,29],[227,34,244,32,"requiredKills"],[227,47,244,45],[228,10,246,8,"console"],[228,17,246,15],[228,18,246,16,"log"],[228,21,246,19],[228,22,246,20],[228,33,246,31,"zoneId"],[228,39,246,37],[228,49,246,47,"progress"],[228,57,246,55],[228,58,246,56,"currentLevel"],[228,70,246,68],[228,75,246,73,"progress"],[228,83,246,81],[228,84,246,82,"killsInLevel"],[228,96,246,94],[228,100,246,98,"requiredKills"],[228,113,246,111],[228,133,246,131],[228,134,246,132],[229,8,247,6],[229,9,247,7],[229,15,247,13],[230,10,248,8],[231,10,249,8,"progress"],[231,18,249,16],[231,19,249,17,"killsInLevel"],[231,31,249,29],[231,35,249,33],[231,36,249,34],[232,10,250,8,"console"],[232,17,250,15],[232,18,250,16,"log"],[232,21,250,19],[232,22,250,20],[232,33,250,31,"zoneId"],[232,39,250,37],[232,49,250,47,"progress"],[232,57,250,55],[232,58,250,56,"currentLevel"],[232,70,250,68],[232,75,250,73,"progress"],[232,83,250,81],[232,84,250,82,"killsInLevel"],[232,96,250,94],[232,100,250,98,"requiredKills"],[232,113,250,111],[232,121,250,119],[232,122,250,120],[233,8,251,6],[235,8,253,6],[236,8,254,6],[236,12,254,10,"willCompleteLevel"],[236,29,254,27],[236,31,254,29],[237,10,255,8,"console"],[237,17,255,15],[237,18,255,16,"log"],[237,21,255,19],[237,22,255,20],[237,34,255,32,"progress"],[237,42,255,40],[237,43,255,41,"currentLevel"],[237,55,255,53],[237,72,255,70,"currentZone"],[237,83,255,81],[237,84,255,82,"name"],[237,88,255,86],[237,91,255,89],[237,92,255,90],[239,10,257,8],[240,10,258,8],[240,14,258,12,"progress"],[240,22,258,20],[240,23,258,21,"currentLevel"],[240,35,258,33],[240,38,258,36],[240,39,258,37],[240,41,258,39],[241,12,259,10,"progress"],[241,20,259,18],[241,21,259,19,"currentLevel"],[241,33,259,31],[241,37,259,35],[241,38,259,36],[242,12,260,10,"progress"],[242,20,260,18],[242,21,260,19,"killsInLevel"],[242,33,260,31],[242,36,260,34],[242,37,260,35],[243,12,261,10,"console"],[243,19,261,17],[243,20,261,18,"log"],[243,23,261,21],[243,24,261,22],[243,61,261,59,"progress"],[243,69,261,67],[243,70,261,68,"currentLevel"],[243,82,261,80],[243,122,261,120],[243,123,261,121],[245,12,263,10],[246,12,264,10],[247,12,265,10],[247,18,265,16,"nextLevel"],[247,27,265,25],[247,30,265,28,"currentZone"],[247,41,265,39],[247,42,265,40,"levels"],[247,48,265,46],[247,49,265,47,"progress"],[247,57,265,55],[247,58,265,56,"currentLevel"],[247,70,265,68],[247,73,265,71],[247,74,265,72],[247,75,265,73],[248,12,266,10],[248,16,266,14,"nextLevel"],[248,25,266,23],[248,29,266,27,"currentZone"],[248,40,266,38],[248,45,266,43,"progressionZone"],[248,60,266,58],[248,62,266,60],[249,14,267,12],[250,14,268,12,"console"],[250,21,268,19],[250,22,268,20,"log"],[250,25,268,23],[250,26,268,24],[250,100,268,98],[250,101,268,99],[251,14,269,12,"setCurrentZoneLevel"],[251,33,269,31],[251,34,269,32,"nextLevel"],[251,43,269,41],[251,44,269,42],[252,14,270,12,"setProgressionZone"],[252,32,270,30],[252,33,270,31,"currentZone"],[252,44,270,42],[252,45,270,43],[252,46,270,44],[252,47,270,45],[253,12,271,10],[253,13,271,11],[253,19,271,17],[254,14,272,12,"console"],[254,21,272,19],[254,22,272,20,"log"],[254,25,272,23],[254,26,272,24],[254,104,272,102],[254,105,272,103],[255,12,273,10],[256,10,274,8],[256,11,274,9],[256,17,274,15],[257,12,275,10],[258,12,276,10,"progress"],[258,20,276,18],[258,21,276,19,"completed"],[258,30,276,28],[258,33,276,31],[258,37,276,35],[259,12,277,10,"console"],[259,19,277,17],[259,20,277,18,"log"],[259,23,277,21],[259,24,277,22],[259,35,277,33,"currentZone"],[259,46,277,44],[259,47,277,45,"name"],[259,51,277,49],[259,84,277,82],[259,85,277,83],[260,10,278,8],[261,8,279,6],[262,8,281,6,"newProgress"],[262,19,281,17],[262,20,281,18,"zoneId"],[262,26,281,24],[262,27,281,25],[262,30,281,28,"progress"],[262,38,281,36],[264,8,283,6],[265,8,284,6,"setTimeout"],[265,18,284,16],[265,19,284,17],[265,25,284,23],[266,10,285,8,"console"],[266,17,285,15],[266,18,285,16,"log"],[266,21,285,19],[266,22,285,20],[266,67,285,65],[266,69,285,67,"newProgress"],[266,80,285,78],[266,81,285,79],[267,10,286,8,"updateZoneProgress"],[267,28,286,26],[267,29,286,27,"newProgress"],[267,40,286,38],[267,41,286,39],[268,8,287,6],[268,9,287,7],[268,11,287,9],[268,12,287,10],[268,13,287,11],[268,14,287,12],[268,15,287,13],[270,8,289,6],[270,15,289,13,"newProgress"],[270,26,289,24],[271,6,290,4],[271,7,290,5],[271,8,290,6],[272,4,291,2],[272,5,291,3],[274,4,293,2],[275,4,294,2],[275,10,294,8,"isZoneUnlockedLocal"],[275,29,294,27],[275,32,294,31,"zoneId"],[275,38,294,45],[275,42,294,59],[276,6,295,4],[276,10,295,8,"zoneId"],[276,16,295,14],[276,21,295,19],[276,22,295,20],[276,24,295,22],[276,31,295,29],[276,35,295,33],[276,36,295,34],[276,37,295,35],[278,6,297,4],[278,12,297,10,"zone"],[278,16,297,14],[278,19,297,17,"ZONES"],[278,32,297,22],[278,33,297,22,"ZONES"],[278,38,297,22],[278,39,297,23,"find"],[278,43,297,27],[278,44,297,28,"z"],[278,45,297,29],[278,49,297,33,"z"],[278,50,297,34],[278,51,297,35,"id"],[278,53,297,37],[278,58,297,42,"zoneId"],[278,64,297,48],[278,65,297,49],[279,6,298,4],[279,10,298,8],[279,11,298,9,"zone"],[279,15,298,13],[279,17,298,15,"unlockRequirement"],[279,34,298,32],[279,35,298,33,"previousZone"],[279,47,298,45],[279,49,298,47],[279,56,298,54],[279,60,298,58],[280,6,300,4],[280,12,300,10,"prevZoneProgress"],[280,28,300,26],[280,31,300,29,"zoneProgress"],[280,43,300,41],[280,44,300,42,"zone"],[280,48,300,46],[280,49,300,47,"unlockRequirement"],[280,66,300,64],[280,67,300,65,"previousZone"],[280,79,300,77],[280,80,300,78],[281,6,301,4],[281,13,301,11,"prevZoneProgress"],[281,29,301,27],[281,31,301,29,"completed"],[281,40,301,38],[281,44,301,42],[281,49,301,47],[282,4,302,2],[282,5,302,3],[284,4,304,2],[285,4,305,2],[285,10,305,8,"getUnlockedZones"],[285,26,305,24],[285,29,305,27,"getUnlockedZones"],[285,30,305,27],[285,35,305,41],[286,6,306,4],[286,13,306,11,"ZONES"],[286,26,306,16],[286,27,306,16,"ZONES"],[286,32,306,16],[286,33,306,17,"filter"],[286,39,306,23],[286,40,306,24,"zone"],[286,44,306,28],[286,48,306,32,"isZoneUnlockedLocal"],[286,67,306,51],[286,68,306,52,"zone"],[286,72,306,56],[286,73,306,57,"id"],[286,75,306,59],[286,76,306,60],[286,77,306,61],[287,4,307,2],[287,5,307,3],[288,4,309,2],[288,10,309,8,"contextValue"],[288,22,309,37],[288,25,309,40,"React"],[288,30,309,45],[288,31,309,45,"default"],[288,38,309,45],[288,39,309,46,"useMemo"],[288,46,309,53],[288,47,309,54],[288,54,309,61],[289,6,310,4,"currentZone"],[289,17,310,15],[290,6,310,17],[291,6,311,4,"currentZoneLevel"],[291,22,311,20],[292,6,312,4,"progressionZone"],[292,21,312,19],[293,6,312,21],[294,6,313,4,"zoneProgress"],[294,18,313,16],[295,6,314,4,"availableZones"],[295,20,314,18],[295,22,314,20,"ZONES"],[295,35,314,25],[295,36,314,25,"ZONES"],[295,41,314,25],[296,6,315,4,"selectZone"],[296,16,315,14],[297,6,316,4,"getZoneProgress"],[297,21,316,19],[298,6,317,4,"spawnZoneEnemy"],[298,20,317,18],[299,6,318,4,"recordEnemyKill"],[299,21,318,19],[300,6,319,4,"isZoneUnlocked"],[300,20,319,18],[300,22,319,20,"isZoneUnlockedLocal"],[300,41,319,39],[301,6,320,4,"getUnlockedZones"],[302,4,321,2],[302,5,321,3],[302,6,321,4],[302,8,321,6],[302,9,322,4,"currentZone"],[302,20,322,15],[302,22,323,4,"currentZoneLevel"],[302,38,323,20],[302,40,324,4,"progressionZone"],[302,55,324,19],[302,57,325,4,"zoneProgress"],[302,69,325,16],[302,71,326,4,"selectZone"],[302,81,326,14],[302,83,327,4,"getZoneProgress"],[302,98,327,19],[302,100,328,4,"spawnZoneEnemy"],[302,114,328,18],[302,116,329,4,"recordEnemyKill"],[302,131,329,19],[302,133,330,4,"isZoneUnlockedLocal"],[302,152,330,23],[302,154,331,4,"getUnlockedZones"],[302,170,331,20],[302,171,332,3],[302,172,332,4],[303,4,334,2],[303,24,335,4],[303,28,335,4,"_reactJsxDevRuntime"],[303,47,335,4],[303,48,335,4,"jsxDEV"],[303,54,335,4],[303,56,335,5,"ZoneContext"],[303,67,335,16],[303,68,335,17,"Provider"],[303,76,335,25],[304,6,335,26,"value"],[304,11,335,31],[304,13,335,33,"contextValue"],[304,25,335,46],[305,6,335,46,"children"],[305,14,335,46],[305,16,336,7,"children"],[306,4,336,15],[307,6,336,15,"fileName"],[307,14,336,15],[307,16,336,15,"_jsxFileName"],[307,28,336,15],[308,6,336,15,"lineNumber"],[308,16,336,15],[309,6,336,15,"columnNumber"],[309,18,336,15],[310,4,336,15],[310,11,337,26],[310,12,337,27],[311,2,339,0],[311,3,339,1],[312,0,339,2],[312,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","ZONES.find$argument_0","selectZone","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE6C;CFM;4BGE;8DCI;GDG;6ECC;GDG;sECC;GDG;iFCC;GDU;YEG;kCCY,6BD;GFgB;YEG;GFQ;qBIG;4BDM,oBC;GJoB;0BKG;GLE;yBMG;GNuC;0BOG;oBCM;iBCkE;ODG;KDG;GPC;8BUG;4BPG,oBO;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbY;CHkB"},"hasCjsExports":false},"type":"js/module"}]}