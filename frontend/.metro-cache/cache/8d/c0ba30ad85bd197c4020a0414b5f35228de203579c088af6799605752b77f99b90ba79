{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState,\n      updateZoneProgress = _useGame.updateZoneProgress;\n\n    // Zone State\n    var _useState = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1];\n    var _useState3 = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        1: {\n          zoneId: 1,\n          currentLevel: 1,\n          killsInLevel: 0,\n          completed: false\n        }\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      zoneProgress = _useState6[0],\n      setZoneProgress = _useState6[1];\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    var selectZone = (zoneId, levelNumber) => {\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"OeKA9Fsa3GBSug5G7rXMThFYNVM=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":244,"map":[[15,2,47,0,"Object"],[15,8,47,0],[15,9,47,0,"defineProperty"],[15,23,47,0],[15,24,47,0,"exports"],[15,31,47,0],[16,4,47,0,"enumerable"],[16,14,47,0],[17,4,47,0,"get"],[17,7,47,0],[17,18,47,0,"get"],[17,19,47,0],[18,6,47,0],[18,13,47,0,"useZone"],[18,20,47,0],[19,4,47,0],[20,2,47,0],[21,2,55,0,"Object"],[21,8,55,0],[21,9,55,0,"defineProperty"],[21,23,55,0],[21,24,55,0,"exports"],[21,31,55,0],[22,4,55,0,"enumerable"],[22,14,55,0],[23,4,55,0,"get"],[23,7,55,0],[23,18,55,0,"get"],[23,19,55,0],[24,6,55,0],[24,13,55,0,"ZoneProvider"],[24,25,55,0],[25,4,55,0],[26,2,55,0],[27,2,245,2],[27,6,245,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,245,2],[27,42,245,2,"require"],[27,49,245,2],[27,50,245,2,"_dependencyMap"],[27,64,245,2],[28,2,245,2],[28,6,245,2,"_slicedToArray"],[28,20,245,2],[28,23,245,2,"_interopDefault"],[28,38,245,2],[28,39,245,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,245,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,45,0],[34,6,45,6,"ZoneContext"],[34,17,45,17],[34,33,45,20],[34,37,45,20,"createContext"],[34,43,45,33],[34,44,45,33,"createContext"],[34,57,45,33],[34,59,45,63,"undefined"],[34,68,45,72],[34,69,45,73],[35,2,47,7],[35,6,47,13,"useZone"],[35,13,47,20],[35,16,47,23,"useZone"],[35,17,47,23],[35,22,47,29],[36,4,47,29,"_s"],[36,6,47,29],[37,4,48,2],[37,8,48,8,"context"],[37,15,48,15],[37,18,48,18],[37,22,48,18,"useContext"],[37,28,48,28],[37,29,48,28,"useContext"],[37,39,48,28],[37,41,48,29,"ZoneContext"],[37,52,48,40],[37,53,48,41],[38,4,49,2],[38,8,49,6],[38,9,49,7,"context"],[38,16,49,14],[38,18,49,16],[39,6,50,4],[39,12,50,10],[39,16,50,14,"Error"],[39,21,50,19],[39,22,50,20],[39,66,50,64],[39,67,50,65],[40,4,51,2],[41,4,52,2],[41,11,52,9,"context"],[41,18,52,16],[42,2,53,0],[42,3,53,1],[43,2,53,2,"_s"],[43,4,53,2],[43,5,47,13,"useZone"],[43,12,47,20],[44,2,55,7],[44,6,55,13,"ZoneProvider"],[44,18,55,25],[44,21,55,28,"_ref"],[44,25,55,28],[44,29,55,71],[45,4,55,71,"_s2"],[45,7,55,71],[46,4,55,71],[46,8,55,31,"children"],[46,16,55,39],[46,19,55,39,"_ref"],[46,23,55,39],[46,24,55,31,"children"],[46,32,55,39],[47,4,56,2],[47,8,56,2,"_useGame"],[47,16,56,2],[47,19,56,44],[47,23,56,44,"useGame"],[47,35,56,51],[47,36,56,51,"useGame"],[47,43,56,51],[47,45,56,52],[47,46,56,53],[48,6,56,10,"gameState"],[48,15,56,19],[48,18,56,19,"_useGame"],[48,26,56,19],[48,27,56,10,"gameState"],[48,36,56,19],[49,6,56,21,"updateZoneProgress"],[49,24,56,39],[49,27,56,39,"_useGame"],[49,35,56,39],[49,36,56,21,"updateZoneProgress"],[49,54,56,39],[51,4,58,2],[52,4,59,2],[52,8,59,2,"_useState"],[52,17,59,2],[52,20,59,40],[52,24,59,40,"useState"],[52,30,59,48],[52,31,59,48,"useState"],[52,39,59,48],[52,41,59,62,"ZONES"],[52,54,59,67],[52,55,59,67,"ZONES"],[52,60,59,67],[52,61,59,68],[52,62,59,69],[52,63,59,70],[52,64,59,71],[53,6,59,71,"_useState2"],[53,16,59,71],[53,23,59,71,"_slicedToArray"],[53,37,59,71],[53,38,59,71,"default"],[53,45,59,71],[53,47,59,71,"_useState"],[53,56,59,71],[54,6,59,9,"currentZone"],[54,17,59,20],[54,20,59,20,"_useState2"],[54,30,59,20],[55,6,59,22,"setCurrentZone"],[55,20,59,36],[55,23,59,36,"_useState2"],[55,33,59,36],[56,4,60,2],[56,8,60,2,"_useState3"],[56,18,60,2],[56,21,60,50],[56,25,60,50,"useState"],[56,31,60,58],[56,32,60,58,"useState"],[56,40,60,58],[56,42,60,77,"ZONES"],[56,55,60,82],[56,56,60,82,"ZONES"],[56,61,60,82],[56,62,60,83],[56,63,60,84],[56,64,60,85],[56,66,60,87,"levels"],[56,72,60,93],[56,73,60,94],[56,74,60,95],[56,75,60,96],[56,79,60,100],[56,83,60,104],[56,84,60,105],[57,6,60,105,"_useState4"],[57,16,60,105],[57,23,60,105,"_slicedToArray"],[57,37,60,105],[57,38,60,105,"default"],[57,45,60,105],[57,47,60,105,"_useState3"],[57,57,60,105],[58,6,60,9,"currentZoneLevel"],[58,22,60,25],[58,25,60,25,"_useState4"],[58,35,60,25],[59,6,60,27,"setCurrentZoneLevel"],[59,25,60,46],[59,28,60,46,"_useState4"],[59,38,60,46],[60,4,61,2],[60,8,61,2,"_useState5"],[60,18,61,2],[60,21,61,42],[60,25,61,42,"useState"],[60,31,61,50],[60,32,61,50,"useState"],[60,40,61,50],[60,42,61,81],[61,8,62,4],[61,9,62,5],[61,11,62,7],[62,10,62,9,"zoneId"],[62,16,62,15],[62,18,62,17],[62,19,62,18],[63,10,62,20,"currentLevel"],[63,22,62,32],[63,24,62,34],[63,25,62,35],[64,10,62,37,"killsInLevel"],[64,22,62,49],[64,24,62,51],[64,25,62,52],[65,10,62,54,"completed"],[65,19,62,63],[65,21,62,65],[66,8,62,71],[67,6,63,2],[67,7,63,3],[67,8,63,4],[68,6,63,4,"_useState6"],[68,16,63,4],[68,23,63,4,"_slicedToArray"],[68,37,63,4],[68,38,63,4,"default"],[68,45,63,4],[68,47,63,4,"_useState5"],[68,57,63,4],[69,6,61,9,"zoneProgress"],[69,18,61,21],[69,21,61,21,"_useState6"],[69,31,61,21],[70,6,61,23,"setZoneProgress"],[70,21,61,38],[70,24,61,38,"_useState6"],[70,34,61,38],[72,4,65,2],[73,4,66,2],[73,8,66,2,"useEffect"],[73,14,66,11],[73,15,66,11,"useEffect"],[73,24,66,11],[73,26,66,12],[73,32,66,18],[74,6,67,4],[74,10,67,8,"gameState"],[74,19,67,17],[74,21,67,19,"ninja"],[74,26,67,24],[74,28,67,26],[75,8,68,6],[75,12,68,12,"recommendedZone"],[75,27,68,27],[75,30,68,30],[75,34,68,30,"getZoneByLevel"],[75,47,68,44],[75,48,68,44,"getZoneByLevel"],[75,62,68,44],[75,64,68,45,"gameState"],[75,73,68,54],[75,74,68,55,"ninja"],[75,79,68,60],[75,80,68,61,"level"],[75,85,68,66],[75,86,68,67],[76,8,69,6],[76,12,69,10,"recommendedZone"],[76,27,69,25],[76,31,69,29],[76,32,69,30,"currentZone"],[76,43,69,41],[76,45,69,43],[77,10,70,8,"setCurrentZone"],[77,24,70,22],[77,25,70,23,"recommendedZone"],[77,40,70,38],[77,41,70,39],[78,10,71,8,"setCurrentZoneLevel"],[78,29,71,27],[78,30,71,28,"recommendedZone"],[78,45,71,43],[78,46,71,44,"levels"],[78,52,71,50],[78,53,71,51],[78,54,71,52],[78,55,71,53],[78,56,71,54],[79,8,72,6],[80,6,73,4],[81,4,74,2],[81,5,74,3],[81,7,74,5],[81,8,74,6,"gameState"],[81,17,74,15],[81,19,74,17,"ninja"],[81,24,74,22],[81,26,74,24,"level"],[81,31,74,29],[81,32,74,30],[81,33,74,31],[83,4,76,2],[84,4,77,2],[84,8,77,8,"selectZone"],[84,18,77,18],[84,21,77,21,"selectZone"],[84,22,77,22,"zoneId"],[84,28,77,36],[84,30,77,38,"levelNumber"],[84,41,77,57],[84,46,77,71],[85,6,78,4],[85,10,78,10,"zone"],[85,14,78,14],[85,17,78,17,"ZONES"],[85,30,78,22],[85,31,78,22,"ZONES"],[85,36,78,22],[85,37,78,23,"find"],[85,41,78,27],[85,42,78,28,"z"],[85,43,78,29],[85,47,78,33,"z"],[85,48,78,34],[85,49,78,35,"id"],[85,51,78,37],[85,56,78,42,"zoneId"],[85,62,78,48],[85,63,78,49],[86,6,79,4],[86,10,79,8],[86,11,79,9,"zone"],[86,15,79,13],[86,19,79,17],[86,20,79,18],[86,24,79,18,"isZoneUnlocked"],[86,37,79,32],[86,38,79,32,"isZoneUnlocked"],[86,52,79,32],[86,54,79,33,"zoneId"],[86,60,79,39],[86,62,79,41,"zoneProgress"],[86,74,79,53],[86,75,79,54],[86,77,79,56],[87,8,80,6,"console"],[87,15,80,13],[87,16,80,14,"log"],[87,19,80,17],[87,20,80,18],[87,30,80,28,"zoneId"],[87,36,80,34],[87,58,80,56],[87,59,80,57],[88,8,81,6],[88,15,81,13],[88,20,81,18],[89,6,82,4],[90,6,84,4],[90,10,84,10,"level"],[90,15,84,15],[90,18,84,18,"zone"],[90,22,84,22],[90,23,84,23,"levels"],[90,29,84,29],[90,30,84,30,"levelNumber"],[90,41,84,41],[90,44,84,44],[90,45,84,45],[90,46,84,46],[91,6,85,4],[91,10,85,8],[91,11,85,9,"level"],[91,16,85,14],[91,18,85,16],[92,8,86,6,"console"],[92,15,86,13],[92,16,86,14,"log"],[92,19,86,17],[92,20,86,18],[92,31,86,29,"levelNumber"],[92,42,86,40],[92,64,86,62,"zoneId"],[92,70,86,68],[92,72,86,70],[92,73,86,71],[93,8,87,6],[93,15,87,13],[93,20,87,18],[94,6,88,4],[95,6,90,4,"setCurrentZone"],[95,20,90,18],[95,21,90,19,"zone"],[95,25,90,23],[95,26,90,24],[96,6,91,4,"setCurrentZoneLevel"],[96,25,91,23],[96,26,91,24,"level"],[96,31,91,29],[96,32,91,30],[97,6,92,4,"console"],[97,13,92,11],[97,14,92,12,"log"],[97,17,92,15],[97,18,92,16],[97,34,92,32,"zone"],[97,38,92,36],[97,39,92,37,"name"],[97,43,92,41],[97,55,92,53,"levelNumber"],[97,66,92,64],[97,68,92,66],[97,69,92,67],[98,6,93,4],[98,13,93,11],[98,17,93,15],[99,4,94,2],[99,5,94,3],[101,4,96,2],[102,4,97,2],[102,8,97,8,"getZoneProgress"],[102,23,97,23],[102,26,97,27,"zoneId"],[102,32,97,41],[102,36,97,67],[103,6,98,4],[103,13,98,11,"zoneProgress"],[103,25,98,23],[103,26,98,24,"zoneId"],[103,32,98,30],[103,33,98,31],[103,37,98,35],[103,41,98,39],[104,4,99,2],[104,5,99,3],[106,4,101,2],[107,4,102,2],[107,8,102,8,"spawnZoneEnemy"],[107,22,102,22],[107,25,102,25,"spawnZoneEnemy"],[107,26,102,25],[107,31,102,52],[108,6,103,4],[108,10,103,8],[108,11,103,9,"currentZone"],[108,22,103,20],[108,26,103,24],[108,27,103,25,"currentZoneLevel"],[108,43,103,41],[108,45,103,43],[109,8,104,6,"console"],[109,15,104,13],[109,16,104,14,"log"],[109,19,104,17],[109,20,104,18],[109,65,104,63],[109,66,104,64],[110,8,105,6],[110,15,105,13],[110,19,105,17],[111,6,106,4],[113,6,108,4],[114,6,109,4],[114,10,109,10,"enemyTypeIds"],[114,22,109,22],[114,25,109,25,"currentZoneLevel"],[114,41,109,41],[114,42,109,42,"enemyTypes"],[114,52,109,52],[115,6,110,4],[115,10,110,10,"randomEnemyTypeId"],[115,27,110,27],[115,30,110,30,"enemyTypeIds"],[115,42,110,42],[115,43,110,43,"Math"],[115,47,110,47],[115,48,110,48,"floor"],[115,53,110,53],[115,54,110,54,"Math"],[115,58,110,58],[115,59,110,59,"random"],[115,65,110,65],[115,66,110,66],[115,67,110,67],[115,70,110,70,"enemyTypeIds"],[115,82,110,82],[115,83,110,83,"length"],[115,89,110,89],[115,90,110,90],[115,91,110,91],[116,6,111,4],[116,10,111,10,"enemyType"],[116,19,111,19],[116,22,111,22,"ENEMY_TYPES"],[116,35,111,33],[116,36,111,33,"ENEMY_TYPES"],[116,47,111,33],[116,48,111,34,"randomEnemyTypeId"],[116,65,111,51],[116,66,111,52],[117,6,113,4],[117,10,113,8],[117,11,113,9,"enemyType"],[117,20,113,18],[117,22,113,20],[118,8,114,6,"console"],[118,15,114,13],[118,16,114,14,"log"],[118,19,114,17],[118,20,114,18],[118,36,114,34,"randomEnemyTypeId"],[118,53,114,51],[118,65,114,63],[118,66,114,64],[119,8,115,6],[119,15,115,13],[119,19,115,17],[120,6,116,4],[122,6,118,4],[123,6,119,4],[123,10,119,10,"scaledStats"],[123,21,119,21],[123,24,119,24],[123,28,119,24,"calculateEnemyStats"],[123,41,119,43],[123,42,119,43,"calculateEnemyStats"],[123,61,119,43],[123,63,119,44,"enemyType"],[123,72,119,53],[123,74,119,55,"currentZoneLevel"],[123,90,119,71],[123,92,119,73,"currentZone"],[123,103,119,84],[123,104,119,85,"id"],[123,106,119,87],[123,107,119,88],[125,6,121,4],[126,6,122,4],[126,10,122,10,"enemy"],[126,15,122,29],[126,18,122,32],[127,8,123,6,"id"],[127,10,123,8],[127,12,123,10],[127,15,123,13,"randomEnemyTypeId"],[127,32,123,30],[127,36,123,34,"Date"],[127,40,123,38],[127,41,123,39,"now"],[127,44,123,42],[127,45,123,43],[127,46,123,44],[127,50,123,48,"Math"],[127,54,123,52],[127,55,123,53,"random"],[127,61,123,59],[127,62,123,60],[127,63,123,61],[127,65,123,63],[128,8,124,6,"typeId"],[128,14,124,12],[128,16,124,14,"randomEnemyTypeId"],[128,33,124,31],[129,8,125,6,"name"],[129,12,125,10],[129,14,125,12,"enemyType"],[129,23,125,21],[129,24,125,22,"name"],[129,28,125,26],[130,8,126,6,"icon"],[130,12,126,10],[130,14,126,12,"enemyType"],[130,23,126,21],[130,24,126,22,"icon"],[130,28,126,26],[131,8,127,6,"hp"],[131,10,127,8],[131,12,127,10,"scaledStats"],[131,23,127,21],[131,24,127,22,"hp"],[131,26,127,24],[132,8,128,6,"maxHP"],[132,13,128,11],[132,15,128,13,"scaledStats"],[132,26,128,24],[132,27,128,25,"hp"],[132,29,128,27],[133,8,129,6,"attack"],[133,14,129,12],[133,16,129,14,"scaledStats"],[133,27,129,25],[133,28,129,26,"attack"],[133,34,129,32],[134,8,130,6,"xp"],[134,10,130,8],[134,12,130,10,"scaledStats"],[134,23,130,21],[134,24,130,22,"xp"],[134,26,130,24],[135,8,131,6,"resistances"],[135,19,131,17],[135,21,131,19,"scaledStats"],[135,32,131,30],[135,33,131,31,"resistances"],[135,44,131,42],[136,8,132,6,"position"],[136,16,132,14],[136,18,132,16],[137,10,133,8,"x"],[137,11,133,9],[137,13,133,11,"Math"],[137,17,133,15],[137,18,133,16,"random"],[137,24,133,22],[137,25,133,23],[137,26,133,24],[137,29,133,27],[137,32,133,30],[137,35,133,33],[137,37,133,35],[138,10,133,37],[139,10,134,8,"y"],[139,11,134,9],[139,13,134,11,"Math"],[139,17,134,15],[139,18,134,16,"random"],[139,24,134,22],[139,25,134,23],[139,26,134,24],[139,29,134,27],[139,32,134,30],[139,35,134,33],[140,8,135,6],[140,9,135,7],[141,8,136,6,"lastDamaged"],[141,19,136,17],[141,21,136,19],[142,6,137,4],[142,7,137,5],[143,6,139,4,"console"],[143,13,139,11],[143,14,139,12,"log"],[143,17,139,15],[143,18,139,16],[143,32,139,30,"enemy"],[143,37,139,35],[143,38,139,36,"name"],[143,42,139,40],[143,47,139,45,"enemy"],[143,52,139,50],[143,53,139,51,"hp"],[143,55,139,53],[143,63,139,61,"enemy"],[143,68,139,66],[143,69,139,67,"xp"],[143,71,139,69],[143,82,139,80,"currentZone"],[143,93,139,91],[143,94,139,92,"name"],[143,98,139,96],[143,100,139,98],[143,101,139,99],[144,6,140,4],[144,13,140,11,"enemy"],[144,18,140,16],[145,4,141,2],[145,5,141,3],[147,4,143,2],[148,4,144,2],[148,8,144,8,"recordEnemyKill"],[148,23,144,23],[148,26,144,27,"enemy"],[148,31,144,46],[148,35,144,51],[149,6,145,4],[149,10,145,8],[149,11,145,9,"currentZone"],[149,22,145,20],[149,26,145,24],[149,27,145,25,"currentZoneLevel"],[149,43,145,41],[149,45,145,43],[150,6,147,4,"console"],[150,13,147,11],[150,14,147,12,"log"],[150,17,147,15],[150,18,147,16],[150,24,147,22,"enemy"],[150,29,147,27],[150,30,147,28,"name"],[150,34,147,32],[150,47,147,45,"enemy"],[150,52,147,50],[150,53,147,51,"xp"],[150,55,147,53],[150,60,147,58],[150,61,147,59],[151,6,149,4,"setZoneProgress"],[151,21,149,19],[151,22,149,20,"prev"],[151,26,149,24],[151,30,149,28],[152,8,150,6],[152,12,150,12,"newProgress"],[152,23,150,23],[152,26,150,26],[153,10,150,28],[153,13,150,31,"prev"],[154,8,150,36],[154,9,150,37],[155,8,151,6],[155,12,151,12,"zoneId"],[155,18,151,18],[155,21,151,21,"currentZone"],[155,32,151,32],[155,33,151,33,"id"],[155,35,151,35],[156,8,153,6],[156,12,153,10],[156,13,153,11,"newProgress"],[156,24,153,22],[156,25,153,23,"zoneId"],[156,31,153,29],[156,32,153,30],[156,34,153,32],[157,10,154,8,"newProgress"],[157,21,154,19],[157,22,154,20,"zoneId"],[157,28,154,26],[157,29,154,27],[157,32,154,30],[158,12,155,10,"zoneId"],[158,18,155,16],[159,12,156,10,"currentLevel"],[159,24,156,22],[159,26,156,24],[159,27,156,25],[160,12,157,10,"killsInLevel"],[160,24,157,22],[160,26,157,24],[160,27,157,25],[161,12,158,10,"completed"],[161,21,158,19],[161,23,158,21],[162,10,159,8],[162,11,159,9],[163,8,160,6],[164,8,162,6],[164,12,162,12,"progress"],[164,20,162,20],[164,23,162,23],[165,10,162,25],[165,13,162,28,"newProgress"],[165,24,162,39],[165,25,162,40,"zoneId"],[165,31,162,46],[166,8,162,48],[166,9,162,49],[167,8,163,6,"progress"],[167,16,163,14],[167,17,163,15,"killsInLevel"],[167,29,163,27],[167,33,163,31],[167,34,163,32],[168,8,165,6,"console"],[168,15,165,13],[168,16,165,14,"log"],[168,19,165,17],[168,20,165,18],[168,31,165,29,"zoneId"],[168,37,165,35],[168,47,165,45,"progress"],[168,55,165,53],[168,56,165,54,"currentLevel"],[168,68,165,66],[168,73,165,71,"progress"],[168,81,165,79],[168,82,165,80,"killsInLevel"],[168,94,165,92],[168,107,165,105],[168,108,165,106],[170,8,167,6],[171,8,168,6],[171,12,168,10,"progress"],[171,20,168,18],[171,21,168,19,"killsInLevel"],[171,33,168,31],[171,37,168,35],[171,41,168,39],[171,43,168,41],[172,10,169,8,"console"],[172,17,169,15],[172,18,169,16,"log"],[172,21,169,19],[172,22,169,20],[172,34,169,32,"progress"],[172,42,169,40],[172,43,169,41,"currentLevel"],[172,55,169,53],[172,72,169,70,"currentZone"],[172,83,169,81],[172,84,169,82,"name"],[172,88,169,86],[172,91,169,89],[172,92,169,90],[174,10,171,8],[175,10,172,8],[175,14,172,12,"progress"],[175,22,172,20],[175,23,172,21,"currentLevel"],[175,35,172,33],[175,38,172,36],[175,39,172,37],[175,41,172,39],[176,12,173,10,"progress"],[176,20,173,18],[176,21,173,19,"currentLevel"],[176,33,173,31],[176,37,173,35],[176,38,173,36],[177,12,174,10,"progress"],[177,20,174,18],[177,21,174,19,"killsInLevel"],[177,33,174,31],[177,36,174,34],[177,37,174,35],[178,12,175,10,"console"],[178,19,175,17],[178,20,175,18,"log"],[178,23,175,21],[178,24,175,22],[178,48,175,46,"progress"],[178,56,175,54],[178,57,175,55,"currentLevel"],[178,69,175,67],[178,71,175,69],[178,72,175,70],[180,12,177,10],[181,12,178,10],[181,16,178,16,"nextLevel"],[181,25,178,25],[181,28,178,28,"currentZone"],[181,39,178,39],[181,40,178,40,"levels"],[181,46,178,46],[181,47,178,47,"progress"],[181,55,178,55],[181,56,178,56,"currentLevel"],[181,68,178,68],[181,71,178,71],[181,72,178,72],[181,73,178,73],[182,12,179,10],[182,16,179,14,"nextLevel"],[182,25,179,23],[182,27,179,25],[183,14,180,12,"setCurrentZoneLevel"],[183,33,180,31],[183,34,180,32,"nextLevel"],[183,43,180,41],[183,44,180,42],[184,12,181,10],[185,10,182,8],[185,11,182,9],[185,17,182,15],[186,12,183,10],[187,12,184,10,"progress"],[187,20,184,18],[187,21,184,19,"completed"],[187,30,184,28],[187,33,184,31],[187,37,184,35],[188,12,185,10,"console"],[188,19,185,17],[188,20,185,18,"log"],[188,23,185,21],[188,24,185,22],[188,35,185,33,"currentZone"],[188,46,185,44],[188,47,185,45,"name"],[188,51,185,49],[188,84,185,82],[188,85,185,83],[189,10,186,8],[190,8,187,6],[191,8,189,6,"newProgress"],[191,19,189,17],[191,20,189,18,"zoneId"],[191,26,189,24],[191,27,189,25],[191,30,189,28,"progress"],[191,38,189,36],[193,8,191,6],[194,8,192,6,"setTimeout"],[194,18,192,16],[194,19,192,17],[194,25,192,23],[195,10,193,8,"console"],[195,17,193,15],[195,18,193,16,"log"],[195,21,193,19],[195,22,193,20],[195,67,193,65],[195,69,193,67,"newProgress"],[195,80,193,78],[195,81,193,79],[196,10,194,8,"updateZoneProgress"],[196,28,194,26],[196,29,194,27,"newProgress"],[196,40,194,38],[196,41,194,39],[197,8,195,6],[197,9,195,7],[197,11,195,9],[197,12,195,10],[197,13,195,11],[197,14,195,12],[197,15,195,13],[199,8,197,6],[199,15,197,13,"newProgress"],[199,26,197,24],[200,6,198,4],[200,7,198,5],[200,8,198,6],[201,4,199,2],[201,5,199,3],[203,4,201,2],[204,4,202,2],[204,8,202,8,"isZoneUnlockedLocal"],[204,27,202,27],[204,30,202,31,"zoneId"],[204,36,202,45],[204,40,202,59],[205,6,203,4],[205,10,203,8,"zoneId"],[205,16,203,14],[205,21,203,19],[205,22,203,20],[205,24,203,22],[205,31,203,29],[205,35,203,33],[205,36,203,34],[205,37,203,35],[207,6,205,4],[207,10,205,10,"zone"],[207,14,205,14],[207,17,205,17,"ZONES"],[207,30,205,22],[207,31,205,22,"ZONES"],[207,36,205,22],[207,37,205,23,"find"],[207,41,205,27],[207,42,205,28,"z"],[207,43,205,29],[207,47,205,33,"z"],[207,48,205,34],[207,49,205,35,"id"],[207,51,205,37],[207,56,205,42,"zoneId"],[207,62,205,48],[207,63,205,49],[208,6,206,4],[208,10,206,8],[208,11,206,9,"zone"],[208,15,206,13],[208,17,206,15,"unlockRequirement"],[208,34,206,32],[208,35,206,33,"previousZone"],[208,47,206,45],[208,49,206,47],[208,56,206,54],[208,60,206,58],[209,6,208,4],[209,10,208,10,"prevZoneProgress"],[209,26,208,26],[209,29,208,29,"zoneProgress"],[209,41,208,41],[209,42,208,42,"zone"],[209,46,208,46],[209,47,208,47,"unlockRequirement"],[209,64,208,64],[209,65,208,65,"previousZone"],[209,77,208,77],[209,78,208,78],[210,6,209,4],[210,13,209,11,"prevZoneProgress"],[210,29,209,27],[210,31,209,29,"completed"],[210,40,209,38],[210,44,209,42],[210,49,209,47],[211,4,210,2],[211,5,210,3],[213,4,212,2],[214,4,213,2],[214,8,213,8,"getUnlockedZones"],[214,24,213,24],[214,27,213,27,"getUnlockedZones"],[214,28,213,27],[214,33,213,41],[215,6,214,4],[215,13,214,11,"ZONES"],[215,26,214,16],[215,27,214,16,"ZONES"],[215,32,214,16],[215,33,214,17,"filter"],[215,39,214,23],[215,40,214,24,"zone"],[215,44,214,28],[215,48,214,32,"isZoneUnlockedLocal"],[215,67,214,51],[215,68,214,52,"zone"],[215,72,214,56],[215,73,214,57,"id"],[215,75,214,59],[215,76,214,60],[215,77,214,61],[216,4,215,2],[216,5,215,3],[217,4,217,2],[217,8,217,8,"contextValue"],[217,20,217,37],[217,23,217,40,"React"],[217,28,217,45],[217,29,217,45,"default"],[217,36,217,45],[217,37,217,46,"useMemo"],[217,44,217,53],[217,45,217,54],[217,52,217,61],[218,6,218,4,"currentZone"],[218,17,218,15],[219,6,219,4,"currentZoneLevel"],[219,22,219,20],[220,6,220,4,"zoneProgress"],[220,18,220,16],[221,6,221,4,"availableZones"],[221,20,221,18],[221,22,221,20,"ZONES"],[221,35,221,25],[221,36,221,25,"ZONES"],[221,41,221,25],[222,6,222,4,"selectZone"],[222,16,222,14],[223,6,223,4,"getZoneProgress"],[223,21,223,19],[224,6,224,4,"spawnZoneEnemy"],[224,20,224,18],[225,6,225,4,"recordEnemyKill"],[225,21,225,19],[226,6,226,4,"isZoneUnlocked"],[226,20,226,18],[226,22,226,20,"isZoneUnlockedLocal"],[226,41,226,39],[227,6,227,4,"getUnlockedZones"],[228,4,228,2],[228,5,228,3],[228,6,228,4],[228,8,228,6],[228,9,229,4,"currentZone"],[228,20,229,15],[228,22,230,4,"currentZoneLevel"],[228,38,230,20],[228,40,231,4,"zoneProgress"],[228,52,231,16],[228,54,232,4,"selectZone"],[228,64,232,14],[228,66,233,4,"getZoneProgress"],[228,81,233,19],[228,83,234,4,"spawnZoneEnemy"],[228,97,234,18],[228,99,235,4,"recordEnemyKill"],[228,114,235,19],[228,116,236,4,"isZoneUnlockedLocal"],[228,135,236,23],[228,137,237,4,"getUnlockedZones"],[228,153,237,20],[228,154,238,3],[228,155,238,4],[229,4,240,2],[229,24,241,4],[229,28,241,4,"_reactJsxDevRuntime"],[229,47,241,4],[229,48,241,4,"jsxDEV"],[229,54,241,4],[229,56,241,5,"ZoneContext"],[229,67,241,16],[229,68,241,17,"Provider"],[229,76,241,25],[230,6,241,26,"value"],[230,11,241,31],[230,13,241,33,"contextValue"],[230,25,241,46],[231,6,241,46,"children"],[231,14,241,46],[231,16,242,7,"children"],[232,4,242,15],[233,6,242,15,"fileName"],[233,14,242,15],[233,16,242,15,"_jsxFileName"],[233,28,242,15],[234,6,242,15,"lineNumber"],[234,16,242,15],[235,6,242,15,"columnNumber"],[235,18,242,15],[236,4,242,15],[236,11,243,26],[236,12,243,27],[237,2,245,0],[237,3,245,1],[238,2,245,2,"_s2"],[238,5,245,2],[238,6,55,13,"ZoneProvider"],[238,18,55,25],[239,4,55,25],[239,12,56,44,"useGame"],[239,24,56,51],[239,25,56,51,"useGame"],[239,32,56,51],[240,2,56,51],[241,2,56,51,"_c"],[241,4,56,51],[241,7,55,13,"ZoneProvider"],[241,19,55,25],[242,2,55,25],[242,6,55,25,"_c"],[242,8,55,25],[243,2,55,25,"$RefreshReg$"],[243,14,55,25],[243,15,55,25,"_c"],[243,17,55,25],[244,0,55,25],[244,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;iBC2C;ODG;KDG;GNC;8BSG;4BNG,oBM;GTK;2BUG;wBCC,oCD;GVC;sDYE;IZW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}