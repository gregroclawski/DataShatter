{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(); // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState,\n      updateZoneProgress = _useGame.updateZoneProgress;\n\n    // Zone State - Initialize with GameContext data if available\n    var _useState = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1];\n    var _useState3 = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)(() => {\n        // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n        var savedProgress = gameState?.zoneProgress;\n        if (savedProgress && Object.keys(savedProgress).length > 0) {\n          console.log('🗺️ Loading saved zone progress:', savedProgress);\n          return savedProgress;\n        } else {\n          console.log('🗺️ No saved zone progress, using defaults');\n          return {\n            1: {\n              zoneId: 1,\n              currentLevel: 1,\n              killsInLevel: 0,\n              completed: false\n            }\n          };\n        }\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      zoneProgress = _useState6[0],\n      setZoneProgress = _useState6[1];\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    var selectZone = (zoneId, levelNumber) => {\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n\n        // Get the required kills for current level from zone data\n        var currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        var requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        var willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment\n          progress.killsInLevel += 1;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"LvYGbT30mWRG/UxGcpmwant2jMs=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":285,"map":[[6,26,5,0],[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"value"],[8,9,5,0],[9,2,5,0],[10,2,5,0],[10,11,5,0,"_interopDefault"],[10,27,5,0,"e"],[10,28,5,0],[11,4,5,0],[11,11,5,0,"e"],[11,12,5,0],[11,16,5,0,"e"],[11,17,5,0],[11,18,5,0,"__esModule"],[11,28,5,0],[11,31,5,0,"e"],[11,32,5,0],[12,6,5,0,"default"],[12,13,5,0],[12,15,5,0,"e"],[13,4,5,0],[14,2,5,0],[15,2,56,0,"Object"],[15,8,56,0],[15,9,56,0,"defineProperty"],[15,23,56,0],[15,24,56,0,"exports"],[15,31,56,0],[16,4,56,0,"enumerable"],[16,14,56,0],[17,4,56,0,"get"],[17,7,56,0],[17,18,56,0,"get"],[17,19,56,0],[18,6,56,0],[18,13,56,0,"useZone"],[18,20,56,0],[19,4,56,0],[20,2,56,0],[21,2,64,0,"Object"],[21,8,64,0],[21,9,64,0,"defineProperty"],[21,23,64,0],[21,24,64,0,"exports"],[21,31,64,0],[22,4,64,0,"enumerable"],[22,14,64,0],[23,4,64,0,"get"],[23,7,64,0],[23,18,64,0,"get"],[23,19,64,0],[24,6,64,0],[24,13,64,0,"ZoneProvider"],[24,25,64,0],[25,4,64,0],[26,2,64,0],[27,2,287,2],[27,6,287,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,287,2],[27,42,287,2,"require"],[27,49,287,2],[27,50,287,2,"_dependencyMap"],[27,64,287,2],[28,2,287,2],[28,6,287,2,"_slicedToArray"],[28,20,287,2],[28,23,287,2,"_interopDefault"],[28,38,287,2],[28,39,287,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,287,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,6,0],[34,6,6,6,"calculateKillRequirement"],[34,30,6,30],[34,33,6,33,"calculateKillRequirement"],[34,34,6,34,"zoneId"],[34,40,6,48],[34,42,6,50,"level"],[34,47,6,63],[34,52,6,76],[35,4,7,2],[35,8,7,6,"zoneId"],[35,14,7,12],[35,18,7,16],[35,19,7,17],[35,21,7,19],[35,28,7,26],[35,30,7,28],[35,33,7,32,"level"],[35,38,7,37],[35,41,7,40],[35,42,7,42],[35,43,7,43],[35,44,7,49],[36,4,8,2],[36,8,8,6,"zoneId"],[36,14,8,12],[36,18,8,16],[36,20,8,18],[36,22,8,20],[36,29,8,27],[36,31,8,29],[36,34,8,33,"level"],[36,39,8,38],[36,42,8,41],[36,44,8,44],[36,45,8,45],[36,46,8,50],[37,4,9,2],[37,8,9,6,"zoneId"],[37,14,9,12],[37,18,9,16],[37,20,9,18],[37,22,9,20],[37,29,9,27],[37,31,9,29],[37,34,9,33,"level"],[37,39,9,38],[37,42,9,41],[37,44,9,44],[37,45,9,45],[37,46,9,50],[38,4,10,2],[38,8,10,6,"zoneId"],[38,14,10,12],[38,18,10,16],[38,20,10,18],[38,22,10,20],[38,29,10,27],[38,32,10,30],[38,35,10,34,"level"],[38,40,10,39],[38,43,10,42],[38,45,10,45],[38,46,10,46],[38,47,10,50],[39,4,11,2],[39,11,11,9],[39,14,11,12],[39,17,11,16,"level"],[39,22,11,21],[39,25,11,24],[39,27,11,27],[39,28,11,28],[39,29,11,50],[40,2,12,0],[40,3,12,1],[41,2,54,0],[41,6,54,6,"ZoneContext"],[41,17,54,17],[41,33,54,20],[41,37,54,20,"createContext"],[41,43,54,33],[41,44,54,33,"createContext"],[41,57,54,33],[41,59,54,63,"undefined"],[41,68,54,72],[41,69,54,73],[42,2,56,7],[42,6,56,13,"useZone"],[42,13,56,20],[42,16,56,23,"useZone"],[42,17,56,23],[42,22,56,29],[43,4,56,29,"_s"],[43,6,56,29],[44,4,57,2],[44,8,57,8,"context"],[44,15,57,15],[44,18,57,18],[44,22,57,18,"useContext"],[44,28,57,28],[44,29,57,28,"useContext"],[44,39,57,28],[44,41,57,29,"ZoneContext"],[44,52,57,40],[44,53,57,41],[45,4,58,2],[45,8,58,6],[45,9,58,7,"context"],[45,16,58,14],[45,18,58,16],[46,6,59,4],[46,12,59,10],[46,16,59,14,"Error"],[46,21,59,19],[46,22,59,20],[46,66,59,64],[46,67,59,65],[47,4,60,2],[48,4,61,2],[48,11,61,9,"context"],[48,18,61,16],[49,2,62,0],[49,3,62,1],[50,2,62,2,"_s"],[50,4,62,2],[50,5,56,13,"useZone"],[50,12,56,20],[51,2,64,7],[51,6,64,13,"ZoneProvider"],[51,18,64,25],[51,21,64,28,"_ref"],[51,25,64,28],[51,29,64,71],[52,4,64,71,"_s2"],[52,7,64,71],[53,4,64,71],[53,8,64,31,"children"],[53,16,64,39],[53,19,64,39,"_ref"],[53,23,64,39],[53,24,64,31,"children"],[53,32,64,39],[54,4,65,2],[54,8,65,2,"_useGame"],[54,16,65,2],[54,19,65,44],[54,23,65,44,"useGame"],[54,35,65,51],[54,36,65,51,"useGame"],[54,43,65,51],[54,45,65,52],[54,46,65,53],[55,6,65,10,"gameState"],[55,15,65,19],[55,18,65,19,"_useGame"],[55,26,65,19],[55,27,65,10,"gameState"],[55,36,65,19],[56,6,65,21,"updateZoneProgress"],[56,24,65,39],[56,27,65,39,"_useGame"],[56,35,65,39],[56,36,65,21,"updateZoneProgress"],[56,54,65,39],[58,4,67,2],[59,4,68,2],[59,8,68,2,"_useState"],[59,17,68,2],[59,20,68,40],[59,24,68,40,"useState"],[59,30,68,48],[59,31,68,48,"useState"],[59,39,68,48],[59,41,68,62,"ZONES"],[59,54,68,67],[59,55,68,67,"ZONES"],[59,60,68,67],[59,61,68,68],[59,62,68,69],[59,63,68,70],[59,64,68,71],[60,6,68,71,"_useState2"],[60,16,68,71],[60,23,68,71,"_slicedToArray"],[60,37,68,71],[60,38,68,71,"default"],[60,45,68,71],[60,47,68,71,"_useState"],[60,56,68,71],[61,6,68,9,"currentZone"],[61,17,68,20],[61,20,68,20,"_useState2"],[61,30,68,20],[62,6,68,22,"setCurrentZone"],[62,20,68,36],[62,23,68,36,"_useState2"],[62,33,68,36],[63,4,69,2],[63,8,69,2,"_useState3"],[63,18,69,2],[63,21,69,50],[63,25,69,50,"useState"],[63,31,69,58],[63,32,69,58,"useState"],[63,40,69,58],[63,42,69,77,"ZONES"],[63,55,69,82],[63,56,69,82,"ZONES"],[63,61,69,82],[63,62,69,83],[63,63,69,84],[63,64,69,85],[63,66,69,87,"levels"],[63,72,69,93],[63,73,69,94],[63,74,69,95],[63,75,69,96],[63,79,69,100],[63,83,69,104],[63,84,69,105],[64,6,69,105,"_useState4"],[64,16,69,105],[64,23,69,105,"_slicedToArray"],[64,37,69,105],[64,38,69,105,"default"],[64,45,69,105],[64,47,69,105,"_useState3"],[64,57,69,105],[65,6,69,9,"currentZoneLevel"],[65,22,69,25],[65,25,69,25,"_useState4"],[65,35,69,25],[66,6,69,27,"setCurrentZoneLevel"],[66,25,69,46],[66,28,69,46,"_useState4"],[66,38,69,46],[67,4,70,2],[67,8,70,2,"_useState5"],[67,18,70,2],[67,21,70,42],[67,25,70,42,"useState"],[67,31,70,50],[67,32,70,50,"useState"],[67,40,70,50],[67,42,70,81],[67,48,70,87],[68,8,71,4],[69,8,72,4],[69,12,72,10,"savedProgress"],[69,25,72,23],[69,28,72,26,"gameState"],[69,37,72,35],[69,39,72,37,"zoneProgress"],[69,51,72,49],[70,8,73,4],[70,12,73,8,"savedProgress"],[70,25,73,21],[70,29,73,25,"Object"],[70,35,73,31],[70,36,73,32,"keys"],[70,40,73,36],[70,41,73,37,"savedProgress"],[70,54,73,50],[70,55,73,51],[70,56,73,52,"length"],[70,62,73,58],[70,65,73,61],[70,66,73,62],[70,68,73,64],[71,10,74,6,"console"],[71,17,74,13],[71,18,74,14,"log"],[71,21,74,17],[71,22,74,18],[71,56,74,52],[71,58,74,54,"savedProgress"],[71,71,74,67],[71,72,74,68],[72,10,75,6],[72,17,75,13,"savedProgress"],[72,30,75,26],[73,8,76,4],[73,9,76,5],[73,15,76,11],[74,10,77,6,"console"],[74,17,77,13],[74,18,77,14,"log"],[74,21,77,17],[74,22,77,18],[74,66,77,62],[74,67,77,63],[75,10,78,6],[75,17,78,13],[76,12,78,15],[76,13,78,16],[76,15,78,18],[77,14,78,20,"zoneId"],[77,20,78,26],[77,22,78,28],[77,23,78,29],[78,14,78,31,"currentLevel"],[78,26,78,43],[78,28,78,45],[78,29,78,46],[79,14,78,48,"killsInLevel"],[79,26,78,60],[79,28,78,62],[79,29,78,63],[80,14,78,65,"completed"],[80,23,78,74],[80,25,78,76],[81,12,78,82],[82,10,78,84],[82,11,78,85],[83,8,79,4],[84,6,80,2],[84,7,80,3],[84,8,80,4],[85,6,80,4,"_useState6"],[85,16,80,4],[85,23,80,4,"_slicedToArray"],[85,37,80,4],[85,38,80,4,"default"],[85,45,80,4],[85,47,80,4,"_useState5"],[85,57,80,4],[86,6,70,9,"zoneProgress"],[86,18,70,21],[86,21,70,21,"_useState6"],[86,31,70,21],[87,6,70,23,"setZoneProgress"],[87,21,70,38],[87,24,70,38,"_useState6"],[87,34,70,38],[89,4,82,2],[90,4,83,2],[90,8,83,2,"useEffect"],[90,14,83,11],[90,15,83,11,"useEffect"],[90,24,83,11],[90,26,83,12],[90,32,83,18],[91,6,84,4],[91,10,84,8,"gameState"],[91,19,84,17],[91,21,84,19,"zoneProgress"],[91,33,84,31],[91,37,84,35,"Object"],[91,43,84,41],[91,44,84,42,"keys"],[91,48,84,46],[91,49,84,47,"gameState"],[91,58,84,56],[91,59,84,57,"zoneProgress"],[91,71,84,69],[91,72,84,70],[91,73,84,71,"length"],[91,79,84,77],[91,82,84,80],[91,83,84,81],[91,85,84,83],[92,8,85,6,"console"],[92,15,85,13],[92,16,85,14,"log"],[92,19,85,17],[92,20,85,18],[92,64,85,62],[92,66,85,64,"gameState"],[92,75,85,73],[92,76,85,74,"zoneProgress"],[92,88,85,86],[92,89,85,87],[93,8,86,6,"setZoneProgress"],[93,23,86,21],[93,24,86,22,"gameState"],[93,33,86,31],[93,34,86,32,"zoneProgress"],[93,46,86,44],[93,47,86,45],[94,6,87,4],[95,4,88,2],[95,5,88,3],[95,7,88,5],[95,8,88,6,"gameState"],[95,17,88,15],[95,19,88,17,"zoneProgress"],[95,31,88,29],[95,32,88,30],[95,33,88,31],[97,4,90,2],[98,4,91,2],[98,8,91,2,"useEffect"],[98,14,91,11],[98,15,91,11,"useEffect"],[98,24,91,11],[98,26,91,12],[98,32,91,18],[99,6,92,4],[99,10,92,8,"gameState"],[99,19,92,17],[99,21,92,19,"ninja"],[99,26,92,24],[99,28,92,26],[100,8,93,6],[100,12,93,12,"recommendedZone"],[100,27,93,27],[100,30,93,30],[100,34,93,30,"getZoneByLevel"],[100,47,93,44],[100,48,93,44,"getZoneByLevel"],[100,62,93,44],[100,64,93,45,"gameState"],[100,73,93,54],[100,74,93,55,"ninja"],[100,79,93,60],[100,80,93,61,"level"],[100,85,93,66],[100,86,93,67],[101,8,94,6],[101,12,94,10,"recommendedZone"],[101,27,94,25],[101,31,94,29],[101,32,94,30,"currentZone"],[101,43,94,41],[101,45,94,43],[102,10,95,8,"setCurrentZone"],[102,24,95,22],[102,25,95,23,"recommendedZone"],[102,40,95,38],[102,41,95,39],[103,10,96,8,"setCurrentZoneLevel"],[103,29,96,27],[103,30,96,28,"recommendedZone"],[103,45,96,43],[103,46,96,44,"levels"],[103,52,96,50],[103,53,96,51],[103,54,96,52],[103,55,96,53],[103,56,96,54],[104,8,97,6],[105,6,98,4],[106,4,99,2],[106,5,99,3],[106,7,99,5],[106,8,99,6,"gameState"],[106,17,99,15],[106,19,99,17,"ninja"],[106,24,99,22],[106,26,99,24,"level"],[106,31,99,29],[106,32,99,30],[106,33,99,31],[108,4,101,2],[109,4,102,2],[109,8,102,8,"selectZone"],[109,18,102,18],[109,21,102,21,"selectZone"],[109,22,102,22,"zoneId"],[109,28,102,36],[109,30,102,38,"levelNumber"],[109,41,102,57],[109,46,102,71],[110,6,103,4],[110,10,103,10,"zone"],[110,14,103,14],[110,17,103,17,"ZONES"],[110,30,103,22],[110,31,103,22,"ZONES"],[110,36,103,22],[110,37,103,23,"find"],[110,41,103,27],[110,42,103,28,"z"],[110,43,103,29],[110,47,103,33,"z"],[110,48,103,34],[110,49,103,35,"id"],[110,51,103,37],[110,56,103,42,"zoneId"],[110,62,103,48],[110,63,103,49],[111,6,104,4],[111,10,104,8],[111,11,104,9,"zone"],[111,15,104,13],[111,19,104,17],[111,20,104,18],[111,24,104,18,"isZoneUnlocked"],[111,37,104,32],[111,38,104,32,"isZoneUnlocked"],[111,52,104,32],[111,54,104,33,"zoneId"],[111,60,104,39],[111,62,104,41,"zoneProgress"],[111,74,104,53],[111,75,104,54],[111,77,104,56],[112,8,105,6,"console"],[112,15,105,13],[112,16,105,14,"log"],[112,19,105,17],[112,20,105,18],[112,30,105,28,"zoneId"],[112,36,105,34],[112,58,105,56],[112,59,105,57],[113,8,106,6],[113,15,106,13],[113,20,106,18],[114,6,107,4],[115,6,109,4],[115,10,109,10,"level"],[115,15,109,15],[115,18,109,18,"zone"],[115,22,109,22],[115,23,109,23,"levels"],[115,29,109,29],[115,30,109,30,"levelNumber"],[115,41,109,41],[115,44,109,44],[115,45,109,45],[115,46,109,46],[116,6,110,4],[116,10,110,8],[116,11,110,9,"level"],[116,16,110,14],[116,18,110,16],[117,8,111,6,"console"],[117,15,111,13],[117,16,111,14,"log"],[117,19,111,17],[117,20,111,18],[117,31,111,29,"levelNumber"],[117,42,111,40],[117,64,111,62,"zoneId"],[117,70,111,68],[117,72,111,70],[117,73,111,71],[118,8,112,6],[118,15,112,13],[118,20,112,18],[119,6,113,4],[120,6,115,4,"setCurrentZone"],[120,20,115,18],[120,21,115,19,"zone"],[120,25,115,23],[120,26,115,24],[121,6,116,4,"setCurrentZoneLevel"],[121,25,116,23],[121,26,116,24,"level"],[121,31,116,29],[121,32,116,30],[122,6,117,4,"console"],[122,13,117,11],[122,14,117,12,"log"],[122,17,117,15],[122,18,117,16],[122,34,117,32,"zone"],[122,38,117,36],[122,39,117,37,"name"],[122,43,117,41],[122,55,117,53,"levelNumber"],[122,66,117,64],[122,68,117,66],[122,69,117,67],[123,6,118,4],[123,13,118,11],[123,17,118,15],[124,4,119,2],[124,5,119,3],[126,4,121,2],[127,4,122,2],[127,8,122,8,"getZoneProgress"],[127,23,122,23],[127,26,122,27,"zoneId"],[127,32,122,41],[127,36,122,67],[128,6,123,4],[128,13,123,11,"zoneProgress"],[128,25,123,23],[128,26,123,24,"zoneId"],[128,32,123,30],[128,33,123,31],[128,37,123,35],[128,41,123,39],[129,4,124,2],[129,5,124,3],[131,4,126,2],[132,4,127,2],[132,8,127,8,"spawnZoneEnemy"],[132,22,127,22],[132,25,127,25,"spawnZoneEnemy"],[132,26,127,25],[132,31,127,52],[133,6,128,4],[133,10,128,8],[133,11,128,9,"currentZone"],[133,22,128,20],[133,26,128,24],[133,27,128,25,"currentZoneLevel"],[133,43,128,41],[133,45,128,43],[134,8,129,6,"console"],[134,15,129,13],[134,16,129,14,"log"],[134,19,129,17],[134,20,129,18],[134,65,129,63],[134,66,129,64],[135,8,130,6],[135,15,130,13],[135,19,130,17],[136,6,131,4],[138,6,133,4],[139,6,134,4],[139,10,134,10,"enemyTypeIds"],[139,22,134,22],[139,25,134,25,"currentZoneLevel"],[139,41,134,41],[139,42,134,42,"enemyTypes"],[139,52,134,52],[140,6,135,4],[140,10,135,10,"randomEnemyTypeId"],[140,27,135,27],[140,30,135,30,"enemyTypeIds"],[140,42,135,42],[140,43,135,43,"Math"],[140,47,135,47],[140,48,135,48,"floor"],[140,53,135,53],[140,54,135,54,"Math"],[140,58,135,58],[140,59,135,59,"random"],[140,65,135,65],[140,66,135,66],[140,67,135,67],[140,70,135,70,"enemyTypeIds"],[140,82,135,82],[140,83,135,83,"length"],[140,89,135,89],[140,90,135,90],[140,91,135,91],[141,6,136,4],[141,10,136,10,"enemyType"],[141,19,136,19],[141,22,136,22,"ENEMY_TYPES"],[141,35,136,33],[141,36,136,33,"ENEMY_TYPES"],[141,47,136,33],[141,48,136,34,"randomEnemyTypeId"],[141,65,136,51],[141,66,136,52],[142,6,138,4],[142,10,138,8],[142,11,138,9,"enemyType"],[142,20,138,18],[142,22,138,20],[143,8,139,6,"console"],[143,15,139,13],[143,16,139,14,"log"],[143,19,139,17],[143,20,139,18],[143,36,139,34,"randomEnemyTypeId"],[143,53,139,51],[143,65,139,63],[143,66,139,64],[144,8,140,6],[144,15,140,13],[144,19,140,17],[145,6,141,4],[147,6,143,4],[148,6,144,4],[148,10,144,10,"scaledStats"],[148,21,144,21],[148,24,144,24],[148,28,144,24,"calculateEnemyStats"],[148,41,144,43],[148,42,144,43,"calculateEnemyStats"],[148,61,144,43],[148,63,144,44,"enemyType"],[148,72,144,53],[148,74,144,55,"currentZoneLevel"],[148,90,144,71],[148,92,144,73,"currentZone"],[148,103,144,84],[148,104,144,85,"id"],[148,106,144,87],[148,107,144,88],[150,6,146,4],[151,6,147,4],[151,10,147,10,"enemy"],[151,15,147,29],[151,18,147,32],[152,8,148,6,"id"],[152,10,148,8],[152,12,148,10],[152,15,148,13,"randomEnemyTypeId"],[152,32,148,30],[152,36,148,34,"Date"],[152,40,148,38],[152,41,148,39,"now"],[152,44,148,42],[152,45,148,43],[152,46,148,44],[152,50,148,48,"Math"],[152,54,148,52],[152,55,148,53,"random"],[152,61,148,59],[152,62,148,60],[152,63,148,61],[152,65,148,63],[153,8,149,6,"typeId"],[153,14,149,12],[153,16,149,14,"randomEnemyTypeId"],[153,33,149,31],[154,8,150,6,"name"],[154,12,150,10],[154,14,150,12,"enemyType"],[154,23,150,21],[154,24,150,22,"name"],[154,28,150,26],[155,8,151,6,"icon"],[155,12,151,10],[155,14,151,12,"enemyType"],[155,23,151,21],[155,24,151,22,"icon"],[155,28,151,26],[156,8,152,6,"hp"],[156,10,152,8],[156,12,152,10,"scaledStats"],[156,23,152,21],[156,24,152,22,"hp"],[156,26,152,24],[157,8,153,6,"maxHP"],[157,13,153,11],[157,15,153,13,"scaledStats"],[157,26,153,24],[157,27,153,25,"hp"],[157,29,153,27],[158,8,154,6,"attack"],[158,14,154,12],[158,16,154,14,"scaledStats"],[158,27,154,25],[158,28,154,26,"attack"],[158,34,154,32],[159,8,155,6,"xp"],[159,10,155,8],[159,12,155,10,"scaledStats"],[159,23,155,21],[159,24,155,22,"xp"],[159,26,155,24],[160,8,156,6,"resistances"],[160,19,156,17],[160,21,156,19,"scaledStats"],[160,32,156,30],[160,33,156,31,"resistances"],[160,44,156,42],[161,8,157,6,"position"],[161,16,157,14],[161,18,157,16],[162,10,158,8,"x"],[162,11,158,9],[162,13,158,11,"Math"],[162,17,158,15],[162,18,158,16,"random"],[162,24,158,22],[162,25,158,23],[162,26,158,24],[162,29,158,27],[162,32,158,30],[162,35,158,33],[162,37,158,35],[163,10,158,37],[164,10,159,8,"y"],[164,11,159,9],[164,13,159,11,"Math"],[164,17,159,15],[164,18,159,16,"random"],[164,24,159,22],[164,25,159,23],[164,26,159,24],[164,29,159,27],[164,32,159,30],[164,35,159,33],[165,8,160,6],[165,9,160,7],[166,8,161,6,"lastDamaged"],[166,19,161,17],[166,21,161,19],[167,6,162,4],[167,7,162,5],[168,6,164,4,"console"],[168,13,164,11],[168,14,164,12,"log"],[168,17,164,15],[168,18,164,16],[168,32,164,30,"enemy"],[168,37,164,35],[168,38,164,36,"name"],[168,42,164,40],[168,47,164,45,"enemy"],[168,52,164,50],[168,53,164,51,"hp"],[168,55,164,53],[168,63,164,61,"enemy"],[168,68,164,66],[168,69,164,67,"xp"],[168,71,164,69],[168,82,164,80,"currentZone"],[168,93,164,91],[168,94,164,92,"name"],[168,98,164,96],[168,100,164,98],[168,101,164,99],[169,6,165,4],[169,13,165,11,"enemy"],[169,18,165,16],[170,4,166,2],[170,5,166,3],[172,4,168,2],[173,4,169,2],[173,8,169,8,"recordEnemyKill"],[173,23,169,23],[173,26,169,27,"enemy"],[173,31,169,46],[173,35,169,51],[174,6,170,4],[174,10,170,8],[174,11,170,9,"currentZone"],[174,22,170,20],[174,26,170,24],[174,27,170,25,"currentZoneLevel"],[174,43,170,41],[174,45,170,43],[175,6,172,4,"console"],[175,13,172,11],[175,14,172,12,"log"],[175,17,172,15],[175,18,172,16],[175,24,172,22,"enemy"],[175,29,172,27],[175,30,172,28,"name"],[175,34,172,32],[175,47,172,45,"enemy"],[175,52,172,50],[175,53,172,51,"xp"],[175,55,172,53],[175,60,172,58],[175,61,172,59],[176,6,174,4,"setZoneProgress"],[176,21,174,19],[176,22,174,20,"prev"],[176,26,174,24],[176,30,174,28],[177,8,175,6],[177,12,175,12,"newProgress"],[177,23,175,23],[177,26,175,26],[178,10,175,28],[178,13,175,31,"prev"],[179,8,175,36],[179,9,175,37],[180,8,176,6],[180,12,176,12,"zoneId"],[180,18,176,18],[180,21,176,21,"currentZone"],[180,32,176,32],[180,33,176,33,"id"],[180,35,176,35],[181,8,178,6],[181,12,178,10],[181,13,178,11,"newProgress"],[181,24,178,22],[181,25,178,23,"zoneId"],[181,31,178,29],[181,32,178,30],[181,34,178,32],[182,10,179,8,"newProgress"],[182,21,179,19],[182,22,179,20,"zoneId"],[182,28,179,26],[182,29,179,27],[182,32,179,30],[183,12,180,10,"zoneId"],[183,18,180,16],[184,12,181,10,"currentLevel"],[184,24,181,22],[184,26,181,24],[184,27,181,25],[185,12,182,10,"killsInLevel"],[185,24,182,22],[185,26,182,24],[185,27,182,25],[186,12,183,10,"completed"],[186,21,183,19],[186,23,183,21],[187,10,184,8],[187,11,184,9],[188,8,185,6],[189,8,187,6],[189,12,187,12,"progress"],[189,20,187,20],[189,23,187,23],[190,10,187,25],[190,13,187,28,"newProgress"],[190,24,187,39],[190,25,187,40,"zoneId"],[190,31,187,46],[191,8,187,48],[191,9,187,49],[193,8,189,6],[194,8,190,6],[194,12,190,12,"currentZoneLevel"],[194,28,190,28],[194,31,190,31,"currentZone"],[194,42,190,42],[194,43,190,43,"levels"],[194,49,190,49],[194,50,190,50,"progress"],[194,58,190,58],[194,59,190,59,"currentLevel"],[194,71,190,71],[194,74,190,74],[194,75,190,75],[194,76,190,76],[195,8,191,6],[195,12,191,12,"requiredKills"],[195,25,191,25],[195,28,191,28,"currentZoneLevel"],[195,44,191,44],[195,47,191,47,"currentZoneLevel"],[195,63,191,63],[195,64,191,64,"requiredKills"],[195,77,191,77],[195,80,191,80,"calculateKillRequirement"],[195,104,191,104],[195,105,191,105,"zoneId"],[195,111,191,111],[195,113,191,113,"progress"],[195,121,191,121],[195,122,191,122,"currentLevel"],[195,134,191,134],[195,135,191,135],[197,8,193,6],[198,8,194,6],[198,12,194,12,"willCompleteLevel"],[198,29,194,29],[198,32,194,33,"progress"],[198,40,194,41],[198,41,194,42,"killsInLevel"],[198,53,194,54],[198,56,194,57],[198,57,194,58],[198,61,194,63,"requiredKills"],[198,74,194,76],[199,8,196,6],[199,12,196,10,"willCompleteLevel"],[199,29,196,27],[199,31,196,29],[200,10,197,8,"console"],[200,17,197,15],[200,18,197,16,"log"],[200,21,197,19],[200,22,197,20],[200,34,197,32,"progress"],[200,42,197,40],[200,43,197,41,"currentLevel"],[200,55,197,53],[200,72,197,70,"currentZone"],[200,83,197,81],[200,84,197,82,"name"],[200,88,197,86],[200,91,197,89],[200,92,197,90],[202,10,199,8],[203,10,200,8,"progress"],[203,18,200,16],[203,19,200,17,"killsInLevel"],[203,31,200,29],[203,34,200,32,"requiredKills"],[203,47,200,45],[204,10,202,8,"console"],[204,17,202,15],[204,18,202,16,"log"],[204,21,202,19],[204,22,202,20],[204,33,202,31,"zoneId"],[204,39,202,37],[204,49,202,47,"progress"],[204,57,202,55],[204,58,202,56,"currentLevel"],[204,70,202,68],[204,75,202,73,"progress"],[204,83,202,81],[204,84,202,82,"killsInLevel"],[204,96,202,94],[204,100,202,98,"requiredKills"],[204,113,202,111],[204,133,202,131],[204,134,202,132],[205,8,203,6],[205,9,203,7],[205,15,203,13],[206,10,204,8],[207,10,205,8,"progress"],[207,18,205,16],[207,19,205,17,"killsInLevel"],[207,31,205,29],[207,35,205,33],[207,36,205,34],[208,10,206,8,"console"],[208,17,206,15],[208,18,206,16,"log"],[208,21,206,19],[208,22,206,20],[208,33,206,31,"zoneId"],[208,39,206,37],[208,49,206,47,"progress"],[208,57,206,55],[208,58,206,56,"currentLevel"],[208,70,206,68],[208,75,206,73,"progress"],[208,83,206,81],[208,84,206,82,"killsInLevel"],[208,96,206,94],[208,100,206,98,"requiredKills"],[208,113,206,111],[208,121,206,119],[208,122,206,120],[209,8,207,6],[211,8,209,6],[212,8,210,6],[212,12,210,10,"willCompleteLevel"],[212,29,210,27],[212,31,210,29],[213,10,211,8,"console"],[213,17,211,15],[213,18,211,16,"log"],[213,21,211,19],[213,22,211,20],[213,34,211,32,"progress"],[213,42,211,40],[213,43,211,41,"currentLevel"],[213,55,211,53],[213,72,211,70,"currentZone"],[213,83,211,81],[213,84,211,82,"name"],[213,88,211,86],[213,91,211,89],[213,92,211,90],[215,10,213,8],[216,10,214,8],[216,14,214,12,"progress"],[216,22,214,20],[216,23,214,21,"currentLevel"],[216,35,214,33],[216,38,214,36],[216,39,214,37],[216,41,214,39],[217,12,215,10,"progress"],[217,20,215,18],[217,21,215,19,"currentLevel"],[217,33,215,31],[217,37,215,35],[217,38,215,36],[218,12,216,10,"progress"],[218,20,216,18],[218,21,216,19,"killsInLevel"],[218,33,216,31],[218,36,216,34],[218,37,216,35],[219,12,217,10,"console"],[219,19,217,17],[219,20,217,18,"log"],[219,23,217,21],[219,24,217,22],[219,48,217,46,"progress"],[219,56,217,54],[219,57,217,55,"currentLevel"],[219,69,217,67],[219,71,217,69],[219,72,217,70],[221,12,219,10],[222,12,220,10],[222,16,220,16,"nextLevel"],[222,25,220,25],[222,28,220,28,"currentZone"],[222,39,220,39],[222,40,220,40,"levels"],[222,46,220,46],[222,47,220,47,"progress"],[222,55,220,55],[222,56,220,56,"currentLevel"],[222,68,220,68],[222,71,220,71],[222,72,220,72],[222,73,220,73],[223,12,221,10],[223,16,221,14,"nextLevel"],[223,25,221,23],[223,27,221,25],[224,14,222,12,"setCurrentZoneLevel"],[224,33,222,31],[224,34,222,32,"nextLevel"],[224,43,222,41],[224,44,222,42],[225,12,223,10],[226,10,224,8],[226,11,224,9],[226,17,224,15],[227,12,225,10],[228,12,226,10,"progress"],[228,20,226,18],[228,21,226,19,"completed"],[228,30,226,28],[228,33,226,31],[228,37,226,35],[229,12,227,10,"console"],[229,19,227,17],[229,20,227,18,"log"],[229,23,227,21],[229,24,227,22],[229,35,227,33,"currentZone"],[229,46,227,44],[229,47,227,45,"name"],[229,51,227,49],[229,84,227,82],[229,85,227,83],[230,10,228,8],[231,8,229,6],[232,8,231,6,"newProgress"],[232,19,231,17],[232,20,231,18,"zoneId"],[232,26,231,24],[232,27,231,25],[232,30,231,28,"progress"],[232,38,231,36],[234,8,233,6],[235,8,234,6,"setTimeout"],[235,18,234,16],[235,19,234,17],[235,25,234,23],[236,10,235,8,"console"],[236,17,235,15],[236,18,235,16,"log"],[236,21,235,19],[236,22,235,20],[236,67,235,65],[236,69,235,67,"newProgress"],[236,80,235,78],[236,81,235,79],[237,10,236,8,"updateZoneProgress"],[237,28,236,26],[237,29,236,27,"newProgress"],[237,40,236,38],[237,41,236,39],[238,8,237,6],[238,9,237,7],[238,11,237,9],[238,12,237,10],[238,13,237,11],[238,14,237,12],[238,15,237,13],[240,8,239,6],[240,15,239,13,"newProgress"],[240,26,239,24],[241,6,240,4],[241,7,240,5],[241,8,240,6],[242,4,241,2],[242,5,241,3],[244,4,243,2],[245,4,244,2],[245,8,244,8,"isZoneUnlockedLocal"],[245,27,244,27],[245,30,244,31,"zoneId"],[245,36,244,45],[245,40,244,59],[246,6,245,4],[246,10,245,8,"zoneId"],[246,16,245,14],[246,21,245,19],[246,22,245,20],[246,24,245,22],[246,31,245,29],[246,35,245,33],[246,36,245,34],[246,37,245,35],[248,6,247,4],[248,10,247,10,"zone"],[248,14,247,14],[248,17,247,17,"ZONES"],[248,30,247,22],[248,31,247,22,"ZONES"],[248,36,247,22],[248,37,247,23,"find"],[248,41,247,27],[248,42,247,28,"z"],[248,43,247,29],[248,47,247,33,"z"],[248,48,247,34],[248,49,247,35,"id"],[248,51,247,37],[248,56,247,42,"zoneId"],[248,62,247,48],[248,63,247,49],[249,6,248,4],[249,10,248,8],[249,11,248,9,"zone"],[249,15,248,13],[249,17,248,15,"unlockRequirement"],[249,34,248,32],[249,35,248,33,"previousZone"],[249,47,248,45],[249,49,248,47],[249,56,248,54],[249,60,248,58],[250,6,250,4],[250,10,250,10,"prevZoneProgress"],[250,26,250,26],[250,29,250,29,"zoneProgress"],[250,41,250,41],[250,42,250,42,"zone"],[250,46,250,46],[250,47,250,47,"unlockRequirement"],[250,64,250,64],[250,65,250,65,"previousZone"],[250,77,250,77],[250,78,250,78],[251,6,251,4],[251,13,251,11,"prevZoneProgress"],[251,29,251,27],[251,31,251,29,"completed"],[251,40,251,38],[251,44,251,42],[251,49,251,47],[252,4,252,2],[252,5,252,3],[254,4,254,2],[255,4,255,2],[255,8,255,8,"getUnlockedZones"],[255,24,255,24],[255,27,255,27,"getUnlockedZones"],[255,28,255,27],[255,33,255,41],[256,6,256,4],[256,13,256,11,"ZONES"],[256,26,256,16],[256,27,256,16,"ZONES"],[256,32,256,16],[256,33,256,17,"filter"],[256,39,256,23],[256,40,256,24,"zone"],[256,44,256,28],[256,48,256,32,"isZoneUnlockedLocal"],[256,67,256,51],[256,68,256,52,"zone"],[256,72,256,56],[256,73,256,57,"id"],[256,75,256,59],[256,76,256,60],[256,77,256,61],[257,4,257,2],[257,5,257,3],[258,4,259,2],[258,8,259,8,"contextValue"],[258,20,259,37],[258,23,259,40,"React"],[258,28,259,45],[258,29,259,45,"default"],[258,36,259,45],[258,37,259,46,"useMemo"],[258,44,259,53],[258,45,259,54],[258,52,259,61],[259,6,260,4,"currentZone"],[259,17,260,15],[260,6,261,4,"currentZoneLevel"],[260,22,261,20],[261,6,262,4,"zoneProgress"],[261,18,262,16],[262,6,263,4,"availableZones"],[262,20,263,18],[262,22,263,20,"ZONES"],[262,35,263,25],[262,36,263,25,"ZONES"],[262,41,263,25],[263,6,264,4,"selectZone"],[263,16,264,14],[264,6,265,4,"getZoneProgress"],[264,21,265,19],[265,6,266,4,"spawnZoneEnemy"],[265,20,266,18],[266,6,267,4,"recordEnemyKill"],[266,21,267,19],[267,6,268,4,"isZoneUnlocked"],[267,20,268,18],[267,22,268,20,"isZoneUnlockedLocal"],[267,41,268,39],[268,6,269,4,"getUnlockedZones"],[269,4,270,2],[269,5,270,3],[269,6,270,4],[269,8,270,6],[269,9,271,4,"currentZone"],[269,20,271,15],[269,22,272,4,"currentZoneLevel"],[269,38,272,20],[269,40,273,4,"zoneProgress"],[269,52,273,16],[269,54,274,4,"selectZone"],[269,64,274,14],[269,66,275,4,"getZoneProgress"],[269,81,275,19],[269,83,276,4,"spawnZoneEnemy"],[269,97,276,18],[269,99,277,4,"recordEnemyKill"],[269,114,277,19],[269,116,278,4,"isZoneUnlockedLocal"],[269,135,278,23],[269,137,279,4,"getUnlockedZones"],[269,153,279,20],[269,154,280,3],[269,155,280,4],[270,4,282,2],[270,24,283,4],[270,28,283,4,"_reactJsxDevRuntime"],[270,47,283,4],[270,48,283,4,"jsxDEV"],[270,54,283,4],[270,56,283,5,"ZoneContext"],[270,67,283,16],[270,68,283,17,"Provider"],[270,76,283,25],[271,6,283,26,"value"],[271,11,283,31],[271,13,283,33,"contextValue"],[271,25,283,46],[272,6,283,46,"children"],[272,14,283,46],[272,16,284,7,"children"],[273,4,284,15],[274,6,284,15,"fileName"],[274,14,284,15],[274,16,284,15,"_jsxFileName"],[274,28,284,15],[275,6,284,15,"lineNumber"],[275,16,284,15],[276,6,284,15,"columnNumber"],[276,18,284,15],[277,4,284,15],[277,11,285,26],[277,12,285,27],[278,2,287,0],[278,3,287,1],[279,2,287,2,"_s2"],[279,5,287,2],[279,6,64,13,"ZoneProvider"],[279,18,64,25],[280,4,64,25],[280,12,65,44,"useGame"],[280,24,65,51],[280,25,65,51,"useGame"],[280,32,65,51],[281,2,65,51],[282,2,65,51,"_c"],[282,4,65,51],[282,7,64,13,"ZoneProvider"],[282,19,64,25],[283,2,64,25],[283,6,64,25,"_c"],[283,8,64,25],[284,2,64,25,"$RefreshReg$"],[284,14,64,25],[284,15,64,25,"_c"],[284,17,64,25],[285,0,64,25],[285,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE4C;CFM;4BGE;iFCM;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCC,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC4D;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbW;CHiB"},"hasCjsExports":false},"type":"js/module"}]}