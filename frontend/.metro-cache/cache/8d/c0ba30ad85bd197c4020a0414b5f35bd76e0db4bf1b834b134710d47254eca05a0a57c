{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState;\n\n    // Zone State\n    var _useState = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1];\n    var _useState3 = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        1: {\n          zoneId: 1,\n          currentLevel: 1,\n          killsInLevel: 0,\n          completed: false\n        }\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      zoneProgress = _useState6[0],\n      setZoneProgress = _useState6[1];\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    var selectZone = (zoneId, levelNumber) => {\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"07c3SMalvmDBFgtZk9BuhKgX2ZQ=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":236,"map":[[15,2,47,0,"Object"],[15,8,47,0],[15,9,47,0,"defineProperty"],[15,23,47,0],[15,24,47,0,"exports"],[15,31,47,0],[16,4,47,0,"enumerable"],[16,14,47,0],[17,4,47,0,"get"],[17,7,47,0],[17,18,47,0,"get"],[17,19,47,0],[18,6,47,0],[18,13,47,0,"useZone"],[18,20,47,0],[19,4,47,0],[20,2,47,0],[21,2,55,0,"Object"],[21,8,55,0],[21,9,55,0,"defineProperty"],[21,23,55,0],[21,24,55,0,"exports"],[21,31,55,0],[22,4,55,0,"enumerable"],[22,14,55,0],[23,4,55,0,"get"],[23,7,55,0],[23,18,55,0,"get"],[23,19,55,0],[24,6,55,0],[24,13,55,0,"ZoneProvider"],[24,25,55,0],[25,4,55,0],[26,2,55,0],[27,2,238,2],[27,6,238,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,238,2],[27,42,238,2,"require"],[27,49,238,2],[27,50,238,2,"_dependencyMap"],[27,64,238,2],[28,2,238,2],[28,6,238,2,"_slicedToArray"],[28,20,238,2],[28,23,238,2,"_interopDefault"],[28,38,238,2],[28,39,238,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,238,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,45,0],[34,6,45,6,"ZoneContext"],[34,17,45,17],[34,33,45,20],[34,37,45,20,"createContext"],[34,43,45,33],[34,44,45,33,"createContext"],[34,57,45,33],[34,59,45,63,"undefined"],[34,68,45,72],[34,69,45,73],[35,2,47,7],[35,6,47,13,"useZone"],[35,13,47,20],[35,16,47,23,"useZone"],[35,17,47,23],[35,22,47,29],[36,4,47,29,"_s"],[36,6,47,29],[37,4,48,2],[37,8,48,8,"context"],[37,15,48,15],[37,18,48,18],[37,22,48,18,"useContext"],[37,28,48,28],[37,29,48,28,"useContext"],[37,39,48,28],[37,41,48,29,"ZoneContext"],[37,52,48,40],[37,53,48,41],[38,4,49,2],[38,8,49,6],[38,9,49,7,"context"],[38,16,49,14],[38,18,49,16],[39,6,50,4],[39,12,50,10],[39,16,50,14,"Error"],[39,21,50,19],[39,22,50,20],[39,66,50,64],[39,67,50,65],[40,4,51,2],[41,4,52,2],[41,11,52,9,"context"],[41,18,52,16],[42,2,53,0],[42,3,53,1],[43,2,53,2,"_s"],[43,4,53,2],[43,5,47,13,"useZone"],[43,12,47,20],[44,2,55,7],[44,6,55,13,"ZoneProvider"],[44,18,55,25],[44,21,55,28,"_ref"],[44,25,55,28],[44,29,55,71],[45,4,55,71,"_s2"],[45,7,55,71],[46,4,55,71],[46,8,55,31,"children"],[46,16,55,39],[46,19,55,39,"_ref"],[46,23,55,39],[46,24,55,31,"children"],[46,32,55,39],[47,4,56,2],[47,8,56,2,"_useGame"],[47,16,56,2],[47,19,56,24],[47,23,56,24,"useGame"],[47,35,56,31],[47,36,56,31,"useGame"],[47,43,56,31],[47,45,56,32],[47,46,56,33],[48,6,56,10,"gameState"],[48,15,56,19],[48,18,56,19,"_useGame"],[48,26,56,19],[48,27,56,10,"gameState"],[48,36,56,19],[50,4,58,2],[51,4,59,2],[51,8,59,2,"_useState"],[51,17,59,2],[51,20,59,40],[51,24,59,40,"useState"],[51,30,59,48],[51,31,59,48,"useState"],[51,39,59,48],[51,41,59,62,"ZONES"],[51,54,59,67],[51,55,59,67,"ZONES"],[51,60,59,67],[51,61,59,68],[51,62,59,69],[51,63,59,70],[51,64,59,71],[52,6,59,71,"_useState2"],[52,16,59,71],[52,23,59,71,"_slicedToArray"],[52,37,59,71],[52,38,59,71,"default"],[52,45,59,71],[52,47,59,71,"_useState"],[52,56,59,71],[53,6,59,9,"currentZone"],[53,17,59,20],[53,20,59,20,"_useState2"],[53,30,59,20],[54,6,59,22,"setCurrentZone"],[54,20,59,36],[54,23,59,36,"_useState2"],[54,33,59,36],[55,4,60,2],[55,8,60,2,"_useState3"],[55,18,60,2],[55,21,60,50],[55,25,60,50,"useState"],[55,31,60,58],[55,32,60,58,"useState"],[55,40,60,58],[55,42,60,77,"ZONES"],[55,55,60,82],[55,56,60,82,"ZONES"],[55,61,60,82],[55,62,60,83],[55,63,60,84],[55,64,60,85],[55,66,60,87,"levels"],[55,72,60,93],[55,73,60,94],[55,74,60,95],[55,75,60,96],[55,79,60,100],[55,83,60,104],[55,84,60,105],[56,6,60,105,"_useState4"],[56,16,60,105],[56,23,60,105,"_slicedToArray"],[56,37,60,105],[56,38,60,105,"default"],[56,45,60,105],[56,47,60,105,"_useState3"],[56,57,60,105],[57,6,60,9,"currentZoneLevel"],[57,22,60,25],[57,25,60,25,"_useState4"],[57,35,60,25],[58,6,60,27,"setCurrentZoneLevel"],[58,25,60,46],[58,28,60,46,"_useState4"],[58,38,60,46],[59,4,61,2],[59,8,61,2,"_useState5"],[59,18,61,2],[59,21,61,42],[59,25,61,42,"useState"],[59,31,61,50],[59,32,61,50,"useState"],[59,40,61,50],[59,42,61,81],[60,8,62,4],[60,9,62,5],[60,11,62,7],[61,10,62,9,"zoneId"],[61,16,62,15],[61,18,62,17],[61,19,62,18],[62,10,62,20,"currentLevel"],[62,22,62,32],[62,24,62,34],[62,25,62,35],[63,10,62,37,"killsInLevel"],[63,22,62,49],[63,24,62,51],[63,25,62,52],[64,10,62,54,"completed"],[64,19,62,63],[64,21,62,65],[65,8,62,71],[66,6,63,2],[66,7,63,3],[66,8,63,4],[67,6,63,4,"_useState6"],[67,16,63,4],[67,23,63,4,"_slicedToArray"],[67,37,63,4],[67,38,63,4,"default"],[67,45,63,4],[67,47,63,4,"_useState5"],[67,57,63,4],[68,6,61,9,"zoneProgress"],[68,18,61,21],[68,21,61,21,"_useState6"],[68,31,61,21],[69,6,61,23,"setZoneProgress"],[69,21,61,38],[69,24,61,38,"_useState6"],[69,34,61,38],[71,4,65,2],[72,4,66,2],[72,8,66,2,"useEffect"],[72,14,66,11],[72,15,66,11,"useEffect"],[72,24,66,11],[72,26,66,12],[72,32,66,18],[73,6,67,4],[73,10,67,8,"gameState"],[73,19,67,17],[73,21,67,19,"ninja"],[73,26,67,24],[73,28,67,26],[74,8,68,6],[74,12,68,12,"recommendedZone"],[74,27,68,27],[74,30,68,30],[74,34,68,30,"getZoneByLevel"],[74,47,68,44],[74,48,68,44,"getZoneByLevel"],[74,62,68,44],[74,64,68,45,"gameState"],[74,73,68,54],[74,74,68,55,"ninja"],[74,79,68,60],[74,80,68,61,"level"],[74,85,68,66],[74,86,68,67],[75,8,69,6],[75,12,69,10,"recommendedZone"],[75,27,69,25],[75,31,69,29],[75,32,69,30,"currentZone"],[75,43,69,41],[75,45,69,43],[76,10,70,8,"setCurrentZone"],[76,24,70,22],[76,25,70,23,"recommendedZone"],[76,40,70,38],[76,41,70,39],[77,10,71,8,"setCurrentZoneLevel"],[77,29,71,27],[77,30,71,28,"recommendedZone"],[77,45,71,43],[77,46,71,44,"levels"],[77,52,71,50],[77,53,71,51],[77,54,71,52],[77,55,71,53],[77,56,71,54],[78,8,72,6],[79,6,73,4],[80,4,74,2],[80,5,74,3],[80,7,74,5],[80,8,74,6,"gameState"],[80,17,74,15],[80,19,74,17,"ninja"],[80,24,74,22],[80,26,74,24,"level"],[80,31,74,29],[80,32,74,30],[80,33,74,31],[82,4,76,2],[83,4,77,2],[83,8,77,8,"selectZone"],[83,18,77,18],[83,21,77,21,"selectZone"],[83,22,77,22,"zoneId"],[83,28,77,36],[83,30,77,38,"levelNumber"],[83,41,77,57],[83,46,77,71],[84,6,78,4],[84,10,78,10,"zone"],[84,14,78,14],[84,17,78,17,"ZONES"],[84,30,78,22],[84,31,78,22,"ZONES"],[84,36,78,22],[84,37,78,23,"find"],[84,41,78,27],[84,42,78,28,"z"],[84,43,78,29],[84,47,78,33,"z"],[84,48,78,34],[84,49,78,35,"id"],[84,51,78,37],[84,56,78,42,"zoneId"],[84,62,78,48],[84,63,78,49],[85,6,79,4],[85,10,79,8],[85,11,79,9,"zone"],[85,15,79,13],[85,19,79,17],[85,20,79,18],[85,24,79,18,"isZoneUnlocked"],[85,37,79,32],[85,38,79,32,"isZoneUnlocked"],[85,52,79,32],[85,54,79,33,"zoneId"],[85,60,79,39],[85,62,79,41,"zoneProgress"],[85,74,79,53],[85,75,79,54],[85,77,79,56],[86,8,80,6,"console"],[86,15,80,13],[86,16,80,14,"log"],[86,19,80,17],[86,20,80,18],[86,30,80,28,"zoneId"],[86,36,80,34],[86,58,80,56],[86,59,80,57],[87,8,81,6],[87,15,81,13],[87,20,81,18],[88,6,82,4],[89,6,84,4],[89,10,84,10,"level"],[89,15,84,15],[89,18,84,18,"zone"],[89,22,84,22],[89,23,84,23,"levels"],[89,29,84,29],[89,30,84,30,"levelNumber"],[89,41,84,41],[89,44,84,44],[89,45,84,45],[89,46,84,46],[90,6,85,4],[90,10,85,8],[90,11,85,9,"level"],[90,16,85,14],[90,18,85,16],[91,8,86,6,"console"],[91,15,86,13],[91,16,86,14,"log"],[91,19,86,17],[91,20,86,18],[91,31,86,29,"levelNumber"],[91,42,86,40],[91,64,86,62,"zoneId"],[91,70,86,68],[91,72,86,70],[91,73,86,71],[92,8,87,6],[92,15,87,13],[92,20,87,18],[93,6,88,4],[94,6,90,4,"setCurrentZone"],[94,20,90,18],[94,21,90,19,"zone"],[94,25,90,23],[94,26,90,24],[95,6,91,4,"setCurrentZoneLevel"],[95,25,91,23],[95,26,91,24,"level"],[95,31,91,29],[95,32,91,30],[96,6,92,4,"console"],[96,13,92,11],[96,14,92,12,"log"],[96,17,92,15],[96,18,92,16],[96,34,92,32,"zone"],[96,38,92,36],[96,39,92,37,"name"],[96,43,92,41],[96,55,92,53,"levelNumber"],[96,66,92,64],[96,68,92,66],[96,69,92,67],[97,6,93,4],[97,13,93,11],[97,17,93,15],[98,4,94,2],[98,5,94,3],[100,4,96,2],[101,4,97,2],[101,8,97,8,"getZoneProgress"],[101,23,97,23],[101,26,97,27,"zoneId"],[101,32,97,41],[101,36,97,67],[102,6,98,4],[102,13,98,11,"zoneProgress"],[102,25,98,23],[102,26,98,24,"zoneId"],[102,32,98,30],[102,33,98,31],[102,37,98,35],[102,41,98,39],[103,4,99,2],[103,5,99,3],[105,4,101,2],[106,4,102,2],[106,8,102,8,"spawnZoneEnemy"],[106,22,102,22],[106,25,102,25,"spawnZoneEnemy"],[106,26,102,25],[106,31,102,52],[107,6,103,4],[107,10,103,8],[107,11,103,9,"currentZone"],[107,22,103,20],[107,26,103,24],[107,27,103,25,"currentZoneLevel"],[107,43,103,41],[107,45,103,43],[108,8,104,6,"console"],[108,15,104,13],[108,16,104,14,"log"],[108,19,104,17],[108,20,104,18],[108,65,104,63],[108,66,104,64],[109,8,105,6],[109,15,105,13],[109,19,105,17],[110,6,106,4],[112,6,108,4],[113,6,109,4],[113,10,109,10,"enemyTypeIds"],[113,22,109,22],[113,25,109,25,"currentZoneLevel"],[113,41,109,41],[113,42,109,42,"enemyTypes"],[113,52,109,52],[114,6,110,4],[114,10,110,10,"randomEnemyTypeId"],[114,27,110,27],[114,30,110,30,"enemyTypeIds"],[114,42,110,42],[114,43,110,43,"Math"],[114,47,110,47],[114,48,110,48,"floor"],[114,53,110,53],[114,54,110,54,"Math"],[114,58,110,58],[114,59,110,59,"random"],[114,65,110,65],[114,66,110,66],[114,67,110,67],[114,70,110,70,"enemyTypeIds"],[114,82,110,82],[114,83,110,83,"length"],[114,89,110,89],[114,90,110,90],[114,91,110,91],[115,6,111,4],[115,10,111,10,"enemyType"],[115,19,111,19],[115,22,111,22,"ENEMY_TYPES"],[115,35,111,33],[115,36,111,33,"ENEMY_TYPES"],[115,47,111,33],[115,48,111,34,"randomEnemyTypeId"],[115,65,111,51],[115,66,111,52],[116,6,113,4],[116,10,113,8],[116,11,113,9,"enemyType"],[116,20,113,18],[116,22,113,20],[117,8,114,6,"console"],[117,15,114,13],[117,16,114,14,"log"],[117,19,114,17],[117,20,114,18],[117,36,114,34,"randomEnemyTypeId"],[117,53,114,51],[117,65,114,63],[117,66,114,64],[118,8,115,6],[118,15,115,13],[118,19,115,17],[119,6,116,4],[121,6,118,4],[122,6,119,4],[122,10,119,10,"scaledStats"],[122,21,119,21],[122,24,119,24],[122,28,119,24,"calculateEnemyStats"],[122,41,119,43],[122,42,119,43,"calculateEnemyStats"],[122,61,119,43],[122,63,119,44,"enemyType"],[122,72,119,53],[122,74,119,55,"currentZoneLevel"],[122,90,119,71],[122,92,119,73,"currentZone"],[122,103,119,84],[122,104,119,85,"id"],[122,106,119,87],[122,107,119,88],[124,6,121,4],[125,6,122,4],[125,10,122,10,"enemy"],[125,15,122,29],[125,18,122,32],[126,8,123,6,"id"],[126,10,123,8],[126,12,123,10],[126,15,123,13,"randomEnemyTypeId"],[126,32,123,30],[126,36,123,34,"Date"],[126,40,123,38],[126,41,123,39,"now"],[126,44,123,42],[126,45,123,43],[126,46,123,44],[126,50,123,48,"Math"],[126,54,123,52],[126,55,123,53,"random"],[126,61,123,59],[126,62,123,60],[126,63,123,61],[126,65,123,63],[127,8,124,6,"typeId"],[127,14,124,12],[127,16,124,14,"randomEnemyTypeId"],[127,33,124,31],[128,8,125,6,"name"],[128,12,125,10],[128,14,125,12,"enemyType"],[128,23,125,21],[128,24,125,22,"name"],[128,28,125,26],[129,8,126,6,"icon"],[129,12,126,10],[129,14,126,12,"enemyType"],[129,23,126,21],[129,24,126,22,"icon"],[129,28,126,26],[130,8,127,6,"hp"],[130,10,127,8],[130,12,127,10,"scaledStats"],[130,23,127,21],[130,24,127,22,"hp"],[130,26,127,24],[131,8,128,6,"maxHP"],[131,13,128,11],[131,15,128,13,"scaledStats"],[131,26,128,24],[131,27,128,25,"hp"],[131,29,128,27],[132,8,129,6,"attack"],[132,14,129,12],[132,16,129,14,"scaledStats"],[132,27,129,25],[132,28,129,26,"attack"],[132,34,129,32],[133,8,130,6,"xp"],[133,10,130,8],[133,12,130,10,"scaledStats"],[133,23,130,21],[133,24,130,22,"xp"],[133,26,130,24],[134,8,131,6,"resistances"],[134,19,131,17],[134,21,131,19,"scaledStats"],[134,32,131,30],[134,33,131,31,"resistances"],[134,44,131,42],[135,8,132,6,"position"],[135,16,132,14],[135,18,132,16],[136,10,133,8,"x"],[136,11,133,9],[136,13,133,11,"Math"],[136,17,133,15],[136,18,133,16,"random"],[136,24,133,22],[136,25,133,23],[136,26,133,24],[136,29,133,27],[136,32,133,30],[136,35,133,33],[136,37,133,35],[137,10,133,37],[138,10,134,8,"y"],[138,11,134,9],[138,13,134,11,"Math"],[138,17,134,15],[138,18,134,16,"random"],[138,24,134,22],[138,25,134,23],[138,26,134,24],[138,29,134,27],[138,32,134,30],[138,35,134,33],[139,8,135,6],[139,9,135,7],[140,8,136,6,"lastDamaged"],[140,19,136,17],[140,21,136,19],[141,6,137,4],[141,7,137,5],[142,6,139,4,"console"],[142,13,139,11],[142,14,139,12,"log"],[142,17,139,15],[142,18,139,16],[142,32,139,30,"enemy"],[142,37,139,35],[142,38,139,36,"name"],[142,42,139,40],[142,47,139,45,"enemy"],[142,52,139,50],[142,53,139,51,"hp"],[142,55,139,53],[142,63,139,61,"enemy"],[142,68,139,66],[142,69,139,67,"xp"],[142,71,139,69],[142,82,139,80,"currentZone"],[142,93,139,91],[142,94,139,92,"name"],[142,98,139,96],[142,100,139,98],[142,101,139,99],[143,6,140,4],[143,13,140,11,"enemy"],[143,18,140,16],[144,4,141,2],[144,5,141,3],[146,4,143,2],[147,4,144,2],[147,8,144,8,"recordEnemyKill"],[147,23,144,23],[147,26,144,27,"enemy"],[147,31,144,46],[147,35,144,51],[148,6,145,4],[148,10,145,8],[148,11,145,9,"currentZone"],[148,22,145,20],[148,26,145,24],[148,27,145,25,"currentZoneLevel"],[148,43,145,41],[148,45,145,43],[149,6,147,4,"console"],[149,13,147,11],[149,14,147,12,"log"],[149,17,147,15],[149,18,147,16],[149,24,147,22,"enemy"],[149,29,147,27],[149,30,147,28,"name"],[149,34,147,32],[149,47,147,45,"enemy"],[149,52,147,50],[149,53,147,51,"xp"],[149,55,147,53],[149,60,147,58],[149,61,147,59],[150,6,149,4,"setZoneProgress"],[150,21,149,19],[150,22,149,20,"prev"],[150,26,149,24],[150,30,149,28],[151,8,150,6],[151,12,150,12,"newProgress"],[151,23,150,23],[151,26,150,26],[152,10,150,28],[152,13,150,31,"prev"],[153,8,150,36],[153,9,150,37],[154,8,151,6],[154,12,151,12,"zoneId"],[154,18,151,18],[154,21,151,21,"currentZone"],[154,32,151,32],[154,33,151,33,"id"],[154,35,151,35],[155,8,153,6],[155,12,153,10],[155,13,153,11,"newProgress"],[155,24,153,22],[155,25,153,23,"zoneId"],[155,31,153,29],[155,32,153,30],[155,34,153,32],[156,10,154,8,"newProgress"],[156,21,154,19],[156,22,154,20,"zoneId"],[156,28,154,26],[156,29,154,27],[156,32,154,30],[157,12,155,10,"zoneId"],[157,18,155,16],[158,12,156,10,"currentLevel"],[158,24,156,22],[158,26,156,24],[158,27,156,25],[159,12,157,10,"killsInLevel"],[159,24,157,22],[159,26,157,24],[159,27,157,25],[160,12,158,10,"completed"],[160,21,158,19],[160,23,158,21],[161,10,159,8],[161,11,159,9],[162,8,160,6],[163,8,162,6],[163,12,162,12,"progress"],[163,20,162,20],[163,23,162,23],[164,10,162,25],[164,13,162,28,"newProgress"],[164,24,162,39],[164,25,162,40,"zoneId"],[164,31,162,46],[165,8,162,48],[165,9,162,49],[166,8,163,6,"progress"],[166,16,163,14],[166,17,163,15,"killsInLevel"],[166,29,163,27],[166,33,163,31],[166,34,163,32],[167,8,165,6,"console"],[167,15,165,13],[167,16,165,14,"log"],[167,19,165,17],[167,20,165,18],[167,31,165,29,"zoneId"],[167,37,165,35],[167,47,165,45,"progress"],[167,55,165,53],[167,56,165,54,"currentLevel"],[167,68,165,66],[167,73,165,71,"progress"],[167,81,165,79],[167,82,165,80,"killsInLevel"],[167,94,165,92],[167,107,165,105],[167,108,165,106],[169,8,167,6],[170,8,168,6],[170,12,168,10,"progress"],[170,20,168,18],[170,21,168,19,"killsInLevel"],[170,33,168,31],[170,37,168,35],[170,41,168,39],[170,43,168,41],[171,10,169,8,"console"],[171,17,169,15],[171,18,169,16,"log"],[171,21,169,19],[171,22,169,20],[171,34,169,32,"progress"],[171,42,169,40],[171,43,169,41,"currentLevel"],[171,55,169,53],[171,72,169,70,"currentZone"],[171,83,169,81],[171,84,169,82,"name"],[171,88,169,86],[171,91,169,89],[171,92,169,90],[173,10,171,8],[174,10,172,8],[174,14,172,12,"progress"],[174,22,172,20],[174,23,172,21,"currentLevel"],[174,35,172,33],[174,38,172,36],[174,39,172,37],[174,41,172,39],[175,12,173,10,"progress"],[175,20,173,18],[175,21,173,19,"currentLevel"],[175,33,173,31],[175,37,173,35],[175,38,173,36],[176,12,174,10,"progress"],[176,20,174,18],[176,21,174,19,"killsInLevel"],[176,33,174,31],[176,36,174,34],[176,37,174,35],[177,12,175,10,"console"],[177,19,175,17],[177,20,175,18,"log"],[177,23,175,21],[177,24,175,22],[177,48,175,46,"progress"],[177,56,175,54],[177,57,175,55,"currentLevel"],[177,69,175,67],[177,71,175,69],[177,72,175,70],[179,12,177,10],[180,12,178,10],[180,16,178,16,"nextLevel"],[180,25,178,25],[180,28,178,28,"currentZone"],[180,39,178,39],[180,40,178,40,"levels"],[180,46,178,46],[180,47,178,47,"progress"],[180,55,178,55],[180,56,178,56,"currentLevel"],[180,68,178,68],[180,71,178,71],[180,72,178,72],[180,73,178,73],[181,12,179,10],[181,16,179,14,"nextLevel"],[181,25,179,23],[181,27,179,25],[182,14,180,12,"setCurrentZoneLevel"],[182,33,180,31],[182,34,180,32,"nextLevel"],[182,43,180,41],[182,44,180,42],[183,12,181,10],[184,10,182,8],[184,11,182,9],[184,17,182,15],[185,12,183,10],[186,12,184,10,"progress"],[186,20,184,18],[186,21,184,19,"completed"],[186,30,184,28],[186,33,184,31],[186,37,184,35],[187,12,185,10,"console"],[187,19,185,17],[187,20,185,18,"log"],[187,23,185,21],[187,24,185,22],[187,35,185,33,"currentZone"],[187,46,185,44],[187,47,185,45,"name"],[187,51,185,49],[187,84,185,82],[187,85,185,83],[188,10,186,8],[189,8,187,6],[190,8,189,6,"newProgress"],[190,19,189,17],[190,20,189,18,"zoneId"],[190,26,189,24],[190,27,189,25],[190,30,189,28,"progress"],[190,38,189,36],[191,8,190,6],[191,15,190,13,"newProgress"],[191,26,190,24],[192,6,191,4],[192,7,191,5],[192,8,191,6],[193,4,192,2],[193,5,192,3],[195,4,194,2],[196,4,195,2],[196,8,195,8,"isZoneUnlockedLocal"],[196,27,195,27],[196,30,195,31,"zoneId"],[196,36,195,45],[196,40,195,59],[197,6,196,4],[197,10,196,8,"zoneId"],[197,16,196,14],[197,21,196,19],[197,22,196,20],[197,24,196,22],[197,31,196,29],[197,35,196,33],[197,36,196,34],[197,37,196,35],[199,6,198,4],[199,10,198,10,"zone"],[199,14,198,14],[199,17,198,17,"ZONES"],[199,30,198,22],[199,31,198,22,"ZONES"],[199,36,198,22],[199,37,198,23,"find"],[199,41,198,27],[199,42,198,28,"z"],[199,43,198,29],[199,47,198,33,"z"],[199,48,198,34],[199,49,198,35,"id"],[199,51,198,37],[199,56,198,42,"zoneId"],[199,62,198,48],[199,63,198,49],[200,6,199,4],[200,10,199,8],[200,11,199,9,"zone"],[200,15,199,13],[200,17,199,15,"unlockRequirement"],[200,34,199,32],[200,35,199,33,"previousZone"],[200,47,199,45],[200,49,199,47],[200,56,199,54],[200,60,199,58],[201,6,201,4],[201,10,201,10,"prevZoneProgress"],[201,26,201,26],[201,29,201,29,"zoneProgress"],[201,41,201,41],[201,42,201,42,"zone"],[201,46,201,46],[201,47,201,47,"unlockRequirement"],[201,64,201,64],[201,65,201,65,"previousZone"],[201,77,201,77],[201,78,201,78],[202,6,202,4],[202,13,202,11,"prevZoneProgress"],[202,29,202,27],[202,31,202,29,"completed"],[202,40,202,38],[202,44,202,42],[202,49,202,47],[203,4,203,2],[203,5,203,3],[205,4,205,2],[206,4,206,2],[206,8,206,8,"getUnlockedZones"],[206,24,206,24],[206,27,206,27,"getUnlockedZones"],[206,28,206,27],[206,33,206,41],[207,6,207,4],[207,13,207,11,"ZONES"],[207,26,207,16],[207,27,207,16,"ZONES"],[207,32,207,16],[207,33,207,17,"filter"],[207,39,207,23],[207,40,207,24,"zone"],[207,44,207,28],[207,48,207,32,"isZoneUnlockedLocal"],[207,67,207,51],[207,68,207,52,"zone"],[207,72,207,56],[207,73,207,57,"id"],[207,75,207,59],[207,76,207,60],[207,77,207,61],[208,4,208,2],[208,5,208,3],[209,4,210,2],[209,8,210,8,"contextValue"],[209,20,210,37],[209,23,210,40,"React"],[209,28,210,45],[209,29,210,45,"default"],[209,36,210,45],[209,37,210,46,"useMemo"],[209,44,210,53],[209,45,210,54],[209,52,210,61],[210,6,211,4,"currentZone"],[210,17,211,15],[211,6,212,4,"currentZoneLevel"],[211,22,212,20],[212,6,213,4,"zoneProgress"],[212,18,213,16],[213,6,214,4,"availableZones"],[213,20,214,18],[213,22,214,20,"ZONES"],[213,35,214,25],[213,36,214,25,"ZONES"],[213,41,214,25],[214,6,215,4,"selectZone"],[214,16,215,14],[215,6,216,4,"getZoneProgress"],[215,21,216,19],[216,6,217,4,"spawnZoneEnemy"],[216,20,217,18],[217,6,218,4,"recordEnemyKill"],[217,21,218,19],[218,6,219,4,"isZoneUnlocked"],[218,20,219,18],[218,22,219,20,"isZoneUnlockedLocal"],[218,41,219,39],[219,6,220,4,"getUnlockedZones"],[220,4,221,2],[220,5,221,3],[220,6,221,4],[220,8,221,6],[220,9,222,4,"currentZone"],[220,20,222,15],[220,22,223,4,"currentZoneLevel"],[220,38,223,20],[220,40,224,4,"zoneProgress"],[220,52,224,16],[220,54,225,4,"selectZone"],[220,64,225,14],[220,66,226,4,"getZoneProgress"],[220,81,226,19],[220,83,227,4,"spawnZoneEnemy"],[220,97,227,18],[220,99,228,4,"recordEnemyKill"],[220,114,228,19],[220,116,229,4,"isZoneUnlockedLocal"],[220,135,229,23],[220,137,230,4,"getUnlockedZones"],[220,153,230,20],[220,154,231,3],[220,155,231,4],[221,4,233,2],[221,24,234,4],[221,28,234,4,"_reactJsxDevRuntime"],[221,47,234,4],[221,48,234,4,"jsxDEV"],[221,54,234,4],[221,56,234,5,"ZoneContext"],[221,67,234,16],[221,68,234,17,"Provider"],[221,76,234,25],[222,6,234,26,"value"],[222,11,234,31],[222,13,234,33,"contextValue"],[222,25,234,46],[223,6,234,46,"children"],[223,14,234,46],[223,16,235,7,"children"],[224,4,235,15],[225,6,235,15,"fileName"],[225,14,235,15],[225,16,235,15,"_jsxFileName"],[225,28,235,15],[226,6,235,15,"lineNumber"],[226,16,235,15],[227,6,235,15,"columnNumber"],[227,18,235,15],[228,4,235,15],[228,11,236,26],[228,12,236,27],[229,2,238,0],[229,3,238,1],[230,2,238,2,"_s2"],[230,5,238,2],[230,6,55,13,"ZoneProvider"],[230,18,55,25],[231,4,55,25],[231,12,56,24,"useGame"],[231,24,56,31],[231,25,56,31,"useGame"],[231,32,56,31],[232,2,56,31],[233,2,56,31,"_c"],[233,4,56,31],[233,7,55,13,"ZoneProvider"],[233,19,55,25],[234,2,55,25],[234,6,55,25,"_c"],[234,8,55,25],[235,2,55,25,"$RefreshReg$"],[235,14,55,25],[235,15,55,25,"_c"],[235,17,55,25],[236,0,55,25],[236,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;YCW;GDQ;qBEG;4BCC,oBD;GFgB;0BIG;GJE;yBKG;GLuC;0BMG;oBCK;KD0C;GNC;8BQG;4BLG,oBK;GRK;2BSG;wBCC,oCD;GTC;sDWE;IXW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}