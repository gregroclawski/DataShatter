{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(); // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState,\n      updateZoneProgress = _useGame.updateZoneProgress;\n\n    // Zone State - Separate \"progression\" from \"currently selected\" zones\n    var _useState = (0, _react.useState)(() => {\n        console.log('🎯 ZONE INIT: Initializing currentZone (selected zone) to Zone 1 Level 1');\n        return _dataZoneData.ZONES[0];\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1]; // Currently selected zone for gameplay\n    var _useState3 = (0, _react.useState)(() => {\n        console.log('🎯 ZONE INIT: Initializing currentZoneLevel to Zone 1 Level 1');\n        return _dataZoneData.ZONES[0]?.levels[0] || null;\n      }),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)(() => {\n        console.log('🎯 ZONE INIT: Initializing progressionZone (unlock progress) to Zone 1');\n        return _dataZoneData.ZONES[0];\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      progressionZone = _useState6[0],\n      setProgressionZone = _useState6[1]; // Highest unlocked zone for progression\n    var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      hasInitializedZones = _useState8[0],\n      setHasInitializedZones = _useState8[1]; // Flag to prevent re-initialization\n    var _useState9 = (0, _react.useState)(() => {\n        // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n        var savedProgress = gameState?.zoneProgress;\n        if (savedProgress && Object.keys(savedProgress).length > 0) {\n          console.log('🗺️ Loading saved zone progress:', savedProgress);\n          return savedProgress;\n        } else {\n          console.log('🗺️ No saved zone progress, using defaults');\n          return {\n            1: {\n              zoneId: 1,\n              currentLevel: 1,\n              killsInLevel: 0,\n              completed: false\n            }\n          };\n        }\n      }),\n      _useState0 = (0, _slicedToArray.default)(_useState9, 2),\n      zoneProgress = _useState0[0],\n      setZoneProgress = _useState0[1];\n\n    // Initialize with game context data when it becomes available (ONLY ONCE)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && !hasInitializedZones) {\n        console.log('🔄 ZONE CONTEXT - Loading zone progress from GameContext (FIRST TIME):', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n\n        // Find the highest unlocked zone for progression tracking\n        var progressEntries = Object.values(gameState.zoneProgress || {});\n        var highestZone = _dataZoneData.ZONES[0];\n        var highestLevel = _dataZoneData.ZONES[0]?.levels[0];\n        var _loop = function (progress) {\n          if (progress && progress.zoneId) {\n            var zone = _dataZoneData.ZONES.find(z => z.id === progress.zoneId);\n            if (zone) {\n              highestZone = zone;\n              highestLevel = zone.levels[(progress.currentLevel || 1) - 1];\n            }\n          }\n        };\n        for (var progress of progressEntries) {\n          _loop(progress);\n        }\n        console.log(`🎯 PROGRESSION ZONE SET: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (highest unlocked)`);\n        setProgressionZone(highestZone);\n\n        // Set current selected zone to progression zone ONLY on initial load  \n        console.log(`🎯 SELECTED ZONE INITIALIZED (ONCE): Zone ${highestZone.id} Level ${highestLevel?.level || 1} (matching progression)`);\n        setCurrentZone(highestZone);\n        setCurrentZoneLevel(highestLevel || _dataZoneData.ZONES[0]?.levels[0]);\n        setHasInitializedZones(true); // Mark as initialized to prevent future auto-selection\n      } else if (gameState?.zoneProgress && hasInitializedZones) {\n        // Update zone progress data but DON'T change selected zone\n        console.log('🔄 ZONE CONTEXT - Updating zone progress data (preserving selection)');\n        setZoneProgress(gameState.zoneProgress);\n\n        // Update progression zone tracking for unlock logic\n        var _progressEntries = Object.values(gameState.zoneProgress || {});\n        var _highestZone = _dataZoneData.ZONES[0];\n        var _loop2 = function (_progress) {\n          if (_progress && _progress.zoneId) {\n            var zone = _dataZoneData.ZONES.find(z => z.id === _progress.zoneId);\n            if (zone) {\n              _highestZone = zone;\n            }\n          }\n        };\n        for (var _progress of _progressEntries) {\n          _loop2(_progress);\n        }\n        console.log(`🎯 PROGRESSION ZONE UPDATED: Zone ${_highestZone.id} (selected zone unchanged)`);\n        setProgressionZone(_highestZone);\n      }\n    }, [gameState?.zoneProgress, hasInitializedZones]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Zone selection and management - separate from progression\n    var selectZone = (zoneId, levelNumber) => {\n      if (!isZoneUnlockedLocal(zoneId)) {\n        console.log(`❌ Zone ${zoneId} is not unlocked`);\n        return false;\n      }\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone) {\n        console.log(`❌ Zone ${zoneId} not found`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Zone ${zoneId} Level ${levelNumber} not found`);\n        return false;\n      }\n      console.log(`🎯 ZONE SELECTION: Setting currentZone to Zone ${zoneId} Level ${levelNumber} (${zone.name})`);\n      console.log(`📍 BEFORE: currentZone=${currentZone?.id}, currentLevel=${currentZoneLevel?.level}`);\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`📍 AFTER: Selected Zone ${zoneId} Level ${levelNumber} - Kills will count toward this zone`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      console.log(`🎯 KILL TRACKING: Recording kill for SELECTED Zone ${currentZone.id} Level ${currentZoneLevel.level}`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n\n        // Get the required kills for current level from zone data\n        var currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        var requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        var willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment with subscription multiplier\n          var zoneKillMultiplier = gameState.subscriptionBenefits?.zone_kill_multiplier || 1.0;\n          var killsToAdd = Math.floor(1 * zoneKillMultiplier);\n          progress.killsInLevel += killsToAdd;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (+${killsToAdd} with ${zoneKillMultiplier}x multiplier)`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ PROGRESSION: Advanced to Level ${progress.currentLevel} (player can still select other zones)`);\n\n            // Update progression zone but DON'T auto-select next level\n            // Player keeps their current selection unless they manually change it\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel && currentZone === progressionZone) {\n              // Only auto-advance if player is currently on the progression zone\n              console.log(`🎯 AUTO-ADVANCE: Player was on progression zone, advancing to next level`);\n              setCurrentZoneLevel(nextLevel);\n              setProgressionZone(currentZone); // Update progression zone\n            } else {\n              console.log(`🎯 SELECTION PRESERVED: Player selected different zone, keeping their choice`);\n            }\n          } else {\n            // Zone completed - Auto-advance to next zone\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n\n            // CRITICAL FIX: Auto-advance to the next zone when current zone is completed\n            var nextZone = _dataZoneData.ZONES.find(z => z.id === zoneId + 1);\n            if (nextZone) {\n              console.log(`⬆️ ZONE PROGRESSION: Auto-advancing from Zone ${zoneId} to Zone ${nextZone.id}`);\n\n              // Initialize next zone progress if it doesn't exist\n              if (!newProgress[nextZone.id]) {\n                newProgress[nextZone.id] = {\n                  zoneId: nextZone.id,\n                  currentLevel: 1,\n                  killsInLevel: 0,\n                  completed: false\n                };\n              }\n\n              // Auto-select the next zone for the player\n              setTimeout(() => {\n                console.log(`🎯 AUTO-SELECTING: Moving player to Zone ${nextZone.id} Level 1`);\n                setCurrentZone(nextZone);\n                setCurrentZoneLevel(nextZone.levels[0]);\n                setProgressionZone(nextZone);\n              }, 100); // Small delay to ensure state updates properly\n            } else {\n              console.log(`🏁 GAME COMPLETE: No more zones available after Zone ${zoneId}`);\n            }\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      // Currently selected zone for gameplay\n      currentZoneLevel,\n      progressionZone,\n      // Highest unlocked zone for progression\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, progressionZone, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"0LYWwhEl8kAYOoKmz4Hg7cSgCSQ=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":392,"map":[[6,26,5,0],[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"value"],[8,9,5,0],[9,2,5,0],[10,2,5,0],[10,11,5,0,"_interopDefault"],[10,27,5,0,"e"],[10,28,5,0],[11,4,5,0],[11,11,5,0,"e"],[11,12,5,0],[11,16,5,0,"e"],[11,17,5,0],[11,18,5,0,"__esModule"],[11,28,5,0],[11,31,5,0,"e"],[11,32,5,0],[12,6,5,0,"default"],[12,13,5,0],[12,15,5,0,"e"],[13,4,5,0],[14,2,5,0],[15,2,57,0,"Object"],[15,8,57,0],[15,9,57,0,"defineProperty"],[15,23,57,0],[15,24,57,0,"exports"],[15,31,57,0],[16,4,57,0,"enumerable"],[16,14,57,0],[17,4,57,0,"get"],[17,7,57,0],[17,18,57,0,"get"],[17,19,57,0],[18,6,57,0],[18,13,57,0,"useZone"],[18,20,57,0],[19,4,57,0],[20,2,57,0],[21,2,65,0,"Object"],[21,8,65,0],[21,9,65,0,"defineProperty"],[21,23,65,0],[21,24,65,0,"exports"],[21,31,65,0],[22,4,65,0,"enumerable"],[22,14,65,0],[23,4,65,0,"get"],[23,7,65,0],[23,18,65,0,"get"],[23,19,65,0],[24,6,65,0],[24,13,65,0,"ZoneProvider"],[24,25,65,0],[25,4,65,0],[26,2,65,0],[27,2,389,2],[27,6,389,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,389,2],[27,42,389,2,"require"],[27,49,389,2],[27,50,389,2,"_dependencyMap"],[27,64,389,2],[28,2,389,2],[28,6,389,2,"_slicedToArray"],[28,20,389,2],[28,23,389,2,"_interopDefault"],[28,38,389,2],[28,39,389,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,389,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,6,0],[34,6,6,6,"calculateKillRequirement"],[34,30,6,30],[34,33,6,33,"calculateKillRequirement"],[34,34,6,34,"zoneId"],[34,40,6,48],[34,42,6,50,"level"],[34,47,6,63],[34,52,6,76],[35,4,7,2],[35,8,7,6,"zoneId"],[35,14,7,12],[35,18,7,16],[35,19,7,17],[35,21,7,19],[35,28,7,26],[35,30,7,28],[35,33,7,32,"level"],[35,38,7,37],[35,41,7,40],[35,42,7,42],[35,43,7,43],[35,44,7,49],[36,4,8,2],[36,8,8,6,"zoneId"],[36,14,8,12],[36,18,8,16],[36,20,8,18],[36,22,8,20],[36,29,8,27],[36,31,8,29],[36,34,8,33,"level"],[36,39,8,38],[36,42,8,41],[36,44,8,44],[36,45,8,45],[36,46,8,50],[37,4,9,2],[37,8,9,6,"zoneId"],[37,14,9,12],[37,18,9,16],[37,20,9,18],[37,22,9,20],[37,29,9,27],[37,31,9,29],[37,34,9,33,"level"],[37,39,9,38],[37,42,9,41],[37,44,9,44],[37,45,9,45],[37,46,9,50],[38,4,10,2],[38,8,10,6,"zoneId"],[38,14,10,12],[38,18,10,16],[38,20,10,18],[38,22,10,20],[38,29,10,27],[38,32,10,30],[38,35,10,34,"level"],[38,40,10,39],[38,43,10,42],[38,45,10,45],[38,46,10,46],[38,47,10,50],[39,4,11,2],[39,11,11,9],[39,14,11,12],[39,17,11,16,"level"],[39,22,11,21],[39,25,11,24],[39,27,11,27],[39,28,11,28],[39,29,11,50],[40,2,12,0],[40,3,12,1],[41,2,55,0],[41,6,55,6,"ZoneContext"],[41,17,55,17],[41,33,55,20],[41,37,55,20,"createContext"],[41,43,55,33],[41,44,55,33,"createContext"],[41,57,55,33],[41,59,55,63,"undefined"],[41,68,55,72],[41,69,55,73],[42,2,57,7],[42,6,57,13,"useZone"],[42,13,57,20],[42,16,57,23,"useZone"],[42,17,57,23],[42,22,57,29],[43,4,57,29,"_s"],[43,6,57,29],[44,4,58,2],[44,8,58,8,"context"],[44,15,58,15],[44,18,58,18],[44,22,58,18,"useContext"],[44,28,58,28],[44,29,58,28,"useContext"],[44,39,58,28],[44,41,58,29,"ZoneContext"],[44,52,58,40],[44,53,58,41],[45,4,59,2],[45,8,59,6],[45,9,59,7,"context"],[45,16,59,14],[45,18,59,16],[46,6,60,4],[46,12,60,10],[46,16,60,14,"Error"],[46,21,60,19],[46,22,60,20],[46,66,60,64],[46,67,60,65],[47,4,61,2],[48,4,62,2],[48,11,62,9,"context"],[48,18,62,16],[49,2,63,0],[49,3,63,1],[50,2,63,2,"_s"],[50,4,63,2],[50,5,57,13,"useZone"],[50,12,57,20],[51,2,65,7],[51,6,65,13,"ZoneProvider"],[51,18,65,25],[51,21,65,28,"_ref"],[51,25,65,28],[51,29,65,71],[52,4,65,71,"_s2"],[52,7,65,71],[53,4,65,71],[53,8,65,31,"children"],[53,16,65,39],[53,19,65,39,"_ref"],[53,23,65,39],[53,24,65,31,"children"],[53,32,65,39],[54,4,66,2],[54,8,66,2,"_useGame"],[54,16,66,2],[54,19,66,44],[54,23,66,44,"useGame"],[54,35,66,51],[54,36,66,51,"useGame"],[54,43,66,51],[54,45,66,52],[54,46,66,53],[55,6,66,10,"gameState"],[55,15,66,19],[55,18,66,19,"_useGame"],[55,26,66,19],[55,27,66,10,"gameState"],[55,36,66,19],[56,6,66,21,"updateZoneProgress"],[56,24,66,39],[56,27,66,39,"_useGame"],[56,35,66,39],[56,36,66,21,"updateZoneProgress"],[56,54,66,39],[58,4,68,2],[59,4,69,2],[59,8,69,2,"_useState"],[59,17,69,2],[59,20,69,40],[59,24,69,40,"useState"],[59,30,69,48],[59,31,69,48,"useState"],[59,39,69,48],[59,41,69,62],[59,47,69,68],[60,8,70,4,"console"],[60,15,70,11],[60,16,70,12,"log"],[60,19,70,15],[60,20,70,16],[60,94,70,90],[60,95,70,91],[61,8,71,4],[61,15,71,11,"ZONES"],[61,28,71,16],[61,29,71,16,"ZONES"],[61,34,71,16],[61,35,71,17],[61,36,71,18],[61,37,71,19],[62,6,72,2],[62,7,72,3],[62,8,72,4],[63,6,72,4,"_useState2"],[63,16,72,4],[63,23,72,4,"_slicedToArray"],[63,37,72,4],[63,38,72,4,"default"],[63,45,72,4],[63,47,72,4,"_useState"],[63,56,72,4],[64,6,69,9,"currentZone"],[64,17,69,20],[64,20,69,20,"_useState2"],[64,30,69,20],[65,6,69,22,"setCurrentZone"],[65,20,69,36],[65,23,69,36,"_useState2"],[65,33,69,36],[65,37,72,5],[65,38,72,6],[66,4,73,2],[66,8,73,2,"_useState3"],[66,18,73,2],[66,21,73,50],[66,25,73,50,"useState"],[66,31,73,58],[66,32,73,58,"useState"],[66,40,73,58],[66,42,73,77],[66,48,73,83],[67,8,74,4,"console"],[67,15,74,11],[67,16,74,12,"log"],[67,19,74,15],[67,20,74,16],[67,83,74,79],[67,84,74,80],[68,8,75,4],[68,15,75,11,"ZONES"],[68,28,75,16],[68,29,75,16,"ZONES"],[68,34,75,16],[68,35,75,17],[68,36,75,18],[68,37,75,19],[68,39,75,21,"levels"],[68,45,75,27],[68,46,75,28],[68,47,75,29],[68,48,75,30],[68,52,75,34],[68,56,75,38],[69,6,76,2],[69,7,76,3],[69,8,76,4],[70,6,76,4,"_useState4"],[70,16,76,4],[70,23,76,4,"_slicedToArray"],[70,37,76,4],[70,38,76,4,"default"],[70,45,76,4],[70,47,76,4,"_useState3"],[70,57,76,4],[71,6,73,9,"currentZoneLevel"],[71,22,73,25],[71,25,73,25,"_useState4"],[71,35,73,25],[72,6,73,27,"setCurrentZoneLevel"],[72,25,73,46],[72,28,73,46,"_useState4"],[72,38,73,46],[73,4,77,2],[73,8,77,2,"_useState5"],[73,18,77,2],[73,21,77,48],[73,25,77,48,"useState"],[73,31,77,56],[73,32,77,56,"useState"],[73,40,77,56],[73,42,77,70],[73,48,77,76],[74,8,78,4,"console"],[74,15,78,11],[74,16,78,12,"log"],[74,19,78,15],[74,20,78,16],[74,92,78,88],[74,93,78,89],[75,8,79,4],[75,15,79,11,"ZONES"],[75,28,79,16],[75,29,79,16,"ZONES"],[75,34,79,16],[75,35,79,17],[75,36,79,18],[75,37,79,19],[76,6,80,2],[76,7,80,3],[76,8,80,4],[77,6,80,4,"_useState6"],[77,16,80,4],[77,23,80,4,"_slicedToArray"],[77,37,80,4],[77,38,80,4,"default"],[77,45,80,4],[77,47,80,4,"_useState5"],[77,57,80,4],[78,6,77,9,"progressionZone"],[78,21,77,24],[78,24,77,24,"_useState6"],[78,34,77,24],[79,6,77,26,"setProgressionZone"],[79,24,77,44],[79,27,77,44,"_useState6"],[79,37,77,44],[79,41,80,5],[79,42,80,6],[80,4,81,2],[80,8,81,2,"_useState7"],[80,18,81,2],[80,21,81,56],[80,25,81,56,"useState"],[80,31,81,64],[80,32,81,64,"useState"],[80,40,81,64],[80,42,81,65],[80,47,81,70],[80,48,81,71],[81,6,81,71,"_useState8"],[81,16,81,71],[81,23,81,71,"_slicedToArray"],[81,37,81,71],[81,38,81,71,"default"],[81,45,81,71],[81,47,81,71,"_useState7"],[81,57,81,71],[82,6,81,9,"hasInitializedZones"],[82,25,81,28],[82,28,81,28,"_useState8"],[82,38,81,28],[83,6,81,30,"setHasInitializedZones"],[83,28,81,52],[83,31,81,52,"_useState8"],[83,41,81,52],[83,45,81,72],[83,46,81,73],[84,4,82,2],[84,8,82,2,"_useState9"],[84,18,82,2],[84,21,82,42],[84,25,82,42,"useState"],[84,31,82,50],[84,32,82,50,"useState"],[84,40,82,50],[84,42,82,81],[84,48,82,87],[85,8,83,4],[86,8,84,4],[86,12,84,10,"savedProgress"],[86,25,84,23],[86,28,84,26,"gameState"],[86,37,84,35],[86,39,84,37,"zoneProgress"],[86,51,84,49],[87,8,85,4],[87,12,85,8,"savedProgress"],[87,25,85,21],[87,29,85,25,"Object"],[87,35,85,31],[87,36,85,32,"keys"],[87,40,85,36],[87,41,85,37,"savedProgress"],[87,54,85,50],[87,55,85,51],[87,56,85,52,"length"],[87,62,85,58],[87,65,85,61],[87,66,85,62],[87,68,85,64],[88,10,86,6,"console"],[88,17,86,13],[88,18,86,14,"log"],[88,21,86,17],[88,22,86,18],[88,56,86,52],[88,58,86,54,"savedProgress"],[88,71,86,67],[88,72,86,68],[89,10,87,6],[89,17,87,13,"savedProgress"],[89,30,87,26],[90,8,88,4],[90,9,88,5],[90,15,88,11],[91,10,89,6,"console"],[91,17,89,13],[91,18,89,14,"log"],[91,21,89,17],[91,22,89,18],[91,66,89,62],[91,67,89,63],[92,10,90,6],[92,17,90,13],[93,12,90,15],[93,13,90,16],[93,15,90,18],[94,14,90,20,"zoneId"],[94,20,90,26],[94,22,90,28],[94,23,90,29],[95,14,90,31,"currentLevel"],[95,26,90,43],[95,28,90,45],[95,29,90,46],[96,14,90,48,"killsInLevel"],[96,26,90,60],[96,28,90,62],[96,29,90,63],[97,14,90,65,"completed"],[97,23,90,74],[97,25,90,76],[98,12,90,82],[99,10,90,84],[99,11,90,85],[100,8,91,4],[101,6,92,2],[101,7,92,3],[101,8,92,4],[102,6,92,4,"_useState0"],[102,16,92,4],[102,23,92,4,"_slicedToArray"],[102,37,92,4],[102,38,92,4,"default"],[102,45,92,4],[102,47,92,4,"_useState9"],[102,57,92,4],[103,6,82,9,"zoneProgress"],[103,18,82,21],[103,21,82,21,"_useState0"],[103,31,82,21],[104,6,82,23,"setZoneProgress"],[104,21,82,38],[104,24,82,38,"_useState0"],[104,34,82,38],[106,4,94,2],[107,4,95,2],[107,8,95,2,"useEffect"],[107,14,95,11],[107,15,95,11,"useEffect"],[107,24,95,11],[107,26,95,12],[107,32,95,18],[108,6,96,4],[108,10,96,8,"gameState"],[108,19,96,17],[108,21,96,19,"zoneProgress"],[108,33,96,31],[108,37,96,35],[108,38,96,36,"hasInitializedZones"],[108,57,96,55],[108,59,96,57],[109,8,97,6,"console"],[109,15,97,13],[109,16,97,14,"log"],[109,19,97,17],[109,20,97,18],[109,92,97,90],[109,94,97,92,"gameState"],[109,103,97,101],[109,104,97,102,"zoneProgress"],[109,116,97,114],[109,117,97,115],[110,8,98,6,"setZoneProgress"],[110,23,98,21],[110,24,98,22,"gameState"],[110,33,98,31],[110,34,98,32,"zoneProgress"],[110,46,98,44],[110,47,98,45],[112,8,100,6],[113,8,101,6],[113,12,101,12,"progressEntries"],[113,27,101,27],[113,30,101,30,"Object"],[113,36,101,36],[113,37,101,37,"values"],[113,43,101,43],[113,44,101,44,"gameState"],[113,53,101,53],[113,54,101,54,"zoneProgress"],[113,66,101,66],[113,70,101,70],[113,71,101,71],[113,72,101,72],[113,73,101,73],[114,8,102,6],[114,12,102,10,"highestZone"],[114,23,102,21],[114,26,102,24,"ZONES"],[114,39,102,29],[114,40,102,29,"ZONES"],[114,45,102,29],[114,46,102,30],[114,47,102,31],[114,48,102,32],[115,8,103,6],[115,12,103,10,"highestLevel"],[115,24,103,22],[115,27,103,25,"ZONES"],[115,40,103,30],[115,41,103,30,"ZONES"],[115,46,103,30],[115,47,103,31],[115,48,103,32],[115,49,103,33],[115,51,103,35,"levels"],[115,57,103,41],[115,58,103,42],[115,59,103,43],[115,60,103,44],[116,8,103,45],[116,12,103,45,"_loop"],[116,17,103,45],[116,29,103,45,"_loop"],[116,30,103,45,"progress"],[116,38,103,45],[116,40,105,46],[117,10,106,8],[117,14,106,12,"progress"],[117,22,106,20],[117,26,106,24,"progress"],[117,34,106,32],[117,35,106,33,"zoneId"],[117,41,106,39],[117,43,106,41],[118,12,107,10],[118,16,107,16,"zone"],[118,20,107,20],[118,23,107,23,"ZONES"],[118,36,107,28],[118,37,107,28,"ZONES"],[118,42,107,28],[118,43,107,29,"find"],[118,47,107,33],[118,48,107,34,"z"],[118,49,107,35],[118,53,107,39,"z"],[118,54,107,40],[118,55,107,41,"id"],[118,57,107,43],[118,62,107,48,"progress"],[118,70,107,56],[118,71,107,57,"zoneId"],[118,77,107,63],[118,78,107,64],[119,12,108,10],[119,16,108,14,"zone"],[119,20,108,18],[119,22,108,20],[120,14,109,12,"highestZone"],[120,25,109,23],[120,28,109,26,"zone"],[120,32,109,30],[121,14,110,12,"highestLevel"],[121,26,110,24],[121,29,110,27,"zone"],[121,33,110,31],[121,34,110,32,"levels"],[121,40,110,38],[121,41,110,39],[121,42,110,40,"progress"],[121,50,110,48],[121,51,110,49,"currentLevel"],[121,63,110,61],[121,67,110,65],[121,68,110,66],[121,72,110,70],[121,73,110,71],[121,74,110,72],[122,12,111,10],[123,10,112,8],[124,8,113,6],[124,9,113,7],[125,8,105,6],[125,13,105,11],[125,17,105,17,"progress"],[125,25,105,25],[125,29,105,29,"progressEntries"],[125,44,105,44],[126,10,105,44,"_loop"],[126,15,105,44],[126,16,105,44,"progress"],[126,24,105,44],[127,8,105,44],[128,8,115,6,"console"],[128,15,115,13],[128,16,115,14,"log"],[128,19,115,17],[128,20,115,18],[128,53,115,51,"highestZone"],[128,64,115,62],[128,65,115,63,"id"],[128,67,115,65],[128,77,115,75,"highestLevel"],[128,89,115,87],[128,91,115,89,"level"],[128,96,115,94],[128,100,115,98],[128,101,115,99],[128,122,115,120],[128,123,115,121],[129,8,116,6,"setProgressionZone"],[129,26,116,24],[129,27,116,25,"highestZone"],[129,38,116,36],[129,39,116,37],[131,8,118,6],[132,8,119,6,"console"],[132,15,119,13],[132,16,119,14,"log"],[132,19,119,17],[132,20,119,18],[132,65,119,63,"highestZone"],[132,76,119,74],[132,77,119,75,"id"],[132,79,119,77],[132,89,119,87,"highestLevel"],[132,101,119,99],[132,103,119,101,"level"],[132,108,119,106],[132,112,119,110],[132,113,119,111],[132,138,119,136],[132,139,119,137],[133,8,120,6,"setCurrentZone"],[133,22,120,20],[133,23,120,21,"highestZone"],[133,34,120,32],[133,35,120,33],[134,8,121,6,"setCurrentZoneLevel"],[134,27,121,25],[134,28,121,26,"highestLevel"],[134,40,121,38],[134,44,121,42,"ZONES"],[134,57,121,47],[134,58,121,47,"ZONES"],[134,63,121,47],[134,64,121,48],[134,65,121,49],[134,66,121,50],[134,68,121,52,"levels"],[134,74,121,58],[134,75,121,59],[134,76,121,60],[134,77,121,61],[134,78,121,62],[135,8,122,6,"setHasInitializedZones"],[135,30,122,28],[135,31,122,29],[135,35,122,33],[135,36,122,34],[135,37,122,35],[135,38,122,36],[136,6,123,4],[136,7,123,5],[136,13,123,11],[136,17,123,15,"gameState"],[136,26,123,24],[136,28,123,26,"zoneProgress"],[136,40,123,38],[136,44,123,42,"hasInitializedZones"],[136,63,123,61],[136,65,123,63],[137,8,124,6],[138,8,125,6,"console"],[138,15,125,13],[138,16,125,14,"log"],[138,19,125,17],[138,20,125,18],[138,90,125,88],[138,91,125,89],[139,8,126,6,"setZoneProgress"],[139,23,126,21],[139,24,126,22,"gameState"],[139,33,126,31],[139,34,126,32,"zoneProgress"],[139,46,126,44],[139,47,126,45],[141,8,128,6],[142,8,129,6],[142,12,129,12,"progressEntries"],[142,28,129,27],[142,31,129,30,"Object"],[142,37,129,36],[142,38,129,37,"values"],[142,44,129,43],[142,45,129,44,"gameState"],[142,54,129,53],[142,55,129,54,"zoneProgress"],[142,67,129,66],[142,71,129,70],[142,72,129,71],[142,73,129,72],[142,74,129,73],[143,8,130,6],[143,12,130,10,"highestZone"],[143,24,130,21],[143,27,130,24,"ZONES"],[143,40,130,29],[143,41,130,29,"ZONES"],[143,46,130,29],[143,47,130,30],[143,48,130,31],[143,49,130,32],[144,8,130,33],[144,12,130,33,"_loop2"],[144,18,130,33],[144,30,130,33,"_loop2"],[144,31,130,33,"_progress"],[144,40,130,33],[144,42,132,46],[145,10,133,8],[145,14,133,12,"progress"],[145,23,133,20],[145,27,133,24,"progress"],[145,36,133,32],[145,37,133,33,"zoneId"],[145,43,133,39],[145,45,133,41],[146,12,134,10],[146,16,134,16,"zone"],[146,20,134,20],[146,23,134,23,"ZONES"],[146,36,134,28],[146,37,134,28,"ZONES"],[146,42,134,28],[146,43,134,29,"find"],[146,47,134,33],[146,48,134,34,"z"],[146,49,134,35],[146,53,134,39,"z"],[146,54,134,40],[146,55,134,41,"id"],[146,57,134,43],[146,62,134,48,"progress"],[146,71,134,56],[146,72,134,57,"zoneId"],[146,78,134,63],[146,79,134,64],[147,12,135,10],[147,16,135,14,"zone"],[147,20,135,18],[147,22,135,20],[148,14,136,12,"highestZone"],[148,26,136,23],[148,29,136,26,"zone"],[148,33,136,30],[149,12,137,10],[150,10,138,8],[151,8,139,6],[151,9,139,7],[152,8,132,6],[152,13,132,11],[152,17,132,17,"progress"],[152,26,132,25],[152,30,132,29,"progressEntries"],[152,46,132,44],[153,10,132,44,"_loop2"],[153,16,132,44],[153,17,132,44,"_progress"],[153,26,132,44],[154,8,132,44],[155,8,141,6,"console"],[155,15,141,13],[155,16,141,14,"log"],[155,19,141,17],[155,20,141,18],[155,57,141,55,"highestZone"],[155,69,141,66],[155,70,141,67,"id"],[155,72,141,69],[155,100,141,97],[155,101,141,98],[156,8,142,6,"setProgressionZone"],[156,26,142,24],[156,27,142,25,"highestZone"],[156,39,142,36],[156,40,142,37],[157,6,143,4],[158,4,144,2],[158,5,144,3],[158,7,144,5],[158,8,144,6,"gameState"],[158,17,144,15],[158,19,144,17,"zoneProgress"],[158,31,144,29],[158,33,144,31,"hasInitializedZones"],[158,52,144,50],[158,53,144,51],[158,54,144,52],[160,4,146,2],[161,4,147,2],[161,8,147,2,"useEffect"],[161,14,147,11],[161,15,147,11,"useEffect"],[161,24,147,11],[161,26,147,12],[161,32,147,18],[162,6,148,4],[162,10,148,8,"gameState"],[162,19,148,17],[162,21,148,19,"ninja"],[162,26,148,24],[162,28,148,26],[163,8,149,6],[163,12,149,12,"recommendedZone"],[163,27,149,27],[163,30,149,30],[163,34,149,30,"getZoneByLevel"],[163,47,149,44],[163,48,149,44,"getZoneByLevel"],[163,62,149,44],[163,64,149,45,"gameState"],[163,73,149,54],[163,74,149,55,"ninja"],[163,79,149,60],[163,80,149,61,"level"],[163,85,149,66],[163,86,149,67],[164,8,150,6],[164,12,150,10,"recommendedZone"],[164,27,150,25],[164,31,150,29],[164,32,150,30,"currentZone"],[164,43,150,41],[164,45,150,43],[165,10,151,8,"setCurrentZone"],[165,24,151,22],[165,25,151,23,"recommendedZone"],[165,40,151,38],[165,41,151,39],[166,10,152,8,"setCurrentZoneLevel"],[166,29,152,27],[166,30,152,28,"recommendedZone"],[166,45,152,43],[166,46,152,44,"levels"],[166,52,152,50],[166,53,152,51],[166,54,152,52],[166,55,152,53],[166,56,152,54],[167,8,153,6],[168,6,154,4],[169,4,155,2],[169,5,155,3],[169,7,155,5],[169,8,155,6,"gameState"],[169,17,155,15],[169,19,155,17,"ninja"],[169,24,155,22],[169,26,155,24,"level"],[169,31,155,29],[169,32,155,30],[169,33,155,31],[171,4,157,2],[172,4,158,2],[172,8,158,8,"selectZone"],[172,18,158,18],[172,21,158,21,"selectZone"],[172,22,158,22,"zoneId"],[172,28,158,36],[172,30,158,38,"levelNumber"],[172,41,158,57],[172,46,158,71],[173,6,159,4],[173,10,159,8],[173,11,159,9,"isZoneUnlockedLocal"],[173,30,159,28],[173,31,159,29,"zoneId"],[173,37,159,35],[173,38,159,36],[173,40,159,38],[174,8,160,6,"console"],[174,15,160,13],[174,16,160,14,"log"],[174,19,160,17],[174,20,160,18],[174,30,160,28,"zoneId"],[174,36,160,34],[174,54,160,52],[174,55,160,53],[175,8,161,6],[175,15,161,13],[175,20,161,18],[176,6,162,4],[177,6,164,4],[177,10,164,10,"zone"],[177,14,164,14],[177,17,164,17,"ZONES"],[177,30,164,22],[177,31,164,22,"ZONES"],[177,36,164,22],[177,37,164,23,"find"],[177,41,164,27],[177,42,164,28,"z"],[177,43,164,29],[177,47,164,33,"z"],[177,48,164,34],[177,49,164,35,"id"],[177,51,164,37],[177,56,164,42,"zoneId"],[177,62,164,48],[177,63,164,49],[178,6,165,4],[178,10,165,8],[178,11,165,9,"zone"],[178,15,165,13],[178,17,165,15],[179,8,166,6,"console"],[179,15,166,13],[179,16,166,14,"log"],[179,19,166,17],[179,20,166,18],[179,30,166,28,"zoneId"],[179,36,166,34],[179,48,166,46],[179,49,166,47],[180,8,167,6],[180,15,167,13],[180,20,167,18],[181,6,168,4],[182,6,170,4],[182,10,170,10,"level"],[182,15,170,15],[182,18,170,18,"zone"],[182,22,170,22],[182,23,170,23,"levels"],[182,29,170,29],[182,30,170,30,"levelNumber"],[182,41,170,41],[182,44,170,44],[182,45,170,45],[182,46,170,46],[183,6,171,4],[183,10,171,8],[183,11,171,9,"level"],[183,16,171,14],[183,18,171,16],[184,8,172,6,"console"],[184,15,172,13],[184,16,172,14,"log"],[184,19,172,17],[184,20,172,18],[184,30,172,28,"zoneId"],[184,36,172,34],[184,46,172,44,"levelNumber"],[184,57,172,55],[184,69,172,67],[184,70,172,68],[185,8,173,6],[185,15,173,13],[185,20,173,18],[186,6,174,4],[187,6,176,4,"console"],[187,13,176,11],[187,14,176,12,"log"],[187,17,176,15],[187,18,176,16],[187,68,176,66,"zoneId"],[187,74,176,72],[187,84,176,82,"levelNumber"],[187,95,176,93],[187,100,176,98,"zone"],[187,104,176,102],[187,105,176,103,"name"],[187,109,176,107],[187,112,176,110],[187,113,176,111],[188,6,177,4,"console"],[188,13,177,11],[188,14,177,12,"log"],[188,17,177,15],[188,18,177,16],[188,44,177,42,"currentZone"],[188,55,177,53],[188,57,177,55,"id"],[188,59,177,57],[188,77,177,75,"currentZoneLevel"],[188,93,177,91],[188,95,177,93,"level"],[188,100,177,98],[188,102,177,100],[188,103,177,101],[189,6,179,4,"setCurrentZone"],[189,20,179,18],[189,21,179,19,"zone"],[189,25,179,23],[189,26,179,24],[190,6,180,4,"setCurrentZoneLevel"],[190,25,180,23],[190,26,180,24,"level"],[190,31,180,29],[190,32,180,30],[191,6,182,4,"console"],[191,13,182,11],[191,14,182,12,"log"],[191,17,182,15],[191,18,182,16],[191,45,182,43,"zoneId"],[191,51,182,49],[191,61,182,59,"levelNumber"],[191,72,182,70],[191,110,182,108],[191,111,182,109],[192,6,183,4],[192,13,183,11],[192,17,183,15],[193,4,184,2],[193,5,184,3],[195,4,186,2],[196,4,187,2],[196,8,187,8,"getZoneProgress"],[196,23,187,23],[196,26,187,27,"zoneId"],[196,32,187,41],[196,36,187,67],[197,6,188,4],[197,13,188,11,"zoneProgress"],[197,25,188,23],[197,26,188,24,"zoneId"],[197,32,188,30],[197,33,188,31],[197,37,188,35],[197,41,188,39],[198,4,189,2],[198,5,189,3],[200,4,191,2],[201,4,192,2],[201,8,192,8,"spawnZoneEnemy"],[201,22,192,22],[201,25,192,25,"spawnZoneEnemy"],[201,26,192,25],[201,31,192,52],[202,6,193,4],[202,10,193,8],[202,11,193,9,"currentZone"],[202,22,193,20],[202,26,193,24],[202,27,193,25,"currentZoneLevel"],[202,43,193,41],[202,45,193,43],[203,8,194,6,"console"],[203,15,194,13],[203,16,194,14,"log"],[203,19,194,17],[203,20,194,18],[203,65,194,63],[203,66,194,64],[204,8,195,6],[204,15,195,13],[204,19,195,17],[205,6,196,4],[207,6,198,4],[208,6,199,4],[208,10,199,10,"enemyTypeIds"],[208,22,199,22],[208,25,199,25,"currentZoneLevel"],[208,41,199,41],[208,42,199,42,"enemyTypes"],[208,52,199,52],[209,6,200,4],[209,10,200,10,"randomEnemyTypeId"],[209,27,200,27],[209,30,200,30,"enemyTypeIds"],[209,42,200,42],[209,43,200,43,"Math"],[209,47,200,47],[209,48,200,48,"floor"],[209,53,200,53],[209,54,200,54,"Math"],[209,58,200,58],[209,59,200,59,"random"],[209,65,200,65],[209,66,200,66],[209,67,200,67],[209,70,200,70,"enemyTypeIds"],[209,82,200,82],[209,83,200,83,"length"],[209,89,200,89],[209,90,200,90],[209,91,200,91],[210,6,201,4],[210,10,201,10,"enemyType"],[210,19,201,19],[210,22,201,22,"ENEMY_TYPES"],[210,35,201,33],[210,36,201,33,"ENEMY_TYPES"],[210,47,201,33],[210,48,201,34,"randomEnemyTypeId"],[210,65,201,51],[210,66,201,52],[211,6,203,4],[211,10,203,8],[211,11,203,9,"enemyType"],[211,20,203,18],[211,22,203,20],[212,8,204,6,"console"],[212,15,204,13],[212,16,204,14,"log"],[212,19,204,17],[212,20,204,18],[212,36,204,34,"randomEnemyTypeId"],[212,53,204,51],[212,65,204,63],[212,66,204,64],[213,8,205,6],[213,15,205,13],[213,19,205,17],[214,6,206,4],[216,6,208,4],[217,6,209,4],[217,10,209,10,"scaledStats"],[217,21,209,21],[217,24,209,24],[217,28,209,24,"calculateEnemyStats"],[217,41,209,43],[217,42,209,43,"calculateEnemyStats"],[217,61,209,43],[217,63,209,44,"enemyType"],[217,72,209,53],[217,74,209,55,"currentZoneLevel"],[217,90,209,71],[217,92,209,73,"currentZone"],[217,103,209,84],[217,104,209,85,"id"],[217,106,209,87],[217,107,209,88],[219,6,211,4],[220,6,212,4],[220,10,212,10,"enemy"],[220,15,212,29],[220,18,212,32],[221,8,213,6,"id"],[221,10,213,8],[221,12,213,10],[221,15,213,13,"randomEnemyTypeId"],[221,32,213,30],[221,36,213,34,"Date"],[221,40,213,38],[221,41,213,39,"now"],[221,44,213,42],[221,45,213,43],[221,46,213,44],[221,50,213,48,"Math"],[221,54,213,52],[221,55,213,53,"random"],[221,61,213,59],[221,62,213,60],[221,63,213,61],[221,65,213,63],[222,8,214,6,"typeId"],[222,14,214,12],[222,16,214,14,"randomEnemyTypeId"],[222,33,214,31],[223,8,215,6,"name"],[223,12,215,10],[223,14,215,12,"enemyType"],[223,23,215,21],[223,24,215,22,"name"],[223,28,215,26],[224,8,216,6,"icon"],[224,12,216,10],[224,14,216,12,"enemyType"],[224,23,216,21],[224,24,216,22,"icon"],[224,28,216,26],[225,8,217,6,"hp"],[225,10,217,8],[225,12,217,10,"scaledStats"],[225,23,217,21],[225,24,217,22,"hp"],[225,26,217,24],[226,8,218,6,"maxHP"],[226,13,218,11],[226,15,218,13,"scaledStats"],[226,26,218,24],[226,27,218,25,"hp"],[226,29,218,27],[227,8,219,6,"attack"],[227,14,219,12],[227,16,219,14,"scaledStats"],[227,27,219,25],[227,28,219,26,"attack"],[227,34,219,32],[228,8,220,6,"xp"],[228,10,220,8],[228,12,220,10,"scaledStats"],[228,23,220,21],[228,24,220,22,"xp"],[228,26,220,24],[229,8,221,6,"resistances"],[229,19,221,17],[229,21,221,19,"scaledStats"],[229,32,221,30],[229,33,221,31,"resistances"],[229,44,221,42],[230,8,222,6,"position"],[230,16,222,14],[230,18,222,16],[231,10,223,8,"x"],[231,11,223,9],[231,13,223,11,"Math"],[231,17,223,15],[231,18,223,16,"random"],[231,24,223,22],[231,25,223,23],[231,26,223,24],[231,29,223,27],[231,32,223,30],[231,35,223,33],[231,37,223,35],[232,10,223,37],[233,10,224,8,"y"],[233,11,224,9],[233,13,224,11,"Math"],[233,17,224,15],[233,18,224,16,"random"],[233,24,224,22],[233,25,224,23],[233,26,224,24],[233,29,224,27],[233,32,224,30],[233,35,224,33],[234,8,225,6],[234,9,225,7],[235,8,226,6,"lastDamaged"],[235,19,226,17],[235,21,226,19],[236,6,227,4],[236,7,227,5],[237,6,229,4,"console"],[237,13,229,11],[237,14,229,12,"log"],[237,17,229,15],[237,18,229,16],[237,32,229,30,"enemy"],[237,37,229,35],[237,38,229,36,"name"],[237,42,229,40],[237,47,229,45,"enemy"],[237,52,229,50],[237,53,229,51,"hp"],[237,55,229,53],[237,63,229,61,"enemy"],[237,68,229,66],[237,69,229,67,"xp"],[237,71,229,69],[237,82,229,80,"currentZone"],[237,93,229,91],[237,94,229,92,"name"],[237,98,229,96],[237,100,229,98],[237,101,229,99],[238,6,230,4],[238,13,230,11,"enemy"],[238,18,230,16],[239,4,231,2],[239,5,231,3],[241,4,233,2],[242,4,234,2],[242,8,234,8,"recordEnemyKill"],[242,23,234,23],[242,26,234,27,"enemy"],[242,31,234,46],[242,35,234,51],[243,6,235,4],[243,10,235,8],[243,11,235,9,"currentZone"],[243,22,235,20],[243,26,235,24],[243,27,235,25,"currentZoneLevel"],[243,43,235,41],[243,45,235,43],[244,6,237,4,"console"],[244,13,237,11],[244,14,237,12,"log"],[244,17,237,15],[244,18,237,16],[244,24,237,22,"enemy"],[244,29,237,27],[244,30,237,28,"name"],[244,34,237,32],[244,47,237,45,"enemy"],[244,52,237,50],[244,53,237,51,"xp"],[244,55,237,53],[244,60,237,58],[244,61,237,59],[245,6,238,4,"console"],[245,13,238,11],[245,14,238,12,"log"],[245,17,238,15],[245,18,238,16],[245,72,238,70,"currentZone"],[245,83,238,81],[245,84,238,82,"id"],[245,86,238,84],[245,96,238,94,"currentZoneLevel"],[245,112,238,110],[245,113,238,111,"level"],[245,118,238,116],[245,120,238,118],[245,121,238,119],[246,6,240,4,"setZoneProgress"],[246,21,240,19],[246,22,240,20,"prev"],[246,26,240,24],[246,30,240,28],[247,8,241,6],[247,12,241,12,"newProgress"],[247,23,241,23],[247,26,241,26],[248,10,241,28],[248,13,241,31,"prev"],[249,8,241,36],[249,9,241,37],[250,8,242,6],[250,12,242,12,"zoneId"],[250,18,242,18],[250,21,242,21,"currentZone"],[250,32,242,32],[250,33,242,33,"id"],[250,35,242,35],[251,8,244,6],[251,12,244,10],[251,13,244,11,"newProgress"],[251,24,244,22],[251,25,244,23,"zoneId"],[251,31,244,29],[251,32,244,30],[251,34,244,32],[252,10,245,8,"newProgress"],[252,21,245,19],[252,22,245,20,"zoneId"],[252,28,245,26],[252,29,245,27],[252,32,245,30],[253,12,246,10,"zoneId"],[253,18,246,16],[254,12,247,10,"currentLevel"],[254,24,247,22],[254,26,247,24],[254,27,247,25],[255,12,248,10,"killsInLevel"],[255,24,248,22],[255,26,248,24],[255,27,248,25],[256,12,249,10,"completed"],[256,21,249,19],[256,23,249,21],[257,10,250,8],[257,11,250,9],[258,8,251,6],[259,8,253,6],[259,12,253,12,"progress"],[259,20,253,20],[259,23,253,23],[260,10,253,25],[260,13,253,28,"newProgress"],[260,24,253,39],[260,25,253,40,"zoneId"],[260,31,253,46],[261,8,253,48],[261,9,253,49],[263,8,255,6],[264,8,256,6],[264,12,256,12,"currentZoneLevel"],[264,28,256,28],[264,31,256,31,"currentZone"],[264,42,256,42],[264,43,256,43,"levels"],[264,49,256,49],[264,50,256,50,"progress"],[264,58,256,58],[264,59,256,59,"currentLevel"],[264,71,256,71],[264,74,256,74],[264,75,256,75],[264,76,256,76],[265,8,257,6],[265,12,257,12,"requiredKills"],[265,25,257,25],[265,28,257,28,"currentZoneLevel"],[265,44,257,44],[265,47,257,47,"currentZoneLevel"],[265,63,257,63],[265,64,257,64,"requiredKills"],[265,77,257,77],[265,80,257,80,"calculateKillRequirement"],[265,104,257,104],[265,105,257,105,"zoneId"],[265,111,257,111],[265,113,257,113,"progress"],[265,121,257,121],[265,122,257,122,"currentLevel"],[265,134,257,134],[265,135,257,135],[267,8,259,6],[268,8,260,6],[268,12,260,12,"willCompleteLevel"],[268,29,260,29],[268,32,260,33,"progress"],[268,40,260,41],[268,41,260,42,"killsInLevel"],[268,53,260,54],[268,56,260,57],[268,57,260,58],[268,61,260,63,"requiredKills"],[268,74,260,76],[269,8,262,6],[269,12,262,10,"willCompleteLevel"],[269,29,262,27],[269,31,262,29],[270,10,263,8,"console"],[270,17,263,15],[270,18,263,16,"log"],[270,21,263,19],[270,22,263,20],[270,34,263,32,"progress"],[270,42,263,40],[270,43,263,41,"currentLevel"],[270,55,263,53],[270,72,263,70,"currentZone"],[270,83,263,81],[270,84,263,82,"name"],[270,88,263,86],[270,91,263,89],[270,92,263,90],[272,10,265,8],[273,10,266,8,"progress"],[273,18,266,16],[273,19,266,17,"killsInLevel"],[273,31,266,29],[273,34,266,32,"requiredKills"],[273,47,266,45],[274,10,268,8,"console"],[274,17,268,15],[274,18,268,16,"log"],[274,21,268,19],[274,22,268,20],[274,33,268,31,"zoneId"],[274,39,268,37],[274,49,268,47,"progress"],[274,57,268,55],[274,58,268,56,"currentLevel"],[274,70,268,68],[274,75,268,73,"progress"],[274,83,268,81],[274,84,268,82,"killsInLevel"],[274,96,268,94],[274,100,268,98,"requiredKills"],[274,113,268,111],[274,133,268,131],[274,134,268,132],[275,8,269,6],[275,9,269,7],[275,15,269,13],[276,10,270,8],[277,10,271,8],[277,14,271,14,"zoneKillMultiplier"],[277,32,271,32],[277,35,271,35,"gameState"],[277,44,271,44],[277,45,271,45,"subscriptionBenefits"],[277,65,271,65],[277,67,271,67,"zone_kill_multiplier"],[277,87,271,87],[277,91,271,91],[277,94,271,94],[278,10,272,8],[278,14,272,14,"killsToAdd"],[278,24,272,24],[278,27,272,27,"Math"],[278,31,272,31],[278,32,272,32,"floor"],[278,37,272,37],[278,38,272,38],[278,39,272,39],[278,42,272,42,"zoneKillMultiplier"],[278,60,272,60],[278,61,272,61],[279,10,273,8,"progress"],[279,18,273,16],[279,19,273,17,"killsInLevel"],[279,31,273,29],[279,35,273,33,"killsToAdd"],[279,45,273,43],[280,10,274,8,"console"],[280,17,274,15],[280,18,274,16,"log"],[280,21,274,19],[280,22,274,20],[280,33,274,31,"zoneId"],[280,39,274,37],[280,49,274,47,"progress"],[280,57,274,55],[280,58,274,56,"currentLevel"],[280,70,274,68],[280,75,274,73,"progress"],[280,83,274,81],[280,84,274,82,"killsInLevel"],[280,96,274,94],[280,100,274,98,"requiredKills"],[280,113,274,111],[280,125,274,123,"killsToAdd"],[280,135,274,133],[280,144,274,142,"zoneKillMultiplier"],[280,162,274,160],[280,177,274,175],[280,178,274,176],[281,8,275,6],[283,8,277,6],[284,8,278,6],[284,12,278,10,"willCompleteLevel"],[284,29,278,27],[284,31,278,29],[285,10,279,8,"console"],[285,17,279,15],[285,18,279,16,"log"],[285,21,279,19],[285,22,279,20],[285,34,279,32,"progress"],[285,42,279,40],[285,43,279,41,"currentLevel"],[285,55,279,53],[285,72,279,70,"currentZone"],[285,83,279,81],[285,84,279,82,"name"],[285,88,279,86],[285,91,279,89],[285,92,279,90],[287,10,281,8],[288,10,282,8],[288,14,282,12,"progress"],[288,22,282,20],[288,23,282,21,"currentLevel"],[288,35,282,33],[288,38,282,36],[288,39,282,37],[288,41,282,39],[289,12,283,10,"progress"],[289,20,283,18],[289,21,283,19,"currentLevel"],[289,33,283,31],[289,37,283,35],[289,38,283,36],[290,12,284,10,"progress"],[290,20,284,18],[290,21,284,19,"killsInLevel"],[290,33,284,31],[290,36,284,34],[290,37,284,35],[291,12,285,10,"console"],[291,19,285,17],[291,20,285,18,"log"],[291,23,285,21],[291,24,285,22],[291,61,285,59,"progress"],[291,69,285,67],[291,70,285,68,"currentLevel"],[291,82,285,80],[291,122,285,120],[291,123,285,121],[293,12,287,10],[294,12,288,10],[295,12,289,10],[295,16,289,16,"nextLevel"],[295,25,289,25],[295,28,289,28,"currentZone"],[295,39,289,39],[295,40,289,40,"levels"],[295,46,289,46],[295,47,289,47,"progress"],[295,55,289,55],[295,56,289,56,"currentLevel"],[295,68,289,68],[295,71,289,71],[295,72,289,72],[295,73,289,73],[296,12,290,10],[296,16,290,14,"nextLevel"],[296,25,290,23],[296,29,290,27,"currentZone"],[296,40,290,38],[296,45,290,43,"progressionZone"],[296,60,290,58],[296,62,290,60],[297,14,291,12],[298,14,292,12,"console"],[298,21,292,19],[298,22,292,20,"log"],[298,25,292,23],[298,26,292,24],[298,100,292,98],[298,101,292,99],[299,14,293,12,"setCurrentZoneLevel"],[299,33,293,31],[299,34,293,32,"nextLevel"],[299,43,293,41],[299,44,293,42],[300,14,294,12,"setProgressionZone"],[300,32,294,30],[300,33,294,31,"currentZone"],[300,44,294,42],[300,45,294,43],[300,46,294,44],[300,47,294,45],[301,12,295,10],[301,13,295,11],[301,19,295,17],[302,14,296,12,"console"],[302,21,296,19],[302,22,296,20,"log"],[302,25,296,23],[302,26,296,24],[302,104,296,102],[302,105,296,103],[303,12,297,10],[304,10,298,8],[304,11,298,9],[304,17,298,15],[305,12,299,10],[306,12,300,10,"progress"],[306,20,300,18],[306,21,300,19,"completed"],[306,30,300,28],[306,33,300,31],[306,37,300,35],[307,12,301,10,"console"],[307,19,301,17],[307,20,301,18,"log"],[307,23,301,21],[307,24,301,22],[307,35,301,33,"currentZone"],[307,46,301,44],[307,47,301,45,"name"],[307,51,301,49],[307,84,301,82],[307,85,301,83],[309,12,303,10],[310,12,304,10],[310,16,304,16,"nextZone"],[310,24,304,24],[310,27,304,27,"ZONES"],[310,40,304,32],[310,41,304,32,"ZONES"],[310,46,304,32],[310,47,304,33,"find"],[310,51,304,37],[310,52,304,38,"z"],[310,53,304,39],[310,57,304,43,"z"],[310,58,304,44],[310,59,304,45,"id"],[310,61,304,47],[310,66,304,52,"zoneId"],[310,72,304,58],[310,75,304,61],[310,76,304,62],[310,77,304,63],[311,12,305,10],[311,16,305,14,"nextZone"],[311,24,305,22],[311,26,305,24],[312,14,306,12,"console"],[312,21,306,19],[312,22,306,20,"log"],[312,25,306,23],[312,26,306,24],[312,75,306,73,"zoneId"],[312,81,306,79],[312,93,306,91,"nextZone"],[312,101,306,99],[312,102,306,100,"id"],[312,104,306,102],[312,106,306,104],[312,107,306,105],[314,14,308,12],[315,14,309,12],[315,18,309,16],[315,19,309,17,"newProgress"],[315,30,309,28],[315,31,309,29,"nextZone"],[315,39,309,37],[315,40,309,38,"id"],[315,42,309,40],[315,43,309,41],[315,45,309,43],[316,16,310,14,"newProgress"],[316,27,310,25],[316,28,310,26,"nextZone"],[316,36,310,34],[316,37,310,35,"id"],[316,39,310,37],[316,40,310,38],[316,43,310,41],[317,18,311,16,"zoneId"],[317,24,311,22],[317,26,311,24,"nextZone"],[317,34,311,32],[317,35,311,33,"id"],[317,37,311,35],[318,18,312,16,"currentLevel"],[318,30,312,28],[318,32,312,30],[318,33,312,31],[319,18,313,16,"killsInLevel"],[319,30,313,28],[319,32,313,30],[319,33,313,31],[320,18,314,16,"completed"],[320,27,314,25],[320,29,314,27],[321,16,315,14],[321,17,315,15],[322,14,316,12],[324,14,318,12],[325,14,319,12,"setTimeout"],[325,24,319,22],[325,25,319,23],[325,31,319,29],[326,16,320,14,"console"],[326,23,320,21],[326,24,320,22,"log"],[326,27,320,25],[326,28,320,26],[326,72,320,70,"nextZone"],[326,80,320,78],[326,81,320,79,"id"],[326,83,320,81],[326,93,320,91],[326,94,320,92],[327,16,321,14,"setCurrentZone"],[327,30,321,28],[327,31,321,29,"nextZone"],[327,39,321,37],[327,40,321,38],[328,16,322,14,"setCurrentZoneLevel"],[328,35,322,33],[328,36,322,34,"nextZone"],[328,44,322,42],[328,45,322,43,"levels"],[328,51,322,49],[328,52,322,50],[328,53,322,51],[328,54,322,52],[328,55,322,53],[329,16,323,14,"setProgressionZone"],[329,34,323,32],[329,35,323,33,"nextZone"],[329,43,323,41],[329,44,323,42],[330,14,324,12],[330,15,324,13],[330,17,324,15],[330,20,324,18],[330,21,324,19],[330,22,324,20],[330,23,324,21],[331,12,325,10],[331,13,325,11],[331,19,325,17],[332,14,326,12,"console"],[332,21,326,19],[332,22,326,20,"log"],[332,25,326,23],[332,26,326,24],[332,82,326,80,"zoneId"],[332,88,326,86],[332,90,326,88],[332,91,326,89],[333,12,327,10],[334,10,328,8],[335,8,329,6],[336,8,331,6,"newProgress"],[336,19,331,17],[336,20,331,18,"zoneId"],[336,26,331,24],[336,27,331,25],[336,30,331,28,"progress"],[336,38,331,36],[338,8,333,6],[339,8,334,6,"setTimeout"],[339,18,334,16],[339,19,334,17],[339,25,334,23],[340,10,335,8,"console"],[340,17,335,15],[340,18,335,16,"log"],[340,21,335,19],[340,22,335,20],[340,67,335,65],[340,69,335,67,"newProgress"],[340,80,335,78],[340,81,335,79],[341,10,336,8,"updateZoneProgress"],[341,28,336,26],[341,29,336,27,"newProgress"],[341,40,336,38],[341,41,336,39],[342,8,337,6],[342,9,337,7],[342,11,337,9],[342,12,337,10],[342,13,337,11],[342,14,337,12],[342,15,337,13],[344,8,339,6],[344,15,339,13,"newProgress"],[344,26,339,24],[345,6,340,4],[345,7,340,5],[345,8,340,6],[346,4,341,2],[346,5,341,3],[348,4,343,2],[349,4,344,2],[349,8,344,8,"isZoneUnlockedLocal"],[349,27,344,27],[349,30,344,31,"zoneId"],[349,36,344,45],[349,40,344,59],[350,6,345,4],[350,10,345,8,"zoneId"],[350,16,345,14],[350,21,345,19],[350,22,345,20],[350,24,345,22],[350,31,345,29],[350,35,345,33],[350,36,345,34],[350,37,345,35],[352,6,347,4],[352,10,347,10,"zone"],[352,14,347,14],[352,17,347,17,"ZONES"],[352,30,347,22],[352,31,347,22,"ZONES"],[352,36,347,22],[352,37,347,23,"find"],[352,41,347,27],[352,42,347,28,"z"],[352,43,347,29],[352,47,347,33,"z"],[352,48,347,34],[352,49,347,35,"id"],[352,51,347,37],[352,56,347,42,"zoneId"],[352,62,347,48],[352,63,347,49],[353,6,348,4],[353,10,348,8],[353,11,348,9,"zone"],[353,15,348,13],[353,17,348,15,"unlockRequirement"],[353,34,348,32],[353,35,348,33,"previousZone"],[353,47,348,45],[353,49,348,47],[353,56,348,54],[353,60,348,58],[354,6,350,4],[354,10,350,10,"prevZoneProgress"],[354,26,350,26],[354,29,350,29,"zoneProgress"],[354,41,350,41],[354,42,350,42,"zone"],[354,46,350,46],[354,47,350,47,"unlockRequirement"],[354,64,350,64],[354,65,350,65,"previousZone"],[354,77,350,77],[354,78,350,78],[355,6,351,4],[355,13,351,11,"prevZoneProgress"],[355,29,351,27],[355,31,351,29,"completed"],[355,40,351,38],[355,44,351,42],[355,49,351,47],[356,4,352,2],[356,5,352,3],[358,4,354,2],[359,4,355,2],[359,8,355,8,"getUnlockedZones"],[359,24,355,24],[359,27,355,27,"getUnlockedZones"],[359,28,355,27],[359,33,355,41],[360,6,356,4],[360,13,356,11,"ZONES"],[360,26,356,16],[360,27,356,16,"ZONES"],[360,32,356,16],[360,33,356,17,"filter"],[360,39,356,23],[360,40,356,24,"zone"],[360,44,356,28],[360,48,356,32,"isZoneUnlockedLocal"],[360,67,356,51],[360,68,356,52,"zone"],[360,72,356,56],[360,73,356,57,"id"],[360,75,356,59],[360,76,356,60],[360,77,356,61],[361,4,357,2],[361,5,357,3],[362,4,359,2],[362,8,359,8,"contextValue"],[362,20,359,37],[362,23,359,40,"React"],[362,28,359,45],[362,29,359,45,"default"],[362,36,359,45],[362,37,359,46,"useMemo"],[362,44,359,53],[362,45,359,54],[362,52,359,61],[363,6,360,4,"currentZone"],[363,17,360,15],[364,6,360,17],[365,6,361,4,"currentZoneLevel"],[365,22,361,20],[366,6,362,4,"progressionZone"],[366,21,362,19],[367,6,362,21],[368,6,363,4,"zoneProgress"],[368,18,363,16],[369,6,364,4,"availableZones"],[369,20,364,18],[369,22,364,20,"ZONES"],[369,35,364,25],[369,36,364,25,"ZONES"],[369,41,364,25],[370,6,365,4,"selectZone"],[370,16,365,14],[371,6,366,4,"getZoneProgress"],[371,21,366,19],[372,6,367,4,"spawnZoneEnemy"],[372,20,367,18],[373,6,368,4,"recordEnemyKill"],[373,21,368,19],[374,6,369,4,"isZoneUnlocked"],[374,20,369,18],[374,22,369,20,"isZoneUnlockedLocal"],[374,41,369,39],[375,6,370,4,"getUnlockedZones"],[376,4,371,2],[376,5,371,3],[376,6,371,4],[376,8,371,6],[376,9,372,4,"currentZone"],[376,20,372,15],[376,22,373,4,"currentZoneLevel"],[376,38,373,20],[376,40,374,4,"progressionZone"],[376,55,374,19],[376,57,375,4,"zoneProgress"],[376,69,375,16],[376,71,376,4,"selectZone"],[376,81,376,14],[376,83,377,4,"getZoneProgress"],[376,98,377,19],[376,100,378,4,"spawnZoneEnemy"],[376,114,378,18],[376,116,379,4,"recordEnemyKill"],[376,131,379,19],[376,133,380,4,"isZoneUnlockedLocal"],[376,152,380,23],[376,154,381,4,"getUnlockedZones"],[376,170,381,20],[376,171,382,3],[376,172,382,4],[377,4,384,2],[377,24,385,4],[377,28,385,4,"_reactJsxDevRuntime"],[377,47,385,4],[377,48,385,4,"jsxDEV"],[377,54,385,4],[377,56,385,5,"ZoneContext"],[377,67,385,16],[377,68,385,17,"Provider"],[377,76,385,25],[378,6,385,26,"value"],[378,11,385,31],[378,13,385,33,"contextValue"],[378,25,385,46],[379,6,385,46,"children"],[379,14,385,46],[379,16,386,7,"children"],[380,4,386,15],[381,6,386,15,"fileName"],[381,14,386,15],[381,16,386,15,"_jsxFileName"],[381,28,386,15],[382,6,386,15,"lineNumber"],[382,16,386,15],[383,6,386,15,"columnNumber"],[383,18,386,15],[384,4,386,15],[384,11,387,26],[384,12,387,27],[385,2,389,0],[385,3,389,1],[386,2,389,2,"_s2"],[386,5,389,2],[386,6,65,13,"ZoneProvider"],[386,18,65,25],[387,4,65,25],[387,12,66,44,"useGame"],[387,24,66,51],[387,25,66,51,"useGame"],[387,32,66,51],[388,2,66,51],[389,2,66,51,"_c"],[389,4,66,51],[389,7,65,13,"ZoneProvider"],[389,19,65,25],[390,2,65,25],[390,6,65,25,"_c"],[390,8,65,25],[391,2,65,25,"$RefreshReg$"],[391,14,65,25],[391,15,65,25,"_c"],[391,17,65,25],[392,0,65,25],[392,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","ZONES.find$argument_0","selectZone","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE6C;CFM;4BGE;8DCI;GDG;6ECC;GDG;sECC;GDG;iFCE;GDU;YEG;kCCY,6BD;kCC2B,6BD;GFU;YEG;GFQ;qBIG;4BDM,oBC;GJoB;0BKG;GLE;yBMG;GNuC;0BOG;oBCM;sCLgE,wBK;uBCe;aDK;iBCU;ODG;KDG;GPC;8BUG;4BPG,oBO;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbY;CHkB"},"hasCjsExports":false},"type":"js/module"}]}