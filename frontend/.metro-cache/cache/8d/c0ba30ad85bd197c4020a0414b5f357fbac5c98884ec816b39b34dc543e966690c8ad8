{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(); // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState,\n      updateZoneProgress = _useGame.updateZoneProgress;\n\n    // Zone State - Separate \"progression\" from \"currently selected\" zones\n    var _useState = (0, _react.useState)(() => {\n        console.log('üéØ ZONE INIT: Initializing currentZone (selected zone) to Zone 1 Level 1');\n        return _dataZoneData.ZONES[0];\n      }),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1]; // Currently selected zone for gameplay\n    var _useState3 = (0, _react.useState)(() => {\n        console.log('üéØ ZONE INIT: Initializing currentZoneLevel to Zone 1 Level 1');\n        return _dataZoneData.ZONES[0]?.levels[0] || null;\n      }),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)(() => {\n        console.log('üéØ ZONE INIT: Initializing progressionZone (unlock progress) to Zone 1');\n        return _dataZoneData.ZONES[0];\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      progressionZone = _useState6[0],\n      setProgressionZone = _useState6[1]; // Highest unlocked zone for progression\n    var _useState7 = (0, _react.useState)(() => {\n        // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n        var savedProgress = gameState?.zoneProgress;\n        if (savedProgress && Object.keys(savedProgress).length > 0) {\n          console.log('üó∫Ô∏è Loading saved zone progress:', savedProgress);\n          return savedProgress;\n        } else {\n          console.log('üó∫Ô∏è No saved zone progress, using defaults');\n          return {\n            1: {\n              zoneId: 1,\n              currentLevel: 1,\n              killsInLevel: 0,\n              completed: false\n            }\n          };\n        }\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      zoneProgress = _useState8[0],\n      setZoneProgress = _useState8[1];\n\n    // Initialize with game context data when it becomes available\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress) {\n        console.log('üîÑ ZONE CONTEXT - Loading zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n\n        // Find the highest unlocked zone for progression tracking\n        var progressEntries = Object.values(gameState.zoneProgress || {});\n        var highestZone = _dataZoneData.ZONES[0];\n        var highestLevel = _dataZoneData.ZONES[0]?.levels[0];\n        var _loop = function (progress) {\n          if (progress && progress.zoneId) {\n            var zone = _dataZoneData.ZONES.find(z => z.id === progress.zoneId);\n            if (zone) {\n              highestZone = zone;\n              highestLevel = zone.levels[(progress.currentLevel || 1) - 1];\n            }\n          }\n        };\n        for (var progress of progressEntries) {\n          _loop(progress);\n        }\n        console.log(`üéØ PROGRESSION ZONE SET: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (highest unlocked)`);\n        setProgressionZone(highestZone);\n\n        // Set current selected zone to progression zone initially  \n        console.log(`üéØ SELECTED ZONE INITIALIZED: Zone ${highestZone.id} Level ${highestLevel?.level || 1} (matching progression)`);\n        setCurrentZone(highestZone);\n        setCurrentZoneLevel(highestLevel || _dataZoneData.ZONES[0]?.levels[0]);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Zone selection and management - separate from progression\n    var selectZone = (zoneId, levelNumber) => {\n      if (!isZoneUnlockedLocal(zoneId)) {\n        console.log(`‚ùå Zone ${zoneId} is not unlocked`);\n        return false;\n      }\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone) {\n        console.log(`‚ùå Zone ${zoneId} not found`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`‚ùå Zone ${zoneId} Level ${levelNumber} not found`);\n        return false;\n      }\n      console.log(`üéØ ZONE SELECTION: Setting currentZone to Zone ${zoneId} Level ${levelNumber} (${zone.name})`);\n      console.log(`üìç BEFORE: currentZone=${currentZone?.id}, currentLevel=${currentZoneLevel?.level}`);\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`üìç AFTER: Selected Zone ${zoneId} Level ${levelNumber} - Kills will count toward this zone`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('‚ùå No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`‚ùå Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`üê∫ Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`üíÄ ${enemy.name} killed! +${enemy.xp} XP`);\n      console.log(`üéØ KILL TRACKING: Recording kill for SELECTED Zone ${currentZone.id} Level ${currentZoneLevel.level}`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n\n        // Get the required kills for current level from zone data\n        var currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        var requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        var willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`üéâ Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`üìä Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment\n          progress.killsInLevel += 1;\n          console.log(`üìä Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`üéâ Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`‚¨ÜÔ∏è PROGRESSION: Advanced to Level ${progress.currentLevel} (player can still select other zones)`);\n\n            // Update progression zone but DON'T auto-select next level\n            // Player keeps their current selection unless they manually change it\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel && currentZone === progressionZone) {\n              // Only auto-advance if player is currently on the progression zone\n              console.log(`üéØ AUTO-ADVANCE: Player was on progression zone, advancing to next level`);\n              setCurrentZoneLevel(nextLevel);\n              setProgressionZone(currentZone); // Update progression zone\n            } else {\n              console.log(`üéØ SELECTION PRESERVED: Player selected different zone, keeping their choice`);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`üèÜ Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`üíæ Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      // Currently selected zone for gameplay\n      currentZoneLevel,\n      progressionZone,\n      // Highest unlocked zone for progression\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, progressionZone, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"NpNqhN7dxEQakwzs4FMu823gqFI=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":338,"map":[[6,26,5,0],[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"value"],[8,9,5,0],[9,2,5,0],[10,2,5,0],[10,11,5,0,"_interopDefault"],[10,27,5,0,"e"],[10,28,5,0],[11,4,5,0],[11,11,5,0,"e"],[11,12,5,0],[11,16,5,0,"e"],[11,17,5,0],[11,18,5,0,"__esModule"],[11,28,5,0],[11,31,5,0,"e"],[11,32,5,0],[12,6,5,0,"default"],[12,13,5,0],[12,15,5,0,"e"],[13,4,5,0],[14,2,5,0],[15,2,57,0,"Object"],[15,8,57,0],[15,9,57,0,"defineProperty"],[15,23,57,0],[15,24,57,0,"exports"],[15,31,57,0],[16,4,57,0,"enumerable"],[16,14,57,0],[17,4,57,0,"get"],[17,7,57,0],[17,18,57,0,"get"],[17,19,57,0],[18,6,57,0],[18,13,57,0,"useZone"],[18,20,57,0],[19,4,57,0],[20,2,57,0],[21,2,65,0,"Object"],[21,8,65,0],[21,9,65,0,"defineProperty"],[21,23,65,0],[21,24,65,0,"exports"],[21,31,65,0],[22,4,65,0,"enumerable"],[22,14,65,0],[23,4,65,0,"get"],[23,7,65,0],[23,18,65,0,"get"],[23,19,65,0],[24,6,65,0],[24,13,65,0,"ZoneProvider"],[24,25,65,0],[25,4,65,0],[26,2,65,0],[27,2,339,2],[27,6,339,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,339,2],[27,42,339,2,"require"],[27,49,339,2],[27,50,339,2,"_dependencyMap"],[27,64,339,2],[28,2,339,2],[28,6,339,2,"_slicedToArray"],[28,20,339,2],[28,23,339,2,"_interopDefault"],[28,38,339,2],[28,39,339,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,339,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,6,0],[34,6,6,6,"calculateKillRequirement"],[34,30,6,30],[34,33,6,33,"calculateKillRequirement"],[34,34,6,34,"zoneId"],[34,40,6,48],[34,42,6,50,"level"],[34,47,6,63],[34,52,6,76],[35,4,7,2],[35,8,7,6,"zoneId"],[35,14,7,12],[35,18,7,16],[35,19,7,17],[35,21,7,19],[35,28,7,26],[35,30,7,28],[35,33,7,32,"level"],[35,38,7,37],[35,41,7,40],[35,42,7,42],[35,43,7,43],[35,44,7,49],[36,4,8,2],[36,8,8,6,"zoneId"],[36,14,8,12],[36,18,8,16],[36,20,8,18],[36,22,8,20],[36,29,8,27],[36,31,8,29],[36,34,8,33,"level"],[36,39,8,38],[36,42,8,41],[36,44,8,44],[36,45,8,45],[36,46,8,50],[37,4,9,2],[37,8,9,6,"zoneId"],[37,14,9,12],[37,18,9,16],[37,20,9,18],[37,22,9,20],[37,29,9,27],[37,31,9,29],[37,34,9,33,"level"],[37,39,9,38],[37,42,9,41],[37,44,9,44],[37,45,9,45],[37,46,9,50],[38,4,10,2],[38,8,10,6,"zoneId"],[38,14,10,12],[38,18,10,16],[38,20,10,18],[38,22,10,20],[38,29,10,27],[38,32,10,30],[38,35,10,34,"level"],[38,40,10,39],[38,43,10,42],[38,45,10,45],[38,46,10,46],[38,47,10,50],[39,4,11,2],[39,11,11,9],[39,14,11,12],[39,17,11,16,"level"],[39,22,11,21],[39,25,11,24],[39,27,11,27],[39,28,11,28],[39,29,11,50],[40,2,12,0],[40,3,12,1],[41,2,55,0],[41,6,55,6,"ZoneContext"],[41,17,55,17],[41,33,55,20],[41,37,55,20,"createContext"],[41,43,55,33],[41,44,55,33,"createContext"],[41,57,55,33],[41,59,55,63,"undefined"],[41,68,55,72],[41,69,55,73],[42,2,57,7],[42,6,57,13,"useZone"],[42,13,57,20],[42,16,57,23,"useZone"],[42,17,57,23],[42,22,57,29],[43,4,57,29,"_s"],[43,6,57,29],[44,4,58,2],[44,8,58,8,"context"],[44,15,58,15],[44,18,58,18],[44,22,58,18,"useContext"],[44,28,58,28],[44,29,58,28,"useContext"],[44,39,58,28],[44,41,58,29,"ZoneContext"],[44,52,58,40],[44,53,58,41],[45,4,59,2],[45,8,59,6],[45,9,59,7,"context"],[45,16,59,14],[45,18,59,16],[46,6,60,4],[46,12,60,10],[46,16,60,14,"Error"],[46,21,60,19],[46,22,60,20],[46,66,60,64],[46,67,60,65],[47,4,61,2],[48,4,62,2],[48,11,62,9,"context"],[48,18,62,16],[49,2,63,0],[49,3,63,1],[50,2,63,2,"_s"],[50,4,63,2],[50,5,57,13,"useZone"],[50,12,57,20],[51,2,65,7],[51,6,65,13,"ZoneProvider"],[51,18,65,25],[51,21,65,28,"_ref"],[51,25,65,28],[51,29,65,71],[52,4,65,71,"_s2"],[52,7,65,71],[53,4,65,71],[53,8,65,31,"children"],[53,16,65,39],[53,19,65,39,"_ref"],[53,23,65,39],[53,24,65,31,"children"],[53,32,65,39],[54,4,66,2],[54,8,66,2,"_useGame"],[54,16,66,2],[54,19,66,44],[54,23,66,44,"useGame"],[54,35,66,51],[54,36,66,51,"useGame"],[54,43,66,51],[54,45,66,52],[54,46,66,53],[55,6,66,10,"gameState"],[55,15,66,19],[55,18,66,19,"_useGame"],[55,26,66,19],[55,27,66,10,"gameState"],[55,36,66,19],[56,6,66,21,"updateZoneProgress"],[56,24,66,39],[56,27,66,39,"_useGame"],[56,35,66,39],[56,36,66,21,"updateZoneProgress"],[56,54,66,39],[58,4,68,2],[59,4,69,2],[59,8,69,2,"_useState"],[59,17,69,2],[59,20,69,40],[59,24,69,40,"useState"],[59,30,69,48],[59,31,69,48,"useState"],[59,39,69,48],[59,41,69,62],[59,47,69,68],[60,8,70,4,"console"],[60,15,70,11],[60,16,70,12,"log"],[60,19,70,15],[60,20,70,16],[60,94,70,90],[60,95,70,91],[61,8,71,4],[61,15,71,11,"ZONES"],[61,28,71,16],[61,29,71,16,"ZONES"],[61,34,71,16],[61,35,71,17],[61,36,71,18],[61,37,71,19],[62,6,72,2],[62,7,72,3],[62,8,72,4],[63,6,72,4,"_useState2"],[63,16,72,4],[63,23,72,4,"_slicedToArray"],[63,37,72,4],[63,38,72,4,"default"],[63,45,72,4],[63,47,72,4,"_useState"],[63,56,72,4],[64,6,69,9,"currentZone"],[64,17,69,20],[64,20,69,20,"_useState2"],[64,30,69,20],[65,6,69,22,"setCurrentZone"],[65,20,69,36],[65,23,69,36,"_useState2"],[65,33,69,36],[65,37,72,5],[65,38,72,6],[66,4,73,2],[66,8,73,2,"_useState3"],[66,18,73,2],[66,21,73,50],[66,25,73,50,"useState"],[66,31,73,58],[66,32,73,58,"useState"],[66,40,73,58],[66,42,73,77],[66,48,73,83],[67,8,74,4,"console"],[67,15,74,11],[67,16,74,12,"log"],[67,19,74,15],[67,20,74,16],[67,83,74,79],[67,84,74,80],[68,8,75,4],[68,15,75,11,"ZONES"],[68,28,75,16],[68,29,75,16,"ZONES"],[68,34,75,16],[68,35,75,17],[68,36,75,18],[68,37,75,19],[68,39,75,21,"levels"],[68,45,75,27],[68,46,75,28],[68,47,75,29],[68,48,75,30],[68,52,75,34],[68,56,75,38],[69,6,76,2],[69,7,76,3],[69,8,76,4],[70,6,76,4,"_useState4"],[70,16,76,4],[70,23,76,4,"_slicedToArray"],[70,37,76,4],[70,38,76,4,"default"],[70,45,76,4],[70,47,76,4,"_useState3"],[70,57,76,4],[71,6,73,9,"currentZoneLevel"],[71,22,73,25],[71,25,73,25,"_useState4"],[71,35,73,25],[72,6,73,27,"setCurrentZoneLevel"],[72,25,73,46],[72,28,73,46,"_useState4"],[72,38,73,46],[73,4,77,2],[73,8,77,2,"_useState5"],[73,18,77,2],[73,21,77,48],[73,25,77,48,"useState"],[73,31,77,56],[73,32,77,56,"useState"],[73,40,77,56],[73,42,77,70],[73,48,77,76],[74,8,78,4,"console"],[74,15,78,11],[74,16,78,12,"log"],[74,19,78,15],[74,20,78,16],[74,92,78,88],[74,93,78,89],[75,8,79,4],[75,15,79,11,"ZONES"],[75,28,79,16],[75,29,79,16,"ZONES"],[75,34,79,16],[75,35,79,17],[75,36,79,18],[75,37,79,19],[76,6,80,2],[76,7,80,3],[76,8,80,4],[77,6,80,4,"_useState6"],[77,16,80,4],[77,23,80,4,"_slicedToArray"],[77,37,80,4],[77,38,80,4,"default"],[77,45,80,4],[77,47,80,4,"_useState5"],[77,57,80,4],[78,6,77,9,"progressionZone"],[78,21,77,24],[78,24,77,24,"_useState6"],[78,34,77,24],[79,6,77,26,"setProgressionZone"],[79,24,77,44],[79,27,77,44,"_useState6"],[79,37,77,44],[79,41,80,5],[79,42,80,6],[80,4,81,2],[80,8,81,2,"_useState7"],[80,18,81,2],[80,21,81,42],[80,25,81,42,"useState"],[80,31,81,50],[80,32,81,50,"useState"],[80,40,81,50],[80,42,81,81],[80,48,81,87],[81,8,82,4],[82,8,83,4],[82,12,83,10,"savedProgress"],[82,25,83,23],[82,28,83,26,"gameState"],[82,37,83,35],[82,39,83,37,"zoneProgress"],[82,51,83,49],[83,8,84,4],[83,12,84,8,"savedProgress"],[83,25,84,21],[83,29,84,25,"Object"],[83,35,84,31],[83,36,84,32,"keys"],[83,40,84,36],[83,41,84,37,"savedProgress"],[83,54,84,50],[83,55,84,51],[83,56,84,52,"length"],[83,62,84,58],[83,65,84,61],[83,66,84,62],[83,68,84,64],[84,10,85,6,"console"],[84,17,85,13],[84,18,85,14,"log"],[84,21,85,17],[84,22,85,18],[84,56,85,52],[84,58,85,54,"savedProgress"],[84,71,85,67],[84,72,85,68],[85,10,86,6],[85,17,86,13,"savedProgress"],[85,30,86,26],[86,8,87,4],[86,9,87,5],[86,15,87,11],[87,10,88,6,"console"],[87,17,88,13],[87,18,88,14,"log"],[87,21,88,17],[87,22,88,18],[87,66,88,62],[87,67,88,63],[88,10,89,6],[88,17,89,13],[89,12,89,15],[89,13,89,16],[89,15,89,18],[90,14,89,20,"zoneId"],[90,20,89,26],[90,22,89,28],[90,23,89,29],[91,14,89,31,"currentLevel"],[91,26,89,43],[91,28,89,45],[91,29,89,46],[92,14,89,48,"killsInLevel"],[92,26,89,60],[92,28,89,62],[92,29,89,63],[93,14,89,65,"completed"],[93,23,89,74],[93,25,89,76],[94,12,89,82],[95,10,89,84],[95,11,89,85],[96,8,90,4],[97,6,91,2],[97,7,91,3],[97,8,91,4],[98,6,91,4,"_useState8"],[98,16,91,4],[98,23,91,4,"_slicedToArray"],[98,37,91,4],[98,38,91,4,"default"],[98,45,91,4],[98,47,91,4,"_useState7"],[98,57,91,4],[99,6,81,9,"zoneProgress"],[99,18,81,21],[99,21,81,21,"_useState8"],[99,31,81,21],[100,6,81,23,"setZoneProgress"],[100,21,81,38],[100,24,81,38,"_useState8"],[100,34,81,38],[102,4,93,2],[103,4,94,2],[103,8,94,2,"useEffect"],[103,14,94,11],[103,15,94,11,"useEffect"],[103,24,94,11],[103,26,94,12],[103,32,94,18],[104,6,95,4],[104,10,95,8,"gameState"],[104,19,95,17],[104,21,95,19,"zoneProgress"],[104,33,95,31],[104,35,95,33],[105,8,96,6,"console"],[105,15,96,13],[105,16,96,14,"log"],[105,19,96,17],[105,20,96,18],[105,79,96,77],[105,81,96,79,"gameState"],[105,90,96,88],[105,91,96,89,"zoneProgress"],[105,103,96,101],[105,104,96,102],[106,8,97,6,"setZoneProgress"],[106,23,97,21],[106,24,97,22,"gameState"],[106,33,97,31],[106,34,97,32,"zoneProgress"],[106,46,97,44],[106,47,97,45],[108,8,99,6],[109,8,100,6],[109,12,100,12,"progressEntries"],[109,27,100,27],[109,30,100,30,"Object"],[109,36,100,36],[109,37,100,37,"values"],[109,43,100,43],[109,44,100,44,"gameState"],[109,53,100,53],[109,54,100,54,"zoneProgress"],[109,66,100,66],[109,70,100,70],[109,71,100,71],[109,72,100,72],[109,73,100,73],[110,8,101,6],[110,12,101,10,"highestZone"],[110,23,101,21],[110,26,101,24,"ZONES"],[110,39,101,29],[110,40,101,29,"ZONES"],[110,45,101,29],[110,46,101,30],[110,47,101,31],[110,48,101,32],[111,8,102,6],[111,12,102,10,"highestLevel"],[111,24,102,22],[111,27,102,25,"ZONES"],[111,40,102,30],[111,41,102,30,"ZONES"],[111,46,102,30],[111,47,102,31],[111,48,102,32],[111,49,102,33],[111,51,102,35,"levels"],[111,57,102,41],[111,58,102,42],[111,59,102,43],[111,60,102,44],[112,8,102,45],[112,12,102,45,"_loop"],[112,17,102,45],[112,29,102,45,"_loop"],[112,30,102,45,"progress"],[112,38,102,45],[112,40,104,46],[113,10,105,8],[113,14,105,12,"progress"],[113,22,105,20],[113,26,105,24,"progress"],[113,34,105,32],[113,35,105,33,"zoneId"],[113,41,105,39],[113,43,105,41],[114,12,106,10],[114,16,106,16,"zone"],[114,20,106,20],[114,23,106,23,"ZONES"],[114,36,106,28],[114,37,106,28,"ZONES"],[114,42,106,28],[114,43,106,29,"find"],[114,47,106,33],[114,48,106,34,"z"],[114,49,106,35],[114,53,106,39,"z"],[114,54,106,40],[114,55,106,41,"id"],[114,57,106,43],[114,62,106,48,"progress"],[114,70,106,56],[114,71,106,57,"zoneId"],[114,77,106,63],[114,78,106,64],[115,12,107,10],[115,16,107,14,"zone"],[115,20,107,18],[115,22,107,20],[116,14,108,12,"highestZone"],[116,25,108,23],[116,28,108,26,"zone"],[116,32,108,30],[117,14,109,12,"highestLevel"],[117,26,109,24],[117,29,109,27,"zone"],[117,33,109,31],[117,34,109,32,"levels"],[117,40,109,38],[117,41,109,39],[117,42,109,40,"progress"],[117,50,109,48],[117,51,109,49,"currentLevel"],[117,63,109,61],[117,67,109,65],[117,68,109,66],[117,72,109,70],[117,73,109,71],[117,74,109,72],[118,12,110,10],[119,10,111,8],[120,8,112,6],[120,9,112,7],[121,8,104,6],[121,13,104,11],[121,17,104,17,"progress"],[121,25,104,25],[121,29,104,29,"progressEntries"],[121,44,104,44],[122,10,104,44,"_loop"],[122,15,104,44],[122,16,104,44,"progress"],[122,24,104,44],[123,8,104,44],[124,8,114,6,"console"],[124,15,114,13],[124,16,114,14,"log"],[124,19,114,17],[124,20,114,18],[124,53,114,51,"highestZone"],[124,64,114,62],[124,65,114,63,"id"],[124,67,114,65],[124,77,114,75,"highestLevel"],[124,89,114,87],[124,91,114,89,"level"],[124,96,114,94],[124,100,114,98],[124,101,114,99],[124,122,114,120],[124,123,114,121],[125,8,115,6,"setProgressionZone"],[125,26,115,24],[125,27,115,25,"highestZone"],[125,38,115,36],[125,39,115,37],[127,8,117,6],[128,8,118,6,"console"],[128,15,118,13],[128,16,118,14,"log"],[128,19,118,17],[128,20,118,18],[128,58,118,56,"highestZone"],[128,69,118,67],[128,70,118,68,"id"],[128,72,118,70],[128,82,118,80,"highestLevel"],[128,94,118,92],[128,96,118,94,"level"],[128,101,118,99],[128,105,118,103],[128,106,118,104],[128,131,118,129],[128,132,118,130],[129,8,119,6,"setCurrentZone"],[129,22,119,20],[129,23,119,21,"highestZone"],[129,34,119,32],[129,35,119,33],[130,8,120,6,"setCurrentZoneLevel"],[130,27,120,25],[130,28,120,26,"highestLevel"],[130,40,120,38],[130,44,120,42,"ZONES"],[130,57,120,47],[130,58,120,47,"ZONES"],[130,63,120,47],[130,64,120,48],[130,65,120,49],[130,66,120,50],[130,68,120,52,"levels"],[130,74,120,58],[130,75,120,59],[130,76,120,60],[130,77,120,61],[130,78,120,62],[131,6,121,4],[132,4,122,2],[132,5,122,3],[132,7,122,5],[132,8,122,6,"gameState"],[132,17,122,15],[132,19,122,17,"zoneProgress"],[132,31,122,29],[132,32,122,30],[132,33,122,31],[134,4,124,2],[135,4,125,2],[135,8,125,2,"useEffect"],[135,14,125,11],[135,15,125,11,"useEffect"],[135,24,125,11],[135,26,125,12],[135,32,125,18],[136,6,126,4],[136,10,126,8,"gameState"],[136,19,126,17],[136,21,126,19,"ninja"],[136,26,126,24],[136,28,126,26],[137,8,127,6],[137,12,127,12,"recommendedZone"],[137,27,127,27],[137,30,127,30],[137,34,127,30,"getZoneByLevel"],[137,47,127,44],[137,48,127,44,"getZoneByLevel"],[137,62,127,44],[137,64,127,45,"gameState"],[137,73,127,54],[137,74,127,55,"ninja"],[137,79,127,60],[137,80,127,61,"level"],[137,85,127,66],[137,86,127,67],[138,8,128,6],[138,12,128,10,"recommendedZone"],[138,27,128,25],[138,31,128,29],[138,32,128,30,"currentZone"],[138,43,128,41],[138,45,128,43],[139,10,129,8,"setCurrentZone"],[139,24,129,22],[139,25,129,23,"recommendedZone"],[139,40,129,38],[139,41,129,39],[140,10,130,8,"setCurrentZoneLevel"],[140,29,130,27],[140,30,130,28,"recommendedZone"],[140,45,130,43],[140,46,130,44,"levels"],[140,52,130,50],[140,53,130,51],[140,54,130,52],[140,55,130,53],[140,56,130,54],[141,8,131,6],[142,6,132,4],[143,4,133,2],[143,5,133,3],[143,7,133,5],[143,8,133,6,"gameState"],[143,17,133,15],[143,19,133,17,"ninja"],[143,24,133,22],[143,26,133,24,"level"],[143,31,133,29],[143,32,133,30],[143,33,133,31],[145,4,135,2],[146,4,136,2],[146,8,136,8,"selectZone"],[146,18,136,18],[146,21,136,21,"selectZone"],[146,22,136,22,"zoneId"],[146,28,136,36],[146,30,136,38,"levelNumber"],[146,41,136,57],[146,46,136,71],[147,6,137,4],[147,10,137,8],[147,11,137,9,"isZoneUnlockedLocal"],[147,30,137,28],[147,31,137,29,"zoneId"],[147,37,137,35],[147,38,137,36],[147,40,137,38],[148,8,138,6,"console"],[148,15,138,13],[148,16,138,14,"log"],[148,19,138,17],[148,20,138,18],[148,30,138,28,"zoneId"],[148,36,138,34],[148,54,138,52],[148,55,138,53],[149,8,139,6],[149,15,139,13],[149,20,139,18],[150,6,140,4],[151,6,142,4],[151,10,142,10,"zone"],[151,14,142,14],[151,17,142,17,"ZONES"],[151,30,142,22],[151,31,142,22,"ZONES"],[151,36,142,22],[151,37,142,23,"find"],[151,41,142,27],[151,42,142,28,"z"],[151,43,142,29],[151,47,142,33,"z"],[151,48,142,34],[151,49,142,35,"id"],[151,51,142,37],[151,56,142,42,"zoneId"],[151,62,142,48],[151,63,142,49],[152,6,143,4],[152,10,143,8],[152,11,143,9,"zone"],[152,15,143,13],[152,17,143,15],[153,8,144,6,"console"],[153,15,144,13],[153,16,144,14,"log"],[153,19,144,17],[153,20,144,18],[153,30,144,28,"zoneId"],[153,36,144,34],[153,48,144,46],[153,49,144,47],[154,8,145,6],[154,15,145,13],[154,20,145,18],[155,6,146,4],[156,6,148,4],[156,10,148,10,"level"],[156,15,148,15],[156,18,148,18,"zone"],[156,22,148,22],[156,23,148,23,"levels"],[156,29,148,29],[156,30,148,30,"levelNumber"],[156,41,148,41],[156,44,148,44],[156,45,148,45],[156,46,148,46],[157,6,149,4],[157,10,149,8],[157,11,149,9,"level"],[157,16,149,14],[157,18,149,16],[158,8,150,6,"console"],[158,15,150,13],[158,16,150,14,"log"],[158,19,150,17],[158,20,150,18],[158,30,150,28,"zoneId"],[158,36,150,34],[158,46,150,44,"levelNumber"],[158,57,150,55],[158,69,150,67],[158,70,150,68],[159,8,151,6],[159,15,151,13],[159,20,151,18],[160,6,152,4],[161,6,154,4,"console"],[161,13,154,11],[161,14,154,12,"log"],[161,17,154,15],[161,18,154,16],[161,68,154,66,"zoneId"],[161,74,154,72],[161,84,154,82,"levelNumber"],[161,95,154,93],[161,100,154,98,"zone"],[161,104,154,102],[161,105,154,103,"name"],[161,109,154,107],[161,112,154,110],[161,113,154,111],[162,6,155,4,"console"],[162,13,155,11],[162,14,155,12,"log"],[162,17,155,15],[162,18,155,16],[162,44,155,42,"currentZone"],[162,55,155,53],[162,57,155,55,"id"],[162,59,155,57],[162,77,155,75,"currentZoneLevel"],[162,93,155,91],[162,95,155,93,"level"],[162,100,155,98],[162,102,155,100],[162,103,155,101],[163,6,157,4,"setCurrentZone"],[163,20,157,18],[163,21,157,19,"zone"],[163,25,157,23],[163,26,157,24],[164,6,158,4,"setCurrentZoneLevel"],[164,25,158,23],[164,26,158,24,"level"],[164,31,158,29],[164,32,158,30],[165,6,160,4,"console"],[165,13,160,11],[165,14,160,12,"log"],[165,17,160,15],[165,18,160,16],[165,45,160,43,"zoneId"],[165,51,160,49],[165,61,160,59,"levelNumber"],[165,72,160,70],[165,110,160,108],[165,111,160,109],[166,6,161,4],[166,13,161,11],[166,17,161,15],[167,4,162,2],[167,5,162,3],[169,4,164,2],[170,4,165,2],[170,8,165,8,"getZoneProgress"],[170,23,165,23],[170,26,165,27,"zoneId"],[170,32,165,41],[170,36,165,67],[171,6,166,4],[171,13,166,11,"zoneProgress"],[171,25,166,23],[171,26,166,24,"zoneId"],[171,32,166,30],[171,33,166,31],[171,37,166,35],[171,41,166,39],[172,4,167,2],[172,5,167,3],[174,4,169,2],[175,4,170,2],[175,8,170,8,"spawnZoneEnemy"],[175,22,170,22],[175,25,170,25,"spawnZoneEnemy"],[175,26,170,25],[175,31,170,52],[176,6,171,4],[176,10,171,8],[176,11,171,9,"currentZone"],[176,22,171,20],[176,26,171,24],[176,27,171,25,"currentZoneLevel"],[176,43,171,41],[176,45,171,43],[177,8,172,6,"console"],[177,15,172,13],[177,16,172,14,"log"],[177,19,172,17],[177,20,172,18],[177,65,172,63],[177,66,172,64],[178,8,173,6],[178,15,173,13],[178,19,173,17],[179,6,174,4],[181,6,176,4],[182,6,177,4],[182,10,177,10,"enemyTypeIds"],[182,22,177,22],[182,25,177,25,"currentZoneLevel"],[182,41,177,41],[182,42,177,42,"enemyTypes"],[182,52,177,52],[183,6,178,4],[183,10,178,10,"randomEnemyTypeId"],[183,27,178,27],[183,30,178,30,"enemyTypeIds"],[183,42,178,42],[183,43,178,43,"Math"],[183,47,178,47],[183,48,178,48,"floor"],[183,53,178,53],[183,54,178,54,"Math"],[183,58,178,58],[183,59,178,59,"random"],[183,65,178,65],[183,66,178,66],[183,67,178,67],[183,70,178,70,"enemyTypeIds"],[183,82,178,82],[183,83,178,83,"length"],[183,89,178,89],[183,90,178,90],[183,91,178,91],[184,6,179,4],[184,10,179,10,"enemyType"],[184,19,179,19],[184,22,179,22,"ENEMY_TYPES"],[184,35,179,33],[184,36,179,33,"ENEMY_TYPES"],[184,47,179,33],[184,48,179,34,"randomEnemyTypeId"],[184,65,179,51],[184,66,179,52],[185,6,181,4],[185,10,181,8],[185,11,181,9,"enemyType"],[185,20,181,18],[185,22,181,20],[186,8,182,6,"console"],[186,15,182,13],[186,16,182,14,"log"],[186,19,182,17],[186,20,182,18],[186,36,182,34,"randomEnemyTypeId"],[186,53,182,51],[186,65,182,63],[186,66,182,64],[187,8,183,6],[187,15,183,13],[187,19,183,17],[188,6,184,4],[190,6,186,4],[191,6,187,4],[191,10,187,10,"scaledStats"],[191,21,187,21],[191,24,187,24],[191,28,187,24,"calculateEnemyStats"],[191,41,187,43],[191,42,187,43,"calculateEnemyStats"],[191,61,187,43],[191,63,187,44,"enemyType"],[191,72,187,53],[191,74,187,55,"currentZoneLevel"],[191,90,187,71],[191,92,187,73,"currentZone"],[191,103,187,84],[191,104,187,85,"id"],[191,106,187,87],[191,107,187,88],[193,6,189,4],[194,6,190,4],[194,10,190,10,"enemy"],[194,15,190,29],[194,18,190,32],[195,8,191,6,"id"],[195,10,191,8],[195,12,191,10],[195,15,191,13,"randomEnemyTypeId"],[195,32,191,30],[195,36,191,34,"Date"],[195,40,191,38],[195,41,191,39,"now"],[195,44,191,42],[195,45,191,43],[195,46,191,44],[195,50,191,48,"Math"],[195,54,191,52],[195,55,191,53,"random"],[195,61,191,59],[195,62,191,60],[195,63,191,61],[195,65,191,63],[196,8,192,6,"typeId"],[196,14,192,12],[196,16,192,14,"randomEnemyTypeId"],[196,33,192,31],[197,8,193,6,"name"],[197,12,193,10],[197,14,193,12,"enemyType"],[197,23,193,21],[197,24,193,22,"name"],[197,28,193,26],[198,8,194,6,"icon"],[198,12,194,10],[198,14,194,12,"enemyType"],[198,23,194,21],[198,24,194,22,"icon"],[198,28,194,26],[199,8,195,6,"hp"],[199,10,195,8],[199,12,195,10,"scaledStats"],[199,23,195,21],[199,24,195,22,"hp"],[199,26,195,24],[200,8,196,6,"maxHP"],[200,13,196,11],[200,15,196,13,"scaledStats"],[200,26,196,24],[200,27,196,25,"hp"],[200,29,196,27],[201,8,197,6,"attack"],[201,14,197,12],[201,16,197,14,"scaledStats"],[201,27,197,25],[201,28,197,26,"attack"],[201,34,197,32],[202,8,198,6,"xp"],[202,10,198,8],[202,12,198,10,"scaledStats"],[202,23,198,21],[202,24,198,22,"xp"],[202,26,198,24],[203,8,199,6,"resistances"],[203,19,199,17],[203,21,199,19,"scaledStats"],[203,32,199,30],[203,33,199,31,"resistances"],[203,44,199,42],[204,8,200,6,"position"],[204,16,200,14],[204,18,200,16],[205,10,201,8,"x"],[205,11,201,9],[205,13,201,11,"Math"],[205,17,201,15],[205,18,201,16,"random"],[205,24,201,22],[205,25,201,23],[205,26,201,24],[205,29,201,27],[205,32,201,30],[205,35,201,33],[205,37,201,35],[206,10,201,37],[207,10,202,8,"y"],[207,11,202,9],[207,13,202,11,"Math"],[207,17,202,15],[207,18,202,16,"random"],[207,24,202,22],[207,25,202,23],[207,26,202,24],[207,29,202,27],[207,32,202,30],[207,35,202,33],[208,8,203,6],[208,9,203,7],[209,8,204,6,"lastDamaged"],[209,19,204,17],[209,21,204,19],[210,6,205,4],[210,7,205,5],[211,6,207,4,"console"],[211,13,207,11],[211,14,207,12,"log"],[211,17,207,15],[211,18,207,16],[211,32,207,30,"enemy"],[211,37,207,35],[211,38,207,36,"name"],[211,42,207,40],[211,47,207,45,"enemy"],[211,52,207,50],[211,53,207,51,"hp"],[211,55,207,53],[211,63,207,61,"enemy"],[211,68,207,66],[211,69,207,67,"xp"],[211,71,207,69],[211,82,207,80,"currentZone"],[211,93,207,91],[211,94,207,92,"name"],[211,98,207,96],[211,100,207,98],[211,101,207,99],[212,6,208,4],[212,13,208,11,"enemy"],[212,18,208,16],[213,4,209,2],[213,5,209,3],[215,4,211,2],[216,4,212,2],[216,8,212,8,"recordEnemyKill"],[216,23,212,23],[216,26,212,27,"enemy"],[216,31,212,46],[216,35,212,51],[217,6,213,4],[217,10,213,8],[217,11,213,9,"currentZone"],[217,22,213,20],[217,26,213,24],[217,27,213,25,"currentZoneLevel"],[217,43,213,41],[217,45,213,43],[218,6,215,4,"console"],[218,13,215,11],[218,14,215,12,"log"],[218,17,215,15],[218,18,215,16],[218,24,215,22,"enemy"],[218,29,215,27],[218,30,215,28,"name"],[218,34,215,32],[218,47,215,45,"enemy"],[218,52,215,50],[218,53,215,51,"xp"],[218,55,215,53],[218,60,215,58],[218,61,215,59],[219,6,216,4,"console"],[219,13,216,11],[219,14,216,12,"log"],[219,17,216,15],[219,18,216,16],[219,72,216,70,"currentZone"],[219,83,216,81],[219,84,216,82,"id"],[219,86,216,84],[219,96,216,94,"currentZoneLevel"],[219,112,216,110],[219,113,216,111,"level"],[219,118,216,116],[219,120,216,118],[219,121,216,119],[220,6,218,4,"setZoneProgress"],[220,21,218,19],[220,22,218,20,"prev"],[220,26,218,24],[220,30,218,28],[221,8,219,6],[221,12,219,12,"newProgress"],[221,23,219,23],[221,26,219,26],[222,10,219,28],[222,13,219,31,"prev"],[223,8,219,36],[223,9,219,37],[224,8,220,6],[224,12,220,12,"zoneId"],[224,18,220,18],[224,21,220,21,"currentZone"],[224,32,220,32],[224,33,220,33,"id"],[224,35,220,35],[225,8,222,6],[225,12,222,10],[225,13,222,11,"newProgress"],[225,24,222,22],[225,25,222,23,"zoneId"],[225,31,222,29],[225,32,222,30],[225,34,222,32],[226,10,223,8,"newProgress"],[226,21,223,19],[226,22,223,20,"zoneId"],[226,28,223,26],[226,29,223,27],[226,32,223,30],[227,12,224,10,"zoneId"],[227,18,224,16],[228,12,225,10,"currentLevel"],[228,24,225,22],[228,26,225,24],[228,27,225,25],[229,12,226,10,"killsInLevel"],[229,24,226,22],[229,26,226,24],[229,27,226,25],[230,12,227,10,"completed"],[230,21,227,19],[230,23,227,21],[231,10,228,8],[231,11,228,9],[232,8,229,6],[233,8,231,6],[233,12,231,12,"progress"],[233,20,231,20],[233,23,231,23],[234,10,231,25],[234,13,231,28,"newProgress"],[234,24,231,39],[234,25,231,40,"zoneId"],[234,31,231,46],[235,8,231,48],[235,9,231,49],[237,8,233,6],[238,8,234,6],[238,12,234,12,"currentZoneLevel"],[238,28,234,28],[238,31,234,31,"currentZone"],[238,42,234,42],[238,43,234,43,"levels"],[238,49,234,49],[238,50,234,50,"progress"],[238,58,234,58],[238,59,234,59,"currentLevel"],[238,71,234,71],[238,74,234,74],[238,75,234,75],[238,76,234,76],[239,8,235,6],[239,12,235,12,"requiredKills"],[239,25,235,25],[239,28,235,28,"currentZoneLevel"],[239,44,235,44],[239,47,235,47,"currentZoneLevel"],[239,63,235,63],[239,64,235,64,"requiredKills"],[239,77,235,77],[239,80,235,80,"calculateKillRequirement"],[239,104,235,104],[239,105,235,105,"zoneId"],[239,111,235,111],[239,113,235,113,"progress"],[239,121,235,121],[239,122,235,122,"currentLevel"],[239,134,235,134],[239,135,235,135],[241,8,237,6],[242,8,238,6],[242,12,238,12,"willCompleteLevel"],[242,29,238,29],[242,32,238,33,"progress"],[242,40,238,41],[242,41,238,42,"killsInLevel"],[242,53,238,54],[242,56,238,57],[242,57,238,58],[242,61,238,63,"requiredKills"],[242,74,238,76],[243,8,240,6],[243,12,240,10,"willCompleteLevel"],[243,29,240,27],[243,31,240,29],[244,10,241,8,"console"],[244,17,241,15],[244,18,241,16,"log"],[244,21,241,19],[244,22,241,20],[244,34,241,32,"progress"],[244,42,241,40],[244,43,241,41,"currentLevel"],[244,55,241,53],[244,72,241,70,"currentZone"],[244,83,241,81],[244,84,241,82,"name"],[244,88,241,86],[244,91,241,89],[244,92,241,90],[246,10,243,8],[247,10,244,8,"progress"],[247,18,244,16],[247,19,244,17,"killsInLevel"],[247,31,244,29],[247,34,244,32,"requiredKills"],[247,47,244,45],[248,10,246,8,"console"],[248,17,246,15],[248,18,246,16,"log"],[248,21,246,19],[248,22,246,20],[248,33,246,31,"zoneId"],[248,39,246,37],[248,49,246,47,"progress"],[248,57,246,55],[248,58,246,56,"currentLevel"],[248,70,246,68],[248,75,246,73,"progress"],[248,83,246,81],[248,84,246,82,"killsInLevel"],[248,96,246,94],[248,100,246,98,"requiredKills"],[248,113,246,111],[248,133,246,131],[248,134,246,132],[249,8,247,6],[249,9,247,7],[249,15,247,13],[250,10,248,8],[251,10,249,8,"progress"],[251,18,249,16],[251,19,249,17,"killsInLevel"],[251,31,249,29],[251,35,249,33],[251,36,249,34],[252,10,250,8,"console"],[252,17,250,15],[252,18,250,16,"log"],[252,21,250,19],[252,22,250,20],[252,33,250,31,"zoneId"],[252,39,250,37],[252,49,250,47,"progress"],[252,57,250,55],[252,58,250,56,"currentLevel"],[252,70,250,68],[252,75,250,73,"progress"],[252,83,250,81],[252,84,250,82,"killsInLevel"],[252,96,250,94],[252,100,250,98,"requiredKills"],[252,113,250,111],[252,121,250,119],[252,122,250,120],[253,8,251,6],[255,8,253,6],[256,8,254,6],[256,12,254,10,"willCompleteLevel"],[256,29,254,27],[256,31,254,29],[257,10,255,8,"console"],[257,17,255,15],[257,18,255,16,"log"],[257,21,255,19],[257,22,255,20],[257,34,255,32,"progress"],[257,42,255,40],[257,43,255,41,"currentLevel"],[257,55,255,53],[257,72,255,70,"currentZone"],[257,83,255,81],[257,84,255,82,"name"],[257,88,255,86],[257,91,255,89],[257,92,255,90],[259,10,257,8],[260,10,258,8],[260,14,258,12,"progress"],[260,22,258,20],[260,23,258,21,"currentLevel"],[260,35,258,33],[260,38,258,36],[260,39,258,37],[260,41,258,39],[261,12,259,10,"progress"],[261,20,259,18],[261,21,259,19,"currentLevel"],[261,33,259,31],[261,37,259,35],[261,38,259,36],[262,12,260,10,"progress"],[262,20,260,18],[262,21,260,19,"killsInLevel"],[262,33,260,31],[262,36,260,34],[262,37,260,35],[263,12,261,10,"console"],[263,19,261,17],[263,20,261,18,"log"],[263,23,261,21],[263,24,261,22],[263,61,261,59,"progress"],[263,69,261,67],[263,70,261,68,"currentLevel"],[263,82,261,80],[263,122,261,120],[263,123,261,121],[265,12,263,10],[266,12,264,10],[267,12,265,10],[267,16,265,16,"nextLevel"],[267,25,265,25],[267,28,265,28,"currentZone"],[267,39,265,39],[267,40,265,40,"levels"],[267,46,265,46],[267,47,265,47,"progress"],[267,55,265,55],[267,56,265,56,"currentLevel"],[267,68,265,68],[267,71,265,71],[267,72,265,72],[267,73,265,73],[268,12,266,10],[268,16,266,14,"nextLevel"],[268,25,266,23],[268,29,266,27,"currentZone"],[268,40,266,38],[268,45,266,43,"progressionZone"],[268,60,266,58],[268,62,266,60],[269,14,267,12],[270,14,268,12,"console"],[270,21,268,19],[270,22,268,20,"log"],[270,25,268,23],[270,26,268,24],[270,100,268,98],[270,101,268,99],[271,14,269,12,"setCurrentZoneLevel"],[271,33,269,31],[271,34,269,32,"nextLevel"],[271,43,269,41],[271,44,269,42],[272,14,270,12,"setProgressionZone"],[272,32,270,30],[272,33,270,31,"currentZone"],[272,44,270,42],[272,45,270,43],[272,46,270,44],[272,47,270,45],[273,12,271,10],[273,13,271,11],[273,19,271,17],[274,14,272,12,"console"],[274,21,272,19],[274,22,272,20,"log"],[274,25,272,23],[274,26,272,24],[274,104,272,102],[274,105,272,103],[275,12,273,10],[276,10,274,8],[276,11,274,9],[276,17,274,15],[277,12,275,10],[278,12,276,10,"progress"],[278,20,276,18],[278,21,276,19,"completed"],[278,30,276,28],[278,33,276,31],[278,37,276,35],[279,12,277,10,"console"],[279,19,277,17],[279,20,277,18,"log"],[279,23,277,21],[279,24,277,22],[279,35,277,33,"currentZone"],[279,46,277,44],[279,47,277,45,"name"],[279,51,277,49],[279,84,277,82],[279,85,277,83],[280,10,278,8],[281,8,279,6],[282,8,281,6,"newProgress"],[282,19,281,17],[282,20,281,18,"zoneId"],[282,26,281,24],[282,27,281,25],[282,30,281,28,"progress"],[282,38,281,36],[284,8,283,6],[285,8,284,6,"setTimeout"],[285,18,284,16],[285,19,284,17],[285,25,284,23],[286,10,285,8,"console"],[286,17,285,15],[286,18,285,16,"log"],[286,21,285,19],[286,22,285,20],[286,67,285,65],[286,69,285,67,"newProgress"],[286,80,285,78],[286,81,285,79],[287,10,286,8,"updateZoneProgress"],[287,28,286,26],[287,29,286,27,"newProgress"],[287,40,286,38],[287,41,286,39],[288,8,287,6],[288,9,287,7],[288,11,287,9],[288,12,287,10],[288,13,287,11],[288,14,287,12],[288,15,287,13],[290,8,289,6],[290,15,289,13,"newProgress"],[290,26,289,24],[291,6,290,4],[291,7,290,5],[291,8,290,6],[292,4,291,2],[292,5,291,3],[294,4,293,2],[295,4,294,2],[295,8,294,8,"isZoneUnlockedLocal"],[295,27,294,27],[295,30,294,31,"zoneId"],[295,36,294,45],[295,40,294,59],[296,6,295,4],[296,10,295,8,"zoneId"],[296,16,295,14],[296,21,295,19],[296,22,295,20],[296,24,295,22],[296,31,295,29],[296,35,295,33],[296,36,295,34],[296,37,295,35],[298,6,297,4],[298,10,297,10,"zone"],[298,14,297,14],[298,17,297,17,"ZONES"],[298,30,297,22],[298,31,297,22,"ZONES"],[298,36,297,22],[298,37,297,23,"find"],[298,41,297,27],[298,42,297,28,"z"],[298,43,297,29],[298,47,297,33,"z"],[298,48,297,34],[298,49,297,35,"id"],[298,51,297,37],[298,56,297,42,"zoneId"],[298,62,297,48],[298,63,297,49],[299,6,298,4],[299,10,298,8],[299,11,298,9,"zone"],[299,15,298,13],[299,17,298,15,"unlockRequirement"],[299,34,298,32],[299,35,298,33,"previousZone"],[299,47,298,45],[299,49,298,47],[299,56,298,54],[299,60,298,58],[300,6,300,4],[300,10,300,10,"prevZoneProgress"],[300,26,300,26],[300,29,300,29,"zoneProgress"],[300,41,300,41],[300,42,300,42,"zone"],[300,46,300,46],[300,47,300,47,"unlockRequirement"],[300,64,300,64],[300,65,300,65,"previousZone"],[300,77,300,77],[300,78,300,78],[301,6,301,4],[301,13,301,11,"prevZoneProgress"],[301,29,301,27],[301,31,301,29,"completed"],[301,40,301,38],[301,44,301,42],[301,49,301,47],[302,4,302,2],[302,5,302,3],[304,4,304,2],[305,4,305,2],[305,8,305,8,"getUnlockedZones"],[305,24,305,24],[305,27,305,27,"getUnlockedZones"],[305,28,305,27],[305,33,305,41],[306,6,306,4],[306,13,306,11,"ZONES"],[306,26,306,16],[306,27,306,16,"ZONES"],[306,32,306,16],[306,33,306,17,"filter"],[306,39,306,23],[306,40,306,24,"zone"],[306,44,306,28],[306,48,306,32,"isZoneUnlockedLocal"],[306,67,306,51],[306,68,306,52,"zone"],[306,72,306,56],[306,73,306,57,"id"],[306,75,306,59],[306,76,306,60],[306,77,306,61],[307,4,307,2],[307,5,307,3],[308,4,309,2],[308,8,309,8,"contextValue"],[308,20,309,37],[308,23,309,40,"React"],[308,28,309,45],[308,29,309,45,"default"],[308,36,309,45],[308,37,309,46,"useMemo"],[308,44,309,53],[308,45,309,54],[308,52,309,61],[309,6,310,4,"currentZone"],[309,17,310,15],[310,6,310,17],[311,6,311,4,"currentZoneLevel"],[311,22,311,20],[312,6,312,4,"progressionZone"],[312,21,312,19],[313,6,312,21],[314,6,313,4,"zoneProgress"],[314,18,313,16],[315,6,314,4,"availableZones"],[315,20,314,18],[315,22,314,20,"ZONES"],[315,35,314,25],[315,36,314,25,"ZONES"],[315,41,314,25],[316,6,315,4,"selectZone"],[316,16,315,14],[317,6,316,4,"getZoneProgress"],[317,21,316,19],[318,6,317,4,"spawnZoneEnemy"],[318,20,317,18],[319,6,318,4,"recordEnemyKill"],[319,21,318,19],[320,6,319,4,"isZoneUnlocked"],[320,20,319,18],[320,22,319,20,"isZoneUnlockedLocal"],[320,41,319,39],[321,6,320,4,"getUnlockedZones"],[322,4,321,2],[322,5,321,3],[322,6,321,4],[322,8,321,6],[322,9,322,4,"currentZone"],[322,20,322,15],[322,22,323,4,"currentZoneLevel"],[322,38,323,20],[322,40,324,4,"progressionZone"],[322,55,324,19],[322,57,325,4,"zoneProgress"],[322,69,325,16],[322,71,326,4,"selectZone"],[322,81,326,14],[322,83,327,4,"getZoneProgress"],[322,98,327,19],[322,100,328,4,"spawnZoneEnemy"],[322,114,328,18],[322,116,329,4,"recordEnemyKill"],[322,131,329,19],[322,133,330,4,"isZoneUnlockedLocal"],[322,152,330,23],[322,154,331,4,"getUnlockedZones"],[322,170,331,20],[322,171,332,3],[322,172,332,4],[323,4,334,2],[323,24,335,4],[323,28,335,4,"_reactJsxDevRuntime"],[323,47,335,4],[323,48,335,4,"jsxDEV"],[323,54,335,4],[323,56,335,5,"ZoneContext"],[323,67,335,16],[323,68,335,17,"Provider"],[323,76,335,25],[324,6,335,26,"value"],[324,11,335,31],[324,13,335,33,"contextValue"],[324,25,335,46],[325,6,335,46,"children"],[325,14,335,46],[325,16,336,7,"children"],[326,4,336,15],[327,6,336,15,"fileName"],[327,14,336,15],[327,16,336,15,"_jsxFileName"],[327,28,336,15],[328,6,336,15,"lineNumber"],[328,16,336,15],[329,6,336,15,"columnNumber"],[329,18,336,15],[330,4,336,15],[330,11,337,26],[330,12,337,27],[331,2,339,0],[331,3,339,1],[332,2,339,2,"_s2"],[332,5,339,2],[332,6,65,13,"ZoneProvider"],[332,18,65,25],[333,4,65,25],[333,12,66,44,"useGame"],[333,24,66,51],[333,25,66,51,"useGame"],[333,32,66,51],[334,2,66,51],[335,2,66,51,"_c"],[335,4,66,51],[335,7,65,13,"ZoneProvider"],[335,19,65,25],[336,2,65,25],[336,6,65,25,"_c"],[336,8,65,25],[337,2,65,25,"$RefreshReg$"],[337,14,65,25],[337,15,65,25,"_c"],[337,17,65,25],[338,0,65,25],[338,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","ZONES.find$argument_0","selectZone","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE6C;CFM;4BGE;8DCI;GDG;6ECC;GDG;sECC;GDG;iFCC;GDU;YEG;kCCY,6BD;GFgB;YEG;GFQ;qBIG;4BDM,oBC;GJoB;0BKG;GLE;yBMG;GNuC;0BOG;oBCM;iBCkE;ODG;KDG;GPC;8BUG;4BPG,oBO;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbY;CHkB"},"hasCjsExports":false},"type":"js/module"}]}