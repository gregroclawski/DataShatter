{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState,\n      updateZoneProgress = _useGame.updateZoneProgress;\n\n    // Zone State - Initialize with GameContext data if available\n    var _useState = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1];\n    var _useState3 = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)(() => {\n        // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n        var savedProgress = gameState?.zoneProgress;\n        if (savedProgress && Object.keys(savedProgress).length > 0) {\n          console.log('🗺️ Loading saved zone progress:', savedProgress);\n          return savedProgress;\n        } else {\n          console.log('🗺️ No saved zone progress, using defaults');\n          return {\n            1: {\n              zoneId: 1,\n              currentLevel: 1,\n              killsInLevel: 0,\n              completed: false\n            }\n          };\n        }\n      }),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      zoneProgress = _useState6[0],\n      setZoneProgress = _useState6[1];\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Select a zone and level for farming\n    var selectZone = (zoneId, levelNumber) => {\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone || !(0, _dataZoneData.isZoneUnlocked)(zoneId, zoneProgress)) {\n        console.log(`❌ Zone ${zoneId} not found or locked`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Level ${levelNumber} not found in zone ${zoneId}`);\n        return false;\n      }\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      console.log(`🗺️ Selected ${zone.name} - Level ${levelNumber}`);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n        progress.killsInLevel += 1;\n        console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/1000 kills`);\n\n        // Check if level completed\n        if (progress.killsInLevel >= 1000) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      currentZoneLevel,\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"LvYGbT30mWRG/UxGcpmwant2jMs=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":262,"map":[[15,2,47,0,"Object"],[15,8,47,0],[15,9,47,0,"defineProperty"],[15,23,47,0],[15,24,47,0,"exports"],[15,31,47,0],[16,4,47,0,"enumerable"],[16,14,47,0],[17,4,47,0,"get"],[17,7,47,0],[17,18,47,0,"get"],[17,19,47,0],[18,6,47,0],[18,13,47,0,"useZone"],[18,20,47,0],[19,4,47,0],[20,2,47,0],[21,2,55,0,"Object"],[21,8,55,0],[21,9,55,0,"defineProperty"],[21,23,55,0],[21,24,55,0,"exports"],[21,31,55,0],[22,4,55,0,"enumerable"],[22,14,55,0],[23,4,55,0,"get"],[23,7,55,0],[23,18,55,0,"get"],[23,19,55,0],[24,6,55,0],[24,13,55,0,"ZoneProvider"],[24,25,55,0],[25,4,55,0],[26,2,55,0],[27,2,261,2],[27,6,261,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,261,2],[27,42,261,2,"require"],[27,49,261,2],[27,50,261,2,"_dependencyMap"],[27,64,261,2],[28,2,261,2],[28,6,261,2,"_slicedToArray"],[28,20,261,2],[28,23,261,2,"_interopDefault"],[28,38,261,2],[28,39,261,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,261,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,45,0],[34,6,45,6,"ZoneContext"],[34,17,45,17],[34,33,45,20],[34,37,45,20,"createContext"],[34,43,45,33],[34,44,45,33,"createContext"],[34,57,45,33],[34,59,45,63,"undefined"],[34,68,45,72],[34,69,45,73],[35,2,47,7],[35,6,47,13,"useZone"],[35,13,47,20],[35,16,47,23,"useZone"],[35,17,47,23],[35,22,47,29],[36,4,47,29,"_s"],[36,6,47,29],[37,4,48,2],[37,8,48,8,"context"],[37,15,48,15],[37,18,48,18],[37,22,48,18,"useContext"],[37,28,48,28],[37,29,48,28,"useContext"],[37,39,48,28],[37,41,48,29,"ZoneContext"],[37,52,48,40],[37,53,48,41],[38,4,49,2],[38,8,49,6],[38,9,49,7,"context"],[38,16,49,14],[38,18,49,16],[39,6,50,4],[39,12,50,10],[39,16,50,14,"Error"],[39,21,50,19],[39,22,50,20],[39,66,50,64],[39,67,50,65],[40,4,51,2],[41,4,52,2],[41,11,52,9,"context"],[41,18,52,16],[42,2,53,0],[42,3,53,1],[43,2,53,2,"_s"],[43,4,53,2],[43,5,47,13,"useZone"],[43,12,47,20],[44,2,55,7],[44,6,55,13,"ZoneProvider"],[44,18,55,25],[44,21,55,28,"_ref"],[44,25,55,28],[44,29,55,71],[45,4,55,71,"_s2"],[45,7,55,71],[46,4,55,71],[46,8,55,31,"children"],[46,16,55,39],[46,19,55,39,"_ref"],[46,23,55,39],[46,24,55,31,"children"],[46,32,55,39],[47,4,56,2],[47,8,56,2,"_useGame"],[47,16,56,2],[47,19,56,44],[47,23,56,44,"useGame"],[47,35,56,51],[47,36,56,51,"useGame"],[47,43,56,51],[47,45,56,52],[47,46,56,53],[48,6,56,10,"gameState"],[48,15,56,19],[48,18,56,19,"_useGame"],[48,26,56,19],[48,27,56,10,"gameState"],[48,36,56,19],[49,6,56,21,"updateZoneProgress"],[49,24,56,39],[49,27,56,39,"_useGame"],[49,35,56,39],[49,36,56,21,"updateZoneProgress"],[49,54,56,39],[51,4,58,2],[52,4,59,2],[52,8,59,2,"_useState"],[52,17,59,2],[52,20,59,40],[52,24,59,40,"useState"],[52,30,59,48],[52,31,59,48,"useState"],[52,39,59,48],[52,41,59,62,"ZONES"],[52,54,59,67],[52,55,59,67,"ZONES"],[52,60,59,67],[52,61,59,68],[52,62,59,69],[52,63,59,70],[52,64,59,71],[53,6,59,71,"_useState2"],[53,16,59,71],[53,23,59,71,"_slicedToArray"],[53,37,59,71],[53,38,59,71,"default"],[53,45,59,71],[53,47,59,71,"_useState"],[53,56,59,71],[54,6,59,9,"currentZone"],[54,17,59,20],[54,20,59,20,"_useState2"],[54,30,59,20],[55,6,59,22,"setCurrentZone"],[55,20,59,36],[55,23,59,36,"_useState2"],[55,33,59,36],[56,4,60,2],[56,8,60,2,"_useState3"],[56,18,60,2],[56,21,60,50],[56,25,60,50,"useState"],[56,31,60,58],[56,32,60,58,"useState"],[56,40,60,58],[56,42,60,77,"ZONES"],[56,55,60,82],[56,56,60,82,"ZONES"],[56,61,60,82],[56,62,60,83],[56,63,60,84],[56,64,60,85],[56,66,60,87,"levels"],[56,72,60,93],[56,73,60,94],[56,74,60,95],[56,75,60,96],[56,79,60,100],[56,83,60,104],[56,84,60,105],[57,6,60,105,"_useState4"],[57,16,60,105],[57,23,60,105,"_slicedToArray"],[57,37,60,105],[57,38,60,105,"default"],[57,45,60,105],[57,47,60,105,"_useState3"],[57,57,60,105],[58,6,60,9,"currentZoneLevel"],[58,22,60,25],[58,25,60,25,"_useState4"],[58,35,60,25],[59,6,60,27,"setCurrentZoneLevel"],[59,25,60,46],[59,28,60,46,"_useState4"],[59,38,60,46],[60,4,61,2],[60,8,61,2,"_useState5"],[60,18,61,2],[60,21,61,42],[60,25,61,42,"useState"],[60,31,61,50],[60,32,61,50,"useState"],[60,40,61,50],[60,42,61,81],[60,48,61,87],[61,8,62,4],[62,8,63,4],[62,12,63,10,"savedProgress"],[62,25,63,23],[62,28,63,26,"gameState"],[62,37,63,35],[62,39,63,37,"zoneProgress"],[62,51,63,49],[63,8,64,4],[63,12,64,8,"savedProgress"],[63,25,64,21],[63,29,64,25,"Object"],[63,35,64,31],[63,36,64,32,"keys"],[63,40,64,36],[63,41,64,37,"savedProgress"],[63,54,64,50],[63,55,64,51],[63,56,64,52,"length"],[63,62,64,58],[63,65,64,61],[63,66,64,62],[63,68,64,64],[64,10,65,6,"console"],[64,17,65,13],[64,18,65,14,"log"],[64,21,65,17],[64,22,65,18],[64,56,65,52],[64,58,65,54,"savedProgress"],[64,71,65,67],[64,72,65,68],[65,10,66,6],[65,17,66,13,"savedProgress"],[65,30,66,26],[66,8,67,4],[66,9,67,5],[66,15,67,11],[67,10,68,6,"console"],[67,17,68,13],[67,18,68,14,"log"],[67,21,68,17],[67,22,68,18],[67,66,68,62],[67,67,68,63],[68,10,69,6],[68,17,69,13],[69,12,69,15],[69,13,69,16],[69,15,69,18],[70,14,69,20,"zoneId"],[70,20,69,26],[70,22,69,28],[70,23,69,29],[71,14,69,31,"currentLevel"],[71,26,69,43],[71,28,69,45],[71,29,69,46],[72,14,69,48,"killsInLevel"],[72,26,69,60],[72,28,69,62],[72,29,69,63],[73,14,69,65,"completed"],[73,23,69,74],[73,25,69,76],[74,12,69,82],[75,10,69,84],[75,11,69,85],[76,8,70,4],[77,6,71,2],[77,7,71,3],[77,8,71,4],[78,6,71,4,"_useState6"],[78,16,71,4],[78,23,71,4,"_slicedToArray"],[78,37,71,4],[78,38,71,4,"default"],[78,45,71,4],[78,47,71,4,"_useState5"],[78,57,71,4],[79,6,61,9,"zoneProgress"],[79,18,61,21],[79,21,61,21,"_useState6"],[79,31,61,21],[80,6,61,23,"setZoneProgress"],[80,21,61,38],[80,24,61,38,"_useState6"],[80,34,61,38],[82,4,73,2],[83,4,74,2],[83,8,74,2,"useEffect"],[83,14,74,11],[83,15,74,11,"useEffect"],[83,24,74,11],[83,26,74,12],[83,32,74,18],[84,6,75,4],[84,10,75,8,"gameState"],[84,19,75,17],[84,21,75,19,"zoneProgress"],[84,33,75,31],[84,37,75,35,"Object"],[84,43,75,41],[84,44,75,42,"keys"],[84,48,75,46],[84,49,75,47,"gameState"],[84,58,75,56],[84,59,75,57,"zoneProgress"],[84,71,75,69],[84,72,75,70],[84,73,75,71,"length"],[84,79,75,77],[84,82,75,80],[84,83,75,81],[84,85,75,83],[85,8,76,6,"console"],[85,15,76,13],[85,16,76,14,"log"],[85,19,76,17],[85,20,76,18],[85,64,76,62],[85,66,76,64,"gameState"],[85,75,76,73],[85,76,76,74,"zoneProgress"],[85,88,76,86],[85,89,76,87],[86,8,77,6,"setZoneProgress"],[86,23,77,21],[86,24,77,22,"gameState"],[86,33,77,31],[86,34,77,32,"zoneProgress"],[86,46,77,44],[86,47,77,45],[87,6,78,4],[88,4,79,2],[88,5,79,3],[88,7,79,5],[88,8,79,6,"gameState"],[88,17,79,15],[88,19,79,17,"zoneProgress"],[88,31,79,29],[88,32,79,30],[88,33,79,31],[90,4,81,2],[91,4,82,2],[91,8,82,2,"useEffect"],[91,14,82,11],[91,15,82,11,"useEffect"],[91,24,82,11],[91,26,82,12],[91,32,82,18],[92,6,83,4],[92,10,83,8,"gameState"],[92,19,83,17],[92,21,83,19,"ninja"],[92,26,83,24],[92,28,83,26],[93,8,84,6],[93,12,84,12,"recommendedZone"],[93,27,84,27],[93,30,84,30],[93,34,84,30,"getZoneByLevel"],[93,47,84,44],[93,48,84,44,"getZoneByLevel"],[93,62,84,44],[93,64,84,45,"gameState"],[93,73,84,54],[93,74,84,55,"ninja"],[93,79,84,60],[93,80,84,61,"level"],[93,85,84,66],[93,86,84,67],[94,8,85,6],[94,12,85,10,"recommendedZone"],[94,27,85,25],[94,31,85,29],[94,32,85,30,"currentZone"],[94,43,85,41],[94,45,85,43],[95,10,86,8,"setCurrentZone"],[95,24,86,22],[95,25,86,23,"recommendedZone"],[95,40,86,38],[95,41,86,39],[96,10,87,8,"setCurrentZoneLevel"],[96,29,87,27],[96,30,87,28,"recommendedZone"],[96,45,87,43],[96,46,87,44,"levels"],[96,52,87,50],[96,53,87,51],[96,54,87,52],[96,55,87,53],[96,56,87,54],[97,8,88,6],[98,6,89,4],[99,4,90,2],[99,5,90,3],[99,7,90,5],[99,8,90,6,"gameState"],[99,17,90,15],[99,19,90,17,"ninja"],[99,24,90,22],[99,26,90,24,"level"],[99,31,90,29],[99,32,90,30],[99,33,90,31],[101,4,92,2],[102,4,93,2],[102,8,93,8,"selectZone"],[102,18,93,18],[102,21,93,21,"selectZone"],[102,22,93,22,"zoneId"],[102,28,93,36],[102,30,93,38,"levelNumber"],[102,41,93,57],[102,46,93,71],[103,6,94,4],[103,10,94,10,"zone"],[103,14,94,14],[103,17,94,17,"ZONES"],[103,30,94,22],[103,31,94,22,"ZONES"],[103,36,94,22],[103,37,94,23,"find"],[103,41,94,27],[103,42,94,28,"z"],[103,43,94,29],[103,47,94,33,"z"],[103,48,94,34],[103,49,94,35,"id"],[103,51,94,37],[103,56,94,42,"zoneId"],[103,62,94,48],[103,63,94,49],[104,6,95,4],[104,10,95,8],[104,11,95,9,"zone"],[104,15,95,13],[104,19,95,17],[104,20,95,18],[104,24,95,18,"isZoneUnlocked"],[104,37,95,32],[104,38,95,32,"isZoneUnlocked"],[104,52,95,32],[104,54,95,33,"zoneId"],[104,60,95,39],[104,62,95,41,"zoneProgress"],[104,74,95,53],[104,75,95,54],[104,77,95,56],[105,8,96,6,"console"],[105,15,96,13],[105,16,96,14,"log"],[105,19,96,17],[105,20,96,18],[105,30,96,28,"zoneId"],[105,36,96,34],[105,58,96,56],[105,59,96,57],[106,8,97,6],[106,15,97,13],[106,20,97,18],[107,6,98,4],[108,6,100,4],[108,10,100,10,"level"],[108,15,100,15],[108,18,100,18,"zone"],[108,22,100,22],[108,23,100,23,"levels"],[108,29,100,29],[108,30,100,30,"levelNumber"],[108,41,100,41],[108,44,100,44],[108,45,100,45],[108,46,100,46],[109,6,101,4],[109,10,101,8],[109,11,101,9,"level"],[109,16,101,14],[109,18,101,16],[110,8,102,6,"console"],[110,15,102,13],[110,16,102,14,"log"],[110,19,102,17],[110,20,102,18],[110,31,102,29,"levelNumber"],[110,42,102,40],[110,64,102,62,"zoneId"],[110,70,102,68],[110,72,102,70],[110,73,102,71],[111,8,103,6],[111,15,103,13],[111,20,103,18],[112,6,104,4],[113,6,106,4,"setCurrentZone"],[113,20,106,18],[113,21,106,19,"zone"],[113,25,106,23],[113,26,106,24],[114,6,107,4,"setCurrentZoneLevel"],[114,25,107,23],[114,26,107,24,"level"],[114,31,107,29],[114,32,107,30],[115,6,108,4,"console"],[115,13,108,11],[115,14,108,12,"log"],[115,17,108,15],[115,18,108,16],[115,34,108,32,"zone"],[115,38,108,36],[115,39,108,37,"name"],[115,43,108,41],[115,55,108,53,"levelNumber"],[115,66,108,64],[115,68,108,66],[115,69,108,67],[116,6,109,4],[116,13,109,11],[116,17,109,15],[117,4,110,2],[117,5,110,3],[119,4,112,2],[120,4,113,2],[120,8,113,8,"getZoneProgress"],[120,23,113,23],[120,26,113,27,"zoneId"],[120,32,113,41],[120,36,113,67],[121,6,114,4],[121,13,114,11,"zoneProgress"],[121,25,114,23],[121,26,114,24,"zoneId"],[121,32,114,30],[121,33,114,31],[121,37,114,35],[121,41,114,39],[122,4,115,2],[122,5,115,3],[124,4,117,2],[125,4,118,2],[125,8,118,8,"spawnZoneEnemy"],[125,22,118,22],[125,25,118,25,"spawnZoneEnemy"],[125,26,118,25],[125,31,118,52],[126,6,119,4],[126,10,119,8],[126,11,119,9,"currentZone"],[126,22,119,20],[126,26,119,24],[126,27,119,25,"currentZoneLevel"],[126,43,119,41],[126,45,119,43],[127,8,120,6,"console"],[127,15,120,13],[127,16,120,14,"log"],[127,19,120,17],[127,20,120,18],[127,65,120,63],[127,66,120,64],[128,8,121,6],[128,15,121,13],[128,19,121,17],[129,6,122,4],[131,6,124,4],[132,6,125,4],[132,10,125,10,"enemyTypeIds"],[132,22,125,22],[132,25,125,25,"currentZoneLevel"],[132,41,125,41],[132,42,125,42,"enemyTypes"],[132,52,125,52],[133,6,126,4],[133,10,126,10,"randomEnemyTypeId"],[133,27,126,27],[133,30,126,30,"enemyTypeIds"],[133,42,126,42],[133,43,126,43,"Math"],[133,47,126,47],[133,48,126,48,"floor"],[133,53,126,53],[133,54,126,54,"Math"],[133,58,126,58],[133,59,126,59,"random"],[133,65,126,65],[133,66,126,66],[133,67,126,67],[133,70,126,70,"enemyTypeIds"],[133,82,126,82],[133,83,126,83,"length"],[133,89,126,89],[133,90,126,90],[133,91,126,91],[134,6,127,4],[134,10,127,10,"enemyType"],[134,19,127,19],[134,22,127,22,"ENEMY_TYPES"],[134,35,127,33],[134,36,127,33,"ENEMY_TYPES"],[134,47,127,33],[134,48,127,34,"randomEnemyTypeId"],[134,65,127,51],[134,66,127,52],[135,6,129,4],[135,10,129,8],[135,11,129,9,"enemyType"],[135,20,129,18],[135,22,129,20],[136,8,130,6,"console"],[136,15,130,13],[136,16,130,14,"log"],[136,19,130,17],[136,20,130,18],[136,36,130,34,"randomEnemyTypeId"],[136,53,130,51],[136,65,130,63],[136,66,130,64],[137,8,131,6],[137,15,131,13],[137,19,131,17],[138,6,132,4],[140,6,134,4],[141,6,135,4],[141,10,135,10,"scaledStats"],[141,21,135,21],[141,24,135,24],[141,28,135,24,"calculateEnemyStats"],[141,41,135,43],[141,42,135,43,"calculateEnemyStats"],[141,61,135,43],[141,63,135,44,"enemyType"],[141,72,135,53],[141,74,135,55,"currentZoneLevel"],[141,90,135,71],[141,92,135,73,"currentZone"],[141,103,135,84],[141,104,135,85,"id"],[141,106,135,87],[141,107,135,88],[143,6,137,4],[144,6,138,4],[144,10,138,10,"enemy"],[144,15,138,29],[144,18,138,32],[145,8,139,6,"id"],[145,10,139,8],[145,12,139,10],[145,15,139,13,"randomEnemyTypeId"],[145,32,139,30],[145,36,139,34,"Date"],[145,40,139,38],[145,41,139,39,"now"],[145,44,139,42],[145,45,139,43],[145,46,139,44],[145,50,139,48,"Math"],[145,54,139,52],[145,55,139,53,"random"],[145,61,139,59],[145,62,139,60],[145,63,139,61],[145,65,139,63],[146,8,140,6,"typeId"],[146,14,140,12],[146,16,140,14,"randomEnemyTypeId"],[146,33,140,31],[147,8,141,6,"name"],[147,12,141,10],[147,14,141,12,"enemyType"],[147,23,141,21],[147,24,141,22,"name"],[147,28,141,26],[148,8,142,6,"icon"],[148,12,142,10],[148,14,142,12,"enemyType"],[148,23,142,21],[148,24,142,22,"icon"],[148,28,142,26],[149,8,143,6,"hp"],[149,10,143,8],[149,12,143,10,"scaledStats"],[149,23,143,21],[149,24,143,22,"hp"],[149,26,143,24],[150,8,144,6,"maxHP"],[150,13,144,11],[150,15,144,13,"scaledStats"],[150,26,144,24],[150,27,144,25,"hp"],[150,29,144,27],[151,8,145,6,"attack"],[151,14,145,12],[151,16,145,14,"scaledStats"],[151,27,145,25],[151,28,145,26,"attack"],[151,34,145,32],[152,8,146,6,"xp"],[152,10,146,8],[152,12,146,10,"scaledStats"],[152,23,146,21],[152,24,146,22,"xp"],[152,26,146,24],[153,8,147,6,"resistances"],[153,19,147,17],[153,21,147,19,"scaledStats"],[153,32,147,30],[153,33,147,31,"resistances"],[153,44,147,42],[154,8,148,6,"position"],[154,16,148,14],[154,18,148,16],[155,10,149,8,"x"],[155,11,149,9],[155,13,149,11,"Math"],[155,17,149,15],[155,18,149,16,"random"],[155,24,149,22],[155,25,149,23],[155,26,149,24],[155,29,149,27],[155,32,149,30],[155,35,149,33],[155,37,149,35],[156,10,149,37],[157,10,150,8,"y"],[157,11,150,9],[157,13,150,11,"Math"],[157,17,150,15],[157,18,150,16,"random"],[157,24,150,22],[157,25,150,23],[157,26,150,24],[157,29,150,27],[157,32,150,30],[157,35,150,33],[158,8,151,6],[158,9,151,7],[159,8,152,6,"lastDamaged"],[159,19,152,17],[159,21,152,19],[160,6,153,4],[160,7,153,5],[161,6,155,4,"console"],[161,13,155,11],[161,14,155,12,"log"],[161,17,155,15],[161,18,155,16],[161,32,155,30,"enemy"],[161,37,155,35],[161,38,155,36,"name"],[161,42,155,40],[161,47,155,45,"enemy"],[161,52,155,50],[161,53,155,51,"hp"],[161,55,155,53],[161,63,155,61,"enemy"],[161,68,155,66],[161,69,155,67,"xp"],[161,71,155,69],[161,82,155,80,"currentZone"],[161,93,155,91],[161,94,155,92,"name"],[161,98,155,96],[161,100,155,98],[161,101,155,99],[162,6,156,4],[162,13,156,11,"enemy"],[162,18,156,16],[163,4,157,2],[163,5,157,3],[165,4,159,2],[166,4,160,2],[166,8,160,8,"recordEnemyKill"],[166,23,160,23],[166,26,160,27,"enemy"],[166,31,160,46],[166,35,160,51],[167,6,161,4],[167,10,161,8],[167,11,161,9,"currentZone"],[167,22,161,20],[167,26,161,24],[167,27,161,25,"currentZoneLevel"],[167,43,161,41],[167,45,161,43],[168,6,163,4,"console"],[168,13,163,11],[168,14,163,12,"log"],[168,17,163,15],[168,18,163,16],[168,24,163,22,"enemy"],[168,29,163,27],[168,30,163,28,"name"],[168,34,163,32],[168,47,163,45,"enemy"],[168,52,163,50],[168,53,163,51,"xp"],[168,55,163,53],[168,60,163,58],[168,61,163,59],[169,6,165,4,"setZoneProgress"],[169,21,165,19],[169,22,165,20,"prev"],[169,26,165,24],[169,30,165,28],[170,8,166,6],[170,12,166,12,"newProgress"],[170,23,166,23],[170,26,166,26],[171,10,166,28],[171,13,166,31,"prev"],[172,8,166,36],[172,9,166,37],[173,8,167,6],[173,12,167,12,"zoneId"],[173,18,167,18],[173,21,167,21,"currentZone"],[173,32,167,32],[173,33,167,33,"id"],[173,35,167,35],[174,8,169,6],[174,12,169,10],[174,13,169,11,"newProgress"],[174,24,169,22],[174,25,169,23,"zoneId"],[174,31,169,29],[174,32,169,30],[174,34,169,32],[175,10,170,8,"newProgress"],[175,21,170,19],[175,22,170,20,"zoneId"],[175,28,170,26],[175,29,170,27],[175,32,170,30],[176,12,171,10,"zoneId"],[176,18,171,16],[177,12,172,10,"currentLevel"],[177,24,172,22],[177,26,172,24],[177,27,172,25],[178,12,173,10,"killsInLevel"],[178,24,173,22],[178,26,173,24],[178,27,173,25],[179,12,174,10,"completed"],[179,21,174,19],[179,23,174,21],[180,10,175,8],[180,11,175,9],[181,8,176,6],[182,8,178,6],[182,12,178,12,"progress"],[182,20,178,20],[182,23,178,23],[183,10,178,25],[183,13,178,28,"newProgress"],[183,24,178,39],[183,25,178,40,"zoneId"],[183,31,178,46],[184,8,178,48],[184,9,178,49],[185,8,179,6,"progress"],[185,16,179,14],[185,17,179,15,"killsInLevel"],[185,29,179,27],[185,33,179,31],[185,34,179,32],[186,8,181,6,"console"],[186,15,181,13],[186,16,181,14,"log"],[186,19,181,17],[186,20,181,18],[186,31,181,29,"zoneId"],[186,37,181,35],[186,47,181,45,"progress"],[186,55,181,53],[186,56,181,54,"currentLevel"],[186,68,181,66],[186,73,181,71,"progress"],[186,81,181,79],[186,82,181,80,"killsInLevel"],[186,94,181,92],[186,107,181,105],[186,108,181,106],[188,8,183,6],[189,8,184,6],[189,12,184,10,"progress"],[189,20,184,18],[189,21,184,19,"killsInLevel"],[189,33,184,31],[189,37,184,35],[189,41,184,39],[189,43,184,41],[190,10,185,8,"console"],[190,17,185,15],[190,18,185,16,"log"],[190,21,185,19],[190,22,185,20],[190,34,185,32,"progress"],[190,42,185,40],[190,43,185,41,"currentLevel"],[190,55,185,53],[190,72,185,70,"currentZone"],[190,83,185,81],[190,84,185,82,"name"],[190,88,185,86],[190,91,185,89],[190,92,185,90],[192,10,187,8],[193,10,188,8],[193,14,188,12,"progress"],[193,22,188,20],[193,23,188,21,"currentLevel"],[193,35,188,33],[193,38,188,36],[193,39,188,37],[193,41,188,39],[194,12,189,10,"progress"],[194,20,189,18],[194,21,189,19,"currentLevel"],[194,33,189,31],[194,37,189,35],[194,38,189,36],[195,12,190,10,"progress"],[195,20,190,18],[195,21,190,19,"killsInLevel"],[195,33,190,31],[195,36,190,34],[195,37,190,35],[196,12,191,10,"console"],[196,19,191,17],[196,20,191,18,"log"],[196,23,191,21],[196,24,191,22],[196,48,191,46,"progress"],[196,56,191,54],[196,57,191,55,"currentLevel"],[196,69,191,67],[196,71,191,69],[196,72,191,70],[198,12,193,10],[199,12,194,10],[199,16,194,16,"nextLevel"],[199,25,194,25],[199,28,194,28,"currentZone"],[199,39,194,39],[199,40,194,40,"levels"],[199,46,194,46],[199,47,194,47,"progress"],[199,55,194,55],[199,56,194,56,"currentLevel"],[199,68,194,68],[199,71,194,71],[199,72,194,72],[199,73,194,73],[200,12,195,10],[200,16,195,14,"nextLevel"],[200,25,195,23],[200,27,195,25],[201,14,196,12,"setCurrentZoneLevel"],[201,33,196,31],[201,34,196,32,"nextLevel"],[201,43,196,41],[201,44,196,42],[202,12,197,10],[203,10,198,8],[203,11,198,9],[203,17,198,15],[204,12,199,10],[205,12,200,10,"progress"],[205,20,200,18],[205,21,200,19,"completed"],[205,30,200,28],[205,33,200,31],[205,37,200,35],[206,12,201,10,"console"],[206,19,201,17],[206,20,201,18,"log"],[206,23,201,21],[206,24,201,22],[206,35,201,33,"currentZone"],[206,46,201,44],[206,47,201,45,"name"],[206,51,201,49],[206,84,201,82],[206,85,201,83],[207,10,202,8],[208,8,203,6],[209,8,205,6,"newProgress"],[209,19,205,17],[209,20,205,18,"zoneId"],[209,26,205,24],[209,27,205,25],[209,30,205,28,"progress"],[209,38,205,36],[211,8,207,6],[212,8,208,6,"setTimeout"],[212,18,208,16],[212,19,208,17],[212,25,208,23],[213,10,209,8,"console"],[213,17,209,15],[213,18,209,16,"log"],[213,21,209,19],[213,22,209,20],[213,67,209,65],[213,69,209,67,"newProgress"],[213,80,209,78],[213,81,209,79],[214,10,210,8,"updateZoneProgress"],[214,28,210,26],[214,29,210,27,"newProgress"],[214,40,210,38],[214,41,210,39],[215,8,211,6],[215,9,211,7],[215,11,211,9],[215,12,211,10],[215,13,211,11],[215,14,211,12],[215,15,211,13],[217,8,213,6],[217,15,213,13,"newProgress"],[217,26,213,24],[218,6,214,4],[218,7,214,5],[218,8,214,6],[219,4,215,2],[219,5,215,3],[221,4,217,2],[222,4,218,2],[222,8,218,8,"isZoneUnlockedLocal"],[222,27,218,27],[222,30,218,31,"zoneId"],[222,36,218,45],[222,40,218,59],[223,6,219,4],[223,10,219,8,"zoneId"],[223,16,219,14],[223,21,219,19],[223,22,219,20],[223,24,219,22],[223,31,219,29],[223,35,219,33],[223,36,219,34],[223,37,219,35],[225,6,221,4],[225,10,221,10,"zone"],[225,14,221,14],[225,17,221,17,"ZONES"],[225,30,221,22],[225,31,221,22,"ZONES"],[225,36,221,22],[225,37,221,23,"find"],[225,41,221,27],[225,42,221,28,"z"],[225,43,221,29],[225,47,221,33,"z"],[225,48,221,34],[225,49,221,35,"id"],[225,51,221,37],[225,56,221,42,"zoneId"],[225,62,221,48],[225,63,221,49],[226,6,222,4],[226,10,222,8],[226,11,222,9,"zone"],[226,15,222,13],[226,17,222,15,"unlockRequirement"],[226,34,222,32],[226,35,222,33,"previousZone"],[226,47,222,45],[226,49,222,47],[226,56,222,54],[226,60,222,58],[227,6,224,4],[227,10,224,10,"prevZoneProgress"],[227,26,224,26],[227,29,224,29,"zoneProgress"],[227,41,224,41],[227,42,224,42,"zone"],[227,46,224,46],[227,47,224,47,"unlockRequirement"],[227,64,224,64],[227,65,224,65,"previousZone"],[227,77,224,77],[227,78,224,78],[228,6,225,4],[228,13,225,11,"prevZoneProgress"],[228,29,225,27],[228,31,225,29,"completed"],[228,40,225,38],[228,44,225,42],[228,49,225,47],[229,4,226,2],[229,5,226,3],[231,4,228,2],[232,4,229,2],[232,8,229,8,"getUnlockedZones"],[232,24,229,24],[232,27,229,27,"getUnlockedZones"],[232,28,229,27],[232,33,229,41],[233,6,230,4],[233,13,230,11,"ZONES"],[233,26,230,16],[233,27,230,16,"ZONES"],[233,32,230,16],[233,33,230,17,"filter"],[233,39,230,23],[233,40,230,24,"zone"],[233,44,230,28],[233,48,230,32,"isZoneUnlockedLocal"],[233,67,230,51],[233,68,230,52,"zone"],[233,72,230,56],[233,73,230,57,"id"],[233,75,230,59],[233,76,230,60],[233,77,230,61],[234,4,231,2],[234,5,231,3],[235,4,233,2],[235,8,233,8,"contextValue"],[235,20,233,37],[235,23,233,40,"React"],[235,28,233,45],[235,29,233,45,"default"],[235,36,233,45],[235,37,233,46,"useMemo"],[235,44,233,53],[235,45,233,54],[235,52,233,61],[236,6,234,4,"currentZone"],[236,17,234,15],[237,6,235,4,"currentZoneLevel"],[237,22,235,20],[238,6,236,4,"zoneProgress"],[238,18,236,16],[239,6,237,4,"availableZones"],[239,20,237,18],[239,22,237,20,"ZONES"],[239,35,237,25],[239,36,237,25,"ZONES"],[239,41,237,25],[240,6,238,4,"selectZone"],[240,16,238,14],[241,6,239,4,"getZoneProgress"],[241,21,239,19],[242,6,240,4,"spawnZoneEnemy"],[242,20,240,18],[243,6,241,4,"recordEnemyKill"],[243,21,241,19],[244,6,242,4,"isZoneUnlocked"],[244,20,242,18],[244,22,242,20,"isZoneUnlockedLocal"],[244,41,242,39],[245,6,243,4,"getUnlockedZones"],[246,4,244,2],[246,5,244,3],[246,6,244,4],[246,8,244,6],[246,9,245,4,"currentZone"],[246,20,245,15],[246,22,246,4,"currentZoneLevel"],[246,38,246,20],[246,40,247,4,"zoneProgress"],[246,52,247,16],[246,54,248,4,"selectZone"],[246,64,248,14],[246,66,249,4,"getZoneProgress"],[246,81,249,19],[246,83,250,4,"spawnZoneEnemy"],[246,97,250,18],[246,99,251,4,"recordEnemyKill"],[246,114,251,19],[246,116,252,4,"isZoneUnlockedLocal"],[246,135,252,23],[246,137,253,4,"getUnlockedZones"],[246,153,253,20],[246,154,254,3],[246,155,254,4],[247,4,256,2],[247,24,257,4],[247,28,257,4,"_reactJsxDevRuntime"],[247,47,257,4],[247,48,257,4,"jsxDEV"],[247,54,257,4],[247,56,257,5,"ZoneContext"],[247,67,257,16],[247,68,257,17,"Provider"],[247,76,257,25],[248,6,257,26,"value"],[248,11,257,31],[248,13,257,33,"contextValue"],[248,25,257,46],[249,6,257,46,"children"],[249,14,257,46],[249,16,258,7,"children"],[250,4,258,15],[251,6,258,15,"fileName"],[251,14,258,15],[251,16,258,15,"_jsxFileName"],[251,28,258,15],[252,6,258,15,"lineNumber"],[252,16,258,15],[253,6,258,15,"columnNumber"],[253,18,258,15],[254,4,258,15],[254,11,259,26],[254,12,259,27],[255,2,261,0],[255,3,261,1],[256,2,261,2,"_s2"],[256,5,261,2],[256,6,55,13,"ZoneProvider"],[256,18,55,25],[257,4,55,25],[257,12,56,44,"useGame"],[257,24,56,51],[257,25,56,51,"useGame"],[257,32,56,51],[258,2,56,51],[259,2,56,51,"_c"],[259,4,56,51],[259,7,55,13,"ZoneProvider"],[259,19,55,25],[260,2,55,25],[260,6,55,25,"_c"],[260,8,55,25],[261,2,55,25,"$RefreshReg$"],[261,14,55,25],[261,15,55,25,"_c"],[261,17,55,25],[262,0,55,25],[262,3]],"functionMap":{"names":["<global>","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;uBC8C;CDM;4BEE;iFCM;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCC,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC2C;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbW;CFiB"},"hasCjsExports":false},"type":"js/module"}]}