{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":89,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../data/ZoneData","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":90},"end":{"line":2,"column":124,"index":214}}],"key":"Tk16kQO+gPE+nhARrQWMquQhcUw=","exportNames":["*"],"imports":1}},{"name":"./GameContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":215},"end":{"line":3,"column":40,"index":255}}],"key":"iaNC+eD9SsoXq4AVpuqJBZlLVM4=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"/app/frontend/src/contexts/ZoneContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(); // Helper function for fallback kill requirements (matches ZoneData.ts)\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useZone\", {\n    enumerable: true,\n    get: function () {\n      return useZone;\n    }\n  });\n  Object.defineProperty(exports, \"ZoneProvider\", {\n    enumerable: true,\n    get: function () {\n      return ZoneProvider;\n    }\n  });\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopDefault(_react);\n  var _dataZoneData = require(_dependencyMap[2], \"../data/ZoneData\");\n  var _GameContext = require(_dependencyMap[3], \"./GameContext\");\n  var _reactJsxDevRuntime = require(_dependencyMap[4], \"react/jsx-dev-runtime\");\n  var calculateKillRequirement = (zoneId, level) => {\n    if (zoneId <= 5) return 25 + level * 5; // Zones 1-5: 30-50 kills per level\n    if (zoneId <= 15) return 40 + level * 10; // Zones 6-15: 50-90 kills per level  \n    if (zoneId <= 30) return 60 + level * 15; // Zones 16-30: 75-135 kills per level\n    if (zoneId <= 45) return 100 + level * 20; // Zones 31-45: 120-200 kills per level\n    return 150 + level * 25; // Zones 46-50: 175-275 kills per level (endgame)\n  };\n  var ZoneContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useZone = () => {\n    _s();\n    var context = (0, _react.useContext)(ZoneContext);\n    if (!context) {\n      throw new Error('useZone must be used within a ZoneProvider');\n    }\n    return context;\n  };\n  _s(useZone, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  var ZoneProvider = _ref => {\n    _s2();\n    var children = _ref.children;\n    var _useGame = (0, _GameContext.useGame)(),\n      gameState = _useGame.gameState,\n      updateZoneProgress = _useGame.updateZoneProgress;\n\n    // Zone State - Separate \"progression\" from \"currently selected\" zones\n    var _useState = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState2 = (0, _slicedToArray.default)(_useState, 2),\n      currentZone = _useState2[0],\n      setCurrentZone = _useState2[1]; // Currently selected zone for gameplay\n    var _useState3 = (0, _react.useState)(_dataZoneData.ZONES[0]?.levels[0] || null),\n      _useState4 = (0, _slicedToArray.default)(_useState3, 2),\n      currentZoneLevel = _useState4[0],\n      setCurrentZoneLevel = _useState4[1];\n    var _useState5 = (0, _react.useState)(_dataZoneData.ZONES[0]),\n      _useState6 = (0, _slicedToArray.default)(_useState5, 2),\n      progressionZone = _useState6[0],\n      setProgressionZone = _useState6[1]; // Highest unlocked zone for progression\n    var _useState7 = (0, _react.useState)(() => {\n        // MOBILE FIX: Initialize with saved zone progress from GameContext instead of defaults\n        var savedProgress = gameState?.zoneProgress;\n        if (savedProgress && Object.keys(savedProgress).length > 0) {\n          console.log('🗺️ Loading saved zone progress:', savedProgress);\n          return savedProgress;\n        } else {\n          console.log('🗺️ No saved zone progress, using defaults');\n          return {\n            1: {\n              zoneId: 1,\n              currentLevel: 1,\n              killsInLevel: 0,\n              completed: false\n            }\n          };\n        }\n      }),\n      _useState8 = (0, _slicedToArray.default)(_useState7, 2),\n      zoneProgress = _useState8[0],\n      setZoneProgress = _useState8[1];\n\n    // MOBILE FIX: Update local zone progress when GameContext zone progress changes (on load)\n    (0, _react.useEffect)(() => {\n      if (gameState?.zoneProgress && Object.keys(gameState.zoneProgress).length > 0) {\n        console.log('🔄 Syncing zone progress from GameContext:', gameState.zoneProgress);\n        setZoneProgress(gameState.zoneProgress);\n      }\n    }, [gameState?.zoneProgress]);\n\n    // Initialize default zone based on player level\n    (0, _react.useEffect)(() => {\n      if (gameState?.ninja) {\n        var recommendedZone = (0, _dataZoneData.getZoneByLevel)(gameState.ninja.level);\n        if (recommendedZone && !currentZone) {\n          setCurrentZone(recommendedZone);\n          setCurrentZoneLevel(recommendedZone.levels[0]);\n        }\n      }\n    }, [gameState?.ninja?.level]);\n\n    // Zone selection and management - separate from progression\n    var selectZone = (zoneId, levelNumber) => {\n      if (!isZoneUnlockedLocal(zoneId)) {\n        console.log(`❌ Zone ${zoneId} is not unlocked`);\n        return false;\n      }\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone) {\n        console.log(`❌ Zone ${zoneId} not found`);\n        return false;\n      }\n      var level = zone.levels[levelNumber - 1];\n      if (!level) {\n        console.log(`❌ Zone ${zoneId} Level ${levelNumber} not found`);\n        return false;\n      }\n      console.log(`🎯 SELECTED Zone ${zoneId} - Level ${levelNumber}: ${zone.name} (separate from progression)`);\n      setCurrentZone(zone);\n      setCurrentZoneLevel(level);\n      return true;\n    };\n\n    // Get progress for specific zone\n    var getZoneProgress = zoneId => {\n      return zoneProgress[zoneId] || null;\n    };\n\n    // Spawn enemy based on current zone/level\n    var spawnZoneEnemy = () => {\n      if (!currentZone || !currentZoneLevel) {\n        console.log('❌ No zone/level selected for enemy spawning');\n        return null;\n      }\n\n      // Randomly select enemy type from current level\n      var enemyTypeIds = currentZoneLevel.enemyTypes;\n      var randomEnemyTypeId = enemyTypeIds[Math.floor(Math.random() * enemyTypeIds.length)];\n      var enemyType = _dataZoneData.ENEMY_TYPES[randomEnemyTypeId];\n      if (!enemyType) {\n        console.log(`❌ Enemy type ${randomEnemyTypeId} not found`);\n        return null;\n      }\n\n      // Calculate scaled stats\n      var scaledStats = (0, _dataZoneData.calculateEnemyStats)(enemyType, currentZoneLevel, currentZone.id);\n\n      // Create enemy instance\n      var enemy = {\n        id: `${randomEnemyTypeId}_${Date.now()}_${Math.random()}`,\n        typeId: randomEnemyTypeId,\n        name: enemyType.name,\n        icon: enemyType.icon,\n        hp: scaledStats.hp,\n        maxHP: scaledStats.hp,\n        attack: scaledStats.attack,\n        xp: scaledStats.xp,\n        resistances: scaledStats.resistances,\n        position: {\n          x: Math.random() * 300 + 50,\n          // Random position in game area\n          y: Math.random() * 400 + 100\n        },\n        lastDamaged: 0\n      };\n      console.log(`🐺 Spawned ${enemy.name} (${enemy.hp} HP, ${enemy.xp} XP) in ${currentZone.name}`);\n      return enemy;\n    };\n\n    // Record enemy kill and update progress\n    var recordEnemyKill = enemy => {\n      if (!currentZone || !currentZoneLevel) return;\n      console.log(`💀 ${enemy.name} killed! +${enemy.xp} XP`);\n      setZoneProgress(prev => {\n        var newProgress = {\n          ...prev\n        };\n        var zoneId = currentZone.id;\n        if (!newProgress[zoneId]) {\n          newProgress[zoneId] = {\n            zoneId,\n            currentLevel: 1,\n            killsInLevel: 0,\n            completed: false\n          };\n        }\n        var progress = {\n          ...newProgress[zoneId]\n        };\n\n        // Get the required kills for current level from zone data\n        var currentZoneLevel = currentZone.levels[progress.currentLevel - 1];\n        var requiredKills = currentZoneLevel ? currentZoneLevel.requiredKills : calculateKillRequirement(zoneId, progress.currentLevel);\n\n        // Check if this kill will complete the level\n        var willCompleteLevel = progress.killsInLevel + 1 >= requiredKills;\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Complete the level: set kills to requirement and advance\n          progress.killsInLevel = requiredKills;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills (COMPLETED)`);\n        } else {\n          // Normal kill increment\n          progress.killsInLevel += 1;\n          console.log(`📊 Zone ${zoneId} Level ${progress.currentLevel}: ${progress.killsInLevel}/${requiredKills} kills`);\n        }\n\n        // Handle level advancement if completed\n        if (willCompleteLevel) {\n          console.log(`🎉 Level ${progress.currentLevel} completed in ${currentZone.name}!`);\n\n          // Advance to next level if available\n          if (progress.currentLevel < 5) {\n            progress.currentLevel += 1;\n            progress.killsInLevel = 0;\n            console.log(`⬆️ Advanced to Level ${progress.currentLevel}`);\n\n            // Auto-select next level\n            var nextLevel = currentZone.levels[progress.currentLevel - 1];\n            if (nextLevel) {\n              setCurrentZoneLevel(nextLevel);\n            }\n          } else {\n            // Zone completed\n            progress.completed = true;\n            console.log(`🏆 Zone ${currentZone.name} completed! Next zone unlocked.`);\n          }\n        }\n        newProgress[zoneId] = progress;\n\n        // MOBILE FIX: Defer GameContext update to prevent cross-component render-phase violations\n        setTimeout(() => {\n          console.log(`💾 Updating GameContext with zone progress:`, newProgress);\n          updateZoneProgress(newProgress);\n        }, 0); // Defer to next event loop to prevent setState-in-render error\n\n        return newProgress;\n      });\n    };\n\n    // Check if zone is unlocked\n    var isZoneUnlockedLocal = zoneId => {\n      if (zoneId === 1) return true; // First zone always unlocked\n\n      var zone = _dataZoneData.ZONES.find(z => z.id === zoneId);\n      if (!zone?.unlockRequirement.previousZone) return true;\n      var prevZoneProgress = zoneProgress[zone.unlockRequirement.previousZone];\n      return prevZoneProgress?.completed || false;\n    };\n\n    // Get all unlocked zones\n    var getUnlockedZones = () => {\n      return _dataZoneData.ZONES.filter(zone => isZoneUnlockedLocal(zone.id));\n    };\n    var contextValue = React.default.useMemo(() => ({\n      currentZone,\n      // Currently selected zone for gameplay\n      currentZoneLevel,\n      progressionZone,\n      // Highest unlocked zone for progression\n      zoneProgress,\n      availableZones: _dataZoneData.ZONES,\n      selectZone,\n      getZoneProgress,\n      spawnZoneEnemy,\n      recordEnemyKill,\n      isZoneUnlocked: isZoneUnlockedLocal,\n      getUnlockedZones\n    }), [currentZone, currentZoneLevel, progressionZone, zoneProgress, selectZone, getZoneProgress, spawnZoneEnemy, recordEnemyKill, isZoneUnlockedLocal, getUnlockedZones]);\n    return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(ZoneContext.Provider, {\n      value: contextValue,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }, this);\n  };\n  _s2(ZoneProvider, \"2ALjxMmXNpFF7Rrt45JqtmcblJU=\", false, function () {\n    return [_GameContext.useGame];\n  });\n  _c = ZoneProvider;\n  var _c;\n  $RefreshReg$(_c, \"ZoneProvider\");\n});","lineCount":296,"map":[[6,26,5,0],[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"value"],[8,9,5,0],[9,2,5,0],[10,2,5,0],[10,11,5,0,"_interopDefault"],[10,27,5,0,"e"],[10,28,5,0],[11,4,5,0],[11,11,5,0,"e"],[11,12,5,0],[11,16,5,0,"e"],[11,17,5,0],[11,18,5,0,"__esModule"],[11,28,5,0],[11,31,5,0,"e"],[11,32,5,0],[12,6,5,0,"default"],[12,13,5,0],[12,15,5,0,"e"],[13,4,5,0],[14,2,5,0],[15,2,57,0,"Object"],[15,8,57,0],[15,9,57,0,"defineProperty"],[15,23,57,0],[15,24,57,0,"exports"],[15,31,57,0],[16,4,57,0,"enumerable"],[16,14,57,0],[17,4,57,0,"get"],[17,7,57,0],[17,18,57,0,"get"],[17,19,57,0],[18,6,57,0],[18,13,57,0,"useZone"],[18,20,57,0],[19,4,57,0],[20,2,57,0],[21,2,65,0,"Object"],[21,8,65,0],[21,9,65,0,"defineProperty"],[21,23,65,0],[21,24,65,0,"exports"],[21,31,65,0],[22,4,65,0,"enumerable"],[22,14,65,0],[23,4,65,0,"get"],[23,7,65,0],[23,18,65,0,"get"],[23,19,65,0],[24,6,65,0],[24,13,65,0,"ZoneProvider"],[24,25,65,0],[25,4,65,0],[26,2,65,0],[27,2,296,2],[27,6,296,2,"_babelRuntimeHelpersSlicedToArray"],[27,39,296,2],[27,42,296,2,"require"],[27,49,296,2],[27,50,296,2,"_dependencyMap"],[27,64,296,2],[28,2,296,2],[28,6,296,2,"_slicedToArray"],[28,20,296,2],[28,23,296,2,"_interopDefault"],[28,38,296,2],[28,39,296,2,"_babelRuntimeHelpersSlicedToArray"],[28,72,296,2],[29,2,1,0],[29,6,1,0,"_react"],[29,12,1,0],[29,15,1,0,"require"],[29,22,1,0],[29,23,1,0,"_dependencyMap"],[29,37,1,0],[30,2,1,0],[30,6,1,0,"React"],[30,11,1,0],[30,14,1,0,"_interopDefault"],[30,29,1,0],[30,30,1,0,"_react"],[30,36,1,0],[31,2,2,0],[31,6,2,0,"_dataZoneData"],[31,19,2,0],[31,22,2,0,"require"],[31,29,2,0],[31,30,2,0,"_dependencyMap"],[31,44,2,0],[32,2,3,0],[32,6,3,0,"_GameContext"],[32,18,3,0],[32,21,3,0,"require"],[32,28,3,0],[32,29,3,0,"_dependencyMap"],[32,43,3,0],[33,2,3,40],[33,6,3,40,"_reactJsxDevRuntime"],[33,25,3,40],[33,28,3,40,"require"],[33,35,3,40],[33,36,3,40,"_dependencyMap"],[33,50,3,40],[34,2,6,0],[34,6,6,6,"calculateKillRequirement"],[34,30,6,30],[34,33,6,33,"calculateKillRequirement"],[34,34,6,34,"zoneId"],[34,40,6,48],[34,42,6,50,"level"],[34,47,6,63],[34,52,6,76],[35,4,7,2],[35,8,7,6,"zoneId"],[35,14,7,12],[35,18,7,16],[35,19,7,17],[35,21,7,19],[35,28,7,26],[35,30,7,28],[35,33,7,32,"level"],[35,38,7,37],[35,41,7,40],[35,42,7,42],[35,43,7,43],[35,44,7,49],[36,4,8,2],[36,8,8,6,"zoneId"],[36,14,8,12],[36,18,8,16],[36,20,8,18],[36,22,8,20],[36,29,8,27],[36,31,8,29],[36,34,8,33,"level"],[36,39,8,38],[36,42,8,41],[36,44,8,44],[36,45,8,45],[36,46,8,50],[37,4,9,2],[37,8,9,6,"zoneId"],[37,14,9,12],[37,18,9,16],[37,20,9,18],[37,22,9,20],[37,29,9,27],[37,31,9,29],[37,34,9,33,"level"],[37,39,9,38],[37,42,9,41],[37,44,9,44],[37,45,9,45],[37,46,9,50],[38,4,10,2],[38,8,10,6,"zoneId"],[38,14,10,12],[38,18,10,16],[38,20,10,18],[38,22,10,20],[38,29,10,27],[38,32,10,30],[38,35,10,34,"level"],[38,40,10,39],[38,43,10,42],[38,45,10,45],[38,46,10,46],[38,47,10,50],[39,4,11,2],[39,11,11,9],[39,14,11,12],[39,17,11,16,"level"],[39,22,11,21],[39,25,11,24],[39,27,11,27],[39,28,11,28],[39,29,11,50],[40,2,12,0],[40,3,12,1],[41,2,55,0],[41,6,55,6,"ZoneContext"],[41,17,55,17],[41,33,55,20],[41,37,55,20,"createContext"],[41,43,55,33],[41,44,55,33,"createContext"],[41,57,55,33],[41,59,55,63,"undefined"],[41,68,55,72],[41,69,55,73],[42,2,57,7],[42,6,57,13,"useZone"],[42,13,57,20],[42,16,57,23,"useZone"],[42,17,57,23],[42,22,57,29],[43,4,57,29,"_s"],[43,6,57,29],[44,4,58,2],[44,8,58,8,"context"],[44,15,58,15],[44,18,58,18],[44,22,58,18,"useContext"],[44,28,58,28],[44,29,58,28,"useContext"],[44,39,58,28],[44,41,58,29,"ZoneContext"],[44,52,58,40],[44,53,58,41],[45,4,59,2],[45,8,59,6],[45,9,59,7,"context"],[45,16,59,14],[45,18,59,16],[46,6,60,4],[46,12,60,10],[46,16,60,14,"Error"],[46,21,60,19],[46,22,60,20],[46,66,60,64],[46,67,60,65],[47,4,61,2],[48,4,62,2],[48,11,62,9,"context"],[48,18,62,16],[49,2,63,0],[49,3,63,1],[50,2,63,2,"_s"],[50,4,63,2],[50,5,57,13,"useZone"],[50,12,57,20],[51,2,65,7],[51,6,65,13,"ZoneProvider"],[51,18,65,25],[51,21,65,28,"_ref"],[51,25,65,28],[51,29,65,71],[52,4,65,71,"_s2"],[52,7,65,71],[53,4,65,71],[53,8,65,31,"children"],[53,16,65,39],[53,19,65,39,"_ref"],[53,23,65,39],[53,24,65,31,"children"],[53,32,65,39],[54,4,66,2],[54,8,66,2,"_useGame"],[54,16,66,2],[54,19,66,44],[54,23,66,44,"useGame"],[54,35,66,51],[54,36,66,51,"useGame"],[54,43,66,51],[54,45,66,52],[54,46,66,53],[55,6,66,10,"gameState"],[55,15,66,19],[55,18,66,19,"_useGame"],[55,26,66,19],[55,27,66,10,"gameState"],[55,36,66,19],[56,6,66,21,"updateZoneProgress"],[56,24,66,39],[56,27,66,39,"_useGame"],[56,35,66,39],[56,36,66,21,"updateZoneProgress"],[56,54,66,39],[58,4,68,2],[59,4,69,2],[59,8,69,2,"_useState"],[59,17,69,2],[59,20,69,40],[59,24,69,40,"useState"],[59,30,69,48],[59,31,69,48,"useState"],[59,39,69,48],[59,41,69,62,"ZONES"],[59,54,69,67],[59,55,69,67,"ZONES"],[59,60,69,67],[59,61,69,68],[59,62,69,69],[59,63,69,70],[59,64,69,71],[60,6,69,71,"_useState2"],[60,16,69,71],[60,23,69,71,"_slicedToArray"],[60,37,69,71],[60,38,69,71,"default"],[60,45,69,71],[60,47,69,71,"_useState"],[60,56,69,71],[61,6,69,9,"currentZone"],[61,17,69,20],[61,20,69,20,"_useState2"],[61,30,69,20],[62,6,69,22,"setCurrentZone"],[62,20,69,36],[62,23,69,36,"_useState2"],[62,33,69,36],[62,37,69,72],[62,38,69,73],[63,4,70,2],[63,8,70,2,"_useState3"],[63,18,70,2],[63,21,70,50],[63,25,70,50,"useState"],[63,31,70,58],[63,32,70,58,"useState"],[63,40,70,58],[63,42,70,77,"ZONES"],[63,55,70,82],[63,56,70,82,"ZONES"],[63,61,70,82],[63,62,70,83],[63,63,70,84],[63,64,70,85],[63,66,70,87,"levels"],[63,72,70,93],[63,73,70,94],[63,74,70,95],[63,75,70,96],[63,79,70,100],[63,83,70,104],[63,84,70,105],[64,6,70,105,"_useState4"],[64,16,70,105],[64,23,70,105,"_slicedToArray"],[64,37,70,105],[64,38,70,105,"default"],[64,45,70,105],[64,47,70,105,"_useState3"],[64,57,70,105],[65,6,70,9,"currentZoneLevel"],[65,22,70,25],[65,25,70,25,"_useState4"],[65,35,70,25],[66,6,70,27,"setCurrentZoneLevel"],[66,25,70,46],[66,28,70,46,"_useState4"],[66,38,70,46],[67,4,71,2],[67,8,71,2,"_useState5"],[67,18,71,2],[67,21,71,48],[67,25,71,48,"useState"],[67,31,71,56],[67,32,71,56,"useState"],[67,40,71,56],[67,42,71,70,"ZONES"],[67,55,71,75],[67,56,71,75,"ZONES"],[67,61,71,75],[67,62,71,76],[67,63,71,77],[67,64,71,78],[67,65,71,79],[68,6,71,79,"_useState6"],[68,16,71,79],[68,23,71,79,"_slicedToArray"],[68,37,71,79],[68,38,71,79,"default"],[68,45,71,79],[68,47,71,79,"_useState5"],[68,57,71,79],[69,6,71,9,"progressionZone"],[69,21,71,24],[69,24,71,24,"_useState6"],[69,34,71,24],[70,6,71,26,"setProgressionZone"],[70,24,71,44],[70,27,71,44,"_useState6"],[70,37,71,44],[70,41,71,80],[70,42,71,81],[71,4,72,2],[71,8,72,2,"_useState7"],[71,18,72,2],[71,21,72,42],[71,25,72,42,"useState"],[71,31,72,50],[71,32,72,50,"useState"],[71,40,72,50],[71,42,72,81],[71,48,72,87],[72,8,73,4],[73,8,74,4],[73,12,74,10,"savedProgress"],[73,25,74,23],[73,28,74,26,"gameState"],[73,37,74,35],[73,39,74,37,"zoneProgress"],[73,51,74,49],[74,8,75,4],[74,12,75,8,"savedProgress"],[74,25,75,21],[74,29,75,25,"Object"],[74,35,75,31],[74,36,75,32,"keys"],[74,40,75,36],[74,41,75,37,"savedProgress"],[74,54,75,50],[74,55,75,51],[74,56,75,52,"length"],[74,62,75,58],[74,65,75,61],[74,66,75,62],[74,68,75,64],[75,10,76,6,"console"],[75,17,76,13],[75,18,76,14,"log"],[75,21,76,17],[75,22,76,18],[75,56,76,52],[75,58,76,54,"savedProgress"],[75,71,76,67],[75,72,76,68],[76,10,77,6],[76,17,77,13,"savedProgress"],[76,30,77,26],[77,8,78,4],[77,9,78,5],[77,15,78,11],[78,10,79,6,"console"],[78,17,79,13],[78,18,79,14,"log"],[78,21,79,17],[78,22,79,18],[78,66,79,62],[78,67,79,63],[79,10,80,6],[79,17,80,13],[80,12,80,15],[80,13,80,16],[80,15,80,18],[81,14,80,20,"zoneId"],[81,20,80,26],[81,22,80,28],[81,23,80,29],[82,14,80,31,"currentLevel"],[82,26,80,43],[82,28,80,45],[82,29,80,46],[83,14,80,48,"killsInLevel"],[83,26,80,60],[83,28,80,62],[83,29,80,63],[84,14,80,65,"completed"],[84,23,80,74],[84,25,80,76],[85,12,80,82],[86,10,80,84],[86,11,80,85],[87,8,81,4],[88,6,82,2],[88,7,82,3],[88,8,82,4],[89,6,82,4,"_useState8"],[89,16,82,4],[89,23,82,4,"_slicedToArray"],[89,37,82,4],[89,38,82,4,"default"],[89,45,82,4],[89,47,82,4,"_useState7"],[89,57,82,4],[90,6,72,9,"zoneProgress"],[90,18,72,21],[90,21,72,21,"_useState8"],[90,31,72,21],[91,6,72,23,"setZoneProgress"],[91,21,72,38],[91,24,72,38,"_useState8"],[91,34,72,38],[93,4,84,2],[94,4,85,2],[94,8,85,2,"useEffect"],[94,14,85,11],[94,15,85,11,"useEffect"],[94,24,85,11],[94,26,85,12],[94,32,85,18],[95,6,86,4],[95,10,86,8,"gameState"],[95,19,86,17],[95,21,86,19,"zoneProgress"],[95,33,86,31],[95,37,86,35,"Object"],[95,43,86,41],[95,44,86,42,"keys"],[95,48,86,46],[95,49,86,47,"gameState"],[95,58,86,56],[95,59,86,57,"zoneProgress"],[95,71,86,69],[95,72,86,70],[95,73,86,71,"length"],[95,79,86,77],[95,82,86,80],[95,83,86,81],[95,85,86,83],[96,8,87,6,"console"],[96,15,87,13],[96,16,87,14,"log"],[96,19,87,17],[96,20,87,18],[96,64,87,62],[96,66,87,64,"gameState"],[96,75,87,73],[96,76,87,74,"zoneProgress"],[96,88,87,86],[96,89,87,87],[97,8,88,6,"setZoneProgress"],[97,23,88,21],[97,24,88,22,"gameState"],[97,33,88,31],[97,34,88,32,"zoneProgress"],[97,46,88,44],[97,47,88,45],[98,6,89,4],[99,4,90,2],[99,5,90,3],[99,7,90,5],[99,8,90,6,"gameState"],[99,17,90,15],[99,19,90,17,"zoneProgress"],[99,31,90,29],[99,32,90,30],[99,33,90,31],[101,4,92,2],[102,4,93,2],[102,8,93,2,"useEffect"],[102,14,93,11],[102,15,93,11,"useEffect"],[102,24,93,11],[102,26,93,12],[102,32,93,18],[103,6,94,4],[103,10,94,8,"gameState"],[103,19,94,17],[103,21,94,19,"ninja"],[103,26,94,24],[103,28,94,26],[104,8,95,6],[104,12,95,12,"recommendedZone"],[104,27,95,27],[104,30,95,30],[104,34,95,30,"getZoneByLevel"],[104,47,95,44],[104,48,95,44,"getZoneByLevel"],[104,62,95,44],[104,64,95,45,"gameState"],[104,73,95,54],[104,74,95,55,"ninja"],[104,79,95,60],[104,80,95,61,"level"],[104,85,95,66],[104,86,95,67],[105,8,96,6],[105,12,96,10,"recommendedZone"],[105,27,96,25],[105,31,96,29],[105,32,96,30,"currentZone"],[105,43,96,41],[105,45,96,43],[106,10,97,8,"setCurrentZone"],[106,24,97,22],[106,25,97,23,"recommendedZone"],[106,40,97,38],[106,41,97,39],[107,10,98,8,"setCurrentZoneLevel"],[107,29,98,27],[107,30,98,28,"recommendedZone"],[107,45,98,43],[107,46,98,44,"levels"],[107,52,98,50],[107,53,98,51],[107,54,98,52],[107,55,98,53],[107,56,98,54],[108,8,99,6],[109,6,100,4],[110,4,101,2],[110,5,101,3],[110,7,101,5],[110,8,101,6,"gameState"],[110,17,101,15],[110,19,101,17,"ninja"],[110,24,101,22],[110,26,101,24,"level"],[110,31,101,29],[110,32,101,30],[110,33,101,31],[112,4,103,2],[113,4,104,2],[113,8,104,8,"selectZone"],[113,18,104,18],[113,21,104,21,"selectZone"],[113,22,104,22,"zoneId"],[113,28,104,36],[113,30,104,38,"levelNumber"],[113,41,104,57],[113,46,104,71],[114,6,105,4],[114,10,105,8],[114,11,105,9,"isZoneUnlockedLocal"],[114,30,105,28],[114,31,105,29,"zoneId"],[114,37,105,35],[114,38,105,36],[114,40,105,38],[115,8,106,6,"console"],[115,15,106,13],[115,16,106,14,"log"],[115,19,106,17],[115,20,106,18],[115,30,106,28,"zoneId"],[115,36,106,34],[115,54,106,52],[115,55,106,53],[116,8,107,6],[116,15,107,13],[116,20,107,18],[117,6,108,4],[118,6,110,4],[118,10,110,10,"zone"],[118,14,110,14],[118,17,110,17,"ZONES"],[118,30,110,22],[118,31,110,22,"ZONES"],[118,36,110,22],[118,37,110,23,"find"],[118,41,110,27],[118,42,110,28,"z"],[118,43,110,29],[118,47,110,33,"z"],[118,48,110,34],[118,49,110,35,"id"],[118,51,110,37],[118,56,110,42,"zoneId"],[118,62,110,48],[118,63,110,49],[119,6,111,4],[119,10,111,8],[119,11,111,9,"zone"],[119,15,111,13],[119,17,111,15],[120,8,112,6,"console"],[120,15,112,13],[120,16,112,14,"log"],[120,19,112,17],[120,20,112,18],[120,30,112,28,"zoneId"],[120,36,112,34],[120,48,112,46],[120,49,112,47],[121,8,113,6],[121,15,113,13],[121,20,113,18],[122,6,114,4],[123,6,116,4],[123,10,116,10,"level"],[123,15,116,15],[123,18,116,18,"zone"],[123,22,116,22],[123,23,116,23,"levels"],[123,29,116,29],[123,30,116,30,"levelNumber"],[123,41,116,41],[123,44,116,44],[123,45,116,45],[123,46,116,46],[124,6,117,4],[124,10,117,8],[124,11,117,9,"level"],[124,16,117,14],[124,18,117,16],[125,8,118,6,"console"],[125,15,118,13],[125,16,118,14,"log"],[125,19,118,17],[125,20,118,18],[125,30,118,28,"zoneId"],[125,36,118,34],[125,46,118,44,"levelNumber"],[125,57,118,55],[125,69,118,67],[125,70,118,68],[126,8,119,6],[126,15,119,13],[126,20,119,18],[127,6,120,4],[128,6,122,4,"console"],[128,13,122,11],[128,14,122,12,"log"],[128,17,122,15],[128,18,122,16],[128,38,122,36,"zoneId"],[128,44,122,42],[128,56,122,54,"levelNumber"],[128,67,122,65],[128,72,122,70,"zone"],[128,76,122,74],[128,77,122,75,"name"],[128,81,122,79],[128,111,122,109],[128,112,122,110],[129,6,123,4,"setCurrentZone"],[129,20,123,18],[129,21,123,19,"zone"],[129,25,123,23],[129,26,123,24],[130,6,124,4,"setCurrentZoneLevel"],[130,25,124,23],[130,26,124,24,"level"],[130,31,124,29],[130,32,124,30],[131,6,125,4],[131,13,125,11],[131,17,125,15],[132,4,126,2],[132,5,126,3],[134,4,128,2],[135,4,129,2],[135,8,129,8,"getZoneProgress"],[135,23,129,23],[135,26,129,27,"zoneId"],[135,32,129,41],[135,36,129,67],[136,6,130,4],[136,13,130,11,"zoneProgress"],[136,25,130,23],[136,26,130,24,"zoneId"],[136,32,130,30],[136,33,130,31],[136,37,130,35],[136,41,130,39],[137,4,131,2],[137,5,131,3],[139,4,133,2],[140,4,134,2],[140,8,134,8,"spawnZoneEnemy"],[140,22,134,22],[140,25,134,25,"spawnZoneEnemy"],[140,26,134,25],[140,31,134,52],[141,6,135,4],[141,10,135,8],[141,11,135,9,"currentZone"],[141,22,135,20],[141,26,135,24],[141,27,135,25,"currentZoneLevel"],[141,43,135,41],[141,45,135,43],[142,8,136,6,"console"],[142,15,136,13],[142,16,136,14,"log"],[142,19,136,17],[142,20,136,18],[142,65,136,63],[142,66,136,64],[143,8,137,6],[143,15,137,13],[143,19,137,17],[144,6,138,4],[146,6,140,4],[147,6,141,4],[147,10,141,10,"enemyTypeIds"],[147,22,141,22],[147,25,141,25,"currentZoneLevel"],[147,41,141,41],[147,42,141,42,"enemyTypes"],[147,52,141,52],[148,6,142,4],[148,10,142,10,"randomEnemyTypeId"],[148,27,142,27],[148,30,142,30,"enemyTypeIds"],[148,42,142,42],[148,43,142,43,"Math"],[148,47,142,47],[148,48,142,48,"floor"],[148,53,142,53],[148,54,142,54,"Math"],[148,58,142,58],[148,59,142,59,"random"],[148,65,142,65],[148,66,142,66],[148,67,142,67],[148,70,142,70,"enemyTypeIds"],[148,82,142,82],[148,83,142,83,"length"],[148,89,142,89],[148,90,142,90],[148,91,142,91],[149,6,143,4],[149,10,143,10,"enemyType"],[149,19,143,19],[149,22,143,22,"ENEMY_TYPES"],[149,35,143,33],[149,36,143,33,"ENEMY_TYPES"],[149,47,143,33],[149,48,143,34,"randomEnemyTypeId"],[149,65,143,51],[149,66,143,52],[150,6,145,4],[150,10,145,8],[150,11,145,9,"enemyType"],[150,20,145,18],[150,22,145,20],[151,8,146,6,"console"],[151,15,146,13],[151,16,146,14,"log"],[151,19,146,17],[151,20,146,18],[151,36,146,34,"randomEnemyTypeId"],[151,53,146,51],[151,65,146,63],[151,66,146,64],[152,8,147,6],[152,15,147,13],[152,19,147,17],[153,6,148,4],[155,6,150,4],[156,6,151,4],[156,10,151,10,"scaledStats"],[156,21,151,21],[156,24,151,24],[156,28,151,24,"calculateEnemyStats"],[156,41,151,43],[156,42,151,43,"calculateEnemyStats"],[156,61,151,43],[156,63,151,44,"enemyType"],[156,72,151,53],[156,74,151,55,"currentZoneLevel"],[156,90,151,71],[156,92,151,73,"currentZone"],[156,103,151,84],[156,104,151,85,"id"],[156,106,151,87],[156,107,151,88],[158,6,153,4],[159,6,154,4],[159,10,154,10,"enemy"],[159,15,154,29],[159,18,154,32],[160,8,155,6,"id"],[160,10,155,8],[160,12,155,10],[160,15,155,13,"randomEnemyTypeId"],[160,32,155,30],[160,36,155,34,"Date"],[160,40,155,38],[160,41,155,39,"now"],[160,44,155,42],[160,45,155,43],[160,46,155,44],[160,50,155,48,"Math"],[160,54,155,52],[160,55,155,53,"random"],[160,61,155,59],[160,62,155,60],[160,63,155,61],[160,65,155,63],[161,8,156,6,"typeId"],[161,14,156,12],[161,16,156,14,"randomEnemyTypeId"],[161,33,156,31],[162,8,157,6,"name"],[162,12,157,10],[162,14,157,12,"enemyType"],[162,23,157,21],[162,24,157,22,"name"],[162,28,157,26],[163,8,158,6,"icon"],[163,12,158,10],[163,14,158,12,"enemyType"],[163,23,158,21],[163,24,158,22,"icon"],[163,28,158,26],[164,8,159,6,"hp"],[164,10,159,8],[164,12,159,10,"scaledStats"],[164,23,159,21],[164,24,159,22,"hp"],[164,26,159,24],[165,8,160,6,"maxHP"],[165,13,160,11],[165,15,160,13,"scaledStats"],[165,26,160,24],[165,27,160,25,"hp"],[165,29,160,27],[166,8,161,6,"attack"],[166,14,161,12],[166,16,161,14,"scaledStats"],[166,27,161,25],[166,28,161,26,"attack"],[166,34,161,32],[167,8,162,6,"xp"],[167,10,162,8],[167,12,162,10,"scaledStats"],[167,23,162,21],[167,24,162,22,"xp"],[167,26,162,24],[168,8,163,6,"resistances"],[168,19,163,17],[168,21,163,19,"scaledStats"],[168,32,163,30],[168,33,163,31,"resistances"],[168,44,163,42],[169,8,164,6,"position"],[169,16,164,14],[169,18,164,16],[170,10,165,8,"x"],[170,11,165,9],[170,13,165,11,"Math"],[170,17,165,15],[170,18,165,16,"random"],[170,24,165,22],[170,25,165,23],[170,26,165,24],[170,29,165,27],[170,32,165,30],[170,35,165,33],[170,37,165,35],[171,10,165,37],[172,10,166,8,"y"],[172,11,166,9],[172,13,166,11,"Math"],[172,17,166,15],[172,18,166,16,"random"],[172,24,166,22],[172,25,166,23],[172,26,166,24],[172,29,166,27],[172,32,166,30],[172,35,166,33],[173,8,167,6],[173,9,167,7],[174,8,168,6,"lastDamaged"],[174,19,168,17],[174,21,168,19],[175,6,169,4],[175,7,169,5],[176,6,171,4,"console"],[176,13,171,11],[176,14,171,12,"log"],[176,17,171,15],[176,18,171,16],[176,32,171,30,"enemy"],[176,37,171,35],[176,38,171,36,"name"],[176,42,171,40],[176,47,171,45,"enemy"],[176,52,171,50],[176,53,171,51,"hp"],[176,55,171,53],[176,63,171,61,"enemy"],[176,68,171,66],[176,69,171,67,"xp"],[176,71,171,69],[176,82,171,80,"currentZone"],[176,93,171,91],[176,94,171,92,"name"],[176,98,171,96],[176,100,171,98],[176,101,171,99],[177,6,172,4],[177,13,172,11,"enemy"],[177,18,172,16],[178,4,173,2],[178,5,173,3],[180,4,175,2],[181,4,176,2],[181,8,176,8,"recordEnemyKill"],[181,23,176,23],[181,26,176,27,"enemy"],[181,31,176,46],[181,35,176,51],[182,6,177,4],[182,10,177,8],[182,11,177,9,"currentZone"],[182,22,177,20],[182,26,177,24],[182,27,177,25,"currentZoneLevel"],[182,43,177,41],[182,45,177,43],[183,6,179,4,"console"],[183,13,179,11],[183,14,179,12,"log"],[183,17,179,15],[183,18,179,16],[183,24,179,22,"enemy"],[183,29,179,27],[183,30,179,28,"name"],[183,34,179,32],[183,47,179,45,"enemy"],[183,52,179,50],[183,53,179,51,"xp"],[183,55,179,53],[183,60,179,58],[183,61,179,59],[184,6,181,4,"setZoneProgress"],[184,21,181,19],[184,22,181,20,"prev"],[184,26,181,24],[184,30,181,28],[185,8,182,6],[185,12,182,12,"newProgress"],[185,23,182,23],[185,26,182,26],[186,10,182,28],[186,13,182,31,"prev"],[187,8,182,36],[187,9,182,37],[188,8,183,6],[188,12,183,12,"zoneId"],[188,18,183,18],[188,21,183,21,"currentZone"],[188,32,183,32],[188,33,183,33,"id"],[188,35,183,35],[189,8,185,6],[189,12,185,10],[189,13,185,11,"newProgress"],[189,24,185,22],[189,25,185,23,"zoneId"],[189,31,185,29],[189,32,185,30],[189,34,185,32],[190,10,186,8,"newProgress"],[190,21,186,19],[190,22,186,20,"zoneId"],[190,28,186,26],[190,29,186,27],[190,32,186,30],[191,12,187,10,"zoneId"],[191,18,187,16],[192,12,188,10,"currentLevel"],[192,24,188,22],[192,26,188,24],[192,27,188,25],[193,12,189,10,"killsInLevel"],[193,24,189,22],[193,26,189,24],[193,27,189,25],[194,12,190,10,"completed"],[194,21,190,19],[194,23,190,21],[195,10,191,8],[195,11,191,9],[196,8,192,6],[197,8,194,6],[197,12,194,12,"progress"],[197,20,194,20],[197,23,194,23],[198,10,194,25],[198,13,194,28,"newProgress"],[198,24,194,39],[198,25,194,40,"zoneId"],[198,31,194,46],[199,8,194,48],[199,9,194,49],[201,8,196,6],[202,8,197,6],[202,12,197,12,"currentZoneLevel"],[202,28,197,28],[202,31,197,31,"currentZone"],[202,42,197,42],[202,43,197,43,"levels"],[202,49,197,49],[202,50,197,50,"progress"],[202,58,197,58],[202,59,197,59,"currentLevel"],[202,71,197,71],[202,74,197,74],[202,75,197,75],[202,76,197,76],[203,8,198,6],[203,12,198,12,"requiredKills"],[203,25,198,25],[203,28,198,28,"currentZoneLevel"],[203,44,198,44],[203,47,198,47,"currentZoneLevel"],[203,63,198,63],[203,64,198,64,"requiredKills"],[203,77,198,77],[203,80,198,80,"calculateKillRequirement"],[203,104,198,104],[203,105,198,105,"zoneId"],[203,111,198,111],[203,113,198,113,"progress"],[203,121,198,121],[203,122,198,122,"currentLevel"],[203,134,198,134],[203,135,198,135],[205,8,200,6],[206,8,201,6],[206,12,201,12,"willCompleteLevel"],[206,29,201,29],[206,32,201,33,"progress"],[206,40,201,41],[206,41,201,42,"killsInLevel"],[206,53,201,54],[206,56,201,57],[206,57,201,58],[206,61,201,63,"requiredKills"],[206,74,201,76],[207,8,203,6],[207,12,203,10,"willCompleteLevel"],[207,29,203,27],[207,31,203,29],[208,10,204,8,"console"],[208,17,204,15],[208,18,204,16,"log"],[208,21,204,19],[208,22,204,20],[208,34,204,32,"progress"],[208,42,204,40],[208,43,204,41,"currentLevel"],[208,55,204,53],[208,72,204,70,"currentZone"],[208,83,204,81],[208,84,204,82,"name"],[208,88,204,86],[208,91,204,89],[208,92,204,90],[210,10,206,8],[211,10,207,8,"progress"],[211,18,207,16],[211,19,207,17,"killsInLevel"],[211,31,207,29],[211,34,207,32,"requiredKills"],[211,47,207,45],[212,10,209,8,"console"],[212,17,209,15],[212,18,209,16,"log"],[212,21,209,19],[212,22,209,20],[212,33,209,31,"zoneId"],[212,39,209,37],[212,49,209,47,"progress"],[212,57,209,55],[212,58,209,56,"currentLevel"],[212,70,209,68],[212,75,209,73,"progress"],[212,83,209,81],[212,84,209,82,"killsInLevel"],[212,96,209,94],[212,100,209,98,"requiredKills"],[212,113,209,111],[212,133,209,131],[212,134,209,132],[213,8,210,6],[213,9,210,7],[213,15,210,13],[214,10,211,8],[215,10,212,8,"progress"],[215,18,212,16],[215,19,212,17,"killsInLevel"],[215,31,212,29],[215,35,212,33],[215,36,212,34],[216,10,213,8,"console"],[216,17,213,15],[216,18,213,16,"log"],[216,21,213,19],[216,22,213,20],[216,33,213,31,"zoneId"],[216,39,213,37],[216,49,213,47,"progress"],[216,57,213,55],[216,58,213,56,"currentLevel"],[216,70,213,68],[216,75,213,73,"progress"],[216,83,213,81],[216,84,213,82,"killsInLevel"],[216,96,213,94],[216,100,213,98,"requiredKills"],[216,113,213,111],[216,121,213,119],[216,122,213,120],[217,8,214,6],[219,8,216,6],[220,8,217,6],[220,12,217,10,"willCompleteLevel"],[220,29,217,27],[220,31,217,29],[221,10,218,8,"console"],[221,17,218,15],[221,18,218,16,"log"],[221,21,218,19],[221,22,218,20],[221,34,218,32,"progress"],[221,42,218,40],[221,43,218,41,"currentLevel"],[221,55,218,53],[221,72,218,70,"currentZone"],[221,83,218,81],[221,84,218,82,"name"],[221,88,218,86],[221,91,218,89],[221,92,218,90],[223,10,220,8],[224,10,221,8],[224,14,221,12,"progress"],[224,22,221,20],[224,23,221,21,"currentLevel"],[224,35,221,33],[224,38,221,36],[224,39,221,37],[224,41,221,39],[225,12,222,10,"progress"],[225,20,222,18],[225,21,222,19,"currentLevel"],[225,33,222,31],[225,37,222,35],[225,38,222,36],[226,12,223,10,"progress"],[226,20,223,18],[226,21,223,19,"killsInLevel"],[226,33,223,31],[226,36,223,34],[226,37,223,35],[227,12,224,10,"console"],[227,19,224,17],[227,20,224,18,"log"],[227,23,224,21],[227,24,224,22],[227,48,224,46,"progress"],[227,56,224,54],[227,57,224,55,"currentLevel"],[227,69,224,67],[227,71,224,69],[227,72,224,70],[229,12,226,10],[230,12,227,10],[230,16,227,16,"nextLevel"],[230,25,227,25],[230,28,227,28,"currentZone"],[230,39,227,39],[230,40,227,40,"levels"],[230,46,227,46],[230,47,227,47,"progress"],[230,55,227,55],[230,56,227,56,"currentLevel"],[230,68,227,68],[230,71,227,71],[230,72,227,72],[230,73,227,73],[231,12,228,10],[231,16,228,14,"nextLevel"],[231,25,228,23],[231,27,228,25],[232,14,229,12,"setCurrentZoneLevel"],[232,33,229,31],[232,34,229,32,"nextLevel"],[232,43,229,41],[232,44,229,42],[233,12,230,10],[234,10,231,8],[234,11,231,9],[234,17,231,15],[235,12,232,10],[236,12,233,10,"progress"],[236,20,233,18],[236,21,233,19,"completed"],[236,30,233,28],[236,33,233,31],[236,37,233,35],[237,12,234,10,"console"],[237,19,234,17],[237,20,234,18,"log"],[237,23,234,21],[237,24,234,22],[237,35,234,33,"currentZone"],[237,46,234,44],[237,47,234,45,"name"],[237,51,234,49],[237,84,234,82],[237,85,234,83],[238,10,235,8],[239,8,236,6],[240,8,238,6,"newProgress"],[240,19,238,17],[240,20,238,18,"zoneId"],[240,26,238,24],[240,27,238,25],[240,30,238,28,"progress"],[240,38,238,36],[242,8,240,6],[243,8,241,6,"setTimeout"],[243,18,241,16],[243,19,241,17],[243,25,241,23],[244,10,242,8,"console"],[244,17,242,15],[244,18,242,16,"log"],[244,21,242,19],[244,22,242,20],[244,67,242,65],[244,69,242,67,"newProgress"],[244,80,242,78],[244,81,242,79],[245,10,243,8,"updateZoneProgress"],[245,28,243,26],[245,29,243,27,"newProgress"],[245,40,243,38],[245,41,243,39],[246,8,244,6],[246,9,244,7],[246,11,244,9],[246,12,244,10],[246,13,244,11],[246,14,244,12],[246,15,244,13],[248,8,246,6],[248,15,246,13,"newProgress"],[248,26,246,24],[249,6,247,4],[249,7,247,5],[249,8,247,6],[250,4,248,2],[250,5,248,3],[252,4,250,2],[253,4,251,2],[253,8,251,8,"isZoneUnlockedLocal"],[253,27,251,27],[253,30,251,31,"zoneId"],[253,36,251,45],[253,40,251,59],[254,6,252,4],[254,10,252,8,"zoneId"],[254,16,252,14],[254,21,252,19],[254,22,252,20],[254,24,252,22],[254,31,252,29],[254,35,252,33],[254,36,252,34],[254,37,252,35],[256,6,254,4],[256,10,254,10,"zone"],[256,14,254,14],[256,17,254,17,"ZONES"],[256,30,254,22],[256,31,254,22,"ZONES"],[256,36,254,22],[256,37,254,23,"find"],[256,41,254,27],[256,42,254,28,"z"],[256,43,254,29],[256,47,254,33,"z"],[256,48,254,34],[256,49,254,35,"id"],[256,51,254,37],[256,56,254,42,"zoneId"],[256,62,254,48],[256,63,254,49],[257,6,255,4],[257,10,255,8],[257,11,255,9,"zone"],[257,15,255,13],[257,17,255,15,"unlockRequirement"],[257,34,255,32],[257,35,255,33,"previousZone"],[257,47,255,45],[257,49,255,47],[257,56,255,54],[257,60,255,58],[258,6,257,4],[258,10,257,10,"prevZoneProgress"],[258,26,257,26],[258,29,257,29,"zoneProgress"],[258,41,257,41],[258,42,257,42,"zone"],[258,46,257,46],[258,47,257,47,"unlockRequirement"],[258,64,257,64],[258,65,257,65,"previousZone"],[258,77,257,77],[258,78,257,78],[259,6,258,4],[259,13,258,11,"prevZoneProgress"],[259,29,258,27],[259,31,258,29,"completed"],[259,40,258,38],[259,44,258,42],[259,49,258,47],[260,4,259,2],[260,5,259,3],[262,4,261,2],[263,4,262,2],[263,8,262,8,"getUnlockedZones"],[263,24,262,24],[263,27,262,27,"getUnlockedZones"],[263,28,262,27],[263,33,262,41],[264,6,263,4],[264,13,263,11,"ZONES"],[264,26,263,16],[264,27,263,16,"ZONES"],[264,32,263,16],[264,33,263,17,"filter"],[264,39,263,23],[264,40,263,24,"zone"],[264,44,263,28],[264,48,263,32,"isZoneUnlockedLocal"],[264,67,263,51],[264,68,263,52,"zone"],[264,72,263,56],[264,73,263,57,"id"],[264,75,263,59],[264,76,263,60],[264,77,263,61],[265,4,264,2],[265,5,264,3],[266,4,266,2],[266,8,266,8,"contextValue"],[266,20,266,37],[266,23,266,40,"React"],[266,28,266,45],[266,29,266,45,"default"],[266,36,266,45],[266,37,266,46,"useMemo"],[266,44,266,53],[266,45,266,54],[266,52,266,61],[267,6,267,4,"currentZone"],[267,17,267,15],[268,6,267,17],[269,6,268,4,"currentZoneLevel"],[269,22,268,20],[270,6,269,4,"progressionZone"],[270,21,269,19],[271,6,269,21],[272,6,270,4,"zoneProgress"],[272,18,270,16],[273,6,271,4,"availableZones"],[273,20,271,18],[273,22,271,20,"ZONES"],[273,35,271,25],[273,36,271,25,"ZONES"],[273,41,271,25],[274,6,272,4,"selectZone"],[274,16,272,14],[275,6,273,4,"getZoneProgress"],[275,21,273,19],[276,6,274,4,"spawnZoneEnemy"],[276,20,274,18],[277,6,275,4,"recordEnemyKill"],[277,21,275,19],[278,6,276,4,"isZoneUnlocked"],[278,20,276,18],[278,22,276,20,"isZoneUnlockedLocal"],[278,41,276,39],[279,6,277,4,"getUnlockedZones"],[280,4,278,2],[280,5,278,3],[280,6,278,4],[280,8,278,6],[280,9,279,4,"currentZone"],[280,20,279,15],[280,22,280,4,"currentZoneLevel"],[280,38,280,20],[280,40,281,4,"progressionZone"],[280,55,281,19],[280,57,282,4,"zoneProgress"],[280,69,282,16],[280,71,283,4,"selectZone"],[280,81,283,14],[280,83,284,4,"getZoneProgress"],[280,98,284,19],[280,100,285,4,"spawnZoneEnemy"],[280,114,285,18],[280,116,286,4,"recordEnemyKill"],[280,131,286,19],[280,133,287,4,"isZoneUnlockedLocal"],[280,152,287,23],[280,154,288,4,"getUnlockedZones"],[280,170,288,20],[280,171,289,3],[280,172,289,4],[281,4,291,2],[281,24,292,4],[281,28,292,4,"_reactJsxDevRuntime"],[281,47,292,4],[281,48,292,4,"jsxDEV"],[281,54,292,4],[281,56,292,5,"ZoneContext"],[281,67,292,16],[281,68,292,17,"Provider"],[281,76,292,25],[282,6,292,26,"value"],[282,11,292,31],[282,13,292,33,"contextValue"],[282,25,292,46],[283,6,292,46,"children"],[283,14,292,46],[283,16,293,7,"children"],[284,4,293,15],[285,6,293,15,"fileName"],[285,14,293,15],[285,16,293,15,"_jsxFileName"],[285,28,293,15],[286,6,293,15,"lineNumber"],[286,16,293,15],[287,6,293,15,"columnNumber"],[287,18,293,15],[288,4,293,15],[288,11,294,26],[288,12,294,27],[289,2,296,0],[289,3,296,1],[290,2,296,2,"_s2"],[290,5,296,2],[290,6,65,13,"ZoneProvider"],[290,18,65,25],[291,4,65,25],[291,12,66,44,"useGame"],[291,24,66,51],[291,25,66,51,"useGame"],[291,32,66,51],[292,2,66,51],[293,2,66,51,"_c"],[293,4,66,51],[293,7,65,13,"ZoneProvider"],[293,19,65,25],[294,2,65,25],[294,6,65,25,"_c"],[294,8,65,25],[295,2,65,25,"$RefreshReg$"],[295,14,65,25],[295,15,65,25,"_c"],[295,17,65,25],[296,0,65,25],[296,3]],"functionMap":{"names":["<global>","calculateKillRequirement","useZone","ZoneProvider","useState$argument_0","useEffect$argument_0","selectZone","ZONES.find$argument_0","getZoneProgress","spawnZoneEnemy","recordEnemyKill","setZoneProgress$argument_0","setTimeout$argument_0","isZoneUnlockedLocal","getUnlockedZones","ZONES.filter$argument_0","React.useMemo$argument_0"],"mappings":"AAA;iCCK;CDM;uBE6C;CFM;4BGE;iFCO;GDU;YEG;GFK;YEG;GFQ;qBGG;4BCM,oBD;GHgB;0BKG;GLE;yBMG;GNuC;0BOG;oBCK;iBC4D;ODG;KDG;GPC;8BUG;4BNG,oBM;GVK;2BWG;wBCC,oCD;GXC;sDaE;IbY;CHkB"},"hasCjsExports":false},"type":"js/module"}]}